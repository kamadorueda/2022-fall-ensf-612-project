{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6882",
  "author": "iSazonov",
  "body": "## PR Summary\r\n\r\n- Implement `WriteLine` method to write to a host. Win is that we exclude extra string allocations like `value + Crlf ` and extra locks and kernel calls.\r\n- Exclude extra allocation for every char in console input (`keyInfo.Character.ToString()`) in `ReadKey(ReadKeyOptions options)`.\r\n- Exclude extra allocations in the console host by implementation of `WriteLine`-like methods to replace `Write(strValue + Crlf)` with `WriteLine(strValue)`.\r\n- Remove unneeded locks because of replacing `Write(strValue); Write(Crlf)` with `WriteLine(strValue)`.\r\n- Add new lock in `WriteToConsole(ConsoleColor foregroundColor, ConsoleColor backgroundColor, string text, bool newLine = false)`.\r\n- Use CoreFX pattern for P/Invoke to support `ReadOnlySpan`.\r\n\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` to the beginning of the title and remove the prefix when the PR is ready.\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] User-facing [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed - Issue link:\r\n- **Testing - New and feature**\r\n    - [x] Not Applicable or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n        - [x] [Add `[feature]` if the change is significant or affects feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\n\n<!-- Reviewable:start -->\n---\nThis change is\u2002[<img src=\"https://reviewable.io/review_button.svg\" height=\"34\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/powershell/powershell/6882)\n<!-- Reviewable:end -->\n",
  "closed_at": "2019-04-17T17:42:15Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "CI Appveyor temporary failed on Update-Help tests.",
      "created_at": "2018-05-16T12:01:57Z",
      "updated_at": "2018-05-16T12:01:57Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Reopen the PR to restart CIs.",
      "created_at": "2018-05-22T10:10:58Z",
      "updated_at": "2018-05-22T10:10:58Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw I changed PR title - seems old one confuse you that is main win in the PR.",
      "created_at": "2018-06-06T11:26:34Z",
      "updated_at": "2018-06-06T11:26:34Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "We could use https://benchmarkdotnet.org/ for perf analyses.",
      "created_at": "2018-06-06T12:55:09Z",
      "updated_at": "2018-06-06T12:55:09Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@iSazonov I like the perf analysis idea. We definitely need it for benefits in the long run. I will look into it.",
      "created_at": "2018-06-06T16:37:11Z",
      "updated_at": "2018-06-06T16:37:11Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw Not related the PR - I passed 200 MB file through ConvertFrom-Csv and get alarming results.\r\nOn Windows PowerShell - 28 sec for every run.\r\nOn PowerShell Core 6.1 (crossgened) - from 33 to 55 sec! If I run and then wait some time - all results is ~33 sec. But if I run the test sequentially without pauses, the time starts with 33 and increase up to 55 sec. \r\nI have two fears. (1) .Net Core 2.1 has a problem with a caching. (2) why we are slower on PowerShell Core.",
      "created_at": "2018-06-08T11:51:02Z",
      "updated_at": "2018-06-08T11:51:02Z"
    },
    {
      "author": "stale[bot]",
      "author_association": "NONE",
      "body": "This PR has been automatically marked as stale because it has not had activity in the last 30 days. It will be closed if no further activity occurs within 10 days.\nThank you for your contributions.\nCommunity members are welcome to grab these works.\n",
      "created_at": "2018-07-08T11:59:31Z",
      "updated_at": "2018-07-08T11:59:31Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw @anmenaga @SteveL-MSFT Please review the PR.",
      "created_at": "2018-07-09T03:22:29Z",
      "updated_at": "2018-07-09T03:22:29Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw Could you please continue the PR review? ",
      "created_at": "2018-07-30T10:12:28Z",
      "updated_at": "2018-07-30T10:12:28Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@iSazonov I'm busy on some investigations and 6.1-must-have issues recently (RC will be next week and need to get those in). Will resume reviewing this PR in a few days.",
      "created_at": "2018-08-01T23:17:42Z",
      "updated_at": "2018-08-01T23:17:42Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "A ping for myself so that the stale bot doesn't kick in :)",
      "created_at": "2018-08-30T00:13:20Z",
      "updated_at": "2018-08-30T00:13:20Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "ping -l 1496 \r\n:-)",
      "created_at": "2018-08-30T07:28:37Z",
      "updated_at": "2018-08-30T07:28:37Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Rebased to update CIs.",
      "created_at": "2018-09-19T14:02:31Z",
      "updated_at": "2018-09-19T14:02:31Z"
    },
    {
      "author": "anmenaga",
      "author_association": "CONTRIBUTOR",
      "body": "@daxian-dbw friendly ping for review.",
      "created_at": "2018-09-20T19:25:10Z",
      "updated_at": "2018-09-20T19:25:10Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT Have MSFT team special thoughts about the PR? Can we continue or close?",
      "created_at": "2018-11-06T06:45:42Z",
      "updated_at": "2018-11-06T06:45:42Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov @daxian-dbw is currently on vacation and will be back next week.",
      "created_at": "2018-11-06T19:16:52Z",
      "updated_at": "2018-11-06T19:16:52Z"
    },
    {
      "author": "anmenaga",
      "author_association": "CONTRIBUTOR",
      "body": "@daxian-dbw friendly ping for review.",
      "created_at": "2018-11-28T00:14:30Z",
      "updated_at": "2018-11-28T00:14:30Z"
    },
    {
      "author": "stale[bot]",
      "author_association": "NONE",
      "body": "This PR has been automatically marked as stale because it has not had activity in the last 30 days. It will be closed if no further activity occurs within 10 days.\nThank you for your contributions.\nCommunity members are welcome to grab these works.\n",
      "created_at": "2019-01-06T11:46:37Z",
      "updated_at": "2019-01-06T11:46:37Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "This seems like it is the oldest PR :-(\r\n@daxian-dbw @SteveL-MSFT Could we continue?",
      "created_at": "2019-01-06T12:11:57Z",
      "updated_at": "2019-01-06T12:12:13Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Rebased to get latest CI's updates.",
      "created_at": "2019-01-10T04:59:16Z",
      "updated_at": "2019-01-10T04:59:16Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT Your comment is addressed.\r\nRebased to get latest CI's updates.\r\nLast 3 commits fix style issues.",
      "created_at": "2019-01-10T05:26:20Z",
      "updated_at": "2019-01-10T05:26:20Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT @TravisEz13 Should we now address Codacy issues?",
      "created_at": "2019-01-11T03:34:53Z",
      "updated_at": "2019-01-11T03:34:53Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov we only just enabled Codacy so I wouldn't consider it blocking right now.  Looking at the Codacy feedback for this PR, seems like good suggestions.",
      "created_at": "2019-01-11T03:52:56Z",
      "updated_at": "2019-01-11T03:52:56Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT Thanks! Now I'll ask contributors to look Codacy issues as optional.",
      "created_at": "2019-01-11T03:56:20Z",
      "updated_at": "2019-01-11T03:56:20Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I did not find what I could fix from Codacy issues.\r\n\r\n@daxian-dbw Can we merge?",
      "created_at": "2019-01-11T04:11:25Z",
      "updated_at": "2019-01-11T04:11:25Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw @SteveL-MSFT Can we merge before 6.2 Preview4?",
      "created_at": "2019-01-23T17:33:01Z",
      "updated_at": "2019-01-23T17:33:01Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov @daxian-dbw is currently on vacation, we can get this in for RC",
      "created_at": "2019-02-02T00:42:00Z",
      "updated_at": "2019-02-02T00:42:00Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Can we merge or we are waiting @daxian-dbw ?",
      "created_at": "2019-02-02T05:46:44Z",
      "updated_at": "2019-02-02T05:46:44Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw Could we continue?",
      "created_at": "2019-02-25T16:22:17Z",
      "updated_at": "2019-02-25T16:22:17Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@iSazonov Sorry for being tardy in my PR reviews recently (vacation and then was busy on another project). I will get back to this PR on Wednesday.\r\n[Update] Started to review, hang on ... :)",
      "created_at": "2019-03-05T01:42:06Z",
      "updated_at": "2019-03-07T05:34:44Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Rebased to get latest environment updates.\r\n\r\n>  was busy on another project\r\n\r\nIt is a pity that it is not visible and impossible to learn from you.",
      "created_at": "2019-03-05T05:16:12Z",
      "updated_at": "2019-03-05T05:16:12Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw Can we continue?",
      "created_at": "2019-03-13T04:12:31Z",
      "updated_at": "2019-03-13T04:12:31Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> My apology for leaving this PR behind for soooo long.\r\n\r\nAlmost a year I was tormented by guesswork :-)))\r\n\r\n> Let's get this PR done next week, then we can see if it's possible to eliminate the native call to WriteConsole completely -- Console.Write should do the same thing.\r\n\r\nIn another PR we touched ReadConsole() canonical/cooked mode and that tab do not terminate input on Unix - it seems we need to consider it together.",
      "created_at": "2019-03-31T17:23:01Z",
      "updated_at": "2019-03-31T17:23:01Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "> In another PR we touched ReadConsole() canonical/cooked mode and that tab do not terminate input on Unix - it seems we need to consider it together.\r\n\r\nCan you give the link to that PR? Or is it something you are still working on?",
      "created_at": "2019-04-01T23:30:05Z",
      "updated_at": "2019-04-01T23:30:05Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "https://github.com/PowerShell/PowerShell/pull/9165#discussion_r267153099\r\n\r\nWe have different code paths for Windows and Unix. `Colsole.Readline` does not support <kbd>Tab</kbd> cooked mode. I opened an Issue in CoreFX. Or we will have to migrate to `ReadKey()`. Also we could look at Bash Readline library.",
      "created_at": "2019-04-02T03:32:08Z",
      "updated_at": "2019-04-02T03:32:08Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw Is there something I need still to fix?",
      "created_at": "2019-04-02T03:35:14Z",
      "updated_at": "2019-04-02T03:35:14Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@iSazonov Not at this time, but I'd like to go through the changes again before approve the PR.",
      "created_at": "2019-04-02T06:08:06Z",
      "updated_at": "2019-04-02T06:08:06Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@iSazonov I pushed a commit to reorder `WriteLineToConsole` and make `WriteConsole` not call `'WriteLineToConsole'.\r\n\r\nOverall, this PR avoids some string allocation (adding new line to text) with the cost of doubling the number of overload methods and adding more branches (if/else).\r\nI don't know if this will improve performance slightly because more branches would hurt branch prediction.\r\nFrom the maintenance point of view, doubling overloads with more branches make it harder to maintain the code.\r\n\r\nSo I'm not very sure that gains from this PR outweigh the costs ... @SteveL-MSFT what do you think?",
      "created_at": "2019-04-02T19:23:03Z",
      "updated_at": "2019-04-02T19:23:03Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw Thanks!\r\n\r\nThe current code reduces number of p/invokes, locks and allocations. All together gives a good result.\r\nMy main concern was extra allocations we do for every (!) new line. .Net Core GC is much more lazy than Framework GC. Using ReadOnlySpans greatly improves the process.\r\n\r\n> the cost of doubling the number of overload methods and adding more branches (if/else).\r\n\r\nI believe new code got much closer to Console.Write/WriteLine and we can more easily move to the methods.\r\nI think we could add `MethodImplAttributes.AggressiveInlining` for some temporary methods. And it seems we can reduce number of branches - will do the commit.",
      "created_at": "2019-04-03T03:33:44Z",
      "updated_at": "2019-04-03T03:33:44Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@iSazonov Thanks for the further clarification.\r\n\r\n> The current code reduces number of p/invokes, locks and allocations.\r\n\r\nThe P/Invoke will most likely go away by replacing it with `Console.Write/WriteLine`, but you are right that this PR will help when moving to `Console.Write/WriteLine`.",
      "created_at": "2019-04-03T20:18:56Z",
      "updated_at": "2019-04-03T20:18:56Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@iSazonov you still haven't brought back all previous changes that addressed my comments starting from https://github.com/PowerShell/PowerShell/pull/6882#discussion_r270650824\r\nPlease go over my comments again and address any missing ones.",
      "created_at": "2019-04-05T19:46:42Z",
      "updated_at": "2019-04-05T19:46:42Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw Sorry for the inconvenience. I hope that everything is fixed ",
      "created_at": "2019-04-08T04:09:10Z",
      "updated_at": "2019-04-08T04:09:10Z"
    },
    {
      "author": "PoshChan",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov, your last commit had 6 failures in `PowerShell-CI-macos`\r\n(These are 5 of the failures)\r\n\r\nConsoleHost unit tests.Redirected standard input for 'interactive' use.Interactive redirected input w/ initial command\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 7\r\nActual length:   4\r\nStrings differ at index 4.\r\nExpected: 'PS> 1+1'\r\nBut was:  'PS> '\r\n---------------^\r\nat <ScriptBlock>, /Users/vsts/agent/2.149.2/work/1/s/test/powershell/Host/ConsoleHost.Tests.ps1: line 413\r\n413:             $process.StandardOutput.ReadLine() | Should -Be \"PS> 1+1\"\r\n```\r\nConsoleHost unit tests.Redirected standard input for 'interactive' use.Redirected input explicit prompting (-File -)\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 7\r\nActual length:   29\r\nStrings differ at index 0.\r\nExpected: 'PS> 1+1'\r\nBut was:  '$function:prompt = { 'PS> ' }'\r\n-----------^\r\nat <ScriptBlock>, /Users/vsts/agent/2.149.2/work/1/s/test/powershell/Host/ConsoleHost.Tests.ps1: line 429\r\n429:             $process.StandardOutput.ReadLine() | Should -Be \"PS> 1+1\"\r\n```\r\nConsoleHost unit tests.Redirected standard input for 'interactive' use.Redirected input w/ nested prompt\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 29\r\nActual length:   4\r\nStrings differ at index 4.\r\nExpected: 'PS> $host.EnterNestedPrompt()'\r\nBut was:  'PS> '\r\n---------------^\r\nat <ScriptBlock>, /Users/vsts/agent/2.149.2/work/1/s/test/powershell/Host/ConsoleHost.Tests.ps1: line 473\r\n473:             $process.StandardOutput.ReadLine() | Should -Be \"PS> `$host.EnterNestedPrompt()\"\r\n```\r\nConsoleHost unit tests.Redirected standard input for 'interactive' use.Interactive redirected input: <empty>\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 7\r\nActual length:   29\r\nStrings differ at index 0.\r\nExpected: 'PS> 1+1'\r\nBut was:  '$function:prompt = { 'PS> ' }'\r\n-----------^\r\nat <ScriptBlock>, /Users/vsts/agent/2.149.2/work/1/s/test/powershell/Host/ConsoleHost.Tests.ps1: line 393\r\n393:             $process.StandardOutput.ReadLine() | Should -Be \"PS> 1+1\"\r\n```\r\nConsoleHost unit tests.Redirected standard input for 'interactive' use.Interactive redirected input:  -IntERactive\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 7\r\nActual length:   29\r\nStrings differ at index 0.\r\nExpected: 'PS> 1+1'\r\nBut was:  '$function:prompt = { 'PS> ' }'\r\n-----------^\r\nat <ScriptBlock>, /Users/vsts/agent/2.149.2/work/1/s/test/powershell/Host/ConsoleHost.Tests.ps1: line 393\r\n393:             $process.StandardOutput.ReadLine() | Should -Be \"PS> 1+1\"\r\n```\r\n",
      "created_at": "2019-04-08T04:27:19Z",
      "updated_at": "2019-04-09T14:48:29Z"
    },
    {
      "author": "PoshChan",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov, your last commit had 7 failures in `PowerShell-CI-linux`\r\n(These are 5 of the failures)\r\n\r\nConsoleHost unit tests.Redirected standard input for 'interactive' use.Interactive redirected input w/ initial command\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 7\r\nActual length:   4\r\nStrings differ at index 4.\r\nExpected: 'PS> 1+1'\r\nBut was:  'PS> '\r\n---------------^\r\nat <ScriptBlock>, /home/vsts/work/1/s/test/powershell/Host/ConsoleHost.Tests.ps1: line 413\r\n413:             $process.StandardOutput.ReadLine() | Should -Be \"PS> 1+1\"\r\n```\r\nConsoleHost unit tests.Redirected standard input for 'interactive' use.Redirected input explicit prompting (-File -)\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 7\r\nActual length:   29\r\nStrings differ at index 0.\r\nExpected: 'PS> 1+1'\r\nBut was:  '$function:prompt = { 'PS> ' }'\r\n-----------^\r\nat <ScriptBlock>, /home/vsts/work/1/s/test/powershell/Host/ConsoleHost.Tests.ps1: line 429\r\n429:             $process.StandardOutput.ReadLine() | Should -Be \"PS> 1+1\"\r\n```\r\nConsoleHost unit tests.Redirected standard input for 'interactive' use.Redirected input w/ nested prompt\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 29\r\nActual length:   4\r\nStrings differ at index 4.\r\nExpected: 'PS> $host.EnterNestedPrompt()'\r\nBut was:  'PS> '\r\n---------------^\r\nat <ScriptBlock>, /home/vsts/work/1/s/test/powershell/Host/ConsoleHost.Tests.ps1: line 473\r\n473:             $process.StandardOutput.ReadLine() | Should -Be \"PS> `$host.EnterNestedPrompt()\"\r\n```\r\nConsoleHost unit tests.Redirected standard input for 'interactive' use.Interactive redirected input: <empty>\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 7\r\nActual length:   29\r\nStrings differ at index 0.\r\nExpected: 'PS> 1+1'\r\nBut was:  '$function:prompt = { 'PS> ' }'\r\n-----------^\r\nat <ScriptBlock>, /home/vsts/work/1/s/test/powershell/Host/ConsoleHost.Tests.ps1: line 393\r\n393:             $process.StandardOutput.ReadLine() | Should -Be \"PS> 1+1\"\r\n```\r\nConsoleHost unit tests.Redirected standard input for 'interactive' use.Interactive redirected input:  -IntERactive\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 7\r\nActual length:   29\r\nStrings differ at index 0.\r\nExpected: 'PS> 1+1'\r\nBut was:  '$function:prompt = { 'PS> ' }'\r\n-----------^\r\nat <ScriptBlock>, /home/vsts/work/1/s/test/powershell/Host/ConsoleHost.Tests.ps1: line 393\r\n393:             $process.StandardOutput.ReadLine() | Should -Be \"PS> 1+1\"\r\n```\r\n",
      "created_at": "2019-04-08T04:29:33Z",
      "updated_at": "2019-04-09T14:48:38Z"
    },
    {
      "author": "PoshChan",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov, your last commit had 7 failures in `PowerShell-CI-linux`\r\n(These are 5 of the failures)\r\n\r\nConsoleHost unit tests.Redirected standard input for 'interactive' use.Interactive redirected input w/ initial command\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 7\r\nActual length:   4\r\nStrings differ at index 4.\r\nExpected: 'PS> 1+1'\r\nBut was:  'PS> '\r\n---------------^\r\nat <ScriptBlock>, /home/vsts/work/1/s/test/powershell/Host/ConsoleHost.Tests.ps1: line 413\r\n413:             $process.StandardOutput.ReadLine() | Should -Be \"PS> 1+1\"\r\n```\r\nConsoleHost unit tests.Redirected standard input for 'interactive' use.Redirected input explicit prompting (-File -)\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 7\r\nActual length:   29\r\nStrings differ at index 0.\r\nExpected: 'PS> 1+1'\r\nBut was:  '$function:prompt = { 'PS> ' }'\r\n-----------^\r\nat <ScriptBlock>, /home/vsts/work/1/s/test/powershell/Host/ConsoleHost.Tests.ps1: line 429\r\n429:             $process.StandardOutput.ReadLine() | Should -Be \"PS> 1+1\"\r\n```\r\nConsoleHost unit tests.Redirected standard input for 'interactive' use.Redirected input w/ nested prompt\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 29\r\nActual length:   4\r\nStrings differ at index 4.\r\nExpected: 'PS> $host.EnterNestedPrompt()'\r\nBut was:  'PS> '\r\n---------------^\r\nat <ScriptBlock>, /home/vsts/work/1/s/test/powershell/Host/ConsoleHost.Tests.ps1: line 473\r\n473:             $process.StandardOutput.ReadLine() | Should -Be \"PS> `$host.EnterNestedPrompt()\"\r\n```\r\nConsoleHost unit tests.Redirected standard input for 'interactive' use.Interactive redirected input: <empty>\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 7\r\nActual length:   29\r\nStrings differ at index 0.\r\nExpected: 'PS> 1+1'\r\nBut was:  '$function:prompt = { 'PS> ' }'\r\n-----------^\r\nat <ScriptBlock>, /home/vsts/work/1/s/test/powershell/Host/ConsoleHost.Tests.ps1: line 393\r\n393:             $process.StandardOutput.ReadLine() | Should -Be \"PS> 1+1\"\r\n```\r\nConsoleHost unit tests.Redirected standard input for 'interactive' use.Interactive redirected input:  -IntERactive\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 7\r\nActual length:   29\r\nStrings differ at index 0.\r\nExpected: 'PS> 1+1'\r\nBut was:  '$function:prompt = { 'PS> ' }'\r\n-----------^\r\nat <ScriptBlock>, /home/vsts/work/1/s/test/powershell/Host/ConsoleHost.Tests.ps1: line 393\r\n393:             $process.StandardOutput.ReadLine() | Should -Be \"PS> 1+1\"\r\n```\r\n",
      "created_at": "2019-04-08T09:54:51Z",
      "updated_at": "2019-04-15T17:20:47Z"
    },
    {
      "author": "PoshChan",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov, your last commit had 6 failures in `PowerShell-CI-macos`\r\n(These are 5 of the failures)\r\n\r\nConsoleHost unit tests.Redirected standard input for 'interactive' use.Interactive redirected input w/ initial command\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 7\r\nActual length:   4\r\nStrings differ at index 4.\r\nExpected: 'PS> 1+1'\r\nBut was:  'PS> '\r\n---------------^\r\nat <ScriptBlock>, /Users/vsts/agent/2.149.2/work/1/s/test/powershell/Host/ConsoleHost.Tests.ps1: line 413\r\n413:             $process.StandardOutput.ReadLine() | Should -Be \"PS> 1+1\"\r\n```\r\nConsoleHost unit tests.Redirected standard input for 'interactive' use.Redirected input explicit prompting (-File -)\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 7\r\nActual length:   29\r\nStrings differ at index 0.\r\nExpected: 'PS> 1+1'\r\nBut was:  '$function:prompt = { 'PS> ' }'\r\n-----------^\r\nat <ScriptBlock>, /Users/vsts/agent/2.149.2/work/1/s/test/powershell/Host/ConsoleHost.Tests.ps1: line 429\r\n429:             $process.StandardOutput.ReadLine() | Should -Be \"PS> 1+1\"\r\n```\r\nConsoleHost unit tests.Redirected standard input for 'interactive' use.Redirected input w/ nested prompt\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 29\r\nActual length:   4\r\nStrings differ at index 4.\r\nExpected: 'PS> $host.EnterNestedPrompt()'\r\nBut was:  'PS> '\r\n---------------^\r\nat <ScriptBlock>, /Users/vsts/agent/2.149.2/work/1/s/test/powershell/Host/ConsoleHost.Tests.ps1: line 473\r\n473:             $process.StandardOutput.ReadLine() | Should -Be \"PS> `$host.EnterNestedPrompt()\"\r\n```\r\nConsoleHost unit tests.Redirected standard input for 'interactive' use.Interactive redirected input: <empty>\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 7\r\nActual length:   29\r\nStrings differ at index 0.\r\nExpected: 'PS> 1+1'\r\nBut was:  '$function:prompt = { 'PS> ' }'\r\n-----------^\r\nat <ScriptBlock>, /Users/vsts/agent/2.149.2/work/1/s/test/powershell/Host/ConsoleHost.Tests.ps1: line 393\r\n393:             $process.StandardOutput.ReadLine() | Should -Be \"PS> 1+1\"\r\n```\r\nConsoleHost unit tests.Redirected standard input for 'interactive' use.Interactive redirected input:  -IntERactive\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 7\r\nActual length:   29\r\nStrings differ at index 0.\r\nExpected: 'PS> 1+1'\r\nBut was:  '$function:prompt = { 'PS> ' }'\r\n-----------^\r\nat <ScriptBlock>, /Users/vsts/agent/2.149.2/work/1/s/test/powershell/Host/ConsoleHost.Tests.ps1: line 393\r\n393:             $process.StandardOutput.ReadLine() | Should -Be \"PS> 1+1\"\r\n```\r\n",
      "created_at": "2019-04-08T10:19:25Z",
      "updated_at": "2019-04-09T14:48:44Z"
    },
    {
      "author": "PoshChan",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov, your last commit had 7 failures in `PowerShell-CI-linux`\r\n(These are 5 of the failures)\r\n\r\nConsoleHost unit tests.Redirected standard input for 'interactive' use.Interactive redirected input w/ initial command\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 7\r\nActual length:   4\r\nStrings differ at index 4.\r\nExpected: 'PS> 1+1'\r\nBut was:  'PS> '\r\n---------------^\r\nat <ScriptBlock>, /home/vsts/work/1/s/test/powershell/Host/ConsoleHost.Tests.ps1: line 413\r\n413:             $process.StandardOutput.ReadLine() | Should -Be \"PS> 1+1\"\r\n```\r\nConsoleHost unit tests.Redirected standard input for 'interactive' use.Redirected input explicit prompting (-File -)\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 7\r\nActual length:   29\r\nStrings differ at index 0.\r\nExpected: 'PS> 1+1'\r\nBut was:  '$function:prompt = { 'PS> ' }'\r\n-----------^\r\nat <ScriptBlock>, /home/vsts/work/1/s/test/powershell/Host/ConsoleHost.Tests.ps1: line 429\r\n429:             $process.StandardOutput.ReadLine() | Should -Be \"PS> 1+1\"\r\n```\r\nConsoleHost unit tests.Redirected standard input for 'interactive' use.Redirected input w/ nested prompt\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 29\r\nActual length:   4\r\nStrings differ at index 4.\r\nExpected: 'PS> $host.EnterNestedPrompt()'\r\nBut was:  'PS> '\r\n---------------^\r\nat <ScriptBlock>, /home/vsts/work/1/s/test/powershell/Host/ConsoleHost.Tests.ps1: line 473\r\n473:             $process.StandardOutput.ReadLine() | Should -Be \"PS> `$host.EnterNestedPrompt()\"\r\n```\r\nConsoleHost unit tests.Redirected standard input for 'interactive' use.Interactive redirected input: <empty>\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 7\r\nActual length:   29\r\nStrings differ at index 0.\r\nExpected: 'PS> 1+1'\r\nBut was:  '$function:prompt = { 'PS> ' }'\r\n-----------^\r\nat <ScriptBlock>, /home/vsts/work/1/s/test/powershell/Host/ConsoleHost.Tests.ps1: line 393\r\n393:             $process.StandardOutput.ReadLine() | Should -Be \"PS> 1+1\"\r\n```\r\nConsoleHost unit tests.Redirected standard input for 'interactive' use.Interactive redirected input:  -IntERactive\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 7\r\nActual length:   29\r\nStrings differ at index 0.\r\nExpected: 'PS> 1+1'\r\nBut was:  '$function:prompt = { 'PS> ' }'\r\n-----------^\r\nat <ScriptBlock>, /home/vsts/work/1/s/test/powershell/Host/ConsoleHost.Tests.ps1: line 393\r\n393:             $process.StandardOutput.ReadLine() | Should -Be \"PS> 1+1\"\r\n```\r\n",
      "created_at": "2019-04-08T10:21:16Z",
      "updated_at": "2019-04-09T14:48:51Z"
    },
    {
      "author": "PoshChan",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov, your last commit had 6 failures in `PowerShell-CI-macos`\r\n(These are 5 of the failures)\r\n\r\nConsoleHost unit tests.Redirected standard input for 'interactive' use.Interactive redirected input w/ initial command\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 7\r\nActual length:   4\r\nStrings differ at index 4.\r\nExpected: 'PS> 1+1'\r\nBut was:  'PS> '\r\n---------------^\r\nat <ScriptBlock>, /Users/vsts/agent/2.149.2/work/1/s/test/powershell/Host/ConsoleHost.Tests.ps1: line 413\r\n413:             $process.StandardOutput.ReadLine() | Should -Be \"PS> 1+1\"\r\n```\r\nConsoleHost unit tests.Redirected standard input for 'interactive' use.Redirected input explicit prompting (-File -)\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 7\r\nActual length:   29\r\nStrings differ at index 0.\r\nExpected: 'PS> 1+1'\r\nBut was:  '$function:prompt = { 'PS> ' }'\r\n-----------^\r\nat <ScriptBlock>, /Users/vsts/agent/2.149.2/work/1/s/test/powershell/Host/ConsoleHost.Tests.ps1: line 429\r\n429:             $process.StandardOutput.ReadLine() | Should -Be \"PS> 1+1\"\r\n```\r\nConsoleHost unit tests.Redirected standard input for 'interactive' use.Redirected input w/ nested prompt\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 29\r\nActual length:   4\r\nStrings differ at index 4.\r\nExpected: 'PS> $host.EnterNestedPrompt()'\r\nBut was:  'PS> '\r\n---------------^\r\nat <ScriptBlock>, /Users/vsts/agent/2.149.2/work/1/s/test/powershell/Host/ConsoleHost.Tests.ps1: line 473\r\n473:             $process.StandardOutput.ReadLine() | Should -Be \"PS> `$host.EnterNestedPrompt()\"\r\n```\r\nConsoleHost unit tests.Redirected standard input for 'interactive' use.Interactive redirected input: <empty>\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 7\r\nActual length:   29\r\nStrings differ at index 0.\r\nExpected: 'PS> 1+1'\r\nBut was:  '$function:prompt = { 'PS> ' }'\r\n-----------^\r\nat <ScriptBlock>, /Users/vsts/agent/2.149.2/work/1/s/test/powershell/Host/ConsoleHost.Tests.ps1: line 393\r\n393:             $process.StandardOutput.ReadLine() | Should -Be \"PS> 1+1\"\r\n```\r\nConsoleHost unit tests.Redirected standard input for 'interactive' use.Interactive redirected input:  -IntERactive\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 7\r\nActual length:   29\r\nStrings differ at index 0.\r\nExpected: 'PS> 1+1'\r\nBut was:  '$function:prompt = { 'PS> ' }'\r\n-----------^\r\nat <ScriptBlock>, /Users/vsts/agent/2.149.2/work/1/s/test/powershell/Host/ConsoleHost.Tests.ps1: line 393\r\n393:             $process.StandardOutput.ReadLine() | Should -Be \"PS> 1+1\"\r\n```\r\n",
      "created_at": "2019-04-08T10:41:44Z",
      "updated_at": "2019-04-09T14:48:58Z"
    },
    {
      "author": "PoshChan",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov, your last commit had 7 failures in `PowerShell-CI-linux`\r\n(These are 5 of the failures)\r\n\r\nConsoleHost unit tests.Redirected standard input for 'interactive' use.Interactive redirected input w/ initial command\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 7\r\nActual length:   4\r\nStrings differ at index 4.\r\nExpected: 'PS> 1+1'\r\nBut was:  'PS> '\r\n---------------^\r\nat <ScriptBlock>, /home/vsts/work/1/s/test/powershell/Host/ConsoleHost.Tests.ps1: line 413\r\n413:             $process.StandardOutput.ReadLine() | Should -Be \"PS> 1+1\"\r\n```\r\nConsoleHost unit tests.Redirected standard input for 'interactive' use.Redirected input explicit prompting (-File -)\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 7\r\nActual length:   29\r\nStrings differ at index 0.\r\nExpected: 'PS> 1+1'\r\nBut was:  '$function:prompt = { 'PS> ' }'\r\n-----------^\r\nat <ScriptBlock>, /home/vsts/work/1/s/test/powershell/Host/ConsoleHost.Tests.ps1: line 429\r\n429:             $process.StandardOutput.ReadLine() | Should -Be \"PS> 1+1\"\r\n```\r\nConsoleHost unit tests.Redirected standard input for 'interactive' use.Redirected input w/ nested prompt\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 29\r\nActual length:   4\r\nStrings differ at index 4.\r\nExpected: 'PS> $host.EnterNestedPrompt()'\r\nBut was:  'PS> '\r\n---------------^\r\nat <ScriptBlock>, /home/vsts/work/1/s/test/powershell/Host/ConsoleHost.Tests.ps1: line 473\r\n473:             $process.StandardOutput.ReadLine() | Should -Be \"PS> `$host.EnterNestedPrompt()\"\r\n```\r\nConsoleHost unit tests.Redirected standard input for 'interactive' use.Interactive redirected input: <empty>\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 7\r\nActual length:   29\r\nStrings differ at index 0.\r\nExpected: 'PS> 1+1'\r\nBut was:  '$function:prompt = { 'PS> ' }'\r\n-----------^\r\nat <ScriptBlock>, /home/vsts/work/1/s/test/powershell/Host/ConsoleHost.Tests.ps1: line 393\r\n393:             $process.StandardOutput.ReadLine() | Should -Be \"PS> 1+1\"\r\n```\r\nConsoleHost unit tests.Redirected standard input for 'interactive' use.Interactive redirected input:  -IntERactive\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 7\r\nActual length:   29\r\nStrings differ at index 0.\r\nExpected: 'PS> 1+1'\r\nBut was:  '$function:prompt = { 'PS> ' }'\r\n-----------^\r\nat <ScriptBlock>, /home/vsts/work/1/s/test/powershell/Host/ConsoleHost.Tests.ps1: line 393\r\n393:             $process.StandardOutput.ReadLine() | Should -Be \"PS> 1+1\"\r\n```\r\n",
      "created_at": "2019-04-08T10:45:08Z",
      "updated_at": "2019-04-09T14:49:04Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw I don't know that is wrong.  I added new commits and CIs failed. Reverted commits and CIs failed again. It seems something was changed in CIs? ",
      "created_at": "2019-04-08T10:52:19Z",
      "updated_at": "2019-04-08T10:52:19Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "I think @adityapatwardhan made some changes so that now Linux/macOS CIs always run feature tests. It looks to me your changes cause some feature tests to fail.",
      "created_at": "2019-04-08T17:50:48Z",
      "updated_at": "2019-04-08T17:50:48Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw Thanks! I I looked through the CIs history - feature tests was turned on but not reported in right way then this was fixed and now we see the CIs fail.\r\nI reviewed my changes and not found cause of the failure. I'm going to create a new git branch to find a problem step by step if you don't have a better idea.",
      "created_at": "2019-04-09T03:38:14Z",
      "updated_at": "2019-04-09T03:38:14Z"
    },
    {
      "author": "PoshChan",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov, your last commit had 6 failures in `PowerShell-CI-macos`\r\n(These are 5 of the failures)\r\n\r\nConsoleHost unit tests.Redirected standard input for 'interactive' use.Interactive redirected input w/ initial command\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 7\r\nActual length:   4\r\nStrings differ at index 4.\r\nExpected: 'PS> 1+1'\r\nBut was:  'PS> '\r\n---------------^\r\nat <ScriptBlock>, /Users/vsts/agent/2.149.2/work/1/s/test/powershell/Host/ConsoleHost.Tests.ps1: line 414\r\n414:             $process.StandardOutput.ReadLine() | Should -Be \"PS> 1+1\"\r\n```\r\nConsoleHost unit tests.Redirected standard input for 'interactive' use.Redirected input explicit prompting (-File -)\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 7\r\nActual length:   29\r\nStrings differ at index 0.\r\nExpected: 'PS> 1+1'\r\nBut was:  '$function:prompt = { 'PS> ' }'\r\n-----------^\r\nat <ScriptBlock>, /Users/vsts/agent/2.149.2/work/1/s/test/powershell/Host/ConsoleHost.Tests.ps1: line 430\r\n430:             $process.StandardOutput.ReadLine() | Should -Be \"PS> 1+1\"\r\n```\r\nConsoleHost unit tests.Redirected standard input for 'interactive' use.Redirected input w/ nested prompt\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 29\r\nActual length:   4\r\nStrings differ at index 4.\r\nExpected: 'PS> $host.EnterNestedPrompt()'\r\nBut was:  'PS> '\r\n---------------^\r\nat <ScriptBlock>, /Users/vsts/agent/2.149.2/work/1/s/test/powershell/Host/ConsoleHost.Tests.ps1: line 474\r\n474:             $process.StandardOutput.ReadLine() | Should -Be \"PS> `$host.EnterNestedPrompt()\"\r\n```\r\nConsoleHost unit tests.Redirected standard input for 'interactive' use.Interactive redirected input: <empty>\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 7\r\nActual length:   4\r\nStrings differ at index 4.\r\nExpected: 'PS> 1+1'\r\nBut was:  'PS> '\r\n---------------^\r\nat <ScriptBlock>, /Users/vsts/agent/2.149.2/work/1/s/test/powershell/Host/ConsoleHost.Tests.ps1: line 394\r\n394:             $process.StandardOutput.ReadLine() | Should -Be \"PS> 1+1\"\r\n```\r\nConsoleHost unit tests.Redirected standard input for 'interactive' use.Interactive redirected input:  -IntERactive\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 7\r\nActual length:   4\r\nStrings differ at index 4.\r\nExpected: 'PS> 1+1'\r\nBut was:  'PS> '\r\n---------------^\r\nat <ScriptBlock>, /Users/vsts/agent/2.149.2/work/1/s/test/powershell/Host/ConsoleHost.Tests.ps1: line 394\r\n394:             $process.StandardOutput.ReadLine() | Should -Be \"PS> 1+1\"\r\n```\r\n",
      "created_at": "2019-04-09T09:15:17Z",
      "updated_at": "2019-04-09T14:49:12Z"
    },
    {
      "author": "PoshChan",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov, your last commit had 7 failures in `PowerShell-CI-linux`\r\n(These are 5 of the failures)\r\n\r\nConsoleHost unit tests.Redirected standard input for 'interactive' use.Interactive redirected input w/ initial command\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 7\r\nActual length:   4\r\nStrings differ at index 4.\r\nExpected: 'PS> 1+1'\r\nBut was:  'PS> '\r\n---------------^\r\nat <ScriptBlock>, /home/vsts/work/1/s/test/powershell/Host/ConsoleHost.Tests.ps1: line 414\r\n414:             $process.StandardOutput.ReadLine() | Should -Be \"PS> 1+1\"\r\n```\r\nConsoleHost unit tests.Redirected standard input for 'interactive' use.Redirected input explicit prompting (-File -)\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 7\r\nActual length:   29\r\nStrings differ at index 0.\r\nExpected: 'PS> 1+1'\r\nBut was:  '$function:prompt = { 'PS> ' }'\r\n-----------^\r\nat <ScriptBlock>, /home/vsts/work/1/s/test/powershell/Host/ConsoleHost.Tests.ps1: line 430\r\n430:             $process.StandardOutput.ReadLine() | Should -Be \"PS> 1+1\"\r\n```\r\nConsoleHost unit tests.Redirected standard input for 'interactive' use.Redirected input w/ nested prompt\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 29\r\nActual length:   4\r\nStrings differ at index 4.\r\nExpected: 'PS> $host.EnterNestedPrompt()'\r\nBut was:  'PS> '\r\n---------------^\r\nat <ScriptBlock>, /home/vsts/work/1/s/test/powershell/Host/ConsoleHost.Tests.ps1: line 474\r\n474:             $process.StandardOutput.ReadLine() | Should -Be \"PS> `$host.EnterNestedPrompt()\"\r\n```\r\nConsoleHost unit tests.Redirected standard input for 'interactive' use.Interactive redirected input: <empty>\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 7\r\nActual length:   4\r\nStrings differ at index 4.\r\nExpected: 'PS> 1+1'\r\nBut was:  'PS> '\r\n---------------^\r\nat <ScriptBlock>, /home/vsts/work/1/s/test/powershell/Host/ConsoleHost.Tests.ps1: line 394\r\n394:             $process.StandardOutput.ReadLine() | Should -Be \"PS> 1+1\"\r\n```\r\nConsoleHost unit tests.Redirected standard input for 'interactive' use.Interactive redirected input:  -IntERactive\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 7\r\nActual length:   4\r\nStrings differ at index 4.\r\nExpected: 'PS> 1+1'\r\nBut was:  'PS> '\r\n---------------^\r\nat <ScriptBlock>, /home/vsts/work/1/s/test/powershell/Host/ConsoleHost.Tests.ps1: line 394\r\n394:             $process.StandardOutput.ReadLine() | Should -Be \"PS> 1+1\"\r\n```\r\n",
      "created_at": "2019-04-09T09:19:02Z",
      "updated_at": "2019-04-09T14:49:19Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I discover that input echoing to output in the failed tests but I can not find the cause.",
      "created_at": "2019-04-09T11:37:24Z",
      "updated_at": "2019-04-09T11:37:24Z"
    },
    {
      "author": "PoshChan",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov, your last commit had 6 failures in `PowerShell-CI-macos`\r\n(These are 5 of the failures)\r\n\r\nConsoleHost unit tests.Redirected standard input for 'interactive' use.Interactive redirected input w/ initial command\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 7\r\nActual length:   4\r\nStrings differ at index 4.\r\nExpected: 'PS> 1+1'\r\nBut was:  'PS> '\r\n---------------^\r\nat <ScriptBlock>, /Users/vsts/agent/2.149.2/work/1/s/test/powershell/Host/ConsoleHost.Tests.ps1: line 413\r\n413:             $process.StandardOutput.ReadLine() | Should -Be \"PS> 1+1\"\r\n```\r\nConsoleHost unit tests.Redirected standard input for 'interactive' use.Redirected input explicit prompting (-File -)\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 7\r\nActual length:   29\r\nStrings differ at index 0.\r\nExpected: 'PS> 1+1'\r\nBut was:  '$function:prompt = { 'PS> ' }'\r\n-----------^\r\nat <ScriptBlock>, /Users/vsts/agent/2.149.2/work/1/s/test/powershell/Host/ConsoleHost.Tests.ps1: line 429\r\n429:             $process.StandardOutput.ReadLine() | Should -Be \"PS> 1+1\"\r\n```\r\nConsoleHost unit tests.Redirected standard input for 'interactive' use.Redirected input w/ nested prompt\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 29\r\nActual length:   4\r\nStrings differ at index 4.\r\nExpected: 'PS> $host.EnterNestedPrompt()'\r\nBut was:  'PS> '\r\n---------------^\r\nat <ScriptBlock>, /Users/vsts/agent/2.149.2/work/1/s/test/powershell/Host/ConsoleHost.Tests.ps1: line 473\r\n473:             $process.StandardOutput.ReadLine() | Should -Be \"PS> `$host.EnterNestedPrompt()\"\r\n```\r\nConsoleHost unit tests.Redirected standard input for 'interactive' use.Interactive redirected input: <empty>\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 7\r\nActual length:   29\r\nStrings differ at index 0.\r\nExpected: 'PS> 1+1'\r\nBut was:  '$function:prompt = { 'PS> ' }'\r\n-----------^\r\nat <ScriptBlock>, /Users/vsts/agent/2.149.2/work/1/s/test/powershell/Host/ConsoleHost.Tests.ps1: line 393\r\n393:             $process.StandardOutput.ReadLine() | Should -Be \"PS> 1+1\"\r\n```\r\nConsoleHost unit tests.Redirected standard input for 'interactive' use.Interactive redirected input:  -IntERactive\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 7\r\nActual length:   29\r\nStrings differ at index 0.\r\nExpected: 'PS> 1+1'\r\nBut was:  '$function:prompt = { 'PS> ' }'\r\n-----------^\r\nat <ScriptBlock>, /Users/vsts/agent/2.149.2/work/1/s/test/powershell/Host/ConsoleHost.Tests.ps1: line 393\r\n393:             $process.StandardOutput.ReadLine() | Should -Be \"PS> 1+1\"\r\n```\r\n",
      "created_at": "2019-04-09T11:52:21Z",
      "updated_at": "2019-04-09T14:32:08Z"
    },
    {
      "author": "PoshChan",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov, your last commit had 7 failures in `PowerShell-CI-linux`\r\n(These are 5 of the failures)\r\n\r\nConsoleHost unit tests.Redirected standard input for 'interactive' use.Interactive redirected input w/ initial command\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 7\r\nActual length:   4\r\nStrings differ at index 4.\r\nExpected: 'PS> 1+1'\r\nBut was:  'PS> '\r\n---------------^\r\nat <ScriptBlock>, /home/vsts/work/1/s/test/powershell/Host/ConsoleHost.Tests.ps1: line 413\r\n413:             $process.StandardOutput.ReadLine() | Should -Be \"PS> 1+1\"\r\n```\r\nConsoleHost unit tests.Redirected standard input for 'interactive' use.Redirected input explicit prompting (-File -)\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 7\r\nActual length:   29\r\nStrings differ at index 0.\r\nExpected: 'PS> 1+1'\r\nBut was:  '$function:prompt = { 'PS> ' }'\r\n-----------^\r\nat <ScriptBlock>, /home/vsts/work/1/s/test/powershell/Host/ConsoleHost.Tests.ps1: line 429\r\n429:             $process.StandardOutput.ReadLine() | Should -Be \"PS> 1+1\"\r\n```\r\nConsoleHost unit tests.Redirected standard input for 'interactive' use.Redirected input w/ nested prompt\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 29\r\nActual length:   4\r\nStrings differ at index 4.\r\nExpected: 'PS> $host.EnterNestedPrompt()'\r\nBut was:  'PS> '\r\n---------------^\r\nat <ScriptBlock>, /home/vsts/work/1/s/test/powershell/Host/ConsoleHost.Tests.ps1: line 473\r\n473:             $process.StandardOutput.ReadLine() | Should -Be \"PS> `$host.EnterNestedPrompt()\"\r\n```\r\nConsoleHost unit tests.Redirected standard input for 'interactive' use.Interactive redirected input: <empty>\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 7\r\nActual length:   29\r\nStrings differ at index 0.\r\nExpected: 'PS> 1+1'\r\nBut was:  '$function:prompt = { 'PS> ' }'\r\n-----------^\r\nat <ScriptBlock>, /home/vsts/work/1/s/test/powershell/Host/ConsoleHost.Tests.ps1: line 393\r\n393:             $process.StandardOutput.ReadLine() | Should -Be \"PS> 1+1\"\r\n```\r\nConsoleHost unit tests.Redirected standard input for 'interactive' use.Interactive redirected input:  -IntERactive\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 7\r\nActual length:   29\r\nStrings differ at index 0.\r\nExpected: 'PS> 1+1'\r\nBut was:  '$function:prompt = { 'PS> ' }'\r\n-----------^\r\nat <ScriptBlock>, /home/vsts/work/1/s/test/powershell/Host/ConsoleHost.Tests.ps1: line 393\r\n393:             $process.StandardOutput.ReadLine() | Should -Be \"PS> 1+1\"\r\n```\r\n",
      "created_at": "2019-04-09T11:54:44Z",
      "updated_at": "2019-04-09T14:31:57Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Last commit fix the problem but I wonder and don't understand how it works :-)",
      "created_at": "2019-04-09T14:50:57Z",
      "updated_at": "2019-04-09T14:50:57Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@iSazonov I left 3 comments, but pushed 2 commits to address them and do some tiny refactoring. The second commit's message describes itself:\r\n`Rename 'WriteHelper' to 'WriteImpl'; refactor 'WriteLine' and 'WriteLineToConsole'`\r\n\r\nPlease take a look to see if the changes make sense. Thanks.",
      "created_at": "2019-04-15T18:51:31Z",
      "updated_at": "2019-04-15T18:51:31Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw Sorry, I missed some fixes again. I only have short periods of time to do something useful and for forced pauses I lose context :-(\r\nThanks for pushing additional commits!",
      "created_at": "2019-04-16T03:11:12Z",
      "updated_at": "2019-04-16T03:11:12Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw Thanks for review and help!\r\n\r\nI do not remember what I planned in the continuation of this work. I will look again :-)\r\n\r\nThe other day I was playing with a small application and added output to the console - this application catastrophically slowed down (up to 10 times). Now I am concerned that our intentions to replace our code with Console.* can lead to negative consequences.\r\n",
      "created_at": "2019-04-18T03:33:08Z",
      "updated_at": "2019-04-18T03:33:08Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "The plan was to replace P/Invoke calls with dotnet Console APIs.\r\n\r\n> added output to the console - this application catastrophically slowed down (up to 10 times)\r\n\r\nI double it's because of the Console API. It could be the fact of writing to console itself caused this difference, no matter you were using P/Invoke or the managed Console API.",
      "created_at": "2019-04-18T17:05:46Z",
      "updated_at": "2019-04-18T17:05:46Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> The plan was to replace P/Invoke calls with dotnet Console APIs.\r\n\r\nThe dotnet API (`Readline()`) is not symmetric for all platforms. It seems we'll have to use ReadKey() method like we do for Unix currently. Is it valid for Windows?\r\n\r\n> I double it's because of the Console API. \r\n\r\nYes, but there is still quite a thick wrap in dotnet.",
      "created_at": "2019-04-18T18:16:12Z",
      "updated_at": "2019-04-18T18:16:46Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "> The dotnet API (Readline()) is not symmetric for all platforms.\r\n\r\nLet's first focus on replacing the write P/Invoke. We can get back to the read operations later. I would like small PRs :)\r\n\r\n> Yes, but there is still quite a thick wrap in dotnet.\r\n\r\nPSReadline is refactored to move away from P/Invoke to make it more portable. I think perf impact won't be a concern unless we can prove it's noticeable.",
      "created_at": "2019-04-18T20:40:44Z",
      "updated_at": "2019-04-18T20:40:44Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> Let's first focus on replacing the write P/Invoke. We can get back to the read operations later. I would like small PRs :)\r\n\r\nMy current understanding that we can't even do it for Windows - It seems there is no \"input completion by tab\" in `Readline()`.\r\nhttps://source.dot.net/#System.Private.CoreLib/shared/System/IO/TextReader.cs,182",
      "created_at": "2019-04-19T04:04:01Z",
      "updated_at": "2019-04-19T04:04:01Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "`Readline()` is the reading part, right? We can focus on the writing part for now, and leave the reading related code untouched.",
      "created_at": "2019-04-19T16:59:45Z",
      "updated_at": "2019-04-19T16:59:45Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I can try it. Until I am sure to turn out to completely remove P/Invokes for writing.",
      "created_at": "2019-04-19T18:34:49Z",
      "updated_at": "2019-04-19T18:34:49Z"
    }
  ],
  "created_at": "2018-05-16T10:52:43Z",
  "number": 6882,
  "state": "closed",
  "title": "Optimize console output in ConsoleHost",
  "updated_at": "2019-04-19T18:34:49Z"
}