{
  "_url": "https://github.com/PowerShell/PowerShell/issues/14891",
  "author": "mklement0",
  "body": "Related: #14862\r\n\r\n## Summary of the new feature/enhancement\r\n\r\nCurrently, selective enabling or disabling experimental features at the user level (`-Scope CurrentUser`, which is the default) takes effect for _all_ side-by-side PowerShell (Core) installations, irrespective of whether they're stable versions or preview versions.\r\n\r\nThis can unwittingly result in the following scenario:\r\n\r\n* **By selectively disabling an experimental _feature_ in a _preview_ version, you're implicitly _enabling_ experimental features for side-by-side _stable_ versions**, because the same `powershell.config.json` file is used by all side-by-side version, and because disabling is based on _excluding_ the disabled feature from the list of explicitly enumerated _enabled_ features in that file (based on the all-enabled starting point in preview versions).\r\n\r\nThe state of experimental features for preview versions should be managed separately from stable versions.\r\n\r\n---\r\n\r\nAn **additional question** is how to handle **_cross-preview-version_ configuration**:\r\n\r\n* Say you disable an experimental feature in a preview version (where all features are _enabled_ by default).\r\n\r\n* You later install a new preview version that comes with _new_ experimental features.\r\n\r\n* With a version-agnostic configuration, **it isn't just the previously explicitly disabled feature that ends up disabled, but _all newly added ones_ as well.**\r\n\r\n## Proposed implementation:\r\n\r\nIntroduce a new property in the user-level `powershell.config.json` file:\r\n\r\n* named something like `DisabledPreviewExperimentalFeatures`, which is only read by _preview_ versions, _instead_ of the `ExperimentalFeatures` property.\r\n\r\n* whose logic is the _inverse_ of  `ExperimentalFeatures`: all features _except_ the ones listed should then be enabled.\r\n\r\n\r\nWritten as of `PowerShell Core 7.2.0-preview.3`",
  "closed_at": null,
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "/cc @theJasonHelmick",
      "created_at": "2022-03-31T22:53:30Z",
      "updated_at": "2022-03-31T22:53:30Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "The Engine WG discussed this yesterday and agree that it's a reasonable ask. There needs to be discussion on a better implementation. We cc'd Jason for his input on this.",
      "created_at": "2022-04-02T02:02:29Z",
      "updated_at": "2022-04-02T02:02:29Z"
    },
    {
      "author": "theJasonHelmick",
      "author_association": "CONTRIBUTOR",
      "body": "I would agree that this seems like a responsible request. I'm not convinced that this problem needs to be addressed, although cumbersome. I do think it's certainly worth discussing and investigating further - along with other customization options that have been discussed and how to handle `powershell.config.json`.  \r\n\r\nSo, help me clarify the suggestion. The suggestion is to add `DisabledPreviewExperimentalFeatures` that requires a user to individually list the features that are to be disabled.  If they don't list them, then all experimental features are enabled for this and all previews. Is that correct?\r\n\r\n",
      "created_at": "2022-04-04T20:53:49Z",
      "updated_at": "2022-04-04T20:53:49Z"
    },
    {
      "author": "doctordns",
      "author_association": "COLLABORATOR",
      "body": "i would have expected the JSON to list ALL the experimental features and whether enabled or disabled.",
      "created_at": "2022-04-05T19:03:40Z",
      "updated_at": "2022-04-05T19:03:40Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@theJasonHelmick I would like you to also consider having preview versions use a different path for the current-user scope `powershell.config.json` file.\r\n\r\nTake windows as an example. Today, the current-user scope file is always located in `C:\\Users\\<user-name>\\Documents\\PowerShell\\powershell.config.json`. So, maybe for preview versions, the current-user scope file path should be `C:\\Users\\<user-name>\\Documents\\PowerShell\\preview\\powershell.config.json`.\r\n\r\nWith this, the stable and preview versions of pwsh uses different current-user scope config files, and won't be conflicting with each other. For the all-user scope config files, they are always in `$PSHOME` for each pwsh instance, so there is no conflict on it.",
      "created_at": "2022-04-05T20:58:57Z",
      "updated_at": "2022-04-05T21:02:15Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@doctordns Consider there may be non-PowerShell-built-in modules in the module path that define experimental features, it's not possible to list all experimental features until at PowerShell run time.",
      "created_at": "2022-04-05T21:00:41Z",
      "updated_at": "2022-04-05T21:00:41Z"
    },
    {
      "author": "theJasonHelmick",
      "author_association": "CONTRIBUTOR",
      "body": "@daxian-dbw Certainly makes sense to separate the previews from stable with different paths to the json.  I'm wondering if this impacts MU @TravisEz13?\r\n\r\n",
      "created_at": "2022-04-05T23:02:35Z",
      "updated_at": "2022-04-05T23:02:35Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@theJasonHelmick Do we support MU for preview releases?",
      "created_at": "2022-04-05T23:04:56Z",
      "updated_at": "2022-04-05T23:04:56Z"
    },
    {
      "author": "theJasonHelmick",
      "author_association": "CONTRIBUTOR",
      "body": "@daxian-dbw @TravisEz13 - Yes, we have been.",
      "created_at": "2022-04-06T14:33:34Z",
      "updated_at": "2022-04-06T14:33:34Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "The current-user scope configuration file doesn't come with PowerShell package. It's created by user (explicitly, or via `Enable-ExperimentalFeature` command), so I don't think this will affect MU.",
      "created_at": "2022-04-06T17:01:37Z",
      "updated_at": "2022-04-06T17:01:37Z"
    }
  ],
  "created_at": "2021-02-23T20:09:10Z",
  "labels": [
    "Issue-Enhancement",
    "WG-Engine"
  ],
  "number": 14891,
  "state": "open",
  "title": "Maintain user-level experimental-feature configuration separately for preview and stable versions",
  "updated_at": "2022-04-06T17:01:37Z"
}