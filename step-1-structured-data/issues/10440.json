{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10440",
  "author": "eedwards-sk",
  "body": "# Steps to reproduce\r\n\r\n```powershell\r\nbash '-c' 'echo \"hello world\"'\r\n```\r\n\r\n# Expected behavior\r\n\r\n```none\r\nhello world\r\n```\r\n\r\n# Actual behavior\r\n\r\n```none\r\nhello\r\n```\r\n\r\n# Environment data\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.2.2\r\nPSEdition                      Core\r\nGitCommitId                    6.2.2\r\nOS                             Darwin 18.7.0 Darwin Kernel Version 18.7.0: Thu Jun 20 18:42:21 PDT 2019; root:xnu-4903.270.47~4/RELEASE_X86_64\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2021-01-20T06:34:57Z",
  "comments": [
    {
      "author": "eedwards-sk",
      "author_association": "NONE",
      "body": "reversing the quotes on the script argument works, by the way:\r\n\r\n```\r\n> bash '-c' \"echo 'hello world'\"\r\nhello world\r\n```\r\n\r\nsomething related to `\"` vs `'` parsing?",
      "created_at": "2019-08-24T09:06:05Z",
      "updated_at": "2019-08-24T09:06:05Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I think https://github.com/PowerShell/PowerShell-RFC/pull/90/files would address this\n\n<blockquote><img src=\"https://avatars0.githubusercontent.com/u/20812332?s=400&v=4\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicon.ico\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/PowerShell/PowerShell-RFC/pull/90\">Create RFC####-Improve-generation-of-argument-string-for-executables by TSlivede \u00b7 Pull Request #90 \u00b7 PowerShell/PowerShell-RFC</a></strong></div><div>This RFC suggests a change that fixes PowerShell/PowerShell#3049 / PowerShell/PowerShell#1995.\n\nPS:\nThe pull request template suggests, that a new RFC should go into the &quot;Draft&quot; folder, h...</div></blockquote>",
      "created_at": "2019-08-24T17:01:19Z",
      "updated_at": "2019-08-24T17:01:21Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Dup? /cc @mklement0 ",
      "created_at": "2021-01-15T14:15:14Z",
      "updated_at": "2021-01-15T14:15:14Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Yes, it's our old friend, #1995, though it may not be obvious:\r\n\r\nThe broken command line that PowerShell constructs behind the scenes is:\r\n\r\n```sh\r\n# Note the lack of escaping of the embedded \"\r\nbash -c \"echo \"Hello World\"\"\r\n```\r\n\r\n.NET (correctly) translates that into the following array of verbatim arguments to invoke `bash` with:\r\n\r\n`bash`, `-c`, `echo Hello`, `World`\r\n\r\nTherefore, `echo`  just sees `Hello` as its argument, and the `World` part is passed as a separate argument that `bash -c` interprets as setting `$0`, which has no visible effect.\r\n\r\nTo recap: the problem is trivially solved on Unix by not constructing a pseudo command line to begin with and instead directly assigning the verbatim arguments to `.ArgumentList` property of [`System.Diagnostics.ProcessStartInfo`](https://docs.microsoft.com/en-US/dotnet/api/System.Diagnostics.ProcessStartInfo).",
      "created_at": "2021-01-15T14:27:23Z",
      "updated_at": "2021-01-15T14:30:54Z"
    }
  ],
  "created_at": "2019-08-24T09:01:19Z",
  "labels": [
    "Resolution-Duplicate",
    "Issue-Question",
    "WG-Interactive-Console",
    "WG-Engine"
  ],
  "number": 10440,
  "state": "closed",
  "title": "calling bash -c with powershell incorrectly parses arguments with quotes",
  "updated_at": "2021-01-20T06:34:57Z"
}