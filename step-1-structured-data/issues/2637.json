{
  "_url": "https://github.com/PowerShell/PowerShell/issues/2637",
  "author": "latkin",
  "body": "Fixes issue https://github.com/PowerShell/PowerShell/issues/2502\r\n\r\nThis allows for Unix console host to properly calculate display width for\r\nstrings containing escape sequences (e.g. ANSI color), rather than\r\nfalling back to naive string.Length.\r\n\r\nBefore:\r\n![image](https://cloud.githubusercontent.com/assets/5943573/20034454/e900c44a-a37b-11e6-93d3-4a5e6fe7998f.png)\r\n\r\nAfter:\r\n![image](https://cloud.githubusercontent.com/assets/5943573/20034456/f7b9eac0-a37b-11e6-9c27-6139778c9d51.png)\r\n\r\nFollowing general pattern I see elsewhere, I just went with minimal set of `#if / #else / #endif` to include this small piece of `ConsoleControl` that has shared logic. If bigger refactor to, e.g. `SharedConsoleControl/WinConsoleControl/UnixConsoleControl`, is preferred I could do that.\r\n\r\nWould be happy to add tests if someone points me in the right direction, but following roadblocks currently:\r\n\r\n  - Docs on how to run tests are [out of date/wrong](https://github.com/PowerShell/PowerShell/issues/2070)\r\n  - Tons of failures on Mac when running `Invoke-Pester`, not sure if that's known or env issue\r\n  - I couldn't find any existing tests specifically covering table column calculations\r\n  - Adding to `Format-Table` tests with a check of `Out-String` doesn't work, since that doesn't go through the host APIs",
  "closed_at": "2016-11-09T18:20:31Z",
  "comments": [
    {
      "author": "msftclas",
      "author_association": "NONE",
      "body": "Hi **@latkin**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    <span>You've already signed the contribution license agreement. Thanks!</span>\n        <p>The agreement was validated by Microsoft and real humans are currently evaluating your PR.</p>\n\nTTYL, MSBOT;\n",
      "created_at": "2016-11-06T00:29:10Z",
      "updated_at": "2016-11-06T00:29:10Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "The code changes look fine.  I wouldn't mind seeing a bigger refactoring, but I'm happy to merge the changes as is.\n\nI would like to see at least one simple test.  Testing `Format-Table` is a little tricky, but it's straightforward to test the public api, e.g.\n\n``` powershell\n$host.UI.RawUI.LengthInBufferCells(\"$([char]0x1b)[0mabc\") | Should Be 3\n```\n\nWhen I add a new test, I just run the test script directly, that's usually good enough before pushing to let our CI run all the tests.\n",
      "created_at": "2016-11-08T19:20:30Z",
      "updated_at": "2016-11-08T19:20:30Z"
    },
    {
      "author": "latkin",
      "author_association": "CONTRIBUTOR",
      "body": "Good stuff. I've added some tests along the lines of what you suggested.\n",
      "created_at": "2016-11-09T07:56:16Z",
      "updated_at": "2016-11-09T07:56:16Z"
    }
  ],
  "created_at": "2016-11-06T00:29:04Z",
  "number": 2637,
  "state": "closed",
  "title": "Wire up proper ConsoleHostRawUserInterface.LengthInBufferCells for Unix",
  "updated_at": "2016-11-09T18:20:31Z"
}