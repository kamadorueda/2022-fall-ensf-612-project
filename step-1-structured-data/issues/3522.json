{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3522",
  "author": "jnury",
  "body": "Steps to reproduce\r\n------------------\r\nCreate a role capability file 'MyJEARole.psrc' in a folder 'RoleCapabilities' of a module.\r\nInstall the module in a version sub-folder inside your ModulePath i.e.: 'C:\\Program Files\\WindowsPowerShell\\Modules\\MyJEAModule\\0.1.0'.\r\nThe full path of the psrc file will be 'C:\\Program Files\\WindowsPowerShell\\Modules\\MyJEAModule\\0.1.0\\RoleCapabilities\\MyJEARole.psrc'.\r\nRefer to the role 'MyJEARole' in a pssc file and register the session configuration.\r\nTry enter the PSSession with the registered configuration.\r\n\r\nExpected behavior\r\n-----------------\r\nEnter-PSSession is successful (and the right capability file is applied)\r\n\r\nActual behavior\r\n---------------\r\nEnter-PSSession fails with the following message:\r\nCould not find the role capability, 'MyJEARole'. The role capability must be a file named 'MyJEARole.psrc' within a 'RoleCapabilities' directory in a module in the current module path.\r\n\r\nEnvironment data\r\n----------------\r\nPSVersion                      5.1.14409.1005\r\nPSEdition                      Desktop\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nBuildVersion                   10.0.14409.1005\r\nCLRVersion                     4.0.30319.42000\r\nWSManStackVersion              3.0\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\n\r\nNote\r\n----\r\nI think the problem comes from the function [GetRoleCapabilityPath](https://github.com/PowerShell/PowerShell/blob/master/src/System.Management.Automation/engine/remoting/fanin/InitialSessionStateProvider.cs#L1922) in src/System.Management.Automation/engine/remoting/fanin/InitialSessionStateProvider.cs. This function looks for the folder 'RoleCapabilities' only in the first level of folders in each ModulePath; so this function cannot find 'RoleCapabilities' if the module contains version(s) subfolder(s).\r\n\r\nBut... what if we have multiple versions of the same module with multiple versions of the psrc file? Currently the search function would stop at the first ocurence of the psrc file that would correspond to the oldest version of the module. Probably not the best behavior. Maybe we could specify the version of the module containing the psrc file with the ModulesToImport parameter in pssc file ?",
  "closed_at": "2017-04-12T16:10:03Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@jnury Thanks for you report!\r\nCould you please tests this with latest PowerShell Core version? ",
      "created_at": "2017-04-11T14:00:00Z",
      "updated_at": "2017-04-11T14:00:00Z"
    },
    {
      "author": "jnury",
      "author_association": "NONE",
      "body": "@iSazonov Hello,\r\nI was not able to test with the latest PowerShell Core version as the Register-PSSessionConfiguration function fails with: Register-PSSessionConfiguration : Operation is not valid due to the current state of the object.\r\nI created the WinRM endpoint with Install-PowerShellRemoting.ps1 (as described here: https://github.com/PowerShell/PowerShell/blob/master/docs/installation/windows.md#instructions-to-create-a-remoting-endpoint) and was able to connect to it but without JEA functionality. Is there a 'manual' describing how to setup a JEA endpoint on PowerShell Core?\r\n",
      "created_at": "2017-04-11T20:14:29Z",
      "updated_at": "2017-04-11T20:14:29Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "CC @PowerShell/area-security ",
      "created_at": "2017-04-11T23:00:13Z",
      "updated_at": "2017-04-11T23:00:13Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "@jnury This is a common complaint and has been mitigated with PR #3067.  With recent builds (v6.0.0-alpha.17 and later) you can now specify a specific file path(s) for psrc files using the new \"RoleCapabilityFiles\" keyword in the associated pssc file.\r\nFor example:\r\n```powershell\r\nRoleDefinitions = @{ 'CONTOSO\\SqlManaged' = @{ RoleCapabilityFiles = 'C:\\RoleCapability\\SqlManaged.psrc' } }\r\n```\r\nThis new keyword will also be in the next Windows built-in version of PowerShell but I am not sure when that release will be or what version it will be.",
      "created_at": "2017-04-12T16:08:39Z",
      "updated_at": "2017-04-12T16:08:39Z"
    },
    {
      "author": "jnury",
      "author_association": "NONE",
      "body": "RoleCapabilityFiles will be fine. Thanks a lot !",
      "created_at": "2017-04-12T21:01:04Z",
      "updated_at": "2017-04-12T21:01:04Z"
    }
  ],
  "created_at": "2017-04-10T20:34:26Z",
  "labels": [
    "Resolution-Fixed",
    "WG-Security"
  ],
  "number": 3522,
  "state": "closed",
  "title": "Role Capability file (.psrc) won't be found in a versioned module sub-folder",
  "updated_at": "2017-04-12T21:01:04Z"
}