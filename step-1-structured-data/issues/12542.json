{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12542",
  "author": "skycommand",
  "body": "# Bug summary\r\n\r\nThe `Repair-Volume` cmdlet adds explicit CR+LF at the end of each of every message in the Verbose stream. As a result, the verbose report is very difficult to read.\r\n\r\nThis issue is a regression from PowerShell 5.1. \r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\nRepair-Volume -DriveLetter D -Scan -Verbose\r\n```\r\n\r\n# Expected behavior\r\n\r\n```none\r\nVERBOSE: Volume label is \"Cayotte's plans to catch the roadrunner\".\r\nVERBOSE: Stage 1: Examining basic file system structure ...\r\nVERBOSE:\r\nVERBOSE:   ##### file records processed.\r\nVERBOSE: File verification completed.\r\nVERBOSE:\r\nVERBOSE:   # large file records processed.\r\nVERBOSE:\r\nVERBOSE:   # bad file records processed.\r\nVERBOSE: Stage 2: Examining file name linkage ...\r\nVERBOSE:\r\nVERBOSE:   #### reparse records processed.\r\nVERBOSE:\r\nVERBOSE:   ##### index entries processed.\r\nVERBOSE:\r\nVERBOSE: Index verification completed.\r\nVERBOSE:\r\nVERBOSE:   #### reparse records processed.\r\nVERBOSE: Stage 3: Examining security descriptors ...\r\nVERBOSE: Security descriptor verification completed.\r\nVERBOSE:\r\nVERBOSE:   ### data files processed.\r\nVERBOSE: CHKDSK is verifying Usn Journal...\r\nVERBOSE:\r\nVERBOSE:   ######## USN bytes processed.\r\nVERBOSE: Usn Journal verification completed.\r\nVERBOSE: Windows has scanned the file system and found no problems.\r\nVERBOSE: No further action is required.\r\nVERBOSE:   ######## KB total disk space.\r\nVERBOSE:   ######## KB in 5308 files.\r\nVERBOSE:   ######## KB in 724 indexes.\r\nVERBOSE:   ######## KB in use by the system.\r\nVERBOSE:   ######## KB occupied by the log file.\r\nVERBOSE:   ######## KB available on disk.\r\nVERBOSE:   ######## bytes in each allocation unit.\r\nVERBOSE:   ######## total allocation units on disk.\r\nVERBOSE:   ######## allocation units available on disk.\r\nNoErrorsFound\r\n```\r\n\r\n# Actual behavior\r\n\r\n```none\r\nVERBOSE: Volume label is \"Cayotte's plans to catch the roadrunner\".\r\nVERBOSE:\r\nVERBOSE: Stage 1: Examining basic file system structure ...\r\nVERBOSE:\r\nVERBOSE:\r\nVERBOSE:\r\nVERBOSE:   ##### file records processed.\r\nVERBOSE:\r\nVERBOSE: File verification completed.\r\nVERBOSE:\r\nVERBOSE:\r\nVERBOSE:\r\nVERBOSE:   # large file records processed.\r\nVERBOSE:\r\nVERBOSE:\r\nVERBOSE:\r\nVERBOSE:   # bad file records processed.\r\nVERBOSE:\r\nVERBOSE: Stage 2: Examining file name linkage ...\r\nVERBOSE:\r\nVERBOSE:\r\nVERBOSE:\r\nVERBOSE:   #### reparse records processed.\r\nVERBOSE:\r\nVERBOSE:\r\nVERBOSE:\r\nVERBOSE:   ##### index entries processed.\r\nVERBOSE:\r\nVERBOSE: Index verification completed.\r\nVERBOSE:\r\nVERBOSE:\r\nVERBOSE:\r\nVERBOSE:\r\nVERBOSE:\r\nVERBOSE:\r\nVERBOSE:\r\nVERBOSE:   #### reparse records processed.\r\nVERBOSE:\r\nVERBOSE: Stage 3: Examining security descriptors ...\r\nVERBOSE:\r\nVERBOSE: Security descriptor verification completed.\r\nVERBOSE:\r\nVERBOSE:\r\nVERBOSE:\r\nVERBOSE:   ### data files processed.\r\nVERBOSE:\r\nVERBOSE: CHKDSK is verifying Usn Journal...\r\nVERBOSE:\r\nVERBOSE:\r\nVERBOSE:\r\nVERBOSE:   ######## USN bytes processed.\r\nVERBOSE:\r\nVERBOSE: Usn Journal verification completed.\r\nVERBOSE:\r\nVERBOSE: Windows has scanned the file system and found no problems.\r\nVERBOSE:\r\nVERBOSE: No further action is required.\r\nVERBOSE:\r\nVERBOSE:   ######## KB total disk space.\r\nVERBOSE:\r\nVERBOSE:   ######## KB in 5308 files.\r\nVERBOSE:\r\nVERBOSE:   ######## KB in 724 indexes.\r\nVERBOSE:\r\nVERBOSE:   ######## KB in use by the system.\r\nVERBOSE:\r\nVERBOSE:   ######## KB occupied by the log file.\r\nVERBOSE:\r\nVERBOSE:   ######## KB available on disk.\r\nVERBOSE:\r\nVERBOSE:   ######## bytes in each allocation unit.\r\nVERBOSE:\r\nVERBOSE:   ######## total allocation units on disk.\r\nVERBOSE:\r\nVERBOSE:   ######## allocation units available on disk.\r\nVERBOSE:\r\nNoErrorsFound\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0\r\nOS                             Microsoft Windows 10.0.18363\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "/cc @anmenaga I guess it comes from WinCompat feature.",
      "created_at": "2020-05-01T18:13:20Z",
      "updated_at": "2020-05-01T18:13:20Z"
    },
    {
      "author": "anmenaga",
      "author_association": "CONTRIBUTOR",
      "body": "not related to WinCompat; at least `v2` of the `Storage` module declares compatibility with PS Core `    CompatiblePSEditions = @('Desktop', 'Core')` and is loaded directly into PS Core with repro:\r\n```powershell\r\n...\r\nVERBOSE:       4096 bytes in each allocation unit.\r\n\r\nVERBOSE:   58170335 total allocation units on disk.\r\n\r\nVERBOSE:   43118095 allocation units available on disk.\r\n\r\nNoErrorsFound\r\nPS C:\\> Get-Module -Name Storage\r\n\r\nModuleType Version    PreRelease Name                                ExportedCommands\r\n---------- -------    ---------- ----                                ----------------\r\nManifest   2.0.0.0               Storage                             {Add-InitiatorIdToMaskingSet, Add-PartitionAccessPath, Add-PhysicalDisk, Add-StorageFaultDomain\u2026}\r\n\r\nPS C:\\> (Get-Module -Name Storage).Path\r\nC:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules\\Storage\\Storage.psd1\r\n```\r\n\r\nLooks like CIM object is calling some native app and transimts its output as Verbose message. Here is a repro using CIM cmdlets:\r\n```powershell\r\n$VerbosePreference = 'Continue';\r\n$Volume = Get-CimInstance -Namespace \"root\\Microsoft\\Windows\\Storage\" -ClassName \"MSFT_Volume\" | Select-Object -First 1\r\nInvoke-CimMethod -InputObject $Volume -Arguments @{Scan=$True} -MethodName \"Repair\"\r\n```",
      "created_at": "2020-05-01T19:17:47Z",
      "updated_at": "2020-05-01T19:17:47Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Should we fix this in Engine? Escape '\\n' in verbose out?",
      "created_at": "2020-05-02T07:13:37Z",
      "updated_at": "2020-05-02T07:13:37Z"
    }
  ],
  "created_at": "2020-05-01T03:54:13Z",
  "labels": [
    "Issue-Question",
    "WG-Engine"
  ],
  "number": 12542,
  "state": "open",
  "title": "Repair-Volume adds explicit CR+LF at the end of each of every message in the Verbose stream",
  "updated_at": "2021-06-07T04:42:12Z"
}