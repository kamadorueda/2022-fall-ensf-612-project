{
  "_url": "https://github.com/PowerShell/PowerShell/issues/2095",
  "author": "nocentino",
  "body": "<!--\n\nIf it is a bug report:\n- make sure you are able to repro it on the latest released version. \nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\n- Search the existing issues.\n- Refer to the [FAQ](../docs/FAQ.md).\n- Refer to the [known issues](../docs/KNOWNISSUES.md).\n- Fill out the following repro template\n\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\n-->\n## Steps to reproduce\n\nCreate two files\n1. Simple shell script, name it **loop** and mark it executable\n2. Simple powershell script, name it **loop.ps1**\n## Expected behavior\n\nTyping ./loop should launch the program loop\n## Actual behavior\n\nWhen you type ./loop you would expect loop (the first file) to execute. It does not, in fact loop.ps1 executes.\n## Environment data\n\n<!-- provide the output of $PSVersionTable -->\n\n```\nName                           Value                                                                         \n----                           -----                                                                         \nPSVersion                      5.1.10032.0                                                                   \nPSEdition                      Linux                                                                         \nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}                                                       \nBuildVersion                   3.0.0.0                                                                       \nGitCommitId                    v0.6.0                                                                        \nCLRVersion                                                                                                   \nWSManStackVersion              1.0                                                                           \nPSRemotingProtocolVersion      2.3                                                                           \nSerializationVersion           1.1.0.1       \n```\n",
  "closed_at": "2017-10-24T00:54:29Z",
  "comments": [
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "Heads-up, I edited your comment to wrap `$PSVersionTable` in a code block. \n",
      "created_at": "2016-09-06T18:16:36Z",
      "updated_at": "2016-09-06T18:16:36Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "As far as the bug is concerned, that's definitely a problem, but I believe anything we do here is a breaking change that would need to be discussed. /cc @PowerShell/powershell-committee \n",
      "created_at": "2016-09-06T18:18:12Z",
      "updated_at": "2016-09-06T18:18:12Z"
    },
    {
      "author": "nocentino",
      "author_association": "NONE",
      "body": "Cool, however I can help please let me know. \n",
      "created_at": "2016-09-06T18:26:46Z",
      "updated_at": "2016-09-06T18:26:46Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "This essentially comes down to the ordering of the paths [here](https://github.com/PowerShell/PowerShell/pull/1048/files#diff-3647720a015098e93e335bc9631753c7R68), which @lzybkr, @JamesWTruher, and I [discussed](https://github.com/PowerShell/PowerShell/pull/1048#r64978707) but I guess came to the wrong conclusion. At least now, I totally agree that `foo` should be ordered before `foo.ps1` (and it before `foo.*`).\n",
      "created_at": "2016-09-19T21:48:25Z",
      "updated_at": "2016-09-19T21:48:25Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee reviewed this and since there is no extension (unlike Windows) to explicitly call the exe, we should make the change to call the native command first before the script\n",
      "created_at": "2016-11-02T23:49:48Z",
      "updated_at": "2016-11-02T23:49:48Z"
    }
  ],
  "created_at": "2016-08-27T12:47:52Z",
  "labels": [
    "Issue-Bug",
    "WG-Engine",
    "Issue-Discussion",
    "Resolution-Fixed",
    "Committee-Reviewed"
  ],
  "number": 2095,
  "state": "closed",
  "title": "Unexpected behavior in command execution when two files have the same basename.",
  "updated_at": "2017-10-24T03:26:45Z"
}