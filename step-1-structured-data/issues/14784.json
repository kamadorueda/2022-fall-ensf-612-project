{
  "_url": "https://github.com/PowerShell/PowerShell/issues/14784",
  "author": "Jaykul",
  "body": "## Summary of the new feature/enhancement\r\n\r\nAs a script author, I want to _shorten_ the repetitive line required to suppress ScriptAnalyzer rules.\r\n\r\nCurrently, every time I need to suppress a rule I end up with lines that over 120 characters long even without a justification, and shortening the type name from `System.Diagnostics.CodeAnalysis.SuppressMessageAttribute` would make a big difference.  You wouldn't think it happens that often, but since so many of the rules are very broad (e.g. flagging \"CredentialName\" as a \"PSAvoidUsingPlainTextForPassword\") I have to suppress things all the time, and it's a mite ridiculous:\r\n\r\n```PowerShell\r\n[Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSAvoidUsingPlainTextForPassword', '', Target='GitCredentialName', Justification='This is not a password')]\r\nparam(\r\n[Parameter(Mandatory)]\r\n$GitCredentialName\r\n)\r\n\r\n$Credential = Get-Secret $GitCredentialName\r\n```\r\n\r\n## Proposed technical implementation details (optional)\r\n\r\nAdd a built-in type alias for [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute]\r\n\r\nIdeally `[SuppressAnalyzer]` but I'll settle for `[SuppressMessage]` which is what I type now after adding a `using namespace System.Diagnostics.CodeAnalysis` at the top.\r\n\r\nOf courser, I'd be happy to settle for anything shorter, like \"BeQuiet\" or \"YeahIKnowBut\" ...\r\n\r\n### I don't think this can be handled in the PSScriptAnalyzer module\r\n\r\nIn order to avoid type not found errors, the type alias would need to be _built in_, since this attribute ends up applied to scripts and functions in every context.",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "SuppressMessageAttribute name is unique in .Net do I think it makes no sense to use another name.\r\n\r\nWe could add the accelerator to https://github.com/PowerShell/PowerShell/blob/750b2edec74eb9a8b5faafaedaed91d1df18f73c/src/System.Management.Automation/engine/parser/TypeResolver.cs#L724-L731",
      "created_at": "2021-02-13T06:39:42Z",
      "updated_at": "2021-02-13T10:44:53Z"
    },
    {
      "author": "Steg17",
      "author_association": "NONE",
      "body": "\ud83d\udc4c",
      "created_at": "2021-02-13T06:56:18Z",
      "updated_at": "2021-02-13T06:56:18Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "I'd propose to call this new type accelerator `SuppressMessageAttribute` to keep it as close as possible to the actual thing.\r\nI tested such a change and can confirm it works. I observed though that when using this type accelerator for PowerShell versions without this type accelerator , PSScriptAnalyzer does not throw but just ignored the attribute, I initially expected it to throw an error, not sure it this is what the behaviour should be and if this should be improved (I'd suggest to let PSSA emit a warning if it encounters that on an old PS version and in order to get it highlighted in the editor, PSSA should probably emit a diagnosticrecord as well on those versions similar to how it does for parsererrors).\r\nI opened a PR below.",
      "created_at": "2021-09-22T09:24:41Z",
      "updated_at": "2021-09-22T11:26:38Z"
    },
    {
      "author": "Jaykul",
      "author_association": "CONTRIBUTOR",
      "body": "Hypothetically, @bergmeister in the PSScriptAnalyzer module you can _also_ create the accelerator, so that the accelerator would work **whenever the module is loaded** regardless of the PowerShell version:\r\n\r\n```PowerShell\r\n$xlr8r = [psobject].assembly.gettype(\"System.Management.Automation.TypeAccelerators\")\r\n\r\nif ($xlr8r::AddReplace) {\r\n    $xlr8r::AddReplace(\"SuppressMessageAttribute\", [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute])\r\n} else {\r\n    $null = $xlr8r::Remove(\"SuppressMessageAttribute\")\r\n    $xlr8r::Add(\"SuppressMessageAttribute\", [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute])\r\n}\r\n```",
      "created_at": "2021-09-25T02:07:49Z",
      "updated_at": "2021-09-25T02:07:49Z"
    },
    {
      "author": "JamesWTruher",
      "author_association": "MEMBER",
      "body": "WG-Engine agrees this would be a welcome change and improve the interaction of analyzer, we've added WG-Security label to get their opinion as to any security implications of this change (since it would become a new \"well-known\" type).",
      "created_at": "2022-03-31T23:06:33Z",
      "updated_at": "2022-03-31T23:06:56Z"
    }
  ],
  "created_at": "2021-02-12T18:45:25Z",
  "labels": [
    "Issue-Enhancement",
    "WG-Engine",
    "Up-for-Grabs",
    "WG-Security"
  ],
  "number": 14784,
  "state": "open",
  "title": "Add SuppressAnalyzer type alias",
  "updated_at": "2022-03-31T23:07:03Z"
}