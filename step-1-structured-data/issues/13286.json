{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13286",
  "author": "xtqqczze",
  "body": "# PR Summary\r\n\r\n* `-replace '!= null',  'is not null'` for C# 9.0.\r\n* Enable C# 9.0 in `xUnit.tests`.\r\n\r\n## PR Context\r\n\r\nFollow-up #13277.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n\r\n<!-- Reviewable:start -->\r\n---\r\nThis change is\u2002[<img src=\"https://reviewable.io/review_button.svg\" height=\"34\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/powershell/powershell/13286)\r\n<!-- Reviewable:end -->\r\n",
  "closed_at": "2020-07-30T23:27:17Z",
  "comments": [
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov I think these changes should wait until we have updated code to use features available in C# 8, such as null operators and pattern matching.",
      "created_at": "2020-07-27T11:09:31Z",
      "updated_at": "2020-07-27T11:22:18Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "The pattern comes from C# 9.0 and is already enabled.",
      "created_at": "2020-07-27T11:56:55Z",
      "updated_at": "2020-07-27T11:56:55Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov What is mean is I think we should go for \"low-hanging fruit\" such as using null conditional access from C# 6.0 ([RCS1146](https://github.com/JosefPihrt/Roslynator/blob/master/docs/analyzers/RCS1146.md)) etc before making C# 9.0 changes.",
      "created_at": "2020-07-27T12:02:39Z",
      "updated_at": "2020-07-27T12:02:39Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov I have started work on related changes in #13286.",
      "created_at": "2020-07-27T12:06:41Z",
      "updated_at": "2020-07-27T12:06:51Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "Build failures seem to be because preview features not enabled in `xUnit.tests`.\r\n\r\nhttps://dev.azure.com/powershell/PowerShell/_build/results?buildId=58427&view=logs&j=ce47e5d9-6379-5300-b411-5c447691f9de&t=2718afa2-89c3-5dee-4660-3339d525f0c9&l=37\r\n\r\n```cmd\r\ncsharp/test_PSConfiguration.cs(100,47): error CS8652: The feature 'not pattern' is currently in Preview and *unsupported*. To use Preview features, use the 'preview' language version. [/Users/runner/work/1/s/test/xUnit/xUnit.tests.csproj]\r\n```",
      "created_at": "2020-07-27T16:00:28Z",
      "updated_at": "2020-07-27T16:00:28Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "You can exclude xUnit files from the PR or enable C# 9.0 in the csproj.",
      "created_at": "2020-07-27T17:28:22Z",
      "updated_at": "2020-07-27T17:28:22Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov If you would like, you can start to review, as we are not isolating C# 9.0 changes. This is already a huge PR so it seems to be the best plan. Any more changes can be in follow-up PR.",
      "created_at": "2020-07-27T19:21:18Z",
      "updated_at": "2020-07-27T19:21:18Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "Macos failures look like `Test-Connection` DNS issues related to #12935.",
      "created_at": "2020-07-29T21:09:56Z",
      "updated_at": "2020-07-29T21:09:56Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@xtqqczze Please rebase to pass CIs.",
      "created_at": "2020-07-30T13:00:41Z",
      "updated_at": "2020-07-30T13:00:41Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov Too many merge conflicts, I will push new commits rather then resolving.",
      "created_at": "2020-07-30T13:22:44Z",
      "updated_at": "2020-07-30T13:22:44Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "First rebase on 1f904e47d",
      "created_at": "2020-07-30T14:09:02Z",
      "updated_at": "2020-07-30T14:11:32Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "Second rebase fixes up.",
      "created_at": "2020-07-30T14:11:10Z",
      "updated_at": "2020-07-30T14:11:10Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@xtqqczze thanks for your efforts in cleaning up the code, but I don't think the `is not` language feature is for replacing `!= null`. There is nothing wrong using `!= null`. So I don't think we can merge this PR.\r\n",
      "created_at": "2020-07-30T16:51:24Z",
      "updated_at": "2020-07-30T16:54:01Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "@daxian-dbw This change was actually requested by @iSazonov (https://github.com/PowerShell/PowerShell/pull/13090#issuecomment-662232052). Are you against `is not` generally or just a huge change like this PR?",
      "created_at": "2020-07-30T17:10:38Z",
      "updated_at": "2020-07-30T17:10:38Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw What do you mean? The pattern \"is not null\" is for replacement `!(x is not null)` https://github.com/dotnet/roslyn/issues/42368",
      "created_at": "2020-07-30T17:46:16Z",
      "updated_at": "2020-07-30T17:46:16Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Quote from dotnet/roslyn#42368:\r\n> Add feature to convert from `!(x is null)` to `x is not null`\r\n\r\n@iSazonov That conversion makes sense. But most changes in this PR are converting `x != null` to `x is not null`, which is not what is suggested. Unlike `!(x is null)`, `x != null` is explicit and clear, it's conventional and there is no readability issue about it.\r\n\r\nEven the `!(x is null)` is pretty contrived. IMO, `is not` feature is for cases where we currently use `!(x is <a-type-name>)`.",
      "created_at": "2020-07-30T18:01:59Z",
      "updated_at": "2020-07-30T18:01:59Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw it's worth noting that `==` and `!=` operators can both (potentially) be overridden by a type with an implementation that returns unexpected results for a comparison with null; `x is not null` avoids this possibility.",
      "created_at": "2020-07-30T18:16:20Z",
      "updated_at": "2020-07-30T18:16:20Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@vexx32 Yes, there is such possibility, but I don't think it's practically a problem we need to concern about.",
      "created_at": "2020-07-30T18:46:40Z",
      "updated_at": "2020-07-30T18:46:40Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "Just to say that if `x` is a value type, `x != null` could result in undefined behaviour (see #13285 for examples). `x is not null` will result in a [compiler error](https://docs.microsoft.com/en-us/dotnet/csharp/misc/cs0037) instead .\r\n\r\n",
      "created_at": "2020-07-30T21:16:01Z",
      "updated_at": "2020-07-30T21:16:01Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@xtqqczze I agree that for value types, `x != null` can actually be considered a bug. I will review #13285 shortly. ",
      "created_at": "2020-07-30T23:17:03Z",
      "updated_at": "2020-07-30T23:17:03Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Given that #13277 is reverted, I will close this PR as well. The idea is the same as in https://github.com/PowerShell/PowerShell/pull/13277#issuecomment-666739038, that we shouldn't force `is not null` over `!= null` -- neither should be universally preferred; they are appropriate in different scenarios. ",
      "created_at": "2020-07-30T23:26:52Z",
      "updated_at": "2020-07-30T23:26:52Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "@daxian-dbw I have made `!(x is <a-type-name>)` changes in #13323\r\n\r\n",
      "created_at": "2020-07-30T23:43:25Z",
      "updated_at": "2020-07-30T23:43:25Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I think we should re-review this again since .Net team added new Roslyn analyzer to force using new syntax \"is null\" and \"is not\".",
      "created_at": "2020-10-16T04:18:54Z",
      "updated_at": "2020-10-16T04:18:54Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "> I think we should re-review this again since .Net team added new Roslyn analyzer to force using new syntax \"is null\" and \"is not\".\r\n\r\nYep, see https://github.com/dotnet/runtime/pull/42692",
      "created_at": "2020-10-22T14:49:10Z",
      "updated_at": "2020-10-22T14:49:10Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "We should wait until #13333 and #13338 are merged to avoid conflicts.",
      "created_at": "2020-10-26T17:37:07Z",
      "updated_at": "2020-10-26T18:09:14Z"
    }
  ],
  "created_at": "2020-07-27T11:04:56Z",
  "number": 13286,
  "state": "closed",
  "title": "Use `is not null` syntax",
  "updated_at": "2020-10-26T18:09:14Z"
}