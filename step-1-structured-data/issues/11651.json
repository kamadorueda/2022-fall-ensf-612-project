{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11651",
  "author": "mklement0",
  "body": "POSIX-like shells (but not `cmd.exe`) insert a _space_ after a completion if the assumption is that the completion results in a self-contained argument (to which you won't want to append further characters directly).\r\n\r\nTab-completing a _file_ path triggers appending a space (because a file path by definition ends there), whereas tab-completing a _directory_ path does not (as you may want to extend the path to target a file / dir. inside).\r\n\r\nPSReadline could employ the same logic and extend it to other token types, such as parameter names (where you almost always want a space to follow it).\r\n\r\nThis makes for a streamlined tab-completion experience.\r\n\r\nEven though you could end up with an extra space at the end of the command that way, that is generally _benign_.\r\n\r\nThis behavior could be controlled with a new option, and - ideally - become the default behavior.\r\n\r\nEnvironment data\r\n----------------\r\n\r\n```powershell\r\nPS version: 6.1.0-preview.4\r\nPSReadline version: 2.0.0-beta2\r\nos: 10.0.16299.15 (WinBuild.160101.0800)\r\nPS file version: 6.1.0\r\n```\r\n\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "segevfiner",
      "author_association": "NONE",
      "body": "Besides the default behavior that Bash, Zsh and other shells implement for this, note that their completion scripts often specify if a space shouldn't be added after a completion when needed. For example completing a long option such as `--file=`. In Bash this is done via the `nospace` completion option and in Zsh via `-S ''` though that is wrapped by a few layers of functions and the completion script often doesn't specify that directly.",
      "created_at": "2018-08-24T13:54:36Z",
      "updated_at": "2018-08-24T13:54:36Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "@segevfiner - you should open an issue in the PowerShell repo for `nospace` - PSReadLine is just one client of PowerShell completions, PowerShell Editor Services could also use this feature.",
      "created_at": "2018-08-24T15:58:51Z",
      "updated_at": "2018-08-24T15:58:51Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "This issue is transferred from the [PSReadLine](https://github.com/powershell/psreadline) repo. The proposed improvement on tab completion is better done in PowerShell so all tools around it can take advantage.",
      "created_at": "2020-01-21T21:12:55Z",
      "updated_at": "2020-01-21T21:13:05Z"
    },
    {
      "author": "brainplot",
      "author_association": "NONE",
      "body": "Any ETA on this? This is very annoying for those who use both POSIX shells and PowerShell extensively.",
      "created_at": "2021-09-20T16:54:18Z",
      "updated_at": "2021-09-20T16:54:41Z"
    }
  ],
  "created_at": "2018-08-05T19:46:04Z",
  "labels": [
    "Issue-Enhancement",
    "WG-Interactive-IntelliSense"
  ],
  "number": 11651,
  "state": "open",
  "title": "Suggestion: Append a space to tab-completions that can be assumed to form a self-contained argument",
  "updated_at": "2021-09-20T16:54:41Z"
}