{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10940",
  "author": "glennsarti",
  "body": "Currently when using `Set-Location` (or it's cd alias) the FileSystem provider will use the literal text that is entered.  For example:\r\n\r\nGiven a filesystem with following layout:\r\n\r\n``` text\r\nC:\\\r\n  |\r\n  + Users\r\n  + Windows\r\n```\r\n\r\nIssuing the following PowerShell commands results in:\r\n\r\n``` powershell\r\nPS C:\\> cd Users\r\nPS C:\\Users> cd ..\r\nPS C:\\> cd users\r\nPS C:\\users>\r\n```\r\n\r\nNote - The last command used the path `users` instead of the _actual_ name `Users`\r\n\r\nThis contrary to:\r\n\r\n* Using tab completion\r\nTab completion resolves to the name on disk\r\n\r\n* \"magic\" paths like tilde (`~`)\r\n\r\n``` powershell\r\nPS C:\\> cd ~\r\nPS C:\\Users\\glenn.sarti>\r\n```\r\n\r\n* 8.3 Alternate names\r\n\r\n``` powershell\r\nPS C:\\> cd C:\\progra~1\r\nPS C:\\Program Files>\r\n```\r\n\r\nThis can cause issues with child process creation, as the working directory passed to the child process, strictly speaking, does not exist.  This is proved simply by calling cmd.exe:\r\n\r\nGiven the filesystem layout example above (`C:\\Users` is the correct name, not `C:\\users`)\r\n\r\n``` powershell\r\nC:\\users> cmd.exe /c cd\r\nC:\\users\r\n```\r\n\r\nNote that cmd.exe outputs the \"invalid\" directory of `C:\\users`\r\n\r\nNote that, while strictly the fault of PowerShell, I have seen other cross-platform tools behave in strange ways (for example Ruby and NodeJS) where they are performing file path operations and raise errors because the current working directory is not what is on disk.\r\n\r\n---\r\n\r\nThis appears to be \"fixed\" in PowerShell 7.x via https://github.com/PowerShell/PowerShell/pull/9250.  This issue is to backport these fixes into PowerShell 6.x",
  "closed_at": "2019-11-08T00:00:19Z",
  "comments": [
    {
      "author": "glennsarti",
      "author_association": "NONE",
      "body": "Cross reference - https://github.com/PowerShell/PowerShell-RFC/pull/232",
      "created_at": "2019-10-30T03:00:39Z",
      "updated_at": "2019-10-30T03:00:39Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "A rule is to backport only security and critical fixes.",
      "created_at": "2019-10-30T05:49:21Z",
      "updated_at": "2019-10-30T05:49:21Z"
    },
    {
      "author": "glennsarti",
      "author_association": "NONE",
      "body": "@rjmholt Suggested I raise this here instead of the RFC I proposed.  Also, I can find no reference to the rule you suggested in the Contributing guide. Are you able to provide a link to this rule for the PowerShell repository?\r\n\r\nPerhaps backport is the wrong word, Feature Request then.",
      "created_at": "2019-11-01T07:46:11Z",
      "updated_at": "2019-11-01T07:46:11Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@glennsarti Your request is in right place but MSFT has the policy for backporting commits - backport only security and critical fixes. I think your request does not fall under this rule.\r\n\r\nFor personal uses you can use current 7.0 preview version. 7.0 LTS GA is planned on January, 2020.\r\n\r\n/cc @SteveL-MSFT ",
      "created_at": "2019-11-01T10:37:41Z",
      "updated_at": "2019-11-01T10:37:54Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov is correct, we only make security and critical (blocking) fixes in already released versions.  This particular issue would not meet that bar.",
      "created_at": "2019-11-06T18:09:55Z",
      "updated_at": "2019-11-06T18:09:55Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2019-11-08T00:00:18Z",
      "updated_at": "2019-11-08T00:00:18Z"
    }
  ],
  "created_at": "2019-10-30T03:00:13Z",
  "number": 10940,
  "state": "closed",
  "title": "Backport PR #9250 into PowerShell 6.x",
  "updated_at": "2019-11-08T00:00:19Z"
}