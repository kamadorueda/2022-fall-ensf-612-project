{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11109",
  "author": "chriskuech",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n\r\n-->\r\n\r\nI have a custom module that contains a class and some functions using that type.  I am able to use this module without issue, except in one single script.  All the script does is import the module with a relative path and invokes a function from that module, but the function throws the error below, somehow not having access to the type even though the type is confirmed to be imported into the session.  When I import the module into my session prior to running the script, there is no issue.  **When I try and simplify my script and module into the minimal repro steps described below, I am unable to repro.**  If someone messages me on Teams, I can show you our repos so you can repro; otherwise, please let me know of any further debug steps I can try and take to further isolate this weird bug.\r\n\r\n# Steps to reproduce\r\nRead the paragraph above!\r\n\r\n1. Create a module `MyModule`.\r\n    1. Create a script `MyModule.Types.ps1` containing--\r\n        ```powershell\r\n        class MyType {}\r\n        ```\r\n    1. Create a file `MyModule.psm1` containing--\r\n        ```powershell\r\n        function Show-MyType {\r\n            Param([MyType]$MyVal)\r\n            Write-Host $MyVal\r\n        }\r\n        ```\r\n    1. Set in the module manifest\r\n        ```powershell\r\n        RootModule = 'MyModule.psm1'\r\n        ScriptsToProcess = @( 'MyModule.Types.ps1' )\r\n        FunctionsToExport = @( 'New-MyType' )\r\n        ```\r\n1. Create a script\r\n    ```powershell\r\n    $ModulePath = \"relative path to the module\"\r\n    Import-Module $ModulePath\r\n\r\n    $myVal = [MyType]::new()\r\n    Show-MyType $myVal\r\n    ```\r\n\r\n# Expected behavior\r\n\r\nThe script runs without error.\r\n\r\n# Actual behavior\r\n\r\nThrows\r\n```none\r\nShow-MyType : Unable to find type [Cluster].\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.2.3\r\nPSEdition                      Core\r\nGitCommitId                    6.2.3\r\nOS                             Microsoft Windows 10.0.18363 \r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u0393\u00c7\u00aa}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n```\r\n",
  "closed_at": "2020-02-01T12:00:11Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@chriskuech out of curiosity, is the offending type in your actual module an attribute?",
      "created_at": "2019-11-19T02:17:02Z",
      "updated_at": "2019-11-19T02:17:02Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "It's due to using `ScriptsToProcess` to try to get around class import issues.  The import script runs in the current scope of the global session state.  That scope will be your script.  Once that script finishes, the class goes out of scope.  That's why if you follow your repro exactly, it'll work *once*.  The `ScriptsToProcess` will only fire when *actually* importing the module, if the module is already in the session then nothing happens. Try the `using module` method instead.",
      "created_at": "2019-11-19T16:34:40Z",
      "updated_at": "2019-11-19T16:34:40Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "> The ScriptsToProcess will only fire when actually importing the module, if the module is already in the session then nothing happens.\r\n\r\nThis problematic behavior is the subject of #9582.",
      "created_at": "2019-11-19T18:02:19Z",
      "updated_at": "2019-11-19T18:02:19Z"
    },
    {
      "author": "chriskuech",
      "author_association": "NONE",
      "body": "@vexx32 - it's not an attribute\r\n\r\n@SeeminglyScience , @mklement0 - I don't think that is the behavior I am describing.  In my simplified repro I can run it as many times as I want because the type is already defined in scope, whereas I can't even run it once in my actual code.  This seems to be mitigated if I dot-source my `ScriptsToProcess` script in my module.",
      "created_at": "2019-11-19T19:00:16Z",
      "updated_at": "2019-11-19T19:00:16Z"
    },
    {
      "author": "chriskuech",
      "author_association": "NONE",
      "body": "Does PowerShell team have plans or a GitHub issue to switch over to an import system more like Python or TypeScript?",
      "created_at": "2019-11-19T19:07:13Z",
      "updated_at": "2019-11-19T19:07:13Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "> @SeeminglyScience , @mklement0 - I don't think that is the behavior I am describing. In my simplified repro I can run it as many times as I want because the type is already defined in scope, whereas I can't even run it once in my actual code. This seems to be mitigated if I dot-source my `ScriptsToProcess` script in my module.\r\n\r\nThe repro in your original message works?  If that's not what you're referring to, if you provide the code you're working with I can tell you why it does or does not work.\r\n\r\n> Does PowerShell team have plans or a GitHub issue to switch over to an import system more like Python or TypeScript?\r\n\r\nHave you tried `using module`? I think that's about as similar as PowerShell can reasonably achieve (excluding bugs).",
      "created_at": "2019-11-19T19:22:40Z",
      "updated_at": "2019-11-19T19:22:40Z"
    },
    {
      "author": "chriskuech",
      "author_association": "NONE",
      "body": "`using module` does seem to work (didn't realize it would work with `ScriptsToProcess`.  It's not ideal though, because `using module` only works with relative paths, so my script is now coupled to being run from a single location.",
      "created_at": "2019-11-20T20:28:29Z",
      "updated_at": "2019-11-20T20:28:29Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "`using module` works for any module you have installed / available on `$env:PSModulePath` as far as I'm aware? \ud83e\udd14 ",
      "created_at": "2019-11-20T20:49:46Z",
      "updated_at": "2019-11-20T20:49:46Z"
    },
    {
      "author": "chriskuech",
      "author_association": "NONE",
      "body": "Ya it's not in `$env:PSModulePath`.  Future work to take on but would currently break things.",
      "created_at": "2019-11-20T20:51:24Z",
      "updated_at": "2019-11-20T20:51:24Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "> `using module` does seem to work (didn't realize it would work with `ScriptsToProcess`. It's not ideal though, because `using module` only works with relative paths, so my script is now coupled to being run from a single location.\r\n\r\n*With* `ScriptstoProcess`? The idea would be to use it *instead of* `ScriptsToProcess`.  You'd put the classes in your `psm1` and use `using module` in the scripts that utilize the classes.  The whole `ScriptsToProcess` thing with classes is something someone came up with as a hack to get around scoping issues, but really it just moves them around and makes it less predictable. But if it works, it works \ud83e\udd37\u200d\u2642 \r\n",
      "created_at": "2019-11-20T21:48:31Z",
      "updated_at": "2019-11-20T21:48:31Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2020-02-01T12:00:11Z",
      "updated_at": "2020-02-01T12:00:11Z"
    }
  ],
  "created_at": "2019-11-19T00:46:14Z",
  "labels": [
    "Issue-Question",
    "Resolution-Answered"
  ],
  "number": 11109,
  "state": "closed",
  "title": "Type is not being imported script",
  "updated_at": "2020-02-01T12:00:11Z"
}