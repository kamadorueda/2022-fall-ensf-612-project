{
  "_url": "https://github.com/PowerShell/PowerShell/issues/16592",
  "author": "Herr-Sepp",
  "body": "### Prerequisites\r\n\r\n- [X] Write a descriptive title.\r\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- [X] Search the existing issues.\r\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\r\n\r\n### Steps to reproduce\r\n\r\nSomehow i need to escape \"--\" but not other Unary Operator like \"++\"\r\n\r\n```\r\ntrace-command -PSHOST -Name ParameterBinding { npm cy:run -- --headless }\r\ntrace-command -PSHOST -Name ParameterBinding { npm cy:run ++ --headless }\r\n```\r\n\r\n_npm cy:run -- --headless_   : pass not the argument \"--\"\r\nbut \r\n_npm cy:run ++ --headless_ : pass the argument \"++\" correctly\r\n\r\neven \r\n_npm cy:run --% -- --headless_ does not work\r\n\r\nWe need to escape \"--\"\r\nnpm  cy:run `-- --headless\r\nor \r\nnpm  cy:run \"--\" --headless\r\n\r\nUnfortunately, even the new experimental feature (PSNativeCommandArgumentPassing) does not help.\r\n\r\n### Expected behavior\r\n\r\n```console\r\nSame behavior of both commands\r\n```\r\n\r\n\r\n### Actual behavior\r\n\r\n```console\r\nDEBUG: 2021-12-10 15:43:36.5636 ParameterBinding Information: 0 :     BIND argument [C:\\Users\\admin\\AppData\\Roaming\\npm/node_modules/pnpm/bin/pnpm.cjs cy:run --headless]\r\n\r\nDEBUG: 2021-12-10 15:44:02.5597 ParameterBinding Information: 0 :     BIND argument [C:\\Users\\admin\\AppData\\Roaming\\npm/node_modules/pnpm/bin/pnpm.cjs cy:run ++ --headless]\r\n```\r\n\r\n\r\n### Error details\r\n\r\n_No response_\r\n\r\n### Environment data\r\n\r\n```powershell\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.0\r\nPSEdition                      Core\r\nGitCommitId                    7.2.0\r\nOS                             Microsoft Windows 10.0.19043\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\n\r\n### Visuals\r\n\r\n_No response_",
  "closed_at": null,
  "comments": [
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "The arguments `cy:run -- --headless` are passed in as expected when I'm testing it with the `testexe -echoargs` (source code at https://github.com/PowerShell/PowerShell/blob/master/test/tools/TestExe/TestExe.cs, where anyone can build and use):\r\n```\r\nPS:52> trace-command -PSHOST -Name ParameterBinding { .\\testexe.exe cy:run -- --headless }\r\nDEBUG: 2021-12-10 11:08:11.6263 ParameterBinding Information: 0 : BIND NAMED native application line args [C:\\arena\\source\\PowerShell\\test\\tools\\TestExe\\bin\\Debug\\net6.0\\testexe.exe]\r\nDEBUG: 2021-12-10 11:08:11.6267 ParameterBinding Information: 0 :     BIND argument [cy:run -- --headless]\r\nDEBUG: 2021-12-10 11:08:11.6313 ParameterBinding Information: 0 : CALLING BeginProcessing\r\n```\r\n```\r\nPS:53> .\\testexe.exe -echoargs cy:run -- --headless\r\nArg 0 is <cy:run>\r\nArg 1 is <-->\r\nArg 2 is <--headless>\r\n```\r\n\r\n@Herr-Sepp Are you sure you ran into this on 7.2.0? If so, did you enable the `PSNativeCommandArgumentPassing` experimental feature? /cc @JamesWTruher \r\n",
      "created_at": "2021-12-10T19:11:34Z",
      "updated_at": "2021-12-10T19:11:48Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@SeeminglyScience brought up an interesting point -- NPM has started using PowerShell scripts to handle some of its shims. So this means that in a case like this, the args might be getting passed through PowerShell _twice_ -- once from your original console, and then a second time when the args are processed by the script shim.\r\n\r\nCan you try to see whether `npm cy:run --% --% -- --headless` works here? If that's the case, NPM might need to do something about how their shims are handled to make sense of this.\r\n\r\n`--` is a special argument parsing operator for PowerShell scripts that disables named parameter binding. For example, `Write-Output -- -InputObject Test` will pass the strings `-InputObject` and `Test` to the cmdlet, rather than targeting the `InputObject` parameter.",
      "created_at": "2022-05-12T20:58:25Z",
      "updated_at": "2022-05-12T21:03:10Z"
    },
    {
      "author": "Herr-Sepp",
      "author_association": "NONE",
      "body": "I can't recreate it with npm anymore.\r\nBut with another node package manager (pnpm) I still see the behavior.\r\n\r\nFor the sake of completeness here are the necessary steps:\r\n\r\n1. Install nodejs (v14.19.2 for me)\r\n2. Install pnpm:  npm install -g pnpm@latest-6\r\n3. Create a file \"package.json\"\r\n`{\r\n  \"name\": \"test\",\r\n  \"scripts\": {\r\n    \"say_hi\": \"node -e console.log('Hi')\"\r\n  }\r\n}\r\n`\r\n4. run say_hi with pnpm and add parameter --version (should only print nodejs version)\r\n\r\n```\r\npnpm say_hi --version\r\npnpm say_hi -- --version\r\npnpm say_hi --% -- --version\r\npnpm say_hi --% --% -- --version\r\n>> node -e console.log('Hi')\r\n```\r\n\r\nDoes not work \"--version\" is not send to node.exe\r\n\r\n```\r\npnpm say_hi `-- --version\r\n>> node -e console.log('Hi') \"--version\"\r\n```\r\nWorks\r\n\r\n\r\nFull trace-command for \"pnpm say_hi -- --version\"\r\n```\r\ntrace-command -PSHOST -Name ParameterBinding { pnpm say_hi -- --version }\r\n\r\nParameterBinding Information: 0 : BIND NAMED cmd line args [Split-Path]\r\nParameterBinding Information: 0 :     BIND arg [True] to parameter [Parent]\r\nParameterBinding Information: 0 :         COERCE arg to [System.Management.Automation.SwitchParameter]\r\nParameterBinding Information: 0 :             Parameter and arg types the same, no coercion is needed.\r\nParameterBinding Information: 0 :         BIND arg [True] to param [Parent] SUCCESSFUL\r\nParameterBinding Information: 0 : BIND POSITIONAL cmd line args [Split-Path]\r\nParameterBinding Information: 0 :     BIND arg [C:\\Users\\admin\\AppData\\Roaming\\npm\\pnpm.ps1] to parameter [Path]\r\nParameterBinding Information: 0 :         Binding collection parameter Path: argument type [String], parameter type [System.String[]], collection type Array, element type [System.String], no coerceElementType\r\nParameterBinding Information: 0 :         Creating array with element type [System.String] and 1 elements\r\nParameterBinding Information: 0 :         Argument type String is not IList, treating this as scalar\r\nParameterBinding Information: 0 :         Adding scalar element of type String to array position 0\r\nParameterBinding Information: 0 :         BIND arg [System.String[]] to param [Path] SUCCESSFUL\r\nParameterBinding Information: 0 : BIND cmd line args to DYNAMIC parameters.\r\nParameterBinding Information: 0 : MANDATORY PARAMETER CHECK on cmdlet [Split-Path]\r\nParameterBinding Information: 0 : CALLING BeginProcessing\r\nParameterBinding Information: 0 : CALLING EndProcessing\r\nParameterBinding Information: 0 : BIND NAMED cmd line args [Test-Path]\r\nParameterBinding Information: 0 : BIND POSITIONAL cmd line args [Test-Path]\r\nParameterBinding Information: 0 :     BIND arg [C:\\Users\\admin\\AppData\\Roaming\\npm/node.exe] to parameter [Path]\r\nParameterBinding Information: 0 :         Binding collection parameter Path: argument type [String], parameter type [System.String[]], collection type Array, element type [System.String], no coerceElementType\r\nParameterBinding Information: 0 :         Creating array with element type [System.String] and 1 elements\r\nParameterBinding Information: 0 :         Argument type String is not IList, treating this as scalar\r\nParameterBinding Information: 0 :         Adding scalar element of type String to array position 0\r\nParameterBinding Information: 0 :         BIND arg [System.String[]] to param [Path] SUCCESSFUL\r\nParameterBinding Information: 0 : BIND cmd line args to DYNAMIC parameters.\r\nParameterBinding Information: 0 :     DYNAMIC parameter object: [Microsoft.PowerShell.Commands.FileSystemItemProviderDynamicParameters]\r\nParameterBinding Information: 0 : MANDATORY PARAMETER CHECK on cmdlet [Test-Path]\r\nParameterBinding Information: 0 : CALLING BeginProcessing\r\nParameterBinding Information: 0 : CALLING EndProcessing\r\nParameterBinding Information: 0 : BIND NAMED native application line args [C:\\Program Files\\nodejs\\node.exe]\r\nParameterBinding Information: 0 :     BIND argument [C:\\Users\\admin\\AppData\\Roaming\\npm/node_modules/pnpm/bin/pnpm.cjs say_hi --version]\r\nParameterBinding Information: 0 : CALLING BeginProcessing\r\n```\r\nFull trace-commmand for \"pnpm say_hi `-- --version\"\r\n\r\n```\r\nParameterBinding Information: 0 : BIND NAMED cmd line args [Split-Path]\r\nParameterBinding Information: 0 :     BIND arg [True] to parameter [Parent]\r\nParameterBinding Information: 0 :         COERCE arg to [System.Management.Automation.SwitchParameter]\r\nParameterBinding Information: 0 :             Parameter and arg types the same, no coercion is needed.\r\nParameterBinding Information: 0 :         BIND arg [True] to param [Parent] SUCCESSFUL\r\nParameterBinding Information: 0 : BIND POSITIONAL cmd line args [Split-Path]\r\nParameterBinding Information: 0 :     BIND arg [C:\\Users\\admin\\AppData\\Roaming\\npm\\pnpm.ps1] to parameter [Path]\r\nParameterBinding Information: 0 :         Binding collection parameter Path: argument type [String], parameter type [System.String[]], collection type Array, element type [System.String], no coerceElementType\r\nParameterBinding Information: 0 :         Creating array with element type [System.String] and 1 elements\r\nParameterBinding Information: 0 :         Argument type String is not IList, treating this as scalar\r\nParameterBinding Information: 0 :         Adding scalar element of type String to array position 0\r\nParameterBinding Information: 0 :         BIND arg [System.String[]] to param [Path] SUCCESSFUL\r\nParameterBinding Information: 0 : BIND cmd line args to DYNAMIC parameters.\r\nParameterBinding Information: 0 : MANDATORY PARAMETER CHECK on cmdlet [Split-Path]\r\nParameterBinding Information: 0 : CALLING BeginProcessing\r\nParameterBinding Information: 0 : CALLING EndProcessing\r\nParameterBinding Information: 0 : BIND NAMED cmd line args [Test-Path]\r\nParameterBinding Information: 0 : BIND POSITIONAL cmd line args [Test-Path]\r\nParameterBinding Information: 0 :     BIND arg [C:\\Users\\admin\\AppData\\Roaming\\npm/node.exe] to parameter [Path]\r\nParameterBinding Information: 0 :         Binding collection parameter Path: argument type [String], parameter type [System.String[]], collection type Array, element type [System.String], no coerceElementType\r\nParameterBinding Information: 0 :         Creating array with element type [System.String] and 1 elements\r\nParameterBinding Information: 0 :         Argument type String is not IList, treating this as scalar\r\nParameterBinding Information: 0 :         Adding scalar element of type String to array position 0\r\nParameterBinding Information: 0 :         BIND arg [System.String[]] to param [Path] SUCCESSFUL\r\nParameterBinding Information: 0 : BIND cmd line args to DYNAMIC parameters.\r\nParameterBinding Information: 0 :     DYNAMIC parameter object: [Microsoft.PowerShell.Commands.FileSystemItemProviderDynamicParameters]\r\nParameterBinding Information: 0 : MANDATORY PARAMETER CHECK on cmdlet [Test-Path]\r\nParameterBinding Information: 0 : CALLING BeginProcessing\r\nParameterBinding Information: 0 : CALLING EndProcessing\r\nParameterBinding Information: 0 : BIND NAMED native application line args [C:\\Program Files\\nodejs\\node.exe]\r\nParameterBinding Information: 0 :     BIND argument [C:\\Users\\admin\\AppData\\Roaming\\npm/node_modules/pnpm/bin/pnpm.cjs say_hi -- --version]\r\nParameterBinding Information: 0 : CALLING BeginProcessing\r\n```\r\n",
      "created_at": "2022-05-17T17:02:33Z",
      "updated_at": "2022-05-17T17:02:33Z"
    }
  ],
  "created_at": "2021-12-10T14:57:18Z",
  "number": 16592,
  "state": "open",
  "title": "Unary Operator \"--\" need to be escaped as native command argument",
  "updated_at": "2022-05-17T17:02:34Z"
}