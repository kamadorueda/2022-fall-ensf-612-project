{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6757",
  "author": "tessierp",
  "body": "I recently came accross a problem designing a powershell core cmdlet where it couldn'T load an assembly. The CmdLet I designed uses a package that requires Newtonsoft Json version 11.0.2. When I ran the command, I got this error message :\r\n\r\nAn exception occured while processing : <Could not load file or assembly 'Newtonsoft.Json, Version=11.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed'. Could not find or load a specific file. (Exception from HRESULT: 0x80131621)>, <System.IO.FileLoadException: Could not load file or assembly 'Newtonsoft.Json, Version=11.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed'.\r\n\r\nSo I thought, it must be seeing another version somewhere somehow or it is not executing the Cmdlet in the directory where my assembly is. So I proceeded to set the working directory but that didn't help at all.\r\n\r\nAfter doing some research I found out that Powershell Core uses Newtonsoft Json version 10.0.3. When I replaced that DLL with version 11.0.2, my CmdLet worked perfectly.\r\n\r\nSo it would see that when we Import a module, it will first look in the powershell core's executable path first for the DLLs it needs and then my assembly's directory.  I haven't seen anywhere a way to override this.\r\n\r\nOr perhaps there is a better way I could solve this problem. I would appreciate to have some feedback regarding this.\r\n\r\nThanks",
  "closed_at": "2018-04-27T18:51:40Z",
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Dupe of https://github.com/PowerShell/PowerShell/issues/2083",
      "created_at": "2018-04-27T18:51:40Z",
      "updated_at": "2018-04-27T18:51:40Z"
    }
  ],
  "created_at": "2018-04-27T17:16:19Z",
  "number": 6757,
  "state": "closed",
  "title": "Powershell Core doesn't load the right assemblies",
  "updated_at": "2018-04-27T18:51:41Z"
}