{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12751",
  "author": "he852100",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 and PowerShell 7+ issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6).\r\n\r\n-->\r\nDo not receive any input\r\n# Steps to reproduce\r\n\r\n```powershell\r\n123456\r\n```\r\n\r\n# Expected behavior\r\n\r\n```none\r\n123456\r\n```\r\n\r\n# Actual behavior\r\n\r\n```none\r\nNull \r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nwin 7.0.1\r\nsystem server1909\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Please provide a more thorough issue description and reproduction steps.",
      "created_at": "2020-05-22T03:19:49Z",
      "updated_at": "2020-05-22T03:19:49Z"
    },
    {
      "author": "he852100",
      "author_association": "NONE",
      "body": "![20200522_151356](https://user-images.githubusercontent.com/26913892/82641560-1c4e7d00-9c3f-11ea-8d0f-d957ddc6782c.gif)\r\n",
      "created_at": "2020-05-22T07:16:02Z",
      "updated_at": "2020-05-22T07:16:02Z"
    },
    {
      "author": "he852100",
      "author_association": "NONE",
      "body": "Not compatible with rdp10",
      "created_at": "2020-05-22T07:30:04Z",
      "updated_at": "2020-05-22T07:30:04Z"
    },
    {
      "author": "brogdonm",
      "author_association": "NONE",
      "body": "> Not compatible with rdp10\r\n\r\nI am seeing the same thing. I have a Windows 10 box, with `pwsh v7.0.1` installed. If I use `Remote Desktop 10.3.11` on MacOS 10.15.4 to remote into the Windows 10 machine and do:\r\n\r\n* WIN+R\r\n* `pwsh` and enter\r\n\r\nIf I type nothing shows up in the window. I can hit the `<enter>` key and it will do a newline. \r\n\r\nBut if I open `cmd.exe` or the older `powershell.exe` then the keyboard works fine.",
      "created_at": "2020-05-25T03:54:46Z",
      "updated_at": "2020-05-25T03:54:46Z"
    },
    {
      "author": "brogdonm",
      "author_association": "NONE",
      "body": "> Please provide a more thorough issue description and reproduction steps.\r\n\r\n@vexx32 I'm pretty sure I see the same thing @he852100 mentions.",
      "created_at": "2020-05-25T03:57:33Z",
      "updated_at": "2020-05-25T03:57:33Z"
    },
    {
      "author": "jbyway",
      "author_association": "NONE",
      "body": "Seems to be reproducible in a Win10 session when connecting via HTML5 client to a remote Windows Virtual Desktop session. \r\n\r\nUsing the Windows Virtual Desktop Windows client pwsh v7.0.1 can receive inputs normally but when using the HTML5 client it fails to pass any input outside of CTRL-V or Enter",
      "created_at": "2020-05-27T23:53:03Z",
      "updated_at": "2020-05-27T23:53:03Z"
    },
    {
      "author": "ferdnyc",
      "author_association": "NONE",
      "body": "I'm using Remmina (Linux remote-session client) to a Windows 10 Pro 21H2 system via Remmina's RDP plugin (HTTP transport), and exactly the same. Input works to any other program without issue. \r\n\r\nRunning `pwsh.exe` (version 7.2.1), either in a newly-launched Windows Terminal window, or by executing it from the command prompt of an existing `cmd.exe` session, results in no response to any of the normally-echoed basic ASCII command line characters.\r\n\r\nThe <kbd>Enter</kbd> key works, <kbd>Ctrl</kbd> combinations seem to work, keyboard paste via <kbd>Shift</kbd>+<kbd>Insert</kbd>works, <kbd>PgUp</kbd>/<kbd>PgDn</kbd> work... it's just the shell prompt itself that seems to be ignoring most attempts to communicate with it.\r\n\r\nPasting in a command line and typing <kbd>Enter</kbd> **DOES** execute the pasted command, if that's any help.\r\n",
      "created_at": "2022-01-14T15:31:48Z",
      "updated_at": "2022-01-14T15:34:10Z"
    },
    {
      "author": "ferdnyc",
      "author_association": "NONE",
      "body": "> Running `pwsh.exe` (version 7.2.1), either in a newly-launched Windows Terminal window\r\n\r\nSorry, not Windows Terminal. That runs Windows PowerShell, and encourages me to upgrade to PowerShell 6. PowerShell _7_ executes under the Console Window Host.",
      "created_at": "2022-01-14T15:44:32Z",
      "updated_at": "2022-01-14T15:44:32Z"
    },
    {
      "author": "ferdnyc",
      "author_association": "NONE",
      "body": "Unfortunately, no changes following the 7.2.2 update. \ud83d\ude1e ",
      "created_at": "2022-04-28T08:39:47Z",
      "updated_at": "2022-04-28T08:39:47Z"
    },
    {
      "author": "pr1malc0de",
      "author_association": "NONE",
      "body": "Any progress on this? Thanks",
      "created_at": "2022-05-11T13:40:46Z",
      "updated_at": "2022-05-11T13:40:46Z"
    },
    {
      "author": "committingnerdery",
      "author_association": "NONE",
      "body": "I'm experiencing this issue using Microsoft Remote Desktop 10.7.7 from a Mac to a Windows 10 20H2 vm.\r\nWindows Powershell 5.1 works fine.  Powershell 7.2.5 in Windows Terminal works fine.\r\n\r\n`pwsh.exe` (7.2.5) run directly or from `cmd.exe` results in keyboard input not being recognized (happens with most characters, some special keys like <kbd>Enter</kbd>, <kbd>PgUp</kbd>, <kbd>PgDn</kbd>, <kbd>Home</kbd>, <kbd>End</kbd> function as expected).  Commands can be copy/pasted and they work.\r\nRunning `pwsh.exe -NonInteractive` fixes the keyboard issue but limits usability.",
      "created_at": "2022-06-30T14:44:34Z",
      "updated_at": "2022-06-30T14:44:34Z"
    },
    {
      "author": "nentibusarchitectura",
      "author_association": "NONE",
      "body": "I'm experiencing a similar problem on a brand new install of Windows Server 2022 21H2, I can type anywhere on notepad, cmd.exe, etc.\r\n\r\nHowever as soon as I type: \"powershell\" and powershell is running I can't type on the window, same if I start powershell on its own. In my case I'm accessing the Win2022 instance via another Windows 2019 server acting as a bastion. So The full chain is Linux/Remmina->Windows Server 2019->Windows Server 2022.\r\n\r\nThe workaround I'm using is copying and pasting from notepad and/or using the on-screen-keyboard of the Win2019 box.\r\n\r\nHope this helps.",
      "created_at": "2022-07-19T16:49:49Z",
      "updated_at": "2022-07-19T16:51:32Z"
    },
    {
      "author": "nentibusarchitectura",
      "author_association": "NONE",
      "body": "And even more bizarre, if I run an interactive powershell script the powershell console (running powershell via cmd.exe) accepts input normally as soon as the script ends the console stops accepting input.",
      "created_at": "2022-07-19T17:04:51Z",
      "updated_at": "2022-07-19T17:04:51Z"
    },
    {
      "author": "barrybingo",
      "author_association": "NONE",
      "body": "I had this issue and fixed it via a Remmina preference change.\r\n\r\nRemmina Preferences -> RDP -> untick \"use client keyboard mapping\"\r\n\r\nAlso have confirmed that re-ticking the option causes the problem to come back\r\n",
      "created_at": "2022-07-26T10:15:43Z",
      "updated_at": "2022-07-26T10:15:43Z"
    },
    {
      "author": "ngcdev",
      "author_association": "NONE",
      "body": "I was experiencing the same issue. The fix suggested by @barrybingo above fixed it for me. Thanks!\r\n\r\n> I had this issue and fixed it via a Remmina preference change.\r\n> \r\n> Remmina Preferences -> RDP -> untick \"use client keyboard mapping\"\r\n> \r\n> Also have confirmed that re-ticking the option causes the problem to come back\r\n\r\n",
      "created_at": "2022-09-07T20:57:17Z",
      "updated_at": "2022-09-07T20:57:17Z"
    },
    {
      "author": "ferdnyc",
      "author_association": "NONE",
      "body": "@barrybingo @ngcdev \r\n\r\nHuh \u2014 holy crap, that _does_ work. Nice find, thanks @barrybingo. Fascinating that should be the issue, especially since it's a _systemwide_ preference and not a per-connection thing.\r\n\r\nI looked at the Remmina code to see _why_ it would make a difference.\r\n\r\nWhen that option is enabled in the RDP preferences, the RDP plugin's code translates _certain_ keypresses (ones that aren't modifiers, spaces, function keys, numpad keys, or any key combined with a modifier) into unicode code points, instead of into raw keycodes:\r\n\r\n[Remmina/plugins/rdp/rdp_event.c@763:809](https://gitlab.com/Remmina/Remmina/-/blob/master/plugins/rdp/rdp_event.c#L763-809):\r\n```c\r\n\t\tif (!rfi->use_client_keymap) {\r\n\t\t\thardware_keycode = event->hardware_keycode;\r\n\t\t\tif (rfi->keymap) {\r\n\t\t\t\tfor (ik = 0; ik < rfi->keymap->len; ik++) {\r\n\t\t\t\t\tkep = &g_array_index(rfi->keymap, RemminaPluginRdpKeymapEntry, ik);\r\n\t\t\t\t\tif (hardware_keycode == kep->orig_keycode) {\r\n\t\t\t\t\t\thardware_keycode = kep->translated_keycode;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tscancode = freerdp_keyboard_get_rdp_scancode_from_x11_keycode(hardware_keycode);\r\n\t\t\tif (scancode) {\r\n\t\t\t\trdp_event.key_event.key_code = scancode & 0xFF;\r\n\t\t\t\trdp_event.key_event.extended = scancode & 0x100;\r\n\t\t\t\tremmina_rdp_event_event_push(gp, &rdp_event);\r\n\t\t\t\tkeypress_list_add(gp, rdp_event);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tunicode_keyval = gdk_keyval_to_unicode(event->keyval);\r\n\t\t\t/* Decide when whe should send a keycode or a Unicode character.\r\n\t\t\t * - All non char keys (Shift, Alt, Super) should be sent as keycode\r\n\t\t\t * - Space should be sent as keycode (see issue #1364)\r\n\t\t\t * - All special keys (F1-F10, numeric pad, Home/End/Arrows/PgUp/PgDn/Insert/Delete) keycode\r\n\t\t\t * - All key pressed while Ctrl or Alt or Super is down are not decoded by gdk_keyval_to_unicode(), so send it as keycode\r\n\t\t\t * - All keycodes not translatable to unicode chars, as keycode\r\n\t\t\t * - The rest as Unicode char\r\n\t\t\t */\r\n\t\t\tif (event->keyval >= 0xfe00 ||                                                  // Arrows, Shift, Alt, Fn, num keypad\u2026\r\n\t\t\t    event->hardware_keycode == 0x41 ||                                          // Spacebar\r\n\t\t\t    unicode_keyval == 0 ||                                                      // Impossible to translate\r\n\t\t\t    (event->state & (GDK_MOD1_MASK | GDK_CONTROL_MASK | GDK_SUPER_MASK)) != 0   // A modifier not recognized by gdk_keyval_to_unicode()\r\n\t\t\t    ) {\r\n\t\t\t\tscancode = freerdp_keyboard_get_rdp_scancode_from_x11_keycode(event->hardware_keycode);\r\n\t\t\t\trdp_event.key_event.key_code = scancode & 0xFF;\r\n\t\t\t\trdp_event.key_event.extended = scancode & 0x100;\r\n\t\t\t\tif (rdp_event.key_event.key_code) {\r\n\t\t\t\t\tremmina_rdp_event_event_push(gp, &rdp_event);\r\n\t\t\t\t\tkeypress_list_add(gp, rdp_event);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\trdp_event.type = REMMINA_RDP_EVENT_TYPE_SCANCODE_UNICODE;\r\n\t\t\t\trdp_event.key_event.unicode_code = unicode_keyval;\r\n\t\t\t\trdp_event.key_event.extended = False;\r\n\t\t\t\tremmina_rdp_event_event_push(gp, &rdp_event);\r\n\t\t\t\tkeypress_list_add(gp, rdp_event);\r\n\t\t\t}\r\n```\r\n\r\nWhen a keyboard event of type `REMMINA_RDP_EVENT_TYPE_SCANCODE_UNICODE` is processed, it's delivered to the remote server using the RDP message [`TS_UNICODE_KEYBOARD_EVENT`](https://msdn.microsoft.com/en-us/library/cc240585.aspx).\r\n\r\n[Remmina/plugins/rdp/rdp_plugin.c@228-234](https://gitlab.com/Remmina/Remmina/-/blob/master/plugins/rdp/rdp_plugin.c#L228-234):\r\n```c\r\n\t\tcase REMMINA_RDP_EVENT_TYPE_SCANCODE_UNICODE:\r\n\t\t\t/*\r\n\t\t\t * TS_UNICODE_KEYBOARD_EVENT RDP message, see https://msdn.microsoft.com/en-us/library/cc240585.aspx\r\n\t\t\t */\r\n\t\t\tflags = event->key_event.up ? KBD_FLAGS_RELEASE : KBD_FLAGS_DOWN;\r\n\t\t\tinput->UnicodeKeyboardEvent(input, flags, event->key_event.unicode_code);\r\n\t\t\tbreak;\r\n```\r\n\r\nApparently, presumably due to its own fairly low-level keyboard processing, Unicode input events aren't properly handled by PowerShell 7.",
      "created_at": "2022-09-17T16:38:03Z",
      "updated_at": "2022-09-17T16:38:03Z"
    },
    {
      "author": "tovoro",
      "author_association": "NONE",
      "body": "For people having this problem with Microsoft Remote Desktop for Mac, switching Keyboard Mode solves it! \r\n<img width=\"450\" alt=\"grafik\" src=\"https://user-images.githubusercontent.com/54395768/194088949-2bcd3363-4559-4b88-a9e8-60ca8a998f56.png\">\r\n",
      "created_at": "2022-10-05T14:41:47Z",
      "updated_at": "2022-10-05T14:41:47Z"
    }
  ],
  "created_at": "2020-05-21T19:30:43Z",
  "number": 12751,
  "state": "open",
  "title": "The console in the remote desktop fails",
  "updated_at": "2022-10-05T14:41:48Z"
}