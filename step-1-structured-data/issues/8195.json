{
  "_url": "https://github.com/PowerShell/PowerShell/issues/8195",
  "author": "KirkMunro",
  "body": "## PR Summary\r\n\r\nThis is bound to generate some discussion because it is a breaking change (but not to scripts -- it breaks current interactive behavior). With this PR in place, users who invoke a command with -Debug will no longer be presented with a prompt asking them if they want to enter a nested prompt, continue execution, or halt execution entirely. Instead, any messages sent to the debug stream will simply be sent to the debug stream and the script will continue execution. That is why this is identified as a breaking change, but only for interactive use.\r\n\r\nAs described in #7122, the current -Debug behavior dates back to PowerShell v1 and hasn't been useful since the debugger was introduced in PowerShell 2. It's time this functionality be made useful again, for all of the reasons identified in #7122 (so that we can actually have debug output from specific commands show up when they are invoked with -Debug _without_ having to go through a bunch of unwanted prompts). See the details in the bug report to understand why this change is desired by members of the PowerShell Community.\r\n\r\n## PR Checklist\r\n\r\n- [X] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [X] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [ ] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [X] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` to the beginning of the title and remove the prefix when the PR is ready.\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [X] User-facing [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [X] Issue filed - Issue link: https://github.com/PowerShell/PowerShell-Docs/issues/3255\r\n- **Testing - New and feature**\r\n    - [ ] Not Applicable or can only be tested interactively\r\n    - **OR**\r\n    - [X] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n        - [ ] [Add `[feature]` if the change is significant or affects feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\r\n",
  "closed_at": "2018-11-30T14:46:52Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "PowerShell-CI-Windows temporary failed. Restart it.",
      "created_at": "2018-11-07T03:49:07Z",
      "updated_at": "2018-11-07T03:49:07Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee the current PR precludes the ability to opt into the current behavior to use `Inquire`.  We agree that the default can be `Continue`, but we still need a way to allow users to use `Inquire`.  Suggestion is to add `-DebugAction` to allow going back to current behavior for a specific cmdlet, however, that can be deferred until someone needs it.",
      "created_at": "2018-11-28T23:39:08Z",
      "updated_at": "2018-11-28T23:39:08Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "If you happen to get such a request (someone asking for `Inquire` support), please tag me, I'd love to learn why someone wants that support.",
      "created_at": "2018-11-29T02:37:30Z",
      "updated_at": "2018-11-29T02:37:30Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Is the PR ready to merge? If so @KirkMunro please update the PR description (breaking change is not mentioned).",
      "created_at": "2018-11-30T04:51:31Z",
      "updated_at": "2018-11-30T04:51:31Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov: It is ready to merge, and I added more descriptive details to the first paragraph in the description to identify what would be breaking.",
      "created_at": "2018-11-30T14:35:57Z",
      "updated_at": "2018-11-30T14:35:57Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@KirkMunro Thanks for the great contribution!",
      "created_at": "2018-11-30T14:47:17Z",
      "updated_at": "2018-11-30T14:47:17Z"
    },
    {
      "author": "JeremyTBradshaw",
      "author_association": "NONE",
      "body": "> If you happen to get such a request (someone asking for `Inquire` support), please tag me, I'd love to learn why someone wants that support.\r\n\r\nI am a little late jumping to PowerShell 7.1.  Recently started to while I am using MS Graph and EWS Managed API and have no need for Windows PowerShell when doing so.  I was caught off guard by this change, and am very used to -Debug resulting in Inquire.  I found debugging this way, way easier than anything else.  Debugging in VS Code seemed difficult and so I stuck with -Debug = Inquire.\r\n\r\nI'm not necessarily opposed to the new way, but I would like to know where is some decent documentation on how to debug as easily.  I really like to Suspend, jump in and investigate.  It's how I hone in all my scripts and flush out errors.  I don't like to just see streams of info blowing by, so really need that Suspend capability.\r\n\r\nPlease do share if you can.  I'll also start researching on the topic.  This is a doozy of a change indeed.  If it means debugging the old way in a regular PowerShell console isn't possible, ouch.",
      "created_at": "2020-12-03T03:30:46Z",
      "updated_at": "2020-12-03T03:30:46Z"
    },
    {
      "author": "JeremyTBradshaw",
      "author_association": "NONE",
      "body": "Actually, you know it's fine.  I will just get used to it.  I am a little lost on debugging in general so that's on me.  I see how -ErrorAction Break is essentially what I need for replacing the older -Debug = Inquire in Windows PowerShell.\r\n\r\nUsing ErrorAction Break for the first time, the top 1/2 of the instructions were covered over by my frozen Write-Progress.  And scrolling up, all the text is garbled.  Quickly put my tail between my legs and just went back to Windows PowerShell.  Saving this bit of learning for a future date.",
      "created_at": "2020-12-03T03:53:02Z",
      "updated_at": "2020-12-03T03:53:02Z"
    },
    {
      "author": "Samuli3682",
      "author_association": "NONE",
      "body": "Jeah...i am totally out of what i'm trying to do...just want  working twrp.\nto my mate Pro 10bla-l29....\n\nto 3. jouluk. 2020 klo 5.31 Jeremy <notifications@github.com> kirjoitti:",
      "created_at": "2020-12-03T14:46:52Z",
      "updated_at": "2020-12-03T14:46:56Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "Hey @JeremyTBradshaw, thanks for responding back. I was really curious if there would be resistance among some folk, and the fact that you're responding rather than just silently complaining is very helpful.\r\n\r\nI'm happy to help you out with this, either via back-and-forth texts, or a call on Microsoft Teams where we can screenshare and I could show you the ropes of the debugger. That would be helpful for me as well, to learn how you would like to use the debugger, and make sure that your needs are covered. Maybe the outcome of this will be a document describing what you're looking for: how to transition from `-Debug`'s Inquire capability to the using the full power of the debugger without losing your mind in the process.",
      "created_at": "2020-12-03T14:50:57Z",
      "updated_at": "2020-12-03T14:50:57Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "> Using ErrorAction Break for the first time, the top 1/2 of the instructions were covered over by my frozen Write-Progress. And scrolling up, all the text is garbled. Quickly put my tail between my legs and just went back to Windows PowerShell. Saving this bit of learning for a future date.\r\n\r\nFor this, might I suggest setting `$ProgressPreference = 'SilentlyContinue'`, and then running your script with `-ErrorAction Break`? That would prevent the progress window from appearing, which should help what you just tried a little. Anyway, if you want to do a call to discuss this and more, I'll be able to fast forward your learning quite a bit.",
      "created_at": "2020-12-03T15:00:41Z",
      "updated_at": "2020-12-03T15:00:41Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "> If it means debugging the old way in a regular PowerShell console isn't possible, ouch.\r\n\r\nOne last thing @JeremyTBradshaw: I do almost all of my debugging in a regular PowerShell console. Always have. Only rarely will I debug in an IDE like PowerShell ISE or VS Code. All to say, debugging in a regular PowerShell console works wonderfully.\r\n\r\nYou can also do old-school debugging in PowerShell 7 anytime you like. Simply set `$DebugPreference = 'Inquire'` and then run your script _without_ `-Debug`, and when you do, you'll get the prompts that you are used to; however, it would be beneficial to learn the debugger itself and to understand how to leverage what it can do for you -- you'll be more efficient when you need to debug scripts as a result.",
      "created_at": "2020-12-03T15:11:01Z",
      "updated_at": "2020-12-03T15:12:29Z"
    },
    {
      "author": "JeremyTBradshaw",
      "author_association": "NONE",
      "body": "> > If it means debugging the old way in a regular PowerShell console isn't possible, ouch.\r\n> \r\n> One last thing @JeremyTBradshaw: I do almost all of my debugging in a regular PowerShell console. Always have. Only rarely will I debug in an IDE like PowerShell ISE or VS Code. All to say, debugging in a regular PowerShell console works wonderfully.\r\n> \r\n> You can also do old-school debugging in PowerShell 7 anytime you like. Simply set `$DebugPreference = 'Inquire'` and then run your script _without_ `-Debug`, and when you do, you'll get the prompts that you are used to; however, it would be beneficial to learn the debugger itself and to understand how to leverage what it can do for you -- you'll be more efficient when you need to debug scripts as a result.\r\n\r\nThanks for this.  I would take you up on the Teams meeting offer if it still stands.  Not sure when you had in mind but I've just exposed my email address on my GitHub profile and my tomorrow is currently open so if that works, that'd be great.  I should be quick to pick it up, so really it won't be long, and I can quickly show you the way I've been using -Debug.  The short version is that I commonly place Write-Debug's in my code wherever I'd like to jump in to troubleshoot or test, and then run with -Debug.  Whereas you're confirming you do your proper debugging in the console, that is good to hear, so again, look forward to the chance to get a quick rundown on this.\r\n\r\nThanks!",
      "created_at": "2020-12-03T15:28:20Z",
      "updated_at": "2020-12-03T15:28:20Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "@JeremyTBradshaw: Responded via the email address you shared, and we can work out a time through email.",
      "created_at": "2020-12-03T20:00:40Z",
      "updated_at": "2020-12-03T20:00:40Z"
    }
  ],
  "created_at": "2018-11-06T18:20:13Z",
  "number": 8195,
  "state": "closed",
  "title": "Debug parameter now sets debugpreference to continue",
  "updated_at": "2020-12-03T20:00:40Z"
}