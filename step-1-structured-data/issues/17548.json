{
  "_url": "https://github.com/PowerShell/PowerShell/issues/17548",
  "author": "hanneshayashi",
  "body": "### Name of the Distribution\n\nRHEL\n\n### Version of the Distribution\n\n9\n\n### Package Types\n\n- [ ] Deb\n- [X] RPM\n- [ ] Tar.gz\n- [ ] Snap - Stop! Please file your issue in [PowerShell-Snap](https://github.com/powershell/powershell-snap) instead.\n\n### Processor Architecture\n\nx86_64\n\n### .NET Core Support\n\n- [X] The version and architecture of the Distribution is [supported by .NET Core](https://github.com/dotnet/core/blob/master/release-notes/5.0/5.0-supported-os.md#linux).\n\n### Distribution Requirements\n\n- [X] The version of the Distribution is supported for at least one year.\n- [X] The version of the Distribution is not an [interim release](https://ubuntu.com/about/release-cycle) or equivalent.\n\n### Exemption Justification\n\n_No response_\n\n### Progress\n\n- [ ] An issue has been filed to create a Docker image in [PowerShell-Docker](https://github.com/powershell/powershell-docker)\n\n### For PowerShell Team **ONLY**\n\n- [ ] Docker image created\n- [ ] Docker image published\n- [ ] Distribution tested\n- [ ] Update `packages.microsoft.com` deployment\n- [ ] [Lifecycle](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/docs-conceptual/PowerShell-Support-Lifecycle.md) updated\n- [ ] Documentation Updated",
  "closed_at": null,
  "comments": [
    {
      "author": "hanneshayashi",
      "author_association": "NONE",
      "body": "RHEL 9 uses OpenSSL 3, which is causing issues when using the current RHEL 8 release of PowerShell.\r\nThe following Dockerfile installs PowerShell and attempts to install a Module from the PowerShell Gallery:\r\n\r\n```Dockerfile\r\nFROM quay.io/centos/centos:stream9\r\n\r\nRUN curl https://packages.microsoft.com/config/rhel/8/prod.repo | tee /etc/yum.repos.d/microsoft.repo \\\r\n  && dnf -y upgrade --refresh \\\r\n  && dnf -y install powershell \\\r\n  && pwsh -Command \"Install-Module -Name AzTable -Force\"\r\n\r\nENTRYPOINT [\"/usr/bin/env\"]\r\n````\r\n\r\nNote that it does not matter which module. They all fail with the following error message:\r\n\r\n```\r\nWARNING: Source Location 'https://www.powershellgallery.com/api/v2/package/AzTable/2.1.0' is not valid.\r\nInstall-Package: Package 'AzTable' failed to download.\r\n```\r\n\r\nWith verbose output, we get a little more detail and it becomes clear where the issue is:\r\n\r\n```\r\nERBOSE: Acquiring providers for assembly: /opt/microsoft/powershell/7/Modules/PackageManagement/coreclr/netstandard2.0/Microsoft.PackageManagement.ArchiverProviders.dll\r\nVERBOSE: Acquiring providers for assembly: /opt/microsoft/powershell/7/Modules/PackageManagement/coreclr/netstandard2.0/Microsoft.PackageManagement.NuGetProvider.dll\r\nVERBOSE: Acquiring providers for assembly: /opt/microsoft/powershell/7/Modules/PackageManagement/coreclr/netstandard2.0/Microsoft.PackageManagement.MetaProvider.PowerShell.dll\r\nVERBOSE: Acquiring providers for assembly: /opt/microsoft/powershell/7/Modules/PackageManagement/coreclr/netstandard2.0/Microsoft.PackageManagement.CoreProviders.dll\r\nVERBOSE: Using the provider 'PowerShellGet' for searching packages.\r\nVERBOSE: The -Repository parameter was not specified.  PowerShellGet will use all of the registered repositories.\r\nVERBOSE: Getting the provider object for the PackageManagement Provider 'NuGet'.\r\nVERBOSE: The specified Location is 'https://www.powershellgallery.com/api/v2' and PackageManagementProvider is 'NuGet'.\r\nVERBOSE: Searching repository 'https://www.powershellgallery.com/api/v2/FindPackagesById()?id='AzTable'' for ''.\r\nVERBOSE: Total package yield:'1' for the specified package 'AzTable'.\r\nVERBOSE: Performing the operation \"Install-Module\" on target \"Version '2.1.0' of module 'AzTable'\".\r\nVERBOSE: The installation scope is specified to be 'CurrentUser'.\r\nVERBOSE: The specified module will be installed in '/root/.local/share/powershell/Modules'.\r\nVERBOSE: The specified Location is 'NuGet' and PackageManagementProvider is 'NuGet'.\r\nVERBOSE: Downloading module 'AzTable' with version '2.1.0' from the repository 'https://www.powershellgallery.com/api/v2'.\r\nVERBOSE: Searching repository 'https://www.powershellgallery.com/api/v2/FindPackagesById()?id='AzTable'' for ''.\r\nVERBOSE: InstallPackage' - name='AzTable', version='2.1.0',destination='/tmp/734365082'\r\nVERBOSE: DownloadPackage' - name='AzTable', version='2.1.0',destination='/tmp/734365082/AzTable.2.1.0/AzTable.2.1.0.nupkg', uri='https://www.powershellgallery.com/api/v2/package/AzTable/2.1.0'\r\nVERBOSE: Downloading 'https://www.powershellgallery.com/api/v2/package/AzTable/2.1.0'.\r\nVERBOSE: The SSL connection could not be established, see inner exception.\r\nVERBOSE: Retry downloading 'https://www.powershellgallery.com/api/v2/package/AzTable/2.1.0' for '2' more times\r\nVERBOSE: The SSL connection could not be established, see inner exception.\r\nVERBOSE: Retry downloading 'https://www.powershellgallery.com/api/v2/package/AzTable/2.1.0' for '1' more times\r\nVERBOSE: The SSL connection could not be established, see inner exception.\r\nVERBOSE: Retry downloading 'https://www.powershellgallery.com/api/v2/package/AzTable/2.1.0' for '0' more times\r\nVERBOSE: Downloading package 'AzTable' failed, please make sure 'https://www.powershellgallery.com/api/v2/package/AzTable/2.1.0' is accessable.\r\nWARNING: Source Location 'https://www.powershellgallery.com/api/v2/package/AzTable/2.1.0' is not valid.\r\n```\r\n\r\nThis does not only affect PowerShell Gallery, but it is easy to reproduce this way.\r\nUp until a few days ago, we used a workaround, were we locked openssl and openssl-libs to an older version:\r\n\r\n```\r\n# ...\r\n&& dnf install -y 'dnf-command(versionlock)' \\\r\n&& dnf versionlock add openssl-libs-1:3.0.1-5.el9 openssl-1:3.0.1-5.el9 \\\r\n# ...\r\n```\r\n\r\nThis version has since been removed from the DNF repo, which leaves us unable to build a container based on RHEL 9 / CentOS Stream 9.",
      "created_at": "2022-06-21T05:26:03Z",
      "updated_at": "2022-06-21T05:26:03Z"
    },
    {
      "author": "jborean93",
      "author_association": "COLLABORATOR",
      "body": "I've just done some more testing and PowerShell supports OpenSSL 3 for me. It just uses the functionality in dotnet which has been in place since .NET 6 (what pwsh 7.2.x uses) https://github.com/dotnet/runtime/issues/46526.\r\n\r\nWhat is interested in that this works in the test container\r\n\r\n```powershell\r\nInvoke-WebRequest https://httpbin.org/get\r\n```\r\n\r\nBut this does not (what Install-Module is calling)\r\n\r\n```powershell\r\nInvoke-WebRequest https://www.powershellgallery.com/api/v2/package/AzTable/2.1.0\r\n# Invoke-WebRequest: The remote certificate is invalid because of errors in the certificate chain: NotSignatureValid\r\n```\r\n\r\nI've also verified that the OpenSSL 3.x libs are loaded in the process and it's not picking up any other ones that might be in the path\r\n\r\n```powershell\r\nPS /> get-content /proc/$pid/maps | select-string 'libssl*'\r\n\r\n7f491121f000-7f491123d000 r--p 00000000 00:21 5069468                    /usr/lib64/libssl.so.3.0.1\r\n7f491123d000-7f4911299000 r-xp 0001e000 00:21 5069468                    /usr/lib64/libssl.so.3.0.1\r\n7f4911299000-7f49112b6000 r--p 0007a000 00:21 5069468                    /usr/lib64/libssl.so.3.0.1\r\n7f49112b6000-7f49112c0000 r--p 00096000 00:21 5069468                    /usr/lib64/libssl.so.3.0.1\r\n7f49112c0000-7f49112c4000 rw-p 000a0000 00:21 5069468                    /usr/lib64/libssl.so.3.0.1\r\n```\r\n\r\nWhat is interesting is that `openssl s_client -connect www.powershellgallery.com:443` works just fine with the cert that the PowerShell gallery exposes which tells me that potentially support for OpenSSL 3.x in dotnet still has some kinks left to work through. The issue https://github.com/dotnet/runtime/issues/67304 seems to be quite closely related, they do say that .NET 6 shouldn't be affected but maybe it still is?",
      "created_at": "2022-06-21T11:10:31Z",
      "updated_at": "2022-06-21T11:10:31Z"
    },
    {
      "author": "hanneshayashi",
      "author_association": "NONE",
      "body": "Thank you for investigating! You are right that it seems like not all SSL connections are affected, but it is definitely not exclusive to Install-Module. I believe (although I can't verify it at the moment) Invoke-Command with a Windows host as a target is was also affected.\r\n\r\nPowerShell seems to at least try to use the installed openssl, but it seems like newer versions are causing issues (hence our workaround by locking it to an older one).",
      "created_at": "2022-06-21T11:34:04Z",
      "updated_at": "2022-06-21T11:34:04Z"
    },
    {
      "author": "jborean93",
      "author_association": "COLLABORATOR",
      "body": "Yea I\u2019ll have to try and investigate it some more, the latest pwsh preview which is based ok dotnet 7 should be good but it also has problems. There\u2019s something up with the cert that the PSGallery uses which is acting differently in OpenSSL 3. All this happens in dotnet and it\u2019s not really controlled by PowerShell but it is definitely something that should be investigated and fixed if need be.",
      "created_at": "2022-06-21T11:52:12Z",
      "updated_at": "2022-06-21T11:52:12Z"
    },
    {
      "author": "hanneshayashi",
      "author_association": "NONE",
      "body": "This still gives me the same error:\r\n\r\n```Dockerfile\r\nFROM quay.io/centos/centos:stream9\r\n\r\nRUN curl https://packages.microsoft.com/config/rhel/8/prod.repo | tee /etc/yum.repos.d/microsoft.repo \\\r\n  && dnf -y upgrade --refresh \\\r\n  && dnf -y install powershell-preview \\\r\n  && pwsh-preview -Command \"Install-Module -Name AzTable -Force -Verbose\"\r\n\r\nENTRYPOINT [\"/usr/bin/env\"]\r\n```\r\n\r\n```\r\nVERBOSE: Acquiring providers for assembly: /opt/microsoft/powershell/7-preview/Modules/PackageManagement/coreclr/netstandard2.0/Microsoft.PackageManagement.MetaProvider.PowerShell.dll\r\nVERBOSE: Acquiring providers for assembly: /opt/microsoft/powershell/7-preview/Modules/PackageManagement/coreclr/netstandard2.0/Microsoft.PackageManagement.CoreProviders.dll\r\nVERBOSE: Acquiring providers for assembly: /opt/microsoft/powershell/7-preview/Modules/PackageManagement/coreclr/netstandard2.0/Microsoft.PackageManagement.ArchiverProviders.dll\r\nVERBOSE: Acquiring providers for assembly: /opt/microsoft/powershell/7-preview/Modules/PackageManagement/coreclr/netstandard2.0/Microsoft.PackageManagement.NuGetProvider.dll\r\nVERBOSE: Using the provider 'PowerShellGet' for searching packages.\r\nVERBOSE: The -Repository parameter was not specified.  PowerShellGet will use all of the registered repositories.\r\nVERBOSE: Getting the provider object for the PackageManagement Provider 'NuGet'.\r\nVERBOSE: The specified Location is 'https://www.powershellgallery.com/api/v2' and PackageManagementProvider is 'NuGet'.\r\nVERBOSE: Searching repository 'https://www.powershellgallery.com/api/v2/FindPackagesById()?id='AzTable'' for ''.\r\nVERBOSE: Total package yield:'1' for the specified package 'AzTable'.\r\nVERBOSE: Performing the operation \"Install-Module\" on target \"Version '2.1.0' of module 'AzTable'\".\r\nVERBOSE: The installation scope is specified to be 'CurrentUser'.\r\nVERBOSE: The specified module will be installed in '/root/.local/share/powershell/Modules'.\r\nVERBOSE: The specified Location is 'NuGet' and PackageManagementProvider is 'NuGet'.\r\nVERBOSE: Downloading module 'AzTable' with version '2.1.0' from the repository 'https://www.powershellgallery.com/api/v2'.\r\nVERBOSE: Searching repository 'https://www.powershellgallery.com/api/v2/FindPackagesById()?id='AzTable'' for ''.\r\nVERBOSE: InstallPackage' - name='AzTable', version='2.1.0',destination='/tmp/1012252532'\r\nVERBOSE: DownloadPackage' - name='AzTable', version='2.1.0',destination='/tmp/1012252532/AzTable.2.1.0/AzTable.2.1.0.nupkg', uri='https://www.powershellgallery.com/api/v2/package/AzTable/2.1.0'\r\nVERBOSE: Downloading 'https://www.powershellgallery.com/api/v2/package/AzTable/2.1.0'.\r\nVERBOSE: The SSL connection could not be established, see inner exception.\r\nVERBOSE: Retry downloading 'https://www.powershellgallery.com/api/v2/package/AzTable/2.1.0' for '2' more times\r\nVERBOSE: The SSL connection could not be established, see inner exception.\r\nVERBOSE: Retry downloading 'https://www.powershellgallery.com/api/v2/package/AzTable/2.1.0' for '1' more times\r\nVERBOSE: The SSL connection could not be established, see inner exception.\r\nVERBOSE: Retry downloading 'https://www.powershellgallery.com/api/v2/package/AzTable/2.1.0' for '0' more times\r\nVERBOSE: Downloading package 'AzTable' failed, please make sure 'https://www.powershellgallery.com/api/v2/package/AzTable/2.1.0' is accessable.\r\nWARNING: Source Location 'https://www.powershellgallery.com/api/v2/package/AzTable/2.1.0' is not valid.\r\nInstall-Package: Package 'AzTable' failed to download.\r\n```",
      "created_at": "2022-06-21T11:57:55Z",
      "updated_at": "2022-06-21T11:57:55Z"
    },
    {
      "author": "kasini3000",
      "author_association": "NONE",
      "body": "mark , I will update the one-click install script as soon as the rpm package is available in package.microsoft.com.\r\n\r\n-------\r\n\r\none-click install powershell on linux\r\nhttps://gitee.com/chuanjiao10/kasini3000_agent_linux",
      "created_at": "2022-06-22T03:45:33Z",
      "updated_at": "2022-06-22T03:45:33Z"
    },
    {
      "author": "hanneshayashi",
      "author_association": "NONE",
      "body": "Just for the record: I just tested it with the new 7.2.5 release and still get the same error.",
      "created_at": "2022-06-22T04:43:29Z",
      "updated_at": "2022-06-22T04:43:29Z"
    },
    {
      "author": "hanneshayashi",
      "author_association": "NONE",
      "body": "It seems like there were (are?) some more issues related to openssl and RHEL 9. For example https://github.com/dotnet/runtime/pull/70343. It seems like this particular fix was merged into .Net 6.0.7. Not sure which version the current release is using, but I suppose it's probably a little older.",
      "created_at": "2022-06-22T11:20:52Z",
      "updated_at": "2022-06-22T11:20:52Z"
    },
    {
      "author": "jborean93",
      "author_association": "COLLABORATOR",
      "body": "That does seem quite relevant, considering it was only merged 13 days ago I would be surprised if 7.2.x has been updated to 6.0.7 (6.0.6 is also the latest in the GH releases page).",
      "created_at": "2022-06-22T11:25:34Z",
      "updated_at": "2022-06-22T11:25:34Z"
    },
    {
      "author": "hanneshayashi",
      "author_association": "NONE",
      "body": "I don't suppose there is any way to find out if this fixes the issue by trying to build PowerShell against this unreleased .NET version, is there? \ud83d\ude04\r\n\r\nWe are currently stuck without a working PowerShell on RHEL 9...\r\n\r\nFor what it's worth `https://pkgs.dev.azure.com` also recreates the error:\r\n\r\n```powershell\r\nInvoke-WebRequest https://pkgs.dev.azure.com\r\n# Invoke-WebRequest: The remote certificate is invalid because of errors in the certificate chain: NotSignatureValid\r\n```\r\nWhich indicates that there are probably a lot more sites and services that don't work either.\r\n\r\nDockerfile for reference:\r\n```Dockerfile\r\nFROM quay.io/centos/centos:stream9\r\n\r\nRUN curl https://packages.microsoft.com/config/rhel/8/prod.repo | tee /etc/yum.repos.d/microsoft.repo \\\r\n  && dnf -y upgrade --refresh \\\r\n  && dnf -y install powershell \\\r\n  && pwsh -Command \"Invoke-WebRequest https://pkgs.dev.azure.com\"\r\n\r\nENTRYPOINT [\"/usr/bin/env\"]\r\n```",
      "created_at": "2022-06-22T11:43:23Z",
      "updated_at": "2022-06-22T11:43:23Z"
    },
    {
      "author": "jborean93",
      "author_association": "COLLABORATOR",
      "body": "If you can get a compiled build of dotnet including that version you should be able to replace the dll's for it in pwsh itself. There's a lot in there so it's not just a simple thing to do unless you know what to change unfortunately.",
      "created_at": "2022-06-22T11:48:13Z",
      "updated_at": "2022-06-22T11:48:13Z"
    },
    {
      "author": "hanneshayashi",
      "author_association": "NONE",
      "body": "It looks like v7.3.0-preview.5 fixes the problem, which would hopefully mean that the backport to .NET 6 also fixes it. In the meantime, I will have to see if we can work with the preview version for now.",
      "created_at": "2022-06-23T05:19:33Z",
      "updated_at": "2022-06-23T05:19:33Z"
    },
    {
      "author": "hanneshayashi",
      "author_association": "NONE",
      "body": ".NET 6.0.7 was just released: https://github.com/dotnet/runtime/releases/tag/v6.0.7\r\nCan we expect the next stable version of PowerShell to be based on that release?\n\n<blockquote><img src=\"https://opengraph.githubassets.com/a821ab2fa4d7448ae821bab5a6e42c7b52cc8fe59351ff6c882e2d3cedd1b095/dotnet/runtime/releases/tag/v6.0.7\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"/dotnet/runtime/releases/tag/v6.0.7\">Release .NET 6.0.7 \u00b7 dotnet/runtime</a></strong></div><div>Release</div></blockquote>",
      "created_at": "2022-07-13T05:02:15Z",
      "updated_at": "2022-07-13T05:02:18Z"
    },
    {
      "author": "hanneshayashi",
      "author_association": "NONE",
      "body": "7.2.6 seems to have resolved the OpenSSL issues.",
      "created_at": "2022-08-12T05:01:50Z",
      "updated_at": "2022-08-12T05:01:50Z"
    }
  ],
  "created_at": "2022-06-21T05:17:06Z",
  "number": 17548,
  "state": "open",
  "title": "Distribution Support Request - RHEL 9",
  "updated_at": "2022-08-12T05:01:50Z"
}