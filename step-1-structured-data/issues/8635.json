{
  "_url": "https://github.com/PowerShell/PowerShell/issues/8635",
  "author": "1480c1",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n\r\n-->\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\npowershell -noprofile -command \"(get-filehash $PSHOME\\powershell.exe).hash\"\r\n```\r\n\r\n# Expected behavior\r\n\r\n```none\r\nDE96A6E69944335375DC1AC238336066889D9FFC7D73628EF4FE1B1B160AB32C\r\n```\r\n\r\n# Actual behavior\r\n\r\n```none\r\nget-filehash : The term 'get-filehash' is not recognized as the name of a cmdlet, function, script file, or operable\r\nprogram. Check the spelling of the name, or if a path was included, verify that the path is correct and try again.\r\nAt line:1 char:2\r\n+ (get-filehash C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.e ...\r\n+  ~~~~~~~~~~~~\r\n    + CategoryInfo          : ObjectNotFound: (get-filehash:String) [], CommandNotFoundException\r\n    + FullyQualifiedErrorId : CommandNotFoundException\r\n```\r\n# Actual behavior on a different computer\r\n\r\n```none\r\nget-filehash : The 'get-filehash' command was found in the module 'Microsoft.PowerShell.Utility', but the module could\r\nnot be loaded. For more information, run 'Import-Module Microsoft.PowerShell.Utility'.\r\nAt line:1 char:2\r\n+ (get-filehash $pshome\\powershell.exe).hash\r\n+  ~~~~~~~~~~~~\r\n    + CategoryInfo          : ObjectNotFound: (get-filehash:String) [], CommandNotFoundException\r\n    + FullyQualifiedErrorId : CouldNotAutoloadMatchingModule\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.1.1\r\nPSEdition                      Core\r\nGitCommitId                    6.1.1\r\nOS                             Microsoft Windows 10.0.17763\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2019-02-19T23:23:14Z",
  "comments": [
    {
      "author": "1480c1",
      "author_association": "NONE",
      "body": "Additional notes:\r\n\r\n- Running the command from command prompt gives the expected results.\r\n- Running $PSVersionTable from both the default powershell and through `powershell -noprofile -command '$PSVersionTable'` in powershell core outputs:\r\n```\r\nName                           Value\r\n----                           -----\r\nPSVersion                      5.1.17763.134\r\nPSEdition                      Desktop\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nBuildVersion                   10.0.17763.134\r\nCLRVersion                     4.0.30319.42000\r\nWSManStackVersion              3.0\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\n```\r\n- The hash from the first computer's powershell is different than the second computer's.\r\n- Running the command from the preview version, I get:\r\n```\r\nget-filehash : The term 'get-filehash' is not recognized as the name of a cmdlet, function, script file, or operable\r\nprogram. Check the spelling of the name, or if a path was included, verify that the path is correct and try again.\r\nAt line:1 char:2\r\n+ (get-filehash C:\\Program Files\\PowerShell\\Preview\\6-preview\\powershel ...\r\n+  ~~~~~~~~~~~~\r\n    + CategoryInfo          : ObjectNotFound: (get-filehash:String) [], CommandNotFoundException\r\n    + FullyQualifiedErrorId : CommandNotFoundException\r\n```",
      "created_at": "2019-01-13T19:14:27Z",
      "updated_at": "2019-01-13T19:26:19Z"
    },
    {
      "author": "kvprasoon",
      "author_association": "CONTRIBUTOR",
      "body": "This fails when the call is from PS Core. Below are some observations.\r\n\r\n`powershell -noprofile -command \"gcm get-file*\"`\r\n![image](https://user-images.githubusercontent.com/12897753/51095122-6d8f6680-17d8-11e9-85da-87bfab64cb7d.png)\r\n\r\n![image](https://user-images.githubusercontent.com/12897753/51094977-3ff5ed80-17d7-11e9-86b4-7a9fc48af312.png)\r\n\r\n![image](https://user-images.githubusercontent.com/12897753/51094992-5f8d1600-17d7-11e9-9b21-9e2aeddc9445.png)\r\n",
      "created_at": "2019-01-14T03:09:05Z",
      "updated_at": "2019-01-14T03:13:19Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "If you invoke `powershell.exe` from PowerShell _Core_, the **problem is the presence of the _Core_ standard module path in `$env:PSModulePath` _before_ the Windows PowerShell standard module path, which causes Windows Powershell not to find `Get-FileHash`**.\r\n\r\nYou can verify this as follows:\r\n\r\n```powershell\r\n# OK: Use standard WinPS module directory  only.\r\n# Note the use of SINGLE quotes around the command string, to prevent up-front expansion.\r\nPS Core> powershell -noprofile -command '$env:PSModulePath = \\\"$PSHOME/Modules\\\"; (get-filehash $PSHOME\\powershell.exe).hash'\r\nD3F8FADE829D2B7BD596C4504A6DAE5C034E789B6A3DEFBE013BDA7D14466677\r\n```\r\n\r\nConversely, prepending the Core module path provokes the symptom:\r\n\r\n```powershell\r\n# !! FAILS, because the Core standard module path comes first.\r\nPS Core> powershell -noprofile -command \"`$env:PSModulePath = '$PSHOME\\Modules;'; `$env:PSModulePath += \\`\"`$PSHOME\\Modules\\`\"; (get-filehash `$PSHOME\\powershell.exe).hash\"\r\n```\r\n\r\nYour second error message is more accurate and helpful, as it indicates that the command was found, but that its enclosing module failed to load (presumably because the module is a _Core_ module).\r\n\r\nI only see the obscure not-found error message in preview.3.\r\nWhat was different on the other computer that caused the couldn't-import message? Different PS version?\r\n\r\n---\r\n\r\n**Generally, since Windows PowerShell knows nothing about PowerShell _Core_, the presence of Core module directories in `$env:PSModulePath` is likely to cause problems.**\r\n\r\nI don't know what the proper solution is, short of _undefining_ `$env:PSModulePath` for the child process behind the scenes when `powershell.exe` is being invoked, so that Windows PowerShell's regular `$env:PSModulePath` value takes effect.\r\n\r\n\r\n",
      "created_at": "2019-01-14T14:45:22Z",
      "updated_at": "2019-01-15T03:57:07Z"
    },
    {
      "author": "1480c1",
      "author_association": "NONE",
      "body": "> I only see the obscure not-found error message in preview.3.\r\n> What was different on the other computer that caused the couldn't-import message? Different PS version?\r\n\r\nThere is no difference between the two computers that I am aware of as the $PSVersionTable matched under a cursory exam and I used the same Windows (x64) stable installer for both. The only difference that I can hypothesize, other than the obvious different hardware and probably unrelated software and username, is that the first computer had been updated to the october update during the first window and the second is still on the previous update.\r\n\r\n",
      "created_at": "2019-01-14T15:06:06Z",
      "updated_at": "2019-01-14T15:07:21Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "We discussed to have another env path for PowerShell Core .",
      "created_at": "2019-01-15T03:05:02Z",
      "updated_at": "2019-01-15T03:05:02Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov: \r\n\r\nPowerShell Core already _does_ set its own `$env:PSModulePath` value, which is appropriate in principle (but needs tweaking - see #6850).\r\n\r\nBy contrast, the issue at hand is that when the _Windows_ PowerShell's CLI (`powershell.exe`) is called while PowerShell _Core_'s  `$env:PSModulePath` value is in effect, problems arise, because child processes automatically _inherit_ the calling process' environment variables.\r\n",
      "created_at": "2019-01-15T03:35:49Z",
      "updated_at": "2019-01-15T03:44:10Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I believe the issue should be addressed in RFC requested in #6850.\r\nI think the problem in important and it would be nice if MSGT team forced the RFC.",
      "created_at": "2019-01-15T04:00:42Z",
      "updated_at": "2019-01-15T04:00:42Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov: \r\n\r\n* #6850 discusses how PowerShell Core itself should determine _its_ `$env:PSModulePath` value.\r\n\r\n* However, resolving #6850 will _not_ resolve _this_ issue, which requires hiding Core-specific `$env:PSModulePath` entries from child processes running the _Windows PowerShell_ CLI, `powershell.exe`.\r\n",
      "created_at": "2019-01-15T04:10:13Z",
      "updated_at": "2019-01-15T04:11:11Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@mklement0 There is a suggestion to introduce new `$ENV:PSModulePathCore`. Seems it'll resolve the issue too.",
      "created_at": "2019-01-15T04:15:25Z",
      "updated_at": "2019-01-15T04:15:25Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov: Good point: If, ultimately, a new, edition-specific environment variable such as `$env:PSModulePathCore` is chosen for PS Core, the problem discussed here would indeed go away as well.",
      "created_at": "2019-01-15T04:20:25Z",
      "updated_at": "2019-01-15T04:22:57Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "Hum!! Original issue was about the Hash.\r\n\r\nAs of now... No issues!\r\n\r\n![noissueswithhash_01_2019-02-12_18-32-53](https://user-images.githubusercontent.com/19892435/52675439-d1e73800-2ef4-11e9-86f2-4fdc99c64fe3.jpg)\r\n\r\nPowerShell Core Preview\r\n```\r\nPowerShell 6.2.0-preview.4\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\n\r\nhttps://aka.ms/pscore6-docs\r\nType 'help' to get help.\r\n\r\nPowerShell Core User Profile\r\nPS [7] > $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.2.0-preview.4\r\nPSEdition                      Core\r\nGitCommitId                    6.2.0-preview.4\r\nOS                             Microsoft Windows 10.0.17763\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\nPS [21] >\r\n```\r\n\r\nPowerShell Core GA\r\n```\r\nPowerShell 6.1.2\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\n\r\nhttps://aka.ms/pscore6-docs\r\nType 'help' to get help.\r\n\r\nPowerShell Core User Profile\r\nPS [7] > $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.1.2\r\nPSEdition                      Core\r\nGitCommitId                    6.1.2\r\nOS                             Microsoft Windows 10.0.17763\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n\r\nPS [22] >\r\n```\r\n",
      "created_at": "2019-02-12T23:37:23Z",
      "updated_at": "2019-02-12T23:37:53Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "On the issue of calling Windows PowerShell from within PowerShell Core.  \r\nIt works too!\r\n\r\n![pscorecallwinposh_01_2019-02-12_18-38-56](https://user-images.githubusercontent.com/19892435/52675746-c8120480-2ef5-11e9-9af7-d1d978001442.jpg)\r\n\r\n![pscorecallwinposh_02_2019-02-12_18-38-56](https://user-images.githubusercontent.com/19892435/52675814-fabbfd00-2ef5-11e9-9f57-b72092e2a005.jpg)\r\n\r\nSorry I haven't try this before! Hehe\r\nExecuting the command line: powershell -noprofile -command \"gcm get-file*\"\r\nI had no issues neither!\r\n\r\n![cgm_issue_01_2019-02-12_18-47-54](https://user-images.githubusercontent.com/19892435/52676091-e9272500-2ef6-11e9-8d44-64db59c02ae4.jpg)\r\n\r\nIs it possible the latest releases have fix the issues!!\r\n:)",
      "created_at": "2019-02-12T23:42:49Z",
      "updated_at": "2019-02-12T23:50:24Z"
    },
    {
      "author": "1480c1",
      "author_association": "NONE",
      "body": "![image](https://user-images.githubusercontent.com/8345542/52676508-0278a300-2ef0-11e9-8021-8785e09e7d0e.png)\r\n``` powershell\r\nPowerShell 6.1.2\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\n\r\nhttps://aka.ms/pscore6-docs\r\nType 'help' to get help.\r\n\r\nPS C:\\Users\\cddeg> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.1.2\r\nPSEdition                      Core\r\nGitCommitId                    6.1.2\r\nOS                             Microsoft Windows 10.0.17763\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n\r\nPS C:\\Users\\cddeg> powershell -noprofile -command \"(get-filehash $PSHOME\\powershell.exe).hash\"\r\nget-filehash : The term 'get-filehash' is not recognized as the name of a cmdlet, function, script file, or operable program. Check the spelling of the name, or if a path was included,\r\nverify that the path is correct and try again.\r\nAt line:1 char:2\r\n+ (get-filehash C:\\Program Files\\PowerShell\\6\\powershell.exe).hash\r\n+  ~~~~~~~~~~~~\r\n    + CategoryInfo          : ObjectNotFound: (get-filehash:String) [], CommandNotFoundException\r\n    + FullyQualifiedErrorId : CommandNotFoundException\r\n\r\nPS C:\\Users\\cddeg> powershell -noprofile -command \"Get-command get-file*\"\r\n\r\nCommandType     Name                                               Version    Source\r\n-----------     ----                                               -------    ------\r\nFunction        Get-FileHash                                       3.1.0.0    Microsoft.PowerShell.Utility\r\nFunction        Get-FileIntegrity                                  2.0.0.0    Storage\r\nFunction        Get-FileShare                                      2.0.0.0    Storage\r\nFunction        Get-FileShareAccessControlEntry                    2.0.0.0    Storage\r\nFunction        Get-FileStorageTier                                2.0.0.0    Storage\r\nCmdlet          Get-FileHash                                       6.1.0.0    Microsoft.PowerShell.Utility\r\n```",
      "created_at": "2019-02-13T00:00:19Z",
      "updated_at": "2019-02-13T00:00:19Z"
    },
    {
      "author": "1480c1",
      "author_association": "NONE",
      "body": "![image](https://user-images.githubusercontent.com/8345542/52676889-4fa94480-2ef1-11e9-9da8-c25a2a4f0362.png)\r\n``` powershell\r\nPowerShell 6.2.0-preview.4\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\n\r\nhttps://aka.ms/pscore6-docs\r\nType 'help' to get help.\r\n\r\nPS C:\\Program Files\\PowerShell\\6-preview> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.2.0-preview.4\r\nPSEdition                      Core\r\nGitCommitId                    6.2.0-preview.4\r\nOS                             Microsoft Windows 10.0.17763\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\nPS C:\\Program Files\\PowerShell\\6-preview> powershell -noprofile -command \"(get-filehash $PSHOME\\powershell.exe).hash\"\r\nget-filehash : The term 'get-filehash' is not recognized as the name of a cmdlet, function, script file, or operable program. Check the spelling of the name, or if a path was included,\r\nverify that the path is correct and try again.\r\nAt line:1 char:2\r\n+ (get-filehash C:\\Program Files\\PowerShell\\6-preview\\powershell.exe).h ...\r\n+  ~~~~~~~~~~~~\r\n    + CategoryInfo          : ObjectNotFound: (get-filehash:String) [], CommandNotFoundException\r\n    + FullyQualifiedErrorId : CommandNotFoundException\r\n\r\nPS C:\\Program Files\\PowerShell\\6-preview> powershell -noprofile -command \"Get-command get-file*\"\r\n\r\nCommandType     Name                                               Version    Source\r\n-----------     ----                                               -------    ------\r\nFunction        Get-FileHash                                       3.1.0.0    Microsoft.PowerShell.Utility\r\nFunction        Get-FileIntegrity                                  2.0.0.0    Storage\r\nFunction        Get-FileShare                                      2.0.0.0    Storage\r\nFunction        Get-FileShareAccessControlEntry                    2.0.0.0    Storage\r\nFunction        Get-FileStorageTier                                2.0.0.0    Storage\r\nCmdlet          Get-FileHash                                       6.1.0.0    Microsoft.PowerShell.Utility\r\n```",
      "created_at": "2019-02-13T00:09:45Z",
      "updated_at": "2019-02-13T00:09:45Z"
    },
    {
      "author": "1480c1",
      "author_association": "NONE",
      "body": "This should give a better idea of what my original problem was.\r\n# test.bat\r\n\r\n``` batch\r\necho.1\r\npowershell -noprofile -command \"$PSVersionTable\"\r\npowershell -noprofile -command \"(get-filehash $PSHOME\\powershell.exe).hash\"\r\npowershell -noprofile -command \"Get-command get-file*\"\r\n```\r\n\r\n# Running test.bat under 6.2.0-preview.4\r\n\r\n``` powershell\r\nPS C:\\Users\\cddeg> .\\test.bat\r\n\r\nC:\\Users\\cddeg>echo.1\r\n1\r\n\r\nC:\\Users\\cddeg>powershell -noprofile -command \"$PSVersionTable\"\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      5.1.17763.134\r\nPSEdition                      Desktop\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nBuildVersion                   10.0.17763.134\r\nCLRVersion                     4.0.30319.42000\r\nWSManStackVersion              3.0\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\n\r\n\r\n\r\nC:\\Users\\cddeg>powershell -noprofile -command \"(get-filehash $PSHOME\\powershell.exe).hash\"\r\nget-filehash : The term 'get-filehash' is not recognized as the name of a cmdlet, function, script file, or operable program. Check the spelling of the name, or if a path was included,\r\nverify that the path is correct and try again.\r\nAt line:1 char:2\r\n+ (get-filehash $PSHOME\\powershell.exe).hash\r\n+  ~~~~~~~~~~~~\r\n    + CategoryInfo          : ObjectNotFound: (get-filehash:String) [], CommandNotFoundException\r\n    + FullyQualifiedErrorId : CommandNotFoundException\r\n\r\n\r\nC:\\Users\\cddeg>powershell -noprofile -command \"Get-command get-file*\"\r\n\r\nCommandType     Name                                               Version    Source\r\n-----------     ----                                               -------    ------\r\nFunction        Get-FileHash                                       3.1.0.0    Microsoft.PowerShell.Utility\r\nFunction        Get-FileIntegrity                                  2.0.0.0    Storage\r\nFunction        Get-FileShare                                      2.0.0.0    Storage\r\nFunction        Get-FileShareAccessControlEntry                    2.0.0.0    Storage\r\nFunction        Get-FileStorageTier                                2.0.0.0    Storage\r\nCmdlet          Get-FileHash                                       6.1.0.0    Microsoft.PowerShell.Utility\r\n```\r\n# Running under 6.1.2\r\n\r\n``` powershell\r\nPS C:\\Users\\cddeg> .\\test.bat\r\n\r\nC:\\Users\\cddeg>echo.1\r\n1\r\n\r\nC:\\Users\\cddeg>powershell -noprofile -command \"$PSVersionTable\"\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      5.1.17763.134\r\nPSEdition                      Desktop\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nBuildVersion                   10.0.17763.134\r\nCLRVersion                     4.0.30319.42000\r\nWSManStackVersion              3.0\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\n\r\n\r\n\r\nC:\\Users\\cddeg>powershell -noprofile -command \"(get-filehash $PSHOME\\powershell.exe).hash\"\r\nget-filehash : The term 'get-filehash' is not recognized as the name of a cmdlet, function, script file, or operable program. Check the spelling of the name, or if a path was included,\r\nverify that the path is correct and try again.\r\nAt line:1 char:2\r\n+ (get-filehash $PSHOME\\powershell.exe).hash\r\n+  ~~~~~~~~~~~~\r\n    + CategoryInfo          : ObjectNotFound: (get-filehash:String) [], CommandNotFoundException\r\n    + FullyQualifiedErrorId : CommandNotFoundException\r\n\r\n\r\nC:\\Users\\cddeg>powershell -noprofile -command \"Get-command get-file*\"\r\n\r\nCommandType     Name                                               Version    Source\r\n-----------     ----                                               -------    ------\r\nFunction        Get-FileHash                                       3.1.0.0    Microsoft.PowerShell.Utility\r\nFunction        Get-FileIntegrity                                  2.0.0.0    Storage\r\nFunction        Get-FileShare                                      2.0.0.0    Storage\r\nFunction        Get-FileShareAccessControlEntry                    2.0.0.0    Storage\r\nFunction        Get-FileStorageTier                                2.0.0.0    Storage\r\nCmdlet          Get-FileHash                                       6.1.0.0    Microsoft.PowerShell.Utility\r\n```",
      "created_at": "2019-02-13T00:16:44Z",
      "updated_at": "2019-02-13T00:16:44Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "Ah!! I was running it from the DOS shell. and it works!  \r\nI understand now.  My Bad!  Hehe \r\n\r\nIn PowerShell Core 6.1.2 getting a different message:\r\n```\r\nPS [17] >  pwsh -noprofile -command \"(get-filehash $PSHOME\\pwsh.exe).hash\"\r\nGet-FileHash : Cannot validate argument on parameter 'Algorithm'. The argument \"Files\\PowerShell\\6\\pwsh.exe\" does not belong to the set \"SHA1,SHA256,SHA384,SHA512,MD5\" specified by the ValidateSet attribute. Supply an argument that is in the set and then try the command again.\r\nAt line:1 char:26\r\n+ (get-filehash C:\\Program Files\\PowerShell\\6\\pwsh.exe).hash\r\n+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : InvalidData: (:) [Get-FileHash], ParameterBindingValidationException\r\n+ FullyQualifiedErrorId : ParameterArgumentValidationError,Microsoft.PowerShell.Commands.GetFileHashCommand\r\n```\r\n![pwsh_issue_01_2019-02-12_19-19-14](https://user-images.githubusercontent.com/19892435/52677345-8421fe00-2efb-11e9-8393-1c5214a64353.jpg)\r\n\r\n\r\n\r\n\r\n",
      "created_at": "2019-02-13T00:24:25Z",
      "updated_at": "2019-02-13T00:24:25Z"
    },
    {
      "author": "1480c1",
      "author_association": "NONE",
      "body": "pwsh -noprofile -command {(get-filehash \"$PSHOME\\pwsh.exe\").hash}\r\nYour thing will evaluate to \"C:\\Program\" and \"Files\\Powershell\\6\\pwsh.exe\" as two separate arguments.",
      "created_at": "2019-02-13T00:29:53Z",
      "updated_at": "2019-02-13T00:29:53Z"
    },
    {
      "author": "1480c1",
      "author_association": "NONE",
      "body": "Also note, I'm calling powershell from pwsh, not pwsh from pwsh.",
      "created_at": "2019-02-13T00:30:34Z",
      "updated_at": "2019-02-13T00:30:34Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "@1480c1 \r\n\r\nEven executing Get-filehash in Windows PowerShell in PowerShell Core.  Definitely a cmdlet confusion issue.  \r\n![pwsh_issue_02_2019-02-12_19-19-14](https://user-images.githubusercontent.com/19892435/52677927-d82de200-2efd-11e9-8741-12538fccad46.jpg)\r\n\r\nThanks for the Test.bat!\r\n\r\n:)",
      "created_at": "2019-02-13T00:38:29Z",
      "updated_at": "2019-02-13T00:39:01Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "This is a dupe of https://github.com/PowerShell/PowerShell/issues/6850.  Current proposal is to have a separate env var for PSCore6 so WinPS and PSCore6 can work from within each other.",
      "created_at": "2019-02-19T23:23:14Z",
      "updated_at": "2019-02-19T23:23:14Z"
    }
  ],
  "created_at": "2019-01-13T19:08:16Z",
  "labels": [
    "Resolution-Duplicate",
    "Issue-Discussion"
  ],
  "number": 8635,
  "state": "closed",
  "title": "Running powershell -command 'Get-FileHash' fails",
  "updated_at": "2019-02-19T23:23:14Z"
}