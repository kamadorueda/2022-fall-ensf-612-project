{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3216",
  "author": "mklement0",
  "body": "Steps to reproduce\r\n------------------\r\n\r\n```powershell\r\nGet-ChildItem -LiteralPath \"\\\\?\\$pwd\\NoSuchItemHere\"\r\nGet-Item -LiteralPath \"\\\\?\\$pwd\\NoSuchItemHere\"\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n_Both_ commands should report an error such as follows:\r\n\r\n```none\r\nGet-ChildItem : Cannot find path '\\\\?\\C:\\Users\\jdoe\\NoSuchItemHere' because it does not exist.\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\nOnly the `Get-ChildItem` call reports the error.\r\n\r\nThe `Get-Item` call is a quiet no-op: no output is produced and `$?` is `$True`.\r\n\r\nNote that using the `\\\\?\\` prefix (for opting into long path support ad-hoc) does work in principle.\r\n\r\nAlso note that the behavior doesn't change if you enable long path support by default, as described in [this blog post](https://blogs.msdn.microsoft.com/jeremykuhne/2016/07/30/net-4-6-2-and-long-paths-on-windows-10/). (Although, obviously, you then no longer need the `\\\\?\\` prefix).\r\n\r\nEnvironment data\r\n----------------\r\n\r\n```powershell\r\nPowerShell Core v6.0.0-alpha (v6.0.0-alpha.16) on Microsoft Windows 10 Pro (64-bit; v10.0.14393)\r\n```\r\n",
  "closed_at": "2018-09-18T11:49:32Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@mklement0 Seems it was fixed. I do not know when it happened.",
      "created_at": "2018-09-18T11:49:32Z",
      "updated_at": "2018-09-18T11:49:32Z"
    },
    {
      "author": "Binomimus",
      "author_association": "NONE",
      "body": "Still an issue in 7.2.4",
      "created_at": "2022-05-18T12:05:41Z",
      "updated_at": "2022-05-18T12:05:41Z"
    }
  ],
  "created_at": "2017-02-27T18:01:36Z",
  "number": 3216,
  "state": "closed",
  "title": "Get-Item -LiteralPath with full paths prefixed with \"\\\\?\\\" doesn't fail with nonexistent paths (Windows)",
  "updated_at": "2022-05-18T12:05:41Z"
}