{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5273",
  "author": "iSazonov",
  "body": "The primary purpose of UserAgent string is to inform a web server about the client. This allows the web server to match the client's capabilities by customizing content which it sent to the client.\r\n\r\nIn web cmdlets we can send any UserAgent string to a web server by means of `-UserAgent` parameter. This way, we can force the web server to send a response that matches the specific agent.\r\nA large list of strings can be found on [the site](http://www.useragentstring.com/pages/useragentstring.php)\r\n\r\nOn the other hand, PowerShell Core itself is an web agent and must identify itself so that it can be uniquely recognizeded by the web server.\r\n\r\nWe are now generating strings that are actually misleading. They either conceal the facts or are completely uninformative. We generate different strings for different platforms.\r\nThis makes it difficult for site developers to manage responses.\r\nIn fact, we violate not only common sense but also[ the standard](https://tools.ietf.org/html/rfc7231#section-5.5.3).\r\n\r\nSuggestion is to send the single format string in all cases:\r\n1a. UserAgent: PowerShellCore/6.0.0-Beta.9\r\n1b. UserAgent: PowerShellCore/6.0.0 (6.0.0-Beta.9)\r\n\r\n2a. UserAgent: PowerShellCore/6.0.0-Beta.9 dotNetCore/2.0.0 (Microsoft Windows 10.0.14393)\r\n2b. UserAgent: PowerShellCore/6.0.0 dotNetCore/2.0.0 (6.0.0-Beta.9; Microsoft Windows 10.0.14393)\r\n\r\nI should remind that we have refused to provide a .Net Core version in $PSVersiontable. So the question is whether you should be just as short in UserAgent and not specify the .Net Core version and the OS platform, implying that we're completely ported.",
  "closed_at": "2022-10-04T07:04:12Z",
  "comments": [
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "I had a huge detailed reply to this. instead, I'm just going to make a few small points:\r\n\r\n* If we make a major change to the UA, it should not receive another major change until 7.0.0\r\n* I am against a major change, but open to minor improvements\r\n* UA is one thing that you absolutely should discard the RFC in favor of doing what everyone else is doing or you are going to have a bad time\r\n* I am absolutely against a static UA for all platforms.\r\n* I want to see a detailed piece-by-piece analysis of what exactly is wrong with the current UA, because, as far as I can tell we are already doing it right by keeping a small variation of the historical UA from 5.1 and older. \r\n* \"This makes it impossible for site developers to manage responses.\" Is absolutely not true as servers are already using the UA in 5.1 and older and the current one is only a slight variation\r\n\r\n5.1:\r\n\r\n```\r\nMozilla/5.0 (Windows NT; Windows NT 10.0; en-US) WindowsPowerShell/5.1.15063.674\r\n```\r\n\r\n6.0.0-beta.9 Windows:\r\n\r\n```none\r\nMozilla/5.0 (Windows NT 10.0; Microsoft Windows 10.0.15063; en-US) PowerShell/6.0.0\r\n```\r\n\r\n6.0.0-beta.9 Linux:\r\n```none\r\nMozilla/5.0 (Linux; Linux 4.4.0-96-generic #119-Ubuntu SMP Tue Sep 12 14:59:54 UTC 2017; en-US) PowerShell/6.0.0\r\n```\r\n\r\n6.0.0-beta.9 macOS:\r\n```none\r\nMozilla/5.0 (Macintosh; Darwin 17.0.0 Darwin Kernel Version 17.0.0: Thu Aug 24 21:48:19 PDT 2017; root:xnu-4570.1.46~2/RELEASE_X86_64; ) PowerShell/6.0.0\r\n```",
      "created_at": "2017-10-29T20:13:10Z",
      "updated_at": "2017-10-29T20:25:28Z"
    }
  ],
  "created_at": "2017-10-29T19:05:07Z",
  "number": 5273,
  "state": "closed",
  "title": "UserAgent must match the RFC 7231 standard",
  "updated_at": "2022-10-04T07:04:12Z"
}