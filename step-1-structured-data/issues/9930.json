{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9930",
  "author": "indented-automation",
  "body": "# Steps to reproduce\r\n\r\nWhen the Switch variable is created and assigned a type, the switch statement will no longer function.\r\n\r\n```powershell\r\n[String]$switch = '123'\r\nswitch ('somevalue') {\r\n    'somevalue' { 'matched' }\r\n    default     { 'huh' }\r\n}\r\n```\r\n\r\n# Expected behavior\r\n\r\nThe switch statement above is expected to return the string 'matched'.\r\n\r\n```none\r\nmatched\r\n```\r\n\r\n# Actual behavior\r\n\r\nThe switch statement does not apparently execute. Neither the matching term, nor default, will return a value.\r\n\r\n```none\r\n\r\n```\r\n\r\n# Environment data\r\n\r\nThe problem may be recreated using the versions of PowerShell noted below.\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-preview.1\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-preview.1\r\nOS                             Microsoft Windows 10.0.17134\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.2.1\r\nPSEdition                      Core\r\nGitCommitId                    6.2.1\r\nOS                             Microsoft Windows 10.0.17134\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\nThis problem is inherited from / also exhibits in PowerShell 5.1.\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "I would imagine this is also an issue for a variable like `$foreach`.\r\n\r\nReally, _most_ automatic variables should be properly reserved, and either actively prohibit (with an exception) or ignore (silently) any changes, whether that change is assignment of a value or applying attributes or type constraints.",
      "created_at": "2019-06-18T19:00:54Z",
      "updated_at": "2019-06-18T19:00:54Z"
    }
  ],
  "created_at": "2019-06-18T18:48:29Z",
  "labels": [
    "Issue-Bug",
    "WG-Engine",
    "WG-Language"
  ],
  "number": 9930,
  "state": "open",
  "title": "Switch breaks if $switch is declared and assigned a type",
  "updated_at": "2019-06-19T05:14:36Z"
}