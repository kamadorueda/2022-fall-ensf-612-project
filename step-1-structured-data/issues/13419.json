{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13419",
  "author": "mklement0",
  "body": "`Get-Command <alias>` finds an alias even if the originating module happens not to be loaded (imported) yet (assuming the module's dir. is listed in `$env:PSModulePath`; submitting this command implicitly imports the module on demand).\r\n\r\nBy contrast, `Get-Alias -Definition <aliasTargetCommand>` does _not_ work if the originating module isn't yet loaded, and erroneously suggests that no alias with that target command exists.\r\n\r\nImplementation note: The fix is to run the equivalent of `Get-Command <aliasTargetCommand>` behind the scenes, to force loading of the module.\r\n\r\n## Steps to reproduce\r\n\r\nNote: The tests assume that `Pester` v5.x is installed (`Install-Module Pester`), which defines `Add-AssertionOperator` as an alias of `Add-ShouldOperator`:\r\n\r\n```powershell\r\n# Make sure Pester isn't loaded.\r\nRemove-Module -ea Ignore Pester\r\n\r\n$alias = Get-Alias -Definition Add-ShouldOperator\r\n$alias | Should -Not -BeNull\r\n\r\n# Now that the `Should` call has implicitly imported `Pester`, repeating the test succeeds:\r\nGet-Alias -Definition Add-ShouldOperator | Should -Not -BeNull\r\n```\r\n\r\n## Expected behavior\r\n\r\nBoth tests should succeed.\r\n\r\n## Actual behavior\r\n\r\nThe first test fails, because the alias isn't found, due to the originating module not being loaded.\r\n\r\n```none\r\nGet-Alias: This command cannot find a matching alias because an alias with the definition 'Add-ShouldOperator' does not exist.\r\nExpected a value, but got $null or empty.\r\n```\r\n\r\n## Environment data\r\n\r\n```none\r\nPowerShell Core 7.1.0-preview.5\r\n```\r\n",
  "closed_at": null,
  "comments": [],
  "created_at": "2020-08-12T15:44:59Z",
  "number": 13419,
  "state": "open",
  "title": "Get-Alias -Definition only finds aliases if the originating modules happen to be imported",
  "updated_at": "2020-08-13T13:30:51Z"
}