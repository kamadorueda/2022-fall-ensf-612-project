{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11140",
  "author": "AnthonyPaull",
  "body": "# Support Question\r\n\r\nI've got a JSON file in this format:\r\n[\r\n  {\r\n    \"SensorApp\": \"HWiNFO\",\r\n    \"SensorClass\": \"System: DELL XPS 13 9380\",\r\n    \"SensorName\": \"Virtual Memory Commited\",\r\n    \"SensorValue\": \"7286\",\r\n    \"SensorUnit\": \"MB\",\r\n    \"SensorUpdateTime\": 1574031681\r\n  },\r\n  {\r\n    \"SensorApp\": \"HWiNFO\",\r\n    \"SensorClass\": \"System: DELL XPS 13 9380\",\r\n    \"SensorName\": \"Virtual Memory Available\",\r\n    \"SensorValue\": \"1926\",\r\n    \"SensorUnit\": \"MB\",\r\n    \"SensorUpdateTime\": 1574031681\r\n  },\r\n  {\r\n    \"SensorApp\": \"HWiNFO\",\r\n    \"SensorClass\": \"System: DELL XPS 13 9380\",\r\n    \"SensorName\": \"Virtual Memory Load\",\r\n    \"SensorValue\": \"79\",\r\n    \"SensorUnit\": \"%\",\r\n    \"SensorUpdateTime\": 1574031681\r\n  }\r\n]\r\n\r\nYet every time I convertfrom-JSON and try to get data out (In this case, trying to get temperature info from HWiNFO64), it returns as empty. I can format as a table and see all the data, however nothing I do seems to be able to parse the content of the file and return a value.\r\n\r\nSo my question here is how do I go about getting information (Say in this case, I want to find anything with sensorname -like tjmax and then return the sensorvalue from that object)\r\n\r\nAny suggestions welcome. For reference I'd consider myself competent but not an expert. I'm really hoping there's an easy obvious way to do this that I just missed.\r\n\r\n[192.168.66.38.txt](https://github.com/PowerShell/PowerShell/files/3872103/192.168.66.38.txt)\r\n\r\n\r\n## Official support\r\n\r\n[PowerShell Support Lifecycle](https://aka.ms/pslifecycle)\r\n\r\n## Community Resources\r\n\r\n[Slack][powershell-slack] and [Discord][powershell-discord] Community Chat - Interactive chat with other PowerShell enthusiasts. Both Slack and Discord are bridged via a bot and can seamlessly talk to each other.\r\n\r\n[StackOverflow.com](https://stackoverflow.com/questions/tagged/powershell) and [PowerShell.org Forum](https://powershell.org/forums/) - Search or post new general PowerShell usage questions\r\n\r\n[powershell-slack]: https://join.slack.com/t/powershell/shared_invite/enQtMzA3MDcxNTM5MTkxLTBmMWIyNzhkYzVjNGRiOTgxZmFlN2E0ZmVmOWU5NDczNTY2NDFhZjFlZTM1MTZiMWIzZDcwMGYzNjQ3YTRkNWM\r\n[powershell-discord]: https://discordapp.com/invite/AtzXnJM\r\n",
  "closed_at": "2019-11-23T12:00:23Z",
  "comments": [
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Generally, please note that the issue template is used isn't actually meant to create an issue with - instead, its purpose is to provide _information_ as to _where else_ you can ask for support.\r\n\r\n@SteveL-MSFT, can we try to make this clearer in the various information-only templates? Along the lines of a conspicuous preamble along the lines of:\r\n\r\n> PLEASE DO NOT CREATE AN ISSUE HERE - just read the information below and take the appropriate action elsewhere. Use the Preview tab for a better reading experience and clickable links.\r\n\r\n\r\n",
      "created_at": "2019-11-21T13:39:20Z",
      "updated_at": "2019-11-21T13:39:20Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "As for your specific question:\r\n\r\nYou can use the following to select all objects that have a nonempty `.SensorName` property:\r\n\r\n```powershell\r\n((Get-Content -raw file.json) | ConvertFrom-Json) | Where-Object SensorName\r\n```\r\n\r\nTo extract just the `.SensorName` property values (you'll get an error for input objects that don't have this property, which you can suppress):\r\n\r\n```powershell\r\n((Get-Content -raw file.json) | ConvertFrom-Json) | Select-Object -ExpandProperty SensorName\r\n```\r\n\r\nNote the `(...)` around the `ConvertFrom-Json` call, which is an obscure workaround that is currently required in order to _enumerate_ the objects contained in the JSON array, i.e. to send them _one by one_ through the pipeline, as you would expect.\r\n\r\nThe need for this workaround is about to go away - see #3424",
      "created_at": "2019-11-21T13:41:41Z",
      "updated_at": "2019-11-21T13:49:20Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@mklement0 I wonder if we should just remove that template and instead put Support higher in the main README.md",
      "created_at": "2019-11-21T17:18:00Z",
      "updated_at": "2019-11-21T17:18:00Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT: That would have to been done for all info-only templates, though:\r\n\r\n* Documentation Issue\r\n* Security Issue\r\n* Support Question\r\n* Windows PowerShell\r\n\r\nActually, I just noticed the last entry on the new-issue landing page, \"Report a security vulnerability\", which isn't a template, but simply links to another page (https://github.com/MicrosoftDocs/PowerShell-Docs/security/policy), which looks like the right approach for two reasons:\r\n\r\n* It's read-only - no temptation to submit an issue.\r\n* It renders readably and with clickable links by default.\r\n\r\nTherefore, can't we use the same approach for all the info-only templates above?\r\n\r\n\r\n\n\n<blockquote><img src=\"https://github.githubassets.com/images/modules/open_graph/github-logo.png\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicon.ico\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com\">Build software better, together</a></strong></div><div>GitHub is where people build software. More than 40 million people use GitHub to discover, fork, and contribute to over 100 million projects.</div></blockquote>",
      "created_at": "2019-11-21T21:26:22Z",
      "updated_at": "2019-11-21T21:26:24Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@mklement0 yes, that makes the most sense.  I'll submit a PR.",
      "created_at": "2019-11-21T21:35:33Z",
      "updated_at": "2019-11-21T21:35:33Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "PR: https://github.com/PowerShell/PowerShell/pull/11153",
      "created_at": "2019-11-22T02:57:04Z",
      "updated_at": "2019-11-22T02:57:04Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2019-11-23T12:00:22Z",
      "updated_at": "2019-11-23T12:00:22Z"
    }
  ],
  "created_at": "2019-11-20T23:54:47Z",
  "number": 11140,
  "state": "closed",
  "title": "Support Question: Unable to extract data from JSON file",
  "updated_at": "2019-11-23T12:00:23Z"
}