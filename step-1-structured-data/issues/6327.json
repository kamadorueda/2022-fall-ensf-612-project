{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6327",
  "author": "mklement0",
  "body": "Based on a [suggestion by @AikenBM](https://github.com/PowerShell/PowerShell/issues/3424#issuecomment-370918077), welcomed by @SteveL-MSFT:\r\n\r\nSimilar to how `@(...)` ensures treatment of any value as an array, it would be handy if an `-AsArray` switch could instruct `ConvertTo-Json` to treat its input as an [ultimately JSON] array, so you can _guarantee that your pipeline input is treated as an array_, even if it happens to be a single item only:\r\n\r\n**Wishful thinking:**\r\n\r\n```powershell\r\n> $in = 1; $in | ConvertTo-Json -AsArray\r\n[ \r\n  1 \r\n] \r\n# scalar 1 was treated as an array\r\n\r\n> $in = 1, 2; $in | ConvertTo-Json -AsArray\r\n[ \r\n  1, \r\n  2 \r\n]  \r\n# Input that already is an array is left as-is\r\n```\r\n\r\n**Awkward workaround**, in the absence of `-AsArray`:\r\n\r\n```powershell\r\n> $in = 1; , @($in) | ConvertTo-Json -AsArray\r\n[ \r\n  1 \r\n] \r\n```\r\n\r\n\r\nEnvironment data\r\n----------------\r\n\r\nWritten as of PowerShell Core v6.0.1",
  "closed_at": "2018-03-23T18:23:45Z",
  "comments": [
    {
      "author": "kalgiz",
      "author_association": "CONTRIBUTOR",
      "body": "Fix proposal in #6438. ",
      "created_at": "2018-03-20T17:36:03Z",
      "updated_at": "2018-03-20T17:36:03Z"
    },
    {
      "author": "kalgiz",
      "author_association": "CONTRIBUTOR",
      "body": "Fixed in  #6438.",
      "created_at": "2018-03-23T18:23:45Z",
      "updated_at": "2018-03-23T18:23:45Z"
    }
  ],
  "created_at": "2018-03-06T21:27:06Z",
  "labels": [
    "Issue-Enhancement",
    "Resolution-Fixed",
    "WG-Cmdlets-Utility"
  ],
  "number": 6327,
  "state": "closed",
  "title": "Add an -AsArray switch to ConvertTo-Json to support unconditional conversion to a JSON array",
  "updated_at": "2018-03-24T14:56:07Z"
}