{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5881",
  "author": "iSazonov",
  "body": "In next development cycle we should try to use [`.NET IL Linker`](https://github.com/dotnet/announcements/issues/30) to reduce PowerShell Core distribution (not .Net Core!).\r\nIt can help to find dead code and other amazing things.\r\nAlso we should check the scenario when this tool will be used by other developers using PowerShell Core SDK.",
  "closed_at": "2021-05-25T06:25:55Z",
  "comments": [
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "would this really work for us? I mean, just because PS specific code doesn't touch a code path doesn't mean user-space code wont. If we don't touch the `System.Something.SomeClass` but a user has `$foo = [System.Something.SomeClass]::New()`, wouldn't this break that?",
      "created_at": "2018-01-12T19:04:24Z",
      "updated_at": "2018-01-12T19:04:24Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "My thoughts was about SMA not .Net Core. ",
      "created_at": "2018-01-12T19:45:09Z",
      "updated_at": "2018-01-12T19:45:30Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "I don't think we need additional build complexity to remove dead code from SMA, we should just delete that code.\r\n\r\nOf course if a tool helps find that dead code, then cool. I'm sure the IL Linker is capable of helping, but other tools can as well, e.g. R#.",
      "created_at": "2018-01-12T21:36:46Z",
      "updated_at": "2018-01-12T21:36:46Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@markekraus @lzybkr Thanks! I updated the Issue.",
      "created_at": "2018-01-13T07:11:58Z",
      "updated_at": "2018-01-13T07:11:58Z"
    }
  ],
  "created_at": "2018-01-12T18:20:53Z",
  "number": 5881,
  "state": "closed",
  "title": "Using the .NET IL Linker",
  "updated_at": "2021-05-25T06:25:55Z"
}