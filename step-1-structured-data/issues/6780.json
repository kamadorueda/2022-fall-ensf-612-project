{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6780",
  "author": "rkeithhill",
  "body": "This happens using the new `-Form` parameter that takes a hashtable of values and creates the multi-part form data.\r\n\r\nSteps to reproduce\r\n------------------\r\n1. Find URL to webservice that accepts POST of multi-part form data\r\n2. Run Fiddler or Wireshark to observe the request body\r\n3. Execute IWR similar to below:\r\n\r\n```powershell\r\nInvoke-WebRequest -Uri $Uri -Method POST -Form @{\r\n    APPLICATION_NAME = \"Name\"\r\n    APPLICATION_VERION = \"3.0\"\r\n    UPLOADED_FILE = Get-Item .\\foo.zip\r\n}\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\nUpload works as it does when using Python script to upload the file.  Observe that in this Fiddler trace, that the form-data field values are quoted:\r\n\r\n![image](https://user-images.githubusercontent.com/5177512/39453563-a2a3ffea-4c93-11e8-87d2-edaf749620b9.png)\r\n\r\nActual behavior\r\n---------------\r\nPowerShell fails and after some experimenting it is because the name values are not quoted:\r\n\r\n![image](https://user-images.githubusercontent.com/5177512/39453597-caefb7f0-4c93-11e8-8cc7-97ac9f213aaf.png)\r\n\r\nWith just a few extra quotes e.g.:\r\n\r\n```powershell\r\nInvoke-WebRequest -Uri $Uri -Method POST -Form @{\r\n    '\"APPLICATION_NAME\"' = \"Name\"\r\n    '\"APPLICATION_VERION\"' = \"3.0\"\r\n    '\"UPLOADED_FILE\"' = Get-Item .\\foo.zip\r\n}\r\n```\r\n\r\nI can get the PowerShell request to quote all the field data values **except** the file's `filename` field.  And that is enough to break the upload.  Besides that, the above workaround is ugly.\r\n\r\nAs an aside, is there a way to control the filename value?  If there was, I could work-around this by supplying the quotes myself.  Also, I could see someone wanting to change the filename to something other than the original file's filename.\r\n\r\nThis also makes me wonder if we could use a new parameter like `-RequestFilter` that took a scriptblock with a signature like `{param($requestText) ... }` where you could get the request text just before it is sent.  Then you could manipulate it however you needed to and return that text from this scriptblock.  With such a feature I might be able to do this:\r\n\r\n```powershell\r\nInvoke-WebRequest -Uri $Uri -Method POST `\r\n    -RequesetFilter {param($r) $r -replace '(?<=filename=)(\\S+)','\"$1\"' } `\r\n    -Form @{\r\n        '\"APPLICATION_NAME\"' = \"Name\"\r\n        '\"APPLICATION_VERION\"' = \"3.0\"\r\n        '\"UPLOADED_FILE\"' = Get-Item .\\foo.zip\r\n    }\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.1.0-preview.2\r\nPSEdition                      Core\r\nGitCommitId                    v6.1.0-preview.2\r\nOS                             Microsoft Windows 10.0.16299\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2018-05-08T04:18:10Z",
  "comments": [
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "> As an aside, is there a way to control the filename value? If there was, I could work-around this by supplying the quotes myself. Also, I could see someone wanting to change the filename to something other than the original file's filename.\r\n\r\nFor the `-Form` way, no. This was intentionally simplistic. For customization, users can create their own `MultipartFormDataContent` objects and pass them to `-Body`.\r\n\r\nI'm not a fan of the `-RequestFilter` Idea, but, I would consider accepting an `HttpRequestMessage`. The cmdlets do not send a raw request, so there is no way to really do what you are wanting, The Cmdlets use HttpClient and creates a `HttpRequestMessage` so we could consider allowing the user to supply their own.",
      "created_at": "2018-04-30T23:18:12Z",
      "updated_at": "2018-04-30T23:18:12Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "Re: the issue at hand.\r\n\r\nI did some research and the major browsers and curl all enclose the filename value and the field names in quotes. It seems that .NET is the only thing not doing that. I'll have a PR soon to correct this.",
      "created_at": "2018-04-30T23:21:11Z",
      "updated_at": "2018-04-30T23:21:11Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@rkeithhill Would you be so kind as to try using one of these artifacts https://ci.appveyor.com/project/PowerShell/powershell/build/v6.1.0-preview.9234/artifacts to test against your API and let me know if it works?",
      "created_at": "2018-05-01T09:25:32Z",
      "updated_at": "2018-05-01T09:25:32Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "It works!! Thanks Mark!\n\n-Keith\n\nSent from Mail<https://go.microsoft.com/fwlink/?LinkId=550986> for Windows 10\n\n________________________________\nFrom: Mark Kraus <notifications@github.com>\nSent: Tuesday, May 1, 2018 3:25:41 AM\nTo: PowerShell/PowerShell\nCc: Keith Hill; Mention\nSubject: Re: [PowerShell/PowerShell] Invoke-WebRequest multipart form-data fails file upload when field names not quoted (#6780)\n\n\n@rkeithhill<https://nam02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Frkeithhill&data=02%7C01%7C%7C065e5978285242acc85008d5af45828d%7C84df9e7fe9f640afb435aaaaaaaaaaaa%7C1%7C0%7C636607635426145690&sdata=FSQLHzCJpbioidxPGpcsljPdnKoJt9EI5TMWmj9nNi0%3D&reserved=0> Would you be so kind as to try using one of these artifacts https://ci.appveyor.com/project/PowerShell/powershell/build/v6.1.0-preview.9234/artifacts<https://nam02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fci.appveyor.com%2Fproject%2FPowerShell%2Fpowershell%2Fbuild%2Fv6.1.0-preview.9234%2Fartifacts&data=02%7C01%7C%7C065e5978285242acc85008d5af45828d%7C84df9e7fe9f640afb435aaaaaaaaaaaa%7C1%7C0%7C636607635426145690&sdata=yiTa%2BiKawirOnQdkVpuyVQwj6xh5YzkaVaftV6Omreo%3D&reserved=0> to test against your API and let me know if it works?\n\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub<https://nam02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2FPowerShell%2FPowerShell%2Fissues%2F6780%23issuecomment-385633094&data=02%7C01%7C%7C065e5978285242acc85008d5af45828d%7C84df9e7fe9f640afb435aaaaaaaaaaaa%7C1%7C0%7C636607635426301940&sdata=bxrEHKCbhzixBmWruAlRHHn5tVN8AGJ8erSwS7LYKy4%3D&reserved=0>, or mute the thread<https://nam02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAE8AqKY4Fdb84D9ieUTS-ekcoDOcKaPNks5tuCoVgaJpZM4TtUfG&data=02%7C01%7C%7C065e5978285242acc85008d5af45828d%7C84df9e7fe9f640afb435aaaaaaaaaaaa%7C1%7C0%7C636607635426301940&sdata=trvx7oIkqRodmGkhIBCrgg6yWQNXtX062k%2BZ51RtSGQ%3D&reserved=0>.\n",
      "created_at": "2018-05-01T14:59:17Z",
      "updated_at": "2018-05-01T14:59:17Z"
    }
  ],
  "created_at": "2018-04-30T22:33:29Z",
  "labels": [
    "Resolution-Fixed",
    "WG-Cmdlets-Utility"
  ],
  "number": 6780,
  "state": "closed",
  "title": "Invoke-WebRequest multipart form-data fails file upload when field names not quoted",
  "updated_at": "2018-05-26T18:32:50Z"
}