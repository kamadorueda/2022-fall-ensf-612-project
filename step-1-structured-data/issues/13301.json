{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13301",
  "author": "Ghufz",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 and PowerShell 7+ issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6).\r\n\r\n-->\r\n\r\nI have valid signed PS script file, when I am trying to import the .ps1 file in PowerShell 6.2 and PowerShell7.0 it throws exception. \r\nIt works fine with PowerShell5.1.\r\n\r\nFile to reproduce the issue : [TelemetryDruidBaseFilter.zip](https://github.com/PowerShell/PowerShell/files/4993550/TelemetryDruidBaseFilter.zip)\r\n\r\nNote :- Get-AuthenticodeSignature cmdlet shows the status of the file  \"valid\", for all the platform PowerShell5.1, PowerShell6.2 and PowerShell7.0\r\n\r\n## Steps to reproduce\r\n1) Set the Execution policy to AllSigned\r\n2) Verifiy the AuthentiCode Status using the cmdlet Get-AuthenticodeSignature for the attached .ps1 file\r\n3 Import the .ps1 file \r\n\r\n```powershell\r\n#Behavior on PowerShell 6.2 \r\nPS C:\\> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.2.3\r\nPSEdition                      Core\r\nGitCommitId                    6.2.3\r\nOS                             Microsoft Windows 10.0.17134\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n#set the execution policy to AllSigned\r\nSet-ExecutionPolicy -ExecutionPolicy AllSigned\r\n\r\n#run the cmdlet Get-AuthenticodeSignature to verify the signature\r\nPS C:\\> $VerfiySignature = Get-AuthenticodeSignature -FilePath .\\TelemetryDruidBaseFilter.ps1\r\nPS C:\\> $VerfiySignature\r\n    Directory: C:\\\r\n\r\nSignerCertificate                         Status                                      StatusMessage                              Path\r\n-----------------                         ------                                      -------------                              ----\r\n3B796A6C1A29B673D6A73D2D6868222243A784CD  Valid                                       Signature verified.                        TelemetryDruidBaseFilter.ps1\r\n\r\nPS C:\\> Import-Module -Name .\\TelemetryDruidBaseFilter.ps1 -Verbose\r\nVERBOSE: Loading module from path 'C:\\TelemetryDruidBaseFilter.ps1'.\r\nImport-Module : File C:\\TelemetryDruidBaseFilter.ps1 cannot be loaded. The contents of file C:\\TelemetryDruidBaseFilter.ps1 might have been changed by an unauthorized user or process, because the hash of the file does not match the hash stored in the digital signature. The script cannot run on the specified system. For more information, run Get-Help about_Signing..\r\nAt line:1 char:1\r\n+ Import-Module -Name .\\TelemetryDruidBaseFilter.ps1\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : SecurityError: (:) [Import-Module], PSSecurityException\r\n+ FullyQualifiedErrorId : UnauthorizedAccess,Microsoft.PowerShell.Commands.ImportModuleCommand\r\n\r\n\r\n\r\n#Behavior on PowerShell 7\r\n\r\nPS C:\\> Get-ExecutionPolicy\r\nAllSigned\r\nPS C:\\> $v = Get-AuthenticodeSignature -FilePath .\\AfterCodeSigning\\AfterCodeSigning\\TelemetryDruidBaseFilter.ps1\r\nPS C:\\> $v\r\n\r\n\r\n    Directory: C:\\\r\n\r\nSignerCertificate                         Status                                      StatusMessage                              Path\r\n-----------------                         ------                                      -------------                              ----\r\n3B796A6C1A29B673D6A73D2D6868222243A784CD  Valid                                       Signature verified.                        TelemetryDruidBaseFilter.ps1\r\n\r\nPS C:\\> Import-Module -Name .\\TelemetryDruidBaseFilter.ps1\r\nImport-Module: File C:\\TelemetryDruidBaseFilter.ps1 cannot be loaded. The contents of file C:\\TelemetryDruidBaseFilter.ps1 might have been changed by an unauthorized user or process, because the hash of the file does not match the hash stored in the digital signature. The script cannot run on the specified system. For more information, run Get-Help about_Signing.. \r\n\r\n\r\n```\r\n\r\n## Expected behavior\r\nThe .ps1 file should import without any exception. because it has valid signature.\r\n```none\r\n\r\n```\r\n\r\n## Actual behavior\r\nIt throws exception \r\n```powershell \r\nImport-Module -Name .\\TelemetryDruidBaseFilter.ps1 -Verbose\r\nVERBOSE: Loading module from path 'C:\\TelemetryDruidBaseFilter.ps1'.\r\nImport-Module : File C:\\TelemetryDruidBaseFilter.ps1 cannot be loaded. The contents of file C:\\TelemetryDruidBaseFilter.ps1 might have been changed by an unauthorized user or process, because the hash of the file does not match the hash stored in the digital signature. The script cannot run on the specified system. For more information, run Get-Help about_Signing..\r\nAt line:1 char:1\r\n+ Import-Module -Name .\\TelemetryDruidBaseFilter\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : SecurityError: (:) [Import-Module], PSSecurityException\r\n+ FullyQualifiedErrorId : UnauthorizedAccess,Microsoft.PowerShell.Commands.ImportModuleCommand\r\n```\r\n\r\n## Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\nPS C:\\> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.2.3\r\nPSEdition                      Core\r\nGitCommitId                    6.2.3\r\nOS                             Microsoft Windows 10.0.17134\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n\r\n#The issue is reproducible on PowerShell 7 also \r\n\r\nPS C:\\> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-rc.2\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-rc.2\r\nOS                             Microsoft Windows 10.0.17134\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n#It works as expected with PowerShell 5.1\r\n\r\nPS C:\\> $PSVersionTable\r\n\r\nName                           Value                                                                                         \r\n----                           -----                                                                                         \r\nPSVersion                      5.1.17134.858                                                                                 \r\nPSEdition                      Desktop                                                                                       \r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}                                                                       \r\nBuildVersion                   10.0.17134.858                                                                                \r\nCLRVersion                     4.0.30319.42000                                                                               \r\nWSManStackVersion              3.0                                                                                           \r\nPSRemotingProtocolVersion      2.3                                                                                           \r\nSerializationVersion           1.1.0.1             \r\n\r\n\r\n```\r\n",
  "closed_at": "2020-07-31T17:29:36Z",
  "comments": [
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "The error message suggests the content of the script doesn't match the signature. Given that it only happens in PS 6+, my first guess is that the script is encoded in an extended ASCII encoding like CP1252, and PS 6+'s default of UTF-8 has an issue with that. Some first things to check might be:\r\n\r\n- The encoding of the file (notepad.exe is pretty good at guessing this)\r\n- Whether the script has any special characters in it (ones not in the standard 127 ASCII set)",
      "created_at": "2020-07-29T14:19:31Z",
      "updated_at": "2020-07-29T14:19:31Z"
    },
    {
      "author": "jborean93",
      "author_association": "COLLABORATOR",
      "body": "Wouldn't the authenticode signature be based on the raw bytes of the file and not the string after it's encoded?",
      "created_at": "2020-07-29T22:50:05Z",
      "updated_at": "2020-07-29T22:50:05Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "@TravisEz13 may have a better idea of what's happening here",
      "created_at": "2020-07-29T23:56:54Z",
      "updated_at": "2020-07-29T23:56:54Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Does this only happen to `Import-Module`? What about dot-sourcing the file directly? \r\n/cc @PaulHigin for insights.",
      "created_at": "2020-07-31T15:59:10Z",
      "updated_at": "2020-07-31T15:59:10Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "> Wouldn't the authenticode signature be based on the raw bytes of the file and not the string after it's encoded?\r\n\r\nUnfortunately, this is exactly wrong.\r\n\r\nPlease make sure the file is UTF-8 and it should resolve the issue.\r\n\r\nThis is also, a windows issue (as in the authenticode code live in windows.). The process for filing those issues in in the bug template.\r\n\r\n> For Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)",
      "created_at": "2020-07-31T17:26:45Z",
      "updated_at": "2020-07-31T17:29:11Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "I filed https://github.com/MicrosoftDocs/PowerShell-Docs/issues/6402 to update the documentation",
      "created_at": "2020-07-31T17:39:34Z",
      "updated_at": "2020-07-31T17:39:34Z"
    },
    {
      "author": "Ghufz",
      "author_association": "NONE",
      "body": "> \r\n> \r\n> Does this only happen to `Import-Module`? What about dot-sourcing the file directly?\r\n> /cc @PaulHigin for insights.\r\n\r\nIt happens in dot-sourcing also",
      "created_at": "2020-08-03T06:36:03Z",
      "updated_at": "2020-08-03T06:36:03Z"
    }
  ],
  "created_at": "2020-07-29T08:26:51Z",
  "labels": [
    "Issue-Question",
    "WG-Cmdlets",
    "Resolution-Answered",
    "Resolution-External"
  ],
  "number": 13301,
  "state": "closed",
  "title": "Unable to import the signed ps script file when execution policy is set to AllSigned, Get-AuthenticodeSignature  status is \"Valid\"",
  "updated_at": "2020-08-03T06:36:03Z"
}