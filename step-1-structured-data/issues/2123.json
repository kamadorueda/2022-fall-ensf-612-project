{
  "_url": "https://github.com/PowerShell/PowerShell/issues/2123",
  "author": "ffeldhaus",
  "body": "The following Function and Cmdlets are missing from Microsoft.PowerShell.Utility\n\n``` powershell\nFunction        ConvertFrom-SddlString                             3.1.0.0    Microsoft.PowerShell.Utility\nCmdlet          ConvertFrom-String                                 3.1.0.0    Microsoft.PowerShell.Utility\nCmdlet          Convert-String                                     3.1.0.0    Microsoft.PowerShell.Utility\nCmdlet          ConvertTo-Html                                     3.1.0.0    Microsoft.PowerShell.Utility\nCmdlet          Export-PSSession                                   3.1.0.0    Microsoft.PowerShell.Utility\nCmdlet          Import-PSSession                                   3.1.0.0    Microsoft.PowerShell.Utility\nCmdlet          Out-GridView                                       3.1.0.0    Microsoft.PowerShell.Utility\nCmdlet          Out-Printer                                        3.1.0.0    Microsoft.PowerShell.Utility\nCmdlet          Send-MailMessage                                   3.1.0.0    Microsoft.PowerShell.Utility\nCmdlet          Show-Command                                       3.1.0.0    Microsoft.PowerShell.Utility\nCmdlet          Unblock-File                                       3.1.0.0    Microsoft.PowerShell.Utility\nCmdlet          Update-List                                        3.1.0.0    Microsoft.PowerShell.Utility\n```\n\nIt would be great if at least the `Convert-FromString`, `Convert-String`, `ConvertTo-Html`, `Send-MailMessage` and `Update-List` Cmdlets get implemented. The `Out-GridView`and `Show-Command` Cmdlets may be difficult due to graphical interface requirements, similar for `Out-Printer` with external printer requirement. A removal notice (ideally including explanation) should be added to the release notes for the other Cmdlets if they will be permanantly removed.\n",
  "closed_at": "2019-09-29T07:37:58Z",
  "comments": [
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "[Command availability table](https://github.com/PowerShell/PowerShell/blob/master/docs/KNOWNISSUES.md#command-availability) need to be updated.\n",
      "created_at": "2016-08-31T11:51:33Z",
      "updated_at": "2016-08-31T11:51:33Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "I just coming up with these missing ones.  But specially I was need the ConvertTo-Html cmdlet.\n",
      "created_at": "2016-09-04T18:40:30Z",
      "updated_at": "2016-09-04T18:40:30Z"
    },
    {
      "author": "Pax-IT",
      "author_association": "NONE",
      "body": "+1 on the missing ConvertTo-Html \n",
      "created_at": "2016-09-07T10:48:01Z",
      "updated_at": "2016-09-07T10:48:01Z"
    },
    {
      "author": "ed-ilyin",
      "author_association": "NONE",
      "body": "Missing Send-MailMessage\n",
      "created_at": "2016-09-07T11:40:21Z",
      "updated_at": "2016-09-07T11:40:21Z"
    },
    {
      "author": "Pax-IT",
      "author_association": "NONE",
      "body": "This example from Technet to solve my issue with missing the ConvertTo-Html cmdlet does not work either.\n\n`\n$URL = Read-Host \"Enter URL to Decode\" \n$Encode = [System.Web.HttpUtility]::UrlEncode($URL) \nWrite-Host \"This is the Encoded URL\" $Encode -ForegroundColor Green`\n\n`\n-   $Encode = [System.Web.HttpUtility]::UrlEncode($URL)\n-             ~~~~~~~~~~~~~~~~~~~~~~~~\n  - CategoryInfo          : InvalidOperation: (System.Web.HttpUtility:TypeName) [], RuntimeException\n  - FullyQualifiedErrorId : TypeNotFound`\n\nEDIT: found a working solution\n`[uri]::EscapeDataString($SitePath)`\n",
      "created_at": "2016-09-07T11:45:38Z",
      "updated_at": "2016-09-07T11:47:41Z"
    },
    {
      "author": "alanrenouf",
      "author_association": "NONE",
      "body": "+1 on the missing ConvertTo-Html\n",
      "created_at": "2016-09-08T04:40:34Z",
      "updated_at": "2016-09-08T04:40:34Z"
    },
    {
      "author": "westforkfab",
      "author_association": "NONE",
      "body": "I successfully build the PS module in Ubuntu 16.04 as shown in https://github.com/PowerShell/PowerShell/blob/master/docs/building/linux.md\n\nI am doing some tests and I have this error:\n\nUnable to find type [System.Net.ServicePointManager].\n\nAlso I can't find [System.Web].\n",
      "created_at": "2016-10-06T23:02:37Z",
      "updated_at": "2016-10-06T23:02:37Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee reviewed this, show-command, unblock-file, out-gridview, out-printer won't be in PowerShell Core.  ConvertFrom-String and Convert-String is dependent on MSR.  The other ones should be in PS Core.\n",
      "created_at": "2016-11-03T00:07:58Z",
      "updated_at": "2016-11-03T00:07:58Z"
    },
    {
      "author": "Liturgist",
      "author_association": "NONE",
      "body": "Is there any documentation I could read to get a better understanding of the planned structure? Is there a definition of PowerShell Core? Are there other PowerShell ??? kits defined?\n\nToday I was looking for [System.Web.HttpUtility]::HtmlEncode(), but ended up using [uri]::EscapeDataString() mentioned in this issue. Not totally the same thing.\n",
      "created_at": "2016-11-12T02:54:51Z",
      "updated_at": "2016-11-12T02:54:51Z"
    },
    {
      "author": "pcgeek86",
      "author_association": "NONE",
      "body": "Are there plans to implement Send-MailMessage? Maybe this should be broken out into separate issues for specific cmdlet implementations.",
      "created_at": "2017-02-07T22:26:39Z",
      "updated_at": "2017-02-07T22:26:39Z"
    },
    {
      "author": "LeeSartorelli",
      "author_association": "NONE",
      "body": "Is ConvertFrom-String going to be added? I see in a comment above it is dependent on MSR.... what does this mean?",
      "created_at": "2017-09-12T03:22:48Z",
      "updated_at": "2017-09-12T03:22:48Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "No plans at this time to port ConvertFrom-String.  MSR means Microsoft Research.  That cmdlet uses code not planned to be Open Source.",
      "created_at": "2017-09-12T03:56:17Z",
      "updated_at": "2017-09-12T03:56:17Z"
    },
    {
      "author": "MathiasMagnus",
      "author_association": "NONE",
      "body": "I was wondering what is the fundamental opposition against `Unblock-File`. The problem is, that without it on Windows, PS Core as it is, is very hard to use. #2657 shows that there is a **major** perf difference when it comes to downloaded content, may that be from the browser or an installed module.\r\n\r\n_(I suspect that the ~5 second startup time of PS6 versus ~0.7 second startup of PS5 is due to some similar difference, even though I unblocked the entire PS6 install dir and all downloaded modules already. Something must still remain unblocked I guess.)_\r\n\r\nI really want to advocate PS6 at my institute for daily use not just by sysadmins, but also end users. Truth is, discrepancies like Unblock-File, the total absence of NetAdapter cmdlets really take a toll on its view. I must say things like:\r\n\r\n\"Well, if you're on Windows, you can configure your network like this. If you're on Linux, you still gotta go with the same config files and/or config utilities. If you're on Windows, you gotta unblock the downloaded content you trust; to do that, pop-open another shell with slightly different language rules (& operator vs. operator &) and issue that oneliner there.\"\r\n\r\nThese stuff breaks the workflow and generally give the picture, that PS6 is a hack. I will probably demo PS5 on Windows and PS6 on Linux and just silently omit the differences (and also not show any of the differing parts which hurts usability on both ends), and also one has to make do with stuff like: don't use Workflow Foundation, because that stuff is not portable, also don't use DSC, beause proper PowerShell DSC resources don't exist yet (OMI+Linux vs. WMI is a strange duality, I'd rather mention DSC only when it's properly portable), even if it did, the number of Linux resources **greatly** lack landscape. (User, Group, Package and File. Really??? No NetAdapter, DNS, PackageMirror, PXEServer, PXEClient, ApacheServer or any of the interesting stuff??)\r\n\r\nApologies for the lengthy ranting, I understand that PS6 is the first step on a very long journey, but missing core cmdlets that are part of the basic workflow doesn't paint a good picture. Download a zip from web, extract/expand, deploy and run.\r\n\r\n- iwr recently caught up to browser/*nix wget speed (#2656)\r\n- Unzipping itself is still 6X slower than 7zip ([issue](https://github.com/PowerShell/Microsoft.PowerShell.Archive/issues/32))\r\n- PS6 launches 7X slower than PS5 (mentioned before)\r\n- PS6 cannot even unblock itself to omit triggering AMSE on **every** startup\r\n\r\nHow should I advocate PS6 with these issues? Any Linux sysadmin will think operning a terminal in 5 seconds is a joke already.",
      "created_at": "2017-11-05T15:18:38Z",
      "updated_at": "2017-11-05T15:18:38Z"
    },
    {
      "author": "MathiasMagnus",
      "author_association": "NONE",
      "body": "_Just to be fair, when no `$PROFILE` file exists, PS6 launches just as fast as PS5 (with a simple profile). If I create an empty `$PROFILE` file, (totally empty), it adds 4 seconds to the startup time. Reported under #5345_",
      "created_at": "2017-11-05T16:02:14Z",
      "updated_at": "2017-11-05T16:24:34Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@MathiasMagnus We already have ` Unblock-File ` in PowerShell Core.  Microsoft.PowerShell.Archive is not in the repo.\r\nDid you run startup tests on the latest version?",
      "created_at": "2017-11-05T18:55:35Z",
      "updated_at": "2017-11-05T18:55:35Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Current status:\r\n\r\n- [x] ConvertFrom-SddlString\r\n- [ ] ConvertFrom-String    See https://github.com/PowerShell/PowerShell/issues/2123#issuecomment-258036710\r\n- [ ] Convert-String        See https://github.com/PowerShell/PowerShell/issues/2123#issuecomment-258036710\r\n- [x] ConvertTo-Html        \r\n- [x] Export-PSSession      \r\n- [x] Import-PSSession      \r\n- [x] Out-GridView       See https://github.com/PowerShell/GraphicalTools\r\n- [ ] Out-Printer           See https://github.com/PowerShell/PowerShell/issues/2123#issuecomment-258036710\r\n- [x] Send-MailMessage      \r\n- [ ] Show-Command  See https://github.com/PowerShell/GraphicalTools/issues/15\r\n- [x] Unblock-File          \r\n- [ ] Update-List           See https://github.com/PowerShell/PowerShell/pull/5371#issuecomment-342993872\r\n",
      "created_at": "2017-11-05T19:05:27Z",
      "updated_at": "2019-09-29T07:37:27Z"
    },
    {
      "author": "MathiasMagnus",
      "author_association": "NONE",
      "body": "Well, it exists, it just doesn't work.\r\n\r\n```PowerShell\r\nPS C:\\Users\\Matty> Unblock-File $PROFILE\r\nUnblock-File : A rendszer nem tal\u00e1lja a megadott f\u00e1jlt\r\nAt line:1 char:1\r\n+ Unblock-File $PROFILE\r\n+ ~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : PermissionDenied: (C:\\Users\\Matty\\...ell_profile.ps1:String) [Unblock-File], Win32Except\r\n   ion\r\n    + FullyQualifiedErrorId : RemoveItemUnauthorizedAccessError,Microsoft.PowerShell.Commands.UnblockFileCommand\r\n\r\nPS C:\\Users\\Matty> Test-Path $PROFILE\r\nTrue\r\n```\r\n\r\nIt throws an UnautorizedAccessError exception on my own profile, and any file I tested it with. How can my setup go wrong?",
      "created_at": "2017-11-06T17:07:01Z",
      "updated_at": "2017-11-06T17:07:01Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@MathiasMagnus working for me on beta.9 using win-x64.zip release:\r\n\r\n```powershell\r\nunblock-file .\\PowerShell-6.0.0-beta.9-win-x86.zip\r\n```\r\n\r\nHowever, if the file is not blocked, you will get that error message:\r\n\r\n```powershell\r\n#running second time\r\nPS C:\\Users\\slee\\Downloads> unblock-file .\\PowerShell-6.0.0-beta.9-win-x86.zip\r\nunblock-file : The system cannot find the file specified\r\nAt line:1 char:1\r\n+ unblock-file .\\PowerShell-6.0.0-beta.9-win-x86.zip\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : PermissionDenied: (C:\\Users\\slee\\D...a.9-win-x86.zip:String) [Unblock-File], Win32Exception\r\n+ FullyQualifiedErrorId : RemoveItemUnauthorizedAccessError,Microsoft.PowerShell.Commands.UnblockFileCommand\r\n```\r\n\r\nWe should probably quietly succeed if that stream isn't available to remove.  Created issue https://github.com/PowerShell/PowerShell/issues/5353",
      "created_at": "2017-11-06T17:32:37Z",
      "updated_at": "2017-11-06T17:32:37Z"
    },
    {
      "author": "MathiasMagnus",
      "author_association": "NONE",
      "body": "@SteveL-MSFT Thanks for looking into it, and thanks to @iSazonov for the fix. Not being a .NET developer (C++ and GPGPU) I very often feel dumb when I try to debug anything PS related. I just use it as an interactive shell (and very little scripting) as a replacement for bash, but with an actual type system (something I feel home at).",
      "created_at": "2017-11-07T12:57:31Z",
      "updated_at": "2017-11-07T12:57:31Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@MathiasMagnus We welcome any feedback. Not only bugs but also the most hot features.",
      "created_at": "2017-11-07T13:26:16Z",
      "updated_at": "2017-11-07T13:26:16Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I'm prepping a PR to add `Update-List` the other cmdlets we don't have any plans to port",
      "created_at": "2017-11-07T21:09:28Z",
      "updated_at": "2017-11-07T21:09:28Z"
    },
    {
      "author": "christian-korneck",
      "author_association": "NONE",
      "body": "Just out of interest: What's the reason why `Out-GridView`  won't be part of PS Core?",
      "created_at": "2017-12-31T01:04:48Z",
      "updated_at": "2017-12-31T01:04:48Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "The current implementation (in Windows PowerShell) uses WPF which isn't available on Linux or macOS.  ",
      "created_at": "2017-12-31T01:14:27Z",
      "updated_at": "2017-12-31T01:14:27Z"
    },
    {
      "author": "christian-korneck",
      "author_association": "NONE",
      "body": "@rkeithhill thanks for the explanation!",
      "created_at": "2017-12-31T01:29:45Z",
      "updated_at": "2017-12-31T01:29:45Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "We want and have plans to implement `Out-GridView` on another platform.",
      "created_at": "2017-12-31T07:46:53Z",
      "updated_at": "2017-12-31T07:46:53Z"
    },
    {
      "author": "MathiasMagnus",
      "author_association": "NONE",
      "body": "When did Test-Connection disappear and why? It was in RC1 I believe...",
      "created_at": "2017-12-31T10:02:47Z",
      "updated_at": "2017-12-31T10:02:47Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "`Test-Connection` was not ported (old Windows only code). Currently we have new ported version in #5328 but not jet merged.",
      "created_at": "2017-12-31T13:49:41Z",
      "updated_at": "2017-12-31T13:49:41Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I updated current status in https://github.com/PowerShell/PowerShell/issues/2123#issuecomment-341996659\r\nI believe we can close the issue.",
      "created_at": "2019-09-29T07:37:58Z",
      "updated_at": "2019-09-29T07:37:58Z"
    }
  ],
  "created_at": "2016-08-29T21:31:45Z",
  "number": 2123,
  "state": "closed",
  "title": "Several Cmdlets from Microsoft.PowerShell.Utility are missing",
  "updated_at": "2019-09-29T07:37:58Z"
}