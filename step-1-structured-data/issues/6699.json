{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6699",
  "author": "iSazonov",
  "body": "In #6691 we made that Export-FormatData returns pretty-printing XML output by default as requested in #6681.\r\n\r\nUsers may need a different output:\r\n`-AsXML` - output [xml] object\r\n`-AsXMLString` or `-AsString` - output compact XML string without formatting.\r\n`-Encoding` - set encoding of output file .\r\n\r\nAnd perhaps add option to output to pipe not file and `-PassThru`.",
  "closed_at": "2021-08-25T04:10:48Z",
  "comments": [
    {
      "author": "BrucePay",
      "author_association": "COLLABORATOR",
      "body": "`Export` commands don't typically return data. Perhaps `Get-FormatData` would be better for returning an `[xml]` object? Just curious - why the request for compact XML ? Is the formatted stuff that much bigger? Adding `-encoding` to match, for example `export-csv`, makes sense.",
      "created_at": "2018-04-22T19:39:42Z",
      "updated_at": "2018-04-22T19:39:42Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> why the request for compact XML \r\n\r\n@markekraus requested this in #6691.",
      "created_at": "2018-04-23T03:58:49Z",
      "updated_at": "2018-04-23T03:58:49Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "For me, it's not so much about having a compression/compact option, but having a way to revert behavior. I'm not a big fan of changing output behavior in such a way that increases resource consumption without a way to revert the behavior if change was not fixing a broken behavior and implementing the previous behavior is simple enough.",
      "created_at": "2018-04-23T09:51:40Z",
      "updated_at": "2018-04-23T09:51:40Z"
    }
  ],
  "created_at": "2018-04-22T14:14:26Z",
  "number": 6699,
  "state": "closed",
  "title": "Export-FormatData XML output",
  "updated_at": "2021-08-25T04:10:48Z"
}