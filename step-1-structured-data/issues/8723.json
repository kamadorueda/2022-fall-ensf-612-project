{
  "_url": "https://github.com/PowerShell/PowerShell/issues/8723",
  "author": "Hobadee",
  "body": "# Steps to reproduce\r\n\r\nFrom an OSX client to a Windows host:\r\n```powershell\r\nPS /Users/myuser> $cred = Get-Credential\r\n\r\nPowerShell credential request\r\nEnter your credentials.\r\nUser: domain\\user\r\nPassword for user domain\\user: ************\r\n\r\nPS /Users/myuser> $session = New-PSSession -HostName \"windows.host\" -UserName \"domain\\user\" -KeyFilePath \"/Users/myuser/.ssh/id_rsa\"\r\nPS /Users/myuser> Invoke-Command -Session $session -ScriptBlock {param($c) $Global:Credential = $c} -ArgumentList $cred\r\n\r\n#### PowerShell locks up here and doesn't respond.  It must be killed externally. ####\r\n```\r\n\r\n# Expected behavior\r\n\r\nThe `Invoke-Command` command should return and set a global parameter on the remote session.\r\n\r\n# Actual behavior\r\n\r\nPowerShell freezes and must be terminated externally.\r\n\r\n# Additional Notes\r\n\r\nI came across this issue because I was unable to run Get-Credential directly on the remote machine.  I suspect the issues are related.  When attempting to run Get-Credential directly on the remote machine, it hangs for a little bit, then returns an error:\r\n\r\n```powershell\r\n[domain\\user@windows.host]: PS C:\\Users\\myuser> $cred = Get-Credential\r\n\r\nPowerShell Credential Request: PowerShell credential request\r\nWarning: A script or application on the remote computer WINDOWS.HOST is requesting your credentials. Enter your credentials only if you trust the remote computer and the application or script that is requesting them.\r\n\r\nEnter your credentials.\r\nUser: domain\\user\r\nPassword for user domain\\user: ************\r\n```\r\nAt this point, the system hangs until you press \"ctrl-c\" to terminate it.  Once you press \"ctrl-c\" it outputs the following before dumping you back into a shell.\r\n```powershell\r\nUnable to load shared library 'api-ms-win-security-cryptoapi-l1-1-0.dll' or one of its dependencies. In order to help diagnose loading problems, consider setting the DYLD_PRINT_LIBRARIES environment variable: dlopen(libapi-ms-win-security-cryptoapi-l1-1-0.dll, 1): image not found\r\n+ CategoryInfo          : ResourceUnavailable: (:) [], ParentContainsErrorRecordException\r\n+ FullyQualifiedErrorId : System.Management.Automation.Remoting.PSRemotingDataStructureException\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nOSX Client:\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.1.1\r\nPSEdition                      Core\r\nGitCommitId                    6.1.1\r\nOS                             Darwin 18.2.0 Darwin Kernel Version 18.2.0: Mon Nov 12 20:24:46 PST 2018; root:xnu-4903.231.4~2/RELEASE_X86_64\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n\r\nWindows Host:\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.1.1\r\nPSEdition                      Core\r\nGitCommitId                    6.1.1\r\nOS                             Microsoft Windows 6.1.7601 S\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2019-02-07T23:36:14Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@PaulHigin Please look the issue.",
      "created_at": "2019-01-25T05:06:23Z",
      "updated_at": "2019-01-25T05:06:23Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "It appears that `ExportLocalPublicKey()` is being called in `clientremotesession.cs` which causes the dll load exception since that dll only exists on Windows.  This results in the client waiting for the key exchange to complete which never does due to the exception. ",
      "created_at": "2019-01-25T05:11:53Z",
      "updated_at": "2019-01-25T05:37:53Z"
    }
  ],
  "created_at": "2019-01-23T21:04:45Z",
  "labels": [
    "Issue-Bug",
    "OS-macOS",
    "Resolution-Fixed",
    "WG-Remoting"
  ],
  "number": 8723,
  "state": "closed",
  "title": "SSH remoting Credential objects from OSX can hard-lock Powershell",
  "updated_at": "2019-02-08T05:03:33Z"
}