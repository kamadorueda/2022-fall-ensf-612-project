{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5338",
  "author": "markekraus",
  "body": "closes #5320 \r\n\r\nWhen an API returns just `null`, `Invoke-RestMethod` was serializing this as the string `\"null\"` instead of `$null`. Singe value literals are valid JSON according to [rfc7159](https://tools.ietf.org/html/rfc7159) section 2:\r\n\r\n```none\r\n   A JSON text is a serialized value.  Note that certain previous\r\n   specifications of JSON constrained a JSON text to be an object or an\r\n   array.  Implementations that generate only objects or arrays where a\r\n   JSON text is called for will be interoperable in the sense that all\r\n   implementations will accept these as conforming JSON texts.\r\n```\r\n\r\nInvoke-RestMethod is already properly managing `false`, `true`, numbers, string, arrays, and objects.\r\n\r\nThis PR fixes the logic in `Invoke-RestMethod` to properly serialize a valid single value JSON `null` literal as `$null`.\r\n\r\nThis is a breaking change in the sense that users who are using `Invoke-RestMethod` against endpoints that returned single value `null` likely have logic in place to work around the current broken behavior.This change will break that logic.",
  "closed_at": "2017-11-14T03:53:44Z",
  "comments": [
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov I switched to `JToken.Parse()` and re did some of the logic to make it cleaner (less false assignments). \r\nI borrowed the the exception handling code for  `JToken.Parse()` from `ConvertFfomJson()` for consistency, though, I'm not sure that exception ever actually sees the light of day.",
      "created_at": "2017-11-05T14:44:08Z",
      "updated_at": "2017-11-05T14:44:08Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "/cc @SteveL-MSFT this one should probably be merged before RC unless we plan to break this in 6.1. committee approved breaking change here https://github.com/PowerShell/PowerShell/issues/5320#issuecomment-342995426",
      "created_at": "2017-11-10T16:59:32Z",
      "updated_at": "2017-11-10T16:59:32Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-maintainers @SteveL-MSFT @joeyaiello I recommend we take this for RC.  ",
      "created_at": "2017-11-10T21:00:57Z",
      "updated_at": "2017-11-10T21:00:57Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@markekraus @TravisEz13 yes, please take for RC",
      "created_at": "2017-11-11T04:57:40Z",
      "updated_at": "2017-11-11T04:57:40Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Are we ready to merge?",
      "created_at": "2017-11-11T09:20:45Z",
      "updated_at": "2017-11-11T09:20:45Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov I think this is ready to merge",
      "created_at": "2017-11-11T23:09:30Z",
      "updated_at": "2017-11-11T23:09:30Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Reopen to restart CI.",
      "created_at": "2017-11-13T06:35:13Z",
      "updated_at": "2017-11-13T06:35:13Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov *sigh. It looks like both Travis CI tests passed, but it has not updated the PR.",
      "created_at": "2017-11-13T09:57:59Z",
      "updated_at": "2017-11-13T09:57:59Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I can not manually merge \ud83d\ude15 ",
      "created_at": "2017-11-13T11:03:31Z",
      "updated_at": "2017-11-13T11:03:31Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@markekraus can you rebase and pick up #5249?",
      "created_at": "2017-11-13T17:55:59Z",
      "updated_at": "2017-11-13T17:55:59Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "rebased.",
      "created_at": "2017-11-13T18:33:58Z",
      "updated_at": "2017-11-13T18:33:58Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@markekraus  there is a merge conflict now.",
      "created_at": "2017-11-13T20:16:12Z",
      "updated_at": "2017-11-13T20:16:12Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "rebased.",
      "created_at": "2017-11-13T20:29:30Z",
      "updated_at": "2017-11-13T20:29:30Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "restarted appveyor due to github rate limit failure",
      "created_at": "2017-11-13T22:44:18Z",
      "updated_at": "2017-11-13T22:44:18Z"
    }
  ],
  "created_at": "2017-11-04T12:25:07Z",
  "number": 5338,
  "state": "closed",
  "title": "Fix Single Value JSON null in Invoke-RestMethod",
  "updated_at": "2018-01-19T18:58:11Z"
}