{
  "_url": "https://github.com/PowerShell/PowerShell/issues/1282",
  "author": "quoctruong",
  "body": "Make the Platform class public.\nAdded PowerShell location to the XDG_Type enum.\nUses these locations in NuGetProvider\n\n<!-- Reviewable:start -->\n\n---\n\nThis change is [<img src=\"https://reviewable.io/review_button.svg\" height=\"35\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/powershell/powershell/1282)\n\n<!-- Reviewable:end -->\n",
  "closed_at": "2016-07-06T19:15:59Z",
  "comments": [
    {
      "author": "quoctruong",
      "author_association": "NONE",
      "body": "_[src/Microsoft.PackageManagement.NuGetProvider/NugetLightRequest.cs, line 241 [r1]](https://reviewable.io:443/reviews/powershell/powershell/1282#-KLwvY60VlglIm_CXLUz-r1-241:-KLxV7dxi3-1wYMm6THx:1089719180) ([raw file](https://github.com/powershell/powershell/blob/54784cb77a97d4fdd27b0fd796c2f1db3a0d22da/src/Microsoft.PackageManagement.NuGetProvider/NugetLightRequest.cs#L241)):_\n<details><summary>\n\n<i>Previously, andschwa (Andy Schwartzmeyer) wrote\u2026</i></summary>\n\n\n\n> The one thing that makes me uncomfortable with this is that it is, by its nature, user dependent. This will be the user's default install location. A shared \"all user\" location would need to be where PowerShell resides, so `/opt/microsoft/powershell/PackageManagement`. But that likewise makes me uncomfortable as the powershell folder is owned by the package, which has every right to rewrite the whole folder on upgrade. Perhaps go up a directory, to `/opt/microsoft/PackageManagement`. @raghushantha what do you think?\n> </details>\n> I didn't separate user installation and admin installation location because if an admin wants to, he/she can still specify the Destination directly. Also, @andschwa , is there a way to check whether the cmdlet is run on sudo or not?\n\n---\n\n_Comments from [Reviewable](https://reviewable.io:443/reviews/powershell/powershell/1282)_\n\n<!-- Sent from Reviewable.io -->\n",
      "created_at": "2016-07-06T00:06:35Z",
      "updated_at": "2016-07-06T00:06:35Z"
    },
    {
      "author": "raghushantha",
      "author_association": "MEMBER",
      "body": ":shipit: \n",
      "created_at": "2016-07-06T18:18:03Z",
      "updated_at": "2016-07-06T18:18:03Z"
    },
    {
      "author": "quoctruong",
      "author_association": "NONE",
      "body": "Thanks!\n",
      "created_at": "2016-07-06T19:15:43Z",
      "updated_at": "2016-07-06T19:15:43Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Ah GitHub went down as I tried to add this: :shipit: \n\nThanks @quoctruong!\n",
      "created_at": "2016-07-06T20:42:15Z",
      "updated_at": "2016-07-06T20:42:15Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "I can't seem to reply directly to this @quoctruong:\n\n> I didn't separate user installation and admin installation location because if an admin wants to, he/she can still specify the Destination directly. Also, @andschwa , is there a way to check whether the cmdlet is run on sudo or not?\n\nCmdlets themselves won't be run as sudo, as they're not separate processes. But PowerShell may have been. If you need to check the process, I believe you check `EUID`, which will be 0 when running as root.\n",
      "created_at": "2016-07-06T20:45:09Z",
      "updated_at": "2016-07-06T20:45:09Z"
    }
  ],
  "created_at": "2016-07-05T21:18:56Z",
  "number": 1282,
  "state": "closed",
  "title": "Expose Platform API from SMA and uses that in NuGetProvider",
  "updated_at": "2016-07-06T20:45:09Z"
}