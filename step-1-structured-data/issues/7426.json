{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7426",
  "author": "adrienst",
  "body": "I am not sure if it's a bug.\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n$Array = 1,2,3,4,5\r\nGet-member -inputobject $Array\r\n\r\nExpected behavior\r\n-----------------\r\nI expected the Where and the ForEach method would show in a Get-member\r\n\r\nActual behavior\r\n---------------\r\n\r\nWhere and ForEach method don't show in a Get-member \r\n\r\nEnvironment data\r\n----------------\r\n\r\n\r\n> $PSVersionTable\r\nPSVersion                      6.1.0-preview.4\r\nPSEdition                      Core\r\nGitCommitId                    6.1.0-preview.4\r\nOS                             Microsoft Windows 10.0.17134\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "These methods are PSv4+ and it took a while to even get them _documented_ - now they are, as part of [`Get-Help about_Arrays`](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_arrays)\r\n\r\nSimilarly, the implicit `.Count` and `.Length` properties are mentioned there.\r\n\r\nWhat these have in common is that they're _part of the plumbing_, if you will: PowerShell makes them available on instances of _any_ type, so as to facilitate unified handling of collections and scalars; e.g.:\r\n\r\n```powershell\r\n# Invoke .ForEach on string *scalar*\r\nPS> 'foo'.ForEach({ \"Hi, $_.\" }\r\nHi, foo.\r\n\r\n# Invoke .Count on an integer *scalar*\r\nPS> (666).Count\r\n1\r\n```\r\n\r\nSo there is some justification in omitting them from reflecting on a _given type's_ members, given they're not really members of any individual type.\r\n\r\nThat said, perhaps they could be discovered via new `-View` mode, such as `Get-Member -View Universal` - though discovering that view mode may in itself be a challenge.\r\n\r\nI guess showing them by default is an option, but I wonder if that introduces too much noise.",
      "created_at": "2018-08-03T19:29:08Z",
      "updated_at": "2018-08-03T19:29:08Z"
    }
  ],
  "created_at": "2018-08-01T16:15:14Z",
  "labels": [],
  "number": 7426,
  "state": "open",
  "title": "Where and forEach method missing in Get-member",
  "updated_at": "2018-08-03T19:29:08Z"
}