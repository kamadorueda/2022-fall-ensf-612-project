{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4266",
  "author": "refack",
  "body": "<!--\r\n\r\nIf it is a bug report:\r\n- make sure you are able to repro it on the latest released version. \r\nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\r\n- Search the existing issues.\r\n- Refer to the [FAQ](../docs/FAQ.md).\r\n- Refer to the [known issues](../docs/KNOWNISSUES.md).\r\n- Fill out the following repro template\r\n\r\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\r\n-->\r\nThis should probably go to the Windows group, but Github is a better platform.\r\nRef: https://github.com/nodejs/node/issues/14243\r\n\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\nnode\r\n> process.stdout.write(`\\u001b[35mXXX\\u001b[39m`)\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\nmegenta output\r\n![image](https://user-images.githubusercontent.com/96947/28250472-83dd43da-6a37-11e7-91c8-682c6989a63f.png)\r\n\r\nActual behavior\r\n---------------\r\ndark blue output (same as background)\r\n![image](https://user-images.githubusercontent.com/96947/28250572-c85d6772-6a39-11e7-920b-eb3540a71dd3.png)\r\n\r\nEnvironment data\r\n----------------\r\nThe default [powershell `.lnk`](https://stackoverflow.com/questions/13690223/how-can-i-launch-powershell-exe-with-the-default-colours-from-the-powershell-s) remaps colors 35, and 36 \r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n![image](https://user-images.githubusercontent.com/96947/28250592-67b454e8-6a3a-11e7-8d37-dab2436ff8ed.png)",
  "closed_at": "2020-06-30T15:17:19Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@refack Thanks for your report! Could you please test with latest PowerShell Core version - Beta.4?",
      "created_at": "2017-07-17T10:46:50Z",
      "updated_at": "2017-07-17T10:46:50Z"
    },
    {
      "author": "refack",
      "author_association": "NONE",
      "body": "Direct execution:\r\n![image](https://user-images.githubusercontent.com/96947/28265701-15e8ada0-6abf-11e7-85de-74826640f87f.png)\r\n\r\nWith the shortcut:\r\n![image](https://user-images.githubusercontent.com/96947/28265733-4203d2de-6abf-11e7-8044-088fb8b7ba25.png)\r\n\r\nThe `.lnk` file\r\n[powershel.lnkl.zip](https://github.com/PowerShell/PowerShell/files/1152332/powershel.lnkl.zip)\r\n",
      "created_at": "2017-07-17T11:13:10Z",
      "updated_at": "2017-07-17T11:13:10Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@refack Thanks for the test!",
      "created_at": "2017-07-17T11:32:16Z",
      "updated_at": "2017-07-17T11:32:16Z"
    },
    {
      "author": "BrucePay",
      "author_association": "COLLABORATOR",
      "body": "FWIW - some background:  This behavior is actually intentional. Prior to the V1 release of PowerShell, the UI designers picked colors for the PowerShell console. Since the background color they chose wasn't part of the standard palette, one of the less used standard colors was remapped to produce what the designers wanted. It's been shipping that way ever since.",
      "created_at": "2017-07-18T23:00:50Z",
      "updated_at": "2017-07-18T23:00:50Z"
    },
    {
      "author": "refack",
      "author_association": "NONE",
      "body": "> FWIW - some background: This behavior is actually intentional. Prior to the V1 release of PowerShell, the UI designers picked colors for the PowerShell console. Since the background color they chose wasn't part of the standard palette, one of the less used standard colors was remapped to produce what the designers wanted. It's been shipping that way ever since.\r\n\r\nDesigners \ud83e\udd37\u200d\u2642\ufe0f .\r\nIMHO should have remapped the black and white, but...\r\nIf anyone has any idea how force `conhost` to respect ANSI, we could implement on our end.",
      "created_at": "2017-07-18T23:10:59Z",
      "updated_at": "2017-07-18T23:10:59Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "conhost in Window 10 1607 and higher IIRC has some ANSI support.  Try:\r\n\r\n```posh\r\n$E = [char]0x1b; \"$E[35;1;40m\"\r\n```\r\nIf you're using PowerShell Core then you can use:\r\n```posh\r\n\"`e[35;1;40m\"\r\n```\r\nIt's not 100% though.  As I type commands I can see the original blue as the background.\r\n",
      "created_at": "2017-07-18T23:50:45Z",
      "updated_at": "2017-07-18T23:50:45Z"
    },
    {
      "author": "refack",
      "author_association": "NONE",
      "body": "@rkeithhill interesting results\r\n![image](https://user-images.githubusercontent.com/96947/28344856-5f1d4f36-6bf4-11e7-9fa4-eff3fd2de6d0.png)\r\nStill seems like `conhost` is using it's own palette, and not ANSI colors...\r\n\r\n",
      "created_at": "2017-07-19T00:07:14Z",
      "updated_at": "2017-07-19T00:07:14Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "That ANSI directive is still using one of the 16 palette colors.  So if the color palette index has been overridden, you'll get the overridden color.  That is why I used the bright magenta e.g.:\r\n![image](https://user-images.githubusercontent.com/5177512/28345234-33433d20-6be6-11e7-9779-b467985740a4.png)\r\nIf you are on 1703, then you can use 24-bit color:\r\n```posh\r\n\"`e[38;2;128;0;128;48;2;0;0;0m\"\r\n```\r\nBut it only colors output as opposed to changing the bg color.\r\n",
      "created_at": "2017-07-19T00:26:36Z",
      "updated_at": "2017-07-19T03:53:33Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "I don't know about a tutorial but I use as a reference this MSDN page: https://msdn.microsoft.com/en-us/library/windows/desktop/mt638032(v=vs.85).aspx",
      "created_at": "2017-07-19T14:48:48Z",
      "updated_at": "2017-07-19T16:19:04Z"
    },
    {
      "author": "gibfahn",
      "author_association": "NONE",
      "body": ">This behavior is actually intentional. Prior to the V1 release of PowerShell, the UI designers picked colors for the PowerShell console. Since the background color they chose wasn't part of the standard palette, one of the less used standard colors was remapped to produce what the designers wanted.\r\n\r\nDoes that mean there's no chance of it changing? Not being able to see one of the standard colours seems like a pretty major defect for a console (which I guess is why it's remapped in the powershell shortcut, see https://github.com/nodejs/node/issues/14243#issuecomment-315631040).\r\n\r\n>IMHO should have remapped the black and white, but...\r\n\r\nThis seems like a reasonable solution, any chance of it happening?",
      "created_at": "2017-07-20T06:55:16Z",
      "updated_at": "2017-07-20T06:55:16Z"
    },
    {
      "author": "silverwind",
      "author_association": "NONE",
      "body": "> Since the background color they chose wasn't part of the standard palette, one of the less used standard colors was remapped to produce what the designers wanted.\r\n\r\nI think the default fg/bg colors should be decoupled from the 16 ANSI colors, and instead be separately be defined. That's how pretty much all Unix terminals do it.",
      "created_at": "2017-07-20T17:17:50Z",
      "updated_at": "2017-07-20T17:17:50Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "As best as I can tell, neither the cmd.exe shortcut nor the PSCore6 shortcut modifies the magenta color so it's only an issue with Windows PowerShell, correct?  As @BrucePay mentioned, for Windows PowerShell, this is by-design and changing it now is a breaking change.",
      "created_at": "2017-07-20T21:43:46Z",
      "updated_at": "2017-07-20T21:43:46Z"
    }
  ],
  "created_at": "2017-07-16T19:31:28Z",
  "number": 4266,
  "state": "closed",
  "title": "default shortcut on Windows remaps ANSI colors 35,36",
  "updated_at": "2020-06-30T15:17:19Z"
}