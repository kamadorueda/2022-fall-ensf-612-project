{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5497",
  "author": "bergmeister",
  "body": "If I understood correctly from the last community call, the `master` branch is now for `6.1.0` development.\r\nHowever, the artifcats of `master` builds are versioned as `6.0.0.-rc`. See e.g. [here](https://ci.appveyor.com/project/PowerShell/powershell-f975h/build/6.0.0-rc-487/artifacts) for an example of the latest build.\r\n\r\nInfo: Latest commit of `master` as of November 18: [cb048ea9f4f7ccc3612141ee76f7937b9ca1c823](https://github.com/PowerShell/PowerShell/commit/cb048ea9f4f7ccc3612141ee76f7937b9ca1c823)",
  "closed_at": "2017-11-21T21:51:11Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "We still are in RC stage not GA.",
      "created_at": "2017-11-18T15:14:24Z",
      "updated_at": "2017-11-18T15:14:24Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "I thought that is what the [6.0.0](https://github.com/PowerShell/PowerShell/tree/6.0.0) branch was for? Steve's blog post [here](https://blogs.msdn.microsoft.com/powershell/2017/11/17/powershell-core-6-release-candidate/) also said:\r\n>This means that any changes merged to the master branch will show up in the 6.1.0 release.  I encourage the community to continue to make contributions to PowerShell Core with the expectation that it will be part of 6.1.0 and not 6.0.0.  Only issues (and associated pull requests) approved for 6.0.0 GA with milestone set to `6.0.0-GA` will be taken for the 6.0.0 release.",
      "created_at": "2017-11-18T15:16:34Z",
      "updated_at": "2017-11-18T15:18:05Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "When we merged the changes from the RC release branch back to master, we merged everything including the version string.  Master should be 6.1.0-beta.1 while 6.0.0 continues on the Release branch.  cc @daxian-dbw ",
      "created_at": "2017-11-18T19:38:32Z",
      "updated_at": "2017-11-18T19:38:32Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT In blog [post ](https://blogs.msdn.microsoft.com/powershell/2017/11/17/powershell-core-6-release-candidate/) the branch link is broken in \"we also created a _branch_ for the eventual PowerShell Core 6.0.0 final release. \" I see Release branch renamed to 6.0.0.",
      "created_at": "2017-11-18T20:01:56Z",
      "updated_at": "2017-11-18T20:01:56Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov thanks for catching that, fixed.",
      "created_at": "2017-11-19T01:04:22Z",
      "updated_at": "2017-11-19T01:05:52Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT Would it make sense to rather use the word `preview` instead of `beta` starting from `6.1` since .Net Core and the Visual Studio family use that term as well? Also, `preview` indicates that it is just the bleeding edge version of something that already had RTM quality, which  differentiates it from the past 6.0 betas.",
      "created_at": "2017-11-19T19:27:35Z",
      "updated_at": "2017-11-19T19:27:35Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@bergmeister agree, `preview` captures it better as being incomplete than `beta` which implies subpar quality",
      "created_at": "2017-11-19T22:54:31Z",
      "updated_at": "2017-11-19T22:54:31Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Based On SymVer 2.0 and modern life cycle we could give up on \"beta\" and \"preview\" and use 6.1.x on a daily basis.\r\n\r\nRelated #5477",
      "created_at": "2017-11-20T03:41:33Z",
      "updated_at": "2017-11-20T03:44:52Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov  [SemVer 2.0](http://semver.org/spec/v2.0.0.html) states that the 3rd number should only be for patches\r\n> PATCH version when you make backwards-compatible bug fixes",
      "created_at": "2017-11-20T07:04:45Z",
      "updated_at": "2017-11-20T07:05:56Z"
    }
  ],
  "created_at": "2017-11-18T11:17:07Z",
  "number": 5497,
  "state": "closed",
  "title": "Master builds produce artifacts with '6.0.0.-rc' versioning instead of '6.1.0-preview.1'",
  "updated_at": "2017-11-22T05:50:23Z"
}