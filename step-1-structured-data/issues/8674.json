{
  "_url": "https://github.com/PowerShell/PowerShell/issues/8674",
  "author": "vexx32",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->  \r\n\r\n/cc @iSazonov \r\n\r\n## PR Summary\r\n\r\n### Refactoring & Streamed Input Support\r\n\r\n* Handles continuous data stream input as a single input stream, and will display it in the same manner for both `Format-Hex -InputObject $byteArray` and `$byteArray | Format-Hex`\r\n  * This includes arrays / streams of all basic value types.\r\n* Handles jagged streams of input by clumping input objects according to their type. This _is not expected_ to handle a jagged array passed **directly** to the `-InputObject` parameter by name.\r\n* Adds `ByteCollection` properties:\r\n    - `Label` \u2014 stores the type name and a random hexadecimal ID. Used to group objects in output formatting. This can be utilised by, for example, `Group-Object`, in order to enable downstream cmdlets to handle each group of `ByteCollection` objects separately, if needed.\r\n    - `Ascii` \u2014 stores the ASCII representation of the bytes in the `ByteCollection`\r\n    - `HexBytes` \u2014 stores the hexadecimal representation of the bytes in the `ByteCollection`\r\n* Filters ASCII display to replace control characters with the <?> unicode glyph\r\n\r\n\r\nAdditional tests have been added to cover this behaviour. Details below.\r\n\r\n### Behaviour of Piped Input\r\n\r\n#### A Primitive Value\r\n\r\n> 1. Each item is converted to `bytes` and collected into an input buffer.\r\n> 1. The type of the last `InputObject` is stored in a private field.\r\n> 1. If a new `InputObject` is received of the _same_ type, it is converted to `bytes` and added to the buffer.\r\n> 1. If a new `InputObject` is received of a **different** type, the buffer is divided into 16-byte segments and each segment is sent to the success output stream as a `ByteCollection`. Then, the process restarts from the beginning.\r\n\r\n#### System.IO.FileInfo\r\n\r\n> 1. If any data is in the primitives buffer, it is output as described above, the buffer is cleared, as well as the information on what the last type was (resetting the grouping logic).\r\n> 1. One `ByteCollection` object is emitted **per 16 bytes** of the file.\r\n> 1. All `ByteCollection` objects are tagged with the input file's path as their `Label`, which will group their output into a single table.\r\n> 1. `Offset` and `Count` are interpreted as applying to _each_ file, the same way as they would be for `-Path` inputs.\r\n\r\n#### String\r\n\r\n> 1. If any data is in the primitives buffer, it is output as described above, the buffer is cleared, as well as the information on what the last type was (resetting the grouping logic).\r\n> 1. All strings are handled on an individual basis (no grouping), and are converted into `bytes` according to the `-Encoding` parameter's value.\r\n> 1. One `ByteCollection` object is emitted **per 16 bytes** of the string, and each is tagged with the `System.String` type name and a shared random hexadecimal ID to ensure that each string is assigned a separate `Label` group.\r\n> 1. `Offset` and `Count` are interpreted as applying to _each_ input string.\r\n\r\n#### Array of Primitives\r\n\r\n> 1. If any data is in the primitives buffer, it is output as described above, the buffer is cleared, as well as the information on what the last type was (resetting the grouping logic).\r\n> 1. Each array is treated as a single \"group\", and will not be grouped with other items in the output.\r\n> 1. All items in the array are converted into a single chunk of `bytes`, which then is sliced according to `Offset` and `Count`.\r\n> 1. One `ByteCollection` object is emitted **per 16 bytes**, and each is tagged with the array's type and a shared random hexadecimal ID to ensure that each array is assigned a single `Label` group.\r\n\r\n### Examples\r\n\r\n>![Jagged Input Example](https://user-images.githubusercontent.com/32407840/66448688-535d7e80-ea20-11e9-9050-ea553f4b10ad.png)\r\n> ![Jagged Input Incl. FileInfo Object Example](https://user-images.githubusercontent.com/32407840/66448890-25c50500-ea21-11e9-935c-0b5231cc6e29.png)\r\n\r\n\r\n## PR Context  \r\n\r\nFormat-Hex needs a bit more versatility and to be able to handle piped input in a more effective manner.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.  \r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**  \r\n    - [X] [Documentation needed]\r\n        - [X] Issue filed: https://github.com/MicrosoftDocs/PowerShell-Docs/issues/4532\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n        - [ ] [Add `[feature]` to your commit messages if the change is significant or affects feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\r\n",
  "closed_at": "2019-10-15T18:04:46Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "RE the Codacy issues - `_isHeterogenousPipedInput` and `_lastInputType` exist as fields as their values must persist between calls to the method it's used in.\r\n\r\nI'll take care of the rest.\r\n\r\nThe Static Analysis link failure is unrelated, possibly an older page was taken down:\r\n```\r\n2019-01-17T17:09:58.2571685Z       [-] http://www.powershellmagazine.com/2014/04/24/windows-powershell-4-0-and-other-quick-reference-guides/ should work 131.74s\r\n2019-01-17T17:09:58.3083022Z         RuntimeException: retry of url failed with error: \r\n2019-01-17T17:09:58.3092376Z         at <ScriptBlock>, /home/vsts/work/1/s/test/common/markdown/markdown-link.tests.ps1: line 109\r\n```\r\n\r\nEDIT: Seems fine now. Weird.",
      "created_at": "2019-01-17T19:18:12Z",
      "updated_at": "2019-01-17T19:37:32Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Codacy is a little wonky at times, it seems. Its request to make the methods static cannot be resolved, for example if we try to make the methods `static` we get an error on the `WriteObject()` calls:\r\n\r\n![image](https://user-images.githubusercontent.com/32407840/51343395-5795d600-1a64-11e9-8516-1c7dc0733980.png)\r\n",
      "created_at": "2019-01-17T19:29:57Z",
      "updated_at": "2019-01-17T19:30:20Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@vexx32 Thanks for the great contribution! \r\nCould you please move all style changes to another PR (we will fast merge it)? It'll make the code review more easy and fast. Thanks!",
      "created_at": "2019-01-18T05:36:44Z",
      "updated_at": "2019-01-18T05:36:44Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov yeah, that makes sense. Will do!",
      "created_at": "2019-01-18T10:59:58Z",
      "updated_at": "2019-01-18T10:59:58Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Close & Reopen to restart failing xUnit test on Windows. Don't think that should have been affected by anything here.",
      "created_at": "2019-01-19T18:25:15Z",
      "updated_at": "2019-01-19T18:25:15Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "/cc @iSazonov @JamesWTruher @PaulHigin \r\n\r\nStyle changes PR was #8683 and is merged. This one's just pending your guys review, I think? Let me know. \ud83d\ude04 ",
      "created_at": "2019-01-28T20:15:11Z",
      "updated_at": "2019-01-28T20:15:11Z"
    },
    {
      "author": "stale[bot]",
      "author_association": "NONE",
      "body": "This PR has been automatically marked as stale because it has not had activity in the last 30 days. It will be closed if no further activity occurs within 10 days.\nThank you for your contributions.\nCommunity members are welcome to grab these works.\n",
      "created_at": "2019-02-27T20:18:55Z",
      "updated_at": "2019-02-27T20:18:55Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Ping @PaulHigin for review. \ud83d\ude03 ",
      "created_at": "2019-02-27T20:24:49Z",
      "updated_at": "2019-02-27T20:24:49Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@vexx32 I reviewed this again. I think we could close the PR as controversial and continue the discussion in an issue:\r\n\r\n> Handles continuous data stream input as a single input stream\r\n\r\nI doubt it is necessary. Perhaps this is exactly what users want in some scenarios.\r\n\r\n>Handles heterogenous streams of input by treating each input item as a discrete item to display\r\n\r\nLooks useful in all scenarious.\r\n",
      "created_at": "2019-03-16T09:13:45Z",
      "updated_at": "2019-03-16T09:13:45Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "If we must, we must. \ud83e\udd37\u200d\u2642\ufe0f \r\n\r\nI'm inclined to think that users would find its current behaviour when piping a byte stream/array to it extremely useless, but that's just me.\r\n\r\nBut if I'm honest, it may well be just that it doesn't _need_ the behaviour as it isn't used extensively. ",
      "created_at": "2019-03-16T11:35:22Z",
      "updated_at": "2019-03-16T11:35:22Z"
    },
    {
      "author": "stale[bot]",
      "author_association": "NONE",
      "body": "This PR has been automatically marked as stale because it has not had activity in the last 30 days. It will be closed if no further activity occurs within 10 days.\nThank you for your contributions.\nCommunity members are welcome to grab these works.\n",
      "created_at": "2019-04-15T12:17:43Z",
      "updated_at": "2019-04-15T12:17:43Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@vexx32 Please resolve the merge conflict. I think we need rebase to get latest CIs updates.",
      "created_at": "2019-04-16T05:30:14Z",
      "updated_at": "2019-04-16T05:30:14Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov done and done. Let's see how CI runs fare. \ud83d\ude04 ",
      "created_at": "2019-04-16T20:48:33Z",
      "updated_at": "2019-04-16T20:48:33Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@anmenaga ping for review. \ud83d\ude42 ",
      "created_at": "2019-05-31T18:08:10Z",
      "updated_at": "2019-05-31T18:08:10Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@anmenaga any chance you have a minute to review this one sometime next week? \ud83d\ude0a ",
      "created_at": "2019-06-30T05:20:56Z",
      "updated_at": "2019-06-30T05:20:56Z"
    },
    {
      "author": "anmenaga",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov @JamesWTruher please indicate if you think this PR is/not ready.\r\n@vexx32 This will need documentation updates; please file an issue in doc repo and link it here. BTW, good job on writing detailed PR summary with examples - very helpful.",
      "created_at": "2019-07-08T22:25:11Z",
      "updated_at": "2019-07-08T22:25:49Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "There is a request https://github.com/PowerShell/PowerShell/pull/8674#discussion_r262639191 to get more feedback. ",
      "created_at": "2019-07-09T06:30:09Z",
      "updated_at": "2019-07-09T06:30:09Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "The proposed formatting of heterogeneous input looks fine to me",
      "created_at": "2019-07-15T18:01:22Z",
      "updated_at": "2019-07-15T18:01:22Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Are you referring to [this one](https://github.com/PowerShell/PowerShell/pull/8674#discussion_r303555873), @SteveL-MSFT? Or the one in the PR description that I was originally proposing?",
      "created_at": "2019-07-15T18:17:43Z",
      "updated_at": "2019-07-15T18:18:09Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "For reference, this is what the relevant examples from the PR description would look like with the recent proposal:\r\n\r\n```\r\nPS> \"hello\", \"world\", \"line\", \"line\" | Set-Content $File\r\nPS> Get-Content $File | Format-Hex\r\n\r\n                       00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F\r\n00000000000000000000   48 65 6C 6C 6F                                   Hello\r\n----------------------------------------------------------------------------------\r\n00000000000000000000   77 6F 72 6C 64                                   world\r\n----------------------------------------------------------------------------------\r\n00000000000000000000   6C 69 6E 65                                      line\r\n----------------------------------------------------------------------------------\r\n00000000000000000000   6C 69 6E 65                                      line\r\n\r\n\r\nPS>  Get-Content $File -Raw | Format-Hex\r\n\r\n                       00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F\r\n00000000000000000000   68 65 6C 6C 6F 0D 0A 77 6F 72 6C 64 0D 0A 6C 69  hello..world..li\r\n00000000000000000010   6E 65 0D 0A 6C 69 6E 65 0D 0A                    ne..line..\r\n\r\n\r\nPS> \"Hello\", \"world\" | Format-Hex\r\n\r\n                       00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F\r\n00000000000000000000   48 65 6C 6C 6F                                   Hello\r\n----------------------------------------------------------------------------------\r\n00000000000000000000   77 6F 72 6C 64                                   world\r\n\r\n\r\nPS> [byte[]]@(1..255) | Format-Hex\r\n\r\n                       00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F\r\n00000000000000000000   01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F 10  ................\r\n00000000000000000010   11 12 13 14 15 16 17 18 19 1A 1B 1C 1D 1E 1F 20  ...............\r\n00000000000000000020   21 22 23 24 25 26 27 28 29 2A 2B 2C 2D 2E 2F 30  !\"#$%&'()*+,-./0\r\n00000000000000000030   31 32 33 34 35 36 37 38 39 3A 3B 3C 3D 3E 3F 40  123456789:;<=>?@\r\n00000000000000000040   41 42 43 44 45 46 47 48 49 4A 4B 4C 4D 4E 4F 50  ABCDEFGHIJKLMNOP\r\n00000000000000000050   51 52 53 54 55 56 57 58 59 5A 5B 5C 5D 5E 5F 60  QRSTUVWXYZ[\\]^_`\r\n00000000000000000060   61 62 63 64 65 66 67 68 69 6A 6B 6C 6D 6E 6F 70  abcdefghijklmnop\r\n00000000000000000070   71 72 73 74 75 76 77 78 79 7A 7B 7C 7D 7E 7F 80  qrstuvwxyz{|}~\ufffd\r\n00000000000000000080   81 82 83 84 85 86 87 88 89 8A 8B 8C 8D 8E 8F 90\r\n00000000000000000090   91 92 93 94 95 96 97 98 99 9A 9B 9C 9D 9E 9F A0\r\n000000000000000000A0   A1 A2 A3 A4 A5 A6 A7 A8 A9 AA AB AC AD AE AF B0  \u00a1\u00a2\u00a3\u00a4\u00a5\u00a6\u00a7\u00a8\u00a9\u00aa\u00ab\u00ac\u00ad\u00ae\u00af\u00b0\r\n000000000000000000B0   B1 B2 B3 B4 B5 B6 B7 B8 B9 BA BB BC BD BE BF C0  \u00b1\u00b2\u00b3\u00b4\u00b5\u00b6\u00b7\u00b8\u00b9\u00ba\u00bb\u00bc\u00bd\u00be\u00bf\u00c0\r\n000000000000000000C0   C1 C2 C3 C4 C5 C6 C7 C8 C9 CA CB CC CD CE CF D0  \u00c1\u00c2\u00c3\u00c4\u00c5\u00c6\u00c7\u00c8\u00c9\u00ca\u00cb\u00cc\u00cd\u00ce\u00cf\u00d0\r\n000000000000000000D0   D1 D2 D3 D4 D5 D6 D7 D8 D9 DA DB DC DD DE DF E0  \u00d1\u00d2\u00d3\u00d4\u00d5\u00d6\u00d7\u00d8\u00d9\u00da\u00db\u00dc\u00dd\u00de\u00df\u00e0\r\n000000000000000000E0   E1 E2 E3 E4 E5 E6 E7 E8 E9 EA EB EC ED EE EF F0  \u00e1\u00e2\u00e3\u00e4\u00e5\u00e6\u00e7\u00e8\u00e9\u00ea\u00eb\u00ec\u00ed\u00ee\u00ef\u00f0\r\n000000000000000000F0   F1 F2 F3 F4 F5 F6 F7 F8 F9 FA FB FC FD FE FF     \u00f1\u00f2\u00f3\u00f4\u00f5\u00f6\u00f7\u00f8\u00f9\u00fa\u00fb\u00fc\u00fd\u00fe.\r\n\r\n\r\nPS> \"hello\", 1, 2, 3 | Format-Hex\r\n\r\n                       00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F\r\n00000000000000000000   68 65 6C 6C 6F                                   hello\r\n----------------------------------------------------------------------------------\r\n00000000000000000000   01 00 00 00                                      ....\r\n----------------------------------------------------------------------------------\r\n00000000000000000000   02 00 00 00                                      ....\r\n----------------------------------------------------------------------------------\r\n00000000000000000000   03 00 00 00                                      ....\r\n\r\n\r\nPS> [char[]]@(\"a\",\"b\",\"c\",\"d\") | Format-Hex\r\n\r\n                       00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F\r\n00000000000000000000   61 62 63 64                                      abcd\r\n\r\n\r\nPS> 1, 2, 3, 4, 5 | Format-Hex\r\n\r\n                       00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F\r\n00000000000000000000   01 00 00 00 02 00 00 00 03 00 00 00 04 00 00 00  ................\r\n00000000000000000010   05 00 00 00                                      ....\r\n```\r\n\r\nFor the last example, I'm not sure if I'd want it to group those? For `[char]` or `[byte]` input, that would make sense I think, but I don't think grouping other types of objects would really make sense (at least by default)",
      "created_at": "2019-07-15T18:26:06Z",
      "updated_at": "2019-07-15T18:26:06Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Additional note since I'm looking at potentially reworking the overall formatting:\r\n\r\nThe byte-offset counter has a width of 20 characters, and it's in hexadecimal as well. 16^20 bytes is (I think) a yottabyte (1,073,741,824 petabytes).\r\n\r\nI don't think we'll ever need that for this cmdlet, so we should probably reduce that down to.... maybe 8? Which would give us byte offsets for any file 4GB and smaller. If we go to 10 digits for the offset, we can get up to 1024 GB file inputs without overflowing the offset column width. 10 is probably _plenty_.\r\n\r\nOtherwise we're just wasting console space. \ud83d\ude42 ",
      "created_at": "2019-07-15T18:40:24Z",
      "updated_at": "2019-07-15T18:50:47Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> I don't think we'll ever need that for this cmdlet, so we should probably reduce that down to.... maybe 8? Which would give us byte offsets for any file 4GB and smaller.\r\n\r\nMy thoughts was about ReFS file system. It allows files with huge size. If user want to look a block near end of such file he/she now can do this. I enhanced all parameters for such scenarios.",
      "created_at": "2019-07-17T04:00:37Z",
      "updated_at": "2019-07-17T04:00:37Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Sure, that's definitely worth keeping. But the amount of offset is still too extreme. I don't think anyone in the _universe_ will ever have a file that large, that's how big that number is.\r\n\r\nI think 1TB is more than enough allowable space for a single file.\r\n\r\nEDIT: I see we're actually storing the offset64 value as Uint64 -- that's 16 characters at most that we could use, I don't see why we have 20.\r\n\r\nAnd even that is... pretty crazy in terms of file sizes. I'll knock it down to 16 for now, as we have 4 digits too many for our backing data type. Might be worth revisiting later, might not be. \ud83d\ude42 ",
      "created_at": "2019-07-17T10:10:17Z",
      "updated_at": "2019-07-17T17:18:38Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "```powershell\r\n([Uint64]::MaxValue.tostring()).length\r\n20\r\n```\r\n",
      "created_at": "2019-07-18T04:18:09Z",
      "updated_at": "2019-07-18T04:18:09Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "We're rendering the byte offset as hex as well, from what I saw. 16 chars in hexadecimal. :)",
      "created_at": "2019-07-18T04:43:01Z",
      "updated_at": "2019-07-18T04:43:01Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "It is bug in the formatting.",
      "created_at": "2019-07-18T07:07:11Z",
      "updated_at": "2019-07-18T07:07:11Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@vexx32 [this](https://github.com/PowerShell/PowerShell/pull/8674#issuecomment-511516075) seems fine to me.  Since this is strictly formatting, we can adjust in the future based on feedback",
      "created_at": "2019-07-23T16:54:12Z",
      "updated_at": "2019-07-23T16:54:12Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Sounds good! I'll look to clean this up this week sometime then and have it ready for you guys. ^^",
      "created_at": "2019-07-23T17:15:06Z",
      "updated_at": "2019-07-23T17:15:06Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "I've been too busy to take care of this of late, my apologies. Apart from @iSazonov's suggestions, there is one other thing I need to figure out here; currently, it appears that the formatting definition code isn't taking for the ByteCollection type, it's being ignored and the objects are being output as string data instead. Not sure exactly why, I need to take some time today or this weekend to look at it and get it cleaned up.\r\n\r\nAfter that we should be good to go. Sorry about the delay on my end here. \ud83d\udc96 \r\n\r\nEDIT: having skimmed the code, I can see I still need to update a bit of the logic when we have heterogeneous input types over the pipeline. I should have this sorted by this weekend, if not before. \ud83d\ude42 ",
      "created_at": "2019-10-03T12:27:46Z",
      "updated_at": "2019-10-03T16:50:02Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Got sidetracked finishing up Test-Connection on the weekend; will get back to this during this week. \ud83d\ude42 ",
      "created_at": "2019-10-07T15:49:18Z",
      "updated_at": "2019-10-07T15:49:18Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@vexx32 Also please update the PR description and examples - this very helps (I already forget details about the PR :-) )",
      "created_at": "2019-10-08T05:18:26Z",
      "updated_at": "2019-10-08T05:18:43Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@isazonov yeah, will do, no worries. :)",
      "created_at": "2019-10-08T09:40:50Z",
      "updated_at": "2019-10-08T09:40:50Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov and @SteveL-MSFT I will be updating the PR description and tests tomorrow. In the meantime, here's a few samples of what this PR has been aiming to do, pulled directly from a bit of interactive testing with the latest build. \ud83d\ude42 \r\n\r\n![image](https://user-images.githubusercontent.com/32407840/66448688-535d7e80-ea20-11e9-9050-ea553f4b10ad.png)\r\n\r\n![image](https://user-images.githubusercontent.com/32407840/66448890-25c50500-ea21-11e9-935c-0b5231cc6e29.png)\r\n\r\nOf course, non-pipeline parameter sets all work, as well as pipeline ones. Basically this allows `Format-Hex` to be able to handle just about any sensible input you can throw at it and still work essentially perfectly. You can combine arbitrary input with `-Offset` and `Count`, and whatever else you'll need. \ud83d\ude0a ",
      "created_at": "2019-10-09T03:17:56Z",
      "updated_at": "2019-10-09T03:18:26Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov updated tests to account for behavioural changes and updated the PR description to hopefully clarify what's going on. If anything still isn't clear, please let me know! \ud83d\udc96 ",
      "created_at": "2019-10-10T01:47:05Z",
      "updated_at": "2019-10-10T01:47:05Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@PoshChan please retry macos",
      "created_at": "2019-10-10T03:58:03Z",
      "updated_at": "2019-10-10T03:58:03Z"
    },
    {
      "author": "PoshChan",
      "author_association": "COLLABORATOR",
      "body": "@vexx32, successfully started retry of `PowerShell-CI-macOS`",
      "created_at": "2019-10-10T03:58:30Z",
      "updated_at": "2019-10-10T03:58:30Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@PoshChan Please remind me in 1 day",
      "created_at": "2019-10-10T14:37:14Z",
      "updated_at": "2019-10-10T14:37:14Z"
    },
    {
      "author": "PoshChan",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov, this is the reminder you requested 1 day ago",
      "created_at": "2019-10-11T14:37:35Z",
      "updated_at": "2019-10-11T14:37:35Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT @TravisEz13 @rkeithhill  The PR is ready for final code review.",
      "created_at": "2019-10-11T16:18:30Z",
      "updated_at": "2019-10-11T16:18:30Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@PoshChan please retry static",
      "created_at": "2019-10-12T04:50:03Z",
      "updated_at": "2019-10-12T04:50:03Z"
    },
    {
      "author": "PoshChan",
      "author_association": "COLLABORATOR",
      "body": "@vexx32, successfully started retry of `PowerShell-CI-static-analysis`",
      "created_at": "2019-10-12T04:50:21Z",
      "updated_at": "2019-10-12T04:50:21Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Oh, I guess MSDN is down for a bit. \ud83d\ude04 ",
      "created_at": "2019-10-12T05:05:46Z",
      "updated_at": "2019-10-12T05:05:46Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "retried the URL check",
      "created_at": "2019-10-14T18:06:36Z",
      "updated_at": "2019-10-14T18:06:36Z"
    },
    {
      "author": "anmenaga",
      "author_association": "CONTRIBUTOR",
      "body": "Added doc issue reference to PR template: https://github.com/MicrosoftDocs/PowerShell-Docs/issues/4532",
      "created_at": "2019-10-15T18:03:08Z",
      "updated_at": "2019-10-15T18:03:08Z"
    },
    {
      "author": "anmenaga",
      "author_association": "CONTRIBUTOR",
      "body": "@vexx32 Thank you!",
      "created_at": "2019-10-15T18:05:19Z",
      "updated_at": "2019-10-15T18:05:19Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.0.0-preview.5` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.0.0-preview.5)\n",
      "created_at": "2019-10-23T19:07:59Z",
      "updated_at": "2019-10-23T19:07:59Z"
    }
  ],
  "created_at": "2019-01-17T16:59:54Z",
  "number": 8674,
  "state": "closed",
  "title": "Format-Hex: Improve mixed-collection piped input and piped streams of input",
  "updated_at": "2019-10-23T19:07:59Z"
}