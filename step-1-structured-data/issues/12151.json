{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12151",
  "author": "kylesferrazza",
  "body": "# Summary of the new feature/enhancement\r\n( originally https://github.com/MicrosoftDocs/PowerShell-Docs/issues/5601 )\r\nIt would be great to have a document (or a build script) outlining how to build PowerShell without a self-hosted copy available. Maintaining the AUR package becomes more difficult for me every time the build system changes between versions with no document or script explaining the changes. All of the current documentation assumes a previously installed version of PowerShell.\r\n\r\n<!-- \r\nA clear and concise description of what the problem is that the new feature would solve.\r\nTry formulating it in user story style (if applicable):\r\n'As a user I want X so that Y.' with X being the being the action and Y being the value of the action.\r\n-->\r\n\r\n# Proposed technical implementation details (optional)\r\nI've got a working Arch Linux [PKGBUILD](https://aur.archlinux.org/cgit/aur.git/tree/PKGBUILD?h=powershell) (essentially a bash script) for 6.2.4 but have been having some trouble getting 7.0 to successfully build and run.\r\nIf there was a build script that didn't depend on PowerShell in the repository, packages could just delegate to that.\r\n<!-- \r\nA clear and concise description of what you want to happen.\r\nConsider providing an example PowerShell experience with expected result.\r\n-->\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Why can you not use existing PowerShell package to build new one? It is very difficult for us to support standalone build scripts.\r\n",
      "created_at": "2020-03-19T05:29:42Z",
      "updated_at": "2020-03-19T05:29:42Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "@kylesferrazza Just to clarify the request, would a `build.sh` entry point that checks for a local pwsh install, installs it if necessary and then invokes the current build script be sufficient? Or are you asking for a build script that doesn't touch PowerShell at all?",
      "created_at": "2020-03-19T16:39:17Z",
      "updated_at": "2020-03-19T16:39:17Z"
    },
    {
      "author": "kylesferrazza",
      "author_association": "CONTRIBUTOR",
      "body": "I was asking about a build script that doesn't touch PowerShell at all, similar to how I build 6.2.4 here (see the `build()` function):\r\nhttps://aur.archlinux.org/cgit/aur.git/tree/PKGBUILD?h=powershell\r\n\r\nI suppose I could just rewrite the PKGBUILD to use a binary PowerShell to call `Start-PSBuild` from `build.psm1`, but I was thinking that users would want to be able to build PowerShell from source without needing to trust/install a pre-packaged binary PowerShell.\r\n\r\n<blockquote><img src=\"/images/favicon.ico\" width=\"48\" align=\"right\"><div><strong><a href=\"https://aur.archlinux.org/cgit/aur.git/tree/PKGBUILD?h=powershell\">PKGBUILD - aur.git - AUR Package Repositories</a></strong></div></blockquote>",
      "created_at": "2020-03-19T16:42:27Z",
      "updated_at": "2020-03-19T16:43:35Z"
    },
    {
      "author": "kylesferrazza",
      "author_association": "CONTRIBUTOR",
      "body": "It seems to still work on 7.0, but I get the following error on running the built `pwsh`:\r\n```\r\nError:\r\n  An assembly specified in the application dependencies manifest (pwsh.deps.json) was not found:\r\n    package: 'runtimepack.Microsoft.NETCore.App.Runtime.linux-x64', version: '3.1.2'\r\n    path: 'System.IO.Compression.Native.a'\r\n```",
      "created_at": "2020-03-19T16:47:55Z",
      "updated_at": "2020-03-19T16:47:55Z"
    },
    {
      "author": "kylesferrazza",
      "author_association": "CONTRIBUTOR",
      "body": "On further digging, it looks like after my build script runs, `./src/powershell-unix/bin/Debug/netcoreapp3.1/linux-x64/publish/pwsh` works fine, but the above error shows up after copying `publish/` to `/opt` and then trying to run `pwsh` within `/opt`.\r\n\r\nAre additional packaging steps required besides copying the contents of the `publish` directory to `/opt` and then symlinking `pwsh` into `/usr/bin`?",
      "created_at": "2020-03-19T16:52:12Z",
      "updated_at": "2020-03-19T16:52:12Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "Oh that's not anywhere near as long as I pictured.\r\n\r\n@SteveL-MSFT It might be worth officially supporting a script like this to make this process easier for community package maintainers.  Or at the very least a bit of someone's time to troubleshoot the issue above.",
      "created_at": "2020-03-19T16:54:57Z",
      "updated_at": "2020-03-19T16:54:57Z"
    },
    {
      "author": "kylesferrazza",
      "author_association": "CONTRIBUTOR",
      "body": "`strace` revealed powershell trying to open a `.a`. Adding `options=(!strip)` to the PKGBUILD seems to have fixed the issue.",
      "created_at": "2020-03-19T17:10:55Z",
      "updated_at": "2020-03-19T17:10:55Z"
    },
    {
      "author": "kylesferrazza",
      "author_association": "CONTRIBUTOR",
      "body": "```\r\n[kyle@37bb2b2d8d53 app]$ strace pwsh -Command exit 2>&1 | grep '\\.a'\r\nstat(\"/opt/microsoft/powershell/7/System.IO.Compression.Native.a\", {st_mode=S_IFREG|0744, st_size=2837182, ...}) = 0\r\nstat(\"/opt/microsoft/powershell/7/System.Native.a\", {st_mode=S_IFREG|0744, st_size=419888, ...}) = 0\r\nstat(\"/opt/microsoft/powershell/7/System.Net.Http.Native.a\", {st_mode=S_IFREG|0744, st_size=79868, ...}) = 0\r\nstat(\"/opt/microsoft/powershell/7/System.Net.Security.Native.a\", {st_mode=S_IFREG|0744, st_size=36266, ...}) = 0\r\nstat(\"/opt/microsoft/powershell/7/System.Security.Cryptography.Native.OpenSsl.a\", {st_mode=S_IFREG|0744, st_size=993712, ...}) = 0\r\n```",
      "created_at": "2020-03-19T17:11:19Z",
      "updated_at": "2020-03-19T17:11:19Z"
    },
    {
      "author": "lukeb1961",
      "author_association": "NONE",
      "body": "I see that dotNet 3.0 SDK for FreeBSD has been hacked together.  \r\nhttps://github.com/jasonpugsley/core-sdk/wiki/.Net-Core-3.0.0-for-FreeBSD\r\nBut it's chicken/egg to build Powershell for FreeBSD right?\n\n<blockquote><img src=\"https://avatars3.githubusercontent.com/u/17060242?s=400&v=4\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicon.ico\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/jasonpugsley/core-sdk\">jasonpugsley/core-sdk</a></strong></div><div>.NET Core SDK Setup. Contribute to jasonpugsley/core-sdk development by creating an account on GitHub.</div></blockquote>",
      "created_at": "2020-03-21T01:22:39Z",
      "updated_at": "2020-03-21T01:22:41Z"
    }
  ],
  "created_at": "2020-03-18T23:40:57Z",
  "number": 12151,
  "state": "open",
  "title": "Feature Request: native build instructions",
  "updated_at": "2020-03-21T01:22:41Z"
}