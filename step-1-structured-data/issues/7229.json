{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7229",
  "author": "PaulHigin",
  "body": "Before PowerShell sends a scriptblock to a remote session, it first tries to convert it into a command plus bound parameters as an optimization.  It does this incorrectly when the script uses ForEach-Object as shown below.\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\nInvoke-Command -cn localhost -ScriptBlock { param($s,$x) foreach-object ([scriptblock]::Create($s)) -InputObject $x } -ArgumentList \"`$_\",\"HI\"\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```none\r\nHI\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n```none\r\nNo output\r\n```\r\nBut if you modify the script slightly so that PowerShell cannot convert it into a command, then the scriptblock is sent as is and works as expected.\r\n\r\n```powershell\r\nInvoke-Command -cn localhost -ScriptBlock { param($s,$x) $null; foreach-object ([scriptblock]::Create($s)) -InputObject $x } -ArgumentList \"`$_\",\"HI\"\r\nHI\r\n```\r\n\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "BrucePay",
      "author_association": "COLLABORATOR",
      "body": "@PaulHigin How strange. It should just be calling `GetPowerShell()` on the scriptblock which does fail with the example::\r\n```powershell\r\nPS >  { param($s,$x) foreach-object ([scriptblock]::Create($s)) -InputObject $x }.getpowershell()\r\nException calling \"GetPowerShell\" with \"0\" argument(s): \"Cannot generate a Windows PowerShell object for a ScriptBlock\r\nevaluating dynamic expressions. Dynamic expression: ([scriptblock]::Create($s)).\"\r\n```",
      "created_at": "2018-07-05T17:52:19Z",
      "updated_at": "2018-07-05T17:52:19Z"
    }
  ],
  "created_at": "2018-07-03T22:25:06Z",
  "labels": [
    "Issue-Bug",
    "WG-Remoting"
  ],
  "number": 7229,
  "state": "open",
  "title": "PowerShell remoting incorrectly converts script to command with ForEach-Object",
  "updated_at": "2018-07-05T17:52:19Z"
}