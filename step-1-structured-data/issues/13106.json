{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13106",
  "author": "stuartleeks",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 and PowerShell 7+ issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6).\r\n\r\n-->\r\n\r\n## Steps to reproduce\r\n\r\nIn WSL I created the following script file\r\n```bash\r\n echo \"Write-Host Hello!\" > test.ps1\r\n```\r\n\r\nFrom WSL I attempted to run the script:\r\n\r\n```none\r\n$ pwsh.exe -C ./test.ps1\r\n./test.ps1: AuthorizationManager check failed.\r\n$ pwsh.exe -F ./test.ps1\r\nSecurityError: AuthorizationManager check failed.\r\n```\r\n\r\nRunning the same script with Windows PowerShell succeeds:\r\n\r\n```none\r\n$ powershell.exe -C ./test.ps1\r\nHello!\r\n```\r\n\r\n## Expected behavior\r\n\r\nI expected the script to run successfully, as it does with Windows PowerShell\r\n\r\n\r\n## Actual behavior\r\n\r\n```none\r\n$ pwsh.exe -C ./test.ps1\r\n./test.ps1: AuthorizationManager check failed.\r\n$ pwsh.exe -F ./test.ps1\r\nSecurityError: AuthorizationManager check failed.\r\n```\r\n\r\n## Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n**$PSVersionTable**\r\n```none\r\n\r\npowershell.exe:\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      5.1.19041.1\r\nPSEdition                      Desktop\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nBuildVersion                   10.0.19041.1\r\nCLRVersion                     4.0.30319.42000\r\nWSManStackVersion              3.0\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\n\r\n\r\npwsh.exe:\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.2\r\nPSEdition                      Core\r\nGitCommitId                    7.0.2\r\nOS                             Microsoft Windows 10.0.19042\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\n**Get-ExecutionPolicy -List**\r\n\r\n```none\r\n\r\npowershell.exe:\r\n\r\n        Scope ExecutionPolicy\r\n        ----- ---------------\r\nMachinePolicy       Undefined\r\n   UserPolicy       Undefined\r\n      Process       Undefined\r\n  CurrentUser       Undefined\r\n LocalMachine    RemoteSigned\r\n\r\npwsh.exe\r\n\r\n        Scope ExecutionPolicy\r\n        ----- ---------------\r\nMachinePolicy       Undefined\r\n   UserPolicy       Undefined\r\n      Process       Undefined\r\n  CurrentUser       Undefined\r\n LocalMachine    RemoteSigned\r\n```\r\n",
  "closed_at": "2020-07-13T20:05:03Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Can you please grab the `Get-Error` output from the pwsh session that exhibited the error as well? Thanks!",
      "created_at": "2020-07-05T08:14:37Z",
      "updated_at": "2020-07-05T08:14:37Z"
    },
    {
      "author": "stuartleeks",
      "author_association": "NONE",
      "body": "Here you go:\r\n\r\n```\r\n$\ue0b0 pwsh.exe\r\nPowerShell 7.0.2\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\n\r\nhttps://aka.ms/powershell\r\nType 'help' to get help.\r\n\r\nLoading personal and system profiles took 1372ms.\r\n\\\\wsl$\\Ubuntu-20.04\\home\\stuart> .\\test.ps1\r\n.\\test.ps1: AuthorizationManager check failed.\r\n\\\\wsl$\\Ubuntu-20.04\\home\\stuart> Get-Error\r\n\r\nException             :\r\n    Type           : System.Management.Automation.PSSecurityException\r\n    ErrorRecord    :\r\n        Exception             :\r\n            Type    : System.Management.Automation.ParentContainsErrorRecordException\r\n            Message : AuthorizationManager check failed.\r\n            HResult : -2146233087\r\n        CategoryInfo          : SecurityError: (:) [], ParentContainsErrorRecordException\r\n        FullyQualifiedErrorId : UnauthorizedAccess\r\n        ErrorDetails          : AuthorizationManager check failed.\r\n        InvocationInfo        :\r\n            ScriptLineNumber : 1\r\n            OffsetInLine     : 1\r\n            HistoryId        : 1\r\n            Line             : .\\test.ps1\r\n            PositionMessage  : At line:1 char:1\r\n                               + .\\test.ps1\r\n                               + ~~~~~~~~~~\r\n            InvocationName   : .\\test.ps1\r\n            CommandOrigin    : Internal\r\n        ScriptStackTrace      : at <ScriptBlock>, <No file>: line 1\r\n    Message        : AuthorizationManager check failed.\r\n    TargetSite     :\r\n        Name          : ShouldRunInternal\r\n        DeclaringType : System.Management.Automation.AuthorizationManager\r\n        MemberType    : Method\r\n        Module        : System.Management.Automation.dll\r\n    StackTrace     :\r\n   at System.Management.Automation.AuthorizationManager.ShouldRunInternal(CommandInfo commandInfo, CommandOrigin origin, PSHost host)\r\n   at System.Management.Automation.CommandDiscovery.ShouldRun(ExecutionContext context, PSHost host, CommandInfo commandInfo,\r\nCommandOrigin commandOrigin)\r\n   at System.Management.Automation.CommandDiscovery.LookupCommandProcessor(CommandInfo commandInfo, CommandOrigin commandOrigin,\r\nNullable`1 useLocalScope, SessionStateInternal sessionState)\r\n   at System.Management.Automation.CommandDiscovery.LookupCommandProcessor(String commandName, CommandOrigin commandOrigin, Nullable`1\r\nuseLocalScope)\r\n   at System.Management.Automation.ExecutionContext.CreateCommand(String command, Boolean dotSource)\r\n   at System.Management.Automation.PipelineOps.AddCommand(PipelineProcessor pipe, CommandParameterInternal[] commandElements,\r\nCommandBaseAst commandBaseAst, CommandRedirection[] redirections, ExecutionContext context)\r\n   at System.Management.Automation.PipelineOps.InvokePipeline(Object input, Boolean ignoreInput, CommandParameterInternal[][]\r\npipeElements, CommandBaseAst[] pipeElementAsts, CommandRedirection[][] commandRedirections, FunctionContext funcContext)\r\n   at System.Management.Automation.Interpreter.ActionCallInstruction`6.Run(InterpretedFrame frame)\r\n   at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.Run(InterpretedFrame frame)\r\n    Data           : System.Collections.ListDictionaryInternal\r\n    InnerException :\r\n        Type       : System.UriFormatException\r\n        TargetSite :\r\n            Name          : CreateThis\r\n            DeclaringType : uri\r\n            MemberType    : Method\r\n            Module        : System.Private.Uri.dll\r\n        StackTrace :\r\n   at System.Uri.CreateThis(String uri, Boolean dontEscape, UriKind uriKind)\r\n   at System.Uri..ctor(String uriString)\r\n   at System.Management.Automation.ClrFacade.MapSecurityZone(String filePath)\r\n   at Microsoft.PowerShell.PSAuthorizationManager.IsLocalFile(String filename)\r\n   at Microsoft.PowerShell.PSAuthorizationManager.CheckPolicy(ExternalScriptInfo script, PSHost host, Exception& reason)\r\n   at Microsoft.PowerShell.PSAuthorizationManager.ShouldRun(CommandInfo commandInfo, CommandOrigin origin, PSHost host, Exception& reason)\r\n   at System.Management.Automation.AuthorizationManager.ShouldRunInternal(CommandInfo commandInfo, CommandOrigin origin, PSHost host)\r\n        Message    : Invalid URI: The hostname could not be parsed.\r\n        Source     : System.Private.Uri\r\n        HResult    : -2146233033\r\n    Source         : System.Management.Automation\r\n    HResult        : -2146233087\r\nCategoryInfo          : SecurityError: (:) [], PSSecurityException\r\nFullyQualifiedErrorId : UnauthorizedAccess\r\nErrorDetails          : AuthorizationManager check failed.\r\nInvocationInfo        :\r\n    ScriptLineNumber : 1\r\n    OffsetInLine     : 1\r\n    HistoryId        : 1\r\n    Line             : .\\test.ps1\r\n    PositionMessage  : At line:1 char:1\r\n                       + .\\test.ps1\r\n                       + ~~~~~~~~~~\r\n    InvocationName   : .\\test.ps1\r\n    CommandOrigin    : Internal\r\nScriptStackTrace      : at <ScriptBlock>, <No file>: line 1\r\n\r\n\\\\wsl$\\Ubuntu-20.04\\home\\stuart>\r\n```",
      "created_at": "2020-07-05T08:17:45Z",
      "updated_at": "2020-07-05T08:19:14Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I guess you run EXE not from WSL  - from Windows but cwd is `\\\\wls$\\path`.\r\n\r\nRelated #10674",
      "created_at": "2020-07-06T11:25:33Z",
      "updated_at": "2020-07-06T11:25:33Z"
    },
    {
      "author": "stuartleeks",
      "author_association": "NONE",
      "body": "Yes, I'm running `pwsh.exe` to load PowerShell in Windows in this particular case, and the path is `\\\\wsl$\\Ubuntu-20.04\\home\\stuart`",
      "created_at": "2020-07-07T20:50:13Z",
      "updated_at": "2020-07-07T20:50:13Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:This issue was addressed in #13120, which has now been successfully released as `v7.1.0-preview.6`.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.1.0-preview.6)\n",
      "created_at": "2020-08-17T22:20:10Z",
      "updated_at": "2020-08-17T22:20:10Z"
    }
  ],
  "created_at": "2020-07-05T08:10:02Z",
  "labels": [
    "Issue-Question",
    "Resolution-Fixed",
    "WG-Cmdlets-Management"
  ],
  "number": 13106,
  "state": "closed",
  "title": "`pwsh.exe -C ./myscript.ps1` fails from WSL",
  "updated_at": "2020-08-17T22:20:10Z"
}