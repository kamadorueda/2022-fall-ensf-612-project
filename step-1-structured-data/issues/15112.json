{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15112",
  "author": "LutAle",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 and PowerShell 7+ issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6).\r\n\r\n-->\r\n\r\n## Steps to reproduce\r\n\r\n```powershell\r\n# add new environment in Environment stack \r\n[System.Environment]::SetEnvironmentVariable(\"e1\",'ss',[System.EnvironmentVariableTarget]::user)\r\n\r\n```\r\n\r\n## Expected behavior\r\n\r\n```none\r\n#new environment present in environment stack\r\n#get Environment list\r\n[System.Environment]::GetEnvironmentVariables()\r\n\r\n```\r\n\r\n## Actual behavior\r\n\r\n```none\r\n# New environment missing in listing, but present in\r\nGet-CimInstance Win32_Environment\r\n```\r\n\r\n## Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nPSVersion                      7.2.0-preview.4\r\nPSEdition                      Core\r\nGitCommitId                    7.2.0-preview.4\r\nOS                             Microsoft Windows 10.0.19042\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2021-03-30T12:00:05Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "This is just how the .NET methods and the OS in general work, PowerShell has no control over this. If you set an environment variable in the User scope, it will not affect the current process's local environment variables, but it will usually affect new process's environment variables.\r\n\r\nIf you set a environment variable to the Machine scope, you may even need to restart the machine or log off and back on before it will be applied.\r\n\r\nIf you want to set the environment variable in the current process's environment scope as well, you'll need to set it at the `Process` scope, and/or use PowerShell's `$env:` provider to set the value for the local process, e.g., `$env:e1 = 'ss'`",
      "created_at": "2021-03-28T21:32:33Z",
      "updated_at": "2021-03-28T21:32:33Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2021-03-30T12:00:03Z",
      "updated_at": "2021-03-30T12:00:03Z"
    }
  ],
  "created_at": "2021-03-28T18:05:30Z",
  "labels": [
    "Issue-Question",
    "Resolution-Answered"
  ],
  "number": 15112,
  "state": "closed",
  "title": "Not update Environment variable list, after add new environment item",
  "updated_at": "2021-03-30T12:00:05Z"
}