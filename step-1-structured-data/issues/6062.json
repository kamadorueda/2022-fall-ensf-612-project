{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6062",
  "author": "alekseysshubin",
  "body": "With the help of [Host PowerShell Core in .NET Core Applications](https://github.com/PowerShell/PowerShell/tree/master/docs/host-powershell) guide, I've successfully hosted PowerShell Core in a .NET Core 2 console app. But after converting it to a Windows Service, invoking a PowerShell command crashes the service silently.\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n- Unzip [PowerShellCoreService.zip](https://github.com/PowerShell/PowerShell/files/1674573/PowerShellCoreService.zip), open the project in Visual Studio.\r\n- Open `MyService.cs`, set a breakpoint on line 18 (`var results = ps.AddScript...`).\r\n- Open cmd, `cd` to the project folder, run `dotnet publish -c Debug -r win10-x64 -o PublishOutput`.\r\n- Open cmd as an administrator, run `sc create PowerShellCoreService binpath= \"path\\to\\PublishOutput\\PowerShellCoreService.exe\"`\r\n- Start the service and attach Visual Studio debugger to the service process.\r\n- Wait for the breakpoint to activate and step over the line.\r\n\r\nExpected behavior\r\n-----------------\r\n\r\nThe script executed and the results returned to the code.\r\n\r\nActual behavior\r\n---------------\r\n\r\nThe application crashes, and Visual Studio stops the debugging session immediately. The `catch` block is not activated.\r\n\r\nEnvironment data\r\n----------------\r\n\r\n- Windows 10 1709 x64\r\n- Visual Studio 2017 15.5.5\r\n\r\nNotes\r\n----------------\r\n\r\nThe same happens on RunspacePool.Open() call.\r\nMy understanding is that I don't need to install PowerShell Core to my system for this code to work (is it right?). But just in case, I tried to install the latest PowerShell 6.0.1, but it hasn't helped.\r\nI have also tried it with PowerShell 6.0.0, the result is the same.",
  "closed_at": "2018-02-01T16:55:02Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": ">My understanding is that I don't need to install PowerShell Core to my system for this code to work \r\n\r\nYes, currently PowerShell Core is self-contained app.",
      "created_at": "2018-01-30T05:42:08Z",
      "updated_at": "2018-01-30T05:42:08Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@alekseysshubin can you provide a stack trace at time of crash?",
      "created_at": "2018-01-30T22:38:39Z",
      "updated_at": "2018-01-30T22:38:39Z"
    },
    {
      "author": "alekseysshubin",
      "author_association": "NONE",
      "body": "@SteveL-MSFT I cannot collect it from Visual Studio because it closes debugging session. I've tried to collect it using first WER and then ProcDump tool, but they both don't detect a crash. I've tried again in VS debugger, and `AppDomain.ProcessExit` event is called. So it looks like the application doesn't crash but just exits. Is it possible that something like `Environment.Exit()` is called by some code within PowerShell?",
      "created_at": "2018-01-31T15:53:35Z",
      "updated_at": "2018-01-31T15:53:35Z"
    },
    {
      "author": "anmenaga",
      "author_association": "CONTRIBUTOR",
      "body": "Looks like something is special about the environment...\r\nI've tried to repro but service runs fine in my case:\r\nCode:\r\n```\r\n        public void Start(string[] startupArguments, ServiceStoppedCallback serviceStoppedCallback)\r\n        {\r\n            try\r\n            {\r\n                using (var ps = PowerShell.Create())\r\n                {\r\n                    foreach (var result in ps.AddScript(\"$PID; \\\"$($PSVersionTable.PSVersion) $($PSVersionTable.PSEdition)\\\"\").Invoke())\r\n                    {\r\n                        Debug.WriteLine(result.ToString());\r\n                    }\r\n                }\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                Debug.WriteLine(ex);\r\n                throw;\r\n            }\r\n        }\r\n```\r\nwhen stepped through in VS 2017 debugger prints this in output window:\r\n```\r\n6660\r\n6.0.0 Core\r\n```\r\nand service is displayed as running:\r\n```\r\nPS C:\\WINDOWS\\system32> Get-Service PowerShellCoreService\r\n\r\nStatus   Name               DisplayName\r\n------   ----               -----------\r\nRunning  PowerShellCoreS... PowerShellCoreService\r\n```\r\n\r\nMy env is:\r\n```\r\nWindows Server x64 / 16299.0.amd64fre.rs3_release.170922-1354\r\nVS 2017 Community 15.4.0\r\nMicrosoft (R) Build Engine version 15.4.8.50001 for .NET Core\r\ndotnet --version == 2.0.2\r\n```",
      "created_at": "2018-01-31T20:56:35Z",
      "updated_at": "2018-01-31T20:56:35Z"
    },
    {
      "author": "anmenaga",
      "author_association": "CONTRIBUTOR",
      "body": "@alekseysshubin Can you please try with Windbg?\r\nInstall [Debugging tools for Windows](https://developer.microsoft.com/en-us/windows/hardware/download-windbg);\r\nthen start service `Start-Service PowerShellCoreService` and attach Windbg within 10 seconds by command like this:\r\n`c:\\Debuggers\\windbg.exe -pn PowerShellCoreService.exe -c 'sxe -c \"!pe;!clrstack;gc\" clr;g'`\r\nIt will run the process till termination and should print exceptions happening in it. For example:\r\n```\r\nModLoad: 00007ffc`318f0000 00007ffc`31916000   C:\\WINDOWS\\SYSTEM32\\sppc.dll\r\nModLoad: 00007ffc`33590000 00007ffc`335b2000   C:\\WINDOWS\\SYSTEM32\\gpapi.dll\r\nModLoad: 00007ffb`f9ab0000 00007ffb`f9ab3000   C:\\Temp\\1\\PublishOutput\\System.Threading.ThreadPool.dll\r\n12168\r\n6.0.0 Core\r\n(2f88.2998): CLR exception - code e0434352 (first chance)\r\nException object: 000001ef4ec900f8\r\nException type:   System.InvalidOperationException\r\nMessage:          Test exception\r\nInnerException:   <none>\r\nStackTrace (generated):\r\n<none>\r\nStackTraceString: <none>\r\nHResult: 80131509\r\nOS Thread Id: 0x2998 (6)\r\n        Child SP               IP Call Site\r\n0000000a7a1ff708 00007ffc34b43fb8 [HelperMethodFrame: 0000000a7a1ff708] \r\n0000000a7a1ff800 00007ffba20123c7 PowerShellCoreService.MyService.Start(System.String[], DasMulli.Win32.ServiceUtils.ServiceStoppedCallback) [C:\\Temp\\1\\MyService.cs @ 24]\r\n0000000a7a1ff8c0 00007ffba2011b23 DasMulli.Win32.ServiceUtils.SimpleServiceStateMachine.OnStart(System.String[], DasMulli.Win32.ServiceUtils.ServiceStatusReportCallback)\r\n0000000a7a1ff920 00007ffba2011529 DasMulli.Win32.ServiceUtils.Win32ServiceHost.ServiceMainFunction(Int32, IntPtr)\r\n0000000a7a1ff980 00007ffba20113bf DomainBoundILStubClass.IL_STUB_ReversePInvoke(Int32, Int64)\r\nModLoad: 00007ffb`ead80000 00007ffb`eaeb8000   C:\\Temp\\1\\PublishOutput\\Microsoft.DiaSymReader.Native.amd64.dll\r\nModLoad: 00007ffb`f4730000 00007ffb`f4739000   C:\\Temp\\1\\PublishOutput\\System.Diagnostics.StackTrace.dll\r\nModLoad: 00007ffb`eb110000 00007ffb`eb210000   C:\\Temp\\1\\PublishOutput\\System.Reflection.Metadata.dll\r\nModLoad: 00007ffb`eaec0000 00007ffb`eb104000   C:\\Temp\\1\\PublishOutput\\System.Collections.Immutable.dll\r\nSystem.InvalidOperationException: Test exception\r\n   at PowerShellCoreService.MyService.Start(String[] startupArguments, ServiceStoppedCallback serviceStoppedCallback) in C:\\Temp\\1\\MyService.cs:line 24\r\n(2f88.2998): CLR exception - code e0434352 (first chance)\r\nCLR exception type: System.InvalidOperationException\r\n    \"Test exception\"\r\nException object: 000001ef4ec900f8\r\nException type:   System.InvalidOperationException\r\nMessage:          Test exception\r\nInnerException:   <none>\r\nStackTrace (generated):\r\n    SP               IP               Function\r\n    0000000A7A1FF800 00007FFBA20123C7 PowerShellCoreService!PowerShellCoreService.MyService.Start(System.String[], DasMulli.Win32.ServiceUtils.ServiceStoppedCallback)+0x157\r\n\r\nStackTraceString: <none>\r\nHResult: 80131509\r\nOS Thread Id: 0x2998 (6)\r\n        Child SP               IP Call Site\r\n0000000a7a1fd528 00007ffc34b43fb8 [HelperMethodFrame: 0000000a7a1fd528] \r\n0000000a7a1fd620 00007ffba2012475 PowerShellCoreService.MyService.Start(System.String[], DasMulli.Win32.ServiceUtils.ServiceStoppedCallback) [C:\\Temp\\1\\MyService.cs @ 13]\r\n0000000a7a1ff708 00007ffc01a13190 [HelperMethodFrame: 0000000a7a1ff708] \r\n0000000a7a1ff800 00007ffba20123c7 PowerShellCoreService.MyService.Start(System.String[], DasMulli.Win32.ServiceUtils.ServiceStoppedCallback) [C:\\Temp\\1\\MyService.cs @ 24]\r\n0000000a7a1ff8c0 00007ffba2011b23 DasMulli.Win32.ServiceUtils.SimpleServiceStateMachine.OnStart(System.String[], DasMulli.Win32.ServiceUtils.ServiceStatusReportCallback)\r\n0000000a7a1ff920 00007ffba2011529 DasMulli.Win32.ServiceUtils.Win32ServiceHost.ServiceMainFunction(Int32, IntPtr)\r\n0000000a7a1ff980 00007ffba20113bf DomainBoundILStubClass.IL_STUB_ReversePInvoke(Int32, Int64)\r\nntdll!ZwTerminateProcess+0x14:\r\n00007ffc`387203c4 c3              ret\r\n```\r\n",
      "created_at": "2018-01-31T22:41:18Z",
      "updated_at": "2018-01-31T22:41:18Z"
    },
    {
      "author": "alekseysshubin",
      "author_association": "NONE",
      "body": "@anmenaga, my environment:\r\nMicrosoft (R) Build Engine version 15.5.180.51428 for .NET Core\r\ndotnet --version == 2.1.4\r\n\r\n[WinDbg log](https://github.com/PowerShell/PowerShell/files/1685347/PowerShellCoreService-windbg-log.txt). The only exception:\r\n\r\n    ModLoad: 00007ff9`e9580000 00007ff9`e959a000   C:\\Users\\aleks\\Documents\\Projects\\PowerShellCoreService\\PowerShellCoreService\\PublishOutput\\netstandard.dll\r\n    ModLoad: 00007ff9`e26c0000 00007ff9`e26c6000   C:\\Users\\aleks\\Documents\\Projects\\PowerShellCoreService\\PowerShellCoreService\\PublishOutput\\System.Diagnostics.Debug.dll\r\n    ModLoad: 00007ff9`e2150000 00007ff9`e215b000   C:\\Users\\aleks\\Documents\\Projects\\PowerShellCoreService\\PowerShellCoreService\\PublishOutput\\System.Threading.Thread.dll\r\n    (3b90.310c): Break instruction exception - code 80000003 (first chance)\r\n    *** ERROR: Symbol file could not be found.  Defaulted to export symbols for C:\\WINDOWS\\SYSTEM32\\ntdll.dll - \r\n    Processing initial command 'sxe -c \"!pe;!clrstack;gc\" clr;g'\r\n    ntdll!DbgBreakPoint:\r\n    00007ffa`021d3800 cc              int     3\r\n    0:006> sxe -c \"!pe;!clrstack;gc\" clr;g\r\n    ModLoad: 00007ff9`e2130000 00007ff9`e213b000   C:\\Users\\aleks\\Documents\\Projects\\PowerShellCoreService\\PowerShellCoreService\\PublishOutput\\System.Runtime.InteropServices.dll\r\n    ModLoad: 00007ff9`e1cc0000 00007ff9`e1cc5000   C:\\Users\\aleks\\Documents\\Projects\\PowerShellCoreService\\PowerShellCoreService\\PublishOutput\\Microsoft.Win32.Primitives.dll\r\n    ModLoad: 00000222`4ec10000 00000222`4f342000   C:\\Users\\aleks\\Documents\\Projects\\PowerShellCoreService\\PowerShellCoreService\\PublishOutput\\System.Management.Automation.dll",
      "created_at": "2018-02-01T11:50:27Z",
      "updated_at": "2018-02-01T11:50:27Z"
    },
    {
      "author": "alekseysshubin",
      "author_association": "NONE",
      "body": "I've tried on a fresh Win10 virtual machine, and it works there. Looks like a problem with my environment indeed.",
      "created_at": "2018-02-01T12:00:19Z",
      "updated_at": "2018-02-01T12:00:19Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@alekseysshubin if you can get a clear repro, please respond to this and I'll reopen the issue.  Currently there's no action we can take.  Thanks.",
      "created_at": "2018-02-01T16:55:02Z",
      "updated_at": "2018-02-01T16:55:02Z"
    }
  ],
  "created_at": "2018-01-29T17:47:16Z",
  "number": 6062,
  "state": "closed",
  "title": "Powershell 6.0.1 crashes when hosted in a Windows Service",
  "updated_at": "2018-02-01T16:55:02Z"
}