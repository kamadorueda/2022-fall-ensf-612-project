{
  "_url": "https://github.com/PowerShell/PowerShell/issues/8362",
  "author": "hubuk",
  "body": "## PR Summary\r\nAdded attempt to call CompleteCommandArgument if no completion result has been found for an existing cmdlet or script cmdlet.\r\nFix #8361\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` to the beginning of the title and remove the prefix when the PR is ready.\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [ ] User-facing [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [x] Issue filed - Issue link: #8361\r\n- **Testing - New and feature**\r\n    - [ ] Not Applicable or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n        - [ ] [Add `[feature]` if the change is significant or affects feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\r\n",
  "closed_at": "2018-12-20T06:49:17Z",
  "comments": [
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "The current behavior is actually by design. `Register-ArgumentCompleter` is for argument completion, not parameter completion. When given `foo.ps1 -pa`, powershell cannot resolve `foo.ps1` (you need to use `.\\foo.ps1` for such a file at the current folder), and thus treat `foo.ps1` as an unknown native command. For a native command, anything following is considered its arguments, that's why the argument completion kicks in for `-pa`. However, when given `.\\foo.ps1 -pa`, powershell knows `.\\foo.ps1` is a powershell command and `-pa<tab>` is an attempt of parameter completion. Therefore, the custom argument completer shouldn't kick in.\r\n\r\nWhen you run `gcm foo.ps1`, you will see the following error and suggestion, because `foo.ps1` cannot be resolved to a command:\r\n```\r\nPS:65> gcm foo.ps1\r\ngcm : The term 'foo.ps1' is not recognized as the name of a cmdlet, function, script file, or operable program.\r\nCheck the spelling of the name, or if a path was included, verify that the path is correct and try again.\r\nAt line:1 char:1\r\n+ gcm foo.ps1\r\n+ ~~~~~~~~~~~\r\n+ CategoryInfo          : ObjectNotFound: (foo.ps1:String) [Get-Command], CommandNotFoundException\r\n+ FullyQualifiedErrorId : CommandNotFoundException,Microsoft.PowerShell.Commands.GetCommandCommand\r\n\r\nSuggestion [3,General]: The command foo.ps1 was not found, but does exist in the current location. PowerShell does not load commands from the current location by default. If you trust this command, instead type: \".\\foo.ps1\". See \"get-help about_Command_Precedence\" for more details.\r\n```",
      "created_at": "2018-12-19T05:55:04Z",
      "updated_at": "2018-12-19T05:55:04Z"
    },
    {
      "author": "hubuk",
      "author_association": "CONTRIBUTOR",
      "body": "@daxian-dbw So is there a way to tab complete parameters for .ps1 files when the file acts as a proxy for another .ps1 script file?",
      "created_at": "2018-12-19T11:05:04Z",
      "updated_at": "2018-12-19T11:17:03Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "If you're saying what I _think_ you're saying, you would need to copy the target script file's `param` block to the proxy. You could then call the target in the proxy like so:\r\n\r\n```powershell\r\n.\\folder\\path\\targetfile.ps1 @PSBoundParameters\r\n```",
      "created_at": "2018-12-19T11:51:05Z",
      "updated_at": "2018-12-19T11:51:05Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "I agree with @vexx32 that your proxy script should have the parameters you need copied from the target script.",
      "created_at": "2018-12-19T18:09:03Z",
      "updated_at": "2018-12-19T18:09:03Z"
    },
    {
      "author": "hubuk",
      "author_association": "CONTRIBUTOR",
      "body": "@vexx32 @daxian-dbw Thanks for the clarification. It seems like I was trying to misuse argument completer. Will try to resolve my issues another way.",
      "created_at": "2018-12-20T06:49:17Z",
      "updated_at": "2018-12-20T06:49:17Z"
    }
  ],
  "created_at": "2018-11-29T23:39:41Z",
  "number": 8362,
  "state": "closed",
  "title": "Fire ArgumentCompleter for existing script files in case of no completion result found.",
  "updated_at": "2019-01-17T04:26:09Z"
}