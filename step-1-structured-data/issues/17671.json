{
  "_url": "https://github.com/PowerShell/PowerShell/issues/17671",
  "author": "daxian-dbw",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nThe 7.0.10 release contains a commit for a potential security issue: https://github.com/PowerShell/PowerShell/commit/38e55e14adadda43503486baf2909b3341e26d7a#. Here is the announcement about it: https://github.com/PowerShell/Announcements/issues/31.\r\n\r\n[This particular change](https://github.com/PowerShell/PowerShell/commit/38e55e14adadda43503486baf2909b3341e26d7a#diff-2bd22a7e60ca6872d2757b0f575d658af263bc63ade58368634bf01c3a4872e1R369-R378) from that commit caused a regression in Azure Function when running `Import-Module <module-name> -UseWindowsPowerShell`, where the user's module path doesn't exist. That command worked fine with the PowerShell 7.0.9 SDK but started to fail with the PowerShell 7.0.11 SDK.\r\n\r\nThe root cause is that when `Export-PSSession` is used by `Import-Module -UseWindowsPowerShell`, a rooted path is always specified to the `-OutputModule` parameter, so it doesn't matter whether the user's module path exists or not because it doesn't need it to identify the directory to use.\r\n\r\nThe fix is to use the specified rooted path directly. Actually, `Path.Combine(path1, path2)` will return `path2` if it's rooted.\r\nThe error message is also updated:\r\n\r\n![image](https://user-images.githubusercontent.com/127450/178626411-ecd1bc81-8ea5-4d31-aeca-60a45c353b9f.png)\r\n\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/main/reference/7.3/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n",
  "closed_at": "2022-07-13T20:31:57Z",
  "comments": [
    {
      "author": "pull-request-quantifier[bot]",
      "author_association": "NONE",
      "body": "### ![](https://img.shields.io/static/v1?label=Quantified&message=Extra%20Small&color=green)\r\n\r\nThis PR has `26` quantified lines of changes. In general, a change size of upto `200` lines is ideal for the best PR experience!\r\n\r\n------\r\n\r\n<details >\r\n    <summary display=\"inline\"> <strong>Quantification details</strong></summary>\r\n    <p />\r\n\r\n```\r\nLabel      : Extra Small\r\nSize       : +15 -11\r\nPercentile : 10.4%\r\n\r\nTotal files changed: 2\r\n\r\nChange summary by file extension:\r\n.resx : +1 -1\r\n.cs : +14 -10\r\n```\r\n> Change counts above are quantified counts, based on the [PullRequestQuantifier customizations](https://github.com/microsoft/PullRequestQuantifier/blob/main/docs/prquantifier-yaml.md).\r\n    \r\n</details>\r\n\r\n\r\n<details>\r\n    <summary display=\"inline\"> <strong>Why proper sizing of changes matters</strong> </summary>\r\n    <p/>\r\n    <p/>\r\n\r\nOptimal pull request sizes drive a better predictable PR flow as they strike a\r\nbalance between between PR complexity and PR review overhead. PRs within the\r\noptimal size (typical small, or medium sized PRs) mean:\r\n\r\n- Fast and predictable releases to production:\r\n  - Optimal size changes are more likely to be reviewed faster with fewer\r\niterations.\r\n  - Similarity in low PR complexity drives similar review times.\r\n- Review quality is likely higher as complexity is lower:\r\n  - Bugs are more likely to be detected.\r\n  - Code inconsistencies are more likely to be detetcted.\r\n- Knowledge sharing is improved within the participants:\r\n  - Small portions can be assimilated better.\r\n- Better engineering practices are exercised:\r\n  - Solving big problems by dividing them in well contained, smaller problems.\r\n  - Exercising separation of concerns within the code changes.\r\n\r\n#### What can I do to optimize my changes\r\n\r\n- Use the PullRequestQuantifier to quantify your PR accurately\r\n  - Create a context profile for your repo using the [context generator](https://github.com/microsoft/PullRequestQuantifier/releases)\r\n  - Exclude files that are not necessary to be reviewed or do not increase the review complexity. Example: Autogenerated code, docs, project IDE setting files, binaries, etc. Check out the `Excluded` section from your `prquantifier.yaml` context profile. \r\n  - Understand your typical change complexity, drive towards the desired complexity by adjusting the label mapping in your `prquantifier.yaml` context profile.\r\n  - Only use the labels that matter to you, [see context specification](./docs/prquantifier-yaml.md) to customize your `prquantifier.yaml` context profile.\r\n- Change your engineering behaviors\r\n  - For PRs that fall outside of the desired spectrum, review the details and check if:\r\n    - Your PR could be split in smaller, self-contained PRs instead\r\n    - Your PR only solves one particular issue. (For example, don't refactor and code new features in the same PR).\r\n\r\n#### How to interpret the change counts in git diff output\r\n\r\n- One line was added: `+1 -0`\r\n- One line was deleted: `+0 -1`\r\n- One line was modified: `+1 -1` (git diff doesn't know about modified, it will\r\ninterpret that line like one addition plus one deletion)\r\n- Change percentiles: Change characteristics (addition, deletion, modification)\r\nof this PR in relation to all other PRs within the repository.\r\n\r\n</details>\r\n\r\n<p />\r\n\r\n------\r\n\r\nWas this comment helpful? <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoiZGF4aWFuLWRidyIsIlJlcG9zaXRvcnlMaW5rIjoiaHR0cHM6Ly9naXRodWIuY29tL1Bvd2VyU2hlbGwvUG93ZXJTaGVsbCIsIlB1bGxSZXF1ZXN0TGluayI6Imh0dHBzOi8vZ2l0aHViLmNvbS9Qb3dlclNoZWxsL1Bvd2VyU2hlbGwvcHVsbC8xNzY3MSIsIkV2ZW50VHlwZSI6IlRodW1ic1VwIn0=&amp;anonymous=True\" target=\"_blank\" title=\"Thumbs up\"><strong>:thumbsup:</strong></a> <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoiZGF4aWFuLWRidyIsIlJlcG9zaXRvcnlMaW5rIjoiaHR0cHM6Ly9naXRodWIuY29tL1Bvd2VyU2hlbGwvUG93ZXJTaGVsbCIsIlB1bGxSZXF1ZXN0TGluayI6Imh0dHBzOi8vZ2l0aHViLmNvbS9Qb3dlclNoZWxsL1Bvd2VyU2hlbGwvcHVsbC8xNzY3MSIsIkV2ZW50VHlwZSI6Ik5ldXRyYWwifQ==&amp;anonymous=True\" target=\"_blank\" title=\"Neutral\"><strong>&nbsp;:ok_hand:</strong></a> <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoiZGF4aWFuLWRidyIsIlJlcG9zaXRvcnlMaW5rIjoiaHR0cHM6Ly9naXRodWIuY29tL1Bvd2VyU2hlbGwvUG93ZXJTaGVsbCIsIlB1bGxSZXF1ZXN0TGluayI6Imh0dHBzOi8vZ2l0aHViLmNvbS9Qb3dlclNoZWxsL1Bvd2VyU2hlbGwvcHVsbC8xNzY3MSIsIkV2ZW50VHlwZSI6IlRodW1ic0Rvd24ifQ==&amp;anonymous=True\" target=\"_blank\" title=\"Thumbs down\"><strong>&nbsp;:thumbsdown:</strong></a> (<a href=\"MAILTO:prquantifier@microsoft.com\" title=\"Mail to prquantifier@microsoft.com\">Email</a>)\r\n[Customize PullRequestQuantifier](https://github.com/PowerShell/PowerShell/blob/master/.github/prquantifier.yaml) for this repository.\r\n\r\n",
      "created_at": "2022-07-13T17:58:42Z",
      "updated_at": "2022-07-13T17:58:42Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "It makes sense for PowerShell Committee to review OutModule parameter. I think the case is the same as #3174 (#11701) - OutModule parameter should be LiteralPath. If so we could simplify CreateModuleDirectory() method.",
      "created_at": "2022-07-14T04:38:05Z",
      "updated_at": "2022-07-14T04:38:46Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.3.0-preview.6` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.3.0-preview.6)\n",
      "created_at": "2022-07-18T21:43:22Z",
      "updated_at": "2022-07-18T21:43:22Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "/backport release/v7.2.6",
      "created_at": "2022-08-02T19:43:25Z",
      "updated_at": "2022-08-02T19:43:25Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "/backport to release/v7.0.12",
      "created_at": "2022-08-02T19:45:15Z",
      "updated_at": "2022-08-02T19:45:15Z"
    },
    {
      "author": "github-actions[bot]",
      "author_association": "CONTRIBUTOR",
      "body": "Started backporting to release/v7.0.12: https://github.com/PowerShell/PowerShell/actions/runs/2784794011\n\n<blockquote><img src=\"https://repository-images.githubusercontent.com/49609581/aad0ad80-cdec-11ea-8248-a37bc0571bfd\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/PowerShell/PowerShell\">Fix `Export-PSSession` to not throw error when a rooted path is specified for `-OutputModule` \u00b7 PowerShell/PowerShell@0e4d2e4</a></strong></div><div>PowerShell for every system! Contribute to PowerShell/PowerShell development by creating an account on GitHub.</div></blockquote>",
      "created_at": "2022-08-02T19:45:32Z",
      "updated_at": "2022-08-02T19:45:34Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "/backport to release/v7.2.6",
      "created_at": "2022-08-02T19:45:45Z",
      "updated_at": "2022-08-02T19:45:45Z"
    },
    {
      "author": "github-actions[bot]",
      "author_association": "CONTRIBUTOR",
      "body": "@adityapatwardhan backporting to release/v7.0.12 failed, the patch most likely resulted in conflicts:\n\n```shell\n$ git am --3way --ignore-whitespace --keep-non-patch changes.patch\n\nApplying: Fix Export-PSSession to not throw error when a rooted path is specified for -OutputModule\nApplying: Update comment\nerror: sha1 information is lacking or useless (src/System.Management.Automation/utils/PathUtils.cs).\nerror: could not build fake ancestor\nhint: Use 'git am --show-current-patch=diff' to see the failed patch\nPatch failed at 0002 Update comment\nWhen you have resolved this problem, run \"git am --continue\".\nIf you prefer to skip this patch, run \"git am --skip\" instead.\nTo restore the original branch and stop patching, run \"git am --abort\".\nError: The process '/usr/bin/git' failed with exit code 128\n```\n\nPlease backport manually!",
      "created_at": "2022-08-02T19:45:55Z",
      "updated_at": "2022-08-02T19:45:55Z"
    },
    {
      "author": "github-actions[bot]",
      "author_association": "CONTRIBUTOR",
      "body": "Started backporting to release/v7.2.6: https://github.com/PowerShell/PowerShell/actions/runs/2784796745\n\n<blockquote><img src=\"https://repository-images.githubusercontent.com/49609581/aad0ad80-cdec-11ea-8248-a37bc0571bfd\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/PowerShell/PowerShell\">Fix `Export-PSSession` to not throw error when a rooted path is specified for `-OutputModule` \u00b7 PowerShell/PowerShell@0e4d2e4</a></strong></div><div>PowerShell for every system! Contribute to PowerShell/PowerShell development by creating an account on GitHub.</div></blockquote>",
      "created_at": "2022-08-02T19:45:59Z",
      "updated_at": "2022-08-02T19:46:01Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.0.12` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.0.12)\n",
      "created_at": "2022-08-11T22:15:50Z",
      "updated_at": "2022-08-11T22:15:50Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.2.6` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.2.6)\n",
      "created_at": "2022-08-11T22:18:52Z",
      "updated_at": "2022-08-11T22:18:52Z"
    }
  ],
  "created_at": "2022-07-13T01:04:31Z",
  "number": 17671,
  "state": "closed",
  "title": "Fix `Export-PSSession` to not throw error when a rooted path is specified for `-OutputModule`",
  "updated_at": "2022-08-11T22:18:52Z"
}