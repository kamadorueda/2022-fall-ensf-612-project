{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12815",
  "author": "xtqqczze",
  "body": "static test to verfiy number of reference assemblies, see https://github.com/PowerShell/PowerShell/pull/12520#issuecomment-623543851",
  "closed_at": null,
  "comments": [
    {
      "author": "Shriram0908",
      "author_association": "CONTRIBUTOR",
      "body": "@xtqqczze I am getting error while running ```Start-PSPester``` on a fresh cloned git repo.\r\nThe error message is \r\n ```\r\nProcess terminated. Assertion failed.\r\ndefaultRefAssemblies was resized because of insufficient initial capacity! A capacity of 153 is required.\r\n```\r\nCan you help me with this.\r\n[Error.txt](https://github.com/PowerShell/PowerShell/files/4703713/Error.txt)\r\n",
      "created_at": "2020-05-29T18:54:24Z",
      "updated_at": "2020-05-29T18:54:24Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Yeah, I don't think a debug.assert call was the right call (hehe) in that specific case. It's not worth bricking folks' dev builds over IMO.\r\n\r\n/cc @SteveL-MSFT @iSazonov ",
      "created_at": "2020-05-29T19:20:05Z",
      "updated_at": "2020-05-29T19:20:05Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "@vexx32 I have written #12840 to expand the capacity and remove the assert, but I am unable to fix this issue as I am not sure how to implement a static test.",
      "created_at": "2020-05-30T20:25:15Z",
      "updated_at": "2020-05-30T20:25:15Z"
    },
    {
      "author": "kilasuit",
      "author_association": "COLLABORATOR",
      "body": "@xtqqczze you could add a simple test along the lines of something like the below to this file to ensure that it is what it should be\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/master/test/powershell/Modules/Microsoft.PowerShell.Utility/Add-Type.Tests.ps1\r\n\r\nlike \r\n```\r\n It \"loads the right number of assembilies\" {\r\n    ((Get-ChildItem ./src/Microsoft.PowerShell.Commands.Utility/commands/utility/AddType.cs | Select-String -pattern 'numberOfPowershellRefAssemblies' -AllMatches -Quiet -List ).Line -match '151')\r\n}\r\n ```\n\n<blockquote><img src=\"https://repository-images.githubusercontent.com/49609581/96590180-07d7-11ea-89b1-2f719dc4bb9c\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/PowerShell/PowerShell\">PowerShell/PowerShell</a></strong></div><div>PowerShell for every system! Contribute to PowerShell/PowerShell development by creating an account on GitHub.</div></blockquote>",
      "created_at": "2020-05-31T05:26:29Z",
      "updated_at": "2020-05-31T05:26:31Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Really we have no need in the test. It is better to generate the const at design time, perhaps in TypeGen.",
      "created_at": "2020-05-31T06:27:29Z",
      "updated_at": "2020-05-31T06:27:29Z"
    },
    {
      "author": "kilasuit",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov I added the above as way to show how it `could` be done in a pester test, not suggesting that it `should` be done in this instance,\r\n\r\nJust like you also `could` also write a hyper strict test that detailed all of the required assembly names, not that one should be written ",
      "created_at": "2020-06-01T13:20:49Z",
      "updated_at": "2020-06-01T13:20:49Z"
    },
    {
      "author": "IISResetMe",
      "author_association": "COLLABORATOR",
      "body": "What exactly are we trying to defend ourselves against here, and why does it have to violently crash my local builds?",
      "created_at": "2020-06-01T13:55:54Z",
      "updated_at": "2020-06-01T13:55:54Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "HEAD of `master` has been broken since 99da109 (#12772), when .NET was updated to `5.0.100-preview.5.20278.13`, I'm wondering why there was no failure from CI at that time?",
      "created_at": "2020-06-01T14:42:59Z",
      "updated_at": "2020-06-01T14:53:14Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Unless I'm mistaken, CI tests on release builds which will automatically bypass the debug assertions by design.",
      "created_at": "2020-06-01T15:00:55Z",
      "updated_at": "2020-06-01T15:00:55Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "@vexx32 Perhaps tests should run on a debug build for a bot PR, since local tests will not have performed.",
      "created_at": "2020-06-01T22:39:14Z",
      "updated_at": "2020-06-01T22:39:14Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Not a bad call. No idea how you'd go about setting that up in CI, but it might be something for @TravisEz13 and the team to consider if it's possible.",
      "created_at": "2020-06-01T22:41:26Z",
      "updated_at": "2020-06-01T22:41:26Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "I'd open an issue.  We have made an active decision to keep the build release.  The advice has to NOT use asserts.  You should write a unit test if you need an assert.",
      "created_at": "2020-06-02T18:41:16Z",
      "updated_at": "2020-06-02T18:41:16Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "@TravisEz13 I did remove the assert in #12840, but you and @iSazonov wanted this change reverted https://github.com/PowerShell/PowerShell/pull/12840#discussion_r432908977",
      "created_at": "2020-06-03T19:28:01Z",
      "updated_at": "2020-06-03T19:28:01Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@xtqqczze something we could do is make the check in the method and store it in a static private field on the class; a test could check the value via reflection.\r\n\r\nThere are potentially other solutions, but I'm not sure what's appropriate here. I do agree that it's not a great idea to have a debug assertion here since it would get hit immediately on startup and wouldn't show up in CI.",
      "created_at": "2020-06-03T20:01:25Z",
      "updated_at": "2020-06-03T20:01:25Z"
    }
  ],
  "created_at": "2020-05-27T12:30:42Z",
  "labels": [
    "Issue-Question",
    "WG-Quality-Test"
  ],
  "number": 12815,
  "state": "open",
  "title": "Verify defaultRefAssemblies list capacity",
  "updated_at": "2020-06-03T20:01:25Z"
}