{
  "_url": "https://github.com/PowerShell/PowerShell/issues/17269",
  "author": "GrantMoyer",
  "body": "### Prerequisites\r\n\r\n- [X] Write a descriptive title.\r\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- [X] Search the existing issues.\r\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\r\n\r\n### Steps to reproduce\r\n\r\nEither:\r\n1. install WSL 1\r\n2. Run `wsl vi` from PowerShell prompt\r\n3. Press <kbd>Ctrl</kbd>+<kbd>z</kbd>\r\n\r\nOr:\r\n1. Download [PsSuspend][1]\r\n2. Run a command line app from PowerShell prompt, for example `ftp`\r\n3. Run `pssuspend.exe <ID of process from step 2>`\r\n\r\n[1]: https://docs.microsoft.com/en-us/sysinternals/downloads/pssuspend\r\n\r\n### Expected behavior\r\n\r\nEither PowerShell creates a suspended PowerShell background job for the child process (which can later be resumed), or PowerShell immediately resumes the child process to prevent becoming unresponsive.\r\n\r\n\r\n### Actual behavior\r\n\r\nPowerShell becomes unresponsive to all input until child process is resumed (either via pssuspend or `kill -SIGCONT` for WSL jobs) or killed.\r\n\r\n\r\n### Error details\r\n\r\n_No response_\r\n\r\n### Environment data\r\n\r\n```powershell\r\nName                      Value\r\n----                      -----\r\nPSVersion                 7.2.3\r\nPSEdition                 Core\r\nGutCommitId               7.2.3\r\nOS                        Microsoft Windows 10.0.19044\r\nPlatform                  Win32NT\r\nPSCompatibleVersions      {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion 2.3\r\nSerializationVersion      1.1.0.1\r\nWSManStackVersion         3.0\r\n```\r\n\r\n\r\n### Visuals\r\n\r\n_No response_",
  "closed_at": "2022-05-07T19:00:45Z",
  "comments": [
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "> 1. install WSL 1\r\n>2. Run `wsl vi` from PowerShell prompt\r\n>3. Press <kbd>Ctrl</kbd>+<kbd>z</kbd>\r\n\r\nAm I supposed to run 2 and 3 from pwsh that opened directly on Windows?\r\nI'm using WSL v2, and I cannot reproduce the issue:\r\n\r\n![CompletionPredictor](https://user-images.githubusercontent.com/127450/166978824-3d1872e7-8efd-4900-abde-0bbe182fd15d.gif)\r\n\r\n",
      "created_at": "2022-05-05T17:25:36Z",
      "updated_at": "2022-05-05T17:25:36Z"
    },
    {
      "author": "GrantMoyer",
      "author_association": "NONE",
      "body": "> Am I supposed to run 2 and 3 from pwsh that opened directly on Windows?\r\n\r\nYes, the steps in your screen capture are exactly correct, except you need to use WSL v1. Although I have not tried to repoduce the issue in WSL v2, it makes sense to me that the issue is reproducible in v1 but not in v2, since WSL v1 is a translation layer, and WSL v2 uses a linux virtual machine, and the issue has to do with Windows process states.",
      "created_at": "2022-05-05T20:03:30Z",
      "updated_at": "2022-05-05T20:04:35Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Thanks for the reply. Given that it doesn't reproduce in WSL v2, it's likely a specific issue with related to WSL v1. I will resolve this as external then.",
      "created_at": "2022-05-05T21:11:23Z",
      "updated_at": "2022-05-05T21:11:23Z"
    },
    {
      "author": "GrantMoyer",
      "author_association": "NONE",
      "body": "@daxian-dbw Note that the issue also occurs without WSL at all, using the alternative repro steps.",
      "created_at": "2022-05-05T22:05:22Z",
      "updated_at": "2022-05-05T22:05:22Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "When run a console application like `ftp` from the pwsh prompt, pwsh will be waiting for the `ftp` process to exit. When you run `PsSuspend` to suspend the `ftp` process, it's suspended but not exited, so pwsh will keep waiting for it. That's the by design behavior.",
      "created_at": "2022-05-05T22:11:39Z",
      "updated_at": "2022-05-05T22:11:39Z"
    },
    {
      "author": "GrantMoyer",
      "author_association": "NONE",
      "body": "> When you run PsSuspend to suspend the ftp process, it's suspended but not exited, so pwsh will keep waiting for it. That's the by design behavior.\r\n\r\nI'd consider that behavior very unexpected for an interactive shell. Most other interactive shells I've used will recognize if a child process is suspended (but not exited), make the child process a background job, and return to the shell's prompt.",
      "created_at": "2022-05-05T22:53:06Z",
      "updated_at": "2022-05-05T22:53:44Z"
    },
    {
      "author": "kasini3000",
      "author_association": "NONE",
      "body": "win is not linux, there is no fg/bg in win, only multiple windows.\r\nno suspend/resume process on powershell v7\r\nPowershell is not a terminal software, maybe the terminal software supports vi better.\r\nMy personal advice:\r\nUse vscode+remote ssh extension instead of vi.\r\nUse vscode+remote wsl extension instead of vi.",
      "created_at": "2022-05-06T15:46:05Z",
      "updated_at": "2022-05-06T15:52:11Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@GrantMoyer PowerShell doesn't have the equivalent bg/fg functionality as in bash (not even on Unix platforms). Today, PowerShell does have a `bg` job concept, but it's a syntactic sugar to run a pipeline with background job (`start-job`).",
      "created_at": "2022-05-06T18:13:42Z",
      "updated_at": "2022-05-06T18:13:42Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as external and has not had any activity for **1 day**. It has been be closed for housekeeping purposes.",
      "created_at": "2022-05-07T19:00:44Z",
      "updated_at": "2022-05-07T19:00:44Z"
    }
  ],
  "created_at": "2022-05-05T16:16:12Z",
  "number": 17269,
  "state": "closed",
  "title": "PowerShell becomes unresponsive if child process is suspended",
  "updated_at": "2022-05-07T19:00:45Z"
}