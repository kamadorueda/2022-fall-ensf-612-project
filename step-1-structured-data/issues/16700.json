{
  "_url": "https://github.com/PowerShell/PowerShell/issues/16700",
  "author": "nmbell",
  "body": "### Prerequisites\n\n- [X] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\n\n### Steps to reproduce\n\nConsole output truncated with an ellipsis causes remaining text to shift to the left when using $PSStyle\r\n\r\nI have a .ps1xml format file that defines a view for file and directory objects which uses $PSStyle to highlight parts of the output, e.g.:\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<Configuration>\r\n    <SelectionSets>\r\n        <SelectionSet>\r\n            <Name>FileSystemTypes</Name>\r\n            <Types>\r\n                <TypeName>System.IO.DirectoryInfo</TypeName>\r\n                <TypeName>System.IO.FileInfo</TypeName>\r\n            </Types>\r\n        </SelectionSet>\r\n    </SelectionSets>\r\n    <ViewDefinitions>\r\n        <View>\r\n            <Name>children</Name>\r\n            <ViewSelectedBy>\r\n                <SelectionSetName>FileSystemTypes</SelectionSetName>\r\n            </ViewSelectedBy>\r\n            <TableControl>\r\n                <TableHeaders>\r\n                    <TableColumnHeader> <Label>Name</Label>                <Width>30</Width>  <Alignment>Left</Alignment>  </TableColumnHeader>\r\n                    <TableColumnHeader> <Label>LastWriteTime      </Label> <Width>19</Width>  <Alignment>Left</Alignment>  </TableColumnHeader>\r\n                    <TableColumnHeader> <Label>Size      </Label>          <Width>10</Width>  <Alignment>Right</Alignment> </TableColumnHeader>\r\n                    <TableColumnHeader> <Label>FullName</Label>                               <Alignment>Left</Alignment>  </TableColumnHeader>\r\n                </TableHeaders>\r\n                <TableRowEntries>\r\n                    <TableRowEntry>\r\n                        <TableColumnItems>\r\n                            <TableColumnItem>\r\n                                <ScriptBlock>\r\n                                    \"$($PSStyle.Reverse)$($_.Name)$($PSStyle.Reset)\"\r\n                                </ScriptBlock>\r\n                            </TableColumnItem>\r\n                            <TableColumnItem>\r\n                                <ScriptBlock>\r\n                                    $_.LastWriteTime.ToString('yyyy-MM-dd HH:mm:ss')\r\n                                </ScriptBlock>\r\n                            </TableColumnItem>\r\n                            <TableColumnItem>\r\n                                <ScriptBlock>\r\n                                    ($_.Length/1MB).ToString('0.000')+' MB'\r\n                                </ScriptBlock>\r\n                            </TableColumnItem>\r\n                            <TableColumnItem>\r\n                                <ScriptBlock>\r\n                                    $_.FullName\r\n                                </ScriptBlock>\r\n                            </TableColumnItem>\r\n                        </TableColumnItems>\r\n                    </TableRowEntry>\r\n                </TableRowEntries>\r\n            </TableControl>\r\n        </View>\r\n    </ViewDefinitions>\r\n</Configuration>\r\n```\r\n\r\n```\r\n$filePath = 'D:\\my.format.ps1xml'\r\nUpdate-FormatData -PrependPath $filePath\r\nGet-ChildItem -Path $PSHOME -File\r\n```\r\n\r\nWhen the `Name` column contains a long file name, the console truncates the name and adds an ellipsis `\u2026` to indicate that there are truncated characters. When this happens, the remaining characters on the line are shifted 3 spaces to the left:\r\n![image](https://user-images.githubusercontent.com/23632110/148135987-1eda7e9e-0812-4a79-8a39-2a39e8486e17.png)\r\n\r\nRemoving the references to $PSStyle in the .ps1xml format file gives the expected layout:\r\n![image](https://user-images.githubusercontent.com/23632110/148136016-60c7f6ab-2c22-487e-bd1a-314f2669be9b.png)\r\n\r\nThe shift effect is present for any value of $PSStyle.OutputRendering.\r\n\r\n\n\n### Expected behavior\n\n```console\nOutput text on lines with a truncation ellipsis should remain aligned with its column header.\n```\n\n\n### Actual behavior\n\n```console\nOutput text on lines with a truncation ellipsis is shifted to the left.\n```\n\n\n### Error details\n\n```console\nn/a\n```\n\n\n### Environment data\n\n```powershell\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.1\r\nPSEdition                      Core\r\nGitCommitId                    7.2.1\r\nOS                             Microsoft Windows 10.0.19043\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\n```\n\n\n### Visuals\n\n_No response_",
  "closed_at": "2022-05-06T18:40:34Z",
  "comments": [
    {
      "author": "jhoneill",
      "author_association": "NONE",
      "body": "Looking at the way the truncation is happening in your two examples, it seems to be mis-counting the number of characters, and cutting the text 3 characters early, which has the knock-on effect of shifting the rest of the line 3 to the left. \r\nDoes this happen if you specify a colour instead of reverse ?  I may be mis-remembering but I think there was a bug to do with some escape sequences not being recognized, it's almost like it is fixed everywhere *except* the truncate routine. \r\n",
      "created_at": "2022-01-04T23:50:27Z",
      "updated_at": "2022-01-04T23:50:27Z"
    },
    {
      "author": "nmbell",
      "author_association": "NONE",
      "body": "The actual .ps1xml file I use has some logic to set different colors (including reverse) depending on various properties (read only, hidden, etc.), and I see the shifted text any time a color is applied to a truncated name.",
      "created_at": "2022-01-05T09:00:40Z",
      "updated_at": "2022-01-05T09:00:40Z"
    },
    {
      "author": "jhoneill",
      "author_association": "NONE",
      "body": "OK.  It's odd that truncate is wrong by 3.  You have [esc], [, 0, m, for reset, and [esc], [, 7, m for reverse which is six printable chars and 8 in total.  It would have been a neat explanation if the error was it discounted reset and colours but didn't understand reverse. ",
      "created_at": "2022-01-05T09:12:59Z",
      "updated_at": "2022-01-05T09:12:59Z"
    },
    {
      "author": "jhoneill",
      "author_association": "NONE",
      "body": "A related problem which isn't the one I referred to in the previous example, but relates to errors when the text is too wide for the column\r\n\r\nThe screen shot below is showing tasks carried out in different environments, the environments are on the right and have names \"Shared services pre-release\" and \"Shared services dev\". Red is used to indicate \"All EXCEPT the one(s) shown\"  \r\nWhen the there is a sufficient width the end of the first line and the second look like this:\r\n`Red`   `Shared services pre-release`  `reset` \r\n`PanettoneService`   `Red`   `Shared services Dev`  `reset` \r\n\r\nWhen there is less width the two lines become three:    \r\n`Red`   `Shared services`   \r\n`PanettoneService`   ` pre-release`  `reset`  `red`   `Shared` \r\n`services Dev`  `reset`  \r\nSo the columns on default colours become red\r\n\r\n![image](https://user-images.githubusercontent.com/16209593/148262219-c8ba444f-7f6f-4beb-aa0d-ff37db08bedc.png)\r\n\r\n\r\n",
      "created_at": "2022-01-05T17:35:42Z",
      "updated_at": "2022-01-05T17:35:42Z"
    },
    {
      "author": "Jaykul",
      "author_association": "CONTRIBUTOR",
      "body": "For the record: the problem here is **EXTREMELY ANNOYING** and basically left my dream of using color codes in formatting files on hold. It also affects Format-Wide as well.\r\n\r\nWe can only add escape sequences to text if we're sure the text will not need to be truncated by the formatter. \r\n\r\nHere's a simple repro example:\r\n\r\nGiven a function that outputs objects ... \r\n\r\n```PowerShell\r\nfunction Get-DemoObjects {\r\n    [PSCustomObject]@{PSTypeName = \"User\"; Name = \"Bob Saggat\"; Tenure = 2; Role = \"Developer\" }\r\n    [PSCustomObject]@{PSTypeName = \"User\"; Name = \"John Seymour\"; Tenure = 6; Role = \"Sw Engineer\" }\r\n    [PSCustomObject]@{PSTypeName = \"User\"; Name = \"Billy Bob Thorton\"; Tenure = 13; Role = \"Senior DevOps Engineer\" }\r\n}\r\n```\r\n\r\nIf you format those objects such that they get truncated (imagine we did this in a format file):\r\n\r\n```PowerShell\r\nGet-DemoObjects | Format-Table @{Width = 10; Name = \"Name\"; E = { $_.Name }}, \r\n                               @{Width = 15; Name = \"Role\";  E = { $_.Role }},\r\n                               @{Width = 3; Name = \"YIR\";  E = { $_.Tenure }}\r\n```\r\n![image](https://user-images.githubusercontent.com/192942/164150152-e107a356-ac47-4cab-b343-e133851fe719.png)\r\n\r\nEverything is fine, until you add color, and suddenly things get over-truncated, and start sliding around.\r\n\r\n```PowerShell\r\nGet-DemoObjects |\r\n    Format-Table @{Width = 10; Name = \"Name\"; E = { (@(\"`e[32m\", \"`e[34m\", \"`e[33m\", \"`e[31m\", \"`e[33m\", \"`e[34m\", \"`e[32m\")[[array]::BinarySearch(@(3, 5, 8), $_.Tenure)]) + $_.Name + \"`e[39m\"}},\r\n                 @{Width = 15; Name = \"Role\";  E = { $_.Role }}, \r\n                 @{Width = 3; Name = \"YIR\";  E = { $_.Tenure }}\r\n```\r\n![image](https://user-images.githubusercontent.com/192942/164151054-26bd5c4d-68af-4db1-b849-49f018d42945.png)\r\n\r\nBut it's even worse if you have more escape characters. If you get really unlucky, it can eat the whole text, completely. Other times, you get columns moving around so much they end up under the wrong heading and you can't make heads or tails of it. For my use case last week, imagine we had applied the same color formatting rule to three or four columns. Everything just looked ... random.\r\n\r\n```PowerShell\r\nGet-DemoObjects |\r\n    Format-Table @{Width = 10; Name = \"Name\"; E = { (@(\"`e[32m\", \"`e[34m\", \"`e[33m\", \"`e[31m\", \"`e[33m\", \"`e[34m\", \"`e[32m\")[[array]::BinarySearch(@(3, 5, 8), $_.Tenure)]) + $_.Name + \"`e[39m\"}},\r\n                 @{Width = 15; Name = \"Role\";  E = {\r\n                                -join $(switch -regex ($_.Role){\r\n                                        \"Senior\" { \"`e[42m\" }\r\n                                        \"Engineer\" { \"`e[1;33m\" }\r\n                                    }) + $_.Role  + \"`e[0m\"}}, \r\n                 @{Width = 3; Name = \"YIR\";  E = { $_.Tenure }}\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/192942/164151993-7710b993-45d0-4d2a-80c8-eca613fae99f.png)\r\n\r\nNote that Format-Wide does the same thing, but it gets really weird sometimes. These columns overlap! What's even happening here?\r\n\r\n```PowerShell\r\n(Get-DemoObjects) + (Get-DemoObjects) + \r\n(Get-DemoObjects) + (Get-DemoObjects) + \r\n(Get-DemoObjects) + (Get-DemoObjects) | \r\n    Format-Wide @{E = { (@(\"`e[32m\", \"`e[34m\", \"`e[33m\", \"`e[31m\", \"`e[33m\", \"`e[34m\", \"`e[32m\")[[array]::BinarySearch(@(3, 5, 8), $_.Tenure)]) + $_.Name + \"`e[39m\"}} -co 2| Out-String -Width 47\r\n```\r\n![image](https://user-images.githubusercontent.com/192942/164153442-00511796-5fef-4131-b654-a029616ae93a.png)\r\n\r\nTechnically, Format-List is not affected by this, but colors don't work there either, because when it wraps, the second line gets no formatting, which is _really **gross**_: \r\n![image](https://user-images.githubusercontent.com/192942/164153654-827ca3b5-fdcf-4439-9673-0b66be0a8d26.png)\r\n\r\n## Workaround\r\n\r\nFor table formats, if you force the width of your columns, then you can write truncation in the format file. As long as the format doesn't output text that's too wide, the formatter won't need to truncate it (the miscalculation **only** affects the truncation, not the length measurement).\r\n\r\n",
      "created_at": "2022-04-20T05:04:10Z",
      "updated_at": "2022-04-20T05:04:10Z"
    },
    {
      "author": "Jaykul",
      "author_association": "CONTRIBUTOR",
      "body": "Also, @jhoneill the reason for the number of characters ... is that you're forgetting that it *also* removed the escape characters from the end of the string.\r\n\r\nIf we simplify my example:\r\n\r\n```PowerShell\r\nGet-DemoObjects | Format-Table @{Width = 10; Name = \"Name\"; E = { \"`e[33m\" + $_.Name } }, \r\n                               @{Width = 15; Name = \"Role\"; E = { $_.Role }},\r\n                               @{Width = 3;  Name = \"YIR\";  E = { $_.Tenure }}\r\n\r\nGet-DemoObjects | Format-Table @{Width = 10; Name = \"Name\"; E = { \"`e[1;33m\" + $_.Name } }, \r\n                               @{Width = 15; Name = \"Role\"; E = { $_.Role }},\r\n                               @{Width = 3;  Name = \"YIR\";  E = { $_.Tenure }}\r\n\r\n```\r\n![image](https://user-images.githubusercontent.com/192942/164156494-b8d9c4fe-4496-4904-9387-61dbbdffadfe.png)\r\n\r\nWe can clearly see that it's truncating the number of printable escape characters (i.e. not ```e`` but everything else). When I add `1;` at the front, it truncates an extra 2 visible characters from the end. When I add `[39m` on the end, it makes no difference, because _the characters I added are the ones that get truncated_.",
      "created_at": "2022-04-20T05:28:49Z",
      "updated_at": "2022-04-20T05:29:18Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "> Technically, Format-List is not affected by this, but colors don't work there either, because when it wraps, the second line gets no formatting, which is really gross:\r\n\r\n@Jaykul Can you please also share the script for doing the list view shown in your comment? That would be helpful.",
      "created_at": "2022-05-03T17:00:59Z",
      "updated_at": "2022-05-03T17:00:59Z"
    },
    {
      "author": "ninmonkey",
      "author_association": "NONE",
      "body": "@Jaykul \r\nis the `?` here intentional / from your prompt? It doesn't appear to parse as a command or alias, because the color is different. I don't think it changes anything for this ticket \r\n ![image](https://user-images.githubusercontent.com/3892031/166716238-9e6f6a18-80e3-406c-9dc8-93556904c26b.png)\r\n",
      "created_at": "2022-05-04T15:31:05Z",
      "updated_at": "2022-05-04T15:34:58Z"
    },
    {
      "author": "Jaykul",
      "author_association": "CONTRIBUTOR",
      "body": "> > Technically, Format-List is not affected by this, but colors don't work there either, because when it wraps, the second line gets no formatting, which is really gross:\r\n> \r\n> @Jaykul Can you please also share the script for doing the list view shown in your comment? That would be helpful.\r\n\r\n@daxian-dbw it's basically the same as above, just with `| Format-List` instead:\r\n\r\n```PowerShell\r\nGet-DemoObjects |\r\n    Format-List @{Name = \"Name\"; E = { (@(\"`e[32m\", \"`e[34m\", \"`e[33m\", \"`e[31m\", \"`e[33m\", \"`e[34m\", \"`e[32m\")[[array]::BinarySearch(@(3, 5, 8), $_.Tenure)]) + $_.Name + \"`e[39m\"}}\r\n```\r\nBecause I didn't want to make up new data, I just made the window very narrow (on Windows 10 you may have to increased the font size) to force the wrapping even though my text was really short \ud83d\ude09\r\n\r\n\r\nOff topic, and just for the record:\r\n@ninmonkey we talked about this on Discord, but just in case: The \"?\" in my prompt is due to a totally different bug in PSReadLine. It changes the color of the last character of your prompt as you type whenever the command isn't valid _syntax_, and **if** the last character is an extended character, and **if** your console encoding isn't set to UTF8, it screws up the character because it uses `Console.Write` (in my case, with OEM 437 encoding, that PowerLine arrow-block character isn't encodable).",
      "created_at": "2022-05-04T17:13:41Z",
      "updated_at": "2022-05-04T17:15:23Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@Jaykul Thanks for the follow-up. Yeah, I figured you might just resized the windows :) It's because the word wrapping utility methods don't take into account escape sequences. I opened #17261 to track that specific issue separately.",
      "created_at": "2022-05-04T19:57:00Z",
      "updated_at": "2022-05-04T19:57:00Z"
    },
    {
      "author": "nmbell",
      "author_association": "NONE",
      "body": "@daxian-dbw Thanks! :clap: \ud83d\ude04 ",
      "created_at": "2022-05-06T20:02:00Z",
      "updated_at": "2022-05-06T20:02:00Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:This issue was addressed in #17251, which has now been successfully released as `v7.3.0-preview.4`.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.3.0-preview.4)\n",
      "created_at": "2022-05-23T16:22:14Z",
      "updated_at": "2022-05-23T16:22:14Z"
    }
  ],
  "created_at": "2022-01-04T23:10:49Z",
  "labels": [
    "Issue-Bug",
    "Resolution-Fixed",
    "WG-Engine-Format"
  ],
  "number": 16700,
  "state": "closed",
  "title": "Console output truncated with an ellipsis causes remaining text to shift to the left when using $PSStyle",
  "updated_at": "2022-05-23T16:22:14Z"
}