{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15913",
  "author": "clementbey",
  "body": "### Prerequisites\r\n\r\n- [X] Write a descriptive title.\r\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- [X] Search the existing issues.\r\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\r\n\r\n### Steps to reproduce\r\n\r\nHello there,\r\nI think this issue are same than #11045 but I want to add more details with my lab environnement. When I want to mount a SMB drive (not persistent), the first credential sending is the current user who's execute the script.\r\nIn my environment, client `Windows Server 2019` and Server `Windows Server 2012 R2` are out of domain **and have different password**.\r\n```Powershell\r\nwhoami\r\nawx2019\\administrateur\r\n```\r\nHere the code to test :\r\n\r\n```Powershell\r\n#Credentials\r\n[string]$userName = 'backup1'\r\n[string]$smbServer = '172.16.19.250'\r\n[SecureString]$securePwd = ConvertTo-SecureString \"4c&[rvPh0m[0yGb)\" -AsPlainText -Force\r\n[PSCredential]$credObject = New-Object System.Management.Automation.PSCredential -ArgumentList $userName, $securePwd\r\n#Mount PSDrive\r\nNew-PSDrive -Name \"SaveBackup\" -PSProvider \"FileSystem\" -Root \"\\\\$smbServer\\client1\" -Credential $credObject\r\n```\r\nContent of `$credObject` :\r\n```powershell\r\nUserName                     Password\r\n--------                     --------\r\nbackup1  System.Security.SecureString\r\n```\r\nThe current user who's start the script are `Administrateur` on SMB Client. The SMB Server should recive first `backup1` but recives `Administrateur` with all informations of `Administrateur` client (including password !).\r\n\r\nHere a screenshot on SMB Server event log (Security) :\r\n![image](https://user-images.githubusercontent.com/88830012/129197096-e713b7af-a28b-423d-a432-363f88b65c3b.png)\r\n\r\nAfter 3 attempts sending `Administrateur`, Powershell try with the correct user `backup1` and can open the SMB Share. \r\n![image](https://user-images.githubusercontent.com/88830012/129197286-e397058c-f86a-4554-973e-fcb213f02e48.png)\r\n\r\nA Wireshark capture confirm than `Administrateur` is sent first :\r\n![image](https://user-images.githubusercontent.com/88830012/129198494-1f87cbb9-7649-483a-9e0b-11e7ea561f69.png)\r\n\r\nThis issue is a problem for tools intrusion detection. More than 100 of my servers are blocked by security agent for generate a lot of ID 4625 (brute-force detected). Is it a PowerShell problem, SMB problem or Windows Server problem ? ...\r\n\r\nRegards,\r\nClement.\r\n\r\n### Expected behavior\r\n\r\n```console\r\nSend on first `backup1` (remote service account of SMB Server) user and not the current user who's start the script.\r\n```\r\n\r\n\r\n### Actual behavior\r\n\r\n```console\r\nSending the current user who's start the script.\r\n```\r\n\r\n\r\n### Error details\r\n\r\n_No response_\r\n\r\n### Environment data\r\n\r\n```powershell\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.3\r\nPSEdition                      Core\r\nGitCommitId                    7.1.3\r\nOS                             Microsoft Windows 10.0.17763\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\nAND\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.0-preview.8\r\nPSEdition                      Core\r\nGitCommitId                    7.2.0-preview.8\r\nOS                             Microsoft Windows 10.0.17763\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\n\r\n### Visuals\r\n\r\n_No response_",
  "closed_at": null,
  "comments": [
    {
      "author": "fMichaleczek",
      "author_association": "NONE",
      "body": "I made a small script which use the Win32 API _WNetAddConnection2A_ under the hood.\r\n\r\nCan you try it ? \r\nI put all URL references and use enums, so in case, you want to change some parameters and debug.\r\nThe code in PSDrive is located here, if you want to check the default \r\nhttps://github.com/PowerShell/PowerShell/blob/b70f06ccc6041281b0f4dc6eaeefdbe5c649636d/src/System.Management.Automation/namespaces/FileSystemProvider.cs#L666\r\n\r\nCan you also compare with a _net use_ inside a cmd ? \r\n\r\nIf the problem is in the win32 API, that's a Windows bug.\r\n\r\n```\r\nAdd-Type -TypeDefinition @'\r\n\r\nusing System;\r\nusing System.Runtime.InteropServices;\r\n\r\nnamespace Utils \r\n{\r\n    public class Native\r\n    {\r\n        [DllImport(\"Mpr.dll\", EntryPoint = \"WNetAddConnection2\", CallingConvention = CallingConvention.Winapi)]\r\n        public static extern int WNetAddConnection2(NetResource lpNetResource,\r\n                                                    string lpPassword,\r\n                                                    string lpUsername,\r\n                                                    UInt32 dwFlags);\r\n                                                     \r\n        [DllImport(\"Mpr.dll\", EntryPoint = \"WNetCancelConnection2\",CallingConvention = CallingConvention.Winapi)]\r\n        public static extern int WNetCancelConnection2(string lpName,\r\n                                                       UInt32 dwFlags,\r\n                                                       Boolean fForce);\r\n    }\r\n\r\n    [StructLayout(LayoutKind.Sequential)]\r\n    public class NetResource\r\n    {\r\n        public int dwScope;\r\n        public int dwType;\r\n        public int dwDisplayType;\r\n        public int dwUsage;\r\n        public string lpLocalName;\r\n        public string lpRemoteName;\r\n        public string lpComment;\r\n        public string lpProvider;\r\n    }\r\n    \r\n    public enum ResourceScope\r\n    {\r\n        CONNECTED  = 0x00000001,\r\n        GLOBALNET  = 0x00000002,\r\n        REMEMBERED = 0x00000003\r\n    }\r\n\r\n    public enum ResourceType\r\n    {\r\n        ANY,\r\n        DISK,\r\n        PRINT\r\n    };\r\n\r\n    public enum ResourceUsage\r\n    {\r\n        CONNECTABLE   = 0x00000001,\r\n        CONTAINER     = 0x00000002\r\n    };\r\n\r\n    public enum ResourceDisplayType\r\n    {\r\n        GENERIC,\r\n        DOMAIN,\r\n        SERVER,\r\n        SHARE\r\n    };\r\n    \r\n    public enum Connect\r\n    {\r\n        UPDATE_PROFILE = 0x00000001,\r\n        UPDATE_RECENT  = 0x00000002,\r\n        TEMPORARY      = 0x00000004,\r\n        INTERACTIVE    = 0x00000008,\r\n        PROMPT         = 0x00000010,\r\n        REDIRECT       = 0x00000080,\r\n        CURRENT_MEDIA  = 0x00000200,\r\n        COMMANDLINE    = 0x00000800,\r\n        CMD_SAVECRED   = 0x00001000,\r\n        CRED_RESET     = 0x00002000\r\n    };\r\n    \r\n}\r\n\r\n'@\r\n\r\n$username  = 'ComputerName\\UserName'\r\n$password  = 'Passw@rd'\r\n$driveName = 'R:'\r\n$sharePath = '\\\\ComputerName\\Share'\r\n\r\n# see https://docs.microsoft.com/en-us/windows/win32/api/winnetwk/nf-winnetwk-wnetcancelconnection2a\r\n[Utils.Native]::WNetCancelConnection2($driveName, 0, $true) | Out-Null\r\n\r\n# see https://docs.microsoft.com/en-us/windows/win32/api/winnetwk/ns-winnetwk-netresourcea\r\n$netResource = [Utils.NetResource]@{\r\n    dwScope       = [Utils.ResourceScope]::GLOBALNET\r\n    dwType        = [Utils.ResourceType]::DISK\r\n    dwDisplayType = [Utils.ResourceDisplayType]::GENERIC\r\n    dwUsage       = [Utils.ResourceUsage]::CONNECTABLE\r\n    lpLocalName   = $driveName\r\n    lpRemoteName  = $sharePath\r\n}\r\n\r\n# see https://docs.microsoft.com/en-us/windows/win32/api/winnetwk/nf-winnetwk-wnetaddconnection2a\r\n$result = [Utils.Native]::WNetAddConnection2($netResource, $password, $username, [Utils.Connect]::TEMPORARY)\r\nif ($result -ne 0) {\r\n    Write-Host \"Error $result :\" ([System.ComponentModel.Win32Exception]::new($result)).Message\r\n}\r\n```\r\n",
      "created_at": "2021-08-12T21:08:42Z",
      "updated_at": "2021-08-12T21:08:42Z"
    },
    {
      "author": "clementbey",
      "author_association": "NONE",
      "body": "Thanks for your work and answering @fMichaleczek !\r\nWhen I use `net use` like this:\r\n```Batch\r\nnet use U: \\\\172.16.19.250\\client1 /user:backup1 \"4c&[rvPh0m[0yGb)\" /persistent:No\r\n```\r\n**No ID 4625 are generating**. 1 ID 4776 and 1 ID 4624 are generate. \r\n\r\nWhen I use your script, with `Windows PowerShell 5.1`, `PWSH 7.1` and `7.2 Preview 8`, 1 ID 4776 and 1 ID 4624. **No ID 4625 are generating**. It works.\r\n\r\nI have just one question, when I use `New-PSDrive -Name \"SaveBackup\" -PSProvider \"FileSystem\" -Root \"\\\\$smbServer\\client1\" -Credential $credObject` I am using `-Root` option. It's important for us to haven\u2019t a drive letter. It's possible to do the same with your syntax? I'm not used to this way of doing.\r\n\r\nOut of my case, do you think this problem can be fixed (Powershell teams or Windows teams)?",
      "created_at": "2021-08-13T08:01:54Z",
      "updated_at": "2021-08-13T08:01:54Z"
    },
    {
      "author": "fMichaleczek",
      "author_association": "NONE",
      "body": "@clementbey I will continue to investigate (need to build a lab to reproduce). But the Win32 API works as expected. The problem seems located  in the PowerShell basecode. I hope to make a workaround function and propose a solution to the PowerShell Teams.\r\n/cc @SteveL-MSFT ",
      "created_at": "2021-08-13T09:33:17Z",
      "updated_at": "2021-08-13T09:52:24Z"
    },
    {
      "author": "clementbey",
      "author_association": "NONE",
      "body": "Hello @fMichaleczek (and happy new year),\r\nAny news or plan about this issue ? ",
      "created_at": "2022-01-05T15:49:33Z",
      "updated_at": "2022-01-05T15:49:33Z"
    }
  ],
  "created_at": "2021-08-12T13:11:47Z",
  "labels": [
    "Issue-Bug",
    "WG-Cmdlets-Management",
    "Needs-Triage"
  ],
  "number": 15913,
  "state": "open",
  "title": "New-PSDrive bad credentials, security reports",
  "updated_at": "2022-01-05T15:49:33Z"
}