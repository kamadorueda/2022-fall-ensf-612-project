{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10469",
  "author": "imba-tjd",
  "body": "# Support Question\r\n\r\nHi. I want to try the new `PowerShell-7.0.0-preview.3-win-x64.msix`, but I got a `This app package is not supported for installation by App Installer because it uses certain restricted capabilities.`\r\n\r\nHow to solve this? I have googled it but get nothing. Thanks.\r\n\r\n![\u56fe\u7247](https://user-images.githubusercontent.com/24759802/64056400-84e35e80-cbc5-11e9-8ab8-ae340c1cbc47.png)\r\n\r\n",
  "closed_at": "2019-11-01T00:00:27Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Yeah, I notified @SteveL-MSFT [on Twitter](https://twitter.com/vexx32/status/1165703138491457541?s=20) when I ran into this.\r\n\r\nI had to actually enable Developer Mode in my Security settings on windows 10, and then I also had to install it using `Add-AppxPackage -Path $PathToMsix` before it would let me install it.",
      "created_at": "2019-08-31T00:34:04Z",
      "updated_at": "2019-08-31T00:34:04Z"
    },
    {
      "author": "o-l-a-v",
      "author_association": "NONE",
      "body": "It can't be successfully added to Intune either\r\n\r\n![image](https://user-images.githubusercontent.com/6450056/65025840-bbe0a080-d937-11e9-9dca-7e3c49793616.png)\r\n\r\n![image](https://user-images.githubusercontent.com/6450056/65025887-cd29ad00-d937-11e9-82d5-83a0a98cd6af.png)\r\n\r\nCan't find any info in Azure on why it failed.",
      "created_at": "2019-09-17T08:42:31Z",
      "updated_at": "2019-09-17T08:42:31Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "It's not Store signed so you can't just install it.  As @vexx32 noted, you have to be in Developer mode and use the cmdlet to side-load it.  At some point, we will be publishing this to the Store.",
      "created_at": "2019-09-17T16:26:20Z",
      "updated_at": "2019-09-17T16:26:20Z"
    },
    {
      "author": "MicahZoltu",
      "author_association": "NONE",
      "body": "I opened an administrative PowerShell (legacy) window and ran `Add-AppxPackage -Path $PathToMsix`.  This resulted in a progress bar that filled up and no visible errors.  However, when I launch PowerShell (via start button and typing PowerShell) I still get the old version.",
      "created_at": "2019-09-30T07:38:51Z",
      "updated_at": "2019-09-30T07:38:51Z"
    },
    {
      "author": "imba-tjd",
      "author_association": "CONTRIBUTOR",
      "body": "@MicahZoltu it's `pwsh`",
      "created_at": "2019-09-30T07:43:55Z",
      "updated_at": "2019-09-30T07:43:55Z"
    },
    {
      "author": "Nirmal4G",
      "author_association": "NONE",
      "body": "> I opened an administrative PowerShell (legacy) window and ran Add-AppxPackage -Path $PathToMsix. This resulted in a progress bar that filled up and no visible errors. However, when I launch PowerShell (via start button and typing PowerShell) I still get the old version.\r\n\r\nSame for me.\r\n\r\nThe solution is to make sure, the `PATH` env variable has priority for `%LocalAppData%\\Microsoft\\WindowsApps`",
      "created_at": "2019-10-29T12:33:03Z",
      "updated_at": "2019-10-29T12:33:03Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I think it's best to just have the MSI or MSIX installed, not both.",
      "created_at": "2019-10-29T16:47:48Z",
      "updated_at": "2019-10-29T16:47:48Z"
    },
    {
      "author": "Nirmal4G",
      "author_association": "NONE",
      "body": "@SteveL-MSFT \r\n\r\nWindows Terminal does not recognize the MSIX / Store installation. That's why I need to have both for now!",
      "created_at": "2019-10-30T14:19:46Z",
      "updated_at": "2019-10-30T14:20:54Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@Nirmal4G I'm working with the WT team to have it detect the MSIX installed version, so that should hopefully be temporary (installing both)",
      "created_at": "2019-10-30T15:52:19Z",
      "updated_at": "2019-10-30T15:52:19Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2019-11-01T00:00:26Z",
      "updated_at": "2019-11-01T00:00:26Z"
    },
    {
      "author": "jonasg-gc",
      "author_association": "NONE",
      "body": "Hey everyone, just to add to all this:\r\nWhen running `Add-AppxPackage -Path $PathToMsix` from PowerShell 5,\r\nI got the following error: \r\n`Cannot find path 'C:\\Users\\Jonas\\downloads\\PowerShell-7.1.0-preview.2-win-x64.msixw' because it does not exist.`\r\n\r\nTurns out the filename was too long.  I renamed it to **PowerShell-7.msix** and away we go...\r\n",
      "created_at": "2020-04-27T10:55:57Z",
      "updated_at": "2020-04-27T10:56:49Z"
    },
    {
      "author": "o-l-a-v",
      "author_association": "NONE",
      "body": "> Hey everyone, just to add to all this:\r\n> When running `Add-AppxPackage -Path $PathToMsix` from PowerShell 5,\r\n> I got the following error:\r\n> `Cannot find path 'C:\\Users\\Jonas\\downloads\\PowerShell-7.1.0-preview.2-win-x64.msixw' because it does not exist.`\r\n> \r\n> Turns out the filename was too long. I renamed it to **PowerShell-7.msix** and away we go...\r\n\r\nMost likely due to the typo in your $PathToMsix variable (see the 'w' on the end).",
      "created_at": "2020-04-27T12:55:43Z",
      "updated_at": "2020-04-27T12:55:43Z"
    },
    {
      "author": "wx-yz",
      "author_association": "NONE",
      "body": "I'm seeing the same issue when trying to install 7.1.3.0 msix (PowerShell-7.1.0-preview.3-win-x64) on Windows 10.\r\n\r\n![image](https://user-images.githubusercontent.com/57770159/82373744-dc835d80-99d2-11ea-8471-8731e1a26163.png)\r\n",
      "created_at": "2020-05-19T20:16:35Z",
      "updated_at": "2020-05-19T20:16:35Z"
    },
    {
      "author": "rbeesley",
      "author_association": "NONE",
      "body": "@wx-yz, that seems to be as expected. The thread above points out that this is not signed from the Store yet and as such it must be sideloaded as a developer tool if you are using the MSIX. When they finally release PowerShell to the store, I suspect in a way similar to how Python is available, then it will install this way. Until then you will have to sideload, use `dotnet.exe tools install powershell -g`, or the MSI. Personally I had been using the global dotnet install method and just uninstalled it to try the MSIX installer... I'm not sure I see the advantage of using MSIX until the Store is managing the updates. I'm debating my options.",
      "created_at": "2020-05-21T00:17:49Z",
      "updated_at": "2020-05-21T00:17:49Z"
    },
    {
      "author": "wx-yz",
      "author_association": "NONE",
      "body": "Thanks @rbeesley, I did not know that. I ended up using winget. Starting to like that a lot.",
      "created_at": "2020-05-21T00:34:44Z",
      "updated_at": "2020-05-21T00:34:44Z"
    },
    {
      "author": "rbeesley",
      "author_association": "NONE",
      "body": "@wx-yz, oh, you're right. I hadn't considered Chocolatey, Scoop, or WinGet... I went with sideloading the MSIX just to see what complications the additional restrictions being containerized will bring, but this does seem like the perfect opportunity to kick the WinGet tires.",
      "created_at": "2020-05-21T00:43:39Z",
      "updated_at": "2020-05-21T00:43:39Z"
    }
  ],
  "created_at": "2019-08-31T00:04:04Z",
  "labels": [
    "Issue-Enhancement",
    "Area-Maintainers-Build",
    "Resolution-Answered"
  ],
  "number": 10469,
  "state": "closed",
  "title": "Can't install msix",
  "updated_at": "2020-05-21T00:43:39Z"
}