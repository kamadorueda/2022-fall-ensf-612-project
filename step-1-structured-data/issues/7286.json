{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7286",
  "author": "mklement0",
  "body": "PowerShell generally validates numeric assignment values / cast operands to custom `enum` types.\r\n\r\nIf the number is not part of the `enum`, an error is reported.\r\n\r\nHowever, an `enum` that comprises a _negative_ value seemingly no longer performs this validation.\r\n\r\n(Note that in C#, by contrast, validation is by design _never_ performed.)\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\nenum Fruit { Apple = 1; Orange = 2}\r\nenum Fruit2 { Unknown = -1; Apple = 1; Orange = 2}\r\n\r\n[Fruit] 666  # cast an invalid value\r\n'---'\r\n[Fruit2] 666\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```none\r\nCannot convert value \"666\" to type \"Fruit\" due to enumeration values that are not valid. ...\r\n---\r\nCannot convert value \"666\" to type \"Fruit\" due to enumeration values that are not valid. ...\r\n```\r\n\r\nThe invalid numerical value should cause an error in both cases.\r\n\r\nActual behavior\r\n---------------\r\n\r\n```none\r\nCannot convert value \"666\" to type \"Fruit\" due to enumeration values that are not valid. ...\r\n---\r\n666\r\n```\r\n\r\nThat is,  the `enum` that comprises a negative value (`-1`) resulted in the numeric value _not_ getting validated (and printed as-is).\r\n\r\nEnvironment data\r\n----------------\r\n\r\n```powershell\r\nPowerShell Core v6.1.0-preview.3 on macOS 10.13.5\r\nPowerShell Core v6.1.0-preview.3 on Ubuntu 16.04.4 LTS\r\nPowerShell Core v6.1.0-preview.3 on Microsoft Windows 10 Pro (64-bit; Version 1709, OS Build: 16299.371)\r\nWindows PowerShell v5.1.17134.48 on Microsoft Windows 10 Pro (64-bit; Version 1709, OS Build: 16299.371)\r\n```\r\n",
  "closed_at": null,
  "comments": [],
  "created_at": "2018-07-13T19:19:27Z",
  "number": 7286,
  "state": "open",
  "title": "Defining a custom enum with a negative value bypasses validation on cast / assignment ",
  "updated_at": "2018-07-16T14:36:08Z"
}