{
  "_url": "https://github.com/PowerShell/PowerShell/issues/919",
  "author": "TingLiu6",
  "body": "Could you please help to review?\n\n<!-- Reviewable:start -->\n\n---\n\nThis change is [<img src=\"https://reviewable.io/review_button.svg\" height=\"35\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/powershell/powershell/919)\n\n<!-- Reviewable:end -->\n",
  "closed_at": "2016-06-03T17:46:26Z",
  "comments": [
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "@lzybkr This would be formatting/output.\n",
      "created_at": "2016-04-27T19:35:23Z",
      "updated_at": "2016-04-27T19:35:23Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "Review status: 0 of 3 files reviewed at latest revision, 3 unresolved discussions.\n\n---\n\n_[test/powershell/Write-Debug.Tests.ps1, line 1 [r1]](https://reviewable.io:443/reviews/powershell/powershell/919#-KGPBKP3kWL2n-HaF9v3:-KGPBKP3kWL2n-HaF9v4:173886647) ([raw file](https://github.com/powershell/powershell/blob/111ce13c12c3e6b8279380b6f15ae569ea63c5be/test/powershell/Write-Debug.Tests.ps1#L1)):_\nNone of these tests actually verify Write-Debug something useful, just that Write-Debug doesn't do anything bad.\n\nWe need some tests to verify the output of Write-Debug is correct when in the following cases:\n- $DebugPreference is set\n- Calling a regular function\n- Calling a function w/ cmdleting binding and passing -Debug (so not setting $DebugPreference)\n- Redirecting the debug stream\n\nThe first three can be tested via the PowerShell api and looking at the Streams property - something like:\n    $ps = [PowerShell]::Create()\n    $null = $ps.AddScript('Write-Debug foo').Invoke()\n    $ps.Streams.Debug | Should Be foo\n\nThe last can be captured with something like:\n    unittest-writedebugline -debug 5>&1 | Should Be \"this is a test\"\n\n---\n\n_[test/powershell/Write-Debug.Tests.ps1, line 6 [r1]](https://reviewable.io:443/reviews/powershell/powershell/919#-KGPB7TXAW2f1uJmu3-d:-KGPB7TXAW2f1uJmu3-e:-145589279) ([raw file](https://github.com/powershell/powershell/blob/111ce13c12c3e6b8279380b6f15ae569ea63c5be/test/powershell/Write-Debug.Tests.ps1#L6)):_\nI don't think the Write-Host calls are useful and will just clutter up the output.\n\n---\n\n_[test/powershell/Write-Error.Tests.ps1, line 37 [r1]](https://reviewable.io:443/reviews/powershell/powershell/919#-KGPCYlrBGtag6o-yFcs:-KGPCYlrBGtag6o-yFct:-144002571) ([raw file](https://github.com/powershell/powershell/blob/111ce13c12c3e6b8279380b6f15ae569ea63c5be/test/powershell/Write-Error.Tests.ps1#L37)):_\nI would expect this test to almost never fail. If you called $error.Clear() first, it would be more reliable, but it might be better to use redirection:\n    $e = Write-Error 2>&1 ...\n    $e | Should Not BeNullOrEmpty\nThis way you know you are testing exactly the error created by Write-Error and not some other random error.\n\n---\n\n_Comments from [Reviewable](https://reviewable.io:443/reviews/powershell/powershell/919)_\n\n<!-- Sent from Reviewable.io -->\n",
      "created_at": "2016-04-28T00:16:25Z",
      "updated_at": "2016-04-28T00:16:25Z"
    },
    {
      "author": "TingLiu6",
      "author_association": "CONTRIBUTOR",
      "body": "_[test/powershell/Write-Debug.Tests.ps1, line 6 [r1]](https://reviewable.io:443/reviews/powershell/powershell/919#-KGPB7TXAW2f1uJmu3-d:-KGW2ALARXaU2-fnJBZY:-499146009) ([raw file](https://github.com/powershell/powershell/blob/111ce13c12c3e6b8279380b6f15ae569ea63c5be/test/powershell/Write-Debug.Tests.ps1#L6)):_\nDone.\n\n---\n\n_Comments from [Reviewable](https://reviewable.io:443/reviews/powershell/powershell/919)_\n\n<!-- Sent from Reviewable.io -->\n",
      "created_at": "2016-04-29T08:07:12Z",
      "updated_at": "2016-04-29T08:07:12Z"
    },
    {
      "author": "TingLiu6",
      "author_association": "CONTRIBUTOR",
      "body": "_[test/powershell/Write-Debug.Tests.ps1, line 1 [r1]](https://reviewable.io:443/reviews/powershell/powershell/919#-KGPBKP3kWL2n-HaF9v3:-KGW2DXGmxouEMqPbNVK:-499146009) ([raw file](https://github.com/powershell/powershell/blob/111ce13c12c3e6b8279380b6f15ae569ea63c5be/test/powershell/Write-Debug.Tests.ps1#L1)):_\nDone.\n\n---\n\n_Comments from [Reviewable](https://reviewable.io:443/reviews/powershell/powershell/919)_\n\n<!-- Sent from Reviewable.io -->\n",
      "created_at": "2016-04-29T08:07:33Z",
      "updated_at": "2016-04-29T08:07:33Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "Reviewed 1 of 3 files at r1, 2 of 2 files at r2.\nReview status: all files reviewed at latest revision, all discussions resolved, some commit checks broke.\n\n---\n\n_Comments from [Reviewable](https://reviewable.io:443/reviews/powershell/powershell/919)_\n\n<!-- Sent from Reviewable.io -->\n",
      "created_at": "2016-04-29T17:44:03Z",
      "updated_at": "2016-04-29T17:44:03Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "It looks like the latest test change hangs in ci.\n",
      "created_at": "2016-04-29T17:49:50Z",
      "updated_at": "2016-04-29T17:49:50Z"
    },
    {
      "author": "TingLiu6",
      "author_association": "CONTRIBUTOR",
      "body": "It seems failed on Write-Debug, but I run passed on Linux, could you please help to check?\n",
      "created_at": "2016-05-06T11:16:06Z",
      "updated_at": "2016-05-06T11:16:06Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Rebased on master to fix xUnit tests.\n",
      "created_at": "2016-05-06T16:58:32Z",
      "updated_at": "2016-05-06T16:58:32Z"
    },
    {
      "author": "TingLiu6",
      "author_association": "CONTRIBUTOR",
      "body": "Added unit test for Write-Host, could you please help to merge to master if no issues?\n",
      "created_at": "2016-06-02T03:03:10Z",
      "updated_at": "2016-06-02T03:03:10Z"
    }
  ],
  "created_at": "2016-04-27T08:11:26Z",
  "number": 919,
  "state": "closed",
  "title": "Add Unit Test For Write Command",
  "updated_at": "2016-06-03T17:46:30Z"
}