{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10575",
  "author": "iSazonov",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nMove all type definitions from TypesV3_Ps1Xml.cs to Types_Ps1Xml.cs\r\nSimplify the code that processed them.\r\n\r\n## PR Context\r\n\r\nI remember Jason's comment that make no sense to have separate TypesV3_Ps1Xml.cs file.\r\nI discovered this while did a performance measure runspace creation. There is biggest delay on type importing (up to 30%!). I don't expect that the change visibly increase performance but it open a way for further investigations.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [ ] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2019-10-31T19:29:27Z",
  "comments": [
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "I think merging `typev3.ps1xml` content with `types.ps1xml` is not a breaking change, but @JamesWTruher can you please take a quick look and see if you have any concerns?",
      "created_at": "2019-09-20T17:51:50Z",
      "updated_at": "2019-09-20T17:51:50Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> Could we remove references to *types.ps1xml entirely and just rely on the .cs files?\r\n\r\nNow types.ps1xml is only a key to reference predefined types (also there is still GetEvent.types.ps1xml) which we load in each runspace at first step. It is not perf critical and I believe we could refactor the code. At least the code could become more readable.\r\nMain problem is that we clone TypeTable per runspace creation and do this complex and relatively slow. I have still no ideas how improve this. Obvious idea is exclude cloning type table with predefined types and reuse it. I am not sure that it is simple to implement.",
      "created_at": "2019-09-20T18:59:42Z",
      "updated_at": "2019-09-20T18:59:42Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw Could you please review and merge?",
      "created_at": "2019-10-08T06:06:45Z",
      "updated_at": "2019-10-08T06:06:45Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Given that `Types_Ps1Xml.cs`, `TypesV3_Ps1Xml.cs` and `GetEvent_Types_Ps1Xml.cs` are removed in #10898, I think this PR can be closed now.",
      "created_at": "2019-10-31T19:29:13Z",
      "updated_at": "2019-10-31T19:29:13Z"
    }
  ],
  "created_at": "2019-09-19T10:09:19Z",
  "number": 10575,
  "state": "closed",
  "title": "Merge TypesV3_Ps1Xml.cs with Types_Ps1Xml.cs",
  "updated_at": "2020-01-09T23:29:21Z"
}