{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10600",
  "author": "jnevins-gcm",
  "body": "# Steps to reproduce\r\n\r\nSame issue as described here:\r\nhttps://github.com/PowerShell/PowerShell/issues/5561\r\n\r\nexcept when using Microsoft.PowerShell.SDK (6.2.3) instead of PowerShell CLI\r\n\r\n- Create a netcoreapp2.2 console application on Mac OS Mojave\r\n- Add PackageReference to Microsoft.PowerShell.SDK (6.2.3)\r\n- Add code to connect to O365:\r\n```\r\n            var rs = RunspaceFactory.CreateRunspace();\r\n            rs.Open();\r\n            using (var ps = System.Management.Automation.PowerShell.Create())\r\n            {\r\n                ps.Runspace = rs;\r\n                var initializationScript = $@\"\r\n$ErrorActionPreference = 'Stop'\r\ntry {{ Set-ExecutionPolicy Unrestricted }} catch {{}} # not supported on non-Windows platforms\r\n$UserCredential = New-Object System.Management.Automation.PSCredential('******', (ConvertTo-SecureString '******' -AsPlainText -Force))\r\n$Option = New-PSSessionOption\r\n$Option.IdleTimeout = [TimeSpan]::FromSeconds(60) # inline setting of this property via New-PSSessionOption is not supported on non-Windows platforms\r\n$Session = New-PSSession -SessionOption $Option -ConfigurationName Microsoft.Exchange -ConnectionUri 'https://outlook.office365.com/powershell-liveid/' -Credential $UserCredential -Authentication Basic -AllowRedirection\r\nImport-Module (Import-PSSession $Session -DisableNameChecking) -Global\r\n\";\r\n                await ps.AddScript(initializationScript).InvokeAsync();\r\n            }\r\n\r\n```\r\n\r\nError:\r\n\r\n```\r\nUnhandled Exception: System.AggregateException: One or more errors occurred.\r\n(This parameter set requires WSMan, and no supported WSMan client library was found. WSMan is either not installed or unavailable for this system.) ---> System.Management.Automation.CmdletInvocationException: This parameter set requires WSMan, and no supported WSMan client library was found. WSMan is either not installed or unavailable for this system. ---> \r\nSystem.Management.Automation.Remoting.PSRemotingTransportException: This parameter set requires WSMan, and no supported WSMan client library was found. WSMan is either not installed or unavailable for this system. ---> System.DllNotFoundException: Unable to load shared library 'libpsrpclient' or one of its dependencies. In order to help diagnose loading problems, consider setting the DYLD_PRINT_LIBRARIES environment variable: dlopen(liblibpsrpclient, 1): image not found\r\n   at System.Management.Automation.Remoting.Client.WSManNativeApi.WSManInitialize(Int32 flags, IntPtr& wsManAPIHandle)\r\n   at System.Management.Automation.Remoting.Client.WSManClientSessionTransportManager.WSManAPIDataCommon..ctor()\r\n \r\n```\r\n\r\nIf I set DYLD_PRINT_LIBRARIES to 1, I see the following when running from C# right before the error:\r\n```\r\ndyld: loaded: /Users/jeff/.nuget/packages/microsoft.powershell.native/6.2.0/runtimes/osx/native/libpsrpclient.dylib\r\ndyld: unloaded: /Users/jeff/.nuget/packages/microsoft.powershell.native/6.2.0/runtimes/osx/native/libpsrpclient.dylib\r\n\r\n```\r\n\r\nWorks:\r\n\r\n- Install PowerShell CLI (6.4.0) (on the exact same machine)\r\n- Run ```sudo ln -s /opt/local/lib /usr/local/opt/openssl/lib``` (this doesn't seem to help the C# code any)\r\n- Run the exact same script\r\n\r\nIf I set DYLD_PRINT_LIBARIES to 1 for the CLI, I see the following right before the connection succeeds:\r\n\r\n```\r\ndyld: loaded: /usr/local/microsoft/powershell/6/libpsrpclient.dylib                                                                                                                                                                                                      dyld: loaded: /usr/local/microsoft/powershell/6/libmi.dylib                                                                                                                                                                                                              dyld: loaded: /usr/local/opt/openssl/lib/libssl.1.0.0.dylib                                                                                                                                                                                                              dyld: loaded: /usr/local/opt/openssl/lib/libcrypto.1.0.0.dylib                                                                                                                                                                                                           \r\n```\r\n\r\nso the problem is specific to the SDK...and the ln command fix doesn't seem to work for the SDK.\r\n\r\n# Expected behavior\r\n\r\nDoesn't throw error\r\n\r\n# Actual behavior\r\n\r\nThrows error \r\n\r\n# Environment data\r\n\r\nMac OS Mojave",
  "closed_at": "2020-04-09T19:00:10Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@adityapatwardhan Could you please comment the SDK issue?",
      "created_at": "2019-09-24T04:06:45Z",
      "updated_at": "2019-09-24T04:06:45Z"
    },
    {
      "author": "jnevins-gcm",
      "author_association": "NONE",
      "body": "Anyone?",
      "created_at": "2019-09-25T18:03:49Z",
      "updated_at": "2019-09-25T18:03:49Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@jnevins-gcm MSFT team is busy in the days so waiting...",
      "created_at": "2019-09-26T06:41:06Z",
      "updated_at": "2019-09-26T06:41:06Z"
    },
    {
      "author": "jnevins-gcm",
      "author_association": "NONE",
      "body": "It's been 15 days... @iSazonov @adityapatwardhan \r\n",
      "created_at": "2019-10-10T22:59:08Z",
      "updated_at": "2019-10-10T22:59:08Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@jnevins-gcm From previous discussions I can only say please check that libpsrpclient is installed and loaded. The same for OpenSSL.\r\n\r\n/cc @SteveL-MSFT ",
      "created_at": "2019-10-11T15:13:55Z",
      "updated_at": "2019-10-11T15:38:58Z"
    },
    {
      "author": "jnevins-gcm",
      "author_association": "NONE",
      "body": "@isazonov - that isn\u2019t a meaningful reply. It doesn\u2019t seem like you\u2019ve even read the issue ",
      "created_at": "2019-10-11T15:34:27Z",
      "updated_at": "2019-10-11T15:34:27Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@jnevins-gcm Sorry for short answer.\r\n> and the ln command fix doesn't seem to work for the SDK.\r\n\r\n  libpsrpclient does not have a help logging so it would be great if you used diagnostic tools to identify broken dependencies (to ssl I guess).\r\nAnd do you want to get a workaround or fix?\r\n",
      "created_at": "2019-10-11T15:56:32Z",
      "updated_at": "2019-10-11T15:56:32Z"
    },
    {
      "author": "jnevins-gcm",
      "author_association": "NONE",
      "body": "I\u2019d be totally happy with a workaround. \r\n\r\nI\u2019m not super familiar with dependency analysis tools on OS X but I\u2019m happy to try to gather some information if you could provide some guidance on what tools to use. \r\n\r\nThanks!",
      "created_at": "2019-10-12T20:28:24Z",
      "updated_at": "2019-10-12T20:29:49Z"
    },
    {
      "author": "jnevins-gcm",
      "author_association": "NONE",
      "body": "any update...? been about a month",
      "created_at": "2019-10-17T15:27:42Z",
      "updated_at": "2019-10-17T15:27:42Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I believe you need to include https://www.nuget.org/packages/Microsoft.PowerShell.Native\n\n<blockquote><img src=\"https://api.nuget.org/v3-flatcontainer/microsoft.powershell.native/6.2.0/icon\" width=\"48\" align=\"right\"><div><strong><a href=\"https://www.nuget.org/packages/Microsoft.PowerShell.Native/\">Microsoft.PowerShell.Native 6.2.0</a></strong></div><div>Native binaries for PowerShell Core</div></blockquote>",
      "created_at": "2019-10-21T18:36:39Z",
      "updated_at": "2019-10-21T18:36:41Z"
    },
    {
      "author": "jnevins-gcm",
      "author_association": "NONE",
      "body": "@SteveL-MSFT already tried this \r\n\r\n....did you try it?",
      "created_at": "2019-10-21T19:21:22Z",
      "updated_at": "2019-10-21T19:21:22Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@jnevins-gcm sorry, didn't see all the details of your report.  I did try this and noticed that `dotnet run` fails, but if I explicitly run the built exe it works (in the sense it tired to connect)\r\n\r\n```none\r\nUnhandled exception. System.Management.Automation.ActionPreferenceStopException: The running command stopped because the preference variable \"ErrorActionPreference\" or common parameter is set to Stop: [outlook.office365.com] Connecting to remote server outlook.office365.com failed with the following error message : Client did not get proper response from server. For more information, see the about_Remote_Troubleshooting Help topic.\r\n   at System.Management.Automation.Runspaces.PipelineBase.Invoke(IEnumerable input)\r\n   at System.Management.Automation.Runspaces.Pipeline.Invoke()\r\n   at System.Management.Automation.PowerShell.Worker.ConstructPipelineAndDoWork(Runspace rs, Boolean performSyncInvoke)\r\n   at System.Management.Automation.PowerShell.Worker.CreateRunspaceIfNeededAndDoWork(Runspace rsToUse, Boolean isSync)\r\n   at System.Management.Automation.PowerShell.CoreInvokeHelper[TInput,TOutput](PSDataCollection`1 input, PSDataCollection`1 output, PSInvocationSettings settings)\r\n   at System.Management.Automation.PowerShell.CoreInvoke[TInput,TOutput](PSDataCollection`1 input, PSDataCollection`1 output, PSInvocationSettings settings)\r\n   at System.Management.Automation.PowerShell.CoreInvoke[TOutput](IEnumerable input, PSDataCollection`1 output, PSInvocationSettings settings)\r\n   at System.Management.Automation.PowerShell.Invoke(IEnumerable input, PSInvocationSettings settings)\r\n   at System.Management.Automation.PowerShell.Invoke()\r\n   at wsman.Program.Main(String[] args) in /Users/steve/test/wsman/Program.cs:line 25\r\n```",
      "created_at": "2019-10-21T20:40:39Z",
      "updated_at": "2019-10-21T20:41:11Z"
    },
    {
      "author": "jnevins-gcm",
      "author_association": "NONE",
      "body": "thanks @SteveL-MSFT  - what is the difference? how can I make a debugging experience function?",
      "created_at": "2019-10-21T21:20:04Z",
      "updated_at": "2019-10-21T21:20:04Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I don't know why `dotnet run` fails.  You may have to bring that up in the dotnet CLI repo.  Based on the traces it loads the necessary library, but unloads it for some reason.  Running the exe directly doesn't unload that library.",
      "created_at": "2019-10-21T21:31:00Z",
      "updated_at": "2019-10-21T21:31:00Z"
    },
    {
      "author": "jnevins-gcm",
      "author_association": "NONE",
      "body": "Got to trying this. Same error when calling \"dotnet mydll\"\r\n\r\nYou sure you actually got this to work via the command line? ",
      "created_at": "2019-11-08T04:38:17Z",
      "updated_at": "2019-11-08T04:38:17Z"
    },
    {
      "author": "jnevins-gcm",
      "author_association": "NONE",
      "body": "@SteveL-MSFT any updates? seems like a bug in PowerShell Core....",
      "created_at": "2019-11-15T01:20:35Z",
      "updated_at": "2019-11-15T01:20:35Z"
    },
    {
      "author": "jnevins-gcm",
      "author_association": "NONE",
      "body": "@SteveL-MSFT @iSazonov \r\n\r\nlooking to get some/any support here please. PowerShell is supposedly actively supported by Microsoft and this is clearly a bug.",
      "created_at": "2019-11-19T22:04:53Z",
      "updated_at": "2019-11-19T22:05:27Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@jnevins-gcm Sorry, I haven't Mac to investigate. \r\nIf you shared your project or sample project it would help MSFT experts.",
      "created_at": "2019-11-20T03:17:27Z",
      "updated_at": "2019-11-20T03:17:27Z"
    },
    {
      "author": "jnevins-gcm",
      "author_association": "NONE",
      "body": "The sample code I posted, exactly as is, in an out of box csproj console app will reproduce the problem. ",
      "created_at": "2019-11-20T03:28:43Z",
      "updated_at": "2019-11-20T03:28:43Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Having GitHub ready-to-run project would save reviewer's time.",
      "created_at": "2019-11-20T03:45:12Z",
      "updated_at": "2019-11-20T03:45:12Z"
    },
    {
      "author": "jnevins-gcm",
      "author_association": "NONE",
      "body": "@iSazonov @SteveL-MSFT \r\n\r\nok....\r\n\r\nhttps://github.com/JeffN825/PowerShellWSManBug\r\n\r\nIt's a simple csproj and Program.cs copied straight from my original post. \r\n```\r\ndotnet build\r\ncd bin/Debug/netcoreapp2.2/\r\ndotnet PowerShellWSManBug.dll \r\n```\r\n\r\nwould be great to get a resolution\r\n\n\n<blockquote><img src=\"https://avatars1.githubusercontent.com/u/8311189?s=400&v=4\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicon.ico\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/JeffN825/PowerShellWSManBug\">JeffN825/PowerShellWSManBug</a></strong></div><div>Contribute to JeffN825/PowerShellWSManBug development by creating an account on GitHub.</div></blockquote>",
      "created_at": "2019-11-23T22:02:08Z",
      "updated_at": "2019-11-23T22:02:10Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> <TargetFramework>netcoreapp2.2</TargetFramework>\r\n\r\nWe never targeted 2.2. Can you try 2.1?",
      "created_at": "2019-11-24T12:11:48Z",
      "updated_at": "2019-11-24T12:11:48Z"
    },
    {
      "author": "jnevins-gcm",
      "author_association": "NONE",
      "body": "doesn't work",
      "created_at": "2019-11-24T23:02:45Z",
      "updated_at": "2019-11-24T23:02:45Z"
    },
    {
      "author": "jnevins-gcm",
      "author_association": "NONE",
      "body": "@iSazonov @SteveL-MSFT \r\n\r\nbump...any fix for this bug? I spent the time putting together that sample...would be great if you could reciprocate.",
      "created_at": "2019-11-29T18:09:59Z",
      "updated_at": "2019-11-29T18:09:59Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@jnevins-gcm I haven't MacOs to investigate the issue, sorry. Since you are using SDK I guess you can use debugger and I suggest to use a native dll handler (see #11032) and catch a path to openssl.dylib. This can help to get understanding where is a problem or even to fix it in OS or in your code.",
      "created_at": "2019-11-30T12:57:59Z",
      "updated_at": "2019-11-30T12:57:59Z"
    },
    {
      "author": "jnevins-gcm",
      "author_association": "NONE",
      "body": "Very frustrating that there is one single person who supports/replies to bugs in PowerShell and they have no access to platforms that PowerShell claims to support. \r\n\r\n@iSazonov how do I leverage what\u2019s in the PR you linked to? Some basic direction would be helpful. ",
      "created_at": "2019-11-30T17:50:25Z",
      "updated_at": "2019-11-30T17:55:06Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@jnevins-gcm keep in mind this is Thanksgiving weekend in the US, where the entire PS team is based. I'm sure they're all spending time with their families. :slightly_smiling_face: ",
      "created_at": "2019-11-30T19:34:36Z",
      "updated_at": "2019-11-30T19:34:36Z"
    },
    {
      "author": "jnevins-gcm",
      "author_association": "NONE",
      "body": "@vexx32  I'll be happily surprised if I get a helpful reply next week. \r\n\r\nI opened this issue on September 23, more than 2 months ago and the team has been mostly unresponsive and I have not received any reply that has been useful.",
      "created_at": "2019-11-30T19:41:51Z",
      "updated_at": "2019-11-30T19:42:34Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> Very frustrating that there is one single person ...\r\n\r\nI am a community member like you and have limited resources and time. :-(\r\n\r\n> how do I leverage what\u2019s in the PR you linked to?\r\n\r\nI suggest to add the native dll handler in your project and set breakpoint. I guest you get more info that assembly is trying to load and that is path to native dll is.  After that we could get understanding how fix this or make a workaround.\r\n\r\n> I opened this issue on September 23\r\n\r\nWe have some issues like this and I already pinged MSFT team. I hope they will look in depth because WSMan is sensitive.\r\n/cc @SteveL-MSFT ",
      "created_at": "2019-12-02T03:51:03Z",
      "updated_at": "2019-12-02T03:51:03Z"
    },
    {
      "author": "jnevins-gcm",
      "author_association": "NONE",
      "body": "@iSazonov - sorry, I didn't realize you were not with MS. I appreciate your time on this.\r\n\r\nKnowing that makes Microsoft's lake of support even more frustrating.",
      "created_at": "2019-12-02T03:52:48Z",
      "updated_at": "2019-12-02T03:52:48Z"
    },
    {
      "author": "davesil2",
      "author_association": "NONE",
      "body": "do you see the openssl dependencies when you use otool?\r\n\r\nie:\r\notool -L /usr/local/microsoft/powershell/6/libmi.dylib\r\n/usr/local/microsoft/powershell/6/libmi.dylib:\r\n\t@rpath/libmi.dylib (compatibility version 0.0.0, current version 0.0.0)\r\n\t/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1238.60.2)\r\n\t/usr/lib/libpam.2.dylib (compatibility version 3.0.0, current version 3.0.0)\r\n\t/usr/local/opt/openssl/lib/libssl.1.0.0.dylib (compatibility version 1.0.0, current version 1.0.0)\r\n\t/usr/local/opt/openssl/lib/libcrypto.1.0.0.dylib (compatibility version 1.0.0, current version 1.0.0)\r\n\t/usr/lib/libz.1.dylib (compatibility version 1.0.0, current version 1.2.8)\r\n\r\ndid you install powershell with brew or downloaded through the packages on GitHub?\r\n\r\ndid you install openssl from brew, macports, other?\r\n\r\ndoes the file dependency for libssl.1.0.0.dylib and libcrypto.1.0.0.dylib exist?",
      "created_at": "2019-12-02T17:33:58Z",
      "updated_at": "2019-12-02T17:33:58Z"
    },
    {
      "author": "jnevins-gcm",
      "author_association": "NONE",
      "body": "@davesil2 \r\n\r\n```\r\n otool -L /usr/local/microsoft/powershell/6/libmi.dylib\r\n/usr/local/microsoft/powershell/6/libmi.dylib:\r\n\t@rpath/libmi.dylib (compatibility version 0.0.0, current version 0.0.0)\r\n\t/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1238.60.2)\r\n\t/usr/lib/libpam.2.dylib (compatibility version 3.0.0, current version 3.0.0)\r\n\t/usr/local/opt/openssl/lib/libssl.1.0.0.dylib (compatibility version 1.0.0, current version 1.0.0)\r\n\t/usr/local/opt/openssl/lib/libcrypto.1.0.0.dylib (compatibility version 1.0.0, current version 1.0.0)\r\n\t/usr/lib/libz.1.dylib (compatibility version 1.0.0, current version 1.2.8)\r\n```\r\nfor PowerShell 6 CLI (which works).\r\n\r\nand for PowerShell.SDK\r\n```\r\notool -L /Users/jeff/dev/PowerShellWSManBug/bin/Debug/netcoreapp2.2/publish/runtimes/osx/native/libmi.dylib \r\n/Users/jeff/dev/PowerShellWSManBug/bin/Debug/netcoreapp2.2/publish/runtimes/osx/native/libmi.dylib:\r\n        @rpath/libmi.dylib (compatibility version 0.0.0, current version 0.0.0)\r\n        /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1238.60.2)\r\n        /usr/lib/libpam.2.dylib (compatibility version 3.0.0, current version 3.0.0)\r\n        /usr/local/opt/openssl/lib/libssl.1.0.0.dylib (compatibility version 1.0.0, current version 1.0.0)\r\n        /usr/local/opt/openssl/lib/libcrypto.1.0.0.dylib (compatibility version 1.0.0, current version 1.0.0)\r\n        /usr/lib/libz.1.dylib (compatibility version 1.0.0, current version 1.2.8)\r\n```\r\nwhich doesn't work\r\n\r\nI installed PowerShell.SDK through a regular PackageReference.\r\n\r\nThe command line PowerShell (which works), I installed via brew.\r\n\r\n> does the file dependency for libssl.1.0.0.dylib and libcrypto.1.0.0.dylib exist?\r\n\r\nhow do I check this?\r\n\r\n",
      "created_at": "2019-12-03T01:45:40Z",
      "updated_at": "2019-12-03T01:45:40Z"
    },
    {
      "author": "davesil2",
      "author_association": "NONE",
      "body": "otool shows the dependency:\r\n\r\n/usr/local/opt/openssl/lib/libssl.1.0.0.dylib\r\n/usr/local/opt/openssl/lib/libcrypto.1.0.0.dylib\r\n\r\nDo those files exists?\r\n\r\nls -la /usr/local/opt/openssl/lib/\r\n\r\nI've also had issues with the file not existing in the standard library directory myself:\r\n\r\nls -la /usr/local/lib/libssl.1.0.0.dylib\r\nls -la /usr/local/lib/libcrypto.1.0.0.dylib\r\n\r\nyou didn't mention what version of openssl you are running or how you installed it?",
      "created_at": "2019-12-03T01:57:17Z",
      "updated_at": "2019-12-03T01:57:17Z"
    },
    {
      "author": "jnevins-gcm",
      "author_association": "NONE",
      "body": "I'm not really sure what to make of the latter missing libraries @davesil2 \r\n```\r\nJeffs-MacBook-Pro:~ jeff$ ls -la /usr/local/opt/openssl/lib/\r\ntotal 11664\r\ndrwxr-xr-x  11 jeff  staff      352 Oct 20 19:19 .\r\ndrwxr-xr-x  13 jeff  staff      416 Oct 20 19:19 ..\r\ndrwxr-xr-x  14 jeff  staff      448 May 28  2019 engines\r\nlrwxr-xr-x   1 root        staff       14 Sep 22 19:33 lib -> /opt/local/lib\r\n-rw-r--r--   1 jeff  staff  1864096 Jun 24 17:11 libcrypto.1.0.0.dylib\r\n-r--r--r--   1 jeff  staff  3208352 May 28  2019 libcrypto.a\r\nlrwxr-xr-x   1 jeff  staff       21 May 28  2019 libcrypto.dylib -> libcrypto.1.0.0.dylib\r\n-r--r--r--   1 jeff  staff   371128 Jun 24 17:11 libssl.1.0.0.dylib\r\n-r--r--r--   1 jeff  staff   517904 May 28  2019 libssl.a\r\nlrwxr-xr-x   1 jeff  staff       18 May 28  2019 libssl.dylib -> libssl.1.0.0.dylib\r\ndrwxr-xr-x   5 jeff  staff      160 Jun 24 17:11 pkgconfig\r\n\r\nJeffs-MacBook-Pro:~ jeff$ ls -la /usr/local/lib/libssl.1.0.0.dylib\r\nls: /usr/local/lib/libssl.1.0.0.dylib: No such file or directory\r\n\r\nJeffs-MacBook-Pro:~ jeff$ ls -la /usr/local/lib/libcrypto.1.0.0.dylib\r\nls: /usr/local/lib/libcrypto.1.0.0.dylib: No such file or directory\r\n```\r\n\r\nI have tried installing openssl both via MacPorts and Homebrew (both with negative results). Currently I'm running a copy installed via MacPorts (1.1.1d)",
      "created_at": "2019-12-07T18:23:38Z",
      "updated_at": "2019-12-07T18:23:38Z"
    },
    {
      "author": "davesil2",
      "author_association": "NONE",
      "body": "So for me, what i've had to do was to create the symlink for libssl.1.0.0.dylib and lib crypto.1.0.0.dylib.\r\n\r\nln -s /usr/local/opt/openssl/lib/libssl.1.0.0.dylib /usr/local/lib/\r\nln -s /usr/local/opt/openssl/lib/libcrypto.1.0.0.dylib /usr/local/lib/\r\n\r\nThis should create a symlink in /usr/local/lib/ for that file.  This has provided me success in using psremoting as it appears there may be some reference to that library (for me I can't get it to work on Catalina though it works find on Mojave).\r\n\r\nOne thing that doesn't make sense to me is that you have 1.1.1d from macports installed but you have the 1.0.0 library?  did you install both 1.1.1d and 1.0 ?\r\n\r\nThe other option would be to reset your openssl installs.  I've had the best results with brew (for the most part).\r\n\r\nyou'd need to remove the macports install:\r\n\r\n    ports uninstall installed\r\n   **Note: removes all macports installed, you can also just do openssl and openssl10\r\n\r\n   brew install openssl\r\n   ln -s /usr/local/opt/openssl/lib/libcrypto.1.1.dylib /usr/local/lib/libcrypto.1.0.0.dylib\r\n   ln -s /usr/local/opt/openssl/lib/libssl.1.1.dylib /usr/local/lib/libssl.1.0.0.dylib\r\n\r\nAs long as it's in Mojave, i've had pretty solid success, the symlinks being the key.  Hoping @Microsoft can help with the Catalina side",
      "created_at": "2019-12-07T23:38:20Z",
      "updated_at": "2019-12-07T23:38:20Z"
    },
    {
      "author": "jnevins-gcm",
      "author_association": "NONE",
      "body": "@davesil2 \r\nTried:\r\n```\r\nports uninstall installed\r\nbrew install openssl\r\nbrew install openssl\r\nln -s /usr/local/opt/openssl/lib/libcrypto.1.1.dylib /usr/local/lib/libcrypto.1.0.0.dylib\r\nln -s /usr/local/opt/openssl/lib/libssl.1.1.dylib /usr/local/lib/libssl.1.0.0.dylib\r\n```\r\n and didn't work (but I recently updated to Catalina so that is probably why)",
      "created_at": "2019-12-08T20:25:54Z",
      "updated_at": "2019-12-08T20:25:54Z"
    },
    {
      "author": "jnevins-gcm",
      "author_association": "NONE",
      "body": "@davesil2 I\u2019be given up hope that @microsoft cares (or is capable of) supporting this platform ",
      "created_at": "2019-12-15T19:30:25Z",
      "updated_at": "2019-12-15T19:30:25Z"
    },
    {
      "author": "daviscyd",
      "author_association": "NONE",
      "body": "@davesil2 & @jnevins-gcm\r\n\r\nHere's the error I'm seeing after running the link commands mentioned and connecting to Exchange Online using New-PSSession:\r\nSymlink commands:\r\n```\r\nln -s /usr/local/opt/openssl/lib/libcrypto.1.1.dylib /usr/local/lib/libcrypto.1.0.0.dylib\r\nln -s /usr/local/opt/openssl/lib/libssl.1.1.dylib /usr/local/lib/libssl.1.0.0.dylib\r\n```\r\nError:\r\n```\r\ndyld: lazy symbol binding failed: Symbol not found: _SSL_library_init\r\n  Referenced from: /usr/local/microsoft/powershell/6/libmi.dylib\r\n  Expected in: /usr/local/lib/libssl.1.0.0.dylib\r\n\r\ndyld: Symbol not found: _SSL_library_init\r\n  Referenced from: /usr/local/microsoft/powershell/6/libmi.dylib\r\n  Expected in: /usr/local/lib/libssl.1.0.0.dylib\r\n```",
      "created_at": "2019-12-17T18:36:02Z",
      "updated_at": "2019-12-17T18:36:02Z"
    },
    {
      "author": "russburden",
      "author_association": "NONE",
      "body": "I see the exact same error on my Catalina 15.1 Mac as well.  I have spent many hours going through all of the iterations of this issue with no positive results.  I'm basically backing down to using a Windows VM again just to accomplish 365 related tasks since PSSessions don't seem to work within PSCore and the newer libssl and libcrypto.",
      "created_at": "2019-12-18T04:20:34Z",
      "updated_at": "2019-12-18T04:20:34Z"
    },
    {
      "author": "JeffN825",
      "author_association": "NONE",
      "body": "@tthoma24  can you provide the exact command you used? and were you using powershell CLI or SDK (this post is about the SDK...I've had success using the CLI)",
      "created_at": "2019-12-23T20:21:26Z",
      "updated_at": "2019-12-23T20:21:26Z"
    },
    {
      "author": "tthoma24",
      "author_association": "NONE",
      "body": "Ah, never mind. My issue is with the CLI. Sorry for the confusion.",
      "created_at": "2019-12-23T20:24:20Z",
      "updated_at": "2019-12-23T20:24:20Z"
    },
    {
      "author": "daviscyd",
      "author_association": "NONE",
      "body": "@JeffN825 Could you provide a link or info as to how you were able to get the CLI to work with o365?\r\n\r\n",
      "created_at": "2019-12-26T14:28:22Z",
      "updated_at": "2019-12-26T14:28:22Z"
    },
    {
      "author": "jnevins-gcm",
      "author_association": "NONE",
      "body": "@daviscyd i just did the sudo ln commands mentioned in https://github.com/PowerShell/PowerShell/issues/5561",
      "created_at": "2019-12-26T15:52:36Z",
      "updated_at": "2019-12-26T15:52:36Z"
    },
    {
      "author": "Glennzo",
      "author_association": "NONE",
      "body": "I had the same issue, managed to solve it by linking an older openssl version from brew with `brew switch openssl 1.0.2s`",
      "created_at": "2019-12-31T09:05:22Z",
      "updated_at": "2019-12-31T09:05:22Z"
    },
    {
      "author": "jnevins-gcm",
      "author_association": "NONE",
      "body": "@Glennzo were you using the PowerShell CLI or the SDK nuget package. This issue is about the SDK nuget package. ",
      "created_at": "2019-12-31T14:03:57Z",
      "updated_at": "2019-12-31T14:03:57Z"
    },
    {
      "author": "daviscyd",
      "author_association": "NONE",
      "body": "> @daviscyd i just did the sudo ln commands mentioned in #5561\r\n\r\n@jnevins-gcm Are they the same as those mentioned in this thread [here](https://github.com/PowerShell/PowerShell/issues/10600#issuecomment-562896424)?  Because if they are, I've already  tried this and it doesn't work for me.\r\n\r\nWhat OS are you running?",
      "created_at": "2019-12-31T14:21:34Z",
      "updated_at": "2019-12-31T14:21:34Z"
    },
    {
      "author": "davesil2",
      "author_association": "NONE",
      "body": "@Glennzo How did you install 1.0.2s?  When running that, brew tells me there is no package for that version.",
      "created_at": "2019-12-31T15:34:17Z",
      "updated_at": "2019-12-31T15:34:17Z"
    },
    {
      "author": "pyrohaz4good",
      "author_association": "NONE",
      "body": "> I had the same issue, managed to solve it by linking an older openssl version from brew with `brew switch openssl 1.0.2s`\r\n\r\nThis is the solution. If you have brew, type \r\n`brew switch openssl 1.0.2s`\r\n\r\nThis only works if you had previously downloaded openssl because it's no longer available in the tap. If you can't get that to work, you probably need to manually find the files from 1.0.2s and symlink them in. ",
      "created_at": "2020-01-03T20:06:39Z",
      "updated_at": "2020-01-03T20:06:39Z"
    },
    {
      "author": "jnevins-gcm",
      "author_association": "NONE",
      "body": "@pyrohaz4good SDK or CLI?",
      "created_at": "2020-01-03T20:34:24Z",
      "updated_at": "2020-01-03T20:34:24Z"
    },
    {
      "author": "pyrohaz4good",
      "author_association": "NONE",
      "body": "Name                           Value\r\n----                           -----\r\nPSVersion                      6.2.0\r\nPSEdition                      Core\r\nGitCommitId                    6.2.0\r\nOS                             Darwin 18.5.0 Darwin Kernel Version 18.5.0: Mon\u2026\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0",
      "created_at": "2020-01-03T20:35:58Z",
      "updated_at": "2020-01-03T20:35:58Z"
    },
    {
      "author": "jnevins-gcm",
      "author_association": "NONE",
      "body": "From c# or command line? @pyrohaz4good ",
      "created_at": "2020-01-03T21:38:49Z",
      "updated_at": "2020-01-03T21:38:49Z"
    },
    {
      "author": "pyrohaz4good",
      "author_association": "NONE",
      "body": "CLI (specifically, Visual Studio Code)",
      "created_at": "2020-01-03T22:13:10Z",
      "updated_at": "2020-01-03T22:13:26Z"
    },
    {
      "author": "jnevins-gcm",
      "author_association": "NONE",
      "body": "@pyrohaz4good this issue is regarding the SDK. Even when it works with the CLI, It doesn\u2019t work with the SDK",
      "created_at": "2020-01-03T22:47:35Z",
      "updated_at": "2020-01-03T22:47:35Z"
    },
    {
      "author": "jshum",
      "author_association": "NONE",
      "body": "> I had the same issue, managed to solve it by linking an older openssl version from brew with `brew switch openssl 1.0.2s`\r\n\r\nFor me 1.0.2r worked as well. I had the openssl 1.1 installed through brew but they did not work",
      "created_at": "2020-02-22T09:44:15Z",
      "updated_at": "2020-02-22T09:44:15Z"
    },
    {
      "author": "jnevins-gcm",
      "author_association": "NONE",
      "body": "@jshum CLI or SDK? This issue relates to the SDK",
      "created_at": "2020-02-22T14:28:38Z",
      "updated_at": "2020-02-22T14:28:38Z"
    },
    {
      "author": "jshum",
      "author_association": "NONE",
      "body": "Right, my comment was for CLI, but I'm guessing it may be the same underlying problem relating to the SSL library being found in the environment/path on OS X",
      "created_at": "2020-02-23T03:45:44Z",
      "updated_at": "2020-02-23T03:45:54Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "I suspect macports would still work.  The instructions are here:\r\nhttps://github.com/PowerShell/PowerShell/issues/5634#issuecomment-445051982\r\n",
      "created_at": "2020-03-12T18:17:02Z",
      "updated_at": "2020-03-12T18:17:02Z"
    },
    {
      "author": "JeffN825",
      "author_association": "NONE",
      "body": "@TravisEz13 You could just try it or read the entirety of the question and you'd know it doesn't work... truly unbelievable",
      "created_at": "2020-03-12T19:38:56Z",
      "updated_at": "2020-03-12T19:38:56Z"
    },
    {
      "author": "JeffN825",
      "author_association": "NONE",
      "body": "@TravisEz13 - it doesn\u2019t work ",
      "created_at": "2020-03-12T21:43:50Z",
      "updated_at": "2020-03-12T21:43:50Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I understand that some folks are frustrated here, but please keep in mind we are not a huge team and we have to prioritize issues we believe have the most impact.  In this specific case, we've been having discussions with EXO team to move off WSMan based remoting.  The library that we were using for WSMan remoting on non-Windows has been deprecated and no longer supported by a team.  New EXO cmdlets are coming with expectation that they are cross platform compatible.  Sorry no timeline to announce as it's not my project.",
      "created_at": "2020-03-12T23:11:24Z",
      "updated_at": "2020-03-12T23:11:24Z"
    },
    {
      "author": "luckman212",
      "author_association": "NONE",
      "body": "Good luck on this! Hope the new cmdlets support MFA login on macOS, similar to `Connect-AzAccount` from the new `Az` module... \ud83d\ude80",
      "created_at": "2020-04-02T16:50:02Z",
      "updated_at": "2020-04-02T16:50:02Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "Updated docs for getting libmi to work using MacPorts https://github.com/MicrosoftDocs/PowerShell-Docs/pull/5726\r\n\r\nPlease note that this is a temporary solution as @SteveL-MSFT  said:\r\n\r\n> we've been having discussions with EXO team to **move off WSMan based remoting**. **The library** that we were using for WSMan remoting on non-Windows **has been deprecated** and no longer supported by a team. New EXO cmdlets are coming with expectation that they are cross platform compatible. Sorry no timeline to announce as it's not my project.\r\n\r\nCC @mgreenegit ",
      "created_at": "2020-04-07T19:02:54Z",
      "updated_at": "2020-04-07T19:07:00Z"
    },
    {
      "author": "luckman212",
      "author_association": "NONE",
      "body": "For now, this hack works...\r\n```\r\nbrew install https://github.com/luckman212/openssl10/releases/download/1.0.2u/openssl@1.0.rb\r\nrm /usr/local/opt/openssl\r\nln -s /usr/local/Cellar/openssl@1.0/1.0.2u /usr/local/opt/openssl\r\n```",
      "created_at": "2020-04-07T22:29:35Z",
      "updated_at": "2020-04-07T22:29:35Z"
    },
    {
      "author": "JeffN825",
      "author_association": "NONE",
      "body": "Does it work for the sdk or just the cli?\n",
      "created_at": "2020-04-07T22:39:46Z",
      "updated_at": "2020-04-07T22:39:48Z"
    },
    {
      "author": "luckman212",
      "author_association": "NONE",
      "body": "@JeffN825 I can't say for sure, but this symlinks into the global `/usr/local/opt` dir so I would expect it to work for both. Please try if you can & report back.",
      "created_at": "2020-04-08T00:20:24Z",
      "updated_at": "2020-04-08T00:20:24Z"
    },
    {
      "author": "jnevins-gcm",
      "author_association": "NONE",
      "body": "Nope\n\nJeffrey Nevins\nExecutive Director, IT Architecture & Engineering\nGCM Grosvenor\n900 North Michigan Avenue, Suite 1100\nChicago, IL 60611\nT +1-312-506-6499\nM +1-516-551-3202\njnevins@gcmlp.com",
      "created_at": "2020-04-08T01:10:15Z",
      "updated_at": "2020-04-08T01:10:17Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "For reference https://github.com/PowerShell/PowerShell/issues/11216#issuecomment-608221120",
      "created_at": "2020-04-08T03:43:03Z",
      "updated_at": "2020-04-08T17:12:23Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@iSazonov  I hid your topic as this has NOTHING to do with the CLR.  This is `libmi` which is hardcoded to load from this path and is **deprecated**.",
      "created_at": "2020-04-08T17:13:31Z",
      "updated_at": "2020-04-08T17:13:31Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as external and has not had any activity for **1 day**. It has been be closed for housekeeping purposes.",
      "created_at": "2020-04-09T19:00:08Z",
      "updated_at": "2020-04-09T19:00:08Z"
    },
    {
      "author": "jnevins-gcm",
      "author_association": "NONE",
      "body": "Why the &$@! Would you close this issue??",
      "created_at": "2020-04-09T19:08:21Z",
      "updated_at": "2020-04-09T19:08:44Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@jnevins-gcm There is a long path to deprecated dependencies. It is so over [last 2 years.](https://github.com/PowerShell/PowerShell/issues/4562#issuecomment-398881699) Recommendation for remoting on MacOs is to use SSH. For O365 services, Azure modules we can only wait when they are updated.\r\n",
      "created_at": "2020-04-10T04:40:33Z",
      "updated_at": "2020-04-10T04:40:33Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@jnevins-gcm Here is the external issue.  https://github.com/microsoft/omi/issues/596   It was closed because OMI is deprecated and will not fix these issues.   \r\nThis was summarized here:  https://github.com/PowerShell/PowerShell/issues/10600#issuecomment-610565488",
      "created_at": "2020-04-11T18:13:54Z",
      "updated_at": "2020-04-11T18:13:54Z"
    },
    {
      "author": "adin3d",
      "author_association": "NONE",
      "body": "ok, so it was moved to a project were was declared \"out of scope\" \r\n\r\nI think there are around two years since we wait for this, any chance for this to have a proper follow-up and timeline?\r\n\r\nThank you ",
      "created_at": "2020-10-13T18:21:36Z",
      "updated_at": "2020-10-13T18:21:36Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@adin3d Please look last comments in https://github.com/PowerShell/PowerShell/issues/5561",
      "created_at": "2020-10-14T04:06:49Z",
      "updated_at": "2020-10-14T04:06:49Z"
    }
  ],
  "created_at": "2019-09-23T16:44:01Z",
  "number": 10600,
  "state": "closed",
  "title": "macOS can't use New-PSSession to Connect to O365 from PowerShell Host - WSMAN client library not found",
  "updated_at": "2020-10-14T04:06:50Z"
}