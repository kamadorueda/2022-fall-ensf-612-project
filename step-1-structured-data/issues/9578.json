{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9578",
  "author": "codykonior",
  "body": "Reproduced on PowerShellGet 2.1.0.\r\n\r\nSteps to reproduce\r\n------------------\r\n```powershell\r\nNew-ModuleManifest -Path .\\Test.psd1\r\nUpdate-ModuleManifest -Path .\\Test.psd1 -FunctionsToExport @()\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\nBoth times there should only be one trailing CR. VS Code often enforces this kind of standard.\r\n\r\nActual behavior\r\n---------------\r\nThe file ends with two trailing CRs. If you remove one, it returns.\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- If relevant to your issue, please paste output from the following commands -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value\r\n----                           -----\r\nPSVersion                      5.1.14393.2791\r\nPSEdition                      Desktop\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nBuildVersion                   10.0.14393.2791\r\nCLRVersion                     4.0.30319.42000\r\nWSManStackVersion              3.0\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\n```\r\n\r\n```powershell\r\n> Get-Module -ListAvailable PowerShellGet,PackageManagement\r\nModuleType Version    Name                                ExportedCommands\r\n---------- -------    ----                                ----------------\r\nScript     2.1.0      PowerShellGet                       {Find-Command, Find-DSCResource, Find-Module, Find-RoleCapability...}\r\n\r\nModuleType Version    Name                                ExportedCommands\r\n---------- -------    ----                                ----------------\r\nScript     1.3.1      PackageManagement                   {Find-Package, Get-Package, Get-PackageProvider, Get-PackageSource...}\r\nScript     1.2.2      PackageManagement                   {Find-Package, Get-Package, Get-PackageProvider, Get-PackageSource...}\r\nScript     1.1.7.2    PackageManagement                   {Find-Package, Get-Package, Get-PackageProvider, Get-PackageSource...}\r\nScript     2.1.0      PowerShellGet                       {Find-Command, Find-DSCResource, Find-Module, Find-RoleCapability...}\r\nScript     2.0.4      PowerShellGet                       {Find-Command, Find-DSCResource, Find-Module, Find-RoleCapability...}\r\nScript     2.0.3      PowerShellGet                       {Find-Command, Find-DSCResource, Find-Module, Find-RoleCapability...}\r\nScript     2.0.2      PowerShellGet                       {Find-Command, Find-DSCResource, Find-Module, Find-RoleCapability...}\r\nScript     1.6.7      PowerShellGet                       {Find-Command, Find-DSCResource, Find-Module, Find-RoleCapability...}\r\n```\r\n\r\n```powershell\r\n> Get-PackageProvider -ListAvailable\r\n\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "SydneyhSmith",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for reporting this @codykonior I can reproduce, and as far as I can tell this issue was introduced in 2.1.0--perhaps an unintended side effect of other fixes we made in Update-ModuleManifest. Interestingly when I test this on 2.0.4 I get the error: \r\n```\r\nUpdate-ModuleManifest : Cannot validate argument on parameter 'FunctionsToExport'. The\r\nargument is null, empty, or an element of the argument collection contains a null\r\nvalue. Supply a collection that does not contain any null values and then try the\r\ncommand again.\r\nAt line:1 char:60\r\n+ Update-ModuleManifest -Path .\\Test.psd1 -FunctionsToExport @()\r\n+                                                            ~~~\r\n    + CategoryInfo          : InvalidData: (:) [Update-ModuleManifest], ParameterBindi\r\n   ngValidationException\r\n    + FullyQualifiedErrorId : ParameterArgumentValidationError,Update-ModuleManifest\r\n```\r\n",
      "created_at": "2019-03-12T16:19:52Z",
      "updated_at": "2019-03-12T16:19:52Z"
    },
    {
      "author": "codykonior",
      "author_association": "NONE",
      "body": "Hi,\r\n\r\nI was starting to work on this but I've noticed that the master branch and development branches are both failing tests. Is it worth working on this or wait until all that is solved?\r\n",
      "created_at": "2019-04-17T07:07:55Z",
      "updated_at": "2019-04-17T07:07:55Z"
    },
    {
      "author": "edyoung",
      "author_association": "CONTRIBUTOR",
      "body": "You can go ahead but we probably won't merge until that's fixed",
      "created_at": "2019-04-17T15:26:04Z",
      "updated_at": "2019-04-17T15:26:04Z"
    },
    {
      "author": "edyoung",
      "author_association": "CONTRIBUTOR",
      "body": "This is in New-ModuleManifest, which Update-ModuleManifest calls, specifically https://github.com/PowerShell/PowerShell/blob/master/src/System.Management.Automation/engine/Modules/NewModuleManifestCommand.cs#L1130",
      "created_at": "2019-05-11T15:23:49Z",
      "updated_at": "2019-05-11T15:23:49Z"
    }
  ],
  "created_at": "2019-03-12T09:43:00Z",
  "number": 9578,
  "state": "open",
  "title": "Two trailing lines at the end of New-ModuleManifest / Update-ModuleManifest",
  "updated_at": "2019-05-11T15:23:50Z"
}