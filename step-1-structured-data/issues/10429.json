{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10429",
  "author": "awakun",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n\r\n-->\r\n\r\nForeach-Object -Parallel doesn't recognize available commands when imported using the WindowsCompatibility module. This likely has to do with how those commands are imported using local remoting, but I haven't dug into the -Parallel implementation yet to see where the failure is.\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\n# Import a windows module, doesn't matter which one. Here I'm importing WMI commands\r\nImport-WinModule Microsoft.Powershell.Management -Force\r\n# Can validate that commands imported with 'Get-Command Get-WMIObject'\r\nGet-Command Get-WMIObject\r\nCommandType     Name                                               Version    Source\r\n-----------     ----                                               -------    ------\r\nFunction        Get-WmiObject                                      1.0        Microsoft.PowerShell.Management.WinModule\r\n# Set a variable to iterate through\r\n$service = 'W32Time','WManSvc','PlugPlay'\r\n# Attempt to use new -Parallel flag\r\n$service | ForEach-Object -Parallel {Get-WmiObject -Class win32_service -Filter (\"Name = '{0}'\" -f $_)}\r\n\r\n# Output error (repeated 3 times)\r\nGet-WmiObject : The term 'Get-WmiObject' is not recognized as the name of a cmdlet, function, script file, or operable program.\r\nCheck the spelling of the name, or if a path was included, verify that the path is correct and try again.\r\nAt line:1 char:1\r\n+ Get-WmiObject -Class win32_service -Filter (\"Name = '{0}'\" -f $_)\r\n+ ~~~~~~~~~~~~~\r\n+ CategoryInfo          : ObjectNotFound: (Get-WmiObject:String) [], CommandNotFoundException\r\n+ FullyQualifiedErrorId : CommandNotFoundException\r\n```\r\n\r\n# Expected behavior\r\n\r\n```powershell\r\n# Should work like it does with the -Process flag:\r\n$service | ForEach-Object -Process {Get-WmiObject -Class win32_service -Filter (\"Name = '{0}'\" -f $_)} \r\n\r\nExitCode  : 0\r\nName      : W32Time\r\nProcessId : 1736\r\nStartMode : Manual\r\nState     : Running\r\nStatus    : OK\r\n\r\nExitCode  : 1077\r\nName      : WManSvc\r\nProcessId : 0\r\nStartMode : Manual\r\nState     : Stopped\r\nStatus    : OK\r\n\r\nExitCode  : 0\r\nName      : PlugPlay\r\nProcessId : 1036\r\nStartMode : Manual\r\nState     : Running\r\nStatus    : OK\r\n```\r\n\r\n# Actual behavior\r\n\r\n```powershell\r\n# Returns an error stating the command doesn't exist-\r\nGet-WmiObject : The term 'Get-WmiObject' is not recognized as the name of a cmdlet, function, script file, or operable program.\r\nCheck the spelling of the name, or if a path was included, verify that the path is correct and try again.\r\nAt line:1 char:1\r\n+ Get-WmiObject -Class win32_service -Filter (\"Name = '{0}'\" -f $_)\r\n+ ~~~~~~~~~~~~~\r\n+ CategoryInfo          : ObjectNotFound: (Get-WmiObject:String) [], CommandNotFoundException\r\n+ FullyQualifiedErrorId : CommandNotFoundException\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-preview.3\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-preview.3\r\nOS                             Microsoft Windows 10.0.18362\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2019-08-25T00:00:31Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "`ForEach-Object -Parallel` is akin to using `Start-Job` to run the commands - it's run in a totally separate process. You'll need to run the import command _inside_ the `-Parallel` scriptblock; the module being available in the parent session is not sufficient for `-Parallel` \ud83d\ude42 ",
      "created_at": "2019-08-22T22:32:14Z",
      "updated_at": "2019-08-22T22:32:14Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "/cc @PaulHigin for information.\r\n\r\nPerhaps we could add this in the cmdlet docs..",
      "created_at": "2019-08-23T05:41:49Z",
      "updated_at": "2019-08-23T05:41:49Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov  Thanks, yes I agree this needs to be documented.  We can also think about adding common initialization for the parallel script blocks including module import.  I actually thought about adding it but decided it was something we could add later as needed.\r\n\r\nBTW I will publish a blog article soon on this feature, and will use some of the information for cmdlet documentation.",
      "created_at": "2019-08-23T15:40:46Z",
      "updated_at": "2019-08-23T15:40:46Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2019-08-25T00:00:29Z",
      "updated_at": "2019-08-25T00:00:29Z"
    }
  ],
  "created_at": "2019-08-22T22:08:16Z",
  "number": 10429,
  "state": "closed",
  "title": "Foeach-Object -Parallel problems with functions imported by WindowsCompatibility module",
  "updated_at": "2019-08-25T00:00:31Z"
}