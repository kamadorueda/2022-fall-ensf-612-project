{
  "_url": "https://github.com/PowerShell/PowerShell/issues/2749",
  "author": "daxian-dbw",
  "body": "Fix #2745 \r\n`PipelinePosition` starts from 1, ~~so the indicator for redirecting standard input should be `PipelinePosition > 1`.~~\r\n\r\nWhen there is input to a native command like `1,2,3 | <native>`, the native command is still marked as position 1 in the pipeline because the input doesn't take up pipeline position. So we cannot simply using `PipelinePosition` to decide whether standard input needs to be redirected.\r\n\r\nThe new fix swaps the running order of the following code in `PipelineProcessor.Start`, so as to make sure `ExpectingInput` is set before calling `DoPrepare`. Then in `NativeCommandProcessor.Prepare` we can use `MyInvocation.ExpectingInput` to check whether to redirect standard input.\r\n```\r\ncommandProcessor.DoPrepare(psDefaultParameterValues);\r\nmyInfo.ExpectingInput = commandProcessor.IsPipelineInputExpected();\r\n```",
  "closed_at": "2016-11-22T00:02:53Z",
  "comments": [
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Will add a test in a few mins.",
      "created_at": "2016-11-21T18:19:42Z",
      "updated_at": "2016-11-21T18:19:42Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@vors @lzybkr From reading the code, I feel it's fine to swap the order of calling `DoPrepare` and assigning `myInfo.ExpectingInput`, but I would need to run all tests to verify. If you know something that will obviously be broken by this change, please let me know.",
      "created_at": "2016-11-21T20:00:31Z",
      "updated_at": "2016-11-21T20:00:31Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "~~`stty` may not be on the Travis CI build. I will come up with a more robust test.~~ Never mind, my typos caused the test failures. I will run all tests in both Linux and Windows to verify if swapping the order breaks anything.",
      "created_at": "2016-11-21T20:06:26Z",
      "updated_at": "2016-11-21T20:27:32Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "I have ran all tests on Linux, there were 2 failures, and they are related to `Get-PackageProvider` and `Register-PackageSource`. This was because I didn't specify `-PSModuleRestore` when building and thus I don't have PackageManagement and PowerShellGet modules installed.\r\n\r\nSo Linux test run was good.\r\n\r\n![image](https://cloud.githubusercontent.com/assets/127450/20504460/628d1958-affc-11e6-8edf-874b838cf789.png)\r\n",
      "created_at": "2016-11-21T23:12:07Z",
      "updated_at": "2016-11-21T23:12:07Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "OK, finally finished running all tests on windows and analyzing the failures. There are 8 test failures:\r\n1. `SSH Remoting API Tests.SSHConnectionInfo should throw file not found exception for invalid key file path` -- ssh.exe is not available on my test machine\r\n2. 4 failures in `Get-ComputerInfo` tests for properties: `DeviceGuardAvailableSecurityProperties`, `DeviceGuardRequiredSecurityProperties`, `DeviceGuardSecurityServicesConfigured`, `DeviceGuardSecurityServicesRunning` -- somehow there is no value for them on my test VM, which is WS2016.\r\n3. \"Set-Date should be able to set the date in an elevated context\" -- `Set-Date` fails even in elevated session because `NativeMethods.SetLocalTime(ref systemTime)` fails in `SetDateCommand.ProcessRecord`. It may be due to the test machine is a VM. `Set-Date` doesn't work well with VMs.\r\n4. `Register-PackageSource` and `Get-PackageProvider` cannot be found -- PackageManagement related.\r\n\r\n![image](https://cloud.githubusercontent.com/assets/127450/20506705/9e7d9420-b00a-11e6-95ce-5e65176195bb.png)\r\n\r\nNone of the failures is related to swapping the order of `DoPrepare` and assigning `myInfo.ExpectingInput`. So Windows test run was good.",
      "created_at": "2016-11-22T00:50:42Z",
      "updated_at": "2016-11-22T00:50:42Z"
    }
  ],
  "created_at": "2016-11-21T18:19:17Z",
  "number": 2749,
  "state": "closed",
  "title": "Fix the indicator for redirecting standard input",
  "updated_at": "2016-11-22T00:50:42Z"
}