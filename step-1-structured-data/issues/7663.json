{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7663",
  "author": "sethvs",
  "body": "## PR Summary\r\n\r\nChange Name to ModuleName in module specification hashtable.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` to the beginning of the title and remove the prefix when the PR is ready.\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] User-facing [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed - Issue link:\r\n- **Testing - New and feature**\r\n    - [x] Not Applicable or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n        - [ ] [Add `[feature]` if the change is significant or affects feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\r\n",
  "closed_at": "2018-09-04T17:06:35Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@sethvs  The broken names was created specially for test \"Cannot create from **invalid** module hashtables\".",
      "created_at": "2018-08-30T10:44:30Z",
      "updated_at": "2018-08-30T10:44:30Z"
    },
    {
      "author": "sethvs",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov \r\nI believe this is not the case.\r\nEach testcase tests for some specific error in hashtable.\r\n\r\n@{TestName = \"`Version+RequiredVersion`\"\r\nModuleSpecification = @{ ModuleName = \"BadVersionModule\"; `ModuleVersion = \"3.1\"; RequiredVersion = \"3.1\"` }},\r\n@{TestName = \"NoName\"\r\nModuleSpecification = @{ ModuleVersion = \"0.2\" }},\r\n@{TestName = \"`BadField`\"\r\nModuleSpecification = @{ ModuleName = \"StrangeFieldModule\"; RequiredVersion = \"7.4\"; `Duck = \"1.2\"` }},\r\n@{TestName = \"`BadType`\"\r\nModuleSpecification = @{ ModuleName = \"BadTypeModule\"; `RequiredVersion = \"Hello!\"` }\r\n\r\nNow, with **Name** instead of **ModuleName**, the code that checks the hashtable throws errors because of the wrong field - **Name**, instead of the actual error, that should be tested.\r\n\r\nFor example, the first testcase:\r\n```powershell\r\n$ModuleSpecification = @{ Name = \"BadVersionModule\"; ModuleVersion = \"3.1\"; RequiredVersion = \"3.1\" }\r\n[Microsoft.PowerShell.Commands.ModuleSpecification]::new($ModuleSpecification)\r\n```\r\n```\r\nException calling \".ctor\" with \"1\" argument(s): \"The hashtable describing a module contains one or more members that are not valid.  The valid members are (ModuleName, ModuleVersion, RequiredVersion, GUID). Remove the members that are not valid ('Name'), then try again.\"\r\nAt line:1 char:1\r\n+ [Microsoft.PowerShell.Commands.ModuleSpecification]::new($ModuleSpeci ...\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : NotSpecified: (:) [], MethodInvocationException\r\n+ FullyQualifiedErrorId : ArgumentException\r\n```\r\n\r\nshould actually be:\r\n```powershell\r\n$ModuleSpecification = @{ ModuleName = \"BadVersionModule\"; ModuleVersion = \"3.1\"; RequiredVersion = \"3.1\" }\r\n[Microsoft.PowerShell.Commands.ModuleSpecification]::new($ModuleSpecification)\r\n```\r\n```\r\nException calling \".ctor\" with \"1\" argument(s): \"The parameters ModuleVersion and RequiredVersion cannot be used together. Please specify only one parameter.\"\r\nAt line:1 char:1\r\n+ [Microsoft.PowerShell.Commands.ModuleSpecification]::new($ModuleSpeci ...\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : NotSpecified: (:) [], MethodInvocationException\r\n+ FullyQualifiedErrorId : ArgumentException\r\n```",
      "created_at": "2018-08-30T12:24:36Z",
      "updated_at": "2018-08-30T12:24:36Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@sethvs Thanks for your contribution. I have left a comment to make the test even more effective.",
      "created_at": "2018-08-30T17:00:54Z",
      "updated_at": "2018-08-30T17:00:54Z"
    }
  ],
  "created_at": "2018-08-30T10:18:07Z",
  "number": 7663,
  "state": "closed",
  "title": "Fix module specification hashtable in ModuleSpecification.Tests.ps1",
  "updated_at": "2018-09-27T11:25:59Z"
}