{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7973",
  "author": "JoeSalmeri",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\n- Windows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nIf it is a bug report:\r\n- make sure you are able to repro it on the latest released version. \r\nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n- Fill out the following repro template:\r\n\r\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\r\n-->\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\nhelp about_format.ps1xml says that the *.format.ps1xml files are located in the $PSHOME directory but the format files are missing from that directory (and do not exist in the entire directory tree)\r\n\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```none\r\n\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n```none\r\n\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\n\r\n`Name                           Value\r\n----                           -----\r\nPSVersion                      6.1.0\r\nPSEdition                      Core\r\nGitCommitId                    6.1.0\r\nOS                             Microsoft Windows 10.0.17763\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n",
  "closed_at": "2018-10-19T19:20:14Z",
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Do you have a need for the ps1xml files?  In PowerShell Core 6, the built in formatting are in c# and not in actual ps1xml files.  If the concern is the docs are incorrect, we can fix that.",
      "created_at": "2018-10-09T01:06:22Z",
      "updated_at": "2018-10-09T01:06:22Z"
    },
    {
      "author": "JoeSalmeri",
      "author_association": "NONE",
      "body": "Hi Steve,\r\n\r\nSince the ps1xml files were first released I have modified them to make a some changes.\r\n\r\nWith each new PS version I have incorporated my changes into the new files in case anything else\r\nchanged.\r\n\r\nMy concern is that the built-in formatting would either add additional changes or possible include\r\nsome of my changes.   That's why I merge them into the files each time.\r\n\r\nHere is a summary of the changes I make:\r\n\r\nTableControl\r\n\tReduced LastWriteTime from 25 to 20 to allow some extra space for the next change\r\n\t\r\n\tIncreased Length from 14 to 15 to allow room for formatting the length to include commas\r\n\t\r\n\tModify LastWriteTime formatting to M/dd/yyyy and h:mm:tt so that date and times line up\r\n\tbetter and are easier to read\r\n\r\n\tModify Length formatting to {0:n0} so that it includes commas \r\n\t(I cannot believe PS has not made this change in all these years, even DOS had commas!)\r\n\r\nListControl\r\n\tModify Length formatting to {0:n0} so that it includes commas \r\n\r\n\tModify CreationTime   formatting to M/dd/yyyy and h:mm:tt so that date and times line up\r\n\t\t(NOTE: 2 places require changing)\r\n\tModify LastWriteTime  formatting to M/dd/yyyy and h:mm:tt so that date and times line up\r\n\t\t(NOTE: 2 places require changing)\r\n\tModify LastAccessTime formatting to M/dd/yyyy and h:mm:tt so that date and times line up\r\n\t\t(NOTE: 2 places require changing)\r\n\r\nThen I use the following in my profile to incorporate my changes into the PS session\t\r\n\r\n\tUpdate-FormatData -PrependPath My.FileSystem.format.ps1xml\r\n\r\nI am happy to send you my files if you are interested in including those changes.\r\n\r\nThanks!",
      "created_at": "2018-10-09T18:51:32Z",
      "updated_at": "2018-10-09T18:51:32Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT I would think that at the very least there should be *one* example / template file, both as a .ps1xml and a .cs file; a good example often speaks much more clearly than several pages of detailed specification. \ud83d\ude15 ",
      "created_at": "2018-10-09T18:58:19Z",
      "updated_at": "2018-10-09T18:58:19Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@JoeSalmeri perhaps you can open a new issue with your specific changes you think should be applied and we can see about making those changes in the product\r\n\r\n@vexx32 long term, I'd like to get away from xml for types and formatting, but that feels a long ways away given everything else we want/need to do.  We still have some example [ps1xml](https://github.com/PowerShell/PowerShell/search?q=extension%3Aps1xml&unscoped_q=extension%3Aps1xml) files in this repo and you can always grab the ones from Windows PowerShell.  The default formatters are [here](master/src/System.Management.Automation/FormatAndOutput/DefaultFormatters)",
      "created_at": "2018-10-09T20:28:47Z",
      "updated_at": "2018-10-09T20:28:47Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT I really can't agree more. I'd love to see `Update-FormatData` accept direct object input and for the relevant necessary type configuration objects be able to be created in PowerShell directly or created with some kind of hashtable syntax.",
      "created_at": "2018-10-09T20:34:53Z",
      "updated_at": "2018-10-09T20:34:53Z"
    },
    {
      "author": "JoeSalmeri",
      "author_association": "NONE",
      "body": "@SteveL-MSFT \r\n\r\nSorry for the delay on my part, I was away do to personal issues.\r\n\r\nI have opened Issue #8060 where I submitted the changes we have been discussing.\r\n\r\nThe file included is a copy of the latest FileSystem.Format.ps1xml file with my changes made and includes documentation at the top of what the changes are as well as documentation where each change is made.\r\n\r\nPlease let me know if you have any questions and thanks very much for your help and consideration!\r\n\r\n\r\n\r\n\r\n",
      "created_at": "2018-10-17T14:51:57Z",
      "updated_at": "2018-10-17T14:51:57Z"
    },
    {
      "author": "felixfbecker",
      "author_association": "CONTRIBUTOR",
      "body": "I was following [this tutorial](https://blogs.msdn.microsoft.com/sergey_babkins_blog/2016/12/28/getting-a-stack-trace-in-powershell) to show stack traces on ErrorRecords. Is it not possible anymore to easily customize printing of built-in objects? If yes that would be sad",
      "created_at": "2019-02-23T15:24:31Z",
      "updated_at": "2019-02-23T15:24:31Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@felixfbecker you can still do what that tutorial describes. The base format files are in c# now, though, so you'll have to borrow the example file given in the article.",
      "created_at": "2019-02-23T15:31:35Z",
      "updated_at": "2019-02-23T15:31:35Z"
    },
    {
      "author": "felixfbecker",
      "author_association": "CONTRIBUTOR",
      "body": "Which is based on the format file from 3 years ago.",
      "created_at": "2019-02-23T15:33:41Z",
      "updated_at": "2019-02-23T15:33:41Z"
    }
  ],
  "created_at": "2018-10-08T19:37:14Z",
  "labels": [
    "Issue-Discussion",
    "Resolution-Answered"
  ],
  "number": 7973,
  "state": "closed",
  "title": "*.Format.ps1xml files are missing (example: FileSystem.Format.ps1xml)",
  "updated_at": "2019-02-23T15:33:41Z"
}