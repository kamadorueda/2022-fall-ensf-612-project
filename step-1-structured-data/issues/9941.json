{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9941",
  "author": "PrzemyslawKlys",
  "body": "# Summary of the new feature/enhancement\r\n\r\nAs it stands I've stopped using **Where-Object** in performance-related scenarios. I used it a lot when creating different scripts but then I found out it's actually **7-10x slower** than simple foreach loop. \r\n\r\n```powershell\r\n$UsersAll = Get-ADUser -Properties Manager, DisplayName, EmailAddress -Filter '*'\r\n$UsersWithManagers = foreach ($User in $UsersAll) {\r\n    $Manager = ($UsersAll | Where-Object { $User.Manager -eq $_.DistinguishedName })\r\n    [PSCustomobject] @{\r\n        SamAccountName = $User.SamAccountName\r\n        Manager        = $User.Manager\r\n        ManagerDisplay = $Manager.DisplayName\r\n        ManagerEmail   = $Manager.EmailAddress\r\n    }\r\n}\r\n$UsersWithManagers | Format-Table -AutoSize\r\n```\r\nThis takes 7 minutes 54 seconds on a domain of size 4412 users. With foreach approach like this:\r\n\r\n```powershell\r\n$UsersAll = Get-ADUser -Properties Manager, DisplayName, EmailAddress -Filter '*'\r\n$UsersWithManagers = foreach ($User in $UsersAll) {\r\n    $Manager = foreach ($_ in $UsersAll) {\r\n        if ($User.Manager -eq $_.DistinguishedName) {\r\n            $_\r\n            break\r\n        }\r\n    }\r\n    [PSCustomobject] @{\r\n        SamAccountName = $User.SamAccountName\r\n        Manager        = $User.Manager\r\n        ManagerDisplay = $Manager.DisplayName\r\n        ManagerEmail   = $Manager.EmailAddress\r\n    }\r\n}\r\n$UsersWithManagers | Format-Table -AutoSize\r\n```\r\n\r\nIt takes just 59 seconds. I ended up using hashtable for that particular problem (https://evotec.xyz/how-i-didnt-know-how-powerful-and-fast-hashtables-are/) but the main idea here is that **Where-Object** is just slow for larger loops. \r\n\r\nIt would be really cool to \"fix\" this in PowerShell 7 so Where-Object can once again be used as GO TO to solution for filtering stuff. \r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Related article https://learn-powershell.net/2015/02/20/a-look-at-filtering-performance-in-powershell/\r\n\r\nI think there is 2 slow thinks:\r\n- pipeline itself\r\n- where-object internally\r\n\r\nI guess we could transform Where-Object to Filter function and get up to 20x improvements.\r\nThe code references:\r\nhttps://github.com/PowerShell/PowerShell/blob/94b6b6f4f7985be7c006c3eb87691992d872142a/src/System.Management.Automation/engine/InternalCommands.cs#L1632-L1643\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/94b6b6f4f7985be7c006c3eb87691992d872142a/src/System.Management.Automation/engine/parser/ast.cs#L1031-L1036",
      "created_at": "2019-06-19T13:00:48Z",
      "updated_at": "2019-06-19T13:03:01Z"
    },
    {
      "author": "paule96",
      "author_association": "NONE",
      "body": "I have also an example for this problem. If you use there Where-Object function of PowerShell it is slow. If you use the Linq function of the object you get twice the perfomance, with more or less the same code..\r\n\r\n![image](https://user-images.githubusercontent.com/11291885/90290785-cc1e3a00-de7e-11ea-814a-6fb3737c1f5a.png)\r\n",
      "created_at": "2020-08-14T20:39:27Z",
      "updated_at": "2020-08-14T20:39:27Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Point of clarity, that `.Where()` method has absolutely nothing to do with Linq; Linq extension methods aren't supported in PS and can't be used without accessing them directly as static methods (i.e., `[System.Linq.Enumerable]::Where()`). The method you're using is specific to PS's method binding, it's documented in the `about_arrays` help topic :)\r\n\r\nBut yeah, pipeline binding and processing has some overhead, for sure. \ud83d\ude42 ",
      "created_at": "2020-08-15T04:41:33Z",
      "updated_at": "2020-08-15T04:41:33Z"
    }
  ],
  "created_at": "2019-06-19T09:26:05Z",
  "number": 9941,
  "state": "open",
  "title": "Feature Request - Where-Object speed improvements",
  "updated_at": "2020-08-15T04:41:33Z"
}