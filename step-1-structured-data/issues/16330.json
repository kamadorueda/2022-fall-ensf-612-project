{
  "_url": "https://github.com/PowerShell/PowerShell/issues/16330",
  "author": "kborowinski",
  "body": "### Prerequisites\n\n- [X] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\n\n### Steps to reproduce\n\n*Start-PSBootstrap* fails on PowerShell 5.1 due to use of unsupported type `[System.Management.Automation.SemanticVersion]` in *build.psm1* therefore it is not possible to build latest versions of PowerShell 7 on PowerShell 5.1 anymore.\n\n### Expected behavior\n\n```console\n*Start-PSBootstrap* should work on PowerShell 5.1\n```\n\n\n### Actual behavior\n\n```console\n*Start-PSBootstrap* throws error on PowerShell 5.1\n```\n\n\n### Error details\n\n```console\nImport-Module .\\build.psm1\r\nStart-PSBootstrap\r\nInstalling PowerShell build dependencies\r\nVERBOSE: Calling Find-Dotnet from Start-PSBootstrap\r\nVERBOSE: In Find-DotNet\r\nForEach-Object : Unable to find type [System.Management.Automation.SemanticVersion].\r\nAt D:\\DEVELOPMENT\\PowerShellCore\\build.psm1:2106 char:81\r\n+ ... *\\.\\d*)?' | ForEach-Object { [System.Management.Automation.SemanticVe ...\r\n+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : InvalidOperation: (System.Manageme...SemanticVersion:TypeName) [ForEach-Object], RuntimeException\r\n    + FullyQualifiedErrorId : TypeNotFound,Microsoft.PowerShell.Commands.ForEachObjectCommand\r\n\r\n$error[0]|fl * -force\r\n\r\n\r\nPSMessageDetails      :\r\nException             : System.Management.Automation.RuntimeException: Unable to find type [System.Management.Automation.SemanticVersion].\r\n                           at System.Management.Automation.ExceptionHandlingOps.CheckActionPreference(FunctionContext funcContext, Exception exception)\r\n                           at System.Management.Automation.Interpreter.ActionCallInstruction`2.Run(InterpretedFrame frame)\r\n                           at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.Run(InterpretedFrame frame)\r\n                           at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.Run(InterpretedFrame frame)\r\n                           at System.Management.Automation.Interpreter.Interpreter.Run(InterpretedFrame frame)\r\n                           at System.Management.Automation.Interpreter.LightLambda.RunVoid1[T0](T0 arg0)\r\n                           at System.Management.Automation.ScriptBlock.InvokeWithPipeImpl(ScriptBlockClauseToInvoke clauseToInvoke, Boolean createLocalScope, Dictionary`2 functionsToDefine, List`1\r\n                        variablesToDefine, ErrorHandlingBehavior errorHandlingBehavior, Object dollarUnder, Object input, Object scriptThis, Pipe outputPipe, InvocationInfo invocationInfo, Object[] args)\r\n                           at System.Management.Automation.ScriptBlock.<>c__DisplayClass57_0.<InvokeWithPipe>b__0()\r\n                           at System.Management.Automation.Runspaces.RunspaceBase.RunActionIfNoRunningPipelinesWithThreadCheck(Action action)\r\n                           at System.Management.Automation.ScriptBlock.InvokeWithPipe(Boolean useLocalScope, ErrorHandlingBehavior errorHandlingBehavior, Object dollarUnder, Object input, Object scriptThis,\r\n                        Pipe outputPipe, InvocationInfo invocationInfo, Boolean propagateAllExceptionsToTop, List`1 variablesToDefine, Dictionary`2 functionsToDefine, Object[] args)\r\n                           at System.Management.Automation.ScriptBlock.InvokeUsingCmdlet(Cmdlet contextCmdlet, Boolean useLocalScope, ErrorHandlingBehavior errorHandlingBehavior, Object dollarUnder, Object\r\n                        input, Object scriptThis, Object[] args)\r\n                           at Microsoft.PowerShell.Commands.ForEachObjectCommand.ProcessRecord()\r\n                           at System.Management.Automation.CommandProcessor.ProcessRecord()\r\nTargetObject          : System.Management.Automation.SemanticVersion\r\nCategoryInfo          : InvalidOperation: (System.Manageme...SemanticVersion:TypeName) [], RuntimeException\r\nFullyQualifiedErrorId : TypeNotFound\r\nErrorDetails          :\r\nInvocationInfo        : System.Management.Automation.InvocationInfo\r\nScriptStackTrace      : at <ScriptBlock>, D:\\DEVELOPMENT\\PowerShellCore\\build.psm1: line 2106\r\n                        at <ScriptBlock>, D:\\DEVELOPMENT\\PowerShellCore\\build.psm1: line 2106\r\n                        at script:Start-NativeExecution, D:\\DEVELOPMENT\\PowerShellCore\\tools\\buildCommon\\startNativeExecution.ps1: line 22\r\n                        at Get-LatestInstalledSDK, D:\\DEVELOPMENT\\PowerShellCore\\build.psm1: line 2105\r\n                        at Find-Dotnet, D:\\DEVELOPMENT\\PowerShellCore\\build.psm1: line 2259\r\n                        at Start-PSBootstrap, D:\\DEVELOPMENT\\PowerShellCore\\build.psm1: line 2054\r\n                        at <ScriptBlock>, <No file>: line 1\r\nPipelineIterationInfo : {}\n```\n\n\n### Environment data\n\n```powershell\nName                           Value\r\n----                           -----\r\nPSVersion                      5.1.19041.1237\r\nPSEdition                      Desktop\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nBuildVersion                   10.0.19041.1237\r\nCLRVersion                     4.0.30319.42000\r\nWSManStackVersion              3.0\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\n```\n\n\n### Visuals\n\n![image](https://user-images.githubusercontent.com/16168755/139390916-5cd1816c-28bb-47dd-8c8a-08c68f234815.png)\r\n",
  "closed_at": "2022-01-18T22:25:50Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Yes, it's a little inconvenient.\r\n\r\n/cc @adityapatwardhan @TravisEz13 ",
      "created_at": "2021-10-29T09:23:02Z",
      "updated_at": "2021-10-29T09:23:02Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "Personally, I think the minimum for development should be the last LTS or possibly the oldest supported LTS.  5.1 is just not viable feature wise.  rewriting this functionality in 5.1 is a duplication of effort.    I think the other option is for start-psbootstrap to tell you, move to PowerShell 7 or bootstrap manually (possibly only that portion).  But I just wrote something that will be required and requires the same semanticVersion sorting which didn't exist in 5.1.\r\n\r\nMarking for maintainer review.",
      "created_at": "2021-10-30T21:37:05Z",
      "updated_at": "2021-10-30T21:37:38Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "It was too unexpected to find that the module did not work. I personally do not ready to switch completely to pwsh in my work (there are still many places where powershell has no alternative to pwsh).",
      "created_at": "2021-10-31T06:58:13Z",
      "updated_at": "2021-10-31T06:58:13Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "adding @SteveL-MSFT ",
      "created_at": "2021-11-01T23:20:21Z",
      "updated_at": "2021-11-01T23:20:21Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-maintainers have a consensus that PowerShell 7 is stable enough to be used for development of PowerShell. It would require a lot of effort to ensure Windows PowerShell 5.1 compatibility, which we think is unnecessary. We propose to add `#requires -version 7` to build.psm1. ",
      "created_at": "2022-01-18T22:25:17Z",
      "updated_at": "2022-01-18T22:25:17Z"
    }
  ],
  "created_at": "2021-10-29T07:07:30Z",
  "number": 16330,
  "state": "closed",
  "title": "Start-PSBootstrap fails on PowerShell 5.1",
  "updated_at": "2022-01-18T22:31:55Z"
}