{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11869",
  "author": "grzegorz-wolszczak",
  "body": "\r\n\r\n# Steps to reproduce\r\n1. create file `code.ps1` with content:\r\n\r\n```\r\nRegister-EngineEvent -SourceIdentifier Powershell.Exiting -Action { \r\n    Write-Host \"Start ExitHandler\"\r\n    try{   \r\n        try{}\r\n        catch{}\r\n        finally{ }            \r\n    }\r\n    catch{\r\n        # print all exceptions (with all inner)\r\n        # code from the book \"Windows Powershell in action 3rd edition, page 534\"\r\n        $ErrorRecord = $Error[0]\r\n        $out=\"\"\r\n        $out+= $($ErrorRecord | Format-List -Property * -Force | out-string)\r\n        $out+= $($ErrorRecord.InvocationInfo | Format-List -Property * | out-string)\r\n        $Exception = $ErrorRecord.Exception\r\n        for ($depth = 0; $Exception -ne $null; $depth++)\r\n        {\r\n            $out+= $(\"$depth\" * 80)\r\n            $out+= $($Exception | Format-List -Property * -Force | out-string)\r\n            $Exception = $Exception.InnerException\r\n        }\r\n        Write-Host \"$out\"\r\n    }\r\n    Write-Host \"End ExitHandler\"\r\n}\r\nexit \r\n```\r\n2. Create second file `run_code.ps1` with content (in the same directory):\r\n```\r\npwsh \"${PsScriptRoot}/code.ps1\"\r\n```\r\n\r\n3.  run file `run_code.ps1`\r\n\r\n# Expected behavior\r\nUser should see two printed lines\r\n```\r\nStart ExitHandler\r\nEnd ExitHandler\r\n```\r\n\r\n# Actual behavior\r\nUser sees exception details similar to this:\r\n```\r\nPSMessageDetails      :\r\nException             : System.NullReferenceException: Object reference not set to an instance of an object.\r\n                           at System.Management.Automation.ExceptionHandlingOps.SuspendStoppingPipeline(ExecutionContext context)\r\n                           at System.Management.Automation.Interpreter.FuncCallInstruction`2.Run(InterpretedFrame frame)\r\n                           at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.Run(InterpretedFrame frame)\r\n                           at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.Run(InterpretedFrame frame)\r\nTargetObject          :\r\nCategoryInfo          : OperationStopped: (:) [], NullReferenceException\r\nFullyQualifiedErrorId : System.NullReferenceException\r\nErrorDetails          :\r\nInvocationInfo        : System.Management.Automation.InvocationInfo\r\nScriptStackTrace      : at <ScriptBlock>, ...\\code.ps1: line 7\r\nPipelineIterationInfo : {}\r\n\r\n\r\n\r\nMyCommand             :\r\nBoundParameters       : {}\r\nUnboundArguments      : {}\r\nScriptLineNumber      : 7\r\nOffsetInLine          : 5\r\nHistoryId             : -1\r\nScriptName            : ...\\code.ps1\r\nLine                  :     Write-Host \"Start ExitHandler\"\r\n\r\nPositionMessage       : At ...\\code.ps1:7 char:5\r\n                        +     Write-Host \"Start ExitHandler\"\r\n                        +     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nPSScriptRoot          : ...\r\nPSCommandPath         : ...\\code.ps1\r\nInvocationName        :\r\nPipelineLength        : 0\r\nPipelinePosition      : 0\r\nExpectingInput        : False\r\nCommandOrigin         : Internal\r\nDisplayScriptPosition :\r\n\r\n\r\n00000000000000000000000000000000000000000000000000000000000000000000000000000000\r\nMessage        : Object reference not set to an instance of an object.\r\nData           : {System.Management.Automation.Interpreter.InterpretedFrameInfo}\r\nInnerException :\r\nTargetSite     : Boolean SuspendStoppingPipeline(System.Management.Automation.ExecutionContext)\r\nStackTrace     :    at System.Management.Automation.ExceptionHandlingOps.SuspendStoppingPipeline(ExecutionContext context)\r\n                    at System.Management.Automation.Interpreter.FuncCallInstruction`2.Run(InterpretedFrame frame)\r\n                    at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.Run(InterpretedFrame frame)\r\n                    at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.Run(InterpretedFrame frame)\r\nHelpLink       :\r\nSource         : System.Management.Automation\r\nHResult        : -2147467261\r\n\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.2.4\r\nPSEdition                      Core\r\nGitCommitId                    6.2.4\r\nOS                             Microsoft Windows 10.0.18362\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\nThe funny thing is that if you comment out line 6 `finally{ }` the code will work.\r\nI was trying to find some more information about what kind of code can/cannot appear in Powershell.Exiting action scriptblock but did not find any restrictions etc.",
  "closed_at": "2020-02-20T19:57:01Z",
  "comments": [
    {
      "author": "grzegorz-wolszczak",
      "author_association": "NONE",
      "body": "I've proposed a Pester test to verify if this issue is fixed\r\nhttps://github.com/PowerShell/PowerShell/pull/11870#issuecomment-588066257",
      "created_at": "2020-02-19T10:07:02Z",
      "updated_at": "2020-02-19T10:11:44Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:This issue was addressed in #11870, which has now been successfully released as `v7.1.0-preview.1`.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.1.0-preview.1)\n",
      "created_at": "2020-03-26T17:47:54Z",
      "updated_at": "2020-03-26T17:47:54Z"
    }
  ],
  "created_at": "2020-02-17T22:17:32Z",
  "number": 11869,
  "state": "closed",
  "title": "Calling action scriptblock for registered Powershel.Exiting EngineEvent throws NullReferenceException if script block contains 'finally' block",
  "updated_at": "2020-03-26T17:47:54Z"
}