{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11564",
  "author": "Infionion",
  "body": "# Steps to reproduce\r\n\r\n1. Run the script below\r\n2. Login using the pop-up window\r\n3. The exception below is logged in the console\r\n\r\n```\r\ninstall-module azuread\r\nimport-module azuread\r\nConnect-AzureAD \r\n```\r\n\r\n\r\n# Expected behavior\r\nLogin succeeds and the user is able to query the AAD\r\n\r\n\r\n# Actual behavior\r\nThe following exception is thrown:\r\n_Connect-AzureAD: One or more errors occurred. (Could not load type 'System.Security.Cryptography.SHA256Cng' from assembly 'System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.): Could not load type 'System.Security.Cryptography.SHA256Cng' from assembly 'System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.\r\nConnect-AzureAD: One or more errors occurred. (Could not load type 'System.Security.Cryptography.SHA256Cng' from assembly 'System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.)\r\nConnect-AzureAD: Could not load type 'System.Security.Cryptography.SHA256Cng' from assembly 'System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.\r\nConnect-AzureAD: One or more errors occurred. (Could not load type 'System.Security.Cryptography.SHA256Cng' from assembly 'System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.): Could not load type 'System.Security.Cryptography.SHA256Cng' from assembly 'System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'._\r\n\r\n\r\n# Environment data\r\n\r\n```\r\n###### powershell-version x64 ######\r\nPS C:\\Windows\\System32> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-rc.1\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-rc.1\r\nOS                             Microsoft Windows 10.0.18362\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n###### dotnet-version ######\r\nPS C:\\Windows\\System32> dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n```\r\n# Powershell ISE with the following version works as expected:\r\n```\r\nPS C:\\WINDOWS\\system32> $PSVersionTable\r\n\r\nName                           Value                                                                                                                                                 \r\n----                           -----                                                                                                                                                 \r\nPSVersion                      5.1.18362.145                                                                                                                                         \r\nPSEdition                      Desktop                                                                                                                                               \r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}                                                                                                                               \r\nBuildVersion                   10.0.18362.145                                                                                                                                        \r\nCLRVersion                     4.0.30319.42000                                                                                                                                       \r\nWSManStackVersion              3.0                                                                                                                                                   \r\nPSRemotingProtocolVersion      2.3                                                                                                                                                   \r\nSerializationVersion           1.1.0.1    \r\n```",
  "closed_at": "2020-02-02T00:00:22Z",
  "comments": [
    {
      "author": "NPrice99",
      "author_association": "NONE",
      "body": "This worked for me on Microsoft Windows 10.0.18363 and .dotnet  version 2.1.507",
      "created_at": "2020-01-14T16:50:18Z",
      "updated_at": "2020-01-14T16:50:18Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2020-02-02T00:00:20Z",
      "updated_at": "2020-02-02T00:00:20Z"
    },
    {
      "author": "andypituch",
      "author_association": "NONE",
      "body": "This does not work for me in the released version of PS7\r\n\r\nPS D:\\> Import-Module AzureAD\r\nPS D:\\>\r\nPS D:\\>\r\nPS D:\\> Connect-AzureAD\r\nConnect-AzureAD: One or more errors occurred. (Could not load type 'System.Security.Cryptography.SHA256Cng' from assembly 'System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.): Could not load type 'System.Security.Cryptography.SHA256Cng' from assembly 'System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.\r\nConnect-AzureAD: One or more errors occurred. (Could not load type 'System.Security.Cryptography.SHA256Cng' from assembly 'System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.)\r\nConnect-AzureAD: Could not load type 'System.Security.Cryptography.SHA256Cng' from assembly 'System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.\r\nConnect-AzureAD: One or more errors occurred. (Could not load type 'System.Security.Cryptography.SHA256Cng' from assembly 'System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.): Could not load type 'System.Security.Cryptography.SHA256Cng' from assembly 'System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.\r\nPS D:\\> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0\r\nOS                             Microsoft Windows 10.0.18363\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0",
      "created_at": "2020-03-09T17:01:56Z",
      "updated_at": "2020-03-09T17:01:56Z"
    },
    {
      "author": "strykerin",
      "author_association": "NONE",
      "body": "I am having the exact same issue.",
      "created_at": "2020-04-03T20:18:24Z",
      "updated_at": "2020-04-03T20:18:24Z"
    },
    {
      "author": "alexandair",
      "author_association": "CONTRIBUTOR",
      "body": "Use Import-Module with the -UseWindowsPowerShell parameter, and you can import and use the AzureAD module in PowerShell 7.",
      "created_at": "2020-04-03T20:48:30Z",
      "updated_at": "2020-04-03T20:48:30Z"
    },
    {
      "author": "andypituch",
      "author_association": "NONE",
      "body": "That works! is it expected that any module that isn't native to PS7 will require this? I was hoping to not have to re-code all existing scripts/processes :(",
      "created_at": "2020-04-03T21:05:23Z",
      "updated_at": "2020-04-03T21:05:23Z"
    },
    {
      "author": "alexandair",
      "author_association": "CONTRIBUTOR",
      "body": "Until Azure Active Directory product group makes the AzureAD module compatible with PowerShell 7, we need to use the Windows PowerShell Compatibility feature. You can find more details at https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_windows_powershell_compatibility?view=powershell-7 \n\n<blockquote><div><strong><a href=\"https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_windows_powershell_compatibility\">about_Windows_PowerShell_Compatibility - PowerShell</a></strong></div></blockquote>",
      "created_at": "2020-04-03T21:16:00Z",
      "updated_at": "2020-04-03T21:16:02Z"
    },
    {
      "author": "andypituch",
      "author_association": "NONE",
      "body": "Thanks for the explanation. I was hopeful that the backward compatibility was a little more \"automagic\" than that, but it's OK until the modules get updated.",
      "created_at": "2020-04-03T21:19:27Z",
      "updated_at": "2020-04-03T21:19:27Z"
    },
    {
      "author": "strykerin",
      "author_association": "NONE",
      "body": "Thank you, it worked!",
      "created_at": "2020-04-06T22:55:04Z",
      "updated_at": "2020-04-06T22:55:04Z"
    },
    {
      "author": "joepaulk",
      "author_association": "NONE",
      "body": "You could instead try to use the az rest invoking the graph api.\r\n\r\nUntil the time az-cli is in par with the AzureAD powershell module you can instead use the graph api\r\n\r\n```\r\naz login --tenant <tenantname.onmicrosoft.com>\r\n$uri = \"https://graph.microsoft.com/v1.0/applications\"\r\n\r\n$allApplications = az rest `\r\n   --method GET `\r\n   --uri $uri `\r\n   --headers 'Content-Type=application/json' | convertfrom-json\r\n\r\n$allApplications.value |% {\"{0}-{1}\" -f $_.appid, $_.displayname}\r\n\r\n```\r\n\r\nI have put some samples using az rest here,\r\nhttps://github.com/joepaulk/utilities/blob/master/manage-azuread-applicationregistrations.ps1\r\n\r\nYou may also refer to: https://damienbod.com/2020/06/22/using-azure-cli-to-create-azure-app-registrations/ from where i picked up inspiration \r\n\r\nOther reference, how az rest use the accesstokens from az cli can be found here, \r\nhttps://mikhail.io/2019/07/how-azure-cli-manages-access-tokens/\r\n\n\n<blockquote><img src=\"https://avatars0.githubusercontent.com/u/10821941?s=400&v=4\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/joepaulk/utilities\">joepaulk/utilities</a></strong></div><div>code for utlities. Contribute to joepaulk/utilities development by creating an account on GitHub.</div></blockquote>\n<blockquote><img src=\"https://secure.gravatar.com/blavatar/1837914231a7a46835755b562251e0f7?s=200&ts=1604881137\" width=\"48\" align=\"right\"><div><img src=\"https://secure.gravatar.com/blavatar/1837914231a7a46835755b562251e0f7?s=32\" height=\"14\"> Software Engineering</div><div><strong><a href=\"https://damienbod.com/2020/06/22/using-azure-cli-to-create-azure-app-registrations/\">Using Azure CLI to create Azure App Registrations</a></strong></div><div>This blog shows how to setup Azure App Registrations using Azure CLI and Powershell. The scripts setup the configuration for the applications created in the previous posts in this serious. The aim \u2026</div></blockquote>\n<blockquote><img src=\"https://mikhail.io/2019/07/how-azure-cli-manages-access-tokens/teaser.png\" width=\"48\" align=\"right\"><div><strong><a href=\"https://mikhail.io/2019/07/how-azure-cli-manages-access-tokens/\">How Azure CLI Manages Your Access Tokens</a></strong></div><div>Azure CLI is a powerful tool to manage your cloud resources. Where does it store the sensitive information and why might you want to care?</div></blockquote>",
      "created_at": "2020-11-09T00:18:55Z",
      "updated_at": "2020-11-09T00:18:57Z"
    }
  ],
  "created_at": "2020-01-12T22:31:20Z",
  "labels": [
    "Issue-Question",
    "Resolution-Answered"
  ],
  "number": 11564,
  "state": "closed",
  "title": "Connect-AzureAd is not working in 7.0.0-RC1 : Could not load type 'System.Security.Cryptography.SHA256Cng'",
  "updated_at": "2020-11-09T00:18:57Z"
}