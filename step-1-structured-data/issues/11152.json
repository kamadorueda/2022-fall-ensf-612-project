{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11152",
  "author": "JustinGrote",
  "body": "@SteveL-MSFT\r\n# Summary of the new feature/enhancement\r\n\r\nVisual Studio Code will render path uris in the console that have a line and character delimiter, such that clicking them goes straight to the line and character in question\r\n`C:\\Users\\JGrote\\Projects\\MyProject\\MyFile\\Public\\MyBrokenFile.ps1:130:9`\r\n![ClickLinkDemo](https://user-images.githubusercontent.com/15258962/69389499-0e647300-0c81-11ea-8e33-b444c4d7f455.gif)\r\n\r\n\r\n# Proposed technical implementation details (optional)\r\n\r\nThis may not make sense in the core code, but provide some way that ErrorView ConciseView will detect vscode and emit an additional line (or same like with \"at:\" with the uri, so it can simply be clicked to go right to where the problem is. This would be extremely user friendly. Alternatively a new view like ConciseViewWithPath or something.\r\n\r\nAdditionally Update Get-Error to have it as a property for this. NOTE that the current normalview does include a URI like this, but the link doesn't use the \"correct\" column format, it says `At C:\\Users\\JGrote\\desktop\\Demo.ps1:5 char:12` instead of `At C:\\Users\\JGrote\\desktop\\Demo.ps1:5:12` \r\n",
  "closed_at": "2020-05-25T01:06:50Z",
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "PowerShell 7 already supports this.  See this [code](https://github.com/PowerShell/PowerShell/blob/b1e998046e12ebe5da9dee479f20d479aa2256d7/src/System.Management.Automation/FormatAndOutput/DefaultFormatters/PowerShellCore_format_ps1xml.cs#L1077)",
      "created_at": "2020-05-25T01:06:50Z",
      "updated_at": "2020-05-25T01:06:50Z"
    }
  ],
  "created_at": "2019-11-22T01:05:47Z",
  "labels": [
    "Issue-Enhancement",
    "WG-Engine",
    "Resolution-Fixed",
    "WG-Cmdlets-Utility"
  ],
  "number": 11152,
  "state": "closed",
  "title": "Get-Error/ErrorView Concise: Include VSCode Friendly Error URI?",
  "updated_at": "2020-05-25T01:06:57Z"
}