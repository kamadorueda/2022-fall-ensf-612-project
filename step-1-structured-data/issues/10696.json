{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10696",
  "author": "ChrisLGardner",
  "body": "# PR Summary\r\n\r\n## PR Context\r\n\r\nIssue #7712 wanted a `-OnlyMatching` switch to allow Select-String to only return the text that matched rather than either the full MatchInfo object (default behaviour) or the Line (`-Raw` behaviour). This is the initial implementation of that. \r\n\r\nThe issue does suggest allowing this switch to avoid the primary code path that creates the MatchInfo objects in the first place to improve performance since they aren't actually used in the output at all, I'd like to add that functionality but it's a bit beyond my abilities right now but I'll look into it and see if I can add that in either before this PR is merged or in a future PR if the team feels it's a needed improvement.\r\n\r\nI had thought to add a parameter set for this new parameter since it doesn't make sense to be able to use both `-Raw` and `-OnlyMatching` but that broke parameter binding in a way I didn't expect and wasn't able to see why it would. I can add that back in as part of this PR and try to resolve it should it be required.\r\n\r\n## PR Checklist\r\n\r\n- [X] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [X] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [x] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2021-11-11T22:00:35Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@PoshChan please retry Linux",
      "created_at": "2019-10-06T12:45:53Z",
      "updated_at": "2019-10-06T12:45:53Z"
    },
    {
      "author": "PoshChan",
      "author_association": "COLLABORATOR",
      "body": "@vexx32, successfully started retry of `PowerShell-CI-Linux`",
      "created_at": "2019-10-06T12:46:19Z",
      "updated_at": "2019-10-06T12:46:19Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "I know the `-OnlyMatching` name was specified by the committee, but it feels very _awkward_ to me in comparison to some cmdlets; `Get-ChildItem` doesn't have a `-OnlyName` switch, it's just `-Name`\r\n\r\nPersonally I feel like something along the lines of `-OnlyMatch` would be a little less out of place, or even just `-Matches` might be OK (though I'm a little wary of that, if only because it aligns too well with the `[regex]::Matches()` method, which returns full objects).\r\n\r\nWhat do you guys think, @SteveL-MSFT? \ud83d\ude42 ",
      "created_at": "2019-10-06T12:51:44Z",
      "updated_at": "2019-10-06T12:51:44Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "One other thing to implement:\r\n\r\n`-OnlyMatching` should be mutually exclusive with `-SimpleMatch`, because in the latter case the matching parts of the lines are currently not captured at all, right? At least they don't show up in the output objects.\r\n\r\nNote that, similarly, the currently permitted but pointless combination of `-SimpleMatch` and `-AllMatches` should be prevented - see #11091",
      "created_at": "2019-11-16T18:14:41Z",
      "updated_at": "2021-11-11T22:02:25Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMainainer, Please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2020-05-27T02:03:08Z",
      "updated_at": "2020-05-27T02:03:08Z"
    }
  ],
  "created_at": "2019-10-03T20:51:21Z",
  "number": 10696,
  "state": "closed",
  "title": "Select-String: Add OnlyMatching parameter to return only the actual matching value",
  "updated_at": "2021-11-11T22:02:25Z"
}