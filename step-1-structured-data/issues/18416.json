{
  "_url": "https://github.com/PowerShell/PowerShell/issues/18416",
  "author": "mklement0",
  "body": "### Prerequisites\r\n\r\n- [X] Write a descriptive title.\r\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- [X] Search the existing issues.\r\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\r\n\r\n### Steps to reproduce\r\n\r\nThis is an inconsistency that has always existed, from what I can tell.\r\nResolving it would amount to a breaking change,\r\nso the answer may be just to _document_ it.\r\nEither way, it would be good to know if there is a by-design element to this inconsistency.\r\n\r\n```powershell\r\n# For the object without a .Prop property, returns a [pscustomobject] with a .Prop property that contains $null\r\n[pscustomobject] @{ Prop=1 }, [pscustomobject] @{  } | Select-Object -Property Prop\r\n\r\n'---'\r\n\r\n# !! For the object without a .Prop property, emits a (non-terminating) ERROR, complaining that the \r\n# !! property doesn't exist.\r\n[pscustomobject] @{ Prop=1 }, [pscustomobject] @{  } | Select-Object -ExpandProperty Prop\r\n```\r\n\r\n\r\n### Expected behavior\r\n\r\n```console\r\nProp\r\n----\r\n   1\r\n       # $null value\r\n---\r\n1\r\n       # $null value\r\n```\r\n\r\n\r\n### Actual behavior\r\n\r\n```console\r\nProp\r\n----\r\n   1\r\n\r\n---\r\n1\r\nSelect-Object:\r\nLine |\r\n   8 |  \u2026 Prop=1 }, [pscustomobject] @{  } | Select-Object -ExpandProperty Prop\r\n     |                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n     | Property \"Prop\" cannot be found.\r\n```\r\n\r\n\r\n### Error details\r\n\r\n_No response_\r\n\r\n### Environment data\r\n\r\n```powershell\r\nPowerShell Core 7.3.0-rc.1\r\n```\r\n\r\n\r\n### Visuals\r\n\r\n_No response_",
  "closed_at": null,
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I think I think this is by-design.  In the first case, it's no different than `$a.foo` where `foo` doesn't exist so `$null` is returned.  In the latter case `-ExpandProperty` means to expand an existing property so it fails if it doesn't exist.  I realize that it may not be intuitive, but as you noted it would also be a breaking change.  Maybe @JamesWTruher knows the history.",
      "created_at": "2022-10-31T23:07:30Z",
      "updated_at": "2022-10-31T23:07:30Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT, to me there is no more implied intent with respect to the existence of a targeted property with `-ExpandProperty` than with `-Property`.\r\n\r\nYou can think of `$a | Select-Object -ExpandProperty Prop`  as `$a | % { $_.Prop }`, whereas `$a | Select-Object -Property Prop` is equivalent to `$a | % { [pscustomobject] @{ Prop = $_.Prop } }`.\r\n\r\nIn real-world scenarios only _some_ of the input objects may have the targeted property, and returning only _their_ (enumerated) property values (potentially _none_)  to me seems preferable than reporting an error for each input object that doesn't have that property.\r\n\r\n\r\n\r\n",
      "created_at": "2022-11-01T02:41:06Z",
      "updated_at": "2022-11-01T02:41:06Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "If the decision ends up in favor of keeping the existing behavior, the thing to document is:\r\n\r\n* With `-ExpandProperty`, if you want to _ignore_ those input objects that do not have the requested property, add `-ErrorAction Ignore`;  by contrast, if you want to _silence_ error messages _and_ later examine _which_ specific input objects didn't have the requested property, combine `-ErrorAction SilentlyContinue` with `-ErrorVariable`, and examine the `.TargetObject` property of the `[ErrorRecord]` instances stored in the target variable.\r\n",
      "created_at": "2022-11-01T02:51:08Z",
      "updated_at": "2022-11-01T02:51:08Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "This is queued for WG discussion",
      "created_at": "2022-11-02T17:21:39Z",
      "updated_at": "2022-11-02T17:21:39Z"
    }
  ],
  "created_at": "2022-10-29T13:25:47Z",
  "number": 18416,
  "state": "open",
  "title": "Select-Object: -ExpandProperty, unlike -Property, enforces the existence of the targeted property",
  "updated_at": "2022-11-02T17:21:39Z"
}