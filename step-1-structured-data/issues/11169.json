{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11169",
  "author": "renatfx",
  "body": "# Steps to reproduce\r\n\r\n```powershell\r\nPS > function test($val){\r\n>> $val | Add-Member -NotePropertyMembers @{Test=10}\r\n>> }\r\nPS > $num = 5\r\nPS > test($num)\r\nPS > $num.Test\r\n10\r\nPS > $num | Get-Member -View Extended\r\n\r\n   TypeName: System.Int32\r\nName MemberType   Definition\r\n---- ----------   ----------\r\nTest NoteProperty int Test=10\r\n```\r\n\r\n# Expected behavior\r\n\r\nFunction arguments of value types are passed by their values and any modifications to them,\r\nincluding extension of thier members by Add-Member cmdlet,  should not be seen by a caller.\r\n\r\n# Actual behavior\r\n\r\nA NoteProperty was added to the [int] variable inside the function while passing it by value.\r\n\r\n# Environment data\r\n\r\n```none\r\nPSVersion                      6.2.3\r\nPSEdition                      Core\r\nGitCommitId                    6.2.3\r\nOS                             Microsoft Windows 10.0.18362\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2020-02-02T08:21:54Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "All values in PowerShell are \"boxed\" by design.",
      "created_at": "2019-11-24T12:35:24Z",
      "updated_at": "2020-02-01T09:23:49Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "\u0421oming from its nature PowerShell cannot handle values like C# - all values are boxed by design and passed by reference. This leads to performance (memory allocations) issues. Implementing argument passing by value in scripts will only worsen this problem (We have some issues for this.). Conversely, PowerShell uses caching to reduce memory allocations.\r\n\r\nReally that we can do here - address a specific business scenario if we get it or a hot code path. But again, it will most likely be a movement in the opposite direction from what you request. (We already had such perf PRs.)\r\n\r\n/cc @daxian-dbw @SeeminglyScience @mklement0 if they want to add more.",
      "created_at": "2020-02-01T09:37:05Z",
      "updated_at": "2020-02-01T09:38:10Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "The main thing here is that the parameter `$val` is typed as `object`.  The value stored in `$num` is first boxed when it's saved as a variable.  Variables in PowerShell are implemented as `PSVariable` objects (for the most part) where the value is stored on a property `public object Value { get; }`.  Since the parameter is also typed as `object`, the boxed value is passed to the function.  If you change the parameter type to `int` it doesn't repro anymore.",
      "created_at": "2020-02-01T13:08:12Z",
      "updated_at": "2020-02-01T13:08:12Z"
    },
    {
      "author": "renatfx",
      "author_association": "NONE",
      "body": "@iSazonov @SeeminglyScience thanks, clear explantaion",
      "created_at": "2020-02-02T08:21:54Z",
      "updated_at": "2020-02-02T08:21:54Z"
    }
  ],
  "created_at": "2019-11-22T21:31:52Z",
  "number": 11169,
  "state": "closed",
  "title": "Add-Member affects variables passed by value to a function",
  "updated_at": "2020-02-02T08:21:54Z"
}