{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4947",
  "author": "markekraus",
  "body": "[brotli](https://en.wikipedia.org/wiki/Brotli) will likely become the compressed transfer encoding of choice. `Invoke-Webrequest` and `Invoke-RestMethod` should support these natively. \r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\nInvoke-WebRequest https://www.bayden.com/test/brotliimg.aspx -Headers @{'Accept-Encoding' =\r\n 'br'} -OutFile C:\\temp\\brotli.jpg\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n`C:\\temp\\brotli.jpg` should be a jpeg\r\n\r\n\r\nActual behavior\r\n---------------\r\n`C:\\temp\\brotli.jpg` is brotli compressed data.\r\n\r\nEnvironment data\r\n----------------\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.0-beta\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.0-beta.7\r\nOS                             Microsoft Windows 10.0.15063\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n```\r\n",
  "closed_at": "2022-10-04T17:12:45Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Related blog post https://blogs.msdn.microsoft.com/dotnet/2017/07/27/introducing-support-for-brotli-compression/",
      "created_at": "2017-09-29T10:55:08Z",
      "updated_at": "2017-09-29T10:55:08Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "I'm not sure if there are plans to add automated Brotli decompression to `HttpClientHandler` in CoreFX. I dug around and couldn't find anything for it. It may need to be handled after the response is returned. ",
      "created_at": "2017-09-29T13:19:19Z",
      "updated_at": "2017-09-29T13:19:38Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Could you please create Issue-Question-Request in CoreFX repo? ",
      "created_at": "2017-09-29T14:15:09Z",
      "updated_at": "2017-09-29T14:15:09Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Looks like it's coming at some time in CoreFx https://github.com/dotnet/corefx/issues/20558#issuecomment-314177535",
      "created_at": "2017-09-29T16:53:21Z",
      "updated_at": "2017-09-29T16:53:21Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Good news!\r\nQuestion is do we add the feature today by means of third-party nuget package?",
      "created_at": "2017-09-29T19:24:13Z",
      "updated_at": "2017-09-29T19:24:26Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "I'm probably the least qualified to say this, but my gut tells me it's better to wait until it is \"native\". If not due to my trust issues with compression libraries, then at least for the refactor effort. I think it makes a good 6.1.0 goal. Most hosts will probably still fallback to gzip or identity in the time it takes for this to become native which looks likely to be well before 6.1.0",
      "created_at": "2017-09-29T19:45:00Z",
      "updated_at": "2017-09-29T19:45:48Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I agree that best way is to follow CoreFX. The only question is how good to have it now.",
      "created_at": "2017-09-29T20:04:02Z",
      "updated_at": "2017-09-29T20:04:02Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "From what little I can gather, brotli doesn't have mass adoption yet and just about any site that does impliment it currently also has a gzip fallback. Running into a site that is pure brotli without at least identity fallback (outside of the scope of sites dedicated to testing brotli) are outliers. I think the convenience of having it does not trump waiting for the native solution and that will likely not lead to any negative user experience. In the outliers who require it, they can still post-process their response, so they are not without remedy, only without convenience. ",
      "created_at": "2017-09-29T20:18:52Z",
      "updated_at": "2017-09-29T20:18:52Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT Could you assign a milestone if it is approved?",
      "created_at": "2017-10-02T13:52:43Z",
      "updated_at": "2017-10-02T13:52:43Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "adding  dotnet/corefx#25785 as a reference.",
      "created_at": "2017-12-11T10:13:19Z",
      "updated_at": "2017-12-11T10:13:19Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Latest nightly w/ merged dotnetcore2.1-rc1 include System.Compression.Brotli",
      "created_at": "2018-05-05T17:13:29Z",
      "updated_at": "2018-05-05T17:13:29Z"
    },
    {
      "author": "JustinGrote",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT I'd be willing to attempt a PR as a httpclient Middleware to look for brotli compression and transparently decode it if there is interest, should be no breaking behavior ",
      "created_at": "2022-06-15T14:32:28Z",
      "updated_at": "2022-06-15T14:32:28Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Fixed in #17955",
      "created_at": "2022-10-04T17:12:38Z",
      "updated_at": "2022-10-04T17:12:38Z"
    }
  ],
  "created_at": "2017-09-29T09:03:47Z",
  "number": 4947,
  "state": "closed",
  "title": "Add support for brotli compression to Web Cmdeltes",
  "updated_at": "2022-10-04T17:12:45Z"
}