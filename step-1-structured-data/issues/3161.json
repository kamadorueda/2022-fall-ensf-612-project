{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3161",
  "author": "iSazonov",
  "body": "It turns out we have a excellent function 'ShouldBeErrorId' in\r\n'Common\\Test.Helpers.psm1'\r\n\r\nI slightly modified this function to be able to passthrow the exception\r\nresult for later analysis.\r\n\r\nI searched `throw [\",']` in test files for replacing \"No Exception!\" pattern\r\nwith 'ShouldBeErrorId'.\r\n\r\nI did not touch some files that contains their own specific version \"No\r\nException!\" pattern or contains specific tests (ex., *-Variable cmdlets\r\nwith scopes).\r\nAlso I was forced to resolve some aliases and sometimes fix formatting.\n\n<!-- Reviewable:start -->\n---\nThis change is\u2002[<img src=\"https://reviewable.io/review_button.svg\" height=\"34\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/powershell/powershell/3161)\n<!-- Reviewable:end -->\n",
  "closed_at": "2017-05-11T05:13:22Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Class tests is failed on IOS \ud83d\ude15 ",
      "created_at": "2017-02-16T11:00:56Z",
      "updated_at": "2017-02-16T11:00:56Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "restarted iOS",
      "created_at": "2017-02-17T00:52:23Z",
      "updated_at": "2017-02-17T00:52:23Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "Using reviewable because it helps me track my progress reviewing a PR.  Not done, but here are my comments so far.\n\n---\n\nReviewed 7 of 87 files at r1.\nReview status: 7 of 87 files reviewed at latest revision, 3 unresolved discussions.\n\n---\n\n*[test/powershell/Common/Test.Helpers.psm1, line 61 at r1](https://reviewable.io:443/reviews/powershell/powershell/3161#-Kd8ZPJQ28cbafNyxA9u:-Kd8ZPJQ28cbafNyxA9v:b-93xwps) ([raw file](https://github.com/powershell/powershell/blob/d9d1639b2686677f678cd202d700755320fd81a1/test/powershell/Common/Test.Helpers.psm1#L61)):*\n> ```PowerShell\n>         {\n>             & $sb | Out-Null\n>             Throw \"No Exception!\"\n> ```\n\nIs this verbose enough?\n\n---\n\n*[test/powershell/Common/Test.Helpers.psm1, line 66 at r1](https://reviewable.io:443/reviews/powershell/powershell/3161#-Kd8ZfcSqWS3UfRR74q_:-Kd8ZfcSqWS3UfRR74qa:b-mvy7z7) ([raw file](https://github.com/powershell/powershell/blob/d9d1639b2686677f678cd202d700755320fd81a1/test/powershell/Common/Test.Helpers.psm1#L66)):*\n> ```PowerShell\n>         {\n>             $_.FullyQualifiedErrorId | Should Be $FullyQualifiedErrorId | Out-Null\n>             Write-Output $PSItem\n> ```\n\nWhy are we writing an exception to the output stream?\n\n---\n\n*[test/powershell/engine/Remoting/RoleCapabilityFiles.Tests.ps1, line 60 at r1](https://reviewable.io:443/reviews/powershell/powershell/3161#-Kd8_UiwcEYee5uJdQzn:-Kd8_UiwcEYee5uJdQzo:bqsl7le) ([raw file](https://github.com/powershell/powershell/blob/d9d1639b2686677f678cd202d700755320fd81a1/test/powershell/engine/Remoting/RoleCapabilityFiles.Tests.ps1#L60)):*\n> ```PowerShell\n>             $iss = [initialsessionstate]::CreateFromSessionConfigurationFile($PSSessionConfigFile, { $true })\n>         } | ShouldBeErrorId \"PSInvalidOperationException\"\n>         $exc.Exception.InnerException.ErrorRecord.FullyQualifiedErrorId | Should Be \"InvalidRoleCapabilityFileExtension\"\n> ```\n\nshould use single quotes unless you need to expand the string (same in other locations)\n\n---\n\n\n*Comments from [Reviewable](https://reviewable.io:443/reviews/powershell/powershell/3161#-:-Kd8tZeOh2efugWXlXby:b-s7qhr4)*\n<!-- Sent from Reviewable.io -->\n",
      "created_at": "2017-02-17T02:29:28Z",
      "updated_at": "2017-02-17T02:29:28Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "It seems the Reviewable  is inconvenient to reply.\r\n\r\n> Is this verbose enough?\r\n\r\nYes, see https://github.com/PowerShell/PowerShell/pull/2973#issuecomment-272029099\r\n\r\n> Why are we writing an exception to the output stream?\r\n\r\nBefore the change we was writing true/false to the output stream. Now an exception because sometimes we should check not only FullyQualifiedErrorId but also other properties (it is used in the PR).\r\n\r\n> should use single quotes unless you need to expand the string (same in other locations)\r\n\r\nOriginal code is almost always uses double quotes and this pattern is from [our guide](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/WritingPesterTests.md) (Why do we need a guide if we do not comply with it?)\r\nI agree that the single quotes are more properly. If it will be approved, then we should change our pattern and make changes in the PR.",
      "created_at": "2017-02-17T03:20:59Z",
      "updated_at": "2017-02-17T03:20:59Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": ">>Why are we writing an exception to the output stream?\n\n>Before the change we was writing true/false to the output stream. Now an exception because sometimes we should check not only FullyQualifiedErrorId but also other properties (it is used in the PR).\n\nCan you add a comment to the code to indicate this why we are writing the error to the output stream?\n\n---\n\nReviewed 1 of 87 files at r1.\nReview status: 8 of 87 files reviewed at latest revision, 3 unresolved discussions.\n\n---\n\n\n\n*Comments from [Reviewable](https://reviewable.io:443/reviews/powershell/powershell/3161#-:-KdCqmsczf68pWB5q4nE:b-3k3muo)*\n<!-- Sent from Reviewable.io -->\n",
      "created_at": "2017-02-17T20:56:30Z",
      "updated_at": "2017-02-17T20:56:30Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "Yes, Reviewable is inconvenient to reply, unless you use reviewable.  I don't like it unless I'm reviewing a very large PR like this one.  It keeps track of this status:\r\n>Review status: 8 of 87 files reviewed at latest revision, 3 unresolved discussions. \r\nSo I know I still have 79 files to review and in the reviewable UI... which files they are.",
      "created_at": "2017-02-17T20:59:36Z",
      "updated_at": "2017-02-17T20:59:36Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@JamesWTruher From https://github.com/PowerShell/PowerShell/pull/3157#discussion_r101868141\r\n> I have a bit of a problem with this. The functionality of checking the FullyQualifiedErrorId rather than the exception message should be in Pester rather than our environment. Putting this code in our own environment does not help the community, but only increases the burden on our code maintenance.\r\n\r\nNew Pester version (V4) already has improved support for exceptions and offers a similar style. Only while it is still not ported on Unix.\r\nYou can see from this PR there is a great variety in such code, and even errors. Now we could bring all the same pattern. This code is more compact (less than 1100 lines), it is clearer and corresponds to the Pester style. The new pattern will allow us much easier to migrate to Pester V4.\r\n\r\n@TravisEz13 I added the comment about writing an exception to output.",
      "created_at": "2017-02-18T08:03:16Z",
      "updated_at": "2017-02-18T08:03:16Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@TravisEz13  Could you continue? There are too many files and we get merge conflicts often.",
      "created_at": "2017-02-28T04:48:11Z",
      "updated_at": "2017-02-28T04:48:11Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "I'm a little worried about using this function, as I won't be able to directly run `Invoke-Pester .\\CmsMessage.Tests.ps1` anymore, unless all test files that use this function explicitly import the helper module at the beginning of the file.",
      "created_at": "2017-02-28T18:24:50Z",
      "updated_at": "2017-02-28T20:29:30Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw \r\nPreferred way to run tests is to use `Start-PSPester`. Currently it compile our C# test helper tools. In the PR I added that `Test.helper.psm1` is loaded too. Later we can do the same for other test helper modules.\r\nAlso see https://github.com/PowerShell/PowerShell/pull/3161#discussion_r102573978",
      "created_at": "2017-02-28T18:44:08Z",
      "updated_at": "2017-02-28T18:44:08Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "One common workflow is to make many changes to code and a specific test (say `Foo.tests.ps1`). It's very convenient to just run `.\\Foo.tests.ps1` without `Start-PSPester` or `Invoke-Pester`.\r\n\r\nOne solution is to just import `Test.helper.psm1` in `build.psm1`.\r\nAnother is to set `$env:PSModulePath` so that `Test.helper.psm1` available for auto-loading.",
      "created_at": "2017-02-28T18:50:43Z",
      "updated_at": "2017-02-28T18:50:43Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Yes it is convenient. But we can run `Start-PSPester` once per session to configure environment.\r\n`Start-PSPester` performs some special settings. If we use it, we carry out tests in exactly the same way as CIs. \r\nI don't like the autoload because if we need to specify the path to the modules, we quickly load them all at once.\r\nWe could move the code into the `Build` module root to run when it loads but then we will have to reload the entire module if we need to apply any updates.",
      "created_at": "2017-02-28T19:17:07Z",
      "updated_at": "2017-02-28T19:17:07Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@iSazonov I think this idea needs more discussion.  It may be better to file an issue and discuss the work. Then do the work in stages to avoid having a large PR which will constantly get merge conflicts.\r\n\r\nHere is a way you break this PR up:\r\n\r\n1. Update test Helpers to new pattern\r\n2. Work needed to use pattern broadly (probably need an issue to discuss what this looks like)\r\n3. Update tests to use new pattern\r\n",
      "created_at": "2017-03-01T01:10:49Z",
      "updated_at": "2017-03-01T01:10:49Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "Per our discussion I think this PR can be closed?",
      "created_at": "2017-03-15T19:16:00Z",
      "updated_at": "2017-03-15T19:16:00Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Let's make it a little later. This will help me move the commits to new PRs.",
      "created_at": "2017-03-16T14:47:16Z",
      "updated_at": "2017-03-16T14:47:16Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "Can we close this now?",
      "created_at": "2017-05-10T22:53:05Z",
      "updated_at": "2017-05-10T22:53:05Z"
    }
  ],
  "created_at": "2017-02-16T06:39:35Z",
  "number": 3161,
  "state": "closed",
  "title": "Move test \"No Exception!\" pattern to 'ShouldBeErrorId'",
  "updated_at": "2020-05-27T20:44:04Z"
}