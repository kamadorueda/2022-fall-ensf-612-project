{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9079",
  "author": "daxian-dbw",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nUpdate the task-based async APIs added to PowerShell to not use the aysnc/await keywords, but to return a Task object directly.\r\nThere is nothing to continue on after the `Task.Factory.FromAsync` call in those methods, so there is not need to use `aysnc` and `await` keywords, which turns the method into a state machine class.\r\n\r\nThe behavior of the API is slightly different comparing with before this change.\r\nBut **note** that, the behavior when calling the async APIs with `await` is the same -- exception will be thrown at `await`.\r\n\r\n#### Before this change:\r\nCalling `InvokeAsync()` without `await` will always return a task even if the `BeginInvoke` call, which gets evaluated before calling `FromAsync`, throws an exception.\r\nThis is because with `async/await`, this method is written by compiler with a state machine, where all exceptions are caught can passed to the task that is going to be returned.\r\n\r\n#### After this change:\r\nCalling `InvokeAsync()` without `await` will throw exception if the `BeginInovke` call throws exception. So it fails early.\r\n\r\n/cc @KirkMunro\r\n\r\n## PR Context\r\n\r\n<!-- Provide a little reasoning as to why this Pull Request helps and why you have opened it. -->\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [ ] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [ ] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n        - [ ] [Add `[feature]` to your commit messages if the change is significant or affects feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\r\n",
  "closed_at": "2019-03-07T19:24:32Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw With the PR we get a possibility to use the methods in scripts, yes? So we need to update related doc issue.",
      "created_at": "2019-03-07T03:46:43Z",
      "updated_at": "2019-03-07T03:46:43Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Scripts can use those new async APIs. They are tested in Pester. APIs are documented by its xml doc comments, right? I guess nothing needs to be done in the powershell-doc repo. @adityapatwardhan can you please confirm?",
      "created_at": "2019-03-07T04:51:43Z",
      "updated_at": "2019-03-07T05:07:30Z"
    }
  ],
  "created_at": "2019-03-06T18:39:39Z",
  "number": 9079,
  "state": "closed",
  "title": "Update the task-based async APIs added to PowerShell to return a Task object directly",
  "updated_at": "2019-03-07T19:27:40Z"
}