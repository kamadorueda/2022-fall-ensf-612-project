{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12040",
  "author": "sheldonhull",
  "body": "- [x] Make sure you are able to repro it on the [latest released version]: `7.0.0`\r\n- [x] Search the existing issues. \r\n- [x]  Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- [x]  Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n\r\n# Steps to reproduce\r\n\r\nUpgraded powershell from powershell.exe prompt to avoid conflicts to `7.0.0`. Rebooted to avoid this issue being environment scoped.\r\n\r\n```powershell\r\nchoco upgrade powershell-core\r\n```\r\n\r\n```powershell\r\nGet-InstalledModule powershellget\r\n# OR\r\nImport-Module PowershellGet\r\n```\r\n\r\n# Expected behavior\r\n\r\nReturn the module without error.\r\n\r\n# Actual behavior\r\n\r\n```none\r\nInvalidOperation: C:\\Users\\USERNAME\\Documents\\WindowsPowerShell\\Modules\\PowerShellGet\\2.2.1\\PSModule.psm1:327 \r\nLine |  327 |      $NoMatchFound = $LocalizedData.NoMatchFound     \r\n~~~~~~~~~~~~~~\r\n| The variable '$LocalizedData' cannot be retrieved because it has not been set.\r\n```\r\n\r\nWhen trying to import `powershellget` i've also found the error a little more specific: \r\n\r\n```none\r\nImport-LocalizedData: C:\\Users\\USERNAME\\Documents\\WindowsPowerShell\\Modules\\Powershellget\\2.2.1\\PSModule.psm1:1\r\nLine |\r\n   1 |  Import-LocalizedData LocalizedData -filename PSGet.Resource.psd1\r\n     |  ~~~~~~~~~~~~~~~~~~~~\r\n     | The 'Import-LocalizedData' command was found in the module\r\n     | 'Microsoft.PowerShell.Utility', but the module could not be loaded. For more\r\n     | information, run ....\r\n```\r\n\r\nTrying to run the suggested command `Import-Module Microsoft.Powershell.utility` and I get the following: \r\n\r\n```none\r\nImport-Module: Failed to generate proxies for remote module 'Microsoft.PowerShell.Utility'. The 'Export-PSSession' command was found in the module 'Microsoft.PowerShell.Utility', but the module could not be loaded. For more information, run 'Import-Module Microsoft.PowerShell.Utility'.\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0\r\nOS                             Microsoft Windows 10.0.18363\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\n\r\n\r\n\r\n",
  "closed_at": "2020-03-24T12:00:12Z",
  "comments": [
    {
      "author": "anmenaga",
      "author_association": "CONTRIBUTOR",
      "body": "Looks like version `2.2.1` of `PowerShellGet` is not the latest one and installed in WindowsPowerShell module path; So I would first try to install the latest one from `pwsh` by\r\n`Install-Module -Name PowerShellGet -MinimumVersion 2.2.3 -Repository PSGallery`\r\nthen start a fresh `pwsh` 7.0.0 from desktop (as opposed to 'from other pwsh' or 'from powershell.exe') and do the `Import-Module PowershellGet`.",
      "created_at": "2020-03-06T01:22:38Z",
      "updated_at": "2020-03-06T01:22:38Z"
    },
    {
      "author": "sheldonhull",
      "author_association": "NONE",
      "body": "This helped point me in the right direction. I figured it might be a conflict with versions. Here's what failed\r\n\r\n```\r\n$PSModulePath = @(\r\n\"$ENV:USERPROFILE\\Documents\\WindowsPowerShell\\Modules\"\r\n,'C:\\ProgramData\\Boxstarter'\r\n,'C:\\Program Files\\WindowsPowerShell\\Modules'\r\n,'C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\Modules'\r\n,'C:\\Program Files (x86)\\Red Gate\\SQL Change Automation PowerShell\\Modules'\r\n,\"$ENV:USERPROFILE\\Documents\\WindowsPowerShell\\modules\"\r\n,'C:\\Program Files\\PowerShell\\Modules'\r\n,'c:\\Program Files\\powershell\\7\\Modules'\r\n,\"$ENV:USERPROFILE\\Documents\\PowerShell\\Modules\"\r\n)\r\n$ENV:PSModulePath = $PSModulePath -join ';'\r\n\r\n\r\nImport-Module PowerShellGet\r\n```\r\n\r\nThen I moved to `powershell/7/Modules` above the other path and it correctly ran like below: \r\n\r\n```powershell\r\n$PSModulePath = @(\r\n\"$ENV:USERPROFILE\\Documents\\WindowsPowerShell\\Modules\"\r\n,'C:\\ProgramData\\Boxstarter'\r\n,'C:\\Program Files\\WindowsPowerShell\\Modules'\r\n,'C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\Modules'\r\n,'C:\\Program Files (x86)\\Red Gate\\SQL Change Automation PowerShell\\Modules'\r\n,\"$ENV:USERPROFILE\\Documents\\WindowsPowerShell\\modules\"\r\n,'c:\\Program Files\\powershell\\7\\Modules'\r\n,'C:\\Program Files\\PowerShell\\Modules'\r\n,\"$ENV:USERPROFILE\\Documents\\PowerShell\\Modules\"\r\n)\r\n$ENV:PSModulePath = $PSModulePath -join ';'\r\n\r\nImport-Module PowerShellGet\r\n```\r\n\r\n\r\nThis leads me to two main questions for those of us who have been using windows + core and not upgraded to 7. \r\n\r\n1. Are both of these folders used in 7? Is it something to do with compatibility?\r\n   'c:\\Program Files\\powershell\\7\\Modules'\r\n   'C:\\Program Files\\PowerShell\\Modules'\r\n\r\n2. Do I need to distribute now some ranked psmodule path hierarchy to force certain ordering of psmodule path to avoid this type of error in the future?\r\n",
      "created_at": "2020-03-06T17:03:15Z",
      "updated_at": "2020-03-06T17:03:15Z"
    },
    {
      "author": "anmenaga",
      "author_association": "CONTRIBUTOR",
      "body": "@sheldonhull What looks suspicious to me is that WindowsPS paths precede CorePS paths.\r\nIs the order of paths in those arrays exactly like `$ENV:PSModulePath` value when a fresh `pwsh` is started?\r\n\r\n`c:\\Program Files\\powershell\\7\\Modules` - is probably the install location of PS Core,",
      "created_at": "2020-03-06T19:55:18Z",
      "updated_at": "2020-03-06T19:55:18Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "PS7 puts the PS7 User path for modules ahead of the Windows PowerShell User path.  @sheldonhull are you explicitly setting PSModulePath in your Profile or somewhere else?",
      "created_at": "2020-03-06T19:59:12Z",
      "updated_at": "2020-03-06T19:59:12Z"
    },
    {
      "author": "sheldonhull",
      "author_association": "NONE",
      "body": "@SteveL-MSFT  I don't remember doing that, but I just edited to help solve that issue. Should I remove any entries or any type of prevention/fix I can apply in the future? ",
      "created_at": "2020-03-07T03:12:10Z",
      "updated_at": "2020-03-07T03:12:10Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@sheldonhull hard to say without understanding what your specific use case is, but for most users, I would expect they don't mess with PSModulePath directly and so this shouldn't be a problem.",
      "created_at": "2020-03-18T18:22:52Z",
      "updated_at": "2020-03-18T18:22:52Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2020-03-24T12:00:11Z",
      "updated_at": "2020-03-24T12:00:11Z"
    }
  ],
  "created_at": "2020-03-05T22:21:35Z",
  "labels": [
    "Issue-Question",
    "Resolution-Answered"
  ],
  "number": 12040,
  "state": "closed",
  "title": "When I upgrade to Powershell 7.0.0 I'm unable to load powershellget and get errors pointing to importing Microsoft.Powershell.utility",
  "updated_at": "2020-03-24T12:00:12Z"
}