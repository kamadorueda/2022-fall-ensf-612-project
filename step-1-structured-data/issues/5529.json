{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5529",
  "author": "bergmeister",
  "body": "Add the following VS Code settings to have a more consistent `PowerShell` style already at the PR stage. It is mainly based on the [K&R/OTBS](https://github.com/PoshCode/PowerShellPracticeAndStyle/issues/81#issuecomment-285835313) style, which basically means braces are on the same line and that else, catch, and other keywords are \"cuddled\" (e.g. `} else {`)\r\nPersonally I'd prefer rather the [Stroustrup](https://github.com/PoshCode/PowerShellPracticeAndStyle/issues/81#issuecomment-285835361) style where there is no \"cuddling\" but I have seen that the `K&R/OTBS` is used more often in the codebase.\r\n\r\n````\r\n  // Sets the codeformatting options to follow the given indent style in a way that is compatible with PowerShell syntax. For more information about the brace styles please refer to https://github.com/PoshCode/PowerShellPracticeAndStyle/issues/81.\r\n  \"powershell.codeFormatting.preset\": \"OTBS\",\r\n  \r\n  // Adds a space between a keyword and its associated scriptblock expression.\r\n  \"powershell.codeFormatting.whitespaceBeforeOpenBrace\": true,\r\n  \r\n  // Adds a space between a keyword (if, elseif, while, switch, etc) and its associated conditional expression.\r\n  \"powershell.codeFormatting.whitespaceBeforeOpenParen\": true,\r\n  \r\n  // Adds spaces before and after an operator ('=', '+', '-', etc.).\r\n  \"powershell.codeFormatting.whitespaceAroundOperator\": true,\r\n  \r\n  // Adds a space after a separator (',' and ';').\r\n  \"powershell.codeFormatting.whitespaceAfterSeparator\": true\r\n````",
  "closed_at": "2017-11-28T17:09:33Z",
  "comments": [
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "When I last touched that file I considered adding these settings but I noticed that the PowerShell script in this repo is not terribly consistent style-wise.  I like the idea of it being more consistent but this PR would make it easier for folks using VSCode to mix semantic changes with style changes.  \r\n\r\nI wonder if it would be better to just take the \"styling\" hit once and make all the script files conform to this style setup?",
      "created_at": "2017-11-23T05:30:16Z",
      "updated_at": "2017-11-23T05:31:32Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "One could apply the styling to the files since VSCode has the `Ctrl+K+F` shortcut for that. But this is certainly a decision and probably action that the PowerShell team has to make.",
      "created_at": "2017-11-23T08:08:44Z",
      "updated_at": "2017-11-23T08:09:13Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I'm fine with the proposed setting changes.  We can apply the style universally after GA.",
      "created_at": "2017-11-27T22:50:51Z",
      "updated_at": "2017-11-27T22:50:51Z"
    }
  ],
  "created_at": "2017-11-22T22:17:53Z",
  "number": 5529,
  "state": "closed",
  "title": "Add PowerShell VSCode style settings",
  "updated_at": "2017-11-29T00:05:10Z"
}