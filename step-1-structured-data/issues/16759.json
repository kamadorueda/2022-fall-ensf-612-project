{
  "_url": "https://github.com/PowerShell/PowerShell/issues/16759",
  "author": "marmar1020",
  "body": "### Prerequisites\n\n- [X] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\n\n### Steps to reproduce\n\nHello All,\r\n\r\nI am experiencing a error when writing csv data to an sql table with PowerShell.  The data will start to write and display an increasing percentage but it will stop abruptly and return:\r\n\r\nWrite-SqlTableData:\r\nLine |\r\n  21 |  Write-SqlTableData -InputData $b -DatabaseName DATABASE -TableName  \u2026\r\n     |  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n     | Timeout expired.  The timeout period elapsed prior to completion of the operation or the server is not responding.\r\n\r\nThe csv is just under 1,000,000 rows.\r\n\n\n### Expected behavior\n\n```console\nI am using the connection below:\r\n\r\n$ServerName = \"SERVER\"\r\n$DatabaseName = \"DATABASE\"\r\n$Query = \"\"\r\n$QueryTimeout = 0\r\n$ConnectionTimeout = 0\r\n$conn=New-Object System.Data.SqlClient.SQLConnection\r\n$ConnectionString = \"Server={0};Database={1};Integrated Security=True;Connect Timeout={2}\" -f $ServerName,$DatabaseName,$ConnectionTimeout\r\n$conn.ConnectionString=$ConnectionString\r\n$conn.Open()\r\n$cmd=New-Object system.Data.SqlClient.SqlCommand($Query,$conn)\r\n$cmd.CommandTimeout=$QueryTimeout\r\n$ds=New-Object system.Data.DataSet\r\nClear-Host;\r\n$da=New-Object system.Data.SqlClient.SqlDataAdapter($cmd)\r\n[void]$da.fill($ds)\r\n$conn.Close()\r\n\r\nBoth $QueryTimeout = 0 and $ConnectionTimeout = 0 are set to zero. Also, SSMS Execution time out is set to zero.\n```\n\n\n### Actual behavior\n\n```console\nIt will attempt to write the csv file but will end up producing error: Write-SqlTableData : Execution Timeout Expired.  The timeout period elapsed prior to completion of the operation or the server is not responding.\n```\n\n\n### Error details\n\n```console\nException             :\r\n    Type               : System.Data.SqlClient.SqlException\r\n    Errors             :\r\n        Source  : Core .Net SqlClient Data Provider\r\n        Number  : -2\r\n        Class   : 11\r\n        Server  : enxlprosqld1\r\n        Message : Timeout expired.  The timeout period elapsed prior to completion of the operation or the server is not responding.\r\n    ClientConnectionId : dee4fde0-806d-48e5-bb45-8908d78e7642\r\n    Class              : 11\r\n    Number             : -2\r\n    Server             : SERVER\r\n    Source             : Core .Net SqlClient Data Provider\r\n    ErrorCode          : -2146232060\r\n    TargetSite         :\r\n        Name          : OnError\r\n        DeclaringType : System.Data.SqlClient.SqlConnection\r\n        MemberType    : Method\r\n        Module        : System.Data.SqlClient.dll\r\n    Message            : Timeout expired.  The timeout period elapsed prior to completion of the operation or the server is not responding.\r\n    Data               : System.Collections.ListDictionaryInternal\r\n    InnerException     :\r\n        Type            : System.ComponentModel.Win32Exception\r\n        NativeErrorCode : 258\r\n        ErrorCode       : -2147467259\r\n        Message         : The wait operation timed out.\r\n        HResult         : -2147467259\r\n    HResult            : -2146232060\r\n    StackTrace         :\r\n   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at System.Data.SqlClient.TdsParserStateObject.WriteSni(Boolean canAccumulate)\r\n   at System.Data.SqlClient.TdsParserStateObject.WritePacket(Byte flushMode, Boolean canAccumulate)\r\n   at System.Data.SqlClient.TdsParserStateObject.WriteBytes(ReadOnlySpan`1 b, Int32 len, Int32 offsetBuffer, Boolean canAccumulate, TaskCompletionSource`1 completion,\r\nByte[] array)\r\n   at System.Data.SqlClient.TdsParser.WriteUnterminatedValue(Object value, MetaType type, Byte scale, Int32 actualLength, Int32 encodingByteSize, Int32 offset,\r\nTdsParserStateObject stateObj, Int32 paramSize, Boolean isDataFeed)\r\n   at System.Data.SqlClient.TdsParser.WriteBulkCopyValue(Object value, SqlMetaDataPriv metadata, TdsParserStateObject stateObj, Boolean isSqlType, Boolean isDataFeed,\r\nBoolean isNull)\r\n   at System.Data.SqlClient.SqlBulkCopy.ReadWriteColumnValueAsync(Int32 col)\r\n   at System.Data.SqlClient.SqlBulkCopy.CopyColumnsAsync(Int32 col, TaskCompletionSource`1 source)\r\n   at System.Data.SqlClient.SqlBulkCopy.CopyRowsAsync(Int32 rowsSoFar, Int32 totalRows, CancellationToken cts, TaskCompletionSource`1 source)\r\n   at System.Data.SqlClient.SqlBulkCopy.CopyBatchesAsyncContinued(BulkCopySimpleResultSet internalResults, String updateBulkCommandText, CancellationToken cts,\r\nTaskCompletionSource`1 source)\r\n   at System.Data.SqlClient.SqlBulkCopy.CopyBatchesAsync(BulkCopySimpleResultSet internalResults, String updateBulkCommandText, CancellationToken cts,\r\nTaskCompletionSource`1 source)\r\n   at System.Data.SqlClient.SqlBulkCopy.WriteToServerInternalRestContinuedAsync(BulkCopySimpleResultSet internalResults, CancellationToken cts, TaskCompletionSource`1\r\nsource)\r\n   at System.Data.SqlClient.SqlBulkCopy.WriteToServerInternalRestAsync(CancellationToken cts, TaskCompletionSource`1 source)\r\n   at System.Data.SqlClient.SqlBulkCopy.WriteToServerInternalAsync(CancellationToken ctoken)\r\n   at System.Data.SqlClient.SqlBulkCopy.WriteRowSourceToServerAsync(Int32 columnCount, CancellationToken ctoken)\r\n   at System.Data.SqlClient.SqlBulkCopy.WriteToServer(DataTable table, DataRowState rowState)\r\n   at System.Data.SqlClient.SqlBulkCopy.WriteToServer(DataTable table)\r\n   at Microsoft.SqlServer.Management.PowerShell.WriteSqlTableData.ProcessTarget(Table table, SmoRecordContext context)\r\nTargetObject          : [dbo].[TABLE]\r\nCategoryInfo          : WriteError: ([dbo].[TABLE]:Table) [Write-SqlTableData], SqlException\r\nFullyQualifiedErrorId : WriteToTableFailure,Microsoft.SqlServer.Management.PowerShell.WriteSqlTableData\r\nInvocationInfo        :\r\n    MyCommand        : Write-SqlTableData\r\n    ScriptLineNumber : 21\r\n    OffsetInLine     : 1\r\n    HistoryId        : 1\r\n    Line             : Write-SqlTableData -InputData $b -DatabaseName DATABASE -TableName TABLE -ServerInstance SERVER -SchemaName dbo\r\n    PositionMessage  : At line:21 char:1\r\n                       + Write-SqlTableData -InputData $b -DatabaseName DATABASE -TableName  \u2026\r\n                       + ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    InvocationName   : Write-SqlTableData\r\n    CommandOrigin    : Internal\r\nScriptStackTrace      : at <ScriptBlock>, <No file>: line 21\r\nPipelineIterationInfo :\n```\n\n\n### Environment data\n\n```powershell\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.1\r\nPSEdition                      Core\r\nGitCommitId                    7.2.1\r\nOS                             Microsoft Windows 10.0.18363\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\nPSVersion                      7.2.1\r\nPSEdition                      Core\r\nGitCommitId                    7.2.1\r\nOS                             Microsoft Windows 10.0.18363\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\n```\n\n\n### Visuals\n\n_No response_",
  "closed_at": "2022-01-17T05:20:58Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "The cmdlet is not in the repository. Please use other channels to discuss/report the issue.",
      "created_at": "2022-01-16T18:08:03Z",
      "updated_at": "2022-01-16T18:08:03Z"
    },
    {
      "author": "marmar1020",
      "author_association": "NONE",
      "body": "ISazonov, thanks for the follow up. Can you elaborate on \"The cmdlet is not in the repository\". I was able to use the Write-SqlTableData cmdlet with other SQL Server tables, without a time out issue.\n\nMy apologies, but can someone point me to another channel. I followed the guide and was prompted to post here.\n\nThanks,",
      "created_at": "2022-01-16T21:26:32Z",
      "updated_at": "2022-01-16T21:26:32Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> Can you elaborate on \"The cmdlet is not in the repository\"\r\n\r\nThe repository is for pwsh developers and contains PowerShell Engine and some builtin modules.\r\nMost of PowerShell modules is not in the repository and supported other (MSFT or community) teams.\r\n\r\nToday you can find a lot of MSFT and community forums/chats and so on where you can discuss any PowerShell related issues. https://github.com/PowerShell/PowerShell#chat\n\n<blockquote><img src=\"https://repository-images.githubusercontent.com/49609581/aad0ad80-cdec-11ea-8248-a37bc0571bfd\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/PowerShell/PowerShell\">GitHub - PowerShell/PowerShell: PowerShell for every system!</a></strong></div><div>PowerShell for every system! Contribute to PowerShell/PowerShell development by creating an account on GitHub.</div></blockquote>",
      "created_at": "2022-01-17T03:26:33Z",
      "updated_at": "2022-01-17T03:26:35Z"
    },
    {
      "author": "marmar1020",
      "author_association": "NONE",
      "body": "Thank you for the clarification!",
      "created_at": "2022-01-17T05:20:53Z",
      "updated_at": "2022-01-17T05:20:53Z"
    }
  ],
  "created_at": "2022-01-16T14:34:54Z",
  "number": 16759,
  "state": "closed",
  "title": "PowerShell Write-SqlTableData : Execution Timeout Expired",
  "updated_at": "2022-01-17T05:21:01Z"
}