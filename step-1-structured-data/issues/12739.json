{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12739",
  "author": "asklar",
  "body": "# Steps to reproduce\r\nCreate an app package in Visual Studio (e.g. build a UWP app, Publish app package)\r\nThen in powershell 7, run the generated `install.ps1`\r\nThe script expects there to be a powershell.exe in the $PSHome directory:\r\n\r\n![image](https://user-images.githubusercontent.com/22989529/82483137-c6d26e80-9a8c-11ea-8b8e-4f672b09899f.png)\r\n\r\n# Expected behavior\r\nI can install the app in PWSH 7\r\n\r\n# Actual behavior\r\n`Install.ps1` breaks because there is no `powershell.exe` in `$PSHome`\r\n\r\n# Environment data\r\n\r\n```\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.1\r\nPSEdition                      Core\r\nGitCommitId                    7.0.1\r\nOS                             Microsoft Windows 10.0.19631\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```none\r\n\r\n```\r\n",
  "closed_at": "2020-05-22T12:00:11Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "I don't think the PowerShell team are the ones writing the install scripts for an app package coming out of Visual Studio. You'll most likely have to get the VS folks to update whatever script generator they're using to account for pwsh as well.",
      "created_at": "2020-05-20T18:43:44Z",
      "updated_at": "2020-05-20T18:43:44Z"
    },
    {
      "author": "asklar",
      "author_association": "NONE",
      "body": "@vexx32 The PS team isn't writing the scripts. However the fact that the EXE name change is a break in appcompat, so this should still be addressed by PS by providing a shim/symlink to pwsh that already existing apps can use.",
      "created_at": "2020-05-20T18:50:04Z",
      "updated_at": "2020-05-20T18:50:04Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Not possible, I'm afraid. This was discussed way back before the initial 6.0 release and the pwsh.exe name has been kept since.\r\n\r\nThere are many applications that may be reliant on `powershell.exe` being specifically Windows PowerShell, and it's for this reason that the name was changed in the first place.\r\n\r\nIn fact, the only reason this specific script fails is that it's trying to call `powershell.exe` relative to `$PSHome`, which as far as I'm aware is not recommended; had they simply called `powershell.exe` from the `PATH` as the vast majority of applications do, it would work as-is.\r\n\r\nIf we added a shim to `powershell.exe` all the other apps trying to use `powershell.exe` and expecting Windows PowerShell may end up breaking, including some Windows components expecting Windows builtin modules that may not yet be compatible with powershell 7. The side-by-side install design is deliberate, and for many folks, necessary.",
      "created_at": "2020-05-20T19:25:55Z",
      "updated_at": "2020-05-20T19:26:47Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "If VS generates the script you should send the feedback to VS team.",
      "created_at": "2020-05-21T05:16:06Z",
      "updated_at": "2020-05-21T05:16:06Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2020-05-22T12:00:10Z",
      "updated_at": "2020-05-22T12:00:10Z"
    },
    {
      "author": "MSLukeWest",
      "author_association": "NONE",
      "body": "I'm the owner of this script, and I'm planning to instead get the PowerShell.exe path using \"(Get-Process -Id $PID).Path\".  This works with PS7 and protects against the unlikely case that the powershell path has somehow been removed from %path%.  @vexx32 - Do you see any reason why this wouldn't work?",
      "created_at": "2020-05-27T22:59:49Z",
      "updated_at": "2020-05-27T22:59:49Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "That sounds like a pretty reasonable solution, yeah. Can't think of anything that should fall apart on, really. \ud83d\ude42 ",
      "created_at": "2020-05-27T23:11:50Z",
      "updated_at": "2020-05-27T23:11:50Z"
    },
    {
      "author": "asklar",
      "author_association": "NONE",
      "body": "linking dev community ticket: https://developercommunity.visualstudio.com/content/problem/1041840/generated-app-package-does-not-install-inside-pwsh.html\n\n<blockquote><img src=\"/themes/thub/images/favicon.ico\" width=\"48\" align=\"right\"><div><strong><a href=\"https://developercommunity.visualstudio.com/content/problem/1041840/generated-app-package-does-not-install-inside-pwsh.html\">Generated App package does not install inside PWSH 7 - Developer Community</a></strong></div><div>Developer Community for Visual Studio Product family</div></blockquote>",
      "created_at": "2020-05-28T00:48:15Z",
      "updated_at": "2020-05-28T00:48:17Z"
    }
  ],
  "created_at": "2020-05-20T18:27:32Z",
  "number": 12739,
  "state": "closed",
  "title": "Can't install app packages in PWSH 7",
  "updated_at": "2020-05-28T00:48:17Z"
}