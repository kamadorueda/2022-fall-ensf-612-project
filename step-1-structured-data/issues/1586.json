{
  "_url": "https://github.com/PowerShell/PowerShell/issues/1586",
  "author": "Jaykul",
  "body": "In PowerShell in Bash on Ubuntu on Windows ...\n## Steps to reproduce\n1. Up Arrow -- produces \"A\"\n2. Remove-Module PSReadLine\n3. Up Arrow\n4. Up Arrow # will produce \"Aborted (core dumped)\"\n## Expected behavior\n\nUp Arrow should navigate through history.\n## Actual behavior\n\nUp Arrow types \"A\" or crashes PowerShell.\n## Environment data\n\n``` powershell\n> $PSVersionTable\n\nName                           Value\n----                           -----\nPSVersion                      5.1.10032.0\nPSEdition                      PowerShellCore\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\nBuildVersion                   3.0.0.0\nGitCommitId                    v6.0.0-alpha.7\nCLRVersion\nWSManStackVersion              3.0\nPSRemotingProtocolVersion      2.3\nSerializationVersion           1.1.0.1\n\n```\n",
  "closed_at": "2017-03-04T19:15:19Z",
  "comments": [
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "We shouldn't crash, but don't expect good command line editing if you remove PSReadline on *nix systems.\n",
      "created_at": "2016-08-01T15:32:12Z",
      "updated_at": "2016-08-01T15:32:12Z"
    },
    {
      "author": "Jaykul",
      "author_association": "CONTRIBUTOR",
      "body": "Yeah, I only removed it because the arrow buttons were resulting in \"A\" \"B\" \"C\" \"D\" being inserted, and because of #1088 ... I figured it couldn't hurt to try and see. I was wrong ;-)\n",
      "created_at": "2016-08-01T17:23:10Z",
      "updated_at": "2016-08-01T17:23:10Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "@Jaykul we've had a lot of problems with not exactly correct `TERM` settings, as `System.Console` is a very new library on Linux, and so doesn't fallback well. \n\nSo to get down to the bottom of this, can you give me this information:\n\nFirst I want to know for sure the key code being sent.\n\n``` sh\nsudo showkey\n< uparrow>\n< enter >\n< ctrl-c >\n```\n\nOn my machine this shows me:\n\n``` sh\nsudo showkey\nkb mode was UNICODE\n[ if you are trying this under X, it might not work\nsince the X server is also reading /dev/console ]\n\npress any key (program terminates 10s after last keypress)...\n^[[A\n^Ccaught signal 2, cleaning up...\n```\n\nSo my up arrow is sending the key code `^[` (escape) `[A` (and I imagine this is true for you; if it's not then things are very strange).\n\nNext I want to see what your terminfo entry is for your current term, so translate `^[` into `\\E` (escape in another form) and do this:\n\n``` sh\ninfocmp -L1 | grep -F '\\E[A'\n```\n\nIf all is well, it should report `key_up=\\E[A` which `System.Console` should be interpreting correctly (as this is essentially all .NET does). If it's not `key_up` then we've found that your `TERM` isn't quite right; if it is `key_up` then it would seem something is wrong with `System.Console`.\n\nI'm also curious what this gives in PowerShell:\n\n``` powershell\n[Console]::ReadKey()\n< up arrow >\n```\n\nIf everything is working right it'll be:\n\n```\nKeyChar     Key Modifiers\n-------     --- ---------\n       UpArrow         0\n```\n\nP.S. I agree with @lzybkr, it shouldn't crash. When < up arrow > is interpreted right, and PSReadLine is disabled, we simply discard it. PowerShell is definitely not receiving a `ConsoleKeyInfo` up arrow. I just don't yet know where it's gone wrong.\n",
      "created_at": "2016-08-01T23:33:35Z",
      "updated_at": "2016-08-01T23:33:35Z"
    },
    {
      "author": "Jaykul",
      "author_association": "CONTRIBUTOR",
      "body": "This is in (Bash on) Ubuntu on Windows...\n\n```\nroot@DUO:~# sudo showkey\nCouldn't get a file descriptor referring to the console\n```\n\nWhen I tried with `[Console]::ReadKey()` or `$host.UI.RawUI.ReadKey() | Format-Table * -Force -Auto` ... I'm getting VirtualKeyCode 27, Key \"Escape\" ...\n",
      "created_at": "2016-08-02T05:57:02Z",
      "updated_at": "2016-08-02T05:57:02Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "By Ubuntu on Windows, you mean WSL (as in, not a VM)?\n\nIf so, I'm surprised it's worked at all this far :smile:\n",
      "created_at": "2016-08-02T06:15:23Z",
      "updated_at": "2016-08-02T06:15:23Z"
    },
    {
      "author": "jdhitsolutions",
      "author_association": "COLLABORATOR",
      "body": "If I remove PSReadline in a CentOS VM, up arrow doesn't crash anything. But I do lose tab completion. I'm assuming this means that PSReadline will practically be a requirement for Linux?\n",
      "created_at": "2016-08-03T14:42:34Z",
      "updated_at": "2016-08-03T14:42:34Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "@jdhitsolutions - yes, the minimal viable (e.g. has tab completion, history) command line editing experience is really provided by PSReadline.\n\nUnlike Windows, Linux doesn't provide an API for command line editing, that's really up to an application.  GNU readline is the most widely used library, which PSReadline emulates and extends to more friendly to PowerShell and Windows, so it's not too valuable to add support for other command line editing libraries.\n",
      "created_at": "2016-08-03T16:08:53Z",
      "updated_at": "2016-08-03T16:08:53Z"
    },
    {
      "author": "Jaykul",
      "author_association": "CONTRIBUTOR",
      "body": "Yeah, @andschwa, WSL. Should I call it that, in the future? \ud83d\ude15 \n\nAnyway, it does _not_ work very well at all, but yes, this crash is only there.\n",
      "created_at": "2016-08-03T18:56:53Z",
      "updated_at": "2016-08-03T18:56:53Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "@Jaykul For WSL issues, especially for .NET Core on WSL, we should follow up with [BashOnWindows](https://github.com/Microsoft/BashOnWindows).\n",
      "created_at": "2016-08-24T19:26:03Z",
      "updated_at": "2016-08-24T19:26:03Z"
    },
    {
      "author": "rhino-corey",
      "author_association": "NONE",
      "body": "Was the issue with arrow keys typed into bash ever resolved? It's happening for me in Powershell 5.1 when shell'd into a docker container. Is there a continuation of this issue somewhere else?",
      "created_at": "2018-02-27T14:33:40Z",
      "updated_at": "2018-02-27T14:33:40Z"
    }
  ],
  "created_at": "2016-08-01T05:45:34Z",
  "labels": [
    "WG-Interactive-PSReadLine",
    "WG-Interactive-Console",
    "OS-WSL",
    "Resolution-External"
  ],
  "number": 1586,
  "state": "closed",
  "title": "Up-Arrow crashes PowerShell (without PSReadLine)",
  "updated_at": "2018-02-27T14:33:40Z"
}