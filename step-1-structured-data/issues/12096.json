{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12096",
  "author": "p0W3RH311",
  "body": "```\r\nPS > $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0\r\nOS                             Microsoft Windows 6.3.9600\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\nPS > new-item ./foobar.tmp\r\n\r\n\r\n    Directory: ....\r\n\r\nMode                 LastWriteTime         Length Name\r\n----                 -------------         ------ ----\r\n-a---           3/10/2020 12:20 PM              0 foobar.tmp\r\n\r\nPS > $v = get-item ./foobar.tmp\r\nPS > Remove-Item ./foobar.tmp\r\nPS > $v.Encrypt()\r\nMethodInvocationException: Exception calling \"Encrypt\" with \"0\" argument(s): \"Could not find file 'foobar.tmp'.\"\r\nPS > ${v}?.Encrypt()\r\nMethodInvocationException: Exception calling \"Encrypt\" with \"0\" argument(s): \"Could not find file 'foobar.tmp'.\"\r\n```\r\n\r\n\r\nexpected result:\r\n\r\n```\r\nPS > ${v}?.Encrypt()\r\n# no error\r\n```",
  "closed_at": "2020-03-14T17:35:04Z",
  "comments": [
    {
      "author": "p0W3RH311",
      "author_association": "NONE",
      "body": "same bug with \r\n```\r\n\r\n$calc = $null\r\n$calc = start-process -FilePath calc -PassThru\r\n$calc.Kill()\r\n$calc.Dispose()\r\n$calc.Start()\r\nMethodInvocationException: Exception calling \"Start\" with \"0\" argument(s): \"Cannot access a disposed object.\r\nObject name: 'Process'.\"\r\n${calc}?.Start()\r\nMethodInvocationException: Exception calling \"Start\" with \"0\" argument(s): \"Cannot access a disposed object.\r\nObject name: 'Process'.\"\r\n```",
      "created_at": "2020-03-10T19:42:59Z",
      "updated_at": "2020-03-10T19:43:51Z"
    },
    {
      "author": "jhoneill",
      "author_association": "NONE",
      "body": "This is correct and expected behavior. The objects are not null or empty, and have the required method so it gets called.  Process objects don't become null when the process terminates. Files don't become null  when deleted. Etc. ",
      "created_at": "2020-03-10T20:50:22Z",
      "updated_at": "2020-03-10T20:50:22Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Yep. The guard that `?.` creates guards only against whether the variable or property you're conditionally accessing is null. If calling that method generates some other error, the operator is not going to silence it.",
      "created_at": "2020-03-10T23:15:33Z",
      "updated_at": "2020-03-10T23:15:33Z"
    }
  ],
  "created_at": "2020-03-10T19:25:04Z",
  "labels": [
    "Issue-Question",
    "Resolution-Answered"
  ],
  "number": 12096,
  "state": "closed",
  "title": "bug with null access member operator",
  "updated_at": "2020-03-14T17:35:04Z"
}