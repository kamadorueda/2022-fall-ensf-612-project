{
  "_url": "https://github.com/PowerShell/PowerShell/issues/17434",
  "author": "jberkers42",
  "body": "### Prerequisites\n\n- [X] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\n\n### Steps to reproduce\n\nSince upgrading to PowerShell 7.2.4 from 7.2.3 we are encountering an issue with some Invoke-RestMethod calls.\r\n\r\nWhen `Invoke-RestMethod` is called with a Headers parameter containing **Content-Type** and a **-SkipHeaderValidation** parameter, the Content-Type Header is stripped from the request.\r\n\r\nIn previous versions (7.2.3) this was not the case.\r\n\r\nWhen adding the **-ContentType** parameter to the `Invoke-RestMethod` call in 7.2.4, the request returns the expected response.\n\n### Expected behavior\n\n```console\nPS> $DdHeaders = @{}\r\nPS> $DdHeaders.Add('Authorization',('Bearer {0}' -f $LrtConfig.LogRhythm.ApiKey.GetNetworkCredential().Password))\r\nPS> $DdHeaders.Add('Content-Type','application/json')\r\nPS> $DdUri = '{0}/lr-drilldown-cache-api/drilldown/8863182' -f $LrtConfig.LogRhythm.BaseUrl\r\nPS> $response = Invoke-RestMethod -Uri $DdUri -Headers $DdHeaders -Method 'GET' -SkipHeaderValidation -SkipCertificateCheck -Verbose -Debug\r\nVERBOSE: GET with 0-byte payload\r\nVERBOSE: received -byte response of content type application/json\r\nVERBOSE: Content encoding: utf-8\n```\n\n\n### Actual behavior\n\n```console\nPS> $DdHeaders = @{}\r\nPS> $DdHeaders.Add('Authorization',('Bearer {0}' -f $LrtConfig.LogRhythm.ApiKey.GetNetworkCredential().Password))\r\nPS> $DdHeaders.Add('Content-Type','application/json')\r\nPS> $DdUri = '{0}/lr-drilldown-cache-api/drilldown/8863182' -f $LrtConfig.LogRhythm.BaseUrl\r\nPS> $response = Invoke-RestMethod -Uri $DdUri -Headers $DdHeaders -Method 'GET' -SkipHeaderValidation -SkipCertificateCheck -Verbose -Debug\r\nVERBOSE: GET with 0-byte payload\r\nVERBOSE: received -byte response of content type application/json\r\nInvoke-RestMethod: {\"source\":\"lr-api-gateway\",\"statusCode\":504,\"serviceName\":\"lr-drilldown-cache-api\",\"message\":\"The request to the upstream 'lr-drilldown-cache-api' timed out.\",\"details\":\"Error: socket hang up\\n    at createHangUpError (_http_client.js:331:15)\\n    at Socket.socketCloseListener (_http_client.js:363:23)\\n    at emitOne (events.js:121:20)\\n    at Socket.emit (events.js:211:7)\\n    at TCP._handle.close [as _onclose] (net.js:567:12)\"}\n```\n\n\n### Error details\n\n```console\nPS> Get-Error\r\nException             :\r\n    Type       : Microsoft.PowerShell.Commands.HttpResponseException\r\n    Response   : StatusCode: 504, ReasonPhrase: 'Gateway Timeout', Version: 1.1, Content:\r\nSystem.Net.Http.HttpConnectionResponseContent, Headers:\r\n                 {\r\n                 Strict-Transport-Security: max-age=31536000; includeSubDomains\r\n                 X-XSS-Protection: 1; mode=block\r\n                 X-Content-Type-Options: nosniff\r\n                 X-Frame-Options: SAMEORIGIN\r\n                 Content-Security-Policy: script-src 'self'\r\n                 Date: Wed, 25 May 2022 04:18:18 GMT\r\n                 Connection: keep-alive\r\n                 Transfer-Encoding: chunked\r\n                 Content-Type: application/json\r\n                 }\r\n    TargetSite :\r\n        Name          : ThrowTerminatingError\r\n        DeclaringType : System.Management.Automation.MshCommandRuntime, System.Management.Automation,\r\nVersion=7.2.4.500, Culture=neutral, PublicKeyToken=31bf3856ad364e35\r\n        MemberType    : Method\r\n        Module        : System.Management.Automation.dll\r\n    Message    : Response status code does not indicate success: 504 (Gateway Timeout).\r\n    Source     : System.Management.Automation\r\n    HResult    : -2146233088\r\n    StackTrace :\r\n   at System.Management.Automation.MshCommandRuntime.ThrowTerminatingError(ErrorRecord errorRecord)\r\nTargetObject          : Method: GET, RequestUri:\r\n'https://vhppmdr.dhsoc.ipsec.net.au:8501/lr-drilldown-cache-api/drilldown/614619', Version: 1.1, Content: <null>,\r\nHeaders:\r\n                        {\r\n                        Authorization: Bearer #obfuscated#\r\n                        User-Agent: Mozilla/5.0\r\n                        User-Agent: (Windows NT 10.0; Microsoft Windows 10.0.14393; en-AU)\r\n                        User-Agent: PowerShell/7.2.4\r\n                        }\r\nCategoryInfo          : InvalidOperation: (Method: GET, Reques\u2026PowerShell/7.2.4\r\n                        }:HttpRequestMessage) [Invoke-RestMethod], HttpResponseException\r\nFullyQualifiedErrorId : WebCmdletWebResponseException,Microsoft.PowerShell.Commands.InvokeRestMethodCommand\r\nErrorDetails          :\r\n{\"source\":\"lr-api-gateway\",\"statusCode\":504,\"serviceName\":\"lr-drilldown-cache-api\",\"message\":\"The request to the\r\nupstream 'lr-drilldown-cache-api' timed out.\",\"details\":\"Error: socket hang up\\n    at createHangUpError\r\n(_http_client.js:331:15)\\n    at Socket.socketCloseListener (_http_client.js:363:23)\\n    at emitOne\r\n(events.js:121:20)\\n    at Socket.emit (events.js:211:7)\\n    at TCP._handle.close [as _onclose] (net.js:567:12)\"}\r\nInvocationInfo        :\r\n    MyCommand        : Invoke-RestMethod\r\n    ScriptLineNumber : 1\r\n    OffsetInLine     : 13\r\n    HistoryId        : 49\r\n    Line             : $response = Invoke-RestMethod -Uri $DdUri -Headers $DdHeaders -Method 'GET'\r\n-SkipCertificateCheck -Verbose -Debug -SkipHeaderValidation\r\n    PositionMessage  : At line:1 char:13\r\n                       + $response = Invoke-RestMethod -Uri $DdUri -Headers $DdHeaders -Method \u2026\r\n                       +             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    InvocationName   : Invoke-RestMethod\r\n    CommandOrigin    : Internal\r\nScriptStackTrace      : at <ScriptBlock>, <No file>: line 1\n```\n\n\n### Environment data\n\n```powershell\nPS> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.4\r\nPSEdition                      Core\r\nGitCommitId                    7.2.4\r\nOS                             Microsoft Windows 10.0.14393\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\n```\n\n\n### Visuals\n\nNot Provided",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@jberkers42 Could you please point an public site we could use to reproduce the issue with?",
      "created_at": "2022-05-25T05:11:05Z",
      "updated_at": "2022-05-25T05:11:05Z"
    },
    {
      "author": "jberkers42",
      "author_association": "NONE",
      "body": "@iSazonov I'll see what I can find.  The specific application we are encountering this with is not exposed to the public Internet, and requires a valid Bearer token for authentication.",
      "created_at": "2022-05-25T05:21:11Z",
      "updated_at": "2022-05-25T05:21:11Z"
    },
    {
      "author": "jberkers42",
      "author_association": "NONE",
      "body": "@iSazonov There is a public site at [httpbin.org](https://httpbing.org) with a test web page at [RestTestTest](https://resttesttest.com/) that can be used to simulate REST requests and validate what is received.\r\n\r\nI have just tested from a Mac as well:\r\n\r\n## PowerShell 7.2.3\r\n\r\n```\r\nPS> $PsVersionTable\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.3\r\nPSEdition                      Core\r\nGitCommitId                    7.2.3\r\nOS                             Darwin 21.4.0 Darwin Kernel Version 21.4.0: Fri Mar 18 00:45:05 PDT 2022; root:xnu-8020.101.4~15/RELEASE_X86_64\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\nPS> $Headers = @{}\r\nPS> $Headers.Add('Content-Type','application/json')\r\nPS> $response = Invoke-RestMethod -Uri $TestUri -Headers $Headers -Verbose -SkipHeaderValidation\r\nVERBOSE: GET with 0-byte payload\r\nVERBOSE: received 452-byte response of content type application/json\r\nVERBOSE: Content encoding: utf-8\r\nPS> $response.headers\r\n\r\nContent-Length  : 0\r\nContent-Type    : application/json\r\nHost            : httpbin.org\r\nUser-Agent      : Mozilla/5.0 (Macintosh; Darwin 21.4.0 Darwin Kernel Version 21.4.0: Fri Mar 18 00:45:05 PDT 2022; root:xnu-8020.101.4~15/RELEASE_X86_64; en-GB) PowerShell/7.2.3\r\nX-Amzn-Trace-Id : Root=1-628dc175-17c33fa26e5fe7936519c890\r\n```\r\n\r\n## PowerShell 7.2.4\r\n\r\n```\r\nPS>$psversiontable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.4\r\nPSEdition                      Core\r\nGitCommitId                    7.2.4\r\nOS                             Darwin 21.4.0 Darwin Kernel Version 21.4.0: Fri Mar 18 00:45:05 PDT 2022; root:xnu-8020.101.4~15/RELEASE_X86_64\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\nPS> $Headers = @{}\r\nPS> $Headers.Add('Content-Type','application/json')\r\nPS> $response = Invoke-RestMethod -Uri $TestUri -Headers $Headers -Verbose -SkipHeaderValidation\r\nVERBOSE: GET with 0-byte payload\r\nVERBOSE: received 383-byte response of content type application/json\r\nVERBOSE: Content encoding: utf-8\r\nPS> > $response.headers                                                                           \r\n\r\nHost        User-Agent                                                                                                                                                       X-Amzn-Trace-Id\r\n----        ----------                                                                                                                                                       ---------------\r\nhttpbin.org Mozilla/5.0 (Macintosh; Darwin 21.4.0 Darwin Kernel Version 21.4.0: Fri Mar 18 00:45:05 PDT 2022; root:xnu-8020.101.4~15/RELEASE_X86_64; en-GB) PowerShell/7.2.4 Root=1-628dc458-393be3cd1d064af72af5d66f\r\n```\r\n\r\nHopefully this will assist you with testing also.",
      "created_at": "2022-05-25T05:54:42Z",
      "updated_at": "2022-05-25T05:54:42Z"
    },
    {
      "author": "jberkers42",
      "author_association": "NONE",
      "body": "Also, FWIW, when supplying the **-ContentType** argument we get the following behaviour:\r\n\r\n```\r\nPS> $response = Invoke-RestMethod -Uri $TestUri -Verbose -SkipHeaderValidation -ContentType $Headers.'Content-Type'\r\nVERBOSE: GET with 0-byte payload\r\nVERBOSE: received 452-byte response of content type application/json\r\nVERBOSE: Content encoding: utf-8\r\nPS /Users/jberkers> $response.headers                                                                                              \r\n\r\nContent-Length  : 0\r\nContent-Type    : application/json\r\nHost            : httpbin.org\r\nUser-Agent      : Mozilla/5.0 (Macintosh; Darwin 21.4.0 Darwin Kernel Version 21.4.0: Fri Mar 18 00:45:05 PDT 2022; root:xnu-8020.101.4~15/RELEASE_X86_64; en-GB) PowerShell/7.2.4\r\nX-Amzn-Trace-Id : Root=1-628dc73c-5d46de286d51aa7150f8b4fb\r\n```",
      "created_at": "2022-05-25T06:07:20Z",
      "updated_at": "2022-05-25T06:07:20Z"
    }
  ],
  "created_at": "2022-05-25T04:59:29Z",
  "number": 17434,
  "state": "open",
  "title": "Invoke-RestMethod strips Content-Type Header from supplied Headers with -SkipHeaderValidation",
  "updated_at": "2022-05-25T06:07:20Z"
}