{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11931",
  "author": "jasonmull",
  "body": "When running a script to obtain the hashes of all files in a given directory, PS 7.0.0-rc.3 will terminate the command when it comes across a corrupt file.  In PS 5.1, the same command will throw an error but continue generating hashes of additional files.  The script I;m using to test is \r\n```powershell\r\nget-childitem h:\\ -Recurse -Force -File | Get-FileHash\r\n```\r\nIn either version of Powershell, I get the error below.  The only difference is that the script continues processing in 5.1 and terminates in 7.  \r\n\r\n> Get-FileHash: The file or directory is corrupted and unreadable. : 'H:\\Intel\\gp\\profile.dat'",
  "closed_at": "2020-03-13T16:10:20Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "It is \"by-design\" for cmdlets processing single file to write a terminating error.",
      "created_at": "2020-02-23T07:18:18Z",
      "updated_at": "2020-02-23T07:18:18Z"
    },
    {
      "author": "msftrncs",
      "author_association": "CONTRIBUTOR",
      "body": "@jasonmull, it sounds like your $ErrorPreference might be set differently between 5.1 and 7?\r\n\r\nYou might try deliberately specifying the error action of 'continue' with the Get-FileHash cmdlet. \r\n\r\nI don't think there is supposed to be any difference between 5.1 and 7 as long as all preferences are set the same.",
      "created_at": "2020-02-23T08:10:52Z",
      "updated_at": "2020-02-23T08:10:52Z"
    },
    {
      "author": "jasonmull",
      "author_association": "NONE",
      "body": "> It is \"by-design\" for cmdlets processing single file to write a terminating error.\r\n\r\nThis command is not processing a single file.  It is running against an entire directory.  In 7, it terminates on this file, but in 5.1, it errors and continues.\r\n\r\n> @jasonmull, it sounds like your $ErrorPreference might be set differently between 5.1 and 7?\r\n> \r\n> You might try deliberately specifying the error action of 'continue' with the Get-FileHash cmdlet.\r\n> \r\n> I don't think there is supposed to be any difference between 5.1 and 7 as long as all preferences are set the same.\r\n\r\nI've verified that $ErrorActionPreference is set to Continue in both instances and I've manually defined that action in the script.  No change.",
      "created_at": "2020-02-23T12:45:36Z",
      "updated_at": "2020-02-23T12:47:30Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "* In WinPS, `Get-FileHash` is a _function_ that caught _any_ exception in its `process` block and reported it as a _non-terminating_ error.\r\n\r\n* For PS Core, `Get-FileHash` was re-implemented as a _cmdlet_ (by @iSazonov, I believe :), and it currently catches only two specific exceptions, the one at hand _not_ being among them, which explains the effectively statement-terminating error (uncaught exception).\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/697dc5b37149d0dd98c34c33a87c833a23fe467e/src/Microsoft.PowerShell.Commands.Utility/commands/utility/GetHash.cs#L127-L163\r\n\r\nSounds like all that is needed is to add a catch-all `catch` branch.\r\n\r\n",
      "created_at": "2020-02-23T17:18:55Z",
      "updated_at": "2020-02-23T18:20:59Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "PR is pulled but I don't know that causes the exception to add a test.",
      "created_at": "2020-02-24T18:45:14Z",
      "updated_at": "2020-02-24T18:45:14Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:This issue was addressed in #11944, which has now been successfully released as `v7.1.0-preview.1`.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.1.0-preview.1)\n",
      "created_at": "2020-03-26T17:48:18Z",
      "updated_at": "2020-03-26T17:48:18Z"
    }
  ],
  "created_at": "2020-02-23T01:27:18Z",
  "number": 11931,
  "state": "closed",
  "title": "Get-FileHash Terminates at Corrupt File",
  "updated_at": "2020-03-26T17:48:19Z"
}