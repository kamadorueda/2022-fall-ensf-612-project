{
  "_url": "https://github.com/PowerShell/PowerShell/issues/8051",
  "author": "powercode",
  "body": "Getting the hardlink flag takes about 25% of the time to display a fileinfo when doing ls.\r\n\r\nIs it really that important? Could it be made optional, or hidden behind some option?\r\n\r\n\r\n",
  "closed_at": "2019-09-30T23:56:03Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Do p/invoke so slow? On Windows only or on Unix-s too?",
      "created_at": "2018-10-17T13:33:36Z",
      "updated_at": "2018-10-17T13:34:06Z"
    },
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "I guess windows only.\r\nThe slowness comes from having to reopen each file to get the hardlink count. The rest of the information is available in the FileInfo object. \r\n\r\nFor the hardlink, we need to call `CreateFile` (slow) to get a handle, and then use it to get the handle info (fast).\r\n\r\ncmd.exe doesn't do this. It shows link types when there is a reparse-point. We could display when there is a reparse point, and ignore hardlinks.\r\n",
      "created_at": "2018-10-17T14:09:10Z",
      "updated_at": "2018-10-17T14:09:10Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> The slowness comes from having to reopen each file to get the hardlink count\r\n\r\nI wonder that is so slow. In the [topic](https://social.msdn.microsoft.com/Forums/windowsdesktop/en-US/2f2fc25b-6dd3-43ec-850c-c6ca6b428455/how-to-detect-a-hard-link-while-scanning-files?forum=windowssdk) I see \" In testing, it slowed down our processing from 240ms for 21000 files, to 750ms. \"",
      "created_at": "2018-10-17T15:20:42Z",
      "updated_at": "2018-10-17T15:20:42Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> We could display when there is a reparse point, and ignore hardlinks.\r\n\r\nAgree. But it looks as a breaking change and also we need a way to expose the information by demand (new switch?)",
      "created_at": "2018-10-17T15:23:03Z",
      "updated_at": "2018-10-17T15:23:03Z"
    },
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "I'm not sure it is a breaking change. If I recall correctly, formatting is explicitly not a part of the public contract. ",
      "created_at": "2018-10-17T16:43:57Z",
      "updated_at": "2018-10-17T16:43:57Z"
    },
    {
      "author": "jborean93",
      "author_association": "COLLABORATOR",
      "body": "> cmd.exe doesn't do this. It shows link types when there is a reparse-point. We could display when there is a reparse point, and ignore hardlinks.\r\n\r\nIIRC a hard link isn't set as a reparse point so having a check on that won't work. I'm unsure as to the speed but you can use [FindFirstFileName](https://docs.microsoft.com/en-us/windows/desktop/api/fileapi/nf-fileapi-findfirstfilenamew) and [FindNextFileName](https://docs.microsoft.com/en-us/windows/desktop/api/fileapi/nf-fileapi-findnextfilenamew) to enumerate all hard links on a file without calling `CreateFile`. As for what that does internally I have no idea.",
      "created_at": "2018-10-17T23:00:26Z",
      "updated_at": "2018-10-17T23:00:26Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Seems two fields is affected - LinkType and Mode.\r\n",
      "created_at": "2018-10-18T03:49:27Z",
      "updated_at": "2018-10-18T03:49:27Z"
    },
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "The problem is the extra roundtrips to disc, since we don't get enough information from the FileInfo. And going from a FileInfo to a filehandle, which is needed to get the the hardlink count, is expensive on windows.\r\n\r\nI argue that this info is so rarely needed that paying the price all the time is not motivated.\r\n\r\nHere's some pointers to the relevant docs for people interested in looking deeper:\r\n\r\nDesc| Comment \r\n-----|-----\r\n[GetFileInformationByHandleEx](https://docs.microsoft.com/en-us/windows/desktop/api/winbase/nf-winbase-getfileinformationbyhandleex)| The API to get extended file info\r\n[FILE_INFO_BY_HANDLE_CLASS enumeration](https://msdn.microsoft.com/en-us/8f02e824-ca41-48c1-a5e8-5b12d81886b5)|Enum to select info to retrieve\r\n[_FILE_STANDARD_INFO structure](https://docs.microsoft.com/sv-se/windows/desktop/api/winbase/ns-winbase-_file_standard_info)| The struct for getting the hardlink count\r\n[System.IO](https://github.com/dotnet/corefx/tree/master/src/System.IO.FileSystem/src/System/IO)| Source code for .net FileInfo etc\r\n[Interop definitions in corefx](https://github.com/dotnet/corefx/tree/a10890f4ffe0fadf090c922578ba0e606ebdd16c/src/Common/src/Interop/Windows/kernel32)| Structs etc used by the framework to get the data from the file system.\r\n\r\n",
      "created_at": "2018-10-18T06:59:15Z",
      "updated_at": "2018-10-18T06:59:15Z"
    },
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov I'm not that concerned about the LinkType as it isn't displayed by default. \r\nI'm starting to think that the right solution is just to change the default formatting. We can keep the current as a non-default view.\r\n\r\n",
      "created_at": "2018-10-18T07:04:15Z",
      "updated_at": "2018-10-18T07:04:15Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@powercode Remove mode from default view? I'd vote to follow cmd.exe behavior (exclude hardlynk from the mode)",
      "created_at": "2018-10-18T07:14:41Z",
      "updated_at": "2018-10-18T07:14:41Z"
    },
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "I'm fine with that too.",
      "created_at": "2018-10-18T09:04:26Z",
      "updated_at": "2018-10-18T09:04:26Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT Can you confirm the change?",
      "created_at": "2018-10-18T10:41:27Z",
      "updated_at": "2018-10-18T10:41:27Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "Will `-Force` \"force\" the display of this info?  I do have some hardlinks that I'd link to see what they're targeting.",
      "created_at": "2018-10-18T15:32:12Z",
      "updated_at": "2018-10-18T15:32:12Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Get-ChildItem's `-Force` flag is primarily for displaying hidden or system files. I'd be inclined to think... probably not. I believe there was discussion of a separate switch to enable querying this information?",
      "created_at": "2018-10-18T15:49:55Z",
      "updated_at": "2018-10-18T15:49:55Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I'd consider -IncludeHardLinks for Get-Item and Get-ChildrenItem.",
      "created_at": "2018-10-19T03:51:12Z",
      "updated_at": "2018-10-19T03:51:12Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I would be ok with removing hardlinks by default.  A dynamic param for FileSystemProvider may be an ok solution.",
      "created_at": "2018-10-19T05:14:38Z",
      "updated_at": "2018-10-19T05:14:38Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee reviewed this and is ok with not having hardlinks in the default view, consider having a different view that would provide it",
      "created_at": "2018-10-24T23:03:56Z",
      "updated_at": "2018-10-24T23:04:31Z"
    },
    {
      "author": "henrivdr",
      "author_association": "NONE",
      "body": "I agree with @iSazonov on a seperate switch like -IncludeHardLinks or a generic -IncludeLinks since it also needs to adjust the Process Token Privilege on Windows to get the proper LinkType and Target info, per invocation. See #7127",
      "created_at": "2019-09-30T20:57:51Z",
      "updated_at": "2019-09-30T20:57:51Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "This is already fixed by #8789",
      "created_at": "2019-09-30T23:56:03Z",
      "updated_at": "2019-09-30T23:56:03Z"
    }
  ],
  "created_at": "2018-10-16T16:16:25Z",
  "labels": [
    "WG-Engine-Performance",
    "Issue-Discussion",
    "Resolution-Fixed",
    "Committee-Reviewed"
  ],
  "number": 8051,
  "state": "closed",
  "title": "Is hardlinks really that important that they need to be in the Mode for fileinfo?",
  "updated_at": "2019-09-30T23:56:03Z"
}