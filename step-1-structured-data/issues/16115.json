{
  "_url": "https://github.com/PowerShell/PowerShell/issues/16115",
  "author": "psmolkin",
  "body": "### Summary of the new feature / enhancement\n\nSome examples with pipes using `tar.exe` and `wsl.exe`\r\n\r\nPSVersion    7.1.4\r\n\r\n1. Untar and pipe to `wsl.exe`\r\n    ```pwsh\r\n    Measure-Command {\r\n      tar.exe -xf .\\Fedora-Container-Minimal-Base-34-1.2.x86_64.tar -O acd0933ef68b42e175d6f6a7d968dc418d7acbb48cf08926b5b109f3699cc368/layer.tar  | \r\n      wsl.exe --import fed c:\\WSL\\fed -\r\n      }  | select -exp TotalSeconds ; wsl --unregister fed\r\n    ```\r\n    Output disappointing...\r\n    >```pwsh\r\n    >14,0322798\r\n    >Unregistering...\r\n    >```\r\n\r\n1. Now retrying to pass as an array entry:\r\n    ```pwsh\r\n    Measure-Command {\r\n      ,(tar.exe -xf .\\Fedora-Container-Minimal-Base-34-1.2.x86_64.tar -O acd0933ef68b42e175d6f6a7d968dc418d7acbb48cf08926b5b109f3699cc368/layer.tar)  | \r\n      wsl.exe --import fed c:\\WSL\\fed -\r\n      }  | select -exp TotalSeconds ; wsl --unregister fed\r\n    ```\r\n    the result is better\r\n    >```pwsh\r\n    >8,0986971\r\n    >Unregistering...\r\n    >```\r\n1. But compare to `cmd.exe`\r\n    ```pwsh\r\n    Measure-Command {\r\n      cmd.exe /c 'tar.exe -xf Fedora-Container-Minimal-Base-34-1.2.x86_64.tar -O acd0933ef68b42e175d6f6a7d968dc418d7acbb48cf08926b5b109f3699cc368/layer.tar | wsl.exe --import fed c:\\WSL\\fed -'\r\n    }  | select -exp TotalSeconds ; wsl --unregister fed\r\n    ```\r\n    Wow!\r\n    >```pwsh\r\n    >0,534397\r\n    >Unregistering...\r\n    >```\r\n\r\nEven using \"array hack\" the performance between cmd and ps pipes is uncomparable.\r\n\r\n## Bonustrack\r\nThe same using WSL Interop\r\n```bash\r\ntime bash -c 'tar -xf ./Fedora-Container-Minimal-Base-34-1.2.x86_64.tar -O acd0933ef68b42e175d6f6a7d968dc418d7acbb48cf08926b5b109f3699cc368/layer.tar  | wsl.exe --import fed \"c:\\WSL\\fed\" -'; wsl.exe --unregister fed\r\n```\r\n\ud83d\ude2c\r\n>\r\n>\r\n>_**real    0m1.809s**_\r\n>user    0m0.060s\r\n>sys 0m0.712s\r\n>Unregistering...\r\n\r\n\n\n### Proposed technical implementation details (optional)\n\n_No response_",
  "closed_at": "2021-09-18T05:00:37Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "/cc @rjmholt it seems you have a PR for the scenario?",
      "created_at": "2021-09-16T17:01:35Z",
      "updated_at": "2021-09-16T17:01:35Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": ">  it seems you have a PR for the scenario?\r\n\r\nStill a WIP\r\n\r\n> pipelines are still underperforming\r\n\r\nThis feels like an existing issue &mdash; it should probably be a comment on an already open issue.",
      "created_at": "2021-09-16T18:26:23Z",
      "updated_at": "2021-09-16T18:26:23Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Dup #1908",
      "created_at": "2021-09-17T02:59:50Z",
      "updated_at": "2021-09-17T02:59:50Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as duplicate and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2021-09-18T05:00:36Z",
      "updated_at": "2021-09-18T05:00:36Z"
    }
  ],
  "created_at": "2021-09-16T16:33:09Z",
  "number": 16115,
  "state": "closed",
  "title": "Powershell pipelines are still underperforming",
  "updated_at": "2021-09-18T05:00:37Z"
}