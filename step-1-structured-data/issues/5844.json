{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5844",
  "author": "pcgeek86",
  "body": "It would be really awesome if PowerShell developers could do something like this ...\r\n\r\n```\r\n$Params = @{\r\n  FirstName = 'Trevor'\r\n  LastName = 'Sullivan'\r\n}\r\n'Hello, my name is {FirstName} {LastName}.' -f @Params\r\n```\r\n\r\nResult:\r\n\r\n```\r\nHello, my name is Trevor Sullivan.\r\n```\r\n\r\n### Option 1: Add a `-fs` operator\r\n\r\nThe new `-fs` operator would be short for \"*format with splatting*.\" When used, PowerShell would look for a single HashTable on the right-hand side of the operator, and substitute the values with the appropriate, named placeholders in the string.\r\n\r\n### Option 2: Your Ideas?\r\n\r\n... this is just a quick idea. If anyone else has input on how this functionality could be implemented, or if it would even be useful, I'd love to hear it! What do you guys think?\r\n\r\nPeople seem to like the benefits of .NET string formatting, but it can become unwieldy quickly, if there are lots of parameters on the right-hand side of the `-f` operator. This proposal to support \"**splatting with .NET string formatting**\" would make the syntax a bit more manageable.",
  "closed_at": null,
  "comments": [
    {
      "author": "KevinMarquette",
      "author_association": "CONTRIBUTOR",
      "body": "I like this idea quite a bit. I would not even complain if it became a parameter\r\n\r\n    'Hello, my name is {FirstName} {LastName}.' -f -hashtable $Params",
      "created_at": "2018-01-10T20:51:45Z",
      "updated_at": "2018-01-10T20:51:45Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "See https://github.com/PowerShell/PowerShell-RFC/issues/6 for other splatting ideas.\r\n\r\nA new operator might not be necessary - `$fmtString -f @expr` is already an error, so new semantics can be defined.\r\n\r\nThings to think about:\r\n\r\n* Should you allow splatting of multiple hashtables like `$fmtString -f @h1,@h2`? If so, what how would you support mixing, e.g. `\"{0} is {Thing}\" -f $x,@y` or `\"{0} is {Thing}\" -f @y,$x`\r\n* What about .Net formatting, e.g. `\"Memory Read: {Address,10:x8} -f @@{Address = $something}`",
      "created_at": "2018-01-10T21:58:03Z",
      "updated_at": "2018-01-10T21:58:03Z"
    },
    {
      "author": "Jaykul",
      "author_association": "CONTRIBUTOR",
      "body": "Is it worth adding yet another way to do string interpolation?\r\n\r\nGiven that we already have:\r\n\r\n```posh\r\n$FirstName = 'Trevor'\r\n$LastName = 'Sullivan'\r\n\"Hello, my name is ${FirstName} ${LastName}\"\r\n```\r\nand \r\n```posh\r\n$name = @{\r\n  First = 'Trevor'\r\n  Last = 'Sullivan'\r\n}\r\n\"Hello, my name is $($First.Name) $($Last.Name)\"\r\n```\r\n\r\nDo we really need:\r\n\r\n```posh\r\n$name = @{\r\n  First = 'Trevor'\r\n  Last = 'Sullivan'\r\n}\r\n\"Hello, my name is {First} {Last}\" -f @name\r\n```\r\n",
      "created_at": "2018-10-17T02:59:47Z",
      "updated_at": "2018-10-17T02:59:47Z"
    }
  ],
  "created_at": "2018-01-10T19:57:11Z",
  "number": 5844,
  "state": "open",
  "title": "Feature Proposal: Splatting for .NET String Formatting",
  "updated_at": "2018-10-17T02:59:47Z"
}