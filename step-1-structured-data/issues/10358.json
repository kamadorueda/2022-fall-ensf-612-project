{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10358",
  "author": "romero126",
  "body": "When Implimenting a Custom PSProvider I am running into Strange Behavior.\r\nWhen calling Set-Content to my PSProvider \r\n\r\n\r\nGetContentWriterDynamicParameters gets called and returns a custom Class Object\r\nHowever it appears GetContentWriter's DynamicParameters gets populated with FileSystemContentWriter as casting it with my custom DynamicParameter returns null;\r\n\r\n```\r\n            if (DynamicParameters != null)\r\n            {\r\n\r\n                // [BUG] Regardless of override DynamicParameters is of type FileSystemContentWriterDynamicParameters\r\n                // StreamContentWriterDynamicParameters dynParams = DynamicParameters as StreamContentWriterDynamicParameters;\r\n                FileSystemContentWriterDynamicParameters dynParams = DynamicParameters as FileSystemContentWriterDynamicParameters;\r\n                                                                 \r\n                if (dynParams != null)\r\n                {\r\n\r\n                }\r\n             }\r\n```\r\n\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@romero126 You referenced FileSystem provider code. Why do you call it from your custom provider?  Your custom provider should implement IContentCmdletProvider.GetContentWriter().",
      "created_at": "2019-10-28T07:46:26Z",
      "updated_at": "2019-10-28T07:46:43Z"
    },
    {
      "author": "romero126",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov I believe my focus is more on the Dynamic Parameters portion on this bug, not GetContentWriter.\r\n\r\n\r\nWhen I implement my own override for **GetContentWriterDynamicParameters** to push out the class **StreamContentWriterDynamicParameters** it is does not get set in the _DynamicParameters_ object. No matter what I do it _DynamicParameters_ will always be set as type **FileSystemContentWriterDynamicParameters**\r\n\r\nhttps://github.com/romero126/PS1C/blob/master/Source/PS1C/ZipFileProvider/ZipFileProvider.IContentCmdletProvider.cs#L208-L229\r\n\r\nhttps://github.com/romero126/PS1C/blob/master/Source/PS1C/ZipFileProvider/ZipFileProvider.IContentCmdletProvider.cs#L277-L280\r\n",
      "created_at": "2019-10-28T15:27:08Z",
      "updated_at": "2019-10-28T15:27:08Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> DynamicParameters will always be set as type FileSystemContentWriterDynamicParameters\r\n\r\nDo you see this in debugger? Is root class really a ZipFileProvider at the time?",
      "created_at": "2019-10-28T17:12:01Z",
      "updated_at": "2019-10-28T17:12:01Z"
    },
    {
      "author": "romero126",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov In order to run that block of code, it would have to be a ZipFileProvider object otherwise it cant exist with that override. Dynamic Parameters is still getting set with FileSystemProvider though. So I would assume there's something funky going on with its Iteration through all Registered providers, when determining a name Resolution.\r\n\r\nNote: the code uses -root parameter on new-psdrive as base path. So I can assume that it should be factored in, when searching for a bug fix.",
      "created_at": "2019-10-28T18:29:30Z",
      "updated_at": "2019-10-28T18:29:30Z"
    }
  ],
  "created_at": "2019-08-14T23:00:16Z",
  "labels": [
    "Issue-Bug",
    "WG-Engine-Providers"
  ],
  "number": 10358,
  "state": "open",
  "title": "Set-Content on custom Providers",
  "updated_at": "2019-10-28T18:29:30Z"
}