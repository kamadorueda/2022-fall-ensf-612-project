{
  "_url": "https://github.com/PowerShell/PowerShell/issues/2292",
  "author": "ffeldhaus",
  "body": "This is a feature request. Currently `Install-Module` gives a warning in Windows PowerShell if it is not run with admin privileges and `-Scope CurrentUser` is not specified.\n\nAs many users just expect `Install-Module` to work and as the ability to install Modules in the current users scope is one of the key advantages of PowerShell, it would be a great enhancement if the default behaviour of `Install-Module` would be to automatically install the Module in the current user scope if it is run with non admin privileges.\n",
  "closed_at": "2016-10-03T06:24:36Z",
  "comments": [
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Doing it specifically for \"non-admin\" users would not be a correct approach on Linux. Unlike Windows, Linux permissions are wildy varied, and changing behavior based on root/non-root user is generally regarded as incorrect. If you absolutely must adapt a behavior, you do so based on the result of first trying the operation (rather than guessing if you're going to succeed, you test instead), as it may be that a particular non-root user was given permissions to install to `AllUsers` scope. So we purposefully did not implement this logic.\n\nThat said, it may make sense to change the default _regardless of current user or permissions_ to be `CurrentUser`, as it is a) far more likely to succeed, and b) probably what the user wants in the first place. What do you think @bmanikm?\n\nSo change:\n\n> the default behaviour of Install-Module would be to automatically install the Module in the current user scope if it is run with non admin privileges.\n\nto just:\n\n> the default behaviour of Install-Module would be to automatically install the Module in the current user scope\n\nand then I agree \ud83d\ude04 \n\nI also agree with @ffeldhaus's other issue https://github.com/PowerShell/PowerShell/issues/2286 that the current presented error when installing to `AllUsers` scope fails is confusing. Instead of `System.IO.DirectoryNotFoundException` the error should be something like \"you don't have the required permissions\".\n",
      "created_at": "2016-09-19T19:56:58Z",
      "updated_at": "2016-09-19T19:56:58Z"
    },
    {
      "author": "ghost",
      "author_association": "NONE",
      "body": "It seems like the right/better solution is described in this comment:\n_If you absolutely must adapt a behavior, you do so based on the result of first trying the operation (rather than guessing if you're going to succeed, you test instead), as it may be that a particular non-root user was given permissions to install to AllUsers scope_\n\nWorking from that, it seems more appropriate to \n1. Always try to install to the privileged location. \n2. If the user lacks permissions, the action fails with an error message that says to use -Scope CurrentUser\n\nThat seems easier to implement and more technically accurate. If we take the approach of installing to the current user's location by default, we end up with the problem that all code referencing that module must reference it within that user's location. \n\nAre we missing something? \n",
      "created_at": "2016-09-19T22:52:24Z",
      "updated_at": "2016-09-19T22:52:24Z"
    },
    {
      "author": "ghost",
      "author_association": "NONE",
      "body": "(Reopening issue. Should not have closed it)\n",
      "created_at": "2016-09-19T22:52:47Z",
      "updated_at": "2016-09-19T22:52:47Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "I'd say that's more in line with my final comment:\n\n> the current presented error when installing to AllUsers scope fails is confusing. Instead of System.IO.DirectoryNotFoundException the error should be something like \"you don't have the required permissions\"\n\nFail more gracefully than currently (but don't attempt the installation _automatically_ a second time at a different scope).\n",
      "created_at": "2016-09-19T23:22:53Z",
      "updated_at": "2016-09-19T23:22:53Z"
    },
    {
      "author": "bmanikm",
      "author_association": "CONTRIBUTOR",
      "body": "I agree, we need to improve the error messages to fail more gracefully.\n",
      "created_at": "2016-09-19T23:58:47Z",
      "updated_at": "2016-09-19T23:58:47Z"
    },
    {
      "author": "kilasuit",
      "author_association": "COLLABORATOR",
      "body": "As PowerShellGet has been decoupled to its own Repository in line with #1979 (almost complete for PowerShellGet as I have a PR coming shortly to finish this off) I have created this issue in the PowerShellGet Repository where further discussions around this issue can occur if required which means we can close this issue in this repository.\n",
      "created_at": "2016-09-30T21:41:24Z",
      "updated_at": "2016-09-30T21:41:51Z"
    }
  ],
  "created_at": "2016-09-17T18:27:01Z",
  "labels": [
    "Area-PowerShellGet"
  ],
  "number": 2292,
  "state": "closed",
  "title": "Make Install-Module automatically install in CurrentUser scope for non admin users",
  "updated_at": "2016-10-03T06:24:36Z"
}