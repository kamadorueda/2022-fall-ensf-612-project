{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10652",
  "author": "mklement0",
  "body": "Note: \r\n\r\n* I don't know whether / what other libraries are affected, and whether Newtonsoft.Jsonis an unusual one.\r\n\r\n* The bug also exists in Windows PowerShell.\r\n\r\n* The error is ultimately the same as in #10650: `Target type System.Collections.IEnumerator is not a value type or a non-abstract class. (Parameter 'targetType')` - note how the type name is an _interface_, not a _class_.\r\n\r\nThe problem in a nutshell: when `[JValue]` instances are implicitly converted to strings, they stringify to the _empty string_.\r\n\r\nBy contrast, calling `.ToString()` explicitly works as expected.\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\n# Parse JSON text into a [JObject] instance.\r\n$obj = [Newtonsoft.Json.JsonConvert]::DeserializeObject('{ \"foo\": \"bar\"  }')\r\n\r\n# Works as expected:\r\n# Call .ToString() explicitly on the `.foo` property, whose value is a [JValue] instance.\r\n$obj.foo.ToString()\r\n\r\n# Problem 1: default output formatting yields '' interactively,\r\n#                   and fails with Out-Default\r\n{ $obj.foo | Out-Default } | Should -Not -Throw\r\n\r\n# Problem 2: string interpolation yields ''\r\n\"$($obj.foo)\" | Should -Not -BeNullOrEmpty\r\n```\r\n\r\n# Expected behavior\r\n\r\nAll tests should succeed.\r\n\r\n# Actual behavior\r\n\r\nTests 2 and 3 fail.\r\n\r\n* Test 2 fails due to an exception, which points to the underlying problem:\r\n\r\n```none\r\nTarget type System.Collections.IEnumerator is not a value type or a non-abstract class. \r\n(Parameter 'targetType').\r\n```\r\n\r\n* Test 3 fails, because (as with interactive output), `$foo.bar` stringifies to the _empty string_.\r\n\r\n\r\n# Environment data\r\n\r\n```none\r\nPowerShell Core v7.0.0-preview.4 on macOS 10.14.6\r\nWindows PowerShell v5.1.18362.145 on Microsoft Windows 10 Pro (64-bit; Version 1903, OS Build: 18362.295)\r\n```\r\n",
  "closed_at": null,
  "comments": [],
  "created_at": "2019-09-30T14:55:24Z",
  "number": 10652,
  "state": "open",
  "title": "Working directly with certain .NET types, such as Newtonsoft.Json's, is broken: implicit stringification",
  "updated_at": "2021-04-11T18:57:50Z"
}