{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9235",
  "author": "HumanEquivalentUnit",
  "body": "I can't say grammatically why it should be, but it feels like it should be.\r\n\r\nAnd aliased with `Continues` for compatibility.\r\n\r\n",
  "closed_at": "2019-11-18T19:33:00Z",
  "comments": [
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Honestly, it sounds `-Continuous` was intended and simply misspelled.\r\n\r\n(If you conceived of it as a _verb_ in the imperative mood, it would have to be `-Continue`, without the `s`).",
      "created_at": "2019-03-27T11:17:58Z",
      "updated_at": "2019-03-27T11:17:58Z"
    },
    {
      "author": "GeeLaw",
      "author_association": "NONE",
      "body": "As a side note, the switch is exhibiting strange behavior when turned off on PowerShell Core 6.1.2 for macOS.\r\n\r\n```powershell\r\ntest-connection -continues:$false localhost | foreach-object { \"hello $_\" }\r\n# the output is written to the host, not the output pipe\r\n\r\ntest-connection -continues localhost | foreach-object { \"hello $_\" }\r\n# the output is passed to the output pipe and produces expected result\r\n\r\n# also, & { test-connection localhost } pollutes\r\n# the console/terminal/screen buffer before\r\n# returning the object result.\r\n```\r\n\r\nThe reason is the cmdlet is coded s.t. somehow it only looks at the parameter set (or forgets to look at the parameter set, or resolves the \"overload\" in an otherwise incorrect way)? (The same mistake is made for `Get-AppxPackage -Online:$false`, which crashes the process; but that's Windows-specific.) I guess this is worth another issue?",
      "created_at": "2019-03-28T03:17:09Z",
      "updated_at": "2019-03-28T03:17:09Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "It's not to do with this parameter. The PS Core implementation of `Test-Connection` writes a majority of its data to the host stream, and then submits a rather less useful object to the output stream. We have another issue on that somewhere, @iSazonov might know where. Too sleepy at the present to dig that one up.\r\n\r\nI've been looking at fixing it and am happy to work on it, but we need to come to some consensus on what exactly the inner workings of that fix need to be first. \ud83d\ude42 ",
      "created_at": "2019-03-28T03:28:51Z",
      "updated_at": "2019-03-28T03:28:51Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "After we move to .Net Core 3.0 we get some updates related to the cmdlet. Not all bugs was fixed there but we could review the cmdlet.\r\nAnd main question is still how balance interactive and script experience.",
      "created_at": "2019-03-28T03:35:24Z",
      "updated_at": "2019-03-28T03:35:24Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@vexx32 Can we close this?",
      "created_at": "2019-10-17T04:13:54Z",
      "updated_at": "2019-10-17T04:13:54Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "I can reference it in #10697 so this closes when that is merged, since that's not merged just yet. \ud83d\ude42 ",
      "created_at": "2019-10-17T04:17:02Z",
      "updated_at": "2019-10-17T04:17:02Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:This issue was addressed in #10697, which has now been successfully released as `v7.0.0-preview.6`.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.0.0-preview.6)\n",
      "created_at": "2019-11-21T22:36:14Z",
      "updated_at": "2019-11-21T22:36:14Z"
    }
  ],
  "created_at": "2019-03-27T10:47:54Z",
  "labels": [
    "Issue-Question",
    "Resolution-Fixed",
    "WG-Cmdlets-Management"
  ],
  "number": 9235,
  "state": "closed",
  "title": "Should Test-Connection parameter -Continues be -Continuous ?",
  "updated_at": "2019-11-21T22:36:14Z"
}