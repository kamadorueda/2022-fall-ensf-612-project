{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4811",
  "author": "JamesWTruher",
  "body": "These tests validate that the resource strings represent the contents of the RESX files. This essentially ensures that we've run `-ResGen` when building. Additionally, these tests will ensure that we don't have ResourceIds which have a space in them (which we did). \r\n\r\nWhen there's a space in the ResourceId, the tooling converts the space to an \"_\" which is fine, but the compiled resource doesn't have that change, so when message retrieval is attempted, an empty string is returned.\r\n\r\nNormally we generate an error and validate the ErrorId, but this test is different. We want to be sure that the message that we're giving the user is correct and the build included the `-ResGen` parameter.",
  "closed_at": "2017-09-18T16:20:47Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Does it make sense to check for unused ResourceId in resx files?",
      "created_at": "2017-09-12T03:18:59Z",
      "updated_at": "2017-09-12T03:18:59Z"
    },
    {
      "author": "JamesWTruher",
      "author_association": "MEMBER",
      "body": "@iSazonov re: check for unused ResourceId in resx files\r\nit would be good to check for these. I thought about how to do that, but couldn't come up something simple, other than brute force checking all the source files.",
      "created_at": "2017-09-12T21:27:46Z",
      "updated_at": "2017-09-12T21:27:46Z"
    },
    {
      "author": "JamesWTruher",
      "author_association": "MEMBER",
      "body": "@SteveL-MSFT updated and pushed - see my comment about using `-filter` and `-exclude` together - I double checked with PowerShell 5 and the behavior is the same. if you use `-filter` and `-exclude` no results are returned, so at least it's not a regression, although i agree the behavior is a little surprising",
      "created_at": "2017-09-14T22:37:14Z",
      "updated_at": "2017-09-14T22:37:14Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@JamesWTruher re: check for unused ResourceId in resx files\r\n\r\nIt seems @lzybkr once mentioned some tool.\r\nAs for me I think better way is to get native warning from the compiler that does still not implemented.",
      "created_at": "2017-09-15T03:35:01Z",
      "updated_at": "2017-09-15T03:35:01Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "@iSazonov - I use ReSharper to find unused references. There were some accuracy issues when the csproj file wasn't the same as how we built, but it worked fairly well anyway, so I'm guessing it's pretty accurate now.",
      "created_at": "2017-09-18T00:04:07Z",
      "updated_at": "2017-09-18T00:04:07Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@lzybkr Thanks! \r\nI see there is free [ReSharper command tools](https://www.jetbrains.com/resharper/download/index.html#section=resharper-clt)\r\n",
      "created_at": "2017-09-18T07:53:00Z",
      "updated_at": "2017-09-18T07:53:00Z"
    },
    {
      "author": "JamesWTruher",
      "author_association": "MEMBER",
      "body": "@iSazonov @lzybkr  I created https://github.com/PowerShell/PowerShell/issues/4860 to track",
      "created_at": "2017-09-18T17:35:22Z",
      "updated_at": "2017-09-18T17:35:22Z"
    }
  ],
  "created_at": "2017-09-11T22:12:08Z",
  "number": 4811,
  "state": "closed",
  "title": "Validate product resource strings against resx files",
  "updated_at": "2017-09-18T17:35:22Z"
}