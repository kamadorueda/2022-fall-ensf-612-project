{
  "_url": "https://github.com/PowerShell/PowerShell/issues/459",
  "author": "andschwa",
  "body": "The [schema](http://json.schemastore.org/project) supports it, but I don't believe it's enabled yet.\n\nThis issue is twofold: we need to be able to verify assembly strong names (aka tokens) within PowerShell itself; we also need to generate signed DLLs.\n",
  "closed_at": "2016-06-27T22:27:03Z",
  "comments": [
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "Related: for FullCLR builds we need strongly named assemblies (to use GAC). We can use 'delayed signing' (doesn't require private key) and skip verification on test machine, but strong name is still required. \n",
      "created_at": "2016-01-27T23:47:53Z",
      "updated_at": "2016-01-27T23:48:02Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "dotnet/cli#720 tracks the support of strong name signatures on Linux.\n",
      "created_at": "2016-01-28T22:26:16Z",
      "updated_at": "2016-01-28T22:26:16Z"
    },
    {
      "author": "palladia",
      "author_association": "CONTRIBUTOR",
      "body": "Revisit Set-Authenticode cmdlet once we get this working.\n",
      "created_at": "2016-02-02T23:36:20Z",
      "updated_at": "2016-02-02T23:36:20Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Assemblies are now signed. Next step is to (carefully) revert the code that was changed when the assemblies weren't signed.\n",
      "created_at": "2016-06-16T23:08:50Z",
      "updated_at": "2016-06-16T23:08:50Z"
    }
  ],
  "created_at": "2016-01-27T23:05:08Z",
  "number": 459,
  "state": "closed",
  "title": "Enable DLL strong name verification",
  "updated_at": "2016-06-27T22:27:07Z"
}