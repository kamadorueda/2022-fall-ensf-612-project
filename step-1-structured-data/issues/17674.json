{
  "_url": "https://github.com/PowerShell/PowerShell/issues/17674",
  "author": "aolanrewaju",
  "body": "### Prerequisites\r\n\r\n- [X] Write a descriptive title.\r\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- [X] Search the existing issues.\r\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\r\n\r\n### Steps to reproduce\r\n\r\nI have a .ps1 script that is run using `execSync('powershell.exe file.ps1')` . Some users who run this will have powershell 7 and others 5.1. For those using powershell 7 they recieve the error:\r\n 'The \u2018[command]\u2019 command was found in the module \u2018PowershellGet\u2019, but the module could not be loaded. For more information, run the \u2018Import-Module PowershellGet\u2019'.\r\n\r\nThis problem gets fixed when I change the command to `execSync('pwsh.exe file.ps1')` But then users that only have version 5.1 will not have pwsh installed.\r\n\r\nAny idea on what's going on and how to fix this? Thanks\r\n\r\n### Expected behavior\r\n\r\n```console\r\nProperly running script with both versions\r\n```\r\n\r\n\r\n### Actual behavior\r\n\r\n```console\r\nTest tenant credentials missing. Fetching from KeyVault...\r\npowershell.exe C:\\Users\\AOLANR~1\\AppData\\Local\\Temp\\22a9bacf.ps1\r\nGet-InstalledModule : The 'Get-InstalledModule' command was found in the module 'PowerShellGet', but the module could\r\nnot be loaded. For more information, run 'Import-Module PowerShellGet'.\r\nAt C:\\Users\\aolanrewaju\\AppData\\Local\\Temp\\22a9bacf.ps1:3 char:11\r\n+       if (Get-InstalledModule -Name Az -ErrorAction 'SilentlyContinue ...\r\n+           ~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : ObjectNotFound: (Get-InstalledModule:String) [], ParentContainsErrorRecordException\r\n    + FullyQualifiedErrorId : CouldNotAutoloadMatchingModule\r\n\r\n[9:17:14 AM] x Error detected while running '_wrapFunction'\r\n[9:17:14 AM] x ------------------------------------\r\n[9:17:14 AM] x Error: Command failed: powershell.exe -Version 5.1 C:\\Users\\AOLANR~1\\AppData\\Local\\Temp\\22a9bacf.ps1\r\n    at checkExecSyncError (node:child_process:828:11)\r\n    at execSync (node:child_process:899:15)\r\n[9:17:14 AM] x Error previously detected. See above for error messages.\r\nerror Command failed with exit code 1.\r\n```\r\n\r\n\r\n### Error details\r\n\r\n_No response_\r\n\r\n### Environment data\r\n\r\n```powershell\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.4\r\nPSEdition                      Core\r\nGitCommitId                    7.2.4\r\nOS                             Microsoft Windows 10.0.19044\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n\r\n        Scope ExecutionPolicy\r\n        ----- ---------------\r\nMachinePolicy       Undefined\r\n   UserPolicy       Undefined\r\n      Process       Undefined\r\n  CurrentUser       Undefined\r\n LocalMachine    RemoteSigned\r\n```\r\n\r\n\r\n### Visuals\r\n\r\n_No response_",
  "closed_at": "2022-07-23T00:01:12Z",
  "comments": [
    {
      "author": "StevenBucher98",
      "author_association": "COLLABORATOR",
      "body": "Hm, what version of PowerShellGet do you have installed with PS7? The command 'get-Module PowerShellGet -ListAvailable' gets that for you.  cc @SydneyhSmith and @alerickson ",
      "created_at": "2022-07-18T20:00:33Z",
      "updated_at": "2022-07-18T20:00:33Z"
    },
    {
      "author": "aolanrewaju",
      "author_association": "NONE",
      "body": "```\r\nPS D:\\repos\\1JS\\ooui\\apps\\wac-wordeditor> get-Module PowerShellGet -ListAvailable\r\n\r\n    Directory: C:\\users\\aolanrewaju\\.dotnet\\tools\\.store\\powershell\\7.2.4\\powershell\\7.2.4\\tools\\net6.0\\any\\win\\Modules\r\n\r\nModuleType Version    PreRelease Name                                PSEdition ExportedCommands\r\n---------- -------    ---------- ----                                --------- ----------------\r\nScript     2.2.5                 PowerShellGet                       Desk      {Find-Command, Find-DSCResource, Find-Module, Find-RoleCapability\u2026}\r\n\r\n    Directory: C:\\Program Files\\WindowsPowerShell\\Modules\r\n\r\nModuleType Version    PreRelease Name                                PSEdition ExportedCommands\r\n---------- -------    ---------- ----                                --------- ----------------\r\nScript     2.2.5                 PowerShellGet                       Desk      {Find-Command, Find-DSCResource, Find-Module, Find-RoleCapability\u2026}\r\nScript     1.0.0.1               PowerShellGet                       Desk      {Install-Module, Find-Module, Save-Module, Update-Module\u2026}\r\n\r\nPS D:\\repos\\1JS\\ooui\\apps\\wac-wordeditor> $psversiontable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.4\r\nPSEdition                      Core\r\nGitCommitId                    7.2.4\r\nOS                             Microsoft Windows 10.0.19044\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\nI noticed that when I change `$Env:PSModulePath` for the current process to just use the paths defined for powershell 5.1 modules as described [here](https://docs.microsoft.com/en-us/powershell/scripting/whats-new/migrating-from-windows-powershell-51-to-powershell-7?view=powershell-7.2#separate-psmodulepath) The problem gets fixed. Is there a better way to fix this? Why is this happening? Here is what the original `$Env:PSModulePath` looks like before I update it\r\n\r\n```PS C:\\Users\\aolanrewaju> $Env:PSModulePath -split (';')\r\nC:\\Users\\aolanrewaju\\Documents\\PowerShell\\Modules\r\nC:\\Program Files\\PowerShell\\Modules\r\nc:\\users\\aolanrewaju\\.dotnet\\tools\\.store\\powershell\\7.2.4\\powershell\\7.2.4\\tools\\net6.0\\any\\win\\Modules\r\nC:\\Users\\aolanrewaju\\Documents\\WindowsPowerShell\\Modules\r\nC:\\Program Files\\WindowsPowerShell\\Modules\r\nC:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules\r\nC:\\Program Files (x86)\\Microsoft Azure Information Protection\\Powershell\r\nPS C:\\Users\\aolanrewaju>\r\n```",
      "created_at": "2022-07-18T20:11:44Z",
      "updated_at": "2022-07-18T20:11:44Z"
    },
    {
      "author": "StevenBucher98",
      "author_association": "COLLABORATOR",
      "body": "@aolanrewaju How did you install PowerShell 7? ",
      "created_at": "2022-07-18T20:26:36Z",
      "updated_at": "2022-07-18T20:26:36Z"
    },
    {
      "author": "aolanrewaju",
      "author_association": "NONE",
      "body": "I don't remember exactly. Powershell 7 is not the default on my machine, 5.1 is. To run with 7 I just run pwsh. Multiple people running powershell 7 have experienced this same issue though. Should I try to reinstall?",
      "created_at": "2022-07-18T20:29:58Z",
      "updated_at": "2022-07-18T20:29:58Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "In this scenario, it looks like `execSync()` is a node API to run a command line.  So presumably the users are running this node script from within either powershell.exe or pwsh.exe and having issues.  Between the two environments, the `$env:PSModulePath` is different as 5.1 and 7 run side-by-side although 7 does peek into 5.1 paths but 5.1 does not peek into 7 paths.  However, a install or reinstall shouldn't have any effect.\r\n\r\nPowerShellGet is distributed separately with both Windows PowerShell and PowerShell 7, but the versions may be different if they are not upgraded to latest version.  So what it looks like to me is that for PowerShell 7 users, the powershell.exe that is created would inherit `$env:PSModulePath` from PowerShell 7 and having a problem importing PowerShellGet.  If you have a repro, you can try within `execSync()` do a `import powershellget -verbose` and tell us what is returned.\r\n\r\nAs a workaround, you could detect if the host environment is `powershell.exe` or `pwsh.exe` and use the appropriate one.",
      "created_at": "2022-07-18T21:14:04Z",
      "updated_at": "2022-07-18T21:14:04Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2022-07-23T00:01:11Z",
      "updated_at": "2022-07-23T00:01:11Z"
    }
  ],
  "created_at": "2022-07-13T16:32:28Z",
  "number": 17674,
  "state": "closed",
  "title": "command was found in module powerShellGet but module could not be loaded",
  "updated_at": "2022-07-23T00:01:12Z"
}