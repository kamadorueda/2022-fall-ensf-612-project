{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10929",
  "author": "SteveL-MSFT",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nPiping multiple CommandInfo to `Get-Command` only returns the first result.  This is because during discovery of the command it internally builds a cache of commands it has already seen.  On the second (or more) times `ProcessRecord()` is called, that cache is already filled with some results.  If the requested CommandInfo (which binds to `-Verb` and `-Noun`) happens to be in that cache, then the cmdlet considers that a duplicate and doesn't return that result.  The fix in this case is to clear the cache at the start of `ProcessRecord()` to treat each search as independent.\r\n\r\n## PR Context\r\n\r\nFix https://github.com/PowerShell/PowerShell/issues/10851\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2019-11-07T19:59:26Z",
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PoshChan please retry linux",
      "created_at": "2019-10-29T02:52:14Z",
      "updated_at": "2019-10-29T02:52:14Z"
    },
    {
      "author": "PoshChan",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT, successfully started retry of `PowerShell-CI-Linux`",
      "created_at": "2019-10-29T02:52:32Z",
      "updated_at": "2019-10-29T02:52:32Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Unfortunately, this PR didn't fix all problems, because the following tests fail:\r\n\r\n```\r\nfunction foo {}; set-alias foo foo\r\n\r\n(gcm -all foo | gcm).Count | Should -Be 2\r\n\r\n(gcm -all foo | gcm).ComandType | Should -Be Alias, Function\r\n```\r\n",
      "created_at": "2019-11-07T21:03:46Z",
      "updated_at": "2019-11-07T21:03:46Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@mklement0 those are different issues not related to piping to Get-Command, please open a new issue for them",
      "created_at": "2019-11-07T22:49:55Z",
      "updated_at": "2019-11-07T22:49:55Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT: These tests _do_ pipe to `Get-Command` (whose built-in alias is `gcm`). In what way is this a different issue?",
      "created_at": "2019-11-07T22:58:29Z",
      "updated_at": "2019-11-07T22:58:29Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "If it helps with getting this resolved, please see #11017",
      "created_at": "2019-11-07T23:19:51Z",
      "updated_at": "2019-11-07T23:19:51Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@mklement0 my mistake, I only saw the left side of the pipe.  In anycase, the root cause is something different.",
      "created_at": "2019-11-07T23:52:00Z",
      "updated_at": "2019-11-07T23:52:22Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.0.0-preview.6` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.0.0-preview.6)\n",
      "created_at": "2019-11-21T22:35:19Z",
      "updated_at": "2019-11-21T22:35:19Z"
    }
  ],
  "created_at": "2019-10-29T00:38:59Z",
  "number": 10929,
  "state": "closed",
  "title": "Fix piping more than one CommandInfo to Get-Command",
  "updated_at": "2019-11-21T22:35:19Z"
}