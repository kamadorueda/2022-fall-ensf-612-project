{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7895",
  "author": "bergmeister",
  "body": "The default shortcuts for pwsh.exe on Windows are calling it using `-WorkingDirectory ~` by default, which is correct and by design.\r\nHowever, if I wanted to temporarily change/set the final working directory, then the most intuitive way for most users (not familiar with this new feature) would be to add code like `cd C:\\foo` into the `$PROFILE` script.\r\nUnfortunately, only AFTER executing the script in $PROFILE, the working directory gets set to the one specified by the `WorkingDirectory` parameter. If it got set BEFORE executing the `$PROFILE` script then this problem would not exist and the working directory when $PROFILE executes would be a more reasonable one as well.\r\n\r\nSteps to reproduce\r\n------------------\r\nPut the following code into $profile\r\n```powershell\r\npwd\r\ncd C:\\\r\n```\r\n\r\nThen launch pwsh using the `-WorkingDirectory` parameter\r\n\r\nExpected behavior\r\n-----------------\r\n\r\nThe printed working directory when executing the script in $PROFILE should be the one specified by `-WorkingDirectory` of pwsh, therefore the `$PROFILE` should be able to override and change that working directory\r\n\r\nActual behavior\r\n---------------\r\n\r\nThe working directory when the `$PROFILE` script executes is `C:\\Windows\\System32` instead of the path specified by the `-WorkingDirectory` parameter on pwsh, the final working directory is not C:\\ as it is being set inside the script.\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.1.0\r\nPSEdition                      Core\r\nGitCommitId                    6.1.0\r\nOS                             Microsoft Windows 10.0.16299\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2018-10-29T20:56:14Z",
  "comments": [
    {
      "author": "DTW-DanWard",
      "author_association": "NONE",
      "body": "This has been driving me nuts the past few days.  Maybe a quick solution is to _not_ add the WorkingDirectory parameter to the shortcuts...?  Developers/desktop users are always going to set the default location via profile, not by changing the shortcut value.  WorkingDirectory seems only useful for automating a script or running one remotely.  But, to be honest, even then I wouldn't rely upon it; if my script had to be in a default location at start-up I would ensure that at the beginning of the script itself and not trust that the shell had been opened to the correct default location.",
      "created_at": "2018-10-11T12:11:17Z",
      "updated_at": "2018-10-11T12:11:17Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "We should rather fix this properly in the implementation of the new `Workingdirectory` parameter that was introduced in PR #6612 to help start PowerShell by default in the user folder instead of its installation folder and for an issue with the explorer context menu. cc @SteveL-MSFT \r\nThe proposed design would be to have the WorkingDirectory ready before execution of the $PROFILE script instead afterwards.",
      "created_at": "2018-10-11T15:36:19Z",
      "updated_at": "2018-10-11T15:36:19Z"
    },
    {
      "author": "RichardSiddaway",
      "author_association": "NONE",
      "body": "If the working directory is going to be set the user should be given the option of overriding the default when PowerShell is installed. we get the option to override the install folder why not the workingdirectory?",
      "created_at": "2018-10-18T16:12:03Z",
      "updated_at": "2018-10-18T16:12:03Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "@RichardSiddaway We could certainly add an option to specify a different working directory for the start menu shortcut (or nothing at all, pwsh would then start in the installation folder) but this would not address the problem highlighted by this issue where the working directory gets set too late.\r\nThe reason why the user can choose the installation folder is just because it is part of the basic WiX template that provides this functionality out of the box for free.",
      "created_at": "2018-10-18T17:17:08Z",
      "updated_at": "2018-10-18T17:20:03Z"
    },
    {
      "author": "RichardSiddaway",
      "author_association": "NONE",
      "body": "It may not solve the conflict between the profile and the -workingdirectory parameter but it would effectively remove the conflict or the need to set a directory in your profile. It  would also be a potential (partial) solution to issue  #8069 ",
      "created_at": "2018-10-18T17:29:45Z",
      "updated_at": "2018-10-18T17:29:45Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I think for the majority of users, having the `-WorkingDirectory ~` in the shortcut is the preferred experience to have it default to their home directory than $PSHOME.  The fix for this immediate problem is simple, just move the processing of `-WorkingDirectory` earlier although it could have a breaking change impact if $PROFILE expects to start in $PSHOME.",
      "created_at": "2018-10-19T01:07:42Z",
      "updated_at": "2018-10-19T01:07:42Z"
    }
  ],
  "created_at": "2018-09-29T17:44:06Z",
  "number": 7895,
  "state": "closed",
  "title": "When using Workingdirectory parameter on pwsh, working directory gets set AFTER execution of $PROFILE script",
  "updated_at": "2018-10-30T05:35:55Z"
}