{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15691",
  "author": "sasha2048",
  "body": "### Prerequisites\n\n- [X] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6).\n\n### Steps to reproduce\n\nFor a string variable $a, I expect `$a.IndexOf($a)` to return 0.\r\n\r\nHowever behavior varies depending on the value of $a:\r\n  * ``\"abc\"`` \u2192 0\r\n  * ``\"`u{06}`u{0e}`u{2b}\"`` \u2192 2\n\n### Expected behavior\n\n```console\nPS> $a = \"`u{06}`u{0e}`u{2b}\"; $a.IndexOf($a)\r\n0\n```\n\n\n### Actual behavior\n\n```console\nPS> $a = \"`u{06}`u{0e}`u{2b}\"; $a.IndexOf($a)\r\n2\n```\n\n\n### Environment data\n\n```powershell\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.3\r\nPSEdition                      Core\r\nGitCommitId                    7.1.3\r\nOS                             Microsoft Windows 10.0.19043\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\n```\n\n\n### Visuals\n\n_No response_",
  "closed_at": "2021-06-30T19:00:06Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "This isn't a PowerShell issue, you're using the .NET `String.Compare()` method: https://docs.microsoft.com/en-us/dotnet/api/system.string.indexof?view=net-5.0#System_String_IndexOf_System_String_\r\n\r\nI'm reading between the lines here from their `Remarks` section there, and as best as I can surmise, the comparison of the `IndexOf()` is ignoring what they term \"ignorable characters\" when you pass the argument to `IndexOf()` since the default comparison used is culture-sensitive. So I'm guessing that some of those Unicode characters are in the standard \"ignorable characters\" ranges, or something similar.\r\n\r\nTo avoid this, don't rely on the default comparer and supply an `Ordinal` or `OrdinalIgnoreCase` comparer to avoid running into culture-specific comparison rules:\r\n\r\n```powershell\r\n$a = \"`u{06}`u{0e}`u{2b}\"\r\n$a.IndexOf($a, [StringComparison]::Ordinal)\r\n```\r\n\r\nGives me the correct value of `0`.\r\n\r\n<blockquote><img src=\"https://docs.microsoft.com/en-us/media/logos/logo-ms-social.png\" width=\"48\" align=\"right\"><div><strong><a href=\"https://docs.microsoft.com/en-us/dotnet/api/system.string.indexof\">String.IndexOf Method (System)</a></strong></div><div>Reports the zero-based index of the first occurrence of a specified Unicode character or string within this instance. The method returns -1 if the character or string is not found in this instance. </div></blockquote>",
      "created_at": "2021-06-29T16:44:01Z",
      "updated_at": "2021-06-29T16:45:04Z"
    },
    {
      "author": "sasha2048",
      "author_association": "NONE",
      "body": "Hmm, I was close to that (I tried to use `[StringComparison]::InvariantCulture`, but it was still 2). Thanks.",
      "created_at": "2021-06-29T16:49:07Z",
      "updated_at": "2021-06-29T16:49:18Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "I'm equally surprised that InvariantCulture still hits this. \ud83e\udd14 \r\n\r\nBut yeah, the culture rules are... complicated \ud83d\ude05 ",
      "created_at": "2021-06-29T16:50:56Z",
      "updated_at": "2021-06-29T16:50:56Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as external and has not had any activity for **1 day**. It has been be closed for housekeeping purposes.",
      "created_at": "2021-06-30T19:00:05Z",
      "updated_at": "2021-06-30T19:00:05Z"
    }
  ],
  "created_at": "2021-06-29T16:22:20Z",
  "number": 15691,
  "state": "closed",
  "title": "Unexpected String#IndexOf behavior",
  "updated_at": "2021-06-30T19:00:06Z"
}