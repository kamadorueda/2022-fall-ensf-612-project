{
  "_url": "https://github.com/PowerShell/PowerShell/issues/16531",
  "author": "DragonHiei",
  "body": "### Prerequisites\n\n- [X] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\n\n### Steps to reproduce\n\nCopying an object within a loop multiple times, then updating each object with a different value for the same property. This issue occurs on all versions including 5.1. Please see code in the expected behavior section below.\n\n### Expected behavior\n\n```console\nPS> $old = [System.Collections.Generic.List[Object]]::New()\r\n$element = [PSCustomObject]@{\r\n    Name         = 'Test'\r\n    Type         = 'Normal'\r\n    SomeProperty = 'Object1', 'Object2', 'Object3'\r\n}\r\n$old.Add($element)\r\n$new = [System.Collections.Generic.List[Object]]::New()\r\n$Property = 'SomeProperty'\r\nforeach ($object in $old) {\r\n    $SubArray = $object.$Property\r\n\r\n    $element = $object\r\n    foreach ($item in $SubArray) {\r\n        $new.Add($element)\r\n    }\r\n\r\n    [int]$count = 0\r\n    foreach ($item in $new) {\r\n        $item.$Property = $SubArray[$count]\r\n        $count = $count + 1\r\n    }\r\n}\r\n$new\r\n\r\nName Type   SomeProperty\r\n---- ----   ------------\r\nTest Normal Object1\r\nTest Normal Object2\r\nTest Normal Object3\n```\n\n\n### Actual behavior\n\n```console\nName Type   SomeProperty\r\n---- ----   ------------\r\nTest Normal Object3\r\nTest Normal Object3\r\nTest Normal Object3\n```\n\n\n### Error details\n\n```console\nNone\n```\n\n\n### Environment data\n\n```powershell\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.0\r\nPSEdition                      Core\r\nGitCommitId                    7.2.0\r\nOS                             Microsoft Windows 10.0.19042\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\n```\n\n\n### Visuals\n\n_No response_",
  "closed_at": "2021-11-30T18:49:42Z",
  "comments": [
    {
      "author": "DragonHiei",
      "author_association": "NONE",
      "body": "@lovettbp enjoy",
      "created_at": "2021-11-30T17:28:20Z",
      "updated_at": "2021-11-30T17:28:20Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "This isn't a bug, this is by-design behaviour inherited from .NET.\r\n\r\nPSCustomObject / PSObject is a reference-type object, so any time you add a given instance to an array or pass it around, you pass a reference to that same object in memory. Modifying any of the references will cause all the references to the object to reflect the changes when accessed.\r\n\r\nIf you want to create copies of the object, you need to do so explicitly with something like `$newObject = $oldObject.PSObject.Copy()` -- some object types also implement the IClonable interface and will expose a `.Clone()` method for this purpose.\r\n\r\nMost objects you'll work with in PowerShell are [reference types](https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/reference-types).\r\n\r\n[Value types](https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/value-types) also exist in .NET but tend to be less used in .NET languages like PowerShell. Basic values like numbers, DateTime, Guid, and some other types are value types and have copy-on-assign behaviour that your code here expects.\r\n\r\nCurrently PowerShell doesn't have a native way to declare struct types, so any custom objects constructed in PowerShell itself will typically be reference types.",
      "created_at": "2021-11-30T18:38:17Z",
      "updated_at": "2021-11-30T18:38:17Z"
    },
    {
      "author": "DragonHiei",
      "author_association": "NONE",
      "body": "Good to know, thanks for the info. I am all set.",
      "created_at": "2021-11-30T18:49:41Z",
      "updated_at": "2021-11-30T18:49:41Z"
    }
  ],
  "created_at": "2021-11-30T17:27:08Z",
  "labels": [
    "Issue-Question",
    "Resolution-Answered"
  ],
  "number": 16531,
  "state": "closed",
  "title": "Setting a value on a property in an iteration of a loop sets the same value on said property in all prior iterations of that loop",
  "updated_at": "2021-12-01T06:06:43Z"
}