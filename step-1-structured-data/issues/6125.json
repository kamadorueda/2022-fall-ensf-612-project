{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6125",
  "author": "mklement0",
  "body": "Note: `Select-Object` fundamentally only supports _top-level property names_, not property _paths_.\r\n\r\nWith no quoting involved, the behavior is as follows:\r\nA `.`-separated path argument is treated like a nonexistent top-level property name and:\r\n* with `-Property`, causes a `$null`-valued property by that name to be created.\r\n* with `-ExpandProperty`, causes an error that complains about the nonexistent property.\r\n\r\nBy contrast - and this smells like a bug - if you _quote_ a _component_ of a path-like property name, the input object is quietly passed through.\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\n$obj = [pscustomobject] @{ dummy = 1 }\r\n\r\n$obj | Select-Object -Property dummy.foo | out-default\r\n'==='\r\n$obj | Select-Object -Property 'dummy'.foo | out-default\r\n'==='\r\n$obj | Select-Object -ExpandProperty dummy.foo | out-default\r\n'==='\r\n$obj | Select-Object -ExpandProperty 'dummy'.foo | out-default\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```none\r\ndummy.foo\r\n---------\r\n\r\n\r\n\r\n===\r\ndummy.foo\r\n---------\r\n\r\n\r\n\r\n===\r\nSelect-Object : Property \"dummy.foo\" cannot be found.\r\n....\r\n===\r\nSelect-Object : Property \"dummy.foo\" cannot be found.\r\n....\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n```none\r\ndummy.foo\r\n---------\r\n\r\n\r\n\r\n===\r\n\r\ndummy\r\n-----\r\n    1\r\n\r\n\r\n===\r\nSelect-Object : Property \"dummy.foo\" cannot be found.\r\nAt C:\\Users\\MKT6\\Desktop\\pg\\t.ps1:7 char:8\r\n+ $obj | Select-Object -ExpandProperty dummy.foo | out-default\r\n+        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : InvalidArgument: (@{dummy=1}:PSObject) [Select-Object], PSArgumentException\r\n    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand\r\n\r\n===\r\n\r\ndummy\r\n-----\r\n    1\r\n```\r\n\r\nNote how with the quoted path component the input object is simply passed through.\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\nPowerShell Core v6.0.0-rc.2 (v6.0.0-rc.2) on Microsoft Windows 7 Enterprise  (64-bit; v6.1.7601)\r\nWindows PowerShell v5.1.14409.1012 on Microsoft Windows 7 Enterprise  (64-bit; v6.1.7601)\r\n```\r\n",
  "closed_at": "2018-03-17T09:13:28Z",
  "comments": [
    {
      "author": "BrucePay",
      "author_association": "COLLABORATOR",
      "body": "Hi @mklement0 - I believe the problem has to do with the dot not the quotes (the dot problem is addressed in another issue). If the parser is in command mode and encounters an argument beginning with a quote, everything in the quotes is treated as the argument. Everything after the quotes is treated as the next argument:\r\n```\r\nPS > write-output \"hi\"there   # returns two arguments                                                                                                    \r\nhi\r\nthere\r\nPS > \r\n```\r\nHowever, if the parser encounters a quote in the body of the argument, the entire string is taken as the argument:\r\n```\r\nPS > write-output oh\" hi \"there   # returns one argument                                                                                             \r\noh hi there\r\nPS > \r\n```\r\n\r\n",
      "created_at": "2018-03-09T00:38:04Z",
      "updated_at": "2018-03-09T00:38:04Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@BrucePay:\r\n\r\nActually, what's happening here is different: `'dummy'.foo` is evaluated as an _expression_, which means that `.foo` is interpreted as a _property access_ on string literal `'dummy'`, which yields `$null`.\r\n(By contrast, if it were parsed as _two_ arguments, `Select-Object` would report an _error_, due to a now unbindable positional argument.)\r\n\r\nThat fact is more obvious if you use an existing property name:\r\n\r\n```powershell\r\n> Write-Output 'dummy'.Length\r\n5\r\n```\r\n\r\nI'm closing this issue, but I'll address this behavior generally, along with the `\"a\"b`-`a\"b\"` asymmetry, in a new issue.",
      "created_at": "2018-03-17T09:13:27Z",
      "updated_at": "2018-03-17T09:13:27Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@BrucePay: I've created #6467 to highlight the underlying issue (and others).",
      "created_at": "2018-03-22T20:16:07Z",
      "updated_at": "2018-03-22T20:16:07Z"
    }
  ],
  "created_at": "2018-02-07T13:15:35Z",
  "number": 6125,
  "state": "closed",
  "title": "Select-Object misbehaves with a property name that has a quoted component",
  "updated_at": "2018-03-24T17:19:02Z"
}