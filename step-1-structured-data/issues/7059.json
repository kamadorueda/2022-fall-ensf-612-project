{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7059",
  "author": "daxian-dbw",
  "body": "When `-PSVersion` is specified, it should be respected. And all supported PSVersions (2.0 to 5.1) should be supported when the corresopnding version of Windows PowerShell is available.\r\n\r\nNote that, when `-PSEdition 2.0` is specified, `Start-Job` checks if PSv2 is installed using the method `RemotingCommandUtil.CheckIfPowerShellVersionIsInstalled` which will blindly throw exception in PSCore (see code below). If we want to support `-PSEdition 2.0`, then the `#if CORECLR` section of the method body should be removed.\r\n\r\n```c#\r\n        internal static void CheckIfPowerShellVersionIsInstalled(Version version)\r\n        {\r\n            // Check if PowerShell 2.0 is installed\r\n            if (version != null && version.Major == 2)\r\n            {\r\n#if CORECLR\r\n                // PowerShell 2.0 is not available for CoreCLR\r\n                throw new ArgumentException(\r\n                    PSRemotingErrorInvariants.FormatResourceString(\r\n                        RemotingErrorIdStrings.PowerShellNotInstalled,\r\n                        version, \"PSVersion\"));\r\n#else\r\n                // Because of app-compat issues, in Win8, we will have PS 2.0 installed by default but not .NET 2.0\r\n                // In such a case, it is not enough if we check just PowerShell registry keys. We also need to check if .NET 2.0 is installed.\r\n                ...\r\n```\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\nPS:1> $job = Start-Job { $PSVersionTable.PSVersion } -PSVersion 5.1\r\nPS:2> Receive-Job $job\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```none\r\nPS:2> Receive-Job $job\r\n\r\nMajor  Minor  Build  Revision\r\n-----  -----  -----  --------\r\n5      1      17134  81\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n```none\r\nPS:2> Receive-Job $job\r\n\r\nMajor  Minor  Patch  PreReleas BuildLabel\r\n                     eLabel\r\n-----  -----  -----  --------- ----------\r\n6      0      1\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.1\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.1\r\nOS                             Microsoft Windows 10.0.17134\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2020-01-06T20:37:42Z",
  "comments": [
    {
      "author": "BrucePay",
      "author_association": "COLLABORATOR",
      "body": ">  However, in PowerShell Core, we can only start job using pwsh. So the whole -PSVersion parameter doesn't really make sense.\r\n\r\nI believe this is a bug (see #7052). Basically we've hard-coded what gets run when we start a job. There is no reason for this. We should be able to start a WindowsPowerShell job.",
      "created_at": "2018-06-13T22:16:19Z",
      "updated_at": "2018-06-13T22:16:19Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@BrucePay I have changed this issue to only track the `Start-Job -PSVersion` problem.\r\nIt turns out my comment about PSCore remoting to PSv2 server was not accurate. WMF 4.0 is required for setting up a PSCore endpoint, but it might not require WMF 4.0 for PSCore to connect to a PSv2 server. That means it's possible we still need to handle PSv2 server in remoting code.",
      "created_at": "2018-06-13T23:46:41Z",
      "updated_at": "2020-01-03T22:46:04Z"
    },
    {
      "author": "anmenaga",
      "author_association": "CONTRIBUTOR",
      "body": "This is fixed in `7.0.0-rc.1` for `-PSVersion 5.1`:\r\n```\r\nPS C:\\> $PSVersionTable.PSVersion\r\n\r\nMajor  Minor  Patch  PreReleaseLabel BuildLabel\r\n-----  -----  -----  --------------- ----------\r\n7      0      0      rc.1\r\n\r\nPS C:\\> $job = Start-Job { $PSVersionTable.PSVersion } -PSVersion 5.1\r\nPS C:\\> Receive-Job $job\r\n\r\nMajor  Minor  Build  Revision\r\n-----  -----  -----  --------\r\n5      1      14393  3383\r\n```",
      "created_at": "2020-01-03T18:51:39Z",
      "updated_at": "2020-01-03T18:51:39Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@anmenaga I think supporting `-PSVersion 5.1` should be sufficient to close this bug, right?",
      "created_at": "2020-01-03T22:47:11Z",
      "updated_at": "2020-01-03T22:47:11Z"
    },
    {
      "author": "anmenaga",
      "author_association": "CONTRIBUTOR",
      "body": "@daxian-dbw I agree.",
      "created_at": "2020-01-06T19:13:56Z",
      "updated_at": "2020-01-06T19:13:56Z"
    }
  ],
  "created_at": "2018-06-13T20:24:25Z",
  "number": 7059,
  "state": "closed",
  "title": "PowerShell Core cannot start a job using Windows PowerShell",
  "updated_at": "2020-01-06T20:37:42Z"
}