{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13597",
  "author": "blue2cat",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 and PowerShell 7+ issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6).\r\n\r\n-->\r\n\r\n## Steps to reproduce\r\n\r\n```powershell\r\n\r\n    $url = \"https://192.168.1.1\"\r\n    [Net.ServicePointManager]::ServerCertificateValidationCallback = { $true }\r\n    $req = [Net.HttpWebRequest]::Create($url)\r\n    $req.GetResponse() \r\n    [datetime]$expiration = [System.DateTime]::Parse($req.ServicePoint.Certificate.GetExpirationDateString())\r\n    Write-Output $expiration\r\n\r\n```\r\n\r\n## Expected behavior\r\n\r\n```none\r\n#Expected output in v5:\r\n \r\nIsMutuallyAuthenticated : False\r\nCookies                 : {}\r\nHeaders                 : {Connection, Accept-Ranges, Content-Length, Content-Type...}\r\nSupportsHeaders         : True\r\nContentLength           : 292\r\nContentEncoding         : \r\nContentType             : text/html\r\nCharacterSet            : ISO-8859-1\r\nServer                  : nginx\r\n.....\r\nIsFromCache             : False\r\n\r\n```\r\n\r\n## Actual behavior\r\n\r\n```none\r\n#PowerShell Version 7 error: \r\n\r\nException calling \"GetResponse\" with \"0\" argument(s): \"The SSL connection could not be established, see inner exception. There \r\nis no Runspace available to run scripts in this thread. You can provide one in the DefaultRunspace property of the \r\nSystem.Management.Automation.Runspaces.Runspace type. The script block you attempted to invoke was: $true\"\r\n\r\n```\r\n\r\n## Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.3\r\nPSEdition                      Core\r\nGitCommitId                    7.0.3\r\nOS                             Microsoft Windows 10.0.19041\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2020-09-10T12:00:07Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "When you hand a scriptblock to be converted to a delegate/callback for a .NET API, PowerShell has zero control of exactly how that scriptblock/callback gets invoked. \r\n\r\nSo, if the .NET API invokes it on a different thread, one without a default runspace, it will fail. There's really not much PowerShell can do about that without re-designing significant portions of the PS engine. \r\n\r\n/cc @SeeminglyScience @daxian-dbw did something in this .NET API change for .NET Core and made its use in PowerShell less stable, perhaps? It did seem to work fairly well for PowerShell 5.1. \ud83e\udd14 ",
      "created_at": "2020-09-08T17:11:26Z",
      "updated_at": "2020-09-08T17:11:38Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "Yeah probably just gets called in a different thread now.  There is an issue open for adding a similar delegate to `Invoke-WebRequest` (#4899).  Though if all you're doing is `{ $true }`, you can use the new `SkipCertificateCheck` parameter.",
      "created_at": "2020-09-08T18:23:33Z",
      "updated_at": "2020-09-08T18:23:42Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2020-09-10T12:00:06Z",
      "updated_at": "2020-09-10T12:00:06Z"
    }
  ],
  "created_at": "2020-09-08T16:26:29Z",
  "number": 13597,
  "state": "closed",
  "title": "ServerCertificateValidationCallback causes problems with secure connections",
  "updated_at": "2020-09-10T12:00:07Z"
}