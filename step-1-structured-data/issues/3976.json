{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3976",
  "author": "stej",
  "body": "Steps to reproduce\r\n------------------\r\n\r\n```powershell\r\nPS D:\\temp\\powershell-600beta2> sl d:\\temp\r\nPS D:\\temp> [System.Environment]::CurrentDirectory\r\n# returns d:\\temp\\powershell-600beta2\r\nPS D:\\temp> [System.Environment]::CurrentDirectory = 'd:\\temp'\r\nPS D:\\temp> [System.Environment]::CurrentDirectory\r\n# returns d:\\temp\r\nPS D:\\temp> \"echo im from temp!\" | sc bb.cmd\r\nPS D:\\temp> gcm bb\r\n#returns \r\n# CommandType     Name                                               Version    Source\r\n# -----------     ----                                               -------    ------\r\n# Application     bb.cmd                                             0.0.0.0    C:\\Users\\testu\\AppData\\Roaming\\npm\\...\r\n\r\nPS D:\\temp> & bb\r\n# returns \r\n# Bobril-build 0.70.0 - D:\\temp\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n`& bb` should type call bb.cmd from d:\\temp\r\n\r\nActual behavior\r\n---------------\r\n\r\n`& bb calls` completely different bb.cmd that is found on one path from `$env:path`\r\n\r\nWhen I specify directory, it works\r\n```powershell\r\nPS D:\\temp> & $pwd\\bb.cmd\r\n# returns D:\\temp>echo im from temp!\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.0-beta\r\nPSEdition                      Core\r\nBuildVersion                   3.0.0.0\r\nCLRVersion\r\nGitCommitId                    v6.0.0-beta.2\r\nOS                             Microsoft Windows 10.0.14393\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2017-06-09T20:33:38Z",
  "comments": [
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "That is by design and a security feature (an intentional deviation from `cmd.exe`, but in line with POSIX-like shells): if you really want to invoke an executable located in the _current_ location, you must explicitly signal that intent by using a _path_; `.\\bb` in the simplest case.\r\n\r\n_Filename-only_ invocations - including via `&` and `.` - by design only work with executables located in one of the `$env:PATH` directories.\r\nAccordingly, `Get-Command` only reports those.\r\n\r\nIn your case, the behavior isn't obvious, but had you tried to invoke an executable that _only_ exists in the current directory (not also in the PATH), you'd have seen this suggestion (following the error message):\r\n\r\n> Suggestion [3,General]: The command bb was not found, but does exist in the current location. Windows PowerShell does not load commands from the current location by default. If you trust this command, instead type: \".\\bb\". See \"get-help about_Command_Precedence\" for more details.\r\n\r\n\r\n\r\n",
      "created_at": "2017-06-09T15:14:55Z",
      "updated_at": "2017-06-09T15:15:05Z"
    },
    {
      "author": "stej",
      "author_association": "NONE",
      "body": "Ok, got it. I might have read it loong time ago, but forgot since then. \r\nIf intended, there is nothing more to do ;)\r\n\r\nThanks for clarification, helped me with my problem!",
      "created_at": "2017-06-09T20:33:38Z",
      "updated_at": "2017-06-09T20:33:38Z"
    }
  ],
  "created_at": "2017-06-09T11:38:29Z",
  "labels": [
    "Issue-Question",
    "Resolution-Answered"
  ],
  "number": 3976,
  "state": "closed",
  "title": "Call operator and Get-Command ignore .cmd file in current directory",
  "updated_at": "2017-06-11T10:12:35Z"
}