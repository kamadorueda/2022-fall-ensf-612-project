{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13771",
  "author": "MatejKafka",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 and PowerShell 7+ issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6).\r\n\r\n-->\r\n\r\n## Steps to reproduce\r\nRun the following Pester test using `Invoke-Pester .\\test.ps1`.\r\n\r\n```powershell\r\nBeforeAll {\r\n\tfunction Add-DynamicParam {\r\n\t\tparam(\r\n\t\t\t\t[Parameter(Mandatory)]\r\n\t\t\t\t[System.Management.Automation.RuntimeDefinedParameter]\r\n\t\t\t$RuntimeParameter,\r\n\t\t\t\t[System.Management.Automation.RuntimeDefinedParameterDictionary]\r\n\t\t\t$ParameterDictionary\r\n\t\t)\r\n\r\n\t\t# create the dictionary (should contain all created dynamic params, returned from dynamicparam block)\r\n\t\tif ($null -eq $ParameterDictionary) {\r\n\t\t\t$ParameterDictionary = New-Object System.Management.Automation.RuntimeDefinedParameterDictionary\r\n\t\t}\r\n\t\t$ParameterDictionary.Add($RuntimeParameter.Name, $RuntimeParameter)\r\n\t\treturn $ParameterDictionary\r\n\t}\r\n\r\n\r\n\tfunction New-DynamicSwitchParam {\r\n\t\tparam(\r\n\t\t\t\t[Parameter(Mandatory)]\r\n\t\t\t\t[string]\r\n\t\t\t$ParameterName,\r\n\t\t\t\t[System.Management.Automation.RuntimeDefinedParameterDictionary]\r\n\t\t\t$ParameterDictionary\r\n\t\t)\r\n\r\n\t\t# create a dummy collection of attributes\r\n\t\t$AttributeCollection = New-Object System.Collections.ObjectModel.Collection[System.Attribute]\r\n\t\t# add dummy parameter to fix the \"cannot be specified in parameter set '__AllParameterSets'.\" error\r\n\t\t$AttributeCollection.Add([System.Management.Automation.ParameterAttribute]::new())\r\n\t\t\r\n\t\t# create and return the dynamic parameter\r\n\t\t$RuntimeParameter = New-Object System.Management.Automation.RuntimeDefinedParameter(\r\n\t\t\t\t$ParameterName, [switch], $AttributeCollection)\t\r\n\t\treturn Add-DynamicParam $RuntimeParameter $ParameterDictionary\r\n\t}\r\n}\r\n\r\n\r\nDescribe \"DynamicParams\" {\r\n\tBeforeAll {\r\n\t\tfunction TestFn {\r\n\t\t\t[CmdletBinding()]\r\n\t\t\tparam(\r\n\t\t\t\t\t[Parameter(Mandatory)]\r\n\t\t\t\t$Param1,\r\n\t\t\t\t\t[Parameter(Mandatory)]\r\n\t\t\t\t$Param2,\r\n\t\t\t\t\t[Parameter(Mandatory)]\r\n\t\t\t\t$Param3\r\n\t\t\t)\r\n\t\t\t\r\n\t\t\tdynamicparam {\r\n\t\t\t\treturn New-DynamicSwitchParam \"SwitchParam\"\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tbegin {\r\n\t\t\t\techo $PSBoundParameters\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tIt \"parsed parameter order is correct\" {\r\n\t\t$params = TestFn -SwitchParam \"test1\" \"test2\" \"test3\"\r\n\t\t\r\n\t\t$params.Keys | Should -HaveCount 4\r\n\t\t$params.SwitchParam | Should -Be $true\r\n\t\t@($params.Param1, $params.Param2, $params.Param3) | Should -BeExactly @(\"test1\", \"test2\", \"test3\")\r\n\t}\r\n}\r\n```\r\n\r\n## Expected behavior\r\nTest passes, and the parameters have values according to the order they were passed in.\r\n\r\n## Actual behavior\r\nFirst positional argument (`\"test1\"`) is assigned to the last positional parameter, the order of the remaining arguments is correct (but shifted to the left).\r\n```none\r\n[-] DynamicParams.parsed parameter order is correct 163ms (131ms|32ms)\r\n Expected exactly @('test1', 'test2', 'test3'), but got @('test2', 'test3', 'test1').\r\n at @($params.Param1, $params.Param2, $params.Param3) | Should -BeExactly @(\"test1\", \"test2\", \"test3\"), D:\\_\\Pkg\\app\\Pkg\\Utils.Tests.ps1:32\r\n```\r\n\r\n## Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.1\r\nPSEdition                      Core\r\nGitCommitId                    7.0.1\r\nOS                             Microsoft Windows 10.0.19041\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Intriguing. The symptom only goes away if you place the switch parameter after all positional ones (which, of course, you shouldn't have to do, so this is clearly a bug).\r\n",
      "created_at": "2020-10-11T18:00:27Z",
      "updated_at": "2020-10-11T18:00:27Z"
    }
  ],
  "created_at": "2020-10-11T16:44:07Z",
  "labels": [
    "Issue-Question",
    "WG-Engine"
  ],
  "number": 13771,
  "state": "open",
  "title": "Adding a [switch] parameter in dynamicparam block breaks order of positional arguments",
  "updated_at": "2020-10-11T18:00:27Z"
}