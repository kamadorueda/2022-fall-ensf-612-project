{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4351",
  "author": "mklement0",
  "body": "Steps to reproduce\r\n------------------\r\n\r\n```powershell\r\n# -no is ambiguous: could be -NoProfile, -NoLogo, ...\r\npowershell -no -command get-date\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\nAn error complaining about the ambiguity of the parameter name and refusal to continue.\r\n\r\nActual behavior\r\n---------------\r\n\r\nPS Core and Windows PS behave differently, due to the recent Core change to default to `-File` instead of `-Command`:\r\n\r\n* PowerShell Core:\r\n\r\n```none\r\nThe argument '-no' to the -File parameter does not exist. Provide the path to an existing '.ps1' file as an argument to the -File parameter.\r\nPowerShell v6.0.0-beta.4\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n```\r\n\r\n* Windows PowerShell:\r\n\r\n```none\r\n-no : The term '-no' is not recognized as the name of a cmdlet, function, script file, or operable program. Check the spelling of the name, or if a path was\r\nincluded, verify that the path is correct and try again.\r\nAt line:1 char:1\r\n+ -no -command get-date\r\n+ ~~~\r\n    + CategoryInfo          : ObjectNotFound: (-no:String) [], CommandNotFoundException\r\n    + FullyQualifiedErrorId : CommandNotFoundException\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n```powershell\r\nPowerShell Core v6.0.0-beta.4 on macOS 10.12.5\r\nPowerShell Core v6.0.0-beta.4 on Ubuntu 16.04.2 LTS\r\nPowerShell Core v6.0.0-beta.4 on Microsoft Windows 10 Pro (64-bit; v10.0.15063)\r\nWindows PowerShell v5.1.15063.413 on Microsoft Windows 10 Pro (64-bit; v10.0.15063)\r\n```\r\n",
  "closed_at": "2017-08-17T03:34:02Z",
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "`-no` might be a valid script file, so I don't think we want check against ambiguous intended parameters (`-Command` didn't do this either).  However, we can improve the error message.  How about:\r\n\r\n```\r\n-no : The term `-no` is not recognized as a valid script file.  Check the spelling of the name, or if a path was\r\nincluded, verify that the path is correct and try again.\r\n```\r\n",
      "created_at": "2017-08-14T13:03:00Z",
      "updated_at": "2017-08-14T13:03:00Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT:\r\n\r\nFor consistency and predictability, you should never assume that `-`-prefixed tokens are parameter _values_, _unless_ they follow a recognized, unambiguous parameter _name_ (such as `-Command`):\r\n\r\n* If a _positional_ token _looks like_ a parameter _name_ - i.e., if it starts with `-` followed by a  _letter_ -  it should be interpreted as such.\r\n* If that parameter name is not recognized / cannot be resolved unambiguously, an error should occur, just as would happen _inside_ PowerShell with something like `get-item -f *.txt` (`Get-Item : Parameter cannot be processed because the parameter name 'f' is ambiguous. Possible matches include: -Filter -Force.`).\r\n\r\n* By contrast, if a positional parameter _value_ happens to start with `-` (e.g., a script file named  \r\n`-no`), it is the user's responsibility to prefix it with an explicit parameter name in order to disambiguate: `-File -no`.\r\n\r\n\r\n\r\n\r\n",
      "created_at": "2017-08-15T00:46:53Z",
      "updated_at": "2017-08-15T00:58:44Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT: I just realized that even PowerShell's _internal_ parameter parsing has inconsistencies - see #4576",
      "created_at": "2017-08-15T01:26:52Z",
      "updated_at": "2017-08-15T01:26:52Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I have a change that I think addresses your valid concern:\r\n\r\n```powershell\r\nPS> .\\powershell.exe -no -file foo\r\nInvalid argument '-no', did you mean:\r\n\r\n        -nologo\r\n        -noexit\r\n        -noprofile\r\n        -noninteractive\r\n```\r\n\r\nNeed to add tests",
      "created_at": "2017-08-15T08:21:25Z",
      "updated_at": "2017-08-15T08:21:25Z"
    }
  ],
  "created_at": "2017-07-26T20:38:27Z",
  "labels": [
    "WG-Interactive-Console"
  ],
  "number": 4351,
  "state": "closed",
  "title": "CLI: Ambiguous parameter names such as -no are misinterpreted as positional parameter values",
  "updated_at": "2017-08-17T03:34:02Z"
}