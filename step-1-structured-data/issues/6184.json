{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6184",
  "author": "Arnavion",
  "body": "From `docs/installation/linux.md`:\r\n\r\n>Note: When installing PowerShell Core, OpenSUSE may report that nothing provides `libcurl`. `libcurl` should already be installed on supported versions of OpenSUSE. Run `zypper search libcurl` to confirm. The error will present 2 'solutions'. Choose 'Solution 2' to continue installing PowerShell Core.\r\n\r\n1. If the intention is that the user should choose the `break powershell-6.0.1-1.rhel.7.x86_64 by ignoring some of its dependencies` option, then describing the option text explicitly (\"Choose the solution to ignore dependencies and install the package anyway.\") would be better. I don't believe zypper has to deterministically give that one as \"Solution 2\" and it's a vague instruction anyway.\r\n\r\n1. It would be better to tell users to run `zypper search --provides --match-exact '/usr/lib64/libcurl.so.4'` instead of just `zypper search libcurl` to verify that they have the required library. The current command finds all packages that have `libcurl` in the name. While it's obvious which package the user should be looking for, there's no reason to be vague about it.\r\n\r\n1. I assume this situation happens because you reuse the RHEL package for openSUSE and RHEL's libcurl package provides \"libcurl\". Why not make a separate package for openSUSE that requires \"libcurl4\" so that this workaround is not needed in the first place?",
  "closed_at": "2018-11-28T21:05:50Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Perhaps we'll use .Net Core 2.1 in the next release and the behavior can be changed.",
      "created_at": "2018-02-18T16:49:37Z",
      "updated_at": "2018-02-18T16:49:37Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov are they for sure going to have the managed HTTP solution baked into .NET Core 2.1.x? I tried to figure out where they were at on that, but was only able to find vague mentions of it.\r\nI will be very happy to be rid of this painful relationship with libcurl.",
      "created_at": "2018-02-18T20:37:48Z",
      "updated_at": "2018-02-18T20:37:48Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I believe we could ask them directly about managed httpclient. Previously I saw md file about this.\r\nI also saw a recent PR which makes searching for *.so more reliable.",
      "created_at": "2018-02-19T19:34:20Z",
      "updated_at": "2018-02-19T19:34:20Z"
    },
    {
      "author": "Arnavion",
      "author_association": "NONE",
      "body": "(Note that (1) and (2) are doc fixes and could be done now.)",
      "created_at": "2018-03-05T12:07:54Z",
      "updated_at": "2018-03-05T12:07:54Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@Arnavion Feel free to create PR.",
      "created_at": "2018-03-05T12:54:13Z",
      "updated_at": "2018-03-05T12:54:13Z"
    },
    {
      "author": "Arnavion",
      "author_association": "NONE",
      "body": "Opened a PR.",
      "created_at": "2018-03-08T06:31:12Z",
      "updated_at": "2018-03-08T06:31:12Z"
    },
    {
      "author": "Arnavion",
      "author_association": "NONE",
      "body": ">>Perhaps we'll use .Net Core 2.1 in the next release and the behavior can be changed.\r\n\r\n>are they for sure going to have the managed HTTP solution baked into .NET Core 2.1.x? I tried to figure out where they were at on that, but was only able to find vague mentions of it.\r\n\r\nFYI, [the blog post for 2.1.300-preview2 says it has the managed HTTP implementation.](https://blogs.msdn.microsoft.com/dotnet/2018/04/11/announcing-net-core-2-1-preview-2/#user-content-sockets-performance-and-socketshttphandler)",
      "created_at": "2018-04-11T23:17:27Z",
      "updated_at": "2018-04-11T23:17:47Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@Arnavion Thanks for the reference! It is good news. \r\n\r\n@daxian-dbw @SteveL-MSFT .Net Core 2.1 **Preview2** is released. Seems they fixed tons bugs. Is we ready to migrate?",
      "created_at": "2018-04-12T03:32:12Z",
      "updated_at": "2018-04-12T03:32:12Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I think we should move to Preview2 before our next 6.1 Preview release",
      "created_at": "2018-04-12T03:39:13Z",
      "updated_at": "2018-04-12T03:39:13Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Tracking Issue #6632 ",
      "created_at": "2018-04-12T03:51:15Z",
      "updated_at": "2018-04-12T03:51:15Z"
    },
    {
      "author": "Arnavion",
      "author_association": "NONE",
      "body": "Since the 2.1 port was done and 2.1 was released today, I assume it's final that the next PS major release will use it? If so, should this issue target 1) removing [the libcurl required dependency from the RHEL rpm package,](https://github.com/PowerShell/PowerShell/blob/115d0715/tools/packaging/packaging.psm1#L1004)  and 2) removing the note in the OP from the docs?",
      "created_at": "2018-05-30T17:53:40Z",
      "updated_at": "2018-05-30T17:58:59Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@Arnavion We is already on 2.1 RC1 :-) And yes, next release will be on 2.1.\r\nWe have to review our packaging and doc. Feel free to contribute!\r\nI believe docs should be updated for only new version 6.1 not 6.0.",
      "created_at": "2018-05-31T05:48:29Z",
      "updated_at": "2018-05-31T05:49:31Z"
    },
    {
      "author": "Arnavion",
      "author_association": "NONE",
      "body": "This is done now.",
      "created_at": "2018-11-28T21:05:50Z",
      "updated_at": "2018-11-28T21:05:50Z"
    }
  ],
  "created_at": "2018-02-18T15:14:46Z",
  "number": 6184,
  "state": "closed",
  "title": "libcurl dependency on openSUSE",
  "updated_at": "2018-11-29T05:43:29Z"
}