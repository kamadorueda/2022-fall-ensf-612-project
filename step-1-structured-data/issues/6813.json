{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6813",
  "author": "ffeldhaus",
  "body": "Since installing 6.1.0-preview.2 I get an StackOverflowException soon after I start PowerShell. This occurs on Mac OS X and Windows 10. This did not occur on 6.1.0-preview.1.\r\n\r\nI suspect it has to do with my Module `OnCommand-Insight` as the issue did not occur when the module was not installed.\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\nInstall 6.1.0-preview.2, then\r\n\r\n```powershell\r\nInstall-Module -Name \"OnCommand-Insight\" -Scope CurrentUser\r\n```\r\n\r\nRestart PowerShell\r\n\r\n```shell\r\nFlorians-MacBook-Pro:~ florianfeldhaus$ pwsh\r\nPowerShell v6.1.0-preview.2\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\n\r\nhttps://aka.ms/pscore6-docs\r\nType 'help' to get help.\r\n\r\nPS /Users/florianfeldhaus> Process is terminating due to StackOverflowException.\r\nAbort trap: 6\r\n\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\nMac OS X\r\n\r\n```powershell\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.1.0-preview.2\r\nPSEdition                      Core\r\nGitCommitId                    v6.1.0-preview.2\r\nOS                             Darwin 17.5.0 Darwin Kernel Version 17.5.0: Mon Mar  5 22:24:32 PST 2018; root:xnu-4570.51.1~1/RELEASE_X86_64\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\nOn Windows I was not fast enough, thus I edited the output from the 6.0.0 installation which is running fine:\r\n\r\n```powershell\r\nPS C:\\Users\\Florian\\Documents\\GitHub> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.1.0-preview.2\r\nPSEdition                      Core\r\nGitCommitId                    v6.1.0-preview.2\r\nOS                             Microsoft Windows 10.0.16299\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```",
  "closed_at": "2018-05-10T23:09:37Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "You might want to leave a link to the module itself so we can actually see what's going on with it.",
      "created_at": "2018-05-03T13:52:04Z",
      "updated_at": "2018-05-03T13:52:04Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@ffeldhaus Could you please make more simple repo?",
      "created_at": "2018-05-03T14:21:13Z",
      "updated_at": "2018-05-03T14:21:13Z"
    },
    {
      "author": "ffeldhaus",
      "author_association": "CONTRIBUTOR",
      "body": "While I don't think it's a problem of the module, as the issue did not occur with 6.1.0-preview.1 as well as 6.0.0, 6.0.1 and 6.0.2, here's the link to the sourcecode of the OnCommand-Insight Module:\r\nhttps://github.com/ffeldhaus/OnCommand-Insight\r\n\r\nModule Download:\r\nhttps://github.com/ffeldhaus/OnCommand-Insight/releases/download/4.2.2/OnCommand-Insight.zip\r\n\r\nModule on PowerShell Gallery:\r\nhttps://www.powershellgallery.com/packages/OnCommand-Insight\r\n\r\n@iSazonov How should I make a more simple repo? As I don't know what is causing the issue, I can't really narrow it down. Do you have any ideas for debugging the PowerShell crash?",
      "created_at": "2018-05-03T15:42:46Z",
      "updated_at": "2018-05-03T15:42:46Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "I would look at splitting up that massive module file into individual functions, classes, etc.\r\n\r\nIn a file that big, you really have no good way of figuring out exactly which parts or combination of parts is really the issue. Even if you have a build script which compiles it into a singular PSM1, if at least you have the source well organised, you'll have a much easier time pinpointing what's going wrong.",
      "created_at": "2018-05-03T16:24:22Z",
      "updated_at": "2018-05-03T16:24:22Z"
    },
    {
      "author": "ffeldhaus",
      "author_association": "CONTRIBUTOR",
      "body": "@vexx32 I could split the module into multiple files. I already thought about it, but I had some trouble with building a module consisting of multiple files during my last try and thus did not spend more time on this. Regardless of that, PowerShell should not just crash. If PowerShell throws an exception, it should indicate where the Exception was thrown. As I had no trouble with PowerShell 5.1, 6.0.0, 6.0.1, 6.0.2 and 6.1.0-preview.1 I expect this to be a problem introduced with fixes or improvement for 6.1.0-preview.2.\r\n\r\nAny idea how to troubleshoot the issue?",
      "created_at": "2018-05-03T16:30:34Z",
      "updated_at": "2018-05-03T16:30:34Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "The only thing I think you can really do in a case like this is save the module somewhere locally (*not* installed), hook in a debugger, and manually import the module by pointing to the PSD1 filename. If it still crashes like this, see if you can find anything useful in the debug data as it's doing the import.",
      "created_at": "2018-05-03T16:40:24Z",
      "updated_at": "2018-05-03T16:40:24Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": ">Any idea how to troubleshoot the issue?\r\n\r\nDebugger.\r\nYou can review Release notes https://github.com/PowerShell/PowerShell/releases",
      "created_at": "2018-05-03T16:56:20Z",
      "updated_at": "2018-05-03T16:56:20Z"
    },
    {
      "author": "ffeldhaus",
      "author_association": "CONTRIBUTOR",
      "body": "I tried to setup debugging according to https://github.com/PowerShell/PowerShell/blob/master/docs/debugging/README.md but as I do not have a Windows Coding environment at the moment and only limited C# experience, I expect that I won't be able to setup proper PowerShell Debugging within the next days.\r\n\r\nThat said, I consider this a ShowStopper for the release of 6.1. Not because it crashes during loading of my module, but because PowerShell should not Crash when loading a module which loads fine in previous releases.\r\n\r\nI checked the Changelog and found that PR #6523 did extensive changes to the Module loading code. Maybe some behavior changed causing the crashes here.\r\n\r\nAs suggested I manually loaded the Module from file and discovered, that 6.1.0-preview.2 imports the `.psm1` file without issues, but when importing the `.psd1` module manifest, the Exception is thrown.\r\n\r\nIt would be great if someone with a working Debugging environment could check the following steps which should reproduce the issue and share the findings:\r\n\r\n1. Download the Module from https://github.com/ffeldhaus/OnCommand-Insight/releases/download/4.2.2/OnCommand-Insight.zip\r\n2. Unzip OnCommand-Insight.zip\r\n3. `Import-Module ./OnCommand-Insight.psd1`\r\n\r\nEDIT: I noted that the Module Manifest contains german comments with non ASCII characters like \u00e4,\u00f6,\u00fc, maybe some code changes do not properly handle non ASCII characters in the Module Manifest",
      "created_at": "2018-05-03T20:36:39Z",
      "updated_at": "2018-05-03T20:47:04Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw Could you please look the Issue\r\n>I checked the Changelog and found that PR #6523 did extensive changes to the Module loading code. Maybe some behavior changed causing the crashes here.\r\nAs suggested I manually loaded the Module from file and discovered, that 6.1.0-preview.2 imports the .psm1 file without issues, but when importing the .psd1 module manifest, the Exception is thrown.\r\n",
      "created_at": "2018-05-04T08:30:52Z",
      "updated_at": "2018-05-04T08:30:52Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I see we catch an assert in line https://github.com/PowerShell/PowerShell/blob/master/src/System.Management.Automation/engine/Modules/ModuleCmdletBase.cs#L3001",
      "created_at": "2018-05-04T09:04:03Z",
      "updated_at": "2018-05-04T09:04:03Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Related Issue #6818 ",
      "created_at": "2018-05-04T09:24:53Z",
      "updated_at": "2018-05-04T09:24:53Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@ffeldhaus Your manifest file seems to contain a circular reference\r\n>RootModule = 'OnCommand-Insight'\r\n>NestedModules = @('OnCommand-Insight')\r\n\r\nPlease remove second line and test.\r\n\r\nDup #5565",
      "created_at": "2018-05-08T10:03:13Z",
      "updated_at": "2018-05-08T10:03:13Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@ffeldhaus Thanks for reporting the bug. This is a regression introduced from #6523,  in [`PSModuleInfo.cs`](https://github.com/PowerShell/PowerShell/pull/6523/files#diff-9bbf82b18c0321d75bdb0e7693a44040L582). A circular nested module check was removed because the comment there suggested it happens only with a deprecated workflow module. This causes a `StackOverflow` exception when running into circular nested modules.\r\n\r\nAs @iSazonov pointed out, your module manifest is not well structured. The `RootModule` shouldn't be put in the `NestedModules` again, though that shouldn't make powershell crash.",
      "created_at": "2018-05-08T20:25:59Z",
      "updated_at": "2018-05-08T20:25:59Z"
    }
  ],
  "created_at": "2018-05-03T12:19:19Z",
  "number": 6813,
  "state": "closed",
  "title": "Process is terminating due to StackOverflowException",
  "updated_at": "2018-05-11T03:10:54Z"
}