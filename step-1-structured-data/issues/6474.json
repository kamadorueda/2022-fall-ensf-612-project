{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6474",
  "author": "tjoanp",
  "body": "Steps to reproduce\r\n------------------\r\nLogged in as user1, who doesn't have access to restrictedfolder, running pwsh:\r\n\r\n> Test-Path \\\\\\server\\share\\restrictedfolder\r\nReturns False    <--- This is correct\r\n\r\nOpen cmd.exe as user2, who have access to restrictedfolder, and run:\r\n\r\n> dir \\\\\\server\\share\r\n\r\nSwitch back to the pwsh window, still running as user1\r\n\r\n> Test-Path \\\\\\server\\share\\restrictedfolder\r\nReturns True   <--- This is incorrect\r\n\r\nStill in pwsh, run \r\n> dir \\\\\\server\\share\r\n> Test-Path \\\\\\server\\share\\restrictedfolder\r\nReturns False    <--- This is now correct again\r\n\r\n\r\nExpected behavior\r\n-----------------\r\nTest-Path Should return False the whole time\r\n\r\nActual behavior\r\n---------------\r\nTest-Path returns True for user1 after user2, who has more permissions in the file system. has accessed the share\r\n\r\nThis issue occurs even when running Test-Path against subfolders, for example \\\\server\\share\\folder\\restrictedfolder. I can however still \"fix\" it by running dir \\\\\\server\\share.\r\n\r\nEnvironment data\r\n----------------\r\n```\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.2\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.2\r\nOS                             Microsoft Windows 6.3.9600\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n```",
  "closed_at": "2019-05-31T22:00:52Z",
  "comments": [
    {
      "author": "BrucePay",
      "author_association": "COLLABORATOR",
      "body": "@tjoanp What happens on your system if you use cmd.exe for both users i.e. run cmd.exe and do a dir on the restricted folder instead of running PowerShell and doing a Test-Path?",
      "created_at": "2018-03-23T21:15:18Z",
      "updated_at": "2018-03-23T21:15:18Z"
    },
    {
      "author": "tjoanp",
      "author_association": "NONE",
      "body": "That works as expected, i.e. user1 never sees more folders than the permissions allows.",
      "created_at": "2018-03-23T21:43:29Z",
      "updated_at": "2018-03-23T21:43:29Z"
    },
    {
      "author": "tjoanp",
      "author_association": "NONE",
      "body": "Perhaps I'm looking at a .Net issue?  This also incorrectly returns True:\r\n\r\n` [System.IO.Directory]::Exists(\"\\\\server\\share\\restrictedfolder\")`\r\n",
      "created_at": "2018-03-24T06:37:45Z",
      "updated_at": "2018-03-24T06:39:27Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@tjoanp Please open Issue in CoreFX repo - we could get the fix in 2.1.0.",
      "created_at": "2018-03-24T18:33:00Z",
      "updated_at": "2018-03-24T18:33:00Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as external and has not had any activity for **1 day**. It has been be closed for housekeeping purposes.",
      "created_at": "2019-05-31T22:00:34Z",
      "updated_at": "2019-05-31T22:00:34Z"
    }
  ],
  "created_at": "2018-03-23T18:05:17Z",
  "number": 6474,
  "state": "closed",
  "title": "Test-Path returns True after another user's process accesses a share",
  "updated_at": "2019-05-31T22:00:52Z"
}