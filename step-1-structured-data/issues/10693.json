{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10693",
  "author": "iSazonov",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nEnable nullable reference types in some base classes in:\r\n- ConsoleHostRawUserInterface.cs \r\n- InternalHostRawUserInterface.cs\r\n- ServerRemoteHostRawUserInterface.cs\r\n- MshHostRawUserInterface.cs\r\n- regex.cs - Here Init() method refactored to return delegate and ensure that _isMatch always have a value.\r\n- CommandProcessorBase.cs\r\n- SessionStateScopeAPIs.cs\r\n\r\n## PR Context\r\n\r\nC# 8.0 introduces great feature nullable reference types.\r\nhttps://devblogs.microsoft.com/dotnet/try-out-nullable-reference-types/\r\n\r\nThe feature makes code more readable, understandable and reliable, it forces us to write cleaner code.\r\n\r\nI started with some base classes so that using classes can benefit from this. \r\nI hope we will continue to roll up the feature after the PR.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [ ] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2022-04-16T19:11:14Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@PowerShellTeam @vexx32  Could you please review the PR?\r\n\r\nIn the last days I have tried nullable reference types in different files and sometimes it gives an surprising result. I have already found several places where NRE could potentially be.\r\nAlso I found it is very useful for design understanding.\r\n",
      "created_at": "2019-10-18T18:47:11Z",
      "updated_at": "2019-10-18T18:47:11Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov What are the next steps on this PR? I would like start work on nullable reference types in other classes but we need support in the base classes first.",
      "created_at": "2020-02-05T01:53:18Z",
      "updated_at": "2020-02-05T01:53:18Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": ">  What are the next steps on this PR?\r\n\r\n1. I hope MSFT team start the work and review the PR /cc @SteveL-MSFT \r\n2. Process all APIs starting with base classes.\r\n\r\nRecommendations from Core team https://github.com/dotnet/runtime/blob/e041241bd94adca59a6ec90173e1d90599deed87/docs/coding-guidelines/api-guidelines/nullability.md",
      "created_at": "2020-02-05T03:23:33Z",
      "updated_at": "2020-02-05T03:24:54Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMainainer, Please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2020-05-27T02:03:11Z",
      "updated_at": "2020-05-27T02:03:11Z"
    }
  ],
  "created_at": "2019-10-03T13:55:40Z",
  "number": 10693,
  "state": "closed",
  "title": "Enable nullable reference types in some base classes",
  "updated_at": "2022-04-16T19:11:18Z"
}