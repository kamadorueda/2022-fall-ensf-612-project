{
  "_url": "https://github.com/PowerShell/PowerShell/issues/1882",
  "author": "gtirloni",
  "body": "Please provide RPMs for Fedora too.\n\nThe CentOS RPM isn't a workaround because it doesn't work on Fedora 24 at this moment:\n\n```\n$ powershell \nFailed to initialize CoreCLR, HRESULT: 0x80131500\n```\n",
  "closed_at": null,
  "comments": [
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Ah yes, we'll need to start building for `fedora.23-x64` .NET Core RID too. It will come! (If you want to do it, it's just a few additions of that RID to the correct `project.json` files and a couple places in `build.psm1`, and then generate a new package with `New-UnixPackage`.) I would _love_ to accept a PR like that!\n",
      "created_at": "2016-08-18T17:01:32Z",
      "updated_at": "2016-08-18T17:01:32Z"
    },
    {
      "author": "JoaaoVerona",
      "author_association": "NONE",
      "body": "Pretty please!\n",
      "created_at": "2016-08-18T21:13:32Z",
      "updated_at": "2016-08-18T21:13:32Z"
    },
    {
      "author": "mattico",
      "author_association": "NONE",
      "body": "@gtirloni this [hn comment](https://news.ycombinator.com/item?id=12314693) explains a method to get it working on Fedora 24.\n\nBut yes, a native package would be nice.\n",
      "created_at": "2016-08-18T21:13:36Z",
      "updated_at": "2016-08-18T21:13:36Z"
    },
    {
      "author": "ImNtReal",
      "author_association": "NONE",
      "body": "Any chance the .spec file used to build the current RPM could be released to make it easier to figure out how to package for other distros?\n",
      "created_at": "2016-08-18T22:17:52Z",
      "updated_at": "2016-08-18T22:17:52Z"
    },
    {
      "author": "gromnitsky",
      "author_association": "NONE",
      "body": "@ImNtReal judging from `build.psm1` they are not writing .spec file directly but are using https://github.com/jordansissel/fpm for the rpm generation.\n",
      "created_at": "2016-08-18T22:26:37Z",
      "updated_at": "2016-08-18T22:26:54Z"
    },
    {
      "author": "eliasward",
      "author_association": "NONE",
      "body": "As a temp workaround, I was able to get it running using https://nmilosev.svbtle.com/running-net-core-rc2-on-fedora-23\n",
      "created_at": "2016-08-18T23:20:28Z",
      "updated_at": "2016-08-18T23:20:28Z"
    },
    {
      "author": "brandon-arnold",
      "author_association": "NONE",
      "body": "In the meantime for Fedora 24, install the older LibICU package from ftp://195.220.108.108/linux/fedora/linux/releases/23/Everything/x86_64/os/Packages/l/libicu-54.1-5.fc23.x86_64.rpm as per [this dotnet issue](https://github.com/dotnet/cli/issues/2018).\n",
      "created_at": "2016-08-19T21:04:57Z",
      "updated_at": "2016-08-19T21:04:57Z"
    },
    {
      "author": "plinnell",
      "author_association": "NONE",
      "body": "Using fpm for rpm and .deb generation is **sub optimal**.  Source rpms and .deb files are desirable for a repeatable build outside someone's random build environment. This will be important for acceptance in enterprise distros as well as Debian.\n\n I strongly recommend looking at https://openbuildservice.org for Linux builds as it not only covers a wide range of popular distros, but easily supports building on non X86 arches, everything from tiny Arm5 to IBM mainframes.  OBS as we call it is 10+ years of maturity and the most powerful build platform for native Linux packages.\n\nIf the build team is in Redmon, I'll gladly drop in and show them how it works. It also integrates with Jenkins/Git workflows for CI.\n",
      "created_at": "2016-08-23T06:48:21Z",
      "updated_at": "2016-08-23T06:48:21Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "> Using fpm for rpm and .deb generation is sub optimal.\n\nTotally agree, but it was very quick to go from zero to multiple packages :wink:\n\nI'm unclear if we should own the creation of packages for distributions to release. My understanding is that _usually_ outside package maintainers pick up your build output and source, and create packages for their distribution; not pickup packages from you. However, I don't know if this is the route they'll take with PowerShell. If distributions end up wanting us to maintain the actual packages going into their repositories, we absolutely will need to create them from scratch (RPM spec etc.).\n",
      "created_at": "2016-08-23T13:13:54Z",
      "updated_at": "2016-08-23T13:13:54Z"
    },
    {
      "author": "gtirloni",
      "author_association": "NONE",
      "body": "It would be ideal to have packages accepted into the official repositories but that usually requires quite some time from maintainers. I think it's unreasonable to request this from open source projects. \n\nIf there are volunteers or a company with a vested interest in having these packages, then I'm sure we'll see that in time.\n\nIt's completely acceptable for the upstream project to only provide packages generated through fpm. It's already much better than just releasing the source code or some zipped binaries.\n\nAs for this specific issue, rebuilding on Fedora 24 with the correct requirements properly defined and a new RPM being made available through the website is all that's needed, in my opinion.\n",
      "created_at": "2016-08-23T13:33:46Z",
      "updated_at": "2016-08-23T13:33:46Z"
    },
    {
      "author": "xasx",
      "author_association": "NONE",
      "body": "Maybe people from RedHat get interested in or can be convinced to getting respective packages sooner into their upstream Linux :interrobang: \n",
      "created_at": "2016-08-26T11:38:22Z",
      "updated_at": "2016-08-26T11:38:22Z"
    },
    {
      "author": "jrm16020",
      "author_association": "NONE",
      "body": "CentOS provides a Docker container with Powershell installed.  Why not just use it and a shell function to start it?  Maybe something like this?\n\n```\npowershell () {\n    DOCKER_RUN=\"docker run --rm --name powershell -it\"\n    DOCKER_IMAGE=\"centos/powershell\"\n    DOCKER_COMMAND=\"/usr/bin/powershell\"\n\n    ## Check permissions on Docker socket and fix if necessary\n    if [[ ! -w /var/run/docker.sock ]]; then\n        sudo setfacl -m u:$( whoami ):rw /var/run/docker.sock\n    fi\n\n    ## Make sure Powershell image is installed\n    if [[ \"$( docker images | grep -i powershell &>/dev/null; echo $? )\" != \"0\" ]]; then\n        printf \"Pulling powershell image for use...\\n\"\n        docker pull \"${DOCKER_IMAGE}\" &>/dev/null\n    fi\n\n    ## If we passed arguments, parse them, and if necessary, mount in the directory of the script we're trying to execute.\n    if [[ \"$#\" > 0 ]]; then\n        ARGS=\"$@\"\n        while [[ \"$#\" > 0 ]]; do\n            if [[ \"$1\" == *\".ps1\"* ]]; then\n                CURRENT_DIR=$( dirname $1 )\n            fi\n            shift\n        done\n\n        if [[ -n \"${CURRENT_DIR}\" ]]; then\n            ${DOCKER_RUN} -v ${CURRENT_DIR}:/opt/powershell_volume:rw -w /opt/powershell_volume ${DOCKER_IMAGE} ${DOCKER_COMMAND} ${ARGS}\n        else\n            ${DOCKER_RUN} ${DOCKER_IMAGE} ${DOCKER_COMMAND} ${ARGS}\n        fi\n    else\n        ${DOCKER_RUN} ${DOCKER_IMAGE} ${DOCKER_COMMAND}\n    fi\n}\n```\n",
      "created_at": "2016-08-30T16:56:05Z",
      "updated_at": "2016-08-30T16:57:49Z"
    },
    {
      "author": "suvayu",
      "author_association": "NONE",
      "body": "@jrm16020, doesn't that defeat the purpose a bit? It's a shell after all; I would like to try powershell as a regular shell for a few days side-by-side with my usual shell. Wouldn't that be impossible when using a docker container?\n",
      "created_at": "2016-09-01T07:44:53Z",
      "updated_at": "2016-09-01T07:44:53Z"
    },
    {
      "author": "xasx",
      "author_association": "NONE",
      "body": "> Wouldn't that be impossible when using a docker container?\n\nRunning apps directly from a docker container is not that unusual these days. A lot of convenience has been added around launching applications this way. \nHowever, for a shell, I admit that a lot more of the mentioned convenience would have to be added.\n\nI guess that's what @jrm16020's script tries to achieve.\n\nMounting the current directory into the container might not be enough. Actually, I guess that everything that is accessible (file system, internet, registry etc.) through powershell would have to be mounted into the container so that it feels like working natively.\n\nAll that said, it's probably not impossible but a lot of work is to be done, bringing all into the container. I bet it is easier to build native executables that work directly on your 'disclosed' OS.\n",
      "created_at": "2016-09-01T08:56:31Z",
      "updated_at": "2016-09-01T08:56:31Z"
    },
    {
      "author": "jrm16020",
      "author_association": "NONE",
      "body": "> Wouldn't that be impossible when using a docker container?\n> ... but a lot of work is to be done, bringing all into the container.\n\nNo, not really.  The example that I posted above works for my use case but it's not a big deal to modify it to serve your purposes.  In your case you'd run a privileged container and mount all of your local filesystem into the container.  Your container will already have the networking capabilities that your bash/zsh/dash shell has since it's a privileged container and has access to any of the binaries of your Linux host.\n\n```\ndocker run --rm --name powershell --privileged -v /:/system -it centos/powershell /usr/bin/powershell\n```\n\n```\ndocker run --rm --name powershell --privileged -v /:/system -it centos/powershell /usr/bin/powershell\nPowerShell \nCopyright (C) 2016 Microsoft Corporation. All rights reserved.\n\nPS /> ping 8.8.8.8                                                                                                                                                                                    \nPING 8.8.8.8 (8.8.8.8) 56(84) bytes of data.\n64 bytes from 8.8.8.8: icmp_seq=1 ttl=45 time=40.1 ms\n64 bytes from 8.8.8.8: icmp_seq=2 ttl=45 time=25.0 ms\n64 bytes from 8.8.8.8: icmp_seq=3 ttl=45 time=23.5 ms\n^C\n--- 8.8.8.8 ping statistics ---\n3 packets transmitted, 3 received, 0% packet loss, time 2002ms\nrtt min/avg/max/mdev = 23.536/29.576/40.173/7.517 ms\nPS /> \n```\n\nI don't mean to discount the request for native Fedora packages.  I'm a Fedora user and would enjoy seeing a native package as well.  That said, there are ways to get Powershell working on your system as it's currently built without depending on an RPM.  Docker is the perfect way to package software for easy consumption by all Linux distributions.  \n",
      "created_at": "2016-09-01T14:15:03Z",
      "updated_at": "2016-09-01T14:15:03Z"
    },
    {
      "author": "signum187",
      "author_association": "NONE",
      "body": "Maybe this workaround could help. (source: https://news.ycombinator.com/item?id=12314693)\n\n> \"henry_flower 19 days ago | parent | favorite | on: PowerShell is open sourced and is available on Lin...\n> \n> For Fedora 24 users:\n> \n> So some reason, the rpm that Microsoft provides doesn't list all the dependencies that it actually requires. What is even worse, the compiled binaries inside, require quite outdated versions of icu & openssl that are not available in Fedora 24 any more.\n> \n> What I've come up w/ to force poweshell to run:\n> \n>   # dnf install icu lldb lldb-devel lttng-tools lttng-ust\n> \n> To view what we're still missing:\n> \n>   $ find /opt/microsoft/powershell -name *.so -type f | xargs ldd 2>/dev/null | grep not\\ found\n>       libcrypto.so.1.0.0 => not found\n>       libicuuc.so.50 => not found\n>       libicui18n.so.50 => not found\n> \n> (libcypto\\* is openssl-libs package, libicu\\* is libicu.)\n> \n> Now, you need to manually download:\n> \n> http://archives.fedoraproject.org/pub/archive/fedora/linux/releases/17/Everything/x86_64/os/Packages/o/openssl-1.0.0i-1.fc17.x86_64.rpm\n> \n> (Yes, it's Fedora 17 == 2012 (!), which is ridiculous.)\n> \n> http://archives.fedoraproject.org/pub/archive/fedora/linux/releases/19/Everything/x86_64/os/Packages/l/libicu-50.1.2-5.fc19.x86_64.rpm\n> \n> and extract usr/lib64/\\* files from both rpms to, say, /opt/tmp/lib64.\n> \n> Then finally run:\n> \n>   $ LD_LIBRARY_PATH=/opt/tmp/lib64 powershell\n>   PowerShell\n>   Copyright (C) 2016 Microsoft Corporation. All rights reserved.\n> \n>   PS /home/hf> $PSVersionTable\n> \n>   Name                           Value\n> \n> ---\n> \n>   PSVersion                      6.0.0-alpha\n>   PSEdition                      Core\n>   PSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\n>   BuildVersion                   3.0.0.0\n>   GitCommitId                    v6.0.0-alpha.9\n>   CLRVersion\n>   WSManStackVersion              3.0\n>   PSRemotingProtocolVersion      2.3\n>   SerializationVersion           1.1.0.1\n> \n> It's a very strange feeling to see \"Copyright (C) 2016 Microsoft Corporation\" in xterm, if you ask me.\"\n",
      "created_at": "2016-09-06T19:30:21Z",
      "updated_at": "2016-09-06T19:40:39Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "Awesome! I able to install PowerShell 6.0 on Fedora 24 Desktop OS.\n\nThe instructions in the link provided by Imward works: https://nmilosev.svbtle.com/running-net-core-rc2-on-fedora-23\n\n![fedora 24_ 01_2016-09-14 19-51-36](https://cloud.githubusercontent.com/assets/19892435/18534052/b75a18fe-7ab5-11e6-9b63-a1e7c46026f7.png)\n\nWoohoo!\n",
      "created_at": "2016-09-14T23:59:39Z",
      "updated_at": "2016-09-14T23:59:39Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "For anyone who wants to get started on this, the minimum requirements would include:\n\nTo get it working:\n- [ ] Add Fedora [Runtime Identifiers](https://docs.microsoft.com/en-us/dotnet/articles/core/rid-catalog) to all relevant `project.json` `runtimes` sections\n- [ ] Ensure all [Pester tests](https://github.com/PowerShell/PowerShell/tree/master/test/powershell) pass on a base install of Fedora\n\nTo get it published:\n- [ ] Update [`New-UnixPackage`](https://github.com/PowerShell/PowerShell/blob/f62dd4bf54020d3da05f8e6825d624ceaa2a69b6/build.psm1#L1173) to generate a Fedora package\n- [ ] Update [`download.sh`](https://github.com/PowerShell/PowerShell/blob/master/tools/download.sh) to install the package (there's a race condition here because we download packages from GitHub... but until it's made and published that can't be done)\n- [ ] Create a pair of [Dockerfiles](https://github.com/PowerShell/PowerShell/tree/master/docker) to build PowerShell on an [Fedora container](https://hub.docker.com/r/library/fedora/tags/) (same race condition)\n- [ ] Update [Linux installation docs](https://github.com/PowerShell/PowerShell/blob/master/docs/installation/linux.md)\n\nThe PowerShell maintainers are adding this to GitHub and Digital Ocean's [Hacktoberfest](https://hacktoberfest.digitalocean.com/) for anyone wanting to participate.\n\n.NET Core [supports Fedora 23](https://github.com/dotnet/corefx#build--test-status).\n",
      "created_at": "2016-10-06T20:59:42Z",
      "updated_at": "2016-10-06T20:59:42Z"
    },
    {
      "author": "rramoscabral",
      "author_association": "NONE",
      "body": "The download.sh say 'Fedora is not supported!' , using Fedora 23 (4.7.10-100.fc23.x86_64).\nI have  .net core 1.0.0-preview2-003131  (https://www.microsoft.com/net/core#fedora).\n\nWhen trie to run PowerShell  'Failed to initialize CoreCLR, HRESULT: 0x80131500'.\n\nI didn't do the downgrade libicu to libicu-50.1.2-15.el7.x86_64.rpm\n",
      "created_at": "2016-11-06T14:13:44Z",
      "updated_at": "2016-11-06T14:13:44Z"
    },
    {
      "author": "jwflory",
      "author_association": "NONE",
      "body": "Would definitely love to see this supported on current versions of Fedora!\n",
      "created_at": "2016-11-09T19:35:54Z",
      "updated_at": "2016-11-09T19:35:54Z"
    },
    {
      "author": "anthonykirby",
      "author_association": "NONE",
      "body": "Another Fedora (24) user here:  Following the above suggestions, I felt uncomfortable about using  old versions of openssl!  I found that Mageia Cauldron packages a more recent libssl.so.1.0.0  (1.0.2j at time of writing), and using this satisfied my conflicting \"get it working\" and \"be safe\" requirement.  \r\n\r\nSo I'd suggest taking whatever lib64openssl1.0.0-xxxxxxx.mga6.x86_64.rpm is provided in http://mirrorservice.org/sites/mageia.org/pub/mageia/distrib/cauldron/x86_64/media/core/release/ & using that instead of the 1.0.0i from Fedora 17.",
      "created_at": "2016-12-16T16:26:55Z",
      "updated_at": "2016-12-16T16:26:55Z"
    },
    {
      "author": "AndrewSav",
      "author_association": "NONE",
      "body": "@mirichmo So this fix was reverted https://github.com/PowerShell/PowerShell/pull/2970 Should this issue be re-opened?",
      "created_at": "2017-01-29T20:09:12Z",
      "updated_at": "2017-01-29T20:11:59Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "@AndrewSav I brought the changes back in #2982; however, the work done so far enables the RPMs to be built, but does not make them part of the build process. I have #3026 open for updating the documentation and adding Fedora RPMs to the releases. I'll reopen this until the issue is completed.",
      "created_at": "2017-01-30T18:46:46Z",
      "updated_at": "2017-01-30T18:46:46Z"
    },
    {
      "author": "cyplo",
      "author_association": "NONE",
      "body": "I think there is a copr repo managed by @nmilosev for dotnet CLI (https://github.com/dotnet/cli/issues/4866) already, it addresses this specific libicu problem on Fedora, would it be possible to reuse some of their infrastructure here ?",
      "created_at": "2017-03-11T11:45:36Z",
      "updated_at": "2017-03-11T11:45:36Z"
    },
    {
      "author": "AndrewSav",
      "author_association": "NONE",
      "body": "@cyplo, I'm sorry if this is completely off the mark, but the copr repo simply downgrades libicu If I understand it correctly. I understand this is undesirable as a permanent solution, since something else might require the latest version of libicu.",
      "created_at": "2017-03-11T21:43:05Z",
      "updated_at": "2017-03-11T21:43:05Z"
    },
    {
      "author": "nmilosev",
      "author_association": "NONE",
      "body": "Hi,\r\n\r\nthis package avoids the libicu issue by rebuilding core components of the framework (CoreFX, CoreCLR, libuv, core-setup). We are also using SDK built for RHEL by a RHEL developer Omair. We had to go this way, instead of bundling libicu because Fedora's policies forbid bundled libraries. (https://fedoraproject.org/wiki/Bundled_Libraries?rd=Packaging:Bundled_Libraries)\r\n\r\nThere was a pull request in one of the repos which fixes the libicu issue. If you download 2.0 nightly builds, libicu issue is non present. Sadly it didn't make it in 1.1.1 release. \r\n\r\nAll the code for Fedora's package is hosted here on F25 branch: http://pagure.io/fedora-dotnet\r\n\r\nPinging @omajid @tmds @rheaayase\r\n",
      "created_at": "2017-03-11T21:53:11Z",
      "updated_at": "2017-03-11T21:53:11Z"
    },
    {
      "author": "RheaAyase",
      "author_association": "NONE",
      "body": "Please refer to https://fedoraproject.org/wiki/DotNet for Fedora .NET Core packages, always up-to-date reference to whatever you're looking for.",
      "created_at": "2017-03-12T02:55:54Z",
      "updated_at": "2017-03-12T02:56:06Z"
    },
    {
      "author": "DarkLite1",
      "author_association": "NONE",
      "body": "After ending up on this post, I finally installed PowerShell on Fedora 25 as following:\r\n\r\nAs explained [here](https://copr.fedorainfracloud.org/coprs/nmilosev/dotnet-sig/), fist install the Fedora .NET Core package:\r\n```\r\nsudo dnf config-manager --add-repo https://copr.fedorainfracloud.org/coprs/nmilosev/dotnet-sig/repo/fedora-25/nmilosev-dotnet-sig-fedora-25.repo\r\nsudo dnf update\r\nsudo dnf install dotnetcore\r\n```\r\nThen download the [RPM for CentOS 7](https://github.com/PowerShell/PowerShell/releases/download/v6.0.0-beta.1/powershell-6.0.0_beta.1-1.el7.centos.x86_64.rpm) and install it.\r\n`sudo dnf install Downloads/powershell-6.0.0_beta.1-1.el7.centos.x86_64.rpm`\r\n\r\nYou are now able to execute the statement below to open the PowerShell prompt:\r\n`powershell`",
      "created_at": "2017-05-20T13:51:10Z",
      "updated_at": "2017-05-20T14:34:00Z"
    },
    {
      "author": "RheaAyase",
      "author_association": "NONE",
      "body": "For future readers - Please always refer to the source about installing anything, do not use copypasta cut out of other places, because it will not be updated and maintained here. Look up these instructions on [Fedora .NET wiki](https://fedoraproject.org/wiki/DotNet) (which will refer you to the right download instructions for _your version_)",
      "created_at": "2017-05-20T14:31:03Z",
      "updated_at": "2017-05-20T14:31:19Z"
    },
    {
      "author": "DarkLite1",
      "author_association": "NONE",
      "body": "You are correct, comment updated.",
      "created_at": "2017-05-20T14:34:13Z",
      "updated_at": "2017-05-20T14:34:13Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "What's the status of this issue? I believe our RPM release is working with Fedora 27?",
      "created_at": "2018-05-16T16:20:58Z",
      "updated_at": "2018-05-16T16:20:58Z"
    },
    {
      "author": "RheaAyase",
      "author_association": "NONE",
      "body": "> What's the status of this issue? I believe our RPM release is working with Fedora 27?\r\n\r\nThat's not how packaging works in Linux.\r\n\r\nOpen Source products are built and packaged by package maintainers, not by the authors of the products. Yes, one may be both, but in the case of .NET Core that is in no way true. Package maintainers can make sure that said product works with all the quirks of their Linux distribution, and they have to comply with it's rules. Among the many rules of Fedora packages, one of the main ones is that the packages have to be fully built from source, including the tools used to do so. All done in Fedora, for Fedora. This way we can make sure that there is nothing spooky coming from some 3rd party binary that could cause issues or vulnerabilities, etc...\r\n\r\n.NET Core is packaged by the [Fedora .NET SIG](https://fedoraproject.org/wiki/SIGs/DotNet) and all the information around .NET Core in Fedora is maintained and always up to date at [fedoraloves.net](http://fedoraloves.net)\r\n\r\nOn a side note, as you can also find out on our pages, .NET Core, VSCode and other packages published by Microsoft are **not** free software, are under proprietary licenses, and contain proprietary code and libraries. We exclude these bits and pieces from our packages and provide necessary hacks to get the sh!# to work.\r\n\r\n---\r\n\r\nNow on topic of PowerShell packages themselves, I've not looked into it so I can not tell if it's the same as the above and with the same issues. From a glance from afar, those are not Fedora packages. They're rhel packages. There **is** __major difference__, so I expect a huge load of issues.\r\n\r\n_(I'll take a closer look some time next week.)_",
      "created_at": "2018-05-16T17:05:09Z",
      "updated_at": "2018-05-16T17:17:20Z"
    },
    {
      "author": "rokejulianlockhart",
      "author_association": "NONE",
      "body": "\"https://docs.microsoft.com/en-us/powershell/scripting/install/install-fedora?view=powershell-7.2#installation-via-package-repository\" successfully installs PowerShell for me. Consequently, does this issue exist to ensure that the package is added to Fedora's default repository?",
      "created_at": "2022-05-23T05:45:35Z",
      "updated_at": "2022-05-23T05:53:57Z"
    },
    {
      "author": "rokejulianlockhart",
      "author_association": "NONE",
      "body": "Support for Fedora appears to have been revoked, which explains why the hyperlink that I previously provided is inoperative. Does that invalidate this issue? (I hope not: it is perfectly operative for me, so this decision appears to be unreasonable.)",
      "created_at": "2022-06-01T13:29:35Z",
      "updated_at": "2022-06-01T13:32:14Z"
    }
  ],
  "created_at": "2016-08-18T16:51:55Z",
  "labels": [
    "OS-Linux",
    "Area-Maintainers-Build"
  ],
  "number": 1882,
  "state": "open",
  "title": "Fedora RPM",
  "updated_at": "2022-06-01T13:32:14Z"
}