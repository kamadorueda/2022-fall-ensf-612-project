{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5927",
  "author": "iSazonov",
  "body": "## PR Summary\r\nRelated #4268.\r\n\r\n1. Set local pipeline thread stack size to 10MB by default.\r\n2. Read the `PipelineMaxStackSizeMB` configuration value from config.\r\n\r\nThread stack OS system default size is:\r\n- on Windows - 1MB\r\n- on MacOs - 0.5MB\r\n- on Linux - 8MB\r\n\r\nWe should use the same stack size for all platforms to get predictable behavior.\r\nThis value should match the Windows PowerShell value for backward compatibility (I expect that .Net Core and Windows PowerShell consume the stack as well as .Net Framework and Windows PowerShell).\r\nPerhaps default 10MB may be too large if we use many local pipelines for paralleling. We can reconsider this later.\r\n\r\n## PR Checklist\r\n\r\nNote: Please mark anything not applicable to this PR `NA`.\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - [x] Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [NA] User facing [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - [NA] Issue filed - Issue link:\r\n- [x] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [NA] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n    - [NA] [Add `[feature]` if the change is significant or affects feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` to the beginning of the title and remove the prefix when the PR is ready.\r\n",
  "closed_at": "2018-02-23T18:16:08Z",
  "comments": [
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@iSazonov `PipelineMaxStackSizeMB` is a regular powershell setting in Windows PowerShell. You are treating it as a policy setting instead of a regular setting in powershell core. I disagree with that. I think it should be a regular setting just like `executionpolicy` or `ConsolePrompting`.",
      "created_at": "2018-01-22T18:17:38Z",
      "updated_at": "2018-01-22T18:25:29Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw What is \"policy\" in the context? \r\n\r\n`Software\\Policies\\Microsoft\\PowerShellCore` - I believe it is \"policy\"?\r\n\r\n`Software\\Microsoft\\PowerShell\\1\\ShellIds` or \r\n`Software\\PowerShellCore`  - I believe it is \"regular settings\"? Do you say that we shouldn't use Registry for this settings and keep its only in a config file?",
      "created_at": "2018-01-23T15:16:41Z",
      "updated_at": "2018-01-23T15:16:41Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "> What is \"policy\" in the context?\r\n\r\nIt's short for \"Group Policy Settings\". Those are the settings that are originally under \"Software\\Policies\". Each of the settings has a corresponding GPO in \"Local Group Policy Editor\" in Control Panel. The new PowerShell Core ones will also be available in the editor. We will publish a `.admx` file for them.\r\n\r\nThe settings that are not originally under \"Software\\Policies\" are regular powershell settings. As far as I understand, we don't use Registry for those settings but only refer to the config file.",
      "created_at": "2018-01-23T18:05:19Z",
      "updated_at": "2018-01-23T18:05:32Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Thanks for clarify!\r\n>As far as I understand, we don't use Registry for those settings but only refer to the config file.\r\n\r\nIs this PowerShell MSFT team solution? And why? \r\n\r\nRegistry is common place for Windows applications to store settings:\r\nhttps://msdn.microsoft.com/en-us/library/windows/desktop/ms724871(v=vs.85).aspx\r\nhttps://msdn.microsoft.com/en-us/library/ms973902.aspx\r\n\r\nThis is critical for enterprises. By using GPO/GPP, they can centrally manage (distribute polices and settings too) applications on workstations and server farms.\r\nFor example, if they receive feedback from employees that their scripts fail because of a stack overflow, the enterprise administrator can easily propagate the parameter value as a default that does not overlap local settings at the application or user level.\r\n",
      "created_at": "2018-01-24T03:43:53Z",
      "updated_at": "2018-01-24T03:43:53Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "For PSCore6, we want to have configuration not in the registry.  This makes it easier to deploy via zip, for example, as well as support side-by-side more simply.  I do agree that for an enterprise, we should support GPO.  In which case, there is no issue with having both configuration and policy.  ",
      "created_at": "2018-01-24T04:06:35Z",
      "updated_at": "2018-01-24T04:06:35Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": ">This makes it easier to deploy via zip, for example, as well as support side-by-side more simply.\r\n\r\nThe ability to have settings in the registry does not conflict with zip and side-by-side. (We could even enhance our API to support applications by type and name)\r\n\r\n@SteveL-MSFT What your conclusion about #5947? - I'd move it in RFC repo but it's frozen. I would have moved RFC repo here with label like `RFC-*` - so we get more feedback.",
      "created_at": "2018-01-24T04:46:06Z",
      "updated_at": "2018-01-24T04:46:06Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I created https://github.com/PowerShell/PowerShell-RFC/pull/111.\r\n\r\nShould we wait the RFC?\r\n",
      "created_at": "2018-01-25T11:46:08Z",
      "updated_at": "2018-01-25T11:46:08Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee reviewed this and don't believe that the stack size should even be a configurable setting until there is a clear need to make it settable.  Recommendation is to not even have it settable despite what Windows PowerShell did.",
      "created_at": "2018-02-21T23:23:42Z",
      "updated_at": "2018-02-21T23:23:42Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT Stack size default is different on different platforms - should we set the same default _internally_ to get predictable behavior on all platforms? I think it make sense - see the original Issue.",
      "created_at": "2018-02-22T05:14:14Z",
      "updated_at": "2018-02-22T05:15:32Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov yes, @PowerShell/powershell-committee agrees to changing the default on all systems.  We thought the only point that needed discussion from the committee was configuration.",
      "created_at": "2018-02-22T23:14:44Z",
      "updated_at": "2018-02-22T23:14:44Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "A new PR was submitted based on the committee's review: #6224 \r\nI will close this PR.",
      "created_at": "2018-02-23T18:15:35Z",
      "updated_at": "2018-02-23T18:15:35Z"
    }
  ],
  "created_at": "2018-01-17T10:52:43Z",
  "number": 5927,
  "state": "closed",
  "title": "Set local pipeline thread stack size",
  "updated_at": "2018-02-23T18:16:08Z"
}