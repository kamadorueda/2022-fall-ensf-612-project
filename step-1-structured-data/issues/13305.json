{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13305",
  "author": "xtqqczze",
  "body": "# PR Summary\r\n\r\nSince https://github.com/dotnet/roslyn/issues/37797 Roslyn has used MIT license. Presumably we can now update the copyright header of these files.\r\n\r\nAlso add a comment explaining this code is from Roslyn.\r\n\r\nThere may be additional code copied from Roslyn, I found the details on these files from https://github.com/PowerShell/PowerShell/pull/6134 which I cross-checked with https://github.com/dotnet/roslyn\r\n\r\n## PR Context\r\n\r\nFollow-up: https://github.com/PowerShell/PowerShell/pull/6134\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2020-08-05T17:51:58Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@xtqqczze Please rebase to pass CIs.",
      "created_at": "2020-07-30T07:51:18Z",
      "updated_at": "2020-07-30T07:51:18Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov @daxian-dbw These files are wrapped with `#if !CORECLR`, we should review the code to see whether they are is still needed for .NET 5.0.",
      "created_at": "2020-07-30T12:02:55Z",
      "updated_at": "2020-07-30T12:02:55Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "They are for searching assemblies in GAC in the Parser, but I cannot remember exactly for what now.",
      "created_at": "2020-07-31T06:07:49Z",
      "updated_at": "2020-07-31T06:07:49Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "> \r\n> \r\n> They are for searching assemblies in GAC in the Parser, but I cannot remember exactly for what now.\r\n\r\nThey are used in these files:\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/4b9b0788ed28ea6d463ce857d1ed81bd4a977a59/src/System.Management.Automation/engine/parser/Compiler.cs#L2791\r\nhttps://github.com/PowerShell/PowerShell/blob/4b9b0788ed28ea6d463ce857d1ed81bd4a977a59/src/System.Management.Automation/engine/parser/Parser.cs#L5079",
      "created_at": "2020-07-31T16:22:14Z",
      "updated_at": "2020-07-31T16:22:14Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Our ALC Resolver uses TryFindInGAC() method to search in GAC. \r\n\r\nThe referenced code is for using assembly statement - I'd expect it would search in GAC too.",
      "created_at": "2020-07-31T17:50:21Z",
      "updated_at": "2020-07-31T17:50:21Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "I was under the impression that the GAC functionality is effectively nonexistent for .NET Core? Has that changed again in .NET 5?",
      "created_at": "2020-07-31T18:46:47Z",
      "updated_at": "2020-07-31T18:46:47Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "`System.Reflection.Assembly.GlobalAssemblyCache` will be obsoleted in .NET 5 (https://github.com/dotnet/designs/blob/master/accepted/2020/better-obsoletion/obsoletions-in-net5.md)\n\n<blockquote><img src=\"https://avatars0.githubusercontent.com/u/9141961?s=400&v=4\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/dotnet/designs\">dotnet/designs</a></strong></div><div>This repo is used for reviewing new .NET designs. Contribute to dotnet/designs development by creating an account on GitHub.</div></blockquote>",
      "created_at": "2020-08-02T18:06:00Z",
      "updated_at": "2020-08-02T18:06:02Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "We have GlobalAssemblyCache in GlobalAssemblyCache.cs file.\r\n\r\nI see the .Net document mentions UTF7 - we should review this.",
      "created_at": "2020-08-02T18:19:06Z",
      "updated_at": "2020-08-02T18:19:06Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "> I see the .Net document mentions UTF7 - we should review this.\r\n\r\nIssue opened: #13358\r\n",
      "created_at": "2020-08-05T21:51:11Z",
      "updated_at": "2020-08-05T21:51:11Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov https://github.com/MicrosoftDocs/PowerShell-Docs/issues/6422, https://github.com/MicrosoftDocs/PowerShell-Docs/pull/6446 suggests there is no GAC in PowerShell 6 and higher, should we open an issue to review GAC functionality?",
      "created_at": "2020-08-09T13:49:15Z",
      "updated_at": "2020-08-09T13:54:13Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@xtqqczze Feel free to open new issue. ",
      "created_at": "2020-08-10T03:49:46Z",
      "updated_at": "2020-08-10T03:49:46Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "I don't know enough about this to open an issue, pinging @rjmholt.",
      "created_at": "2020-08-10T19:42:48Z",
      "updated_at": "2020-08-10T19:42:48Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "> I was under the impression that the GAC functionality is effectively nonexistent for .NET Core? Has that changed again in .NET 5?\r\n\r\nThis is effectively true, but I believe pwsh.exe still keeps some .NET Framework GAC fallback functionality on Windows to support particular Windows modules... @adityapatwardhan is the right person to ask here",
      "created_at": "2020-08-10T20:08:02Z",
      "updated_at": "2020-08-10T20:08:22Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.1.0-preview.6` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.1.0-preview.6)\n",
      "created_at": "2020-08-17T22:20:58Z",
      "updated_at": "2020-08-17T22:20:58Z"
    }
  ],
  "created_at": "2020-07-29T20:32:36Z",
  "number": 13305,
  "state": "closed",
  "title": "Switch to MIT license for files copied from Roslyn",
  "updated_at": "2020-08-17T22:20:58Z"
}