{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5087",
  "author": "SteveL-MSFT",
  "body": "PSCore6 automatically loads PSReadline when the console is interactive.  There is currently no option to not load it (other than deleting PSReadline).  We should have a switch to allow not auto-loading PSReadline.",
  "closed_at": "2017-11-01T22:30:32Z",
  "comments": [
    {
      "author": "djweber",
      "author_association": "NONE",
      "body": "I can work on this one. Is there a recommended approach to writing tests for these switches?",
      "created_at": "2017-10-11T20:05:09Z",
      "updated_at": "2017-10-11T20:10:43Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@DdWr awesome!  Take a look at https://github.com/PowerShell/PowerShell/blob/master/test/powershell/Host/ConsoleHost.Tests.ps1 and it should be pretty straight forward on adding tests for this.\r\n\r\nFor now, I guess you can use the switch `-NoPSReadline`\r\n\r\ncc @lzybkr @joeyaiello ",
      "created_at": "2017-10-11T20:52:16Z",
      "updated_at": "2017-10-11T20:52:16Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "hmm `-NoPSReadline` would break the commonly use `-NoP` shortcut for `-NoProfile`",
      "created_at": "2017-10-11T20:58:01Z",
      "updated_at": "2017-10-11T20:58:01Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "I was thinking of an environment variable instead of a command line switch.\r\n\r\nThis would be less annoying than remembering a switch, but would make one off experiments harder.\r\n\r\nNote that PSReadline is not loaded when you specify `-NonInteractive`. This option is for those few people where they just don't like PSReadline or it's causing some sort of problem.",
      "created_at": "2017-10-11T21:03:28Z",
      "updated_at": "2017-10-11T21:03:28Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "I'm a little hesitant about adding such a \"specific\" switch.  If PowerShell auto-loads more modules in the future, then you're signing yourself up to add more switches for each module.  You can always add `rmo psreadline` to your profile script since that is primarily what a profile is for - customizing your interactive environment.  An environment variable would be OK as well.",
      "created_at": "2017-10-11T21:10:28Z",
      "updated_at": "2017-10-11T21:10:28Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "Maybe a more general approach would be to add an `-InitializationScript` parameter e.g.:\r\n\r\n```posh\r\npowershell -init {rmo psreadline}\r\n```",
      "created_at": "2017-10-11T21:14:50Z",
      "updated_at": "2017-10-11T21:15:10Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@rkeithhill the problem with `-initializationscript` is that you incur the cost of loading psreadline and then unloading it.  We had some issues in the past with psreadline on NanoServer (which we have since fixed), but the workaround at that time was to delete psreadline to get powershell to startup.  PSReadline as a module is special cased as we decided it was the interactive experience we wanted consistently in Windows Powershell and retained it for PowerShell Core 6.\r\n\r\nIn general, I'm not a fan of having an env var as it makes it less discoverable and I expect most users to use PSReadline.",
      "created_at": "2017-10-11T21:33:13Z",
      "updated_at": "2017-10-11T21:33:13Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT Fair point on loading and then unloading.  Although if you expect most users to use PSReadline, then the user scenario of disabling PSReadline is a bit of a corner case.  So making it possible is probably enough and folks will discover it through an internet search.  And it wouldn't be the first env var PowerShell uses.  We already have PSModulePath and PAGER to configure PowerShell.  Also, for temp use it isn't a big deal to do:\r\n```posh\r\n$env:PSDisablePSReadline=1\r\npowershell.exe\r\n```\r\n",
      "created_at": "2017-10-11T21:54:50Z",
      "updated_at": "2017-10-11T21:54:50Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "I think using the PowerShell profile would be a better way to handle the PSReadLine than doing a drastic code change.  You can always go back and remove the 'Remove-Module PSReadLine' at your discretion.\r\n\r\n:)",
      "created_at": "2017-10-11T22:01:46Z",
      "updated_at": "2017-10-11T22:01:46Z"
    },
    {
      "author": "djweber",
      "author_association": "NONE",
      "body": "@SteveL-MSFT I'm assuming this is still in the review queue? :)",
      "created_at": "2017-10-20T04:44:58Z",
      "updated_at": "2017-10-20T04:44:58Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Yes, we had too many to review at the last meeting and didn't get to this.",
      "created_at": "2017-10-20T04:58:17Z",
      "updated_at": "2017-10-20T04:58:17Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "Originally, I saw this as a good \"step 1\" to \"the grand refactor\" we've been talking about to optimize for non-interactive scenarios, but if `-NonInteractive` already does that, I don't see a need for an additional switch. `Remove-Module PSReadline` in your profile seems like a good enough solution there, though it'd be easier to assess if we had perf stats on loading PSReadline. ",
      "created_at": "2017-10-22T19:57:54Z",
      "updated_at": "2017-10-22T19:57:54Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@joeyaiello `-NonInteractive` doesn't solve the case where you want interactive, but not PSReadline.  `Remove-Module PSReadline` is not a good solution as I believe generally people want PSReadline (since the built-in readline now is by-design very primitive), but there are some cases where things don't work well with PSReadline enabled (ssh, ShellInABox, etc...).  \r\n\r\nFor me, it seems the simplest thing is to add a `-nopsreadline` switch.",
      "created_at": "2017-10-22T20:26:25Z",
      "updated_at": "2017-10-22T20:26:25Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "So we speak about interactive session I'd prefer Remove-Module in profile or an option in config file.\r\nIf anybody don't want at all it is possible to uninstall the module.",
      "created_at": "2017-10-23T03:20:50Z",
      "updated_at": "2017-10-23T03:20:50Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee doesn't think this is needed as for non-interactive, PSReadline doesn't load, in other cases, one can use `-c { rmo psreadline} -noexit` to unload it for an interactive session or put it in $profile to unload it on start.",
      "created_at": "2017-11-01T22:30:31Z",
      "updated_at": "2017-11-01T22:30:31Z"
    }
  ],
  "created_at": "2017-10-11T19:35:43Z",
  "number": 5087,
  "state": "closed",
  "title": "Add switch to powershell.exe to not auto-load PSReadline",
  "updated_at": "2017-11-01T22:30:32Z"
}