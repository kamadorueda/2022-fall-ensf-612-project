{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13999",
  "author": "pfmoore",
  "body": "## Steps to reproduce\r\n\r\nUse the example code from the `Register-ObjectEvent` documentation, with one change to add an action when the event fires to write a file\r\n\r\n```powershell\r\n$queryParameters = '__InstanceCreationEvent', (New-Object TimeSpan 0,0,1),\r\n    \"TargetInstance isa 'Win32_Process'\"\r\n$Query = New-Object System.Management.WqlEventQuery -ArgumentList $queryParameters\r\n$ProcessWatcher = New-Object System.Management.ManagementEventWatcher $Query\r\nRegister-ObjectEvent -InputObject $ProcessWatcher -EventName \"EventArrived\" -Action { echo \"Hi\" >test.txt }\r\n```\r\n\r\nStart a process (e.g. Notepad).\r\n\r\n## Expected behavior\r\n\r\nThe event fires and the file is written.\r\n\r\n## Actual behavior\r\n\r\nNothing happens. Testing the same set of commands in Windows Powershell works as expected. I have been unable to find any indication that PowerShell Core doesn't support this (and if that were the case, I'd expect the Register-ObjectEvent documentation to note this).\r\n\r\n## Environment data\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.3\r\nPSEdition                      Core\r\nGitCommitId                    7.0.3\r\nOS                             Microsoft Windows 10.0.18363\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "pfmoore",
      "author_association": "NONE",
      "body": "(Updated, I accidentally posted the wrong `$PSVersionTable` value the first time).",
      "created_at": "2020-11-06T16:18:16Z",
      "updated_at": "2020-11-06T16:18:16Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@pfmoore Please add a reference to the docs.",
      "created_at": "2020-11-07T11:53:03Z",
      "updated_at": "2020-11-07T11:53:03Z"
    },
    {
      "author": "pfmoore",
      "author_association": "NONE",
      "body": "Well, basically `help Register-ObjectEvent`... But it looks like there's an online version here: https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/register-objectevent?view=powershell-7\n\n<blockquote><img src=\"https://docs.microsoft.com/media/logos/logo-powershell-social.png\" width=\"48\" align=\"right\"><div><strong><a href=\"https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/register-objectevent\">Register-ObjectEvent (Microsoft.PowerShell.Utility) - PowerShell</a></strong></div><div>The Register-ObjectEvent cmdlet subscribes to events that are generated by .NET objects on the local computer or on a remote computer. When the subscribed event is raised, it is added to the event queue in your session. To get events in the event queue, use the Get-Event cmdlet. You can use the parameters of Register-ObjectEvent to specify property values of the events that can help you to identify the event in the queue. You can also use the Action parameter to specify actions to take when a subscribed event is raised and the Forward parameter to send remote events to the event queue in the local session. When you subscribe to an event, an event subscriber is added to your session. To get the event subscribers in the session, use the Get-EventSubscriber cmdlet. To cancel the subscription, use the Unregister-Event cmdlet, which deletes the event subscriber from the session. </div></blockquote>",
      "created_at": "2020-11-07T13:10:20Z",
      "updated_at": "2020-11-07T13:10:22Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "/cc @sdwheeler for information.",
      "created_at": "2020-11-08T06:16:50Z",
      "updated_at": "2020-11-08T06:16:50Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@sdwheeler Could you please move the issue in Docs repo?",
      "created_at": "2021-01-21T07:19:42Z",
      "updated_at": "2021-01-21T07:19:42Z"
    },
    {
      "author": "sdwheeler",
      "author_association": "COLLABORATOR",
      "body": "This sounds like a bug that needs deeper investigation. I tested this in 7.1.0 and 6.2.7. The cmdlet creates the subscription but it seems that the event is never fired. Before we document anything we need to understand the bug.",
      "created_at": "2021-01-21T12:50:27Z",
      "updated_at": "2021-01-21T12:50:27Z"
    },
    {
      "author": "PietJankbal",
      "author_association": "NONE",
      "body": "Still doesn`t work in PS 7.2.2\r\nIs this one day going to be supported?",
      "created_at": "2022-03-30T17:16:00Z",
      "updated_at": "2022-03-30T17:16:00Z"
    }
  ],
  "created_at": "2020-11-06T16:17:11Z",
  "labels": [
    "Issue-Bug",
    "Area-Maintainers-Documentation",
    "WG-Cmdlets-Utility"
  ],
  "number": 13999,
  "state": "open",
  "title": "Register-ObjectEvent examples not working",
  "updated_at": "2022-03-30T17:16:00Z"
}