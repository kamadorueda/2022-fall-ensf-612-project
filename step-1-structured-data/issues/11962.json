{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11962",
  "author": "SteveL-MSFT",
  "body": "# Summary of the new feature/enhancement\r\n\r\nDeleting a folder that contains many items or a deep hierarchy can take a long time.  Currently, PowerShell results in using a .NET API call to remove the top level folder which internally, probably calls a Win32 API (on Windows, of course) to delete that folder which serially handles it.  There is an OSS tool [byenow](https://iobureau.com/byenow/) which scans the folder/file hierarchy and leverages multiple threads which results in a significant perf gain (for large folders) and even more so for remote deletes.  It seems we can use a similar strategy in the FileSystemProvider when there is a recursive delete on a folder.\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "NoMoreFood",
      "author_association": "CONTRIBUTOR",
      "body": "Wouldn't it advantageous to enhance Copy-Item -Recurse in a similar fashion?  Obviously the searching and thread pooling approaches differ (top-down versus bottom-up), but they are in the same ballpark.",
      "created_at": "2020-02-27T00:51:52Z",
      "updated_at": "2020-02-27T00:51:52Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "We do manual enumerating with PowerShell magics.\r\nWe need to add more tests before changing something.",
      "created_at": "2020-03-01T18:42:57Z",
      "updated_at": "2020-03-01T18:42:57Z"
    }
  ],
  "created_at": "2020-02-26T21:40:45Z",
  "number": 11962,
  "state": "open",
  "title": "Leverage multiple threads for file system provider deletes",
  "updated_at": "2021-11-30T16:57:53Z"
}