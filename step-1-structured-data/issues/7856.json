{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7856",
  "author": "rjmholt",
  "body": "Currently if a module is written and has no manifest or its manifest has no `CompatiblePSEditions` field, `Get-Module -ListAvailable` will describe it as having the `PSEdition` value as `Desk`:\r\n\r\n```\r\n> gmo -list\r\nDirectory: C:\\Program Files\\PowerShell\\Modules\r\n\r\n\r\nModuleType Version    Name                                PSEdition ExportedCommands\r\n---------- -------    ----                                --------- ----------------\r\nScript     0.9.0      platyPS                             Desk      {New-MarkdownHelp, Get-MarkdownMetadata, New-External...\r\nScript     0.7.3      posh-git                            Desk      {Invoke-NullCoalescing, Add-PoshGitToProfile, Get-Pro...\r\n```\r\n\r\nIf our goal is to accurately reflect the manifest (or lack thereof), we should have a separate case for it, like `-`:\r\n```\r\n    Directory: C:\\Program Files\\PowerShell\\Modules\r\n\r\n\r\nModuleType Version    Name                                PSEdition ExportedCommands\r\n---------- -------    ----                                --------- ----------------\r\nScript     0.9.0      platyPS                             -         {New-MarkdownHelp, Get-MarkdownMetadata, New-External...\r\nScript     0.7.3      posh-git                            -         {Invoke-NullCoalescing, Add-PoshGitToProfile, Get-Pro...\r\n```\r\n\r\nThe change would be easily made here:\r\nhttps://github.com/PowerShell/PowerShell/blob/8a0abf459c31ce99d6ecc81ebb165179fe192d28/src/System.Management.Automation/FormatAndOutput/DefaultFormatters/PowerShellCore_format_ps1xml.cs#L1217-L1228\r\n\r\nWe can just insert a\r\n```powershell\r\nif (-not $editions)\r\n{\r\n    return '-'\r\n}\r\n```\r\ninstead of the current `$editions = @('Desktop')`.",
  "closed_at": null,
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I believe the original thinking from @HemantMahawar is that modules without a manifest or manifest without that property were designed and tested only against Windows PowerShell, so `Desktop` was implied.",
      "created_at": "2018-09-24T19:37:39Z",
      "updated_at": "2018-09-24T19:37:39Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "See also https://github.com/PowerShell/PowerShell/issues/7643 for discussion.\r\n\r\n@daxian-dbw and I originally discussed displaying the actual manifest contents vs its inferred value, and decided we should try to reflect the true contents of the manifest. But it also makes sense to display the compatibility here.",
      "created_at": "2018-09-24T20:01:30Z",
      "updated_at": "2018-09-24T20:01:30Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "In particular see https://github.com/PowerShell/PowerShell/issues/7643#issuecomment-416509068",
      "created_at": "2018-09-25T02:41:17Z",
      "updated_at": "2018-09-25T02:41:17Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee reviewed this.  The original proposal was that if CompatiblePSEditions is empty, it is only interpreted as `Desktop` if the module is in the system32 path.  Modules in ProgramFiles (or anywhere else) should just be empty.",
      "created_at": "2018-10-03T22:38:36Z",
      "updated_at": "2018-10-03T22:38:36Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "Related: #10931 ",
      "created_at": "2019-10-29T14:25:10Z",
      "updated_at": "2019-10-29T14:25:10Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Replied in the related issue, but repeating here.  It seems that for modules that are in $PSHOME, we can safely assume that they are Core compatible and show them as such.",
      "created_at": "2020-02-24T20:57:13Z",
      "updated_at": "2020-02-24T20:57:13Z"
    },
    {
      "author": "ThomasNieto",
      "author_association": "CONTRIBUTOR",
      "body": "Created PR #11950 to solve this by updating the `PSEdition` column in the `Module` table format to check `PrivateData.PSData.Tags` for `PSEdition_Desktop` and `PSEdition_Core` if `CompatiblePSEditions` is not defined. For shipped modules if `CompatiblePSEditions` or tags are not for a module in $PSHOME it will add `Core` and if the module is in Windows in-box it will add `Desktop`.\r\n\r\nThis allows module authors to indicate compatible `PSEditions` without limiting module compatibility to 5.1+ by using `CompatiblePSEditions`.",
      "created_at": "2020-02-25T18:24:46Z",
      "updated_at": "2020-02-25T18:24:46Z"
    },
    {
      "author": "thorstenbutz",
      "author_association": "NONE",
      "body": "I applogize, but this behaviour does not make any sense: \r\n5 out of 10 built-in modules in PS 7 on linux (!) are tagged as \"Desk\", even the new ThreadJob module is missing a CompatiblePSEditions entry. \r\nYou should definitely remove those lines of code simply guessing ...",
      "created_at": "2020-04-29T11:49:58Z",
      "updated_at": "2020-04-29T11:49:58Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "So to summarize:\r\n\r\n* modules with a blank `CompatiblePSEditions` in `system32` should show Desktop\r\n* modules with a blank `CompatiblePSEditions` in `$PSHome` should show Core\r\n  * modules in `$PSHome` should never have manifests explicitly set to only Desktop\r\n* modules with a blank `CompatiblePSEditions` anywhere else should stay blank",
      "created_at": "2020-07-30T22:56:25Z",
      "updated_at": "2020-07-30T22:56:25Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "I can see arguments for wanting `CompatiblePSEditions` on the PSModuleInfo to reflect the manifest as closely as possible, but I can see the reasoning here as well. I'm happy to accept it if users agree.",
      "created_at": "2020-07-30T23:06:20Z",
      "updated_at": "2020-07-30T23:06:20Z"
    }
  ],
  "created_at": "2018-09-24T18:49:23Z",
  "labels": [
    "Up-for-Grabs",
    "Committee-Reviewed",
    "WG-Cmdlets-Core"
  ],
  "number": 7856,
  "state": "open",
  "title": "PSEdition module field should not say \"Desk\" when no CompatiblePSEditions field is given in the manifest",
  "updated_at": "2020-12-07T19:40:26Z"
}