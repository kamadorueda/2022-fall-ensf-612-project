{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4665",
  "author": "mirichmo",
  "body": "The root cause of this issue is that the check is specific to a registry key that gets created when the VC++ redistributable package is directly installed via the suggested link. It overlooks scenarios where those files are installed via Windows Update.\r\n\r\nA secondary issue is that the test should be tagged to only execute on Windows systems.\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\nBuild the MSI for a Windows SKU using commit 54e892ab06fc0b705a329be8061df9f77cbd54f8 and run it on a system that does not have Visual Studio 2015 or the VC++ redistributable package installed via MSI. The dependency is required, but it can be installed via Windows Update.\r\n\r\nExpected behavior\r\n-----------------\r\n\r\nThe MSI installs without error.\r\n\r\nActual behavior\r\n---------------\r\n\r\nThe failure message is, \"PowerShell requires the Visual Studio C++ 2015 x64 redistributables to be installed...\" This occurs on a fully patched system that has the dependency installed via Windows Update.\r\n\r\nEnvironment data\r\n----------------\r\n\r\nBeta.5 + commit 54e892ab06fc0b705a329be8061df9f77cbd54f8\r\n",
  "closed_at": "2017-09-15T01:42:36Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@bergmeister Could you please look the Issue?",
      "created_at": "2017-08-25T03:21:01Z",
      "updated_at": "2017-08-25T03:21:01Z"
    },
    {
      "author": "De4pin",
      "author_association": "NONE",
      "body": "asking on msdn.microsoft.com",
      "created_at": "2017-08-25T07:43:23Z",
      "updated_at": "2017-08-25T07:43:23Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "May be related to #4315",
      "created_at": "2017-08-29T16:18:32Z",
      "updated_at": "2017-08-29T16:18:32Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "@mirichmo @w1748587889 Any news why the VC++ installation via Windows Update is missing the registry entry?\r\nIn general the problem is that each minor update of the VC15++ runtime gets a new registry Guid, so it is impractical to assert against a specific version, therefore one needs to look if 'some' version oft the VC15++ distributables is installed. Therefore it might be good as well to check on your side if any minor version (or at least the first released one) would work?\r\nAlternatives for a generic check that VC++15 is installed:\r\n\r\n- Checking that the  `Installed` value is `1` for `HKEY_LOCAL_MACHINE\\SOFTWARE\\Wow6432Node\\Microsoft\\VisualStudio\\11.0\\VC\\Runtimes\\x86` (64bit) and `HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\VisualStudio\\11.0\\VC\\Runtimes\\x86` (32 bit)\r\nCould you please check if this would pass on a system with the distributables installed via Windows Update?\r\n- Have a custom action (i.e. a C# compiled DLL) in the installer that is able to do more sophisticated check that is independent of the minor version of the VC++ runtime. See for an example [here](https://stackoverflow.com/a/44009475/1810304)\r\n- The last resort would be a file based check similar to the check that I did for the Universal C Runtime.",
      "created_at": "2017-09-02T09:22:43Z",
      "updated_at": "2017-09-02T09:23:58Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "A file based check may be simplest and sufficient.  If the registry entries aren't documented, you can't rely on them.  I think a custom action should be last resort.",
      "created_at": "2017-09-02T15:20:47Z",
      "updated_at": "2017-09-02T15:20:47Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "It seem we can use MsiQueryProductState API https://blogs.msdn.microsoft.com/astebner/2010/05/05/mailbag-how-to-detect-the-presence-of-the-visual-c-2010-redistributable-package/\r\n",
      "created_at": "2017-09-02T16:29:35Z",
      "updated_at": "2017-09-02T16:29:35Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov Your approach would still require a custom action (i.e. embedd our own custom .net dll with the code to call it) in order to call it from within WiX as far as I can see.\r\n@SteveL-MSFT I'll look into the file based approach then but it will only be a basic check because the VC++ team decided to make it super complex and deprecate merge modules since 2015, see their own blog post [here](https://blogs.msdn.microsoft.com/vcblog/2015/03/03/introducing-the-universal-crt/) for details. Out of curiosity: Why are those distributables required (the reason should be documented as well imho)?",
      "created_at": "2017-09-02T17:04:21Z",
      "updated_at": "2017-09-03T22:36:33Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "We can still check registry https://stackoverflow.com/questions/851677/how-to-check-for-installed-package-in-wix-3-0",
      "created_at": "2017-09-02T17:38:28Z",
      "updated_at": "2017-09-02T17:38:28Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@bergmeister we should probably follow the VC++ team's advice then.  The redist is required since we compile with VC++",
      "created_at": "2017-09-02T18:09:43Z",
      "updated_at": "2017-09-02T18:09:43Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I see in the blog post:\r\n>The same forwarder DLLs will work on all supported operating systems. If you package all of the forwarder DLLs with your application (and ucrtbase.dll), then it will work on all supported operating systems.\r\n\r\nShould we package this with PowerShell Core for all Windows (excluding Windows 10?)?",
      "created_at": "2017-09-03T17:30:07Z",
      "updated_at": "2017-09-03T17:30:07Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov Because they deprecated merge modules for VC++2015 (see the comment woes in their blog post [here](https://blogs.msdn.microsoft.com/vcblog/2015/03/03/introducing-the-universal-crt/)), including the runtime has become super complicated. Yes, you could do it and you basically have the choice between having to include around 10 dlls (per bitness) that amount to around 20MB or 100 dlls (per bitness) that amount to 2MB. But I think @SteveL-MSFT just wanted a check as a minimum viable feature because those pre-requisites are already present in most cases due to Windows Update or other software that has already installed them.",
      "created_at": "2017-09-03T17:55:24Z",
      "updated_at": "2017-09-03T17:55:24Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@bergmeister if we expect most systems to have these binaries via Windows Update, I think we're ok with the minimal check until we get additional customer feedback",
      "created_at": "2017-09-04T00:51:03Z",
      "updated_at": "2017-09-04T00:51:03Z"
    }
  ],
  "created_at": "2017-08-24T22:11:27Z",
  "number": 4665,
  "state": "closed",
  "title": "Incorrect Windows Installer Check for VC++ Redistributable Dependency",
  "updated_at": "2017-09-26T08:13:59Z"
}