{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10417",
  "author": "iSazonov",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nFix #6561\r\n\r\n## PR Context\r\n\r\n<!-- Provide a little reasoning as to why this Pull Request helps and why you have opened it. -->\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [ ] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [ ] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2019-09-03T21:25:18Z",
  "comments": [
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@iSazonov The same DLL is used by `AssignProcessToJobObjectDllName` and `QueryInformationJobObjectDllName`. Do these also not work on Win7?\r\n\r\nIf we are replacing them with `kernel32.dll, have you verified the change on `win7` through `win10`?\r\n\r\nIf replacing with `kernel32.dll` works, should we be removing the definitions from `PInvokeDllNames.cs`. \r\n\r\n",
      "created_at": "2019-08-26T17:49:26Z",
      "updated_at": "2019-08-26T17:49:26Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@adityapatwardhan I removed all links to `api-ms-win-core-job-l2-1-0.dll` and now it works for me on Windows 7.\r\n\r\n> should we be removing the definitions from PInvokeDllNames.cs\r\n\r\nThere is already some unused consts, the list is large and numerated, also we could want to use ApiSets again after Windows 7 EOL. I think we need to keep the consts.",
      "created_at": "2019-08-27T09:44:48Z",
      "updated_at": "2019-08-27T09:44:48Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Do we know if things are still working properly on NanoServer and Windows IoT after changing to `kernal32.dll`? ",
      "created_at": "2019-08-29T22:49:45Z",
      "updated_at": "2019-08-29T22:49:45Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I can not test on Nano and IoT.\r\nI saw that .Net Core team replaced ApiSets with direct dll names because of many such problems with ApiSets.\r\nSee:\r\nhttps://github.com/dotnet/corefx/commit/75e45da8d7104e7f6b737d552bbc332d14211da8\r\nMore: https://github.com/dotnet/corefx/search?q=ApiSets&type=Commits\r\n\r\nAlso I found https://www.geoffchappell.com/studies/windows/win32/apisetschema/history/sets61.htm where we can see that there is sometimes automapping (for Windows 7).\n\n<blockquote><div><strong><a href=\"https://www.geoffchappell.com/studies/windows/win32/apisetschema/history/sets61.htm\">Windows 7 API Sets</a></strong></div></blockquote>",
      "created_at": "2019-08-30T03:14:42Z",
      "updated_at": "2019-08-30T03:14:45Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "I have verified that the change works on NanoServer 1903 image.",
      "created_at": "2019-09-03T21:24:28Z",
      "updated_at": "2019-09-03T21:24:28Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.0.0-preview.4` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.0.0-preview.4)\n",
      "created_at": "2019-09-19T17:51:56Z",
      "updated_at": "2019-09-19T17:51:56Z"
    },
    {
      "author": "ForNeVeR",
      "author_association": "NONE",
      "body": "Hey, shouldn't we remove the corresponding constants from the `PinvokeDllNames` class since they are unused now?",
      "created_at": "2019-09-21T05:12:12Z",
      "updated_at": "2019-09-21T05:12:12Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@ForNeVeR We did not remove the constants because we will revert the change after Windows 7 EOL.",
      "created_at": "2019-09-21T06:14:45Z",
      "updated_at": "2019-09-21T06:14:45Z"
    },
    {
      "author": "ForNeVeR",
      "author_association": "NONE",
      "body": "Okay, thanks.",
      "created_at": "2019-09-21T08:49:23Z",
      "updated_at": "2019-09-21T08:49:23Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v6.2.4` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v6.2.4)\n",
      "created_at": "2020-01-27T22:19:46Z",
      "updated_at": "2020-01-27T22:19:46Z"
    }
  ],
  "created_at": "2019-08-22T13:00:12Z",
  "number": 10417,
  "state": "closed",
  "title": "Replace 'api-ms-win-core-job-12-1-0.dll' with 'Kernell32.dll'",
  "updated_at": "2021-02-20T15:25:19Z"
}