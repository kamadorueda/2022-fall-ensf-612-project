{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7876",
  "author": "Hermholtz",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\n- Windows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nIf it is a bug report:\r\n- make sure you are able to repro it on the latest released version. \r\nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n- Fill out the following repro template:\r\n\r\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\r\n-->\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\nInstall-Module sqlserver # (as admin)\r\nImport-Module sqlserver\r\nGet-Command -module sqlserver invoke*\r\n\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```none\r\nCommandType     Name                                               Version    Source\r\n-----------     ----                                               -------    ------\r\nCmdlet          Invoke-ASCmd                                       21.0.17279 sqlserver\r\nCmdlet          Invoke-PolicyEvaluation                            21.0.17279 sqlserver\r\nCmdlet          Invoke-ProcessASDatabase                           21.0.17279 sqlserver\r\nCmdlet          Invoke-ProcessCube                                 21.0.17279 sqlserver\r\nCmdlet          Invoke-ProcessDimension                            21.0.17279 sqlserver\r\nCmdlet          Invoke-ProcessPartition                            21.0.17279 sqlserver\r\nCmdlet          Invoke-ProcessTable                                21.0.17279 sqlserver\r\nCmdlet          Invoke-Sqlcmd                                      21.0.17279 sqlserver\r\nCmdlet          Invoke-SqlColumnMasterKeyRotation                  21.0.17279 sqlserver\r\nCmdlet          Invoke-SqlVulnerabilityAssessmentScan              21.0.17279 sqlserver\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n```none\r\n(nothing printed)\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.1.0\r\nPSEdition                      Core\r\nGitCommitId                    6.1.0\r\nOS                             Microsoft Windows 10.0.17134\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\nThere are 42 missing commands. PowerShell for Windows shows 105 entries, PowerShell Core 6.1 only 63. Not sure what's the culprit here. The full list of missing commands is as follows. Note: the version 21.0.17279 is the latest at the moment.\r\n```none\r\nCmdlet          Add-RoleMember                                     21.0.17279 sqlserver\r\nCmdlet          Add-SqlAzureAuthenticationContext                  21.0.17279 sqlserver\r\nCmdlet          Add-SqlFirewallRule                                21.0.17279 sqlserver\r\nCmdlet          Backup-ASDatabase                                  21.0.17279 sqlserver\r\nCmdlet          Complete-SqlColumnMasterKeyRotation                21.0.17279 sqlserver\r\nCmdlet          Disable-SqlAlwaysOn                                21.0.17279 sqlserver\r\nCmdlet          Enable-SqlAlwaysOn                                 21.0.17279 sqlserver\r\nCmdlet          Export-SqlVulnerabilityAssessmentBaselineSet       21.0.17279 sqlserver\r\nCmdlet          Export-SqlVulnerabilityAssessmentScan              21.0.17279 sqlserver\r\nCmdlet          Import-SqlVulnerabilityAssessmentBaselineSet       21.0.17279 sqlserver\r\nCmdlet          Invoke-ASCmd                                       21.0.17279 sqlserver\r\nCmdlet          Invoke-PolicyEvaluation                            21.0.17279 sqlserver\r\nCmdlet          Invoke-ProcessASDatabase                           21.0.17279 sqlserver\r\nCmdlet          Invoke-ProcessCube                                 21.0.17279 sqlserver\r\nCmdlet          Invoke-ProcessDimension                            21.0.17279 sqlserver\r\nCmdlet          Invoke-ProcessPartition                            21.0.17279 sqlserver\r\nCmdlet          Invoke-ProcessTable                                21.0.17279 sqlserver\r\nCmdlet          Invoke-Sqlcmd                                      21.0.17279 sqlserver\r\nCmdlet          Invoke-SqlColumnMasterKeyRotation                  21.0.17279 sqlserver\r\nCmdlet          Invoke-SqlVulnerabilityAssessmentScan              21.0.17279 sqlserver\r\nCmdlet          Merge-Partition                                    21.0.17279 sqlserver\r\nCmdlet          New-RestoreFolder                                  21.0.17279 sqlserver\r\nCmdlet          New-RestoreLocation                                21.0.17279 sqlserver\r\nCmdlet          New-SqlColumnEncryptionKey                         21.0.17279 sqlserver\r\nCmdlet          New-SqlColumnEncryptionKeyEncryptedValue           21.0.17279 sqlserver\r\nCmdlet          New-SqlColumnEncryptionSettings                    21.0.17279 sqlserver\r\nCmdlet          New-SqlVulnerabilityAssessmentBaseline             21.0.17279 sqlserver\r\nCmdlet          New-SqlVulnerabilityAssessmentBaselineSet          21.0.17279 sqlserver\r\nCmdlet          Remove-RoleMember                                  21.0.17279 sqlserver\r\nCmdlet          Remove-SqlFirewallRule                             21.0.17279 sqlserver\r\nCmdlet          Restore-ASDatabase                                 21.0.17279 sqlserver\r\nCmdlet          Restore-SqlDatabase                                21.0.17279 sqlserver\r\nCmdlet          Save-SqlMigrationReport                            21.0.17279 sqlserver\r\nCmdlet          Set-SqlAuthenticationMode                          21.0.17279 sqlserver\r\nCmdlet          Set-SqlColumnEncryption                            21.0.17279 sqlserver\r\nCmdlet          Set-SqlNetworkConfiguration                        21.0.17279 sqlserver\r\nCmdlet          Start-SqlInstance                                  21.0.17279 sqlserver\r\nCmdlet          Stop-SqlInstance                                   21.0.17279 sqlserver\r\nCmdlet          Test-SqlAvailabilityGroup                          21.0.17279 sqlserver\r\nCmdlet          Test-SqlAvailabilityReplica                        21.0.17279 sqlserver\r\nCmdlet          Test-SqlDatabaseReplicaState                       21.0.17279 sqlserver\r\nCmdlet          Test-SqlSmartAdmin                                 21.0.17279 sqlserver\r\n```\r\n",
  "closed_at": "2018-09-27T21:34:26Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "See #7759 for a similar issue.\r\n\r\nIs this module also using a wildcard in their *ToExport lines in the module manifest? If so, that's something the module authors need to fix. It's explicitly stated in the manifest template that wildcarded export statements are not properly supported and should be avoided.",
      "created_at": "2018-09-27T13:25:57Z",
      "updated_at": "2018-09-27T13:25:57Z"
    },
    {
      "author": "Hermholtz",
      "author_association": "NONE",
      "body": "@vexx32 no, I didn't find any wildcard, but I found other interesting thing in SqlServer.psd1 file - see below. So we clearly have something wrong in manifest file, but still - PowerShell for Windows manages to get around it somehow, while PowerShell Core does not... And the list of missing cmdlets doesn't match the part of the list below the problematic place - they're also from above this place.\r\n\r\nAs the SqlServer module is not open source, we need to contact the authors/maintainers in Microsoft, and I don't know where to start...\r\n\r\n![image](https://user-images.githubusercontent.com/15248889/46160114-38d7bd80-c282-11e8-9991-eb7493ec411e.png)\r\n\r\n",
      "created_at": "2018-09-27T16:31:57Z",
      "updated_at": "2018-09-27T16:31:57Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "I don't have that module installed at the moment, but I'd be willing to bet that whole block of function names is surrounded with `@()`, rendering the need for a comma irrelevant when there's a newline.\r\n\r\nSo I don't think it'd be that causing the issue, in general. Hmm. Thanks for checking, though!!",
      "created_at": "2018-09-27T16:49:04Z",
      "updated_at": "2018-09-27T16:49:04Z"
    },
    {
      "author": "Hermholtz",
      "author_association": "NONE",
      "body": "@vexx32 you're right:\r\n```powershell\r\n# Cmdlets to export from this module\r\nCmdletsToExport = @(\r\n    'Add-RoleMember',\r\n....\r\n    'Test-SqlSmartAdmin',\r\n    'Write-SqlTableData' )\r\n```",
      "created_at": "2018-09-27T17:56:05Z",
      "updated_at": "2018-09-27T17:56:05Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I took a look at the module and at import time, the script module dynamically imports the actual binary module depending on whether you're in Windows PowerShell or PowerShell Core.  I've reached out the owners who published the module to see if this is expected in that some cmdlets may not be compatible with PSCore6.",
      "created_at": "2018-09-27T19:29:58Z",
      "updated_at": "2018-09-27T19:29:58Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "The answer from the module owners is that this is expected as the porting work is not complete.  Work will continue towards parity, but what you get today is what you get.",
      "created_at": "2018-09-27T21:34:26Z",
      "updated_at": "2018-09-27T21:34:26Z"
    },
    {
      "author": "Hermholtz",
      "author_association": "NONE",
      "body": "Thanks for the information. Maybe a warning could be printed during installation on PowerShell Core then.",
      "created_at": "2018-09-27T21:56:28Z",
      "updated_at": "2018-09-27T21:56:28Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I would suggesting providing that feedback to the module owners using: https://www.powershellgallery.com/packages/SqlServer/21.0.17279/ContactOwners",
      "created_at": "2018-09-27T22:01:17Z",
      "updated_at": "2018-09-27T22:01:17Z"
    },
    {
      "author": "Matteo-T",
      "author_association": "NONE",
      "body": "FWIW, I'm the module owner. And I can look into adding the warning (and possibly have the documentation updated). Sorry for all the trouble.",
      "created_at": "2018-09-28T00:33:38Z",
      "updated_at": "2018-09-28T00:33:38Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "@Matteo-T \r\n\r\nThanks for the update!!  \r\n\r\nQuestion: Does it matter if I use the previous version? I use this module on Core for my demos.\r\n:)\r\n",
      "created_at": "2018-09-28T01:06:27Z",
      "updated_at": "2018-09-28T01:06:27Z"
    },
    {
      "author": "Matteo-T",
      "author_association": "NONE",
      "body": "No, it does matter. We have only recently started looking at the PS6 stuff and not much has changed across versions, really.",
      "created_at": "2018-09-28T01:10:56Z",
      "updated_at": "2018-09-28T01:10:56Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "@Matteo-T \r\n\r\nThanks again!! Looking forward for more updates.\r\n:)",
      "created_at": "2018-09-28T01:11:53Z",
      "updated_at": "2018-09-28T01:11:53Z"
    },
    {
      "author": "Matteo-T",
      "author_association": "NONE",
      "body": "The \"big\" one we are tackling nos is to bring back Invoke-SqlCmd, at least in some usable form. There are non-trivial challenges though. Stay tuned.",
      "created_at": "2018-09-28T01:13:17Z",
      "updated_at": "2018-09-28T01:13:17Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "I love the fact that I can create a SQLServer Drive on Linux and use the install SMO for building SQL SMO scripts.  I love to play with it.\r\n\r\nThanks for working on getting it to Core.\r\n:)",
      "created_at": "2018-09-28T01:17:38Z",
      "updated_at": "2018-09-28T01:17:38Z"
    },
    {
      "author": "Hermholtz",
      "author_association": "NONE",
      "body": "@Matteo-T thank you! And while you'll be updating the manifest file, please fix that missing comma there (ugh, it's not semicolon as I wrote in the screenshot...) :-) It may not be required, but this time added to overall confusion :)))\r\n",
      "created_at": "2018-09-28T19:16:15Z",
      "updated_at": "2018-09-28T19:16:40Z"
    },
    {
      "author": "Matteo-T",
      "author_association": "NONE",
      "body": "Yeah - the comma has been fixed already on my machine (as part of another change).",
      "created_at": "2018-09-28T20:09:08Z",
      "updated_at": "2018-09-28T20:09:08Z"
    },
    {
      "author": "johndowns",
      "author_association": "NONE",
      "body": "How far away are we from a resolution to this? It appears that there are still lots of cmdlets that aren't imported when the SqlServer module is loaded into PowerShell Core.",
      "created_at": "2020-01-27T21:24:19Z",
      "updated_at": "2020-01-27T21:24:19Z"
    },
    {
      "author": "Matteo-T",
      "author_association": "NONE",
      "body": "@johndowns : parity with \"Full .NET Framework\" is on-going and slow. In some case, it's just not feasible because the dependent libraries are just... not there. The roadmap is to try and add as much as we can as we go. I would like to have in the next semester the Always Encrypted cmdlets available for example. Are there any cmdlets that you are missing? Knowing what users out there are missing the most would be useful to prioritize the list...",
      "created_at": "2020-01-27T21:29:47Z",
      "updated_at": "2020-01-27T21:29:47Z"
    },
    {
      "author": "johndowns",
      "author_association": "NONE",
      "body": "@Matteo-T Thanks for the quick response! I'm currently battling with the `Invoke-ProcessASDatabase` cmdlet and trying to get something working there. As far as I can tell it's a fairly thin wrapper around the REST API so it might be one of the low hanging fruit to pick off? :)",
      "created_at": "2020-01-27T21:35:01Z",
      "updated_at": "2020-01-27T21:35:01Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "@Matteo-T \r\n\r\nI'm a big fan of SMO.\r\n\r\nThanks for all the hard work!\r\n",
      "created_at": "2020-01-28T13:19:45Z",
      "updated_at": "2020-01-28T13:19:45Z"
    },
    {
      "author": "christianwade",
      "author_association": "NONE",
      "body": "We are working on .NET Core versions of the AS client libs. Won't work initially with SSAS on prem. We have not planned the work for PowerShell integration. So currently we don't have a timeline for the end-to-end solution.",
      "created_at": "2020-01-31T01:54:24Z",
      "updated_at": "2020-01-31T01:54:24Z"
    },
    {
      "author": "jayrgee",
      "author_association": "NONE",
      "body": "> Are there any cmdlets that you are missing?\r\n\r\n@Matteo-T : Is this thing still on? How about `Test-SqlAvailabilityGroup`?\r\n",
      "created_at": "2020-05-08T08:32:03Z",
      "updated_at": "2020-05-08T08:32:54Z"
    },
    {
      "author": "Matteo-T",
      "author_association": "NONE",
      "body": "> > Are there any cmdlets that you are missing?\r\n> \r\n> @Matteo-T : Is this thing still on? How about `Test-SqlAvailabilityGroup`?\r\n\r\nYes, very slow due to priorities and funding... I did not have time to migrate other cmdlets over to CoreCLR. That one should not be too hard to port over...",
      "created_at": "2020-05-08T08:52:52Z",
      "updated_at": "2020-05-08T08:52:52Z"
    },
    {
      "author": "ggolub",
      "author_association": "NONE",
      "body": "@Matteo-T Sorry, \"late to the party\" on this.  I, too, need to use \"Invoke-ProcessASDatabase\" using powershell running on Linux (under Docker).  Is there any ETA to getting that implemented?  Is there a base Microsoft Docker container that I could install powershell on where that CmdLet would be available?",
      "created_at": "2020-06-01T12:55:01Z",
      "updated_at": "2020-06-01T12:55:01Z"
    },
    {
      "author": "dmeadkagool",
      "author_association": "NONE",
      "body": "> Are there any cmdlets that you are missing? Knowing what users out there are missing the most would be useful to prioritize the list...\r\n\r\n@Matteo-T is there any info on an ETA for implementing the Invoke-ASCmd cmdlet?\r\n\r\n\r\n\r\n",
      "created_at": "2020-06-03T10:53:13Z",
      "updated_at": "2020-06-03T10:53:13Z"
    },
    {
      "author": "Matteo-T",
      "author_association": "NONE",
      "body": "@dmeadkagool - please refer to @christianwade's comment above. That's the most recent info I have as well.",
      "created_at": "2020-06-03T12:39:33Z",
      "updated_at": "2020-06-03T12:39:33Z"
    },
    {
      "author": "glennsarti",
      "author_association": "NONE",
      "body": "@Matteo-T Just hit this as well with Add-SqlAzureAuthenticationContext\r\n\r\nDisappointed to see even after all this time there's no docs on this at https://docs.microsoft.com/en-us/powershell/module/sqlserver/?view=sqlserver-ps or https://docs.microsoft.com/en-us/powershell/module/sqlserver/add-sqlazureauthenticationcontext?view=sqlserver-ps\n\n<blockquote><div><strong><a href=\"https://docs.microsoft.com/en-us/powershell/module/sqlserver/\">SqlServer</a></strong></div></blockquote>\n<blockquote><img src=\"https://docs.microsoft.com/en-us/media/logos/logo-ms-social.png\" width=\"48\" align=\"right\"><div><strong><a href=\"https://docs.microsoft.com/en-us/powershell/module/sqlserver/add-sqlazureauthenticationcontext\">Add-SqlAzureAuthenticationContext (sqlserver)</a></strong></div><div>The Add-SqlAzureAuthenticationContext cmdlet authenticates the specified principal account to Azure Resource Manager. This cmdlet is used in conjunction with some other SQL Windows PowerShell cmdlets that interact with Azure resources, such as Key Vault. This cmdlet needs to be called to perform authentication, before any other cmdlet can interact with an Azure resource. </div></blockquote>",
      "created_at": "2020-07-03T01:12:41Z",
      "updated_at": "2020-07-03T01:12:43Z"
    },
    {
      "author": "yuanman2016",
      "author_association": "NONE",
      "body": "@Matteo-T , I tried to import the module to Function App, and I want to see Invoke-ASCmd, in Kudu, I could see the command and can run queries with Azure cube. However, when I use it in Function App Code + Test mode in Azure Portal, the function is not imported. The PowerShell version I chose is 6.3 . Could  you suggest if I miss anything here? Thanks for your help!",
      "created_at": "2020-08-05T19:12:24Z",
      "updated_at": "2020-08-05T19:12:24Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "Seems to me, as Kudu runs in a Windows OS, when you use Windows PowerShell only have the Az modules installed.  Unfortunately, the SqlServer module can\u2019t be installed in Kudu manually (as you need admin privileges).\n\nYou only find the SqlServer module in Azure Shell and not in Kudu.\n\nMaybe it\u2019s a good idea to submit a request to have it included in Kudu.\n\n\ud83d\ude0a\n\nMaximo Trinidad\nTechnology Evangelist\n[cid:image002.png@01D66B4F.BB7677A0]\n\nMicrosoft MVP - Cloud and Datacenter Management (PowerShell)\n\n\n",
      "created_at": "2020-08-05T21:42:11Z",
      "updated_at": "2020-08-05T21:42:15Z"
    },
    {
      "author": "yuanman2016",
      "author_association": "NONE",
      "body": "@MaximoTrinidad , thanks for following up and suggestions! I found a workaround to change runtime to 1.x and can import SqlServer modue with invoke-ASCmd which PowerShell version is 5.x that is what I needed :) \r\n",
      "created_at": "2020-08-06T04:22:02Z",
      "updated_at": "2020-08-06T04:22:02Z"
    },
    {
      "author": "asackmann",
      "author_association": "NONE",
      "body": "> \r\n> \r\n> @MaximoTrinidad , thanks for following up and suggestions! I found a workaround to change runtime to 1.x and can import SqlServer modue with invoke-ASCmd which PowerShell version is 5.x that is what I needed :)\r\n\r\n\r\n\r\n@yuanman2016 can you explain how did you manage to change runtime to 1.x and then import SqlServer module?\r\nI'm facing same problem! \ud83d\ude12",
      "created_at": "2020-08-06T19:04:42Z",
      "updated_at": "2020-08-06T19:05:47Z"
    },
    {
      "author": "yuanman2016",
      "author_association": "NONE",
      "body": "@asackmann , I assume you already read this article: https://rasper87.wordpress.com/2019/01/25/import-powershell-module-package-into-azure-function/  which tells you how to add modules to a function\r\n\r\nTo configure powershell version for a function app, you can go to configuration of your function app-> function runtime settings->you can see runtime version there, and choose 1 which will change your powershell core version to 5.x\n\n<blockquote><img src=\"https://rasper87.files.wordpress.com/2019/01/2019-01-24_1516.png\" width=\"48\" align=\"right\"><div><img src=\"https://rasper87.files.wordpress.com/2017/07/3ac2226.jpg?w=192\" height=\"14\"> RaspeR87's Blog</div><div><strong><a href=\"https://rasper87.wordpress.com/2019/01/25/import-powershell-module-package-into-azure-function/\">Import PowerShell Module / Package into your Azure Function App</a></strong></div><div>If you have a concern about how you could use external PowerShell Modules or Packages inside of you Azure Function App written in PowerShell language then you could read this blog post where I want\u2026</div></blockquote>",
      "created_at": "2020-08-06T21:16:49Z",
      "updated_at": "2020-08-06T21:16:51Z"
    },
    {
      "author": "dmeadkagool",
      "author_association": "NONE",
      "body": "The workaround to change runtime to 1.x and import SqlServer module using the method you linked to @yuanman2016 worked for using the Invoke-ASCmd cmdlet - thanks!\r\n\r\nHowever, it doesn't seem to work for Invoke-SqlCmd (get a 'Could not load file or assembly 'Microsoft.SqlServer.BatchParser...' error)\r\n\r\nNot sure if anyone else has come into this issue and found a solution?",
      "created_at": "2020-09-22T16:00:35Z",
      "updated_at": "2020-09-22T16:01:16Z"
    },
    {
      "author": "yuanman2016",
      "author_association": "NONE",
      "body": "@dmeadkagool, I finally go latest version 3 and use ado client library for MDX query like this:\r\n\r\nadd-type -path .\\Microsoft.AnalysisServices.AdomdClient.dll\r\nadd-type -path .\\Microsoft.Identity.Client.dll\r\n\r\n$conn = new-object Microsoft.AnalysisServices.AdomdClient.AdomdConnection\r\n \r\n$conn.ConnectionString = \"\"\r\n     \r\n$conn.open()     \r\n\r\n$cmd = $conn.CreateCommand()\r\n$cmd.CommandText = \r\n$adp =New-Object Microsoft.AnalysisServices.AdomdClient.AdomdDataAdapter\r\n$adp.SelectCommand = $cmd\r\n$result = New-Object system.data.dataset\r\n$adp.Fill($result)\r\n\r\nNote: you will need to download latest ado client library and it is dependency dll, then upload to your function app folder and call like above : https://www.nuget.org/packages/Microsoft.AnalysisServices.AdomdClient.NetCore.retail.amd64 \r\n\r\nI don't check invoke-sqlcmd, but as it can be imported, it should work\n\n<blockquote><img src=\"https://www.nuget.org/Content/gallery/img/default-package-icon-256x256.png\" width=\"48\" align=\"right\"><div><strong><a href=\"https://www.nuget.org/packages/Microsoft.AnalysisServices.AdomdClient.NetCore.retail.amd64/\">Microsoft.AnalysisServices.AdomdClient.NetCore.retail.amd64 19.10.0-Preview</a></strong></div><div>ADOMD.NET is a Microsoft .NET Core data provider to communicate with Azure Analysis Services and Microsoft SQL Server Analysis Services.</div></blockquote>",
      "created_at": "2020-09-22T16:40:34Z",
      "updated_at": "2020-09-22T16:40:36Z"
    },
    {
      "author": "bowerth",
      "author_association": "NONE",
      "body": "> How far away are we from a resolution to this? It appears that there are still lots of cmdlets that aren't imported when the SqlServer module is loaded into PowerShell Core.\r\n\r\nHi, any news on the cmdlet front? Is there a survey where we can vote for priorities? I'd like to have Invoke-ASCmd in .NET Core as well =)\r\n",
      "created_at": "2021-01-21T13:17:42Z",
      "updated_at": "2021-01-25T22:37:32Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "@bowerth,\r\n\r\nYou will need to followup with: @christianwade -  see his comment on Jan 30, 2020 on this post. It's all about converting to .NET Core.  This taking too long!\r\n\r\n@christianwade ARE There any update on this issue? \r\n\r\nStill, for now **\"Invoke-AS Cmd**\" is only available for Windows Powershell 5.\r\n\r\n![AScmdwinposh_2021-01-21_9-47-13](https://user-images.githubusercontent.com/19892435/105366851-cf57e780-5bcd-11eb-875b-2fde6c47f2cc.png)\r\n",
      "created_at": "2021-01-21T14:50:56Z",
      "updated_at": "2021-01-21T14:50:56Z"
    },
    {
      "author": "Matteo-T",
      "author_association": "NONE",
      "body": "@MaximoTrinidad - let me just say that last week I was able to make some good progress on this area. I need to \"integrate\" all the changes and, more importantly, validate on PS7.1 on Linux (on Windows it seems to work reasonably well so far). :)",
      "created_at": "2021-01-25T22:32:23Z",
      "updated_at": "2021-01-25T22:32:23Z"
    },
    {
      "author": "Matteo-T",
      "author_association": "NONE",
      "body": "@bowerth, @MaximoTrinidad  and all the other folks on the thread:\r\n\r\nI just release the Preview/Prerelease version of the module.\r\nPowerShell Gallery: https://www.powershellgallery.com/packages/SqlServer/21.1.18239-preview\r\nAnnouncement Tweet: \thttps://twitter.com/matteo_taveggia/status/1361489454536396800\r\n\r\nIt can be installed by running:\r\n```\r\n\tPS C:\\> Install-Module SQLServer -AllowPreRelease\r\n```\r\nat the PS7 command prompt.\r\n\r\nFeel free to try it out and provide feedback (you can use the \"Contact Owners\" link on the PSGalley page: it'll send me e/mail directly).\n\n<blockquote><img src=\"https://go.microsoft.com/fwlink/?linkid=842808\" width=\"48\" align=\"right\"><div><strong><a href=\"https://powershellgallery.com/packages/SqlServer/\">SqlServer 21.1.18239-preview</a></strong></div><div>This module allows SQL Server developers, administrators and business intelligence professionals to automate database development and server administration, as well as both multidimensional and tabular cube processing.\r\n\r\nFor Release Notes, expand the Package Details section on this page.\r\n\r\nFor automation with SSRS & Power BI Report Server, use the ReportingServicesTools module available at https://www.powershellgallery.com/packages/ReportingServicesTools</div></blockquote>\n<blockquote><img src=\"https://pbs.twimg.com/card_img/1361172321285771269/Dbhcm-8D?format=png&name=144x144_2\" width=\"48\" align=\"right\"><div>Twitter</div><div><strong><a href=\"https://twitter.com/matteo_taveggia/status/1361489454536396800\">Matteo Taveggia on Twitter</a></strong></div><div>\u201cI just pushed a prerelease version of the SQLServer PowerShell module to the PSGallery!\n\nThe juicy stuff in this release is the long awaited PS7 support for the SSAS provider and cmdlets.\n\nPlease and provide feedback, so I can move it out of preview soon!\n\nhttps://t.co/l4mQMiYi3R\u201d</div></blockquote>",
      "created_at": "2021-02-16T01:50:03Z",
      "updated_at": "2021-02-16T01:50:05Z"
    },
    {
      "author": "anuar-mhdnor",
      "author_association": "NONE",
      "body": "Hi @Matteo-T,\r\n\r\nI am trying to send feedback to you using \"Contact Owners\" in PS Gallery website, but unable to do so due to \"This site key is not enabled for the invisible captcha.\" error.\r\n\r\nAnyway, I am trying to use Invoke-AsCmd. I am having error when using Integrated Security=SSPI in the connection string. Below is the error message. I am using SqlServer 21.1.18239-preview version and PowerShell 7.1.4\r\n\r\n**Error message:**\r\nAcquireTokenByIntegratedWindowsAuth is not supported on .net core without adding .WithUsername() because MSAL cannot determine the username (UPN) of the currently logged in user. Please use .WithUsername() before calling ExecuteAsync(). For more details see https://aka.ms/msal-net-iwa\r\n\r\n<blockquote><img src=\"https://opengraph.githubassets.com/d39e3a18cab8d86d1b4a11b2c5edb727e8d08ff9462bb525a99efc97b63a56fe/AzureAD/microsoft-authentication-library-for-dotnet\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/AzureAD/microsoft-authentication-library-for-dotnet\">Integrated Windows Authentication \u00b7 AzureAD/microsoft-authentication-library-for-dotnet Wiki</a></strong></div><div>Microsoft Authentication Library (MSAL) for .NET. Contribute to AzureAD/microsoft-authentication-library-for-dotnet development by creating an account on GitHub.</div></blockquote>",
      "created_at": "2021-10-11T00:51:30Z",
      "updated_at": "2021-10-11T00:55:10Z"
    },
    {
      "author": "Matteo-T",
      "author_association": "NONE",
      "body": "@anuar-mhdnor - feel free to drop me an e/mail matteot@microsoft.com with the details of your issue (Linux? Windows? AS on-prem? As in Azure? A code snippet?). Once I have that, I can check with the AS folks. I've also sent e/mail to the PSGallery Team asking about the error you are seeing... ",
      "created_at": "2021-10-11T02:01:15Z",
      "updated_at": "2021-10-11T02:01:15Z"
    }
  ],
  "created_at": "2018-09-27T13:05:45Z",
  "labels": [
    "Issue-Discussion",
    "Resolution-Answered"
  ],
  "number": 7876,
  "state": "closed",
  "title": "Module \"SqlServer\" on PowerShell Core 6.1 doesn't import all commands",
  "updated_at": "2021-10-11T02:01:16Z"
}