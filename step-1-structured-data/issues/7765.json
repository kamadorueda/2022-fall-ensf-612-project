{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7765",
  "author": "mklement0",
  "body": "The `-Pattern` parameter is `[string[]]`-typed and passing multiple patterns means that an input string matching _any_ of them is reported as a match, in order.\r\n\r\nIf you additionally specify `-AllMatches`, however, it seems that only the _first_ matching pattern's matches are reported.\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\n\"foo baar\" | Select-String -Pattern 'a', 'o'  -AllMatches | % { $_.Matches.value }\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```none\r\na\r\na\r\no\r\no\r\n```\r\n\r\nNote: Outputting the matched strings in the order in which they are encountered on each input line is arguably better, as happens if you use  single `-Pattern`  `'a|o'` - see below.\r\n\r\nActual behavior\r\n---------------\r\n\r\n```none\r\na\r\na\r\n```\r\n\r\nThat is, the second pattern's matches were not reported.\r\n\r\nBy contrast, using a _single_ `-Pattern` argument with a regex that uses _alternation_  - `'a|o'` - finds all matches, as expected:\r\n\r\n```powershell\r\nPS> \"foo baar\" | Select-String -Pattern 'a|o'  -AllMatches | % { $_.Matches.value  }\r\no\r\no\r\na\r\na\r\n```\r\n\r\nNote that the order of the patterns separated with `|`  is not reflected in the _output_ order - instead, the output order reflects the order in which the matching substrings were found in the input.\r\n\r\n\r\nEnvironment data\r\n----------------\r\n\r\n\r\n```powershell\r\nPowerShell Core v6.1.0-rc.1 on macOS 10.13.6\r\nPowerShell Core v6.1.0-rc.1 on Ubuntu 16.04.4 LTS\r\nPowerShell Core v6.1.0-rc.1 on Microsoft Windows 10 Pro (64-bit; Version 1803, OS Build: 17134.165)\r\nWindows PowerShell v5.1.17134.165 on Microsoft Windows 10 Pro (64-bit; Version 1803, OS Build: 17134.165)\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for labeling, @iSazonov.\r\n\r\nIt probably doesn't matter much in the grand scheme of things, but I would consider this a _bug_, not an enhancement, given that nothing in the help topic suggests that combining multiple patterns with `-AllMatches` isn't supported.\r\n",
      "created_at": "2018-09-12T14:19:51Z",
      "updated_at": "2018-09-12T14:19:51Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I thought that this was probably \"by design\" for \"AllMatch\". If not, we can always change the label. I already fixed something like this in `Get-WinEvent` and the fix was more an enhancement than a bug fix.",
      "created_at": "2018-09-12T15:39:18Z",
      "updated_at": "2018-09-12T15:39:18Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Again, it's probably fine labeled either way, but I can't  even come up with a speculative design rationale for this behavior (but perhaps there is - do tell us), not least because it amounts to quietly ignoring arguments.",
      "created_at": "2018-09-12T15:45:49Z",
      "updated_at": "2018-09-12T15:45:49Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "We often implement the simplest version and leave the rest until feedback is received.",
      "created_at": "2018-09-12T17:40:34Z",
      "updated_at": "2018-09-12T17:40:34Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "I would call leaving things unimplemented and then _quietly ignoring attempts to call unimplemented features_ a bug.",
      "created_at": "2018-09-12T17:46:32Z",
      "updated_at": "2018-09-12T17:46:32Z"
    },
    {
      "author": "animasc",
      "author_association": "NONE",
      "body": "I just found the same issue today, and here I am :)\r\nAny chance this will be fixed? It seems it hasn't move in a while\r\nThanks",
      "created_at": "2020-02-28T15:20:13Z",
      "updated_at": "2020-02-28T15:20:13Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> Any chance this will be fixed?\r\n\r\nYes :-)",
      "created_at": "2020-02-28T17:00:29Z",
      "updated_at": "2020-02-28T17:00:29Z"
    },
    {
      "author": "ariel-co",
      "author_association": "NONE",
      "body": "I just realized that MatchInfo only allows one matched pattern to be reported in MatchInfo.Pattern, but each match in the line needs to specify which pattern it matched, e,g, `$matchInfo.Matches[1].Pattern`.",
      "created_at": "2021-10-14T05:50:57Z",
      "updated_at": "2021-10-14T05:50:57Z"
    }
  ],
  "created_at": "2018-09-11T22:33:03Z",
  "number": 7765,
  "state": "open",
  "title": "Select-String with multiple patterns doesn't apply the -AllMatches switch as expected",
  "updated_at": "2021-10-14T05:50:57Z"
}