{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3995",
  "author": "KirkMunro",
  "body": "ConvertTo-Json and ConvertFrom-Json are both baked into Microsoft.PowerShell.Utility. They are highly useful given the number of web services that accept/return JSON, but they also have their fair share of limitations and/or issues. I would like to see some of those fixed, but not just for PowerShell 6.0, for downlevel versions of PowerShell as well (ideally back as far as PowerShell 3.0 unless there is a technical reason not to support that version).\r\n\r\nIs it asking too much to move these two commands into their own JSON module so that they can be managed outside of PowerShell Core, in such a way that they can also be used for downlevel systems, even if on downlevel PS the module would have to be manually imported to get those fixes?",
  "closed_at": null,
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "In https://github.com/PowerShell/PowerShell/issues/1979 we discussed the desire to separate out the modules we ship with the PSCore6 package to separate repos so they can be updated independently as well as work against more versions of PowerShell.  Would that be sufficient or do you think we need to go to the cmdlet level?  If we split it out to a separate module, it is a breaking change.",
      "created_at": "2017-06-12T23:10:03Z",
      "updated_at": "2017-06-12T23:10:03Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT: I've been thinking about this a lot, especially very recently because my need to use these cmdlets has increased dramatically, and I've come to the conclusion that the -Json cmdlets ultimately do need to be moved into their own module. Here is why:\r\n\r\n1. There are numerous design issues in the existing cmdlet implementation that cannot be addressed without introducing breaking changes.\r\n\r\n1. Having these cmdlets included in Microsoft.PowerShell.Utility allows for breaking changes to be introduced if the module uses semver versioning, but that module is far to big for that to be manageable (if breaking changes need to be made elsewhere, how does someone adopt some breaking changes that are important to them but not others).\r\n\r\nIt will be much better for these cmdlets, and likely other small sets of cmdlets, to move into standalone, backwards compatible modules that work both on PowerShell (Windows) and PSCore as design issues that require breaking changes are addressed, so that the issues can be fixed and so that the cmdlets are isolated in their own module, making manageability going forward much, much easier.\r\n\r\nI have already begun work on a separate module with ConvertTo-/ConvertFrom-Json cmdlets that address the issues I need addressed (I need these regardless of whether or not the resulting module becomes something that is adopted by the community).\r\n\r\nI don't believe you can possibly accomplish your \"awesome ConvertFrom/To-Json\" goal from #3046 unless you break existing functionality and spin these two cmdlets out into their own module.",
      "created_at": "2017-08-23T13:56:08Z",
      "updated_at": "2017-08-23T13:56:08Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee discussed this, we would like to have more insights into what your plans are that would introduce breaking changes to help us determine what the immediate decision should be.  Long term, we fully support community development of modules that may replace modules that currently ship with PSCore6.",
      "created_at": "2017-08-31T00:17:22Z",
      "updated_at": "2017-08-31T00:17:22Z"
    },
    {
      "author": "mallochine",
      "author_association": "NONE",
      "body": "hey I would like this too. I'd rather use this than to have to figure out bindings using a third-party library like NewtonsoftJson.\r\n\r\nMy current plan is to just find where the source is in this repo, copy it into my Util.cs, and then phase it out if you guys actually make this a standalone module.",
      "created_at": "2018-03-14T01:39:03Z",
      "updated_at": "2018-03-14T01:39:03Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "The problem with third-party libraries is from .Net Core - I hope we'll get solution after .Net Core 2.1.0 release.",
      "created_at": "2018-03-14T03:27:02Z",
      "updated_at": "2018-03-14T03:27:02Z"
    },
    {
      "author": "mallochine",
      "author_association": "NONE",
      "body": "actually, could someone tell me where the C# code is to translate a string into a PSCustomObject?",
      "created_at": "2018-03-14T18:08:08Z",
      "updated_at": "2018-03-14T18:08:08Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "- https://github.com/PowerShell/PowerShell/blob/master/src/Microsoft.PowerShell.Commands.Utility/commands/utility/WebCmdlet/ConvertToJsonCommand.cs \r\n- https://github.com/PowerShell/PowerShell/blob/master/src/Microsoft.PowerShell.Commands.Utility/commands/utility/WebCmdlet/ConvertFromJsonCommand.cs\r\n\r\nIs that what you are looking for @mallochine ?",
      "created_at": "2018-03-14T18:13:12Z",
      "updated_at": "2018-03-14T18:13:12Z"
    },
    {
      "author": "mallochine",
      "author_association": "NONE",
      "body": "oh, awesome!!! Wow thanks, didn't expect a response that quickly.",
      "created_at": "2018-03-14T18:15:21Z",
      "updated_at": "2018-03-14T18:15:21Z"
    },
    {
      "author": "mallochine",
      "author_association": "NONE",
      "body": "FYI, wasn't even that hard to factor out. I was able to copy JsonObject.cs without any changes, then one more file:\r\n\r\n```\r\n$ cat WebCmdletStrings.cs\r\nnamespace Microsoft.PowerShell.Commands\r\n{\r\n\r\nclass WebCmdletStrings\r\n{\r\n  public static string JsonDeserializationFailed = \"a\"; // XXX\r\n  public static string EmptyKeyInJsonString = \"b\"; // XXX\r\n  public static string DuplicateKeysInJsonString = \"c\"; // XXX\r\n  public static string KeysWithDifferentCasingInJsonString = \"d\"; // XXX\r\n}\r\n\r\n}\r\n```",
      "created_at": "2018-03-14T22:53:14Z",
      "updated_at": "2018-03-14T22:53:14Z"
    }
  ],
  "created_at": "2017-06-12T21:44:45Z",
  "labels": [
    "Issue-Discussion",
    "Committee-Reviewed",
    "WG-Cmdlets-Utility"
  ],
  "number": 3995,
  "state": "open",
  "title": "Move ConvertTo-Json and ConvertFrom-Json into standalone open source module",
  "updated_at": "2018-03-14T22:53:15Z"
}