{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6444",
  "author": "daxian-dbw",
  "body": "Quote Jason's comment at https://github.com/PowerShell/PowerShell/pull/6434/files/5b5be3122971552d2ce208858ac84868954b841c#r175933192\r\n\r\nI'd suggest removing my ugly hack of using LINQ expression trees in `SaveError` and related helper methods, and replace with `nameof(ParserStrings.MissingEndCurlyBrace)`.\r\n\r\nWhen that code was written, `nameof` was not in C#, so the ugly and inefficient code was used because:\r\n* It ensured no typos in the `FullyQualifiedErrorId`.\r\n* It was easy to search for all references to an error message via the property.\r\n* Performance was not deemed important because they were errors.\r\n\r\nPerformance might matter more than I originally assumed given editor scenarios - and given the `nameof` language feature, it's reasonable (but annoying and a little verbose) to change error reporting to look more like:\r\n\r\n```C#\r\nReportIncompleteInput(lCurly.Extent, rCurly.Extent,\r\n    ParserStrings.MissingEndCurlyBrace, nameof(ParserStrings.MissingEndCurlyBrace));\r\n```\r\n\r\nIn other words, pass the error text **and** the error id.\r\n\r\nAlternatively you could just pass the error id and use reflection of some sort to load the error string, but that would not be good for performance.",
  "closed_at": "2018-03-28T23:21:26Z",
  "comments": [],
  "created_at": "2018-03-20T23:25:04Z",
  "number": 6444,
  "state": "closed",
  "title": "Update 'SaveError' in 'Parser.cs' to not depend on LINQ expression tree to get the error id",
  "updated_at": "2018-04-11T06:32:57Z"
}