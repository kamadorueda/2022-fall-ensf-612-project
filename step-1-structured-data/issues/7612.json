{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7612",
  "author": "PetSerAl",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\n- Windows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nIf it is a bug report:\r\n- make sure you are able to repro it on the latest released version. \r\nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n- Fill out the following repro template:\r\n\r\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\r\n-->\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\nHaving module with following definition:\r\n```powershell\r\nfunction Get-SomeName { 'Get-SomeName' }\r\nfunction SomeName { 'SomeName' }\r\n```\r\n\r\nInvoke following in PowerShell prompt:\r\n```powershell\r\nSomeName; SomeName\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```none\r\nSomeName\r\nSomeName\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n```none\r\nGet-SomeName\r\nSomeName\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.1.0-rc.1\r\nPSEdition                      Core\r\nGitCommitId                    6.1.0-rc.1-7-g7b790f2f618c37d46518d2c4c95c4e47c46c6924\r\nOS                             Microsoft Windows 10.0.17134\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Looks like \"By-Design\" - we search in a cache before start autoloading.",
      "created_at": "2018-08-23T10:18:56Z",
      "updated_at": "2018-08-23T10:18:56Z"
    },
    {
      "author": "PetSerAl",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov Not sure how this is related to cache. As far as I understand command lookup algorithm looks like following:\r\n```\r\nLookForCommand(string name) {\r\n    LookForAlreadyLoadedCommand(name);\r\n    if(name is single world) {\r\n        LookForCommand(\"Get-\" + name);\r\n    }\r\n    AutoloadCommand(name);\r\n}\r\n```\r\nSo, due to recursive call to `LookForCommand(\"Get-\" + name)` it happens that ` AutoloadCommand(\"Get-\" + name)` is called before `AutoloadCommand(name)` which cause the issue.",
      "created_at": "2018-08-23T10:31:37Z",
      "updated_at": "2018-08-23T10:31:37Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I meant the same. I think it is an edge case and we can consider this as \"By-Design\".\r\n",
      "created_at": "2018-08-23T10:46:46Z",
      "updated_at": "2018-08-23T10:46:46Z"
    }
  ],
  "created_at": "2018-08-22T20:39:57Z",
  "number": 7612,
  "state": "open",
  "title": "Module autoloading does not invoke correct command on first use",
  "updated_at": "2018-08-23T10:46:46Z"
}