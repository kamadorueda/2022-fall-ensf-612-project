{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12179",
  "author": "jackdcasey",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nMy proposal, is to add a  `-FromUnixTime` switch to Get-Date. \r\n\r\nThis allows the input of a Unix timestamp into `Get-Date`. This is currently impossible, as the default unit for a numeric input is ticks. \r\n\r\nAdding this switch would allow the user to specify if the input is Unix time, while also keeping full previous compatibility with ticks. \r\n\r\nHere is an example output with, and without the switch: \r\n```\r\n> Get-Date -Date 1584947314 -FromUnixTime\r\n\r\n Monday, March 23, 2020 7:08:34 AM\r\n\r\n> Get-Date -Date 1584947314\r\n\r\n Monday, January 1, 0001 12:02:38 AM\r\n```\r\n\r\n\r\n## PR Context\r\n\r\nCloses #11719\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [x] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [x] Issue filed: MicrosoftDocs/PowerShell-Docs#5727\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2020-04-07T20:25:04Z",
  "comments": [
    {
      "author": "jackdcasey",
      "author_association": "CONTRIBUTOR",
      "body": "Upon specifying UTC in the tests, I noticed a small inconsistency. \r\n\r\nWhen specifying the DateTime with ticks, or with unix time, the `kind` was set as `Unspecified` instead of `Utc`. \r\n\r\nThis was causing issues when combined with the `-AsUTC` parameter. When performing the conversion, the `ToUniversalTime()` method is called. This caused inconsistencies, as the local offset would be applied. The [documentation](https://docs.microsoft.com/en-us/dotnet/api/system.datetime.touniversaltime?view=net-5.0#remarks) for this method confirms this behaviour: \r\n```\r\nUnspecified | The current\u00a0DateTime\u00a0object is assumed to be a local time, and the conversion is performed as if\u00a0Kind\u00a0were\u00a0Local.\r\n```\r\nTo get around this, we can set the `kind` to `Utc` explicitly when using ticks or unix time. I've made the following change to facilitate this: \r\n\r\n```\r\ndateToUse = Date\r\n```\r\nto\r\n```\r\ndateToUse = DateTime.SpecifyKind(Date, DateTimeKind.Utc);\r\n```\r\n",
      "created_at": "2020-04-06T06:27:49Z",
      "updated_at": "2020-04-06T06:27:49Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@jackdcasey Please create new issue in PowerShell-Docs repo for the new parameter and add reference in the PR description. Thanks!",
      "created_at": "2020-04-07T12:03:17Z",
      "updated_at": "2020-04-07T12:03:17Z"
    },
    {
      "author": "jackdcasey",
      "author_association": "CONTRIBUTOR",
      "body": "Opened issue in MicrosoftDocs/PowerShell-Docs: MicrosoftDocs/PowerShell-Docs#5727",
      "created_at": "2020-04-07T20:20:15Z",
      "updated_at": "2020-04-07T20:20:15Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@jackdcasey Thanks for your contribution!",
      "created_at": "2020-04-08T03:26:01Z",
      "updated_at": "2020-04-08T03:26:01Z"
    },
    {
      "author": "jackdcasey",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov Thank you for all the help! ",
      "created_at": "2020-04-08T05:37:27Z",
      "updated_at": "2020-04-08T05:37:27Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.1.0-preview.2` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.1.0-preview.2)\n",
      "created_at": "2020-04-23T18:02:29Z",
      "updated_at": "2020-04-23T18:02:29Z"
    },
    {
      "author": "aetos382",
      "author_association": "CONTRIBUTOR",
      "body": "Negative UnixTime is not supported?\r\n\r\n```\r\nPS /> Get-Date -Date -1 -FromUnixTime\r\nGet-Date: Cannot bind parameter 'Date'. Cannot convert value \"-1\" to type \"System.DateTime\". Error: \"String '-1' was not recognized as a valid DateTime.\"\r\n```",
      "created_at": "2020-06-17T02:47:12Z",
      "updated_at": "2020-06-17T02:47:12Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@aetos382 No. If you have a feature request please open new issue.",
      "created_at": "2020-06-17T03:46:45Z",
      "updated_at": "2020-06-17T03:46:45Z"
    }
  ],
  "created_at": "2020-03-23T08:18:58Z",
  "number": 12179,
  "state": "closed",
  "title": "Add `-FromUnixTime` to `Get-Date` to allow Unix time input",
  "updated_at": "2020-06-17T03:46:45Z"
}