{
  "_url": "https://github.com/PowerShell/PowerShell/issues/17535",
  "author": "rkeithhill",
  "body": "This PR adds a new pwsh command line parameter to enable the display of the profile load time message.\r\n\r\n<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nChanges the host to not display the profile load time by default.  A new pwsh command line switch `-ShowProfileLoadTime` was added to allow someone to show the profile load time regardless of the length of the load time.\r\n\r\n```\r\nUsage: pwsh[.exe] [-Login] [[-File] <filePath> [args]]\r\n                  [-Command { - | <script-block> [-args <arg-array>]\r\n                                | <string> [<CommandParameters>] } ]\r\n                  [-ConfigurationName <string>] [-CustomPipeName <string>]\r\n                  [-EncodedCommand <Base64EncodedCommand>]\r\n                  [-ExecutionPolicy <ExecutionPolicy>] [-InputFormat {Text | XML}]\r\n                  [-Interactive] [-MTA] [-NoExit] [-NoLogo] [-NonInteractive] [-NoProfile]\r\n                  [-OutputFormat {Text | XML}] [-SettingsFile <filePath>] [-ShowProfileLoadTime]\r\n                  [-SSHServerMode] [-STA] [-Version] [-WindowStyle <style>]\r\n                  [-WorkingDirectory <directoryPath>]\r\n\r\n       pwsh[.exe] -h | -Help | -? | /?\r\n       \r\n...\r\n\r\n-ShowProfileLoadTime\r\n\r\n    Displays the time taken to load the PowerShell profiles.\r\n\r\n-SSHServerMode | -sshs\r\n```\r\n\r\n## PR Context\r\n\r\nAddresses #16929 to further reduce the amount of default startup banner text.\r\n\r\n<!-- Provide a little reasoning as to why this Pull Request helps and why you have opened it. -->\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/main/reference/7.3/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [x] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here --> I wasn't going to file an issue on https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_pwsh?view=powershell-7.2 until the PR gets a thumbs up.\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and opened an issue in the relevant tool repository. This may include:\r\n        - [ ] Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode\r\n        (which runs in a different PS Host).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n",
  "closed_at": "2022-07-19T00:33:17Z",
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I believe the original intent of showing the load time was all the complaints from users about how long it was taking PowerShell to startup when most of the time was in their profile.  If this is not enabled by default, I can't imagine anyone taking the time to enable this.  I wonder if it makes more sense to have this opt-out rather than opt-in?  `-DisableProfileLoadTime`.  ",
      "created_at": "2022-06-20T20:33:27Z",
      "updated_at": "2022-06-20T20:33:27Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT I implemented this based on my interpretation of this WG comment: https://github.com/PowerShell/PowerShell/issues/16929#issuecomment-1151452746/\r\n\r\nThat said, I'm fine with making the default be enabled and having a switch to disable it.  But I would like to get @theJasonHelmick's feedback to make sure this is still in line with the thoughts of the WG. ",
      "created_at": "2022-06-21T19:03:01Z",
      "updated_at": "2022-06-21T19:03:01Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2022-06-29T02:01:11Z",
      "updated_at": "2022-06-29T02:01:11Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "FYI I have re-implemented this as an opt-out parameter `-DisableProfileLoadTime`.  Unfortunately, this approach does not lend itself to unit testing.",
      "created_at": "2022-06-29T02:05:42Z",
      "updated_at": "2022-06-29T02:05:42Z"
    },
    {
      "author": "theJasonHelmick",
      "author_association": "CONTRIBUTOR",
      "body": "> @SteveL-MSFT I implemented this based on my interpretation of this WG comment: [#16929 (comment)](https://github.com/PowerShell/PowerShell/issues/16929#issuecomment-1151452746)\r\n> \r\n> That said, I'm fine with making the default be enabled and having a switch to disable it. But I would like to get @theJasonHelmick's feedback to make sure this is still in line with the thoughts of the WG.\r\n\r\n@rkeithhill -- I agree with Steve -- and thank you so much for this work!",
      "created_at": "2022-07-11T16:19:43Z",
      "updated_at": "2022-07-11T16:19:43Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@rkeithhill The Console-Interactive WG reviewed this PR and we agree to have it opt-out rather than opt-in. So, by default, the existing behavior is not changed.\r\n\r\nThen the ask becomes to have a new switch to hide the profile load time. However, the `-nologo` switch already hides the profile load time, which makes having a new switch just for that seem to be an overkill ...\r\n@rkeithhill what's your thoughts about this?",
      "created_at": "2022-07-11T17:13:35Z",
      "updated_at": "2022-07-11T17:13:35Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "The difference with `-NoLogo` is that you don't see anything displayed in the console until after all profiles are processed.  Where you typically want this feature is when your profile always takes several seconds to process and seeing the profile load time message every single session start is just, well, annoying.  Also, I prefer seeing which version of PowerShell I'm running which you lose with `-NoLogo`.   My preference would be to add an opt-out parameter.  I have it currently implemented with @SteveL-MSFT's suggested name `-DisableProfileLoadTime` but I wonder if `-NoProfileLoadTime` would be better (shorter and more consistent with `-NoLogo`)? ",
      "created_at": "2022-07-11T22:32:13Z",
      "updated_at": "2022-07-11T22:32:13Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I agree that `-NoLogo` suppresses everything whereas you may want the PowerShell version.  `-NoProfileLoadTime` seems fine to me.",
      "created_at": "2022-07-11T22:53:32Z",
      "updated_at": "2022-07-11T22:53:32Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Alright, @rkeithhill can you update this PR then? It's still the `showprofileloadtime` implementation.",
      "created_at": "2022-07-11T22:56:32Z",
      "updated_at": "2022-07-11T22:56:32Z"
    },
    {
      "author": "pull-request-quantifier[bot]",
      "author_association": "NONE",
      "body": "### ![](https://img.shields.io/static/v1?label=Quantified&message=Extra%20Small&color=green)\r\n\r\nThis PR has `21` quantified lines of changes. In general, a change size of upto `200` lines is ideal for the best PR experience!\r\n\r\n------\r\n\r\n<details >\r\n    <summary display=\"inline\"> <strong>Quantification details</strong></summary>\r\n    <p />\r\n\r\n```\r\nLabel      : Extra Small\r\nSize       : +18 -3\r\nPercentile : 8.4%\r\n\r\nTotal files changed: 3\r\n\r\nChange summary by file extension:\r\n.cs : +11 -1\r\n.resx : +7 -2\r\n```\r\n> Change counts above are quantified counts, based on the [PullRequestQuantifier customizations](https://github.com/microsoft/PullRequestQuantifier/blob/main/docs/prquantifier-yaml.md).\r\n    \r\n</details>\r\n\r\n\r\n<details>\r\n    <summary display=\"inline\"> <strong>Why proper sizing of changes matters</strong> </summary>\r\n    <p/>\r\n    <p/>\r\n\r\nOptimal pull request sizes drive a better predictable PR flow as they strike a\r\nbalance between between PR complexity and PR review overhead. PRs within the\r\noptimal size (typical small, or medium sized PRs) mean:\r\n\r\n- Fast and predictable releases to production:\r\n  - Optimal size changes are more likely to be reviewed faster with fewer\r\niterations.\r\n  - Similarity in low PR complexity drives similar review times.\r\n- Review quality is likely higher as complexity is lower:\r\n  - Bugs are more likely to be detected.\r\n  - Code inconsistencies are more likely to be detetcted.\r\n- Knowledge sharing is improved within the participants:\r\n  - Small portions can be assimilated better.\r\n- Better engineering practices are exercised:\r\n  - Solving big problems by dividing them in well contained, smaller problems.\r\n  - Exercising separation of concerns within the code changes.\r\n\r\n#### What can I do to optimize my changes\r\n\r\n- Use the PullRequestQuantifier to quantify your PR accurately\r\n  - Create a context profile for your repo using the [context generator](https://github.com/microsoft/PullRequestQuantifier/releases)\r\n  - Exclude files that are not necessary to be reviewed or do not increase the review complexity. Example: Autogenerated code, docs, project IDE setting files, binaries, etc. Check out the `Excluded` section from your `prquantifier.yaml` context profile. \r\n  - Understand your typical change complexity, drive towards the desired complexity by adjusting the label mapping in your `prquantifier.yaml` context profile.\r\n  - Only use the labels that matter to you, [see context specification](./docs/prquantifier-yaml.md) to customize your `prquantifier.yaml` context profile.\r\n- Change your engineering behaviors\r\n  - For PRs that fall outside of the desired spectrum, review the details and check if:\r\n    - Your PR could be split in smaller, self-contained PRs instead\r\n    - Your PR only solves one particular issue. (For example, don't refactor and code new features in the same PR).\r\n\r\n#### How to interpret the change counts in git diff output\r\n\r\n- One line was added: `+1 -0`\r\n- One line was deleted: `+0 -1`\r\n- One line was modified: `+1 -1` (git diff doesn't know about modified, it will\r\ninterpret that line like one addition plus one deletion)\r\n- Change percentiles: Change characteristics (addition, deletion, modification)\r\nof this PR in relation to all other PRs within the repository.\r\n\r\n</details>\r\n\r\n<p />\r\n\r\n------\r\n\r\nWas this comment helpful? <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoicmtlaXRoaGlsbCIsIlJlcG9zaXRvcnlMaW5rIjoiaHR0cHM6Ly9naXRodWIuY29tL1Bvd2VyU2hlbGwvUG93ZXJTaGVsbCIsIlB1bGxSZXF1ZXN0TGluayI6Imh0dHBzOi8vZ2l0aHViLmNvbS9Qb3dlclNoZWxsL1Bvd2VyU2hlbGwvcHVsbC8xNzUzNSIsIkV2ZW50VHlwZSI6IlRodW1ic1VwIn0=&amp;anonymous=True\" target=\"_blank\" title=\"Thumbs up\"><strong>:thumbsup:</strong></a> <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoicmtlaXRoaGlsbCIsIlJlcG9zaXRvcnlMaW5rIjoiaHR0cHM6Ly9naXRodWIuY29tL1Bvd2VyU2hlbGwvUG93ZXJTaGVsbCIsIlB1bGxSZXF1ZXN0TGluayI6Imh0dHBzOi8vZ2l0aHViLmNvbS9Qb3dlclNoZWxsL1Bvd2VyU2hlbGwvcHVsbC8xNzUzNSIsIkV2ZW50VHlwZSI6Ik5ldXRyYWwifQ==&amp;anonymous=True\" target=\"_blank\" title=\"Neutral\"><strong>&nbsp;:ok_hand:</strong></a> <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoicmtlaXRoaGlsbCIsIlJlcG9zaXRvcnlMaW5rIjoiaHR0cHM6Ly9naXRodWIuY29tL1Bvd2VyU2hlbGwvUG93ZXJTaGVsbCIsIlB1bGxSZXF1ZXN0TGluayI6Imh0dHBzOi8vZ2l0aHViLmNvbS9Qb3dlclNoZWxsL1Bvd2VyU2hlbGwvcHVsbC8xNzUzNSIsIkV2ZW50VHlwZSI6IlRodW1ic0Rvd24ifQ==&amp;anonymous=True\" target=\"_blank\" title=\"Thumbs down\"><strong>&nbsp;:thumbsdown:</strong></a> (<a href=\"MAILTO:prquantifier@microsoft.com\" title=\"Mail to prquantifier@microsoft.com\">Email</a>)\r\n[Customize PullRequestQuantifier](https://github.com/PowerShell/PowerShell/blob/master/.github/prquantifier.yaml) for this repository.\r\n\r\n",
      "created_at": "2022-07-13T04:27:33Z",
      "updated_at": "2022-07-13T04:27:33Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "One unfortunate consequence of using an opt-out parameter is that it doesn't lend itself to testing.  From what I can see, the tests in ConsoleHost.Tests.ps1 all specify starting pwsh with `-NoProfile`. That makes sense.  You wouldn't want to process a dev's profile when running console host tests.",
      "created_at": "2022-07-13T04:31:28Z",
      "updated_at": "2022-07-13T04:31:28Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "BTW I did update this PR to be `opt-out`.  It's ready for review again.",
      "created_at": "2022-07-16T06:29:40Z",
      "updated_at": "2022-07-16T06:29:40Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "Here's the updated usage:\r\n```\r\nUsage: pwsh[.exe] [-Login] [[-File] <filePath> [args]]\r\n                  [-Command { - | <script-block> [-args <arg-array>]\r\n                                | <string> [<CommandParameters>] } ]\r\n                  [-ConfigurationName <string>] [-CustomPipeName <string>]\r\n                  [-EncodedCommand <Base64EncodedCommand>]\r\n                  [-ExecutionPolicy <ExecutionPolicy>] [-InputFormat {Text | XML}]\r\n                  [-Interactive] [-MTA] [-NoExit] [-NoLogo] [-NonInteractive] [-NoProfile]\r\n                  [-NoProfileLoadTime] [-OutputFormat {Text | XML}]\r\n                  [-SettingsFile <filePath>] [-SSHServerMode] [-STA]\r\n                  [-Version] [-WindowStyle <style>]\r\n                  [-WorkingDirectory <directoryPath>]\r\n\r\n       pwsh[.exe] -h | -Help | -? | /?\r\n  \r\n  ...\r\n  \r\n  -NoLogo | -nol\r\n\r\n    Hides the banner text at startup of interactive sessions.\r\n\r\n...\r\n\r\n-NoProfile | -nop\r\n\r\n    Does not load the PowerShell profiles.\r\n\r\n-NoProfileLoadTime\r\n\r\n    Hides the PowerShell profile load time text shown at startup when the load\r\n    time exceeds 500 milliseconds.\r\n```",
      "created_at": "2022-07-18T19:17:32Z",
      "updated_at": "2022-07-18T19:17:32Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.3.0-preview.7` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.3.0-preview.7)\n",
      "created_at": "2022-08-12T00:00:05Z",
      "updated_at": "2022-08-12T00:00:05Z"
    }
  ],
  "created_at": "2022-06-17T02:10:33Z",
  "number": 17535,
  "state": "closed",
  "title": "Fix #16929 do not show profile load time msg with new pwsh parameter",
  "updated_at": "2022-08-12T00:00:05Z"
}