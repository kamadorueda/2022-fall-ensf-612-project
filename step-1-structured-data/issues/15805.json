{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15805",
  "author": "xtqqczze",
  "body": "Enable [CA2213: Disposable fields should be disposed](https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2213)\r\n\r\n* Suppress existing violations with `#pragma warning disable`\r\n* Disable at project level for `Microsoft.PowerShell.Commands.Utility` due to error that was not suppressible with `#pragma`:\r\n\r\n```\r\nCSC : error CA2213: 'FrontEndCommandBase' contains field 'implementation' that is of IDisposable type 'ImplementationCommandBase', but it is never disposed. Change the Dispose method on 'FrontEndCommandBase' to call Close or Dispose on this field. [X:\\src\\Microsoft.PowerShell.Commands.Utility\\Microsoft.PowerShell.Commands.Utility.csproj]\r\n```\r\n\r\n_Contributes to #15803._\r\n\r\nRelated issue: https://github.com/dotnet/roslyn-analyzers/issues/4407\r\n\r\ncc: @iSazonov",
  "closed_at": "2021-11-02T18:03:34Z",
  "comments": [
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "CodeFactor \"complex method\" issues are false positives, see #15721.",
      "created_at": "2021-07-20T15:46:30Z",
      "updated_at": "2021-07-20T15:46:30Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I'd qualify these all as bugs - if a class is IDisposable we should implement and call Dispose().",
      "created_at": "2021-07-21T04:59:59Z",
      "updated_at": "2021-07-21T04:59:59Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "> I'd qualify these all as bugs - if a class is IDisposable we should implement and call Dispose().\r\n\r\nUnfortunately it is not quite that simple, some disposables are not owned by the class as they are injected via a property, etc.\r\n\r\nIn any case, I've annotated each suppression with a link to #15803, so we can track these issues.",
      "created_at": "2021-07-21T16:34:01Z",
      "updated_at": "2021-07-21T16:34:01Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> > I'd qualify these all as bugs - if a class is IDisposable we should implement and call Dispose().\r\n> \r\n> Unfortunately it is not quite that simple, some disposables are not owned by the class as they are injected via a property, etc.\r\n> \r\n> In any case, I've annotated each suppression with a link to #15803, so we can track these issues.\r\n\r\nWe need to review every case and either fix as bug or suppress with description why it is not bug and maybe add more info in (XML) docs.",
      "created_at": "2021-07-21T18:43:20Z",
      "updated_at": "2021-07-21T18:43:20Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "PowerShell-CI-linux test failure, see #15814.\r\n",
      "created_at": "2021-07-21T18:44:35Z",
      "updated_at": "2021-07-21T18:49:46Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2021-07-29T02:00:34Z",
      "updated_at": "2021-07-29T02:00:34Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "> We need to review every case and either fix as bug or suppress with description why it is not bug and maybe add more info in (XML) docs.\r\n\r\nWe could merge this PR to enable the rule, and then review each case in #15803,",
      "created_at": "2021-07-29T17:13:14Z",
      "updated_at": "2021-07-29T17:13:14Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "/rebase",
      "created_at": "2021-07-30T05:19:40Z",
      "updated_at": "2021-07-30T05:19:40Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2021-08-06T14:00:43Z",
      "updated_at": "2021-08-06T14:00:43Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov Can we merge this, and then resolve the suppression issues tracked by #15803?",
      "created_at": "2021-08-06T18:04:55Z",
      "updated_at": "2021-08-06T18:04:55Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Since the issues are in different subsystems they will be analyzed and fixed by different experts. So I think it make sense to enumerate the issues with code references in #15803 as task list. ",
      "created_at": "2021-08-07T03:56:08Z",
      "updated_at": "2021-08-07T03:56:08Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov Issues are listed with code references in #15803.",
      "created_at": "2021-08-09T02:04:14Z",
      "updated_at": "2021-08-09T02:04:14Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@xtqqczze Thanks! I think we should fix bugs before we merge the PR to avoid hiding the bugs.",
      "created_at": "2021-08-09T09:55:11Z",
      "updated_at": "2021-08-09T09:55:11Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2021-08-16T14:00:39Z",
      "updated_at": "2021-08-16T14:00:39Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@xtqqczze and @iSazonov, thank both of you. I completely agree that the exposed violation needs to be reviewed and potentially fixed before moving on enabling this rule.",
      "created_at": "2021-11-02T18:00:00Z",
      "updated_at": "2021-11-02T18:00:00Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "I updated the issue description of #15803 with the following words:\r\n> **TODO: after reviewing and fixing all violations listed here, please re-open #15805 to enable the CA2213 rule so as to make sure no violations in future.**\r\n\r\nFor now, I will close this PR for housekeeping purpose.",
      "created_at": "2021-11-02T18:03:34Z",
      "updated_at": "2021-11-02T18:03:34Z"
    }
  ],
  "created_at": "2021-07-20T15:03:13Z",
  "number": 15805,
  "state": "closed",
  "title": "Enable CA2213: Disposable fields should be disposed",
  "updated_at": "2021-11-02T18:03:35Z"
}