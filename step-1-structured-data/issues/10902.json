{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10902",
  "author": "HumanEquivalentUnit",
  "body": "Assigning to the automatic variable `$args` doesn't error, and doesn't store the value:\r\n\r\n```\r\nPS C:\\> $args\r\nPS C:\\> $args=1\r\nPS C:\\> $args\r\nPS C:\\>\r\n```\r\n\r\nBy comparison, $matches assigns and stores the value (until the `-match` operator overwrites it), and `$host` won't let you assign to it, saying it's constant or read-only.\r\n\r\nI only noticed `$args` behaviour because someone was trying to use it and asking me why their code wasn't working - I don't know if it can be read-only / const and still be updated by the engine so it works, but it might be nice if it had some warning or message about not trying to assign to it.\r\n\r\nStrict mode doesn't change this behaviour.\r\n\r\n(And `$pwd` will let you assign to it and does store the value, but does not change the working directory; might be nice if it either did change the current directory or warned on assignment).",
  "closed_at": null,
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Interesting... seems as though `$args` is behaving more like `$null` in that it'll allow you to write to it, but just discard the value instead of overwriting it.\r\n\r\nIs this a deliberate design choice? \ud83e\udd14 ",
      "created_at": "2019-10-26T12:50:19Z",
      "updated_at": "2019-10-26T12:50:19Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "It actually retains the value in the _same scope_, but resets / fills it with arguments on entering a new scope:\r\n\r\n```\r\nPS>  $args = 'foo'; \"[$args]\"; & { \"[$args]\" }\r\n\r\n[foo]\r\n[]\r\n```\r\n\r\nI don't think we should ever have allowed assigning to `$args`, but it's conceivable that there is code out there that relies on being able to manipulate it in the same scope.\r\n\r\nAt least implementing a PSSA rule would make sense, preferably one that warns on assigning to _any_ automatic variable.\r\n\r\nThere's an open issue at https://github.com/PowerShell/PSScriptAnalyzer/issues/712, inspired by the discussion in #3695.",
      "created_at": "2019-10-26T16:53:39Z",
      "updated_at": "2019-10-26T16:59:15Z"
    }
  ],
  "created_at": "2019-10-26T12:10:03Z",
  "number": 10902,
  "state": "open",
  "title": "Assigning to $args looks like it works, but it does not work (should it error?)",
  "updated_at": "2019-11-12T13:01:18Z"
}