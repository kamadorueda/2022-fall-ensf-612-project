{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11010",
  "author": "mklement0",
  "body": "Note: \r\nThis is a bizarre symptom that I only see in the very specific combination of  factors mentioned in the title (as of PowerShell Core 7.0.0-preview.5, Pester 4.9.0, on Windows, with `TestDrive:`, and `Set-Content` with `-LiteralPath` rather than `-Path`)\r\nGiven that I don't see it in Windows PowerShell, I thought I'd start by reporting it here.\r\n\r\n# Steps to reproduce\r\n\r\nRun the following _on Windows_:\r\n\r\n```powershell\r\nDescribe \"Set-Content can write to the root of TestDrive:\" {\r\n  It \"Set-Content -LiteralPath\" {\r\n    { \r\n      'hi' | Set-Content -Literalpath TestDrive:\\foo.txt \r\n    } | Should -Not -Throw\r\n  }\r\n}\r\n```\r\n\r\n# Expected behavior\r\n\r\nThe test should pass.\r\n\r\n# Actual behavior\r\n\r\nThe test fails:\r\n\r\n```none\r\nSet-Content : Access to the path 'C:\\foo.txt' is denied.\r\n```\r\n\r\nNote how directory `C:\\` was unexpectedly targeted.\r\n\r\nIf you remove `-LiteralPath` (or switch to `-Path`), the problem goes away.\r\n\r\nThe problem does _not_ surface with other PS drives.\r\n\r\n# Environment data\r\n\r\n\r\n```none\r\nPowerShell Core v7.0.0-preview.5 on Microsoft Windows 10 Pro (64-bit; Version 1903, OS Build: 18362.418)\r\nPester 4.9.0\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "```powershell\r\nNew-PSDrive -Name TestDrive -Root C:\\tmp\\ -PSProvider FileSystem\r\n 'hi' | Set-Content -Literalpath TestDrive:\\foo.txt\r\n```\r\nThis works well.\r\n\r\nMaybe @nohwnd add more info.",
      "created_at": "2019-11-09T15:31:34Z",
      "updated_at": "2019-11-09T15:31:34Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I wonder is `C:\\` the TestDrive? Usually it is user temp directory.",
      "created_at": "2021-01-15T18:50:36Z",
      "updated_at": "2021-01-15T18:50:36Z"
    },
    {
      "author": "nohwnd",
      "author_association": "NONE",
      "body": "@mklement0 could you try with 4.10.1 and newer version of PS7? https://www.powershellgallery.com/packages/Pester/4.10.1 \r\n\r\n@iSazonov you are right testdrive should be user temp directory.\n\n<blockquote><img src=\"https://raw.githubusercontent.com/pester/Pester/master/images/pester.PNG\" width=\"48\" align=\"right\"><div><strong><a href=\"https://powershellgallery.com/packages/Pester/\">Pester 4.10.1</a></strong></div><div>Pester provides a framework for running BDD style Tests to execute and validate PowerShell commands inside of PowerShell and offers a powerful set of Mocking Functions that allow tests to mimic and mock the functionality of any command inside of a piece of PowerShell code being tested. Pester tests can execute any command or script that is accessible to a pester test file. This can include functions, Cmdlets, Modules and scripts. Pester can be run in ad hoc style in a console or it can be integrated into the Build scripts of a Continuous Integration system.</div></blockquote>",
      "created_at": "2021-01-27T13:51:07Z",
      "updated_at": "2021-01-27T13:51:10Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "I tried on PowerShell Core 7.2.0-preview.2, with both Pester 4.10.1 and 5.1.1, and still see the problem.\r\n\r\n`TestDrive:\\` resolves to a temp. directory like `C:\\Users\\jdoe\\AppData\\Local\\Temp\\d7b719ef-24dd-4bee-baea-c1dc4acea1db\\`, whose parent directory does exist.\r\n\r\n",
      "created_at": "2021-01-27T14:02:45Z",
      "updated_at": "2021-01-27T14:02:45Z"
    },
    {
      "author": "pavel1269",
      "author_association": "NONE",
      "body": "Same issue.\r\n\r\nPowersHell version 7.1.4, pester 4.9.0.\r\n\r\nUsing `-Path` instead of `-LiteralPath` resolves the issue for tests but we have to use `-LiteralPath`.\r\nInterestingly `-LiteralPath` for `Test-Path`, `Get-Content` and `Resolve-Path` works correctly.\r\n\r\nWhat I found out is that once the target file exists, `Set-Content -LiteralPath` can overwrite the file located on `TestDrive:\\`.",
      "created_at": "2021-11-02T08:32:52Z",
      "updated_at": "2021-11-02T08:32:52Z"
    }
  ],
  "created_at": "2019-11-07T12:16:11Z",
  "labels": [
    "Issue-Question",
    "WG-Cmdlets-Management"
  ],
  "number": 11010,
  "state": "open",
  "title": "Set-Content -LiteralPath on Windows fails to write to Pester's TestDrive:",
  "updated_at": "2021-11-02T08:32:52Z"
}