{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7734",
  "author": "abeham",
  "body": "Before dismissing this as a potential issue with git and not with powershell, please read to the end.\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\nCreate an empty git repository (git 2.21.0.windows.1) and put a file there that contains german umlauts, e.g. \u00e4\r\n\r\n```powershell\r\nmkdir gitrep\r\ncd gitrep\r\ngit init .\r\n\"\u00e4\" | Out-File -Encoding utf8 file.txt\r\ngit add file.txt\r\ngit diff --cached > output.patch\r\nGet-Content output.patch\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```none\r\ndiff --git a/file.txt b/file.txt\r\nnew file mode 100644\r\nindex 0000000..8be8316\r\n--- /dev/null\r\n+++ b/file.txt\r\n@@ -0,0 +1 @@\r\n+\u00e4\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n```none\r\ndiff --git a/file.txt b/file.txt\r\nnew file mode 100644\r\nindex 0000000..8be8316\r\n--- /dev/null\r\n+++ b/file.txt\r\n@@ -0,0 +1 @@\r\n+\u251c\u00f1\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.1.3\r\nPSEdition                      Core\r\nGitCommitId                    6.1.3\r\nOS                             Microsoft Windows 10.0.17134\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\nThe the umlaut does display correctly in the terminal, see the screenshot:\r\n\r\n![image](https://user-images.githubusercontent.com/5585242/45214827-6e951200-b293-11e8-85b3-aab31bdaf482.png)\r\n\r\nBut, whenever the output of \"git diff\" is redirected to a file, the umlaut character becomes garbage. This works without problems in the windows commandline (cmd). To me, an indication that the problem is rather within powershell.\r\n\r\nI have created a respective question at stackoverflow, but I think this may rather be a bug that should be brought to attention: https://stackoverflow.com/questions/52205297/the-output-of-git-diff-is-not-handled-correctly-in-powershell\r\n\r\nThere is a related Q&As, but I think this issue is much simpler and easier to reproduce\r\nhttps://stackoverflow.com/questions/13675782/git-shell-in-windows-patchs-default-character-encoding-is-ucs-2-little-endian/13751617#13751617\r\nhttps://stackoverflow.com/questions/36494026/git-diff-does-not-handles-character-encoding-other-than-utf-8",
  "closed_at": "2019-03-11T08:29:36Z",
  "comments": [
    {
      "author": "abeham",
      "author_association": "NONE",
      "body": "I tested with version 6.1.3 of powershell core and latest git and the problem is still exactly the same.",
      "created_at": "2019-03-07T19:48:39Z",
      "updated_at": "2019-03-07T19:48:39Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Redirection to file uses `Out-File` and doesn't allow you to specify the encoding. I believe it should be defaulting to UTF8 w/o BOM in 6.1+\r\n\r\nMight I suggest in the meantime using `| Set-Content` instead of `>`?\r\n\r\nBut regardless, whatever's going on here should still be sorted out. \ud83d\ude42 ",
      "created_at": "2019-03-07T20:11:17Z",
      "updated_at": "2019-03-07T20:11:17Z"
    },
    {
      "author": "abeham",
      "author_association": "NONE",
      "body": "> Might I suggest in the meantime using `| Set-Content` instead of `>`?\r\n\r\nI tried `git diff --cached | Set-Content output.patch` with and without `--no-pager` but the result is the same as with output redirection.\r\n\r\n> But regardless, whatever's going on here should still be sorted out. \ud83d\ude42\r\n\r\nFor regular Powershell 5.1 the results are even stranger, there it makes a difference whether output redirection  `>` or Set-Content is used: `+\u00f1` with Set-Content and `\u251c\u00f1` with output redirection, obviously both are wrong. In both Powershell 5.1 and Powershell core 6.1 the result looks good when it is printed to the terminal (using --no-pager or setting $Env:LESSCHARSET=\"utf8\").\r\n\r\nIt works in good old cmd.exe. Still, I noted that executing `cmd /c \"git --no-pager diff --cached > output.patch\"` and then viewing the file with `Get-Content .\\output.patch` in the console window looks okay in Powershell core 6.1, but looks wrong in Powershell 5.1 (`\u00c3\u00a4`)",
      "created_at": "2019-03-07T22:46:53Z",
      "updated_at": "2019-03-07T22:46:53Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "What are your settings for the following values?\r\n\r\n* `[console]::OutputEncoding`\r\n* `[console]::InputEncoding`\r\n* `$OutputEncoding`\r\n* `InputEncoding`",
      "created_at": "2019-03-07T22:49:32Z",
      "updated_at": "2019-03-07T22:50:01Z"
    },
    {
      "author": "abeham",
      "author_association": "NONE",
      "body": "\r\n\r\n```\r\n> [console]::OutputEncoding\r\nPreamble          :\r\nBodyName          :\r\nEncodingName      : Western European (DOS)\r\nHeaderName        :\r\nWebName           : ibm850\r\nWindowsCodePage   :\r\nIsBrowserDisplay  :\r\nIsBrowserSave     :\r\nIsMailNewsDisplay :\r\nIsMailNewsSave    :\r\nIsSingleByte      : True\r\nEncoderFallback   : System.Text.InternalEncoderBestFitFallback\r\nDecoderFallback   : System.Text.InternalDecoderBestFitFallback\r\nIsReadOnly        : False\r\nCodePage          : 850\r\n\r\n> [console]::InputEncoding\r\nPreamble          :\r\nBodyName          :\r\nEncodingName      : Western European (DOS)\r\nHeaderName        :\r\nWebName           : ibm850\r\nWindowsCodePage   :\r\nIsBrowserDisplay  :\r\nIsBrowserSave     :\r\nIsMailNewsDisplay :\r\nIsMailNewsSave    :\r\nIsSingleByte      : True\r\nEncoderFallback   : System.Text.InternalEncoderBestFitFallback\r\nDecoderFallback   : System.Text.InternalDecoderBestFitFallback\r\nIsReadOnly        : True\r\nCodePage          : 850\r\n\r\n> $OutputEncoding\r\nPreamble          :\r\nBodyName          : utf-8\r\nEncodingName      : Unicode (UTF-8)\r\nHeaderName        : utf-8\r\nWebName           : utf-8\r\nWindowsCodePage   : 1200\r\nIsBrowserDisplay  : True\r\nIsBrowserSave     : True\r\nIsMailNewsDisplay : True\r\nIsMailNewsSave    : True\r\nIsSingleByte      : False\r\nEncoderFallback   : System.Text.EncoderReplacementFallback\r\nDecoderFallback   : System.Text.DecoderReplacementFallback\r\nIsReadOnly        : True\r\nCodePage          : 65001\r\n```\r\n\r\n`InputEncoding` - I don't know",
      "created_at": "2019-03-07T23:20:49Z",
      "updated_at": "2019-03-07T23:20:49Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Oops, forgot the $ on that last one, sorry. Should be `$InputEncoding`",
      "created_at": "2019-03-07T23:23:21Z",
      "updated_at": "2019-03-07T23:23:21Z"
    },
    {
      "author": "abeham",
      "author_association": "NONE",
      "body": "> Oops, forgot the $ on that last one, sorry. Should be `$InputEncoding`\r\n\r\n`$InputEncoding` returns nothing\r\n",
      "created_at": "2019-03-08T07:59:11Z",
      "updated_at": "2019-03-08T07:59:11Z"
    },
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "The output comes from less, so try setting \r\n```\r\n$env:LESSCHARSET='UTF-8'\r\n```",
      "created_at": "2019-03-09T19:13:38Z",
      "updated_at": "2019-03-09T19:13:38Z"
    },
    {
      "author": "abeham",
      "author_association": "NONE",
      "body": "@powercode Could you reproduce the issue?\r\n\r\nThe problem does not seem to be related to pagers. You can always use the `--no-pager` option in git, which still shows the problem.",
      "created_at": "2019-03-09T19:54:59Z",
      "updated_at": "2019-03-09T19:54:59Z"
    },
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "For me, the combination of setting `LESSCHARSET` and `[console]::OutputEncoding` to utf8 worked.",
      "created_at": "2019-03-09T20:03:16Z",
      "updated_at": "2019-03-09T20:03:16Z"
    },
    {
      "author": "abeham",
      "author_association": "NONE",
      "body": "@powercode That did it!\r\n\r\nSetting `[console]::OutputEncoding = [System.Text.Encoding]::UTF8` solved the issue. `LESSCHARSET` is not needed. I would think that UTF8 should be the default these days, but okay.",
      "created_at": "2019-03-11T08:29:36Z",
      "updated_at": "2019-03-11T08:29:36Z"
    },
    {
      "author": "eddex",
      "author_association": "NONE",
      "body": "> Setting `[console]::OutputEncoding = [System.Text.Encoding]::UTF8` solved the issue. \r\n\r\nThis fixed it for me too. Thanks!",
      "created_at": "2020-03-27T08:58:57Z",
      "updated_at": "2020-03-27T08:59:16Z"
    },
    {
      "author": "Mario-Hofstaetter",
      "author_association": "NONE",
      "body": "> \r\n> \r\n> The output comes from less, so try setting\r\n> \r\n> ```\r\n> $env:LESSCHARSET='UTF-8'\r\n> ```\r\n\r\nThis has bugged me for YEARS and settings `$env:LESSCHARSET='UTF-8'` fixed it in git log output for me (e.g. author name).\r\n\r\nIts still not perfect though, using \r\n```\r\ngit log -1 --show-signature\r\n```\r\nto show a gpg signed commit, German Umlaute, (and Line Breaks it seems) are not displayed correctly, but I can live with that. The linebreak issue may come from using `gpg4win` \u00af\\\\_(\u30c4)_/\u00af\r\n\r\nBehavior is that same for powershell 5, powershell 7 and vscode integrated powershell terminal and git bash for windows (MINGW64).",
      "created_at": "2020-11-20T20:23:14Z",
      "updated_at": "2020-11-20T20:23:14Z"
    }
  ],
  "created_at": "2018-09-07T10:47:02Z",
  "number": 7734,
  "state": "closed",
  "title": "Encoding issue in handling output of git diff",
  "updated_at": "2020-11-20T20:23:14Z"
}