{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11205",
  "author": "watkins656",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n\r\n-->\r\n\r\n# Steps to reproduce\r\n1. Clone any help file - example: about_Scheduled_Jobs\r\n2. Type command: Get-Help about_Scheduled_Jobs\r\n3. There is no way to open the help, even attempting with -ShowWindow\r\n```powershell\r\n\r\n```\r\n\r\n# Expected behavior\r\nThere should be a way to open the help file, even with duplicates.\r\n```none\r\n\r\n```\r\n\r\n# Actual behavior\r\nNothing can be opened\r\n```none\r\n\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\nName                           Value\r\n----                           -----\r\nPSVersion                      5.1.17134.858\r\nPSEdition                      Desktop\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nBuildVersion                   10.0.17134.858\r\nCLRVersion                     4.0.30319.42000\r\nWSManStackVersion              3.0\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\n```none\r\n\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@watkins656 can you reproduce this issue in the latest stable or preview versions of PowerShell? 5.1 is a legacy version and is not being actively maintained. \ud83d\ude42 ",
      "created_at": "2019-11-27T21:36:22Z",
      "updated_at": "2019-11-27T21:36:22Z"
    },
    {
      "author": "alexandair",
      "author_association": "CONTRIBUTOR",
      "body": "Yes, it could be reproduced in the latest preview:\r\n```\r\nPowerShell 7.0.0-preview.6\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\n\r\nPS C:\\Users\\aleksandar> help about_psreadline\r\n\r\nName                              Category  Module                    Synopsis\r\n----                              --------  ------                    --------\r\nabout_PSReadLine                  HelpFile\r\nabout_psreadline                  HelpFile\r\n\r\nPS C:\\Users\\aleksandar>\r\n```",
      "created_at": "2019-11-27T23:19:11Z",
      "updated_at": "2019-11-27T23:19:11Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "This bug just won't go away.  WTH?  You can workaround the bug like so:\r\n```\r\nget-help about_psreadline | select -f 1 | % ToString | more\r\n```\r\nBut seriously, this bug **needs** to be fixed.",
      "created_at": "2019-11-28T00:21:16Z",
      "updated_at": "2019-11-28T00:21:16Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "/cc @SteveL-MSFT \r\n\r\nThe behaviour arises because `Get-Help` acts as a search when it finds two help files by the same name. I would think that the behaviour should be:\r\n\r\n1. If the name provided matches multiple entries, **and** the names of the returned entries are identical, then\r\n2. The most up to date (by version I suppose) entry should be automatically selected. Otherwise,\r\n3. Return to current behaviour (allow multiple entries to be displayed when there is more than one match).\r\n\r\nAdditionally, we should probably expose the version of the module that this help is coming from so as to provide a way to distinguish the files, _and_ provide a way for Get-Help to target a specific version should it be required.",
      "created_at": "2019-11-28T03:37:40Z",
      "updated_at": "2019-11-28T03:42:13Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "It seems we already have such issue.",
      "created_at": "2019-11-28T11:30:58Z",
      "updated_at": "2019-11-28T11:30:58Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Good points, @vexx32; with side-by-side module installations, a way to target a specific version is definitely called for.\r\n\r\n@iSazonov: Yes, the issue at hand was originally reported in #9215, but since there's more information here now, can you please close #9215 as a duplicate?\r\nThere's also a bit more background in [this Stack Overflow answer](https://stackoverflow.com/a/55115076/45375).\r\n\r\nWorth noting that the problem only affects _conceptual_ help topics (`about_*`, more generally, presumably all `HelpFile` category files, `*.help.txt`files).\r\n\r\nWith _cmdlet_ help topics, the same module version that the module auto-loading mechanism targets is apparently targeted (first module by that name in the folders listed in `$env:PSModulePath` examined in sequence, highest version wins among multiple versions installed in the same folder), and no duplicates occur.\r\n\r\nThere are additional oddities:\r\n\r\n* WinPS apparently always lists the about topics from its `$PSHOME` folders first.\r\n\r\n* PS Core now seems to ignore a `$PSHOME` version if one is installed with a module that comes first in `$env:PSModulePath`; however, with the very specific combination of installing `PSReadLine 1.2` alongside `2.0.0-beta6` (`Install-Module PSReadLine -Force -SkipPublisherCheck`), I can still reproduce the symptom in PowerShell Core 7.0.0-preview.6\r\n\r\n* Generally, it seems that `*.help.txt` files are even picked up in irregularly named folders (not named for module versions) that the module auto-loader ignores.\r\n\r\nHere's a quick helper function that finds all help files by file-name substring (e.g., `Get-HelpFile psReadline`).\r\n\r\n```powershell\r\nfunction Get-HelpFile($fileNamePart) { \r\n  # Note the use of Split-Path -Parent, because help files can be in sibling\r\n  # folders of $env:PSModulePath folders.\r\n  Split-Path -Parent ($env:PSModulePath -split [IO.Path]::PathSeparator) | \r\n      Get-ChildItem -File -Recurse -Filter *$fileNamePart* |\r\n        Where-Object Name -match '(?:\\.help\\.txt|-help.xml)$'\r\n}\r\n```\r\n",
      "created_at": "2019-11-29T20:15:03Z",
      "updated_at": "2020-08-25T22:38:04Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I took a look at this and unfortunately it's not so straightforward to fix.  The problem is that as help is discovered, it is emitted.  Since we don't know the order before hand if there are dupes, we don't know which of the duplicates is the right one to show until we have the full results.  If we change this to a synchronous model where we filter first before displaying, then this breaks the current user experience where they see found results as they are found.  This means that if there is a large set of results, you wouldn't see anything until the very end (we'd add a progress bar I suppose).\r\n\r\nAssuming we agree to break the user experience, there isn't any version information related to the module in updateable help.  The help content is stored in a `Help` folder.  In the case of PSReadLine, you have one under your personal `powershell\\help` folder and the other in `<modulepath>\\help`.  I think it makes sense to prefer the updateable help version in the case of a dupe, but we still have the problem #1 above.\r\n\r\nIn the case where you have multiple versions of the same module in different places that have local help that gets found by the helpsystem, it would probably make sense to show the one from the path where the module is imported.\r\n\r\nAll of this is not a small change.  Moving out of 7.1 as I don't see such changes making it in time.",
      "created_at": "2020-08-25T22:32:29Z",
      "updated_at": "2020-08-25T22:32:29Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> I think it makes sense to prefer the updateable help version in the case of a dupe, but we still have the problem #1 above.\r\n\r\nSo if user loaded new module version from another path it will get old help. I think we should do that we do to get a cmdlet version - go through a module manifest. \r\nIn about_ we could add a comment header in these files with version and others that we could use for right file selection.",
      "created_at": "2020-08-26T04:35:20Z",
      "updated_at": "2020-08-26T04:35:20Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee discussed this, we propose:\r\n\r\n- Add `Path` member to HelpInfoShort type, this allows the user to differentiate between dupes\r\n- Enable `Get-Help` to accept a `HelpInfoShort` and perform the `ToString()` on it\r\n\r\nThis allows the use case:\r\n\r\n```powershell\r\nget-help psreadline | select -first 1 | get-help\r\n```",
      "created_at": "2020-08-26T22:11:44Z",
      "updated_at": "2020-08-26T22:11:55Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "That's a partial fix, but IMO unless a wildcard is present, Get-Help should do some basic filtering to ensure it doesn't output duplicate results.",
      "created_at": "2020-08-26T22:38:34Z",
      "updated_at": "2020-08-26T22:38:34Z"
    }
  ],
  "created_at": "2019-11-27T19:49:12Z",
  "labels": [
    "Issue-Question",
    "WG-Interactive-HelpSystem",
    "Committee-Reviewed"
  ],
  "number": 11205,
  "state": "open",
  "title": "Get-Help cannot open if there are duplicates",
  "updated_at": "2020-12-14T20:15:10Z"
}