{
  "_url": "https://github.com/PowerShell/PowerShell/issues/14957",
  "author": "brunovieira97",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 and PowerShell 7+ issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6).\r\n\r\n-->\r\n\r\n## Steps to reproduce\r\n\r\n```powershell\r\nPS> $path = [Environment]::GetEnvironmentVariable('Path', 'User)\r\nPS> $newPath = \"<add new entry here>;$path\"\r\nPS> [Environment]::SetEnvironmentVariable('Path', $newPath, 'User')\r\n```\r\n\r\n## Expected behavior\r\n\r\nUser's PATH content is altered and verifiable through System Properties > Environment Variables\r\n\r\n## Actual behavior\r\n\r\nPowerShell 7 reports the new value for the User's PATH.\r\n\r\nUser's PATH remains the same on every software (Windows PowerShell, for example) and System Properties > Environment Variables.\r\n\r\nExample, showing `C:\\Users\\bruno\\foo` is on my PATH (I've added it using steps documented above) according to PowerShell 7 downloaded from Microsoft Store:\r\n \r\n```powershell\r\nPS> [Environment]::GetEnvironmentVariable('Path', 'User')\r\n\r\nC:\\Users\\bruno\\foo;C:\\Users\\bruno\\scoop\\apps\\gpg\\current\\bin;C:\\Users\\bruno\\scoop\\apps\\nodejs\\current\\bin;C:\\Users\\bruno\\scoop\\apps\\nodejs\\current;C:\\Users\\bruno\\scoop\\shims;C:\\Users\\bruno\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\bruno\\AppData\\Local\\Programs\\Microsoft VS Code\\bin;C:\\Users\\bruno\\AppData\\Local\\Programs\\Azure Data Studio\\bin\r\n```\r\n\r\nIf I go to System Properties, PATH is different, not showing the path I added through PS7:\r\n![image](https://user-images.githubusercontent.com/19749621/110250680-52a18280-7f5b-11eb-853a-2e0d86244ef6.png)\r\n\r\nSome important notes:\r\n\r\n - New value is always shown in PowerShell 7 only\r\n - This does not occur with PS 7 installed through MSI, only MS Store version\r\n - This happens independently of Terminal used (ConHost and Windows Terminal tested)\r\n - Occurs even after launching a new instance (of Windows Terminal AND PS 7, tested that)\r\n - New PATH is never shown in System Properties or Windows PowerShell, even after launching new instances, logging out or rebooting the PC\r\n - Only way to revert the PATH on PS 7 (so it has the same value as the System Properties one) is editing it through PS 7, as no other way contains the bugged content\r\n\r\n## Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.2\r\nPSEdition                      Core\r\nGitCommitId                    7.1.2\r\nOS                             Microsoft Windows 10.0.19042\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2021-05-11T05:22:33Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "/cc @SteveL-MSFT, seems like it might be related to the sandboxing issues that have cropped up with the MSIX/Store versions in the past?",
      "created_at": "2021-03-07T22:29:25Z",
      "updated_at": "2021-03-07T22:29:25Z"
    },
    {
      "author": "I-Cat",
      "author_association": "NONE",
      "body": "'''\r\nGet path would be a path that is already set\r\nSet path is to set a path \r\nIt really looks like the code Is wrong. \r\nYes I also randomly lost my windows store as soon as i clicked do u grant this app to make changes. Rolf right!\r\nI also seen two ways to edit this. It says system path And User path. Someone messing with us. \r\nHit the windows key type in enviromental settings. \r\n'''\r\n@vexx32 @brunovieira97",
      "created_at": "2021-03-10T21:10:35Z",
      "updated_at": "2021-03-10T21:23:53Z"
    },
    {
      "author": "brunovieira97",
      "author_association": "NONE",
      "body": "@I-Cat I don't think you understood the issue I reported.",
      "created_at": "2021-03-11T15:06:24Z",
      "updated_at": "2021-03-11T15:06:24Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Windows Store apps are sandboxed, by design.  PowerShell 7 store app explicitly requests [unvirtualized resources](https://github.com/PowerShell/PowerShell/blob/master/assets/AppxManifest.xml#L47) which should include registry (that's where `PATH` is persisted), but seems like this isn't being honored.  Will have to follow-up with the AppX folks.",
      "created_at": "2021-03-11T18:15:38Z",
      "updated_at": "2021-03-11T18:15:38Z"
    },
    {
      "author": "I-Cat",
      "author_association": "NONE",
      "body": "The answer is odd but here it is type in the following\r\n\r\n```cmd.exe \r\ncmd.exe\r\ncd \\\r\nPATH=ADD\r\nPATH\r\nPATH=%YOUR PATH VALUE%\r\nPATH=C:\\Java\\jdk1.8.0_131\\bin;C:\\Python39\\Scripts;C:\\Python39;C:\\Program Files\\Intel\\iCLS Client;C:\\Program Files (x86)\\Intel\\iCLS Client;C:\\Windows;C:\\win\\system32;C:\\Windows\\System32;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0;C:\\Windows\\System32\\OpenSSH;C:\\Yarn\\bin;C:\\Huawei\\bin;C:\\Windows;C:\\Program Files (x86)\\Gpg4win\\..\\GnuPG\\bin;C:\\ProgramData\\chocolatey\\bin;C:\\Users\\@I-CAT\\nodejs;C:\\Program Files\\Git\\cmd;C:\\Program Files (x86)\\Microsoft SQL Server\\110\\DTS\\Binn\\;C:\\Program Files (x86)\\Microsoft SQL Server\\120\\DTS\\Binn\\;C:\\Program Files (x86)\\Microsoft SQL Server\\130\\DTS\\Binn\\;C:\\Program Files (x86)\\Microsoft SQL Server\\140\\DTS\\Binn\\;C:\\Program Files (x86)\\Microsoft SQL Server\\150\\DTS\\Binn\\;C:\\Users\\@I-CAT\\Git\\cmd;C:\\Users\\@I-CAT\\Huawei\\bin;C:\\Users\\@I-CAT\\Huawei\\resources\\app\\extensions\\deveco-debug\\lib\\toolkit;C:\\Users\\@I-CAT\\go\\bin;C:\\Users\\@I-CAT\\node\\;C:\\Program Files (x86)\\Git LFS;C:\\Program Files\\TortoiseSVN\\bin;C:\\Users\\@I-CAT\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\@I-CAT\\python\\;C:\\Users\\@I-CAT\\python\\Scripts\\;C:\\Program Files (x86)\\GitHub CLI;C:\\Git\\mingw64\\bin\\git.exe;C:\\Users\\@I-CAT\\go\\bin;C:\\Users\\@I-CAT\\AppData\\Local\\atom-nightly\\bin;C:\\Users\\@I-CAT\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\@I-CAT\\Microsoft_Code\\bin;C:\\Users\\@I-CAT\\AppData\\Roaming\\npm;\r\n```\r\n@vexx32 @brunovieira97",
      "created_at": "2021-03-11T22:09:16Z",
      "updated_at": "2021-03-11T22:11:59Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@I-Cat this issue is about PowerShell and not cmd.exe.",
      "created_at": "2021-03-11T23:48:51Z",
      "updated_at": "2021-03-11T23:48:51Z"
    },
    {
      "author": "I-Cat",
      "author_association": "NONE",
      "body": "  @brunovieira97  @vexx32\r\nYes thank you. Powershell calls cmd.exe and others think of it as a shortcut to exe files on windows. The ps command and the code should be\r\n\r\n\r\nPS> [Environment]::GetEnvironmentVariable('Path', 'System')\r\nPS> [Environment]::SetEnvironmentVariable('Path', 'System')\r\nTo set system paths.",
      "created_at": "2021-03-16T00:10:27Z",
      "updated_at": "2021-03-16T00:14:20Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Yes. \r\n\r\nThis issue is about how specifically in the version of PowerShell from the Windows Store, the PATH variable cannot be modified in a persistent way (in user / machine scope) due to msix sandboxing behaviour.",
      "created_at": "2021-03-16T00:27:09Z",
      "updated_at": "2021-03-16T00:27:22Z"
    },
    {
      "author": "kilasuit",
      "author_association": "COLLABORATOR",
      "body": "This works fine for machine scope & actually seems to work fine at returning the edited User scope on new PowerShell processes\r\n\r\nwhat seems not to be updating is the System Properties User Path UI which I don't think updates anyway until you log off and on again as PowerShell reads it from Registry anyway (on windows)\r\n\r\nCode to repro\r\nprocess 1\r\n```powershell\r\n$path = [Environment]::GetEnvironmentVariable('Path', 'User)\r\n$newPath = \"C:\\Tmp\\\";$path\"\r\n[Environment]::SetEnvironmentVariable('Path', $newPath, 'User')\r\n```\r\nprocess 2 (started after running above)\r\n```powershell\r\n [Environment]::GetEnvironmentVariable('Path', 'User').split(';') -contains \"C:\\Tmp\\\"\r\n```",
      "created_at": "2021-03-16T02:46:25Z",
      "updated_at": "2021-03-16T02:46:57Z"
    },
    {
      "author": "I-Cat",
      "author_association": "NONE",
      "body": "> This works fine for machine scope & actually seems to work fine at returning the edited User scope on new PowerShell processes\r\n> \r\n> what seems not to be updating is the System Properties User Path UI which I don't think updates anyway until you log off and on again as PowerShell reads it from Registry anyway (on windows)\r\n> \r\n> Code to repro\r\n> process 1\r\n> \r\n> ```powershell\r\n> $path = [Environment]::GetEnvironmentVariable('Path', 'User)\r\n> $newPath = \"C:\\Tmp\\\";$path\"\r\n> [Environment]::SetEnvironmentVariable('Path', $newPath, 'User')\r\n> ```\r\n> \r\n> process 2 (started after running above)\r\n> \r\n> ```powershell\r\n>  [Environment]::GetEnvironmentVariable('Path', 'User').split(';') -contains \"C:\\Tmp\\\"\r\n> ```\r\n\r\nThen you need a simple script that will do this in power shell.\r\nOn  first install\r\ncmd.exe shutdown/l\r\n",
      "created_at": "2021-03-16T20:27:09Z",
      "updated_at": "2021-03-16T20:27:57Z"
    },
    {
      "author": "brunovieira97",
      "author_association": "NONE",
      "body": "> This works fine for machine scope & actually seems to work fine at returning the edited User scope on new PowerShell processes\r\n> \r\n> what seems not to be updating is the System Properties User Path UI which I don't think updates anyway until you log off and on again as PowerShell reads it from Registry anyway (on windows)\r\n> \r\n> Code to repro\r\n> process 1\r\n> \r\n> ```powershell\r\n> $path = [Environment]::GetEnvironmentVariable('Path', 'User)\r\n> $newPath = \"C:\\Tmp\\\";$path\"\r\n> [Environment]::SetEnvironmentVariable('Path', $newPath, 'User')\r\n> ```\r\n> \r\n> process 2 (started after running above)\r\n> \r\n> ```powershell\r\n>  [Environment]::GetEnvironmentVariable('Path', 'User').split(';') -contains \"C:\\Tmp\\\"\r\n> ```\r\n\r\nFor me, the new value is only returned on new PowerShell 7 instances. A new Windows PowerShell instance won't return \"C:\\Tmp\\\" in User's Path.",
      "created_at": "2021-04-27T21:04:05Z",
      "updated_at": "2021-04-27T21:04:05Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:This issue was addressed in #15375, which has now been successfully released as `v7.2.0-preview.6`.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.2.0-preview.6)\n",
      "created_at": "2021-05-27T17:31:47Z",
      "updated_at": "2021-05-27T17:31:47Z"
    }
  ],
  "created_at": "2021-03-07T18:49:31Z",
  "number": 14957,
  "state": "closed",
  "title": "Windows Store version can't modify PATH",
  "updated_at": "2021-05-27T17:31:47Z"
}