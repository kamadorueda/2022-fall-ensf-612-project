{
  "_url": "https://github.com/PowerShell/PowerShell/issues/1219",
  "author": "andschwa",
  "body": "This is work-in-progress to resolve #839.\n\nThis mimics the deprecated `InitializeDefaultLoadContext` by loading our top-level DLL (in this case, `ConsoleHost`) from the loader shim (`src/powershell`) manually with the ALC, then invoking its entry-point via reflection. In this way, all subsequent libraries are loaded through the same ALC (ours).\n\nThis also reverts the `ClrFacade.Load` work-around I'd introduced, as this _should_ mean all assemblies are intercepted correctly.\n\nThis PR contains debugging and unfinished code, and exists solely to share with @daxian-dbw.\n",
  "closed_at": "2016-06-29T01:25:24Z",
  "comments": [
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Additionally, .NET Core 1.0 correctly does not throw when loading assemblies that are in the TPA, so try/catch logic that was introduced in the ALC was removed.\n\nNote that this does not _quite_ work. PowerShell loads, but there are some assembly loading issues, heh.\n",
      "created_at": "2016-06-27T22:38:20Z",
      "updated_at": "2016-06-27T22:38:20Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "@daxian-dbw @vors BTW I ported the type catalog generator to .NET Core :smile: \n",
      "created_at": "2016-06-27T22:39:47Z",
      "updated_at": "2016-06-27T22:39:47Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "One problem we need to solve is that, right now, the whole project must be published, since the only path we start with is `System.AppContext.BaseDirectory` i.e. `$PsHome`. It should be pretty trivial to use the same logic in the parser to add the paths to every package we're using on start-up, so that we can still use `dotnet build`.\n",
      "created_at": "2016-06-27T22:49:33Z",
      "updated_at": "2016-06-27T22:49:33Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Woah. This is working. That is, if I `cd` to the publish directory and launch it _right there_, it works.\n\n```\n~\\src\\PowerShell\\src\\powershell\\bin\\Debug\\netcoreapp1.0\\win10-x64\\publish |-/ .\\powershell.exe\nAttempting to Load Microsoft.PowerShell.ConsoleHost, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\nAttempting to Load System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\nAttempting to Load Microsoft.PowerShell.CoreCLR.Eventing, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\nAttempting to Load System.Runtime.Serialization.Primitives, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\nAttempting to Load Microsoft.Win32.Primitives, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\nAttempting to Load Microsoft.Win32.Registry, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\nAttempting to Load System.Resources.ResourceManager, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\nAttempting to Load System.Runtime.InteropServices.RuntimeInformation, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\nAttempting to Load System.Runtime, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\nAttempting to Load System.Diagnostics.Process, Version=4.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\nAttempting to Load System.Diagnostics.FileVersionInfo, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\nAttempting to Load System.Dynamic.Runtime, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\nAttempting to Load System.Threading.Thread, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\nAttempting to Load System.Linq.Expressions, Version=4.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\nAttempting to Load System.Diagnostics.TraceSource, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\nAttempting to Load System.IO.FileSystem, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\nAttempting to Load System.Xml.ReaderWriter, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\nAttempting to Load System.Collections.NonGeneric, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\nAttempting to Load Microsoft.Management.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\nAttempting to Load System.Text.RegularExpressions, Version=4.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\nAttempting to Load System.Runtime.Numerics, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\nAttempting to Load System.Threading.Overlapped, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\nAttempting to Load System.Security.SecureString, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\nAttempting to Load System.Net.Primitives, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\nAttempting to Load System.Xml.XmlDocument, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\nAttempting to Load System.Security.AccessControl, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\nAttempting to Load System.Reflection, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\nAttempting to Load System.Reflection.TypeExtensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\nAttempting to Load System.Linq, Version=4.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\nAttempting to Load System.Security.Principal, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\nAttempting to Load System.Data.Common, Version=4.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\nAttempting to Load System.Reflection.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\nAttempting to Load System.Reflection.Emit.ILGeneration, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\nAttempting to Load System.Diagnostics.Debug, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\nAttempting to Load System.Reflection.Primitives, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\nAttempting to Load System.Reflection.Emit.Lightweight, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\nWindows PowerShell\nCopyright (C) 2016 Microsoft Corporation. All rights reserved.\n\nAttempting to Load System.ObjectModel, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\nAttempting to Load System.Diagnostics.Tracing, Version=4.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\nAttempting to Load System.Security.Principal.Windows, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\nAttempting to Load System.Security.Claims, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\nAttempting to Load System.Collections, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\nAttempting to Load System.Globalization, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\nAttempting to Load System.Reflection.Emit, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\nAttempting to Load System.Threading.Timer, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\nAttempting to Load System.Collections.Specialized, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\nAttempting to Load System.Threading.Tasks.Parallel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\nAttempting to Load Microsoft.PowerShell.Security, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\nAttempting to Load System.IO.FileSystem.DriveInfo, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\nAttempting to Load System.ComponentModel.TypeConverter, Version=4.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\nAttempting to Load System.Security.Cryptography.X509Certificates, Version=4.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\nAttempting to Load System.Security.Cryptography.Encoding, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\nAttempting to Load System.IO.FileSystem.AccessControl, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\nAttempting to Load Microsoft.Win32.Registry.AccessControl, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\nAttempting to Load System.Threading.ThreadPool, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\nAttempting to Load Microsoft.PowerShell.PSReadLine, Culture=neutral, PublicKeyToken=null\nAttempting to Load Microsoft.CSharp, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\nAttempting to Load Microsoft.PowerShell.Commands.Utility, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\nLoading personal and system profiles took 620ms.\nAttempting to Load Microsoft.PowerShell.Commands.Management, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\nAttempting to Load System.ServiceProcess.ServiceController, Version=4.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\n~\\src\\PowerShell\\src\\powershell\\bin\\Debug\\netcoreapp1.0\\win10-x64\\publish |-/\n```\n\nGiven that I have debugging code in this, that's the exact output I was expecting.\n",
      "created_at": "2016-06-27T22:51:27Z",
      "updated_at": "2016-06-27T22:51:53Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Not all tests are passing, as some methods aren't getting found (as if implicit loading isn't working), but it's progress.\n\n@daxian-dbw can we see your changes too? I'd like to converge.\n",
      "created_at": "2016-06-27T22:54:28Z",
      "updated_at": "2016-06-28T17:03:38Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Actually, this is very promising. It looks like all the \"missing methods\" are coming just from `Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions`, so at least it's just one problem, not many.\n",
      "created_at": "2016-06-27T22:58:01Z",
      "updated_at": "2016-06-27T22:58:01Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "```\n   Method not found: 'Void Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions..ctor(Microsoft.CodeAnalysis.OutputKind, System.String, System.String, System.String, System.Collections.Generic.IEnumerable`1<System.String>, Microsoft.CodeAnalysis.OptimizationLevel, Bool\nean, Boolean, System.String, System.String, System.Collections.Immutable.ImmutableArray`1<Byte>, System.Nullable`1<Boolean>, Microsoft.CodeAnalysis.Platform, Microsoft.CodeAnalysis.ReportDiagnostic, Int32, System.Collections.Generic.IEnumerable`1<System.Collections.Gener\nic.KeyValuePair`2<System.String,Microsoft.CodeAnalysis.ReportDiagnostic>>, Boolean, Boolean, Microsoft.CodeAnalysis.XmlReferenceResolver, Microsoft.CodeAnalysis.SourceReferenceResolver, Microsoft.CodeAnalysis.MetadataReferenceResolver, Microsoft.CodeAnalysis.AssemblyIden\ntityComparer, Microsoft.CodeAnalysis.StrongNameProvider)'.\n```\n\n@vors does this mean anything to you?\n",
      "created_at": "2016-06-27T22:58:50Z",
      "updated_at": "2016-06-27T22:58:50Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "@daxian-dbw I'm probably going to pull out the `Start-TypeGen` changes and port of the generator out of this and into #1210, so we can keep working on this and #1228.\n",
      "created_at": "2016-06-28T17:16:53Z",
      "updated_at": "2016-06-28T17:16:53Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Ah I need to change the base branch. Closing and re-opening.\n",
      "created_at": "2016-06-29T01:25:24Z",
      "updated_at": "2016-06-29T01:25:24Z"
    }
  ],
  "created_at": "2016-06-27T22:35:09Z",
  "number": 1219,
  "state": "closed",
  "title": "WIP AssemblyLoadContext",
  "updated_at": "2016-06-29T01:25:28Z"
}