{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13568",
  "author": "yifanwww",
  "body": "I wrote a simple cpp code 'program.cpp', encoding in utf8, for only printing a chinese string:\r\n```cpp\r\n#include<iostream>\r\nint main()\r\n{\r\n    std::cout << \"\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\" << std::endl;\r\n    return 0;\r\n}\r\n```\r\n\r\nBut it actually printed a wrong string:\r\n```shell\r\n> g++ .\\program.cpp\r\n>  .\\a.exe\r\n\u935d\u581d\u6431\u935d\u581d\u6431\u935d\u581d\u6431\r\n```\r\n\r\n## cmd & powershell\r\n\r\nThe current code page of cmd or powerhsell is 936-gbk. But I can use `chcp 65001` to solve this problem:\r\n```shell\r\n>a.exe\r\n\u935d\u581d\u6431\u935d\u581d\u6431\u935d\u581d\u6431\r\n\r\n>type program.cpp\r\n#include<iostream>\r\nint main()\r\n{\r\n    std::cout << \"\u935d\u581d\u6431\u935d\u581d\u6431\u935d\u581d\u6431\" << std::endl;\r\n    return 0;\r\n}\r\n```\r\n```shell\r\nActive code page: 65001\r\n\r\n>a.exe\r\n\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\r\n\r\n>type program.cpp\r\n#include<iostream>\r\nint main()\r\n{\r\n    std::cout << \"\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\" << std::endl;\r\n    return 0;\r\n}\r\n```\r\n\r\n## pwsh\r\n\r\nThe current code page is 65001-utf8. I cannot get correct chinese strings printed, and `chcp 65001` doesn't work.\r\n```shell\r\n> .\\a.exe\r\n\u935d\u581d\u6431\u935d\u581d\u6431\u935d\u581d\u6431\r\n> cat .\\program.cpp\r\n#include<iostream>\r\nint main()\r\n{\r\n    std::cout << \"\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\" << std::endl;\r\n    return 0;\r\n}\r\n```\r\n```shell\r\nActive code page: 65001\r\n> .\\a.exe\r\n\u935d\u581d\u6431\u935d\u581d\u6431\u935d\u581d\u6431\r\n> cat .\\program.cpp\r\n#include<iostream>\r\nint main()\r\n{\r\n    std::cout << \"\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\" << std::endl;\r\n    return 0;\r\n}\r\n```\r\n\r\n## Environment data\r\n\r\nzh-cn win10.\r\n\r\n```shell\r\n> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.3\r\nPSEdition                      Core\r\nGitCommitId                    7.0.3\r\nOS                             Microsoft Windows 10.0.18363\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2020-09-05T12:00:09Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Please test with latest PowerShell 7.1 Preview build.",
      "created_at": "2020-09-03T13:48:26Z",
      "updated_at": "2020-09-03T13:48:26Z"
    },
    {
      "author": "yifanwww",
      "author_association": "NONE",
      "body": "7.1.0-preview6, this problem still exists. It behaves the same as what 7.0.3 behaves.",
      "created_at": "2020-09-04T04:29:51Z",
      "updated_at": "2020-09-04T04:29:51Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "How do you change active code page? If you are in the same session you should use `[Console]::OutputEncoding = <nnn>`",
      "created_at": "2020-09-04T06:13:25Z",
      "updated_at": "2020-09-04T06:13:37Z"
    },
    {
      "author": "yifanwww",
      "author_association": "NONE",
      "body": "`[console]::outputencoding = [system.text.encoding]::utf8` works.\r\n\r\nHmmm, I'm confused.\r\n\r\nBefore changing code page, `$outputencoding` shows the encoding is utf8 and `[console]::outputencoding` shows the encoding is gb2312. What's the differences between `$outputencoding` and `[console]::outputencoding`?\r\nThe 'current code page' in properties shows the encoding is utf8, where does it come from?\r\nIf input `chcp`, it prints 'Active code page: 936', where does this result come from?\r\n\r\n`chcp 65001` doesn't change the `[console]::outputencoding` or `$outputencoding`, but in powershell it surely changes something to make the output to be decoded correctly. Why it fails in pwsh?",
      "created_at": "2020-09-04T06:57:25Z",
      "updated_at": "2020-09-04T06:57:25Z"
    },
    {
      "author": "DHowett",
      "author_association": "NONE",
      "body": "(If your application requires a specific codepage to be active, it should set it itself. It is almost always incorrect to rely on the global state of the console, because it will rarely be what you want.)",
      "created_at": "2020-09-04T07:03:41Z",
      "updated_at": "2020-09-04T07:03:41Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@YF1999 You can see https://stackoverflow.com/questions/40098771/changing-powershells-default-output-encoding-to-utf-8 for additional information.\n\n<blockquote><img src=\"https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded\" width=\"48\" align=\"right\"><div>Stack Overflow</div><div><strong><a href=\"https://stackoverflow.com/questions/40098771/changing-powershells-default-output-encoding-to-utf-8\">Changing PowerShell's default output encoding to UTF-8</a></strong></div><div>By default, when you redirect the output of a command to a file or pipe it into something else in PowerShell, the encoding is UTF-16, which isn't useful. I'm looking to change it to UTF-8.\n\nIt can be </div></blockquote>",
      "created_at": "2020-09-04T07:45:59Z",
      "updated_at": "2020-09-04T07:46:03Z"
    },
    {
      "author": "yifanwww",
      "author_association": "NONE",
      "body": "> (If your application requires a specific codepage to be active, it should set it itself. It is almost always incorrect to rely on the global state of the console, because it will rarely be what you want.)\r\n\r\nI don't understand.\r\n\r\nIf pwsh's encoding is not the same as my program, the output from my program can be decoded correctly?\r\n\r\nI wrote a c# program to output '\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8', succeeded if `[console]::outputencoding` is gb2312, utf8 and utf7, but if is ascii it prints '??????'. If this c# program will automatically set the codepage itself, why it fails if global codepage is ascii?\r\n\r\nThere is not this problem for python and node programs, but electron programs only succeed if global codepage is utf8.",
      "created_at": "2020-09-04T07:53:12Z",
      "updated_at": "2020-09-04T07:53:12Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2020-09-05T12:00:07Z",
      "updated_at": "2020-09-05T12:00:07Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> If this c# program will automatically set the codepage itself, why it fails if global codepage is ascii?\r\n\r\nYour program does not set a code page.\r\nhttps://stackoverflow.com/questions/45575863/how-to-print-utf-8-strings-to-stdcout-on-windows\n\n<blockquote><img src=\"https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded\" width=\"48\" align=\"right\"><div>Stack Overflow</div><div><strong><a href=\"https://stackoverflow.com/questions/45575863/how-to-print-utf-8-strings-to-stdcout-on-windows\">How to print UTF-8 strings to std::cout on Windows?</a></strong></div><div>I'm writing a cross-platform application in C++. All strings are UTF-8-encoded internally. Consider the following simplified code:\n\n#include &lt;string&gt;\n#include &lt;iostream&gt;\n\nint main() {\n ...</div></blockquote>",
      "created_at": "2020-09-05T17:09:50Z",
      "updated_at": "2020-09-05T17:09:52Z"
    }
  ],
  "created_at": "2020-09-03T11:38:39Z",
  "number": 13568,
  "state": "closed",
  "title": "Code page seems to be broken",
  "updated_at": "2020-09-05T17:09:52Z"
}