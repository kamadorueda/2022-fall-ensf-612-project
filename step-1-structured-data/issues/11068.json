{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11068",
  "author": "IISResetMe",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nThis pull request adds 2 new containment operators:\r\n - `-any` (ex. `1..5 -any { $_ -eq 2 }`)\r\n    - Takes a collection as its `lhs` operand and a predicate as its `rhs` operand. Returns `true` if the predicate is `true` for _any_ lhs value, returns `false` otherwise\r\n - `-all` (ex. `1..5 -all { $_ -gt 0 }`)\r\n    - Takes a collection as its lhs operand and a predicate as its rhs operand. Returns `true` if the predicate is `true` for _all_ lhs value, returns `false` otherwise\r\n\r\nIf a non-delegate-like object is passed as the `rhs` operand, we perform a scalar equality comparison against each item in `lhs`.\r\n\r\nA related update to the EditorSyntax definition has been prepared here: https://github.com/PowerShell/EditorSyntax/pull/189\r\n\r\n<!-- Summarize your PR between here and the checklist. -->\r\n\r\n## PR Context\r\n\r\nThis PR is partly motivated by the discussion in #7925, and my own frustration with having to cast nested loop structures to perform similar containment testing. \r\n\r\nFor example, to find a directory in which _all_ files a marked `hidden`:\r\n\r\n```powershell\r\n# with the current binary operators\r\nGet-ChildItem -Directory -Recurse |Where {\r\n  $files = @($_ |Get-ChildItem -File -Force) \r\n  $files.Count -gt 0 -and ($files |Where Attributes -notlike \"*hidden*\").Count -eq 0\r\n}\r\n\r\n# with `-all`\r\nGet-ChildItem -Directory -Recurse |Where {\r\n  @($_ |Get-ChildItem -File -Force) -all {$_.Attributes -like \"*hidden*\"}\r\n}\r\n```\r\n*(I'm aware that dynamic parameter aliases exist specifically for attribute filtering in the FileSystem provider, but that's sort of missing the point, `-any`/`-all` would work in _any_ context)*\r\n<!-- Provide a little reasoning as to why this Pull Request helps and why you have opened it. -->\r\n\r\n## TODO:\r\n\r\n - [ ] Should we include a negation? (`-notany`/`-none` and `-notall`)\r\n - [ ] Should we include case-sensitive variants? (only applies to the `-contains` fallback edge case)\r\n - [ ] Should we include more/better tests? (for containment operators in general)\r\n\r\n## PR Checklist\r\n\r\n- [X] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [X] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [X] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [X] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [ ] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [X] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2021-05-08T17:23:20Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "RE: The additional questions -- yes, I'd say it's worth including the negative versions, but I don't see a lot of value in a case-sensitive version, since folx can just use case-sensitive operators inside the scriptblock expression to get the same effect.",
      "created_at": "2019-11-18T05:58:41Z",
      "updated_at": "2019-11-18T05:58:41Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMainainer, Please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2020-05-27T02:02:29Z",
      "updated_at": "2020-05-27T02:02:29Z"
    }
  ],
  "created_at": "2019-11-14T01:53:31Z",
  "number": 11068,
  "state": "closed",
  "title": "Add any/all lambda containment operators",
  "updated_at": "2021-05-08T17:23:20Z"
}