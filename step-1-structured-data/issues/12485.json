{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12485",
  "author": "rkeithhill",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 and PowerShell 7+ issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n\r\n-->\r\n\r\n# Steps to reproduce\r\n\r\nNot sure exactly how I encountered this but I was running in WT and I had this process in the top half of a split pane setup. I had just run a command to display progress. But I had done this several times with no crash.  This is the command that I was running to display the progress bar:\r\n\r\n```powershell\r\n1..100 | % {Write-Progress -Activity Demo -PercentComplete $_; Start-Sleep -Milliseconds 500}\r\n```\r\n\r\n# Expected behavior\r\n\r\nPowerShell should not crash.\r\n\r\n# Actual behavior\r\n\r\nPowerShell crashed.\r\n\r\n```none\r\nActual value was 39.\r\n   at Microsoft.PowerShell.ConsoleHostRawUserInterface.CheckCoordinateWithinBuffer(Coordinates& c, CONSOLE_SCREEN_BUFFER_INFO& bufferInfo, String paramName)\r\n   at Microsoft.PowerShell.ConsoleHostRawUserInterface.set_CursorPosition(Coordinates value)\r\n   at Microsoft.PowerShell.ProgressPane.Hide()\r\n   at Microsoft.PowerShell.ConsoleHostUserInterface.ResetProgress()\r\n   at Microsoft.PowerShell.Executor.ExecuteCommandHelper(Pipeline tempPipeline, Exception& exceptionThrown, ExecutionOptions options)\r\n   at Microsoft.PowerShell.ConsoleHost.InputLoop.Run(Boolean inputLoopIsNested)\r\n   at Microsoft.PowerShell.ConsoleHost.InputLoop.RunNewInputLoop(ConsoleHost parent, Boolean isNested)\r\n   at Microsoft.PowerShell.ConsoleHost.EnterNestedPrompt()\r\n   at Microsoft.PowerShell.ConsoleHost.DoRunspaceLoop(String initialCommand, Boolean skipProfiles, Collection`1 initialCommandArgs, Boolean staMode, String configurationName)\r\n   at Microsoft.PowerShell.ConsoleHost.Run(CommandLineParameterParser cpp, Boolean isPrestartWarned)\r\n   at Microsoft.PowerShell.ConsoleHost.Start(String bannerText, String helpText, String[] args)\r\n   at Microsoft.PowerShell.ConsoleShell.Start(InitialSessionState initialSessionState, String bannerText, String helpText, String[] args)\r\n   at Microsoft.PowerShell.UnmanagedPSEntry.Start(String consoleFilePath, String[] args, Int32 argc)\r\n[process exited with code 2148734499]\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.0-preview.2\r\nPSEdition                      Core\r\nGitCommitId                    7.1.0-preview.2\r\nOS                             Microsoft Windows 10.0.18363\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Did you change Windows Terminal position or size?",
      "created_at": "2020-04-27T18:08:35Z",
      "updated_at": "2020-04-27T18:08:35Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "I didn't change the outer frame but this pane's size changed when I opened another split pane below it.",
      "created_at": "2020-04-27T18:31:21Z",
      "updated_at": "2020-04-27T18:31:21Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "For reference #11913",
      "created_at": "2020-04-28T03:15:32Z",
      "updated_at": "2020-04-28T03:15:32Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "OK I can repro this.  Open a PowerShell 7 tab in WT.  Execute this:\r\n```\r\n1..100 | %{Write-Progress -Activity 'Progress in PSIC' -PercentComplete $_; Sleep -m 500}\r\n```\r\nThen open up a horizontal split-pane and then just wait for the progress bar to finish and remove itself.  That's when it crashes:\r\n![image](https://user-images.githubusercontent.com/5177512/80444336-bafced80-88ce-11ea-872a-5d620f4671a1.png)\r\n",
      "created_at": "2020-04-28T03:34:02Z",
      "updated_at": "2020-04-28T03:34:02Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "/cc @DHowett-MSFT",
      "created_at": "2020-04-28T03:52:59Z",
      "updated_at": "2020-04-28T03:52:59Z"
    },
    {
      "author": "DHowett-MSFT",
      "author_association": "NONE",
      "body": "This will happen on all console hosts where the buffer size is equal to the screen size and the buffer/screen size change during the progress operation. This is not a reasonable state in which to fail. :smile:",
      "created_at": "2020-04-28T03:56:13Z",
      "updated_at": "2020-04-28T03:56:13Z"
    },
    {
      "author": "DHowett-MSFT",
      "author_association": "NONE",
      "body": "When writing back the output cells, PowerShell needs to _not instantly beef it_ when it fails to do so. The data that's lost isn't worth destroying the user's session over.",
      "created_at": "2020-04-28T03:56:49Z",
      "updated_at": "2020-04-28T03:56:49Z"
    },
    {
      "author": "KalleOlaviNiemitalo",
      "author_association": "NONE",
      "body": "I think I hit the same error on PowerShell 7.1.3 in Windows Terminal, when I resized the window (moved it to a different monitor) during an operation that was displaying progress.  The process however did not terminate, and the operation continued after the error. There are currently no try\u2026catch statements in the script; if there had been one, I fear that it might have unnecessarily escalated the error.\r\n\r\n```\r\nWrite-Progress: C:\\REDACTED\\REDACTED.ps1:364\r\nLine |\r\n 364 |              Write-Progress -Activity $Activity `\r\n     |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n     | Cannot process the operation because the supplied coordinate is not valid. Specify a coordinate within the buffer area of\r\n     | 140,49. (Parameter 'value.Y') Actual value was 51.\r\n\r\nPS C:\\REDACTED> get-error\r\n\r\nException             :\r\n    Type        : System.Management.Automation.PSArgumentOutOfRangeException\r\n    ErrorRecord :\r\n        Exception             :\r\n            Type    : System.Management.Automation.ParentContainsErrorRecordException\r\n            Message : Cannot process the operation because the supplied coordinate is not valid. Specify a coordinate within the buffer area of 140,49. (Parameter 'value.Y')\r\n                      Actual value was 51.\r\n            HResult : -2146233087\r\n        CategoryInfo          : InvalidArgument: (:) [], ParentContainsErrorRecordException\r\n        FullyQualifiedErrorId : ArgumentOutOfRange\r\n    Message     : Cannot process the operation because the supplied coordinate is not valid. Specify a coordinate within the buffer area of 140,49. (Parameter 'value.Y')\r\n                  Actual value was 51.\r\n    ActualValue : 51\r\n    ParamName   : value.Y\r\n    TargetSite  :\r\n        Name          : CheckCoordinateWithinBuffer\r\n        DeclaringType : Microsoft.PowerShell.ConsoleHostRawUserInterface, Microsoft.PowerShell.ConsoleHost, Version=7.1.3.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\r\n        MemberType    : Method\r\n        Module        : Microsoft.PowerShell.ConsoleHost.dll\r\n    StackTrace  :\r\n   at Microsoft.PowerShell.ConsoleHostRawUserInterface.CheckCoordinateWithinBuffer(Coordinates& c, CONSOLE_SCREEN_BUFFER_INFO& bufferInfo, String paramName)\r\n   at Microsoft.PowerShell.ConsoleHostRawUserInterface.set_CursorPosition(Coordinates value)\r\n   at Microsoft.PowerShell.ProgressPane.Hide()\r\n   at Microsoft.PowerShell.ProgressPane.Show(PendingProgress pendingProgress)\r\n   at Microsoft.PowerShell.ConsoleHostUserInterface.WriteProgress(Int64 sourceId, ProgressRecord record)\r\n   at System.Management.Automation.Internal.Host.InternalHostUserInterface.WriteProgress(Int64 sourceId, ProgressRecord record)\r\n   at System.Management.Automation.MshCommandRuntime.WriteProgress(Int64 sourceId, ProgressRecord progressRecord, Boolean overrideInquire)\r\n   at Microsoft.PowerShell.Commands.WriteProgressCommand.ProcessRecord()\r\n   at System.Management.Automation.CommandProcessor.ProcessRecord()\r\n    Source      : Microsoft.PowerShell.ConsoleHost\r\n    HResult     : -2146233086\r\nCategoryInfo          : InvalidArgument: (:) [Write-Progress], PSArgumentOutOfRangeException\r\nFullyQualifiedErrorId : ArgumentOutOfRange,Microsoft.PowerShell.Commands.WriteProgressCommand\r\nInvocationInfo        :\r\n    MyCommand        : Write-Progress\r\n    ScriptLineNumber : 364\r\n    OffsetInLine     : 13\r\n    HistoryId        : 4\r\n    ScriptName       : C:\\REDACTED\\REDACTED.ps1\r\n    Line             : Write-Progress -Activity $Activity `\r\n\r\n    PositionMessage  : At C:\\REDACTED\\\\REDACTED.ps1:364 char:13\r\n                       +             Write-Progress -Activity $Activity `\r\n                       +             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    PSScriptRoot     : C:\\REDACTED\r\n    PSCommandPath    : C:\\REDACTED\\REDACTED.ps1\r\n    InvocationName   : Write-Progress\r\n    CommandOrigin    : Internal\r\nScriptStackTrace      : at <ScriptBlock>, C:\\REDACTED\\REDACTED.ps1: line 364\r\n                        at <ScriptBlock>, C:\\REDACTED\\REDACTED.ps1: line 359\r\n                        at <ScriptBlock>, <No file>: line 1\r\n\r\nPS C:\\REDACTED> $psversiontable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.3\r\nPSEdition                      Core\r\nGitCommitId                    7.1.3\r\nOS                             Microsoft Windows 10.0.19042\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
      "created_at": "2021-05-19T10:27:27Z",
      "updated_at": "2021-05-19T10:30:15Z"
    },
    {
      "author": "robinmalik",
      "author_association": "NONE",
      "body": "I just hit a similar issue with PowerShell 7.1.3 within Windows Terminal, whilst using PowerCLI to run the following line: `Set-VMhost -VMHost 'REDACTED' -State connected`. No additional tabs open, single monitor.\r\n\r\n```\r\n$PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.3\r\nPSEdition                      Core\r\nGitCommitId                    7.1.3\r\nOS                             Microsoft Windows 10.0.19043\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u0393\u00c7\u00aa}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\nGet-Error\r\n\r\n   ErrorIndex: 1\r\n\r\n\u001b[92mException             : \u001b[0m\r\n    \u001b[92mType              : \u001b[0mVMware.VimAutomation.Sdk.Types.V1.ErrorHandling.VimException.VimException\r\n    \u001b[92mErrorId           : \u001b[0mCore_BaseCmdlet_UnknownError\r\n    \u001b[92mRecommendedAction : \u001b[0mError occured while executing cmdlet: Set-VMHost. Check inner exception for more details.\r\n    \u001b[92mSeverity          : \u001b[0mError\r\n    \u001b[92mTargetSite        : \u001b[0m\r\n        \u001b[92mName          : \u001b[0mThrowTerminatingError\r\n        \u001b[92mDeclaringType : \u001b[0mSystem.Management.Automation.MshCommandRuntime, System.Management.Automation, Version=7.1.3.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\r\n        \u001b[92mMemberType    : \u001b[0mMethod\r\n        \u001b[92mModule        : \u001b[0mSystem.Management.Automation.dll\r\n    \u001b[92mStackTrace        : \u001b[0m\r\n   at System.Management.Automation.MshCommandRuntime.ThrowTerminatingError(ErrorRecord errorRecord)\r\n    \u001b[92mMessage           : \u001b[0m21/05/2021 10:11:48\tSet-VMHost\t\tCannot process the operation because the supplied coordinate is not valid. Specify a coordinate within the buffer area of 168,27. (Parameter 'value.Y')\r\n                        Actual value was 43.\r\n    \u001b[92mData              : \u001b[0mSystem.Collections.ListDictionaryInternal\r\n    \u001b[92mInnerException    : \u001b[0m\r\n        \u001b[92mType        : \u001b[0mSystem.Management.Automation.PSArgumentOutOfRangeException\r\n        \u001b[92mErrorRecord : \u001b[0m\r\n            \u001b[92mException             : \u001b[0m\r\n                \u001b[92mType    : \u001b[0mSystem.Management.Automation.ParentContainsErrorRecordException\r\n                \u001b[92mMessage : \u001b[0mCannot process the operation because the supplied coordinate is not valid. Specify a coordinate within the buffer area of 168,27. (Parameter 'value.Y')\r\n                          Actual value was 43.\r\n                \u001b[92mHResult : \u001b[0m-2146233087\r\n            \u001b[92mCategoryInfo          : \u001b[0mInvalidArgument: (:) [], ParentContainsErrorRecordException\r\n            \u001b[92mFullyQualifiedErrorId : \u001b[0mArgumentOutOfRange\r\n        \u001b[92mMessage     : \u001b[0mCannot process the operation because the supplied coordinate is not valid. Specify a coordinate within the buffer area of 168,27. (Parameter 'value.Y')\r\n                      Actual value was 43.\r\n        \u001b[92mActualValue : \u001b[0m43\r\n        \u001b[92mParamName   : \u001b[0mvalue.Y\r\n        \u001b[92mTargetSite  : \u001b[0m\r\n            \u001b[92mName          : \u001b[0mCheckCoordinateWithinBuffer\r\n            \u001b[92mDeclaringType : \u001b[0mMicrosoft.PowerShell.ConsoleHostRawUserInterface, Microsoft.PowerShell.ConsoleHost, Version=7.1.3.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\r\n            \u001b[92mMemberType    : \u001b[0mMethod\r\n            \u001b[92mModule        : \u001b[0mMicrosoft.PowerShell.ConsoleHost.dll\r\n        \u001b[92mStackTrace  : \u001b[0m\r\n   at Microsoft.PowerShell.ConsoleHostRawUserInterface.CheckCoordinateWithinBuffer(Coordinates& c, CONSOLE_SCREEN_BUFFER_INFO& bufferInfo, String paramName)\r\n   at Microsoft.PowerShell.ConsoleHostRawUserInterface.set_CursorPosition(Coordinates value)\r\n   at Microsoft.PowerShell.ProgressPane.Hide()\r\n   at Microsoft.PowerShell.ProgressPane.Show(PendingProgress pendingProgress)\r\n   at Microsoft.PowerShell.ConsoleHostUserInterface.HandleIncomingProgressRecord(Int64 sourceId, ProgressRecord record)\r\n   at Microsoft.PowerShell.ConsoleHostUserInterface.WriteProgress(Int64 sourceId, ProgressRecord record)\r\n   at System.Management.Automation.Internal.Host.InternalHostUserInterface.WriteProgress(Int64 sourceId, ProgressRecord record)\r\n   at System.Management.Automation.MshCommandRuntime.WriteProgress(Int64 sourceId, ProgressRecord progressRecord, Boolean overrideInquire)\r\n   at System.Management.Automation.MshCommandRuntime.WriteProgress(ProgressRecord progressRecord, Boolean overrideInquire)\r\n   at System.Management.Automation.MshCommandRuntime.WriteProgress(ProgressRecord progressRecord)\r\n   at System.Management.Automation.Cmdlet.WriteProgress(ProgressRecord progressRecord)\r\n   at VMware.VimAutomation.Sdk.Util10Ps.BaseCmdlet.BaseCmdlet.ProgressCallback(Task task, Object result, Boolean writeResultToScreen)\r\n   at VMware.VimAutomation.Sdk.Impl.V1.Task.ClientSideTaskCoreServiceProvider.CheckTaskCompletion(List`1 remainingTaskList, List`1& completedTaskList, ProgressCallback progressCallback)\r\n   at VMware.VimAutomation.Sdk.Impl.V1.Task.CoreTaskServiceImpl.WaitForTask(IEnumerable`1 taskList, ProgressCallback progressCallback)\r\n   at VMware.VimAutomation.Sdk.Util10Ps.BaseCmdlet.BaseCmdlet.EndProcessingErrorHandled()\r\n   at VMware.VimAutomation.ViCore.Util10Ps.BaseCmdlet.BaseCmdlet.EndProcessingErrorHandled()\r\n        \u001b[92mSource      : \u001b[0mMicrosoft.PowerShell.ConsoleHost\r\n        \u001b[92mHResult     : \u001b[0m-2146233086\r\n    \u001b[92mSource            : \u001b[0mSystem.Management.Automation\r\n    \u001b[92mHResult           : \u001b[0m-2146232832\r\n\u001b[92mCategoryInfo          : \u001b[0mNotSpecified: (:) [Set-VMHost], VimException\r\n\u001b[92mFullyQualifiedErrorId : \u001b[0mCore_BaseCmdlet_UnknownError,VMware.VimAutomation.ViCore.Cmdlets.Commands.SetVMHost\r\n\u001b[92mInvocationInfo        : \u001b[0m\r\n    \u001b[92mMyCommand        : \u001b[0mSet-VMHost\r\n    \u001b[92mScriptLineNumber : \u001b[0m1\r\n    \u001b[92mOffsetInLine     : \u001b[0m1\r\n    \u001b[92mHistoryId        : \u001b[0m26\r\n    \u001b[92mLine             : \u001b[0mset-vmhost -VMHost 'REDACTED' -State connected\r\n    \u001b[92mPositionMessage  : \u001b[0mAt line:1 char:1\r\n                       + set-vmhost -VMHost 'REDACTED' -State connected\r\n                       + ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    \u001b[92mInvocationName   : \u001b[0mset-vmhost\r\n    \u001b[92mCommandOrigin    : \u001b[0mInternal\r\n\u001b[92mScriptStackTrace      : \u001b[0mat <ScriptBlock>, <No file>: line 1\r\n\t\r\n```\r\n\r\nFunky prefix characters are the result of piping the command to `clip` and pasting here. An encoding issue that only happens with certain commands, but can be ignored.\r\n\r\n\r\n\r\n",
      "created_at": "2021-05-21T09:39:55Z",
      "updated_at": "2021-05-21T09:45:21Z"
    },
    {
      "author": "KalleOlaviNiemitalo",
      "author_association": "NONE",
      "body": "Saving the text behind the progress bar and restoring it later is not compatible with supplementary characters either, as [ReadConsoleOutput](https://docs.microsoft.com/windows/console/readconsoleoutput) cannot fit them in [CHAR_INFO](https://docs.microsoft.com/windows/console/char-info-str).\r\n\r\n```PowerShell\r\nClear-Host; \"`n`n`u{1F600}`n`n`n`n`n\"; Start-Sleep -Seconds 1; Write-Progress -Activity \"Make some progress\" -PercentComplete 50; Start-Sleep -Seconds 1; Write-Progress -Activity \"Make some progress\" -Completed\r\n```\r\n\r\nIf minimal progress rendering <https://github.com/PowerShell/PowerShell/issues/14426> eventually becomes the default, then it will fix these problems for good, I hope.",
      "created_at": "2021-05-21T11:00:38Z",
      "updated_at": "2021-05-21T11:00:38Z"
    },
    {
      "author": "mladedav",
      "author_association": "NONE",
      "body": "This happened to me too just now. Splitting a pane while downloading a large file to keep working. Powershell instead gave up on the download.",
      "created_at": "2021-09-26T22:05:25Z",
      "updated_at": "2021-09-26T22:05:25Z"
    },
    {
      "author": "yumaikas",
      "author_association": "NONE",
      "body": "I've hit something similar on OSX, with a much smaller repro in #16174. Maybe a SIGWINCH is getting dropped somewhere, if WinTerminal is generating one?",
      "created_at": "2021-09-30T05:56:19Z",
      "updated_at": "2021-09-30T05:56:19Z"
    }
  ],
  "created_at": "2020-04-25T04:30:37Z",
  "number": 12485,
  "state": "open",
  "title": "Progress rendering may cause PowerShell to crash",
  "updated_at": "2022-01-10T22:35:14Z"
}