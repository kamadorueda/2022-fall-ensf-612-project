{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13764",
  "author": "nikita-sakharin",
  "body": "## Summary of the new feature/enhancement\r\n\r\n<!-- \r\nA clear and concise description of what the problem is that the new feature would solve.\r\nTry formulating it in user story style (if applicable):\r\n'As a user I want X so that Y.' with X being the being the action and Y being the value of the action.\r\n-->\r\nAdd FileSystem provider to list of supported filters for Test-Path. It must behave like `Get-ChildItem -Filter`\r\n\r\n```powershell\r\nSet-Content -Path 'C:\\Users\\username\\Documents\\test.txt' -Value 'Hello, World!'\r\nTest-Path -Path 'C:\\Users\\username\\Documents\\test.txt' -Filter '*.json'\r\n```\r\n\r\n## Expected behavior\r\n\r\n```none\r\nFalse\r\n```\r\n\r\n## Actual behavior\r\n\r\n```none\r\nTrue\r\n```\r\n\r\n## Proposed technical implementation details (optional)\r\n\r\n<!-- \r\nA clear and concise description of what you want to happen.\r\nConsider providing an example PowerShell experience with expected result.\r\n-->\r\n",
  "closed_at": "2021-01-18T07:14:28Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Do any currently implemented providers provide a `-Filter` for `Test-Path`? \ud83e\udd14 I'm not aware of there being any.",
      "created_at": "2020-10-09T20:01:30Z",
      "updated_at": "2020-10-09T20:01:30Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "@vexx32 don't think so but to be fair, no other built-in provider has support for `Filter` in any capacity (at least of those I've tested).\r\n\r\nThis wouldn't be super easy to add though I don't think. Currently it's just a property on `CmdletProvider` called `Filter`. The provider registers that it supports filters by declaring it as part of their `ProviderCapabilities`.  It's sort of all or nothing, so if this were added to `Test-Path` you'd need a new `ProviderCapabilities` value like `FilterItemExists`.  And/or maybe a new method to test `ItemExists` with a filter, plus new interface and/or base class to implement/inherit from.",
      "created_at": "2020-10-09T20:22:47Z",
      "updated_at": "2020-10-09T20:22:47Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Yeah, that's my thought tbh, the file system provider is the only one I've ever seen a filter on, so I was curious if something else had tried to put filters on Test-Path.\r\n\r\nIt's an unusual use case too; Test-Path is usually used for testing complete paths, whereas -Filter is generally used to qualify searches (Get-ChildItem/Get-Item) and to filter out certain results. I kind of get the intent here, but I'm not really sure what providing -Filter would add here; you already have the path itself, so you can test if the string ends with a specific extension with more direct methods, or use Split-Path to retrieve just the filename if you have more complex patterns to test against. \ud83d\ude15 ",
      "created_at": "2020-10-09T20:37:42Z",
      "updated_at": "2020-10-09T20:37:42Z"
    },
    {
      "author": "nikita-sakharin",
      "author_association": "NONE",
      "body": "> Do any currently implemented providers provide a `-Filter` for `Test-Path`? \ud83e\udd14 I'm not aware of there being any.\r\n\r\n@vexx32, no. Not yet. It's not mentioned in [docs](https://docs.microsoft.com/en-us/powershell/module/Microsoft.PowerShell.Management/Test-Path?view=powershell-7) at least",
      "created_at": "2020-10-10T08:18:37Z",
      "updated_at": "2020-10-10T08:18:37Z"
    },
    {
      "author": "nikita-sakharin",
      "author_association": "NONE",
      "body": "> Yeah, that's my thought tbh, the file system provider is the only one I've ever seen a filter on, so I was curious if something else had tried to put filters on Test-Path.\r\n> \r\n> It's an unusual use case too; Test-Path is usually used for testing complete paths, whereas -Filter is generally used to qualify searches (Get-ChildItem/Get-Item) and to filter out certain results. I kind of get the intent here, but I'm not really sure what providing -Filter would add here; you already have the path itself, so you can test if the string ends with a specific extension with more direct methods, or use Split-Path to retrieve just the filename if you have more complex patterns to test against. \ud83d\ude15\r\n\r\n@vexx32, Get-ChildItem supports two way for filtering:\r\n`-Filter`\r\n`-Include`/`-Exclude`\r\nThe point is that flag `-Filter` can filter results outside PowerShell. `-Include`/`-Exclude` filter results inside PowerShell.\r\nIt's mentioned in [Get-ChildItem](https://docs.microsoft.com/en-us/powershell/module/Microsoft.PowerShell.Management/Get-ChildItem?view=powershell-7) docs:\r\n>Filters are more efficient than other parameters. The provider applies filter when the cmdlet gets the objects rather than having PowerShell filter the objects after they're retrieved",
      "created_at": "2020-10-10T08:26:08Z",
      "updated_at": "2020-10-10T17:40:54Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": ">  It must behave like Get-ChildItem -Filter\r\n\r\nI wonder if it works:\r\n```powershell\r\ndir C:\\tmp\\test1.txt -Filter \"*.json\"\r\n\r\n    Directory: C:\\tmp\r\n\r\nMode                 LastWriteTime         Length Name\r\n----                 -------------         ------ ----\r\n-a---          28.04.2020    21:26             14 test1.txt\r\n```",
      "created_at": "2020-10-10T17:28:07Z",
      "updated_at": "2020-10-10T17:28:07Z"
    },
    {
      "author": "nikita-sakharin",
      "author_association": "NONE",
      "body": "> > It must behave like Get-ChildItem -Filter\r\n> \r\n> I wonder if it works:\r\n> \r\n> ```powershell\r\n> dir C:\\tmp\\test1.txt -Filter \"*.json\"\r\n> \r\n>     Directory: C:\\tmp\r\n> \r\n> Mode                 LastWriteTime         Length Name\r\n> ----                 -------------         ------ ----\r\n> -a---          28.04.2020    21:26             14 test1.txt\r\n> ```\r\n\r\n@iSazonov, It's another one bug definitely. Try:\r\n```powershell\r\n dir C:\\tmp\\ -Filter '*.json'\r\n```\r\nIt will return only .json files. I have tested it.\r\n\r\n## Update\r\nIt work in more predictable way in plain old CMD:\r\n## Input\r\n```cmd\r\ndir \\temp\\\r\n```\r\n## Output\r\n```\r\n10.10.2020  21:03    <DIR>          .\r\n10.10.2020  21:03    <DIR>          ..\r\n10.10.2020  21:02                 0 test.json\r\n10.10.2020  21:02                 0 test.txt\r\n```\r\n## Input\r\n```cmd\r\ndir \"\\temp\\*.json\"\r\n```\r\n## Output\r\n```\r\n10.10.2020  21:02                 0 test.json\r\n```\r\n## Input\r\n```cmd\r\ndir \\temp\\test.txt\r\n```\r\n## Output\r\n```\r\n10.10.2020  21:02                 0 test.txt\r\n```\r\n## Input\r\n```cmd\r\ndir \"\\temp\\test.txt\\*.json\"\r\n```\r\n## Output\r\n```\r\n\u0424\u0430\u0439\u043b \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d (No such file)\r\n```",
      "created_at": "2020-10-10T17:49:55Z",
      "updated_at": "2020-10-10T18:14:45Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Yeah I think fundamentally the way the Filter functionality is designed, it tends not to apply when you supply a completely unambiguous single file path; there's nothing for it to filter in the first place, there's only one thing it can be.\r\n\r\nWhether that should change now is an open question, I guess.",
      "created_at": "2020-10-10T20:00:27Z",
      "updated_at": "2020-10-10T20:00:27Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I opened #14624 for https://github.com/PowerShell/PowerShell/issues/13764#issuecomment-706584149 bug.",
      "created_at": "2021-01-18T07:14:28Z",
      "updated_at": "2021-01-18T07:14:28Z"
    }
  ],
  "created_at": "2020-10-09T19:53:07Z",
  "labels": [
    "Issue-Question",
    "Resolution-Answered",
    "WG-Cmdlets-Management"
  ],
  "number": 13764,
  "state": "closed",
  "title": "Add provider for Test-Path -Filter",
  "updated_at": "2021-01-18T07:16:02Z"
}