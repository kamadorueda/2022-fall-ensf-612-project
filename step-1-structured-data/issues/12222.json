{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12222",
  "author": "cpmcgrath",
  "body": "# Summary of the new feature/enhancement\r\n\r\nBack in Powershell 5, I could write a script which contained:\r\n```powershell\r\n> $cred = Get-Credential -UserName \"$first.$last\"\r\n```\r\nA dialog would then appear, asking for the password, but it also gave the option of changing what the username was. This was useful as you could implement a naming standard, but when there was an edge case allowed the end user to be able to easily override it.\r\n\r\nThis workflow could be built into many scripts wanting to upgrade from Windows Powershell to Powershell 7.\r\n\r\n# Proposed technical implementation details (optional)\r\n\r\nReading #10625 I thought a `-ConfirmUserName` switch would be consistent, but a `-DefaultUserName Username` string would work just as well.\r\n\r\nThe below is how I saw it being used, being consistent with other command line tools\r\n```powershell\r\n> $cred = Get-Credential -UserName \"john.smith\" -ConfirmUserName\r\n> $cred = Get-Credential -DefaultUserName \"john.smith\"\r\nPowerShell credential request\r\nEnter your credentials.\r\nUser [john.smith]: \r\n```\r\nThe User can just press enter without typing anything and it will use the default value. \r\n\r\nIt would be nice if the value was presented as pre-typed - as this would allow the user to manipulate the value instead of either choose the default, or write it again from scratch.",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I like `DefaultUserName `.\r\n\r\n@cpmcgrath Do you want to implement this proposal and #10625?",
      "created_at": "2020-03-29T06:05:43Z",
      "updated_at": "2020-03-29T06:05:43Z"
    },
    {
      "author": "oumolayna",
      "author_association": "NONE",
      "body": "hello people ,\r\ni'm new to github so i didn't know where to post this ... but i would like to talk about something regarding the new ternary operators and other operators ... \r\nWell the reason that made me and many others like me to love powershell is because of its English-Like cmdlets ... like jeffery said \" you think about something you type it and you get it \" and that really works ... the newly added operators are more like other programming languages and i hope that powershell team are not going that road ... please keep powershell cmdlets simple as they were English-Like ...\r\nagain sorry i know im posting in the wrong thread im just new here. ",
      "created_at": "2020-04-04T13:42:10Z",
      "updated_at": "2020-04-04T13:42:10Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@oumolayna You can new issue with feedback for discussion. ",
      "created_at": "2020-04-04T14:01:12Z",
      "updated_at": "2020-04-04T14:01:12Z"
    },
    {
      "author": "cpmcgrath",
      "author_association": "NONE",
      "body": "I'd be happy to look at implementing this, but it will probably be a few weeks before I get the chance",
      "created_at": "2020-04-05T02:58:10Z",
      "updated_at": "2020-04-05T02:58:10Z"
    },
    {
      "author": "cpmcgrath",
      "author_association": "NONE",
      "body": "Just reading through the code to this MshHostUserInterface has an overload which takes options through an enum PSCredentialUIOptions. The implementation in ConsoleHostUserInterfaceSecurity doesn't do anything with these options.\r\n\r\nThere's 4 different enum values:\r\n* None - \"Performs no validation\"\r\n* ValidateUsernameSyntax - the default: \"Validates the username, but not its existence\"\r\n* AlwaysPrompt - \"Always prompt, even if a persisted credential was available\"\r\n* **ReadOnlyUsername** - \"Username is read-only, and the user may not modify it.\"\r\n\r\nThis seems like the mechanism that should be used, and these values imply to me that the default behaviour should be give the user a chance to override the Username\r\n",
      "created_at": "2020-04-10T05:50:24Z",
      "updated_at": "2020-04-10T05:51:01Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I think we can use the enum.\r\nChanging the default behavior and changing the default enum value is two breaking changes. We will need approval from PowerShell Committee. I thing we can postpone the request until PR will be pulled.",
      "created_at": "2020-04-10T06:49:57Z",
      "updated_at": "2020-04-10T06:49:57Z"
    },
    {
      "author": "cpmcgrath",
      "author_association": "NONE",
      "body": "As mentioned in my original comment, having it prompt for the Username regardless would make it more consistent with Windows Powershell. \r\n\r\nBut yes, potential breaking change if you had redirected Standard In. I'd think that would be very low risk though",
      "created_at": "2020-04-10T06:57:42Z",
      "updated_at": "2020-04-10T06:57:42Z"
    },
    {
      "author": "cpmcgrath",
      "author_association": "NONE",
      "body": "Proposed change in https://github.com/cpmcgrath/PowerShell/commit/0a12184ca4985d6ba4f6b1c863d0fca33a5e79c5\r\n\r\nI'll hold off making a pull request until I get feedback if this is the solution we're after.",
      "created_at": "2020-04-10T09:25:07Z",
      "updated_at": "2020-04-10T09:25:07Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> I'll hold off making a pull request until I get feedback if this is the solution we're after.\r\n\r\nPlease make PR - we can discuss there and get progress step by step.\r\nMy first comment is if now we use the enum we should think to address all scenarios - it would be great to have for SDK scenarios.",
      "created_at": "2020-04-11T07:16:24Z",
      "updated_at": "2020-04-11T07:16:24Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "Security working group see's not security implications for the feature request.  We should still review the design.\r\n\r\nFrom a feature standpoint, I think the Cmdlet, should prompt to confirm the username, unless there is an extra switch to say that you can't change the username.  This would allow for compatibility with PowerShell 5.1",
      "created_at": "2021-01-25T21:47:42Z",
      "updated_at": "2021-01-25T21:47:42Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> Security working group see's not security implications for the feature request.\r\n\r\nHere is a conflict between \"security\" and \"Microsoft.PowerShell.Security\" module :-) What is labels we should use?",
      "created_at": "2021-01-26T03:55:25Z",
      "updated_at": "2021-01-26T03:55:25Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "> Here is a conflict between \"security\" and \"Microsoft.PowerShell.Security\" module :-) What is labels we should use?\r\n\r\nThe label is appropriate.  Our first goal will always to be to assess if there is a security implication.  Then move one to design.    ",
      "created_at": "2021-01-26T19:11:26Z",
      "updated_at": "2021-01-26T19:11:26Z"
    }
  ],
  "created_at": "2020-03-29T00:14:06Z",
  "labels": [
    "Issue-Enhancement",
    "Up-for-Grabs",
    "WG-Security",
    "First-Time-Issue"
  ],
  "number": 12222,
  "state": "open",
  "title": "Get-Credential Ability to Override Username",
  "updated_at": "2021-06-07T20:54:03Z"
}