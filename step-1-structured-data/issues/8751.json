{
  "_url": "https://github.com/PowerShell/PowerShell/issues/8751",
  "author": "mklement0",
  "body": "Note: This affects all switches supported by `Split-Path`; combining them with the (implied) `-Path` works fine, but with `-LiteralPath` the parameter set cannot be resolved.\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\nSplit-Path -LiteralPath foo/bar\r\nSplit-Path -Parent -LiteralPath foo/bar\r\nSplit-Path -Leaf -LiteralPath foo/bar\r\n```\r\n\r\n# Expected behavior\r\n\r\n```none\r\nfoo\r\nfoo\r\nbar\r\n```\r\n\r\n# Actual behavior\r\n\r\n```none\r\nfoo\r\nParameter set cannot be resolved using the specified named parameters. ...\r\nParameter set cannot be resolved using the specified named parameters. ...\r\n```\r\n\r\n# Environment data\r\n\r\n\r\n```none\r\nPowerShell Core v6.2.0-preview.3 on macOS 10.14.2\r\nPowerShell Core v6.2.0-preview.3 on Ubuntu 18.04.1 LTS\r\nPowerShell Core v6.2.0-preview.3 on Microsoft Windows 10 Pro (64-bit; Version 1803, OS Build: 17134.471)\r\nWindows PowerShell v5.1.17134.407 on Microsoft Windows 10 Pro (64-bit; Version 1803, OS Build: 17134.471)\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "jagadeesh408",
      "author_association": "NONE",
      "body": "I am also facing the same issue. Does this issues resolved?\r\nIf yes, can someone guide me on the solution",
      "created_at": "2020-06-01T19:53:43Z",
      "updated_at": "2020-06-01T19:53:43Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "It looks like the workaround is to simply use `-Path`, which - unlike with other cmdlets - doesn't actually treat its argument as a wildcard pattern in the case of `Split-Path`; in other words: `-Path` apparently acts the way that `-LiteralPath` normally does.\r\n\r\n\r\n",
      "created_at": "2020-06-01T20:04:18Z",
      "updated_at": "2020-06-01T20:04:18Z"
    },
    {
      "author": "jagadeesh408",
      "author_association": "NONE",
      "body": "but i have a path like date\\matter\\movva, jagadeesh [jagadeesh408] and if i am using -path to get the leaf it is skipping the result due to the special characters [].\r\nWhen i am using -literalpath for removing the leaf from the path it is working fine but not for getting the leaf",
      "created_at": "2020-06-01T20:09:58Z",
      "updated_at": "2020-06-01T20:09:58Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "I don't see this behavior (neither in WinPS 5.1, nor in 7.0, nor in 7.1.0-preview.3); do you get a different result, or am I missing something?\r\n\r\n```powershell\r\nPS> Split-Path -Path 'date\\matter\\movva, jagadeesh [jagadeesh408]' -Leaf\r\nmovva, jagadeesh [jagadeesh408]\r\n```\r\n",
      "created_at": "2020-06-01T20:14:01Z",
      "updated_at": "2020-06-01T20:14:01Z"
    },
    {
      "author": "jagadeesh408",
      "author_association": "NONE",
      "body": "I am using this way \r\nsplit-Path -path \"'$($filepaths1[$i])'\" -Leaf -Resolve \r\nwhere $filepaths1 is array of different paths and getting the error as below\r\n\r\nsplit-Path : Cannot find drive. A drive with the name ''D' does not exist.\r\n\r\nwhen i am using the command only with single quotes as below, it is not taking the variable also as string\r\n\r\nsplit-Path -path '$($filepaths1[$i])' -Leaf -Resolve ",
      "created_at": "2020-06-01T20:23:05Z",
      "updated_at": "2020-06-01T20:23:05Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Do not enclose the file path in _embedded_ `'` characters - such a path won't be valid; also don't use `'` as the syntactic quotes, for the reasons you state (single-quoted strings are verbatim strings).\r\n\r\nJust use the expression as-is, without quoting:\r\n\r\n```powershell\r\nsplit-Path -path $filepaths1[$i] -Leaf -Resolve\r\n```\r\n\r\nIf you want to use `-Resolve`, you actually _must_ use `-Path`, not `-LiteralPath` (which is strange in itself).\r\n",
      "created_at": "2020-06-01T20:34:58Z",
      "updated_at": "2020-06-01T20:35:14Z"
    },
    {
      "author": "jagadeesh408",
      "author_association": "NONE",
      "body": "if i am using this \r\nsplit-Path -path $filepaths1[$i] -Leaf -Resolve\r\n\r\nwhenever $filepaths1 have a path like **date\\matter\\movva, jagadeesh [jagadeesh408]**  with special characters like [], it is skipping the result and providing me the null results",
      "created_at": "2020-06-01T20:38:32Z",
      "updated_at": "2020-06-01T20:38:32Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "(Correction to my earlier comment, which I removed.)\r\n\r\nSince you're only looking for the leaf (file name) component, simply omit the `-Resolve` part, which prevents the unwanted interpretation of the input paths as wildcard expressions:\r\n\r\n```powershell\r\nsplit-Path -path $filepaths1[$i] -Leaf\r\n```\r\n\r\nThat said, it does make sense to combine `-Resolve`  with `-LiteralPath` as well, namely to expand the - literal, but possibly relative - path to a _full path_ before extracting the part of interest.\r\n\r\nFor instance, you may want to use `-Qualifier` to extract the drive spec. from a literal path specified as a _relative_ path (without `-Resolve`, the relative path would be interpreted as-is, and therefore has no drive spec.); this is currently impossible:\r\n\r\n```powershell\r\n# !! Currently fails, due to the bug at hand.\r\nSplit-Path -LiteralPath file.txt -Resolve -Qualifier\r\n```\r\n",
      "created_at": "2020-06-01T21:25:56Z",
      "updated_at": "2020-06-01T21:25:56Z"
    },
    {
      "author": "jagadeesh408",
      "author_association": "NONE",
      "body": "Thanks, \r\nI will test it and update the thread if any issues",
      "created_at": "2020-06-01T21:30:19Z",
      "updated_at": "2020-06-01T21:30:19Z"
    }
  ],
  "created_at": "2019-01-25T21:14:24Z",
  "labels": [
    "Issue-Bug",
    "WG-Cmdlets-Management"
  ],
  "number": 8751,
  "state": "open",
  "title": "Split-Path switches (-Leaf, -Parent, ...) do not work with -LiteralPath",
  "updated_at": "2020-06-01T21:30:19Z"
}