{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6436",
  "author": "alx9r",
  "body": "Chapter 7.1.4 of the [PowerShell spec](https://www.microsoft.com/en-ca/download/details.aspx?id=36389) indicates that for arrays, strings, hashtables, and XML documents operator `[]` returns `$null` for non-existent indexes.  The spec seems to be silent for other types, however.  I expected that, for other types, operator `[]` would also return `$null` for non-existent indexes.  It seems that for some combinations of types and indexes, however, operator `[]` returns `AutomationNull`.  In what conditions does operator [] return AutomationNull?\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\n&{(1)[1]} |  % {'output from indexing [int] out-of bounds'}\r\n&{(,1)[1]} | % {'output from indexing array out-of-bounds'}\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```none\r\noutput from indexing [int] out-of bounds\r\noutput from indexing array out-of-bounds\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n```none\r\noutput from indexing array out-of-bounds\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\n\r\nName                           Value                                            \r\n----                           -----                                            \r\nPSVersion                      6.0.0                                            \r\nPSEdition                      Core                                             \r\nGitCommitId                    v6.0.0                                           \r\nOS                             Microsoft Windows 6.3.9600                       \r\nPlatform                       Win32NT                                          \r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}                          \r\nPSRemotingProtocolVersion      2.3                                              \r\nSerializationVersion           1.1.0.1                                          \r\nWSManStackVersion              3.0                                              \r\n```\r\n",
  "closed_at": "2019-09-28T18:57:55Z",
  "comments": [
    {
      "author": "alx9r",
      "author_association": "NONE",
      "body": "I _think_ the logic is [here](https://github.com/PowerShell/PowerShell/blob/c8ccb376b489bc17c76b94a60ce218f023c936bd/src/System.Management.Automation/engine/runtime/Binding/Binders.cs#L3888), but I only have a guess at what that code does.",
      "created_at": "2018-03-20T16:05:07Z",
      "updated_at": "2018-03-20T16:05:07Z"
    },
    {
      "author": "alx9r",
      "author_association": "NONE",
      "body": "It looks like this is different behavior from selecting a non-existent property.  Selecting a non-existent property seems to always output `$null` not `AutomationNull`:\r\n\r\n```PowerShell\r\n&{(1).NonExistent}  | % {'output from selecting non-existent property on [int]'}\r\n&{(,1).NonExistent} | % {'output from selecting non-existent property on [array]'}\r\n```\r\n\r\noutputs\r\n\r\n```none\r\noutput from selecting non-existent property on [int]\r\noutput from selecting non-existent property on [array]\r\n```",
      "created_at": "2018-03-21T15:32:58Z",
      "updated_at": "2018-03-21T15:32:58Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Indeed, accessing a nonexistent _property_ always returns `$null`, whether applied to a scalar or a collection.\r\n\r\nBy contrast, indeed, \r\n\r\n* _indexing_ a _scalar_  out of bounds returns `[System.Management.Automation.Internal.AutomationNull]::Value`, \r\n* whereas indexing a _collection_ out of bounds returns `$null`\r\n\r\nwhich is an interesting inconsistency (for which I have no explanation).\r\n\r\n\r\n\r\n",
      "created_at": "2018-03-22T01:45:28Z",
      "updated_at": "2018-03-22T01:47:57Z"
    }
  ],
  "created_at": "2018-03-20T15:56:43Z",
  "labels": [
    "Issue-Question",
    "Resolution-Answered"
  ],
  "number": 6436,
  "state": "closed",
  "title": "In what conditions does operator [] return AutomationNull?",
  "updated_at": "2019-09-28T18:57:55Z"
}