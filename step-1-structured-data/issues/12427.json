{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12427",
  "author": "alx9r",
  "body": "I confess I don't yet understand the limitations I should expect of PowerShell 7's windows compatibility features.  I expected this to work on the basis of this motivation from [the RFC](https://github.com/PowerShell/PowerShell-RFC/blob/581e95e840280b48bf42b80c8775c0253c974a7e/5-Final/RFC0050-Importing-Windows-PowerShell-modules-in-PowerShell-Core.md#motivation):\r\n\r\n>As a PowerShell user,\r\n>I can use modules written for Windows PowerShell in PowerShell Core,\r\n>so that I could migrate from Windows PowerShell to PowerShell Core.\r\n\r\n1. Should I expect this to work?\r\n2. Is there a workaround for this error?\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\nImport-Module Wdac -UseWindowsPowerShell -PassThru | % Name\r\n```\r\n\r\n# Expected behavior\r\n\r\n```none\r\nWdac\r\nWARNING: Module Wdac is loaded in Windows PowerShell using WinPSCompatSession \r\nremoting session; please note that all input and output of commands from this module \r\nwill be deserialized objects. If you want to load this module into PowerShell please use \r\n'Import-Module -SkipEditionCheck' syntax.\r\n```\r\n\r\n# Actual behavior\r\n\r\n```none\r\nImport-Module: Failed to generate proxies for remote module 'Wdac'. Running the \r\nGet-FormatData command in a remote session reported the following error: Unable \r\nto cast object of type 'Microsoft.PowerShell.Commands.Internal.Format.ControlReference' \r\nto type 'Microsoft.PowerShell.Commands.Internal.Format.ComplexControlBody'.\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.0-dailypreview2.50785\r\nPSEdition                      Core\r\nGitCommitId                    7.1.0-dailypreview2.50785\r\nOS                             Microsoft Windows 6.3.9600\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u0393\u00c7\u00aa}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "/cc @anmenaga for information.",
      "created_at": "2020-04-22T17:13:02Z",
      "updated_at": "2020-04-22T17:13:02Z"
    },
    {
      "author": "anmenaga",
      "author_association": "CONTRIBUTOR",
      "body": "This is same as #11202 - a bug in implicit remoting code.\r\n@alx9r can you please confirm this by running commands [from this screenshot](https://github.com/PowerShell/PowerShell/issues/11202#issuecomment-558830772) in Windows PS (replacing module to be `Wdac`); thank you.",
      "created_at": "2020-04-22T19:26:43Z",
      "updated_at": "2020-04-22T19:26:43Z"
    },
    {
      "author": "alx9r",
      "author_association": "NONE",
      "body": "@anmenaga The behavior is not quite the same as for [#11202 (screenshot)](https://github.com/PowerShell/PowerShell/issues/11202#issuecomment-558830772).  I ran the following in a fresh instance of `pwsh`:\r\n\r\n```PowerShell\r\nGet-FormatData -TypeName '*' | Out-Null\r\n'before'\r\nImport-Module Wdac\r\n'after'\r\nGet-FormatData -TypeName '*' | Out-Null\r\n```\r\n\r\nThe output was\r\n\r\n```\r\nbefore\r\nImport-Module: C:\\script.ps1:3\r\nLine |\r\n   3 |  Import-Module Wdac\r\n     |  ~~~~~~~~~~~~~~~~~~\r\n     | Failed to generate proxies for remote module 'Wdac'. Running the Get-FormatData command in a remote session\r\n     | reported the following error: Unable to cast object of type\r\n     | 'Microsoft.PowerShell.Commands.Internal.Format.ControlReference' to type\r\n     | 'Microsoft.PowerShell.Commands.Internal.Format.ComplexControlBody'..\r\nafter\r\n```",
      "created_at": "2020-04-22T20:17:18Z",
      "updated_at": "2020-04-22T20:17:18Z"
    },
    {
      "author": "anmenaga",
      "author_association": "CONTRIBUTOR",
      "body": "Those screenshot steps have to be run in Windows PowerShell 5.1\r\nLooks like you ran them in PS Core. Please try them in Windows PowerShell.\r\n",
      "created_at": "2020-04-22T20:28:10Z",
      "updated_at": "2020-04-22T20:28:10Z"
    },
    {
      "author": "alx9r",
      "author_association": "NONE",
      "body": "@anmenaga I see.  My apologies.  I missed that detail.  Here is the output from Windows PS:\r\n\r\n```\r\nbefore\r\nafter\r\nGet-FormatData : Unable to cast object of type 'Microsoft.PowerShell.Commands.Internal.Format.ControlReference' to\r\ntype 'Microsoft.PowerShell.Commands.Internal.Format.ComplexControlBody'.\r\nAt C:\\script.ps1:5 char:1\r\n+ Get-FormatData -TypeName '*' | Out-Null\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : NotSpecified: (:) [Get-FormatData], InvalidCastException\r\n    + FullyQualifiedErrorId : System.InvalidCastException,Microsoft.PowerShell.Commands.GetFormatDataCommand\r\n```",
      "created_at": "2020-04-22T20:31:30Z",
      "updated_at": "2020-04-22T20:31:30Z"
    },
    {
      "author": "dgpsh",
      "author_association": "NONE",
      "body": "Hi, I have the same error on Powershell 7.0.0 using **Add-OdbcDsn**:\r\n\r\n`The 'Add-OdbcDsn' command was found in the module 'Wdac', but the module could not be loaded. For more information, run 'Import-Module Wdac'.`\r\n\r\nBy running **Import-Module Wdac**:\r\n\r\n`Import-Module: Failed to generate proxies for remote module 'Wdac'. Running the Get-FormatData command in a remote session reported the following error: Unable to cast object of type 'Microsoft.PowerShell.Commands.Internal.Format.ControlReference' to type 'Microsoft.PowerShell.Commands.Internal.Format.ComplexControlBody'.`",
      "created_at": "2020-05-05T10:51:46Z",
      "updated_at": "2020-05-05T10:51:46Z"
    },
    {
      "author": "alx9r",
      "author_association": "NONE",
      "body": "@dgpsh The closest workaround I've found is using the CIM APIs via `Invoke-CimMethod`.  I've posted the snippet in [this gist](https://gist.github.com/alx9r/1a1d158646866818131c52a38226cd78).  They're definitely not directly replacements for the commands in the Wdac module, but they seem to be the closest in functionality I've found.\r\n\r\nThere does seem to be [this limitation](https://stackoverflow.com/questions/61398748) compared with `Add-OdbcDsn` that is currently unresolved.  I was hoping someone more familiar with the Wdac module and/or CIM could provide some guidance to overcome that limitation.  That would mean I could arrive on a replacement for Wdac that doesn't involve Windows PowerShell.",
      "created_at": "2020-05-05T14:31:24Z",
      "updated_at": "2020-05-05T19:20:54Z"
    },
    {
      "author": "alx9r",
      "author_association": "NONE",
      "body": "@dgpsh \r\n\r\nThere is a better workaround reported and tested by @fMichaleczek in #12578:\r\n\r\n>Import-Module Wdac -SkipEditionCheck\r\n\r\nIt's not clear to me what degree of support to expect for importing the `Wdac` module into PowerShell 7 in this manner, but it seems to be the best option at this point.  I expect to use this technique until #11202 is fixed.",
      "created_at": "2020-05-06T18:16:53Z",
      "updated_at": "2020-05-06T18:17:05Z"
    }
  ],
  "created_at": "2020-04-22T16:49:41Z",
  "number": 12427,
  "state": "open",
  "title": "Importing Wdac causes Unable to cast Error",
  "updated_at": "2020-05-06T18:17:05Z"
}