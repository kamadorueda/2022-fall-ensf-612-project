{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4589",
  "author": "daxian-dbw",
  "body": "Related to #4357 ",
  "closed_at": "2017-08-17T00:34:03Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Is Workflow depredicated?",
      "created_at": "2017-08-16T03:37:27Z",
      "updated_at": "2017-08-16T03:37:27Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Don't remove Workflow code until @PowerShell/powershell-committee has closed on this.  This has been an open topic for the committee ",
      "created_at": "2017-08-16T14:54:14Z",
      "updated_at": "2017-08-16T14:54:42Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee is fine with proceeding to remove the workflow code.  PowerShell workflow is deprecated.  @joeyaiello probably needs another blog post...  Although CoreCLR has support for workflow, it doesn't support XAML which is what all the PowerShell workflow code depends upon.  Our data indicates that most customers use PowerShell workflow specifically for parallel execution.  We have an [RFC](https://github.com/PowerShell/PowerShell-RFC/blob/master/1-Draft/RFC0023-Native-Support-for-Concurrent-Programming-in-PowerShell.md) to make it easier with PowerShell script so we are ok removing support entirely.",
      "created_at": "2017-08-16T21:58:31Z",
      "updated_at": "2017-08-16T21:58:31Z"
    }
  ],
  "created_at": "2017-08-15T23:34:22Z",
  "number": 4589,
  "state": "closed",
  "title": "Remove src\\Microsoft.PowerShell.Workflow.ServiceCore",
  "updated_at": "2017-08-18T18:19:21Z"
}