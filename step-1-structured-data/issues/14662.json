{
  "_url": "https://github.com/PowerShell/PowerShell/issues/14662",
  "author": "B4Art",
  "body": "## Summary of the new feature/enhancement\r\n\r\n'As a user I want to use tabcompletion  to work on a previous entered parameter so that i can walk through the possible Noteproperties of that previous parameter.'\r\n\r\n## Proposed technical implementation details (optional)\r\n\r\nThis Works:\r\n\r\nfunction Get-Between{\r\n\t[CmdletBinding()]\r\n\tParam (\r\n\t\t[Parameter(Mandatory, ValueFromPipeline, ValueFromPipelineByPropertyName, Position = 0)]\r\n\t\t[System.Object]$List,\r\n\t\t[Parameter(Mandatory, Position = 1)]\r\n\t\t# [ValidateScript( {($fakeBoundParameter[\"List\"] | Get-Member -MemberType NoteProperty | ForEach-Object Name)}) ]\r\n\t\t[string] $NotePropertyName,\r\n\t\t[Parameter(Position = 2)]\r\n\t\t[switch] $XorNotBetween\r\n\t)\r\n\t\r\n\tBegin {\r\n\t\t$min = ($List.$NotePropertyName | Measure-Object -Minimum).Minimum\r\n\t\t$max = ($List.$NotePropertyName | Measure-Object -Maximum).Maximum\r\n\t} Process {\r\n\t\tIf ($XorNotBetween) {\r\n\t\t\tWrite-Output $List.Where({$_.$NotePropertyName -in ($min, $max)})\r\n\t\t} else {\r\n\t\t\tWrite-Output $List.Where({$_.$NotePropertyName -notin ($min, $max)})\r\n\t\t}\r\n\t} End {\r\n\t}\r\n}\r\n#\r\n$GetNotePropertyNameCompleter = {\r\n\tparam($commandName, $parameterName, $wordToComplete, $commandAst, $fakeBoundParameter)\r\n\tReturn ($fakeBoundParameter[\"List\"] | Get-Member -MemberType NoteProperty | ForEach-Object Name)\r\n}\r\n\r\nRegister-ArgumentCompleter -CommandName Get-Between -ParameterName NotePropertyName -ScriptBlock $GetNotePropertyNameCompleter\r\n#>\r\n\r\nBut I would like to use:\r\nfunction Get-Between{\r\n\t[CmdletBinding()]\r\n\tParam (\r\n\t\t[Parameter(Mandatory, ValueFromPipeline, ValueFromPipelineByPropertyName, Position = 0)]\r\n\t\t[System.Object]$List,\r\n\t\t[Parameter(Mandatory, Position = 1)]\r\n\t\t[ValidateScript( {($fakeBoundParameter[\"List\"] | Get-Member -MemberType NoteProperty | ForEach-Object Name)}) ]\r\n\t\t[string] $NotePropertyName,\r\n\t\t[Parameter(Position = 2)]\r\n\t\t[switch] $XorNotBetween\r\n\t)\r\n\t\r\n\tBegin {\r\n\t\t$min = ($List.$NotePropertyName | Measure-Object -Minimum).Minimum\r\n\t\t$max = ($List.$NotePropertyName | Measure-Object -Maximum).Maximum\r\n\t} Process {\r\n\t\tIf ($XorNotBetween) {\r\n\t\t\tWrite-Output $List.Where({$_.$NotePropertyName -in ($min, $max)})\r\n\t\t} else {\r\n\t\t\tWrite-Output $List.Where({$_.$NotePropertyName -notin ($min, $max)})\r\n\t\t}\r\n\t} End {\r\n\t}\r\n}\r\n<#\r\n$GetNotePropertyNameCompleter = {\r\n\tparam($commandName, $parameterName, $wordToComplete, $commandAst, $fakeBoundParameter)\r\n\tReturn ($fakeBoundParameter[\"List\"] | Get-Member -MemberType NoteProperty | ForEach-Object Name)\r\n}\r\n\r\nRegister-ArgumentCompleter -CommandName Get-Between -ParameterName NotePropertyName -ScriptBlock $GetNotePropertyNameCompleter\r\n#>\r\n",
  "closed_at": "2021-01-26T14:09:23Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Please add a description so that everyone was not forced to understand your example scripts.",
      "created_at": "2021-01-25T14:16:16Z",
      "updated_at": "2021-01-25T14:16:16Z"
    },
    {
      "author": "B-Art",
      "author_association": "NONE",
      "body": "```\r\n$a = '{\r\n    \"people\": [\r\n        {\r\n            \"name\": \"John\",\r\n            \"age\": 30\r\n        },\r\n        {\r\n            \"name\": \"Marie\",\r\n            \"age\": 31\r\n        },\r\n        {\r\n            \"name\": \"Ton\",\r\n            \"age\": 40\r\n        },\r\n        {\r\n            \"name\": \"Jolly\",\r\n            \"age\": 20\r\n        },\r\n        {\r\n            \"name\": \"Baby\",\r\n            \"age\": 0\r\n        },\r\n        {\r\n            \"name\": \"Caroline\",\r\n            \"age\": 23\r\n        },\r\n        {\r\n            \"name\": \"Oldy\",\r\n            \"age\": 99\r\n        }\r\n    ]\r\n}' | ConvertFrom-Json\r\n```\r\nUse Tabcomplete\r\n```\r\nGet-Between -list $a.people -NotePropertyName <tabcomplete> [name or age]\r\n```\r\nAge will give:\r\n```\r\nGet-Between -list $a.people -NotePropertyName age\r\n\r\nname     age\r\n----     ---\r\nJohn      30\r\nMarie     31\r\nTon       40\r\nJolly     20\r\nCaroline  23\r\n```\r\nOr the other way arround:\r\n```\r\nGet-Between -list $a.people -NotePropertyName age -XorNotBetween\r\n\r\nname age\r\n---- ---\r\nBaby   0\r\nOldy  99\r\n```\r\nOr with Name:\r\n```\r\nGet-Between -list $a.people -NotePropertyName name\r\n\r\nname     age\r\n----     ---\r\nJohn      30\r\nMarie     31\r\nJolly     20\r\nCaroline  23\r\nOldy      99\r\n```\r\nAnd the other way arround:\r\n```\r\nGet-Between -list $a.people -NotePropertyName name -XorNotBetween\r\n\r\nname age\r\n---- ---\r\nTon   40\r\nBaby   0\r\n```\r\n\r\nBUT THAT IS NOT MY POINT\r\nThe point is to be able to tabcomplete WHITOUT using Register-ArgumentCompleter\r\n\r\n```\r\nfunction Get-Between{\r\n\t[CmdletBinding()]\r\n\tParam (\r\n\t\t[Parameter(Mandatory, ValueFromPipeline, ValueFromPipelineByPropertyName, Position = 0)]\r\n\t\t[System.Object]$List,\r\n\t\t[Parameter(Mandatory, Position = 1)]\r\n\t\t[ValidateScript( {\r\n\t\t\tparam( $commandName, $parameterName, $wordToComplete, $commandAst, $fakeBoundParameter )\r\n\t\t\t( $fakeBoundParameter[\"List\"] | Get-Member -MemberType NoteProperty ).Where( {\r\n\t\t\t\t$_.Name -like \"$wordToComplete*\"\r\n\t\t\t} ).ForEach( {\r\n\t\t\t\t[System.Management.Automation.CompletionResult]::new($_.Name, $_.Name, 'ParameterValue', $_.Name)\r\n\t\t\t} ) \r\n\t\t} ) ]\r\n\t\t[string] $NotePropertyName,\r\n\t\t[Parameter(Position = 2)]\r\n\t\t[switch] $XorNotBetween\r\n\t)\r\n\t\r\n\tBegin {\r\n\t\t$min = ($List.$NotePropertyName | Measure-Object -Minimum).Minimum\r\n\t\t$max = ($List.$NotePropertyName | Measure-Object -Maximum).Maximum\r\n\t} Process {\r\n\t\tIf ($XorNotBetween) {\r\n\t\t\tWrite-Output $List.Where({$_.$NotePropertyName -in ($min, $max)})\r\n\t\t} else {\r\n\t\t\tWrite-Output $List.Where({$_.$NotePropertyName -notin ($min, $max)})\r\n\t\t}\r\n\t} End {\r\n\t}\r\n}\r\n```\r\nWill fail with:\r\n```\r\nGet-Between -List $a.people -NotePropertyName name\r\nGet-Between: Cannot validate argument on parameter 'NotePropertyName'. Cannot index into a null array.\r\n```",
      "created_at": "2021-01-25T17:10:58Z",
      "updated_at": "2021-01-25T17:20:33Z"
    },
    {
      "author": "B-Art",
      "author_association": "NONE",
      "body": "The same goes for:\r\n```\r\nGet-Between -List $a.people -NotePropertyName age\r\nGet-Between: Cannot validate argument on parameter 'NotePropertyName'. Cannot index into a null array.\r\n```",
      "created_at": "2021-01-25T17:21:42Z",
      "updated_at": "2021-01-25T17:21:42Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Do you want to pull PR and enhance PowerShell Engine?",
      "created_at": "2021-01-25T18:59:52Z",
      "updated_at": "2021-01-26T05:54:34Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@B-Art, with (justified) limitations, you can already do what you want with an `[ArgumentCompleter({ ... })]` attribute - see [this Stack Overflow post](https://stackoverflow.com/q/65892518/45375).\r\n",
      "created_at": "2021-01-25T21:22:04Z",
      "updated_at": "2021-01-25T21:22:04Z"
    },
    {
      "author": "B4Art",
      "author_association": "NONE",
      "body": "Indeed use [ArgumentCompleter({ ... })] instead of [Validatescript({ ... })]. Thanx @mklement0 \r\n\r\nFor those who want to know the change:\r\n```\r\nfunction Get-Between{\r\n\t[CmdletBinding()]\r\n\tParam (\r\n\t\t[Parameter(Mandatory, ValueFromPipeline, ValueFromPipelineByPropertyName, Position = 0)]\r\n\t\t[System.Object]$List,\r\n\t\t[Parameter(Mandatory, Position = 1)]\r\n\t\t<##>\r\n\t\t[ArgumentCompleter({\r\n\t\t\tparam($cmdName, $paramName, $wordToComplete, $commandAst, $fakeBoundParameter )\r\n\t\t\tif ($obj = $fakeBoundParameters['List']) {\r\n        \t  \t\t@($obj.psobject.Properties.Name) -like \"$wordToComplete*\"\r\n        \t\t}\r\n\t      \t})]\r\n... <the rest of the previous code>\r\n```",
      "created_at": "2021-01-26T14:09:23Z",
      "updated_at": "2021-01-26T14:27:40Z"
    }
  ],
  "created_at": "2021-01-24T21:13:03Z",
  "number": 14662,
  "state": "closed",
  "title": "Feature Request Make Active Tabcompletion posible for NotePropertyNames of an earlier entered parameter",
  "updated_at": "2021-01-26T14:27:40Z"
}