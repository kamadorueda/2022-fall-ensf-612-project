{
  "_url": "https://github.com/PowerShell/PowerShell/issues/1250",
  "author": "mirichmo",
  "body": "During the migration of code from SD to GitHub, a few important files were missed for powershell.exe:\n1. CssMainEntry.cpp\n2. Monad.ico\n3. MshResources.rc\n4. NativeMsh.mc\n5. PowerShell.exe.manifest\n6. PowerShell_securitybadge.ico\n7. version.rc\n\nThese files must be migrated so that we can correctly build powershell.exe for \"full\" SKUs inbox.\n",
  "closed_at": "2016-07-06T19:22:55Z",
  "comments": [
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Since you said this is necessary for FullCLR builds, is this really an August 17 item?\n",
      "created_at": "2016-06-30T18:22:22Z",
      "updated_at": "2016-06-30T18:22:22Z"
    },
    {
      "author": "mirichmo",
      "author_association": "MEMBER",
      "body": "It is part of the code convergence (moving to GitHub) deliverable. Which milestone tracks that? 0.6?\n",
      "created_at": "2016-06-30T20:13:36Z",
      "updated_at": "2016-06-30T20:13:36Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "Is CssMainEntry.cpp for CoreCLR version of it?\n",
      "created_at": "2016-07-02T18:41:01Z",
      "updated_at": "2016-07-02T18:41:01Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@vors Yes, it's the native .NET Core host we're using in NanoServer.\n",
      "created_at": "2016-07-03T02:37:26Z",
      "updated_at": "2016-07-03T02:37:26Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "Then we don't really need it, since we don't plan to use native host for core \n",
      "created_at": "2016-07-03T02:40:02Z",
      "updated_at": "2016-07-03T02:40:02Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "It depends on whether we want to generate all binaries that Nano PS needs in Github. The managed powershell.exe currently generated in Github doesn't work for the in-box Nano PS. The in-box Nano PS depends on a centralized CoreCLR drop, and the TPA list setting for the managed powershell.exe doesn't work in that model.\n",
      "created_at": "2016-07-03T03:04:37Z",
      "updated_at": "2016-07-03T03:04:37Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "I see, makes sense. I think it's highly desirable to be able to generate all artifacts from GitHub, but it's unclear do we need Nano host for Aug17 or not. It would certainly make running new artifact against old tests easier, which is a huge upside.\n",
      "created_at": "2016-07-03T06:45:34Z",
      "updated_at": "2016-07-03T06:47:29Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "The nano native powershell.exe might not fit in the Aug 17 goal. We can simply not replace the in-box powershell.exe when testing PowerShell Core binaries in nano, and it should work.\nHowever, if we are going to build pwrshplugin.dll targeting OneCore, then I think we can bring the nano native powershell.exe at the same time, since they are all targeting OneCore and should be enabled by the same technique.\n",
      "created_at": "2016-07-03T16:15:33Z",
      "updated_at": "2016-08-17T06:20:18Z"
    }
  ],
  "created_at": "2016-06-30T17:46:05Z",
  "labels": [
    "OS-Windows"
  ],
  "number": 1250,
  "state": "closed",
  "title": "Missing Files for Native PowerShell.exe",
  "updated_at": "2016-08-17T06:20:18Z"
}