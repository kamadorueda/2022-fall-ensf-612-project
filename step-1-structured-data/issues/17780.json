{
  "_url": "https://github.com/PowerShell/PowerShell/issues/17780",
  "author": "dkaszews",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\n<!-- Summarize your PR between here and the checklist. -->\r\n\r\n`HelpCultureNotSupported` is caught and ignored with implicit culture (`-UICulture` not given explicitly, defaults to system) to allow trying again with culture's parents. It does not however check if there are any more fallbacks, so all errors of this type are completely silenced. I store first error of this type, then show it if none of the fallbacks succeed,\r\n\r\nFixes #17696 \r\n\r\n## PR Context\r\n\r\n<!-- Provide a little reasoning as to why this Pull Request helps and why you have opened it. -->\r\n\r\n`Update-Help` with implcit culture fails silently on non-US systems (`en-GB` in my case), with no feedback on what is wrong even when using `-Verbose`. With this fix, the user is shown the same error as with explicit `-UICulture (Get-UICulture)`, which clearly describes what they should do:\r\n\r\n```powershell\r\nUpdate-Help: Failed to update Help for the module(s) '...' with UI culture(s) {en-GB} : No UI culture was found that matches the following pattern: en-GB. Verify the pattern and then try the command again..\r\nEnglish-US help content is available and can be installed using: Update-Help -UICulture en-US.\r\n```\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/main/reference/7.3/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [x] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [x] Issue filed: [Docs issue #9072](https://github.com/MicrosoftDocs/PowerShell-Docs/issues/9072)\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and opened an issue in the relevant tool repository. This may include:\r\n        - [ ] Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode\r\n        (which runs in a different PS Host).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n",
  "closed_at": "2022-08-09T22:51:32Z",
  "comments": [
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@dkaszews Thanks for submitting the PR!\r\n@adityapatwardhan, can you please review when you have time? Thanks!",
      "created_at": "2022-07-26T21:46:13Z",
      "updated_at": "2022-07-26T21:46:13Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@dkaszews I like the change. Thanks for the PR. For testing, I would add some test hooks to make sure we fall in to the expected code paths. \r\n\r\nLook at the files here to see how test hooks can be added:\r\n\r\nhttps://github.com/PowerShell/PowerShell/search?q=testhook&type=code\r\n\r\nAlso, the test hook is used in product code like this:\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/17791759356ffa6e2ae657d2ec19a147ce062957/src/Microsoft.PowerShell.Commands.Management/commands/management/Computer.cs#L450-L456\r\n\r\n",
      "created_at": "2022-07-27T17:32:59Z",
      "updated_at": "2022-07-27T17:32:59Z"
    },
    {
      "author": "dkaszews",
      "author_association": "CONTRIBUTOR",
      "body": "@adityapatwardhan Thanks for the tip! Please take a look if something like this is good.",
      "created_at": "2022-07-28T19:37:14Z",
      "updated_at": "2022-07-28T19:37:14Z"
    },
    {
      "author": "dkaszews",
      "author_association": "CONTRIBUTOR",
      "body": "If found additional issues all related to matching culture:\r\n\r\n1. We use globbing to try and match current culture with the one in help, but because valid `CultureInfo` values never contain wildcards, this does nothing. E.g.: `en-GB` has fallback `en`, but it still won't glob match with `en-US`. A simple fix would be to suffix (or surround) culture with `'*'`:\r\n    ```csharp\r\n    // UpdateableHelpSystem:594:\r\n    IEnumerable<WildcardPattern> patternList = SessionStateUtilities.CreateWildcardsFromStrings(\r\n    // - globPatterns: new[] { currentCulture },\r\n\tglobPatterns: new[] { currentCulture + '*' },\r\n\toptions: WildcardOptions.IgnoreCase | WildcardOptions.CultureInvariant);\r\n    ```\r\n1. Second issue is that in `UpdateableHelpSystemBase:EndProcessing`, when we collapse all `HelpCultureNotSupported` exceptions for different modules into a single error, the supported culture is actually ignored, always displaying `\"en-US is supported\"` without checking that it actually is. That may be true for PowerShell-core modules, but if some module provides help in let's say `en-GB` or even `fr-FR`, it will be misleading, as I believe may be the case in #17534 . Fix for that is slightly more involved, as it would require storing the supported cultures in the exception and probably reworking the exception hierarchy, as right now they are only in string. \r\n\r\nWhich of those should I fix here and which should be a separate issue? I would say the first one can be here, as it's just a single line, but the other I would prefer merging separately.",
      "created_at": "2022-08-01T11:34:39Z",
      "updated_at": "2022-08-01T11:34:39Z"
    },
    {
      "author": "pull-request-quantifier[bot]",
      "author_association": "NONE",
      "body": "### ![](https://img.shields.io/static/v1?label=Quantified&message=Extra%20Small&color=green)\r\n\r\nThis PR has `39` quantified lines of changes. In general, a change size of upto `200` lines is ideal for the best PR experience!\r\n\r\n------\r\n\r\n<details >\r\n    <summary display=\"inline\"> <strong>Quantification details</strong></summary>\r\n    <p />\r\n\r\n```\r\nLabel      : Extra Small\r\nSize       : +37 -2\r\nPercentile : 15.6%\r\n\r\nTotal files changed: 6\r\n\r\nChange summary by file extension:\r\n.cs : +12 -1\r\n.resx : +3 -0\r\n.ps1 : +22 -1\r\n```\r\n> Change counts above are quantified counts, based on the [PullRequestQuantifier customizations](https://github.com/microsoft/PullRequestQuantifier/blob/main/docs/prquantifier-yaml.md).\r\n    \r\n</details>\r\n\r\n\r\n<details>\r\n    <summary display=\"inline\"> <strong>Why proper sizing of changes matters</strong> </summary>\r\n    <p/>\r\n    <p/>\r\n\r\nOptimal pull request sizes drive a better predictable PR flow as they strike a\r\nbalance between between PR complexity and PR review overhead. PRs within the\r\noptimal size (typical small, or medium sized PRs) mean:\r\n\r\n- Fast and predictable releases to production:\r\n  - Optimal size changes are more likely to be reviewed faster with fewer\r\niterations.\r\n  - Similarity in low PR complexity drives similar review times.\r\n- Review quality is likely higher as complexity is lower:\r\n  - Bugs are more likely to be detected.\r\n  - Code inconsistencies are more likely to be detected.\r\n- Knowledge sharing is improved within the participants:\r\n  - Small portions can be assimilated better.\r\n- Better engineering practices are exercised:\r\n  - Solving big problems by dividing them in well contained, smaller problems.\r\n  - Exercising separation of concerns within the code changes.\r\n\r\n#### What can I do to optimize my changes\r\n\r\n- Use the PullRequestQuantifier to quantify your PR accurately\r\n  - Create a context profile for your repo using the [context generator](https://github.com/microsoft/PullRequestQuantifier/releases)\r\n  - Exclude files that are not necessary to be reviewed or do not increase the review complexity. Example: Autogenerated code, docs, project IDE setting files, binaries, etc. Check out the `Excluded` section from your `prquantifier.yaml` context profile. \r\n  - Understand your typical change complexity, drive towards the desired complexity by adjusting the label mapping in your `prquantifier.yaml` context profile.\r\n  - Only use the labels that matter to you, [see context specification](./docs/prquantifier-yaml.md) to customize your `prquantifier.yaml` context profile.\r\n- Change your engineering behaviors\r\n  - For PRs that fall outside of the desired spectrum, review the details and check if:\r\n    - Your PR could be split in smaller, self-contained PRs instead\r\n    - Your PR only solves one particular issue. (For example, don't refactor and code new features in the same PR).\r\n\r\n#### How to interpret the change counts in git diff output\r\n\r\n- One line was added: `+1 -0`\r\n- One line was deleted: `+0 -1`\r\n- One line was modified: `+1 -1` (git diff doesn't know about modified, it will\r\ninterpret that line like one addition plus one deletion)\r\n- Change percentiles: Change characteristics (addition, deletion, modification)\r\nof this PR in relation to all other PRs within the repository.\r\n\r\n</details>\r\n\r\n<p />\r\n\r\n------\r\n\r\nWas this comment helpful? <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoiZGthc3pld3MiLCJSZXBvc2l0b3J5TGluayI6Imh0dHBzOi8vZ2l0aHViLmNvbS9Qb3dlclNoZWxsL1Bvd2VyU2hlbGwiLCJQdWxsUmVxdWVzdExpbmsiOiJodHRwczovL2dpdGh1Yi5jb20vUG93ZXJTaGVsbC9Qb3dlclNoZWxsL3B1bGwvMTc3ODAiLCJFdmVudFR5cGUiOiJUaHVtYnNVcCJ9&amp;anonymous=True\" target=\"_blank\" title=\"Thumbs up\"><strong>:thumbsup:</strong></a> <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoiZGthc3pld3MiLCJSZXBvc2l0b3J5TGluayI6Imh0dHBzOi8vZ2l0aHViLmNvbS9Qb3dlclNoZWxsL1Bvd2VyU2hlbGwiLCJQdWxsUmVxdWVzdExpbmsiOiJodHRwczovL2dpdGh1Yi5jb20vUG93ZXJTaGVsbC9Qb3dlclNoZWxsL3B1bGwvMTc3ODAiLCJFdmVudFR5cGUiOiJOZXV0cmFsIn0=&amp;anonymous=True\" target=\"_blank\" title=\"Neutral\"><strong>&nbsp;:ok_hand:</strong></a> <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoiZGthc3pld3MiLCJSZXBvc2l0b3J5TGluayI6Imh0dHBzOi8vZ2l0aHViLmNvbS9Qb3dlclNoZWxsL1Bvd2VyU2hlbGwiLCJQdWxsUmVxdWVzdExpbmsiOiJodHRwczovL2dpdGh1Yi5jb20vUG93ZXJTaGVsbC9Qb3dlclNoZWxsL3B1bGwvMTc3ODAiLCJFdmVudFR5cGUiOiJUaHVtYnNEb3duIn0=&amp;anonymous=True\" target=\"_blank\" title=\"Thumbs down\"><strong>&nbsp;:thumbsdown:</strong></a> (<a href=\"MAILTO:prquantifier@microsoft.com\" title=\"Mail to prquantifier@microsoft.com\">Email</a>)\r\n[Customize PullRequestQuantifier](https://github.com/PowerShell/PowerShell/blob/master/.github/prquantifier.yaml) for this repository.\r\n\r\n",
      "created_at": "2022-08-01T12:53:45Z",
      "updated_at": "2022-08-01T12:53:45Z"
    },
    {
      "author": "dkaszews",
      "author_association": "CONTRIBUTOR",
      "body": "CodeRefactor reports new issues in `UpdateHelpCommand.cs` on lines 471 and 476, but I only modified 217 and see similar errors at other places in the file. How can I get it resolved as false positive?",
      "created_at": "2022-08-01T12:54:44Z",
      "updated_at": "2022-08-01T12:54:44Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@dkaszews \r\n\r\nThanks for the updates. If the CodeFactor issues are not in the code block you touched, you can ignore them.\r\n\r\nI would prefer both the changes 1 and 2 in a separate PR as it changes the behavior and is an improvement in fallback lookup. \r\nThis PR is focused on fixing the error message on fallback.",
      "created_at": "2022-08-03T17:35:15Z",
      "updated_at": "2022-08-03T17:35:39Z"
    },
    {
      "author": "dkaszews",
      "author_association": "CONTRIBUTOR",
      "body": "@adityapatwardhan Sure, I'll create new issues and separate PRs for those two later",
      "created_at": "2022-08-03T18:58:37Z",
      "updated_at": "2022-08-03T18:58:37Z"
    },
    {
      "author": "dkaszews",
      "author_association": "CONTRIBUTOR",
      "body": "@adityapatwardhan Anything else I should do before this can be merged?",
      "created_at": "2022-08-09T17:24:46Z",
      "updated_at": "2022-08-09T17:24:46Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@dkaszews thank you for your contribution!",
      "created_at": "2022-08-09T22:51:45Z",
      "updated_at": "2022-08-09T22:51:45Z"
    }
  ],
  "created_at": "2022-07-26T21:01:19Z",
  "number": 17780,
  "state": "closed",
  "title": "Fix Update-Help failing silently with implicit non-US culture.",
  "updated_at": "2022-08-09T22:52:02Z"
}