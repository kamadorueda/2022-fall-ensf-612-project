{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4283",
  "author": "mwrock",
  "body": "This addresses #4254 by mimicing ctrl+c behavior on ctrl+break signals when running under `-NonInteractive`. While the current ctrl+break behavior of starting a debugger is excellent for debugging scripts interactively, it may pose a dilemma when running scripts noninteractively. This is especially true, as discussed in #4254, if the scripts are managed by a parent application that wishes to signal spawned powershell processes to cease execution gracefully.\r\n\r\nI have built this PR and run it in my [process supervisor application](https://github.com/habitat-sh/habitat) validating that it has the desired effect of gracefully terminating the pipeline when recieving a ctrl+break from `GenerateConsoleCtrlEvent` to its process group.",
  "closed_at": "2017-08-01T16:26:47Z",
  "comments": [
    {
      "author": "mwrock",
      "author_association": "CONTRIBUTOR",
      "body": "changed `shouldEndSession` to `true`",
      "created_at": "2017-07-18T18:38:45Z",
      "updated_at": "2017-07-18T18:38:45Z"
    },
    {
      "author": "mwrock",
      "author_association": "CONTRIBUTOR",
      "body": "@adityapatwardhan for consistency, I added the named params to all calls to `SpinUpBreakHandlerThread` and not just my additions.",
      "created_at": "2017-07-18T21:33:44Z",
      "updated_at": "2017-07-18T21:33:44Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "@mwrock I like this with named parameters much better.  Thanks.",
      "created_at": "2017-07-18T21:36:41Z",
      "updated_at": "2017-07-18T21:36:41Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Can we add tests?",
      "created_at": "2017-07-19T04:24:36Z",
      "updated_at": "2017-07-19T04:24:36Z"
    },
    {
      "author": "mwrock",
      "author_association": "CONTRIBUTOR",
      "body": "I took a quick look @iSazonov at the pester tests covering ConsoleHost. Creating tests around sending  signals to the console is problematic because the spawned process needs to be created with the `CREATE_NEW_PROCESS_GROUP` flag. C#/Powershell's `[Process]::Start` API does not expose the passing of creation flags. Without its own process group, broadcasting a `ctrl+break` would be captured by pester and would terminate the tests.\r\n\r\nI could certainly adjust the ConsoleHost tests to leverage `DllImport` and call directly into `CreateProcessW` but thats a rather heavy handed call and  requires setting up a bunch of structs to support the `CreateProcessW` args. So I'm gonna let that go here.\r\n\r\nI'm totally open to other suggestions though!",
      "created_at": "2017-07-19T05:56:32Z",
      "updated_at": "2017-07-19T05:56:32Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "I feel a test for this is unnecessary.  ",
      "created_at": "2017-07-19T16:43:31Z",
      "updated_at": "2017-07-19T16:43:31Z"
    },
    {
      "author": "mwrock",
      "author_association": "CONTRIBUTOR",
      "body": "I don't at all mean to be pushy, but would love to see this merged and included in the next release.",
      "created_at": "2017-07-25T17:16:12Z",
      "updated_at": "2017-07-25T17:16:12Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@mwrock  Thank you for your contribution!",
      "created_at": "2017-08-01T16:27:11Z",
      "updated_at": "2017-08-01T16:27:11Z"
    }
  ],
  "created_at": "2017-07-18T16:36:18Z",
  "number": 4283,
  "state": "closed",
  "title": "if running noninteractively then do not break into debugger on ctrl +\u2026",
  "updated_at": "2017-08-01T16:27:11Z"
}