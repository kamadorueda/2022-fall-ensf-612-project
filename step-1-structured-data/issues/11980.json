{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11980",
  "author": "anmenaga",
  "body": "## PR Summary\r\n\r\nSeveral small fixes to some WinCompat scenarios:\r\n\r\n1. Removing PS-Core-specific paths from `PSModulePath` of WinCompat process (Windows PS). Similar change was done previously by #11057 for NativeCommandProcessor. This PR enables same \r\n`PSModulePath` behavior for WinCompat process (Windows PS) and job's process (Windows PS - for jobs started with `-PSVersion 5.1`). Without this change there could be bad cases when WinCompat process was loading PS-Core versions of the modules.\r\n\r\n1. Some implicit WinCompat scenarios were ignoring `-NoClobber` and `-Scope` parameters. This is now fixed.\r\n\r\n1. `Get-PSSession -Name` generates an error when the session is not found (in addition to returning nothing). When WinCompat uses `Get-PSSession` to search for existing `WinPSCompatSession` session to reuse, such error is not shown to the user but it is written to the error stream. Considering that it is normal for `WinPSCompatSession` session to not be there before the first WinCompat module import, such error is expected but it may confuse user if it is found in the error stream. The fix is to do `Get-PSSession -Name WinPSCompatSession -ErrorAction Ignore`.\r\nFix #11903\r\n\r\n1. Fixed a test bug in `ModulePath.Tests.ps1`.\r\n\r\n## PR Checklist\r\n\r\n- [X] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [X] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [X] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [X] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [X] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [X] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2020-03-10T06:31:45Z",
  "comments": [
    {
      "author": "codykonior",
      "author_association": "NONE",
      "body": "The Get-PSSession fix is critical for anyone who wants to run PS 7 in critical production environments and so uses $ErrorActionPreference = 'Stop'. \r\n\r\nIt cannot be overridden manually with -ErrorActionPreference:Continue; the only workaround is to set the variable to Continue and then run it, but then you require extra code to detect and parse if any errors occurred loading the module. Alternately, Import-WinModule can be used instead.\r\n\r\nHope this gets merged in and made available ASAP.\r\n",
      "created_at": "2020-03-09T05:55:57Z",
      "updated_at": "2020-03-09T05:56:41Z"
    },
    {
      "author": "anmenaga",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov looks like this is ready for merge.",
      "created_at": "2020-03-09T21:08:46Z",
      "updated_at": "2020-03-09T21:08:46Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.1.0-preview.1` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.1.0-preview.1)\n",
      "created_at": "2020-03-26T17:48:03Z",
      "updated_at": "2020-03-26T17:48:03Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.0.1` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.0.1)\n",
      "created_at": "2020-05-14T22:52:45Z",
      "updated_at": "2020-05-14T22:52:45Z"
    }
  ],
  "created_at": "2020-02-29T00:48:27Z",
  "number": 11980,
  "state": "closed",
  "title": "Miscellaneous minor updates to WinCompat",
  "updated_at": "2020-05-14T22:52:45Z"
}