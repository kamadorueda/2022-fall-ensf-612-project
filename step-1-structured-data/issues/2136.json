{
  "_url": "https://github.com/PowerShell/PowerShell/issues/2136",
  "author": "kilasuit",
  "body": "https://github.com/PowerShell/PowerShell/blob/master/src/Modules/Shared/PowerShellGet/PowerShellGet.psd1 - This still shows 1.0.0.1 for the module version (same version as the module that was bundled with Win10 10586) even though there have been a number of changes to this module since July 2015\n\nThis follows on from the request in #1979 to decouple any included modules like PowerShell Get so that with these modules we can have a build & release process that we have confidence in and this is becoming more and more important to get right as the number of changes to this Repository grows.\n",
  "closed_at": "2020-05-21T16:51:46Z",
  "comments": [
    {
      "author": "zipzit",
      "author_association": "NONE",
      "body": "If you are a user, is there any way to determine which version of powershell you are running? \n`powershell help` and `powershell help version` reveal nothing.   `powershell --version` and `powershell -ver` reveal nothing.   There is no menu select for \"About\" or anything related.  And why isn't such a command available by an observer starting at `powershell help` ? \n\nWhy the big secret?   Is the version level such a big secret, or am I just doing this wrong?\n",
      "created_at": "2016-08-31T00:41:01Z",
      "updated_at": "2016-08-31T00:41:01Z"
    },
    {
      "author": "kilasuit",
      "author_association": "COLLABORATOR",
      "body": "@zipzit you would have to start powershell and then run\n\n``` powershell\n$PSVersionTable.PSVersion\n```\n\nthat is the correct way to find the version of PowerShell that you are running. \n\nIf you are new to using powershell then take a look at the following learning powershell page at https://github.com/PowerShell/PowerShell/blob/master/docs/learning-powershell\n",
      "created_at": "2016-08-31T00:50:07Z",
      "updated_at": "2016-08-31T00:50:07Z"
    },
    {
      "author": "bmanikm",
      "author_association": "CONTRIBUTOR",
      "body": "Fixed this for PowerShellGet module in #2372\n",
      "created_at": "2016-09-28T23:44:53Z",
      "updated_at": "2016-09-29T00:29:11Z"
    },
    {
      "author": "kilasuit",
      "author_association": "COLLABORATOR",
      "body": "@bmanikm It may be fixed for PowerShellGet however this needs to be **enforced on all inbox shipped modules** until #1979 has been completed and each module has decoupled and has a reliable and robust build process that all users can trust in which is especially truthful of all MS released modules\n\nCurrently I haven't got that level of trust that any change in any of the modules shipped inside of this repository, regardless of the size of the change, couldn't end up bringing an unforeseen breaking change somewhere else down the line.\n\nDon't get me wrong as now PowerShell has been Open Sourced the direction is going the right way to being able to actually have that level of trust however there is still work to be done to get us there so could you re-open this until #1979 has been completed\n",
      "created_at": "2016-09-29T00:11:24Z",
      "updated_at": "2016-09-29T00:11:24Z"
    },
    {
      "author": "bmanikm",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks @kilasuit!, I have updated my above comment.\n",
      "created_at": "2016-09-29T00:30:03Z",
      "updated_at": "2016-09-29T00:30:03Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@zipzit getting the powershell version using -version without argument makes sense - Looks like it's #1084 \n",
      "created_at": "2016-11-01T18:30:06Z",
      "updated_at": "2016-11-01T18:32:36Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "We should do this, but I think it's probably more in line with whenever we do the module refactoring. ",
      "created_at": "2017-05-25T17:52:26Z",
      "updated_at": "2017-05-25T17:52:26Z"
    },
    {
      "author": "kilasuit",
      "author_association": "COLLABORATOR",
      "body": "Bumping this to get a review - is this something that the internal modules to PSCore that aren't being decoupled in #1979 are getting their versions updated when there are updates to them? ",
      "created_at": "2018-06-14T02:07:04Z",
      "updated_at": "2018-06-14T02:07:04Z"
    },
    {
      "author": "kilasuit",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT are changes to the modules that are bundled as part of PSCore getting version bumped at all? Because technically they should be in line with the version of PSCore unless they can be decoupled further as part of #1979 which would help #5681 out",
      "created_at": "2019-01-22T04:53:48Z",
      "updated_at": "2019-01-22T04:53:48Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@kilasuit we haven't been keeping the module version updated with the PSCore6 version partly because it's manual and partly because the modules aren't separate.  Once decoupled, it will be easier to have them rev as needed.  ",
      "created_at": "2019-01-22T17:58:11Z",
      "updated_at": "2019-01-22T17:58:11Z"
    },
    {
      "author": "kilasuit",
      "author_association": "COLLABORATOR",
      "body": "I think this can be closed now as many modules got decoupled and they now have proper versioning ",
      "created_at": "2020-05-21T16:51:46Z",
      "updated_at": "2020-05-21T16:51:46Z"
    }
  ],
  "created_at": "2016-08-30T21:53:35Z",
  "labels": [
    "Area-Maintainers-Build",
    "Issue-Meta",
    "WG-Cmdlets"
  ],
  "number": 2136,
  "state": "closed",
  "title": "Modules like PowerShell Get need the version bumped up when modified",
  "updated_at": "2020-05-21T16:51:47Z"
}