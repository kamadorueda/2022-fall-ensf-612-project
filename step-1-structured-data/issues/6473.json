{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6473",
  "author": "nightroman",
  "body": "`Test-Path -Path` with wildcards may miss hidden items.\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\n# make a directory \"z\" and a hidden item \"hidden\" in it\r\n$item = mkdir z\\hidden -Force\r\n$item.Attributes = $item.Attributes -bor [System.IO.FileAttributes]::Hidden\r\n\r\n# True, expected\r\n$r = Test-Path z\\hidden\r\n\"Test-Path z\\hidden = $r\"\r\n\r\n# False, unexpected\r\n$r = Test-Path *\\hidden\r\n\"Test-Path *\\hidden = $r\"\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n`Test-Path` gets true in both cases.\r\n\r\nActual behavior\r\n---------------\r\n\r\nFor the existing hidden item \"hidden\" `Test-Path *\\hidden` gets false.\r\n\r\nEnvironment data\r\n----------------\r\n\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.2\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.2\r\nOS                             Microsoft Windows 6.3.9600\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "BrucePay",
      "author_association": "COLLABORATOR",
      "body": "@nightroman In general, this is how wildcarding works: hidden files are not matched by default (exact paths do match). If you want to match hidden files, then you (typically) have to specify -Force. Now `Test-Path` doesn't have a `-Force` parameter so that could be considered a bug. Alternatively, `Test-Path` could be changed to always pass the force flag to the underlying APIs (which would be a gray area breaking change). Finally you could argue that `Test-Path` shouldn't do wildcarding at all since it's really intended to test for specific paths. In that case, if you wanted to see if group of files exist you could/would use `Get-Childitem`. What do you think?",
      "created_at": "2018-03-23T17:35:31Z",
      "updated_at": "2018-03-23T17:35:31Z"
    },
    {
      "author": "nightroman",
      "author_association": "NONE",
      "body": "I realize that it is complicated. I am not suggesting anything. But I was caught by the current behavior. I would be happy if it behaves as I described in \"expected\", breaking or not.",
      "created_at": "2018-03-23T17:59:47Z",
      "updated_at": "2018-03-23T17:59:47Z"
    },
    {
      "author": "nightroman",
      "author_association": "NONE",
      "body": "`Test-Path -Path` finds hidden items: (1) without wildcards; (2) with wildcards specified for items, not folders. So it is not completely true that \"In general, this is how wildcarding works\". `Test-Path` finds hidden items with wildcards **sometimes**. It depends on a wildcard and this is too complex for understanding. If it works for some wildcards then it should work for all.\r\n\r\nP.S. Turns out I am suggesting something after all.",
      "created_at": "2018-03-23T18:16:18Z",
      "updated_at": "2018-03-23T18:18:14Z"
    },
    {
      "author": "BrucePay",
      "author_association": "COLLABORATOR",
      "body": ">  (2) with wildcards specified for items, not folders. \r\n\r\nI'm not sure I understand quite what you mean by this. Can you provide an example? Here's what I tried:\r\n\r\nAfter creating a non-hidden file in the hidden directory, I tried\r\n```\r\nPS[1] (91) > test-path z/hidden/file.txt\r\nTrue\r\n```\r\nIt's an exact path so it returns true as expected.\r\n```\r\nPS[1] (92) > test-path z/hidden/*.txt\r\nTrue\r\n```\r\nThis also returns true also as expected  - the directory component 'hidden' doesn't contain wildcards (i.e. the path component is exact) so it succeeds.\r\n```\r\nPS[1] (93) > test-path z/*/file.txt\r\nFalse\r\n```\r\nThis returns false because the path component corresponding to \"hidden\" has wildcards and therefore doesn't match.\r\n\r\nSo far,  everything is working as expected.\r\n",
      "created_at": "2018-03-23T22:55:09Z",
      "updated_at": "2018-03-23T22:55:09Z"
    },
    {
      "author": "nightroman",
      "author_association": "NONE",
      "body": "Sorry, I answered in a hurry. I thought `Test-Path *.txt` returned true for hidden `*.txt` files (i.e. not folders). No, it did not. So it is consistent with wildcards.\r\n",
      "created_at": "2018-03-24T02:57:43Z",
      "updated_at": "2018-03-24T03:34:19Z"
    },
    {
      "author": "nightroman",
      "author_association": "NONE",
      "body": "\r\n> In general, this is how wildcarding works: hidden files are not matched by default (exact paths do match).\r\n\r\nAt least the help of `Test-Path` could mention this wildcarding feature.\r\n\r\nI was not aware of it, actually. Where else is it used in practice?\r\n",
      "created_at": "2018-03-24T04:18:16Z",
      "updated_at": "2018-03-24T04:18:16Z"
    },
    {
      "author": "nightroman",
      "author_association": "NONE",
      "body": "I think `Resolve-Path` has the same \"issue\".",
      "created_at": "2018-03-24T13:07:02Z",
      "updated_at": "2018-03-24T13:07:02Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I think all FileProvider cmdlets should have the same behavior.\r\n\r\n/cc @mklement0 Could you please look the Issue?",
      "created_at": "2018-03-24T18:39:05Z",
      "updated_at": "2018-03-24T18:39:05Z"
    },
    {
      "author": "BrucePay",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov Just to be clear: the behavior for wildcards wrt hidden files is implemented by the `FileSystemProvider` not by cmdlets. Any cmdlet that uses providers will have this behavior including all of the \"core\" cmdlets (*-Path, *-Item, *-ChildItem).\r\n\r\n@nightroman The help for `Test-Path` does mention wildcard support in the parameter descriptions e.g. for the `-Path` parameter:\r\n>Specifies a path to be tested. Wildcard characters are permitted. If the path includes spaces, enclose it in quotation marks.\r\n\r\nbut that's not really what you want. The semantics for how a path is resolved are up to the underlying provider, so this should probably be covered in the [FileSystemProvider](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/providers/filesystem-provider?view=powershell-6) documentation (it's not).\r\n\r\n",
      "created_at": "2018-03-24T21:35:57Z",
      "updated_at": "2018-03-24T21:35:57Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "> Now\u00a0Test-Path\u00a0doesn't have a\u00a0`-Force`\u00a0parameter so that could be considered a bug.\r\n\r\nI agree. ` -Force` should be added for symmetry with other FileProvider cmdlets - see below.\r\n\r\n> Finally you could argue that\u00a0`Test-Path`\u00a0shouldn't do wildcarding at all since it's really intended to test for specific paths.\r\n\r\nIt's definitely useful to use `Test-Path` with wildcards (e.g.: Are there any text files in this dir? `Test-Path *.txt` Is there a v4.x .NET framework installed? `Test-path C:\\WINDOWS\\Microsoft.Net\\Framework64\\v4*`), and given that it has a `-Path` parameter distinct from a `-LiteralPath` parameter,\r\nwildcards should definitely (continue to) be supported.  \r\n\r\nBelow is my attempt to summarize the status quo; do let me know if got something wrong / missed something.\r\n\r\n## Overview of the current behavior of the filesystem cmdlets and their inconsistencies\r\n\r\n* If there are **_no_ wildcards in _any_ path components**:\r\n\r\n  * **Hidden items ARE found by _literal paths_** (whether passed to `-Path` or `-LiteralPath`) by `Test-Path`, `Convert-Path`, `Resolve-Path`, `Move-Item`, `Rename-Item`, `Copy-Item`, `New-Item`, `Get-Content`, `Set-Content`, `Add-Content`, `Clear-Content`, `Split-Path -Resolve`, `Join-Path -Resolve`.\r\n\r\n  * **Hidden items are NOT found by `Get-Item` / `Get-ChildItem`  unless `-Force` is also specified** (applies to `-LiteralPath` too).\r\n    * Note, however, that `Get-ChildItem` will find (visible) _children_ in a literally matched hidden dir.;  e.g., in @nightroman's example, `Get-ChildItem z/hidden`\r\n\r\n* If there are **wildcards in _any_ path component**:\r\n\r\n  * Hidden items **ONLY match if `-Force` is also specified**.\r\n\r\n  * Given that they lack a `-Force` switch, **the following cmdlets are currently fundamentally incapable of finding hidden items via wildcards:**\r\n\t* `Test-Path`, `Convert-Path`, `Resolve-Path`, `Split-Path -Resolve`, `Join-Path -Resolve`, `Invoke-Item`\r\n\r\n  * **`New-Item` fundamentally lacks wildcard support** - only literal paths are supported (and do find hidden items); thus, `New-Item`'s `-Path` parameter should always have been `-LiteralPath` instead\r\n\r\n    * Additionally, the [help topic currently erroneously claims that wildcards _are_ supported](https://github.com/PowerShell/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Management/New-Item.md) - it's incorrect at least with respect to the filesystem provider (haven't tried others).\r\n\r\nNote: `Set-Item` and `Clear-Item` were not considered above, because the filesystem provider doesn't implement them.\r\n",
      "created_at": "2018-03-24T22:54:42Z",
      "updated_at": "2018-03-25T13:13:02Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I think we could expand the Issue on Test-Path, Convert-Path, Resolve-Path, Split-Path -Resolve, Join-Path -Resolve, Invoke-Item cmdlets and `-Force`.",
      "created_at": "2018-03-26T04:15:33Z",
      "updated_at": "2018-03-26T04:15:33Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov: I've created #6501 and #6502",
      "created_at": "2018-03-26T18:57:42Z",
      "updated_at": "2018-03-26T18:57:42Z"
    }
  ],
  "created_at": "2018-03-23T16:13:38Z",
  "labels": [
    "Issue-Discussion",
    "WG-Cmdlets-Management",
    "Area-FileSystem-Provider"
  ],
  "number": 6473,
  "state": "open",
  "title": "Test-Path -Path with wildcards may miss hidden items",
  "updated_at": "2021-11-30T15:16:15Z"
}