{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6857",
  "author": "LethiferousMoose",
  "body": "Steps to reproduce\r\n------------------\r\n\r\n```powershell\r\nfunction Test-Function {\r\n    [CmdletBinding(SupportsShouldProcess=$true, ConfirmImpact='Medium', DefaultParameterSetName='Set')]\r\n    param([Parameter(Position=0)]\r\n          [string] $Value,\r\n          [Parameter(Position=1, ParameterSetName='Set')]\r\n          [switch] $SetValue,\r\n          [Parameter(Position=1, ParameterSetName='AnotherSet')]\r\n          [switch] $AnotherSetValue,\r\n          [Parameter(Position=2, ParameterSetName='Set')]\r\n          [Parameter(ParameterSetName='AnotherSet')]\r\n          [string] $BothSets)\r\n\r\n    dynamicparam {\r\n        if ($PSCmdlet.ParameterSetName -eq 'Set') {\r\n            # Build parameter for Set\r\n        }\r\n        else {\r\n            # Build parameter for AnotherSet\r\n        }\r\n    }\r\n\r\n    process {\r\n        Write-Output \"Test\"\r\n    }\r\n}\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```$PSCmdlet.ParameterSetName``` to not reset back to it's default value when the parameter choosing the set has been provided.\r\n\r\nActual behavior\r\n---------------\r\n\r\n1. For ```Test-Function -Value 'Test'```: \r\n    * ```$PSCmdlet.ParameterSetName``` equals ```Set``` (default parameter set, makes sense)\r\n2. For ```Test-Function -Value 'Test' -AnotherSetValue 'SetParam'```:\r\n    * ```$PSCmdlet.ParameterSetName``` equals ```AnotherSet``` (also makes sense because now we have a parameter provided that chooses a set that is not the default)\r\n3. For ```Test-Function -Value 'Test' -AnotherSetValue 'SetParam' -BothSets 'BothSetsValue'```:\r\n    * ```$PSCmdlet.ParameterSetName``` equals ```Set``` (I do not understand why this makes sense, we have provided ```AnotherSetValue``` in the provided parameters, why do I not see the chosen parameter set name being set?)\r\n\r\nNote: the same behavior occurs even if ```BothSets``` does not have ```ParameterSetName``` defined.\r\nFurther note: I did other testing with trying to read the values of already provided parameters and it seems the dynamparam block only has visibility to the parameter currently in focus or being typed in the console.\r\n\r\nIs this expected behavior, if so how can I build a dynamic parameter queuing off parameter data???\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.1.0-preview.2\r\nPSEdition                      Core\r\nGitCommitId                    v6.1.0-preview.2\r\nOS                             Microsoft Windows 10.0.16299\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2019-09-28T19:06:09Z",
  "comments": [
    {
      "author": "BrucePay",
      "author_association": "COLLABORATOR",
      "body": "@LethiferousMoose The parameters returned by the `dynamicparameter` statement are actually  _involved_ in determining the final active parameter set.  You can't know which parameter set will ultimately be selected until all phases of parameter binding are done, up to and including binding from the pipeline if any parameters are so attributed.  So you certainly can't rely on the parameter set being fixed when the `dynamicparameters` block is invoked.",
      "created_at": "2018-05-11T22:54:53Z",
      "updated_at": "2018-05-11T22:54:53Z"
    }
  ],
  "created_at": "2018-05-11T15:08:07Z",
  "labels": [
    "Issue-Question",
    "WG-Engine",
    "Resolution-Answered"
  ],
  "number": 6857,
  "state": "closed",
  "title": "Odd behavior with dynamparam block",
  "updated_at": "2019-09-28T19:06:09Z"
}