{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11543",
  "author": "mikeTWC1984",
  "body": "# Summary \r\n\r\nIn Java/JVM world you can use classpath to add dependencies (jars), instead of packaging it with your own project. e.g.:\r\n```java -cp \"myProject.jar:./dependencies/*.\" MyClass```\r\nOr it could discover jars in CLASSPATH env variable if set\r\n\r\nLoading types from dlls and psm1 (powershell classes) using similar approach might be very beneficial for powershell too.\r\nThis could be a simple way to decouple dependencies (external dlls) from shared PS scripts/modules and make powershell classes defined in psm1 files reusable (without hacking). Latter is pretty cumbersome at the moment, especially if mixing with imported .net types\r\n\r\n# example\r\n ```\r\n # this should make types from dll/psm globally available in that session\r\npwsh [-f ./myscript.ps1] -cp ./dep/*.dll, ./config.psm1\r\n\r\n```\r\n\r\n```\r\n# this might be nice too\r\n$env:PSCLASSPATH += \":~/dependecies/*\"\r\npwsh -f ./myscript.ps1 \r\n```\r\n\r\n\r\n\r\n\r\n",
  "closed_at": "2020-01-12T17:00:12Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Proposal to put PowerShell classes to special files already was in our discussions.\r\nIt is large area for discussion and right way to continue is to create RFC in PowerShell-RFC repository.",
      "created_at": "2020-01-11T16:45:18Z",
      "updated_at": "2020-01-11T16:45:18Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as external and has not had any activity for **1 day**. It has been be closed for housekeeping purposes.",
      "created_at": "2020-01-12T17:00:11Z",
      "updated_at": "2020-01-12T17:00:11Z"
    }
  ],
  "created_at": "2020-01-09T20:35:55Z",
  "number": 11543,
  "state": "closed",
  "title": "CLASSPATH for dll/psm1",
  "updated_at": "2020-01-12T17:00:12Z"
}