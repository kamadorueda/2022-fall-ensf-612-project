{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7399",
  "author": "kwkam",
  "body": "## PR Summary\r\n\r\nDo not glob path with invalid wildcard pattern (eg. \"./[.ps1\").\r\n\r\n## PR Motivation\r\n\r\nMerge the Qualified Path Search and Relative Path Search into a single function (`GetNextFromPath` into `ResolvePSPath`).\r\n\r\nAdd an internal method `ContainsValidWildcardPattern` to the WildcardPattern API to make the checking be more sensitive to invalid bracket patterns, to allow faster fallback from wildcard search for fully qualified path to a literal search.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [ ] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` to the beginning of the title and remove the prefix when the PR is ready.\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [ ] User-facing [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed - Issue link:\r\n- **Testing - New and feature**\r\n    - [ ] Not Applicable or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n        - [x] [Add `[feature]` if the change is significant or affects feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "stale[bot]",
      "author_association": "NONE",
      "body": "This PR has been automatically marked as stale because it has not had activity in the last 30 days. It will be closed if no further activity occurs within 10 days.\nThank you for your contributions.\nCommunity members are welcome to grab these works.\n",
      "created_at": "2018-09-30T23:44:29Z",
      "updated_at": "2018-09-30T23:44:29Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT do we have interest in the change?",
      "created_at": "2018-10-02T09:54:16Z",
      "updated_at": "2018-10-02T09:54:16Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov yes, I think this change is something we want",
      "created_at": "2018-10-05T00:04:53Z",
      "updated_at": "2018-10-05T00:04:53Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@kwkam Please rebase to pass CIs.",
      "created_at": "2018-10-05T06:15:04Z",
      "updated_at": "2018-10-05T06:15:04Z"
    },
    {
      "author": "kwkam",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov OK, rebased to latest master.",
      "created_at": "2018-10-06T08:04:06Z",
      "updated_at": "2018-10-06T08:04:06Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> but not if it contains valid wildcard characters.\r\n\r\nDoes the comment only refer to this method or its use too? ",
      "created_at": "2018-10-10T03:52:26Z",
      "updated_at": "2018-12-16T08:44:41Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "> Does the comment only refer to this method or its use too?\r\n\r\nThe comment only applies to the method, not to its uses. If a caller assumes differently, then another method should be added for checking if a path contains **valid** wildcard characters.",
      "created_at": "2018-10-10T04:58:39Z",
      "updated_at": "2018-10-10T05:01:55Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I think the breaking change is in gray area because using of the method implies that we want exactly working wildcards and not something similar ']['. Also I'd said that passing '][' in the method is a bug.",
      "created_at": "2018-10-10T09:53:44Z",
      "updated_at": "2018-10-10T09:53:44Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@iSazonov This is more of a unacceptable changes in public contract. Quoted from the [breaking-chagne-doc](https://github.com/PowerShell/PowerShell/blob/master/docs/dev-process/breaking-change-contract.md#unacceptable-changes):\r\n\r\n> A code change that results in a change to the existing behavior observed for a given input with an API, protocol or the PowerShell language.\r\n\r\nThat being said, I do like the refactoring changes in `CommandSearcher.cs` and inclined to keep it.",
      "created_at": "2018-10-10T21:10:48Z",
      "updated_at": "2018-10-10T21:11:43Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Add the \"Review-Committee\" label.\r\nTo @PowerShell/powershell-committee: This PR proposes a behavior change to the public method `WildcardPattern.ContainsWildcardCharacters(string pattern)`. Currently, `ContainsWildcardCharacters(string pattern)` only checks if the string contains any wildcard characters. The proposed change is to make it check for **valid** wildcard patterns. That means, for the string `[abc` or `][abc`, currently the method returns `true` and it would return `false` with the change.\r\n\r\nThe proposed change is a breaking change that falls in bucket 1, so we need committee to review.",
      "created_at": "2018-10-10T21:18:20Z",
      "updated_at": "2018-10-10T21:18:20Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee reviewed this.  Recommendation is to deprecate this api and introduce `ContainsValidWildcardPattern()` API and fix all callsites to use the new method (separate PR).",
      "created_at": "2018-10-10T22:54:03Z",
      "updated_at": "2018-10-10T22:54:03Z"
    },
    {
      "author": "kwkam",
      "author_association": "CONTRIBUTOR",
      "body": "Should the new method be a strict checking (e.g. try/catch with the WildcardPatternParser::Parse)?",
      "created_at": "2018-10-11T13:37:02Z",
      "updated_at": "2018-10-11T13:37:02Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "At first glance it should be `TryParse()`. Although we should review all callsites (131) - huge work!",
      "created_at": "2018-10-11T14:30:31Z",
      "updated_at": "2018-10-11T14:30:31Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "The method `ContainsWildcardCharacters` is called at many places in powershell, and I believe at least some of the callers only need a hint about whether a string *might* contains wildcard pattern, instead of an accurate answer, so for those caller, a perf penalty will be charged as `[WildcardPatternParser]::Parse` is relatively expensive.\r\n\r\nEven for the callers that do want the accurate answer, another call to `Parse` will be made when creating/using the `WildcardPattern` from the string, so we will be paying the tax twice.\r\n\r\nWe can still add the new method `ContainsValidWildcardPattern` wrapping a call to `WildcardPatternParser.Parse`, so we can accurately know if a string contains valid wildcard patterns. But it's probably not right to blindly change all callers of `ContainsWildcardCharacters` to the new method.",
      "created_at": "2018-10-11T23:06:16Z",
      "updated_at": "2018-10-11T23:06:16Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@kwkam Changes regarding `ContainsValidWildcardPattern` and `ContainsWildcardCharacters` would be a bit tricky and likely involve many changes in other places. How about we revert the changes to `ContainsValidWildcardPattern` in this PR and make it only about the refactoring changes in `CommandSearcher.cs`? We can merge the refactoring changes, and open a separate issue/PR to discuss the right fix for `ContainsValidWildcardPattern`.",
      "created_at": "2018-10-11T23:17:18Z",
      "updated_at": "2018-10-12T17:01:20Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I full agree with @daxian-dbw. ",
      "created_at": "2018-10-12T05:30:54Z",
      "updated_at": "2018-10-12T05:30:54Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@kwkam Do you agree with @daxian-dbw suggestion to split the PR?",
      "created_at": "2018-10-12T14:13:51Z",
      "updated_at": "2018-10-12T14:13:51Z"
    },
    {
      "author": "kwkam",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov Yes, but since the added method only affects CommandSearcher, I believe a partial fix is better than no fix (the original purpose of this PR is to fix the CommandSearcher). Could we open another PR to follow this up (improve/rewrite `ContainsValidWildcardPattern` and review other callsites)?",
      "created_at": "2018-10-12T15:17:25Z",
      "updated_at": "2018-10-12T15:17:25Z"
    },
    {
      "author": "stale[bot]",
      "author_association": "NONE",
      "body": "This PR has been automatically marked as stale because it has not had activity in the last 30 days. It will be closed if no further activity occurs within 10 days.\nThank you for your contributions.\nCommunity members are welcome to grab these works.\n",
      "created_at": "2018-12-10T16:00:36Z",
      "updated_at": "2018-12-10T16:00:36Z"
    },
    {
      "author": "stale[bot]",
      "author_association": "NONE",
      "body": "This PR has been automatically marked as stale because it has not had activity in the last 30 days. It will be closed if no further activity occurs within 10 days.\nThank you for your contributions.\nCommunity members are welcome to grab these works.\n",
      "created_at": "2019-02-10T16:59:43Z",
      "updated_at": "2019-02-10T16:59:43Z"
    },
    {
      "author": "stale[bot]",
      "author_association": "NONE",
      "body": "This PR has been automatically closed because it is stale. If you wish to continue working on the PR, please first update the PR, then reopen it.\nThanks again for your contribution.\nCommunity members are welcome to grab these works.\n",
      "created_at": "2019-02-20T17:04:42Z",
      "updated_at": "2019-02-20T17:04:42Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@kwkam I apologize for neglecting (unintentionally) this PR for so long. I will rebase this PR after @TravisEz13 have his tests changes merged. Once this PR is merged, I will work on improving the implementation of `IsValidWildcardPattern` as well as visit all the call sites of `ContainsWildcardCharacters`.",
      "created_at": "2019-03-20T00:31:08Z",
      "updated_at": "2019-03-20T00:31:33Z"
    },
    {
      "author": "kwkam",
      "author_association": "CONTRIBUTOR",
      "body": "@TravisEz13 Please see if the PR summary is appropriate.",
      "created_at": "2019-03-31T05:56:33Z",
      "updated_at": "2019-03-31T05:56:33Z"
    },
    {
      "author": "kwkam",
      "author_association": "CONTRIBUTOR",
      "body": "@daxian-dbw No problem. If you have spare time would you please also take a look at #9257 #9258 ?",
      "created_at": "2019-03-31T06:07:41Z",
      "updated_at": "2019-03-31T06:07:41Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "I have a PR that is adding a lot of tests to verify all the behaviors I've found, unfortunately it refactors the code some.  ",
      "created_at": "2019-03-31T17:53:41Z",
      "updated_at": "2019-03-31T17:53:41Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Referencing to the algorithm and tests in https://github.com/PowerShell/PowerShell/pull/7399#discussion_r232455452\r\n\r\nI updated the test cases as follows:\r\n```\r\n@(\r\n    @{input = '['; IsPattern = $false}\r\n    @{input = '[]'; IsPattern = $false}\r\n    @{input = ']['; IsPattern = $false}\r\n    @{input = '][]'; IsPattern = $false}\r\n    @{input = '[[]'; IsPattern = $true}\r\n    @{input = '[]]'; IsPattern = $true}\r\n    @{input = '[][]'; IsPattern = $true}\r\n    @{input = ']abc'; IsPattern = $false}\r\n    @{input = '[]abc'; IsPattern = $false}\r\n    @{input = '[abc[]abc]'; IsPattern = $true}\r\n\r\n    ## new test cases starting from here\r\n    @{input = '[a-mt]ook'; IsPattern = $true}\r\n    @{input = '[ab-z]ook'; IsPattern = $true}\r\n    @{input = '[a?b]'; IsPattern = $true}\r\n    @{input = '[a*]x'; IsPattern = $true}\r\n    @{input = 'goose]'; IsPattern = $false}\r\n    @{input = '[az-]'; IsPattern = $true}\r\n    @{input = '[!--]a'; IsPattern = $true}\r\n    @{input = '[e--]a'; IsPattern = $false}\r\n    @{input = '[az-b]'; IsPattern = $false}\r\n) | % {\r\n    $out = if ($(ContainsValidWildcardPattern $_.input) -ne $_.IsPattern) {\r\n        @{code = 31; verb = if ($_.IsPattern) { 'should be' } else { 'should not be' }}\r\n    } else {\r\n        @{code = 32; verb = if ($_.IsPattern) { 'is' } else { 'is not' }}\r\n    }\r\n    \"`e[$($out.code)m'$($_.input)' $($out.verb) wildcard pattern`e[0m\"\r\n}\r\n```\r\nAnd this is how the current algorithm works with those test cases:\r\n![image](https://user-images.githubusercontent.com/127450/56232188-054d5c80-6035-11e9-95a0-09dc6b6fca9b.png)\r\n\r\nIt's not perfect, but is a good start. I will submit a separate PR to improve the algorithm.\r\n@kwkam please take a look at the new test cases to make sure they are correct.\r\n\r\n--------------------------------------\r\n\r\nAs for the refactoring changes in `CommandDiscovery.cs`, @TravisEz13's PR #9202 has been merged, which refactored this file a lot. So the refactoring changes in this PR is not relevant anymore and can be reverted now.\r\nI will clean up this PR today.",
      "created_at": "2019-04-16T17:53:27Z",
      "updated_at": "2019-04-16T17:55:05Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "I have rebased the PR and reverted the refactoring changes in `CommandSearcher.cs`.\r\n\r\nI think about it more when doing the rebase, and believe this might not be the right fix, for two reasons:\r\n1. `Get-Command .\\[.exe -Type Application` works as expected, but `Get-Command .\\[.exe`  under the same folder doesn't.\r\n2. I think the behavior of 'Get-Command' probably should be similar to what #9202 has made to the command line resolution:\r\n    - First try to resolve it as a literal name\r\n    - Then, if the name contains wildcards, try to resolve it as wildcard name\r\n       - when the wildcard is invalid\r\n          - if it was successfully resolved as literal path, then don't report any error.\r\n          - if it was not successfully resolved as literal path before, then report wildcard pattern error.\r\n\r\nHaving a method `ContainsValidWildcardPattern` to quickly tell if a string actually represents valid wildcard pattern is certainly useful, especially in terms of perf.\r\nBut sometimes, the user does want to specify a wildcard pattern as input, but just doesn't make it right. In those cases, if our method `ContainsValidWildcardPattern` is very accurate, PowerShell will not report \"invalid wildcard pattern\" error because it believes the user input is a literal string. That might cause problems to user experience and also might cause behavior changes.\r\n\r\n@TravisEz13 , any thoughts?",
      "created_at": "2019-04-16T20:02:28Z",
      "updated_at": "2019-04-16T20:04:19Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> I think the behavior of 'Get-Command' probably should be similar to what #9202 has made\r\n\r\nI agree that the behavior should be the same. Otherwise, we get amazing behavior when the `Get-Command` cmdlet finds a command, but when we type it, we get \"not found\" error.\r\n\r\n> if our method ContainsValidWildcardPattern is very accurate, PowerShell will not report \"invalid wildcard pattern\" error because it believes the user input is a literal string. That might cause problems to user experience and also might cause behavior changes.\r\n\r\nMaybe updated error message will be enough.",
      "created_at": "2019-04-17T03:53:17Z",
      "updated_at": "2019-04-17T03:53:17Z"
    },
    {
      "author": "stale[bot]",
      "author_association": "NONE",
      "body": "This PR has been automatically marked as stale because it has not had activity in the last 30 days. It will be closed if no further activity occurs within 10 days.\nThank you for your contributions.\nCommunity members are welcome to grab these works.\n",
      "created_at": "2019-05-17T04:18:57Z",
      "updated_at": "2019-05-17T04:18:57Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "It seems we need to review all cmdlets with -Path/LiteralPath to get the same behavior for all. Perhaps make sense to open new tracking issue.",
      "created_at": "2019-05-17T05:49:42Z",
      "updated_at": "2019-05-17T05:50:30Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "rebased PR",
      "created_at": "2019-06-24T17:38:24Z",
      "updated_at": "2019-06-24T17:38:24Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@PoshChan Please remind me in 1 hour",
      "created_at": "2019-06-24T17:38:42Z",
      "updated_at": "2019-06-24T17:38:42Z"
    },
    {
      "author": "PoshChan",
      "author_association": "COLLABORATOR",
      "body": "@TravisEz13, this is the reminder you requested 1 hour ago",
      "created_at": "2019-06-24T18:39:01Z",
      "updated_at": "2019-06-24T18:39:01Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMainainer, Please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2020-05-27T02:04:17Z",
      "updated_at": "2020-05-27T02:04:17Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@daxian-dbw  Please update your review",
      "created_at": "2020-05-28T18:09:44Z",
      "updated_at": "2020-05-28T18:09:44Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMainainer, Please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2020-06-05T02:00:18Z",
      "updated_at": "2020-06-05T02:00:18Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@daxian-dbw Please update your review",
      "created_at": "2020-06-09T17:48:52Z",
      "updated_at": "2020-06-09T17:48:52Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMainainer, Please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2020-06-17T02:00:22Z",
      "updated_at": "2020-06-17T02:00:22Z"
    }
  ],
  "created_at": "2018-07-29T04:19:38Z",
  "number": 7399,
  "state": "open",
  "title": "CommandSearcher: treat invalid wildcard path as literal",
  "updated_at": "2021-11-11T22:00:52Z"
}