{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12819",
  "author": "xtqqczze",
  "body": "In #11777, the readonly modifier was added to internal static members which raised an issue of our naming convention.\r\n\r\nAccording to StyleCopAnalyzers on CodeFactor, \"readonly variables that are not declared private must start with an upper-case letter\" otherwise there are violations of the rule [SA1304NonPrivateReadonlyFieldsMustBeginWithUpperCaseLetter](https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1304.md)\r\n\r\nOur [naming conventions](https://github.com/PowerShell/PowerShell/blob/master/docs/dev-process/coding-guidelines.md#naming-conventions) state static fields should start with `s_`, however the existing code overwhelmingly uses PascalCase for `internal static readonly` members.\r\n\r\nIn my view conventions should be descriptive rather than prescriptive, so we should consider making changes to the written naming convention.",
  "closed_at": null,
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Yeah most of the newer code I see uses `PascalCase` for these. Might be that our naming conventions doc needs an update? /cc @SteveL-MSFT ",
      "created_at": "2020-05-27T19:33:18Z",
      "updated_at": "2020-05-27T19:33:18Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "https://github.com/dotnet/codeformatter/issues/281#issuecomment-442733951 makes a case that `readonly` should not change the casing style or prefixes.\r\n\r\nI don't have a strong opinion either way, but CodeFactor rules should not conflict with naming conventions \u2013 it adds too much friction to pull requests.",
      "created_at": "2020-05-27T19:53:48Z",
      "updated_at": "2020-05-27T19:53:48Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "Currently, the PowerShell naming convention states:\r\n> Use `_camelCase` to name internal and private fields and use `readonly` where possible.\r\nPrefix instance fields with `_`, static fields with `s_` and thread static fields with `t_`.\r\n\r\nUnfortunately there is no StyleCop rule available to enforce the use of `_camelCase` for `internal`.\r\n\r\nI think the following changes would be reasonably descriptive of the existing codebase:\r\n* Use `_camelCase` to name private fields (and prefix instance fields with `_`, static fields with `s_` and thread static fields with `t_`).\r\n* Use `PascalCase` to name non-private fields.\r\n\r\nIf we modified the written convention as suggested we could enforce this using the StyleCop rule:\r\n`SA1307: AccessibleFieldsMustBeginWithUpperCaseLetter`.\r\n",
      "created_at": "2020-05-29T23:29:23Z",
      "updated_at": "2020-05-29T23:29:23Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "We should also consider: https://github.com/dotnet/runtime/blob/master/docs/coding-guidelines/coding-style.md\n\n<blockquote><img src=\"https://avatars0.githubusercontent.com/u/9141961?s=400&v=4\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/dotnet/runtime\">dotnet/runtime</a></strong></div><div>.NET is a cross-platform runtime for cloud, mobile, desktop, and IoT apps. - dotnet/runtime</div></blockquote>",
      "created_at": "2020-05-30T00:40:29Z",
      "updated_at": "2020-05-30T00:40:31Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "/cc @adityapatwardhan @daxian-dbw @TravisEz13 Thoughts?",
      "created_at": "2020-05-31T05:09:09Z",
      "updated_at": "2020-05-31T05:09:09Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "If we want to modify our code style, we should modify our code style doc.  We can discuss it there.  I would suggest one issue at a time and not changing any existing rule without a good reason.  the main reason for them is internal consistency.   cc @daxian-dbw ",
      "created_at": "2020-06-02T18:51:37Z",
      "updated_at": "2020-06-02T18:52:39Z"
    }
  ],
  "created_at": "2020-05-27T18:57:50Z",
  "labels": [
    "Issue-Question",
    "Area-Maintainers-Documentation"
  ],
  "number": 12819,
  "state": "open",
  "title": "Naming convention for `internal static readonly`",
  "updated_at": "2020-06-02T18:52:39Z"
}