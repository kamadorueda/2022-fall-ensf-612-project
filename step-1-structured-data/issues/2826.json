{
  "_url": "https://github.com/PowerShell/PowerShell/issues/2826",
  "author": "PaulHigin",
  "body": "There are a number of potential script vulnerabilities associated with unvalidated input variables such as code injection.\r\n\r\nOne way to mitigate this is for PowerShell to do input variable tracking.  Any function or script input variable is considered \"tainted\" or \"untrustworthy\" if it has not been validated.  Validation can occur with an input parameter validation attribute or via custom code that removes the \"untrustworthy\" mark on the variable.  The validation should include any quote escaping needed to prevent code injection.\r\n\r\nIf an \"untrustworthy\" variable is used then this should result in a terminating exception.  It is not clear to me if this should be default behavior or opt-in via strict mode or something.\r\n\r\nThe \"untrustworthy\" mark must follow the variable through manipulations and assignments so that any derived variable is also marked \"untrustworthy\". ",
  "closed_at": null,
  "comments": [
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "Dongbo, I have assigned this to you since you have started work on this.",
      "created_at": "2017-02-01T22:30:33Z",
      "updated_at": "2017-02-01T22:30:33Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "The first part of the work has been checked in our internal source depot. It covers tracking values assigned to global/module scope variables.",
      "created_at": "2017-03-24T18:32:56Z",
      "updated_at": "2017-03-24T18:32:56Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Unsign myself for now as we are asked to focus on the `beta1` milestone issues.",
      "created_at": "2017-03-24T18:33:42Z",
      "updated_at": "2017-03-24T18:33:42Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> One way to mitigate this is for PowerShell to do input variable tracking. \r\n\r\nHow could we detect `input variable`? It would be very expensive to check every variable copied to current scope.",
      "created_at": "2020-07-16T10:41:05Z",
      "updated_at": "2020-07-16T10:41:05Z"
    }
  ],
  "created_at": "2016-12-01T23:13:03Z",
  "number": 2826,
  "state": "open",
  "title": "Input variable tracking and validation",
  "updated_at": "2020-07-16T10:41:26Z"
}