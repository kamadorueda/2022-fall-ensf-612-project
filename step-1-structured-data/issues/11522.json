{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11522",
  "author": "SQLDBAWithABeard",
  "body": "So I have an odd issue and @IISResetMe said to file a bug report so I have. This came about because I changed my VS Code to use pwsh 7 as default, which is a good thing but lead to this issue.\r\n\r\nI was running Pester checks against the dbachecks module as I do frequently. The code that is failing was written 2/3 years ago (by someone else!) and hasn't been touched since. Certainly, if I was re-writing it, there are better ways to do it, but it shows what we think is a change in scope in the ForEach method between preview-2 (where Mathias could not reproduce the issue) and rc1 where I can\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\n$Pattern = 'SPN'\r\n@(Get-Content PATHTOFILE.json | Out-String | ConvertFrom-Json).ForEach{\r\n     $output = $psitem | Where-Object {\r\n        $_.Group -match $Pattern -or $_.Description -match $Pattern -or\r\n        $_.UniqueTag -match $Pattern -or $_.AllTags -match $Pattern -or $_.Type -match $Pattern\r\n    }\r\n}\r\n$output\r\n```\r\n\r\n# In Windows PowerShell\r\n\r\n![image](https://user-images.githubusercontent.com/6729780/71999508-7115cc00-3239-11ea-9e16-ea73aef85e54.png)\r\n\r\n# In PowerShell Core 6.2.3\r\n\r\n![image](https://user-images.githubusercontent.com/6729780/71999664-bf2acf80-3239-11ea-96c8-7186f1321df0.png)\r\n\r\n# Actual behavior in PowerShell 7.0.0-rc.1\r\n\r\nThere is no output\r\n\r\n![image](https://user-images.githubusercontent.com/6729780/71999745-e1245200-3239-11ea-9bbf-eb730f0deba7.png)\r\n\r\nbut this works as expected\r\n\r\n````\r\n$Pattern = 'SPN'\r\n$output = @(Get-Content C:\\Users\\mrrob\\AppData\\Local\\dbachecks\\checks.json | Out-String | ConvertFrom-Json).ForEach{\r\n     $psitem | Where-Object {\r\n        $_.Group -match $Pattern -or $_.Description -match $Pattern -or\r\n        $_.UniqueTag -match $Pattern -or $_.AllTags -match $Pattern -or $_.Type -match $Pattern\r\n    } | Select -Last 1\r\n}\r\n$output\r\n````\r\n![image](https://user-images.githubusercontent.com/6729780/71999844-087b1f00-323a-11ea-8bb0-bb6d9b996bd2.png)\r\n\r\n\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\n pwsh 7.0.0-rc.1>  $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-rc.1\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-rc.1\r\nOS                             Microsoft Windows 10.0.18362\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2020-02-02T00:00:25Z",
  "comments": [
    {
      "author": "scriptingstudio",
      "author_association": "NONE",
      "body": "Less typing\r\n```\r\n@(Get-Content C:\\Users\\mrrob\\AppData\\Local\\dbachecks\\checks.json | \r\nOut-String | ConvertFrom-Json).Where({\r\n    $_.Group, $_.Description, $_.UniqueTag, $_.AllTags, $_.Type -match 'spn'\r\n},Last,1)\r\n```",
      "created_at": "2020-01-08T18:30:57Z",
      "updated_at": "2020-01-08T18:30:57Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Can you provide a simple repro I can run without the external file?  For example, I thought this would be equivalent, but your issue doesn't repro for me:\r\n\r\n```powershell\r\n@(1,2,3).ForEach{ $a = $_ | ? { $_ -gt 2 } }; $a\r\n```\r\n",
      "created_at": "2020-01-08T20:53:52Z",
      "updated_at": "2020-01-08T20:53:52Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Perhaps it's an issue in the ConvertFrom-Json output itself?",
      "created_at": "2020-01-08T21:14:03Z",
      "updated_at": "2020-01-08T21:14:03Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "The issue is that $output variable is first defined in ForEach script block and the block now does seems not executed in _current_ scope.\r\n\r\nIt seems we discussed this but I don't remember the PR.\r\n\r\nLooks like a breaking change. I set the label until we find a PR where we made the change.",
      "created_at": "2020-01-09T07:43:13Z",
      "updated_at": "2020-01-09T07:44:36Z"
    },
    {
      "author": "SQLDBAWithABeard",
      "author_association": "NONE",
      "body": "It's interesting sometimes, when something stops working and you look at the old code and wonder how it ever worked! This is one of those cases. (I blame Chrissy! even though it worked in 3,4,5.1 and 6)\r\n\r\nIt is the **number of objects** within the array that has changed in 7\r\n\r\n![image](https://user-images.githubusercontent.com/6729780/72051198-ab737d80-32ba-11ea-97f9-c7e41f7045be.png)\r\n\r\nSo of course in 7.0.0-rc.1 the value of $output is $null unless it matches the last object\r\n\r\n![image](https://user-images.githubusercontent.com/6729780/72051437-3785a500-32bb-11ea-8555-45fdbd1b8ce6.png)\r\n\r\nApologies, the title is incorrect, as is the premise of the issue although there is still a difference in functionality. I'll leave better people than I to decide how to proceed and go and re-write a function ;-)\r\n\r\n\r\n",
      "created_at": "2020-01-09T08:40:14Z",
      "updated_at": "2020-01-09T08:40:14Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> It is the number of objects within the array that has changed in 7\r\n\r\nI think it works correctly now. If you think no please open new issue with repo steps.",
      "created_at": "2020-01-09T08:51:42Z",
      "updated_at": "2020-01-09T08:51:42Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Yeah, looks like this is the result of the change in how convertfrom-json enumerates by default, no?\r\n\r\nIt looks like there is a reasonable workaround here that functions the same in both old and new versions though!",
      "created_at": "2020-01-09T12:20:53Z",
      "updated_at": "2020-01-09T12:20:53Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Since .Net Core team develop new Json API I believe we will migrate to it in next milestone and I guess there would be some breaking changes again in PowerShell.",
      "created_at": "2020-01-31T13:32:12Z",
      "updated_at": "2020-01-31T13:32:12Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2020-02-02T00:00:23Z",
      "updated_at": "2020-02-02T00:00:23Z"
    }
  ],
  "created_at": "2020-01-08T17:13:24Z",
  "labels": [
    "Issue-Question",
    "WG-Engine",
    "Resolution-Answered",
    "Breaking-Change"
  ],
  "number": 11522,
  "state": "closed",
  "title": " pwsh 7.0.0-rc.1 - Scoping in ForEach method change ?",
  "updated_at": "2020-02-02T00:00:25Z"
}