{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15364",
  "author": "sba923",
  "body": "## Summary of the new feature/enhancement\r\n\r\nOn my Linux boxes `ls -l` _does_ display date and time formats in my preferred way (`yyyy-MM-dd HH:mm`):\r\n\r\n```none\r\nPS\u276f  ls -l /tmp/foo\r\n-rw-rw-r-- 1 sto sto 4 Aug 12  1995 /tmp/foo\r\nPS\u276f  ls -l /tmp/foo --full-time\r\n-rw-rw-r-- 1 sto sto 4 1995-08-12 23:59:59.000000000 +0200 /tmp/foo\r\nPS\u276f  touch /tmp/bar\r\nPS\u276f  ls -l /tmp/bar\r\n-rw-rw-r-- 1 sto sto 0 May  8 16:44 /tmp/bar\r\n\r\n```\r\n\r\nwhereas PowerShell seems to use the locale-imported settings:\r\n\r\n```none\r\nPS\u276f  locale -k LC_TIME\r\nabday=\"Sun;Mon;Tue;Wed;Thu;Fri;Sat\"\r\nday=\"Sunday;Monday;Tuesday;Wednesday;Thursday;Friday;Saturday\"\r\nabmon=\"Jan;Feb;Mar;Apr;May;Jun;Jul;Aug;Sep;Oct;Nov;Dec\"\r\nmon=\"January;February;March;April;May;June;July;August;September;October;November;December\"\r\nam_pm=\"AM;PM\"\r\nd_t_fmt=\"%a %d %b %Y %r %Z\"\r\nd_fmt=\"%m/%d/%Y\"\r\nt_fmt=\"%r\"\r\nt_fmt_ampm=\"%I:%M:%S %p\"\r\nera=\r\nera_year=\"\"\r\nera_d_fmt=\"\"\r\nalt_digits=\r\nera_d_t_fmt=\"\"\r\nera_t_fmt=\"\"\r\ntime-era-num-entries=0\r\ntime-era-entries=\"S\"\r\nweek-ndays=7\r\nweek-1stday=19971130\r\nweek-1stweek=1\r\nfirst_weekday=1\r\nfirst_workday=2\r\ncal_direction=1\r\ntimezone=\"\"\r\ndate_fmt=\"%a %d %b %Y %r %Z\"\r\ntime-codeset=\"UTF-8\"\r\nalt_mon=\"January;February;March;April;May;June;July;August;September;October;November;December\"\r\nab_alt_mon=\"Jan;Feb;Mar;Apr;May;Jun;Jul;Aug;Sep;Oct;Nov;Dec\"\r\nPS\u276f   date\r\nSat 08 May 2021 04:26:03 PM CEST\r\nPS\u276f   (Get-Culture).DateTimeFormat\r\n\r\nAMDesignator                     : AM\r\nCalendar                         : System.Globalization.GregorianCalendar\r\nDateSeparator                    : /\r\nFirstDayOfWeek                   : Sunday\r\nCalendarWeekRule                 : FirstDay\r\nFullDateTimePattern              : dddd, MMMM d, yyyy h:mm:ss tt\r\nLongDatePattern                  : dddd, MMMM d, yyyy\r\nLongTimePattern                  : h:mm:ss tt\r\nMonthDayPattern                  : MMMM d\r\nPMDesignator                     : PM\r\nRFC1123Pattern                   : ddd, dd MMM yyyy HH':'mm':'ss 'GMT'\r\nShortDatePattern                 : M/d/yyyy\r\nShortTimePattern                 : h:mm tt\r\nSortableDateTimePattern          : yyyy'-'MM'-'dd'T'HH':'mm':'ss\r\nTimeSeparator                    : :\r\nUniversalSortableDateTimePattern : yyyy'-'MM'-'dd HH':'mm':'ss'Z'\r\nYearMonthPattern                 : MMMM yyyy\r\nAbbreviatedDayNames              : {Sun, Mon, Tue, Wed\u2026}\r\nShortestDayNames                 : {S, M, T, W\u2026}\r\nDayNames                         : {Sunday, Monday, Tuesday, Wednesday\u2026}\r\nAbbreviatedMonthNames            : {Jan, Feb, Mar, Apr\u2026}\r\nMonthNames                       : {January, February, March, April\u2026}\r\nIsReadOnly                       : True\r\nNativeCalendarName               : Gregorian Calendar\r\nAbbreviatedMonthGenitiveNames    : {Jan, Feb, Mar, Apr\u2026}\r\nMonthGenitiveNames               : {January, February, March, April\u2026}\r\nPS\u276f  gi /tmp/foo\r\n\r\n        Directory: /tmp\r\n\r\n\r\nMode                LastWriteTime         Length Name\r\n----                -------------         ------ ----\r\n-----         8/12/1995  11:59 PM              4 [  foo\r\nPS\u276f  gi /tmp/bar\r\n\r\n        Directory: /tmp\r\n\r\n\r\nMode                LastWriteTime         Length Name\r\n----                -------------         ------ ----\r\n-----          5/8/2021   4:44 PM              0 [  bar\r\n\r\n```\r\n\r\nWe need a way to define the culture settings within PowerShell, independently from the Linux-level locale settings.\r\n\r\nEven something that sets those settings in a volatile way from the profile would be a first step.\r\n\r\nThis is probably related to https://github.com/PowerShell/PowerShell/issues/3833\r\n\r\n",
  "closed_at": "2022-01-27T00:00:41Z",
  "comments": [
    {
      "author": "237dmitry",
      "author_association": "NONE",
      "body": "My system locale is fully `en_US.utf8`. But in $profile:\r\n```\r\n[Threading.Thread]::CurrentThread.CurrentCulture = 'ru-RU'\r\n```\r\n```\r\n $ (Get-Culture).DateTimeFormat\r\n\r\nAMDesignator                     : AM\r\nCalendar                         : System.Globalization.GregorianCalendar\r\nDateSeparator                    : .\r\nFirstDayOfWeek                   : Monday\r\nCalendarWeekRule                 : FirstFourDayWeek\r\nFullDateTimePattern              : dddd, d MMMM yyyy '\u0433'. HH:mm:ss\r\nLongDatePattern                  : dddd, d MMMM yyyy '\u0433'.\r\nLongTimePattern                  : HH:mm:ss\r\nMonthDayPattern                  : d MMMM\r\nPMDesignator                     : PM\r\nRFC1123Pattern                   : ddd, dd MMM yyyy HH':'mm':'ss 'GMT'\r\nShortDatePattern                 : dd.MM.yyyy\r\nShortTimePattern                 : HH:mm\r\nSortableDateTimePattern          : yyyy'-'MM'-'dd'T'HH':'mm':'ss\r\nTimeSeparator                    : :\r\nUniversalSortableDateTimePattern : yyyy'-'MM'-'dd HH':'mm':'ss'Z'\r\nYearMonthPattern                 : MMMM yyyy '\u0433'.\r\nAbbreviatedDayNames              : {\u0432\u0441, \u043f\u043d, \u0432\u0442, \u0441\u0440\u2026}\r\nShortestDayNames                 : {\u0412, \u041f, \u0412, \u0421\u2026}\r\nDayNames                         : {\u0432\u043e\u0441\u043a\u0440\u0435\u0441\u0435\u043d\u044c\u0435, \u043f\u043e\u043d\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u043a, \u0432\u0442\u043e\u0440\u043d\u0438\u043a, \u0441\u0440\u0435\u0434\u0430\u2026}\r\nAbbreviatedMonthNames            : {\u044f\u043d\u0432., \u0444\u0435\u0432\u0440., \u043c\u0430\u0440\u0442, \u0430\u043f\u0440.\u2026}\r\nMonthNames                       : {\u044f\u043d\u0432\u0430\u0440\u044c, \u0444\u0435\u0432\u0440\u0430\u043b\u044c, \u043c\u0430\u0440\u0442, \u0430\u043f\u0440\u0435\u043b\u044c\u2026}\r\nIsReadOnly                       : False\r\nNativeCalendarName               : \u0433\u0440\u0438\u0433\u043e\u0440\u0438\u0430\u043d\u0441\u043a\u0438\u0439 \u043a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u044c\r\nAbbreviatedMonthGenitiveNames    : {\u044f\u043d\u0432., \u0444\u0435\u0432\u0440., \u043c\u0430\u0440., \u0430\u043f\u0440.\u2026}\r\nMonthGenitiveNames               : {\u044f\u043d\u0432\u0430\u0440\u044f, \u0444\u0435\u0432\u0440\u0430\u043b\u044f, \u043c\u0430\u0440\u0442\u0430, \u0430\u043f\u0440\u0435\u043b\u044f\u2026}\r\n\r\n $ get-date\r\n\r\n\u0441\u0443\u0431\u0431\u043e\u0442\u0430, 8 \u043c\u0430\u044f 2021 \u0433. 20:13:10\r\n\r\n```",
      "created_at": "2021-05-08T17:18:06Z",
      "updated_at": "2021-05-08T17:18:06Z"
    },
    {
      "author": "sba923",
      "author_association": "CONTRIBUTOR",
      "body": "> My system locale is fully `en_US.utf8`. But in $profile:\r\n> \r\n> ```\r\n> [Threading.Thread]::CurrentThread.CurrentCulture = 'ru-RU'\r\n> ```\r\n> \r\n> ```\r\n>  $ (Get-Culture).DateTimeFormat\r\n> \r\n> AMDesignator                     : AM\r\n> Calendar                         : System.Globalization.GregorianCalendar\r\n> DateSeparator                    : .\r\n> FirstDayOfWeek                   : Monday\r\n> CalendarWeekRule                 : FirstFourDayWeek\r\n> FullDateTimePattern              : dddd, d MMMM yyyy '\u0433'. HH:mm:ss\r\n> LongDatePattern                  : dddd, d MMMM yyyy '\u0433'.\r\n> LongTimePattern                  : HH:mm:ss\r\n> MonthDayPattern                  : d MMMM\r\n> PMDesignator                     : PM\r\n> RFC1123Pattern                   : ddd, dd MMM yyyy HH':'mm':'ss 'GMT'\r\n> ShortDatePattern                 : dd.MM.yyyy\r\n> ShortTimePattern                 : HH:mm\r\n> SortableDateTimePattern          : yyyy'-'MM'-'dd'T'HH':'mm':'ss\r\n> TimeSeparator                    : :\r\n> UniversalSortableDateTimePattern : yyyy'-'MM'-'dd HH':'mm':'ss'Z'\r\n> YearMonthPattern                 : MMMM yyyy '\u0433'.\r\n> AbbreviatedDayNames              : {\u0432\u0441, \u043f\u043d, \u0432\u0442, \u0441\u0440\u2026}\r\n> ShortestDayNames                 : {\u0412, \u041f, \u0412, \u0421\u2026}\r\n> DayNames                         : {\u0432\u043e\u0441\u043a\u0440\u0435\u0441\u0435\u043d\u044c\u0435, \u043f\u043e\u043d\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u043a, \u0432\u0442\u043e\u0440\u043d\u0438\u043a, \u0441\u0440\u0435\u0434\u0430\u2026}\r\n> AbbreviatedMonthNames            : {\u044f\u043d\u0432., \u0444\u0435\u0432\u0440., \u043c\u0430\u0440\u0442, \u0430\u043f\u0440.\u2026}\r\n> MonthNames                       : {\u044f\u043d\u0432\u0430\u0440\u044c, \u0444\u0435\u0432\u0440\u0430\u043b\u044c, \u043c\u0430\u0440\u0442, \u0430\u043f\u0440\u0435\u043b\u044c\u2026}\r\n> IsReadOnly                       : False\r\n> NativeCalendarName               : \u0433\u0440\u0438\u0433\u043e\u0440\u0438\u0430\u043d\u0441\u043a\u0438\u0439 \u043a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u044c\r\n> AbbreviatedMonthGenitiveNames    : {\u044f\u043d\u0432., \u0444\u0435\u0432\u0440., \u043c\u0430\u0440., \u0430\u043f\u0440.\u2026}\r\n> MonthGenitiveNames               : {\u044f\u043d\u0432\u0430\u0440\u044f, \u0444\u0435\u0432\u0440\u0430\u043b\u044f, \u043c\u0430\u0440\u0442\u0430, \u0430\u043f\u0440\u0435\u043b\u044f\u2026}\r\n> \r\n>  $ get-date\r\n> \r\n> \u0441\u0443\u0431\u0431\u043e\u0442\u0430, 8 \u043c\u0430\u044f 2021 \u0433. 20:13:10\r\n> ```\r\n\r\nThat's OK for you because you want to use the predefined settings for an existing culture.\r\n\r\nBut that's _not_ my case ;-)",
      "created_at": "2021-05-17T19:24:35Z",
      "updated_at": "2021-05-17T19:24:35Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "WG-Engine had a look at this today.\r\n\r\nAs far as we know, this is already possible, although PowerShell doesn't expose _specific_ settings for it. Some options:\r\n\r\n### Override the current culture instance in .NET\r\n\r\nCreate a new CultureInfo object (`[cultureinfo]::new('en-us')` - substitute whatever base culture you want to work from) and set its `DateTimeFormat` property members to behave the way you'd like, then assign the resulting object back to `[cultureinfo]::CurrentCulture` -- this would affect most `$datetime.ToString()` usages, and should also affect formatted output containing dates.\r\n\r\n### Override the default ToString() method in ETS\r\n\r\n```powershell\r\nUpdate-TypeData -TypeName datetime -MemberType ScriptMethod -MemberName ToString -Value { '{0:yyyy-MM-dd HH:mm}' -f $this }\r\n```\r\n\r\nThis will be more \"powershell specific\" in that it won't affect anything in the .NET side of things that is directly calling `ToString()` on DateTime instances, but it should affect pretty much everything in PowerShell.\r\n\r\nBoth these methods should be relatively straightforward to include in a profile script. Whether PowerShell can expose a more straightforward way to do this is a bit of a larger question, but we aren't sure it warrants something like configuration options natively in PowerShell necessarily. ",
      "created_at": "2022-01-21T00:09:12Z",
      "updated_at": "2022-01-21T00:09:12Z"
    },
    {
      "author": "arejay1",
      "author_association": "NONE",
      "body": "Please unsubscribe me from powershell as I am an elderly woman and GitHub does not interest me. Regards from Raylee Heading\n",
      "created_at": "2022-01-21T01:24:05Z",
      "updated_at": "2022-01-21T03:22:01Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2022-01-27T00:00:40Z",
      "updated_at": "2022-01-27T00:00:40Z"
    }
  ],
  "created_at": "2021-05-08T14:48:58Z",
  "number": 15364,
  "state": "closed",
  "title": "Need a means to configure the culture settings from within PowerShell on Linux",
  "updated_at": "2022-01-27T00:00:41Z"
}