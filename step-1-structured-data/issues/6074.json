{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6074",
  "author": "rxdeveloper",
  "body": "The suffix \"1\" in the file extension \"ps1\" really confuse me, and this is always the question I got asked when I introduce Powershell to my friends who are working on Linux command line world. What does \"1\" mean? So is there \"ps2\", \"ps3\" etc. ? Is \"1\" the version number? bla bla\r\n\r\nCan we please seriously take into consideration to rename it back to \".ps\", or just change to a completely new file extension like \".posh\" (POwer SHell). Powershell 6.0 is really a completely new version and is not 100 backward compatible with the existing one, so why don't we just take this the only chance to correct the file extension? Or we can just keep \"ps1\" for the existing powershell < 6.0 and use the new file extension for all new version from 6.0 ?\r\n",
  "closed_at": "2018-01-31T17:42:18Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "We have some Issues about this in the repo you can easy find it.\r\nIn short. The main criterion in PowerShell Core development was and remains the preservation of backward compatibility in order to exclude altogether or even reduce the need to change scripts and modules. \r\nThe current version has many passes, but over time, compatibility will be better as .Net Core APIs and missing cmdlets and modules are ported.\r\nThe backward compatibility also implies that we do not need to change the .ps1 extension. \"1\" comes from PowerShell v1.0 - since then, backward compatibility has been observed.",
      "created_at": "2018-01-31T13:58:18Z",
      "updated_at": "2018-01-31T13:58:18Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "As @iSazonov indicated, this has been discussed many times before (example https://github.com/PowerShell/PowerShell/issues/5904) and I'm sure many more times in the future.   `.ps` is already standard for postscript files, so we can't use that anyways.  At this time, there are no plans to change the extension for compatibility reasons.",
      "created_at": "2018-01-31T17:42:17Z",
      "updated_at": "2018-01-31T17:42:17Z"
    },
    {
      "author": "rxdeveloper",
      "author_association": "NONE",
      "body": "I\u2019m still not very convinced neither backward compatibility is the reason nor having a new extension for the completely new PS Core is really a breaking change. And even if it\u2019s the case, I do believe that fully backward compatibility is not always a good idea. I do believe that we sometime need to empower change to correct the past to make things better. Looking at Java always guided themselves on backward compatibility, and today they always regret that why didn\u2019t they make a breaking change version in the early day to bring support for features such as Reifield Generics. If Google engineers think the same way as you guys then the world would never have the very nice framework Angular 2. I give up and keep going with Ubuntu then, there are lots of command lines options on that world for me to choose what I want, never try again Windows with PS is the only option so you guy can close my issue without bothering bring it into any consideration.",
      "created_at": "2018-02-01T17:30:13Z",
      "updated_at": "2018-02-01T17:35:57Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@uyhung just to be clear, it was considered in the past and discussed heavily internally and where we landed was to continue with ps1 extension.  So don't feel like your feedback isn't heard, but this particular issue has been discussed multiple times in multiple forms and without new data isn't being considered to change.",
      "created_at": "2018-02-01T18:30:40Z",
      "updated_at": "2018-02-01T18:30:40Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@uyhung \r\n>new PS Core is really a breaking change\r\n\r\nAs I said above our goal is to achieve maximum compatibility with Windows PowerShell. With every new release we will be closer to this.",
      "created_at": "2018-02-02T03:46:56Z",
      "updated_at": "2018-02-02T03:46:56Z"
    }
  ],
  "created_at": "2018-01-31T09:03:54Z",
  "number": 6074,
  "state": "closed",
  "title": "Powershell Core the only chance to rename or remove the ugly \"1\" in the file extension",
  "updated_at": "2018-02-02T03:46:56Z"
}