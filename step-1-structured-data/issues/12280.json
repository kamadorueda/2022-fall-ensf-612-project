{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12280",
  "author": "anmenaga",
  "body": "# PR Summary\r\n\r\n`NativeCommandProcessor` and `WinCompat` rely on [`GetWindowsPowerShellModulePath` function](https://github.com/PowerShell/PowerShell/blob/7193800bc2394297fb701ef743b324691237f5d4/src/System.Management.Automation/engine/Modules/ModuleIntrinsics.cs#L1243) to filter out PS-Core-specific module paths so that WindowsPS loads its own version of modules instead of PS-Core versions.\r\nHowever, when several side-by-side PS-Core installations (eg: MSI-installed, daily build, manual zip-based installation, etc...) started from each-other the filtering function does not work because it does not filter out the `$PSHOME\\Modules` of the parent PS process.\r\nThe fix is to add additional check for each component of PSModulePath (that is set for WinPS process) - if it is has `pwsh.exe` in the parent directory, then it is considered another PS Core installation and this location is also filtered out.\r\n\r\nBefore the change:\r\n```powershell\r\nPS C:\\> $PSHome\r\nc:\\PowerShell-7.1.0-preview.1-win-x64\r\n\r\nPS C:\\> E:\\UserA-PowerShell\\src\\powershell-win-core\\bin\\Debug\\netcoreapp5.0\\win7-x64\\publish\\pwsh.exe\r\nPowerShell 7.0.0-preview.6-324-g5f89a10f5b872406a9ac6cb1fcdea8078ea6a4ca\r\n\r\nPS C:\\> $env:psmodulepath -split ';'\r\nC:\\Users\\UserA\\Documents\\PowerShell\\Modules\r\nC:\\Program Files\\PowerShell\\Modules\r\ne:\\UserA-powershell\\src\\powershell-win-core\\bin\\debug\\netcoreapp5.0\\win7-x64\\publish\\Modules\r\nc:\\powershell-7.1.0-preview.1-win-x64\\Modules\r\nC:\\Program Files\\WindowsPowerShell\\Modules\r\nC:\\windows\\system32\\WindowsPowerShell\\v1.0\\Modules\r\n\r\nPS C:\\> powershell.exe -c \"'WinPS PSModulePath:';`$env:PSModulePath -split ';';Get-ChildItem | Out-Null;'';'Module in WinPS loaded from:';(Get-Module Microsoft.PowerShell.Management).Path\"\r\nWinPS PSModulePath:\r\nc:\\powershell-7.1.0-preview.1-win-x64\\Modules\r\nC:\\Program Files\\WindowsPowerShell\\Modules\r\nC:\\windows\\system32\\WindowsPowerShell\\v1.0\\Modules\r\n\r\nModule in WinPS loaded from:\r\nC:\\powershell-7.1.0-preview.1-win-x64\\Modules\\Microsoft.PowerShell.Management\\Microsoft.PowerShell.Management.psd1\r\nPS C:\\> # Module in WinPS loaded from parent PS Core installation\r\n```\r\n\r\nAfter the change:\r\n```powershell\r\nPS C:\\> $PSHome\r\nc:\\PowerShell-7.1.0-preview.1-win-x64\r\n\r\nPS C:\\> E:\\UserA-PowerShell\\src\\powershell-win-core\\bin\\Debug\\netcoreapp5.0\\win7-x64\\publish\\pwsh.exe\r\nPowerShell 7.0.0-preview.6-324-g5f89a10f5b872406a9ac6cb1fcdea8078ea6a4ca\r\n\r\nPS C:\\> $env:psmodulepath -split ';'\r\nC:\\Users\\UserA\\Documents\\PowerShell\\Modules\r\nC:\\Program Files\\PowerShell\\Modules\r\ne:\\UserA-powershell\\src\\powershell-win-core\\bin\\debug\\netcoreapp5.0\\win7-x64\\publish\\Modules\r\nc:\\powershell-7.1.0-preview.1-win-x64\\Modules\r\nC:\\Program Files\\WindowsPowerShell\\Modules\r\nC:\\windows\\system32\\WindowsPowerShell\\v1.0\\Modules\r\n\r\nPS C:\\> powershell.exe -c \"'WinPS PSModulePath:';`$env:PSModulePath -split ';';Get-ChildItem | Out-Null;'';'Module in WinPS loaded from:';(Get-Module Microsoft.PowerShell.Management).Path\"\r\nWinPS PSModulePath:\r\nC:\\Users\\UserA\\Documents\\WindowsPowerShell\\Modules\r\nC:\\Program Files\\WindowsPowerShell\\Modules\r\nC:\\windows\\system32\\WindowsPowerShell\\v1.0\\Modules\r\n\r\nModule in WinPS loaded from:\r\nC:\\windows\\system32\\WindowsPowerShell\\v1.0\\Modules\\Microsoft.PowerShell.Management\\Microsoft.PowerShell.Management.psd1\r\nPS C:\\> # Module in WinPS loaded from WinPS module path\r\n```\r\n\r\n## PR Checklist\r\n\r\n- [X] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [X] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [X] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [X] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [X] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [X] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2020-04-14T06:08:01Z",
  "comments": [
    {
      "author": "anmenaga",
      "author_association": "CONTRIBUTOR",
      "body": "This is needed by #12269 ",
      "created_at": "2020-04-07T23:17:17Z",
      "updated_at": "2020-04-07T23:17:17Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@PoshChan please retry windows",
      "created_at": "2020-04-08T05:58:32Z",
      "updated_at": "2020-04-08T05:58:32Z"
    },
    {
      "author": "PoshChan",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw, successfully started retry of `PowerShell-CI-Windows`",
      "created_at": "2020-04-08T05:58:49Z",
      "updated_at": "2020-04-08T05:58:49Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Do we want to have this in 7.0 Servicing?",
      "created_at": "2020-04-14T06:08:31Z",
      "updated_at": "2020-04-14T06:08:31Z"
    },
    {
      "author": "anmenaga",
      "author_association": "CONTRIBUTOR",
      "body": "Probably yes;\r\n... considering this is essentially a fix for a bug in code that was part of 7.0, so it would be good to have it in servicing. \r\n@SteveL-MSFT thoughts?",
      "created_at": "2020-04-14T19:08:46Z",
      "updated_at": "2020-04-14T19:08:46Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I moved to 7.0.x-Servicing-Consider to consider.",
      "created_at": "2020-04-15T03:16:18Z",
      "updated_at": "2020-04-15T03:16:18Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.1.0-preview.2` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.1.0-preview.2)\n",
      "created_at": "2020-04-23T18:02:59Z",
      "updated_at": "2020-04-23T18:02:59Z"
    }
  ],
  "created_at": "2020-04-07T23:16:19Z",
  "number": 12280,
  "state": "closed",
  "title": "Make GetWindowsPowerShellModulePath compatible with multiple PS installations",
  "updated_at": "2020-04-23T18:02:59Z"
}