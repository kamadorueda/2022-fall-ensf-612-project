{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7733",
  "author": "HumanEquivalentUnit",
  "body": "Write `Get-Content 'file.txt'`, put the cursor left of the filename, try to autocomplete the `-Path` parameter name; it's not in the list.\r\n\r\n```\r\n    # move the cursor to the left of the argument, where the parameter name would be \r\n    Get-Content 'file.txt'\r\n               ^\r\n\r\n    # Write a - and try to autocomplete the -Path parameter name\r\n    Get-Content -{ctrl-space} 'file.txt' \r\n                 ^\r\n    # -Path is not shown in the list of available parameter names\r\n```\r\n\r\nI don't want all the parameter names shown all the time, removing ones which have been used is really useful .. but if it could show the name for whichever parameter is just right next to the cursor and has been bound positionally, that would also be really useful.\r\n\r\nCurrent workaround for long parameter names - try autocomplete, cancel it, comment out the rest of the line, retry autocomplete, choose the name, uncomment the line.\r\n",
  "closed_at": "2022-07-18T21:28:05Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "I am constantly running into this in VS Code as well... It'd be nice to have it be a little more sensible here.\n\nHonestly, I feel as though even just only filtering out already-named parameters would be sufficient. Even if it just listed all the positionally bound ones regardless of where they were, it'd be a huge improvement... But if it could be this sensible, it'd be great! ",
      "created_at": "2018-09-07T11:05:50Z",
      "updated_at": "2018-09-07T11:06:11Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "I think the easiest fix would be to exclude already bound positional parameters *only* when the cursor is at the end of the `CommandAst`.",
      "created_at": "2018-09-07T12:23:09Z",
      "updated_at": "2018-09-07T12:23:09Z"
    },
    {
      "author": "thegooddoctorgonzo",
      "author_association": "NONE",
      "body": "I'd like to see the auto complete list to include all unless the parameter is already explicitly named.",
      "created_at": "2018-09-07T13:07:32Z",
      "updated_at": "2018-09-07T13:07:32Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "I think that might be slightly preferable, if only because there may sometimes be multiple parameters you might want to use positionally or by name, so it's tricky to make an intuitive rule for which ones to hide or not just based on the ones provided, especially where custom functions come into play, which may not always have best practices for parameter ordering, typing, or validation.",
      "created_at": "2018-09-07T13:23:08Z",
      "updated_at": "2018-09-07T13:23:08Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I can repo in Windows PowerShell but can not in PowerShell Core.",
      "created_at": "2018-09-07T14:53:43Z",
      "updated_at": "2018-09-07T14:53:43Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "See below (this is PS Core 6.1 RC1)\r\n![image](https://user-images.githubusercontent.com/32407840/45226307-81f0af00-b28c-11e8-8885-2809bd826b6b.png)\r\n-Path is missing as an option.",
      "created_at": "2018-09-07T14:55:20Z",
      "updated_at": "2018-09-07T14:55:32Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I don't see the problem on Windows.",
      "created_at": "2018-09-07T15:20:23Z",
      "updated_at": "2018-09-07T15:20:23Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "What version of PS Core are you running?\r\n\r\nHere's my version table:\r\n```powershell\r\nPS> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.1.0-rc.1\r\nPSEdition                      Core\r\nGitCommitId                    6.1.0-rc.1\r\nOS                             Microsoft Windows 10.0.17134\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```",
      "created_at": "2018-09-07T15:22:15Z",
      "updated_at": "2018-09-07T15:22:15Z"
    },
    {
      "author": "HumanEquivalentUnit",
      "author_association": "CONTRIBUTOR",
      "body": "With 6.1.0-rc.1 on Server 2016 it reproduces for me; interestingly:\r\n\r\n - If I type `-{ctrl-space}` to see the menu, `-Path` is not there\r\n - If I type `-{tab}` to cycle through the options, `-Path` is not there\r\n - If I type `-Pa{tab}` it *will* autocomplete to `-Path`",
      "created_at": "2018-09-07T18:19:48Z",
      "updated_at": "2018-09-07T18:19:48Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Yep, looks like the code paths change if you start to specify some of the name. Entering `-P{ctrl-space}` shows -Path as an option as well.",
      "created_at": "2018-09-07T18:26:05Z",
      "updated_at": "2018-09-07T18:26:05Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "In my test I haven't PSReadline loaded and I see `-Path` if I type `-{tab}`. With PSReadline loaded the problem is present.",
      "created_at": "2018-09-08T18:33:10Z",
      "updated_at": "2018-09-08T18:33:10Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "Here's an easier repro that should be the same across profiles as long as you don't have a custom `TabExpansion2` function loaded.  Tested in 6.1.0-rc1 Windows\r\n\r\n```powershell\r\n$inputString = 'Get-ChildItem - a'\r\n$completion = [System.Management.Automation.CommandCompletion]::CompleteInput(\r\n    $inputString,\r\n    ($inputString.Length - 2),\r\n    @{})\r\n\r\n$completion.CompletionMatches.CompletionText -match 'path'\r\n# returns nothing\r\n\r\n$inputString = 'Get-ChildItem -'\r\n$completion = [System.Management.Automation.CommandCompletion]::CompleteInput(\r\n    $inputString,\r\n    $inputString.Length,\r\n    @{})\r\n\r\n$completion.CompletionMatches.CompletionText -match 'path'\r\n# returns:\r\n# -Path\r\n# -LiteralPath\r\n```\r\n\r\nAlso note, this happens in VSCode as well, so I wouldn't say PSReadLine is the difference.  Maybe <kbd>Tab</kbd> doesn't call the public API when PSReadLine isn't loaded?",
      "created_at": "2018-09-08T19:45:31Z",
      "updated_at": "2018-09-08T19:50:29Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:This issue was addressed in #17693, which has now been successfully released as `v7.3.0-preview.7`.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.3.0-preview.7)\n",
      "created_at": "2022-08-11T23:59:44Z",
      "updated_at": "2022-08-11T23:59:44Z"
    },
    {
      "author": "HumanEquivalentUnit",
      "author_association": "CONTRIBUTOR",
      "body": "Nice!  Thank you :)",
      "created_at": "2022-08-14T15:08:21Z",
      "updated_at": "2022-08-14T15:08:21Z"
    }
  ],
  "created_at": "2018-09-07T10:42:53Z",
  "labels": [
    "WG-Interactive-PSReadLine",
    "WG-Interactive-IntelliSense",
    "Issue-Discussion",
    "Resolution-Fixed"
  ],
  "number": 7733,
  "state": "closed",
  "title": "Autocomplete parameter name request - please show the name for the positionally bound thing immediately right of the cursor",
  "updated_at": "2022-08-14T15:08:21Z"
}