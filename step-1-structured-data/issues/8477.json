{
  "_url": "https://github.com/PowerShell/PowerShell/issues/8477",
  "author": "mklement0",
  "body": "# Summary of the new feature/enhancement\r\n\r\nWhile `Start-Sleep -MilliSeconds` offers fine-grained control over the sleep duration, it would be convenient not to have two switch parameters just to be able to effectively specify _fractional_ seconds.\r\n\r\nE.g., instead of:\r\n\r\n```powershell\r\nStart-Sleep -MilliSeconds 1400\r\n```\r\n\r\nit would be nice to be able to write:\r\n\r\n```powershell\r\nStart-Sleep 1.4  # wishful thinking; translate into 1,400 msecs.\r\n```\r\n\r\nThis is in line with the `sleep` utility on macOS and Linux, which accepts fractional values (e.g., `sleep 1.4`)\r\n\r\nCurrently, fractional values are _quietly converted to `[int]` values_, which means that _rounding_ is applied, which is not only obscure behavior, but behavior that existing code is unlikely to rely upon.\r\n\r\nAs an aside: `Start-Sleep` is misnamed and should be called `Invoke-Sleep` - see #3990.\r\n\r\n# Proposed technical implementation details (optional)\r\n\r\nChange the data type of the `-Seconds` parameter from `[int]` to `[double]` and simply cast the internal conversion to milliseconds to `(int)`.\r\n\r\n\r\n\r\n\r\n\r\n",
  "closed_at": "2019-01-14T18:04:45Z",
  "comments": [
    {
      "author": "Prototyyppi",
      "author_association": "CONTRIBUTOR",
      "body": "Hi, Can I have a look at this",
      "created_at": "2018-12-23T22:46:38Z",
      "updated_at": "2018-12-23T22:46:38Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@Prototyyppi consider it yours!",
      "created_at": "2018-12-23T23:57:27Z",
      "updated_at": "2018-12-23T23:57:27Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Why double?",
      "created_at": "2018-12-24T03:17:32Z",
      "updated_at": "2018-12-24T03:17:32Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov:\r\n\r\nI simply chose `[double]`, because that's what number literals with a a decimal point (e.g., `1.4`) become in PowerShell.\r\n\r\nNote that that even the current `[int]` type cannot be used in its full range, because internally the value is multiplied by `1000` to get milliseconds, while still using `[int]` for the calculation:\r\n\r\n```powershell\r\nPS> start-sleep ([int]::maxvalue)\r\nStart-Sleep : Cannot validate argument on parameter 'Seconds'. \r\nThe 2147483647 argument is greater than the maximum allowed range of 2147483\r\n```\r\n\r\nNote that `2147483` is simply the result of integer-dividing `[int]::MaxValue]` by `1000`.\r\nIn fact, an explicit validation attribute on the `-Seconds` parameter enforces that: https://github.com/PowerShell/PowerShell/blob/40223881cbc9444c21245884096cc502275cb1ae/src/Microsoft.PowerShell.Commands.Utility/commands/utility/StartSleepCommand.cs#L45\r\n\r\nThat is, the (undocumented) max. sleep duration is currently `24.20:31:23` (24+ days).\r\n\r\nThat probably shouldn't change, irrespective of what non-integral type we choose - unless we feel we need to raise that limit.\r\n\r\nSo, what's your concern re `[double]`?\r\n\r\n",
      "created_at": "2018-12-24T03:34:17Z",
      "updated_at": "2018-12-24T03:34:17Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I am thinking about decimal.",
      "created_at": "2018-12-24T03:42:23Z",
      "updated_at": "2018-12-24T03:42:23Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov: I think that kind of precision is overkill and may give users a false sense of how faithful the actual sleep duration is to the requested one.",
      "created_at": "2018-12-24T03:44:52Z",
      "updated_at": "2018-12-24T03:44:52Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "We could use a validate pattern like `ddddd.ddd`.",
      "created_at": "2018-12-24T03:46:49Z",
      "updated_at": "2018-12-24T03:46:49Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov: What is the benefit of that, and why do you need `[decimal]` for that?",
      "created_at": "2018-12-24T03:53:34Z",
      "updated_at": "2018-12-24T03:53:34Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov: \r\n\r\nTo put it differently: in a way we already have a potential over-promising problem, by supporting `-MilliSeconds` values; e.g.:\r\n\r\n```powershell\r\nPS> (Measure-Command { Start-Sleep -Milliseconds 10 }).TotalMilliseconds\r\n11.7617  # e.g.\r\n```\r\n\r\nI think it's sufficient to _document_ the limits of accuracy and to otherwise make do with `[double]` for `-Seconds`.",
      "created_at": "2018-12-24T04:10:17Z",
      "updated_at": "2018-12-24T04:11:01Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I have no strong preference about type. I am only thinking about formatting (I don't like \"1.1e1\"). \r\nAlso I'd don't add such changes because it complicates backporting scripts. ",
      "created_at": "2018-12-24T05:23:36Z",
      "updated_at": "2018-12-24T05:23:36Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "> I don't like \"1.1e1\"\r\n\r\nNote that `Start-Sleep 1.1e1` already works, because PowerShell happily converts this `[double]` literal to an `[int]` during parameter binding.\r\nPowerShell's flexible automatic type conversions can be confusing at times, but by and large they're very useful - I don't think we should introduce any artificial restrictions here.\r\n\r\n> Also I'd don't add such changes because it complicates backporting scripts.\r\n\r\n_Any_ new feature complicates back-porting - it's the price of innovation.\r\nThere are many cases already where features have been added later (`-Raw`, `-File`, `-Directory`, ...), and there's no way around knowing what features where introduced when if you want to target earlier versions too.\r\n\r\nNow we may have to think about how to \"batch\" new features coupled with semantic versioning so that it doesn't become too complex to keep track of what feature was introduced when, but that is a separate discussion.\r\n\r\n\r\n",
      "created_at": "2018-12-24T14:05:18Z",
      "updated_at": "2018-12-24T14:05:18Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "If \"1.1e1\" works then double will be ok.",
      "created_at": "2018-12-24T14:26:21Z",
      "updated_at": "2018-12-24T14:26:21Z"
    }
  ],
  "created_at": "2018-12-16T23:19:19Z",
  "number": 8477,
  "state": "closed",
  "title": "Make Start-Sleep accept fractional seconds",
  "updated_at": "2019-01-15T03:06:11Z"
}