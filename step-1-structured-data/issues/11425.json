{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11425",
  "author": "pfmoore",
  "body": "# Steps to reproduce\r\n\r\n```powershell\r\n# iex (New-Object Net.WebClient).DownloadString(\"https://gist.github.com/darkoperator/6152630/raw/c67de4f7cd780ba367cccbc2593f38d18ce6df89/instposhsshdev\")\r\n\r\n```\r\n\r\nMinimal example I can find:\r\n```powershell\r\n\r\n# iex (New-Object Net.WebClient).DownloadString(\"https://x\")\r\n```\r\n\r\nIt seems to require a HTTPS URL - any URL, even if not valid. I'm not clear why it's even executing any code, given that this is a comment.\r\n\r\n# Expected behavior\r\n\r\nNothing. This is a **comment** and should not do anything.\r\n\r\n# Actual behavior\r\n\r\nPowershell instance terminates\r\n\r\n# Environment data\r\n\r\nPowershell 7 rc1 MSI downloaded today and installed to the default location.\r\n\r\n```none\r\nPS C:\\Work\\Scratch> $PSVersionTable                          \r\n                                                             \r\nName                           Value                         \r\n----                           -----                         \r\nPSVersion                      7.0.0-rc.1                    \r\nPSEdition                      Core                          \r\nGitCommitId                    7.0.0-rc.1                    \r\nOS                             Microsoft Windows 10.0.17763  \r\nPlatform                       Win32NT                       \r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}         \r\nPSRemotingProtocolVersion      2.3                           \r\nSerializationVersion           1.1.0.1                       \r\nWSManStackVersion              3.0                           \r\n```\r\n",
  "closed_at": "2020-01-07T20:50:22Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "/cc @SteveL-MSFT @PaulHigin this seems rather odd and potentially a serious issue?",
      "created_at": "2019-12-23T16:34:34Z",
      "updated_at": "2019-12-23T16:34:34Z"
    },
    {
      "author": "kilasuit",
      "author_association": "COLLABORATOR",
      "body": "I've tried to replicate however from the steps provided I can't replicate and get the expected behaviour\r\n\r\n\r\n",
      "created_at": "2019-12-23T17:42:43Z",
      "updated_at": "2019-12-23T17:42:43Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "This doesn't repro for me",
      "created_at": "2019-12-23T18:57:49Z",
      "updated_at": "2019-12-23T18:57:49Z"
    },
    {
      "author": "pfmoore",
      "author_association": "NONE",
      "body": "Hmm, I've confirmed on a different machine that it doesn't crash there.\r\n\r\nI'm not clear how a comment can cause any execution of code. Could a virus checker pick up on something like this and error somehow? If so, why would it only happen in Powershell core? It doesn't happen in Windows Powershell 5.1 :-(",
      "created_at": "2019-12-23T19:40:01Z",
      "updated_at": "2019-12-23T19:40:01Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@pfmoore is it possible for you to get a stack trace?  Also try disabling your virus scanner and see if it repros.",
      "created_at": "2019-12-23T20:06:25Z",
      "updated_at": "2019-12-23T20:06:25Z"
    },
    {
      "author": "pfmoore",
      "author_association": "NONE",
      "body": "I probably won't be able to disable the virus scanner (it's a corporate PC and the virus scanner is managed globally) but I can try to get a stack trace if you can explain how I would do that - at the moment all that happens is that the powershell instance terminates with no message or anything.\r\n\r\nI do have visual studio, so if it's possible to run powershell under a debugger using that I can do so.",
      "created_at": "2019-12-23T22:44:06Z",
      "updated_at": "2019-12-23T22:44:06Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@pfmoore yes, Visual Studio will work.  Just follow the steps here: https://docs.microsoft.com/en-us/visualstudio/debugger/debug-using-the-just-in-time-debugger?view=vs-2019\n\n<blockquote><div><strong><a href=\"https://docs.microsoft.com/en-us/visualstudio/debugger/debug-using-the-just-in-time-debugger\">Debug using the Just-In-Time Debugger - Visual Studio</a></strong></div></blockquote>",
      "created_at": "2019-12-23T22:48:57Z",
      "updated_at": "2019-12-23T22:49:00Z"
    },
    {
      "author": "pfmoore",
      "author_association": "NONE",
      "body": "Looks like I mis-remembered. I don't have full Visual Studio on that PC, just the \"build tools\". Is there a way to get a stack trace without full Visual Studio?",
      "created_at": "2019-12-24T07:39:35Z",
      "updated_at": "2019-12-24T07:39:35Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "You can use the free WinDbg: https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/debugger-download-tools\n\n<blockquote><img src=\"https://docs.microsoft.com/en-us/media/logos/logo-ms-social.png\" width=\"48\" align=\"right\"><div><strong><a href=\"https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/debugger-download-tools\">Download Debugging Tools for Windows - WinDbg - Windows drivers</a></strong></div><div>This page provides downloads for the Windows Debugging tools, such as WinDbg.</div></blockquote>",
      "created_at": "2019-12-24T23:44:21Z",
      "updated_at": "2019-12-24T23:44:24Z"
    },
    {
      "author": "pfmoore",
      "author_association": "NONE",
      "body": "Sorry for the delay. I couldn't get the new WinDbg Preview (the store app) to register as a just-in-time debugger, but I did find SysInternals procdump, and registered that.\r\n\r\nHowever, triggering the failure did not result in a dump file - whether that's because Powershell doesn't actually crash, but just terminates with no message, I'm not sure.\r\n\r\nI did check the event viewer, and found the following message in the application log:\r\n\r\n> UK03306 ran C:\\Program Files\\PowerShell\\7-preview\\pwsh.exe. The Trojan named AMSI-FHR!68F3442B9E26 was detected and blocked.\r\n\r\nSo it looks like it may be a false report from the virus checker. But I'm still unclear why this is only happening in Powershell Core, and not in the default Windows Powershell.",
      "created_at": "2020-01-03T10:21:24Z",
      "updated_at": "2020-01-03T10:21:24Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I'm guessing your virus checker is killing the process so it's not actually a crash.",
      "created_at": "2020-01-07T20:50:22Z",
      "updated_at": "2020-01-07T20:50:22Z"
    },
    {
      "author": "pfmoore",
      "author_association": "NONE",
      "body": "Sorry, I should have said that, yes, agreed.",
      "created_at": "2020-01-07T20:51:52Z",
      "updated_at": "2020-01-07T20:52:01Z"
    }
  ],
  "created_at": "2019-12-23T16:00:07Z",
  "labels": [
    "Issue-Question",
    "Resolution-External"
  ],
  "number": 11425,
  "state": "closed",
  "title": "Comment can crash Powershell Core 7 rc1",
  "updated_at": "2020-01-07T20:52:01Z"
}