{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9814",
  "author": "bergmeister",
  "body": "# Steps to reproduce\r\n\r\nRunning the PSScriptAnalyzer test suite with PowerShell 7-preview1 has exposed a feature that does not seem to be implemented in current and old versions of PowerShell but starting with PowerShell7-preview1, the cmdlet throws an error\r\n\r\n```powershell\r\nfunction global:Get-SimpleFunction { }\r\nGet-Command global:Get-SimpleFunc*\r\n```\r\n\r\n# Expected behavior\r\n\r\nIn PowerShell 6.2.1 (and 5.1), `Get-Command` does not return anything (which I think is a bug or unfinished feature) but at least no error should be thrown. Ideally the cmdlet should also be returned.\r\n\r\n# Actual behavior\r\n\r\nStarting with PowerShell7-preview1, the cmdlet throws an error, which definitely is a regression and will affect users of PSScriptAnalyzers (because PSSA issues `Get-Command` calls under the hood for some of its analysis of the loaded user's code)\r\n```none\r\nGet-Command : Cannot find drive. A drive with the name 'global' does not exist.\r\nAt line:1 char:42\r\n+ ... ion global:Get-SimpleFunction { }; Get-Command global:Get-SimpleFunc*\r\n+                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : ObjectNotFound: (global:String) [Get-Command], DriveNotFoundException\r\n+ FullyQualifiedErrorId : DriveNotFound,Microsoft.PowerShell.Commands.GetCommandCommand\r\n```\r\n\r\nThe problem is not so much that no object is being returned but rather that now an error is thrown. We need to review if this is by design or not.\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-preview.1\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-preview.1\r\nOS                             Microsoft Windows 10.0.17763\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2019-06-06T18:35:16Z",
  "comments": [
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "Looks like this is a dupe of (or related to) #9396.",
      "created_at": "2019-06-04T15:01:24Z",
      "updated_at": "2019-06-04T15:01:24Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "Here is the full stack trace btw (when built from source on latest master commit `f222a686c5710ce31cbfd77c699e1c1d635a1091`), it throws from here\r\nhttps://github.com/PowerShell/PowerShell/blob/bd6fdae73520931f0d27a29d6290e18761772141/src/System.Management.Automation/engine/SessionStateDriveAPIs.cs#L485-L494\r\nThe [private PSDriveInfo GetDrive(string name, bool automount)](https://github.com/PowerShell/PowerShell/blob/bd6fdae73520931f0d27a29d6290e18761772141/src/System.Management.Automation/engine/SessionStateDriveAPIs.cs#L431) is being called with `name=\"global\"` and `automount=false`.\r\n![image](https://user-images.githubusercontent.com/9250262/58898765-3112c780-86f3-11e9-96cb-b6a1daf4ca08.png)\r\n",
      "created_at": "2019-06-04T16:58:52Z",
      "updated_at": "2019-06-04T17:04:34Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@bergmeister Please test with https://github.com/PowerShell/PowerShell/pull/9793 - is it resolve the issue too?",
      "created_at": "2019-06-04T17:22:06Z",
      "updated_at": "2019-06-04T17:22:06Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov Yes, PR #9793 indeed seems to fix it (I downloaded the zip of the build to test it)",
      "created_at": "2019-06-04T18:10:43Z",
      "updated_at": "2019-06-04T18:10:43Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@bergmeister What do you mean by `fix`\r\n\r\nWith #9793 this is what I get\r\n```\r\nPS > function global:foo {}\r\nPS > gcm global:foo\r\ngcm : The term 'global:foo' is not recognized as the name of a cmdlet, function, script file, or operable program.\r\nCheck the spelling of the name, or if a path was included, verify that the path is correct and try again.\r\nAt line:1 char:1\r\n+ gcm global:foo\r\n+ ~~~~~~~~~~~~~~\r\n+ CategoryInfo          : ObjectNotFound: (global:foo:String) [Get-Command], CommandNotFoundException\r\n+ FullyQualifiedErrorId : CommandNotFoundException,Microsoft.PowerShell.Commands.GetCommandCommand\r\n```\r\n\r\nAnd the same error in 7.0.0-preview.1 before his fix.",
      "created_at": "2019-06-04T19:54:06Z",
      "updated_at": "2019-06-04T19:55:43Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "Perhaps https://github.com/PowerShell/PowerShell/pull/9623 fixed this?",
      "created_at": "2019-06-04T19:57:00Z",
      "updated_at": "2019-06-04T19:57:00Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "@TravisEz13 By 'fixed', I meant that the example given in this issue does not throw any more:\r\n```\r\nfunction global:Get-SimpleFunction { }\r\nGet-Command global:Get-SimpleFunc*\r\n```\r\nBut you are right that your example still throws, removing the `*` at the end of my example (i.e. `Get-Command global:Get-SimpleFunc` makes it throw again",
      "created_at": "2019-06-05T21:18:24Z",
      "updated_at": "2019-06-05T21:18:24Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@bergmeister I'm going to close this issue.  I think the issue is fixed.  Feel free to update the test I added.",
      "created_at": "2019-06-05T21:22:21Z",
      "updated_at": "2019-06-05T21:22:21Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "@TravisEz13  I just pulled the latest changes from master (f5e3de036e84f37820eb1dac635c337f8fc17718) and your use case is not fixed (but the one that I raised in this issue)\r\n```\r\nPS C:\\Users\\cberg\\git\\PowerShell> function global:foo {}\r\nPS C:\\Users\\cberg\\git\\PowerShell> gcm global:foo\r\ngcm : The term 'global:foo' is not recognized as the name of a cmdlet, function, script file, or operable program.\r\nCheck the spelling of the name, or if a path was included, verify that the path is correct and try again.\r\nAt line:1 char:1\r\n+ gcm global:foo\r\n+ ~~~~~~~~~~~~~~\r\n+ CategoryInfo          : ObjectNotFound: (global:foo:String) [Get-Command], CommandNotFoundException\r\n+ FullyQualifiedErrorId : CommandNotFoundException,Microsoft.PowerShell.Commands.GetCommandCommand\r\n\r\nPS C:\\Users\\cberg\\git\\PowerShell> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-preview.1\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-preview.1-18-gf5e3de036e84f37820eb1dac635c337f8fc17718\r\nOS                             Microsoft Windows 10.0.17763\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```",
      "created_at": "2019-06-05T21:29:08Z",
      "updated_at": "2019-06-05T21:30:18Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Reopen until we fix the second issue.",
      "created_at": "2019-06-06T03:22:52Z",
      "updated_at": "2019-06-06T03:22:52Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "I verified this is the same functionality as in 5.1",
      "created_at": "2019-06-06T18:35:14Z",
      "updated_at": "2019-06-06T18:35:14Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "Please open a feature request if you would like new functionality.",
      "created_at": "2019-06-06T18:35:40Z",
      "updated_at": "2019-06-06T18:35:40Z"
    }
  ],
  "created_at": "2019-06-04T06:56:56Z",
  "labels": [
    "Issue-Question",
    "Resolution-Fixed"
  ],
  "number": 9814,
  "state": "closed",
  "title": "Get-Command: Using global function scope not working and starts throwing in PowerShell7-preview1",
  "updated_at": "2019-06-07T03:32:22Z"
}