{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15680",
  "author": "xmha97",
  "body": "### Prerequisites\n\n- [X] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6).\n\n### Steps to reproduce\n\n![image](https://user-images.githubusercontent.com/23485114/123624139-76971580-d823-11eb-9ccc-11881e3e0369.png)\n\n### Expected behavior\n\n```console\nWrite \"Access is denied.\" (like Command Prompt) because `C:\\$bitmap` exist.\n```\n\n\n### Actual behavior\n\n```console\nSet-Location: Cannot find path 'C:\\$bitmap' because it does not exist.\n```\n\n\n### Environment data\n\n```powershell\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.3\r\nPSEdition                      Core\r\nGitCommitId                    7.1.3\r\nOS                             Microsoft Windows 10.0.17763\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\n```\n\n\n### Visuals\n\n_No response_",
  "closed_at": "2022-01-16T21:00:40Z",
  "comments": [
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "@PowerShell/area-cmdlets-management decided that this can be fixed by handling an access denied exception and giving a more descriptive error message. This isn't a top priority, but we would accept it from the community as an `Up-for-grabs` issue",
      "created_at": "2021-07-07T17:20:13Z",
      "updated_at": "2021-07-07T17:20:13Z"
    },
    {
      "author": "ayousuf23",
      "author_association": "CONTRIBUTOR",
      "body": "@joeyaiello I am interested in resolving this issue. Please let me know which file contains the relevant code for `Set-Location`",
      "created_at": "2022-01-14T10:21:23Z",
      "updated_at": "2022-01-14T10:21:23Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@ayousuf23 Joey left the project.\r\n\r\nThe code you ask https://github.com/PowerShell/PowerShell/blob/186d6be47d858460a3d0ba6abd81f779cb633b55/src/Microsoft.PowerShell.Commands.Management/commands/management/Navigation.cs#L714",
      "created_at": "2022-01-14T11:26:47Z",
      "updated_at": "2022-01-14T11:26:47Z"
    },
    {
      "author": "ayousuf23",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov How I can a deny access to a particular folder in Windows? I tried to do so using the security tab, but PowerShell was still able to access the folder.",
      "created_at": "2022-01-14T12:45:15Z",
      "updated_at": "2022-01-14T12:45:15Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@ayousuf23  You could try to use an existing system folder for the test.",
      "created_at": "2022-01-14T16:06:22Z",
      "updated_at": "2022-01-14T16:06:22Z"
    },
    {
      "author": "ayousuf23",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov I did some digging and I found that when `Set-Location 'C:\\$bitmap'` is called, PowerShell tries to check if the file exists. Eventually, a method called `Microsoft.PowerShell.Commands.FileSystemProvider.GetFileSystemInfo` is called. \r\n\r\nThis method creates a new `System.IO.FileInfo` object. Unfortunately, `System.IO` is not throwing an exception when the `System.IO.FileInfo` object is created. Hence, the method checks the object's attributes, sees that it does not exist, and returns null. Thus, PowerShell thinks the path does not exist.\r\n\r\nI think what should happen is that  `System.IO.FileInfo` should throw an exception when a path with security restrictions is trying to be accessed, but that is not occurring.",
      "created_at": "2022-01-15T11:14:01Z",
      "updated_at": "2022-01-15T11:14:53Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I think we fall in misunderstanding.\r\n![image](https://user-images.githubusercontent.com/22290914/149633420-5abbe929-ef9a-4cf1-aabe-2d6784d1050a.png)\r\n\r\nIn typical scenario we can \"see\" a folder (`dir -Hidden c:\\rec*`) but haven't access to its content. The screenshot demonstrates this. It is how Windows permissions work.\r\n\r\nAs for `C:\\$bitmap`, it is system hidden NTFS folder - nobody can see and access it. (You can see it only in low level file system traces).\r\n\r\nSo I close the issue.",
      "created_at": "2022-01-15T18:37:43Z",
      "updated_at": "2022-01-15T18:37:43Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as by-design and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2022-01-16T21:00:39Z",
      "updated_at": "2022-01-16T21:00:39Z"
    }
  ],
  "created_at": "2021-06-28T10:46:46Z",
  "labels": [
    "Issue-Bug",
    "Resolution-By Design",
    "WG-Cmdlets-Management",
    "Hacktoberfest-Accepted",
    "Area-FileSystem-Provider"
  ],
  "number": 15680,
  "state": "closed",
  "title": "Provide more descriptive error message for `Set-Location` permissions error",
  "updated_at": "2022-01-16T21:00:40Z"
}