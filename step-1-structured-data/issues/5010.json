{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5010",
  "author": "Gimly",
  "body": "Here's a first working draft of implementation for adding a Power operator, as discussed in issue #3603.\r\n\r\nI decided to go with the ** option, as it's, I think, the most common power operator in the different languages that has it. For now, I've implemented only the operator working on numeric values, as a binary operator.\r\n\r\nI have tried to follow the same type of implementation as how the multiply operator. It's just a draft and I'm willing to improve it until it's perfect and can me merged.",
  "closed_at": "2017-10-12T01:03:05Z",
  "comments": [
    {
      "author": "msftclas",
      "author_association": "NONE",
      "body": "[![CLA assistant check](https://cla.opensource.microsoft.com/pull/badge/signed)](https://cla.opensource.microsoft.com/PowerShell/PowerShell?pullRequest=5010) <br/>All CLA requirements met.",
      "created_at": "2017-10-04T21:09:51Z",
      "updated_at": "2017-10-04T21:11:06Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "`[Math]` contains many functions - I don't see the point of starting the process of moving them into PowerShell language.",
      "created_at": "2017-10-10T06:52:00Z",
      "updated_at": "2017-10-10T06:52:00Z"
    },
    {
      "author": "RichardSiddaway",
      "author_association": "NONE",
      "body": "Agreed that this doesn't seem worth the effort. if the exponential operator is being added why not the square root and trigonometric operators - SIN, COS, TAN etc.  This functionality is readily available through [math] so why add it to PowerShell",
      "created_at": "2017-10-10T13:27:10Z",
      "updated_at": "2017-10-10T13:27:10Z"
    },
    {
      "author": "Gimly",
      "author_association": "CONTRIBUTOR",
      "body": "While I agree that we already have access relatively easily to pow with the `[Math]::Pow()`, it makes the code much less readable when doing mathematical operations.\r\n\r\n```PowerShell\r\n$cSquared = [Math]::Pow($a, 2.0) + [Math]::Pow($b, 2.0)\r\n```\r\nis, in my opinion, much less readable than\r\n```PowerShell\r\n$cSquared = $a^2.0 + $b^2.0\r\n```\r\nFor me, the fact that C# or C++ doesn't have the operator isn't that good of an argument either. I'm sure a lot of people are missing it in those languages. I definitely did at multiple occasion when writing C# code.\r\n\r\nBut, I also agree that it might just bring more demand for other mathematical operators and I'm not sure if it's really PowerShell's main goal. In the end, the amount of projects who are doing advanced mathematics with PowerShell is probably very low.\r\n\r\nAnyway, I did those changes as a small exercise to discover PowerShell's code ans also because the issue was marked with the Hacktoberfest label \ud83d\ude04. It was very instructive for me, so no hurt feelings if you decide that in the end it's not interesting to add this operator. I understood when I started that it was going to create philosophical questioning about the use of the operator (it had already started in the issue).\r\n\r\nIf you do decide that you'd like to have the operator, I'll be happy to update my code and fix all the issues that @lzybkr gave me in the feedback.",
      "created_at": "2017-10-10T13:52:08Z",
      "updated_at": "2017-10-10T13:53:22Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee reviewed this and decided not to add additional math operators.  Some of the concerns:\r\n  - prefer to have one canonical way `Math.Pow()` rather than allowing multiple ways of doing the same thing\r\n  - adding this operator incurs the cost of spending more time reviewing the semantics and setting precedent for other possible operators\r\n  - `Math.Pow()` seems sufficient for the limited expected usage\r\n\r\nWe thank @Gimly for taking the time working on this, but perhaps pick up a different `Hacktoberfest` issue :)",
      "created_at": "2017-10-12T01:03:05Z",
      "updated_at": "2017-10-12T01:03:05Z"
    },
    {
      "author": "Gimly",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT thanks, I will definitely try my luck on a different Hacktoberfest issue, hopefully one a bit less controversial \ud83d\ude04.",
      "created_at": "2017-10-12T13:06:13Z",
      "updated_at": "2017-10-12T13:06:13Z"
    }
  ],
  "created_at": "2017-10-04T21:09:40Z",
  "number": 5010,
  "state": "closed",
  "title": "Implement exponent operator",
  "updated_at": "2017-10-12T13:06:13Z"
}