{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11923",
  "author": "mklement0",
  "body": "The PSv3+ unified handling of scalars and collections brought the ability to both call `.Count` on a scalar and index into a scalar (with only `[0]` and `[-1]` being meaningful indices); e.g.:\r\n`(42).Count` and `(42)[0]`).\r\n\r\nCurrently, if a type has a type-native indexer, the intrinsic (engine-built-in) positional indexer is _shadowed_ (preempted), which is generally reasonable.\r\n\r\nHowever, this also happens when the type-native indexer expects a data type _other_ than `[int]`  or `[object]`, such as `XmlElement`'s `[string]`-based indexer for accessing child elements _by name_.\r\n\r\nThe proposal is to still expose the automatic positional indexer in such cases, in the interest of the unified handling of scalars and collections that PowerShell generally provides:\r\n\r\n* If the type-native indexer is `object`- or `int`-typed, it must of necessity preempt the PowerShell-provided automatic positional indexer (as is the case with `string` and `hashtable`)\r\n\r\n* Otherwise:\r\n\r\n   * `int` arguments should select the automatic positional indexer, \r\n   * whereas type-appropriate arguments would select the type-native indexer\r\n\r\nExample:\r\n\r\nThe following, which currently fails, should work: The `[int]` indexer argument should select PowerShell's automatic positional indexer.\r\n\r\n```powershell\r\n# Currently fails, because [0] is - pointlessly - passed to the \r\n# [<string>] indexer of XmlElement\r\n([xml] '<foo><bar id=\"1\"/></foo>').foo.bar[0].id | Should -Be '1'\r\n\r\n# This already works, because PowerShell returns the *2* 'bar' child elements a\r\n# as an array, where positional indexing works.\r\n([xml] '<foo><bar id=\"1\"/><bar/></foo>').foo.bar[0].id | Should -Be '1'\r\n```\r\n\r\nExposing the automatic positional indexer in this scenario would allow processing XML documents the same, irrespective of whether situationally only a single or multiple elements with a given name are present.\r\n\r\n",
  "closed_at": null,
  "comments": [],
  "created_at": "2020-02-21T23:19:11Z",
  "labels": [
    "Issue-Enhancement",
    "WG-Engine"
  ],
  "number": 11923,
  "state": "open",
  "title": "Expose the intrinsic indexer also for scalars of types with native indexers, if the index types don't conflict",
  "updated_at": "2021-01-02T15:04:20Z"
}