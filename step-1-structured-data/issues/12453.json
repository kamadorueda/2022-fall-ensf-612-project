{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12453",
  "author": "SteveL-MSFT",
  "body": "# Summary of the new feature/enhancement\r\n\r\nThis affects interactive PSRemoting.  Currently, when running a native command, PowerShell will create that process and redirect stdin/stdout.  However, for commands that bypass stdin/stdout (like calling getc() in native code such as cmd.exe), this doesn't work at all.\r\n\r\n# Proposed technical implementation details (optional)\r\n\r\nAdded in Windows 10 (RS5+) is the new pseudoconsole APIs (https://docs.microsoft.com/en-us/windows/console/creating-a-pseudoconsole-session).  We should be able to leverage that receiving all input and output to send back over PSRemoting.",
  "closed_at": null,
  "comments": [
    {
      "author": "bpayette",
      "author_association": "CONTRIBUTOR",
      "body": "This should be exciting!",
      "created_at": "2020-04-24T00:48:41Z",
      "updated_at": "2020-04-24T00:48:41Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Fir reference https://github.com/PowerShell/PowerShell/issues/7894",
      "created_at": "2020-04-24T11:03:18Z",
      "updated_at": "2020-04-24T11:03:18Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Can https://github.com/PowerShell/Win32-OpenSSH/issues/1545 block this?",
      "created_at": "2020-04-24T11:40:11Z",
      "updated_at": "2020-04-24T11:41:07Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Make sense to ask on .Net Runtime repo to enhance Process class to support ConPTY redirections?",
      "created_at": "2020-04-24T11:49:02Z",
      "updated_at": "2020-04-24T11:49:02Z"
    }
  ],
  "created_at": "2020-04-23T20:18:51Z",
  "labels": [
    "Issue-Enhancement",
    "WG-Remoting"
  ],
  "number": 12453,
  "state": "open",
  "title": "Windows: use the ConPTY APIs with native commands",
  "updated_at": "2020-08-20T18:15:51Z"
}