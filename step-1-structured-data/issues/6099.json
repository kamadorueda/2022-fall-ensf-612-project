{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6099",
  "author": "gpduck",
  "body": "## PR Summary\r\n\r\nMoves the working directory script to execute during the elevated portion of the install process to prevent access denied errors during install.\r\n\r\nFixes #6095\r\n\r\n## PR Checklist\r\n\r\nNote: Please mark anything not applicable to this PR `NA`.\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - [x] Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [NA] User facing [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - [NA] Issue filed - Issue link:\r\n- [x] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [NA] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n    - [NA] [Add `[feature]` if the change is significant or affects feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` to the beginning of the title and remove the prefix when the PR is ready.\r\n",
  "closed_at": "2018-03-26T19:16:12Z",
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "cc @bergmeister ",
      "created_at": "2018-02-05T01:39:12Z",
      "updated_at": "2018-02-05T01:39:12Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "I have tested this works when run via GUI or quiet install. However, I have some comments about the code:\r\n- The custom actions could also have a `Return=\"check\"` attribute that inspects the exit code and would make the installer fail in case there is a problem. I will leave this decision up to you @SteveL-MSFT ",
      "created_at": "2018-02-05T12:50:48Z",
      "updated_at": "2018-02-05T12:57:01Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@bergmeister agree that we should leverage the exit code check and fail the install\r\n",
      "created_at": "2018-02-09T22:32:26Z",
      "updated_at": "2018-02-09T22:32:26Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "I think the exit code check should be a separate issue.  There are many things to consider, such as what is [Windows Script Host is disabled](https://www.techwalla.com/articles/how-to-disable-windows-script-host)",
      "created_at": "2018-02-09T23:36:23Z",
      "updated_at": "2018-02-09T23:36:23Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Before the change MSI package fail but not revert (leave already copied files).",
      "created_at": "2018-02-10T11:38:01Z",
      "updated_at": "2018-02-10T11:38:01Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@iSazonov \r\n> Before the change MSI package fail but not revert (leave already copied files).\r\n\r\nAre you saying after this change, if the script fails the package fails?\r\n\r\nIf so, perhaps we should revert this.  Scripts can be unreliable and making it a critical part of the package doesn't seem like a good idea.  ",
      "created_at": "2018-02-12T20:32:31Z",
      "updated_at": "2018-02-12T20:34:04Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "We cannot predict what will cause the installer to crash. We can only confidently say that our installer will be enhanced in the future and such crash reasons will become more.\r\n\r\nIn any case, we need to think about implementing `rollback action`. Sample https://medium.com/@thehenrytsai/uninstall-vs-rollback-custom-action-in-wix-beed702d45c1",
      "created_at": "2018-02-13T06:21:49Z",
      "updated_at": "2018-02-13T06:21:49Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "We can predict it.  Script actions have a high historical failure rate due to factors unrelated to the script",
      "created_at": "2018-02-13T18:00:51Z",
      "updated_at": "2018-02-13T18:00:51Z"
    },
    {
      "author": "gpduck",
      "author_association": "CONTRIBUTOR",
      "body": "So based on my research, the options are:\r\n\r\n1. WSH based script\r\n1. Custom action as C# plugin wrapping COM components for editing shortcuts\r\n1. Manually create shortcut (which would probably be a custom plugin)\r\n\r\nI'm open to other suggestions as well?",
      "created_at": "2018-02-13T19:42:21Z",
      "updated_at": "2018-02-13T19:42:21Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "First of all, I think we should revert commit [795c61125a531d62784e299a3159844b733e8a91](https://github.com/PowerShell/PowerShell/commit/795c61125a531d62784e299a3159844b733e8a91) in the meantime (that's what source control is for), especially given the upcoming pre-release [next week on 2/22](https://twitter.com/Steve_MSFT/status/963455820640919552).\r\nMy opinion on error handling (and I came up to this conclusion after thinking of the similar problem that I have with `Enable-PSRemoting` in my current PR 5999)\r\n- If the successful execution of an installer script is critical and if the failure messes up the installation, then the error code must be respected and the installation should fail (and also rollback the custom action if required)\r\n- If the execution of an installer script is optional and a failure has no effect on the installation apart from the fact that the optional feature could not be installed, then not returning the exit code and continuing the install makes sense. An informal message is nice to have but hard to achieve because it requires stuff like e.g. C# based custom actions.\r\nLet me know what you think.\r\n\r\nAbout the specific problem: although it's hard to bootstrap custom C# actions the first time, I think they would be very welcome and helpful for future installer features (like e.g. PR 5999)",
      "created_at": "2018-02-13T20:18:04Z",
      "updated_at": "2018-02-13T20:20:20Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I don't think plugin custom actions are more reliable than scripts. For example, if we lock a system using a GPO or third-party security product, we will get the same installation error. However, if we want an advanced installer, then definitely we should stick to one way of creating extensions and handling errors and I believe it will be C#. In this case, we must also have the installation tests.\r\n\r\nI think that first we need to define _our strategy_.\r\nIf we are very conservative, it will require minimal effort.\r\nIf we want to make the installer very advanced, it will require a lot of development and support costs. I'm not sure this is urgently needed right now. I would postpone this until the transition to .Net Core 2.1 version that might require important changes to our installation packages for all platforms.\r\n",
      "created_at": "2018-02-14T04:39:21Z",
      "updated_at": "2018-02-14T04:39:21Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@bergmeister @iSazonov \r\nI agree with @bergmeister about\r\n\r\n1. reverting the previous commit\r\n1. the general description of how robust the custom action will be.\r\n1. that optional custom actions should be implemented as a compiled custom action\r\n1. a C# based custom action infrastructure would be good to have (as long as it can be dotnet core based)",
      "created_at": "2018-02-14T17:34:40Z",
      "updated_at": "2018-02-14T17:34:40Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "@TravisEz13 Commit [795c61125a531d62784e299a3159844b733e8a91](https://github.com/PowerShell/PowerShell/commit/795c61125a531d62784e299a3159844b733e8a91) is still not reverted. Is someone stuck inside vim? \ud83d\ude1c\r\nhttps://stackoverflow.blog/2017/05/23/stack-overflow-helping-one-million-developers-exit-vim/",
      "created_at": "2018-02-20T22:05:48Z",
      "updated_at": "2018-02-20T22:06:38Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "#6203 has been submitted",
      "created_at": "2018-02-20T23:24:43Z",
      "updated_at": "2018-02-20T23:24:43Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@gpduck Please resolve merge conflicts.",
      "created_at": "2018-02-24T05:52:12Z",
      "updated_at": "2018-02-24T05:52:12Z"
    },
    {
      "author": "stale[bot]",
      "author_association": "NONE",
      "body": "This PR has been automatically marked as stale because it has not had activity in the last 30 days. It will be closed if no further activity occurs within 10 days. Thank you for your contributions.\n",
      "created_at": "2018-03-26T06:37:04Z",
      "updated_at": "2018-03-26T06:37:04Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "I think we can close this for now.  See https://github.com/PowerShell/PowerShell/pull/6099#issuecomment-365684639",
      "created_at": "2018-03-26T19:16:12Z",
      "updated_at": "2018-03-26T19:16:12Z"
    }
  ],
  "created_at": "2018-02-03T23:19:27Z",
  "number": 6099,
  "state": "closed",
  "title": "Fix shortcut script when installed with UAC on",
  "updated_at": "2018-03-26T19:16:12Z"
}