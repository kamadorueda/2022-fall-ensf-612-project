{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4923",
  "author": "PetSerAl",
  "body": "[This lines](https://github.com/PowerShell/PowerShell/blob/master@%7B2017-09-26%7D/src/System.Management.Automation/engine/MshCmdlet.cs#L687-L690):\r\n```csharp\r\npublic Collection<PSObject> InvokeScript(string script, params object[] args)\r\n{\r\n    return InvokeScript(script, true, PipelineResultTypes.None, args);\r\n}\r\n``` \r\nPass `args` parameter into `input` parameter of called function, thus mixing them up.\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\n$ExecutionContext.SessionState.InvokeCommand.InvokeScript('\"`$args:($args); `$input:($input)\"', 1, 2, 3)\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```none\r\n$args:(1 2 3); $input:()\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n```none\r\n$args:(); $input:(1 2 3)\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\nTested in v2.0 and v5.1.15063.608",
  "closed_at": "2017-10-05T04:33:28Z",
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Good find!  This looks like just a mistake in the code.",
      "created_at": "2017-09-30T17:36:24Z",
      "updated_at": "2017-09-30T17:36:24Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee - Adding `Breaking-Change` because it is. Were call sites reviewed to evaluate impact? On the surface, it feels low risk, but it's hard to evaluate without knowing where the api is actually used.",
      "created_at": "2017-10-03T00:51:57Z",
      "updated_at": "2017-10-03T00:51:57Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Reopen to track previous question.",
      "created_at": "2017-10-04T06:28:25Z",
      "updated_at": "2017-10-04T06:28:25Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@lzybkr in our code, most calls are using InvokeScript(script) and the rest don't call this specific overload.  Unfortunately, `InvokeScript` is a pretty common method name so a search on GitHub returns many results, but most I looked at briefly on the first 4 pages aren't PowerShell related.",
      "created_at": "2017-10-04T17:26:40Z",
      "updated_at": "2017-10-04T17:26:40Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "You need to add an extension when searching - much more useful results:\r\n\r\nhttps://github.com/search?utf8=%E2%9C%93&q=InvokeScript+extension%3Aps1&type=Code\r\nhttps://github.com/search?utf8=%E2%9C%93&q=InvokeScript+extension%3Apsm1&type=Code\r\n\r\nI see many calls to what I think is the same api (mostly in psm1 files), but the parameter in question is always `$null`. I only sampled the results though.",
      "created_at": "2017-10-04T18:45:32Z",
      "updated_at": "2017-10-04T18:45:32Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@lzybkr As best I could tell based on your search results, the [Reflection](https://www.powershellgallery.com/packages/Reflection/4.8) module uses InvokeScript() passing in input/args.  From my basic test, it appears to work fine with the change.  Are you ok to close this?",
      "created_at": "2017-10-04T20:20:50Z",
      "updated_at": "2017-10-04T20:20:50Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "That module doesn't call the overload that was fixed, so it's not affected by the change.\r\nI'm fine with closing as long as the change is documented properly.",
      "created_at": "2017-10-05T04:13:33Z",
      "updated_at": "2017-10-05T04:13:33Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT Could you please add this in the PR #4963 description (it is very short) for future documentation?",
      "created_at": "2017-10-05T05:08:19Z",
      "updated_at": "2017-10-05T05:08:42Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov I've already added the `documentation needed` label to the PR",
      "created_at": "2017-10-05T05:42:58Z",
      "updated_at": "2017-10-05T05:42:58Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Yes, I see. I meant that the description very short - don't clear that we should document.",
      "created_at": "2017-10-05T06:01:14Z",
      "updated_at": "2017-10-05T06:01:14Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I think it's clear enough when my team goes through the `documentation needed` items later.  `args` was being passed to the `input` parameter incorrectly.",
      "created_at": "2017-10-05T15:12:19Z",
      "updated_at": "2017-10-05T15:12:19Z"
    }
  ],
  "created_at": "2017-09-26T16:49:15Z",
  "number": 4923,
  "state": "closed",
  "title": "CommandInvocationIntrinsics.InvokeScript bind arguments to $input instead of $args",
  "updated_at": "2017-10-19T03:32:08Z"
}