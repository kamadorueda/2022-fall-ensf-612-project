{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11669",
  "author": "jazzdelightsme",
  "body": "# Steps to reproduce\r\n\r\n**N.B.** The repro code is indented. **THIS IS CRUCIAL TO THE REPRO.** Include the indent when copying and pasting into your console window.\r\n```powershell\r\n        $CopyErrors = New-Object 'System.Collections.ArrayList'\r\n\r\n        function CopyFiles( $srcRoot, $destRoot, $plat )\r\n        {\r\n            Write-Host \"Copying binaries from $($srcRoot)...\" -Fore Green\r\n\r\n            $fullSrc = 'C:\\Windows\\system32\\ntdll.dll'\r\n            $fullDst = 'C:\\does\\not\\exist'\r\n\r\n            Copy-Item $fullSrc $fullDst -ErrorVariable +CopyErrors\r\n        }\r\n\r\n        CopyFiles\r\n\r\n        $CopyErrors\r\n\r\n        $error.Count\r\n\r\n        $error\r\n\r\n        $error.Count\r\n```\r\n\r\n# Expected behavior\r\n\r\nYou should see 1 error, from outputting `$CopyErrors`, then `$error.Count` should output \"1\", then `$error` should show that same error again, then `$error.Count` should still be \"1\".\r\n\r\n\r\n# Actual behavior\r\n\r\nDuring the formatting of `$CopyErrors`, things go sideways, and the errors don't appear in the console, but carnage starts accumulating in `$error`. Here are the printable errors:\r\n\r\n```\r\nMethodInvocationException:\r\nLine |\r\n 122 |  \u2026             $line = $line.Insert($offsetInLine\r\n\r\n     |                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n     | Exception calling \"Insert\" with \"2\" argument(s): \"Specified argument was out of the range of valid values. (Parameter 'startIndex')\"\r\n\r\nMethodInvocationException:\r\nLine |\r\n 122 |  \u2026             $line = $line.Insert($offsetInLine\r\n\r\n     |                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n     | Exception calling \"Insert\" with \"2\" argument(s): \"Specified argument was out of the range of valid values. (Parameter 'startIndex')\"\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-rc.2\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-rc.2\r\nOS                             Microsoft Windows 10.0.18363\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2020-01-30T19:03:40Z",
  "comments": [
    {
      "author": "jazzdelightsme",
      "author_association": "CONTRIBUTOR",
      "body": "I forgot to mention that this is a regression from RC1.\r\n\r\n(So I think this goes without saying, but: please please please fix this for GA. I ran into it within a day of downloading and trying RC2, and the experience of debugging \"invisible errors\" is extraordinarily bad (tantamount to gaslighting--it looks like pwsh is telling you \"errors? what errors? there are no errors...\").)",
      "created_at": "2020-01-24T02:13:30Z",
      "updated_at": "2020-01-24T02:13:30Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:This issue was addressed in #11670, which has now been successfully released as `v7.0.0-rc.3`.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.0.0-rc.3)\n",
      "created_at": "2020-02-21T23:55:12Z",
      "updated_at": "2020-02-21T23:55:12Z"
    }
  ],
  "created_at": "2020-01-24T02:08:31Z",
  "number": 11669,
  "state": "closed",
  "title": "Still some bugs in error formatting, indent somehow involved",
  "updated_at": "2020-02-21T23:55:12Z"
}