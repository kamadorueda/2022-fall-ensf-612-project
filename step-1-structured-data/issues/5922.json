{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5922",
  "author": "bmanikm",
  "body": "_From @vojtechvit on January 14, 2018 18:22_\n\n## Steps to Reproduce\r\n```PowerShell\r\nNew-ModuleManifest c.psd1 -PrivateData @{'PSData' = @{'Prerelease' = 'test'}}\r\n```\r\n\r\n## Expected Behavior\r\n`c.psd1` file should contain:\r\n```\r\nPrivateData = @{\r\n    PSData = @{\r\n        Prerelease = 'test'\r\n    }\r\n} \r\n```\r\n\r\n## Current Behavior\r\n`c.psd1` file contains:\r\n```\r\n# Private data to pass to the module specified in RootModule/ModuleToProcess. This may also contain a PSData hashtable with additional module metadata used by PowerShell.\r\nPrivateData = @{\r\n\r\n    PSData = @{\r\n\r\n        # Tags applied to this module. These help with module discovery in online galleries.\r\n        # Tags = @()\r\n\r\n        # A URL to the license for this module.\r\n        # LicenseUri = ''\r\n\r\n        # A URL to the main website for this project.\r\n        # ProjectUri = ''\r\n\r\n        # A URL to an icon representing this module.\r\n        # IconUri = ''\r\n\r\n        # ReleaseNotes of this module\r\n        # ReleaseNotes = ''\r\n\r\n    } # End of PSData hashtable\r\n\r\n\r\n    # PSData\r\n    PSData = 'System.Collections.Hashtable'\r\n\r\n} # End of PrivateData hashtable\r\n```\r\n\r\n## Your Environment\r\n```PowerShell\r\n\r\n> $PSVersionTable\r\nName                           Value                                           \r\n----                           -----                                           \r\nPSVersion                      5.1.16299.98                                    \r\nPSEdition                      Desktop                                         \r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}                         \r\nBuildVersion                   10.0.16299.98                                   \r\nCLRVersion                     4.0.30319.42000                                 \r\nWSManStackVersion              3.0                                             \r\nPSRemotingProtocolVersion      2.3                                             \r\nSerializationVersion           1.1.0.1                   \r\n```\n\n_Copied from original issue: PowerShell/PowerShellGet#223_",
  "closed_at": null,
  "comments": [
    {
      "author": "Glober777",
      "author_association": "NONE",
      "body": "I suspect that this is caused by the same issue that affects existing private data when the manifest is updated through Update-ModuleManifest as mentioned in https://github.com/PowerShell/PowerShellGet/issues/294#issuecomment-401151546. I spent some time troubleshooting and discovered that the issue is within Get-PrivateData private cmdlet (PowerShellGet) which assumes that any extra non-default property is a string:\r\nhttps://github.com/PowerShell/PowerShellGet/blob/a5f5167ad00f971e2c6b29fbcd95c76648593b36/src/PowerShellGet/private/functions/Get-PrivateData.ps1#L68\r\n\r\nAnother problem in that cmdlet is that in the end it drops the constructed lines in a wrong part of the output: https://github.com/PowerShell/PowerShellGet/blob/a5f5167ad00f971e2c6b29fbcd95c76648593b36/src/PowerShellGet/private/functions/Get-PrivateData.ps1#L146 ",
      "created_at": "2018-11-13T13:42:51Z",
      "updated_at": "2018-11-13T13:43:41Z"
    },
    {
      "author": "jonatanjagiello",
      "author_association": "NONE",
      "body": "Maybe it's not the prettiest one, but I can share with you a workaround for PS 5.1\r\n\r\n``` powershell\r\n$path = (\"{0}\\{1}\\{2}.psd1\" -f $modulesPath, $_.Name, $_.Name)\r\n$params = @{\r\n\tDescription = $_.Description\r\n\tFunctionsToExport = $_.FunctionsToExport\r\n\tGuid = $_.GUID\r\n\tPowerShellVersion = $_.PowerShellVersion\r\n\tRootModule = (\"{0}.psm1\" -f $_.Name)\r\n\tRequiredModules = $_.RequiredModules\r\n\tModuleVersion = $_.ModuleVersion\r\n\tExternalModuleDependencies = $_.ExternalModuleDependencies\r\n\tCopyright = $manifestCommon.Copyright\r\n\tAuthor = $manifestCommon.Author\r\n\tCompanyName = $manifestCommon.CompanyName\r\n}\r\n\r\n# https://github.com/PowerShell/PowerShell/issues/5922\r\nNew-ModuleManifest $path\r\nUpdate-ModuleManifest -Path $path @params\r\n```\r\nAfter some time of struggling with generating manifests dynamically, this the best solution I've found so far. Hope this will help",
      "created_at": "2020-07-27T16:18:08Z",
      "updated_at": "2020-07-27T16:18:08Z"
    },
    {
      "author": "wekempf",
      "author_association": "NONE",
      "body": "I know this is an old thread, but the above \"workaround\" doesn't address the issue report at all, as it doesn't touch PrivateData. I'm having the same issue here... Update-ModuleManifest really has one use, for updating the manifest in a CI/CD process, and it fails utterly there, after so many years and versions. :(",
      "created_at": "2022-04-22T14:49:57Z",
      "updated_at": "2022-04-22T14:49:57Z"
    },
    {
      "author": "ztrhgf",
      "author_association": "NONE",
      "body": "That's true but the problem with PrivateData can be fixed too :D \r\nYou just have to use hashtable as an argument straight away (do not put it in PSData as would be logical):\r\n\r\n```\r\n$path = (\"{0}\\{1}\\{2}.psd1\" -f $modulesPath, $_.Name, $_.Name)\r\n$params = @{\r\n        PrivateData = @{\r\n           Tags = 'tag1', 'tag2'\r\n           ProjectUri = 'https://github.com'\r\n        }\r\n\tDescription = $_.Description\r\n\tFunctionsToExport = $_.FunctionsToExport\r\n\tGuid = $_.GUID\r\n\tPowerShellVersion = $_.PowerShellVersion\r\n\tRootModule = (\"{0}.psm1\" -f $_.Name)\r\n\tRequiredModules = $_.RequiredModules\r\n\tModuleVersion = $_.ModuleVersion\r\n\tExternalModuleDependencies = $_.ExternalModuleDependencies\r\n\tCopyright = $manifestCommon.Copyright\r\n\tAuthor = $manifestCommon.Author\r\n\tCompanyName = $manifestCommon.CompanyName\r\n}\r\n\r\n# https://github.com/PowerShell/PowerShell/issues/5922\r\nNew-ModuleManifest $path\r\nUpdate-ModuleManifest -Path $path @params\r\n```\r\n\r\nNotice the:\r\n```\r\nPrivateData = @{\r\n           Tags = 'tag1', 'tag2'\r\n           ProjectUri = 'https://github.com'\r\n        }\r\n```\r\n\r\nI am using this approach in my function for generating modules https://github.com/ztrhgf/useful_powershell_functions/blob/master/Export-ScriptsToModule.ps1\r\n\r\n<blockquote><img src=\"https://github.githubassets.com/images/modules/site/social-cards/github-social.png\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/\">GitHub: Where the world builds software</a></strong></div><div>GitHub is where over 83 million developers shape the future of software, together. Contribute to the open source community, manage your Git repositories, review code like a pro, track bugs and feat...</div></blockquote>\r\n<blockquote><img src=\"https://opengraph.githubassets.com/a2e4c7bf2b210c2e0035d0722bf91f33fd936937d259f8bd57842dc9e12b4ad2/ztrhgf/useful_powershell_functions\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/ztrhgf/useful_powershell_functions\">useful_powershell_functions/Export-ScriptsToModule.ps1 at master \u00b7 ztrhgf/useful_powershell_functions</a></strong></div><div>powershell functions to make my admin work easier. Contribute to ztrhgf/useful_powershell_functions development by creating an account on GitHub.</div></blockquote>",
      "created_at": "2022-05-18T10:39:14Z",
      "updated_at": "2022-05-18T10:40:58Z"
    }
  ],
  "created_at": "2018-01-16T23:23:46Z",
  "number": 5922,
  "state": "open",
  "title": "New-ModuleManifest -PrivateData does not work with nested hashtables",
  "updated_at": "2022-05-18T10:40:58Z"
}