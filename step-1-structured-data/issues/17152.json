{
  "_url": "https://github.com/PowerShell/PowerShell/issues/17152",
  "author": "SeeminglyScience",
  "body": "The check in `ForEach-Object -Parallel` for `ScriptBlock`s in `$using:` values currently doesn't check `PSObject`s. This was discovered in #17150\r\n\r\nThis if:\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/7cc9c874730e87b06dbe54d50e77c1c472996c54/src/System.Management.Automation/engine/InternalCommands.cs#L422-L431\r\n\r\nMight need to be:\r\n\r\n```csharp\r\nif (item is ScriptBlock or PSObject { BaseObject: ScriptBlock })\r\n{\r\n    // etc\r\n}\r\n```\r\n\r\n### Steps to reproduce\r\n\r\n\r\n```powershell\r\n$sb = { 'worked' }\r\n0 | ForEach-Object -Parallel { & $using:sb }\r\n\r\n$sb = [psobject]{ 'worked' }\r\n0 | ForEach-Object -Parallel { & $using:sb }\r\n```\r\n\r\n\r\n\r\n### Expected behavior\r\n\r\n```console\r\nForEach-Object:\r\nLine |\r\n   2 |  0 | ForEach-Object -Parallel { & $using:sb }\r\n     |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n     | A ForEach-Object -Parallel using variable cannot be a script block. Passed-in script block variables are not supported with ForEach-Object -Parallel, and can result in undefined behavior.\r\n\r\nForEach-Object:\r\nLine |\r\n   5 |  0 | ForEach-Object -Parallel { & $using:sb }\r\n     |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n     | A ForEach-Object -Parallel using variable cannot be a script block. Passed-in script block variables are not supported with ForEach-Object -Parallel, and can result in undefined behavior.\r\n```\r\n\r\n### Actual behavior\r\n\r\n```console\r\nForEach-Object:\r\nLine |\r\n   2 |  0 | ForEach-Object -Parallel { & $using:sb }\r\n     |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n     | A ForEach-Object -Parallel using variable cannot be a script block. Passed-in script block variables are not supported with ForEach-Object -Parallel, and can result in undefined behavior.\r\nworked\r\n```\r\n\r\n### Environment data\r\n\r\n```powershell\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.3.0-preview.3\r\nPSEdition                      Core\r\nGitCommitId                    7.3.0-preview.3\r\nOS                             Microsoft Windows 10.0.19044\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```",
  "closed_at": "2022-05-04T17:51:45Z",
  "comments": [
    {
      "author": "ryneandal",
      "author_association": "CONTRIBUTOR",
      "body": "If this is up for grabs, I would love to take a crack at it, if that's alright.",
      "created_at": "2022-04-29T16:46:03Z",
      "updated_at": "2022-04-29T16:46:03Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "@ryneandal Absolutely! If you have any questions feel free to ask \ud83d\ude42 ",
      "created_at": "2022-04-29T16:50:30Z",
      "updated_at": "2022-04-29T16:50:30Z"
    },
    {
      "author": "ryneandal",
      "author_association": "CONTRIBUTOR",
      "body": "Awesome, thanks. Per the contribution guidelines, could I get an assignment from @powershell/powershell?",
      "created_at": "2022-04-29T17:06:50Z",
      "updated_at": "2022-04-29T17:06:50Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:This issue was addressed in #17234, which has now been successfully released as `v7.3.0-preview.4`.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.3.0-preview.4)\n",
      "created_at": "2022-05-23T16:21:08Z",
      "updated_at": "2022-05-23T16:21:08Z"
    }
  ],
  "created_at": "2022-04-14T17:03:02Z",
  "labels": [
    "Issue-Bug",
    "Up-for-Grabs",
    "Resolution-Fixed"
  ],
  "number": 17152,
  "state": "closed",
  "title": "`PSObject` wrapped `ScriptBlock`s should also throw when attempting `$using:` access",
  "updated_at": "2022-05-23T16:21:08Z"
}