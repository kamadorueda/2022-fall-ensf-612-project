{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7958",
  "author": "HumanEquivalentUnit",
  "body": "An example regex thing I do is to extract the number out of this string: `\"blah blah blah 456 blah blah\"`.\r\n\r\nThe available options are all full of syntax, noise, and multiple steps:\r\n\r\n1. `if ($text -match '(\\d+)') { $matches[1] }`\r\n1. `$text | select-string '\\d+' | % matches | % value`\r\n1. `[regex]::matches($text, '\\d+').Value`\r\n1. `$text -replace '.*?(\\d+).*', '$1'`\r\n\r\nBut if I wanted to /drop/ the number from the string, there's a really clean short direct way to do it:\r\n\r\n1. `$text -replace '\\d+'`\r\n\r\nNB. that in this example I could simply use `$text -replace '[^\\d]'` , but coming up with an inverted regex often is not that simple. Especially if there's a string involved, so an inverted character class won't work. It often means separately matching the start and end, andleaving the middle bit unchanged, as I've tried to show in example number 4 above. \r\n\r\nThis is a pattern I find myself using quite often in the shell, and it bugs me that there's a first class way to get rid of, and swap string content, but not exactly a first class mirror of that, a way to keep some string content. \r\n\r\nWhat I'm dreaming of, is an operator that works like the opposite of `-replace`, like this: \r\n\r\n1. `$text -keep '\\d+'`\r\n\r\nAn operator which behaves like `[regex]::matches($text, '\\d+').Value` - i.e. the result would be plain strings, not MatchInfo, not `$matches` being set somewhere off in memory. If there's one match there's one string output. If there's N matches, then N strings output. No position, no metadata, no nesting. If there's no matches, there's no output (it doesn't return `$false`). If it's used on an array of strings on the left, it will output the matches from each of them, not filtering the array.\r\n\r\nMaybe it could take another parameter like `-split` does to return only the first N items, so\r\n\r\n    PS C:\\> \"abc 123 def 456 ghi 789\" -keep '\\d+', 2\r\n    123\r\n    456\r\n\r\nBinary operator `-keep` (or `-pluck`, `-getmatch`, `-gimme`, `-matchNgo`, `-extract`, `-matchvalues`, or whatever name).\r\n\r\nDoes that exist in other languages? Does anyone wish it did?\r\n",
  "closed_at": "2018-10-07T02:37:21Z",
  "comments": [
    {
      "author": "HumanEquivalentUnit",
      "author_association": "CONTRIBUTOR",
      "body": "I wrote this independently before I saw issue #7867. That is still about outputting a chunk of metadata, which is not what I want, but there is talk in the comments of string output, I will chase this up there instead.",
      "created_at": "2018-10-07T02:38:21Z",
      "updated_at": "2018-10-07T02:38:21Z"
    }
  ],
  "created_at": "2018-10-07T02:18:58Z",
  "labels": [
    "Resolution-Answered"
  ],
  "number": 7958,
  "state": "closed",
  "title": "Ideas for a clean, direct regex mirror of -replace, to \"keep the match\"?",
  "updated_at": "2018-10-30T05:57:28Z"
}