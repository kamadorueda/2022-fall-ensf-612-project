{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11551",
  "author": "Pxtl",
  "body": "# Summary of the new feature/enhancement\r\n\r\nAllow invocations that are wrapped in parentheses to span multiple lines, eg:\r\n\r\n```ps\r\n(Invoke-MyCommandlet \r\n -arg1 \"foo\" \r\n -arg2 \"bar\" \r\n -arg3 \"baz\" \r\n)\r\n```\r\n\r\n# Problem\r\n\r\nCurrently there are two dominant ways to do a multi-line invocation in powershell:\r\n## Backtick line-continuations\r\n```ps\r\nInvoke-MyCommandlet `\r\n -arg1 \"foo\" `\r\n -arg2 \"bar\" `\r\n -arg3 \"baz\" `\r\n```\r\n\r\nThis is problematic because it's whitespace-sensitive and prevents using # for line-comments.\r\n\r\n## Splatting\r\n```ps\r\n$HashArguments = @{\r\n arg1 = \"foo\"\r\n arg2 = \"bar\"\r\n arg3 = \"baz\"\r\n}\r\nInvoke-MyCommandlet @HashArguments \r\n```\r\nthis creates the problem that you lose intellisense and validation since you've decoupled the parameters from their corresponding command.\r\n\r\n## Summary\r\n\r\nThere are no good ways to do multiline invocations in Powershell.\r\n\r\n# Proposal\r\n\r\nLet the humble parenthesis handle it.  Currently, this:\r\n\r\n```ps\r\n(Invoke-MyCommandlet -arg1 \"foo\" -arg2 \"bar\" -arg3 \"baz\")\r\n```\r\n\r\nis valid powershell, but this:\r\n\r\n```ps\r\n(Invoke-MyCommandlet \r\n -arg1 \"foo\" \r\n -arg2 \"bar\" \r\n -arg3 \"baz\" \r\n)\r\n```\r\n\r\nis not valid.  But why not?  The open-parens clearly identifies that we're starting something that should not end until we see a close-parens.  Why not, then, allow it to span multiple lines?",
  "closed_at": "2020-01-12T16:00:08Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@KirkMunro has some ideas and even an open PR handling something along these lines. Not sure we have consensus on what the solution ought to be here, but this seems to be an interesting idea to add to the possibilities.",
      "created_at": "2020-01-10T17:34:25Z",
      "updated_at": "2020-01-10T17:34:25Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Please discuss in the RFC https://github.com/PowerShell/PowerShell-RFC/pull/179",
      "created_at": "2020-01-11T15:58:30Z",
      "updated_at": "2020-01-11T15:58:30Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as duplicate and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2020-01-12T16:00:07Z",
      "updated_at": "2020-01-12T16:00:07Z"
    }
  ],
  "created_at": "2020-01-10T16:21:08Z",
  "labels": [
    "Resolution-Duplicate",
    "Issue-Enhancement"
  ],
  "number": 11551,
  "state": "closed",
  "title": "Support for multi-line invocations without using parameter splatting or `",
  "updated_at": "2020-01-12T16:00:08Z"
}