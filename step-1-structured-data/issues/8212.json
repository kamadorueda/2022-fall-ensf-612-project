{
  "_url": "https://github.com/PowerShell/PowerShell/issues/8212",
  "author": "schnitz76",
  "body": "Steps to reproduce\r\n------------------\r\n\r\nNew-Item \"E:\\Personal\\TEST_FROM\\Dir_0_0\" -ItemType Directory\r\nNew-Item \"E:\\Personal\\TEST_FROM\\Dir_0_[1\" -ItemType Directory\r\nNew-Item \"E:\\Personal\\TEST_FROM\\Dir_0_[2]\" -ItemType Directory\r\nNew-Item \"E:\\Personal\\TEST_FROM\\Dir_0_3]\" -ItemType Directory\r\nNew-Item 'E:\\Personal\\TEST_FROM\\New Text Document.txt'\r\nNew-Item 'E:\\Personal\\TEST_FROM\\New Text Document [2.txt'\r\nNew-Item 'E:\\Personal\\TEST_FROM\\New Text Document [2].txt'\r\nNew-Item 'E:\\Personal\\TEST_FROM\\New Text Document 2].txt'\r\n\r\n$SourceLocation = \"E:\\Personal\\TEST_FROM\\\"\r\n$DestinationLocation = \"E:\\Personal\\TEST\\\"\r\n\r\nGet-ChildItem \"E:\\Personal\\TEST_FROM\\\"\r\n\r\n$SourceFileList = @(Get-ChildItem -Recurse $SourceLocation)\r\n$DestinationFileList = @(Get-ChildItem -Recurse $DestinationLocation)\r\n$CompareResult = Compare-Object -ReferenceObject $SourceFileList -DifferenceObject $DestinationFileList -IncludeEqual\r\n\r\nforeach ($obj in $CompareResult){\r\n    $FullSourceObject = $obj.InputObject.FullName\r\n    $FullDestinationObject = $obj.InputObject.FullName.Replace($SourceLocation, $DestinationLocation)\r\n    if ($obj.SideIndicator -eq \"<=\"){Copy-Item -Path $FullSourceObject -Destination $FullDestinationObject}\r\n}\r\n\r\nGet-ChildItem \"E:\\Personal\\TEST\"\r\n\r\nExpected behavior\r\n-----------------\r\n\r\nGet-ChildItem \"E:\\Personal\\TEST\" should match Get-ChildItem \"E:\\Personal\\TEST_FROM\\\"\r\n\r\nActual behavior\r\n---------------\r\n\r\nPS C:\\Program Files\\PowerShell\\6> Get-ChildItem \"E:\\Personal\\TEST_FROM\\\"\r\n\r\n\r\n    Directory: E:\\Personal\\TEST_FROM\r\n\r\n\r\nMode                LastWriteTime         Length Name\r\n----                -------------         ------ ----\r\nd-----        11/8/2018   9:57 AM                Dir_0_[1\r\nd-----        11/8/2018   9:57 AM                Dir_0_[2]\r\nd-----        11/8/2018   9:57 AM                Dir_0_0\r\nd-----        11/8/2018   9:57 AM                Dir_0_3]\r\n-a----        11/8/2018   9:57 AM              0 New Text Document [2.txt\r\n-a----        11/8/2018   9:57 AM              0 New Text Document [2].txt\r\n-a----        11/8/2018   9:57 AM              0 New Text Document 2].txt\r\n-a----        11/8/2018   9:57 AM              0 New Text Document.txt\r\n\r\n\r\nPS C:\\Program Files\\PowerShell\\6> Get-ChildItem \"E:\\Personal\\TEST\"\r\n\r\n\r\n    Directory: E:\\Personal\\TEST\r\n\r\n\r\nMode                LastWriteTime         Length Name\r\n----                -------------         ------ ----\r\nd-----        11/8/2018   9:57 AM                Dir_0_0\r\nd-----        11/8/2018   9:57 AM                Dir_0_3]\r\n-a----        11/8/2018   9:57 AM              0 New Text Document 2].txt\r\n-a----        11/8/2018   9:57 AM              0 New Text Document.txt\r\n\r\n\r\n\r\nEnvironment data\r\n----------------\r\n\r\nPS C:\\Program Files\\PowerShell\\6> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.1.0\r\nPSEdition                      Core\r\nGitCommitId                    6.1.0\r\nOS                             Microsoft Windows 10.0.17763\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n",
  "closed_at": "2018-11-08T21:05:58Z",
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@schnitz76 can you try your repro with `-LiteralPath`?",
      "created_at": "2018-11-08T18:11:57Z",
      "updated_at": "2018-11-08T18:11:57Z"
    },
    {
      "author": "schnitz76",
      "author_association": "NONE",
      "body": "Copy-Item -LiteralPath does work as intended.  Is this by design?  If so I apologize for the trouble.",
      "created_at": "2018-11-08T18:30:03Z",
      "updated_at": "2018-11-08T18:30:03Z"
    },
    {
      "author": "kvprasoon",
      "author_association": "CONTRIBUTOR",
      "body": "@schnitz76  Yes and is somewhat clear from the help doc.\r\n\r\n```\r\n\u2665->Get-Help Copy-Item -Parameter literalpath\r\n\r\n-LiteralPath <String[]>\r\n    Specifies a path to the item. The value of the LiteralPath parameter is used exactly as it is typed. No characters\r\n    are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single\r\n    quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.\r\n\r\n    Required?                    true\r\n    Position?                    named\r\n    Default value                None\r\n    Accept pipeline input?       True (ByPropertyName)\r\n    Accept wildcard characters?  false\r\n```",
      "created_at": "2018-11-08T18:38:45Z",
      "updated_at": "2018-11-08T18:38:45Z"
    },
    {
      "author": "mpawelski",
      "author_association": "NONE",
      "body": "As a _casual_ powershell user I've been beaten by this many times. This is one of many gotchas for beginners that really discourage people from using pwsh. \r\n\r\n@SteveL-MSFT  Maybe now that powershell has future outside of windows we can do some breaking changes for this common gotchas? I mean change the default behavior to be less error prone and more beginner friendly (in other words Powershell should fall you into [The Pit of Success](https://blog.codinghorror.com/falling-into-the-pit-of-success/) for common scenarios). In the case of `Copy-Item` maybe `-Path` should have `-LiteralPath` behavior and we should add `-WildcardPath` param as other option?\r\n",
      "created_at": "2018-11-08T19:58:05Z",
      "updated_at": "2018-11-08T19:58:05Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "That would be a rather extensive breaking change, frankly speaking... there are a *lot* of cmdlets that have `-Path`/`-LiteralPath` parameters. And if you change it just for this one cmdlet, it then becomes another exception for people to memorise. Not fixing the problem, just changing the problem at hand here.",
      "created_at": "2018-11-08T20:01:53Z",
      "updated_at": "2018-11-08T20:01:53Z"
    },
    {
      "author": "mpawelski",
      "author_association": "NONE",
      "body": "Well, I'm speaking from perspective of very casual powershell user that writes one or two scripts every couple of months.\r\n\r\nSo I clearly don't represent powershell community here with huge number of scripts already written and I don't know how big of an impact this breaking change could be.\r\nI just never needed wildcards functionality of `-Path`. It just always feel natural to write `cp path destination` when I write some script and I always die a little bit inside when I get error because my file path had `[` inside \ud83d\ude09. And I think there are many people like me.",
      "created_at": "2018-11-08T20:31:43Z",
      "updated_at": "2018-11-08T20:31:43Z"
    },
    {
      "author": "schnitz76",
      "author_association": "NONE",
      "body": "I will close this as user error.",
      "created_at": "2018-11-08T21:05:58Z",
      "updated_at": "2018-11-08T21:05:58Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@mpawelski we've done a bunch of work to make PowerShell work better on non-Windows and we'll continue to do so.  We can also make changes to help new users.  However, we also have to be careful not to break existing users.  If there's a way to improve the experience without introducing a breaking change, I'd love to hear it :)",
      "created_at": "2018-11-08T22:03:03Z",
      "updated_at": "2018-11-08T22:03:03Z"
    },
    {
      "author": "kvprasoon",
      "author_association": "CONTRIBUTOR",
      "body": "@mpawelski When there is a help documentation for a script/cmdlet , its always safe and good if we read the documentation properly even for one time use.",
      "created_at": "2018-11-09T05:03:51Z",
      "updated_at": "2018-11-09T05:03:51Z"
    }
  ],
  "created_at": "2018-11-08T17:01:50Z",
  "number": 8212,
  "state": "closed",
  "title": "Copy-Item fails with [ in dir or file name",
  "updated_at": "2018-11-22T10:43:08Z"
}