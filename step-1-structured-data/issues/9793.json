{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9793",
  "author": "SteveL-MSFT",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nThe change in #9202 introduced this regression by searching for a literal path.  In the case of `http://bing.com`, this results in an exception because the `http:` drive doesn't exist.  The fix is to catch this exception and let the search continue which will end up using ShellExecute to find a handler.\r\n\r\nSince this specific case brings up the browser, I didn't add a test but validated it manually.\r\n\r\n## PR Context\r\n\r\nFix https://github.com/PowerShell/PowerShell/issues/9791\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n",
  "closed_at": "2019-06-04T21:36:13Z",
  "comments": [
    {
      "author": "PoshChan",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT, your last commit had 1 failures in `PowerShell-CI-macos`\r\nCommand Discovery tests.error cases.Get-Command \"less `\"-PsPage %db?B of %DoesNotExist:`\"\" should throw Drive not found\r\n```powershell\r\nExpected an exception, with FullyQualifiedErrorId 'DriveNotFound' to be thrown, because The drive 'DoesNotExist:' should not exist, but no exception was thrown.\r\nat <ScriptBlock>, /Users/vsts/agent/2.150.3/work/1/s/test/powershell/engine/Basic/CommandDiscovery.Tests.ps1: line 211\r\n211:             {Get-Command -Name \"less `\"-PsPage %db?B of %DoesNotExist:`\"\"} | Should -Throw -ErrorId 'DriveNotFound' -Because \"The drive 'DoesNotExist:' should not exist\"\r\n```\r\n",
      "created_at": "2019-06-01T07:08:14Z",
      "updated_at": "2019-06-01T07:08:14Z"
    },
    {
      "author": "PoshChan",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT, your last commit had 1 failures in `PowerShell-CI-windows`\r\nCommand Discovery tests.error cases.Get-Command \"less `\"-PsPage %db?B of %DoesNotExist:`\"\" should throw Drive not found\r\n```powershell\r\nExpected an exception, with FullyQualifiedErrorId 'DriveNotFound' to be thrown, because The drive 'DoesNotExist:' should not exist, but no exception was thrown.\r\nat <ScriptBlock>, D:\\a\\1\\s\\test\\powershell\\engine\\Basic\\CommandDiscovery.Tests.ps1: line 211\r\n211:             {Get-Command -Name \"less `\"-PsPage %db?B of %DoesNotExist:`\"\"} | Should -Throw -ErrorId 'DriveNotFound' -Because \"The drive 'DoesNotExist:' should not exist\"\r\n```\r\n",
      "created_at": "2019-06-01T07:09:47Z",
      "updated_at": "2019-06-01T07:09:47Z"
    },
    {
      "author": "PoshChan",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT, your last commit had 1 failures in `PowerShell-CI-linux`\r\nCommand Discovery tests.error cases.Get-Command \"less `\"-PsPage %db?B of %DoesNotExist:`\"\" should throw Drive not found\r\n```powershell\r\nExpected an exception, with FullyQualifiedErrorId 'DriveNotFound' to be thrown, because The drive 'DoesNotExist:' should not exist, but no exception was thrown.\r\nat <ScriptBlock>, /home/vsts/work/1/s/test/powershell/engine/Basic/CommandDiscovery.Tests.ps1: line 211\r\n211:             {Get-Command -Name \"less `\"-PsPage %db?B of %DoesNotExist:`\"\"} | Should -Throw -ErrorId 'DriveNotFound' -Because \"The drive 'DoesNotExist:' should not exist\"\r\n```\r\n",
      "created_at": "2019-06-01T07:10:35Z",
      "updated_at": "2019-06-01T07:10:35Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "In the case where there is no further path that works, does it still not make sense to rethrow the DriveNotFound exception?",
      "created_at": "2019-06-01T22:08:34Z",
      "updated_at": "2019-06-01T22:08:44Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@vexx32 currently, we fall through to using ShellExecute if the command is not found.  This is consistent with Windows PowerShell (and prior versions of PSCore6).  At that time, we leave it to the shell to find an associated app to run so there isn't an opportunity to rethrow.",
      "created_at": "2019-06-04T16:20:52Z",
      "updated_at": "2019-06-04T16:20:52Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "It seems this PR also fixes my recently opened issue #9814 as well, it might be useful to add a test for this as well.",
      "created_at": "2019-06-04T18:12:20Z",
      "updated_at": "2019-06-04T18:12:20Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@bergmeister Can you file an issue to add a test for the the issue?   I don't think we should block this PR on that.\r\n\r\nNever mind, I added a test.",
      "created_at": "2019-06-04T18:15:05Z",
      "updated_at": "2019-06-04T18:25:58Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@PoshChan Please remind me in 1 hour.",
      "created_at": "2019-06-04T18:26:46Z",
      "updated_at": "2019-06-04T18:26:46Z"
    },
    {
      "author": "PoshChan",
      "author_association": "COLLABORATOR",
      "body": "@TravisEz13, this is the reminder you requested 1 hour. ago",
      "created_at": "2019-06-04T19:26:57Z",
      "updated_at": "2019-06-04T19:26:57Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@SteveL-MSFT I reviewed where this was regressed and I think we missed a few exceptions that should be handled.  I refactored your code to add the exception handlers back.  I remember discussing this but I think our conclusion was wrong.  \r\n\r\nAdding the exception handlers in the other two locations causes different regressions, so I have a wrapper for the helper that handles exceptions and use it where we need to handle exception and use the inner helper where we don't need to handle exceptions.",
      "created_at": "2019-06-04T20:08:55Z",
      "updated_at": "2019-06-04T20:08:55Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "Verified the `gcm global:help` is consistent with 5.1",
      "created_at": "2019-06-04T20:13:59Z",
      "updated_at": "2019-06-04T20:13:59Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@PoshChan Please remind me in 1 hour",
      "created_at": "2019-06-04T20:25:42Z",
      "updated_at": "2019-06-04T20:25:42Z"
    },
    {
      "author": "PoshChan",
      "author_association": "COLLABORATOR",
      "body": "@TravisEz13, this is the reminder you requested 1 hour ago",
      "created_at": "2019-06-04T21:26:11Z",
      "updated_at": "2019-06-04T21:26:11Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.0.0-preview.2` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.0.0-preview.2)\n",
      "created_at": "2019-07-17T20:56:15Z",
      "updated_at": "2019-07-17T20:56:15Z"
    }
  ],
  "created_at": "2019-06-01T06:50:54Z",
  "number": 9793,
  "state": "closed",
  "title": "Fix use of `Start-Process http://bing.com`",
  "updated_at": "2019-07-17T20:56:15Z"
}