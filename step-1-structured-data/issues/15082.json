{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15082",
  "author": "scriptingstudio",
  "body": "Although PrintManagement module and get-CimInstance cmdlet use the same WMI class, the behavior is different.\r\n\r\n## Steps to reproduce\r\nMembership of user account is just `Domain Users`.\r\n```powershell\r\n> gcim MSFT_printer -Namespace ROOT/StandardCimv2 -comp ps1\r\nGet-CimInstance : Access denied.\r\n\r\n\r\n> get-printer -comp ps1\r\n\r\nName                           ComputerName    Type         DriverName                PortName        Shared\r\n----                           ------------    ----         ----------                --------        ------\r\nPF508-Konica454                ps1             Local        KONICA MINOLTA Univers... IP_192.168.1... True\r\nPF505-Konica458-2              ps1             Local        KONICA MINOLTA Univers... IP_192.168.1... True\r\nPF418-Konica300                ps1             Local        KONICA MINOLTA Univers... IP_192.168.1... True\r\n```\r\n\r\n\r\n## Environment data\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.0\r\nPSEdition                      Core\r\nGitCommitId                    7.1.0\r\nOS                             Microsoft Windows 10.0.19042\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\nWhat's the \"secret\" of the PrintManagement module?\r\n",
  "closed_at": "2021-03-25T00:00:05Z",
  "comments": [
    {
      "author": "jborean93",
      "author_association": "COLLABORATOR",
      "body": "When you do `Get-CimInstance ... -ComputerName ps1` you are connecting over WSMan to `ps1` and running the CIM query on that host in question. It's very similar to doing\r\n\r\n```powershell\r\nInvoke-Command -ComputerName ps1 -ScriptBlock {\r\n    Get-CimInstance -ClassName MSFT_Printer -Namespace Root/StandardCimV2\r\n}\r\n```\r\n\r\nLooking at the [MSFT_Printer](https://wutils.com/wmi/root/standardcimv2/msft_printer/) class I can see that [ComputerName](https://wutils.com/wmi/root/standardcimv2/msft_printer/#computername_properties) is an actual property of this class which states:\r\n\r\n> The name of the server which this printer resides on.\r\n\r\nSo my guess is that `Get-Printer -ComputerName ps1` isn't actually using WSMan to connect to `ps1` but is instead doing something like the following:\r\n\r\n```powershell\r\nGet-CimInstance -ClassName MSFT_Printer -Namespace ROOT/StandardCimV2 -Filter \"ComputerName='ps1'\"\r\n```\r\n\r\nAnd this essentially is getting all the printers on the localhost that are shared through `ps1` rather than connecting to `ps1` and getting the printers on that host.\r\n\r\nWhy the `Get-CimInstance` method is failing could be for a few reasons:\r\n\r\n* You need to have WSMan opened on the remote host\r\n* Your account needs to be able to log onto the host through WSMan\r\n* If it's a standard (non-admin) account then it might not have access to get the WMI info\r\n  * Standard accounts usually work interactively and not through a network logon because logons with the `INTERACTIVE` group have rights but not `Users` itself.",
      "created_at": "2021-03-22T21:19:19Z",
      "updated_at": "2021-03-22T21:21:00Z"
    },
    {
      "author": "scriptingstudio",
      "author_association": "NONE",
      "body": "> So my guess is that Get-Printer -ComputerName ps1 isn't actually using WSMan to connect to ps1 but is instead doing something like the following:\r\n\r\nIt is a technical nonsense, because expression `Get-CimInstance -ClassName MSFT_Printer -Namespace ROOT/StandardCimV2 -Filter \"ComputerName='ps1'\"` makes a local query and filter looks strange, and output is useless.\r\n\r\n> If it's a standard (non-admin) account then it might not have access to get the WMI info\r\n\r\nAgree. \r\n```powershell\r\n> gwmi MSFT_printer -Namespace ROOT/StandardCimv2 -comp ps1\r\ngwmi : Access denied.\r\n```",
      "created_at": "2021-03-23T17:59:43Z",
      "updated_at": "2021-03-23T17:59:43Z"
    },
    {
      "author": "jborean93",
      "author_association": "COLLABORATOR",
      "body": "> It is a technical nonsense, because expression Get-CimInstance -ClassName MSFT_Printer -Namespace ROOT/StandardCimV2 -Filter \"ComputerName='ps1'\" makes a local query and filter looks strange, and output is useless.\r\n\r\nIt might be technical nonsense but it is what is happening. The `ComputerName` parameter exposed by `Get-Printer` just relates to the `ComputerName` property on the CIM class. It's not like the `ComputerName` parameter on things like `Get-Process`, `Get-Service`, `Invoke-Command` which is designed to run on the remote host specified. The CDXML cmdlets are basically a cmdlet definition in XML that maps the CIM class specified in the XML to a cmdlet automatically. There are other things it adds on top of just a native CIM call, like formatting, but the same underlying mechanism is used to retrieve the raw data.",
      "created_at": "2021-03-23T18:59:47Z",
      "updated_at": "2021-03-23T19:00:29Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2021-03-25T00:00:05Z",
      "updated_at": "2021-03-25T00:00:05Z"
    }
  ],
  "created_at": "2021-03-22T16:11:00Z",
  "labels": [
    "Issue-Question",
    "Resolution-Answered",
    "Needs-Triage"
  ],
  "number": 15082,
  "state": "closed",
  "title": "[issue-question] PrintManagement module",
  "updated_at": "2021-03-25T00:00:05Z"
}