{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10840",
  "author": "SteveL-MSFT",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\n`StopUpstreamCommandsException` is a special exception used by cmdlets to tell PowerShell to stop upstream commands as it doesn't need any additional input.  For example: \"1,2,3 | select-object -first 1\" should stop the first part of the pipeline after `select-object` received 1 object as the request has been fulfilled.  However, if you use `1,2,3 | select-object -first 1 -errorvariable err`, the internal exception (which is handled) is put into the `$err` variable (although `$error` it not populated).  This means that scripts may treat this as an error or special case this `System error` and throwing it away.\r\n\r\nThe fix is in the code where the engine populates `-ErrorVariable` to discard `StopUpstreamCommandsException`.\r\n\r\nI don't believe this is a breaking change as anyone working around this by throwing away that specific error (because `select-object` actually succeeded) won't be impacted by this change.\r\n\r\n## PR Context\r\n\r\nFix https://github.com/PowerShell/PowerShell/issues/9185\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2019-10-22T23:38:32Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT Why do you start to add prefixes to PR titles? This is contrary to our conventions.\r\n",
      "created_at": "2019-10-20T06:23:43Z",
      "updated_at": "2019-10-20T06:23:43Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov trying something based on an article I read about good commit messages.  I suppose the prefix can be just in the commit and not in the PR title.",
      "created_at": "2019-10-20T16:28:11Z",
      "updated_at": "2019-10-20T16:28:11Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT All that we can not formalize is a human factor. I mean, something that can make things clearer can also be misleading. In this case, the simpler the better. So better not to have prefixes at all. \r\nThe most useful thing that we now have is the PR number in the commit title. This allows us to quickly find PR on GitHub and a history of the change. GitLens in VS Code greatly support this.",
      "created_at": "2019-10-20T17:37:42Z",
      "updated_at": "2019-10-20T17:37:42Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT `:bug:` (\ud83d\udc1b) `-gt` `BUG:` \ud83d\ude09 \r\n\r\nhttps://gitmoji.carloscuesta.me/\r\n\r\nBut regardless, I agree that for commit messages having an easily-identifiable prefix can be a nice-to-have. Whether that's emoji or text is, I suppose, up to you guys. \ud83d\ude04 \r\n\r\n<blockquote><img src=\"https://gitmoji.carloscuesta.me/static/gitmoji.gif\" width=\"48\" align=\"right\"><div><strong><a href=\"https://gitmoji.carloscuesta.me\">gitmoji</a></strong></div><div>An emoji guide for your commit messages.</div></blockquote>",
      "created_at": "2019-10-20T18:16:01Z",
      "updated_at": "2019-10-20T18:16:18Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.0.0-preview.6` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.0.0-preview.6)\n",
      "created_at": "2019-11-21T22:35:44Z",
      "updated_at": "2019-11-21T22:35:44Z"
    }
  ],
  "created_at": "2019-10-18T23:54:08Z",
  "number": 10840,
  "state": "closed",
  "title": "Fix command runtime so StopUpstreamCommandsException doesn't get populated in `-ErrorVariable`",
  "updated_at": "2019-11-21T22:35:44Z"
}