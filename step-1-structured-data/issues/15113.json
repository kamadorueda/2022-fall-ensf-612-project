{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15113",
  "author": "p0W3RH311",
  "body": "Hi Guys !!\r\n\r\n`-in` operator and here variant  are great but it perform only in list and its  checks only for membership:\r\n\r\n```\r\nPS C:\\> 'b' -in 'a','b','c'\r\nTrue\r\n```\r\n\r\nbut its great to support  to checks for substrings and to keys in dictionnary:\r\n\r\n**### substring**:\r\n\r\n```\r\nPS> \"shell\" -in \"powershell\"\r\nTrue\r\n\r\n\r\nPS> \"b\" -in \"earth\"\r\nFalse\r\n\r\n\r\nPS> \"shell\" -notin \"powershell\"\r\nFalse\r\n```\r\n\r\n\r\n**### checks keys in dictionnary:**\r\n\r\n```\r\n\r\nPS> 'b' -in @{a=5; b=2}\r\nTrue # actually it return False\r\n```",
  "closed_at": "2021-05-06T18:21:00Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "I don't think reusing the operator in this way makes sense; it creates ambiguity for something like `$a -in $b` -- you have no way of knowing if `$b` is a string or an array, or a hashtable, without going to find both variables to see what's going on.\r\n\r\nAlso, why would it only be used to target keys in dictionaries rather than values? The usage in that case has an extra layer of ambiguity. ",
      "created_at": "2021-03-28T21:36:42Z",
      "updated_at": "2021-03-28T21:36:42Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Language working group:\r\nWe agree with @vexx32's comment above, and will close this issue.",
      "created_at": "2021-05-06T18:21:00Z",
      "updated_at": "2021-05-06T18:21:00Z"
    }
  ],
  "created_at": "2021-03-28T21:30:54Z",
  "labels": [
    "Issue-Enhancement",
    "WG-Language",
    "Resolution-Declined"
  ],
  "number": 15113,
  "state": "closed",
  "title": "-in  operators",
  "updated_at": "2021-05-06T18:21:08Z"
}