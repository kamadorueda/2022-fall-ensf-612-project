{
  "_url": "https://github.com/PowerShell/PowerShell/issues/18142",
  "author": "powercode",
  "body": "### Produce one-line output in Format-Custom for DateTime by default\r\n\r\nDates and times get really spammy in `Format-Custom`\r\n\r\nThis simple object with a datetime\r\n```powershell\r\n[pscustomobject]@{Time = [datetime]::now} | format-custom\r\n```\r\nproduces **148** lines of output!\r\n\r\n```text\r\n\r\nclass PSCustomObject\r\n{\r\n  Time = \r\n    class DateTime\r\n    {\r\n      Date = \r\n        class DateTime\r\n        {\r\n          Date = \r\n            class DateTime\r\n            {\r\n              Date = \r\n                class DateTime\r\n                {\r\n                  Date = \r\n                    class DateTime\r\n                    {\r\n                      Date = 2022-09-21 00:00:00\r\n                      Day = 21\r\n                      DayOfWeek = Wednesday\r\n                      DayOfYear = 264\r\n                      Hour = 0\r\n                      Kind = Local\r\n                      Millisecond = 0\r\n                      Minute = 0\r\n                      Month = 9\r\n                      Second = 0\r\n                      Ticks = 637993152000000000\r\n                      TimeOfDay = 00:00:00\r\n                      Year = 2022\r\n                      DateTime = den 21 september 2022 00:00:00\r\n                    }\r\n                  Day = 21\r\n                  DayOfWeek = Wednesday\r\n                  DayOfYear = 264\r\n                  Hour = 0\r\n                  Kind = Local\r\n                  Millisecond = 0\r\n                  Minute = 0\r\n                  Month = 9\r\n                  Second = 0\r\n                  Ticks = 637993152000000000\r\n                  TimeOfDay = \r\n                    class TimeSpan\r\n                    {\r\n                      Ticks = 0\r\n                      Days = 0\r\n                      Hours = 0\r\n                      Milliseconds = 0\r\n                      Minutes = 0\r\n                      Seconds = 0\r\n                      TotalDays = 0\r\n                      TotalHours = 0\r\n                      TotalMilliseconds = 0\r\n                      TotalMinutes = 0\r\n                      TotalSeconds = 0\r\n                    }\r\n                  Year = 2022\r\n                  DateTime = den 21 september 2022 00:00:00\r\n                }\r\n              Day = 21\r\n              DayOfWeek = Wednesday\r\n              DayOfYear = 264\r\n              Hour = 0\r\n              Kind = Local\r\n              Millisecond = 0\r\n              Minute = 0\r\n              Month = 9\r\n              Second = 0\r\n              Ticks = 637993152000000000\r\n              TimeOfDay = \r\n                class TimeSpan\r\n                {\r\n                  Ticks = 0\r\n                  Days = 0\r\n                  Hours = 0\r\n                  Milliseconds = 0\r\n                  Minutes = 0\r\n                  Seconds = 0\r\n                  TotalDays = 0\r\n                  TotalHours = 0\r\n                  TotalMilliseconds = 0\r\n                  TotalMinutes = 0\r\n                  TotalSeconds = 0\r\n                }\r\n              Year = 2022\r\n              DateTime = den 21 september 2022 00:00:00\r\n            }\r\n          Day = 21\r\n          DayOfWeek = Wednesday\r\n          DayOfYear = 264\r\n          Hour = 0\r\n          Kind = Local\r\n          Millisecond = 0\r\n          Minute = 0\r\n          Month = 9\r\n          Second = 0\r\n          Ticks = 637993152000000000\r\n          TimeOfDay = \r\n            class TimeSpan\r\n            {\r\n              Ticks = 0\r\n              Days = 0\r\n              Hours = 0\r\n              Milliseconds = 0\r\n              Minutes = 0\r\n              Seconds = 0\r\n              TotalDays = 0\r\n              TotalHours = 0\r\n              TotalMilliseconds = 0\r\n              TotalMinutes = 0\r\n              TotalSeconds = 0\r\n            }\r\n          Year = 2022\r\n          DateTime = den 21 september 2022 00:00:00\r\n        }\r\n      Day = 21\r\n      DayOfWeek = Wednesday\r\n      DayOfYear = 264\r\n      Hour = 9\r\n      Kind = Local\r\n      Millisecond = 945\r\n      Minute = 36\r\n      Month = 9\r\n      Second = 31\r\n      Ticks = 637993497919455174\r\n      TimeOfDay = \r\n        class TimeSpan\r\n        {\r\n          Ticks = 345919455174\r\n          Days = 0\r\n          Hours = 9\r\n          Milliseconds = 945\r\n          Minutes = 36\r\n          Seconds = 31\r\n          TotalDays = 0,400369739784722\r\n          TotalHours = 9,60887375483333\r\n          TotalMilliseconds = 34591945,5174\r\n          TotalMinutes = 576,53242529\r\n          TotalSeconds = 34591,9455174\r\n        }\r\n      Year = 2022\r\n      DateTime = den 21 september 2022 09:36:31\r\n    }\r\n}\r\n```\r\n\r\nI suggest that we should special-case DateTime in the custom formatted to only print the string same string as we get when we limit the depth:\r\n\r\n```powershell\r\n[pscustomobject]@{Obj = [PSCustomObject]@{Time = [datetime]::now}} | fc -Depth 1\r\n```\r\n```text\r\nclass PSCustomObject\r\n{\r\n  Obj =\r\n    class PSCustomObject\r\n    {\r\n      Time = 2022-09-21 09:38:35\r\n    }\r\n}\r\n```\r\n\r\nSo that\r\n```powershell\r\n[pscustomobject]@{Time = [datetime]::now} | format-custom\r\n```\r\nwould output \r\n```text\r\nclass PSCustomObject\r\n{\r\n    Time = 2022-09-21 09:38:35\r\n}\r\n```\r\nMaybe use `-Force` to get the full recursive version?\r\n\r\n### Proposed technical implementation details (optional)\r\n\r\n_No response_",
  "closed_at": null,
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "You can see a more real world case with `dir * | select -first 1 | format-custom` which has a datetime property that does the same.  I would agree that the current output is probably not as useful as rendering datetime as a single string.  If we are special casing datetime only, then I don't like using the ambiguous `-force` to get current behavior and would prefer something like `-expanddatetime`.",
      "created_at": "2022-09-26T18:13:46Z",
      "updated_at": "2022-09-26T18:13:46Z"
    },
    {
      "author": "dkaszews",
      "author_association": "CONTRIBUTOR",
      "body": "> I don't like using the ambiguous -force to get current behavior and would prefer something like -expanddatetime.\r\n\r\n+1 to that, `-Force` already has way too many different meanings, from obvious overwriting existing files in `Move-Item` to odd like showing hidden files in `Get-ChildItem`. ",
      "created_at": "2022-09-28T21:39:51Z",
      "updated_at": "2022-09-28T21:39:51Z"
    },
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "How about a more general parameter like `-ExpandType:string[]`?\r\n\r\n```powershell\r\n# get single line date\r\ndir | select -first 1 | format-custom \r\n```\r\n\r\n```powershell\r\n# get way too much output\r\ndir | select -first 1 | format-custom -ExpandType:System.Datetime, SomeFutureNoisyType\r\n```\r\n",
      "created_at": "2022-10-04T13:53:19Z",
      "updated_at": "2022-10-04T13:53:19Z"
    },
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "DateTime already has an entry for custom formatting, but it is not applied when datetime is a member.\r\n\r\n```csharp\r\n        private static IEnumerable<FormatViewDefinition> ViewsOf_System_DateTime()\r\n        {\r\n            yield return new FormatViewDefinition(\"DateTime\",\r\n                CustomControl.Create()\r\n                    .StartEntry()\r\n                        .AddPropertyExpressionBinding(@\"DateTime\")\r\n                    .EndEntry()\r\n                .EndControl());\r\n        }\r\n```\r\n```powershell\r\n[DateTime]::Now | format-custom\r\n\r\nden 14 oktober 2022 09:51:00\r\n```",
      "created_at": "2022-10-14T07:53:59Z",
      "updated_at": "2022-10-14T07:53:59Z"
    }
  ],
  "created_at": "2022-09-21T07:42:24Z",
  "number": 18142,
  "state": "open",
  "title": "Special case DateTime/TimeSpan in Format-Custom",
  "updated_at": "2022-10-14T07:53:59Z"
}