{
  "_url": "https://github.com/PowerShell/PowerShell/issues/16443",
  "author": "oranki",
  "body": "### Prerequisites\r\n\r\n- [X] Write a descriptive title.\r\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- [X] Search the existing issues.\r\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\r\n\r\n### Steps to reproduce\r\n\r\nAfter upgrading from 7.1.5 to 7.2.0 on Linux, both $Host.UI.RawUI.ReadKey() and [Console]::ReadKey() functions return keycode 27 (ESC) when any of the arrow keys are pressed.\r\n\r\n### Expected behavior\r\n\r\n```console\r\n$host.UI.RawUI.ReadKey()\r\n\r\nVirtualKeyCode Character ControlKeyState KeyDown\r\n-------------- --------- --------------- -------\r\n            37                        0    True\r\n\r\nWhen arrow key left is pressed; other arrows produce codes 38,39,40\r\n```\r\n\r\n\r\n### Actual behavior\r\n\r\n```console\r\n---clip---\r\n$host.UI.RawUI.ReadKey()\r\n\r\nVirtualKeyCode Character ControlKeyState KeyDown\r\n-------------- --------- --------------- -------\r\n            27                        0    True\r\n---clap---\r\nWhen any of the four arrow keys is pressed, result is always above.\r\n\r\nAdditionally, character 'A' is typed on next cmdline when up arrow is pressed, other arrows type chars C,B,D:\r\n\r\n---clip---\r\nPS > $host.UI.RawUI.ReadKey(\"NoEcho,IncludeKeyDown\")\r\n\r\nVirtualKeyCode Character ControlKeyState KeyDown\r\n-------------- --------- --------------- -------\r\n            27         [0m               0    True\r\n\r\nPS > A\r\n---clap---\r\nPressing enter produces result as if I had typed the 'A' myself:\r\n\r\n---clip---\r\nA: The term 'A' is not recognized as a name of a cmdlet, function, script file, or executable program.\r\nCheck the spelling of the name, or if a path was included, verify that the path is correct and try again.\r\n---clap---\r\n\r\nReadKey() argument \"NoEcho\" has no effect on above behaviour.\r\n\r\nFinally, the problem is not reproducible when running a powershell script from another shell. Executing script below from\r\neither bash or zsh produces correct result, but executing from pwsh does not.\r\n\r\n---clip---\r\n#!/usr/bin/pwsh\r\n$host.UI.RawUI.ReadKey()\r\n---clap---\r\n```\r\n\r\n\r\n### Error details\r\n\r\n_No response_\r\n\r\n### Environment data\r\n\r\n```powershell\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.0\r\nPSEdition                      Core\r\nGitCommitId                    7.2.0\r\nOS                             Linux 5.10.0-8-amd64 #1 SMP Debian 5.10.46-4 (2021-08-03)\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\n\r\n### Visuals\r\n\r\n_No response_",
  "closed_at": "2022-09-16T21:57:54Z",
  "comments": [
    {
      "author": "ScoutmanPt",
      "author_association": "NONE",
      "body": "Howdy , any update on this?",
      "created_at": "2022-01-24T18:21:36Z",
      "updated_at": "2022-01-24T18:21:36Z"
    },
    {
      "author": "oranki",
      "author_association": "NONE",
      "body": "Issue is still present in version 7.2.1.",
      "created_at": "2022-03-02T06:27:32Z",
      "updated_at": "2022-03-02T06:27:32Z"
    },
    {
      "author": "mark-hubers",
      "author_association": "NONE",
      "body": "Still a problem in version 7.2.4.",
      "created_at": "2022-05-21T15:19:26Z",
      "updated_at": "2022-05-21T15:19:26Z"
    },
    {
      "author": "mark-hubers",
      "author_association": "NONE",
      "body": "I cannot wait for this so I made a hack around this problem for now.  Hope it help others as I need to be able to use up and down arrow on Linux/Mac for a console menu.\r\n\r\n```\r\n$CurrentHost = Get-Host\r\n$key1 = $CurrentHost.UI.RawUI.ReadKey(\"NoEcho,IncludeKeyDown\")\r\n\r\n## A bug with Linux and Mac where arrow keys are return in 2 chars.  First is esc follow by A,B,C,D\r\nif ($key1.VirtualKeyCode -eq 0x1B) {\r\n   ## Found that we got an esc chair so we need to grab one more char\r\n   $key2 = $CurrentHost.UI.RawUI.ReadKey(\"NoEcho,IncludeKeyDown\")\r\n\r\n   ## We just care about up and down arrow mapping here for now.\r\n   if ($key2.VirtualKeyCode -eq 0x41) {\r\n      # VK_UP = 0x26 up-arrow\r\n      $key1.VirtualKeyCode = 0x26\r\n   }\r\n   if ($key2.VirtualKeyCode -eq 0x42) {\r\n      # VK_DOWN = 0x28 down-arrow\r\n      $key1.VirtualKeyCode = 0x28\r\n   }\r\n}\r\n\r\n$key1\r\n```\r\n",
      "created_at": "2022-05-23T17:52:29Z",
      "updated_at": "2022-05-23T17:52:29Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Opened https://github.com/dotnet/runtime/issues/75305 to ask for insights and clarification.",
      "created_at": "2022-09-08T20:40:30Z",
      "updated_at": "2022-09-08T20:40:30Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "This was resolved in .NET 7-RC.1 release. The screenshot below is PowerShell built against .NET 7-RC.1 running on Ubuntu WSL2.\r\n\r\n![image](https://user-images.githubusercontent.com/127450/190806731-19682566-64e7-44c7-9667-d6ce09f07d9e.png)\r\n",
      "created_at": "2022-09-16T21:57:52Z",
      "updated_at": "2022-09-16T21:58:51Z"
    }
  ],
  "created_at": "2021-11-11T08:20:44Z",
  "number": 16443,
  "state": "closed",
  "title": "ReadKey() functions misread arrow keys as ESC on 7.2.0 / Linux",
  "updated_at": "2022-09-16T21:58:51Z"
}