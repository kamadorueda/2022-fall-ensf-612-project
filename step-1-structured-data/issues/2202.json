{
  "_url": "https://github.com/PowerShell/PowerShell/issues/2202",
  "author": "dchristian3188",
  "body": "## Steps to reproduce\n\n```\nSplit-Path -Path \"\\\\server1\\Share\"\nSplit-Path -Path \"\\\\server1\\Share\" -Leaf\nSplit-Path -Path \"\\\\server1\\Share\" -Parent\n```\n## Expected behavior\n\n```\nSplit-Path -Path \"\\\\server1\\Share\" should return \"\\\\server1\"\nSplit-Path -Path \"\\\\server1\\Share\" -leaf should return \"Share\"\nSplit-Path -Path \"\\\\server1\\Share\" -Parent should return \"\\\\server1\"\n```\n## Actual behavior\n\nWhenever split-pat is ran with a \"2 level\" UNC path it returns a null value. \n3 levels work as excepted. \nExample \n\n```\nSplit-Path -Path \"\\\\server1\\Share\\folder1\" -Parent returns \\\\server1\\Share\nand\nSplit-Path -Path \"\\\\server1\\Share\\folder1\" -Leaf returns folder1\n```\n## Environment data\n\nName                           Value\n\n---\n\nPSVersion                      5.0.10586.494\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\nBuildVersion                   10.0.10586.494\nCLRVersion                     4.0.30319.42000\nWSManStackVersion              3.0\nPSRemotingProtocolVersion      2.3\nSerializationVersion           1.1.0.1\n",
  "closed_at": "2016-09-18T05:11:47Z",
  "comments": [
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "Hi @dchristian3188 ! Thank you for reporting the issue.\nI tried it on the latest pre-release (v6.0.0-alpha.9) and it works as expected.\n\nI'm closing it for now.\nIf you can repro the problem on  v6.0.0-alpha.9, please reopen the issue with details.\n",
      "created_at": "2016-09-08T04:37:50Z",
      "updated_at": "2016-09-08T04:37:50Z"
    },
    {
      "author": "dchristian3188",
      "author_association": "CONTRIBUTOR",
      "body": "Hi @vors ,\n\nI was able to reproduce on the latest build.  I tracked it down to FileSystemProvider.cs. Looking at the comments it looks like returning the empty strings is intentional. \n\n[https://github.com/PowerShell/PowerShell/blob/master/src/System.Management.Automation/namespaces/FileSystemProvider.cs#L4733](url)\n\n[https://github.com/PowerShell/PowerShell/blob/master/src/System.Management.Automation/namespaces/FileSystemProvider.cs#L5531](url)\n\nWhat do you think about removing these restrictions? \n\nExpected output:\nSplit-Path -Path \"\\server1\\Share\" should return \"\\server1\"\nSplit-Path -Path \"\\server1\\Share\" -leaf should return \"Share\"\nSplit-Path -Path \"\\server1\\Share\" -Parent should return \"\\server1\"\n\nBuildInfo:\nName                           Value\n\n---\n\nBuildVersion                   3.0.0.0\nSerializationVersion           1.1.0.1\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\nPSVersion                      6.0.0-alpha\nCLRVersion\nPSEdition                      Core\nGitCommitId                    v6.0.0-alpha.10-1-g1c3c719521483b142e22bf93e62186db9eb5845a\nWSManStackVersion              3.0\nPSRemotingProtocolVersion      2.3\n",
      "created_at": "2016-09-16T02:33:37Z",
      "updated_at": "2016-09-16T02:33:37Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "Hm, your original repro used two back-slashes `\\\\`, but GitHub displayed it as one `\\` and that's what caused confusion!\n\nSee\n\n```\nSplit-Path -Path \"\\server1\\\\Share\"\nSplit-Path -Path \"\\server1\\\\Share\" -Leaf\nSplit-Path -Path \"\\server1\\\\Share\" -Parent\n```\n\nis rendered like this\n\nSplit-Path -Path \"\\server1\\Share\"\nSplit-Path -Path \"\\server1\\Share\" -Leaf\nSplit-Path -Path \"\\server1\\Share\" -Parent\n\nThis is, because `\\` is a markdown escaping character.\nPlease, what out for this in the future and [use code-blocks to preserve the formatting](https://github.com/PowerShell/PowerShell/issues/2144#issuecomment-243747540).\nI'm going to update the issue to use the code-snippet, so we have an accurate repro.\n",
      "created_at": "2016-09-18T04:56:04Z",
      "updated_at": "2016-09-18T04:56:04Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "Confirmed! \n\n```\nSplit-Path -Path \"\\\\server1\\Share\"\n```\n\nOn Windows returns `$null`\nOn Unix returns `//server1`\n\nNote that `Split-Path -Path \"\\server1\\Share\"` (with 1 forward slash) returns the correct result on both.\n",
      "created_at": "2016-09-18T04:59:55Z",
      "updated_at": "2016-09-18T04:59:55Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "@dchristian3188 according to the comment in the code that you referenced, it's expected:\n\n```\n// For UNC paths we need to ensure that \"\\\\server\\share\" is\n// maintained as a single unit. There is no child for \"\\\\server\\share\"\n```\n\nAnd then in `IsUNCRoot()`\n\n```\n    /// <summary>\n    /// Determines if the specified path is a root of a UNC share\n    /// by counting the path separators \"\\\" following \"\\\\\". If only\n    /// one path separator is found we know the path is in the form\n    /// \"\\\\server\\share\" and is a valid UNC root.\n    /// </summary>\n```\n\nAccording to [this documentation](https://msdn.microsoft.com/en-us/library/gg465305.aspx) share name is indeed a mandatory part of UNC part, so I would say that it's by design.\n\nMeantime, the fact that result is platform specific needs further conversation (#2301).\ncc @lzybkr \n",
      "created_at": "2016-09-18T05:05:04Z",
      "updated_at": "2016-09-18T05:11:33Z"
    }
  ],
  "created_at": "2016-09-07T17:12:32Z",
  "labels": [
    "WG-Cmdlets",
    "Resolution-By Design"
  ],
  "number": 2202,
  "state": "closed",
  "title": "Split-Path Fails on UNC",
  "updated_at": "2016-09-18T05:11:47Z"
}