{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11387",
  "author": "KirkMunro",
  "body": "# Summary of the new feature/enhancement\r\n\r\nAs a PowerShell user\r\nI want `Get-Module -ListAvailable -All` to be much more performant than it is right now\r\nso that I don't have to wait an eternity when I'm processing modules on a computer with PowerShell.\r\n\r\n# Proposed technical implementation details (optional)\r\n\r\nThe problem here is simple:\r\n\r\nIf I run `$env:PSModulePath -split ';' | Get-ChildItem -Recurse`, it returns in 1.121 seconds.\r\n\r\nIf I run `Get-Module -ListAvailable -All`, it returns in 35.803 seconds.\r\n\r\nSomething is very wrong with the way `Get-Module` is implemented for it to take over 30x longer than performing a file-system scan of all module folders.\r\n\r\nThe fix here would be to refactor the `GetModuleCommand` class methods and helper methods that it relies on significantly so that modules can be retrieved much more quickly. Looking at that code, it isn't that surprising that this command takes so long, and there is definitely some room for refactoring.",
  "closed_at": "2019-12-19T08:00:10Z",
  "comments": [
    {
      "author": "BrucePay",
      "author_association": "COLLABORATOR",
      "body": "> The problem here is simple....\r\n> $env:PSModulePath -split ';' | Get-ChildItem -Recurse,\r\n\r\nWhile I agree this is ridiculously slow, the above is not really representative of what's happening since `Get-Module` reads and deserializes each `.psd1` it encounters and `Get-ChildItem` does not.",
      "created_at": "2019-12-18T05:14:04Z",
      "updated_at": "2019-12-18T05:14:04Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "It was reported in #10983 for the first time - security fix consequences.\r\nThis would have to be fixed in Windows but we get #11074\r\nAlso we have #10309\r\n\r\n\r\n",
      "created_at": "2019-12-18T06:52:15Z",
      "updated_at": "2019-12-18T06:52:15Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as duplicate and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2019-12-19T08:00:09Z",
      "updated_at": "2019-12-19T08:00:09Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov How is this a duplicate of those? One talks specifically about an API for CDXML modules. Do we know that is the single root cause here? The others talk about PowerShell launching and other things, but fail to identify that `Get-Module -ListAvailable -All` is poorly written and could use some refactoring. There may be things we cannot change due to security consequences, but shouldn't there be investigation to see what we can change, and make sure that performance is optimal without compromising security?",
      "created_at": "2019-12-19T18:20:52Z",
      "updated_at": "2019-12-19T18:20:52Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@KirkMunro I believe the single root cause is here.  I measured the scenario. Safer API became slow after mentioned Windows security fix. I guess most of Windows file operations too. I'd prefer Windows security team fixed this issue.",
      "created_at": "2019-12-19T18:35:16Z",
      "updated_at": "2019-12-19T18:35:16Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov Ok. Thanks for the extra information, that helps.",
      "created_at": "2019-12-19T18:41:25Z",
      "updated_at": "2019-12-19T18:41:25Z"
    }
  ],
  "created_at": "2019-12-17T23:48:46Z",
  "number": 11387,
  "state": "closed",
  "title": "Fix the performance of `Get-Module -ListAvailable -All`",
  "updated_at": "2019-12-19T18:41:26Z"
}