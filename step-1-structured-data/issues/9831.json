{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9831",
  "author": "DarwinJS",
  "body": "# Summary of the new feature/enhancement\r\n\r\nMaintain PowerShell 7 Compatibility Profiles (https://github.com/PowerShell/PSScriptAnalyzer/tree/development/PSCompatibilityCollector/profiles) throughout the preview release phase so that everyone can easily understand how the releases are making progress to supporting their existing PowerShell code.\r\n\r\nIt might actually also help generate knowledge about what needs addressing before a GA release.\r\n\r\nWhile it is understood that these would eventually be made available - this issue is to lobby for these profiles to become a deliberate and managed part of each agile iteration of PowerShell 7.\r\n\r\n# Proposed technical implementation details (optional)\r\n\r\nBrainstorm and scope what these profiles should cover.\r\nRelease a set of PowerShell 7 compatibility profiles with each preview release.\r\n\r\n/cc @joeyaiello @SteveL-MSFT \r\n",
  "closed_at": "2019-06-14T11:00:14Z",
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Interesting idea.  cc @rjmholt ",
      "created_at": "2019-06-06T07:57:24Z",
      "updated_at": "2019-06-06T07:57:24Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "Yeah good idea!\r\n\r\nFor now they should go [here](https://github.com/PowerShell/PSScriptAnalyzer/tree/development/PSCompatibilityCollector/optional_profiles) (the `profiles` folder ships with PSSA and I already doubled the size of the module).\r\n\r\nWe should implement https://github.com/PowerShell/PSScriptAnalyzer/issues/1148 to really deliver this.",
      "created_at": "2019-06-06T15:26:45Z",
      "updated_at": "2019-06-06T15:54:49Z"
    },
    {
      "author": "DarwinJS",
      "author_association": "CONTRIBUTOR",
      "body": "Glad there is some energy around it!\r\n\r\nYou guys might already be thinking this, but if the ScriptAnalyzer itself is a different dev team, I would say the PowerShell team should own the initiative on developing the PowerShell 7 data files - even if in the other repo - so that the objective of keeping high customer value by having it keep pace with the functional improvements in each sprint is realized.\r\n",
      "created_at": "2019-06-06T15:56:24Z",
      "updated_at": "2019-06-06T15:56:24Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as external and has not had any activity for **1 day**. It has been be closed for housekeeping purposes.",
      "created_at": "2019-06-14T11:00:13Z",
      "updated_at": "2019-06-14T11:00:13Z"
    },
    {
      "author": "DarwinJS",
      "author_association": "CONTRIBUTOR",
      "body": "msftbot seems to be miserly on closing issues eh?",
      "created_at": "2019-06-14T11:10:43Z",
      "updated_at": "2019-06-14T11:10:43Z"
    }
  ],
  "created_at": "2019-06-05T15:44:39Z",
  "labels": [
    "Issue-Enhancement",
    "Resolution-External"
  ],
  "number": 9831,
  "state": "closed",
  "title": "Maintain a PSScriptAnalyzer Profile for PowerShell 7 for Windows AND Linux THROUGHOUT Preview Releases",
  "updated_at": "2019-06-14T11:10:43Z"
}