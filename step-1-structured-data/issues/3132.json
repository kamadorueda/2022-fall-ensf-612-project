{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3132",
  "author": "rkeithhill",
  "body": "<!--\r\n\r\nIf it is a bug report:\r\n- make sure you are able to repro it on the latest released version. \r\nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\r\n- Search the existing issues.\r\n- Refer to the [FAQ](../docs/FAQ.md).\r\n- Refer to the [known issues](../docs/KNOWNISSUES.md).\r\n- Fill out the following repro template\r\n\r\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\r\n-->\r\n\r\nSteps to reproduce\r\n------------------\r\nToday if you use an executable like git.exe (which uses stderr for progress not just errors), in the PowerShell console stderr appears like stdout (no ErrorRecords). In ISE, stderr is converted to ErrorRecords and displays in red.  RE git.exe using stderr to report progress see http://git.661346.n2.nabble.com/git-push-output-goes-into-stderr-td6758028.html\r\n\r\nThis leads to less than a desirable user experience in ISE:\r\n\r\n![image](https://cloud.githubusercontent.com/assets/5177512/22857505/5cbf68b2-f063-11e6-8f5c-b4f82423e490.png)\r\n\r\nThe above looks like an error but it is just git reporting progress i.e. that it switched to the branch.\r\n\r\nExpected behavior\r\n-----------------\r\n\r\nI would like a way to configure an app like git.exe to behave in a host that handles stderr like ISE does, to instead behave like the console. So the same command looks like this:\r\n\r\n![image](https://cloud.githubusercontent.com/assets/5177512/22857529/1bd44a74-f064-11e6-8eb2-5fb1bbab071b.png)\r\n\r\nAlso, it might be useful if a script or module had a way to query the host (or settings for a particular exe) to determine how its stderr is being handled. \r\n\r\nActual behavior\r\n---------------\r\nThe progress output sent to stderr by Git is displayed as an error when it is **NOT** an error. I have a feeling this may be even more common in the Linux world so it would be good to have a more flexible \"stderr handling\" strategy than the current one.\r\n\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\nName                           Value\r\n----                           -----\r\nPSVersion                      5.1.14393.693\r\nPSEdition                      Desktop\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nBuildVersion                   10.0.14393.693\r\nCLRVersion                     4.0.30319.42000\r\nWSManStackVersion              3.0\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\n```\r\n",
  "closed_at": "2017-02-11T23:28:48Z",
  "comments": [
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "Oh, interesting. So like a PowerShell variable that lets you either redirect stderr into the PowerShell Error stream or not. \r\n\r\nSomething like `$PSRedirectErrors = $True` or the negative `$PSPassthruError = $True`?",
      "created_at": "2017-02-11T22:41:41Z",
      "updated_at": "2017-02-11T22:41:41Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "Untested and needs verification - but I believe https://github.com/PowerShell/PowerShell/pull/2450 should address hosts like the ISE and remoting that do not handle stderr like the console host. Maybe @vors can chime in to confirm.\r\n\r\nOf course, that means these changes need to be pulled back into Windows for the ISE to pick it up.",
      "created_at": "2017-02-11T22:48:15Z",
      "updated_at": "2017-02-11T22:48:15Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "Jason is correct, but it's a different PR: https://github.com/PowerShell/PowerShell/pull/1599",
      "created_at": "2017-02-11T23:07:09Z",
      "updated_at": "2017-02-11T23:27:24Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "Duplicate of #1465",
      "created_at": "2017-02-11T23:28:48Z",
      "updated_at": "2017-02-11T23:29:47Z"
    }
  ],
  "created_at": "2017-02-11T21:22:28Z",
  "labels": [
    "Resolution-Duplicate"
  ],
  "number": 3132,
  "state": "closed",
  "title": "Need better way to work with native exes that report progress on stderr",
  "updated_at": "2017-02-11T23:30:25Z"
}