{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3397",
  "author": "PaulHigin",
  "body": "Currently you can copy files over a PowerShell remote session via Copy-Item -ToSession/-FromSession, where you run Copy-Item on the client machine with an existing session variable:\r\n```powershell\r\nPS C:\\> $session = New-PSSession -Cn <targetMachine>\r\nPS C:\\> Copy-Item -ToSession $session -Path C:\\SetUp\\* -Dest C:\\SetUp\r\n```\r\nBut it would be much nicer to be able to copy files from within an remote interactive session, similar to what you can do in Remote Desktop:\r\n```powershell\r\nPS C:\\> Enter-PSSession -Cn <targetMachine> -ShareDrives @{ ClientCDrive = \"C:\\\" }\r\n[targetMachine]: PS C:\\> cd C:\\SetUp\r\n[targetMachine]: PS C:\\SetUp> Copy-Item -Path ClientCDrive:\\SetUp\\* -Dest .\r\n[targetMachine]: PS C:\\SetUp> dir\r\n    SetUpHelper.psm1\r\n    RunSetUp.ps1\r\n    ...\r\n[targetMachine]: PS C:\\SetUp> .\\RunSetUp.ps1\r\n```\r\nThis would be a new feature and require an RFC to provide a detailed design.",
  "closed_at": null,
  "comments": [
    {
      "author": "JaminShanti",
      "author_association": "NONE",
      "body": "to lower your expectations, ssh doesn't have this either.  If you want to copy a file to/from you have to scp or sftp.",
      "created_at": "2019-01-23T20:42:14Z",
      "updated_at": "2019-01-23T20:42:14Z"
    },
    {
      "author": "mkarpuk",
      "author_association": "NONE",
      "body": "It would be enough to just make PS Session available when connected to a remote interactive session.\r\n```\r\nPS C:\\> Enter-PSSession targetmachine\r\n[targetmachine]: PS C:\\> $S = Get-PSSession\r\n[targetMachine]: PS C:\\> Copy-Item c:\\test.txt c:\\destfolder -ToSession $S\r\n```\r\nUnfortunately, Get-PSSession returns nothing (I tried -ComputerName parameter as well).",
      "created_at": "2019-11-20T09:28:40Z",
      "updated_at": "2019-11-20T09:28:40Z"
    },
    {
      "author": "JaminShanti",
      "author_association": "NONE",
      "body": "I actually think pssession died when they added ssh to windows.  It will stay around but I doubt you will see new features.  Still waiting for a command line windows text editor which would help either way.",
      "created_at": "2019-11-20T12:16:34Z",
      "updated_at": "2019-11-20T12:16:34Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "We do still intend to continue PowerShell remoting over SSH (and legacy WinRM), even though SSH is now shipped with Windows, and so PSSession will remain for the foreseeable future.  But I still would like to see a file copy while within a PowerShell remoting session.  Maybe we can get some traction on this in the next sprint.",
      "created_at": "2019-11-22T18:38:53Z",
      "updated_at": "2019-11-22T18:38:53Z"
    },
    {
      "author": "JaminShanti",
      "author_association": "NONE",
      "body": "Rather see you spend your time adding a command line text editor. I can add vim as it\u2019s in git-SCM but if it\u2019s a production box many times I can only use binaries included in the operating system to edit text.  So the need is there.",
      "created_at": "2019-11-22T20:29:47Z",
      "updated_at": "2019-11-22T20:29:47Z"
    },
    {
      "author": "mkarpuk",
      "author_association": "NONE",
      "body": "@PaulHigin, thanks for the update.\r\n@JaminShanti, I agree, that text editor is important, but it's a different story. Copy functionality is also important basic feature that is widely used during remote sessions. I think that my suggestion (expose PS session used by Enter-PSSession) could be implemented quite easy.\r\nAs for the text editor... There is a psedit option that works with PowerShell ISE and VSCode and provides experience similar to editing remote files. I know that it's not the same, but at least something that already works.",
      "created_at": "2019-11-24T12:39:06Z",
      "updated_at": "2019-11-24T12:39:06Z"
    },
    {
      "author": "JaminShanti",
      "author_association": "NONE",
      "body": "Powershell ISE is a development application. It should not be on a production system.",
      "created_at": "2019-11-24T15:22:40Z",
      "updated_at": "2019-11-24T15:22:40Z"
    },
    {
      "author": "mkarpuk",
      "author_association": "NONE",
      "body": "As far as I know, you don't need it on the server. When you type psedit <file>, PowerShell ISE downloads file locally and allows editing it. When changes are saved, it uploads file back to the server. This requires typing psedit from the PowerShell ISE (which is inconvenient), but workable. https://4sysops.com/archives/psedit-edit-files-remotely-with-powershell/\n\n<blockquote><img src=\"https://4sysops.com/wp-content/uploads/2017/09/Connecting-to-a-remote-computer-600x400.png\" width=\"48\" align=\"right\"><div><img src=\"https://4sysops.com/wp-content/uploads/2016/06/cropped-favicon3-192x192.png\" height=\"14\"> 4sysops</div><div><strong><a href=\"https://4sysops.com/archives/psedit-edit-files-remotely-with-powershell/\">PSEdit - Edit files remotely with PowerShell</a></strong></div><div>In version 5.0, PowerShell ISE has got a new feature that lets you edit files on remote computers with a graphical editor. Its main purpose is to open scripts on a server; however, this also works for other text files like logfiles.</div></blockquote>",
      "created_at": "2019-11-24T15:37:00Z",
      "updated_at": "2019-11-24T15:37:02Z"
    }
  ],
  "created_at": "2017-03-22T21:17:05Z",
  "number": 3397,
  "state": "open",
  "title": "Interactive remote session should support file transfer",
  "updated_at": "2019-11-24T15:37:02Z"
}