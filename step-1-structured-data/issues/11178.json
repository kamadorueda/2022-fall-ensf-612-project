{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11178",
  "author": "ili101",
  "body": "# Summary of the new feature/enhancement\r\n[Scope](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_scopes?view=powershell-7) can be controlled by scope modifiers: `global:` , `local:`, etc or numbered scopes relative position: 1, 2, 3, etc.\r\nThe problem is that it's not implemented on all items to the same degree, see following list:\r\n\r\n|              |   Scope modifiers  |   Numbered scopes  |\r\n|:------------:|:------------------:|:------------------:|\r\n| **Variable** | :heavy_check_mark: | :heavy_check_mark: |\r\n| **Alias**    | :heavy_check_mark: | :heavy_check_mark: |\r\n| **Function** | :heavy_check_mark: |         :x:        |\r\n| **Enum**     |         :x:        |         :x:        |\r\n| **Class**    |         :x:        |         :x:        |\r\n\r\nExamples:\r\n```powershell\r\n& {\r\n    # Variable\r\n    $Global:MyVar1 = 'Value'\r\n    New-Variable -Name 'MyVar2' -Value 'Value' -Scope 1\r\n\r\n    # Alias\r\n    New-Alias -Name 'te' -Value Test-Example -Scope 1\r\n\r\n    # Function (No numbered scopes relative position option)\r\n    function global:Test-Example { }\r\n\r\n    # Enums (Can't be done)\r\n    enum MyEnum { }\r\n\r\n    # Class (Can't be done)\r\n    class MyClass { }\r\n}\r\n\r\n$MyVar1\r\n$MyVar2\r\nte\r\nTest-Example\r\n[MyEnum] # Error.\r\n[MyClass] # Error.\r\n```\r\n\r\n# Proposed technical implementation\r\nAdd scope modifiers options for Enums and Classes with the existing syntax from Variables, Functions:\r\n```powershell\r\nenum global:MyEnum { }\r\nclass global:MyClass { }\r\n```\r\nAdd numbered scopes options for Functions, Enums and Classes:\r\nSuggested option one, similar to `New-Variable -Scope 1` and `New-Alias -Scope 1` add something like `New-Function -Scope 1`, `New-Enum -Scope 1` and `New-Class -Scope 1`.\r\nSuggested option two, make it possible to use the same syntax of scope modifiers for numbered scopes too:\r\n```powershell\r\n$1:MyVar1 = 'Value'\r\nfunction 1:Test-Example { }\r\nenum 1:MyEnum { }\r\nclass 1:MyClass { }\r\n```",
  "closed_at": null,
  "comments": [],
  "created_at": "2019-11-23T14:40:47Z",
  "number": 11178,
  "state": "open",
  "title": "Feature Request - Add missing scope control options for functions, class and enums",
  "updated_at": "2019-11-24T12:16:26Z"
}