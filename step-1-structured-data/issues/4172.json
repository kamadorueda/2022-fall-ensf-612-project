{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4172",
  "author": "ghost",
  "body": "When writing console output to file with *>>, lines should not be truncated. Currently, output is truncated to 85 characters. This makes Powershell fundamentally unusable for me. ",
  "closed_at": "2017-10-21T21:17:09Z",
  "comments": [
    {
      "author": "ghost",
      "author_association": "NONE",
      "body": "Actually, stuff should never be truncated in general. Pretty much every command I run in powershell has things truncated with ...\r\nThere is plenty of space in my screen and in the window, yet, after 15 characters powershell will truncate stuff. \r\nMan, how I really hate microsoft tools. ",
      "created_at": "2017-07-01T18:51:56Z",
      "updated_at": "2017-07-01T18:55:45Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@pedrogarcia Thanks for your report! The Issue is duplicate #1908. \r\nCurrently PowerShell Core format all output based on console width, we want enhance the behavior for pipes with native commands. \r\n>Man, how I really hate microsoft tools.\r\n\r\nPowerShell Core is an open project - feel free to show how need to build systems correctly. Welcome to make the enhancement and fix the Issue! ",
      "created_at": "2017-07-02T16:31:06Z",
      "updated_at": "2017-07-02T16:31:06Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "@iSazonov - I'm reopening because fixing this issue might require different work than #1908, and this issue can be fixed without fixing #1908.",
      "created_at": "2017-07-03T00:41:23Z",
      "updated_at": "2017-07-03T00:41:23Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@pedrogarcia could you please add the repro steps?",
      "created_at": "2017-07-05T16:35:10Z",
      "updated_at": "2017-07-05T16:35:26Z"
    },
    {
      "author": "ghost",
      "author_association": "NONE",
      "body": "Sure. \r\nRun a long copying task for rclone, with verbose output flag, for example:\r\n\u2018\r\nrclone -vv copy \u201cdrive:/folder1\u201d \u201cdrive:/folder2\u201d *>> cmd_output_log.log\r\n\u2018",
      "created_at": "2017-07-05T17:29:06Z",
      "updated_at": "2017-07-05T17:29:06Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I see the code in `Out-File` which computes the console width, but I'm not able to repro this.  In fact, the `-width` parameter doesn't even get honored.\r\n\r\n```powershell\r\n$text = \"0123456789\"\r\nwhile ($text.Length -lt [console]::WindowWidth) { $text += $text }                \r\n$text | Out-File ./test.txt -Encoding ascii\r\n```\r\n\r\nNot even able to repro with Windows PS 5.1",
      "created_at": "2017-10-14T03:52:39Z",
      "updated_at": "2017-10-14T03:52:39Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT I believe Out-File don't send simple objects to formatting system before output. If you replace string variable in your test with a hash or array you'll get repo.",
      "created_at": "2017-10-14T15:56:16Z",
      "updated_at": "2017-10-14T15:56:16Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov but the original repro was a native command outputting to stdout",
      "created_at": "2017-10-14T16:07:15Z",
      "updated_at": "2017-10-14T16:07:15Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I wonder. Maybe Out-File detect a file provider in input strings?",
      "created_at": "2017-10-14T16:38:02Z",
      "updated_at": "2017-10-14T16:38:02Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I tried using the native `echo` on Linux as well as `testexe -echoargs` to get long output, but nothing gets truncated.\r\n\r\nObjects being truncated during formatting is currently expected (although I'm open to consider changing it...) and `-width` does work in that case.  ",
      "created_at": "2017-10-14T17:51:44Z",
      "updated_at": "2017-10-14T17:51:44Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Downloaded rclone and was able to repro it.  rclone sends output to stderr.  All the repros I was trying was with stdout.",
      "created_at": "2017-10-14T17:58:31Z",
      "updated_at": "2017-10-14T18:00:51Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "The easy fix is to not truncate in all cases.  I'm not convinced that having the text log have the same width as the console used during runtime is useful.  The console I'm using to generate the log is probably not the same console I used to read the log.",
      "created_at": "2017-10-14T18:11:48Z",
      "updated_at": "2017-10-14T18:11:48Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "would that also apply to collections of complex objects with lengthy string members? If so, how would that work or look like? I know I'm in the minority opinion on the usefulness of the console width in `Out-File`, but I think completely removing truncating may have some undesirable side effects too.",
      "created_at": "2017-10-14T18:24:26Z",
      "updated_at": "2017-10-14T18:24:26Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@markekraus I would prefer to add a `-TruncateToConsoleWidth` type switch if needed, but I don't think even that is needed.  For objects with lengthy string members that's only a problem if you view the log in the console, in that case, I'd rather have a switch to `Get-Content` to truncate.",
      "created_at": "2017-10-14T18:32:12Z",
      "updated_at": "2017-10-14T18:32:12Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT I'm just curious what this would look like?\r\n\r\n```powershell\r\n$LoremIpsum = \"Lorem ipsum dolor sit amet, bibendum cum ornare, integer ultrices, donec augue, ultricies vitae hendrerit vestibulum et sed iaculis, potenti montes libero. \"\r\n\r\n1..100 |  %{ \r\n    [PsCustomObject]@{\r\n         Column1 = $LoremIpsum*(1..100 | Get-Random)\r\n         Column2 = $LoremIpsum*(1..100 | Get-Random)\r\n         Column3 = $LoremIpsum*(1..100 | Get-Random)\r\n    }\r\n} | Out-File -FilePath C:\\temp\\outfile.txt\r\n```\r\n\r\nCurrently that is a truncated single column, which I agree isn't great. But, how would not truncating this work? Would it be coerced to a list? if so based on what logic? What if the user wants to retain columns? or would it be in un-truncated columns? and if so, how would column width work? Would it really need to calculate the max width of each column  and then build the output file? What kind of performance impact would that have? or would columns just be all different widths with no discernible column alignment? ",
      "created_at": "2017-10-14T18:59:55Z",
      "updated_at": "2017-10-14T19:03:24Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "So it is dup #3813 and #1491.\r\nPlease see @lzybkr comments in https://github.com/PowerShell/PowerShell/pull/4006 about a fix direction.",
      "created_at": "2017-10-14T20:01:39Z",
      "updated_at": "2017-10-14T20:01:59Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Resolving as dupe of https://github.com/PowerShell/PowerShell/issues/3813, let's carry on with that one.",
      "created_at": "2017-10-15T01:03:59Z",
      "updated_at": "2017-10-15T01:03:59Z"
    },
    {
      "author": "fazee6",
      "author_association": "NONE",
      "body": "Here is the solution of all the truncation issues https://mcsaguru.com/how-to-fix-truncated-powershell-output/. He explain very well why truncation happens and hwo to fix them.\n\n<blockquote><img src=\"https://mcsaguru.com/wp-content/uploads/2019/12/PowerShell-ResultTruncation.jpg\" width=\"48\" align=\"right\"><div><img src=\"https://mcsaguru.com/wp-content/uploads/2019/07/cropped-vectorpaint-4-192x192.png\" height=\"14\"> Learn & Troubleshoot Windows, Linux</div><div><strong><a href=\"https://mcsaguru.com/how-to-fix-truncated-powershell-output/\">How to fix Truncated PowerShell Output - Learn & Troubleshoot Windows, Linux</a></strong></div><div>Truncated Powershell Output can be frustrating but it's not the problem of PowerShell truncation depends on the width of your PowerShell console windows.</div></blockquote>",
      "created_at": "2019-12-25T19:51:29Z",
      "updated_at": "2019-12-25T19:51:31Z"
    }
  ],
  "created_at": "2017-07-01T18:41:27Z",
  "number": 4172,
  "state": "closed",
  "title": "Never truncate when writing output to file",
  "updated_at": "2019-12-25T19:51:31Z"
}