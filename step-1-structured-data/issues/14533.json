{
  "_url": "https://github.com/PowerShell/PowerShell/issues/14533",
  "author": "leswaters",
  "body": "## Summary of the new feature/enhancement\r\nAdd a **.slice()** method for strings and arrays similar to that of JavaScript.\r\nSee: https://www.w3schools.com/jsref/jsref_slice_array.asp\r\n\r\nFor strings, this would provide a method to return the *rightmost* N characters of a string\r\nby using negative value. For example:\r\n```\r\n# Rightmost N existing solution\r\nPS C:\\ps1> $text = \"ABCDEFG\"\r\nPS C:\\ps1> $text.Substring($text.Length - 2)\r\nFG\r\n\r\n# Rightmost N characters with slice()\r\nPS C:\\ps1> \"ABCDEFG\".slice(-2)\r\nFG\r\n\r\n# Padding a month number with slice():\r\nPS C:\\ps1> ('0' + (get-Date).Month).slice(-2)\r\n07\r\n```\r\n\r\nBelow are a few additional examples of how **slice()** might work:\r\n```\r\nPS C:\\ps1> \"007\".slice(-2)\r\n07\r\n\r\nPS C:\\ps1> \"ABCDEFG\".slice(3)\r\nDEFG\r\n\r\nPS C:\\ps1>  $fruits = @(\"Banana\", \"Orange\", \"Lemon\", \"Apple\", \"Mango\")\r\n\r\nPS C:\\ps1> $fruits.slice(2)\r\nLemon\r\n\r\nPS C:\\ps1> $fruits.slice(2..4)\r\nLemon\r\nApple\r\nMango\r\n\r\nPS C:\\ps1> $fruits.slice(-2)\r\nApple\r\n\r\nPS C:\\ps1> $fruits.slice(-2..-1)\r\nApple\r\nMango\r\n```\r\n\r\n## Proposed technical implementation details (optional)\r\nVirtually all of the slice() functionality can be leveraged from the existing array code.\r\nThe PowerShell code below serves as a simple example of how to define **slice()**:\r\n```\r\n# String slice()\r\n$stringMethod = @{\r\n  MemberName = 'slice';\r\n  MemberType = 'ScriptMethod';\r\n  Value      = { param([int32] $t) $( if ($t -ge 0) {$this.substring($t)} else {$this.substring(($this.Length + $t))}) }\t\r\n  Force      = $true\r\n}\r\nUpdate-TypeData -TypeName 'string' @stringMethod\r\n\r\n# System.Array slice()\r\n$arrayMethod = @{\r\n  MemberName = 'slice';\r\n  MemberType = 'ScriptMethod';\r\n  Value      = { param($t) $this[$t] }\t\r\n  Force      = $true\r\n}\r\nUpdate-TypeData -TypeName 'System.Array' @arrayMethod\r\n```\r\nThis method is a convenience feature for those familiar with JavaScript and\r\nto provide a way to easily extract the rightmost characters of a string\r\n(the substring() method does not permit negative values).\r\n\r\n\r\n",
  "closed_at": "2021-01-19T09:03:09Z",
  "comments": [
    {
      "author": "doctordns",
      "author_association": "COLLABORATOR",
      "body": "This is probably something that should not be done in PowerShell. Instead, file this issue against .Net itself. ",
      "created_at": "2021-01-03T19:08:01Z",
      "updated_at": "2021-01-03T19:08:01Z"
    },
    {
      "author": "leswaters",
      "author_association": "NONE",
      "body": "The point is to provide the method in PowerShell.  Whether or not .NET provides it is a different matter.",
      "created_at": "2021-01-05T15:01:35Z",
      "updated_at": "2021-01-05T15:01:35Z"
    },
    {
      "author": "doctordns",
      "author_association": "COLLABORATOR",
      "body": "You miss the point. If this change is made in .net, it would just appear in PowerShell as if by magic. A new build targeted at an updated .net would just work with no effort by the team. Asking for it inside powershwll is just more work to adapt the string class. In my view, .net is the right place for such a method. Mileage will vary.",
      "created_at": "2021-01-05T15:47:06Z",
      "updated_at": "2021-01-05T15:47:06Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Have we already a discussion about \"range\"-s?",
      "created_at": "2021-01-07T12:40:56Z",
      "updated_at": "2021-01-07T12:40:56Z"
    },
    {
      "author": "bpayette",
      "author_association": "CONTRIBUTOR",
      "body": "PowerShell already supports slices through indexing. On arrays:\r\n```powershell\r\nPS[1] (172) > @(0, 1, 2, 3, 4, 5)[1..3]\r\n1\r\n2\r\n3\r\n```\r\nAnd strings, (but not very well):\r\n```powershell\r\nPS[1] (182) > \"hello world\"[2..4] -join ''\r\nllo\r\n```\r\nIf you want an actual method on the string class which is owned by the .Net team, you would need to petition them as @doctordns  points out.",
      "created_at": "2021-01-16T04:27:30Z",
      "updated_at": "2021-01-16T04:27:30Z"
    }
  ],
  "created_at": "2021-01-03T15:51:35Z",
  "number": 14533,
  "state": "closed",
  "title": "Feature Request: Add .slice() method for strings and arrays",
  "updated_at": "2021-01-19T09:03:09Z"
}