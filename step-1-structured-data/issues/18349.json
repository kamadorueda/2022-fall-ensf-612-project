{
  "_url": "https://github.com/PowerShell/PowerShell/issues/18349",
  "author": "GigaScratch",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\nIn #15543 it was discovered that if you have a case where a script is named in a way that can be interpreted as hexadecimal (such as `0x.ps1` and you execute it without the dot backslash convention (`.\\0x.ps1` the script will always return null.\r\n@vexx32 identified the problem as being an oversight in an `if` statement that doesn't account for a number appended a few lines above.\r\n<!-- Summarize your PR between here and the checklist. -->\r\n\r\n## PR Context\r\nThis aims to solve #15543.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [ ] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/main/reference/7.3/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and opened an issue in the relevant tool repository. This may include:\r\n        - [ ] Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode\r\n        (which runs in a different PS Host).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "GigaScratch",
      "author_association": "CONTRIBUTOR",
      "body": "The change is cuausing some unexpected behavior - https://dev.azure.com/powershell/PowerShell/_build/results?buildId=111934&view=ms.vss-test-web.build-test-results-tab&runId=1961790&resultId=108814&paneView=debug \r\n\r\nI'm not sure how this can be related at all to the changes I made. ",
      "created_at": "2022-10-22T08:09:08Z",
      "updated_at": "2022-10-22T08:09:08Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> I'm not sure how this can be related at all to the changes I made.\r\n\r\nI hope @vexx32 and @SeeminglyScience could help.",
      "created_at": "2022-10-22T19:03:19Z",
      "updated_at": "2022-10-22T19:03:19Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "\ud83e\udd14 Not seeing anything in those tests that feels really relevant here, unsure what's going on there.",
      "created_at": "2022-10-22T20:13:54Z",
      "updated_at": "2022-10-22T20:13:54Z"
    },
    {
      "author": "GigaScratch",
      "author_association": "CONTRIBUTOR",
      "body": "In conclusion:\r\nOn Windows the following tests fail:\r\n- [Import-Alias DRT Unit Tests.Import-Alias Resolve To Multiple will throw PSInvalidOperationException](https://dev.azure.com/powershell/PowerShell/_build/results?buildId=111990&view=ms.vss-test-web.build-test-results-tab&runId=1962356&resultId=108815&paneView=debug)\r\n- [Group-Object.Should output an array when piped input is used](https://dev.azure.com/powershell/PowerShell/_build/results?buildId=111990&view=ms.vss-test-web.build-test-results-tab&runId=1962356&resultId=108799&paneView=debug)\r\n\r\nOn Linux and MacOS, both of the new test cases fail for this reason:\r\nThe term '0x.ps1' is not recognized as a name of a cmdlet, function, script file, or executable program. / `CommandNotFoundException`",
      "created_at": "2022-10-22T22:22:04Z",
      "updated_at": "2022-10-22T22:22:04Z"
    },
    {
      "author": "GigaScratch",
      "author_association": "CONTRIBUTOR",
      "body": "@vexx32 @iSazonov I'm unable to get the tests to work after multiple attempts and speaking with people in the Powershell Discord. \r\nAlll pipeline tests pass when I exclude edits to the `Parser.Tests.ps1` file, so I am sure that the issue isn't the changes we made, but the test cases I created.\r\nIs there any protocol for excluding tests when they prove to be too cumbersome to reasonably implement? If so I strongly believe that it's the best option. ",
      "created_at": "2022-10-26T08:53:32Z",
      "updated_at": "2022-10-26T08:53:32Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Eh, any change in Parser is very sensitive and nobody sign the change until we get clear understanding why the tests fail.\r\n\r\n> Alll pipeline tests pass when I exclude edits to the `Parser.Tests.ps1` file, so I am sure that the issue isn't the changes we made, but the test cases I created.\r\n\r\nI suggest to pull new draft test PR with only the new your tests and without the code change and see CI results.\r\nExpectation is all tests pass except new.",
      "created_at": "2022-10-26T12:55:32Z",
      "updated_at": "2022-10-26T12:58:22Z"
    },
    {
      "author": "GigaScratch",
      "author_association": "CONTRIBUTOR",
      "body": "> I suggest to pull new draft test PR with only the new your tests and without the code change and see CI results.\r\nExpectation is all tests pass except new.\r\n\r\nPlease see failures here: https://github.com/PowerShell/PowerShell/pull/18398",
      "created_at": "2022-10-27T01:03:16Z",
      "updated_at": "2022-10-27T01:03:16Z"
    },
    {
      "author": "GigaScratch",
      "author_association": "CONTRIBUTOR",
      "body": "Not waiting on author. Waiting on experienced pester user input on broken tests. ",
      "created_at": "2022-10-31T19:47:38Z",
      "updated_at": "2022-10-31T19:47:38Z"
    },
    {
      "author": "pull-request-quantifier[bot]",
      "author_association": "NONE",
      "body": "### ![](https://img.shields.io/static/v1?label=Quantified&message=Extra%20Small&color=green)\r\n\r\nThis PR has `22` quantified lines of changes. In general, a change size of upto `200` lines is ideal for the best PR experience!\r\n\r\n------\r\n\r\n<details >\r\n    <summary display=\"inline\"> <strong>Quantification details</strong></summary>\r\n    <p />\r\n\r\n```\r\nLabel      : Extra Small\r\nSize       : +20 -2\r\nPercentile : 8.8%\r\n\r\nTotal files changed: 2\r\n\r\nChange summary by file extension:\r\n.cs : +3 -1\r\n.ps1 : +17 -1\r\n```\r\n> Change counts above are quantified counts, based on the [PullRequestQuantifier customizations](https://github.com/microsoft/PullRequestQuantifier/blob/main/docs/prquantifier-yaml.md).\r\n    \r\n</details>\r\n\r\n\r\n<details>\r\n    <summary display=\"inline\"> <strong>Why proper sizing of changes matters</strong> </summary>\r\n    <p/>\r\n    <p/>\r\n\r\nOptimal pull request sizes drive a better predictable PR flow as they strike a\r\nbalance between between PR complexity and PR review overhead. PRs within the\r\noptimal size (typical small, or medium sized PRs) mean:\r\n\r\n- Fast and predictable releases to production:\r\n  - Optimal size changes are more likely to be reviewed faster with fewer\r\niterations.\r\n  - Similarity in low PR complexity drives similar review times.\r\n- Review quality is likely higher as complexity is lower:\r\n  - Bugs are more likely to be detected.\r\n  - Code inconsistencies are more likely to be detected.\r\n- Knowledge sharing is improved within the participants:\r\n  - Small portions can be assimilated better.\r\n- Better engineering practices are exercised:\r\n  - Solving big problems by dividing them in well contained, smaller problems.\r\n  - Exercising separation of concerns within the code changes.\r\n\r\n#### What can I do to optimize my changes\r\n\r\n- Use the PullRequestQuantifier to quantify your PR accurately\r\n  - Create a context profile for your repo using the [context generator](https://github.com/microsoft/PullRequestQuantifier/releases)\r\n  - Exclude files that are not necessary to be reviewed or do not increase the review complexity. Example: Autogenerated code, docs, project IDE setting files, binaries, etc. Check out the `Excluded` section from your `prquantifier.yaml` context profile. \r\n  - Understand your typical change complexity, drive towards the desired complexity by adjusting the label mapping in your `prquantifier.yaml` context profile.\r\n  - Only use the labels that matter to you, [see context specification](./docs/prquantifier-yaml.md) to customize your `prquantifier.yaml` context profile.\r\n- Change your engineering behaviors\r\n  - For PRs that fall outside of the desired spectrum, review the details and check if:\r\n    - Your PR could be split in smaller, self-contained PRs instead\r\n    - Your PR only solves one particular issue. (For example, don't refactor and code new features in the same PR).\r\n\r\n#### How to interpret the change counts in git diff output\r\n\r\n- One line was added: `+1 -0`\r\n- One line was deleted: `+0 -1`\r\n- One line was modified: `+1 -1` (git diff doesn't know about modified, it will\r\ninterpret that line like one addition plus one deletion)\r\n- Change percentiles: Change characteristics (addition, deletion, modification)\r\nof this PR in relation to all other PRs within the repository.\r\n\r\n</details>\r\n\r\n<p />\r\n\r\n------\r\n\r\nWas this comment helpful? <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoiR2lnYVNjcmF0Y2giLCJSZXBvc2l0b3J5TGluayI6Imh0dHBzOi8vZ2l0aHViLmNvbS9Qb3dlclNoZWxsL1Bvd2VyU2hlbGwiLCJQdWxsUmVxdWVzdExpbmsiOiJodHRwczovL2dpdGh1Yi5jb20vUG93ZXJTaGVsbC9Qb3dlclNoZWxsL3B1bGwvMTgzNDkiLCJFdmVudFR5cGUiOiJUaHVtYnNVcCJ9&amp;anonymous=True\" target=\"_blank\" title=\"Thumbs up\"><strong>:thumbsup:</strong></a> <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoiR2lnYVNjcmF0Y2giLCJSZXBvc2l0b3J5TGluayI6Imh0dHBzOi8vZ2l0aHViLmNvbS9Qb3dlclNoZWxsL1Bvd2VyU2hlbGwiLCJQdWxsUmVxdWVzdExpbmsiOiJodHRwczovL2dpdGh1Yi5jb20vUG93ZXJTaGVsbC9Qb3dlclNoZWxsL3B1bGwvMTgzNDkiLCJFdmVudFR5cGUiOiJOZXV0cmFsIn0=&amp;anonymous=True\" target=\"_blank\" title=\"Neutral\"><strong>&nbsp;:ok_hand:</strong></a> <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoiR2lnYVNjcmF0Y2giLCJSZXBvc2l0b3J5TGluayI6Imh0dHBzOi8vZ2l0aHViLmNvbS9Qb3dlclNoZWxsL1Bvd2VyU2hlbGwiLCJQdWxsUmVxdWVzdExpbmsiOiJodHRwczovL2dpdGh1Yi5jb20vUG93ZXJTaGVsbC9Qb3dlclNoZWxsL3B1bGwvMTgzNDkiLCJFdmVudFR5cGUiOiJUaHVtYnNEb3duIn0=&amp;anonymous=True\" target=\"_blank\" title=\"Thumbs down\"><strong>&nbsp;:thumbsdown:</strong></a> (<a href=\"MAILTO:prquantifier@microsoft.com\" title=\"Mail to prquantifier@microsoft.com\">Email</a>)\r\n[Customize PullRequestQuantifier](https://github.com/PowerShell/PowerShell/blob/master/.github/prquantifier.yaml) for this repository.\r\n\r\n",
      "created_at": "2022-11-05T03:22:51Z",
      "updated_at": "2022-11-05T03:22:51Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Ready to review?",
      "created_at": "2022-11-05T15:42:58Z",
      "updated_at": "2022-11-05T15:42:58Z"
    },
    {
      "author": "GigaScratch",
      "author_association": "CONTRIBUTOR",
      "body": "> Ready to review?\r\n\r\nYes!",
      "created_at": "2022-11-06T04:06:42Z",
      "updated_at": "2022-11-06T04:06:42Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2022-11-13T14:01:08Z",
      "updated_at": "2022-11-13T14:01:08Z"
    }
  ],
  "created_at": "2022-10-22T00:24:51Z",
  "number": 18349,
  "state": "open",
  "title": "Make hexidecimal named scripts execute without requiring .\\ prefix",
  "updated_at": "2022-11-13T14:01:09Z"
}