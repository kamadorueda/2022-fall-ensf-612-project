{
  "_url": "https://github.com/PowerShell/PowerShell/issues/18527",
  "author": "kilasuit",
  "body": "### Summary of the new feature / enhancement\n\nCurrently any function/script definition that uses a `[parameter]` attribute auto inherits the `[cmdletbinding]` attribute\r\n\r\nWhy not just go all the way and make all functions/scripts actually be advanced functions/scripts by default and then let the author **opt-in** to additional advanced features\n\n### Proposed technical implementation details (optional)\n\nThis likely would need changes in the engine but would likely lead to simplification of code base",
  "closed_at": null,
  "comments": [
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "While the simple vs. advanced functions dichotomy is somewhat unfortunate, making _all_ functions/scripts advanced ones would be a massively breaking change, given that advanced functions do not support `$args`:\r\n\r\n```powershell\r\n# OK\r\n& { $args } 'woot!'\r\n\r\n# !! FAILS\r\n& { [cmdletbinding()] param() $args } 'oh noes!'\r\n```\r\n\r\n",
      "created_at": "2022-11-11T03:09:05Z",
      "updated_at": "2022-11-11T03:57:26Z"
    },
    {
      "author": "dwtaber",
      "author_association": "CONTRIBUTOR",
      "body": "> While the simple vs. advanced functions dichotomy is somewhat unfortunate, making _all_ functions/scripts advanced ones would be a massively breaking change, given that advanced functions do not support `$args`:\r\n> \r\n> ```powershell\r\n> # OK\r\n> & { $args } 'woot!'\r\n> \r\n> # !! FAILS\r\n> & { [cmdletbinding()] param() $args } 'oh noes!'\r\n> ```\r\n\r\nI guess the obvious\u2014not necessarily easy!\u2014fix for that issue would be to add `$args` support for advanced functions, with some exception for advanced functions that explicitly declare an `$args` parameter of their own.  I mean, I'm sure there would be other significant behavior and performance implications for making all functions advanced functions, but it might be worthwhile to chip away at the differences when possible.",
      "created_at": "2022-11-12T16:32:13Z",
      "updated_at": "2022-11-12T16:32:13Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@dwtaber, the crux of the issue is that advanced functions do not support _unbound_ arguments, so the problem isn't `$args` per se, but the fact that - by design - you're only allowed to pass arguments that bind to explicitly declared parameters.\r\n\r\nMaking existing advanced scripts and functions suddenly support unbound arguments would be both breaking and undesirable.\r\n\r\n\r\n\r\n",
      "created_at": "2022-11-12T17:32:19Z",
      "updated_at": "2022-11-12T17:32:19Z"
    },
    {
      "author": "kilasuit",
      "author_association": "COLLABORATOR",
      "body": "I'm not saying it is going to happen, but is a suggestion that may be worthwhile in a way that means that this is a potential `PowerShell 8` feature. ",
      "created_at": "2022-11-13T14:30:04Z",
      "updated_at": "2022-11-13T14:30:04Z"
    }
  ],
  "created_at": "2022-11-10T23:56:37Z",
  "number": 18527,
  "state": "open",
  "title": "Auto conversion of simple functions/scripts into advanced functions",
  "updated_at": "2022-11-13T14:30:04Z"
}