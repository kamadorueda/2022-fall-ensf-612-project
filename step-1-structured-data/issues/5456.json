{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5456",
  "author": "TravisEz13",
  "body": "CI intermittently fails with GitHub throttling issue\r\n\r\nhttps://ci.appveyor.com/project/PowerShell/powershell/build/6.0.0-beta.9-6834#L22\r\n\r\n```\r\nVERBOSE: Destination: C:\\Users\\appveyor\\AppData\\Local\\Microsoft\\powershell\r\nInvoke-RestMethod : {\"message\":\"API rate limit exceeded for 67.225.139.254. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more \r\ndetails.)\",\"documentation_url\":\"https://developer.github.com/v3/#rate-limiting\"}\r\nAt C:\\projects\\powershell\\tools\\install-powershell.ps1:122 char:21\r\n+ ... $metadata = Invoke-RestMethod https://api.github.com/repos/powershell ...\r\n+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : InvalidOperation: (System.Net.HttpWebRequest:HttpWebRequest) [Invoke-RestMethod], WebException\r\n    + FullyQualifiedErrorId : WebCmdletWebResponseException,Microsoft.PowerShell.Commands.InvokeRestMethodCommand\r\n```",
  "closed_at": "2017-11-15T21:54:30Z",
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I believe they throttle based on the client IP, so not sure if a bunch of unrelated appveyor jobs are hitting GitHub anonymously now and thus getting throttled or if it's just our jobs.  Perhaps we should have a GitHub account created just for builds so it doesn't get throttled so quickly.",
      "created_at": "2017-11-15T04:11:03Z",
      "updated_at": "2017-11-15T04:11:03Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT Hmm, how would that work?. It doesn't look to be something that can be configured on the  in the server side settings and if it relied on an encrypted string it would be unavailable in PR builds. ",
      "created_at": "2017-11-15T09:57:10Z",
      "updated_at": "2017-11-15T09:57:10Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Do Appveyor use real IP for every VM or 67.225.139.254 is any common IP (NAT)?\r\n\r\nAh, I see the 67.225.139.254 is one from IPs for build workes https://www.appveyor.com/docs/build-environment/ In other words, hundreds of machines can make requestes from this addresses. I believe we should ask GitHub to fix their limitations.",
      "created_at": "2017-11-15T11:49:43Z",
      "updated_at": "2017-11-15T11:49:43Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "> For unauthenticated requests, the rate limit allows for up to 60 requests per hour.\r\n\r\nThat number seems really low. I get that they want to push people to use authentication, but NAT is a thing and using an IP address for rate limiting this low is painful. \r\n\r\nIt doesn't look like GitHub has a device grant flow for OAuth, so there are no secret-less read-only grants available. If we did include some kind of OAuth, the rate limit would be increased, but, this would also now apply to all consumers of `install-powershell.ps1`, and not just AppVeyor.\r\n\r\nWe could incorporate retry logic. It looks like the use the `X-RateLimit-Reset` header. At the very least it could try sleeping until the reset. but.. that could be up to an hour. The CI's do not like long naps.\r\n\r\nSo, maybe asking GitHub to be more lenient with AppVeyor's IPs is the best path? hmm",
      "created_at": "2017-11-15T13:03:24Z",
      "updated_at": "2017-11-15T13:03:24Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I was thinking we could set an env var in AppVeyor with OAuth key and `install-powershell.ps1` would use it if available.  ",
      "created_at": "2017-11-15T17:22:04Z",
      "updated_at": "2017-11-15T17:22:04Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT was your plan to do this only for daily and branch builds? If so, an encrypted string environment variable would be fine. PR's don't have access to the encrypted strings (to prevent someone from submitting a PR that just dumped or exported encrypted string).  If you wanted the functionality for PRs, then the account would need to be a kind of throw-away account with read-only access to the endpoints and a read-only app key issued. There is no good way to protect/secure a string in a PR.",
      "created_at": "2017-11-15T17:40:23Z",
      "updated_at": "2017-11-15T17:40:23Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "The env vars are not available for PRs.  To prevent this type of issue.  I have another design in mind.  I'll try to get back to this after the current release.",
      "created_at": "2017-11-15T18:38:15Z",
      "updated_at": "2017-11-15T18:38:15Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "I'm working on this issue now as it's blocking PRs. I will sync with @TravisEz13 on his design.",
      "created_at": "2017-11-15T20:21:45Z",
      "updated_at": "2017-11-15T20:21:50Z"
    }
  ],
  "created_at": "2017-11-15T02:32:13Z",
  "number": 5456,
  "state": "closed",
  "title": "CI intermittently fails with GitHub throttling issue",
  "updated_at": "2017-11-15T21:54:30Z"
}