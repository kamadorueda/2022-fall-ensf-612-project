{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15519",
  "author": "iSazonov",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nFix #15513\r\n\r\nMove HttpKnownHeaderNames initialization to static constructor.\r\n\r\n## PR Context\r\n\r\nSee #15513. \r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [ ] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and opened an issue in the relevant tool repository. This may include:\r\n        - [ ] Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode\r\n        (which runs in a different PS Host).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n",
  "closed_at": "2021-08-04T22:00:27Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Even with this, the hashset will still be accessed from multiple threads concurrently in the cases given in #15513, won't it? We should probably add a test using the code samples in the issue to verify that this is sufficient to resolve it. Since the user reporting it mentioned that it was a bit intermittent, we should repeat their test a few times in our own tests.",
      "created_at": "2021-06-04T12:17:41Z",
      "updated_at": "2021-06-04T12:17:41Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> Even with this, the hashset will still be accessed from multiple threads concurrently in the cases given in #15513, won't it? \r\n\r\nA root of the issue was that second thread read the HashSet while first thread still initializes the HashSet.\r\nThe HashSet is used only in one place for reading so no need to concern more about race conditions.\r\n\r\n> We should probably add a test \r\n\r\nIt's not worth it. We will not be able to make such tests stable and defensible. Please use compiled artifact to check locally.\r\n\r\n",
      "created_at": "2021-06-04T14:37:43Z",
      "updated_at": "2021-06-04T14:37:43Z"
    },
    {
      "author": "dperez83",
      "author_association": "NONE",
      "body": "> > Even with this, the hashset will still be accessed from multiple threads concurrently in the cases given in #15513, won't it?\r\n> \r\n> A root of the issue was that second thread read the HashSet while first thread still initializes the HashSet.\r\n> The HashSet is used only in one place for reading so no need to concern more about race conditions.\r\n> \r\n> > We should probably add a test\r\n> \r\n> It's not worth it. We will not be able to make such tests stable and defensible. Please use compiled artifact to check locally.\r\n\r\nIf the only writes are the ones when the object is generated :\r\n`s_contentHeaderSet.Add(HttpKnownHeaderNames.Allow);`\r\n`s_contentHeaderSet.Add(HttpKnownHeaderNames.LastModified);`\r\n`...`\r\n\r\nI think the write race condition is eliminated with this change.\r\n\r\nI am a C# dev, but I have zero knowledge on the Powershell source code. Hope I could help you somehow.",
      "created_at": "2021-06-04T15:48:04Z",
      "updated_at": "2021-06-04T17:00:31Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> I am a C# dev, but I have zero knowledge on the Powershell source code. Help I could help you somehow.\r\n\r\n@dperez83 PowerShell is great project to improve skills. It's too big to learn it well in a short time but you can pick an area you like best and work there with some workgroup https://devblogs.microsoft.com/powershell/powershell-working-groups/\r\nAfter monitoring issues and PRs for about a month you will be able to make good contributions.\r\n\r\n<blockquote><img src=\"https://devblogs.microsoft.com/wp-content/uploads/sites/30/2018/09/Powershell_256.png\" width=\"48\" align=\"right\"><div><img src=\"https://devblogs.microsoft.com/powershell/wp-content/uploads/sites/30/2019/02/Powershell_2561.png\" height=\"14\"> PowerShell Team</div><div><strong><a href=\"https://devblogs.microsoft.com/powershell/powershell-working-groups/\">PowerShell Working Groups | PowerShell Team</a></strong></div><div>Since we open sourced PowerShell in 2016, PowerShell has been an immensely popular project on GitHub. Every year, 700-1000 PRs and 1300-1500 issues are submitted to the PowerShell repo, with roughly half of the PRs and 90% of the issues filed from the community.</div></blockquote>",
      "created_at": "2021-06-04T16:01:08Z",
      "updated_at": "2021-06-04T16:01:26Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2021-06-12T02:00:06Z",
      "updated_at": "2021-06-12T02:00:06Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw Could you please review?",
      "created_at": "2021-06-12T05:33:01Z",
      "updated_at": "2021-06-12T05:33:01Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT Could you please approve? It is impossible to merge without green flag :-)",
      "created_at": "2021-06-18T11:45:18Z",
      "updated_at": "2021-06-18T11:45:18Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2021-06-25T14:00:11Z",
      "updated_at": "2021-06-25T14:00:11Z"
    },
    {
      "author": "dperez83",
      "author_association": "NONE",
      "body": "I see that there's a pending review from @daxian-dbw \r\nIs there anything else you need from me? \r\n\r\nThank you",
      "created_at": "2021-08-04T03:55:54Z",
      "updated_at": "2021-08-04T03:55:54Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@TravisEz13 Please review/approve.",
      "created_at": "2021-08-04T08:28:51Z",
      "updated_at": "2021-08-04T08:28:51Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.2.0-preview.9` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.2.0-preview.9)\n",
      "created_at": "2021-08-23T18:35:56Z",
      "updated_at": "2021-08-23T18:35:56Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.2.0-preview.10` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.2.0-preview.10)\n",
      "created_at": "2021-09-28T23:17:47Z",
      "updated_at": "2021-09-28T23:17:47Z"
    }
  ],
  "created_at": "2021-06-04T04:54:17Z",
  "number": 15519,
  "state": "closed",
  "title": "Thread-safe `HttpKnownHeaderNames` initialization",
  "updated_at": "2021-09-28T23:17:47Z"
}