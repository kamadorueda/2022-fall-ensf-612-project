{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11566",
  "author": "KalleOlaviNiemitalo",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 and PowerShell 7+ issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n\r\n-->\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\nGet-Acl -LiteralPath \"HKLM:Software\\Classes\\*\"\r\n```\r\n\r\n# Expected behavior\r\n\r\n```none\r\nPath                                                                      Owner               Access\r\n----                                                                      -----               ------\r\nMicrosoft.PowerShell.Core\\Registry::HKEY_LOCAL_MACHINE\\Software\\Classes\\* NT AUTHORITY\\SYSTEM BUILTIN\\Users Allow  \u2026\r\n```\r\n\r\n# Actual behavior\r\n\r\n```none\r\nGet-Acl: Cannot find path 'HKEY_LOCAL_MACHINE\\Software\\Classes\\*' because it does not exist.\r\n```\r\n\r\n# Environment data\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-rc.1\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-rc.1\r\nOS                             Microsoft Windows 10.0.18363\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2020-07-31T23:44:46Z",
  "comments": [
    {
      "author": "KalleOlaviNiemitalo",
      "author_association": "NONE",
      "body": "Windows PowerShell 5.1 fails in the same way, so this does not appear to be a regression. Windows PowerShell 2.0 does not support `Get-Acl -LiteralPath`.\r\n\r\nOn PowerShell 7.0.0-rc.1, `Get-Item -LiteralPath \"HKLM:Software\\Classes\\*\"` finds the Registry key all right.",
      "created_at": "2020-01-13T12:59:59Z",
      "updated_at": "2020-01-13T12:59:59Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "Workaround:\r\n\r\n```powershell\r\n# No literal path + escape wildcard character.\r\nGet-Acl -Path 'HKLM:\\SOFTWARE\\Classes\\`*'\r\n```",
      "created_at": "2020-01-13T14:45:38Z",
      "updated_at": "2020-01-13T14:45:38Z"
    },
    {
      "author": "KalleOlaviNiemitalo",
      "author_association": "NONE",
      "body": "> ```powershell\r\n> Get-Acl -Path 'HKLM:\\SOFTWARE\\Classes\\`*'\r\n> ```\r\n\r\nProcess Monitor shows that this enumerates and opens many (presumably all) subkeys of `HKLM:\\SOFTWARE\\Classes`, so it is much slower than e.g. `Get-Acl -Path 'HKLM:\\SOFTWARE\\Classes\\.exe'`.",
      "created_at": "2020-01-13T14:53:54Z",
      "updated_at": "2020-01-13T14:53:54Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "Yeah, just a workaround, not a solution.  Still needs to be fixed for sure.",
      "created_at": "2020-01-13T14:59:15Z",
      "updated_at": "2020-01-13T14:59:15Z"
    },
    {
      "author": "Shriram0908",
      "author_association": "CONTRIBUTOR",
      "body": "@SeeminglyScience \r\nI was checking the code and the point where the problem occurs at [AclCommand.cs line 828](https://github.com/PowerShell/PowerShell/blob/d1aa11e367581736ffea570722cee93815c07a41/src/Microsoft.PowerShell.Security/security/AclCommands.cs#L828`). From this [page](https://docs.microsoft.com/en-us/powershell/scripting/developer/cmdlet/supporting-wildcard-characters-in-cmdlet-parameters?view=powershell-7) I can see that wildcard characters are not supported in `LiteralPath`.\r\nSo my suggestion is to ignore `SessionState.Path.GetUnresolvedProviderPathFromPSPath()` function as it may not even be required for `LiteralPath`. \r\n Please let me know what you think about it.",
      "created_at": "2020-07-02T15:16:45Z",
      "updated_at": "2020-07-02T15:16:45Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "@Shriram0908 They're not supported in that they don't expand.  It works like you'd expect though:\r\n\r\n```powershell\r\n$ExecutionContext.SessionState.Path.GetUnresolvedProviderPathFromPSPath('HKLM:Software\\Classes\\*')\r\n# returns:\r\n# HKEY_LOCAL_MACHINE\\Software\\Classes\\*\r\n```\r\n\r\nIt's needed to expand drive names, statically resolve <kbd>.</kbd> and <kbd>..</kbd> for current directory/previous, etc.  `LiteralPath` doesn't really mean literal path, it means \"don't expand wildcards\" (yeah I see the irony \ud83d\ude42).\r\n\r\nThe problem is almost definitely in the `RegistryProvider` directly.  It probably accidently reuses a helper method somewhere that  tries to expand/remove/escape wildcard characters where it doesn't need to.",
      "created_at": "2020-07-02T16:24:30Z",
      "updated_at": "2020-07-02T16:24:30Z"
    },
    {
      "author": "Shriram0908",
      "author_association": "CONTRIBUTOR",
      "body": "@SeeminglyScience Thanks for explanation. `Get-ACL -LiteralPath .` I tried to run the command with that changes I made expecting it to fail but to my surprise it worked. I added few more breakpoints and found out that we were calling the function which resolves the drive name multiple times.\r\nI have removed `SessionState.Path.GetUnresolvedProviderPathFromPSPath()` from [Line 828](https://github.com/PowerShell/PowerShell/blob/d1aa11e367581736ffea570722cee93815c07a41/src/Microsoft.PowerShell.Security/security/AclCommands.cs#L828%60) but the drive name resolution happens also happens when calling `InvokeProvider.SecurityDescriptor.Get(rp, sections, context);` at [Line 859](https://github.com/PowerShell/PowerShell/blob/d1aa11e367581736ffea570722cee93815c07a41/src/Microsoft.PowerShell.Security/security/AclCommands.cs#L859)\r\nCould you provide few more examples ? I tried the below command and it works.\r\n```\r\nPS C:\\> Get-ACL -LiteralPath \\\\localhost\\c$\r\n\r\n    Directory: \\\\localhost\r\n\r\nPath Owner                       Access\r\n---- -----                       ------\r\nc$   NT SERVICE\\TrustedInstaller NT AUTHORITY\\Authenticated Users Allow  AppendData\u2026\r\n\r\nPS C:\\> Get-ACL -LiteralPath .\r\n\r\n    Directory:\r\n\r\nPath Owner                       Access\r\n---- -----                       ------\r\nC:\\  NT SERVICE\\TrustedInstaller NT AUTHORITY\\Authenticated Users Allow  AppendData\u2026\r\n\r\nPS C:\\> Get-ACL -LiteralPath ..\r\n\r\n    Directory:\r\n\r\nPath Owner                       Access\r\n---- -----                       ------\r\nC:\\  NT SERVICE\\TrustedInstaller NT AUTHORITY\\Authenticated Users Allow  AppendData\u2026\r\n\r\nPS C:\\> Get-Acl -LiteralPath \"HKLM:Software\\Classes\\*\"\r\n\r\nPath                                                                      Owner               Access\r\n----                                                                      -----               ------\r\nMicrosoft.PowerShell.Core\\Registry::HKEY_LOCAL_MACHINE\\Software\\Classes\\* NT AUTHORITY\\SYSTEM BUILTIN\\Users Allow  Rea\u2026\r\n\r\nPS C:\\> Get-ACL -LiteralPath c:\\\r\n\r\n    Directory:\r\n\r\nPath Owner                       Access\r\n---- -----                       ------\r\nC:\\  NT SERVICE\\TrustedInstaller NT AUTHORITY\\Authenticated Users Allow  AppendData\u2026 ",
      "created_at": "2020-07-02T19:07:37Z",
      "updated_at": "2020-07-02T19:07:37Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@Shriram0908 make sure you test relative paths when the current location is the registry as well; e.g., `Set-Location HKLM:\\` followed by `Get-Acl $relativePath`",
      "created_at": "2020-07-02T20:11:50Z",
      "updated_at": "2020-07-02T20:11:50Z"
    },
    {
      "author": "Shriram0908",
      "author_association": "CONTRIBUTOR",
      "body": "@vexx32 It seems to work too.Shall I will raise a PR and add all the examples as pester test ?",
      "created_at": "2020-07-03T13:49:34Z",
      "updated_at": "2020-07-03T13:49:34Z"
    },
    {
      "author": "VIP21",
      "author_association": "NONE",
      "body": "> @SeeminglyScience \u0421\u043f\u0430\u0441\u0438\u0431\u043e \u0437\u0430 \u043e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435. `Get-ACL -LiteralPath .`\u042f \u043f\u043e\u043f\u044b\u0442\u0430\u043b\u0441\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043a\u043e\u043c\u0430\u043d\u0434\u0443 \u0441 \u0442\u0435\u043c\u0438 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f\u043c\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u044f \u0441\u0434\u0435\u043b\u0430\u043b, \u043e\u0436\u0438\u0434\u0430\u044f, \u0447\u0442\u043e \u043e\u043d\u0430 \u043f\u043e\u0442\u0435\u0440\u043f\u0438\u0442 \u043d\u0435\u0443\u0434\u0430\u0447\u0443, \u043d\u043e, \u043a \u043c\u043e\u0435\u043c\u0443 \u0443\u0434\u0438\u0432\u043b\u0435\u043d\u0438\u044e, \u044d\u0442\u043e \u0441\u0440\u0430\u0431\u043e\u0442\u0430\u043b\u043e. \u042f \u0434\u043e\u0431\u0430\u0432\u0438\u043b \u0435\u0449\u0435 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0442\u043e\u0447\u0435\u043a \u043e\u0441\u0442\u0430\u043d\u043e\u0432\u0430 \u0438 \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0438\u043b, \u0447\u0442\u043e \u043c\u044b \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u044e, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0440\u0430\u0437\u0440\u0435\u0448\u0430\u0435\u0442 \u0438\u043c\u044f \u0434\u0438\u0441\u043a\u0430 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0440\u0430\u0437.\r\n> \u042f \u0438\u0437\u0432\u043b\u0435\u043a\u0430\u043b `SessionState.Path.GetUnresolvedProviderPathFromPSPath()`\u0438\u0437 [\u043b\u0438\u043d\u0438\u0438 828](https://github.com/PowerShell/PowerShell/blob/d1aa11e367581736ffea570722cee93815c07a41/src/Microsoft.PowerShell.Security/security/AclCommands.cs#L828%60) , \u043d\u043e \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u0438\u043c\u0435\u043d \u0434\u0438\u0441\u043a\u0430 \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u0442\u0430\u043a\u0436\u0435 \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u043f\u0440\u0438 \u0432\u044b\u0437\u043e\u0432\u0435 `InvokeProvider.SecurityDescriptor.Get(rp, sections, context);`\u043d\u0430 [\u043b\u0438\u043d\u0438\u0438 859](https://github.com/PowerShell/PowerShell/blob/d1aa11e367581736ffea570722cee93815c07a41/src/Microsoft.PowerShell.Security/security/AclCommands.cs#L859)\r\n> \u041d\u0435 \u043c\u043e\u0433\u043b\u0438 \u0431\u044b \u0432\u044b \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043f\u0440\u0438\u043c\u0435\u0440\u043e\u0432 \u0431\u043e\u043b\u044c\u0448\u0435? \u042f \u043f\u043e\u043f\u0440\u043e\u0431\u043e\u0432\u0430\u043b \u043f\u0440\u0438\u0432\u0435\u0434\u0435\u043d\u043d\u0443\u044e \u043d\u0438\u0436\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u0443, \u0438 \u043e\u043d\u0430 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442.\r\n> \r\n> ```\r\n> PS C:\\> Get-ACL -LiteralPath \\\\localhost\\c$\r\n> \r\n>     Directory: \\\\localhost\r\n> \r\n> Path Owner                       Access\r\n> ---- -----                       ------\r\n> c$   NT SERVICE\\TrustedInstaller NT AUTHORITY\\Authenticated Users Allow  AppendData\u2026\r\n> \r\n> PS C:\\> Get-ACL -LiteralPath .\r\n> \r\n>     Directory:\r\n> \r\n> Path Owner                       Access\r\n> ---- -----                       ------\r\n> C:\\  NT SERVICE\\TrustedInstaller NT AUTHORITY\\Authenticated Users Allow  AppendData\u2026\r\n> \r\n> PS C:\\> Get-ACL -LiteralPath ..\r\n> \r\n>     Directory:\r\n> \r\n> Path Owner                       Access\r\n> ---- -----                       ------\r\n> C:\\  NT SERVICE\\TrustedInstaller NT AUTHORITY\\Authenticated Users Allow  AppendData\u2026\r\n> \r\n> PS C:\\> Get-Acl -LiteralPath \"HKLM:Software\\Classes\\*\"\r\n> \r\n> Path                                                                      Owner               Access\r\n> ----                                                                      -----               ------\r\n> Microsoft.PowerShell.Core\\Registry::HKEY_LOCAL_MACHINE\\Software\\Classes\\* NT AUTHORITY\\SYSTEM BUILTIN\\Users Allow  Rea\u2026\r\n> \r\n> PS C:\\> Get-ACL -LiteralPath c:\\\r\n> \r\n>     Directory:\r\n> \r\n> Path Owner                       Access\r\n> ---- -----                       ------\r\n> C:\\  NT SERVICE\\TrustedInstaller NT AUTHORITY\\Authenticated Users Allow  AppendData\u2026 \r\n> ```\r\n\r\n",
      "created_at": "2020-08-01T06:53:41Z",
      "updated_at": "2020-08-01T06:53:41Z"
    }
  ],
  "created_at": "2020-01-13T12:54:45Z",
  "number": 11566,
  "state": "closed",
  "title": "Get-Acl -LiteralPath does not find Registry key",
  "updated_at": "2020-08-01T06:53:41Z"
}