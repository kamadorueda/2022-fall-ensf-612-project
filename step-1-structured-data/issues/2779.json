{
  "_url": "https://github.com/PowerShell/PowerShell/issues/2779",
  "author": "vors",
  "body": "<!--\r\n\r\nIf it is a bug report:\r\n- make sure you are able to repro it on the latest released version. \r\nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\r\n- Search the existing issues.\r\n- Refer to the [FAQ](../docs/FAQ.md).\r\n- Refer to the [known issues](../docs/KNOWNISSUES.md).\r\n- Fill out the following repro template\r\n\r\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\r\n-->\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\nclass Foo {a() {}; b() {}}\r\n```\r\n\r\nMotivation:\r\n\r\nIt's allowed to have properties on the same line:\r\n\r\n```\r\nclass Foo {$a; $b}  # no error\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\nNo error\r\n\r\nActual behavior\r\n---------------\r\n\r\n```\r\nAt line:1 char:12\r\n+ class Foo {a() {}; b() {}}\r\n+            ~~~~~~\r\nMissing closing '}' in statement block or type definition.\r\nAt line:1 char:22\r\n+ class Foo {a() {}; b() {}}\r\n+                      ~\r\nAn expression was expected after '('.\r\nAt line:1 char:26\r\n+ class Foo {a() {}; b() {}}\r\n+                          ~\r\nUnexpected token '}' in expression or statement.\r\n    + CategoryInfo          : ParserError: (:) [], ParentContainsErrorRecordException\r\n    + FullyQualifiedErrorId : MissingEndCurlyBrace\r\n\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\n\r\n```\r\n",
  "closed_at": "2016-11-24T04:29:49Z",
  "comments": [
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "Just like C#, a semi-colon is not needed, so the error (which could be better) is expected.",
      "created_at": "2016-11-24T02:28:55Z",
      "updated_at": "2016-11-24T02:28:55Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "Oh indeed.\r\n\r\nI'm constantly having troubles with this.\r\nIt feels very natural to put `;` between things, when you are trying to write one-liner.\r\n\r\nCould we support this syntax?",
      "created_at": "2016-11-24T02:31:59Z",
      "updated_at": "2016-11-24T02:31:59Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "I don't think it's worth it - you'd need to represent that empty statement somehow in the AST which I think is not worth it.",
      "created_at": "2016-11-24T03:23:53Z",
      "updated_at": "2016-11-24T03:23:53Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I scanned the parser.cs file and did not found that the semicolon is included in any ASTs, except in one case for class property extend.\r\nSince I'm working on improving classes this last fact prompted me to raise this topic again.\r\nClass member definition makes no distinction between properties and methods:\r\n```powershell\r\n            //G  class-member-list:\r\n            //G      class-member  new-lines:opt\r\n            //G      class-member-list   class-member\r\n```\r\nMoreover parsing is performed by the same function `ClassMemberRule`.\r\n(I looked up the formal description for [C# 5.0]() and there's also no differences in the definition of properties and methods. I don't know where this distinction originated.)\r\n\r\nSo in terms of formal definitions it looks as inconsistence. Anyone who studies the language using its formal specification will meet difficulties.\r\n\r\nIt also seems it is a bad UX (I and @vors both drew attention to that). If the statements in line are always separated by a semicolon, then users will expect the same in this case.\r\nIt would be good to preserve consistence here. Otherwise, it is not clear why we can `f(){} g(){}` and cannot `$f=1 g(){}`.",
      "created_at": "2017-01-10T11:30:06Z",
      "updated_at": "2017-01-10T11:30:06Z"
    }
  ],
  "created_at": "2016-11-24T01:54:29Z",
  "number": 2779,
  "state": "closed",
  "title": "PS class cannot have two methods on the same line",
  "updated_at": "2017-01-10T11:30:06Z"
}