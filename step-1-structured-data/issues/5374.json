{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5374",
  "author": "lzybkr",
  "body": "_From @lzybkr on November 2, 2015 18:52_\n\nTo repro:\n\n```\nPS> function foo {}\nPS> sbp -command foo\nPS> foo\n[DBG]: PS>> (@($availableModules | ?{ $_.SessionState -eq $null\n>> }).Count\n>>\n>> ^C\n```\n\nImportant to this repro - hit enter _twice_ (so you have one blank line) before hitting Ctrl+c.\n\nAfter doing this, the command line should be cancelled, but it isn't, and figuring out how to fix the error might be hard, it's sometimes easiest to just exit PowerShell at that point.\n\n\n_Copied from original issue: lzybkr/PSReadLine#299_",
  "closed_at": "2019-01-06T02:47:36Z",
  "comments": [
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "The bug is [here](https://github.com/PowerShell/PowerShell/blob/fe3e44f3055ccd57e19ce1d29a5320e2f3891705/src/Microsoft.PowerShell.ConsoleHost/host/msh/ConsoleHost.cs#L2472) - the call to `Trim` removes whitespace at the end of the command line.\r\n\r\nPSReadLine accepted the input because there were no `IncompleteParseException`s, but after the call to `Trim`, there will be an `IncompleteParseException`.\r\n\r\nI'd just remove the call to `Trim`, but @PaulHigin should own this issue.",
      "created_at": "2017-11-08T01:07:58Z",
      "updated_at": "2017-11-08T01:07:58Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "I don't recall any particular reason for the Trim() call.  So we can try just removing it.",
      "created_at": "2017-11-10T16:44:33Z",
      "updated_at": "2017-11-10T16:44:33Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT or @PaulHigin : came across this one while investigating another issue, but it doesn't appear to repro in `6.2.0-preview.3`. \r\n\r\nWould one of you mind validating that and closing this? Thanks!",
      "created_at": "2019-01-02T21:43:50Z",
      "updated_at": "2019-01-02T21:43:50Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "The problematic code I pointed to is still present and the bug still repros with 6.2.0-preview-3.",
      "created_at": "2019-01-03T00:58:41Z",
      "updated_at": "2019-01-03T00:58:41Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@lzybkr is there any way to construct a test for this to prevent regressions? It looks like a pretty simple fix at the surface, but it might be a good idea to try to test for things like this... if we even _can_, that is.",
      "created_at": "2019-01-03T01:54:28Z",
      "updated_at": "2019-01-03T01:54:28Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "There's always a way, but sometimes it's more effort than it's worth.\r\n\r\nAutomated interactive testing is the obvious approach, maybe with something like [expect](https://www.tcl.tk/man/expect5.31/expect.1.html) or [await](https://www.powershellgallery.com/packages/Await/0.8).\r\n\r\nAn alternative is to simply call all of the right apis in sequence, I'm pretty sure that's possible. It might require simulating a little bit of PSReadLine, but maybe not.",
      "created_at": "2019-01-03T16:45:31Z",
      "updated_at": "2019-01-03T16:45:31Z"
    }
  ],
  "created_at": "2017-11-08T01:05:03Z",
  "number": 5374,
  "state": "closed",
  "title": "While debugging, sometimes won't cancel, and \"accepting\"",
  "updated_at": "2019-01-19T08:01:17Z"
}