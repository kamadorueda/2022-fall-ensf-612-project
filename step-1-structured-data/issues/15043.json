{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15043",
  "author": "MikeYeager",
  "body": "I have a small .NET 5 application that runs on Windows, macOS and Linux (Ubuntu 18.04 and 20.04). \r\n\r\n## Steps to reproduce\r\n\r\n```powershell\r\n                    using (var psCommands = PowerShell.Create())\r\n                    {\r\n                        psCommands.AddCommand(\"Get-Printer\");\r\n\r\n                        var printers = psCommands.Invoke();\r\n\r\n                        if (psCommands.HadErrors)\r\n                        {\r\n                            foreach (var error in psCommands.Streams.Error)\r\n                                _names.Add(error.ErrorDetails.Message);\r\n\r\n                            return _names;\r\n                        }\r\n\r\n                        foreach (var printer in printers)\r\n                            _names.Add(printer.Members[\"Name\"].Value.ToString());\r\n                    }\r\n```\r\n\r\n## Expected behavior\r\nI expect memory use to go up the first time I run this. Then maybe a little more on the next couple of runs and then level off. Perhaps eventually fall again.\r\n\r\n## Actual behavior\r\nMemory goes from 72MB before running this code to 158MB after. On the second run, it goes up to 169MB, on the third run, 180MB. Next run, 194MB, then 213MB, then 233MB, then 252MB, 271MB, 290MB, etc... Here's a diff of the memory snapshot between the first run and after several runs. \r\n![image](https://user-images.githubusercontent.com/7063813/111339314-48f3db00-863d-11eb-9f9f-515e5b7b087e.png)\r\n\r\n",
  "closed_at": "2022-01-08T04:01:02Z",
  "comments": [
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "Is a similar memory behavior observed if the repro is run as a script on console instead of the SDK? Equivalent script would be something like:\r\n\r\n```powershell\r\n$names = [System.Collections.ArrayList]::new()\r\nGet-Printer | ForEach-Object { $null = $names.Add($_.Name) }\r\n```\r\n\r\n",
      "created_at": "2021-05-17T21:17:23Z",
      "updated_at": "2021-05-17T21:17:23Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "Also does the issue repro only for that cmdlet, or with some that come with PowerShell like `Get-Date` or `Get-Process`",
      "created_at": "2021-05-17T22:10:22Z",
      "updated_at": "2021-05-17T22:10:22Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@MikeYeager Can you please collect some traces with [PerfView](https://github.com/microsoft/perfview/releases/tag/P2.0.69) and share with us so we can take a look?\r\nBelow are the easy steps:\r\n1. download [PerfView](https://github.com/microsoft/perfview/releases/tag/P2.0.69)\r\n2. run you scenario\r\n3. run `perfview /GCCollectOnly /AcceptEULA /nogui /MaxCollectSec:300 /Zip collect`\r\n4. share the generated *.etl.zip file.\r\n\r\n",
      "created_at": "2021-06-26T00:00:48Z",
      "updated_at": "2021-06-26T00:00:48Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as \"Waiting on Author\" and has not had any activity for **7 day**. It has been closed for housekeeping purposes.",
      "created_at": "2022-01-08T04:01:00Z",
      "updated_at": "2022-01-08T04:01:00Z"
    }
  ],
  "created_at": "2021-03-16T15:54:35Z",
  "number": 15043,
  "state": "closed",
  "title": "PowerShell SDK 7.1.3 memory issues",
  "updated_at": "2022-01-08T04:01:02Z"
}