{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11587",
  "author": "vexx32",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nWe were not flushing the input buffer immediately when a different type is encountered. This caused some odd behaviour when piping in a mix of bools and ints. Fix is to immediately flush the input buffer when the incoming object is a different type than anything we have buffered.\r\n\r\nThis PR also contains a commit which cuts down the visual representation of booleans to 1 byte. `Marshal.SizeOf()` actually returns `4` for boolean values, since .NET pads Boolean values apparently to make them easier to compare with on modern processors which tend to be optimized for 32 or 64 bit values. See [this SO question](https://stackoverflow.com/questions/294905/why-is-a-boolean-4-bytes-in-net) for reference.\r\n\r\nI modified some of the logic to skip checking the size if the input value is Boolean, and simply represent it with an `0x1` or `0x0` byte to keep the representation as effective as possible.\r\n\r\n## PR Context\r\n\r\nResolves #11585 \r\n\r\n/cc @SteveL-MSFT @iSazonov \r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2020-01-24T04:52:22Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "OK that should do it for the tests this time 'round. Very much starting to feel like we need to rewrite those ones at some point. Anyhow, should be good to go once CI passes @SteveL-MSFT ",
      "created_at": "2020-01-15T14:41:02Z",
      "updated_at": "2020-01-15T14:41:02Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.1.0-preview.1` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.1.0-preview.1)\n",
      "created_at": "2020-03-26T17:46:42Z",
      "updated_at": "2020-03-26T17:46:42Z"
    }
  ],
  "created_at": "2020-01-15T04:50:38Z",
  "number": 11587,
  "state": "closed",
  "title": "Format-Hex - Fix Grouping Behaviour with Boolean values",
  "updated_at": "2020-03-26T17:46:42Z"
}