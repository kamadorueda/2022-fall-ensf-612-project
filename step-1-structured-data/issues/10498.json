{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10498",
  "author": "copdips",
  "body": "# Summary of the new feature/enhancement\r\n\r\n`Get-Command <a cmdlet alias>` should return the same info as to `Get-Command <cmdlet full name>`.\r\n\r\nBut currently, `Get-Command <a cmdlet alias>` only returns the cmdlet full name.\r\n\r\n# Demo on Invoke-WebRequest and its alias iwr\r\n\r\n```powershell\r\n\r\n# Get-Command without any params\r\n\r\n6.2.2> gcm iwr\r\n\r\nCommandType     Name                                               Version    Source\r\n-----------     ----                                               -------    ------\r\nAlias           iwr -> Invoke-WebRequest\r\n\r\n\r\n6.2.2> gcm Invoke-WebRequest\r\n\r\nCommandType     Name                                               Version    Source\r\n-----------     ----                                               -------    ------\r\nCmdlet          Invoke-WebRequest                                  6.1.0.0    Microsoft.PowerShell.Utility\r\n\r\n# Get-Command with the param -Syntax\r\n\r\n6.2.2> gcm iwr -Syntax\r\nInvoke-WebRequest\r\n\r\n6.2.2> gcm Invoke-WebRequest -Syntax\r\n\r\nInvoke-WebRequest [-Uri] <uri> [-UseBasicParsing] [-WebSession <WebRequestSession>] [-SessionVariable <string>] [-AllowUnencryptedAuthentication] [-Authentication <WebAuthenticationType>] [-Credential <pscredential>] [-UseDefaultCredentials] [-CertificateThumbprint <string>] [-Certificate <X509Certificate>] [-SkipCertificateCheck] [-SslProtocol <WebSslProtocol>] [-Token <securestring>] [-UserAgent <string>] [-DisableKeepAlive] [-TimeoutSec <int>] [-Headers <IDictionary>] [-MaximumRedirection <int>] [-MaximumRetryCount <int>] [-RetryIntervalSec <int>] [-Method <WebRequestMethod>] [-Proxy <uri>] [-ProxyCredential <pscredential>] [-ProxyUseDefaultCredentials] [-Body <Object>] [-Form <IDictionary>] [-ContentType <string>] [-TransferEncoding <string>] [-InFile <string>] [-OutFile <string>] [-PassThru] [-Resume] [-PreserveAuthorizationOnRedirect] [-SkipHeaderValidation] [<CommonParameters>]\r\n```\r\n\r\n# Proposed technical implementation details (optional)\r\n\r\nWe expect to see exactly the same info between `Get-Command iwr` and `Get-Command Invoke-WebRequest`. And the same for all the params.\r\n\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "kilasuit",
      "author_association": "COLLABORATOR",
      "body": "This would break user expectations of the command and whilst I can see why you want this, I can't agree that this would be the right way to implement and would counter with adding a switch parameter `ResolveAlias` that would instead check if returning an alias and then return the command that's being aliased instead.\r\n\r\n\r\n",
      "created_at": "2019-09-08T20:42:57Z",
      "updated_at": "2019-09-08T20:42:57Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Do people commonly use Get-Command when they just want an alias? I would be surprised if that's common practice. After all, we have Get-Alias for this information already.",
      "created_at": "2019-09-08T21:00:00Z",
      "updated_at": "2019-09-08T21:00:00Z"
    },
    {
      "author": "copdips",
      "author_association": "NONE",
      "body": "> Do people commonly use Get-Command when they just want an alias? I would be surprised if that's common practice. After all, we have Get-Alias for this information already.\r\n\r\ngood point, or at least, Get-Command shold be able to receive Get-Alias from the piepline, something like:\r\n\r\n`gal iwr | gcm -Syntax`\r\n\r\notherwise `Get-Command <a cmdlet alias>` is useless.",
      "created_at": "2019-09-08T21:18:00Z",
      "updated_at": "2019-09-08T21:18:00Z"
    },
    {
      "author": "copdips",
      "author_association": "NONE",
      "body": "> This would break user expectations of the command and whilst I can see why you want this, I can't agree that this would be the right way to implement and would counter with adding a switch parameter `ResolveAlias` that would instead check if returning an alias and then return the command that's being aliased instead.\r\n\r\nOK for `-ResolveAlias` at first.",
      "created_at": "2019-09-08T21:19:56Z",
      "updated_at": "2019-09-08T21:19:56Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Good points, @copdips and @kilasuit  - adding a `-Resolve` switch has been proposed before, in #7387",
      "created_at": "2019-09-08T22:49:52Z",
      "updated_at": "2019-09-08T22:50:50Z"
    },
    {
      "author": "BrucePay",
      "author_association": "COLLABORATOR",
      "body": "One important use of `Get-Command` is to find out what kind of command you have. Hiding the fact that your command is an alias by default is highly undesirable.  However, I think it's reasonable for `Get-Command -Syntax` to \"follow the link\" and give you the syntax of the aliased command. If this is done, I don't see a particular need for a `-Resolve` parameter.",
      "created_at": "2019-09-09T22:34:15Z",
      "updated_at": "2019-09-09T22:34:15Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@BrucePay: I like the idea of `-Syntax` (by default) showing the _resolved_ command's syntax, but `-Resolve` should _also_ be supported, for a different reason, because there are _two independent aspects_ to consider:\r\n\r\n* what a command's _syntax_ is (your proposal - already covered in #8096)\r\n\r\n* where a command _comes from_ (#7387)\r\n",
      "created_at": "2019-09-09T22:46:16Z",
      "updated_at": "2019-09-27T18:46:56Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Related: what would be helpful _default_ info for an alias is whether it is _built in_ (as opposed to user-defined), along the lines of:\r\n\r\n```none\r\nPS> Get-Command gci\r\n\r\nCommandType     Name                                            Version    Source\r\n-----------     ----                                            -------    ------\r\nAlias           gci -> Get-ChildItem                                       (built in)\r\n```",
      "created_at": "2019-09-09T22:51:55Z",
      "updated_at": "2019-09-09T22:51:55Z"
    }
  ],
  "created_at": "2019-09-08T08:45:47Z",
  "number": 10498,
  "state": "open",
  "title": "Feature Request / Get-Command <a cmdlet alias> should return the full info.",
  "updated_at": "2019-09-27T18:46:56Z"
}