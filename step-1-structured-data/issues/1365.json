{
  "_url": "https://github.com/PowerShell/PowerShell/issues/1365",
  "author": "bmanikm",
  "body": "``` powershell\nPS /home/manikb> gmo                                                                                                    \n\nModuleType Version    Name                                ExportedCommands                                             \n---------- -------    ----                                ----------------                                             \nManifest   3.1.0.0    Microsoft.PowerShell.Utility        {Add-Member, Add-Type, Clear-Variable, Compare-Object...}    \nScript     1.2        PSReadLine                          {Get-PSReadlineKeyHandler, Get-PSReadlineOption, Remove-PS...\n\n\nPS /home/manikb> Get-PSRepository                                                                                       \n\nName                      InstallationPolicy   SourceLocation                                                          \n----                      ------------------   --------------                                                          \nINT                       Trusted              https://dtlgalleryint.cloudapp.net/api/v2/                              \nPSGallery                 Untrusted            https://www.powershellgallery.com/api/v2/                               \n\n\nPS /home/manikb> Get-InstalledModule                                                                                    \nPS /home/manikb> install-module contososerver -repo int -verbose -scope CurrentUser                                     \nVERBOSE: Repository details, Name = 'INT', Location = 'https://dtlgalleryint.cloudapp.net/api/v2/'; IsTrusted = 'True';\n IsRegistered = 'True'.\nVERBOSE: Using the provider 'PowerShellGet' for searching packages.\nVERBOSE: Using the specified source names : 'int'.\nVERBOSE: Getting the provider object for the PackageManagement Provider 'NuGet'.\nVERBOSE: The specified Location is 'https://dtlgalleryint.cloudapp.net/api/v2/' and PackageManagementProvider is \n'NuGet'.\nVERBOSE: Searching repository 'https://dtlgalleryint.cloudapp.net/api/v2/FindPackagesById()?id='contososerver'' for ''.\nVERBOSE: Total package yield:'1' for the specified package 'contososerver'.\nVERBOSE: Performing the operation \"Install-Module\" on target \"Version '2.5' of module 'ContosoServer'\".\nVERBOSE: The installation scope is specified to be 'CurrentUser'.\nVERBOSE: The specified module will be installed in '/home/manikb/.local/share/powershell/Modules'.\nVERBOSE: The specified Location is 'NuGet' and PackageManagementProvider is 'NuGet'.\nVERBOSE: Downloading module 'ContosoServer' with version '2.5' from the repository \n'https://dtlgalleryint.cloudapp.net/api/v2/'.\nVERBOSE: Searching repository 'https://dtlgalleryint.cloudapp.net/api/v2/FindPackagesById()?id='ContosoServer'' for ''.\nVERBOSE: InstallPackage' - name='ContosoServer', version='2.5',destination='/tmp/1358711381'VERBOSE: DownloadPackage' - name='ContosoServer', \nversion='2.5',destination='/tmp/1358711381/ContosoServer/ContosoServer.nupkg', \nuri='https://dtlgalleryint.cloudapp.net/api/v2/package/ContosoServer/2.5.0'VERBOSE: Downloading 'https://dtlgalleryint.cloudapp.net/api/v2/package/ContosoServer/2.5.0'.VERBOSE: Completed downloading 'https://dtlgalleryint.cloudapp.net/api/v2/package/ContosoServer/2.5.0'.VERBOSE: Completed downloading 'ContosoServer'.VERBOSE: InstallPackageLocal' - name='ContosoServer', version='2.5',destination='/tmp/1358711381'VERBOSE: Module 'ContosoServer' was installed successfully to path \n'/home/manikb/.local/share/powershell/Modules/ContosoServer/2.5'.\nVERBOSE: The module 'Microsoft.PowerShell.Diagnostics' could not be loaded. For more information, run 'Import-Module \nMicrosoft.PowerShell.Diagnostics'.\nPS /home/manikb> Get-InstalledModule                                                                                    \n\nVersion    Name                                Repository           Description                                        \n-------    ----                                ----------           -----------                                        \n2.5        ContosoServer                       INT                  ContosoServer module                               \n\n\nPS /home/manikb> Get-InstalledModule | Uninstall-Module -Verbose -Debug                                                 \nDEBUG: 00:00:00.0000014 Calling New() : MethodName = 'GetDynamicOptions'\n\nConfirm\nContinue with this operation?\n[Y] Yes  [A] Yes to All  [H] Halt Command  [S] Suspend  [?] Help (default is \"Y\"): A\nDEBUG: 00:00:00.0002391 Name: ContosoServer\nDEBUG: 00:00:00.0003813 Debug: True\nDEBUG: 00:00:00.0005024 RequiredVersion: 2.5\nDEBUG: 00:00:00.0006247 Verbose: True\nDEBUG: 00:00:00.0042243 INVOKING PowerShell Fn Get-DynamicOptions with args Provider that has length 1\nDEBUG: 00:00:00.0080331 In PowerShellGet Provider - 'Get-DynamicOptions'.\nDEBUG: 00:00:00.0136877 Done calling powershell \u00abGet-DynamicOptions\u00bb \u00abPSModule\u00bb\nDEBUG: 00:00:00.0267236 Calling New() : MethodName = 'GetDynamicOptions'\nDEBUG: 00:00:00.0269121 Name: ContosoServer\nDEBUG: 00:00:00.0270358 Debug: True\nDEBUG: 00:00:00.0272014 RequiredVersion: 2.5\nDEBUG: 00:00:00.0273271 Verbose: True\nDEBUG: 00:00:00.0308418 INVOKING PowerShell Fn Get-DynamicOptions with args Install that has length 1\nDEBUG: 00:00:00.0340494 In PowerShellGet Provider - 'Get-DynamicOptions'.\nDEBUG: 00:00:00.0663571 Done calling powershell \u00abGet-DynamicOptions\u00bb \u00abPSModule\u00bb\nDEBUG: 00:00:01.5838931 Calling New() : MethodName = 'GetInstalledPackages'\nDEBUG: 00:00:01.5854818 Debug: True\nDEBUG: 00:00:01.5869118 RequiredVersion: 2.5\nDEBUG: 00:00:01.5883265 MessageResolver: Microsoft.PowerShell.PackageManagement.Cmdlets.GetMessageString\nDEBUG: 00:00:01.5897477 ProviderName: PowerShellGet\nDEBUG: 00:00:01.5971416 Type: Module\nDEBUG: 00:00:01.5985471 Name: ContosoServer\nDEBUG: 00:00:01.6000207 Verbose: True\nDEBUG: 00:00:01.6091936 INVOKING PowerShell Fn Get-InstalledPackage with args ContosoServer, 2.5, ,  that has length 4\nDEBUG: 00:00:01.6148168 In PowerShellGet Provider - 'Get-InstalledPackage'.\nDEBUG: 00:00:01.6333785 OPTION: Debug => True\nDEBUG: 00:00:01.6356021 OPTION: RequiredVersion => 2.5\nDEBUG: 00:00:01.6410851 OPTION: MessageResolver => Microsoft.PowerShell.PackageManagement.Cmdlets.GetMessageString\nDEBUG: 00:00:01.6429382 OPTION: ProviderName => PowerShellGet\nDEBUG: 00:00:01.6479064 OPTION: Type => Module\nDEBUG: 00:00:01.6654882 OPTION: Name => ContosoServer\nDEBUG: 00:00:01.6864067 OPTION: Verbose => True\nDEBUG: 00:00:01.8989605 Done calling powershell \u00abGet-InstalledPackage\u00bb \u00abPSModule\u00bb\nDEBUG: 00:00:01.9653134 Uninstalling package ContosoServer with provider PowerShellGet\n\nConfirm\nAre you sure you want to perform this action?\nPerforming the operation \"Uninstall-Module\" on target \"Version '2.5' of module 'ContosoServer'\".\n[Y] Yes  [A] Yes to All  [N] No  [L] No to All  [S] Suspend  [?] Help (default is \"Y\"): A\nDEBUG: 00:00:03.2662674 Calling New() : MethodName = 'UninstallPackage'\nDEBUG: 00:00:03.2776318 Debug: True\nDEBUG: 00:00:03.2790507 RequiredVersion: 2.5\nDEBUG: 00:00:03.2804257 MessageResolver: Microsoft.PowerShell.PackageManagement.Cmdlets.GetMessageString\nDEBUG: 00:00:03.2849838 ProviderName: PowerShellGet\nDEBUG: 00:00:03.2862994 Type: Module\nDEBUG: 00:00:03.2875507 Name: ContosoServer\nDEBUG: 00:00:03.2935281 Verbose: True\nDEBUG: 00:00:03.3042908 INVOKING PowerShell Fn Uninstall-Package with args \nNuGet|ContosoServer|2.5|https://dtlgalleryint.cloudapp.net/api/v2/|Module that has length 1\nDEBUG: 00:00:03.4256505 In PowerShellGet Provider - 'Uninstall-Package'.\nDEBUG: 00:00:03.4364016 The FastPackageReference is \n'NuGet|ContosoServer|2.5|https://dtlgalleryint.cloudapp.net/api/v2/|Module'.\nDEBUG: 00:00:03.4451097 OPTION: Debug => True\nDEBUG: 00:00:03.4599739 OPTION: RequiredVersion => 2.5\nDEBUG: 00:00:03.4789817 OPTION: MessageResolver => Microsoft.PowerShell.PackageManagement.Cmdlets.GetMessageString\nDEBUG: 00:00:03.4832408 OPTION: ProviderName => PowerShellGet\nDEBUG: 00:00:03.4890636 OPTION: Type => Module\nDEBUG: 00:00:03.4999688 OPTION: Name => ContosoServer\nDEBUG: 00:00:03.5052394 OPTION: Verbose => True\nVERBOSE: Successfully uninstalled the module 'ContosoServer' from module base \n'/home/manikb/.local/share/powershell/Modules/ContosoServer/2.5'.\n\nConfirm\nAn error has occurred which Windows PowerShell cannot handle. A remote session might have ended.\n[Y] Yes  [A] Yes to All  [H] Halt Command  [S] Suspend  [?] Help (default is \"Y\"): A\nPackageManagement\\Uninstall-Package : An error has occurred which Windows PowerShell cannot handle. A remote session might have ended.\nAt /home/manikb/Documents/PowerShell/src/powershell/bin/Linux/netcoreapp1.0/ubuntu.14.04-x64/Modules/PowerShellGet/PSMo\ndule.psm1:2054 char:25\n+ ...        $null = PackageManagement\\Uninstall-Package @PSBoundParameters\n+                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : OpenError: (localhost:String) [Uninstall-Package], Exception\n    + FullyQualifiedErrorId : PSSessionStateBroken,Microsoft.PowerShell.PackageManagement.Cmdlets.UninstallPackage\n\n\n\nPS /home/manikb> $PSVersionTable                                                                                        \n\nName                           Value                                                                                   \n----                           -----                                                                                   \nPSVersion                      5.1.10032.0                                                                             \nPSEdition                      Linux                                                                                   \nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}                                                                 \nBuildVersion                   3.0.0.0                                                                                 \nGitCommitId                    v0.6.0-48-g1dc0b9a813982802e31bccc6478e238ed72bd910                                     \nCLRVersion                                                                                                             \nWSManStackVersion              1.0                                                                                     \nPSRemotingProtocolVersion      2.3                                                                                     \nSerializationVersion           1.1.0.1                                                                       \n\n\n\nPS /home/manikb> $Error | fl * -Force                                                                                   \n\n\nwriteErrorStream      : True\nPSMessageDetails      : \nException             : System.Exception: An error has occurred which Windows PowerShell cannot handle. A remote \n                        session might have ended.\nTargetObject          : localhost\nCategoryInfo          : OpenError: (localhost:String) [Uninstall-Package], Exception\nFullyQualifiedErrorId : PSSessionStateBroken,Microsoft.PowerShell.PackageManagement.Cmdlets.UninstallPackage\nErrorDetails          : \nInvocationInfo        : System.Management.Automation.InvocationInfo\nScriptStackTrace      : at Uninstall-Module<Process>, /home/manikb/Documents/PowerShell/src/powershell/bin/Linux/netcor\n                        eapp1.0/ubuntu.14.04-x64/Modules/PowerShellGet/PSModule.psm1: line 2074\n                        at <ScriptBlock>, <No file>: line 1\nPipelineIterationInfo : {0, 1}\n\n\n```\n",
  "closed_at": "2017-09-19T22:33:56Z",
  "comments": [
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "Unassigned @andschwa since it's PowerShell Get. \n@bmanikm can you provide a repro outside of PowerShell Get context?\n",
      "created_at": "2016-07-14T01:56:40Z",
      "updated_at": "2016-07-14T01:56:49Z"
    },
    {
      "author": "bmanikm",
      "author_association": "CONTRIBUTOR",
      "body": "@vors, a standalone repro can be found in #1010 \n",
      "created_at": "2016-07-14T02:06:26Z",
      "updated_at": "2016-07-14T02:06:26Z"
    },
    {
      "author": "bmanikm",
      "author_association": "CONTRIBUTOR",
      "body": "Stand alone repro outside PowerShellGet module:\n\n``` powershell\n$dependentModuleScript = {\n                    param ([string] $moduleName)\n                    Microsoft.PowerShell.Core\\Get-Module -ListAvailable | \n                    Microsoft.PowerShell.Core\\Where-Object {                            \n                        ($moduleName -ne $_.Name) -and (\n                        ($_.RequiredModules -and $_.RequiredModules.Name -contains $moduleName) -or\n                        ($_.NestedModules -and $_.NestedModules.Name -contains $moduleName))\n                    }\n                }\n$dependentModulesJob =  Microsoft.PowerShell.Core\\Start-Job -ScriptBlock $dependentModuleScript -ArgumentList 'Pester'\nMicrosoft.PowerShell.Core\\Wait-Job -job $dependentModulesJob\n$dependentModules = Microsoft.PowerShell.Core\\Receive-Job -job $dependentModulesJob\n```\n\n---\n\n``` powershell\nPS /home/manikb> $dependentModuleScript = {                                                                             >>                     param ([string] $moduleName)                                                                     >>                     Microsoft.PowerShell.Core\\Get-Module -ListAvailable |                                            >>                     Microsoft.PowerShell.Core\\Where-Object {                                                         >>                         ($moduleName -ne $_.Name) -and (                                                             >>                         ($_.RequiredModules -and $_.RequiredModules.Name -contains $moduleName) -or                  >>                         ($_.NestedModules -and $_.NestedModules.Name -contains $moduleName))                         >>                     }                                                                                                >>                 }                                                                                                    \nPS /home/manikb> $dependentModulesJob =  Microsoft.PowerShell.Core\\Start-Job -ScriptBlock $dependentModuleScript -ArgumentList 'Pester'                                                                                                         \nPS /home/manikb> Microsoft.PowerShell.Core\\Wait-Job -job $dependentModulesJob                                           \n\nId     Name            PSJobTypeName   State         HasMoreData     Location             Command                  \n--     ----            -------------   -----         -----------     --------             -------                  \n13     Job13           BackgroundJob   Failed        False           localhost            ...                      \n\n\nPS /home/manikb> $dependentModules = Microsoft.PowerShell.Core\\Receive-Job -job $dependentModulesJob                    \nAn error has occurred which Windows PowerShell cannot handle. A remote session might have ended.\n    + CategoryInfo          : OpenError: (localhost:String) [], PSRemotingDataStructureException\n    + FullyQualifiedErrorId : PSSessionStateBroken\n```\n",
      "created_at": "2016-07-14T02:35:58Z",
      "updated_at": "2016-07-14T02:43:04Z"
    },
    {
      "author": "bmanikm",
      "author_association": "CONTRIBUTOR",
      "body": "I will add a workaround logic in PowerShellGet. \nFor now I am removing the Blocked tag. I think, *-Job cmdlet should work properly in Aug17th release as most of the customers use the Job cmdlets in their automation scenarios.\n",
      "created_at": "2016-07-14T19:06:59Z",
      "updated_at": "2016-07-14T19:06:59Z"
    },
    {
      "author": "pcgeek86",
      "author_association": "NONE",
      "body": "I just ran into this same problem when using `Start-Job` with the `-Credential` parameter.\r\n\r\nHere's my repro:\r\n\r\n```\r\nPS /Users/tsulli/OSCON> Start-Job -Credential (Get-Credential) -ScriptBlock { gps }\r\nWindows PowerShell credential request\r\nEnter your credentials.\r\nUser: tsulli\r\nPassword for user tsulli: *************************************\r\n\r\nId     Name            PSJobTypeName   State         HasMoreData     Location             Command\r\n--     ----            -------------   -----         -----------     --------             -------\r\n3      Job3            BackgroundJob   Failed        False           localhost             gps\r\n\r\nPS /Users/tsulli/OSCON> rcjb -id 3\r\nAn error has occurred which Windows PowerShell cannot handle. A remote session might have ended.\r\n    + CategoryInfo          : OpenError: (localhost:String) [], PSRemotingDataStructureException\r\n    + FullyQualifiedErrorId : PSSessionStateBroken\r\n```\r\n\r\n```\r\nPS /Users/tsulli> uname -prsv\r\nDarwin 16.5.0 Darwin Kernel Version 16.5.0: Fri Mar  3 16:52:33 PST 2017; root:xnu-3789.51.2~3/RELEASE_X86_64 i386\r\n```\r\n",
      "created_at": "2017-04-23T17:04:13Z",
      "updated_at": "2017-04-23T17:05:27Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "@jeffbi I know you did a bunch of work on the Job cmdlets. Do you happen to know if `-Credential` should be working? ",
      "created_at": "2017-05-22T23:51:09Z",
      "updated_at": "2017-05-22T23:51:09Z"
    },
    {
      "author": "jeffbi",
      "author_association": "CONTRIBUTOR",
      "body": "Well, I did a bunch of work on the _tests_ for the job cmdlets. Nothing in the tests use `-Credential`, so no, I don't really know if it should work.",
      "created_at": "2017-05-22T23:57:31Z",
      "updated_at": "2017-05-22T23:57:31Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "This has been fixed.\r\n\r\n@bmanikm you can remove that original workaround logic in PSGet if you please. :) ",
      "created_at": "2017-09-19T22:33:56Z",
      "updated_at": "2017-09-19T22:33:56Z"
    }
  ],
  "created_at": "2016-07-14T00:30:25Z",
  "labels": [
    "Usability",
    "WG-Engine",
    "WG-DevEx-Portability",
    "Resolution-Fixed"
  ],
  "number": 1365,
  "state": "closed",
  "title": "An error has occurred which PowerShell cannot handle. A remote session might have ended.",
  "updated_at": "2017-09-19T22:34:02Z"
}