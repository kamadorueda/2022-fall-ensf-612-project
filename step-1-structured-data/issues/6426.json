{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6426",
  "author": "axelheer",
  "body": "Steps to reproduce\r\n------------------\r\n\r\nCall a custom Cmdlet, which uses the current version 2.0.2 of *Entity Framework Core*, which uses the current version 4.4.3 of *System.Data.SqlClient*, which has the actual assembly version 4.2.0.2.\r\n\r\n```powershell\r\n> [System.AppDomain]::CurrentDomain.GetAssemblies() |? { $_.Location -match \"SqlClient\" }\r\n> Get-Geburtstagsliste\r\nGet-Geburtstagsliste : Could not load file or assembly 'System.Data.SqlClient, Version=4.2.0.2, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'. Could not find or load a specific file. (Exception from HRESULT: 0x80131621)\r\nAt line:1 char:1\r\n+ Get-Geburtstagsliste\r\n+ ~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : NotSpecified: (:) [Get-Geburtstagsliste], FileLoadException\r\n+ FullyQualifiedErrorId : noe.dotnuts2.Jobs.Commands.GetGeburtstagsliste\r\n\r\n> [System.AppDomain]::CurrentDomain.GetAssemblies() |? { $_.Location -match \"SqlClient\" }\r\n\r\nGAC    Version        Location\r\n---    -------        --------\r\nFalse  v4.0.30319     C:\\Program Files\\PowerShell\\6.0.2\\System.Data.SqlClient.dll\r\n```\r\n\r\nThe then loaded assembly has the version 4.2.0.1, which matches the version 4.4.2 of *System.Data.SqlClient*, but is older / not compatible with the desired version 4.4.3.\r\n\r\nShouldn't include an update to .NET Core version 2.0.6 as described for PowerShell Core 6.0.2 also include an update for stuff like 'System.Data.SqlClient'?\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.2\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.2\r\nOS                             Microsoft Windows 10.0.16299\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2019-06-01T00:00:59Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "6.0.2 is only a security update.",
      "created_at": "2018-03-19T14:12:28Z",
      "updated_at": "2018-03-19T14:12:28Z"
    },
    {
      "author": "axelheer",
      "author_association": "NONE",
      "body": "Any idea how to load the \"correct\" version of *System.Data.SqlClient*?",
      "created_at": "2018-03-19T14:31:49Z",
      "updated_at": "2018-03-19T14:31:49Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "After opening PWSH:\r\nNo load required:\r\n```\r\n$getSqlSvr = \"mars\";\r\n$sqlcon = \"server=$getSqlSvr;database=Master;Integrated Security=false;User ID=sa;\" + 'Password=$SaPasswd1!';\r\n\r\n## - SQL Query:\r\n$SqlQry = @'\r\nsp_who2\r\n'@;\r\n\r\n## - Create connection to SQL Server and execute the T-SQL command:\r\n$sda = New-Object System.Data.SqlClient.SqlDataAdapter ($SqlQry, $sqlcon);\r\n$sdt = New-Object System.Data.DataTable;\r\n$sda.fill($sdt) | Out-Null;\r\n\r\nPS [20] > $sdt.rows | Select-Object -first 10 | Format-Table;\r\n\r\nSPID  Status                         Login HostName BlkBy DBName Command          CPUTime DiskIO LastBatch\r\n----  ------                         ----- -------- ----- ------ -------          ------- ------ ---------\r\n1     BACKGROUND                     sa      .        .          XTP_CKPT_AGENT   0       0      03/19 12:39:25\r\n2     BACKGROUND                     sa      .        .          LOG WRITER       0       0      03/19 12:39:25\r\n3     BACKGROUND                     sa      .        .          RECOVERY WRITER  0       0      03/19 12:39:25\r\n4     BACKGROUND                     sa      .        .          LAZY WRITER      0       0      03/19 12:39:25\r\n5     BACKGROUND                     sa      .        .          LOCK MONITOR     0       0      03/19 12:39:25\r\n6     BACKGROUND                     sa      .        .   master SIGNAL HANDLER   0       0      03/19 12:39:25\r\n7     BACKGROUND                     sa      .        .          XIO_RETRY_WORKER 0       0      03/19 12:39:25\r\n8     BACKGROUND                     sa      .        .          XIO_LEASE_RENEWA 0       0      03/19 12:39:25\r\n9     BACKGROUND                     sa      .        .   master BRKR TASK        0       0      03/19 12:39:31\r\n12    BACKGROUND                     sa      .        .          RESOURCE MONITOR 0       0      03/19 12:39:25\r\n```\r\nWorks perfectly!!\r\n",
      "created_at": "2018-03-19T16:43:48Z",
      "updated_at": "2018-03-19T16:43:48Z"
    },
    {
      "author": "axelheer",
      "author_association": "NONE",
      "body": "Using it directly isn\u2019t the same as using it as a dependency (of another dependency), when it\u2019s referenced using a higher (!) assembly version.\r\n\r\nThe problem is, that the current PowerShell version, which is build on the current .NET Core version, comes with an older (?) SqlClient version. And that does not work, if a Cmdlet has a dependency, which uses the current Entity Framework, which uses the *current* (!) SqlClient.\r\n\r\nWelcome back, DLL hell!",
      "created_at": "2018-03-19T19:06:49Z",
      "updated_at": "2018-03-19T19:06:49Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "@axelheer, Gotcha!!\r\n\r\nLet me check on my setup and see what I get then.\r\n\r\n:)",
      "created_at": "2018-03-19T20:53:16Z",
      "updated_at": "2018-03-19T20:53:16Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "We have the same Issue for Newton.Json, curl, open-ssh.\r\n\r\nCoreFX 2.1.0 exclude curl and introduce appdomains/contexts that can help us to resolve the issues.",
      "created_at": "2018-03-20T04:23:19Z",
      "updated_at": "2018-03-20T04:23:19Z"
    },
    {
      "author": "ha07z7xe",
      "author_association": "NONE",
      "body": "@axelheer Did you find any workaround? I have the same issue.",
      "created_at": "2018-04-26T20:19:07Z",
      "updated_at": "2018-04-26T20:19:07Z"
    },
    {
      "author": "axelheer",
      "author_association": "NONE",
      "body": "Nope. We compile our Cmdlets against PowerShell Standard (cross-compiled against .NET Standard and .NET Framework), but they only work within Windows PowerShell (based on .NET Framework) at the moment...",
      "created_at": "2018-04-27T06:19:54Z",
      "updated_at": "2018-04-27T06:19:54Z"
    },
    {
      "author": "mi-hol",
      "author_association": "NONE",
      "body": "@axelheer did the release of new SDK version change anything?\r\nhttps://github.com/PowerShell/PowerShell/issues/6475\r\n",
      "created_at": "2018-08-17T17:58:42Z",
      "updated_at": "2018-08-17T17:58:42Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "Hi there!\r\n\r\nYou may want to try either the latest 6.0.4 GA  and/or Preview-4.\r\n\r\nBoth work as expected!\r\n\r\n:)\r\n\r\n![gasqldata_2018-08-17_16-46-36](https://user-images.githubusercontent.com/19892435/44288188-6f5ef900-a23d-11e8-955a-5f75a8d31824.jpg)\r\n\r\n![presqldata_2018-08-17_16-46-36](https://user-images.githubusercontent.com/19892435/44288201-771e9d80-a23d-11e8-8c37-0992bbd1ae23.jpg)\r\n",
      "created_at": "2018-08-17T20:49:13Z",
      "updated_at": "2018-08-17T20:49:13Z"
    },
    {
      "author": "axelheer",
      "author_association": "NONE",
      "body": "@mi-hol I don't compile against the full SDK, only the PowerShell Standard",
      "created_at": "2018-09-03T07:13:02Z",
      "updated_at": "2018-09-03T07:13:02Z"
    },
    {
      "author": "brent-robinson",
      "author_association": "NONE",
      "body": "I experienced a similar problem on PowerShell 6.1.1 when loading `System.Data.SqlClient`, however it appears to be resolved under PowerShell 6.2.0-preview.3\r\n\r\n```\r\nPowerShell 6.1.1\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\n\r\nhttps://aka.ms/pscore6-docs\r\nType 'help' to get help.\r\n\r\nPS C:\\Program Files\\PowerShell\\6> Add-Type -Path F:\\Temp\\System.Data.SqlClient.dll\r\nAdd-Type : Could not load file or assembly 'System.Data.SqlClient, Version=4.5.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.\r\nAt line:1 char:1\r\n+ Add-Type -Path F:\\Temp\\System.Data.SqlClient.dll\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : NotSpecified: (:) [Add-Type], FileLoadException\r\n+ FullyQualifiedErrorId : System.IO.FileLoadException,Microsoft.PowerShell.Commands.AddTypeCommand\r\nPS C:\\Program Files\\PowerShell\\6-preview>\r\n```\r\n\r\n```\r\nPowerShell 6.2.0-preview.3\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\n\r\nhttps://aka.ms/pscore6-docs\r\nType 'help' to get help.\r\n\r\nPS C:\\Program Files\\PowerShell\\6-preview> Add-Type -Path F:\\Temp\\System.Data.SqlClient.dll\r\nPS C:\\Program Files\\PowerShell\\6-preview>\r\n```\r\n\r\nFurther usage allows me to run Entity Framework Core. Loading `Newtonsoft.Json.dll` also works under the preview version.",
      "created_at": "2018-12-31T05:06:43Z",
      "updated_at": "2018-12-31T05:06:43Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "@brent-robinson \r\n\r\nHum! Something is missing in your sample.\r\n\r\nFirst, System.Data.SqlClient.dll is included in the PowerShell 6.1.1 folder, and it's working fine.\r\n\r\nSo, I'm dare to assuming that you installed another version of the DLL. Right!\r\nIf that's the case then... maybe... that DLL on the F: drive wasn't build to work with 6.1.1 .NET Core Version(??)\r\n\r\nAny way, look at the https://github.com/PowerShell/PowerShell/releases where is states that on the PowerShell Core v6.2.0-preview.3 - \"Bump System.Data.SqlClient from 4.5.1 to 4.6.0\".\r\n\r\nLoading the DLL from either of the PowerShell Core 6.1.1 and 6.2.0 location works!\r\n\r\n![pscoresqlclient_2019-01-02_15-21-09](https://user-images.githubusercontent.com/19892435/50610753-1917ed00-0ea2-11e9-9838-49a2b0be24c1.jpg)\r\n\r\nI'm curious! How and from where you install the System.Data.SqlClient.dll on your F: drive?  \r\n\r\n",
      "created_at": "2019-01-02T20:23:24Z",
      "updated_at": "2019-01-02T20:23:24Z"
    },
    {
      "author": "brent-robinson",
      "author_association": "NONE",
      "body": "@MaximoTrinidad - You're correct. My copy of `System.Data.SqlClient.dll` was from a binary PowerShell module I'd developed. My application uses the same version of `System.Data.SqlClient.dll` as PowerShell `6.2.0-preview.3`.\r\n\r\nThe left dialog is PowerShell `6.1.1`, the middle PowerShell `6.2.0-preview.3`, and the right my application.\r\n\r\n![image](https://user-images.githubusercontent.com/6666613/51287828-7b99ed00-1a4d-11e9-90f4-a89a137ff37e.png)",
      "created_at": "2019-01-17T00:54:50Z",
      "updated_at": "2019-01-17T00:54:50Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "This assembly is shipped with PSCore6 and that version should be used.  Older .NET Framework based ones are not compatible.",
      "created_at": "2019-05-20T20:20:55Z",
      "updated_at": "2019-05-20T20:20:55Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2019-06-01T00:00:37Z",
      "updated_at": "2019-06-01T00:00:37Z"
    }
  ],
  "created_at": "2018-03-19T14:03:35Z",
  "labels": [
    "Issue-Enhancement",
    "WG-Engine",
    "Resolution-Answered"
  ],
  "number": 6426,
  "state": "closed",
  "title": "Unable to load System.Data.SqlClient, Version 4.2.0.2",
  "updated_at": "2019-06-01T00:00:59Z"
}