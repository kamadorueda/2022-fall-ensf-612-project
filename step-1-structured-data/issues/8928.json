{
  "_url": "https://github.com/PowerShell/PowerShell/issues/8928",
  "author": "Amaroq-Clearwater",
  "body": "# Summary of the new feature/enhancement\r\nI'm not entirely sure how Native API applications actually work in depth, since I only recently learned about the Native API's existence, but I given what I know so far they seem pretty awesome, and there might actually be some use for more Native API applications.\r\n\r\nAs such, I would like to see a build of PowerShell which is based on the Native API for Windows NT, that way certain PowerShell commands or scripts could be used prior to booting into Windows, such as for diagnostics and recovery.\r\n\r\n#Proposed technical implementation details\r\nThere's already a Native Shell which somebody developed, but it hasn't been updated for any operating systems beyond Windows XP as far as I can tell, and it is still sorely lacking in features.\r\nhttp://hex.pp.ua/nt-native-applications-shell-eng.php\r\n\r\nNow for performance optimization of something as low-level as the Native API, I'd also suggest looking into Ravioli Memory. As far as I can gather, it's supposed to be an open-source and highly efficient implementation of Garbage Collection for bare-metal languages such as C and C++. It may also have some potential applications when it comes to security.\r\nhttps://www.reenigne.org/blog/rethinking-memory/ \r\n\r\nJust one potential obstacle to all of this...\r\nEven with the .NET core, it would probably be difficult to make PowerShell function correctly on the Native API alone, and I'm not entirely sure if it's possible to build a Native API version of the .NET core in the first place, let alone implementing any necessary Win32/Win64 or UWP functions whilst still allowing the program to compile and run as a Native application. If there's an easy solution to that, I'd love to hear about it!",
  "closed_at": "2019-05-27T09:42:16Z",
  "comments": [
    {
      "author": "HumanEquivalentUnit",
      "author_association": "CONTRIBUTOR",
      "body": "> certain PowerShell commands or scripts could be used prior to booting into Windows, such as for diagnostics and recovery.\r\n\r\nAt that point, boot from a rescue disk (Windows or Linux, with PowerShell optional), or attach the virtual hard disk to another VM. You'll get a much more powerful diagnostic environment, with less time and effort.\r\n\r\nThe effort involved to do this would be enormous - years - but without the full Windows API, WMI or event log or networking or any other big subsystems, the amount of usable PowerShell cmdlets would be tiny, and the amount of *useful* ones even smaller, I think.",
      "created_at": "2019-02-20T20:53:16Z",
      "updated_at": "2019-02-20T20:53:34Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "I agree and even if someone builds such a command, it should be in a separate module, I do not see the need for it being part of the PS engine",
      "created_at": "2019-02-20T22:18:41Z",
      "updated_at": "2019-02-20T22:18:41Z"
    },
    {
      "author": "Amaroq-Clearwater",
      "author_association": "NONE",
      "body": "Hence why it would probably be a fork. Native API-based applications are just a niche field, I suppose.\r\nEdit: Accidentally hit \"Close and Comment\" instead of just \"Comment\"",
      "created_at": "2019-02-21T00:21:54Z",
      "updated_at": "2019-02-21T00:22:52Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> such as for diagnostics and recovery.\r\n\r\nWindows PE is commonly used. And PowerShell is there.",
      "created_at": "2019-02-21T13:15:57Z",
      "updated_at": "2019-02-21T13:15:57Z"
    },
    {
      "author": "HumanEquivalentUnit",
      "author_association": "CONTRIBUTOR",
      "body": "> Hence why it would probably be a fork.\r\n\r\nIf you want to fork, you need only the fork button in Github - [the PowerShell license](https://github.com/PowerShell/PowerShell/blob/master/LICENSE.txt) is the MIT License; everyone has permission to fork and rework it for almost any purpose including commercial ones.",
      "created_at": "2019-02-21T14:47:02Z",
      "updated_at": "2019-02-21T14:47:02Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "The amount of work involved and the niche of this scenario seems to indicate it isn't a good cost to value proposition.",
      "created_at": "2019-02-21T18:38:44Z",
      "updated_at": "2019-02-21T18:38:44Z"
    }
  ],
  "created_at": "2019-02-20T20:09:35Z",
  "number": 8928,
  "state": "closed",
  "title": "Feature Request: Native API build",
  "updated_at": "2019-05-27T09:42:16Z"
}