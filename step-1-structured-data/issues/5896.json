{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5896",
  "author": "kwkam",
  "body": "Fix handling of `-Path` argument that contains wildcard char (eg. ```./`[file`].txt```) on some Cmdlet.\r\nFix tab completion when path contains wildcard char (eg. ```./`[fi```[TAB] did not get completed).\r\nMake `Get-Command` try to resolve `-Path` as literal when it contains invalid wildcard pattern.\r\n\r\nI believe this also solve/work around the following issues:\r\n#3724 #3725 #4726 #6232\r\n\r\n## PR Summary\r\n\r\n_*Microsoft.PowerShell.Commands.Management/commands/management/Navigation:_\r\n**Move-Item**: Set the `context.SuppressWildcardExpansion` in `MoveItem` instead of escaping the path every time. Also solve the issue where Move-Item complains -Path wildcard pattern is not valid when -Path contains special chars that forms an invalid pattern.\r\n**Rename-Item**: Unescape non-literal, non-glob path in `ProccessRecord` and set the `context.SuppressWildcardExpansion` in `RenameItem`. This solve the issue where Rename-Item complains -Path does not exist when both -Path and CWD contains special char.\r\n\r\n_*System.Management.Automation/engine/CommandCompletion/CompletionCompleters:_\r\nUse `WildcardPattern::Escape` to escape completion text of filename.\r\n\r\n_*System.Management.Automation/engine/CommandSearcher:_\r\nDo not resolve path as glob when it contains invalid wildcard pattern (eg. `./[.ps1`).\r\nMerge the path resolving code from `GetNextFromPath` into `ResolvePSPath` and use that function.\r\n\r\n_*System.Management.Automation/engine/GetCommandCommand:_\r\nDo not treat path as pattern when it contains invalid wildcard pattern (eg. `./[.ps1`).\r\n\r\n_*System.Management.Automation/engine/SessionStateContainer:_\r\n**Get-ChildItem**: Unescape non-literal, non-glob path before existence checking. This solve the issue where Get-GhildItem does not behave correctly when -Path contains special char. For example, ```Get-ChildItem -Path './`[dir`]'``` will complain `Cannot find path ...` while ```Get-ChildItem -Path './`[dir`]' -Depth 0``` will work fine.\r\n**New-Item**: Unescape non-literal path when -Name is not set. This works around for New-Item treating -Path as literal path while it can also be globbable. For example, assuming there is `[file]1` in current directory, and tab completion suggests ```./`[file`]1``` for the -Path argument, but ```New-Item -Path './`[file`]2'``` will create a file named ``` `[file`]2``` instead of `[file]2`.\r\n\r\n_*System.Management.Automation/engine/regex:_\r\n`WildcardPattern::Escape` should also escape ``` ` ```, since `WildcardPattern::Unescape` would unescape it, and the matcher parse it as escape char.\r\n\r\n_*System.Management.Automation/namespaces/LocationGlobber:_\r\nDo not escape CWD when LiteralPath is used. This causes issues when both -LiteralPath and CWD contains special char.\r\nDo not pass regex escaped string to `WildcardPattern::Get`. This fails tab completion when doing ```./path/to/`[f```[TAB].\r\n\r\n_*System.Management.Automation/utils/PathUtils:_\r\nUnescape non-literal, non-glob path before calling `GetUnresolvedProviderPathFromPSPath` since it only accepts literal path. This solve the issue where some commands depending on that method will treat -Path as literal unintentionally. For example, ```Out-File -Path './`[out`].txt' -Append``` will create a new file named ``` `[out`].txt``` instead of writing to ```[out].txt```.\r\n\r\n## PR Checklist\r\n\r\nNote: Please mark anything not applicable to this PR `NA`.\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - [x] Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [ ] User facing [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - [ ] Issue filed - Issue link:\r\n- [x] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n    - [x] [Add `[feature]` if the change is significant or affects feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` to the beginning of the title and remove the prefix when the PR is ready.\r\n",
  "closed_at": "2018-07-29T04:28:32Z",
  "comments": [
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@kwkam Please add tests. Marking the PR as `WIP`",
      "created_at": "2018-01-22T17:19:05Z",
      "updated_at": "2018-01-22T17:19:28Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@kwkam Could you continue with the PR?",
      "created_at": "2018-01-27T17:22:13Z",
      "updated_at": "2018-01-27T17:22:13Z"
    },
    {
      "author": "kwkam",
      "author_association": "CONTRIBUTOR",
      "body": "@adityapatwardhan Done. I am not sure whether they are in the proper file though",
      "created_at": "2018-02-13T16:46:18Z",
      "updated_at": "2018-02-13T16:46:18Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@daxian-dbw @lzybkr @anmenaga Can you have a look?",
      "created_at": "2018-02-22T19:16:44Z",
      "updated_at": "2018-02-22T19:16:44Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@anmenaga @daxian-dbw ping ... ",
      "created_at": "2018-03-02T19:17:11Z",
      "updated_at": "2018-03-02T19:17:11Z"
    },
    {
      "author": "kwkam",
      "author_association": "CONTRIBUTOR",
      "body": "I would like to know, can I rebase this to make the commit history cleaner/more readable?",
      "created_at": "2018-03-05T10:12:59Z",
      "updated_at": "2018-03-05T10:12:59Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Please don't rebase until a maintainer ask you.",
      "created_at": "2018-03-05T12:58:43Z",
      "updated_at": "2018-03-05T12:58:43Z"
    },
    {
      "author": "kwkam",
      "author_association": "CONTRIBUTOR",
      "body": "A question about the `Get-Command` cmdlet.\r\nhttps://github.com/PowerShell/PowerShell/blob/be109922f36d509d7bf512a49ca91dab1ef3100c/test/powershell/Modules/Microsoft.PowerShell.Core/Pester.Commands.Cmdlets.GetCommand.Tests.ps1#L6-L50\r\nAccording to the test file, `Get-Command` seems to be designed to handle both wildcard and literal path with a single `-Name` argument, but when the filename is `[.ps1`, it will not be able to handle it, throwing an exception about the invalid pattern: `The specified wildcard character pattern is not valid: [.ps1`.\r\n\r\nHow should this be resolved? Catch the exception and fallback to use literal path,\r\nor, add another argument to `Get-Command` to handle wildcard path separately,\r\nor, do not allow literal path for command (has to be executed as ```& './`[.ps1'```),\r\nor, some other better solution or exclude the issue from this PR?",
      "created_at": "2018-03-19T15:48:08Z",
      "updated_at": "2018-03-19T15:48:08Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@daxian-dbw Can you have a look?",
      "created_at": "2018-04-03T18:01:21Z",
      "updated_at": "2018-04-03T18:01:21Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@kwkam Please have a look at the test failure. \r\n\r\nPlease also at `[Feature]` in the last commit to run all the tests in CI.  https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr",
      "created_at": "2018-04-03T18:04:40Z",
      "updated_at": "2018-04-03T18:04:40Z"
    },
    {
      "author": "codecov-io",
      "author_association": "NONE",
      "body": "# [Codecov](https://codecov.io/gh/PowerShell/PowerShell/pull/5896?src=pr&el=h1) Report\n> :exclamation: No coverage uploaded for pull request base (`master@d04fef4`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/PowerShell/PowerShell/pull/5896/graphs/tree.svg?height=150&width=650&token=5nnX905GwP&src=pr)](https://codecov.io/gh/PowerShell/PowerShell/pull/5896?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff            @@\n##             master    #5896   +/-   ##\n=========================================\n  Coverage          ?   60.99%           \n=========================================\n  Files             ?      924           \n  Lines             ?   274467           \n  Branches          ?        0           \n=========================================\n  Hits              ?   167421           \n  Misses            ?   107046           \n  Partials          ?        0\n```\n\n\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/PowerShell/PowerShell/pull/5896?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/PowerShell/PowerShell/pull/5896?src=pr&el=footer). Last update [d04fef4...d43df71](https://codecov.io/gh/PowerShell/PowerShell/pull/5896?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
      "created_at": "2018-04-05T06:51:20Z",
      "updated_at": "2018-06-30T03:49:05Z"
    },
    {
      "author": "kwkam",
      "author_association": "CONTRIBUTOR",
      "body": "@adityapatwardhan Test failures related to the changes are solved (I have no idea why the remote session test is failing). Please let me know if anything were missing/wrong.",
      "created_at": "2018-04-12T15:43:04Z",
      "updated_at": "2018-04-12T15:43:04Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@anmenaga  @daxian-dbw ping.. ",
      "created_at": "2018-05-10T20:32:08Z",
      "updated_at": "2018-05-10T20:32:08Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@kwkam The PR is very large. Could you split it on some small PRs for more fast review?",
      "created_at": "2018-05-22T03:52:22Z",
      "updated_at": "2018-05-22T03:52:22Z"
    },
    {
      "author": "kwkam",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov Sorry, I am afraid I would not have free time get it done very soon. Feel free to fork this if you are in hurry.\r\nP.S. Appending `?w=1` to the URL (or `--ignore-white-space` on command line) could help a bit when viewing the diff.",
      "created_at": "2018-05-22T06:00:11Z",
      "updated_at": "2018-05-22T06:00:11Z"
    },
    {
      "author": "stale[bot]",
      "author_association": "NONE",
      "body": "This PR has been automatically marked as stale because it has not had activity in the last 30 days. It will be closed if no further activity occurs within 10 days.\nThank you for your contributions.\nCommunity members are welcome to grab these works.\n",
      "created_at": "2018-06-21T06:15:48Z",
      "updated_at": "2018-06-21T06:15:48Z"
    },
    {
      "author": "kwkam",
      "author_association": "CONTRIBUTOR",
      "body": "Split into #7396 #7397 #7398 #7399 \r\n\r\n@iSazonov Please let me know if anything is incorrect",
      "created_at": "2018-07-29T04:28:25Z",
      "updated_at": "2018-07-29T04:28:25Z"
    }
  ],
  "created_at": "2018-01-13T08:20:53Z",
  "number": 5896,
  "state": "closed",
  "title": "Fix handling of -Path when it literally contains wildcard char",
  "updated_at": "2019-01-11T15:02:50Z"
}