{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13135",
  "author": "rjmholt",
  "body": "From https://github.com/PowerShell/PowerShellEditorServices/issues/1295#issuecomment-655650376.\r\n\r\nRewriting PSES' pipeline implementation currently, and I've hit a number of issues in the nested prompt implementation.\r\n\r\nA big one has been in how to get a new PowerShell instance for PowerShell execution.\r\n\r\nIn my initial implementation I used `pwsh.CreateNestedPowerShell()` but had issues with that:\r\n  - first with the parent pipeline being null (because of `PSThreadOptions.ReuseThread`) and `CreateNestedPowerShell` giving me a PowerShell where `IsNested` is true, but not `IsChild`,\r\n  - then because of apartment state...\r\n\r\nSo I moved to using `PowerShell.Create(RunspaceMode.CurrentRunspace)`.\r\n\r\nSo my question is, what's the difference between the two? How are they meant to be used?",
  "closed_at": null,
  "comments": [
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "@rjmholt Thank you for asking this question! I have been troubleshooting problems that I have not been able to explain for a few days using Windows PowerShell from within a custom application, and `CreateNestedPowerShell` ended up being the issue. The moment I switched away from it, the problem went away. Ugh.\r\n\r\nOne of the symptoms of this that I was seeing was my event handlers for data streams (verbose, warning, information, etc.) working just fine until the moment I would invoke CreateNestedPowerShell, after which the event handlers stopped receiving events. I could see messages being generated (the application also has a custom host, and it was receiving the messages), but the event handlers were just not.",
      "created_at": "2020-08-14T20:00:45Z",
      "updated_at": "2020-08-14T20:00:45Z"
    },
    {
      "author": "JamesWTruher",
      "author_association": "MEMBER",
      "body": "This was originally intended for use when entering a nested prompt (AFAICT - it's still used in the ISE when entering a nested prompt). I'm not sure how much utility it has anymore, but I seem to remember that this how we originally did the EnterNestedPrompt in V1 .",
      "created_at": "2021-03-01T19:21:45Z",
      "updated_at": "2021-03-01T19:21:45Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "We should consider either fixing the API or deprecating it",
      "created_at": "2021-03-01T19:27:39Z",
      "updated_at": "2021-03-01T19:27:39Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "Reopening since, while we have an explanation of the original intention, the API remains unhelpful",
      "created_at": "2021-09-30T19:27:35Z",
      "updated_at": "2021-09-30T19:27:35Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2021-10-02T00:00:34Z",
      "updated_at": "2021-10-02T00:00:34Z"
    }
  ],
  "created_at": "2020-07-08T18:21:02Z",
  "number": 13135,
  "state": "open",
  "title": "Make SMA.PowerShell.CreateNestedPowerShell() useful or deprecate it",
  "updated_at": "2021-10-02T08:15:17Z"
}