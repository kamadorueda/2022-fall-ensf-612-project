{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15558",
  "author": "TravisEz13",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nMake sure GA revision increases from RC/Preview releases\r\n- Fix revision to 500 for all GA releases\r\n- Add tests to verify expected revisions\r\n\r\n## PR Context\r\n\r\nMake sure GA revision increases from RC/Preview releases. \r\nThis allows SDK builds using preview to work against GA builds.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and opened an issue in the relevant tool repository. This may include:\r\n        - [ ] Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode\r\n        (which runs in a different PS Host).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n",
  "closed_at": "2021-06-15T20:44:09Z",
  "comments": [
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@TravisEz13 The nuget packages use the release tag to set the version for the package. Also, it is used to set the version of the ref assembly. That needs to be fixed too. Is that change happening in a different PR?",
      "created_at": "2021-06-10T19:21:32Z",
      "updated_at": "2021-06-10T19:21:32Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@adityapatwardhan The NuGet package needs to start using the runtime DLL, per yesterday's conversation.  If we don't go down that path, I think the right thing to do is to read the `fileversion` from the runtime and use that.  ",
      "created_at": "2021-06-10T20:40:37Z",
      "updated_at": "2021-06-10T20:40:37Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@TravisEz13 are you adding the change we discussed about the nuget ref assembly using the file version?",
      "created_at": "2021-06-10T22:50:35Z",
      "updated_at": "2021-06-10T22:50:35Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@TravisEz13  and me also discussed about using the runtime assembly for the ref, but there are some complications regarding it.\r\n\r\n1. Which runtime assembly do we use, windows or linux?\r\n2. Should the assemblies just be under `lib` folder? But, I believe `lib` does not support having RID under it. \r\n3. Can we just have `runtime` folder? Will the appropriate assembly be picked for compilation?",
      "created_at": "2021-06-10T22:53:35Z",
      "updated_at": "2021-06-10T22:53:35Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Here are my opinions:\r\n> Which runtime assembly do we use, windows or linux?\r\n\r\nTo be consistent with the existing NuGet package, we should use the Unix version of the runtime DLL.\r\nIt's not the ideal solution for sure, but should be fine as a temp workaround.\r\n\r\n> Should the assemblies just be under lib folder? But, I believe lib does not support having RID under it.\r\n\r\nI guess for now we can just replace the ref assembly with the runtime assembly and keep the folder structure unchanged.\r\n\r\n> Can we just have runtime folder? Will the appropriate assembly be picked for compilation?\r\n\r\nI don't think the runtime folder alone would work.\r\n\r\n\r\n",
      "created_at": "2021-06-14T17:46:26Z",
      "updated_at": "2021-06-14T19:05:28Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "I think this PR is ready to merge.  Is there anything we are waiting on?",
      "created_at": "2021-06-14T18:11:28Z",
      "updated_at": "2021-06-14T18:11:28Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.2.0-preview.7` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.2.0-preview.7)\n",
      "created_at": "2021-06-17T16:58:24Z",
      "updated_at": "2021-06-17T16:58:24Z"
    }
  ],
  "created_at": "2021-06-10T17:36:05Z",
  "number": 15558,
  "state": "closed",
  "title": "Make sure GA revision increases from RC/Preview releases",
  "updated_at": "2021-11-11T21:51:15Z"
}