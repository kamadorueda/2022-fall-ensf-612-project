{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7371",
  "author": "sethvs",
  "body": "Since the **-Full** parameter of the `Get-Help` cmdlet (and `help` function) is used much more frequently than the **-Functionality** parameter it would be useful to change the order they show up when using Tab completion.\r\n\r\nAlso, alpabetically, **Full** goes earlier than **Functionality**.\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\nGet-Help -Fu<tab>\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```none\r\nGet-Help -Full\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n```none\r\nGet-Help -Functionality\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.1.0-preview.4\r\nPSEdition                      Core\r\nGitCommitId                    6.1.0-preview.4\r\nOS                             Microsoft Windows 10.0.17134\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2018-07-31T06:13:19Z",
  "comments": [
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "_Consistently_  tab-completing parameter names _alphabetically sorted_ makes sense.\r\n\r\nBy contrast, I don't think that fixing it on a _per-cmdlet basis_ based on (perceived) frequency of use is the right solution.\r\n\r\nI suggest creating a new issue and PR for sorted completions.",
      "created_at": "2018-07-26T21:01:32Z",
      "updated_at": "2018-07-26T21:01:32Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@sethvs: \r\n\r\nI appreciate your willingness to not only report problems but also _fix_ them, but, before submitting a PR, I suggest waiting for feedback so that a consensus can be reached as to _if and how_ the problem needs solving.\r\n\r\nYou'll save yourself and others potentially unnecessary effort.\r\n",
      "created_at": "2018-07-26T22:32:46Z",
      "updated_at": "2018-07-26T22:32:46Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I agree with @mklement0 that we should fix this at the tabexpansion level so that it's consistent in all cases rather than a specific cmdlet.  From a predictability standpoint, it makes sense to have it alphabetical.  However, it may also make sense to have it based on \"most used\" (more work would be needed to make this happen).  Of course, one solution to that is to make it configurable...",
      "created_at": "2018-07-27T00:18:56Z",
      "updated_at": "2018-07-27T00:18:56Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "Ooh, might be cool if we had alternate completion orders.  One alphabetical and another by most commonly used (or most recently used), etc.  Perhaps that is a preference setting or maybe we could switch from the default order using `tab / shift+tab` to an alternate order using `ctrl+tab / ctrl+shift+tab`.",
      "created_at": "2018-07-27T00:27:14Z",
      "updated_at": "2018-07-27T00:59:35Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "1. `Get-Help -<Tab>` - I'd expect \"first most commonly used\" order\r\n2. `Get-Help -F<Tab>`  - I'd expect alphabetical order",
      "created_at": "2018-07-27T04:01:21Z",
      "updated_at": "2018-07-27T04:02:02Z"
    },
    {
      "author": "sethvs",
      "author_association": "CONTRIBUTOR",
      "body": "@mklement0 I'm very glad that *you* appreciate my effort, but I prefer arranging my time myself. Thank you.",
      "created_at": "2018-07-27T07:24:03Z",
      "updated_at": "2018-07-27T07:24:03Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@sethvs:\r\n\r\nMy advice was well-meaning and - hopefully - sensible.\r\n\r\nIf you disagree, I'm happy to debate the _content_ of the latter claim with you.\r\n\r\nOtherwise, please stop posting passive-aggressive responses.",
      "created_at": "2018-07-27T10:10:03Z",
      "updated_at": "2018-07-27T10:10:03Z"
    },
    {
      "author": "sethvs",
      "author_association": "CONTRIBUTOR",
      "body": "@mklement0 \r\nThank you for the advice. If I ever need another one, I will definitely ask.\r\nI suggest concentrating on the issue topic if you don't mind.\r\nThank you again.",
      "created_at": "2018-07-27T10:59:02Z",
      "updated_at": "2018-07-27T10:59:02Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "I assume we're talking about a _user-specific_ learning feature / MRU feature (as a generic feature, users may disagree on what parameters are the most important ones, and it hurts predictability).\r\n\r\nIf we're going for this, my vote is for a separate, parallel invocation mechanism, as @rkeithhill proposes.\r\n\r\nHowever, it sounds like a nontrivial effort and I see its value as limited in a sysadmin world, where users frequently work on many different machines, possibly using different user accounts. You won't remember which machines / accounts have learned what, and the resulting lack of predictability may be frustrating.\r\n\r\nAlphabetic sorting provides predictability, as @SteveL-MSFT  notes.\r\n\r\nSimilarly,  _short parameter aliases_ provide (machine- and user-independent) predictability and, once memorized, do not even require tab completion (though their use is best avoided in _scripts_ for the sake of readability); e.g., `-ov` for `-Out-Variable`.\r\n\r\nOf course, the short aliases would have to be built into the cmdlets themselves:\r\n\r\n* In many cases they already are, but they're currently hard to discover - see #7381 (and related bug #4739)\r\n* Retroactively adding short names could break existing scripts; while nobody _should_ be writing scripts with incomplete parameter names, I'm sure it happens.\r\n\r\nThere's also #2199, which proposes the introduction of user-defined parameter aliases, which I would also advise against.",
      "created_at": "2018-07-27T14:05:15Z",
      "updated_at": "2018-07-27T14:05:15Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT:\r\n\r\nAs you suggested, I've created a new issue: #7416\r\n\r\nHowever, it only covers _alphabetical_ sorting (though it links back here for the alternative proposals).\r\n\r\nIf you, @rkeithhill, or @iSazonov feel strongly enough about alternative completion orders, I encourage you to create another issue.",
      "created_at": "2018-07-31T19:45:14Z",
      "updated_at": "2018-07-31T19:45:14Z"
    }
  ],
  "created_at": "2018-07-26T12:55:16Z",
  "labels": [
    "WG-Engine",
    "Issue-Discussion",
    "Resolution-Fixed"
  ],
  "number": 7371,
  "state": "closed",
  "title": "Change the order that -Full and -Functionality parameters of the Get-Help cmdlet show up when using Tab completion.",
  "updated_at": "2018-08-01T03:12:39Z"
}