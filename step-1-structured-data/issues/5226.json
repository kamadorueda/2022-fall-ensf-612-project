{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5226",
  "author": "joeyaiello",
  "body": "On Windows, when we do an update install with an MSI, the directory of `$PSHome` gets changed to reflect the version number. For example, `C:\\Program Files\\PowerShell\\6.0.0-beta.8` gets changed to `C:\\Program Files\\PowerShell\\6.0.0-beta.9`. \r\n\r\nUnfortunately, this breaks any user-created shortcuts that are hard-coded to the exact path of PowerShell. Similarly, apps like VS Code get hardcoded to that path and will break after an update install.\r\n\r\nAFAICT, there's a couple of paths forward here:\r\n1. It might not matter at all once we move to `pwsh` and add $PSHome to the PATH. Anyone who wants stability should build their shortcuts, VS Code preferences, and shell/batch scripts against `pwsh` and not the full path.\r\n2. We change behavior to only use the major and minor versions (e.g. `6.0` and `6.1`and not the revision number). That way, when we update to 6.1 we can keep them side-by-side. However, that might not be desirable if we maintain strict semantic versioning (i.e. don't make breaking changes between minor versions). \r\n3. We change behavior to only use the major version (e.g. `6`). This is similar to the Office or VS Code approach (e.g. `Office12` vs. `Office13`). This may be overoptimizing if we never do a PowerShell 7, or it might be the right solution if we maintain strict semantic versioning.\r\n\r\nMy main goal here is not to over-optimize for an uncertain future. That's why I'm leaning towards 1, but I want to get people's thoughts. ",
  "closed_at": "2018-07-20T18:47:40Z",
  "comments": [
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "I have managed versions and SxS with other languages ins linux by having a symlinks. Something like `/path/to/project.latest` which is a symlink to `/path/to/project.1.0.2.3/` when a new version is added, the symlink just gets updated to the new path. Perhaps something similar could be done with junctions?\r\n\r\n`C:\\Program Files\\PowerShell\\Latest` -> `C:\\Program Files\\PowerShell\\6.0.0-beta.9`\r\n\r\n",
      "created_at": "2017-10-25T09:00:07Z",
      "updated_at": "2017-10-25T09:00:07Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "Furthermore, any shortcuts that get created by pinning the PowerShell launched from the installer, will have the \"Start in\" directory set to the install location rather than `%USERPROFILE%`.  So when I start these shortcuts they start up in the install dir rather than my home dir.  This might be as simple as making the installer \"Launch PowerShell\" command set the working directory to the current user's home dir.\r\n  ",
      "created_at": "2017-10-26T19:26:42Z",
      "updated_at": "2018-01-04T22:35:16Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "@joeyaiello  [PR 5101](https://github.com/PowerShell/PowerShell/pull/5101) already added `$PSHome` to the path\r\n@rkeithhill It might sound easy but making any change in WiX is a pain. I tried it once but I can give it another go. I am glad that at least people find the `Launch PowerShell` checkbox useful that I added to the installer. :-)\r\n  ",
      "created_at": "2018-01-04T22:10:28Z",
      "updated_at": "2018-01-04T22:17:50Z"
    },
    {
      "author": "lwsrbrts",
      "author_association": "NONE",
      "body": "I think it's worth mentioning #5919 here for this discussion.\r\nWindows only but relevant.\r\n",
      "created_at": "2018-01-27T10:25:31Z",
      "updated_at": "2018-01-27T10:25:31Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "My preference is to go with single major version for the folder name.  If the user cares about the actual version, it's in the product.  If the user wants side-by-side, they should use the .zip anyways.",
      "created_at": "2018-02-02T00:44:11Z",
      "updated_at": "2018-02-02T00:44:11Z"
    },
    {
      "author": "SwarfegaGit",
      "author_association": "CONTRIBUTOR",
      "body": "Just to add from duplicate issue #6088.\r\n\r\nDo we need to keep the version details on the shortcut (and shortcut folder) that is placed into the Start Menu?  Why can't it just be 'PowerShell' rather than 'PowerShell-6.0.1' as it is now?",
      "created_at": "2018-02-02T08:21:10Z",
      "updated_at": "2018-02-02T08:21:10Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "@SwarfegaGit The start menu folder already got renamed to `PowerShell` in [PR 5891](https://github.com/PowerShell/PowerShell/pull/5891)",
      "created_at": "2018-02-02T15:03:14Z",
      "updated_at": "2018-02-02T15:03:14Z"
    },
    {
      "author": "SwarfegaGit",
      "author_association": "CONTRIBUTOR",
      "body": "@bergmeister that's good news!  I see the version number still remains on the shortcut though.  I see there's mention of this being for side-by-side installations but as @SteveL-MSFT mentioned above ideally these people should be using the .zip version.  I would sooner see the shortcut just be called 'PowerShell' like every other application (aside from Office xxxx) on my Start Menu.",
      "created_at": "2018-02-02T15:54:41Z",
      "updated_at": "2018-02-02T15:54:41Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "@rkeithhill Recently a `-WorkingDirectory` option was added to `pwsh` in `6.1.0-preview.2`, therefore you can now change the shortcut to start in your user directory by appending ` -WorkingDirectory %USERPROFILE%` (right-click -> Properties)\r\n![image](https://user-images.githubusercontent.com/9250262/39961880-cf6caeb6-5637-11e8-9bea-0c5b3f34236d.png)\r\nPersonally, Normally, I hate 'Add shortcut' checkboxes in installers but this special case would warrant having 2 checkbox (unchecked by default) to add such shortcuts to the Taskbar/Desktop. WDYT?\r\n",
      "created_at": "2018-05-12T21:58:35Z",
      "updated_at": "2018-05-12T22:01:36Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "This should be fixed as we now install to `$env:ProgramFiles\\PowerShell\\6` and `$env:ProgramFiles\\PowerShell\\6-preview`",
      "created_at": "2018-07-20T18:47:39Z",
      "updated_at": "2018-07-20T18:47:39Z"
    }
  ],
  "created_at": "2017-10-25T08:47:22Z",
  "labels": [
    "OS-Windows",
    "Issue-Discussion",
    "Resolution-Fixed"
  ],
  "number": 5226,
  "state": "closed",
  "title": "Directory for $PSHome when updating on Windows with MSI",
  "updated_at": "2018-07-20T18:47:45Z"
}