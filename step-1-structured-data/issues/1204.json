{
  "_url": "https://github.com/PowerShell/PowerShell/issues/1204",
  "author": "TravisEz13",
  "body": "<!--\n\nIf you are running a released version of powershell, but not the latest one, install the latest from https://github.com/PowerShell/PowerShell/releases and try to repro it again\n\nBefore submitting this issue, please first:\n\n- [ ] Search the existing issues.\n- [ ] Refer to the [FAQ](../docs/FAQ.md).\n- [ ] Refer to the [known issues](../docs/KNOWNISSUES.md).\n- [ ] If it is a bug, fill out this form:\n-->\n## Steps to reproduce\n\n`get-pnpdevice | Select-Object -First 1 | Get-PnpDeviceProperty`\nor\n`Get-PhysicalDisk | Select-Object -First 1 | Get-StorageAdvancedProperty`\nor \n\n```\n[10.123.172.187]: PS C:\\Users\\LocalAdmin\\Documents>  $serviceTypes = @{\n                 'Kernel Driver'=1;\n                 'File System Driver'=2;\n                 'Adapter'=4;\n                 'Recognizer Driver'=8;\n                 'Own Process'=16;\n                 'Share Process'=32;\n                 'Interactive Process'=256\n             }\n $original = Get-CimInstance Win32_Service -filter \"Name='wuauserv'\"\n $res = $original | Invoke-CimMethod -methodname Change -Arguments @{ServiceType=$serviceTypes[\"Own Process\"]}\n```\n## Expected behavior\n\nIt should work\n## Actual behavior\n\n```\n... Could not find any resources\nappropriate for the specified culture or the neutral culture.  Make sure\n\"Microsoft.Management.Infrastructure.Strings.resources\" was correctly embedded or linked into assembly\n\"Microsoft.Management.Infrastructure\" at compile time, or that all the satellite assemblies required are loadable\nand fully signed.\n    + CategoryInfo          : NotSpecified: (Win32_PnPEntity:String) [Get-PnpDeviceProperty], CimJobException\n    + FullyQualifiedErrorId : CimJob_MissingManifestResourceException,Get-PnpDeviceProperty\n```\n## Environment data\n\n<!-- If running the latest released version, specify the version, i.e. -->\n\nv0.5.0\n\n<!-- If running you own build, please fill in the results of the following commands: -->\n\n``` powershell\n> $PSVersionTable\n\nName                           Value\n----                           -----\nPSEdition                      Core\nPSRemotingProtocolVersion      2.3\nBuildVersion                   3.0.0.0\nPSVersion                      5.1.10032.0\nCLRVersion\nWSManStackVersion              3.0\nSerializationVersion           1.1.0.1\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\n\n```\n\n``` sh\n$ dotnet --info\n.NET Command Line Tools (1.0.0-preview2-003121)\n\nProduct Information:\n Version:            1.0.0-preview2-003121\n Commit SHA-1 hash:  1e9d529bc5\n\nRuntime Environment:\n OS Name:     Windows\n OS Version:  10.0.14371\n OS Platform: Windows\n RID:         win10-x64\n\n$ git rev-parse HEAD; git status\n\n\n```\n",
  "closed_at": "2016-07-29T00:54:36Z",
  "comments": [
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "@TravisEz13 I noticed that you don't populate \"Environment data\", i.e. your recent bugs it says v0.4.0 (which is really old vesion).\nMy original thinking was: ever put version of the product, if issue found in the released version or put second section info (info about `git` tree and `dotnet --info`).\n\nDo we need more clear documentation in the template for this section?\nHow we can improve the template?\n",
      "created_at": "2016-06-25T03:47:19Z",
      "updated_at": "2016-06-25T03:47:19Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "I think prepopulating with a version is the problem. We should explicitly ask for PSVersionTable and dotnet --info, and if it's not filled in, then at least we don't have misleading information.\n",
      "created_at": "2016-06-25T03:52:24Z",
      "updated_at": "2016-06-25T03:52:24Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@vors @andschwa  populating this for every issue is very time-consuming.  I've updated the template with most of the info\n",
      "created_at": "2016-06-27T18:25:13Z",
      "updated_at": "2016-06-27T18:25:13Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@vors This was solved by [this change](https://github.com/PowerShell/Internal-PowerShellTeam-Tools/commit/42050b708693f3c924c104f032c602a72c683101#diff-0d6661234d7dc2a5fd01cbf97251ed5a) in the installation manifest (skipping `Microsoft.Management.Infrastructure.dll` and `Microsoft.Management.Infrastructure.Native.dll`).  I don't think this is a build issue.  Unless you want to keep  it open for the nuGet issue you were talking about.\n",
      "created_at": "2016-06-29T02:16:26Z",
      "updated_at": "2016-06-29T02:16:26Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "I will keep it open, I think we don't add resources in nuget packages at the moment and we should.\nOr better replace nuget packages by reference-only packages.\n",
      "created_at": "2016-06-29T06:08:11Z",
      "updated_at": "2016-06-29T06:08:11Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "Fixed in #1367 \n",
      "created_at": "2016-07-14T23:18:41Z",
      "updated_at": "2016-07-14T23:18:53Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "#1367 covers cimcmdlet, wsman.management and wsman.runtime, but not MMI.\n",
      "created_at": "2016-07-15T00:13:10Z",
      "updated_at": "2016-07-15T00:13:10Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "My bad, too many assemblies, I messed up. :)\n",
      "created_at": "2016-07-15T00:13:39Z",
      "updated_at": "2016-07-15T00:13:39Z"
    }
  ],
  "created_at": "2016-06-25T01:28:39Z",
  "number": 1204,
  "state": "closed",
  "title": "Resources are missing from Microsoft.Management.Infrastructure nuget package",
  "updated_at": "2016-11-10T00:57:01Z"
}