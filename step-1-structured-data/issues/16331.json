{
  "_url": "https://github.com/PowerShell/PowerShell/issues/16331",
  "author": "Quaentor",
  "body": "### Prerequisites\r\n\r\n- [X] Write a descriptive title.\r\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- [X] Search the existing issues.\r\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\r\n\r\n### Steps to reproduce\r\n\r\n```console\r\nPS> \"hello\" > o\r\nPS> (Get-Content o) > o\r\n```\r\n\r\n\r\n### Expected behavior\r\n\r\n```console\r\nPS> Get-Content o\r\nhello\r\n```\r\n\r\n\r\n### Actual behavior\r\n\r\n```console\r\nPS> Get-Content o\r\n```\r\n\r\n\r\n### Error details\r\n\r\n_No response_\r\n\r\n### Environment data\r\n\r\n```powershell\r\nPSVersion                      7.1.5\r\nPSEdition                      Core\r\nGitCommitId                    7.1.5\r\nOS                             Microsoft Windows 10.0.19043\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\n\r\n### Visuals\r\n\r\n_No response_",
  "closed_at": null,
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Sorry, what's the actual issue here? The file content doesn't get set when you expect it to? Or it's getting cleared? \ud83e\udd14 \r\n\r\nCould you try it with the latest RC release for 7.2.0?",
      "created_at": "2021-10-29T13:11:21Z",
      "updated_at": "2021-10-29T13:11:21Z"
    },
    {
      "author": "Quaentor",
      "author_association": "NONE",
      "body": "> Sorry, what's the actual issue here?\r\n\r\nIsn't it obvious, it's all there. The content of the file should remain the same, instead it's cleared.\r\n\r\n> Could you try it with the latest RC release for 7.2.0?\r\n\r\nsame",
      "created_at": "2021-10-29T13:15:56Z",
      "updated_at": "2021-10-29T13:15:56Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "... Huh. You're right. That's very odd, I was pretty sure that worked not that long ago. Seeing the same on my Mac as well.\r\n\r\nNo errors are thrown, the file content is just completely cleared.\r\n\r\nAs a workaround, you can use `Set-Content` instead of `>`:\r\n\r\n```powershell\r\n\"hello\" > o\r\n(Get-Content o) | Set-Content o\r\nGet-Content o\r\n```\r\n\r\nThe issue seems to be specific to `>`. Even though that operator uses`Out-File` underneath, using `Out-File` directly does not exhibit the issue either.",
      "created_at": "2021-10-29T13:29:20Z",
      "updated_at": "2021-10-29T13:35:25Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "This is not a regression -- same behavior on Windows 5.1.\r\nAlso, it's the same behavior with bash, so I'm not too worried about this behavior:\r\n\r\n![image](https://user-images.githubusercontent.com/127450/139473815-b4f1207e-7954-4ba0-8795-169bce4e9437.png)\r\n\r\n---------------------\r\n\r\nHowever, the `>> o` scenario is very broken :) Consider the following example in PowerShell:\r\n```\r\n\"hello\" > o\r\nget-content o >> o\r\n```\r\nThis script will run forever, until you press `ctrl+c` or the disk runs out. It repeatedly reading from the file `o` and write to `o`, and the file will contains tens of thousands of `hello` in it.\r\n\r\nWhile with bash, it throws a clear error about this:\r\n```\r\nbash:16> cat o >> o\r\ncat: o: input file is output file\r\n```\r\nSo I think the `>> o` scenario is something we want to fix, but it's low priority I believe.",
      "created_at": "2021-10-29T17:06:10Z",
      "updated_at": "2021-10-29T17:06:10Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Given the file write operation is failing here, I would at least expect some kind of error to be given. The append scenario is worse, but I think both cases could be much better.",
      "created_at": "2021-10-29T17:14:05Z",
      "updated_at": "2021-10-29T17:14:05Z"
    },
    {
      "author": "jhoneill",
      "author_association": "NONE",
      "body": "Isn't the first thing that happens when you specify    | out-file  is the begin phase opens it as a new file for writing, then during the process phase get-content reads the newly empty file. ",
      "created_at": "2021-10-29T20:44:09Z",
      "updated_at": "2021-10-29T20:44:09Z"
    }
  ],
  "created_at": "2021-10-29T13:06:59Z",
  "number": 16331,
  "state": "open",
  "title": "Getting content and redirecting to the same file in a single command",
  "updated_at": "2021-10-29T20:44:09Z"
}