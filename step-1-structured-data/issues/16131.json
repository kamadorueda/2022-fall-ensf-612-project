{
  "_url": "https://github.com/PowerShell/PowerShell/issues/16131",
  "author": "bergmeister",
  "body": "# PR Summary\r\n\r\nImplements #14784\r\n\r\nI observed though that when using this type accelerator for PowerShell versions without this type accelerator, `PSScriptAnalyzer` (PSSA) does not throw but just ignored the attribute, I initially expected it to throw an error, not sure it this is what the behavior of PSSA should be and if this should be improved. I'd suggest to let PSSA emit a warning if it encounters that in an old PS version and in order to get it highlighted in the editor, PSSA should probably emit a diagnosticrecord as well on those versions similar to how it does for parsererrors\r\n\r\n## PR Context\r\n\r\nSee linked issue. Because this type is long and uses for PSSA suppressions.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [ ] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and opened an issue in the relevant tool repository. This may include:\r\n        - [ ] Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode\r\n        (which runs in a different PS Host).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n",
  "closed_at": "2022-10-13T06:01:21Z",
  "comments": [
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2021-10-01T02:00:41Z",
      "updated_at": "2021-10-01T02:00:41Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "@Jaykul had a good alternative option of including this in PSSA instead, what do people think is better https://github.com/PowerShell/PowerShell/issues/14784#issuecomment-926994753\r\nThe reason why doing it in PSSA is better is due to use cases of e.g. another contributor opening a repo with new aliases suppression in vs code and not using the latest version of PowerShell or Windows PowerShell for the PowerShell extension. As the extension ships with PSSA, this would result in a more consistent change for users and also more users would benefit. Thoughts?\r\nI haven't tested what the behaviour would be if it was defined in both PowerShell and PSSA is that something we should consider as well?",
      "created_at": "2021-10-05T18:57:42Z",
      "updated_at": "2021-10-05T19:01:17Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2021-11-10T02:00:40Z",
      "updated_at": "2021-11-10T02:00:40Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> I haven't tested what the behaviour would be if it was defined in both PowerShell and PSSA is that something we should consider as well?\r\n\r\nI think we could have both option. If PSSA is not loaded PSRL would warn on the name, doesn't it? Also completion will do not work...",
      "created_at": "2021-11-10T05:54:29Z",
      "updated_at": "2021-11-10T05:54:29Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2021-11-19T02:01:02Z",
      "updated_at": "2021-11-19T02:01:02Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as stale because it has been marked as requiring author feedback but has not had any activity for **15 days**. It will be closed if no further activity occurs **within 10 days of this comment**.",
      "created_at": "2022-10-02T20:01:20Z",
      "updated_at": "2022-10-02T20:01:20Z"
    }
  ],
  "created_at": "2021-09-22T09:31:05Z",
  "number": 16131,
  "state": "closed",
  "title": "Add SuppressMessageAttribute type accelerator for System.Diagnostics.CodeAnalysis.SuppressMessageAttribute",
  "updated_at": "2022-10-13T06:01:21Z"
}