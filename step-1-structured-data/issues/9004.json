{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9004",
  "author": "vexx32",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\n1. Moves -Resolve to its own parameter set, where it is mandatory.\r\n2. Adds a -SkipValidation parameter to the same set, where it is optional.\r\n\r\nThe -SkipValidation switch allows Join-Path to use `SessionState.Path.GetUnresolvedProviderPathFromPSPath()` instead of `SessionState.Path.GetResolvedPSPathFromPSPath()`. This allows users to get a meaningful, properly-resolved path to items that may not yet exist.\r\n\r\nPreviously:\r\n```powershell\r\nPS> Join-Path C:\\ .\\Test\\Test\r\nC:\\.\\Test\\Test\r\nPS> Join-Path C:\\ .\\Test\\Test -Resolve\r\nJoin-Path : Cannot find path 'C:\\Test\\Test' because it does not exist.\r\nAt line:1 char:1\r\n+ Join-Path c:\\ .\\Test\\Test -Resolve\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : ObjectNotFound: (C:\\test\\test:String) [Join-Path], ItemNotFoundException\r\n+ FullyQualifiedErrorId : PathNotFound,Microsoft.PowerShell.Commands.JoinPathCommand\r\n```\r\n\r\nNow:\r\n```powershell\r\nPS> Join-Path C:\\ .\\Test\\Test -Resolve -SkipValidation\r\nC:\\Test\\Test\r\n```\r\n\r\n## Remaining Work Items\r\n\r\n* Add Tests\r\n\r\n## PR Context\r\n\r\nRelated: #2993\r\n\r\nIdeally, `Convert-Path`, `Join-Path`, and `Resolve-Path` should all eventually have similar capabilities, but one thing at a time, eh? \ud83d\ude04 \r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [x] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n        - [ ] [Add `[feature]` to your commit messages if the change is significant or affects feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\r\n",
  "closed_at": "2019-04-20T17:03:22Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "OK, after digging through this last night, I don't think that what I'm trying to do _can_ be done without a kludge. I dug through the underbelly of the path resolvers, and got stuck looking for where the `ExpandPath()` method is implemented. I can only find the virtual declaration of the method, and one implementation that does a basic check and proceeds to then go back and call the virtual method. The actual code that it executes doesn't really appear to be in this repository. Is it in an external library?\r\n\r\nTo accomplish this as it stands, I would have to do something along the lines of:\r\n\r\n1. Test if the returned paths are null & the input path(s) contain wildcard expressions.\r\n    * Non-wildcard paths should error out rather than returning `null`\r\n2. Attempt to recursively/repeatedly resolve each parent node, splitting off and retaining leaf nodes one at a time, until I obtain a non-null set of paths that resolve to container nodes.\r\n4. Then, I can proceed to iterate over my set of paths, appending the total leaf nodes to them.\r\n5. Return the resulting paths.\r\n\r\nIs this an acceptable solution for the behaviour, or is this not worth the change, do you think?",
      "created_at": "2019-03-11T16:27:10Z",
      "updated_at": "2019-03-11T16:28:33Z"
    },
    {
      "author": "stale[bot]",
      "author_association": "NONE",
      "body": "This PR has been automatically marked as stale because it has not had activity in the last 30 days. It will be closed if no further activity occurs within 10 days.\nThank you for your contributions.\nCommunity members are welcome to grab these works.\n",
      "created_at": "2019-04-10T16:37:07Z",
      "updated_at": "2019-04-10T16:37:07Z"
    },
    {
      "author": "stale[bot]",
      "author_association": "NONE",
      "body": "This PR has been automatically closed because it is stale. If you wish to continue working on the PR, please first update the PR, then reopen it.\nThanks again for your contribution.\nCommunity members are welcome to grab these works.\n",
      "created_at": "2019-04-20T17:03:21Z",
      "updated_at": "2019-04-20T17:03:21Z"
    }
  ],
  "created_at": "2019-02-27T17:31:19Z",
  "number": 9004,
  "state": "closed",
  "title": "Join-Path: Add -SkipValidation for -Resolve",
  "updated_at": "2020-06-13T22:09:07Z"
}