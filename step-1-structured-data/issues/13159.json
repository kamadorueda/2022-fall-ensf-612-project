{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13159",
  "author": "jshealth",
  "body": "## Summary of the new feature/enhancement\r\nAs a Mac OSX Powershell user, I want the Powershell pkg for Mac OSX to be code-signed so I do not have to create security exceptions for them\r\n\r\nIf you try and open the downloaded package\r\n<img width=\"422\" alt=\"image\" src=\"https://user-images.githubusercontent.com/47585763/87238852-5e2fbe80-c44b-11ea-989b-21efd12fda9f.png\">\r\n\r\n\r\nYou need to make a security exception in System Preferences > Security & Privacy\r\n<img width=\"666\" alt=\"image\" src=\"https://user-images.githubusercontent.com/47585763/87238745-ce3d4500-c449-11ea-8077-536e34285858.png\">\r\n<!-- \r\nA clear and concise description of what the problem is that the new feature would solve.\r\nTry formulating it in user story style (if applicable):\r\n'As a user I want X so that Y.' with X being the being the action and Y being the value of the action.\r\n-->\r\n\r\n## Proposed technical implementation details (optional)\r\nCode-sign packages using Apple's keys and then I will not have to create the exceptions listed above\r\n\r\n<!-- \r\nA clear and concise description of what you want to happen.\r\nConsider providing an example PowerShell experience with expected result.\r\n-->\r\n\r\n\r\n\r\n",
  "closed_at": "2020-07-16T08:00:17Z",
  "comments": [
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Loop in @TravisEz13 and @adityapatwardhan ",
      "created_at": "2020-07-13T00:30:36Z",
      "updated_at": "2020-07-13T00:30:36Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "This is on the backlog with no ETA as of now. There is a workaround by using the `Unblock-File` cmdlet: https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/unblock-file?view=powershell-7\n\n<blockquote><img src=\"https://docs.microsoft.com/en-us/media/logos/logo-ms-social.png\" width=\"48\" align=\"right\"><div><strong><a href=\"https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/unblock-file\">Unblock-File (Microsoft.PowerShell.Utility) - PowerShell</a></strong></div><div>The Unblock-File cmdlet lets you open files that were downloaded from the Internet. It unblocks PowerShell script files that were downloaded from the Internet so you can run them, even when the PowerShell execution policy is RemoteSigned. By default, these files are blocked to protect the computer from untrusted files. Before using the Unblock-File cmdlet, review the file and its source and verify that it is safe to open. Internally, the Unblock-File cmdlet removes the Zone.Identifier alternate data stream, which has a value of \"3\" to indicate that it was downloaded from the Internet. For more information about PowerShell execution policies, see about_Execution_Policies. This cmdlet was introduced in Windows PowerShell 3.0. </div></blockquote>",
      "created_at": "2020-07-13T21:01:44Z",
      "updated_at": "2020-07-13T21:01:46Z"
    },
    {
      "author": "jshealth",
      "author_association": "NONE",
      "body": "Unblock-File allows you to run downloaded Powershell\r\nWhat we're talking about here is if you download the Powershell installer for Mac OS from https://github.com/PowerShell/PowerShell/releases/tag/v7.0.2\r\ne.g.\r\nhttps://github.com/PowerShell/PowerShell/releases/download/v7.0.2/powershell-7.0.2-osx-x64.pkg\r\n\r\nMac OS Gatekeeper prevents you from running the pkg installer.\r\nThe pkg needs to be signed with an Apple Developer certificate so that installing the pkg will not be blocked by Gatekeeper.\r\nSee\r\nhttps://developer.apple.com/developer-id/\r\nhttps://developer.apple.com/support/code-signing/\r\nhttps://simplemdm.com/certificate-sign-macos-packages/\r\n\r\n\n\n<blockquote><img src=\"https://repository-images.githubusercontent.com/49609581/96590180-07d7-11ea-89b1-2f719dc4bb9c\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"/PowerShell/PowerShell/releases/tag/v7.0.2\">Release v7.0.2 Release of Powershell \u00b7 PowerShell/PowerShell</a></strong></div><div>7.0.2 - 2020-06-11\nEngine Updates and Fixes\n\nEnsure null-coalescing LHS is evaluated only once (#12667)\nRestrict loading of amsi.dll to system32 folder (#12730)\n\nGeneral Cmdlet Updates and Fixes\n\nC...</div></blockquote>\n<blockquote></blockquote>\n<blockquote><img src=\"/favicon.ico?51002006191\" width=\"48\" align=\"right\"><div><strong><a href=\"https://developer.apple.com/developer-id/\">Signing Mac Software with Developer ID - Apple Developer</a></strong></div><div>Gatekeeper on macOS helps protect users from downloading and installing malicious software by checking for a Developer\u00a0ID certificate from apps distributed outside the Mac\u00a0App\u00a0Store.</div></blockquote>\n<blockquote><img src=\"/favicon.ico?51002006191\" width=\"48\" align=\"right\"><div><strong><a href=\"https://developer.apple.com/support/code-signing/\">Code Signing - Support - Apple Developer</a></strong></div><div>Get links to documentation and best practices for signing your apps.</div></blockquote>\n<blockquote><div><strong><a href=\"https://simplemdm.com/certificate-sign-macos-packages/\">How To Sign macOS PKGs for Deployment with MDM | SimpleMDM</a></strong></div><div>Apple MDM requires that software packages (PKGs) are signed using a Developer ID Installer certificate. We explain the different methods available to you.</div></blockquote>",
      "created_at": "2020-07-14T02:15:51Z",
      "updated_at": "2020-07-14T02:15:53Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Removed the `Resolution-Answered` tag to allow @adityapatwardhan to follow up.",
      "created_at": "2020-07-14T05:46:38Z",
      "updated_at": "2020-07-14T05:46:38Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@jshealth Our teams that implements signing for us in not prioritizing implementing this type of signing and this issue is already open.\r\nhttps://github.com/PowerShell/PowerShell/issues/10874",
      "created_at": "2020-07-14T20:15:35Z",
      "updated_at": "2020-07-14T20:15:35Z"
    },
    {
      "author": "jshealth",
      "author_association": "NONE",
      "body": "@TravisEz13 Ok",
      "created_at": "2020-07-15T06:26:20Z",
      "updated_at": "2020-07-15T06:26:20Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as duplicate and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2020-07-16T08:00:14Z",
      "updated_at": "2020-07-16T08:00:14Z"
    }
  ],
  "created_at": "2020-07-12T04:27:13Z",
  "number": 13159,
  "state": "closed",
  "title": "Feature Request - Code sign Apple pkg",
  "updated_at": "2020-07-16T08:00:17Z"
}