{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12030",
  "author": "doctordns",
  "body": "Using Get-PSSessionConfiguraition does not find older WIndows PowerShell endpoints. But those endpoints DO exist and can be used:\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\n# Enable Remoting to be sure\r\nEnable-PSRemoting -Force\r\n# Get Endpoints\r\nGet-PSSessionConfiguration | Format-Table Name, PSVersion\r\nInvoke-Command -Computer Localhost -Scriptblock {$PSVersionTable}\r\n\r\n```\r\n\r\n# Expected behavior\r\n\r\n```none\r\nPS C:\\foo> Get-PSSessionConfiguration | Format name, psversion\r\n\r\nName                            PSVersion\r\n----                            ---------\r\nmicrosoft.powershell          5.1\r\nmicrosoft.powershell.workflow 5.1\r\nmicrosoft.powershell32        5.1\r\nmicrosoft.windows.serverma... 3.0\r\nPowerShell.7                    7.0\r\nPowerShell.7-preview            7.0\r\nPowerShell.7.0.0                7.0\r\nPowerShell.7.0.0-daily.20200207 7.0\r\nPowerShell.7.0.0-rc.2           7.0\r\n\r\nPS C:\\foo> Invoke-Command -Computer Localhost -Scriptblock {$PSVersionTable}\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0\r\nOS                             Microsoft Windows 10.0.19569\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0, 5.0, 5.1.10032.0, 6.0.0, 6.1.0, 6.2.0, 7.0.0}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n```\r\n\r\n# Actual behavior\r\n\r\n```none\r\nPS C:\\foo> Get-PSSessionConfiguration | Format-Table Name, Psversion\r\n\r\nName                            PSVersion\r\n----                            ---------\r\nPowerShell.7                    7.0\r\nPowerShell.7-preview            7.0\r\nPowerShell.7.0.0                7.0\r\nPowerShell.7.0.0-daily.20200207 7.0\r\nPowerShell.7.0.0-rc.2           7.0\r\n\r\nPS C:\\foo> Invoke-Command -Computer Localhost -Scriptblock {$PSVersionTable}\r\n\r\nName                           Value\r\n----                           -----\r\nWSManStackVersion              3.0\r\nBuildVersion                   10.0.19569.1000\r\nSerializationVersion           1.1.0.1\r\nPSEdition                      Desktop\r\nPSRemotingProtocolVersion      2.3\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0, 5.0, 5.1.19569.1000}\r\nCLRVersion                     4.0.30319.42000\r\nPSVersion                      5.1.19569.1000\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\n\r\n```\r\nSo you can enter a session that does not exist. I think this is confusing and is not good user experience. Interestingly, I can see ALL the endpoints from Windows PowerShell 5.1.",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "It is dup #11616",
      "created_at": "2020-03-05T16:23:25Z",
      "updated_at": "2020-03-05T16:23:25Z"
    },
    {
      "author": "doctordns",
      "author_association": "COLLABORATOR",
      "body": "Sorry - but #11616 is a different issue. \r\n\r\nThat bug is around the default end-point used. \r\n\r\nTHIS Issue is that the default endpoint is not visible with Get-PSSessionConfiguration.  It is not right that I can not see the endpoint I actually use. Get-PSSessionConfiguraiton should show any endpoint that can be used. And should show endpoints that are used by default.\r\n\r\nTake a close look at the expected output above before closing this issue prematurely.",
      "created_at": "2020-03-05T16:29:16Z",
      "updated_at": "2020-03-05T16:33:05Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "https://github.com/PowerShell/PowerShell/issues/11616#issuecomment-589159319",
      "created_at": "2020-03-05T16:42:52Z",
      "updated_at": "2020-03-05T16:42:52Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "Reopening given the stance we landed on in [my comment here](https://github.com/PowerShell/PowerShell/issues/11616#issuecomment-594119801).\r\n\r\n`Get-PSSessionConfiguration` should return all legitimate WinRM endpoints on the machine. I realize that this directly contradicts our original decision to explicitly hide these endpoints, but we understand now that if PS7 is to truly manage the entirety of a Windows box, it needs to be able to enumerate and configure WPS endpoints as well. ",
      "created_at": "2020-03-26T17:42:53Z",
      "updated_at": "2020-03-26T17:42:53Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "@doctordns could you also describe here the issue with running the cmdlet remotely? Does it just not work at all when running it an interactive session and/or Invoke-Command against a WinRM-based PSSession?",
      "created_at": "2020-03-26T17:44:28Z",
      "updated_at": "2020-03-26T17:44:28Z"
    },
    {
      "author": "doctordns",
      "author_association": "COLLABORATOR",
      "body": "@joeyaiello the issue here is that from Pwsh 7 you do not see the Windows PowerShell endpoints. You can still use them. And the commands work (albeit is Windows PowerShell). \r\n\r\nI still think the default endpoint should be the same as the version of PowerShell (eg should be a PS7 endpoint, not a windows PowerShell endpoint), but that's a different issue. I like the idea of adding switches to the installation MSI to enable admins to have it their way at install time.",
      "created_at": "2020-03-26T17:58:13Z",
      "updated_at": "2020-03-26T17:58:13Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "Yeah, I got that part here, but there was also reference in the other issue to the fact that the cmdlet doesn't work over remoting. My question is whether it works at all (only enumerating the PS7 endpoints as is the case on a local machine), or if there's an additional problem blocking its remote usage altogether ",
      "created_at": "2020-03-26T18:58:12Z",
      "updated_at": "2020-03-26T18:58:12Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "If the cmdlet will show all Windows PowerShell endpoints we should filter out __microsoft.powershell.workflow__:\r\n```powershell\r\n Get-PSSessionConfiguration\r\n\r\n\r\nName          : microsoft.powershell\r\nPSVersion     : 5.1\r\nStartupScript :\r\nRunAsUser     :\r\nPermission    : NT AUTHORITY\\\u0418\u041d\u0422\u0415\u0420\u0410\u041a\u0422\u0418\u0412\u041d\u042b\u0415 AccessAllowed, BUILTIN\\\u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u044b AccessAllowed, BUILTIN\\\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0438\r\n                \u0443\u0434\u0430\u043b\u0435\u043d\u043d\u043e\u0433\u043e \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f AccessAllowed\r\n\r\nName          : microsoft.powershell.workflow\r\nPSVersion     : 5.1\r\nStartupScript :\r\nRunAsUser     :\r\nPermission    : BUILTIN\\\u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u044b AccessAllowed, BUILTIN\\\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u043d\u043e\u0433\u043e \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f AccessAllowed\r\n\r\nName          : microsoft.powershell32\r\nPSVersion     : 5.1\r\nStartupScript :\r\nRunAsUser     :\r\nPermission    : NT AUTHORITY\\\u0418\u041d\u0422\u0415\u0420\u0410\u041a\u0422\u0418\u0412\u041d\u042b\u0415 AccessAllowed, BUILTIN\\\u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u044b AccessAllowed, BUILTIN\\\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0438\r\n                \u0443\u0434\u0430\u043b\u0435\u043d\u043d\u043e\u0433\u043e \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f AccessAllowed\r\n\r\n```",
      "created_at": "2020-03-27T05:49:36Z",
      "updated_at": "2020-03-27T05:49:59Z"
    },
    {
      "author": "doctordns",
      "author_association": "COLLABORATOR",
      "body": "Any progress on this issue?\r\n\r\nAt a minimum, can we get the ability of Get-PSSessionConfiguration to see down-level endpoints into 7.2?",
      "created_at": "2021-01-29T11:35:39Z",
      "updated_at": "2021-01-29T11:35:39Z"
    }
  ],
  "created_at": "2020-03-05T15:27:41Z",
  "labels": [
    "Issue-Question",
    "WG-Remoting",
    "WG-Cmdlets-Core"
  ],
  "number": 12030,
  "state": "open",
  "title": "Get-PSSessionConfiguration Fails to find WIndows PowerShell endpoint",
  "updated_at": "2021-01-29T11:35:39Z"
}