{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15424",
  "author": "shishini",
  "body": "Powershell used to crash on loading/opening with the below error \r\nThe error originally happened to PowerShell 7.1.3 \r\n\r\nI tried uninstalling and reinstalling, I even installed the preview version as evident below \r\nBut it didnt work \r\n\r\nI checked the programs I recently installed and DropBox was the latest \r\nI uninstalled DropBox, the problem was still there\r\n\r\nIts only after I restarted (after uninstalling DropBox), that it went away \r\n\r\nSo uninstalling DropBox and restarting solved it\r\n\r\nEDIT:\r\nWindows 10 and Dropbox Installer was downloaded on May  2, 2021\r\nI forgot to take note of the DropBox version prior to uninstalling \r\n\r\n```\r\nPowerShell 7.2.0-preview.5\r\nCopyright (c) Microsoft Corporation.\r\n\r\nhttps://aka.ms/powershell\r\nType 'help' to get help.\r\n\r\nFatal error. System.AccessViolationException: Attempted to read or write protected memory. This is often an indication that other memory is corrupt.\r\nRepeat 2 times:\r\n--------------------------------\r\n   at System.Management.Automation.AmsiUtils+AmsiNativeMethods.AmsiScanBuffer(IntPtr, IntPtr, UInt32, System.String, IntPtr, AMSI_RESULT ByRef)\r\n--------------------------------\r\n   at System.Management.Automation.AmsiUtils.WinScanContent(System.String, System.String, Boolean)\r\n   at System.Management.Automation.CompiledScriptBlockData.PerformSecurityChecks()\r\n   at System.Management.Automation.CompiledScriptBlockData.ReallyCompile(Boolean)\r\n   at System.Management.Automation.CompiledScriptBlockData.CompileUnoptimized()\r\n   at System.Management.Automation.CompiledScriptBlockData.Compile(Boolean)\r\n   at System.Management.Automation.ScriptBlock.GetCodeToInvoke(Boolean ByRef, System.Management.Automation.ScriptBlockClauseToInvoke)\r\n   at System.Management.Automation.ScriptBlock.InvokeWithPipeImpl(System.Management.Automation.ScriptBlockClauseToInvoke, Boolean, System.Collections.Generic.Dictionary`2<System.String,System.Management.Automation.ScriptBlock>, System.Collections.Generic.List`1<System.Management.Automation.PSVariable>, ErrorHandlingBehavior, System.Object, System.Object, System.Object, System.Management.Automation.Internal.Pipe, System.Management.Automation.InvocationInfo, System.Object[])\r\n   at System.Management.Automation.ScriptBlock.InvokeWithPipe(Boolean, ErrorHandlingBehavior, System.Object, System.Object, System.Object, System.Management.Automation.Internal.Pipe, System.Management.Automation.InvocationInfo, Boolean, System.Collections.Generic.List`1<System.Management.Automation.PSVariable>, System.Collections.Generic.Dictionary`2<System.String,System.Management.Automation.ScriptBlock>, System.Object[])\r\n   at System.Management.Automation.ModuleIntrinsics.CreateModuleImplementation(System.String, System.String, System.Object, System.Management.Automation.Language.IScriptExtent, System.Management.Automation.SessionState, System.Object, System.Collections.Generic.List`1<System.Object> ByRef, System.Object[])\r\n   at Microsoft.PowerShell.Commands.ModuleCmdletBase.LoadModule(System.Management.Automation.PSModuleInfo, System.String, System.String, System.String, System.Management.Automation.SessionState, System.Object, ImportModuleOptions ByRef, ManifestProcessingFlags, Boolean ByRef, Boolean ByRef)\r\n   at Microsoft.PowerShell.Commands.ModuleCmdletBase.LoadModuleNamedInManifest(System.Management.Automation.PSModuleInfo, Microsoft.PowerShell.Commands.ModuleSpecification, System.String, Boolean, System.String, System.Management.Automation.SessionState, ImportModuleOptions, ManifestProcessingFlags, Boolean, Boolean, System.Object, Boolean ByRef, System.String, System.Nullable`1<System.Management.Automation.PSLanguageMode>)\r\n   at Microsoft.PowerShell.Commands.ModuleCmdletBase.LoadModuleManifest(System.String, System.Management.Automation.ExternalScriptInfo, System.Collections.Hashtable, System.Collections.Hashtable, ManifestProcessingFlags, System.Version, System.Version, System.Version, System.Nullable`1<System.Guid>, ImportModuleOptions ByRef, Boolean ByRef)\r\n   at Microsoft.PowerShell.Commands.ModuleCmdletBase.LoadModule(System.Management.Automation.PSModuleInfo, System.String, System.String, System.String, System.Management.Automation.SessionState, System.Object, ImportModuleOptions ByRef, ManifestProcessingFlags, Boolean ByRef, Boolean ByRef)\r\n   at Microsoft.PowerShell.Commands.ModuleCmdletBase.LoadUsingExtensions(System.Management.Automation.PSModuleInfo, System.String, System.String, System.String, System.String, System.String, System.Management.Automation.SessionState, ImportModuleOptions, ManifestProcessingFlags, Boolean ByRef, Boolean ByRef)\r\n   at Microsoft.PowerShell.Commands.ModuleCmdletBase.LoadUsingModulePath(System.Management.Automation.PSModuleInfo, Boolean, System.Collections.Generic.IEnumerable`1<System.String>, System.String, System.Management.Automation.SessionState, ImportModuleOptions, ManifestProcessingFlags, System.Management.Automation.PSModuleInfo ByRef)\r\n   at Microsoft.PowerShell.Commands.ImportModuleCommand.ImportModule_LocallyViaName(ImportModuleOptions, System.String)\r\n   at Microsoft.PowerShell.Commands.ImportModuleCommand.ImportModule_LocallyViaName_WithTelemetry(ImportModuleOptions, System.String)\r\n   at Microsoft.PowerShell.Commands.ImportModuleCommand.ProcessRecord()\r\n   at System.Management.Automation.Cmdlet.DoProcessRecord()\r\n   at System.Management.Automation.CommandProcessor.ProcessRecord()\r\n   at System.Management.Automation.CommandProcessorBase.DoExecute()\r\n   at System.Management.Automation.Internal.PipelineProcessor.Inject(System.Object, Boolean)\r\n   at System.Management.Automation.Internal.PipelineProcessor.SynchronousExecuteEnumerate(System.Object)\r\n   at System.Management.Automation.Runspaces.LocalPipeline.InvokeHelper()\r\n   at System.Management.Automation.Runspaces.LocalPipeline.InvokeThreadProc()\r\n   at System.Management.Automation.Runspaces.LocalPipeline.InvokeThreadProcImpersonate()\r\n   at System.Management.Automation.Runspaces.PipelineThread.WorkerProc()\r\n   at System.Threading.Thread+StartHelper.Callback(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n   at System.Threading.Thread.StartCallback()\r\n\r\n[process exited with code 3221225477]\r\n```\r\n",
  "closed_at": "2021-05-25T22:00:04Z",
  "comments": [
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "Security Working Group:\r\n\r\nThe stack is showing this is crashing in the AMSI API, which is owned by Windows.\r\nAMSI plug-ins can cause PowerShell to crash.  \r\nWindows should investigate.\r\n\r\nThis should be reported to [Windows General Feedback](https://windowsserver.uservoice.com/forums/295047-general-feedback). ",
      "created_at": "2021-05-24T21:00:01Z",
      "updated_at": "2021-05-24T21:00:01Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as external and has not had any activity for **1 day**. It has been be closed for housekeeping purposes.",
      "created_at": "2021-05-25T22:00:03Z",
      "updated_at": "2021-05-25T22:00:03Z"
    }
  ],
  "created_at": "2021-05-19T13:32:51Z",
  "labels": [
    "Issue-Bug",
    "Resolution-External",
    "WG-Security"
  ],
  "number": 15424,
  "state": "closed",
  "title": "DropBox broke powershell on my computer",
  "updated_at": "2021-05-25T22:00:04Z"
}