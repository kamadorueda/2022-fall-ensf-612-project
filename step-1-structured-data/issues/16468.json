{
  "_url": "https://github.com/PowerShell/PowerShell/issues/16468",
  "author": "sba923",
  "body": "### Summary of the new feature / enhancement\n\nWhen critical errors such as \"cannot start EXE due to missing DLL\" occur in File Explorer or CMD, an explanatory error dialog is displayed:\r\n\r\n![image](https://user-images.githubusercontent.com/12860484/141680959-ed24d5a6-f3bb-4c68-bcfb-b1bb10223c9e.png)\r\n\r\nWhen the same kind of error occurs in PowerShell, no error message is displayed, only `$LASTEXITCODE` is set:\r\n\r\n![image](https://user-images.githubusercontent.com/12860484/141680989-05a43a2c-cc0f-405a-9f25-ed5427a183e9.png)\r\n\r\nIt would be desirable to make this behavior configurable, so that especially in interactive scenarios the user is supplied with information about what's happening.\r\n\r\nThis inspired by MKS Korn Shell's `set -X` option (@BrucePay will remember...):\r\n\r\nFrom [set KornShell flags and positional parameters](https://www.mkssoftware.com/docs/man1/set.1.asp):\r\n\r\n![image](https://user-images.githubusercontent.com/12860484/141630342-3eacc302-d515-4106-ae15-9231121c77f1.png)\r\n\r\nOf course, that exception handler is not desirable for scripted / unattended execution, so it should be off by default.\r\n\r\nIt doesn't have to be a GUI-based one, outputting the explanatory text to the `Error` stream would also be fine.\r\n\r\n@corbob has collected repro steps on various shells.\n\n### Proposed technical implementation details (optional)\n\n_No response_",
  "closed_at": null,
  "comments": [
    {
      "author": "corbob",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for opening the issue @sba923. I've created a simple repro and have verified behaviour in Windows PowerShell 2 on Windows 7, Windows PowerShell 5.1, and PowerShell 7.2. I have also checked the behaviour of cmd, the run dialog box, and git-bash.\r\n\r\nTo expand on what is listed in above: PowerShell behaves the same as cmd and the run dialog when you use `Start-Process`. In all other cases I tested (running `adb`, `. adb`, `& adb`) the error is not emitted outside of `$LASTEXITCODE`. In git-bash an error is emitted, but it is not extremely helpful as it just indicates it couldn't load a file and gives a different exit code:\r\n\r\n![image](https://user-images.githubusercontent.com/30301021/141693335-3f0a84d6-271f-4230-8900-0aaf98f6fbb5.png)\r\n\r\nThe repro steps I've used (from an administrative PowerShell window):\r\n\r\n```powershell\r\nchoco install adb\r\nRemove-Item \"$env:ChocolateyInstall\\lib\\adb\\tools\\platform-tools\\AdbWinApi.dll\"\r\nadb\r\n```\r\n\r\nNote Chocolatey is not  the only way to get adb installed, but it is a pretty quick and painless way to do it.",
      "created_at": "2021-11-14T18:43:41Z",
      "updated_at": "2021-11-14T18:43:41Z"
    }
  ],
  "created_at": "2021-11-14T12:32:23Z",
  "labels": [
    "Issue-Enhancement",
    "Needs-Triage",
    "WG-Engine-Pipeline"
  ],
  "number": 16468,
  "state": "open",
  "title": "Configurable behavior on critical error: message on Error stream or pop-up dialog",
  "updated_at": "2021-11-15T03:22:05Z"
}