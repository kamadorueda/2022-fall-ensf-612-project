{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5526",
  "author": "dddugan",
  "body": "Invoke-RestMethod with the -FollowRelLink parameter correctly retrieves additional pages of results from REST services. However, the return is an array of pages rather than one array of all results.\r\n\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\nPS /> $apikey = 'MYAPIKEYHERE'\r\nPS /> $headers = @{'Accept'='application/json';'Content-Type'='application/json';'Authorization'=\"SSWS $apikey\"}\r\nPS />\r\nPS /> $users = Invoke-RestMethod -Uri 'https://MYORGNAME.okta.com/api/v1/users/?filter=status eq \"ACTIVE\"&limit=10' -Method GET -Headers $headers -FollowRelLink -MaximumFollowRelLink 3\r\nPS />\r\nPS /> $users.Count\r\n3\r\nPS /> $users.Item(0).Count\r\n10\r\nPS /> $users.Item(1).Count\r\n10\r\nPS /> $users.Item(2).Count\r\n10\r\nPS />\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```none\r\nInvoke-RestMethod should return a single array of objects instead of an array of arrays (pages).\r\n\r\nPS /> $users.Count\r\n30\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n```none\r\nInvoke-RestMethod returns an array of arrays (pages).\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n```powershell\r\nPS /> $PSVersionTable                                                                                                   \r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.0-rc\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.0-rc\r\nOS                             Linux 4.4.0-43-Microsoft #1-Microsoft Wed Dec 31 14:42:53 PST 2014\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n\r\nPS />\r\n```\r\n",
  "closed_at": "2017-11-28T16:57:42Z",
  "comments": [
    {
      "author": "dddugan",
      "author_association": "NONE",
      "body": "The specific API I'm using returns multiple Link headers, which may or may not be related.\r\nhttps://github.com/PowerShell/PowerShell/pull/5265",
      "created_at": "2017-11-22T15:35:33Z",
      "updated_at": "2017-11-22T15:35:33Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "I disagree. If we do this we lose parity with the JSON objects being returned from the APIs.\r\n\r\nPage 1\r\n```json\r\n[\r\n  {\r\n    \"Value\": \"One\",\r\n    \"Id\": 1\r\n  },\r\n  {\r\n    \"Value\": \"Two\",\r\n    \"Id\": 2\r\n  }\r\n]\r\n```\r\n\r\nPage 2:\r\n\r\n```json\r\n[\r\n  {\r\n    \"Value\": \"Three\",\r\n    \"Id\": 3\r\n  },\r\n  {\r\n    \"Value\": \"Four\",\r\n    \"Id\": 4\r\n  }\r\n]\r\n```\r\n\r\nThat is clearly 2 JSON arrays of JSON objects, not a single array of objects. ",
      "created_at": "2017-11-22T15:37:04Z",
      "updated_at": "2017-11-22T15:37:04Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "#5265 is unrelated to the output.",
      "created_at": "2017-11-22T15:40:06Z",
      "updated_at": "2017-11-22T15:40:06Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "I will also add that unwrapping the jagged array is easily done with `Foreach-Object`:\r\n\r\n```powershell\r\n$uri = 'https://api.github.com/repos/powershell/powershell/issues'\r\nInvoke-RestMethod -FollowRelLink -MaximumFollowRelLink 2 -uri $Uri | \r\n    Measure-Object\r\n```\r\n\r\nCount : 2\r\n\r\n```powershell\r\n$uri = 'https://api.github.com/repos/powershell/powershell/issues'\r\nInvoke-RestMethod -FollowRelLink -MaximumFollowRelLink 2 -uri $Uri | \r\n    Foreach-Object { $_ } |\r\n    Measure-Object\r\n```\r\n\r\nCount: 60.",
      "created_at": "2017-11-22T15:56:18Z",
      "updated_at": "2017-11-22T15:56:18Z"
    },
    {
      "author": "dddugan",
      "author_association": "NONE",
      "body": "Thanks, @markekraus. You're absolutely right that the current behavior more closely matches the actual return. However, from my (outside) perspective FollowRelLink was added as a convenience so the caller doesn't need to think about paging and multiple calls. With that spirit in mind it seems like we shouldn't require them to post-process results in any way either.",
      "created_at": "2017-11-22T16:38:48Z",
      "updated_at": "2017-11-22T16:38:48Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@dddugan It's certainly a difference of opinion on how it should work. On the one hand, we need to maintain parity with the objects as they are returned from the API and on the other is convenience. I cannot condone making the default behavior break parity with APIs. As someone who works heavily with APIs, I cannot stand it when something makes assumptions about how the objects should be provided to me, especially when that assumption breaks with what the API has documented. The API says it will return an array of objects per page, I would expect and array of arrays from `FollowReLlink`. My vehicle for obtaining these objects from the API may change, and I don't want to adjust my logic to fit with what ever API breaking format that vehicle has decided to impose on me.\r\n\r\nWe could _maybe_ add a switch to unwrap arrays, but, I'm not real excited about doing so. I think it is best to just return the objects as they are and let the user decide how they want to process them. \r\n\r\n> FollowRelLink was added as a convenience so the caller doesn't need to think about paging and multiple calls.\r\n\r\nAnd they don't. In 5.1 for this operation to work you needed \r\n\r\n1. fall back to `Invoke-WebRequest`, \r\n1. Check for errors,\r\n1. Inspect Content-type header,\r\n1. convert the `Content` to an object, \r\n1. handle serialization errors,\r\n1. inspect the headers for `Link`, \r\n1. regex parse the single `Link` header, \r\n1. and finally repeat the process with the `next` link URI. \r\n\r\nIn 6.0.0 `irm -FollowRelLink` manages all of that for you. ",
      "created_at": "2017-11-22T17:45:35Z",
      "updated_at": "2017-11-22T17:45:35Z"
    },
    {
      "author": "jmiller76",
      "author_association": "NONE",
      "body": "@markekraus I second that.  It is easy to merge the multiple pages in script, but not trivial to unwind it if merged in cmdlet.\r\n\r\nUnless there is a particular efficiency gain from append them in the cmdlet that is.\r\n\r\nDoes the project have any specific single responsibility type guidance for things like this?",
      "created_at": "2017-11-22T22:15:36Z",
      "updated_at": "2017-11-22T22:15:36Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "> Does the project have any specific single responsibility type guidance for things like this?\r\n\r\nGood question. I don't know about any in the project specifically, There is always the [\"The PowerShell Best Practices and Style Guide\"](https://github.com/PoshCode/PowerShellPracticeAndStyle) ([One relvant to this thread](https://github.com/PoshCode/PowerShellPracticeAndStyle/blob/master/Best-Practices/Building-Reusable-Tools.md#tool-06-tools-should-output-raw-data))",
      "created_at": "2017-11-22T23:01:08Z",
      "updated_at": "2017-11-22T23:01:08Z"
    },
    {
      "author": "dddugan",
      "author_association": "NONE",
      "body": "Fair enough. Given:\r\n\r\n1. The current behavior more closely matches the objects as returned from the API.\r\n2. The caller collapsing a jagged array is vastly simpler than unwinding it.\r\n\r\nI see the logic in status quo. It just wasn't the behavior I originally expected, which prompted me to raise the issue prior to GA.\r\n\r\nAny further discussion before we close this?",
      "created_at": "2017-11-28T14:39:51Z",
      "updated_at": "2017-11-28T14:39:51Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@dddugan nothing from my end. I think this might make sense to note this in the documentation. If that wasn't what you expected, it's likely others will possible have the same experience.",
      "created_at": "2017-11-28T15:38:39Z",
      "updated_at": "2017-11-28T15:38:39Z"
    },
    {
      "author": "silentdth",
      "author_association": "NONE",
      "body": "Just a note here - in PS 7.10 preview 6 the `FollowRelLink` doesn't work at all. You only get the first page. ",
      "created_at": "2020-09-07T00:24:29Z",
      "updated_at": "2020-09-07T00:24:29Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@silentdth you should probably file a new issue for that so it can be triaged appropriately, assuming there isn't an open issue for it yet. \ud83d\ude42 ",
      "created_at": "2020-09-07T00:36:34Z",
      "updated_at": "2020-09-07T00:36:48Z"
    },
    {
      "author": "silentdth",
      "author_association": "NONE",
      "body": "Will do @vexx32 . For now I will use the DIY version for V5 of Powershell so I can get my job done ,then i'll come back and log it :)",
      "created_at": "2020-09-07T01:42:39Z",
      "updated_at": "2020-09-07T01:42:39Z"
    }
  ],
  "created_at": "2017-11-22T15:25:40Z",
  "number": 5526,
  "state": "closed",
  "title": "Invoke-RestMethod -FollowRelLink should return a single array of objects",
  "updated_at": "2020-09-07T01:42:39Z"
}