{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11945",
  "author": "AnatoliB",
  "body": "# Summary of the new feature/enhancement\r\n\r\nAs a user, I want to be able to override the location where module analysis cache, startup profile data, telemetry.uuid, etc. are created by PowerShell, so that a more appropriate path can be configured when needed. The location PowerShell selects now causes a problem in Azure Functions: https://github.com/Azure/azure-functions-powershell-worker/issues/365.\r\n\r\n# Proposed technical implementation details\r\n\r\n`Platform.CacheDirectory` is an internal variable initialized here (Windows):\r\nhttps://github.com/PowerShell/PowerShell/blob/a34d0f3e808659b0c07b8fdac83aaae1dae43c21/src/System.Management.Automation/CoreCLR/CorePsPlatform.cs#L149\r\n\r\nThe problem is that the `Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData)` call returns an empty string in certain environments (such as Azure App Service sandbox). As a result, PowerShell creates (of fails to create) files at an unexpected location (see https://github.com/Azure/azure-functions-powershell-worker/issues/365 for more details).\r\n\r\nThis problem can be avoided if PowerShell either automatically selected a different location, or allowed us override the default location.\r\n\r\nImplementation ideas:\r\n\r\n- Instead of just invoking `Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData)`, look for an environment variable with a certain name (`PSCacheDirectory`? `PSOverrideCacheDirectory`? we need to find a good name). If the variable is present, use it. Otherwise, use the default location.\r\n- Alternatively, give just _PS SDK users_ an API to set this location. This would be enough to mitigate the issue with Azure Functions. Implementing this would be somewhat challenging though, since `Platform.CacheDirectory` is a static variable, and it is initialized and used early. Also, there could be scenarios that require using pwsh.exe anyway.",
  "closed_at": null,
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@AnatoliB PowerShell already will use a path defined in env var `PSModuleAnalysisCachePath` if it exists, otherwise it uses the default path",
      "created_at": "2020-02-24T22:14:33Z",
      "updated_at": "2020-02-24T22:14:33Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT the only place I can find that documentation is here: https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_windows_powershell_5.1?view=powershell-5.1\r\n\r\nI think we might want to put that information in a more accessible place; that's certainly not where I'd be looking for information on PowerShell v6 and up.\n\n<blockquote><div><strong><a href=\"https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_windows_powershell_5.1\">about_Windows_PowerShell_5.1 - PowerShell</a></strong></div></blockquote>",
      "created_at": "2020-02-24T22:22:24Z",
      "updated_at": "2020-02-24T22:22:27Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@vexx32 it should probably be documented here: https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_environment_variables?view=powershell-7#environment-variables-that-store-preferences.  I'll submit a PR.\n\n<blockquote><div><strong><a href=\"https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_environment_variables\">about_Environment_Variables - PowerShell</a></strong></div></blockquote>",
      "created_at": "2020-02-24T22:24:44Z",
      "updated_at": "2020-02-24T22:24:46Z"
    },
    {
      "author": "AnatoliB",
      "author_association": "NONE",
      "body": "@SteveL-MSFT I see, thank you. From looking at the code, though, my impression is that it applies literally to the module analysis cache only. There are other files (e.g. `telemetry.uuid`, `StartupProfileData*`) still created under Platform.CacheDirectory. Can/should we move them, too?",
      "created_at": "2020-02-24T22:25:48Z",
      "updated_at": "2020-02-24T22:25:48Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@AnatoliB yes, that env var is literally just the for the module analysis cache.  We should probably have a setting in powershell.config.json to set that path if defined.  In the case that it's not defined in powershell.config.json and that API call returns an empty string, perhaps we should use the temp path?",
      "created_at": "2020-02-24T22:38:08Z",
      "updated_at": "2020-02-24T22:38:08Z"
    },
    {
      "author": "AnatoliB",
      "author_association": "NONE",
      "body": "@SteveL-MSFT Yes, an optional setting in powershell.config.json and the fallback to temp works for me.",
      "created_at": "2020-02-24T22:41:06Z",
      "updated_at": "2020-02-24T22:41:06Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@vexx32 doc PR here: https://github.com/MicrosoftDocs/PowerShell-Docs/pull/5479",
      "created_at": "2020-02-24T22:48:41Z",
      "updated_at": "2020-02-24T22:48:41Z"
    },
    {
      "author": "bpayette",
      "author_association": "CONTRIBUTOR",
      "body": "Try setting the $ENV:TMP environment variable:\r\n```powershell\r\nPS[1] (11) > $env:tmp = \"c:\\temp\"                                                                                                                             PS[1] (12) > [io.path]::GetTempFileName()\r\nc:\\temp\\tmpB23F.tmp\r\nPS[1] (13) >\r\n```",
      "created_at": "2020-02-25T17:44:36Z",
      "updated_at": "2020-02-25T17:44:36Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Should we move PSModuleAnalysisCachePath to config file too for consistency?",
      "created_at": "2020-02-28T20:00:16Z",
      "updated_at": "2020-02-28T20:00:16Z"
    }
  ],
  "created_at": "2020-02-24T21:52:32Z",
  "labels": [
    "Issue-Enhancement",
    "WG-Engine"
  ],
  "number": 11945,
  "state": "open",
  "title": "Make the location where caching files are stored customizable",
  "updated_at": "2020-02-28T20:00:17Z"
}