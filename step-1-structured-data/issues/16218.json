{
  "_url": "https://github.com/PowerShell/PowerShell/issues/16218",
  "author": "Cirn09",
  "body": "### Prerequisites\r\n\r\n- [X] Write a descriptive title.\r\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- [X] Search the existing issues.\r\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\r\n\r\n### Steps to reproduce\r\n\r\nWhen there is `[]` in the path, the tab auto-completion will automatically escape it to `` `[`] ``, which works fine.\r\nWhen there is a `` ` `` in the path, there is no need to escape, which is also correct.\r\nBut when both `` ` `` and `[]` exist in the path, both `` ` `` and `[]` need to be escaped, but powershell only escapes `[]` to `` `[`] ``, which is obviously incorrect.\r\n\r\n### Expected behavior\r\n\r\n```console\r\nPS D:\\pathtest> cd a<press tab>\r\nPS D:\\pathtest> cd '.\\a`[```]'\r\nPS D:\\pathtest\\a[`]>\r\n```\r\n\r\n\r\n### Actual behavior\r\n\r\n```console\r\nPS D:\\pathtest> cd a<press tab>\r\nPS D:\\pathtest> cd '.\\a`[``]\\'\r\nSet-Location: The specified wildcard character pattern is not valid: a\\[`]\r\n```\r\n\r\n\r\n### Error details\r\n\r\n```console\r\nPS D:\\pathtest> Get-Error\r\n\r\nException             :\r\n    Type        : System.Management.Automation.WildcardPatternException\r\n    ErrorRecord :\r\n        Exception             :\r\n            Type    : System.Management.Automation.ParentContainsErrorRecordException\r\n            Message : The specified wildcard character pattern is not valid: a\\[`]\r\n            HResult : -2146233087\r\n        CategoryInfo          : NotSpecified: (:) [], ParentContainsErrorRecordException\r\n        FullyQualifiedErrorId : RuntimeException\r\n    TargetSite  :\r\n        Name          : Parse\r\n        DeclaringType : System.Management.Automation.WildcardPatternParser, System.Management.Automation, Ver\r\nsion=7.1.4.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\r\n        MemberType    : Method\r\n        Module        : System.Management.Automation.dll\r\n    StackTrace  :\r\n   at System.Management.Automation.WildcardPatternParser.Parse(WildcardPattern pattern, WildcardPatternParser parser)\r\n   at System.Management.Automation.WildcardPatternMatcher.MyWildcardPatternParser.Parse(WildcardPattern pattern, Chara cterNormalizer characterNormalizer)\r\n   at System.Management.Automation.WildcardPatternMatcher..ctor(WildcardPattern wildcardPattern)\r\n   at System.Management.Automation.WildcardPattern.Init()\r\n   at System.Management.Automation.LocationGlobber.IsChildNameAMatch(PSObject childObject, WildcardPattern stringMatch er, Collection`1 includeMatcher, Collection`1 excludeMatcher, String& childName)\r\n   at System.Management.Automation.LocationGlobber.GenerateNewPSPathsWithGlobLeaf(List`1 currentDirs, PSDriveInfo driv e, String leafElement, Boolean isLastLeaf, ContainerCmdletProvider provider, CmdletProviderContext context)\r\n   at System.Management.Automation.LocationGlobber.ExpandMshGlobPath(String path, Boolean allowNonexistingPaths, PSDri veInfo drive, ContainerCmdletProvider provider, CmdletProviderContext context)\r\n   at System.Management.Automation.LocationGlobber.ResolveDriveQualifiedPath(String path, CmdletProviderContext contex t, Boolean allowNonexistingPaths, CmdletProvider& providerInstance)\r\n   at System.Management.Automation.LocationGlobber.GetGlobbedMonadPathsFromMonadPath(String path, Boolean allowNonexis tingPaths, CmdletProviderContext context, CmdletProvider& providerInstance)\r\n   at System.Management.Automation.SessionStateInternal.SetLocation(String path, CmdletProviderContext context, Boolea n literalPath)\r\n   at System.Management.Automation.PathIntrinsics.SetLocation(String path, CmdletProviderContext context, Boolean lite ralPath)\r\n   at Microsoft.PowerShell.Commands.SetLocationCommand.ProcessRecord()\r\n   at System.Management.Automation.CommandProcessor.ProcessRecord()\r\n    Message     : The specified wildcard character pattern is not valid: a\\[`]\r\n    Source      : System.Management.Automation\r\n    HResult     : -2146233087\r\nCategoryInfo          : NotSpecified: (:) [Set-Location], WildcardPatternException\r\nFullyQualifiedErrorId : RuntimeException,Microsoft.PowerShell.Commands.SetLocationCommand\r\nInvocationInfo        :\r\n    MyCommand        : Set-Location\r\n    ScriptLineNumber : 1\r\n    OffsetInLine     : 1\r\n    HistoryId        : 14\r\n    Line             : cd '.\\a`[``]\\'\r\n    PositionMessage  : At line:1 char:1\r\n                       + cd '.\\a`[``]\\'\r\n                       + ~~~~~~~~~~~~~~\r\n    InvocationName   : cd\r\n    CommandOrigin    : Internal\r\nScriptStackTrace      : at <ScriptBlock>, <No file>: line 1\r\n```\r\n\r\n\r\n### Environment data\r\n\r\n```powershell\r\nPS D:\\pathtest> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.4\r\nPSEdition                      Core\r\nGitCommitId                    7.1.4\r\nOS                             Microsoft Windows 10.0.19043\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\n\r\n### Visuals\r\n\r\n![image](https://user-images.githubusercontent.com/25722111/136647378-6ef9d7c7-94a5-4889-8bed-46cdd9047fe4.png)\r\n",
  "closed_at": "2021-10-14T23:18:03Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "WG-Engine discussed this issue today.\r\n\r\nOur opinion is that this issue is also related to the broader scope of work around wildcards and escaping in PowerShell -- see #7999.\r\n\r\nIn this case, the issue appears to mainly be that tab completion can't reliably get a properly-escaped value for the `-Path` parameter when the path contains wildcards. For this reason, `Set-Content` aka `cd` in PowerShell has the `-LiteralPath` parameter which should be used for these cases. Tab completion also appears to behave as expected for this parameter, so you can for example tab-complete `cd -literalpath ...` and you will get a usable path to `cd` to.\r\n\r\nIt doesn't appear feasible to fully correct the tab completion here, and as such we're resolving this as a won't-fix for the time being. It's likely the tab completion will be in a better position to be improved when #7999 has been addressed, as we'll have more confidence about whether paths need to be escaped multiple times or just the one time.\r\n\r\nThanks for the report! \ud83d\udc96 ",
      "created_at": "2021-10-14T23:18:03Z",
      "updated_at": "2021-10-14T23:18:03Z"
    }
  ],
  "created_at": "2021-10-09T06:54:36Z",
  "labels": [
    "Resolution-Won't Fix",
    "WG-Engine"
  ],
  "number": 16218,
  "state": "closed",
  "title": "Tab Autocomplete Escape wrong when there are special characters in the path",
  "updated_at": "2021-10-14T23:18:18Z"
}