{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5396",
  "author": "dantraMSFT",
  "body": "Fix: https://github.com/PowerShell/PowerShell/issues/4939\r\n\r\nThis PR adds a dependency on PowerShell.Core.Instrumentation.dll to System.Management.Automation.csproj.\r\n\r\nThis is a native, resource-only binary containing ETW resource manifest and associated strings.\r\n\r\ninternals.md documents the steps for creating the nuget package and PowerShell.Core.Instrumentation.nuspec contains the template nuget spec.\r\n",
  "closed_at": "2017-11-13T18:40:31Z",
  "comments": [
    {
      "author": "dantraMSFT",
      "author_association": "CONTRIBUTOR",
      "body": "NOTE: Merging is dependent on the PowerShell.Core.Instrumentation nuget package being published. I'll update the thread when it is ready.",
      "created_at": "2017-11-09T21:15:04Z",
      "updated_at": "2017-11-09T21:15:04Z"
    },
    {
      "author": "dantraMSFT",
      "author_association": "CONTRIBUTOR",
      "body": "FYI: I updated the nuspec to refer to beta.10",
      "created_at": "2017-11-11T01:43:50Z",
      "updated_at": "2017-11-11T01:43:50Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "What is next release? Beta.10 or RC.1 ?",
      "created_at": "2017-11-11T09:45:47Z",
      "updated_at": "2017-11-11T09:45:47Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov @dantraMSFT misspoke, next release is RC",
      "created_at": "2017-11-11T17:41:22Z",
      "updated_at": "2017-11-11T17:41:22Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@iSazonov @dantraMSFT was referring to the version of the nuget package [`PowerShell.Core.Instrumentation`](https://powershell.myget.org/feed/powershell-core/package/nuget/PowerShell.Core.Instrumentation), not the next PowerShell release. \r\n\r\nAfter publishing the beta.9 `PowerShell.Core.Instrumentation` we learnt that resource DLL also needs to be signed, and that's why the beta.10 package was published shortly after.",
      "created_at": "2017-11-11T18:08:03Z",
      "updated_at": "2017-11-11T18:11:23Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@dantraMSFT There are spelling errors in the .md file. Please see the failed Linux CI.\r\nFor file name and file path, you can put them in code block to avoid the spelling check. \r\nFor other spelling errors, see https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#spellchecking-documentation about how to add them to the `.spelling` file. When adding a new word to `.spelling`, please make sure the section that contains the new word is sorted ascendingly (each existing section should have been sorted).",
      "created_at": "2017-11-11T18:18:37Z",
      "updated_at": "2017-11-11T18:18:37Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "It's confusing. Shouldn't we be using the same version for all packages? It seems .Net Core do so.",
      "created_at": "2017-11-11T18:38:31Z",
      "updated_at": "2017-11-11T18:38:31Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "I agree. That's something we should consider to do. We currently use inconsistent versions for nuget packages that PowerShell depends on, such as pspr.windows, psrp, libmi, MMI and powershell.core.instrument. It would be good if we can unify them before GA.",
      "created_at": "2017-11-11T18:51:37Z",
      "updated_at": "2017-11-11T18:51:37Z"
    },
    {
      "author": "dantraMSFT",
      "author_association": "CONTRIBUTOR",
      "body": "libmi is not owned by PowerShell, it is part if omi and it's version is tied to it.  Psrp has a build dependency on both libmi and omi so I tied the version to it. It has no dependency on PowerShell and will limely be reved independent of it so I see no reason to version it with PowerShell",
      "created_at": "2017-11-12T00:33:21Z",
      "updated_at": "2017-11-12T20:58:09Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Good point. So maybe just those nuget packages that are owned by PowerShell itself.\r\n\r\n@dantraMSFT  Please fix the spelling errors in Travis-CI build. See  my comment https://github.com/PowerShell/PowerShell/pull/5396#issuecomment-343683984 for more info. We cannot merge the PR with the failed CI.",
      "created_at": "2017-11-12T05:19:39Z",
      "updated_at": "2017-11-12T05:19:39Z"
    },
    {
      "author": "dantraMSFT",
      "author_association": "CONTRIBUTOR",
      "body": "@daxian-dbw, I fixed spelling issues; updated .spelling with new entries (authenticode and PowerShell.Core.Instrumentation)",
      "created_at": "2017-11-12T20:59:29Z",
      "updated_at": "2017-11-12T20:59:29Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@dantraMSFT Just to confirm, the nuget package has been published right?",
      "created_at": "2017-11-13T18:17:48Z",
      "updated_at": "2017-11-13T18:17:48Z"
    },
    {
      "author": "dantraMSFT",
      "author_association": "CONTRIBUTOR",
      "body": "@adityapatwardhan: Yes, the nuget package has been published.",
      "created_at": "2017-11-13T18:36:19Z",
      "updated_at": "2017-11-13T18:36:19Z"
    }
  ],
  "created_at": "2017-11-09T20:21:17Z",
  "number": 5396,
  "state": "closed",
  "title": "Add dependency nuget instructions for PowerShell.Core.Instrumentation resource binary",
  "updated_at": "2017-11-13T20:19:50Z"
}