{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3849",
  "author": "KirkMunro",
  "body": "Steps to reproduce\r\n------------------\r\nI have configured a Shell in a Box web server such that the.ip.address/ps will invoke docker run -e TERM=xterm -it microsoft/powershell, and in the docker session I connect to in the browser where TERM is set to xterm, all commands I type appear at the top of the window instead of inline at the prompt. Also, it can be very difficult to enter commands after you have run some commands. Terminal emulation seems quite broken here.\r\n\r\nExpected behavior\r\n-----------------\r\nI should be able to enter commands at the prompt, and results should appear after those commands, with a new prompt ready for additional commands.\r\n\r\nActual behavior\r\n---------------\r\nWhenever I type in a command, it appears at the top of the window instead of at the prompt.\r\n\r\nEnvironment data\r\n----------------\r\n@SteveL_MSFT has the repro for this issue.\r\n\r\n![image](https://cloud.githubusercontent.com/assets/3515485/26378644/cd75155c-3feb-11e7-8048-9bef201385c7.png)\r\n\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "mirichmo",
      "author_association": "MEMBER",
      "body": "Have you compared the behavior that you see vs the behavior of a local `docker run -i` with interactive PowerShell? I know that there are terminal emulation issues there that are unrelated to Shell in a Box.",
      "created_at": "2017-05-24T00:34:05Z",
      "updated_at": "2017-05-24T00:34:05Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "docker run -it microsoft/powershell on the same system (Ubuntu 14.04) works just fine, without the terminal emulation issues that I get from running the same inside of Shell in a Box. Even if I explicitly set TERM=xterm as part of the docker run command I still get terminal emulation issues that make it pretty much unusable.",
      "created_at": "2017-05-24T00:45:43Z",
      "updated_at": "2017-05-24T00:45:43Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I tried this and there is a significant difference with ShellInABox, particularly compared to Bash",
      "created_at": "2017-05-24T01:28:36Z",
      "updated_at": "2017-05-24T01:28:36Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I don't think this issue is critical for the 6.0.0 release, so deferring it to 6.1.0 unless someone else wants to investigate.  However, I did find a workaround.  Use: `powershell -file -` so that input is read from STDIN and also `rmo psreadline` and you get a decent experience.",
      "created_at": "2017-06-09T23:16:23Z",
      "updated_at": "2017-06-09T23:16:23Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "This issue matters to me and it is something I would really like to see resolved sooner rather than later, but I'm really not sure where to start looking to identify and fix this bug. If anyone has any pointers on where to dig in here, I'll be happy to dig in and see if I can get it resolved in the 6.0.0 timeframe.",
      "created_at": "2017-06-12T12:44:27Z",
      "updated_at": "2017-06-12T12:44:27Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@KirkMunro if you want to investigate this, I would suggest comparing the input loop when PowerShell is reading from stdin using `-file -` and when using the Console api's (look for ReadKey()).  If we can make it through our existing `6.0.0-HighPriority` backlog, I can take a deeper look into this.",
      "created_at": "2017-06-12T17:03:43Z",
      "updated_at": "2017-06-12T17:03:43Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "We had Issue #546 for `Console.CursorTop` and the fix was in CoreFX.",
      "created_at": "2017-06-12T17:34:50Z",
      "updated_at": "2017-06-12T17:34:50Z"
    },
    {
      "author": "nmbradford",
      "author_association": "NONE",
      "body": "Adding my vote - I was hoping to use ShellInABox to provide web access to PowerShell running in a docker instance and have hit the same issues.",
      "created_at": "2017-10-06T11:37:48Z",
      "updated_at": "2017-10-06T11:37:48Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "At your request, tagging you @SteveL-MSFT to make this issue visible again.",
      "created_at": "2018-03-09T17:36:39Z",
      "updated_at": "2018-03-09T17:36:39Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "There's problem a number of issues, but the first one is https://github.com/dotnet/corefx/issues/27990",
      "created_at": "2018-03-12T21:41:44Z",
      "updated_at": "2018-03-12T21:41:44Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Currently appears to be an issue with ShellInABox not returning the vt100 response to the console https://github.com/shellinabox/shellinabox/issues/428",
      "created_at": "2018-03-15T20:49:11Z",
      "updated_at": "2018-03-15T20:49:11Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for digging into this @SteveL-MSFT, I really appreciate it. ",
      "created_at": "2018-03-16T14:45:22Z",
      "updated_at": "2018-03-16T14:45:22Z"
    }
  ],
  "created_at": "2017-05-23T22:13:05Z",
  "number": 3849,
  "state": "open",
  "title": "Running PowerShell core in a Shell in a Box web application results in a broken UX",
  "updated_at": "2018-06-21T21:05:20Z"
}