{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6875",
  "author": "mklement0",
  "body": "`xclip` is a clipboard utility for X11-based desktop environments.\r\n\r\nYou can install it with `sudo apt-get install xclip`.\r\n\r\nI haven't tried to debug the problem; it may be outside PowerShell's control.\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\nRun the following commands on Ubuntu with `xclip` installed.\r\nThe commands copy a string to the clipboard.\r\n\r\n```powershell\r\n'foo1' | xclip -selection clipboard -in\r\n'---'\r\n$null = 'foo2' | xclip -selection clipboard -in\r\n'---'\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```none\r\n---\r\n---\r\n```\r\n\r\nBoth commands should succeed and return virtually instantaneously.\r\n\r\nActual behavior\r\n---------------\r\n\r\n```none\r\n---\r\n```\r\n\r\nThe first command works as expected, but the second one _hangs indefinitely_.\r\n\r\nSeemingly, trying to capture the command's output (even though there is none) in a variable is causing the problem (ditto with `... | Out-Null` or casting to `[void]`).\r\n\r\nWhen the command hangs, the input string has already been copied to the clipboard successfully.\r\n\r\nAlso when you externally copy something to the clipboard while the command hangs, it returns instantly.\r\n\r\nEnvironment data\r\n----------------\r\n\r\n```powershell\r\nPowerShell Core v6.1.0-preview.2 on Ubuntu 16.04.4 LTS\r\n```\r\n",
  "closed_at": "2018-05-15T19:20:43Z",
  "comments": [
    {
      "author": "BrucePay",
      "author_association": "COLLABORATOR",
      "body": "The same thing happens in bash. Run\r\n```\r\necho 'foo1' | xclip -selection clipboard -in | cat\r\n```\r\nand it hangs forever.  `xclip` seems to have a problem when output is redirected.",
      "created_at": "2018-05-15T18:26:17Z",
      "updated_at": "2018-05-15T18:26:17Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks, @BrucePay - that hadn't even occurred to me.\r\n\r\nThe issue arose in the context of Pester, which invariably uses `$null = ...` behind the scenes.\r\n\r\nIn case someone else stumbles upon this:\r\n\r\nThe workaround from PowerShell is to call `xclip` via `sh -c` and to explicitly close stdout with `>&-`:\r\n\r\n```powershell\r\n$null = 'foo1' | sh -c 'xclip -selection clipboard -in >&-'\r\n```",
      "created_at": "2018-05-15T19:20:43Z",
      "updated_at": "2018-05-15T19:20:43Z"
    }
  ],
  "created_at": "2018-05-15T13:55:32Z",
  "number": 6875,
  "state": "closed",
  "title": "xclip on Ubuntu hangs when you try to capture its (nonexistent) output",
  "updated_at": "2018-05-15T19:20:43Z"
}