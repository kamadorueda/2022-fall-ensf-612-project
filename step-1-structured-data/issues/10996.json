{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10996",
  "author": "mklement0",
  "body": "Note: Perhaps there's no solution, in which case the error message should improved to provide a specific hint.\r\n\r\nUWP / AppX-packaged applications (Microsoft Store applications) are launched by URL scheme (e.g., `calculator:` to start the Calculator app) rather than executable file name.\r\n\r\nCombining this style of launching with `-PassThru` in order to obtain a process object identifying the newly launched process fails; ditto with `-Wait` to effect synchronous execution.\r\n\r\n# Steps to reproduce\r\n\r\nRun the following on Windows:\r\n\r\n```powershell\r\n{ Start-Process calculator: -PassThru } | Should -Not -Throw\r\n{ Start-Process calculator: -Wait } | Should -Not -Throw\r\n```\r\n\r\n# Expected behavior\r\n\r\nThe tests should pass.\r\n\r\n# Actual behavior\r\n\r\nThe tests fail (Calculator still launches, but no process object is returned / waiting doesn't occur, and an error is emitted):\r\n\r\n```none\r\nExpected no exception to be thrown, but an exception \r\n\"This command cannot be run completely because the system cannot find all the information required.\"\r\nwas thrown\r\n```\r\n\r\n# Environment data\r\n\r\n\r\n```none\r\nPowerShell Core v7.0.0-preview.5 on Microsoft Windows 10 Pro (64-bit; Version 1903, OS Build: 18362.418)\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "StewartRyanSony",
      "author_association": "NONE",
      "body": "+1. I'm running into this issue as well\r\n\r\n```$PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.2\r\nPSEdition                      Core\r\nGitCommitId                    7.2.2\r\nOS                             Microsoft Windows 10.0.18363\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0```",
      "created_at": "2022-04-01T03:54:09Z",
      "updated_at": "2022-04-01T03:59:18Z"
    },
    {
      "author": "jborean93",
      "author_association": "COLLABORATOR",
      "body": "This came up in the Discord and it looks like pwsh is expected [Process.Start](https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.process.start?view=net-6.0) to return the Process object that was started but .NET is not doing so. This result bubbles up the stack to this message as there is no process object to passthru or wait on.\r\n\r\nYou can verify this behaviour with:\r\n\r\n```powershell\r\n$psi = [System.Diagnostics.ProcessStartInfo]@{\r\n    FileName = '...'\r\n    UseShellExecute = $true\r\n}\r\n$proc = [System.Diagnostics.Process]::Start($psi)\r\n$null -eq $proc  # $true\r\n```\r\n\r\nIn my example `FileName` was a jpeg that was associated with a UWP.\r\n\r\nIt seems like the problem exists in .NET and needs to be fixed there. I haven't dug into that layer to figure out why it's not returning the process object as it's definitely starting it. Most likely it's the changing executable name.",
      "created_at": "2022-05-20T00:25:00Z",
      "updated_at": "2022-05-20T00:25:55Z"
    },
    {
      "author": "jborean93",
      "author_association": "COLLABORATOR",
      "body": "Just a further note, it looks like .NET tries its best to get the process handle https://github.com/dotnet/corefx/blob/b8b81a66738bb10ef0790023598396861d92b2c4/src/System.Diagnostics.Process/src/System/Diagnostics/Process.Win32.cs#L90-L116.\r\n\r\nIn some cases `ShellExecuteEx` might have it set to `NULL` and I think this is one of them. Unless there's a better API or mechanism in Windows/explorer to use it might just be a limitation of these types of apps and PowerShell should just generate a better error message on return if `-PassThru` or `-Wait` is being used.\n\n<blockquote><img src=\"https://opengraph.githubassets.com/c0096852524c3e68a482dd03d7601151934328e75e6f680b7cb8f13519ba65ab/dotnet/corefx\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/dotnet/corefx\">corefx/Process.Win32.cs at b8b81a66738bb10ef0790023598396861d92b2c4 \u00b7 dotnet/corefx</a></strong></div><div>This repo is used for servicing PR&#39;s for .NET Core 2.1 and 3.1. Please visit us at https://github.com/dotnet/runtime  - corefx/Process.Win32.cs at b8b81a66738bb10ef0790023598396861d92b2c4 \u00b7 dot...</div></blockquote>",
      "created_at": "2022-05-20T01:31:15Z",
      "updated_at": "2022-05-20T01:31:18Z"
    }
  ],
  "created_at": "2019-11-06T04:15:41Z",
  "number": 10996,
  "state": "open",
  "title": "Start-Process with AppX application URLs cannot be combined with -PassThru or -Wait",
  "updated_at": "2022-05-20T01:31:18Z"
}