{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15828",
  "author": "o-o00o-o",
  "body": "### Prerequisites\n\n- [X] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\n\n### Steps to reproduce\n\n In Powershell 5.1 (my user has en-GB culture set)\r\n\r\nIf I do this\r\n\r\n```\r\n@([PSCustomObject]@{Name=\"test1\";Date=(Get-date)},[PSCustomObject]@{Name=\"test2\";Date=(Get-date)})| ConvertTo-Csv -NoTypeInformation\r\n\"Name\",\"Date\"\r\n\"test1\",\"26/07/2021 12:22:27\"\r\n\"test2\",\"26/07/2021 12:22:27\"\r\n```\r\n\r\nHowever to correct the datetime representation I could do this\r\n\r\n``` powershell\r\n$(Get-Culture).DateTimeFormat.ShortDatePattern = 'yyyy-MM-dd' ## ensure that csv exports dates in universal format\r\n@([PSCustomObject]@{Name=\"test1\";Date=(Get-date)},[PSCustomObject]@{Name=\"test2\";Date=(Get-date)})| ConvertTo-Csv -NoTypeInformation\r\n\"Name\",\"Date\"\r\n\"test1\",\"2021-07-26 12:21:04\"\r\n\"test2\",\"2021-07-26 12:21:04\"\r\n```\r\n\r\nHowever in Powershell 7 I get this error when trying to change the ShortDatePattern\r\n\r\nSetValueInvocationException: Exception setting \"ShortDatePattern\": \"Instance is read-only.\"\n\n### Expected behavior\n\n```console\nI should be able to (somehow) modify the date string format used by Export-Csv or ConvertTo-Csv\r\n\r\nSome discussion around this area in https://github.com/PowerShell/PowerShell/issues/3833\r\n\r\nAlso https://stackoverflow.com/questions/14909954/set-date-format-to-be-used-in-powershell-export-csv\n```\n\n\n### Actual behavior\n\n```console\nSetValueInvocationException: Exception setting \"ShortDatePattern\": \"Instance is read-only.\"\n```\n\n\n### Error details\n\n```console\nException             :\r\n    Type           : System.Management.Automation.SetValueInvocationException\r\n    ErrorRecord    :\r\n        Exception             :\r\n            Type    : System.Management.Automation.ParentContainsErrorRecordException\r\n            Message : Exception setting \"ShortDatePattern\": \"Instance is read-only.\"\r\n            HResult : -2146233087\r\n        CategoryInfo          : NotSpecified: (:) [], ParentContainsErrorRecordException\r\n        FullyQualifiedErrorId : ExceptionWhenSetting\r\n        InvocationInfo        :\r\n            ScriptLineNumber : 1\r\n            OffsetInLine     : 3\r\n            HistoryId        : -1\r\n            Line             : $(Get-Culture).DateTimeFormat.ShortDatePattern = 'yyyy-MM-dd' ## ensure that csv\r\nexports dates in universal format\r\n            PositionMessage  : At line:1 char:3\r\n                               + $(Get-Culture).DateTimeFormat.ShortDatePattern = 'yyyy-MM-dd' ## ensu \u2026\r\n                               +   ~~~~~~~~~~~\r\n            CommandOrigin    : Internal\r\n        ScriptStackTrace      : at <ScriptBlock>, <No file>: line 1\r\n    TargetSite     :\r\n        Name          : ConvertToMethodInvocationException\r\n        DeclaringType : System.Management.Automation.ExceptionHandlingOps, System.Management.Automation,\r\nVersion=7.1.3.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\r\n        MemberType    : Method\r\n        Module        : System.Management.Automation.dll\r\n    StackTrace     :\r\n   at System.Management.Automation.ExceptionHandlingOps.ConvertToMethodInvocationException(Exception exception,\r\nType typeToThrow, String methodName, Int32 numArgs, MemberInfo memberInfo)\r\n   at CallSite.Target(Closure , CallSite , Object , String )\r\n   at System.Dynamic.UpdateDelegates.UpdateAndExecute2[T0,T1,TRet](CallSite site, T0 arg0, T1 arg1)\r\n   at System.Management.Automation.Interpreter.DynamicInstruction`3.Run(InterpretedFrame frame)\r\n   at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.Run(InterpretedFrame frame)\r\n    Message        : Exception setting \"ShortDatePattern\": \"Instance is read-only.\"\r\n    Data           : System.Collections.ListDictionaryInternal\r\n    InnerException :\r\n        Type       : System.InvalidOperationException\r\n        TargetSite :\r\n            Name          : set_ShortDatePattern\r\n            DeclaringType : System.Globalization.DateTimeFormatInfo\r\n            MemberType    : Method\r\n            Module        : System.Private.CoreLib.dll\r\n        StackTrace :\r\n   at System.Globalization.DateTimeFormatInfo.set_ShortDatePattern(String value)\r\n   at CallSite.Target(Closure , CallSite , Object , String )\r\n        Message    : Instance is read-only.\r\n        Source     : System.Private.CoreLib\r\n        HResult    : -2146233079\r\n    Source         : System.Management.Automation\r\n    HResult        : -2146233087\r\nCategoryInfo          : NotSpecified: (:) [], SetValueInvocationException\r\nFullyQualifiedErrorId : ExceptionWhenSetting\r\nInvocationInfo        :\r\n    ScriptLineNumber : 1\r\n    OffsetInLine     : 3\r\n    HistoryId        : -1\r\n    Line             : $(Get-Culture).DateTimeFormat.ShortDatePattern = 'yyyy-MM-dd' ## ensure that csv exports\r\ndates in universal format\r\n    PositionMessage  : At line:1 char:3\r\n                       + $(Get-Culture).DateTimeFormat.ShortDatePattern = 'yyyy-MM-dd' ## ensu \u2026\r\n                       +   ~~~~~~~~~~~\r\n    CommandOrigin    : Internal\r\nScriptStackTrace      : at <ScriptBlock>, <No file>: line 1\n```\n\n\n### Environment data\n\n```powershell\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.3\r\nPSEdition                      Core\r\nGitCommitId                    7.1.3\r\nOS                             Microsoft Windows 10.0.19041\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\n```\n\n\n### Visuals\n\nHopefully the above is clear",
  "closed_at": "2021-07-29T00:00:33Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "The property is exposed as read-only by .Net. You can use `Get-Date -Format \"yyyy-MM-dd\"` to get a format you need.",
      "created_at": "2021-07-26T11:43:42Z",
      "updated_at": "2021-07-26T11:43:42Z"
    },
    {
      "author": "o-o00o-o",
      "author_association": "NONE",
      "body": "Hi thanks for the response. \r\n\r\nThe properties in Powershell are all marked as get/set?\r\n```\r\nGet-UICulture | gm\r\n....\r\nDateTimeFormat                 Property   System.Globalization.DateTimeFormatInfo DateTimeFormat {get;set;}\r\n                                                                                                      *****\r\n```\r\nAlso the suggestion doesn't deal with the use case that I raised. ```Get-Date``` doesn't apply to ConvertTo-Csv/Export-Csv so not sure if I'm missing something but doesn't seem relevant?\r\n\r\nThe only way that I can figure out how to do it is to apply a custom Select-Object Property Parameter and loop through applying an appropriate transform on each field. Pretty painful to code and inefficient to run rather than just being able to apply culture format string as per PS5.1\r\n\r\nFeels like there should be a simpler way in Powershell that gets back to a one line solution as per Powershell 5.1. Is this not considered a bug if not a known documented departure from PS 5.1? Should I raise as a feature request if not considered as a bug?\r\n\r\n",
      "created_at": "2021-07-26T12:48:31Z",
      "updated_at": "2021-07-26T12:48:31Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "You assign ShortDatePattern which can be readonly. PowerShell follows .Net.",
      "created_at": "2021-07-26T12:59:44Z",
      "updated_at": "2021-07-26T12:59:44Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "> The property is exposed as read-only by .Net.\r\n\r\nJust to clarify, the property on the type is settable, but the CultureInfo object we get from .NET is readonly:\r\n\r\n```console\r\n> [cultureinfo]::CurrentCulture.IsReadOnly\r\nTrue\r\n```\r\n\r\n> Is this not considered a bug if not a known documented departure from PS 5.1?\r\n\r\n`Get-Culture` is just a thin wrapper around the CultureInfo .NET API. .NET seem to have made a change here and there's not much we can do about it.\r\n\r\nI have opened https://github.com/dotnet/runtime/issues/56405 to discuss this or at least get it documented.\r\n\r\nThe workaround is:\r\n\r\n```powershell\r\n$culture = [cultureinfo]::new('en-GB')\r\n$culture.DateTimeFormat.ShortDatePattern = 'yyyy-MM-dd'\r\nSet-Culture $culture\r\n```",
      "created_at": "2021-07-27T17:21:00Z",
      "updated_at": "2021-07-27T17:21:00Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "So from the discussion in the .NET repo, this actually seems to be a bug in Windows PowerShell; the default CurrentCulture property is supposed to be a readonly instance in all .NET versions.\r\n\r\n> Ok I've looked into this further (I originally took the original user's report at face value) and I have a rather mysterious result.\r\n> \r\n> Running this directly as a .NET program I get the expected error:\r\n> \r\n> ![image](https://user-images.githubusercontent.com/7009879/127217228-58b6aede-a075-4dd1-899f-70fae4cc9329.png)\r\n>\r\n> But running the same thing from Windows PowerShell \"works\":\r\n> \r\n> ![image](https://user-images.githubusercontent.com/7009879/127217487-382484d6-e074-4207-8bd1-4d1d8394a057.png)\r\n>\r\n> And now it throws again in PS 7...\r\n>\r\n> So this is clearly a PowerShell issue of some kind, but I have no idea how...",
      "created_at": "2021-07-27T19:44:47Z",
      "updated_at": "2021-07-27T19:44:47Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2021-07-29T00:00:32Z",
      "updated_at": "2021-07-29T00:00:32Z"
    }
  ],
  "created_at": "2021-07-26T11:33:36Z",
  "number": 15828,
  "state": "closed",
  "title": "Cannot change the exported date format in Export-Csv (as I could in PS5.1)",
  "updated_at": "2021-07-29T00:00:33Z"
}