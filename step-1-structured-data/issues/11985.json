{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11985",
  "author": "p0W3RH311",
  "body": "range operator in powershell is not very powerfull like other languages it great to add to this range operator some feature like\r\n```\r\n\r\n$a = 1..10\r\n$a[::] # all element\r\n$a[1..^0] # 2 to end \r\n$a[^1] # last element 10\r\n$a[^3] # element 8\r\n$a[^2..0] # element 9 to 1\r\n```",
  "closed_at": "2020-03-24T05:00:12Z",
  "comments": [
    {
      "author": "scriptingstudio",
      "author_association": "NONE",
      "body": "It is already here\r\n```\r\n$a # all element\r\n$a[-1] # last element 10\r\n$a[-3] # element 8\r\n```",
      "created_at": "2020-03-01T14:17:58Z",
      "updated_at": "2020-03-02T05:04:46Z"
    },
    {
      "author": "doctordns",
      "author_association": "COLLABORATOR",
      "body": "Adding to what @scriptingstudio said we have some of the sub-range operators already, like this:\r\n\r\n```powershell\r\nPS C:\\foo> $a = 1,2,43,4,5,6,7,87,389\r\nPS C:\\foo> $a[1..2]\r\n2\r\n43\r\nPS C:\\foo> $a[-2..-1]\r\n87\r\n389\r\n\r\nSeems to me we have sufficient range operators. ",
      "created_at": "2020-03-02T11:41:39Z",
      "updated_at": "2020-03-02T11:41:39Z"
    },
    {
      "author": "scriptingstudio",
      "author_association": "NONE",
      "body": "@doctordns I limited my example to 3 cases because array range calculation is not perfect: \r\n```\r\n$a = 1..10\r\n$a[0..-4]\r\n1\r\n10\r\n9\r\n8\r\n7\r\n```\r\nIt makes sence to improve range calculation, does not it?",
      "created_at": "2020-03-02T12:14:25Z",
      "updated_at": "2020-03-02T12:14:25Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Current behavior is [documented](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_arrays?view=powershell-7) but looks suddenly.\r\n",
      "created_at": "2020-03-02T17:46:16Z",
      "updated_at": "2020-03-02T18:19:50Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "It's simply that the range operator functions _everywhere_, not just with respect to an array. Having `1..-4` work the same way regardless of where it's used means you know what you're going to get, and you can inspect what's going on when you get unexpected results by simply displaying the result of `1..-4` -- if it changed behaviour when used in an array or other indexer, it would be impossible to reliably inspect or diagnose an issue with any accuracy. \r\n\r\nC#8 introduced a new operator `^` which is specifically used to create a separate `Index` and `Range` object types that is designed to work relative to collections. We could borrow that part of the approach and have a syntax like this: `$a[0..^4]` which would _always_ go until the 4th-from-the-end index in the array, whatever numbered index that might be.\r\n\r\nWhether we need to introduce a new object type for this, or just reuse the new `Index` and `Range` types now available in .NET Core, this would be a valuable addition to the language and I believe has been discussed before... in #7940 ",
      "created_at": "2020-03-02T17:57:47Z",
      "updated_at": "2020-03-02T17:57:47Z"
    },
    {
      "author": "p0W3RH311",
      "author_association": "NONE",
      "body": "also one other idea is add step\r\n\r\n`\"a\"..\"z\"..2`\r\n\r\n`1..100..5`\r\n\r\nand padding with zero\r\n\r\n`001..200`\r\n\r\ndisplay 001,002...etc instead 1,2,...",
      "created_at": "2020-03-03T20:13:16Z",
      "updated_at": "2020-03-03T20:13:16Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as duplicate and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2020-03-24T05:00:10Z",
      "updated_at": "2020-03-24T05:00:10Z"
    }
  ],
  "created_at": "2020-03-01T13:22:23Z",
  "labels": [
    "Resolution-Duplicate",
    "Issue-Enhancement",
    "WG-Language"
  ],
  "number": 11985,
  "state": "closed",
  "title": "range operator ",
  "updated_at": "2020-03-24T05:00:12Z"
}