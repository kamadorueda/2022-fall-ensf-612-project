{
  "_url": "https://github.com/PowerShell/PowerShell/issues/17904",
  "author": "SteveL-MSFT",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nPrior to this change, after writing the error message if your prompt doesn't set any colors, the error color (default red) would continue to write to output.\r\n\r\nLooked at changing it so that the color resets at writeline() time but that didn't work correctly across multiple lines as they should all be red, but because lines expect color to be retained, they would show incorrectly.\r\n\r\nUltimately, decided that the error message itself should reset the color (which also means that all output needs to reset at the end rather than expecting PS or ConsoleHost to fix it).\r\n\r\nManually tested with ConciseView and NormalView using:\r\n\r\n```powershell\r\nwrite-error 1;\"hello\"\r\n```\r\n\r\nWhere the error should be in red even if multiple lines, but `hello` should be default foreground/background color.\r\n\r\n## PR Context\r\n\r\nFix https://github.com/PowerShell/PowerShell/issues/17885\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/main/reference/7.3/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [ ] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and opened an issue in the relevant tool repository. This may include:\r\n        - [ ] Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode\r\n        (which runs in a different PS Host).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n",
  "closed_at": "2022-08-29T19:28:02Z",
  "comments": [
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "Open PRs should not be assigned to milestone, so they are not assigned to the wrong milestone after they are merged.  For backport consideration, use a `backport` label. ",
      "created_at": "2022-08-15T20:55:28Z",
      "updated_at": "2022-08-15T20:55:28Z"
    },
    {
      "author": "pull-request-quantifier[bot]",
      "author_association": "NONE",
      "body": "### ![](https://img.shields.io/static/v1?label=Quantified&message=Extra%20Small&color=green)\r\n\r\nThis PR has `6` quantified lines of changes. In general, a change size of upto `200` lines is ideal for the best PR experience!\r\n\r\n------\r\n\r\n<details >\r\n    <summary display=\"inline\"> <strong>Quantification details</strong></summary>\r\n    <p />\r\n\r\n```\r\nLabel      : Extra Small\r\nSize       : +4 -2\r\nPercentile : 2.4%\r\n\r\nTotal files changed: 1\r\n\r\nChange summary by file extension:\r\n.cs : +4 -2\r\n```\r\n> Change counts above are quantified counts, based on the [PullRequestQuantifier customizations](https://github.com/microsoft/PullRequestQuantifier/blob/main/docs/prquantifier-yaml.md).\r\n    \r\n</details>\r\n\r\n\r\n<details>\r\n    <summary display=\"inline\"> <strong>Why proper sizing of changes matters</strong> </summary>\r\n    <p/>\r\n    <p/>\r\n\r\nOptimal pull request sizes drive a better predictable PR flow as they strike a\r\nbalance between between PR complexity and PR review overhead. PRs within the\r\noptimal size (typical small, or medium sized PRs) mean:\r\n\r\n- Fast and predictable releases to production:\r\n  - Optimal size changes are more likely to be reviewed faster with fewer\r\niterations.\r\n  - Similarity in low PR complexity drives similar review times.\r\n- Review quality is likely higher as complexity is lower:\r\n  - Bugs are more likely to be detected.\r\n  - Code inconsistencies are more likely to be detected.\r\n- Knowledge sharing is improved within the participants:\r\n  - Small portions can be assimilated better.\r\n- Better engineering practices are exercised:\r\n  - Solving big problems by dividing them in well contained, smaller problems.\r\n  - Exercising separation of concerns within the code changes.\r\n\r\n#### What can I do to optimize my changes\r\n\r\n- Use the PullRequestQuantifier to quantify your PR accurately\r\n  - Create a context profile for your repo using the [context generator](https://github.com/microsoft/PullRequestQuantifier/releases)\r\n  - Exclude files that are not necessary to be reviewed or do not increase the review complexity. Example: Autogenerated code, docs, project IDE setting files, binaries, etc. Check out the `Excluded` section from your `prquantifier.yaml` context profile. \r\n  - Understand your typical change complexity, drive towards the desired complexity by adjusting the label mapping in your `prquantifier.yaml` context profile.\r\n  - Only use the labels that matter to you, [see context specification](./docs/prquantifier-yaml.md) to customize your `prquantifier.yaml` context profile.\r\n- Change your engineering behaviors\r\n  - For PRs that fall outside of the desired spectrum, review the details and check if:\r\n    - Your PR could be split in smaller, self-contained PRs instead\r\n    - Your PR only solves one particular issue. (For example, don't refactor and code new features in the same PR).\r\n\r\n#### How to interpret the change counts in git diff output\r\n\r\n- One line was added: `+1 -0`\r\n- One line was deleted: `+0 -1`\r\n- One line was modified: `+1 -1` (git diff doesn't know about modified, it will\r\ninterpret that line like one addition plus one deletion)\r\n- Change percentiles: Change characteristics (addition, deletion, modification)\r\nof this PR in relation to all other PRs within the repository.\r\n\r\n</details>\r\n\r\n<p />\r\n\r\n------\r\n\r\nWas this comment helpful? <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoiU3RldmVMLU1TRlQiLCJSZXBvc2l0b3J5TGluayI6Imh0dHBzOi8vZ2l0aHViLmNvbS9Qb3dlclNoZWxsL1Bvd2VyU2hlbGwiLCJQdWxsUmVxdWVzdExpbmsiOiJodHRwczovL2dpdGh1Yi5jb20vUG93ZXJTaGVsbC9Qb3dlclNoZWxsL3B1bGwvMTc5MDQiLCJFdmVudFR5cGUiOiJUaHVtYnNVcCJ9&amp;anonymous=True\" target=\"_blank\" title=\"Thumbs up\"><strong>:thumbsup:</strong></a> <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoiU3RldmVMLU1TRlQiLCJSZXBvc2l0b3J5TGluayI6Imh0dHBzOi8vZ2l0aHViLmNvbS9Qb3dlclNoZWxsL1Bvd2VyU2hlbGwiLCJQdWxsUmVxdWVzdExpbmsiOiJodHRwczovL2dpdGh1Yi5jb20vUG93ZXJTaGVsbC9Qb3dlclNoZWxsL3B1bGwvMTc5MDQiLCJFdmVudFR5cGUiOiJOZXV0cmFsIn0=&amp;anonymous=True\" target=\"_blank\" title=\"Neutral\"><strong>&nbsp;:ok_hand:</strong></a> <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoiU3RldmVMLU1TRlQiLCJSZXBvc2l0b3J5TGluayI6Imh0dHBzOi8vZ2l0aHViLmNvbS9Qb3dlclNoZWxsL1Bvd2VyU2hlbGwiLCJQdWxsUmVxdWVzdExpbmsiOiJodHRwczovL2dpdGh1Yi5jb20vUG93ZXJTaGVsbC9Qb3dlclNoZWxsL3B1bGwvMTc5MDQiLCJFdmVudFR5cGUiOiJUaHVtYnNEb3duIn0=&amp;anonymous=True\" target=\"_blank\" title=\"Thumbs down\"><strong>&nbsp;:thumbsdown:</strong></a> (<a href=\"MAILTO:prquantifier@microsoft.com\" title=\"Mail to prquantifier@microsoft.com\">Email</a>)\r\n[Customize PullRequestQuantifier](https://github.com/PowerShell/PowerShell/blob/master/.github/prquantifier.yaml) for this repository.\r\n\r\n",
      "created_at": "2022-08-18T16:56:45Z",
      "updated_at": "2022-08-18T16:56:45Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "I cherry-picked the changes to 7.2.6 branch trying to make sure the changes work on 7.2.next. It turns out this works fine on Windows but not so well on Linux:\r\n\r\n![screenshot](https://user-images.githubusercontent.com/127450/185465439-fc27f2e4-65c9-4aef-80e3-58e733536827.gif)\r\n\r\nAs shown in the GIF, the first prompt after `write-error` is in default color, but the following ones are in red color. So, it looks like writing out `Reset` VT sequence doesn't correctly reset the color change done by `Console.ForegroundColor = xxx`.\r\n\r\nI also tried the 7.3 private build, and it works fine on both Windows and Linux. There are big changes in .NET 7 in the Console area, so I guess that was fixed in .NET 7. However, we need it to work well on 7.2.6 (.NET 6) if we want to backport this change.",
      "created_at": "2022-08-18T18:18:30Z",
      "updated_at": "2022-08-18T18:18:30Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Given what I found above, I think we should not rely on setting `Console.ForegroundColor/BackgroundColor` for `NormalView/CategoryView`. Instead, as long as VT is supported, we can translate `ConsoleColor` to VT sequences using `[System.Management.Automation.VTUtility]::GetEscapeSequence` and explicitly use VT sequences to set the color attribute, so that `Reset` at the end will reliably work on 7.2.6.\r\n\r\nOne caveat is that `[VTUtility]::GetEscapeSequence` seems to only convert foreground color, not background color, but that can be added pretty easily, I think.",
      "created_at": "2022-08-18T18:24:33Z",
      "updated_at": "2022-08-18T18:25:25Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Actually, I have question: why do we have to use colors defined in `$Host.PrivateData` for the `NormalView` error rendering?\r\nIn my opinion, `$ErrorView` just defines how to render `ErrorRecord`, but not necessarily coupled with where the color should come from.\r\n\r\nAfter introducing `$PSStyle`, we say this [in the doc](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_ansi_terminals#:~:text=FromRgb(0xf5f5dc)-,%24PSStyle.,It%20replaces%20%24Host.):\r\n> It replaces `$Host.PrivateData` as the way to manage colors for formatting rendering.\r\n\r\nSo, it feels to me we should just use `$PSStyle.Formatting.Error` regardless of `$ErrorView` as long as VT is supported.",
      "created_at": "2022-08-18T19:29:16Z",
      "updated_at": "2022-08-18T19:29:16Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@daxian-dbw the feedback was that it broke existing users of NormalView who set the color in their $profile.  Perhaps we should have a WG review.\r\n\r\nThere may have been some other changes that would need to be cherry-picked to 7.2 to make it work completely.",
      "created_at": "2022-08-18T19:55:54Z",
      "updated_at": "2022-08-18T19:56:47Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "> the feedback was that it broke existing users of NormalView who set the color in their $profile. Perhaps we should have a WG review.\r\n\r\nIt's already broken for other formatting color settings defined in `$host.PrivateData`, unless we want to make them all working.",
      "created_at": "2022-08-18T21:01:45Z",
      "updated_at": "2022-08-18T21:02:04Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Waiting on the WG-Interactive-Console group to decide what to do with PrivateData.",
      "created_at": "2022-08-22T16:18:23Z",
      "updated_at": "2022-08-22T16:18:23Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "The Interactive WG discussed `$Host.PrivateData` vs. `$PSStyle.Formatting`, and agreed that all formatting color settings should be in the same location, and `ErrorRecord` formatting should use `$PSStyle` instead of $host. See https://github.com/PowerShell/PowerShell/issues/17886#issuecomment-1229015174 for details.",
      "created_at": "2022-08-26T23:09:47Z",
      "updated_at": "2022-08-26T23:09:47Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "This PR is superseded by #17987",
      "created_at": "2022-08-29T19:27:56Z",
      "updated_at": "2022-08-29T19:27:56Z"
    }
  ],
  "created_at": "2022-08-15T20:54:45Z",
  "number": 17904,
  "state": "closed",
  "title": "Ensure error message resets the color",
  "updated_at": "2022-08-30T20:12:26Z"
}