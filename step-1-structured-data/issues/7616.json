{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7616",
  "author": "mi-hol",
  "body": "I like the dashboard https://github.com/PowerShell/PowerShell#community-dashboard\r\nbut several pages seem to require an update, as data refreshes stoppend some time back.\r\nSpecifically page 5 should show stats from 6.1 development cycle.",
  "closed_at": "2018-08-30T21:06:55Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "/cc @SteveL-MSFT ",
      "created_at": "2018-08-23T08:00:08Z",
      "updated_at": "2018-08-23T08:00:08Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@mi-hol  I'll update the dashboard to reflect current development.  I think I'll just leave it as 6.x so I don't have to keep updating it for each new release.\r\n\r\n@chuanjiao10 we only get what is returned by [System.Runtime.InteropServices.RuntimeInformation]::OSDescription which gives the kernel information and not the distro information.  If someone can point me to a mapping between what `uname` returns and the distro/version I can see about reporting that.  I can add a pie chart for the pwsh version.",
      "created_at": "2018-08-30T17:18:28Z",
      "updated_at": "2018-08-30T17:18:28Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I've updated section 5 to not be focused on 6.0.0 release.  Instead, it should automatically show trend for Top 7 milestones (the 6.0.0 should eventually drop off).  Section 7 has new pie chart showing PS version usage.  I'll see about mapping the kernel info to distros, but it probably won't be perfect.",
      "created_at": "2018-08-30T17:51:11Z",
      "updated_at": "2018-08-30T17:51:11Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Using a simple pattern if OSDescription contains:\r\n  - Darwin == macOS\r\n  - Windows == Windows\r\n  - freebsd == FreeBSD\r\n  - amzn == Amazon Linux\r\n  - el7 = RHEL7\r\n  - debian == Debian\r\n  - ubuntu == Ubuntu\r\n  - arch == Arch Linux\r\n  - v7+ == Raspbian\r\n  - fc == Fedora\r\n  - ph2-esx == PhotonOS\r\n  - coreos == CoreOS\r\n  - linuxkit == Linux Kit\r\n  - lcow == LCOW\r\n  - linode == LiNode\r\n  - everything else == OtherLinux\r\n",
      "created_at": "2018-08-30T21:06:55Z",
      "updated_at": "2018-08-30T21:06:55Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT Great!\r\nIt would be interesting to see how the popularity of the product grows from month to month, from year to year.\r\nAlso it is not so useful to see all the preview versions on the dashboard. Maybe group by 6.0. * - preview *, 6.1. * - preview * and similarly for release versions?\r\n",
      "created_at": "2018-08-31T03:35:52Z",
      "updated_at": "2018-08-31T03:35:52Z"
    },
    {
      "author": "mi-hol",
      "author_association": "NONE",
      "body": "@SteveL-MSFT thanks for taking the time!\r\n\r\nWould you consider @iSazonov 's proposal above? It would greatly improve usability :)\r\n\r\nThere are few other topics to improve usability like the used number scaling on Page 8 'Windows'  where '0M(illion) is showing for most entries. That scaling issue might be caused by a limitation in PowerBI. Do you happen to know?",
      "created_at": "2018-08-31T09:26:47Z",
      "updated_at": "2018-08-31T09:26:47Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov it's in our backlog to archive the data so we can see longer trends.  By default, I believe AppInsights only retains 3 months worth of data.  I'll probably work on this after 6.1 GA.  Grouping is something I can look into.\r\n\r\n@mi-hol I'm definitely not a PowerBI expert.  In the GUI, I have limited options to choose representation of th text in the chart.  Unfortunately, PowerBI (currently) seems to have simple logic in that if any data point is > million, it sets the units to millions.  So any data point < 1M shows as 0M (although not literally 0).  I'll just leave this part as-is as the other option is to just show the percentage, but as the numbers grow, having the units will be more interesting.",
      "created_at": "2018-08-31T17:49:32Z",
      "updated_at": "2018-08-31T17:49:32Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov Ok, so I'm using a regex and basically if the version has a hyphen (like 6.0.0-beta or 6.1.0-preview1), I simply call it \"-preview\".  This leaves just 6.0, 6.0-preview, and 6.1-preview.  It looks like a few people have custom builds where they don't have the label so they show up as just 6.1 in the monthly view, but the numbers are so small it's just noise.  This doesn't give a view of the specific version people are on, but does give a view of whether they've moved to 6.1 and from preview to stable channels (which is more relevant once 6.1 GAs since 6.0 didn't have this well defined).  cc @joeyaiello ",
      "created_at": "2018-08-31T18:21:09Z",
      "updated_at": "2018-08-31T18:21:09Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> people have custom builds \r\n\r\nIt could be separate report/page from official builds.",
      "created_at": "2018-08-31T18:46:28Z",
      "updated_at": "2018-08-31T18:46:28Z"
    },
    {
      "author": "mi-hol",
      "author_association": "NONE",
      "body": "@SteveL-MSFT regarding 'PowerBI expert' neither am I but perhaps you'd want to reach out to your MSFT fellow Amanda Cofsky, PM for PowerBI :) \r\n",
      "created_at": "2018-08-31T19:32:42Z",
      "updated_at": "2018-09-02T08:07:03Z"
    }
  ],
  "created_at": "2018-08-23T07:33:46Z",
  "labels": [
    "Area-Maintainers-Documentation",
    "Resolution-Fixed"
  ],
  "number": 7616,
  "state": "closed",
  "title": "Update to community dashboard to show 6.1 development cycle?",
  "updated_at": "2018-09-02T08:07:03Z"
}