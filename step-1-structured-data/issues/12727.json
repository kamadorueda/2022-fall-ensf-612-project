{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12727",
  "author": "SeeminglyScience",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 and PowerShell 7+ issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6).\r\n\r\n-->\r\n\r\n# Steps to reproduce\r\n\r\nPaste into console (Error record arguments don't matter):\r\n\r\n```powershell\r\n[CmdletBinding()] param() end {\r\n$PSCmdlet.WriteError([Management.Automation.ErrorRecord]::new([Exception]::new(), '', 0, '')) }\r\n```\r\n\r\n# Expected behavior\r\n\r\n```none\r\nException of type 'System.Exception' was thrown.\r\n```\r\n\r\n# Actual behavior\r\n\r\nNothing is shown.  When calling `$Error[0]`, this is shown:\r\n\r\n```none\r\nGet-Command:\r\nLine |\r\n 201 |  \u2026 if ($myinv.MyCommand -and (Get-Command -Name $myinv.MyCommand -ErrorA \u2026\r\n     |                                                 ~~~~~~~~~~~~~~~~\r\n     | Cannot validate argument on parameter 'Name'. The argument is null, empty, or an element of the argument collection contains a null value. Supply a collection that does not contain any null values and then try the command again.\r\n```\r\n\r\nStringification probably shouldn't be relied on here, and `$myinv.MyCommand.Name` should be used instead.\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.0-preview.2\r\nPSEdition                      Core\r\nGitCommitId                    7.1.0-preview.2\r\nOS                             Microsoft Windows 10.0.18362\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2020-09-14T18:07:38Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "It is in ConciseView.",
      "created_at": "2020-05-19T17:23:14Z",
      "updated_at": "2020-05-19T17:23:14Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "At least in terms of symptom the following is similar, but also occurs in scripts:\r\n\r\n```powershell\r\n# Should report the statement-terminating error that occurs during parameter\r\n# binding, but doesn't:\r\n& { [CmdletBinding()]param() } -Unsupported \r\n```",
      "created_at": "2020-05-21T12:20:54Z",
      "updated_at": "2020-05-21T12:20:54Z"
    },
    {
      "author": "Jaykul",
      "author_association": "CONTRIBUTOR",
      "body": "Hiding errors is a big deal. I wasted at least an hour figuring this same thing out today. \r\nCan we either get this fixed ... or revert to NormalView by default for the next release?",
      "created_at": "2020-09-11T20:13:42Z",
      "updated_at": "2020-09-11T20:13:42Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "It's a pretty simple fix, this:\r\n\r\n```powershell\r\n$myinv.MyCommand -and (Get-Command -Name $myinv.MyCommand\r\n```\r\n\r\nneeds to be\r\n\r\n```powershell\r\n$myinv.MyCommand.Name -and (Get-Command -Name $myinv.MyCommand.Name\r\n````\r\n\r\nin the format scriptblock.",
      "created_at": "2020-09-11T20:17:36Z",
      "updated_at": "2020-09-11T20:17:36Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Wouldn't that still be $null and still throw from Get-Command? \ud83e\udd14 ",
      "created_at": "2020-09-11T20:51:44Z",
      "updated_at": "2020-09-11T20:51:44Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "It would if it got there.  It'll short circuit before running `Get-Command` if the above is done.  The problem is that `MyCommand` isn't `$null`, just it's stringification.",
      "created_at": "2020-09-11T21:42:47Z",
      "updated_at": "2020-09-11T21:42:47Z"
    }
  ],
  "created_at": "2020-05-19T17:04:17Z",
  "number": 12727,
  "state": "closed",
  "title": "Error hidden when anonymous command uses `WriteError`",
  "updated_at": "2020-09-14T18:15:20Z"
}