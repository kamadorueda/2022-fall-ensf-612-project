{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9909",
  "author": "PowershellNinja",
  "body": "\r\n# Steps to reproduce\r\n\r\n```powershell\r\nGet-ChildItem -Path \\\\?\\c:\\\r\n```\r\n\r\n# Expected behavior\r\nAs supported since .NET Core 1.1:\r\nhttps://docs.microsoft.com/en-us/dotnet/standard/io/file-path-formats#dos-device-paths\r\n\r\n```Powershell\r\n    Directory: C:\\\r\n\r\nMode                LastWriteTime         Length Name\r\n----                -------------         ------ ----\r\nd-----        25.06.2018    15:27                PerfLogs\r\nd-r---        17.06.2019    11:10                Program Files\r\nd-----        13.06.2019    22:04                Program Files (x86)\r\nd-----        15.04.2019    14:03                Temp\r\nd-r---        10.12.2018    17:51                Users\r\nd-----        13.06.2019    19:02                Windows\r\n```\r\n\r\n# Actual behavior\r\n\r\nNo error, no output\r\n\r\n# Environment data\r\n\r\n```powershell\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.2.1\r\nPSEdition                      Core\r\nGitCommitId                    6.2.1\r\nOS                             Microsoft Windows 10.0.14393 \r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u00d4\u00c7\u00aa}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n```",
  "closed_at": "2019-06-20T05:50:36Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "It is not regression. I checked that this does not work in previous versions and Windows PowerShell.\r\n\r\n@PowershellNinja Could you add more information why you need this?",
      "created_at": "2019-06-17T13:21:49Z",
      "updated_at": "2019-06-17T13:21:49Z"
    },
    {
      "author": "AikenBM",
      "author_association": "NONE",
      "body": "The almost universal reason for needing the `\\\\?\\C:\\Path` or `\\\\?\\UNC\\servername\\share\\path` syntax (both known as Long UNC path, as far as I'm aware) is long path support (path length greater than 260 characters). If I remember right, the reason it did not work on PowerShell 5.x and below is because the underlying .Net classes also did not support that syntax. Those .Net classes simply don't use the updated WinAPI calls that support either the Long UNC syntax or paths longer than 260 characters.\r\n\r\nI believe that [long path support has changed in the .Net Framework](https://blogs.msdn.microsoft.com/jeremykuhne/2016/07/30/net-4-6-2-and-long-paths-on-windows-10/), but I do not know if the Long UNC syntax works there or not or if Windows PowerShell works under that configuration or not. I have no idea if it works for .Net Core applications, either, but [it looks like they're heading towards long path support](https://github.com/dotnet/corefx/issues/645).\r\n",
      "created_at": "2019-06-19T22:51:17Z",
      "updated_at": "2019-06-19T22:51:17Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Thanks!\r\nPowerShell supports long path names but not the DOS-like syntax - we already have a tracking issue #4439",
      "created_at": "2019-06-20T05:50:36Z",
      "updated_at": "2019-06-20T05:51:38Z"
    },
    {
      "author": "PowershellNinja",
      "author_association": "CONTRIBUTOR",
      "body": "Sorry for the long wait, yes the purpose of this was to be able to work with long path names, for migrations to SharePoint Online for Example.\r\nSo if I understand this correctly, PS 6 should already be able to handle long path names?",
      "created_at": "2019-06-20T08:12:31Z",
      "updated_at": "2019-06-20T08:12:31Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@PowershellNinja Yes, PowerShell  6 works with long paths. You need to turn on the feature on Windows 10.",
      "created_at": "2019-06-20T10:42:19Z",
      "updated_at": "2019-06-20T10:42:19Z"
    },
    {
      "author": "rivy",
      "author_association": "NONE",
      "body": "@PowershellNinja , this looks more like a globbing issue. `Get-ChildItem -literalPath \\\\?\\c:\\` works correctly.",
      "created_at": "2021-05-22T20:48:16Z",
      "updated_at": "2021-05-22T20:48:16Z"
    }
  ],
  "created_at": "2019-06-17T09:19:38Z",
  "number": 9909,
  "state": "closed",
  "title": "Powershell Core 6.2.1 does not work with DOS device paths",
  "updated_at": "2021-05-22T20:48:17Z"
}