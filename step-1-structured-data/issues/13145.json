{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13145",
  "author": "brentashley",
  "body": "\r\n## Steps to reproduce\r\n\r\n```powershell\r\n# get any AD group\r\n$g = Get-ADGroup Administrators\r\n\r\n\"=== group object\"\r\n$g\r\n\r\n$json = $g | convertto-json\r\n\r\n\"=== json - note there are both ObjectGuid and ObjectGUID properties\"\r\n$json\r\n\r\n# generates error when trying to convert back to object\r\n$gj = $json | convertFrom-json \r\n```\r\n\r\n## Expected behavior\r\n\r\nonly one ObjectGUID property with original object's casing\r\n\r\n## Actual behavior\r\n\r\n```\r\n[DBG]: PS C:\\Users\\Administrator\\work\\ad-automation> .\\casing.ps1\r\n\r\n=== group\r\n\r\nDistinguishedName : CN=Administrators,CN=Builtin,DC=test,DC=local\r\nGroupCategory     : Security\r\nGroupScope        : DomainLocal\r\nName              : Administrators\r\nObjectClass       : group\r\nObjectGUID        : 5bfb3b7d-8dd0-41df-9c82-7e92c1585619\r\nSamAccountName    : Administrators\r\nSID               : S-1-5-32-544\r\n\r\n=== json\r\n{\r\n    \"GroupScope\": 0,\r\n    \"GroupCategory\": 1,\r\n    \"SamAccountName\": \"Administrators\",\r\n    \"SID\": {\r\n      \"BinaryLength\": 16,\r\n      \"AccountDomainSid\": null,\r\n      \"Value\": \"S-1-5-32-544\"\r\n    },\r\n    \"DistinguishedName\": \"CN=Administrators,CN=Builtin,DC=test,DC=local\",\r\n    \"Name\": \"Administrators\",\r\n    \"ObjectClass\": \"group\",\r\n==> \"ObjectGuid\": \"5bfb3b7d-8dd0-41df-9c82-7e92c1585619\",\r\n    \"PropertyNames\": [\r\n      \"DistinguishedName\",\r\n      \"GroupCategory\",\r\n      \"GroupScope\",\r\n      \"Name\",\r\n      \"ObjectClass\",\r\n      \"ObjectGUID\",\r\n      \"PSShowComputerName\",\r\n      \"SamAccountName\",\r\n      \"SID\"\r\n    ],\r\n    \"AddedProperties\": [],\r\n    \"RemovedProperties\": [],\r\n    \"ModifiedProperties\": [],\r\n    \"PropertyCount\": 9,\r\n==> \"ObjectGUID\": \"5bfb3b7d-8dd0-41df-9c82-7e92c1585619\",\r\n    \"PSShowComputerName\": []\r\n}\r\n\r\nConvertFrom-Json: C:\\Users\\Administrator\\work\\ad-automation\\casing.ps1:11:15\r\nLine |\r\n  11 |  $gj = $json | convertFrom-json\r\n     |                ~~~~~~~~~~~~~~~~\r\n     | Cannot convert the JSON string because it contains keys with different casing. Please use the\r\n     | -AsHashTable switch instead. The key that was attempted to be added to the existing key 'ObjectGuid'\r\n     | was 'ObjectGUID'.\r\n\r\n```\r\n\r\n## Environment data\r\n\r\n```Name                           Value\r\n----                           -----\r\nPSVersion                      7.0.2\r\nPSEdition                      Core\r\nGitCommitId                    7.0.2\r\nOS                             Microsoft Windows 10.0.17763\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n```\r\n(same experience with PowerShell 5.1)\r\n\r\n## Note\r\n\r\nNote that the ADGroup object has an ObjectGuid property but in its PropertyNames collection, it is spelled \"ObjectGUID\".  This is the same when I look at an ADUser object.  \r\n\r\nThis may indicate that the source of the problem is with the AD library (if you concur, please cross-post there or ask me to), however I contend that the JSON routines should recognize that this is an anomaly which is going to result in malformed JSON and throw a warning or error.\r\n\r\n\r\n",
  "closed_at": "2020-07-14T12:00:22Z",
  "comments": [
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "I would definitely alert the AD team to the inconsistency.\r\n\r\nAs for the JSON representation: it seems that the properties named in the `.PropertyCollection` are also surfaced as top-level properties, in addition to the type-native ones, and the case variation is then considered a distinct property - I personally don't know enough about `ConvertTo-Json` to know why and where that happens.\r\n\r\nWhile certainly undesired here, note that the result _is_ well-formed JSON, where - unlike in PowerShell - identifiers are case-_sensitive_, so case variations of the same property name - however ill-advised - _are_ allowed.\r\n\r\nAs the error message suggests, the way to work around the issue is to use `-AsHashtable` with `ConvertFrom-Json`, which returns a `[hashtable]` instance with case-_sensitive_ key definitions and lookups (unlike regular PowerShell hashtables).\r\n\r\nNote that another thing that JSON allows is property names that are the _empty string_. There too `ConvertFrom-Json` cannot be used, and `-AsHashtable` is required.\r\n",
      "created_at": "2020-07-12T13:24:53Z",
      "updated_at": "2020-07-12T13:24:53Z"
    },
    {
      "author": "brentashley",
      "author_association": "NONE",
      "body": "Thanks for the analysis.  I agree that it's valid JSON, so I suppose my intent was to suggest that if the export is going to result in JSON that the import is going to complain about, a warning at the export side might also help.\r\n\r\nFor now I am avoiding the issue by selecting specific properties when exporting.  I will, however, seek to alert the AD team.\r\n",
      "created_at": "2020-07-12T15:18:04Z",
      "updated_at": "2020-07-12T15:18:04Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2020-07-14T12:00:20Z",
      "updated_at": "2020-07-14T12:00:20Z"
    }
  ],
  "created_at": "2020-07-09T16:01:06Z",
  "number": 13145,
  "state": "closed",
  "title": "ConvertTo-JSON adds both ObjectGUID and ObjectGuid properties, causing different casing error in resulting JSON",
  "updated_at": "2020-07-14T12:00:22Z"
}