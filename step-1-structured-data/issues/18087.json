{
  "_url": "https://github.com/PowerShell/PowerShell/issues/18087",
  "author": "ArthurHNL",
  "body": "### Prerequisites\n\n- [X] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\n\n### Steps to reproduce\n\n1. Install PowerShell as .NET Global Tool (`dotnet tool install --global PowerShell`)\r\n2. Look at the properties of `pwsh.exe` in the .NET tool directory.\n\n### Expected behavior\n\n```console\nI expect the binary pwsh.exe to be signed.\n```\n\n\n### Actual behavior\n\n```console\nThe binary pwsh.exe is not signed.\n```\n\n\n### Error details\n\n_No response_\n\n### Environment data\n\n```powershell\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.6\r\nPSEdition                      Core\r\nGitCommitId                    7.2.6\r\nOS                             Microsoft Windows 10.0.19044\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\n```\n\n\n### Visuals\n\nProperties of `pwsh.exe` installed as a .NET Global Tool (note the lack of a 'Digital Signatures' tab):\r\n![image](https://user-images.githubusercontent.com/31919595/190162586-0ee9841f-f170-4a2f-8345-f516a2d990c2.png)\r\n\r\nProperties of `pwsh.exe` installed by the 'regular' PowerShell installer:\r\n![image](https://user-images.githubusercontent.com/31919595/190162706-559c500f-13bb-48e6-bf06-dfd1f7b77d66.png)\r\n",
  "closed_at": "2022-10-18T19:01:29Z",
  "comments": [
    {
      "author": "StevenBucher98",
      "author_association": "COLLABORATOR",
      "body": "cc @TravisEz13 ",
      "created_at": "2022-09-19T18:31:31Z",
      "updated_at": "2022-09-19T18:31:31Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "@WG-Security\r\nWe believe the `pwsh.exe` file referred to above is generated by dotNet (`c:\\users\\xxx\\dotnet\\tools\\pwsh.exe`), so we have no control over signing it.\r\n\r\n@adityapatwardhan  Can you confirm?",
      "created_at": "2022-10-03T20:37:02Z",
      "updated_at": "2022-10-03T20:37:02Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "Yes, that is correct. The `pwsh.exe` under `dotnet\\tools\\` is created by .NET when the global tool is installed. It points to the entrypoint for the global tool. ",
      "created_at": "2022-10-17T18:14:29Z",
      "updated_at": "2022-10-17T18:14:29Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as external and has not had any activity for **1 day**. It has been be closed for housekeeping purposes.",
      "created_at": "2022-10-18T19:01:28Z",
      "updated_at": "2022-10-18T19:01:28Z"
    }
  ],
  "created_at": "2022-09-14T13:10:57Z",
  "labels": [
    "Issue-Question",
    "WG-DevEx-Portability",
    "Resolution-Answered",
    "Resolution-External"
  ],
  "number": 18087,
  "state": "closed",
  "title": "pwsh executable installed as .NET Global Tool is not signed",
  "updated_at": "2022-10-18T19:01:29Z"
}