{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7760",
  "author": "arsing",
  "body": "Steps to reproduce\r\n------------------\r\n\r\n```powershell\r\nNew-Item -Type Directory .\\a.bcde\r\nNew-Item -Type File .\\a.bcde\\f.txt\r\nGet-ChildItem '.\\A5055~1.BCD\\f.txt' # succeeds\r\nGet-Content '.\\A5055~1.BCD\\f.txt' # succeeds\r\nRemove-Item '.\\A5055~1.BCD\\f.txt' # fails\r\nSet-Location '.\\A5055~1.BCD' # fails\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n`Remove-Item` and `Set-Location` work just like `Get-ChildItem` and `Get-Content` do.\r\n\r\nActual behavior\r\n---------------\r\n\r\n```none\r\nRemove-Item : An object at the specified path C:\\Users\\arsing\\Desktop\\A5055~1.BCD does not exist.\r\nAt line:1 char:1\r\n+ Remove-Item '.\\A5055~1.BCD\\f.txt' # fails\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : InvalidArgument: (:) [Remove-Item], PSArgumentException\r\n+ FullyQualifiedErrorId : Argument,Microsoft.PowerShell.Commands.RemoveItemCommand\r\n\r\n\r\nSet-Location : An object at the specified path C:\\Users\\arsing\\Desktop\\A5055~1.BCD does not exist.\r\nAt line:1 char:1\r\n+ Set-Location '.\\A5055~1.BCD' # fails\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : InvalidArgument: (:) [Set-Location], PSArgumentException\r\n+ FullyQualifiedErrorId : Argument,Microsoft.PowerShell.Commands.SetLocationCommand\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n```powershell\r\n> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.4\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.4\r\nOS                             Microsoft Windows 6.3.9600\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\n---\r\n\r\nThis came up with one of our scripts that creates a file under `$env:TEMP` via `Invoke-WebRequest -OutFile` and subsequently tries to delete it via `Remove-File`. The user in question had a `.` in their Windows username, and apparently Windows sets such a user's `TEMP` env var to use a 8.3 name. So the script failed at the `Remove-Item`.\r\n\r\nEg if you create a new user named `a.bcde`, and `runas /u:a.bcde pwsh`, `$env:TEMP` will be `C:\\Users\\A5055~1.BCD\\AppData\\Local\\Temp` and `cd \"$env:TEMP\"` will fail in the same way. I imagine a lot of PS scripts are broken for these users. (This issue also exists on PS 5.)\r\n\r\nThis happens at least on Windows 7 and Server 2012R2. Don't know about Windows 10 / Server 2016, but I assume it's for compat with some ancient programs so it might be there too.\r\n\r\n---\r\n\r\nOne workaround is to round-trip every path that might have an 8.3 name through `[FileInfo]::FullName` which converts it back to the proper name.\r\n\r\n```powershell\r\nPS> $filename = ([System.IO.FileInfo]\"$PWD\\A5055~1.BCD\\f.txt\").FullName\r\n\r\nPS> $filename\r\n\r\nC:\\Users\\arsing\\Desktop\\a.bcde\\f.txt\r\n\r\nPS> Remove-Item $filename # succeeds\r\n```",
  "closed_at": "2021-01-25T18:41:19Z",
  "comments": [
    {
      "author": "bormm",
      "author_association": "NONE",
      "body": "This is a duplicate of this one #2369 so please check that issue for more infos.",
      "created_at": "2021-01-25T17:53:43Z",
      "updated_at": "2021-01-25T18:18:05Z"
    }
  ],
  "created_at": "2018-09-11T17:55:35Z",
  "labels": [
    "Issue-Bug",
    "WG-Engine-Providers"
  ],
  "number": 7760,
  "state": "closed",
  "title": "Some FileSystem and Navigation commandlets fail on paths with 8.3 components",
  "updated_at": "2021-01-25T18:41:19Z"
}