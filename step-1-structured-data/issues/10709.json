{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10709",
  "author": "mbrousseaufx",
  "body": "\r\n\r\n# Steps to reproduce\r\n1. Create a ps1 file\r\n```powershell\r\nclass A {\r\n    [string]$A = \"1232\"\r\n}\r\n\r\nNew-Module -Name \"MyModule\" -ScriptBlock {\r\n    function Test-Type {\r\n        param(\r\n            [string]$type\r\n        )\r\n        process {\r\n            Write-Host \"Inside Module: Direct cast\"\r\n            [A]::new()\r\n\r\n            Write-Host \"Inside Module: New-Object\"\r\n            New-Object $Type\r\n        }\r\n    }\r\n}\r\nTest-Type \"A\"\r\n\r\nWrite-Host \"Outside Module: New-Object\"\r\nNew-Object \"A\"\r\n```\r\n2. In a new pwsh console, execute the file\r\n```none\r\n>tests.ps1\r\nResult :\r\nInside Module: Direct cast\r\nA : 1232\r\nInside Module: New-Object\r\nNew-Object : Cannot find type [A]: verify that the assembly containing this type is loaded.\r\nAt C:\\Sources\\giro-start-stop-scheduler\\src\\test.ps1:15 char:13\r\n+             New-Object $Type\r\n+             ~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : InvalidType: (:) [New-Object], PSArgumentException\r\n+ FullyQualifiedErrorId : TypeNotFound,Microsoft.PowerShell.Commands.NewObjectCommand\r\n\r\nOutside Module: New-Object\r\nA : 1232\r\n```\r\n\r\n3. In a new pwsh console, execute with a dot source the exact same file\r\n```none\r\n> . tests.ps1\r\nNo errors\r\n```\r\n\r\n# Expected behavior\r\nWe should have access dynamically to classes defined outside a module even if the class is defined in the scope of the current file\r\nNew-Object \"A\" should be equivalent to [A]::new()\r\n\r\n# Actual behavior\r\nNew-Object \"A\" failed to find the type\r\nbut\r\n[A]::new() succeed\r\n\r\nif the class A is defined in a script scope\r\n\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\n$psversiontable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.2.3\r\nPSEdition                      Core\r\nGitCommitId                    6.2.3\r\nOS                             Microsoft Windows 10.0.17763\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@rjmholt Does this duplicate anything in #6652?",
      "created_at": "2019-10-07T11:08:27Z",
      "updated_at": "2019-10-07T11:08:27Z"
    },
    {
      "author": "mbrousseaufx",
      "author_association": "NONE",
      "body": "I don't see my specific case in #6652, but I think it can be added to his list",
      "created_at": "2019-10-07T11:17:34Z",
      "updated_at": "2019-10-07T11:17:34Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I can not find but it seems we discussed such scenario. Perhaps it is not reffenced in #6652",
      "created_at": "2019-10-07T11:48:06Z",
      "updated_at": "2019-10-07T11:48:21Z"
    }
  ],
  "created_at": "2019-10-05T03:11:27Z",
  "number": 10709,
  "state": "open",
  "title": "New-Object \"A\" is not equivalent to [A]::new()",
  "updated_at": "2019-10-07T11:48:21Z"
}