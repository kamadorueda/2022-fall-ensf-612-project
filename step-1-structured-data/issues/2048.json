{
  "_url": "https://github.com/PowerShell/PowerShell/issues/2048",
  "author": "Itzrukutsk",
  "body": "<!--\n\nIf it is a bug report:\n- make sure you are able to repro it on the latest released version. \nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\n- Search the existing issues.\n- Refer to the [FAQ](../docs/FAQ.md).\n- Refer to the [known issues](../docs/KNOWNISSUES.md).\n- Fill out the following repro template\n\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\n-->\n## Steps to reproduce\n\nRun Invoke-Webrequest -uri somewebsite that isn't in the trusted sites / local intranet zone on a windows server where Internet Explorer ESC is enabled.\n## Expected behavior\n\nThe webrequest completes successfully or fails.\n## Actual behavior\n\nAn IE ESC popup halts execution of the script.\n\n``` powershell\n> $PSVersionTable\nPSVersion                      5.0.10586.117                                                                                                                                        \nPSCompatibleVersions {1.0, 2.0, 3.0, 5.0...}                                                                                                                                        \nBuildVersion                   10.0.10586.117                                                                                                                                      \nCLRVersion                     4.0.30319.34014                                                                                                                                    \nWSManStackVersion              3.0                                                                                                                                                          \nPSRemotingProtocolVersion      2.3                                                                                                                                                          \nSerializationVersion           1.1.0.1      \n<!-- provide the output of $PSVersionTable -->\n```\n",
  "closed_at": "2018-01-10T15:44:01Z",
  "comments": [
    {
      "author": "Tadas",
      "author_association": "CONTRIBUTOR",
      "body": "As a workaround you might want to look into `-UseBasicParsing` parameter, I think that way PowerShell doesn't invoke IE. You will lose DOM parsing, which sometimes is a problem.\n",
      "created_at": "2016-08-25T10:30:30Z",
      "updated_at": "2016-08-25T10:30:30Z"
    },
    {
      "author": "Itzrukutsk",
      "author_association": "NONE",
      "body": "Can confirm that it is a working workaround, but the parsing is really nice to have.\n",
      "created_at": "2016-08-25T10:33:24Z",
      "updated_at": "2016-08-25T10:33:24Z"
    },
    {
      "author": "1RedOne",
      "author_association": "CONTRIBUTOR",
      "body": "There's a workaround, using Add-Type to ignore IE Errors.  However this doesn't work w/ Linux.\n\n```\n\nadd-type @\"\n    using System.Net;\n    using System.Security.Cryptography.X509Certificates;\n    public class TrustAllCertsPolicy : ICertificatePolicy {\n        public bool CheckValidationResult(\n            ServicePoint srvPoint, X509Certificate certificate,\n            WebRequest request, int certificateProblem) {\n            return true;\n        }\n    }\n\"@\n[System.Net.ServicePointManager]::CertificatePolicy = New-Object TrustAllCertsPolicy\n```\n\n[Source for this workaround](http://stackoverflow.com/questions/11696944/powershell-v3-invoke-webrequest-https-error)\n\nI'd like to see this addressed as a Switch param, -IgnoreSslWarnings would be an obvious and discoverable name for such a switch.\n\n**Edit:** Sorry!  I was thinking of an SSL error, not the IE ESC message that @Itzrukutsk reported.\n",
      "created_at": "2016-08-25T15:37:45Z",
      "updated_at": "2016-08-29T02:00:50Z"
    },
    {
      "author": "Itzrukutsk",
      "author_association": "NONE",
      "body": "This isn't a certificate related issue.\n\nInvoke-Webrequest seem to use some part of Internet Explorer for parsing the html on the webpage. This subsequently triggers Internet Explorer Enhanced Security configuration to pop up with multiple dialogs stating that both powershell and the requested website isn't in the trusted sites. It's reproducible on any Windows Server 2012 setup where IE ESC is enabled. It happens both in the regular powershell console host and ISE.\n\n[Here's a screenshot of the offending dialog](http://i.imgur.com/GFNIa5j.png)\n\nSome possible solutions that i can think of, with little to no knowledge about the code:\n- Don't use IE to parse the html\n- Find a way that circumvents IE ESC (Probably not a good idea due to security reasons)\n- Disable IE ESC while the command is running (Probably not a good idea either).\n",
      "created_at": "2016-08-25T15:53:18Z",
      "updated_at": "2016-08-25T15:55:12Z"
    },
    {
      "author": "adamdriscoll",
      "author_association": "CONTRIBUTOR",
      "body": "Might be a breaking change but it could utilize the HtmlAgilityPack. I think that would work on .NET Core as well as not using IE for parsing. Not sure what the team's take on third-party libraries is.\n\nhttps://www.nuget.org/packages/HtmlAgilityPack\n",
      "created_at": "2016-08-25T16:02:03Z",
      "updated_at": "2016-08-25T16:02:03Z"
    },
    {
      "author": "GeeLaw",
      "author_association": "NONE",
      "body": "This is expected since when `-UseBasicParsing:$false` is used, PS uses `HTMLFILE` object to parse the resulting content -- even scripts in the page will run. Moreover, on Windows Server without Internet Explorer, if you do not set `-UseBasicParsing`, you get an error because it cannot parse the content.\n\nSince scripts can run, you might also get offended if the page `alert`s, the only way to reduce these things is to `-UseBasicParsing`. (edit: `-UseNasicParsing` -> `-UseBasicParsing`)\n",
      "created_at": "2016-08-27T09:27:55Z",
      "updated_at": "2016-08-29T02:49:28Z"
    },
    {
      "author": "Itzrukutsk",
      "author_association": "NONE",
      "body": "Some javascript content won't be run. I've noticed that with some sites that implement AngularJS stuff. \n",
      "created_at": "2016-08-27T12:03:09Z",
      "updated_at": "2016-08-27T12:03:09Z"
    },
    {
      "author": "GeeLaw",
      "author_association": "NONE",
      "body": "@ltzrukutsk no. Only inline scripts can run. Basically what happens is:\n1. Create a HTMLFILE object;\n2. Write the content into it.\n\nThe HTMLFILE object has no idea what the URL of the page is, therefore it cannot load scripts via `src` attribute. Similarly, inline codes that rely on it will surely break in the object.\n",
      "created_at": "2016-08-27T12:14:14Z",
      "updated_at": "2016-08-27T12:14:14Z"
    },
    {
      "author": "Itzrukutsk",
      "author_association": "NONE",
      "body": "@GeeLaw That explains a lot, now i know why. Thanks. I've already started using PantomJS for those purposes.\n",
      "created_at": "2016-08-27T12:18:38Z",
      "updated_at": "2016-08-27T12:18:38Z"
    },
    {
      "author": "1RedOne",
      "author_association": "CONTRIBUTOR",
      "body": "@Geelaw, are you certain about that?  Even when we run Invoke-WebRequest\nwith -UseBasicParsing we get the same error.\n\nEdit: I was wrong guys, turns out I was thinking about this message instead:\n\n`The underlying connection was closed: Could not establish trust relationship for the SSL/TLS secure channel.`\n\nWhich appears when visiting a site with SSL errors.\n\nOn Sat, Aug 27, 2016 at 8:18 AM, Itzrukutsk notifications@github.com\nwrote:\n\n> @GeeLaw https://github.com/GeeLaw That explains a lot, now i know why.\n> Thanks. I've already started using PantomJS for those purposes.\n> \n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> https://github.com/PowerShell/PowerShell/issues/2048#issuecomment-242914045,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/ABMJiuLn1nXgpgzDywEN7ZZhu4NbM1mQks5qkCsvgaJpZM4Jr3Gk\n> .\n",
      "created_at": "2016-08-29T01:58:13Z",
      "updated_at": "2016-08-29T02:00:08Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT Digging through some of the older issues and I have found quite a few that are not related to PowerShell Core, but instead are related to Windows PowerShell. How should we handle these? link to uservoice and close?",
      "created_at": "2017-12-04T22:34:11Z",
      "updated_at": "2017-12-04T22:34:11Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@markekraus yes, for Windows PowerShell if there's a corresponding issue on Uservoice, I think we should link it, and resolve as external.  Thanks!",
      "created_at": "2017-12-04T23:01:24Z",
      "updated_at": "2017-12-04T23:01:24Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@Itzrukutsk As this issue pertains to Windows PowerShell 5.1 and older, this repository is now only for PowerShell Core, and PowerShell Core no linger has any reliabce on Internet Explorer, can you please open a uservoice for this issue?\r\n\r\nhttps://windowsserver.uservoice.com/forums/301869-powershell",
      "created_at": "2018-01-10T15:44:01Z",
      "updated_at": "2018-01-10T15:44:01Z"
    }
  ],
  "created_at": "2016-08-24T10:25:28Z",
  "labels": [
    "Issue-Bug",
    "OS-Windows",
    "WG-Cmdlets",
    "Resolution-Fixed"
  ],
  "number": 2048,
  "state": "closed",
  "title": "Invoke-Webrequest triggers IE ESC Warnings",
  "updated_at": "2018-01-10T15:44:01Z"
}