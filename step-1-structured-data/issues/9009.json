{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9009",
  "author": "qt3m45su0najc7",
  "body": "",
  "closed_at": "2019-03-01T13:03:36Z",
  "comments": [
    {
      "author": "qt3m45su0najc7",
      "author_association": "NONE",
      "body": "steps: \r\nrequest a file not on server from *.vod.com (see powershell transcript)\r\n404 info is returned in stdlist (or stderr),\r\nstack trace in -errorvariable output\r\nno results returned into return variable  (i.e. $returnvar=invoke-webrequest ...)\r\n\r\nexpected to be able to see $returnvar.statuscode =404\r\ninspecting the returned header, you can see:\r\n**server | AmazonS3\r\nx-cache | Error from cloudfront**\r\n\r\n\r\n\r\n'\r\n ---> Microsoft.PowerShell.Commands.HttpResponseException: Response status code does not indicate success: 404 (Not Found).\r\n   at System.Management.Automation.MshCommandRuntime.ThrowTerminatingError(ErrorRecord errorRecord)\r\n   --- End of inner exception stack trace ---\r\n[1.txt](https://github.com/PowerShell/PowerShell/files/2915176/1.txt)\r\n'\r\n",
      "created_at": "2019-02-28T13:35:10Z",
      "updated_at": "2019-02-28T13:35:10Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@qt3m45su0najc7 Please use issue template to push issue.",
      "created_at": "2019-02-28T19:30:49Z",
      "updated_at": "2019-02-28T19:30:49Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "/cc @markekraus Could you please look the issue?",
      "created_at": "2019-02-28T19:32:07Z",
      "updated_at": "2019-02-28T19:32:07Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "This is `By Design`. A non-success HTTP status message throws terminating errors and does not return any output. You must do something like this:\r\n\r\n```powershell\r\ntry {\r\n    $response = invoke-WebRequest -Uri $Uri -ErrorAction Stop\r\n    $StatusCode = $Response.StatusCode\r\n} catch {\r\n    $StatusCode = $_.Exception.Response.StatusCode.value__\r\n}\r\n```",
      "created_at": "2019-03-01T00:01:18Z",
      "updated_at": "2019-03-01T00:01:18Z"
    },
    {
      "author": "qt3m45su0najc7",
      "author_association": "NONE",
      "body": "Ok, @markekraus  , but I did mention that the $response= returns nothing, so there is no $response.statuscode to evaluate.  Please confirm using the example in the transcript or fake one for that domain to verify.",
      "created_at": "2019-03-01T01:50:07Z",
      "updated_at": "2019-03-01T01:50:07Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@qt3m45su0najc7 \r\n\r\nyou can use what i posted before:\r\n\r\n```powershell\r\n$Uri = 'https://img.vod.com/secret_recipe.jpg'\r\ntry {\r\n    $response = invoke-WebRequest -Uri $Uri -ErrorAction Stop\r\n    $StatusCode = $Response.StatusCode\r\n} catch {\r\n    $StatusCode = $_.Exception.Response.StatusCode.value__\r\n}\r\n```\r\n\r\n`$Response` will not be fully populated unless you get a success code (e.g. `200`). However, you can process the `$_.Exception.Response` in the `catch{}` block which is a `System.Net.Http.HttpResponseMessage` object. \r\n\r\nIn my example, ` $StatusCode = $Response.StatusCode` will be hit when the status is successful and `$StatusCode = $_.Exception.Response.StatusCode.value__` will be hit when it is not and in the end, `$StatusCode` will have the status code regardless of whether the request was successful or not.\r\n\r\nIn other words, you need to write your code in such a way to handle the errors as `$Response` will not be populated when a non-succes status message is returned.",
      "created_at": "2019-03-01T02:09:05Z",
      "updated_at": "2019-03-01T02:09:05Z"
    },
    {
      "author": "qt3m45su0najc7",
      "author_association": "NONE",
      "body": "@markekraus  works as you advertised. Thank you.",
      "created_at": "2019-03-01T13:03:36Z",
      "updated_at": "2019-03-01T13:03:36Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@markekraus I imagine this scenario might be common enough that perhaps adding that example to the [docs page](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/invoke-webrequest?view=powershell-6) may be warranted? \ud83d\ude42 ",
      "created_at": "2019-03-01T13:07:53Z",
      "updated_at": "2019-03-01T13:07:53Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@vexx32 If you think so, please open an issue in [PowerShell/PowerShell-Docs](https://github.com/MicrosoftDocs/PowerShell-Docs)",
      "created_at": "2019-03-01T13:14:48Z",
      "updated_at": "2019-03-01T13:14:48Z"
    }
  ],
  "created_at": "2019-02-28T13:27:57Z",
  "labels": [
    "Issue-Question",
    "Resolution-Answered",
    "WG-Cmdlets-Utility"
  ],
  "number": 9009,
  "state": "closed",
  "title": "invoke-webrequest unhandled exception on 404",
  "updated_at": "2019-03-03T22:13:33Z"
}