{
  "_url": "https://github.com/PowerShell/PowerShell/issues/1940",
  "author": "kilasuit",
  "body": "As mentioned in issue #1715 there are some talks with removing the need for Start-PSBuild to be reliant of VS to be installed.\n\nThis isn't an easy change to make but would remove a pretty big dependency so for me would be a big win\n\nIssues to overcome\n- [ ] - Check for git install in Start-PSBootstrap (required as this isn't already checked\n- [ ] - Check for the C ++ tools are installed in Start-PSBootstrap (see #1715 for the possible way to get this)\n- [ ] - If git is not installed - Install Git in Start-PSBootStrap \n- [ ] - If c++ tools are not installed - Register-PackageSource for C ++ tools that are required from Nuget feed as mentioned in #1715 \n- [ ] - If c++ tools are not installed - Install-Package for C ++ tools that are required from Nuget feed as mentioned in #1715 \n- [ ] - If c++ tools are not installed - After install Remove-PackageSource as not required after this\n- [ ] - Update Start-PSBuild if required with new locations to check\n\nI think that captures what would be needed to remove the dependency on VS being installed\n@rkeithhill can you see any other tasks that may be needed?\n",
  "closed_at": "2018-10-04T16:44:29Z",
  "comments": [
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "@mirichmo wrote most of the build logic for native things on windows. Mike, what do you think about this proposition?\n\nAs far as I know, we need two parts for native compilation on windows:\n- VS C++ compiler itself + headers.\n- win 10 SDK with lib for the linker.\n\nI think the first one could be downloaded as a nuget package.\n\nI definitely support desire to have \"fewer dependencies\". Meanwhile, I also think that full VS provides a very good dev experience on windows (compare to VS code in it's current state) and likely would be used by most developers anyway.  \n",
      "created_at": "2016-08-19T08:33:22Z",
      "updated_at": "2016-08-19T08:33:22Z"
    },
    {
      "author": "kilasuit",
      "author_association": "COLLABORATOR",
      "body": "I'm going through a \"machine restructure\" at home and have decided that for any PowerShell development I want to be able to build out a brand new win10 dev VM every Friday (obviously scripted using the Lability module & DSC) so that I dont have any reliance on my hardware and could throw it all in Azure at a later stage too.\n\nAlso I'm not a traditional dev so this is really the first jump for me into that world and if I can not rely on VS then I can move to Ubuntu / Mac for other dev work if it works for me.\n\nSo it may be a weird combo of reasons but it would be a good learning curve that I intend to blog about as well. Hopefully that helps you understand my rational behind this suggestion.\n",
      "created_at": "2016-08-19T09:14:51Z",
      "updated_at": "2016-08-19T09:14:51Z"
    },
    {
      "author": "kilasuit",
      "author_association": "COLLABORATOR",
      "body": "also I think I have most of this nearly ready but I'm testing it on new builds to make sure\n",
      "created_at": "2016-08-19T09:17:03Z",
      "updated_at": "2016-08-19T09:17:03Z"
    },
    {
      "author": "mirichmo",
      "author_association": "MEMBER",
      "body": "@vors #1440 removed the Win 10 SDK requirement, so that simplified things a bit.\n\n@kilasuit Can you clarify your intentions here? Are you experimenting with building all components that we currently build (native + managed) without installing VS? If you just care about building the managed components, then you would just need to modify build.psm1 with a \"-BuildManagedOnly\" parameter to carve out the native dependencies.\n\nAssuming that you want to build everything (native and managed), I think simplifying the dependencies is a good thing if we can do it and still meet the existing requirements. \n\nOn Windows platforms for CoreCLR, the goal is to build a single WinRM plugin binary (pwrshplugin.dll) that works across all supported flavors of Windows (7, 8, 8.1, 10, Nano Server, and IoT). The easiest way to meet this requirement is to build it the same way CoreCLR builds native DLLs using [the same dependencies](https://github.com/dotnet/coreclr/blob/master/Documentation/building/windows-instructions.md). Additionally, the PowerShell project must also produce native powershell.exe and pwrshplugin.dll binaries for FullCLR to ensure backward compatibility with Windows PowerShell. \n\nStart-PSBuild and Start-PSBootStrap test for the union of these two requirements to ensure that it can build the binaries appropriately. Any change to those cmdlets should take that need into consideration.\n\nAlternately, if there is strong community desire to streamline the build process and do a managed-only build of PowerShell Core (everything except pwrshplugin.dll), that would be another change to build.psm1 that could be interesting.\n",
      "created_at": "2016-08-19T21:27:35Z",
      "updated_at": "2016-08-19T21:27:35Z"
    },
    {
      "author": "kilasuit",
      "author_association": "COLLABORATOR",
      "body": "This is now a very old issue and I'm not sure this is relevant still\r\n\r\n@joeyaiello  @SteveL-MSFT can either of you confirm/deny if this needs revisiting now",
      "created_at": "2018-10-03T20:45:38Z",
      "updated_at": "2018-10-03T20:45:38Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I think it was resolved in #7892 /cc @adityapatwardhan ",
      "created_at": "2018-10-04T03:33:57Z",
      "updated_at": "2018-10-04T03:33:57Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I don't believe this is an issue anymore for most contributors as long as one doesn't touch the native code for Windows.",
      "created_at": "2018-10-04T16:44:29Z",
      "updated_at": "2018-10-04T16:44:29Z"
    }
  ],
  "created_at": "2016-08-19T06:12:18Z",
  "labels": [
    "Area-Maintainers-Build",
    "Resolution-Fixed"
  ],
  "number": 1940,
  "state": "closed",
  "title": "Remove requirement for full VS install to build",
  "updated_at": "2018-10-04T16:44:34Z"
}