{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10776",
  "author": "Greg-Smulko",
  "body": "# PR Summary\r\n\r\nSupport multi-line code blocks in examples.\r\n\r\n## PR Context\r\n\r\n<!-- Provide a little reasoning as to why this Pull Request helps and why you have opened it. -->\r\nFix as asked for by @vors in https://github.com/PowerShell/platyPS/issues/180#issuecomment-540895324. \r\nFixes the issue https://github.com/PowerShell/platyPS/issues/180 _Multiline examples don't display as markdown code_.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2019-11-16T01:24:17Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@Greg-Smulko Please rebase to pass Static CI.",
      "created_at": "2019-10-12T17:12:10Z",
      "updated_at": "2019-10-12T17:12:10Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Add WIP until we get Pester tests.",
      "created_at": "2019-10-12T19:09:44Z",
      "updated_at": "2019-10-12T19:09:44Z"
    },
    {
      "author": "Greg-Smulko",
      "author_association": "CONTRIBUTOR",
      "body": "I replaced unit tests with Pester tests, could you take a look again @iSazonov?",
      "created_at": "2019-10-14T12:18:06Z",
      "updated_at": "2019-10-14T12:18:06Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@Greg-Smulko Could you please check the fix with PlatyPS?",
      "created_at": "2019-10-14T14:17:32Z",
      "updated_at": "2019-10-14T14:17:32Z"
    },
    {
      "author": "Greg-Smulko",
      "author_association": "CONTRIBUTOR",
      "body": "> Could you please check the fix with PlatyPS?\r\n\r\n@iSazonov , I tested the fix with PlatyPS, everything looks fine. :)\r\nSee the [files attached](https://github.com/PowerShell/PowerShell/files/3744946/test-examples-generation.zip).\r\nI generated them using the `New-MarkdownHelp` and `New-ExternalHelp` cmdlets.",
      "created_at": "2019-10-18T16:58:19Z",
      "updated_at": "2019-10-18T16:58:19Z"
    },
    {
      "author": "Greg-Smulko",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov , performance degradation? What degradation?\r\nOn `master` the `Measure-Command -Expression { Get-Help Get-Help -examples }` took 304 ms, on the new version only 287 ms.\r\n\r\nBut seriously, it seems that the very first run of `Get-Help` takes around 300 ms on both versions, and then the subsequent ones (for a different command) about 10-15 ms.\r\n\r\nI tried running `Measure-Command -Expression { Get-Help Get-Help -examples }` (took ~300 ms) and then `Measure-Command -Expression { Get-Help Get-Command -examples }` (took ~15 ms).\r\n\r\nTo summarize, I think that there is no visible performance degradation at all, at least for the cmdlets that I tested.",
      "created_at": "2019-10-18T22:18:28Z",
      "updated_at": "2019-10-18T22:18:28Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@Greg-Smulko Thanks!\r\n\r\n@adityapatwardhan Please review the PR.",
      "created_at": "2019-10-19T05:12:29Z",
      "updated_at": "2019-10-19T05:12:29Z"
    },
    {
      "author": "Greg-Smulko",
      "author_association": "CONTRIBUTOR",
      "body": "Hi @adityapatwardhan, any hope that you could take a look at this?",
      "created_at": "2019-10-31T08:21:02Z",
      "updated_at": "2019-10-31T08:21:02Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@Greg-Smulko  Thank you for your contribution!",
      "created_at": "2019-11-16T01:24:33Z",
      "updated_at": "2019-11-16T01:24:33Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.0.0-preview.6` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.0.0-preview.6)\n",
      "created_at": "2019-11-21T22:35:39Z",
      "updated_at": "2019-11-21T22:35:39Z"
    }
  ],
  "created_at": "2019-10-11T22:39:41Z",
  "number": 10776,
  "state": "closed",
  "title": "Support multi-line code blocks in examples",
  "updated_at": "2019-11-21T22:35:39Z"
}