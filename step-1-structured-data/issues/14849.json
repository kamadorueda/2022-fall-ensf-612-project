{
  "_url": "https://github.com/PowerShell/PowerShell/issues/14849",
  "author": "JamesWTruher",
  "body": "Only validate the signature with the content if the first non-content validation fails\r\n\r\n<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nWhen ExecutionPolicy is set to require a signature, under some circumstances a signature placed in a file will not execute with a \"hash mismatch\" error, even though `Get-AuthenticodeSignature` will return that the signature is valid.\r\nThis is because `Get-AuthenticodeSignature` and our invocation path are not symmetrical. This PR adds the same check that we do in `Get-AuthenticodeSignature` into our invocation path.\r\n\r\n## PR Context\r\n\r\n<!-- Provide a little reasoning as to why this Pull Request helps and why you have opened it. -->\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and opened an issue in the relevant tool repository. This may include:\r\n        - [ ] Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode\r\n        (which runs in a different PS Host).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n",
  "closed_at": "2021-02-23T20:23:16Z",
  "comments": [
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@JamesWTruher Is there a way we can add a test for the change?",
      "created_at": "2021-02-22T18:52:04Z",
      "updated_at": "2021-02-22T18:52:04Z"
    },
    {
      "author": "JamesWTruher",
      "author_association": "MEMBER",
      "body": "@adityapatwardhan I couldn't think of one other than the tests we have, and I'm not sure why the tests we have didn't find this. It may be that @PaulHigin can figure out a way",
      "created_at": "2021-02-22T18:55:52Z",
      "updated_at": "2021-02-22T18:55:52Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PaulHigin we initially checked against WinPS and for whatever reason it doesn't fail in WinPS.  I compared the code between WinPS and PS7 and don't see any differences in this specific code path so it remains a mystery why it only fails on PS7.",
      "created_at": "2021-02-22T18:58:25Z",
      "updated_at": "2021-02-22T18:58:25Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT  Hmm, I don't like those kinds of mysteries.  Could it be a PInvoke difference between .Net frameworks?  But this seems like the right fix since it matches what `Get-AuthenticodeSignature` does.  ",
      "created_at": "2021-02-22T19:09:25Z",
      "updated_at": "2021-02-22T19:09:25Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "I think the difference lies here:\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/3c7f4b573e96684781b8e1935eeb0b981bcd93bc/src/System.Management.Automation/engine/ExternalScriptInfo.cs#L518",
      "created_at": "2021-02-22T19:12:19Z",
      "updated_at": "2021-02-22T19:12:19Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I wonder that `Get-AuthenticodeSignature -Content` assumes the Content is always in Unicode.\r\n\r\n> I think the difference lies here:\r\n> \r\n> https://github.com/PowerShell/PowerShell/blob/3c7f4b573e96684781b8e1935eeb0b981bcd93bc/src/System.Management.Automation/engine/ExternalScriptInfo.cs#L518\r\n\r\nIt could be so if a test script file is in Unicode but without BOM otherwise StreamReader() detected right an encoding of the file.\r\n",
      "created_at": "2021-02-22T19:32:28Z",
      "updated_at": "2021-02-22T19:32:28Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Although it may be just the same\r\n```powershell\r\n[System.Text.Encoding] :: Utf8.GetPreamble ()\r\n239\r\n187\r\n191\r\n```\r\nI mean, now we get the default BOM for Uft8 when it shouldn't be (in `GetSignatureWithEncodingRetry()`).",
      "created_at": "2021-02-22T19:41:19Z",
      "updated_at": "2021-02-22T19:42:44Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "I see.  This does seem like it could be the culprit.  But the comment in `GetSignatureWithEncodingRetry` says the SIP will (may?) replace with a Unicode BOM when signing, in which case the code should handle it.  We should investigate this more.",
      "created_at": "2021-02-22T19:57:30Z",
      "updated_at": "2021-02-22T19:57:30Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "I am marking this PR as WIP as more discussion is required here.",
      "created_at": "2021-02-22T20:52:31Z",
      "updated_at": "2021-02-22T20:52:31Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.2.0-preview.4` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.2.0-preview.4)\n",
      "created_at": "2021-03-16T23:40:18Z",
      "updated_at": "2021-03-16T23:40:18Z"
    }
  ],
  "created_at": "2021-02-19T01:51:58Z",
  "number": 14849,
  "state": "closed",
  "title": "Change signature validation logic to call first without the file content",
  "updated_at": "2021-03-16T23:40:18Z"
}