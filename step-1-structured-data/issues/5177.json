{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5177",
  "author": "mklement0",
  "body": "A minor problem, and perhaps rare in practice.\r\n\r\n`Get-ChildItem`'s `-File` and `-Directory` switches limit the output to files only / directories only, respectively.\r\n\r\nTherefore, it is pointless to allow _both_ of them to be specified, given that no filesystem item can be both a file and a directory, and the output will always be nothing (null collection).\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\nGet-ChildItem -File -Directory\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\nAn error indicating that incompatible switches were used, which would currently come in the form of `parameter set cannot be resolved using the specified named parameters.`\r\n\r\nActual behavior\r\n---------------\r\n\r\nThe combination of these switches is allowed, and nothing is output.\r\n\r\nEnvironment data\r\n----------------\r\n\r\n```powershell\r\nPowerShell Core v6.0.0-beta.8 on macOS 10.13\r\nPowerShell Core v6.0.0-beta.8 on Ubuntu 16.04.3 LTS\r\nPowerShell Core v6.0.0-beta.8 on Microsoft Windows 10 Pro (64-bit; v10.0.15063)\r\nWindows PowerShell v5.1.15063.674 on Microsoft Windows 10 Pro (64-bit; v10.0.15063)\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "djweber",
      "author_association": "NONE",
      "body": "I can work on this one.",
      "created_at": "2017-10-20T04:43:03Z",
      "updated_at": "2017-10-20T04:43:03Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@DdWr consider it yours!  I'm only able to assign to collaborators, so don't worry about that, but I'll remove the `Up-for-Grabs` label.  Thanks!",
      "created_at": "2017-10-20T05:05:54Z",
      "updated_at": "2017-10-20T05:05:54Z"
    },
    {
      "author": "thezim",
      "author_association": "CONTRIBUTOR",
      "body": "@mklement0 should `-File -Directory` in conjunction actually return everything and not be exclusive? Should it be an `or` and not an `and`.",
      "created_at": "2017-10-20T12:27:42Z",
      "updated_at": "2017-10-20T12:27:42Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@thezim:\r\n\r\nIt's debatable; here are the reasons I went with the AND interpretation, which led me to request that the switches be _mutually exclusive_:\r\n\r\n* Specifying _neither_ switch gives you _both_ files and directories _by default_; i.e, the default is _everything_, and adding _either_ `-File` or `-Directory` _takes things away_, so that using both `-File` and `-Directory` would take _everything_ away, which is why I think it makes no sense.\r\n\r\n* `Get-ChildItem`'s help currently states:\r\n\r\n> To get only directories, use the -Directory parameter **and omit the -File parameter**. To exclude directories, use the -File parameter **and omit the -Directory parameter**\r\n\r\n---\r\n\r\nA potential reason to go with OR logic is that it would enable adding additional switches that go beyond the basic file/directory dichotomy, though arguably that is covered by the existing `-Attributes` parameter.\r\n\r\n@SteveL-MSFT, any thoughts?\r\n\r\n",
      "created_at": "2017-10-20T13:40:46Z",
      "updated_at": "2017-10-20T13:40:46Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "hmmm. `and`/`or` logic would be nice you are wrapping this and asking if files and folders should be included. being able to pass the bools directly to it like so `-Directory:$IncludeDirectories -File:$IncludeFiles`. With `xor` logic you would have to do something like `if($IncludeDirectories){$params.add('Directory', $true)}`. \r\n\r\nAlso, while I haven't looked at the cmdlet or provider, implementing exclusive parameters can become tricky if there are parameter sets already in use.",
      "created_at": "2017-10-20T13:52:28Z",
      "updated_at": "2017-10-20T13:53:47Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Thinking about this, I can see how `-File` and `-DIrectory` could be interpreted as OR or AND.  I don't have a strong opinion either way on this one.  However, if we change it so that the flag means \"Include\" (aka OR) where we now return everything compared to now where we return nothing (aka AND), that could break someone who was constructing the args programmatically.\r\n\r\nPersonally, I think this issue probably isn't worth spending additional time on vs some other issues and would propose `Won't Fix` and leave it the way it is.",
      "created_at": "2017-10-20T16:50:29Z",
      "updated_at": "2017-10-20T16:50:29Z"
    },
    {
      "author": "HumanEquivalentUnit",
      "author_association": "CONTRIBUTOR",
      "body": "You claims don't seem quite right:\r\n\r\n> Get-ChildItem's -File and -Directory switches limit the output to files only / directories only, respectively.\r\n\r\nThis outputs a FileInfo object, so the -Directory switch is not limiting the output to only directories:\r\n\r\n        Get-ChildItem -Directory D:\\Testfolder\\testfile.txt\r\n\r\n> Therefore, it is pointless to allow both of them to be specified, given that no filesystem item can be both a file and a directory, and the output will always be nothing (null collection).\r\n\r\nThis outputs a FileInfo object, so the output when specifying both switches is not always nothing:\r\n\r\n    Get-ChildItem -File -Directory D:\\Testfolder\\testfile.txt\r\n\r\n",
      "created_at": "2017-10-20T17:56:42Z",
      "updated_at": "2017-10-20T17:56:59Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@HumanEquivalentUnit I think you hit upon another edge case.  Since you provided a file to `-Path`, it can't find any directories.  Perhaps technically, it should have returned an error that it can't get child items of a file regardless if `-Directory` or `-File` was provided.",
      "created_at": "2017-10-20T18:24:26Z",
      "updated_at": "2017-10-20T18:24:26Z"
    }
  ],
  "created_at": "2017-10-20T02:53:28Z",
  "labels": [
    "Hacktoberfest",
    "WG-Cmdlets-Management",
    "Area-FileSystem-Provider"
  ],
  "number": 5177,
  "state": "open",
  "title": "Get-ChildItem -File and -Directory should be mutually exclusive",
  "updated_at": "2021-11-30T15:37:58Z"
}