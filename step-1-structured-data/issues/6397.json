{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6397",
  "author": "Jaykul",
  "body": "In linux, obviously `--help` (or `-h`) is more common than `-?` as a way to get help\r\n\r\nSince it doesn't currently seem possible to name a parameter such that this would collide, it seems like a change like this wouldn't break anything, right?\r\n\r\nAny reason this _should not_ be done?",
  "closed_at": null,
  "comments": [
    {
      "author": "DWSR",
      "author_association": "NONE",
      "body": "It would be great to get this via `CmdletBinding()`.",
      "created_at": "2018-03-15T02:00:59Z",
      "updated_at": "2018-03-15T02:11:08Z"
    },
    {
      "author": "BrucePay",
      "author_association": "COLLABORATOR",
      "body": "@Jaykul It is possible to define a script/function parameter `--help` as in   `function foo ( ${-help} ) { ... }`. I bet no one actually does this but maybe we should check around.\r\n\r\n> Any reason this should not be done?\r\n\r\nThe usual I suppose. It's work (open-source somewhat mitigates that). It clutters up the code with another special case in command processing (internally 'foo -?' gets rewritten as 'get-help foo'). Do we think it will bring sufficient benefit to warrant the code changes, that kind of thing.",
      "created_at": "2018-03-15T21:24:10Z",
      "updated_at": "2018-03-15T21:24:10Z"
    },
    {
      "author": "Jaykul",
      "author_association": "CONTRIBUTOR",
      "body": "No @BrucePay, the reason I said it doesn't seem possible is _that it won't work_:\r\n\r\n```posh\r\nfunction Test-Help {\r\n[CmdletBinding()]\r\nparam(\r\n[switch]${-help}\r\n)\r\n$PSBoundParameters\r\n}\r\n```\r\n```\r\nC:\\PS> Get-Command Test-Help -Syntax\r\n\r\nTest-Help [--help] [<CommonParameters>]\r\n\r\nC:\\PS> Test-Help --Help\r\nTest-Help : A positional parameter cannot be found that accepts argument '--Help'.\r\nAt line:1 char:1\r\n+ Test-Help --Help\r\n+ ~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : InvalidArgument: (:) [Test-Help], ParameterBindingException\r\n    + FullyQualifiedErrorId : PositionalParameterNotFound,Test-Help\r\n```\r\n\r\nYou can pass `--Help` to a **non-advanced** function (and look for it in `$Args`), but you can't actually **use** `-Help` as a parameter name as far as I can tell (I suppose you can't use - as the first character of a parameter anymore).\r\n\r\nSo if you define:\r\n```posh\r\nfunction Test-Help ([switch]${-help}) {\r\n$PSBoundParameters\r\nWrite-Host \"Help? ${-Help}\"\r\nWrite-Host \"Unbound args: $Args\"\r\n}\r\n```\r\n\r\nNote that the parameter isn't set, and \"--Help\" showed up in unbound `$Args`\r\n```\r\nC:\\PS> Test-Help --Help\r\nHelp? False\r\nUnbound args: --Help\r\n```\r\n\r\n",
      "created_at": "2018-03-15T22:50:07Z",
      "updated_at": "2018-03-15T23:15:21Z"
    },
    {
      "author": "BrucePay",
      "author_association": "COLLABORATOR",
      "body": "@Jaykul Yes - there definitely seems to be a bug in the parameter binder here.",
      "created_at": "2018-03-16T01:11:24Z",
      "updated_at": "2018-03-16T01:11:24Z"
    },
    {
      "author": "Jaykul",
      "author_association": "CONTRIBUTOR",
      "body": "Yeah, so ... obviously PowerShell cannot emulate Linux-stype parameter binding, because in linux executables, `--long` parameters require double dashes because they're completely separate from the single-character versions, which can be _combined_ so e.g.:  `docker run -i -t` is _the same_ as `docker run -it`.  \r\n\r\nIn order to pull that off, you have to name the parameters with that in mind. Clearly we can't just implement that in PowerShell. It's out of the question (first because we don't _want_ to do that), because the syntax we have now is well known to thousands of people, and because most PowerShell commands have multiple parameters that start with the same letter, like:\r\n\r\n```posh\r\nGet-ChildItem -Filter *.png -Force -FollowSymlink -File\r\n```\r\n\r\n## However, there are a couple of exceptions\r\n\r\n1. **Help for commands**, `--help` could be like `-?` -- a special parameter that could be intercepted by the shell and converted to `Get-Help <command>`.  It's certainly not necessary to do this, but we know it won't clash with any existing parameters, because it's not currently possible to write a function that takes `--help` as a parameter (but it **is** possible to write one that takes `-help`, so it's probably not a good idea to use that).  At the end of the day, it seems like it would be a simple tweak that would enable thousands of people's automatic instincts to get them help.\r\n2. **pwsh** itself. Unlike commands _within_ PowerShell, the `pwsh` command is obviously actually a `linux` command, that has to work _in linux_ and behave properly.  Now, perhaps we can't quite fix all the parameter handling so it's similar to normal linux parameter binding (since we need to keep backwards compatibility), but we _could_ easily **add** `--help` ...",
      "created_at": "2018-04-22T01:54:57Z",
      "updated_at": "2018-04-22T01:59:19Z"
    }
  ],
  "created_at": "2018-03-15T01:58:32Z",
  "labels": [
    "Issue-Enhancement",
    "Issue-Discussion"
  ],
  "number": 6397,
  "state": "open",
  "title": "Would it be possible to have --help as an alias of -?",
  "updated_at": "2018-04-22T01:59:19Z"
}