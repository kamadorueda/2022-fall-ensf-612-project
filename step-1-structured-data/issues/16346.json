{
  "_url": "https://github.com/PowerShell/PowerShell/issues/16346",
  "author": "yecril71pl",
  "body": "### Prerequisites\n\n- [X] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\n\n### Steps to reproduce\n\n```powershell\r\n[BOOL] $X = $NULL\r\n```\n\n### Expected behavior\n\n```console\n-NOT $X\n```\n\n\n### Actual behavior\n\n```console\nMetadataError\n```\n\n\n### Error details\n\n```console\nCannot convert value \"\" to type \"System.Boolean\". Boolean parameters accept only Boolean values and numbers, such as $True, $False, 1 or 0.\n```\n\n\n### Environment data\n\n```powershell\nSystem.Management.Automation.PSVersionHashTable\n```\n\n\n### Visuals\n\n_No response_",
  "closed_at": null,
  "comments": [
    {
      "author": "yecril71pl",
      "author_association": "CONTRIBUTOR",
      "body": "This breaks the following code:\r\n```powershell\r\n# declare a bunch of variables\r\n[INT] $A, [BOOL] $B = @()\r\n```",
      "created_at": "2021-10-31T19:50:43Z",
      "updated_at": "2021-10-31T19:50:43Z"
    },
    {
      "author": "yecril71pl",
      "author_association": "CONTRIBUTOR",
      "body": "Workaround (spooky \ud83e\udd28)\r\n```powershell\r\n[INT] $A, [BOOL] $B = (,$FALSE) * 0X2\r\n```\r\nAnother one, even more spooky:\r\n```powershell\r\n[INT] $A = [BOOL] $B = $FALSE\r\n```",
      "created_at": "2021-10-31T21:41:05Z",
      "updated_at": "2021-10-31T21:54:09Z"
    },
    {
      "author": "237dmitry",
      "author_association": "NONE",
      "body": "> MetadataError\r\n\r\nCould not reproduce:\r\n```powershell\r\nPS> [bool] $x = $null\r\nPS> -not $x\r\nTrue\r\n\r\nPS> [int] $a, [bool] $b = @()\r\nPS> $a; $b\r\n0\r\nFalse\r\n\r\nPS> [int] $a, [bool] $b = (,$false) * 0x2\r\nPS> $a; $b\r\n0\r\nFalse\r\n\r\nPS> [int] $a = [bool] $b = $false\r\nPS> $a; $b\r\n0\r\nFalse\r\n\r\nPS>  [string] (Get-Host).Version; $IsLinux\r\n7.1.5\r\nTrue\r\n\r\n```",
      "created_at": "2021-10-31T22:45:20Z",
      "updated_at": "2021-10-31T22:56:35Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "I am seeing this on 7.2.0-rc.1 -- is this a recent regression? /cc @daxian-dbw \r\n\r\n```\r\nPS> [bool]$a = $null\r\nMetadataError: Cannot convert value \"\" to type \"System.Boolean\". Boolean parameters accept only Boolean values and numbers, such as $True, $False, 1 or 0.\r\n```",
      "created_at": "2021-11-01T12:33:19Z",
      "updated_at": "2021-11-01T12:34:01Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "No, this is not a regression. It's the same behavior on PowerShell 7.1.x and even Windows PowerShell 5.1",
      "created_at": "2021-11-01T16:50:22Z",
      "updated_at": "2021-11-01T16:50:22Z"
    },
    {
      "author": "237dmitry",
      "author_association": "NONE",
      "body": "> It's the same behavior on PowerShell 7.1.x and even Windows PowerShell 5.1\r\n\r\nNo. In pwsh 7.1.5 and in powershell 5.1 there are not any errors:\r\n\r\n![7](https://user-images.githubusercontent.com/78153320/139713996-c789f0a1-4c29-48d7-92cf-a0f7e3fddbc8.png)\r\n![5](https://user-images.githubusercontent.com/78153320/139714038-c42e652f-5484-410a-b149-37b6605047bd.png)\r\n\r\n",
      "created_at": "2021-11-01T17:31:35Z",
      "updated_at": "2021-11-01T17:31:35Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "I see the error in PS 5.1 as well. Not sure what's going on there.\r\n\r\n```ps1\r\nPS> [bool]$a = $null\r\nCannot convert value \"\" to type \"System.Boolean\". Boolean parameters accept only Boolean values and numbers, such as\r\n$True, $False, 1 or 0.\r\nAt line:1 char:1\r\n+ [bool]$a = $null\r\n+ ~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : MetadataError: (:) [], ArgumentTransformationMetadataException\r\n    + FullyQualifiedErrorId : RuntimeException\r\n```\r\n\r\n(Though, mind you, it reads like it's interpreting the cast as a parameter declaration by the error message it gives.)\r\n\r\nI suspect the error is hidden or nonexistent when it's not declared at script or global scope... Yep. This works:\r\n\r\n```ps1\r\n& { [bool]$a = $null }\r\n```\r\n\r\nBut this does not:\r\n\r\n```ps1\r\n[bool]$a = $null\r\n```\r\n\r\nSo there's an inconsistency here dependent on scoping. I think that probably qualifies as a bug \ud83d\ude01 ",
      "created_at": "2021-11-01T17:41:32Z",
      "updated_at": "2021-11-01T17:43:53Z"
    },
    {
      "author": "237dmitry",
      "author_association": "NONE",
      "body": "> I suspect the error is hidden or nonexistent when it's not declared at script or global scope...\r\n\r\nUnexpectedly, it really is... I was wrong. I prefer to try variables in `& {...}` in order to not to breed them.",
      "created_at": "2021-11-01T17:52:15Z",
      "updated_at": "2021-11-01T17:52:15Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Yep, when running in local scope, the variable `[bool]$a` is optimized and it doesn't emit error in that case.",
      "created_at": "2021-11-01T17:52:25Z",
      "updated_at": "2021-11-01T17:52:25Z"
    }
  ],
  "created_at": "2021-10-31T19:48:53Z",
  "number": 16346,
  "state": "open",
  "title": "Assignment of $NULL to a BOOL variable does not work",
  "updated_at": "2021-11-01T17:52:25Z"
}