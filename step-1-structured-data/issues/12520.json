{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12520",
  "author": "xtqqczze",
  "body": "# PR Summary\r\n\r\n* Clarify calculation of `defaultRefAssemblies` initial list capacity.\r\n* Assert if list capacity is increased as a result of a resize.\r\n\r\n## PR Context\r\n\r\nInitDefaultRefAssemblies may initialize a list too small to hold the reference assemblies distributed with netcoreapp5.0, which may result in an expensive reallocation of the internal array.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2020-05-27T07:15:30Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Question - is there a way to verify that assertion in a way that can be tested in CI? Debug asserts are great but can cause annoying crashes which seems to be more likely to be a nuisance in a case like this.\r\n\r\nCan we add a unit test in C# to verify this instead, so we get a clear test failure without generating broken build artifacts? Doubly so if we're expecting this number to change in future, we should be very careful about using a debug assert here, which will render this functionality entirely unusable in debug builds and I'm not sure will even show up in CI at all. ",
      "created_at": "2020-05-04T15:47:04Z",
      "updated_at": "2020-05-04T15:47:04Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I guess the value depends only on .Net version and we will catch the exception only after moving to new version and only for local debug builds.\r\n\r\nAlso we can count refs at design time - see code after `# publish reference assemblies` in Build.psm1",
      "created_at": "2020-05-04T17:22:42Z",
      "updated_at": "2020-05-04T17:22:42Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMainainer, Please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2020-05-27T02:00:50Z",
      "updated_at": "2020-05-27T02:00:50Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "<!--[AutoMerge]-->\nHello @iSazonov!\n\nBecause this pull request has the `AutoMerge` label, I will be glad to assist with helping to merge this pull request once all check-in policies pass.\n\n##### p.s. you can customize the way I help with merging this pull request, such as holding this pull request until a specific person approves. Simply @mention me (`@msftbot`) and give me an instruction to get started! Learn more [here](https://github.com/microsoft/fluentui/wiki/Advanced-auto-merge).",
      "created_at": "2020-05-27T07:15:26Z",
      "updated_at": "2020-05-27T07:15:26Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.1.0-preview.4` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.1.0-preview.4)\n",
      "created_at": "2020-06-25T19:05:41Z",
      "updated_at": "2020-06-25T19:05:41Z"
    }
  ],
  "created_at": "2020-04-29T15:04:16Z",
  "number": 12520,
  "state": "closed",
  "title": "Clarify defaultRefAssemblies list capacity in AddType.cs",
  "updated_at": "2020-06-25T19:05:41Z"
}