{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6493",
  "author": "mklement0",
  "body": "`cmd.exe` shows the target paths of symlinks by default when you use `dir`; e.g., assuming a directory with directory symlink `tf.l`, file symlink `tl.txt`, and (directory) junction `tmp.j`, `dir` will show:\r\n\r\n```none\r\n Directory of C:\\Users\\jdoe\\foo\r\n\r\n03/23/2018  04:50 PM    <SYMLINKD>     tf.l [tf]\r\n03/23/2018  04:49 PM    <SYMLINK>      tl.txt [t.txt]\r\n04/06/2017  02:07 PM    <JUNCTION>     tmp.j [\\??\\C:\\tmp]\r\n```\r\n\r\nBy contrast, PowerShell:\r\n\r\n* doesn't show the target pathin its default output\r\n* doesn't show the _type_ of link only `l` in the `Mode` property indicates that it is a link _in the abstract_ - though that may well be good enough\r\n\r\nGiven the importance of symlinks in the Unix world and their increasing importance on Windows, it would be convenient to include the symlink target paths:\r\n\r\nDesired behavior\r\n------------------\r\n\r\n```powershell\r\n# Emulated with the following command\r\n#    Get-ChildItem | Select-Object Mode, LastWriteTime, Length, Name, Target | Format-Table\r\n# Should be implemented analogously for Get-Item.\r\nPS> Get-ChildItem\r\n\r\nMode   LastWriteTime        Length Name   Target  \r\n----   -------------        ------ ----   ------  \r\nd----l 3/23/2018 4:50:06 PM        tf.l   {tf}    \r\nd----l 4/6/2017 2:07:17 PM         tmp.j  {C:\\tmp}\r\n-a---l 3/23/2018 4:49:21 PM 0      tl.txt {t.txt} \r\n```\r\n\r\n\r\nEnvironment data\r\n----------------\r\n\r\nWritten as of:\r\n\r\n```powershell\r\nPowerShell Core v6.0.2\r\n```\r\n",
  "closed_at": "2021-11-30T15:35:18Z",
  "comments": [
    {
      "author": "BrucePay",
      "author_association": "COLLABORATOR",
      "body": "This is really a formatting & output issue, not a cmdlet one. Since we don't currently have an `Area-FormattingAndOutput` I've changed this to be `Area-Engine`. \r\n\r\nTo fix this, the default formatting for `FileInfo` should be updated to include information about symbolic links and their targets. Now adding an extra field `Target` to the default output that will be empty most of the time seems inefficient so perhaps we can do what `ls -l` on *nix does and display something like\r\n```\r\nlrwxrwxrwx 1 root root    8 Mar 26 10:43 link.txt -> target.txt\r\n```\r\nAlso note the 'l' in the mode field indicating a symbolic link. We set a symlink indication on 5.1 but apparently not on 6.0.2. And even on 5.1, the flag seems to be in the wrong place. On *nix it occupies the directory flag position (left-most bit). On 5.1, it is the right most bit. (I'm not sure if this is deliberate or a bug...)\r\n",
      "created_at": "2018-03-26T18:02:13Z",
      "updated_at": "2018-03-26T18:02:13Z"
    },
    {
      "author": "DHowett",
      "author_association": "NONE",
      "body": "I think this is deliberate on 5.1: On Windows, `l` represents that a filesystem item is a _reparse point_ (superset of symbolic link).\r\nIt looks like 6.x does the same thing here for Windows reparse points and symbolic links on OS X/Linux.\r\n\r\nUnequivocally querying Target may be expensive on Windows. Since symbolic links and junctions _are_ reparse points, they must be opened with `FILE_FLAG_OPEN_REPARSE_POINT` and the reparse point read and parsed. For things like OneDrive or GVFS, this might fault the file and force a network request/download even if the reparse point does not represent a symbolic link.",
      "created_at": "2018-03-28T05:02:35Z",
      "updated_at": "2018-03-28T05:03:32Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@mklement0 Can we close as fixed?",
      "created_at": "2021-11-30T15:15:56Z",
      "updated_at": "2021-11-30T15:15:56Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Yes.\r\n\r\nAs of PowerShell Core 7.2.0, calling `Get-ChildItem` in the presence of the reparse points in the OP now yields the following output, showing that the reparse-point / symlink target is displayed as part of the `Name` display column (As before, `Mode` only shows `l` as an abstract indicator, without identifying the specific type of reparse point, which should be sufficient, however):\r\n\r\n```none\r\n    Directory: C:\\Users\\jdoe\r\n\r\nMode                 LastWriteTime         Length Name\r\n----                 -------------         ------ ----\r\nl----          11/30/2021 10:30 AM                tf.j -> c:\\tmp\r\nl----          11/30/2021 10:29 AM                tf.l -> tf\r\nla---          11/30/2021 10:29 AM              0 tl.txt -> t.txt\r\n```\r\n",
      "created_at": "2021-11-30T15:35:18Z",
      "updated_at": "2021-11-30T15:35:18Z"
    }
  ],
  "created_at": "2018-03-25T12:38:07Z",
  "number": 6493,
  "state": "closed",
  "title": "Add symlink target information to the default output format of Get-ChildItem / Get-Item",
  "updated_at": "2021-11-30T15:35:18Z"
}