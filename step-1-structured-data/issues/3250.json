{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3250",
  "author": "charub",
  "body": "Resolving #3242\r\n\r\nAt this point, user account is created even if some error happens while\r\nuser attributes assignment (like setting password). The cmdlet throws a\r\nnon-terminating error but ends up creating the user. This behavior is\r\nconfusing. As per the changes, the localuser account will be rolled back\r\nif there is any error in user attributes assignment.\r\n\r\n",
  "closed_at": "2017-03-09T17:25:47Z",
  "comments": [
    {
      "author": "mirichmo",
      "author_association": "MEMBER",
      "body": "@jeffbi - I added you as a reviewer in case you are curious about this change.",
      "created_at": "2017-03-03T20:34:31Z",
      "updated_at": "2017-03-03T20:34:31Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Sorry for being later. Currently [Windows API ](https://msdn.microsoft.com/en-us/library/aa746509%28v=vs.85%29.aspx)allow create an _disabled_ user account without password. Why we should require a mandatory password? We have full featured set of cmdlets to work with user accounts and can later set password and enable account.",
      "created_at": "2017-03-09T05:13:22Z",
      "updated_at": "2017-03-09T05:13:22Z"
    },
    {
      "author": "mirichmo",
      "author_association": "MEMBER",
      "body": "That isn't the correct API. It describes the ADSI LDAP provider. From the link, \"With the ADSI LDAP provider, you can only create a global user account. Local accounts reside in the SAM database and must be created using the WinNT provider. For more information about creating a user object with the WinNT provider, see WinNT User Object.\" The LocalAccounts cmdlets use the SAM API.",
      "created_at": "2017-03-09T17:24:23Z",
      "updated_at": "2017-03-09T17:25:09Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@mirichmo WinNT provider has the same behavior: we can create a user account with name only https://msdn.microsoft.com/en-us/library/aa746340(v=vs.85).aspx",
      "created_at": "2017-03-09T17:33:15Z",
      "updated_at": "2017-03-09T17:33:15Z"
    },
    {
      "author": "mirichmo",
      "author_association": "MEMBER",
      "body": "@iSazonov New-LocalUser has two parameter sets: `Password` and `NoPassword`. You can create a disabled user without a password with the `-NoPassword` and `-Disabled` flags. We chose to make `Password` the default parameter set to nudge people toward creating users with passwords. \r\n\r\nExample use: `new-localuser disabledUser -NoPassword -Disabled`\r\n\r\n```powershell\r\nPS:> glu disabledUser | fl *\r\n\r\nAccountExpires         :\r\nDescription            :\r\nEnabled                : False\r\nFullName               :\r\nPasswordChangeableDate :\r\nPasswordExpires        :\r\nUserMayChangePassword  : True\r\nPasswordRequired       : False\r\nPasswordLastSet        :\r\nLastLogon              :\r\nName                   : disabledUser\r\nSID                    : S-1-5-21-3013465294-2765102340-1036501750-14029\r\nPrincipalSource        : Local\r\nObjectClass            : User\r\n```\r\n\r\nDid I interpret your original comment correctly?",
      "created_at": "2017-03-09T17:44:56Z",
      "updated_at": "2017-03-09T17:44:56Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@mirichmo Thanks for clarify! I skip `NoPassword`. I agree with PR.",
      "created_at": "2017-03-09T18:05:33Z",
      "updated_at": "2017-03-09T18:05:33Z"
    }
  ],
  "created_at": "2017-03-03T19:29:00Z",
  "number": 3250,
  "state": "closed",
  "title": "Fix New-LocalUser cmdlet to roll back user in case of user attributes assignment failure.",
  "updated_at": "2017-03-09T18:05:33Z"
}