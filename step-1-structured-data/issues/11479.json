{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11479",
  "author": "NickCraver",
  "body": "This is a feedback/suggestion issue following some Twitter conversations about the notice presented every time a PowerShell prompt is opened on Windows. I hope this is helpful. A ton of awesome work has gone into PS Core and I'm not trying to rag on that at all. My only goal is to improve the acquisition experience for users - if we can't ship in-box then we should lower the bar as much as possible to increase adoption as much as possible.\r\n\r\nHere's what a user sees when launching (in Windows slow/fast ring builds):\r\n\r\n![Windows PowerShell Terminal](https://user-images.githubusercontent.com/454813/71727726-319a4a80-2e09-11ea-8405-28cd7f64f2b1.png)\r\n\r\nI want to call out a few specific inconsistencies and built-in assumptions of the process that follows here not as criticisms of massive effort involved, but simply advising on gaps that should get love for broader adoption and fewer user issues. Here's what a user goes through:\r\n\r\n#### Current Process\r\n1. User launches the default Windows terminal (PowerShell)\r\n   - Pointing out that _it's the default_ specifically here - this is for all non-tech users that ever need to enter a command prompt for any reason.\r\n2. \"Try the new cross-platform PowerShell https://aka.ms/pscore6\"\r\n   - Prompt goes to [Installing various versions of PowerShell](https://docs.microsoft.com/en-us/powershell/scripting/install/installing-powershell-core-on-windows?view=powershell-6) (note: not specifically PS Core 6)\r\n   - As a user, I'm likely to have immediate questions: do I need .NET Core? Makes sense I guess, it says \"PowerShell Core\".\r\n   - Overall, the doc says nothing about **why** - what am I doing here? Is this an upgrade? Only for .NET Core and such usages, other? It only covers *how* to install. The user is given no context about this change.\r\n   - This doc also has links for both legacy and PS Core versions, more confusing _unless you already know the difference_.\r\n3. Click to Windows: \"[Installing PowerShell Core on Windows](https://docs.microsoft.com/en-us/powershell/scripting/install/installing-powershell-core-on-windows?view=powershell-6)\"\r\n   - \"Install the Windows Management Framework (WMF)\" - This is phrased like I *need* to install that version for those OSes, what about others?\r\n     - Proposed clarifications: \r\n       - \"(For Windows versions prior to Windows 10) Install the [Universal C Runtime](https://www.microsoft.com/download/details.aspx?id=50410). It is available via direct download or Windows Update. Fully patched (including optional packages), supported systems will already have this installed.\"\r\n       - \"(Windows 7 and Windows Server 2008 R2 only) Install the Windows Management Framework (WMF) 4.0 or newer. For more information about WMF, see [WMF Overview](https://docs.microsoft.com/en-us/powershell/scripting/wmf/overview).\"\r\n   - Note: We came here from the Windows terminal, why did we go through the last (\"Installing various versions of PowerShell\") document? It seems like we could link directly to Windows-specific instructions.\r\n4. Go to releases: https://github.com/PowerShell/PowerShell/releases\r\n5. User has to scroll to find what the latest stable release is in a sea of previews (that'll always be the case).\r\n    - This assumes the user even knows what a stable release is. I think it's safe to assume some decent percentage of users will simply download the top/first release which may or may not be latest, stable, etc. Importantly: this page is ordered *by release date only*.\r\n    - (Quick fix) IMO This should at least link to the latest release directly: https://github.com/PowerShell/PowerShell/releases/latest\r\n     - ...or make it some direct `aka.ms` link, which would be better for automating installs and such anyway, e.g. `aka.ms/pscore6-windows-latest` (more below)\r\n6. User needs to pick the right download.\r\n   - Note: we're currently presenting a user with 23 downloads options (as of 6.2.3 - it increases to 28 in 7.x)\r\n   - For any non-technical user, this is generally going to involve flipping back to the last page to follow the paragraph of instructions needed here on finding the right file.\r\n7. User installs PS Core\r\n   - I'm intentionally not covering that in this issue and only talking about the installer acquisition here as I think there's plenty to talk about getting users to this point\r\n\r\n\r\n#### Overall Thoughts\r\n- There isn't anything in the entire path from prompt to install that gives a user any hint as to *why* they're doing this. IMO, that should be solved on whatever we link them to from the terminal prompt if this is remaining there outside Windows preview releases.\r\n- I think a general theme in this whole process/move/whatever we want to call it is that the user has context about what the heck PowerShell Core even is, and that's not a valid assumption for the vast majority of users.\r\n- I put forth that a GitHub release download page is not a friendly solution for *most* Windows users and should not continue to be used as thing we point most users to if we want to increase adoption. At several points in the process we diverge from a single platform (e.g. the terminal on Windows x64) and force the user to navigate both release cadence/timeline issues and other platforms along the way (in the install docs and then again on the GitHub releases page). This can be much better with an aka.ms link going to the current latest stable download (MSI) for the platform - or a dedicated docs page explaining the why and this link to latest. That would lower the hurdle greatly.\r\n  - Related: this latest stable link should probably come from a Microsoft download domain and not GitHub, as there are both confusion and corporate policy issues with installing releases from GitHub.\r\n- Overall, it's very raw, very \"core-y\" and makes sense for the team and (let's be honest with ourselves) likely most of the people even finding this issue - but that's not what Windows users signed up for. It's what the team is doing and what makes sense on *other* platforms, but isn't standard for Windows.\r\n\r\n\r\n#### Open Questions\r\n- Will this prompt ship in the next stable Windows release, or only the preview?\r\n  - If so, a user launching the default prompt for Windows has a very non-Windows experience going through the docs and GitHub to manually install the latest...what? Didn't they just upgrade Windows? Let's keep in mind how confusing that can be and tailor any messaging to accommodate that this isn't in a Windows update like many or most users would expect.\r\n- If yes to Windows stable release prompting - can we have a way to turn it off? Environmental variable, registry tweak, something else?\r\n- Can the latest stable be mirrored on `microsoft.com` behind a stable `aka.ms` link?\r\n  - As an example, we've given the Visual Studio, .NET, and SQL teams similar feedback and now have links to latest such as:\r\n    - VS 2019 latest: https://aka.ms/vs/16/release/vs_Professional.exe (pointed at `download.visualstudio.microsoft.com`)\r\n  - I propose something like `https://aka.ms/ps/latest/windows` (so that the terminal text that ships more slowly need not change) and possibly `https://aka.ms/ps/7/windows` for specific major versions to accompany it, for handy use by those here, Chocolatey, etc. and scripting for larger environments.\r\n  - Note: this serves as a broader use case, e.g. scripting it out...in PowerShell! As an example, the IoT section in [the installation docs](https://docs.microsoft.com/en-us/powershell/scripting/install/installing-powershell-core-on-windows?view=powershell-6) could shave a few steps off for devices with internet access.\r\n\r\n\r\nAnyway - I hope we can improve the experience for all users here and hope some of this helps. I do appreciate all of the PS Core work thus far - we're using it in builds for OSS across platforms and more. It's been a huge time saver.",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "/cc @joeyaiello @SteveL-MSFT @sdwheeler for information",
      "created_at": "2020-01-04T07:56:44Z",
      "updated_at": "2020-01-04T07:56:44Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "We also need to update the message to not be version specific",
      "created_at": "2020-01-04T11:18:19Z",
      "updated_at": "2020-01-04T11:18:19Z"
    },
    {
      "author": "doctordns",
      "author_association": "COLLABORATOR",
      "body": "with respect to the how it works today steps 3 to 6 - I just teach folks to download the Install-PowerShell script from GitHub.  \r\n\r\nI know there are loads of very cool one-liners to do this, But here is a more workmanlike and hopefully clearer version of what I use:\r\n\r\n```powershell\r\nNew-Item -Path C:\\Foo\r\nSet-Location -Path C:\\Foo\r\n$URI = \"https://aka.ms/install-powershell.ps1\"\r\nInvoke-RestMethod -Uri $URI | \r\n  Out-File -FilePath C:\\Foo\\Install-PowerShell.ps1\r\nC:\\Foo\\Install-PowerShell.ps1 -UseMSI -Quiet\r\n```\r\nFor the brave, you can specify the preview or even the daily build (not for the faint-hearted). \r\n\r\nOnce downloaded, one can then just rerun it (eg to install a new daily build).\r\n\r\n",
      "created_at": "2020-01-04T16:31:59Z",
      "updated_at": "2020-01-04T16:31:59Z"
    },
    {
      "author": "he852100",
      "author_association": "NONE",
      "body": "Suggest to add feedback link in error prompt\u3002",
      "created_at": "2020-01-05T16:24:31Z",
      "updated_at": "2020-01-05T16:24:31Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> We also need to update the message to not be version specific\r\n\r\nWe already use https://aka.ms/powershell\n\n<blockquote><img src=\"https://docs.microsoft.com/en-us/media/logos/logo-ms-social.png\" width=\"48\" align=\"right\"><div><strong><a href=\"https://docs.microsoft.com/en-us/powershell/\">PowerShell Documentation - PowerShell</a></strong></div><div>Official product documentation for PowerShell</div></blockquote>",
      "created_at": "2020-01-05T16:29:01Z",
      "updated_at": "2020-01-05T16:29:04Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "The link in WinPS should go to a landing page helping Windows PowerShell users migrate to PowerShell 7.  We'll work on this content after GA since any changes we make in WinPS won't show up to users for awhile due to Windows release cycle.",
      "created_at": "2020-01-07T18:46:09Z",
      "updated_at": "2020-01-07T18:46:09Z"
    }
  ],
  "created_at": "2020-01-03T14:51:30Z",
  "labels": [
    "Issue-Enhancement",
    "Area-Maintainers-Documentation"
  ],
  "number": 11479,
  "state": "open",
  "title": "Improving PS Core upgrade/acquisition from the Windows PowerShell prompt",
  "updated_at": "2020-12-14T20:20:16Z"
}