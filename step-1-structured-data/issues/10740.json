{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10740",
  "author": "SteveL-MSFT",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nRe-enable `Get-HotFix` cmdlet on Windows.  Since the WmiHelper class relies on WMI cmdlets, rewrote the code a bit to not use it.  Added tests that depend on Win32_QuickFixEngineering WMI class returning results.  Removed a bunch of referenced namespaces in the original source file that aren't needed as well as an old comment.\r\n\r\n## PR Context\r\n\r\nFix https://github.com/PowerShell/PowerShell/issues/2296\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [x] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [x] Issue filed: https://github.com/MicrosoftDocs/PowerShell-Docs/issues/4908\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2019-10-11T17:51:44Z",
  "comments": [
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "Should this just re-written over MMI / CIM APIs, seems simple enough? It would be like:\r\n\r\n```powershell\r\n[cimsession]::Create('localhost').QueryInstances(\"root/cimv2\", 'WQL', 'select * from Win32_QuickFixEngineering')\r\n```\r\nor \r\n\r\n```powershell\r\n[cimsession]::Create('localhost').QueryInstances(\"root/cimv2\", 'WQL', 'select * from Win32_QuickFixEngineering where hotfixid=\"KB4514359\"')\r\n```",
      "created_at": "2019-10-08T21:44:06Z",
      "updated_at": "2019-10-08T21:44:06Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@adityapatwardhan doesn't seem to provide much benefit to rewrite.  We could have rewrote it in PS6 timeframe as it would have made sense then.",
      "created_at": "2019-10-08T23:42:22Z",
      "updated_at": "2019-10-08T23:42:22Z"
    },
    {
      "author": "anmenaga",
      "author_association": "CONTRIBUTOR",
      "body": "Tiny Codacy issue in new code should be fixed.\r\n\r\nBtw, is there info on when (approximately:year/PSVersion) Get-HotFix was removed?",
      "created_at": "2019-10-10T19:03:23Z",
      "updated_at": "2019-10-10T19:03:23Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@anmenaga `Get-HofFix` was removed from PSCore6.0 because the System.Management namespace wasn't available.",
      "created_at": "2019-10-10T19:09:26Z",
      "updated_at": "2019-10-10T19:09:26Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT  Out of interest: Is there a list of issues or tags for low hanging fruits of cmdlets that can now be brought back relatively easily with .Net Core 3?",
      "created_at": "2019-10-11T19:01:20Z",
      "updated_at": "2019-10-11T19:01:40Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@bergmeister probably this one at least for Utility module: https://github.com/PowerShell/PowerShell/issues/2123, there's a few open issues on specific cmdlets.  I already have a PR open for Clipboard cmdlets.",
      "created_at": "2019-10-11T19:50:28Z",
      "updated_at": "2019-10-11T19:50:28Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Updated comment there https://github.com/PowerShell/PowerShell/issues/2123#issuecomment-341996659",
      "created_at": "2019-10-11T19:53:25Z",
      "updated_at": "2019-10-11T19:53:25Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Also DefaultCommands.Tests.ps1 is good source.",
      "created_at": "2019-10-11T19:54:46Z",
      "updated_at": "2019-10-11T19:54:46Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.0.0-preview.5` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.0.0-preview.5)\n",
      "created_at": "2019-10-23T19:08:06Z",
      "updated_at": "2019-10-23T19:08:06Z"
    }
  ],
  "created_at": "2019-10-08T20:39:47Z",
  "number": 10740,
  "state": "closed",
  "title": "Add back `Get-HotFix` cmdlet",
  "updated_at": "2019-10-23T19:08:06Z"
}