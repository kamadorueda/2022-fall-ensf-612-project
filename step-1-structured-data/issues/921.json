{
  "_url": "https://github.com/PowerShell/PowerShell/issues/921",
  "author": "andschwa",
  "body": "This breaks `Get-Item somSymbolicLinkToDirectory | Get-ChildItem`.\n## Steps to reproduce\n\n``` powershell\n> mkdir folder\n> touch folder/junk\n> touch folder/junk2\n> ln -s folder link\n> $info = Get-Item /absolute/path/to/link # or just `link`\n```\n\nThis did not repro on Full PowerShell nor on PowerShell Core on Windows; only on Linux.\n## Expected behavior\n\n``` powershell\n> $info.Target\n/absolute/path/to/folder\n\n> $info | Get-ChildItem\n\nMode                LastWriteTime         Length Name\n----                -------------         ------ ----\n------          4/27/16   1:45 PM              0 junk\n------          4/27/16   2:24 PM              0 junk2\n```\n## Actual behavior\n\n``` powershell\n> $info.Target\n./folder\n\n> $info.EnumerateFiles()\n\nMode                LastWriteTime         Length Name\n----                -------------         ------ ----\n------          4/27/16   1:45 PM              0 junk\n------          4/27/16   2:24 PM              0 junk2\n\n> $info | Get-ChildItem\n\n\n    Directory: /home/andrew/scratch\n\n\nMode                LastWriteTime         Length Name\n----                -------------         ------ ----\nd----l          4/27/16   2:24 PM                link\n```\n## Environment data\n\nPlease fill in the results of the following commands:\n\n``` sh\n$ dotnet --info\n.NET Command Line Tools (1.0.0-rc2-002478)\n\nProduct Information:\n Version:     1.0.0-rc2-002478\n Commit Sha:  80df3688b1\n\nRuntime Environment:\n OS Name:     ubuntu\n OS Version:  14.04\n OS Platform: Linux\n RID:         ubuntu.14.04-x64\n\n$ git rev-parse HEAD && git status\n1056d63fa871c6fb208490021d548faec3fb5659\nOn branch removeitem\nYour branch is up-to-date with 'origin/removeitem'.\nChanges to be committed:\n  (use \"git reset HEAD <file>...\" to unstage)\n\n        modified:   New-Item.Tests.ps1\n\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git checkout -- <file>...\" to discard changes in working directory)\n\n        modified:   New-Item.Tests.ps1\n```\n",
  "closed_at": "2016-07-01T22:41:59Z",
  "comments": [
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "While all the Lite3 tests are not in scope for conversion to Pester, @JamesWTruher is currently porting the symbolic link tests over to Pester. \n",
      "created_at": "2016-04-28T21:55:44Z",
      "updated_at": "2016-04-28T21:55:44Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "@ealexjordan, @JamesWTruher pushed some tests [here](https://github.com/PowerShell/PowerShell/tree/jimtru-linktests).\n",
      "created_at": "2016-06-10T17:27:10Z",
      "updated_at": "2016-06-10T17:27:10Z"
    },
    {
      "author": "palladia",
      "author_association": "CONTRIBUTOR",
      "body": "What is the purpose of this bug?  Is it to:\n1.  Have symbolicLink.Target return the full path?  On Linux, if you created the symbolic link using a relative path, it will store the target using relative path.  If you type \"ls -l\", you will see that the linked path is whatever path you used when you created it, even if it doesn't exist.  \n2.  Or is the problem that Get-ChildItem doesn't show files that you think should be there?  Keep in mind that on Linux, the symbolic link behaves likes a file, so Get-ChildItem should just return the link itself, not what's in the directory that the link points to.  I know on Windows, the behavior is different. \n\nWe had a similar problem when dealing with delete.  On Windows, deleting a symbolic link that points to a directory will potentially delete everything in the directory.  But on Linux, deleting the link does not affect the directory at all.\n",
      "created_at": "2016-06-10T18:09:31Z",
      "updated_at": "2016-06-10T18:09:31Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "I'm pretty sure the correct behavior of `Get-ChildItem` is to get the children, which means to recurse into the directory that the link points too. `Get-Item`'s behavior is to get just the link itself.\n\nHowever, you're right. If I make the link to an absolute path, `(Get-Item link).Target` is the absolute path; so now I'd say this is behaving correctly. Which leaves in a stranger state for `Get-ChildItem`.\n",
      "created_at": "2016-06-10T21:28:45Z",
      "updated_at": "2016-06-10T21:28:45Z"
    },
    {
      "author": "palladia",
      "author_association": "CONTRIBUTOR",
      "body": "The problem is that even though both MS Windows and Linux has something called SymbolicLink, they really behave differently, especially when it comes to links to directories.  The question is whether we should make powershell behave differently on the two platforms, or force Windows' behavior on Linux.\n\nIn your example, on Linux, doing \"ls -l link\" shows the link itself, not the content of \"folder\".  So why should Get-Childitem (aliased as dir and ls) behave differently?\n",
      "created_at": "2016-06-10T21:38:44Z",
      "updated_at": "2016-06-10T21:38:44Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "@palladia `Get-ChildItem` is _not_ `/bin/ls`, it is a PowerShell cmdlet with pre-defined behaviors that we're currently not obeying. We're not forcing Windows' behavior, we're porting PowerShell's behavior. @joeyaiello, would you agree with this assessment?\n\nAnd to the contrary, if you do `ls link`, it shows the content of the folder. It is _only_ when you do `ls -l` that the link's information is shown.\n",
      "created_at": "2016-06-10T22:42:00Z",
      "updated_at": "2016-06-10T22:42:00Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "The equivalent of `ls -l` would be, `Get-Item`.\n",
      "created_at": "2016-06-10T22:42:19Z",
      "updated_at": "2016-06-10T22:42:19Z"
    },
    {
      "author": "palladia",
      "author_association": "CONTRIBUTOR",
      "body": "Hmmm, you're right.  \"ls\" is a bit wacky then :)  You will also notice that \"ls -l folder\" does show the files of \"folder\", not the directory itself, so it isn't quite Get-Item either.\n\nSince it's ambiguous to me, I am OK if we define Get-ChildItem to follow the link on Linux.\n",
      "created_at": "2016-06-10T22:58:26Z",
      "updated_at": "2016-06-10T22:58:26Z"
    },
    {
      "author": "ealexjordan",
      "author_association": "CONTRIBUTOR",
      "body": "This is expected working windows behavior. Closing in favor of Get-ChildItem of Symbolic Link Does Not Work Outside Parent Directory #1263.\n",
      "created_at": "2016-07-01T22:41:58Z",
      "updated_at": "2016-07-01T22:41:58Z"
    }
  ],
  "created_at": "2016-04-27T21:47:40Z",
  "labels": [
    "Issue-Bug",
    "OS-Linux"
  ],
  "number": 921,
  "state": "closed",
  "title": "(Get-Item someSymbolicLink).Target is not the full path",
  "updated_at": "2016-08-17T23:51:06Z"
}