{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10814",
  "author": "SteveL-MSFT",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nAfter some discussion, we decided we want to spend more time on the design for customer facing use.  Since we need this due to issues with AzDevOps pipelines having some rendering problems, we will make it an undocumented env var for now to use internally and revisit this post PS7 as part of https://github.com/PowerShell/PowerShell/issues/10811.\r\n\r\nIntroduce `$env:__SuppressAnsiEscapeSequences` to suppress VT escape sequences in their output.  Updated `Select-String`, `ConciseView`, and `Get-Error` to respect this variable.  Also added helper to retrieve VT escape sequences.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [x] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [x] Issue filed: https://github.com/MicrosoftDocs/PowerShell-Docs/issues/4947\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2019-10-24T19:45:27Z",
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "The remaining CodeFactor issue is wrong.  Looks like it's looking at an older version of that source file.",
      "created_at": "2019-10-18T20:21:52Z",
      "updated_at": "2019-10-18T20:21:52Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Remaining Codacy issues are by-design",
      "created_at": "2019-10-18T21:25:26Z",
      "updated_at": "2019-10-18T21:25:26Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "Why not add a command line option instead?\r\n\r\nIt's somewhat common to support an option like `--color [always|auto|never]`.",
      "created_at": "2019-10-23T19:42:44Z",
      "updated_at": "2019-10-23T19:42:44Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@lzybkr This would cause this to be needed in a lot of places in testing.",
      "created_at": "2019-10-24T19:45:07Z",
      "updated_at": "2019-10-24T19:45:07Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@lzybkr you mean cmdline option to pwsh?",
      "created_at": "2019-10-24T20:43:22Z",
      "updated_at": "2019-10-24T20:43:22Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "@SteveL-MSFT - exactly. There are many tools that have such an option, mostly with the same syntax and options - here's a sampling:\r\n\r\n* [ls](https://linux.die.net/man/1/ls)\r\n* [fd](https://github.com/sharkdp/fd#command-line-options)\r\n* [git diff](https://git-scm.com/docs/git-diff#Documentation/git-diff.txt---colorltwhengt)\r\n* [ripgrep](https://github.com/BurntSushi/ripgrep)\r\n* [exa](https://github.com/ogham/exa#display-options)\r\n* [lsd](https://github.com/Peltoche/lsd)",
      "created_at": "2019-10-24T21:42:18Z",
      "updated_at": "2019-10-24T21:42:18Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.0.0-preview.6` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.0.0-preview.6)\n",
      "created_at": "2019-11-21T22:34:32Z",
      "updated_at": "2019-11-21T22:34:32Z"
    }
  ],
  "created_at": "2019-10-17T05:38:34Z",
  "number": 10814,
  "state": "closed",
  "title": "Add `$env:__SuppressAnsiEscapeSequences` to control whether to have VT escape sequence in output",
  "updated_at": "2019-11-21T22:34:32Z"
}