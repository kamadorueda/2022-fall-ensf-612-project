{
  "_url": "https://github.com/PowerShell/PowerShell/issues/14013",
  "author": "mklement0",
  "body": "## Summary of the new feature/enhancement\r\n\r\nIt would improve the end-user experience if a `Read-Host` call were allowed to _pre-fill the edit buffer_ with a default value that the user can either accept as-is or modify:\r\n\r\n```powershell\r\n# WISHFUL THINKING\r\n$var = Read-Host -Prompt 'Enter a path' -DefaultValue '/path/to/default/location'\r\n```\r\n\r\nThe user would then see:\r\n\r\n```none\r\nEnter a path: /path/to/default/location\r\n```\r\n\r\nwith the cursor at the end of the value, allowing them to press <kbd>Enter</kbd> to accept the default value as-is, or modify the value as needed.\r\n\r\n## Proposed technical implementation details\r\n\r\nIf `PSReadLine`'s `PSConsoleHostReadLine` function were to be enhanced to become a general-purpose prompting function, as proposed in [issue #881](https://github.com/PowerShell/PSReadLine/issues/881), the implementation of `-DefaultValue` could build on that.\r\n\r\nThis could also open the door for additional enhancements, such as history recall from a custom history file specified via another new parameter.\r\n\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I think it would be better to implement this in .Net Runtime. I opened an issue for this there.",
      "created_at": "2020-11-09T16:36:47Z",
      "updated_at": "2020-11-09T16:36:47Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov, you've already opened an issue there? If so, please link to it.\r\n\r\nI also wonder what support we need for hosts _other_ than the console (terminal), which would definitely have to be implemented on the PowerShell side.\r\n\r\n\r\n",
      "created_at": "2020-11-09T17:22:32Z",
      "updated_at": "2020-11-09T17:22:32Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "The issue https://github.com/dotnet/runtime/issues/800",
      "created_at": "2020-11-10T03:38:30Z",
      "updated_at": "2020-11-10T03:38:30Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks, @iSazonov, but I see nothing about the ability to pre-fill (pre-populate) the edit buffer in the linked issue, and the WinAPI's [`ReadConsole`](https://docs.microsoft.com/en-us/windows/console/readconsole) function also doesn't seem to support it,\r\n\r\n",
      "created_at": "2020-11-11T17:33:42Z",
      "updated_at": "2020-11-11T17:33:48Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@mklement0 The function uses the input buffer as edit buffer and it can be pre-populated.",
      "created_at": "2020-11-12T04:37:01Z",
      "updated_at": "2020-11-12T04:37:01Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks, @iSazonov; since I'm not familiar with the  [`ReadConsole`](https://docs.microsoft.com/en-us/windows/console/readconsole) function, let me see if my understanding is correct (happy to hide this comment once we have clarity):\r\n\r\n* You're saying that `ReadConsole`'s `lpBuffer` parameter, despite being documented as `_Out_` and only _receiving_ data, can _de facto_ also be used to pre-populate the buffer?\r\n\r\n* In other words: the documentation should be amended to note that, right?",
      "created_at": "2020-11-12T16:34:11Z",
      "updated_at": "2020-11-12T16:34:11Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@mklement0 Please look our `internal static string ReadConsole()` method and how it utilizes InitialChars.",
      "created_at": "2020-11-12T16:52:46Z",
      "updated_at": "2020-11-12T16:52:46Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks, @iSazonov. I see that you can specify an _offset_ into the buffer, so that `ReadConsole` copies input starting there, but does that mean that the function is still capable of modifying the content _before_ that offset based on user actions (which is crucial for the functionality I'm looking for)? \r\n\r\n(P.S.: There's a grammatical error in one of the variable names: `charsReaded` should be `charsRead`).",
      "created_at": "2020-11-12T17:08:23Z",
      "updated_at": "2020-11-12T17:08:23Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> but does that mean that the function is still capable of modifying the content _before_ that offset based on user actions (which is crucial for the functionality I'm looking for)?\r\n\r\nIt is my understanding how the code works: we always set the pre-populated buffer.\r\nAlso we can edit an input line on Windows :-)",
      "created_at": "2020-11-12T18:45:52Z",
      "updated_at": "2020-11-12T18:45:52Z"
    }
  ],
  "created_at": "2020-11-09T15:07:08Z",
  "labels": [
    "Issue-Enhancement",
    "WG-Cmdlets-Utility"
  ],
  "number": 14013,
  "state": "open",
  "title": "Add a parameter to Read-Host to allow prefilling the edit buffer",
  "updated_at": "2020-11-12T18:45:53Z"
}