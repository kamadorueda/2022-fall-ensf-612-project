{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11927",
  "author": "alexandair",
  "body": "Some modules in PowerShell 7 installation folder are still marked as \"Desktop\" only (see attached image). Shouldn't they all be \"Core\" or \"Desk, Core\"? \r\n\r\n<img width=\"463\" alt=\"desk_only\" src=\"https://user-images.githubusercontent.com/3135708/75093893-4fbd3500-5586-11ea-8798-abf351b76d19.png\">\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\n\u276f $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-rc.3\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-rc.3\r\nOS                             Microsoft Windows 10.0.18363\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "/cc @SteveL-MSFT @daxian-dbw @PaulHigin @anmenaga ",
      "created_at": "2020-02-22T18:08:03Z",
      "updated_at": "2020-02-22T18:08:03Z"
    },
    {
      "author": "alexandair",
      "author_association": "CONTRIBUTOR",
      "body": "Situation is not better in Azure Cloud Shell. Some of these modules are created by the PowerShell team.\r\n![image](https://user-images.githubusercontent.com/3135708/75122939-4d9cc880-56a3-11ea-8014-92fa2abccb1a.png)\r\n",
      "created_at": "2020-02-24T00:17:03Z",
      "updated_at": "2020-02-24T00:17:03Z"
    },
    {
      "author": "carlowahlstedt",
      "author_association": "NONE",
      "body": "What command are you running to get that output?",
      "created_at": "2020-02-24T14:59:05Z",
      "updated_at": "2020-02-24T14:59:05Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Some variant of `Get-Module` and/or `Get-Module -ListAvailable` I think? \ud83d\ude42 ",
      "created_at": "2020-02-24T15:19:10Z",
      "updated_at": "2020-02-24T15:19:10Z"
    },
    {
      "author": "carlowahlstedt",
      "author_association": "NONE",
      "body": "It was the second. Just FYI what macOS shows where one is something I installed specifically:\r\n![image](https://user-images.githubusercontent.com/2687687/75165786-e9085a80-56f0-11ea-9800-377c7a14834d.png)\r\n",
      "created_at": "2020-02-24T15:32:46Z",
      "updated_at": "2020-02-24T15:32:46Z"
    },
    {
      "author": "anmenaga",
      "author_association": "CONTRIBUTOR",
      "body": "This is a duplicate of  #7856\r\nIn that original issue powershell-committee decided that in cases above for modules that currently show 'Desk' (i.e. they have` CompatiblePSEditions` manifest field missing) this field should be empty.\r\nFeedback is welcome.",
      "created_at": "2020-02-24T18:27:07Z",
      "updated_at": "2020-02-24T18:27:07Z"
    },
    {
      "author": "alexandair",
      "author_association": "CONTRIBUTOR",
      "body": "@anmenaga All those modules are part of PowerShell 7. Why can't they be fixed and have a proper manifest? What to emit when the CompatilePSEditions field is missing is another issue and should be fixed too. \"Desktop\" is not the good solution.",
      "created_at": "2020-02-24T19:35:50Z",
      "updated_at": "2020-02-24T19:35:50Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "The @PowerShell/powershell-committee design at the time is that if `CompatiblePSEditions` is not there, we can only assume it is compatible with `Desktop` and not `Core` as that module manifest either predates PowerShell Core or hasn't been updated since that member was added.  We debated whether `Unknown` is better, but decided that `Desktop` (which the formatter shorthands to `Desk`) was the better solution.\r\n\r\nAs for the modules that ship with PS7, I agree that we should update those to have appropriate `CompatiblePSEditions`, however, some work on older versions of PowerShell than v5 so that manifest will make them incompatible.  In fact, I believe all of the ones in the original screenshot were intended to work all the way to v3 so they can't add that member without breaking compatibility, but perhaps it's time to do that.\r\n\r\nIn the interim, perhaps what we can do is if the module is in $PSHOME, we can show as `Core` compatible, since we know that is the case even if the `PSCompatibleEditions` is empty.",
      "created_at": "2020-02-24T20:45:23Z",
      "updated_at": "2020-02-24T20:45:23Z"
    },
    {
      "author": "doctordns",
      "author_association": "COLLABORATOR",
      "body": "I think that the modules that ship with PS7 should be properly annotated. \r\nCan't you bump the version number on those so that the 'old' module works with older versions of Windows Powershell but the newer one is for later versions?",
      "created_at": "2020-02-24T22:33:08Z",
      "updated_at": "2020-02-24T22:33:08Z"
    },
    {
      "author": "ThomasNieto",
      "author_association": "CONTRIBUTOR",
      "body": "The formatter can be updated to first check `CompatiblePSEditions` first then if not found check `PSData` for `PSEdition_Desktop` and `PSEdition_Core` tags. This allows for module authors to indicate what editions are supported without limiting the version to PS5.1+. This recommendation is on this page: https://docs.microsoft.com/en-us/powershell/scripting/gallery/concepts/module-psedition-support?view=powershell-7\r\n\r\nThis script block below updates the formatter to leverage `Tags` when `CompatiblePSEditions` is not specified. If none are found it defaults to `Desktop`.\r\n\r\n```powershell\r\n$result = [System.Collections.ArrayList]::new()\r\n$editions = $_.CompatiblePSEditions\r\n\r\nif (-not $editions)\r\n{\r\n    if ($_.PrivateData -and ($_.PrivateData.PSData.Tags -contains 'PSEdition_Desktop' -or $_.PrivateData.PSData.Tags -contains 'PSEdition_Core'))\r\n    {\r\n        $editions = @(($_.PrivateData.PSData.Tags | Where-Object {$_ -like 'PSEdition_*'}) -replace 'PSEdition_', '')\r\n    }\r\n    else {\r\n        $editions = @('Desktop')\r\n    }\r\n}\r\n\r\nforeach ($edition in $editions)\r\n{\r\n    $result += $edition.Substring(0, 4)\r\n}\r\n\r\n($result | Sort-Object) -join ','\r\n```\r\nFor example today `Pester` is marked as `Desktop` only but using this formatter it shows `Core` and `Desktop` like the module author indented.\r\n\r\n```powershell\r\n# Current\r\nPS C:\\> Get-Module -ListAvailable | Where-Object Name -eq pester | Select-Object -First 1\r\n\r\n\r\n    Directory: C:\\Program Files\\WindowsPowerShell\\Modules\r\n\r\nModuleType Version    PreRelease Name                                PSEdition ExportedCommands\r\n---------- -------    ---------- ----                                --------- ----------------\r\nScript     4.9.0                 Pester                              Desk      {Describe, Context, It, Should\u2026}\r\n\r\n\r\n# New\r\nPS C:\\> Get-Module -ListAvailable | Where-Object Name -eq pester | Select-Object -First 1\r\n\r\n\r\n    Directory: C:\\Program Files\\WindowsPowerShell\\Modules\r\n\r\nModuleType Version    PreRelease Name                                PSEdition ExportedCommands\r\n---------- -------    ---------- ----                                --------- ----------------\r\nScript     4.9.0                 Pester                              Core,Desk {Describe, Context, It, Should\u2026}\r\n```\r\n\r\n\r\n<blockquote><div><strong><a href=\"https://docs.microsoft.com/en-us/powershell/scripting/gallery/concepts/module-psedition-support\">Modules with compatible PowerShell Editions - PowerShell</a></strong></div></blockquote>",
      "created_at": "2020-02-24T23:21:49Z",
      "updated_at": "2020-02-25T16:16:13Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@ThomasNieto I believe your comment should be moved to #7856.",
      "created_at": "2020-02-25T17:27:35Z",
      "updated_at": "2020-02-25T17:27:35Z"
    },
    {
      "author": "he852100",
      "author_association": "NONE",
      "body": "Should add auto tags when publishing or force publishers to add tags.\r\n`PSEdition_Desktop``PSEdition_core``PSEdition_Windows``PSEdition_Linux``PSEdition_macos`\r\nIt is quite difficult for users to retrieve compatible modules \uff0cLinux and Windows are up to 80% incompatible!",
      "created_at": "2020-02-26T05:29:29Z",
      "updated_at": "2020-02-26T05:29:29Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@doctordns the modules shipped with PS7 are the same modules you would install from PSGallery.  So it doesn't make sense to bump the version number and modify the manifest to indicate compatibility and break use cases for downlevel PowerShells.  I think the solution here is on the client side and not in the module.",
      "created_at": "2020-02-27T20:39:06Z",
      "updated_at": "2020-02-27T20:39:06Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT I think modules _from the PowerShell repo_ (like Utility) can be fixed in manifests.",
      "created_at": "2020-02-27T20:52:18Z",
      "updated_at": "2020-02-27T20:52:18Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Yes, all modules from this repo should be fixed.",
      "created_at": "2021-01-16T06:05:58Z",
      "updated_at": "2021-01-16T06:05:58Z"
    },
    {
      "author": "rahuljamui08",
      "author_association": "NONE",
      "body": "Windows PowerShell\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nTry the new cross-platform PowerShell https://aka.ms/pscore6\r\n\r\nWarning: PowerShell detected that you might be using a screen reader and has disabled PSReadLine for compatibility purposes. If you want to re-enable it, run 'Import-Module PSReadLine'.\r\n\r\nPS C:\\Users\\STC> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      5.1.19041.610\r\nPSEdition                      Desktop\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nBuildVersion                   10.0.19041.610\r\nCLRVersion                     4.0.30319.42000\r\nWSManStackVersion              3.0\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\n\r\n\r\n\r\n\n\n<blockquote><img src=\"https://docs.microsoft.com/media/logos/logo-powershell-social.png\" width=\"48\" align=\"right\"><div><strong><a href=\"https://docs.microsoft.com/en-us/powershell/scripting/install/installing-powershell\">Installing PowerShell - PowerShell</a></strong></div><div>Where to find instruction for installing PowerShell for each of the supported platforms.</div></blockquote>",
      "created_at": "2021-02-07T15:08:10Z",
      "updated_at": "2021-02-07T15:08:12Z"
    }
  ],
  "created_at": "2020-02-22T14:18:12Z",
  "labels": [
    "Issue-Enhancement",
    "Area-Maintainers-Build"
  ],
  "number": 11927,
  "state": "open",
  "title": "[7.0.0-rc.3] Some modules installed with PowerShell 7 are still marked \"Desktop\" only",
  "updated_at": "2021-02-07T15:08:12Z"
}