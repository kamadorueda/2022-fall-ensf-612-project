{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9548",
  "author": "veleek",
  "body": "# Summary of the new feature/enhancement\r\n\r\nYou can use ValidateSet to quickly and easily add tab-completion to parameter values.  But in some cases a user wants to add tab completion for common value to help enable discoverability while still allowing the user to provide any value.\r\n\r\n# Proposed technical implementation details (optional)\r\n\r\nAdd a `SuggestedParametersAttribute` which should be defined almost identically to `ValidateSet` (including enabling generating the set using a script.  Decorating a parameter with this will enable tab-completion for that parameter, but doesn't result in any further validation.\r\n\r\n```ps\r\nfunction New-Pet\r\n{\r\n  [CmdletBinding]\r\n  param(\r\n    # Only support this fixed set of pet types \r\n    [ValidateSet(\"cat\",\"dog\",\"fish\")] $PetType,\r\n\r\n    # We provide suggestions for the common parameters, but the user\r\n    # can choose to provide whatever they want as the value.\r\n    [SuggestedSet(\"Buttons\", \"Spot\", \"Goldie\")] $PetName\r\n  )\r\n\r\n  ...\r\n}\r\n```",
  "closed_at": "2019-05-07T05:52:37Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "This already exists; it's called `[ArgumentCompleter()]` and it takes a scriptblock parameter:\r\n\r\n```powershell\r\nfunction New-Pet {\r\n    [CmdletBinding]\r\n    param(\r\n        # Only support this fixed set of pet types \r\n        [ValidateSet(\"cat\",\"dog\",\"fish\")] $PetType,\r\n\r\n        # We provide suggestions for the common parameters, but the user\r\n        # can choose to provide whatever they want as the value.\r\n        [ArgumentCompleter({\"Buttons\", \"Spot\", \"Goldie\"})] $PetName\r\n    )\r\n\r\n    \"$Petname the $PetType!\"\r\n}\r\n```\r\n\r\nYou can get pretty fancy with it, and it's not the only way to go. Some alternatives as well as a more in depth example of ArgumentCompleter can be found in my blog post here: https://vexx32.github.io/2018/11/29/Dynamic-ValidateSet/",
      "created_at": "2019-05-07T01:51:00Z",
      "updated_at": "2019-05-07T01:51:00Z"
    },
    {
      "author": "veleek",
      "author_association": "NONE",
      "body": "@vexx32 Thanks so much for the pointer.  I've literally searched for this multiple times on multiple days and have not been able to find anything.  Every single \"add tab-completion to powershell arguments\" article seems to side step this functionality.  So glad to find it already available!",
      "created_at": "2019-05-07T06:21:23Z",
      "updated_at": "2019-05-07T06:21:23Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "No worries! \r\n\r\nQuick thing I forgot to mention, you can also add these to cmdlets you *didn't* write yourself with the `Register-ArgumentCompleter` cmdlet :)",
      "created_at": "2019-05-07T10:07:21Z",
      "updated_at": "2019-05-07T10:07:21Z"
    },
    {
      "author": "veleek",
      "author_association": "NONE",
      "body": "Just wanted to add a quick follow-up for anybody else who is searching for a solution and runs into this example.  Unlike `ValidateSet`, the `ArgumentCompleter` accepts a scriptblock that should return all possible options _based on the current input_.  \r\n\r\nIf you use the simple example above:\r\n\r\n```posh\r\nparam(\r\n    ...\r\n    [ArgumentCompleter({\"Buttons\", \"Spot\", \"Goldie\"})] $PetName\r\n)\r\n```\r\n\r\nThen when if you type `New-Pet -PetName Go[TAB]` it will auto-complete to the first value in the returned set - which in this case is `Buttons`.  This is not the expected behavior for most scenarios so it can be confusing.  To get the expected behavior, you need to filter your list of results so you only return the values you want.\r\n\r\n```posh\r\nparam(\r\n    ...\r\n    [ArgumentCompleter(\r\n    {\r\n        param($Command, $Parameter, $WordToComplete, $CommandAst, $FakeBoundParams)\r\n        \"Buttons\", \"Spot\", \"Goldie\" -like \"$WordToComplete*\" \r\n    })] $PetName\r\n)\r\n```\r\n\r\nAlternatively you can simplify it a bit by using the implicitly passed `$args` variable to do the same thing.\r\n```posh\r\nparam(\r\n    ...\r\n    [ArgumentCompleter({\"Buttons\", \"Spot\", \"Goldie\" -like \"$($args[2])*\" })] $PetName\r\n)\r\n```\r\n\r\nAnd the complete working example.  Note that typing `Gold` and hitting tab will cycle through the matching values as expected.\r\n\r\n```posh\r\nfunction New-Pet {\r\n    [CmdletBinding()]\r\n    param(\r\n        # Only support this fixed set of pet types \r\n        [ValidateSet(\"Cat\",\"Dog\",\"Fish\")] $PetType,\r\n\r\n        # Provide some common values but allow the user to provide their own.\r\n        [ArgumentCompleter({\r\n            param($Command, $Parameter, $WordToComplete, $CommandAst, $FakeBoundParams)\r\n            \"Buttons\", \"Spot\", \"Goldie\", \"Golden\" -like \"$WordToComplete*\" \r\n        })] $PetName\r\n    )\r\n\r\n    \"$Petname the $PetType!\"\r\n}\r\n```",
      "created_at": "2019-05-08T00:55:50Z",
      "updated_at": "2019-05-08T00:55:50Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@veleek You could open new issue in https://github.com/MicrosoftDocs/PowerShell-Docs if you see that documentation is poor.",
      "created_at": "2019-05-08T03:43:33Z",
      "updated_at": "2019-05-08T03:43:33Z"
    }
  ],
  "created_at": "2019-05-07T00:07:41Z",
  "labels": [
    "Issue-Enhancement",
    "Resolution-Answered"
  ],
  "number": 9548,
  "state": "closed",
  "title": "Add support for tab completing common/suggested parameter values.",
  "updated_at": "2019-05-08T03:43:33Z"
}