{
  "_url": "https://github.com/PowerShell/PowerShell/issues/16516",
  "author": "rkeithhill",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nThis PR does not set -nologo as the default, instead it removes the\r\ncopyright line, the two \"how to get help\" lines and two blank lines\r\naround the \"how to get help\" lines.\r\n\r\nThe following is the resulting startup banner when there is no update available OR the user has disabled updating checking via the `POWERSHELL_UPDATECHECK` environment variable:\r\n\r\n![image](https://user-images.githubusercontent.com/5177512/143382343-dc126f36-bde6-431e-a719-07423f50770d.png)\r\n\r\ncompare this with the current startup banner:\r\n\r\n![image](https://user-images.githubusercontent.com/5177512/143382413-07447d65-10b0-4bff-8189-3010641a0f49.png)\r\n\r\nWhen there is an update available AND the user has not disabled update checking, the reduced startup banner looks like this:\r\n\r\n![image](https://user-images.githubusercontent.com/5177512/143382483-977d40c7-3842-48ba-bfad-1b56a3ba43fb.png)\r\n\r\nIf we decide that we want to keep the `Type 'help' to get help.` text, I propose something like this:\r\n\r\n![image](https://user-images.githubusercontent.com/5177512/143382548-92d419f0-4c59-4a74-baf6-0cb9573821b0.png)\r\n\r\n![image](https://user-images.githubusercontent.com/5177512/143382557-4024e655-b035-4fad-99f9-36b6399fb297.png)\r\n\r\nBTW here are some other startup banners for comparison:\r\n\r\n![image](https://user-images.githubusercontent.com/5177512/143386079-a89d6fa1-b2c1-4903-898b-fb5368b20e85.png)\r\n\r\nAs you can see, bash and nodejs have no startup banner text at all and Python's is a bit wordy.  :-)\r\n\r\n## PR Context\r\n\r\nAddresses #15644\r\n\r\nRegarding documentation impact, I think this would only impact images/text blocks where the PowerShell startup banner is shown.  But what I'm seeing so far in the online help is images of Windows PowerShell startup banner text.  @sdwheeler are there areas of the online help where PowerShell v6/7 startup banner text is shown?\r\n\r\nThis PR currently leaves the profile timing text as-is.\r\n\r\nThe PR is meant to give folks a way to test drive a reduced startup banner.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [x] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [x] Issue filed: https://github.com/MicrosoftDocs/PowerShell-Docs/issues/8476\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and opened an issue in the relevant tool repository. This may include:\r\n        - [ ] Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode\r\n        (which runs in a different PS Host).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n",
  "closed_at": "2022-01-10T23:08:00Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Convert to draft until PowerShell Committee conclusion.",
      "created_at": "2021-11-25T08:03:21Z",
      "updated_at": "2021-11-25T08:03:21Z"
    },
    {
      "author": "sdwheeler",
      "author_association": "COLLABORATOR",
      "body": "There are 3 articles:\r\n- [about_pwsh](https://docs.microsoft.com/powershell/module/microsoft.powershell.core/about/about_pwsh) - documents `-NoLogo` but does not show an example\r\n- [about_environment_variables](https://docs.microsoft.com/powershell/module/microsoft.powershell.core/about/about_environment_variables) - documents `$env:POWERSHELL_UPDATECHECK` but not really affected by this PR\r\n- [about_update_notifications](https://docs.microsoft.com/powershell/module/microsoft.powershell.core/about/about_update_notifications) - documents how Update Notification works but not really affected by this PR\r\n",
      "created_at": "2021-11-25T14:09:51Z",
      "updated_at": "2021-11-25T14:09:51Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as stale because it has been marked as requiring author feedback but has not had any activity for **15 days**. It will be closed if no further activity occurs **within 10 days of this comment**.",
      "created_at": "2021-12-14T11:00:44Z",
      "updated_at": "2021-12-14T11:00:44Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@rkeithhill would you mind adding a test?",
      "created_at": "2021-12-15T20:56:30Z",
      "updated_at": "2021-12-15T20:56:30Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee reviewed this, we are ok taking this PR with just the `PowerShell <version>` logo and getting user feedback.  We still need to follow-up with Microsoft to ensure we are ok without the copyright notice, but that's something we can address later and doesn't block this PR.",
      "created_at": "2021-12-15T23:19:17Z",
      "updated_at": "2021-12-15T23:19:17Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT I can add look at adding a test.  Are there any existing tests for the startup banner text?",
      "created_at": "2021-12-16T01:19:45Z",
      "updated_at": "2021-12-16T01:19:45Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@rkeithhill We have xUnit tests in test_CommandLineParser.cs. You could add new tests in the file.",
      "created_at": "2021-12-16T03:48:31Z",
      "updated_at": "2021-12-16T03:48:31Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> @PowerShell/powershell-committee reviewed this, we are ok taking this PR with just the `PowerShell <version>` logo and getting user feedback. We still need to follow-up with Microsoft to ensure we are ok without the copyright notice, but that's something we can address later and doesn't block this PR.\r\n\r\nThere is a related problems with \"<version>\". I'd ask the team and PowerShell Committee to look https://github.com/PowerShell/PowerShell/issues/15607#issuecomment-985368909 so that we could continue with #15603.",
      "created_at": "2021-12-16T03:57:49Z",
      "updated_at": "2021-12-16T03:57:49Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2021-12-24T02:00:48Z",
      "updated_at": "2021-12-24T02:00:48Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT  I think the best place for tests is in `ConsoleHost.Tests.ps1`.  However, I'm a bit stumped on how to test this.  All of the other tests in this file appear to use either `-File` or `-Command` in order to run pwsh, execute script, exit and capture the output.  In those cases, no startup banner is output.  If you run without those parameters, you get the startup banner in the new pwsh session but that session doesn't exit and getting the startup banner text from that session isn't exactly straightforward.",
      "created_at": "2021-12-24T19:12:06Z",
      "updated_at": "2021-12-24T19:12:06Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@rkeithhill I still think we can place tests in test_CommandLineParser.cs\r\nIf you want a script test you could look how we use New-TestHost in tests.",
      "created_at": "2021-12-24T19:21:58Z",
      "updated_at": "2021-12-24T19:21:58Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov I don't see how `New-TestHost` helps.  That host will have its own host startup text (likely none at all) and would not be testing `Microsoft.PowerShell.ConsoleHost` start up, which is what displays the modified startup banner text.  This is a similar situation to the VSCode extension host which has its own startup banner text.  And AFAICT, `test_CommandLineParser.cs` is testing just the parsing of command line parameters and not any output from actually starting the PowerShell host.  This PR doesn't change any of the PowerShell.exe parameter parsing behavior.  ",
      "created_at": "2021-12-24T19:42:21Z",
      "updated_at": "2021-12-24T22:56:14Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@rkeithhill I say about `emulation`. You could call `ShowErrorHelpBanner`. It has `hostUI` parameter (you can use our test console) and `bannerText` (you could use `ShellBannerNonWindowsPowerShell` format string for it).\r\nOtherwise you have to grab the real pwsh output but I don't know how to do it without a test hook.\r\n",
      "created_at": "2021-12-25T08:54:29Z",
      "updated_at": "2021-12-25T08:54:29Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "In other words, it is easier to test the banner itself than the host.",
      "created_at": "2021-12-25T16:36:46Z",
      "updated_at": "2021-12-25T16:36:46Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2022-01-02T02:00:45Z",
      "updated_at": "2022-01-02T02:00:45Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "Waiting on test. ",
      "created_at": "2022-01-03T19:24:11Z",
      "updated_at": "2022-01-03T19:24:11Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "@adityapatwardhan I need some guidance on how to test this?  Using a different host i.e., test host isn't really testing **the** msh host's startup banner text.  And as I mentioned above, testing pwsh in a way that executes a command/file does not output banner text at all.  And while running pwsh.exe without -command/-file outputs startup banner text, it does so in a different process.",
      "created_at": "2022-01-03T19:34:41Z",
      "updated_at": "2022-01-03T19:34:41Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "I have a \"creative\" solution. :P. Dont know if it will be stable enough in CI.\r\n\r\n```powershell\r\n$p = Start-Process -FilePath pwsh.exe -RedirectStandardOutput .\\op.txt -PassThru -NoNewWindow ; start-sleep -Seconds 3 ; Stop-Process $p; Get-Content .\\op.txt\r\n\r\nPowerShell 7.2.1\r\nCopyright (c) Microsoft Corporation.\r\n\r\nhttps://aka.ms/powershell\r\nType 'help' to get help.\r\n```",
      "created_at": "2022-01-03T19:57:35Z",
      "updated_at": "2022-01-03T19:57:35Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "FYI, I'm trying to sort out the Linux Pester test failure but the line number the log shows seems odd.  Anyway, trying to build & run my tests on WSL/Ubuntu to see if I can repro locally.",
      "created_at": "2022-01-07T19:31:57Z",
      "updated_at": "2022-01-07T19:32:14Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov @adityapatwardhan Any idea why I would be getting this ANSI in my output from the `Azure Pipelines / PowerShell-CI-macos` & `Azure Pipelines / PowerShell-CI-linux` tests?\r\n\r\n```\r\nWARNING: pwsh output is: 'PowerShell 7.3.0-preview.2\\nPS /home/vsts/work/1/s> 1hexit\\n1l'\r\n```\r\nWhat's with the `1h`, extra newline and final `1l`?  I suppose I need to disable ANSI for the new pwsh process?  Now I'm wanting a `-NoAnsi` switch to pwsh.exe.  Update: ah, this seems to be `DECCKM` enable/disable.",
      "created_at": "2022-01-07T23:17:47Z",
      "updated_at": "2022-01-07T23:24:04Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@rkeithhill You could set env variable TERM=dumb to disable VT mode.",
      "created_at": "2022-01-08T11:53:11Z",
      "updated_at": "2022-01-08T11:53:26Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov Thanks but I've found something that works.  I'm not keen to set the TERM=dumb on the Pester process side.  And doing it in the new pwsh process isn't much different than my current fix which is to first execute: `$PSStyle.OutputRendering = 'PlainText'`. ",
      "created_at": "2022-01-08T19:19:23Z",
      "updated_at": "2022-01-08T19:19:23Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "TERM=dumb turns off DECCKM too and simplify the test code.",
      "created_at": "2022-01-09T07:12:07Z",
      "updated_at": "2022-01-09T07:12:07Z"
    },
    {
      "author": "pull-request-quantifier[bot]",
      "author_association": "NONE",
      "body": "### ![](https://img.shields.io/static/v1?label=Quantified&message=Small&color=green)\r\n\r\nThis PR has `52` quantified lines of changes. In general, a change size of upto `200` lines is ideal for the best PR experience!\r\n\r\n------\r\n\r\n<details >\r\n    <summary display=\"inline\"> <strong>Quantification details</strong></summary>\r\n    <p />\r\n\r\n```\r\nLabel      : Small\r\nSize       : +46 -6\r\nPercentile : 20.8%\r\n\r\nTotal files changed: 4\r\n\r\nChange summary by file extension:\r\n.cs : +1 -1\r\n.resx : +2 -5\r\n.ps1 : +43 -0\r\n```\r\n> Change counts above are quantified counts, based on the [PullRequestQuantifier customizations](https://github.com/microsoft/PullRequestQuantifier/blob/main/docs/prquantifier-yaml.md).\r\n    \r\n</details>\r\n\r\n\r\n<details>\r\n    <summary display=\"inline\"> <strong>Why proper sizing of changes matters</strong> </summary>\r\n    <p/>\r\n    <p/>\r\n\r\nOptimal pull request sizes drive a better predictable PR flow as they strike a\r\nbalance between between PR complexity and PR review overhead. PRs within the\r\noptimal size (typical small, or medium sized PRs) mean:\r\n\r\n- Fast and predictable releases to production:\r\n  - Optimal size changes are more likely to be reviewed faster with fewer\r\niterations.\r\n  - Similarity in low PR complexity drives similar review times.\r\n- Review quality is likely higher as complexity is lower:\r\n  - Bugs are more likely to be detected.\r\n  - Code inconsistencies are more likely to be detetcted.\r\n- Knowledge sharing is improved within the participants:\r\n  - Small portions can be assimilated better.\r\n- Better engineering practices are exercised:\r\n  - Solving big problems by dividing them in well contained, smaller problems.\r\n  - Exercising separation of concerns within the code changes.\r\n\r\n#### What can I do to optimize my changes\r\n\r\n- Use the PullRequestQuantifier to quantify your PR accurately\r\n  - Create a context profile for your repo using the [context generator](https://github.com/microsoft/PullRequestQuantifier/releases)\r\n  - Exclude files that are not necessary to be reviewed or do not increase the review complexity. Example: Autogenerated code, docs, project IDE setting files, binaries, etc. Check out the `Excluded` section from your `prquantifier.yaml` context profile. \r\n  - Understand your typical change complexity, drive towards the desired complexity by adjusting the label mapping in your `prquantifier.yaml` context profile.\r\n  - Only use the labels that matter to you, [see context specification](./docs/prquantifier-yaml.md) to customize your `prquantifier.yaml` context profile.\r\n- Change your engineering behaviors\r\n  - For PRs that fall outside of the desired spectrum, review the details and check if:\r\n    - Your PR could be split in smaller, self-contained PRs instead\r\n    - Your PR only solves one particular issue. (For example, don't refactor and code new features in the same PR).\r\n\r\n#### How to interpret the change counts in git diff output\r\n\r\n- One line was added: `+1 -0`\r\n- One line was deleted: `+0 -1`\r\n- One line was modified: `+1 -1` (git diff doesn't know about modified, it will\r\ninterpret that line like one addition plus one deletion)\r\n- Change percentiles: Change characteristics (addition, deletion, modification)\r\nof this PR in relation to all other PRs within the repository.\r\n\r\n</details>\r\n\r\n<p />\r\n\r\n------\r\n\r\nWas this comment helpful? <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoicmtlaXRoaGlsbCIsIlJlcG9zaXRvcnlMaW5rIjoiaHR0cHM6Ly9naXRodWIuY29tL1Bvd2VyU2hlbGwvUG93ZXJTaGVsbCIsIlB1bGxSZXF1ZXN0TGluayI6Imh0dHBzOi8vZ2l0aHViLmNvbS9Qb3dlclNoZWxsL1Bvd2VyU2hlbGwvcHVsbC8xNjUxNiIsIkV2ZW50VHlwZSI6IlRodW1ic1VwIn0=&amp;anonymous=True\" target=\"_blank\" title=\"Thumbs up\"><strong>:thumbsup:</strong></a> <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoicmtlaXRoaGlsbCIsIlJlcG9zaXRvcnlMaW5rIjoiaHR0cHM6Ly9naXRodWIuY29tL1Bvd2VyU2hlbGwvUG93ZXJTaGVsbCIsIlB1bGxSZXF1ZXN0TGluayI6Imh0dHBzOi8vZ2l0aHViLmNvbS9Qb3dlclNoZWxsL1Bvd2VyU2hlbGwvcHVsbC8xNjUxNiIsIkV2ZW50VHlwZSI6Ik5ldXRyYWwifQ==&amp;anonymous=True\" target=\"_blank\" title=\"Neutral\"><strong>&nbsp;:ok_hand:</strong></a> <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoicmtlaXRoaGlsbCIsIlJlcG9zaXRvcnlMaW5rIjoiaHR0cHM6Ly9naXRodWIuY29tL1Bvd2VyU2hlbGwvUG93ZXJTaGVsbCIsIlB1bGxSZXF1ZXN0TGluayI6Imh0dHBzOi8vZ2l0aHViLmNvbS9Qb3dlclNoZWxsL1Bvd2VyU2hlbGwvcHVsbC8xNjUxNiIsIkV2ZW50VHlwZSI6IlRodW1ic0Rvd24ifQ==&amp;anonymous=True\" target=\"_blank\" title=\"Thumbs down\"><strong>&nbsp;:thumbsdown:</strong></a> (<a href=\"MAILTO:prquantifier@microsoft.com\" title=\"Mail to prquantifier@microsoft.com\">Email</a>)\r\n[Customize PullRequestQuantifier](https://github.com/PowerShell/PowerShell/blob/master/.github/prquantifier.yaml) for this repository.\r\n\r\n",
      "created_at": "2022-01-09T17:46:20Z",
      "updated_at": "2022-01-09T17:46:20Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "> TERM=dumb turns off DECCKM too and simplify the test code.\r\n\r\n@iSazonov  Done.  Thanks.",
      "created_at": "2022-01-09T21:46:08Z",
      "updated_at": "2022-01-09T21:46:08Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "@adityapatwardhan This PR is ready to go (merge).",
      "created_at": "2022-01-10T19:51:39Z",
      "updated_at": "2022-01-10T19:51:39Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@rkeithhill Thank you for your contribution!",
      "created_at": "2022-01-10T23:08:22Z",
      "updated_at": "2022-01-10T23:08:22Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.3.0-preview.2` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.3.0-preview.2)\n",
      "created_at": "2022-02-24T23:33:25Z",
      "updated_at": "2022-02-24T23:33:25Z"
    },
    {
      "author": "DHowett",
      "author_association": "NONE",
      "body": "I just noticed this. _Thank you_.",
      "created_at": "2022-02-25T21:04:53Z",
      "updated_at": "2022-02-25T21:04:53Z"
    }
  ],
  "created_at": "2021-11-25T05:06:44Z",
  "number": 16516,
  "state": "closed",
  "title": "Reduce the amount of startup banner text",
  "updated_at": "2022-02-25T21:04:53Z"
}