{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6365",
  "author": "LaurentDardenne",
  "body": "Steps to reproduce\r\n------------------\r\n\r\n```powershell\r\n$ps=[powershell]::Create()\r\n\r\n$ps.IsRunspaceOwner\r\n#False\r\n\r\n$ps\r\n# \r\n# Commands            : System.Management.Automation.PSCommand\r\n# Streams             : System.Management.Automation.PSDataStreams\r\n# InstanceId          : 751da833-83c7-4577-af37-346f05251001\r\n# InvocationStateInfo : System.Management.Automation.PSInvocationStateInfo\r\n# IsNested            : False\r\n# HadErrors           : False\r\n# Runspace            : System.Management.Automation.Runspaces.LocalRunspace\r\n# RunspacePool        :\r\n# IsRunspaceOwner     : True\r\n# HistoryString       :\r\n# \r\n\r\n$ps.IsRunspaceOwner\r\n#True\r\n\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\nThe contents of the 'IsRunspaceOwner' property corresponding to the state of the associated runspace object.\r\n\r\nActual behavior\r\n---------------\r\nThe contents of the 'IsRunspaceOwner' property change after displaying the instance in the console.\r\n\r\nEnvironment data\r\n----------------\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.1\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.1\r\nOS                             Microsoft Windows 6.1.7601 S\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0, 5.0, 5.1.10032.0, 6.0.1}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "`IsRunspaceOwner` doesn't get set until the Runspace is [created](https://github.com/PowerShell/PowerShell/blob/c1c5344a8897262433141ecbc13bb06ac2c4bbef/src/System.Management.Automation/engine/hostifaces/PowerShell.cs#L1757) (using the getter is sufficient).  Seems like we should just add more documentation to this member.",
      "created_at": "2018-03-12T22:16:39Z",
      "updated_at": "2018-03-13T17:42:33Z"
    },
    {
      "author": "LaurentDardenne",
      "author_association": "NONE",
      "body": "> Seems like we should just add more documentation to this member.\r\n\r\nAlthough this seems to be an implicit behavior, could you also specify the role of this property when we  calling the Dispose() method?\r\n\r\nFor example in the following case does the call to Dispose() 'delete' the associated runspace ?\r\n```Powershell\r\n $InitialSessionState= [System.Management.Automation.Runspaces.InitialSessionState]::Create()\r\n\r\n $SessionStateCmdletEntry = New-Object System.Management.Automation.Runspaces.SessionStateCmdletEntry 'Get-ChildItem',([Microsoft.PowerShell.Commands.GetChildItemCommand]),$null\r\n $InitialSessionState.Commands.Add($SessionStateCmdletEntry)\r\n\r\n $Runspace= [RunspaceFactory]::CreateRunspace($InitialSessionState)\r\n $Runspace.Open()\r\n\r\n try {\r\n  $PS = [PowerShell]::Create()\r\n  $PS.Runspace = $Runspace\r\n  $null=$PS.AddCommand(\"Get-ChildItem\").AddParameter('Path','c:\\temp\\') \r\n  $Results = $PS.Invoke()\r\n  if ($PS.Streams.Error.Count -gt 0)\r\n  { \r\n    Write-Warning \"Erreur\"\r\n    $PS.Streams.Error \r\n  }\r\n }\r\n finally {\r\n  $PS.Dispose()\r\n }\r\n```\r\n",
      "created_at": "2018-03-13T08:29:11Z",
      "updated_at": "2018-03-13T08:29:11Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@LaurentDardenne `IsRunspaceOwner` is `$true` when there is an associated runspace.  On `Dispose()`, if `IsRunspaceOwner == true`, `Dispose()` is [called on the runspace](https://github.com/PowerShell/PowerShell/blob/c1c5344a8897262433141ecbc13bb06ac2c4bbef/src/System.Management.Automation/engine/hostifaces/PowerShell.cs#L3830)",
      "created_at": "2018-03-13T17:45:17Z",
      "updated_at": "2018-03-13T17:45:17Z"
    },
    {
      "author": "LaurentDardenne",
      "author_association": "NONE",
      "body": "Thank you.",
      "created_at": "2018-03-13T20:27:38Z",
      "updated_at": "2018-03-13T20:27:38Z"
    },
    {
      "author": "LaurentDardenne",
      "author_association": "NONE",
      "body": "@SteveL-MSFT \r\nIn case I create an instance of the Powershell class by specifying an InitialSessionState, the runspace is created internally, but the 'IsRunspaceOwner' property is not updated.\r\nIs this another behavior that is not documented or a bug?\r\n```powershell \r\ntry {\r\n  $InitialSessionState=  [System.Management.Automation.Runspaces.InitialSessionState]::Create()\r\n  \r\n $SessionStateCmdletEntry = New-Object System.Management.Automation.Runspaces.SessionStateCmdletEntry 'Get-ChildItem','Microsoft.PowerShell.Commands.GetChildItemCommand',$null\r\n $InitialSessionState.Commands.Add($SessionStateCmdletEntry)\r\n\r\n $Provider = New-Object System.Management.Automation.Runspaces.SessionStateProviderEntry 'FileSystem',([Microsoft.PowerShell.Commands.FileSystemProvider]),$null\r\n $InitialSessionState.Providers.Add($Provider)\r\n\r\n  $PS = [PowerShell]::Create($InitialSessionState)\r\n  Write-Warning \"Automatic release : $($ps.IsRunspaceOwner)\"\r\n   $PS.AddCommand(\"Get-ChildItem\") > $null\r\n   $Results = $PS.Invoke()                        \r\n  Write-Warning \"Automatic release : $($ps.IsRunspaceOwner)\"\r\n\r\n}\r\nfinally {\r\n $PS.Dispose()\r\n}\r\n#WARNING: Automatic release : False\r\n#WARNING: Automatic release : False\r\n\r\n$PS.Runspace\r\n\r\n#  Id Name            ComputerName    Type          State         Availability\r\n#  -- ----            ------------    ----          -----         ------------\r\n#   2 Runspace2       localhost       Local         Opened        Available\r\n```",
      "created_at": "2018-03-16T09:09:56Z",
      "updated_at": "2018-03-16T09:10:27Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@LaurentDardenne that seems like a bug to me.  Perhaps you can open that as a separate issue so we can use this one for the doc update?",
      "created_at": "2018-03-17T00:06:17Z",
      "updated_at": "2018-03-17T00:06:17Z"
    },
    {
      "author": "LaurentDardenne",
      "author_association": "NONE",
      "body": "See #6422\r\n\r\nSome examples in the class documentation use wrong method name :\r\n[AddArgument](https://github.com/PowerShell/PowerShell/blob/c1c5344a8897262433141ecbc13bb06ac2c4bbef/src/System.Management.Automation/engine/hostifaces/PowerShell.cs#L1328), [AddScript](https://github.com/PowerShell/PowerShell/blob/c1c5344a8897262433141ecbc13bb06ac2c4bbef/src/System.Management.Automation/engine/hostifaces/PowerShell.cs#L992).\r\n",
      "created_at": "2018-03-18T09:21:33Z",
      "updated_at": "2018-03-18T09:21:33Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "Closing this issue to track the doc bug out of PowerShell/PowerShell-Docs#3041",
      "created_at": "2018-10-31T20:41:58Z",
      "updated_at": "2018-10-31T20:41:58Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "The fix here is just a change to the `///` comments that @LaurentDardenne mentioned. Re-opening here so we can close the one on MicrosoftDocs/PowerShell#3041",
      "created_at": "2020-08-19T20:14:58Z",
      "updated_at": "2020-08-19T20:14:58Z"
    }
  ],
  "created_at": "2018-03-12T12:23:35Z",
  "number": 6365,
  "state": "open",
  "title": "S.M.A.Powershell class :  the contents of the 'IsRunspaceOwner' property change after displaying the instance in the console.",
  "updated_at": "2020-08-19T20:14:58Z"
}