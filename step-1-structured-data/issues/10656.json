{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10656",
  "author": "KirkMunro",
  "body": "# Summary of the new feature/enhancement\r\n\r\nAs a scripter,\r\nI want to use `-is` and `-isnot` when comparing a value against `$null` instead of `-eq` and `-ne`\r\nso that the comparison always works, even with collections or with types that overload the equality operator.\r\n\r\nFor reference: https://youtu.be/TJiLhRPgyq4?list=PLReL099Y5nRd04p81Q7p5TtyjCrj9tz1t&t=373\r\n\r\n# Proposed technical implementation details (optional)\r\n\r\nUpdate the implementation of the `-is` and `-isnot` operators such that they allow `$null` in addition to types on the right operand, and when comparing against null they simply use the C# `is` operator internally to perform the comparison (which they may do already, so this may be a very trivial change to make.\r\n\r\nThis change makes for a much more expressive syntax as well, which reads very well in PowerShell.\r\n\r\nHere is what I want to work once this is implemented:\r\n\r\n```powershell\r\n$x -is $null\r\n$y -isnot $null\r\n$collection | where Property -is $null\r\n$collection | where Property -isnot $null\r\n```\r\n\r\nI plan on implementing this PR as part of Hacktoberfest.",
  "closed_at": null,
  "comments": [],
  "created_at": "2019-10-01T02:28:23Z",
  "number": 10656,
  "state": "open",
  "title": "Allow `$null` on right-hand side of `-is` and `-isnot` operators.",
  "updated_at": "2019-10-01T15:08:26Z"
}