{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13054",
  "author": "Liturgist",
  "body": "## Summary of the new feature/enhancement\r\nIf there is not a definitive way to `touch` a file, there should be. I searched Issues, but did not readily see one. If there is one, please reply with the Issue or PR number.\r\n\r\nThere are a variety of solutions proposed on the Internet; some more competent than others.\r\n## Proposed technical implementation details (optional)\r\nPerhaps `Set` is not the best verb for this. I would propose:\r\n```\r\nSet-TouchFile\r\nSet-Alias -Name touch -Value Set-TouchFile -Option ReadOnly\r\n```",
  "closed_at": "2020-07-02T05:00:18Z",
  "comments": [
    {
      "author": "ThomasNieto",
      "author_association": "CONTRIBUTOR",
      "body": "If you just need to create a blank file you can use: `New-Item -Path abc.txt -Type File` ",
      "created_at": "2020-06-29T16:19:51Z",
      "updated_at": "2020-06-29T16:19:51Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "I'd probably call it something like `Update-FileDateTime` if we were to mirror `touch` as much as possible really.",
      "created_at": "2020-06-29T17:44:10Z",
      "updated_at": "2020-06-29T17:44:10Z"
    },
    {
      "author": "Liturgist",
      "author_association": "NONE",
      "body": "> If you just need to create a blank file you can use: `New-Item -Path abc.txt -Type File`\r\n\r\nThat would only be a partial solution.",
      "created_at": "2020-06-29T18:31:17Z",
      "updated_at": "2020-06-29T18:31:17Z"
    },
    {
      "author": "Liturgist",
      "author_association": "NONE",
      "body": "> I'd probably call it something like `Update-FileDateTime` if we were to mirror `touch` as much as possible really.\r\n\r\nThat name could be used. But, to me the verb Update implies that something exists to be updated. If it does not exist, `touch` creates a new file.",
      "created_at": "2020-06-29T18:36:10Z",
      "updated_at": "2020-06-29T18:36:10Z"
    },
    {
      "author": "Liturgist",
      "author_association": "NONE",
      "body": "Would this work on any provider other than FileSystem?\r\n\r\n```\r\nfunction touch {\r\n    Param(\r\n        [Parameter(Mandatory=$true)]\r\n        [string]$Path\r\n    )\r\n\r\n    if (Test-Path -LiteralPath $Path) {\r\n        (Get-Item -Path $Path).LastWriteTime = Get-Date\r\n    } else {\r\n        New-Item -Type File -Path $Path\r\n    }\r\n}\r\n```",
      "created_at": "2020-06-29T18:41:06Z",
      "updated_at": "2020-06-29T18:41:06Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Not unless that provider also has a LastWriteTime property on its returned objects that is settable.\r\n\r\nI'm also not sure if the .NET objects used for the filesystem provider even support setting the last write time / will persist that change to disk.",
      "created_at": "2020-06-29T18:51:36Z",
      "updated_at": "2020-06-29T18:51:36Z"
    },
    {
      "author": "Liturgist",
      "author_association": "NONE",
      "body": "@vexx32 , it works on Windows PowerShell 5.1. I have not yet tried it on PowerShell Core.",
      "created_at": "2020-06-29T20:54:05Z",
      "updated_at": "2020-06-29T20:54:05Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": ".NET Core supports setting `LastAccessTime` and `LastWriteTime` - https://docs.microsoft.com/en-us/dotnet/api/system.io.filesysteminfo.lastwritetime?view=netcore-3.1\r\n\r\n<blockquote><img src=\"https://docs.microsoft.com/en-us/media/logos/logo-ms-social.png\" width=\"48\" align=\"right\"><div><strong><a href=\"https://docs.microsoft.com/en-us/dotnet/api/system.io.filesysteminfo.lastwritetime\">FileSystemInfo.LastWriteTime Property (System.IO)</a></strong></div><div>Gets or sets the time when the current file or directory was last written to. </div></blockquote>",
      "created_at": "2020-06-30T01:31:38Z",
      "updated_at": "2020-06-30T01:31:46Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "A workaround for `touch` so simple in PowerShell as example above shows that no need is to add this as new cmdlet.",
      "created_at": "2020-06-30T15:11:14Z",
      "updated_at": "2020-06-30T15:11:14Z"
    },
    {
      "author": "ThomasNieto",
      "author_association": "CONTRIBUTOR",
      "body": "Related discussion about touch functionality (update LastWriteTime or create file) #11677",
      "created_at": "2020-06-30T19:21:19Z",
      "updated_at": "2020-06-30T19:21:19Z"
    },
    {
      "author": "HumanEquivalentUnit",
      "author_association": "CONTRIBUTOR",
      "body": "See also: https://github.com/PowerShell/PowerShell/issues/8621\r\n\r\n@Liturgist switching between `LiteralPath` and `Path` in your code could be a bug - the file you test, and the file(s) whose datetime you update might be different.",
      "created_at": "2020-06-30T20:22:23Z",
      "updated_at": "2020-06-30T20:22:23Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as duplicate and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2020-07-02T05:00:16Z",
      "updated_at": "2020-07-02T05:00:16Z"
    }
  ],
  "created_at": "2020-06-29T15:01:44Z",
  "number": 13054,
  "state": "closed",
  "title": "Create a `touch` equivalent in pwsh",
  "updated_at": "2020-07-02T05:00:18Z"
}