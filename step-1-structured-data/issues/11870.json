{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11870",
  "author": "iSazonov",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nFix #11869\r\n\r\n## PR Context\r\n\r\n<!-- Provide a little reasoning as to why this Pull Request helps and why you have opened it. -->\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [ ] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2020-02-20T19:57:01Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Can we add a regression test?",
      "created_at": "2020-02-18T17:38:16Z",
      "updated_at": "2020-02-18T17:38:16Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> Can we add a regression test?\r\n\r\nRepo steps in original issue are too expensive/tricky. I don't know how create simple test.",
      "created_at": "2020-02-18T17:41:57Z",
      "updated_at": "2020-02-18T17:41:57Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov  I agree.  The original repro is too complex.  It is unusual to not have a running pipeline and runspace, but engine events is one case.  Another case might be Action script blocks on debugger breakpoints, but I don't think it is worth searching for another repro.",
      "created_at": "2020-02-18T17:48:04Z",
      "updated_at": "2020-02-18T17:48:04Z"
    },
    {
      "author": "grzegorz-wolszczak",
      "author_association": "NONE",
      "body": "Hi guys,\r\n\r\nI don't know what are your rules/policies in terms of regression tests when it comes to starting child shell in tests, but if that would not be an issue then what about a test like that :\r\n```\r\nDescribe \"Testing if having 'finally' block in Powershell.Exiting engine event throws\" {\r\n  It 'Should not throw when having finally block in Powershell.Exiting Action scriptblock' {\r\n  \r\n    # WHEN\r\n    $output = pwsh { \r\n      Register-EngineEvent -SourceIdentifier Powershell.Exiting -Action { \r\n          try{   \r\n              try{} finally{}            \r\n          }\r\n          catch{ Write-Host \"Exception\" -Nonewline }\r\n      }            \r\n    } | Out-String\r\n  \r\n    # THEN\r\n    $output | Should -Not -BeLike \"*Exception*\"            \r\n  } \r\n} \r\n```\r\n\r\nwould that be of any use ? ",
      "created_at": "2020-02-19T07:00:13Z",
      "updated_at": "2020-02-19T09:54:03Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "We have quite a few tests that start child shells, so that shouldn't be an issue I wouldn't think. Thanks for putting that together! \ud83d\udc96 \r\n\r\nIt might be a good idea to output the exception details rather than just a string, but that's a very good start, thanks!",
      "created_at": "2020-02-19T12:22:53Z",
      "updated_at": "2020-02-19T12:22:53Z"
    },
    {
      "author": "anmenaga",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov can you please check if that [test prototype](https://github.com/PowerShell/PowerShell/pull/11870#issuecomment-588066257) can be integrated to this PR? Thank you.",
      "created_at": "2020-02-19T22:43:35Z",
      "updated_at": "2020-02-19T22:43:35Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Test was added.",
      "created_at": "2020-02-20T04:50:54Z",
      "updated_at": "2020-02-20T04:50:54Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.1.0-preview.1` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.1.0-preview.1)\n",
      "created_at": "2020-03-26T17:47:51Z",
      "updated_at": "2020-03-26T17:47:51Z"
    }
  ],
  "created_at": "2020-02-18T07:22:04Z",
  "number": 11870,
  "state": "closed",
  "title": "Fix NREs in SuspendStoppingPipeline() and RestoreStoppingPipeline()",
  "updated_at": "2020-03-26T17:47:51Z"
}