{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12710",
  "author": "BusinessDataCoach",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 and PowerShell 7+ issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6).\r\n\r\n-->\r\nI am trying to map network drives to local machine drives, and my current code creates the connection in PowerShell but the mapped drive does not show up in File Explorer. As I am able to inspect the content of the mapped drive in PowerShell I am confident that this is not a credentials problem. The code does execute and create the requested drive. It is however not showing up in File Explorer and all the tips I have found to resolve the problem do not solve the problem for me.\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\n$username = \"localhost\\Steven\"\r\n$password = Get-Content 'C:\\Users\\StevenDeLandtsheer\\AQSynol.txt' | ConvertTo-SecureString\r\n$cred = New-Object -typename System.Management.Automation.PSCredential -argumentlist ($username, $password)\r\n. New-PSDrive -Name \"Z\" -PSProvider FileSystem -Root \"\\\\10.0.0.7\\Bedrijf\" -Scope global -Persist -Credential $cred\r\n```\r\nI have found similar issues but none have provided me a clue on what might go wrong here or how to pinpoint the root cause of the problem.\r\n\r\n# Expected behavior\r\nAccording to the documentation a persistent locally mapped drive should be created, but that does not happen. The documentation indicates that the Persist will not work if the command is scoped locally. Therefore I used the -Scope global parameter, but this has not solved the issue.\r\n\r\n```none\r\n\r\n```\r\n\r\n# Actual behavior\r\nExecuting the commands (administrative mode) results in a confirmation of the mapped drive in PowerShell\r\n```none\r\nName           Used (GB)     Free (GB) Provider      Root                                                                     CurrentLocation\r\n----           ---------     --------- --------      ----                                                                     ---------------\r\nZ                2451,86       4693,27 FileSystem    \\\\10.0.0.7\\Bedrijf\r\n```\r\n\r\n# Environment data\r\nI have also set the ExecutionPolicy for both CurrentUser and LocalMachine to RemoteSigned.\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0\r\nOS                             Microsoft Windows 10.0.18363\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n        Scope ExecutionPolicy\r\n        ----- ---------------\r\nMachinePolicy       Undefined\r\n   UserPolicy       Undefined\r\n      Process       Undefined\r\n  CurrentUser    RemoteSigned\r\n LocalMachine    RemoteSigned\r\n```\r\n",
  "closed_at": "2020-05-27T13:15:16Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I see such drive in Explorer under `Network Locations` below `Devices and Drives`.",
      "created_at": "2020-05-19T04:11:03Z",
      "updated_at": "2020-05-19T04:11:03Z"
    },
    {
      "author": "BusinessDataCoach",
      "author_association": "NONE",
      "body": "The problem I have is that I would like to create stable mapped drives on my computer. I can do this in explorer by mapping those drives (to a Synology device) but as this device is not in a domain I use the Synology account to make the mapping. That works, but each time I start my machine I need to provide the (Synology account) password again. To avoid this I wanted to use this script to automate the login process.\r\nThe script I wrote does this within the PowerShell environment, but not on the level of the OS, although the documentation clearly states this is possible. So what is wrong in my approach or what could I do to pinpoint the root cause of the failure?",
      "created_at": "2020-05-19T07:21:56Z",
      "updated_at": "2020-05-19T07:21:56Z"
    },
    {
      "author": "BusinessDataCoach",
      "author_association": "NONE",
      "body": "I checked and the script did not the drive in the Network Locations. The Synology NAS device is there, but not the intended mapped drive.",
      "created_at": "2020-05-19T07:23:34Z",
      "updated_at": "2020-05-19T07:23:34Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "You mention \"administrative mode\"; please note that an elevated process has separate drive mappings from a non-elevated one, even for the same account. To put it differently: a drive mapped in an elevated (run-as-admin) session won't be seen when the same user runs non-elevated - this behavior applies at the system level, and PowerShell has no control over it.",
      "created_at": "2020-05-21T12:57:04Z",
      "updated_at": "2020-05-21T12:57:04Z"
    },
    {
      "author": "BusinessDataCoach",
      "author_association": "NONE",
      "body": "Thanks for the last comment!\r\nThe root cause of the problem was indeed that I was running this script in PowerShell administrative mode. As soon as I ran the exact same script as  a non-elevated process the drive mappings were visible and functioning perfectly.",
      "created_at": "2020-05-27T13:15:16Z",
      "updated_at": "2020-05-27T13:15:16Z"
    }
  ],
  "created_at": "2020-05-18T13:47:50Z",
  "number": 12710,
  "state": "closed",
  "title": "New-PSDrive does not create mapped network drives.",
  "updated_at": "2020-05-27T17:07:57Z"
}