{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13101",
  "author": "kvprasoon",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 and PowerShell 7+ issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6).\r\n\r\n-->\r\n\r\n## Steps to reproduce\r\n\r\n```powershell\r\nStart-Process cmd -NoNewWindow\r\n```\r\nor\r\n```powershell\r\nStart-Process pwsh -NoNewWindow\r\n```\r\nThen try writing something\r\n\r\n## Expected behavior\r\n\r\n```none\r\nUser should be able to type properly\r\n```\r\n\r\n## Actual behavior\r\n\r\n```none\r\nBehaves like having multiple prompts and input goes partially on each.\r\n\r\n```\r\n\r\n## Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.0-preview.4\r\nPSEdition                      Core\r\nGitCommitId                    7.1.0-preview.4\r\nOS                             Microsoft Windows 10.0.17763\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u0393\u00c7\u00aa}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2021-01-17T12:42:22Z",
  "comments": [
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "> Behaves like having multiple prompts and input goes partially on each.\r\n\r\nThat's exactly what's happening though.  You'd need to add the `-Wait` parameter if you want the process to be invoked synchronously.",
      "created_at": "2020-07-04T22:03:11Z",
      "updated_at": "2020-07-04T22:03:11Z"
    },
    {
      "author": "DHowett",
      "author_association": "NONE",
      "body": "Yeah, this is definitely by design. It\u2019s like starting a background process that is vying for access to your single console window. You explicitly asked for that :smile: That\u2019s never going to be a winning combination.",
      "created_at": "2020-07-05T06:11:28Z",
      "updated_at": "2020-07-05T06:11:28Z"
    },
    {
      "author": "kvprasoon",
      "author_association": "CONTRIBUTOR",
      "body": "@SeeminglyScience , @vexx32  Thinking from a normal user's perspective its very difficult to realize what is happening.",
      "created_at": "2020-07-05T06:26:13Z",
      "updated_at": "2020-07-05T06:26:36Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "I don't entirely disagree there, but short of a breaking change to reverse the behaviour (make `-Wait` the default and add a `-NoWait` switch to opt-in to this behaviour) there isn't a meaningful change that would improve things here.\r\n\r\nPersonally I think such a change is unlikely to be accepted simply because the current behaviour has (as far as I'm aware) been in place since the creation of the cmdlet, and suddenly inverting the behaviour has the potential to break pretty much any use of Start-Process.\r\n\r\nAdditionally, there are some other cases where making `-Wait` the default is completely undesirable, especially if you're invoking a GUI application. In many / most of those cases, having `-Wait` be the default would be more confusing instead of less, as the console would completely lock up until the application is closed.",
      "created_at": "2020-07-05T06:44:24Z",
      "updated_at": "2020-07-05T06:44:24Z"
    },
    {
      "author": "kvprasoon",
      "author_association": "CONTRIBUTOR",
      "body": "not really to make `-wait` default true, but some way to make the user not to face this, a warning/error would do the job I feel.",
      "created_at": "2020-07-05T07:18:06Z",
      "updated_at": "2020-07-05T07:18:06Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "I don't know that there is any way that PowerShell itself can actually detect this. @SeeminglyScience might have some ideas there if it's doable, but this sounds squarely like the kind of thing that could only be detected from the conhost end.",
      "created_at": "2020-07-05T08:12:21Z",
      "updated_at": "2020-07-05T08:12:21Z"
    },
    {
      "author": "DHowett",
      "author_association": "NONE",
      "body": "Unfortunately, the decision as to whether conhost even gets launched happens somewhere inside kernel32 once the new process has already been started. There's nothing we can do to control the parent process's session once that happens--it's decision about how to spawn the child and whether to attach or detach it has already been made. ",
      "created_at": "2020-07-05T09:20:00Z",
      "updated_at": "2020-07-05T09:20:00Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "The only thing `Start-Process` could try to do is check which subsystem the executable targets.  If it targets the console subsystem, well even then that's not super helpful.  It would have to know:\r\n\r\n1. The executable targets the console subsystem\r\n1. Whether it will try to read input\r\n1. Whether the rest of the script after `Start-Process` will run longer than the started process\r\n1. If the above is true, if any input is read in the rest of the script\r\n\r\nI 100% get that it's confusing, I definitely hit the same thing at one point. Really though, it's doing pretty much exactly what it was asked to do.",
      "created_at": "2020-07-05T14:10:11Z",
      "updated_at": "2020-07-05T14:10:11Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Updating the `Start-Process` help topic should help: see https://github.com/PowerShell/PowerShell/issues/1543#issuecomment-448453564 and https://github.com/MicrosoftDocs/PowerShell-Docs/issues/3013",
      "created_at": "2020-07-05T15:17:51Z",
      "updated_at": "2020-07-05T15:17:51Z"
    }
  ],
  "created_at": "2020-07-04T21:21:19Z",
  "labels": [
    "Issue-Question",
    "Resolution-By Design",
    "WG-Cmdlets-Management"
  ],
  "number": 13101,
  "state": "closed",
  "title": "Not able to type properly in Console started using `Start-Process with -NoNewWindow`",
  "updated_at": "2021-01-17T12:42:31Z"
}