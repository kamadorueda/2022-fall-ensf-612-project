{
  "_url": "https://github.com/PowerShell/PowerShell/issues/8426",
  "author": "mklement0",
  "body": "## PR Summary\r\n\r\nFixes #6994, and additionally allows key `width` to be specified not just as a `[string]` (as before), but alternatively as an `[int]`, analogous to the use of `width` with `Format-Table`.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` to the beginning of the title and remove the prefix when the PR is ready.\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [x] User-facing [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed - Issue link:\r\n- **Testing - New and feature**\r\n    - [ ] Not Applicable or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n        - [ ] [Add `[feature]` if the change is significant or affects feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\r\n",
  "closed_at": "2019-01-18T19:02:23Z",
  "comments": [
    {
      "author": "stale[bot]",
      "author_association": "NONE",
      "body": "This PR has been automatically marked as stale because it has not had activity in the last 30 days. It will be closed if no further activity occurs within 10 days.\nThank you for your contributions.\nCommunity members are welcome to grab these works.\n",
      "created_at": "2019-01-08T06:26:40Z",
      "updated_at": "2019-01-08T06:26:40Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT, what will it take to get this merged? Another review, or just an act of merging by someone who's authorized?\r\n\r\nI fear that the related #8427 and #8430 are about to go stale too.",
      "created_at": "2019-01-08T09:50:38Z",
      "updated_at": "2019-01-08T09:50:38Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks, @anmenaga.\r\n\r\nI've resolved the code-style issues.\r\n\r\nUnfortunately, I haven't been able to resolve the merge conflict, and I'm at a loss as to how to do so.\r\nI've copied the changes that have since been added to the master branch to my branch, yet a conflict is still reported (I've later added a small whitespace fix).\r\n\r\nCan you help?\r\n\r\n",
      "created_at": "2019-01-17T23:26:02Z",
      "updated_at": "2019-01-17T23:26:02Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@mklement0 Please remove/reset last commits (merge resolve) - I'm afraid  that you could break something. Then you could use \"Resolve conflicts\" button in GitHub or ping me for help. \r\n\r\n```\r\n# Reset to commit \"ooooooo\"\r\ngit reset --hard ooooooo  \r\n# Remove last commit\r\ngit reset --hard HEAD~1\r\n```",
      "created_at": "2019-01-18T04:51:06Z",
      "updated_at": "2019-01-18T04:53:18Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@mklement0 Did you make a merge commit or just copy the changes across?\r\n\r\nIf the latter, make sure your master branch is up to date, change to this branch, and then `git merge master`. Resolve conflicts in your editor and make the final merge commit, then push the changes. That will usually resolve the conflict.\r\n\r\nAlso note that if you need to reset back from some commits, as Ilya mentions you may want to do, you will need a force-push to remove them from the remote once you're done.",
      "created_at": "2019-01-18T05:04:18Z",
      "updated_at": "2019-01-18T05:07:48Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "I appreciate your help, @vexx32  and @iSazonov.\r\n\r\nIndeed I hadn't merged locally and had just tried to copy the changes manually.\r\n(Merging on GitHub wasn't possible.)\r\n\r\nI've now merged locally and pushed again, which resolves the conflict.\r\n\r\nDo I still need to reset something?\r\nSeems like you could now simply squash-merge.\r\n@iSazonov, what could break?\r\n\r\n",
      "created_at": "2019-01-18T13:23:09Z",
      "updated_at": "2019-01-18T13:23:09Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "After resolving merge conflicts we have to review again.",
      "created_at": "2019-01-18T13:25:08Z",
      "updated_at": "2019-01-18T13:25:08Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@adityapatwardhan The PR is ready to merge.",
      "created_at": "2019-01-18T14:07:20Z",
      "updated_at": "2019-01-18T14:07:20Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks, @iSazonov.\r\n\r\nJust so I get it right in the future, the procedure should be:\r\n\r\n* Use GitHub's own merging feature _if available_ (it wasn't in this case).\r\n\r\n* Otherwise, merge locally first from an up-to-date master branch, then push, as per @vexx32's instructions.\r\n\r\nCorrect?",
      "created_at": "2019-01-18T15:35:17Z",
      "updated_at": "2019-01-18T15:35:38Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@mklement0 Currently GitHub \"resolve merge conflicts\" feature works very well and can be used for fast resolving simple conflicts. Large and complex conflicts we have to do locally. I guess there is many ways to do this in git. You can use a way you prefer. Usually I use `git pull --rebase PowerShell master` then follow git hints.",
      "created_at": "2019-01-18T17:08:19Z",
      "updated_at": "2019-01-18T17:08:19Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@mklement0 Could you answer @iSazonov suggestion?",
      "created_at": "2019-01-18T17:56:05Z",
      "updated_at": "2019-01-18T17:56:05Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@adityapatwardhan: \r\n\r\n@iSazonov was responding how to handle this situation _in the future_ - duly noted by me (and acknowledged with a thumbs-up).\r\n\r\nIs there something left to resolve for _this_ PR?\r\nMy (superficial) understanding is that the way I've eventually resolved the merge conflict should now allow for squash-merging.\r\n",
      "created_at": "2019-01-18T18:50:06Z",
      "updated_at": "2019-01-18T18:50:06Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@mklement0 Thanks for your contribution!",
      "created_at": "2019-01-18T19:02:45Z",
      "updated_at": "2019-01-18T19:02:45Z"
    }
  ],
  "created_at": "2018-12-08T02:12:58Z",
  "number": 8426,
  "state": "closed",
  "title": "Allow 'name' as an alias key for 'label' in ConvertTo-Html, allow the 'width'  entry to be an integer",
  "updated_at": "2019-01-18T19:02:45Z"
}