{
  "_url": "https://github.com/PowerShell/PowerShell/issues/839",
  "author": "andschwa",
  "body": "Per #814, the current work-around is untenable, and this needs to be fixed correctly.\n",
  "closed_at": "2016-06-29T19:01:10Z",
  "comments": [
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "https://github.com/dotnet/coreclr/pull/5144 unblocks us moving forward here, as soon as we can update the packages.\n\nWhile `InitializeDefaultContext` was removed, thus spawning #1019, @daxian-dbw and I believe we can continue with PowerShell's assembly intercept method by creating a custom ALC in the `powershell` shim project, using that to load `ConsoleHost`, from which all all assemblies will be loaded. Since the rest of PowerShell's assembiles will be loaded from with that particular ALC, the loading will be intercepted, and .NET Core's changes will allow us to do this regardless of the assemblies being in the TPA (and without having to use the `Resolving` event).\n",
      "created_at": "2016-06-21T17:48:56Z",
      "updated_at": "2016-06-21T17:48:56Z"
    }
  ],
  "created_at": "2016-04-13T20:55:22Z",
  "number": 839,
  "state": "closed",
  "title": "Fix AssemblyLoadContext and TPA scenario",
  "updated_at": "2016-06-29T19:01:14Z"
}