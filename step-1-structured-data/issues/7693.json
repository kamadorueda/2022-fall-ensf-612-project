{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7693",
  "author": "PlagueHO",
  "body": "\r\nSteps to reproduce\r\n------------------\r\n\r\nOn PowerShell Core 6.0.4\r\n```powershell\r\nConvertTo-Json -InputObject @{ 'abc' = \"'def'\" }\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\nWindows PowerShell 5.x returns:\r\n```none\r\n{\r\n    \"abc\":  \"\\u0027def\\u0027\"\r\n}\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\nPowerShell Core 6.0.4 returns:\r\n```none\r\n{\r\n  \"abc\": \"'def'\"\r\n}\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.4\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.4\r\nOS                             Microsoft Windows 10.0.14393\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\nThis would appear to be because the `StringEscapeHandling` setting is set to `Default` in https://github.com/PowerShell/PowerShell/blob/667175767c6a28846280d6102b4bd95f5103412b/src/Microsoft.PowerShell.Commands.Utility/commands/utility/WebCmdlet/ConvertToJsonCommand.cs#L128\r\n\r\nIf the `StringEscapeHandling` setting is set to `[Newtonsoft.Json.StringEscapeHandling]::EscapeHtml` then the JSON string that is generated matches what is returned by Windows PowerShell.\r\n\r\n![image](https://user-images.githubusercontent.com/7589164/44967263-093fd900-af94-11e8-9d40-31e5c3903485.png)\r\n\r\n\r\n",
  "closed_at": "2018-10-02T05:54:34Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@markekraus Please look the Issue.\r\n\r\nIs this a regression and should be fixed before 6.1.0 GA?\r\n\r\n/cc @SteveL-MSFT ",
      "created_at": "2018-09-03T06:39:54Z",
      "updated_at": "2018-09-03T06:43:18Z"
    },
    {
      "author": "mkht",
      "author_association": "NONE",
      "body": "Is not it a destructive change to change this behavior?\r\n\r\nHow about add parameter to change behavior like below ?\r\n\r\n```PowerShell\r\nConvertTo-Json -InputObject @{ 'abc' = \"'def'\" } -EscapeHandling Default\r\nConvertTo-Json -InputObject @{ 'abc' = \"'def'\" } -EscapeHandling EscapeNonAscii\r\nConvertTo-Json -InputObject @{ 'abc' = \"'def'\" } -EscapeHandling EscapeHtml\r\n```",
      "created_at": "2018-09-05T13:51:49Z",
      "updated_at": "2018-09-05T13:51:49Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "This has been the behavior since we changed to using NewtonSoft.JSON from the .NET Framework JSON serializer and would be a breaking change to change it back.  @mkht's suggestion to add a parameter would work and give more flexibility to the user.  However, are there other settings that should be exposed via the cmdlet?",
      "created_at": "2018-09-05T16:55:26Z",
      "updated_at": "2018-09-05T16:55:26Z"
    },
    {
      "author": "mkht",
      "author_association": "NONE",
      "body": "Confirmed NewtonSoft's [reference](https://www.newtonsoft.com/json/help/html/Properties_T_Newtonsoft_Json_JsonSerializerSettings.htm).\r\nI think that there is no other setting that needs to be exposed.\r\nOther handling settings such as `DateFormatHandling` can be replaced by formatting the properties of the object to be passed in advance.\r\n\r\nIf you are adding parameters for escape handling, it will be necessary to discuss how to do the default value.\r\nI think it should be `[Newtonsoft.Json.StringEscapeHandling]::EscapeHtml`. That's because JSON standard requires that quotation marks must be escaped. However, to avoid destructive changes, it should be `[Newtonsoft.Json.StringEscapeHandling]::Default`.",
      "created_at": "2018-09-06T13:48:19Z",
      "updated_at": "2018-09-06T13:48:19Z"
    },
    {
      "author": "mkht",
      "author_association": "NONE",
      "body": "Sorry, I had a misunderstanding.\r\n\r\nLatest JSON standard (RFC 8259) requires that the `QUOTATION MARK (U+0022)` must be escaped.\r\nBut, other quotation marks such as `RIGHT SINGLE QUOTATION MARK (U+2019)` or `APOSTROPHE (U+0027)` is not required to be.\r\nNow, I think that the default setting should be `[Newtonsoft.Json.StringEscapeHandling]::Default`.\r\n\r\nhttps://tools.ietf.org/rfc/rfc8259.txt\r\n> All Unicode characters may be placed within the quotation marks, except for the characters that MUST be escaped: quotation mark, reverse solidus, and the control characters (U+0000 through U+001F).",
      "created_at": "2018-09-06T14:09:40Z",
      "updated_at": "2018-09-06T14:09:40Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee reviewed this and agrees that `Default` should stay as default and we should expose `-EscapeHandling` as an optional parameter.",
      "created_at": "2018-09-12T22:35:55Z",
      "updated_at": "2018-09-12T22:35:55Z"
    }
  ],
  "created_at": "2018-09-03T04:11:48Z",
  "labels": [
    "Issue-Discussion",
    "Resolution-Fixed",
    "Committee-Reviewed",
    "WG-Cmdlets-Utility"
  ],
  "number": 7693,
  "state": "closed",
  "title": "ConvertTo-Json string escaped handling differs between PS and PSCore",
  "updated_at": "2018-10-30T06:00:39Z"
}