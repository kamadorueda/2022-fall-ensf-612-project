{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7866",
  "author": "logg-sar",
  "body": "Hi there\r\n\r\nmaybe I\u00b4m wrong, but for me its absurd.\r\n\r\nI would like to compare two variables. Therefore i\u00b4m using -like\r\n\r\n```\r\n$a=\"5\"\r\n$b=\"5\"\r\nif ($a -like \"*$b*\") {Write-Host equal} else {Write-Host not equal}\r\n```\r\nResults **equal** - which is correct\r\n\r\n```\r\n$a=\"5\"\r\n$b=\"1\"\r\nif ($a -like \"*$b*\") {Write-Host equal} else {Write-Host not equal}\r\n```\r\nResults **not equal** - which is correct\r\n\r\n```\r\n$a=\"5\"\r\nRemove-Variable b\r\nif ($a -like \"*$b*\") {Write-Host equal} else {Write-Host not equal}\r\n```\r\n\r\nResults **equal** - which is obviously wrong\r\n\r\nWithout the * its working\r\n```\r\n\r\n$a=\"5\"\r\nRemove-Variable b\r\nif ($a -like \"$b\") {Write-Host equal} else {Write-Host not equal}\r\n```\r\nResults **not equal** - which is correct\r\n\r\nIts my fallacy?\r\n\r\nOh\r\n\r\n $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      5.1.14393.2485\r\nPSEdition                      Desktop\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nBuildVersion                   10.0.14393.2485\r\nCLRVersion                     4.0.30319.42000\r\nWSManStackVersion              3.0\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\n\r\n",
  "closed_at": "2018-09-27T06:54:32Z",
  "comments": [
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "If `$b` is undefined (and `Set-StrictMode -Version 1` or higher is _not_ in effect), it defaults to `$null`, as any undefined variable does.\r\n\r\nIn turn, `$null` is converted to the _empty string_ in a string context (`\"...\"`).\r\n\r\nTherefore, with `$b` undefined:\r\n\r\n```powershell\r\n$a -like \"*$b*\"\r\n```\r\n\r\nis the same as:\r\n\r\n```powershell\r\n$a -like '**'\r\n```\r\n\r\nwhich is the same as \r\n\r\n```powershell\r\n$a -like '*'\r\n```\r\n\r\nwhich, as expected, is `$True` for _any_ (scalar) LHS.\r\n\r\n\r\n",
      "created_at": "2018-09-26T15:19:38Z",
      "updated_at": "2018-09-26T15:20:00Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "`-like` is a wildcard operator. `*` as a wildcard matches `zero or more characters of any kind`.\r\n\r\nso if you try `$a -like \"*$null*\"` (which is equivalent to what you are doing) you are going to get `$true`. Why? because an empty or `$null` variable interpolated into a string is... nothing. Does not change the string. As @mklement0 states, it's identical to comparing with a string of `'**'` -- the variable in the middle has no value, so when PS interprets the string, the variable disappears.",
      "created_at": "2018-09-26T15:20:53Z",
      "updated_at": "2018-09-26T15:20:53Z"
    },
    {
      "author": "logg-sar",
      "author_association": "NONE",
      "body": "Ok, got it.\r\nThank you",
      "created_at": "2018-09-27T06:54:32Z",
      "updated_at": "2018-09-27T06:54:32Z"
    }
  ],
  "created_at": "2018-09-26T14:59:58Z",
  "number": 7866,
  "state": "closed",
  "title": "Variable comparsion delivers strange results.",
  "updated_at": "2018-09-27T06:54:33Z"
}