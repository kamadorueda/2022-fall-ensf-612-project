{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6311",
  "author": "hmmwhatsthisdo",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\n- Windows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nIf it is a bug report:\r\n- make sure you are able to repro it on the latest released version. \r\nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://github.com/PowerShell/PowerShell/blob/master/docs/KNOWNISSUES.md).\r\n- Fill out the following repro template:\r\n\r\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\r\n-->\r\n\r\nWhen ACLs are deserialized after being sent over a PSRemoting session (`Invoke-Command`, etc.), the `.Access` CodeProperty on the returned ACL is reconstituted as returning a static string (with one `\"System.Security.AccessControl.FileSystemAccessRule\"` line for each ACE in the ACL).\r\n\r\nSteps to reproduce\r\n------------------\r\nFirst, acquire two computers with PSRemoting functional between the two of them.\r\n```powershell\r\n$Session = New-PSSession $RemoteComputer <# -Credential, -Authentication, etc. as needed #>\r\n$ACL = Invoke-Command -Session $Session {Get-ACL C:}\r\n$ACL.Access\r\n$ACL | Get-Member Access | % Definition\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```none\r\nPS C:\\> $ACL.Access\r\n\r\n\r\nFileSystemRights  : FullControl\r\nAccessControlType : Allow\r\nIdentityReference : NT AUTHORITY\\SYSTEM\r\nIsInherited       : False\r\nInheritanceFlags  : ContainerInherit, ObjectInherit\r\nPropagationFlags  : None\r\n\r\nFileSystemRights  : FullControl\r\nAccessControlType : Allow\r\nIdentityReference : BUILTIN\\Administrators\r\nIsInherited       : False\r\nInheritanceFlags  : ContainerInherit, ObjectInherit\r\nPropagationFlags  : None\r\n\r\nFileSystemRights  : ReadAndExecute, Synchronize\r\nAccessControlType : Allow\r\nIdentityReference : BUILTIN\\Users\r\nIsInherited       : False\r\nInheritanceFlags  : ContainerInherit, ObjectInherit\r\nPropagationFlags  : None\r\n\r\n\r\n\r\nPS C:\\> $ACL | gm Access | % Definition\r\nSystem.Security.AccessControl.AuthorizationRuleCollection Access{get=GetAccess;}\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n```none\r\nPS C:\\> $ACL.Access\r\nSystem.Security.AccessControl.FileSystemAccessRule\r\nSystem.Security.AccessControl.FileSystemAccessRule\r\nSystem.Security.AccessControl.FileSystemAccessRule\r\nPS C:\\> $ACL | gm Access | % Definition\r\nDeserialized.System.Security.AccessControl.AuthorizationRuleCollection Access=System.Security.AccessControl.FileSystemAccessRule System.Security.AccessControl.FileSystemAccessRule System.Security.AccessControl.FileSystemAccessRule\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\nThis bug was confirmed across several different Windows versions, with PoSH v5.1 and v6.0.1:\r\n- Client: Windows Server 2012R2, PoSH v5.1; Server: Windows Server 2012R2, PoSH v5.1\r\n- Client: Windows 10 1709, PoSH v5.1; Server: Windows 10 1709, PoSH v5.1\r\n- Client: Windows 10 1709, PoSH v5.1; Server: Windows Server 2016 1607, PoSH v5.1\r\n- Client: Windows 10 1709, PoSH v6.0.1; Server: Windows Server 2016 1607, PoSH v6.0.1\r\n```none\r\n> $PSVersionTable\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.1\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.1\r\nOS                             Microsoft Windows 10.0.16299\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n```none\r\n> $PSVersionTable\r\nName                           Value\r\n----                           -----\r\nPSVersion                      5.1.16299.248\r\nPSEdition                      Desktop\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nBuildVersion                   10.0.16299.248\r\nCLRVersion                     4.0.30319.42000\r\nWSManStackVersion              3.0\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\n```\r\n(Sadly, I don't have the 2012R2 `$PSVersionTable` output handy, but I don't think it's a requirement in this situation)",
  "closed_at": null,
  "comments": [
    {
      "author": "BrucePay",
      "author_association": "COLLABORATOR",
      "body": "Hi @hmmwhatsthisdo, this is a consequence of how the remoting protocol/CliXML was designed. Properties and methods are not transported over the protocol. Methods are ignored and properties (including code properties) are evaluated during serialization with the resulting data value attached to the serialized object as a data member (field). You can find more information about the remoting protocol at [MS-PSRP](https://msdn.microsoft.com/en-us/library/dd357801.aspx)",
      "created_at": "2018-03-13T01:29:25Z",
      "updated_at": "2018-03-13T01:29:25Z"
    }
  ],
  "created_at": "2018-03-05T00:22:37Z",
  "number": 6311,
  "state": "open",
  "title": "ACLs not deserialized correctly during remoting (.Access CodeProperty nonfunctional)",
  "updated_at": "2018-03-13T01:29:25Z"
}