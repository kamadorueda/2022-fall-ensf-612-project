{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15760",
  "author": "inshua",
  "body": "### Prerequisites\n\n- [X] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\n\n### Steps to reproduce\n\n`new-object SYST`em`.Text.StringBuilder`\r\ncan work on powershell 5, but failed on 7.1.3\n\n### Expected behavior\n\n```console\nPS C:\\Users\\Inshua> new-object SYST`em`.Text.StringBuilder\r\n\r\nCapacity MaxCapacity Length\r\n-------- ----------- ------\r\n      16  2147483647      0\n```\n\n\n### Actual behavior\n\n```console\nPS C:\\Users\\Inshua> new-object SYST`em`.Text.StringBuilder\r\nNew-Object: Cannot find type [SYST.Text.StringBuilder]: verify that the assembly containing this type is loaded.\n```\n\n\n### Error details\n\n_No response_\n\n### Environment data\n\n```powershell\nPS C:\\Users\\Inshua> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.3\r\nPSEdition                      Core\r\nGitCommitId                    7.1.3\r\nOS                             Microsoft Windows 10.0.19043\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\n```\n\n\n### Visuals\n\nThis command can work on system carried powershell\r\n```\r\nName                           Value\r\n----                           -----\r\nPSVersion                      5.1.19041.1023\r\nPSEdition                      Desktop\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nBuildVersion                   10.0.19041.1023\r\nCLRVersion                     4.0.30319.42000\r\nWSManStackVersion              3.0\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\n```",
  "closed_at": "2021-07-14T09:00:38Z",
  "comments": [
    {
      "author": "KalleOlaviNiemitalo",
      "author_association": "NONE",
      "body": "That happens because `` `e `` now means the ESC character.",
      "created_at": "2021-07-12T16:55:50Z",
      "updated_at": "2021-07-12T16:55:50Z"
    },
    {
      "author": "inshua",
      "author_association": "NONE",
      "body": "Yes, I find it in `tokenizer.cs`\r\n```cs\r\nprivate char Backtick(char c, out char surrogateCharacter)\r\n      {\r\n          surrogateCharacter = s_invalidChar;\r\n\r\n          switch (c)\r\n          {\r\n              case '0':\r\n                  return '\\0';\r\n              case 'a':\r\n                  return '\\a';\r\n              case 'b':\r\n                  return '\\b';\r\n              case 'e':\r\n                  return '\\u001b';    // **HERE**\r\n              case 'f':\r\n                  return '\\f';\r\n              case 'n':\r\n                  return '\\n';\r\n              case 'r':\r\n                  return '\\r';\r\n              case 't':\r\n                  return '\\t';\r\n              case 'u':\r\n                  return ScanUnicodeEscape(out surrogateCharacter);\r\n              case 'v':\r\n                  return '\\v';\r\n              default:\r\n                  return c;\r\n          }\r\n      }\r\n```",
      "created_at": "2021-07-12T17:06:24Z",
      "updated_at": "2021-07-12T17:06:24Z"
    },
    {
      "author": "KalleOlaviNiemitalo",
      "author_association": "NONE",
      "body": "The changed meaning of `` `e `` was documented in [What's New in PowerShell Core 6.0](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/626a2949ecd07085dfbe5c7f51fa8a5c450ddd65/reference/docs-conceptual/whats-new/What-s-New-in-PowerShell-Core-60.md#language-updates) but this documentation was lost in <https://github.com/MicrosoftDocs/PowerShell-Docs/pull/7756>. I think it would be good to document somewhere near [Implement Unicode escape parsing](https://docs.microsoft.com/en-us/powershell/scripting/whats-new/differences-from-windows-powershell?view=powershell-7#implement-unicode-escape-parsing), which describes `` `u ``.",
      "created_at": "2021-07-12T17:06:45Z",
      "updated_at": "2021-07-12T17:06:45Z"
    },
    {
      "author": "inshua",
      "author_association": "NONE",
      "body": "Yes, thank you @KalleOlaviNiemitalo ",
      "created_at": "2021-07-12T17:15:34Z",
      "updated_at": "2021-07-12T17:15:34Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "What exactly is the point of attempting to use:\r\n\r\n```powershell\r\nnew-object SYST`em`.Text.StringBuilder\r\n``` \r\n\r\ninstead of `new-object System.Text.StringBuilder`?",
      "created_at": "2021-07-12T17:57:50Z",
      "updated_at": "2021-07-12T17:59:57Z"
    },
    {
      "author": "inshua",
      "author_association": "NONE",
      "body": "> What exactly is the point of attempting to use:\r\n> \r\n> ```powershell\r\n> new-object SYST`em`.Text.StringBuilder\r\n> ```\r\n> \r\n> instead of `new-object System.Text.StringBuilder`?\r\n\r\nIt come from some malicious code.",
      "created_at": "2021-07-12T18:55:45Z",
      "updated_at": "2021-07-12T18:55:45Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Yeah, it's generally just used by malware trying to evade AV detection in scripts. Dunno why stringbuilder specifically would be useful, but it's a common tactic.\r\n\r\nIf you ask me, the fact that a case like this broke is probably a bonus \ud83d\ude02 ",
      "created_at": "2021-07-13T00:25:01Z",
      "updated_at": "2021-07-13T00:25:01Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as by-design and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2021-07-14T09:00:37Z",
      "updated_at": "2021-07-14T09:00:37Z"
    }
  ],
  "created_at": "2021-07-12T16:47:35Z",
  "number": 15760,
  "state": "closed",
  "title": "Escape char ` bug",
  "updated_at": "2021-07-14T09:00:38Z"
}