{
  "_url": "https://github.com/PowerShell/PowerShell/issues/16044",
  "author": "SteveL-MSFT",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nRemove use of undocumented APIs for AppExeCLinks.  Per AppX team, they have no intent of publishing structure and says users should not directly work with the target.\r\n\r\nNew behavior which seems acceptable:\r\n\r\n![image](https://user-images.githubusercontent.com/11859881/131929376-c7daa9ec-cadb-4985-8da4-8fb385a1f034.png)\r\n\r\n## PR Context\r\n\r\n<!-- Provide a little reasoning as to why this Pull Request helps and why you have opened it. -->\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and opened an issue in the relevant tool repository. This may include:\r\n        - [ ] Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode\r\n        (which runs in a different PS Host).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n",
  "closed_at": "2021-09-14T21:08:01Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Is IO_REPARSE_TAG_APPEXECLINK const itself public?\r\n\r\nI think we could add this to docs so that exclude requests from users.",
      "created_at": "2021-09-03T02:54:42Z",
      "updated_at": "2021-09-03T02:56:07Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Rather than a blank target, maybe we could insert a token such as `<AppExeLink>` to indicate what it is, so that at least users have that information and don't try to work with it like a normal symlink?",
      "created_at": "2021-09-03T02:57:37Z",
      "updated_at": "2021-09-03T02:57:37Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Really there can be _many_ reparse point tags for which .Net API return null target. So I think it is better to follow .Net API behavior.\r\n\r\nSee also https://github.com/dotnet/runtime/pull/58233#issuecomment-911971904",
      "created_at": "2021-09-03T04:18:41Z",
      "updated_at": "2021-09-03T04:18:41Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov that const is in winnt.h:\r\n\r\n![image](https://user-images.githubusercontent.com/11859881/131950576-6887a49e-4021-4d49-bad6-3c87822e11e1.png)\r\n",
      "created_at": "2021-09-03T04:28:30Z",
      "updated_at": "2021-09-03T04:28:30Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.3.0-preview.1` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.3.0-preview.1)\n",
      "created_at": "2021-12-16T20:01:09Z",
      "updated_at": "2021-12-16T20:01:09Z"
    },
    {
      "author": "sba923",
      "author_association": "CONTRIBUTOR",
      "body": "The side effect of this change is that one can no longer determine the `VersionInfo` for the AppX reparse point's target see now-broken code in my\r\n[whatis.zip](https://github.com/PowerShell/PowerShell/files/8017753/whatis.zip)\r\n ",
      "created_at": "2022-02-07T18:24:24Z",
      "updated_at": "2022-02-07T18:24:24Z"
    }
  ],
  "created_at": "2021-09-02T23:42:05Z",
  "number": 16044,
  "state": "closed",
  "title": "Remove support for AppExeCLinks to retrieve target",
  "updated_at": "2022-02-07T18:24:24Z"
}