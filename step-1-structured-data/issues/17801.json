{
  "_url": "https://github.com/PowerShell/PowerShell/issues/17801",
  "author": "dkaszews",
  "body": "### Prerequisites\r\n\r\n- [X] Write a descriptive title.\r\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- [X] Search the existing issues.\r\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\r\n\r\n### Steps to reproduce\r\n\r\nRun `Start-PSBuild` without `-Runtime` on Linux ARM, e.g. Raspberry Pi. It will successfully build, but throw a cryptic error when you try to run `pwsh`. This also breaks `Start-DevPowerShell`, as it tries always tries to run x64, even on ARM.\r\n\r\n### Expected behavior\r\n\r\n```console\r\nRuns `dotnet publish --runtime linux-arm64`\r\n```\r\n\r\n\r\n### Actual behavior\r\n\r\n```console\r\nRuns `dotnet publish --runtime linux-x64`\r\n```\r\n\r\n\r\n### Error details\r\n\r\n_No response_\r\n\r\n### Environment data\r\n\r\n```powershell\r\nName                           Value                                                                                                                                                                            \r\n----                           -----                                                                                                                                                                            \r\nPSVersion                      7.2.4                                                                                                                                                                            \r\nPSEdition                      Core                                                                                                                                                                             \r\nGitCommitId                    7.2.4                                                                                                                                                                            \r\nOS                             Linux 5.15.0-1011-raspi #13-Ubuntu SMP PREEMPT Thu Jun 2 11:44:34 UTC 2022                                                                                                       \r\nPlatform                       Unix                                                                                                                                                                             \r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}                                                                                                                                                            \r\nPSRemotingProtocolVersion      2.3                                                                                                                                                                    \r\nSerializationVersion           1.1.0.1                                                                                                                                                                          \r\nWSManStackVersion              3.0\r\n```\r\n\r\n\r\n### Visuals\r\n\r\n_No response_",
  "closed_at": "2022-08-03T19:29:24Z",
  "comments": [
    {
      "author": "dkaszews",
      "author_association": "CONTRIBUTOR",
      "body": "Faulty code:\r\n```pwsh\r\n# build.psm1:863, function New-PSOptions\r\nif (-not $Runtime) {\r\n    if ($environment.IsLinux) {     \r\n        $Runtime = \"linux-x64\"\r\n    } ...\r\n}\r\n```\r\n\r\nOn debian-family, we can run `dpkg --print-architecture` which returns `arm64` on my system, so we can do:\r\n\r\n```pwsh\r\n$defaultRuntime = 'linux-x64'\r\nif ($environment.IsDebianFamily) {\r\n    $Runtime = switch (dpkg --print-architecture) {\r\n        'arm64' { 'linux-arm64' }\r\n        'x64' { 'linux-x64' }\r\n        ...\r\n        default { Write-Warning \"Unknown architecture: '${_}', default to '${defaultRuntime}'; $defaultRuntime }\r\n    }\r\n} else {\r\n    # Add other options for detection\r\n    Write-Warning 'Cannot detect architecture on given system, default to '${defaultRuntime}'\r\n    $Runtime = $defaultRuntime\r\n}\r\n```\r\n\r\nEven better idea would be to just remove all of this from the script and use `dotnet publish --current-runtime` instead, but it is used couple times to set `$Runtime`, `$Executable` and `$Output`, so it may be difficult. But if `dotnet` can detect precise architecture, then surely we can just use it? Maybe add a field in `--info` so that `dotnet --runtime (dotnet --info | Select-String $runtimePattern)` is equivalent to `dotnet --current-runtime`. ",
      "created_at": "2022-07-29T14:19:50Z",
      "updated_at": "2022-07-30T07:40:11Z"
    },
    {
      "author": "dkaszews",
      "author_association": "CONTRIBUTOR",
      "body": "Actually, dotnet 7 provides all the info we need in `--info`:\r\n\r\n```\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  22.04\r\n OS Platform: Linux\r\n RID:         ubuntu.22.04-arm64\r\n Base Path:   /home/dkaszews/.dotnet/sdk/7.0.100-preview.6.22352.1/\r\n\r\nHost:\r\n  Version:      7.0.0-preview.6.22324.4\r\n  Architecture: arm64\r\n  Commit:       d3fa592f6d\r\n```\r\n\r\nI have tested the following to both work on my personal Ubuntu ARM64 and work Windows x64, so can replace the entire default, similarly to how Windows is detected from RID:\r\n\r\n```powershell\r\n$info = dotnet --info\r\n$platform = ($info | Select-String '^\\s*OS Platform:\\s+(\\w+)$')[0].Matches.Groups[1].Value -replace 'windows', 'win'\r\n$architecture = ($info | Select-String '^\\s*Architecture:\\s+(\\w+)$')[0].Matches.Groups[1].Value                          \r\n$runtime = \"${platform}-${architecture}\".ToLower()\r\n```\r\n\r\nCan someone please verify this on other platforms?",
      "created_at": "2022-08-02T18:47:42Z",
      "updated_at": "2022-08-02T18:50:55Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:This issue was addressed in #17818, which has now been successfully released as `v7.3.0-preview.7`.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.3.0-preview.7)\n",
      "created_at": "2022-08-11T23:57:56Z",
      "updated_at": "2022-08-11T23:57:56Z"
    }
  ],
  "created_at": "2022-07-29T13:54:54Z",
  "labels": [
    "Resolution-Fixed"
  ],
  "number": 17801,
  "state": "closed",
  "title": "`Start-PSBuild -Runtime` always defaults to x64 on Linux",
  "updated_at": "2022-08-11T23:57:56Z"
}