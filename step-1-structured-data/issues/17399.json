{
  "_url": "https://github.com/PowerShell/PowerShell/issues/17399",
  "author": "mklement0",
  "body": "### Prerequisites\n\n- [X] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\n\n### Steps to reproduce\n\nNote: This is another in a long line of parameter-parsing bugs: see https://github.com/PowerShell/PowerShell/issues?q=is%3Aissue+is%3Aopen+Parameter+parsing%2Fpassing%3A++in%3Atitle\r\n\r\nWhile passing something like `-v:diag` to a _native program_ is normally passed as-is, \r\nit is passed as _two_ arguments if it happens to be preceded by `--`:\r\n\r\nWhen calling a _PowerShell_ command, it is broken in two after `--` too, even though `--` should signal that all subsequent arguments should be considered _positional_ ones:\r\n\r\n```\r\n# On a Unix-like platform\r\n\r\nsh -c 'printf %s\\\\n $@' -  -v:diag\r\n'  ======= '\r\nsh -c 'printf %s\\\\n $@' -  -- -v:diag\r\n'  ======= '\r\n& { $args } -- -v:diag\r\n```\n\n### Expected behavior\n\n```console\n-v:diag\r\n  ======= \r\n--\r\n-v:diag\r\n  ======= \r\n-v:diag\n```\n\n\n### Actual behavior\n\n```console\n-v:diag\r\n  ======= \r\n--\r\n-v:\r\ndiag\r\n  ======= \r\n-v:\r\ndiag\n```\n\n\n### Error details\n\n_No response_\n\n### Environment data\n\n```powershell\nPowerShell Core 7.3.0-preview.3\n```\n\n\n### Visuals\n\n_No response_",
  "closed_at": null,
  "comments": [],
  "created_at": "2022-05-21T01:14:58Z",
  "labels": [
    "Needs-Triage",
    "WG-Engine-ParameterBinder"
  ],
  "number": 17399,
  "state": "open",
  "title": "Parameter parsing/passing: An argument that looks like a parameter with attached value is broken in two if preceded by \"--\"",
  "updated_at": "2022-05-21T03:58:56Z"
}