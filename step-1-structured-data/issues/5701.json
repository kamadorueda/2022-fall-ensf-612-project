{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5701",
  "author": "zackschuster",
  "body": "Steps to reproduce\r\n------------------\r\n\r\n- Install any 64-bit powershell post-beta.8\r\n- Attempt to run any task using VS Code's GUI\r\n\r\nExpected behavior\r\n-----------------\r\nWorks fine\r\n\r\nActual behavior\r\n---------------\r\nBlows up with exit code 64, complaining about the `\\d` flag not being a script.\r\n\r\nI strongly suspect this is due to the recent `powershell` -> `pwsh` rename, but I have no proof for this (nor, for the record, any desire whatsoever to ~pointlessly bikeshed~ _debate the merits of_ the rename).\r\n\r\nEnvironment data\r\n----------------\r\n\r\n```powershell\r\n> $PSVersionTable\r\n\r\nName                           Value                                                                                                                     \r\n----                           -----                                                                                                                     \r\nPSVersion                      6.0.0-rc.2                                                                                                                \r\nPSEdition                      Core                                                                                                                      \r\nGitCommitId                    v6.0.0-rc.2                                                                                                               \r\nOS                             Microsoft Windows 10.0.14393                                                                                              \r\nPlatform                       Win32NT                                                                                                                   \r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}                                                                                                   \r\nPSRemotingProtocolVersion      2.3                                                                                                                       \r\nSerializationVersion           1.1.0.1                                                                                                                   \r\nWSManStackVersion              3.0                                                                                                                       \r\n\r\n```\r\n",
  "closed_at": "2017-12-15T22:00:53Z",
  "comments": [
    {
      "author": "zackschuster",
      "author_association": "NONE",
      "body": "I'll also add that being able to do this is Extremely Crucial for working around situations where e.g. built-in powershell profiles get unfixably broken during IT deployments, which is depressingly prevalent in my office right now.",
      "created_at": "2017-12-15T19:51:28Z",
      "updated_at": "2017-12-15T19:51:28Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "Right now, on Windows you have to customize the `.vscode/tasks.json` file to make it use PowerShell Core instead of the default shell - **Windows PowerShell**.  Also, the error `\\d` tells me you likely have a path in the tasks.json file where a backslash hasn't been escaped i.e. it should be `\\\\d<rest of path>`.",
      "created_at": "2017-12-15T20:53:19Z",
      "updated_at": "2017-12-15T21:19:47Z"
    },
    {
      "author": "zackschuster",
      "author_association": "NONE",
      "body": "My apologies -- the `\\d` was actually `/d`. Here's the full error message:\r\n\r\n```powershell\r\n> Executing task in folder Server: dotnet build --no-restore <\r\n\r\nThe argument '/d' is not recognized as the name of a script file. Check the spelling of the name, or if a path was included, verify that the path is correct and try again.\r\nThe terminal process terminated with exit code: 64\r\n\r\nTerminal will be reused by tasks, press any key to close it.\r\n```\r\n\r\nMy `tasks.json` file is pretty simple:\r\n```json\r\n{\r\n\t\"version\": \"2.0.0\",\r\n\t\"tasks\": [\r\n\t\t{\r\n\t\t\t\"label\": \"build\",\r\n\t\t\t\"group\": \"build\",\r\n\t\t\t\"type\": \"shell\",\r\n\t\t\t\"command\": \"dotnet build --no-restore\",\r\n\t\t\t\"problemMatcher\": \"$msCompile\"\r\n\t\t}\r\n\t]\r\n}\r\n```\r\n\r\nWould you be able to point me in the right direction for how to alter `tasks.json` to use PS Core?\r\n\r\nThanks for your help :)",
      "created_at": "2017-12-15T21:23:56Z",
      "updated_at": "2017-12-15T21:23:56Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "You could change that as a user setting I think - \r\n```\r\n  \"terminal.integrated.shell.windows\": \"C:\\\\WINDOWS\\\\System32\\\\WindowsPowerShell\\\\v1.0\\\\powershell.exe\",\r\n```\r\nBut then everyone on your team would have to make that change **unless** you put this in the workspace settings file: `.vscode\\settings.json`. \r\n\r\nIf that doesn't work, take a look at what we do for the tasks.json for the PowerShell extension for VSCode:\r\n\r\nhttps://github.com/PowerShell/vscode-powershell/blob/93bc21c8167001a5701917c21aace9af6492e587/.vscode/tasks.json#L4-L11\r\n\r\nYou would change this path to the PS Core install location `C:\\\\Program Files\\\\PowerShell\\\\6.0.0-rc.2\\\\pwsh.exe`  or perhaps you rely on pwsh.exe being in the path and specify the path as simply `pwsh.exe`.",
      "created_at": "2017-12-15T21:29:48Z",
      "updated_at": "2017-12-15T21:31:05Z"
    },
    {
      "author": "zackschuster",
      "author_association": "NONE",
      "body": "I already had `terminal.integrated.shell.windows` set; that's how I was able to initially produce the issue.\r\n\r\nThough, as you say, there's a property in [the schema](https://code.visualstudio.com/docs/editor/tasks-appendix) for `tasks.json` that fixes it:\r\n\r\n```json\r\n\"options\": {\r\n  \"shell\": {\r\n\t\"executable\": \"C:/Program Files/PowerShell/pwsh.exe\",\r\n\t \"args\": [\r\n\r\n\t  ]\r\n   }\r\n}\r\n```\r\n\r\nWithout specifying any args, the error becomes:\r\n\r\n```powershell\r\n> Executing task in folder Server: dotnet build --no-restore <\r\n\r\nThe argument 'dotnet' is not recognized as the name of a script file. Check the spelling of the name, or if a path was included, verify that the path is\r\ncorrect and try again.\r\nThe terminal process terminated with exit code: 64\r\n\r\nTerminal will be reused by tasks, press any key to close it.\r\n```\r\n\r\n...which I interpret to mean the `dotnet` command is being improperly parameterized by VS Code.\r\n\r\n(Adding `\"-Command\" `to `args` (as you do for the PS extension) fixes it, which I'm guessing is related to [what you were saying here](https://github.com/Microsoft/vscode/issues/40228#issuecomment-351926387) about, um, improperly parameterized args).",
      "created_at": "2017-12-15T21:39:34Z",
      "updated_at": "2017-12-15T21:48:01Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "Yup, that's why we use:\r\n```\r\n\"args\": [ \"-NoProfile\", \"-ExecutionPolicy\", \"Bypass\", \"-Command\" ]\r\n```\r\nNo sense loading a profile and if someone needs to run this on a system where the execution policy hasn't been set, the above default args handle that.\r\n\r\nBTW that `group` field looks odd.  For the extension we use:\r\n```\r\n            \"group\": {\r\n                \"kind\": \"build\",\r\n                \"isDefault\": true\r\n            }\r\n```\r\nAlso, are you sure about your pwsh.exe path?  When I look in my `C:\\Program Files\\PowerShell` folder there is no pwsh.exe file there.  The exe is under a subdir named after the version e.g. `6.0.0-rc2`.",
      "created_at": "2017-12-15T21:50:45Z",
      "updated_at": "2017-12-15T21:50:45Z"
    },
    {
      "author": "zackschuster",
      "author_association": "NONE",
      "body": "Yes, I copy it from the install so I can a) avoid updating user settings every time I update, and b) I can freely modify files without corrupting the base install (like when I broke everything trying to fix this issue by renaming `pwsh` back to `powershell` ;) ).\r\n\r\nI use string config instead of hash because I invoke all my tasks from `ctrl+shift+b`. Saves me a couple lines per project :)\r\n\r\nThank you so much for your help! Being able to use new Powershell again is so great!",
      "created_at": "2017-12-15T22:00:38Z",
      "updated_at": "2017-12-15T22:00:38Z"
    },
    {
      "author": "zackschuster",
      "author_association": "NONE",
      "body": "(Marking as closed since this pretty conclusively seems like an upstream issue)",
      "created_at": "2017-12-15T22:00:53Z",
      "updated_at": "2017-12-15T22:01:03Z"
    }
  ],
  "created_at": "2017-12-15T19:48:11Z",
  "number": 5701,
  "state": "closed",
  "title": "Powershell >=beta.9 (x64) no longer works as a task runner for VS Code",
  "updated_at": "2017-12-15T22:01:03Z"
}