{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9309",
  "author": "SteveL-MSFT",
  "body": "# Summary of the new feature/enhancement\r\n\r\nAs part of the side-by-side work for PSCore6, PSCore6 uses [a different set of registry paths](https://github.com/PowerShell/PowerShell/blob/3f52adb0aeaf58189d85d386ab502e08f92ed41b/src/System.Management.Automation/engine/Utils.cs#L783) for GPO policies.  This means admins can set policies separately for Windows PowerShell vs PowerShell Core, but makes it more difficult to manage.\r\n\r\n# Proposed technical implementation details (optional)\r\n\r\nFor PowerShell 7, pwsh should look in both paths.\r\n",
  "closed_at": "2019-10-15T20:37:24Z",
  "comments": [
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "Which policy take precedence? \r\n\r\nWhat if the lower precedence policy says to implement a higher security policy than the higher precedence policy?\r\n\r\nWe already have the configuration file with the [PowerShell Configuration RFC](https://github.com/PowerShell/PowerShell-RFC/pull/111) to resolve these, which leads to many issue.",
      "created_at": "2019-04-07T23:54:12Z",
      "updated_at": "2019-04-07T23:54:12Z"
    },
    {
      "author": "kilasuit",
      "author_association": "COLLABORATOR",
      "body": "In all honesty I think that this should be set to a single location in the v7 timeline unless there is a real need to have different settings applied to Windows PowerShell and PowerShell Core.\r\n\r\nWith preference being set to apply GPO settings above & additionally to config file settings as this would allow admin defined and user defined settings to work in tandem with no issue, especially when it comes to transcription",
      "created_at": "2019-04-08T21:44:56Z",
      "updated_at": "2019-04-08T21:44:56Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "For PSCore6, we explicitly wanted side-by-side so it's GPO settings were in a different registry path than Windows PowerShell.  However, since we are positioning PowerShell 7 as a replacement for Windows PowerShell, users would expect existing GPO to take effect with PS7.  In the case that both the WnPS and PSCore6 GPO settings are set, we should default to the most strict interpretation and log it appropriately.  Since we don't know how many users are using the PSCore6 GPO settings, I don't think we can just ignore them since 7 is an iteration over 6.",
      "created_at": "2019-04-16T01:02:46Z",
      "updated_at": "2019-04-16T01:02:46Z"
    },
    {
      "author": "kilasuit",
      "author_association": "COLLABORATOR",
      "body": "Considering the v6 GPO settings had not been well documented I personally would not expect that many people would be using them.\r\n\r\nAlso, I personally can't see what benefit having different locations would have brought, other than offering unnecessary complexity & not having a singular location for items like transcription logging which causes 6 not to be caught by users that had set up the GPO locations on existing environments.\r\n\r\nThis means that currently there is the **potential** that a malicious actor can install PS v6 in an environment that has implemented the PSv5 over the shoulder transcription logging settings (either via GPO or via RegEdit / PowerShell Script/DSC to add needed reg keys) and find that they have been subject to a breach that has used Pwsh and they have no visibility of this due to the Registry location changes.\r\n\r\nChanging this, to me was the wrong decision, and as such I personally think the v6 locations should be deprecated and the v5 ones be the only ones used in PSv7 as this enforces a catch all scenario that would catch PSv5, PSv6 (if you re-released all versions with this change back) and then also PSv7 too going forward too.",
      "created_at": "2019-04-16T09:15:58Z",
      "updated_at": "2019-04-16T09:15:58Z"
    },
    {
      "author": "kilasuit",
      "author_association": "COLLABORATOR",
      "body": "For those reading this and have used the Registry Keys in https://devblogs.microsoft.com/powershell/powershell-the-blue-team/ for Psv5 \r\n\r\nThere was a change in the v6 time line that changed where these reg keys were set to be different and as such broke Over the Shoulder Transcription when using these keys\r\nYou can use the below gist to enable this properly for both PSv5 and Psv6 on windows machines\r\nhttps://gist.github.com/kilasuit/e7c276ca67929ae54369f726877dab08#file-enable-overtheshoulderpstranscription-ps1\r\n\r\nYou can also use this configuration in PowerShell.config.json in the PowerShell Location ( `C:\\Program Files\\PowerShell\\6\\powershell.config.json`)\r\n\r\nhttps://gist.github.com/kilasuit/e7c276ca67929ae54369f726877dab08#file-powershell-config-json\r\n\r\nNote though that you can use either the powershell.config.json or the Registry keys, as in my testing with both being defined, the regkeys take preference and Override the powershell.config.json with 6.2.0\r\n\r\nIdeally I would like it to use both to force transcription set via GPO / RegKeys to 1 location and via the PowerShell.config.json file to be set to another location that I specify. \r\n\r\nThis would allow both Admin over the shoulder transcription and user level over the shoulder transcription to run in parallel and provides the greatest level of flexibility for both Admins and Users, without users requiring to Add  `Start-Transcript` into their PowerShell Profiles.",
      "created_at": "2019-04-16T11:59:23Z",
      "updated_at": "2019-04-16T12:00:12Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee reviewed this.  Recommendation is to keep the policy settings separate between WinPS and PS7.  It would be confusing to see Windows PowerShell when looking for PS7 settings and also new settings for PS7 may come up that wouldn't apply to WinPS5.1.  For PS7, we need a separate admx, and we should have an option per setting to \"Use Windows PowerShell Policy\" so that users can set it for WinPS5.1 and have it respected by PS7.  However, if WinPS5.1 ever gets removed, then PS7 policy would be equivalent to not set so could be problematic.  Request is to have RFC authored for this.",
      "created_at": "2019-04-22T20:34:02Z",
      "updated_at": "2019-04-22T20:34:36Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "RFC was created:  https://github.com/PowerShell/PowerShell-RFC/pull/180",
      "created_at": "2019-05-29T21:39:05Z",
      "updated_at": "2019-05-29T21:39:05Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Fixed via https://github.com/PowerShell/PowerShell/pull/10468",
      "created_at": "2019-10-15T20:37:24Z",
      "updated_at": "2019-10-15T20:37:24Z"
    }
  ],
  "created_at": "2019-04-06T17:09:23Z",
  "labels": [
    "Issue-Enhancement",
    "Resolution-Fixed",
    "Committee-Reviewed",
    "WG-Security"
  ],
  "number": 9309,
  "state": "closed",
  "title": "PS7 should also respect the old Windows PowerShell GPO registry settings",
  "updated_at": "2019-10-15T20:37:30Z"
}