{
  "_url": "https://github.com/PowerShell/PowerShell/issues/8210",
  "author": "ffeldhaus",
  "body": "PowerShell supports an Infinity object which is returned for a float division by zero, which often happens when calculating the progress or the duration of some process (especially at the beginning when there is 0 progress). Unfortunately `Get-Date` throws an error for Infinity objects, which requires additional checks when calculating progress. As Infinity is a concept of time, I want to suggest supporting Infinity as input for `Get-Date`.\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\nPS /> $Infinity = 1/0.0\r\nPS /> $Infinity.PSObject.BaseObject\r\n\u221e\r\nPS /> Get-Date $Infinity\r\nGet-Date : Cannot bind parameter 'Date'. Cannot convert value \"Infinity\" to type \"System.DateTime\". Error: \"The string 'Infinity' was not recognized as a valid DateTime. There is an unknown word starting at index '0'.\"\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```none\r\nPS /> $Infinity = 1/0.0\r\nPS /> $Infinity.PSObject.BaseObject\r\n\u221e\r\nPS /> Get-Date $Infinity\r\n\u221e\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n```powershell\r\nPS /Users/florianfeldhaus/IdeaProjects/S3-Client> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.1.0\r\nPSEdition                      Core\r\nGitCommitId                    6.1.0\r\nOS                             Darwin 17.7.0 Darwin Kernel Version 17.7.0: Thu Jun 21 22:53:14 PDT 2018; root:xnu-4570.71.2~1/RELEASE_X86_64\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2019-05-31T22:00:45Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "The `datetime` data type is inherited from .NET Core. If anyone should implement this, it's really up to them; I would file an issue on the CoreFX repo instead.\n\nHowever, given that a date of 'infinity' is about as meaningful as a simple numeral and doesn't really add... Anything... To the picture, I don't know if it's something they will go for.",
      "created_at": "2018-11-08T11:02:59Z",
      "updated_at": "2018-11-08T11:02:59Z"
    },
    {
      "author": "NoMoreFood",
      "author_association": "CONTRIBUTOR",
      "body": "Agree with @vexx32.  1/0.0 is actually represented by the [Double] class (i.e. [Double]::PositiveInfinity).  Not sure there's a great way to mesh this with [DateTime] short of maybe returning some like [DateTime]::MaxValue when [Double]::PositiveInfinity is passed as a parameter.  Sort of a hack.",
      "created_at": "2018-11-08T11:49:22Z",
      "updated_at": "2018-11-08T11:49:22Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as external and has not had any activity for **1 day**. It has been be closed for housekeeping purposes.",
      "created_at": "2019-05-31T22:00:24Z",
      "updated_at": "2019-05-31T22:00:24Z"
    }
  ],
  "created_at": "2018-11-08T09:40:03Z",
  "labels": [
    "Issue-Question",
    "Resolution-External"
  ],
  "number": 8210,
  "state": "closed",
  "title": "Consider supporting Get-Date of infinity",
  "updated_at": "2019-05-31T22:00:45Z"
}