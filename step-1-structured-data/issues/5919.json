{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5919",
  "author": "ghost",
  "body": "Just installed PowerShell 6.0. Was using 5.1 before.\r\nI updated my scheduled tasks (in the Windows Server Task Scheduler) and I can't name the executable like before. The event gives a 0x80070002 (file not found) error when the task runs.\r\n\r\nChecked Path variable, looks fine.\r\nIf I put in the full path to pwsh.exe, it works fine. But I'm concerned with doing that since it involves a 6.0.0 folder, which I assume will change.\r\n\r\nPlease update the installer to fix this shortcoming. (I used PowerShell-6.0.0-win-x64.msi)\r\n\r\n![1](https://user-images.githubusercontent.com/31782486/35003884-3b5439f0-fabc-11e7-9656-3edc7d6bac83.png)\r\n![2](https://user-images.githubusercontent.com/31782486/35003885-3b6bcb88-fabc-11e7-9e75-7a188b03e981.png)\r\n",
  "closed_at": "2018-05-26T17:46:45Z",
  "comments": [
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "I briefly looked into it and this is not related to the recently found issue of registry keys being in HKCU in 6.0 since the same happens when using HKLM.\r\nAs a current workaround you can use\r\n![image](https://user-images.githubusercontent.com/9250262/35013717-2979098c-fb06-11e7-8a2a-58812dbf2332.png)\r\nI found that adding a registry key with value `C:\\Program Files\\PowerShell\\6.0.0\\pwsh.exe` and name `pwsh` (the name itself actually does not matter) in `HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment` would enable your scenario. This is the place in the registry for environment variables.\r\nBut just a word of warning: If you do not have a specific reason to upgrade to 6.0, then sticking to 5.x might be the better (more pain free) solution for Windows for the moment being (although it allows us at least to get more feedback). PowerShell Core was developed to be cross platform and contains many breaking changes and is not meant to replace Windows PowerShell (yet).",
      "created_at": "2018-01-16T21:48:21Z",
      "updated_at": "2018-01-16T22:48:52Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "You can use full path in Task Schedule `C:\\Program Files\\PowerShell\\6.0.0\\pwsh.exe`",
      "created_at": "2018-01-17T14:06:25Z",
      "updated_at": "2018-01-17T14:06:25Z"
    },
    {
      "author": "al-ign",
      "author_association": "NONE",
      "body": "1) You should not use short names in Task Scheduler for obvious security reasons\r\n2) Proper way to call any program by short name is adding it's location to PATH environment variable, or using 'App Paths' registry key.\r\nTo use PATH method, add executable location to global PATH, using sysdm.cpl\r\nTo use App Paths, create necessary subkey in 'HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\App Paths' key, for ex:\r\n```\r\nnew-item 'HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\App Paths' -Name pwsh.exe -Value 'C:\\Program Files\\PowerShell\\6.0.0\\pwsh.exe' \r\n```\r\n3) Concerning updating installer to support updating PATH and/or App Paths... well, it should.\r\n",
      "created_at": "2018-01-17T18:42:17Z",
      "updated_at": "2018-01-17T18:42:17Z"
    },
    {
      "author": "ghost",
      "author_association": "NONE",
      "body": "@iSazonov Bad idea, won't 6.0.0 change?\r\n\r\n@al-ign Yes, installer should be fixed!",
      "created_at": "2018-01-26T17:55:42Z",
      "updated_at": "2018-01-26T17:55:42Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@sundarchi1 ~~Feel free create new Issue for enhancing installer to update PATH.~~ We already add $Home to %PATH% since #5101.",
      "created_at": "2018-01-26T18:14:06Z",
      "updated_at": "2018-01-27T10:36:14Z"
    },
    {
      "author": "lwsrbrts",
      "author_association": "NONE",
      "body": "I can see that my PATH variable ($env:Path) already contains the correct location for the pwsh.exe binary but I still get this issue, so adding it to the global PATH variable alone doesn't seem to be a suitable fix - at least not for me.\r\n\r\nPowerShell.exe is located in the App Paths registry location though, so that is probably why that works.\r\n\r\n![image](https://user-images.githubusercontent.com/15855642/35470991-317d77ce-034b-11e8-8c6e-abd24e0cc233.png)\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/15855642/35470971-a97ead48-034a-11e8-9492-328fb99bacef.png)\r\n",
      "created_at": "2018-01-27T10:17:32Z",
      "updated_at": "2018-01-27T10:17:32Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "What is output `where.exe pwsh.exe`?",
      "created_at": "2018-01-27T10:40:37Z",
      "updated_at": "2018-01-27T10:40:37Z"
    },
    {
      "author": "lwsrbrts",
      "author_association": "NONE",
      "body": "`C:\\Program Files\\PowerShell\\6.0.1\\pwsh.exe`",
      "created_at": "2018-01-27T10:43:30Z",
      "updated_at": "2018-01-27T10:43:30Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "Keep in mind, due to the upcoming new release update(s) to PSCore, the version number will keep changing in the Program Files PowerShell path.  \r\n\r\nSo, whatever changes to the Environment Variable Path will become useless.\r\n\r\nNow, we are at PSCore 6 version 6.0.1 and not 6.0.0.\r\n\r\nAnything scheduled for PSCore6, the path will need to change manually. \r\n:)",
      "created_at": "2018-01-27T14:32:20Z",
      "updated_at": "2018-01-27T14:32:20Z"
    },
    {
      "author": "lwsrbrts",
      "author_association": "NONE",
      "body": "@MaximoTrinidad - yes, that is basically the exact reason for this issue and my subsequent opening of #6046. The issue has opened wider discussion about what goes in the PATH and/or App Path when there's a side-by-side installation and in the event there is, if the user types in \"pwsh.exe\" from \"cmd.exe\", which version is opened?",
      "created_at": "2018-01-27T18:17:47Z",
      "updated_at": "2018-01-27T18:17:47Z"
    },
    {
      "author": "ghost",
      "author_association": "NONE",
      "body": "So what's the preferred fix here? Is the team going to make some changes?",
      "created_at": "2018-02-04T03:25:55Z",
      "updated_at": "2018-02-04T03:25:55Z"
    },
    {
      "author": "lwsrbrts",
      "author_association": "NONE",
      "body": "@sundarchi1 @iSazonov wrote on #6046 that the App Path was actually already there but was using HKCU, instead of HKLM so registry changes were made to change App Path to be under HKLM in commit #5915 so I guess technically we're just waiting for the next release. The result of other discussions about possible SxS conflicts being that if someone is using SxS then they should really be using the zip and referencing that install manually, should they require it. ",
      "created_at": "2018-02-04T10:43:58Z",
      "updated_at": "2018-02-04T10:43:58Z"
    },
    {
      "author": "ghost",
      "author_association": "NONE",
      "body": "Ok I'll check this out when the next version releases..",
      "created_at": "2018-02-05T18:32:11Z",
      "updated_at": "2018-02-05T18:32:11Z"
    },
    {
      "author": "ghost",
      "author_association": "NONE",
      "body": "What's the latest on this as of the v6.0.2 \"releaes\"? (someone spelled that wrong [here](https://github.com/PowerShell/PowerShell/releases)!)",
      "created_at": "2018-03-16T17:37:00Z",
      "updated_at": "2018-03-16T17:37:00Z"
    },
    {
      "author": "lwsrbrts",
      "author_association": "NONE",
      "body": "I'm still seeing the problem in 6.0.2 but what is strange is that my system PATH (using cmd.exe) shows no mention at all of `C:\\Program Files\\PowerShell\\6.0.2`. If I fire up `cmd.exe` and enter `pwsh.exe` I get: `'pwsh.exe' is not recognized as an internal or external command, operable program or batch file.`\r\n\r\nIf however I do `$env:path` inside PowerShell 6.0.2, the folder location is right there on the top line.\r\n\r\nIn Windows PowerShell 5.1, I get the system path.\r\n\r\nI'm going to post this then I'll add `C:\\Program Files\\PowerShell\\6.0.2` to the system PATH manually, reboot and see what happens.\r\n\r\n![paths](https://user-images.githubusercontent.com/15855642/37542181-3e3293f2-2955-11e8-98b9-c4ca647c020f.png)\r\n",
      "created_at": "2018-03-16T19:02:02Z",
      "updated_at": "2018-03-16T20:04:39Z"
    },
    {
      "author": "lwsrbrts",
      "author_association": "NONE",
      "body": "Once added to the system PATH (and after a reboot) the scheduled task executes as expected.",
      "created_at": "2018-03-16T19:14:51Z",
      "updated_at": "2018-03-16T19:14:51Z"
    },
    {
      "author": "ghost",
      "author_association": "NONE",
      "body": "Will the next version add to PATH automatically?",
      "created_at": "2018-03-18T18:28:56Z",
      "updated_at": "2018-03-18T18:28:56Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "We'll use standard  install path. Please feedback in https://github.com/PowerShell/PowerShell-RFC/pull/115",
      "created_at": "2018-03-19T05:35:57Z",
      "updated_at": "2018-03-19T05:35:57Z"
    },
    {
      "author": "ghost",
      "author_association": "NONE",
      "body": "Surprised to see this still unfixed in 6.1.0 preview4 released today.\r\npwsh.exe still does not work in Task Scheduler without full path!\r\nNote: I installed with \"Add PowerShell to Path Environment Variable\" checked, but it doesn't look like that actually did anything. Clean Windows Server 2016 install.\r\n\r\nPlease reopen.",
      "created_at": "2018-07-20T18:23:42Z",
      "updated_at": "2018-07-20T18:25:40Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@sundarchi1 Did you follow the instructions here:  https://github.com/PowerShell/PowerShell/issues/5919#issuecomment-373817293",
      "created_at": "2018-07-20T19:18:47Z",
      "updated_at": "2018-07-20T19:18:47Z"
    },
    {
      "author": "lwsrbrts",
      "author_association": "NONE",
      "body": "Not sure if the same fix for 6.1.0 p4 was applied to 6.0.3 but right after installation of 6.0.3 and before a reboot, the scheduled task didn't run. A reboot later and it worked as expected.\r\n\r\nThe system path was updated by the installer (leaving behind the previous entry referring to 6.0.2 however). I imagine that with 6.1 this will no longer be a problem if the installs all go in the same place?",
      "created_at": "2018-07-22T09:03:02Z",
      "updated_at": "2018-07-22T09:03:02Z"
    },
    {
      "author": "ghost",
      "author_association": "NONE",
      "body": "@TravisEz13 \r\n\r\n1. Install clean Windows Server 2016.\r\n2. Install preview4 release with default options (\"Add PowerShell to Path Environment Variable\" checked).\r\n3. Reboot.\r\n4. Set up new task in Task Scheduler that launches pwsh.exe, result is: The system cannot find the file specified. (0x80070002)\r\n\r\nIn fact, it doesn't look like the installer did anything with my environment variables, so that is probably why this isn't working. So, this bug still is present in preview4. Could I add to PATH manually? Yes.. but I shouldn't have to. The installer should do it as it indicates.\r\n\r\nAlso a note, using PowerShell.exe continues to work fine.",
      "created_at": "2018-07-23T18:27:33Z",
      "updated_at": "2018-07-23T18:27:33Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@sundarchi1  The previews don't add themselves to the path by design.  Only Stable builds do, we are considering adding `pwsh-preview` to the path as we did on Linux and Mac.",
      "created_at": "2018-07-23T19:08:14Z",
      "updated_at": "2018-07-23T19:08:14Z"
    },
    {
      "author": "ghost",
      "author_association": "NONE",
      "body": "@TravisEz13 Oh ok, so this should be fully resolved in 6.1 final.. will retest when that comes out.\r\nAny hint when the final release comes out?",
      "created_at": "2018-07-23T19:59:22Z",
      "updated_at": "2018-07-23T19:59:22Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "In the last community call, it was said that August will be the target for the final release.",
      "created_at": "2018-07-23T21:08:13Z",
      "updated_at": "2018-07-23T21:08:13Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@sundarchi1 https://github.com/PowerShell/PowerShell/pull/7345 should address your issue",
      "created_at": "2018-07-24T05:04:04Z",
      "updated_at": "2018-07-24T05:04:04Z"
    },
    {
      "author": "ghost",
      "author_association": "NONE",
      "body": "I have found success with the RC1 release.\ud83d\ude03 Thanks to everyone involved.\r\npwsh-preview works in Task Scheduler, and I assume pwsh will work the same upon final release.\r\nNote to anyone reading this later, rebooting after installing PowerShell is important, otherwise you will get 0x80070002 in Task Scheduler.",
      "created_at": "2018-08-22T20:04:13Z",
      "updated_at": "2018-08-22T20:04:13Z"
    }
  ],
  "created_at": "2018-01-16T17:54:41Z",
  "labels": [
    "Issue-Question",
    "Resolution-Answered"
  ],
  "number": 5919,
  "state": "closed",
  "title": "Task Scheduler Compatibility Problem",
  "updated_at": "2018-08-22T20:04:13Z"
}