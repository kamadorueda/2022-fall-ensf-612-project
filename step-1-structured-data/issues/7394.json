{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7394",
  "author": "StingyJack",
  "body": "I'm sure everyone has mistakenly hit the escape key after typing in almost all of a command at least once. Is there any way to get that partially typed command back (without re-typing ofc)?",
  "closed_at": "2018-07-30T16:27:28Z",
  "comments": [
    {
      "author": "kvprasoon",
      "author_association": "CONTRIBUTOR",
      "body": "Yes, you will have to do some magic using `PSReadLine`.\r\nCc: @lzybkr ",
      "created_at": "2018-07-29T07:19:32Z",
      "updated_at": "2018-07-29T07:19:32Z"
    },
    {
      "author": "StingyJack",
      "author_association": "CONTRIBUTOR",
      "body": "@kvprasoon - I'm sorry but I do not know magic, or what I would do with PSReadline. Can you explain what your general idea for this would be?",
      "created_at": "2018-07-30T13:58:51Z",
      "updated_at": "2018-07-30T13:58:51Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "In Windows or Vi mode, <kbd>Ctrl+y</kbd> is bound to `Redo`, in Emacs mode you would need to bind the function `Redo` to a key.\r\n\r\n<kbd>Escape</kbd> is implemented as repeatedly doing undo until the first edit and redo isn't really smart in any way, so you'll need repeated redos to recover the complete command line.\r\n\r\nRepeated keys are usually possible via `DigitArgument`, so e.g. if you typed <kbd>Alt+9</kbd><kbd>Alt+9</kbd><kbd>Ctrl+y</kbd>, I would have expected 99 redos, but unfortunately `Redo` and `Undo` do not currently support `DigitArgument` - though it would be very easy for someone to add.",
      "created_at": "2018-07-30T16:27:22Z",
      "updated_at": "2018-07-30T16:27:22Z"
    }
  ],
  "created_at": "2018-07-28T03:46:23Z",
  "number": 7394,
  "state": "closed",
  "title": "Is there a way to recover a command that was typed, but you accidentally hit the ESC key?",
  "updated_at": "2018-07-30T16:27:50Z"
}