{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3751",
  "author": "alexandair",
  "body": "PowerShell Core is a cross-platform, so it makes sense to add support for operating system check to the #requires statement in case you want to write an OS-specific script.\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "Hum!! I'm using the isXXXX variables to identify which OS I want the code to execute.  It won't hurt to implement another #REQUIRES -OS option. \r\n\r\n:)",
      "created_at": "2017-05-10T22:34:19Z",
      "updated_at": "2017-05-10T22:34:19Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Benefit of `#requires` is that it's a parse time check and not runtime if the entire script is not compatible vs using $isWindows, etc...",
      "created_at": "2017-05-11T18:54:10Z",
      "updated_at": "2017-05-11T18:54:10Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "I'm writing an RFC right to discuss platform differences. For the time being, I think it's a perfectly usable workaround to throw at the beginning of a psm1 if !isLinux. ",
      "created_at": "2017-05-17T23:23:47Z",
      "updated_at": "2017-05-17T23:23:47Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "Reminder here to discuss with @PowerShell/powershell-committee the possibility of pushing this out. No immediate need (certainly not moreso than the \"interop\" variables), and this should be done with intent. ",
      "created_at": "2017-08-22T21:43:08Z",
      "updated_at": "2017-08-22T21:43:08Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee reviewed this and agree that this isn't needed for 6.0.0, we'll revisit the necessity at all post 6.0.0",
      "created_at": "2017-09-06T23:33:16Z",
      "updated_at": "2017-09-06T23:33:16Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "I've opened [an RFC](https://github.com/PowerShell/PowerShell-RFC/pull/122) on updating the behaviour of `#requires`. Please feel free to comment in the PR.",
      "created_at": "2018-03-23T18:34:11Z",
      "updated_at": "2018-03-23T18:34:11Z"
    },
    {
      "author": "ThomasNieto",
      "author_association": "CONTRIBUTOR",
      "body": "@joeyaiello Can this enhancement be included with PS 7?",
      "created_at": "2019-05-31T18:43:21Z",
      "updated_at": "2019-05-31T18:43:21Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "This has been accepted in https://github.com/PowerShell/PowerShell-RFC/pull/122\r\n\r\nNow it just needs to be implemented",
      "created_at": "2019-05-31T19:10:26Z",
      "updated_at": "2019-05-31T19:10:26Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I think we would be great to have a meta issue with not implemented RFCs.",
      "created_at": "2019-06-03T06:48:22Z",
      "updated_at": "2019-06-03T06:48:22Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "> I think we would be great to have a meta issue with not implemented RFCs.\r\n\r\nWe should discuss with @SteveL-MSFT and @joeyaiello, but I do keep feeling that RFCs don't integrate well with issue tracking for us.\r\n\r\nI think meta issues tend to get neglected and aren't very helpful compared to a 1-issue-per-workitem approach and tagging. So my suggestion would be:\r\n\r\n- When RFCs are accepted, they are linked to the appropriate issue in the relevant repository and the issue is tagged as implementing an RFC\r\n- Then, when the issue is closed as implemented, the RFC is moved to implemented",
      "created_at": "2019-06-03T15:48:53Z",
      "updated_at": "2019-06-03T15:48:53Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "In the case we need one issue in RFC repo to track implementing and there can be some related issues and PRs in the repo.",
      "created_at": "2019-06-03T17:42:40Z",
      "updated_at": "2019-06-03T17:42:40Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Perhaps instead of a meta issue that itself is additional work to maintain, we should have a `RFC Approved, Waiting on Implementation` type label (but shorter) in this repo and have the ability to render a view of RFCs based on filtering criteria (we already need it for other purposes).",
      "created_at": "2019-06-05T11:04:50Z",
      "updated_at": "2019-06-05T11:04:50Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "In the case we need to create an issue to apply the label.",
      "created_at": "2019-06-05T11:42:36Z",
      "updated_at": "2019-06-05T11:42:36Z"
    },
    {
      "author": "rokejulianlockhart",
      "author_association": "NONE",
      "body": "As @SteveL-MSFT [states](https://github.com/PowerShell/PowerShell/issues/3751#issuecomment-300883997), why is this necessary? An initial \u201c`If`\u201d condition appears to be perfect if the \u201c`#Requires`\u201d statements remain independent to any platform.",
      "created_at": "2022-06-30T10:40:19Z",
      "updated_at": "2022-06-30T10:42:18Z"
    }
  ],
  "created_at": "2017-05-10T08:46:02Z",
  "number": 3751,
  "state": "open",
  "title": "Add support for OS check to the #requires statement",
  "updated_at": "2022-06-30T10:42:18Z"
}