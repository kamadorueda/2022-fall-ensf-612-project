{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3597",
  "author": "ChristophB125",
  "body": "I managed to configure non-interactive SSH remoting but I have some suggestions to improve the cmdlet usage and documentation to make it easier for the next people:\r\n\r\n* I found that when using the new cmdlet parameter set one has to always specify at least 'HostName' and 'UserName' no matter if one just enters the password when being prompted or uses the KeyFilePath parameter or if the private key is already known to the ssh-agent by using ssh-add. Unless there is a use case where one does not need to specify the UserName, it would be good if the cmdlet would make 'HostName' and 'UserName' mandatory and return an error.\r\n* I also found that the account and machine under which the PowerShell remoting command is run as has to match the account and machine under which the RSA keys were generated and the ssh-add command being executed",
  "closed_at": null,
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@ChristophB125 thanks for the feedback\r\n\r\n`-UserName` is not required as it will try public key auth by default.  `-keyfilepath` is only required if the key file isn't the default locations (under ~/.ssh)\r\n\r\nI don't exactly understand your second point, can you provide a bit more detail?  Perhaps some repro steps indicating what you expected to happen and what actually happened?",
      "created_at": "2017-04-19T16:14:19Z",
      "updated_at": "2017-04-19T16:14:19Z"
    },
    {
      "author": "ChristophB125",
      "author_association": "NONE",
      "body": "@SteveL-MSFT :  Some details might clear it up: I am only talking about the case of non-interactive remoting for the purpose of automation and I am remoting from a Windows 2016 machine (client). The target machine (host) into which I wanted to remote was configured to have the public RSA key appended to ~/.ssh/authorized_keys by following the common guides for 'passwordless SSH'. If I omitted the `-UserName` parameter then it would always prompt me for the password in the 2 following cases:\r\n* I first made non-interactive remoting work by providing the path to the private RSA key using the `-KeyFilePath` option\r\n* The second improved approach was to add the identity to the ssh-agent by calling `ssh-add.exe $PathToPrivateRsaKey` so that I could omit the `-KeyFilePath` parameter\r\n\r\nDoes that make sense? As I said it was working at the end but that path was not always clear as I had to collect documentation bits together from here, the Win32-OpenSSH repo and general SSH guides.\r\n\r\nThe 2nd point might become more clear by looking at an example: I was configuring a CI build agent for OpenSSH-PowerShell remoting by RDP-ing into it and configuring it using my personal admin account. However, when the agent itself (running under a special automation account) was executing the OpenSSH-PowerShell cmdlets, it did not work any more. That's why I wanted to share that not only the user account matters under which the RSA keys get generated (using the  shh-keygen command) but also the user account that executes the `ssh-add` command (that add the identity of the private key to the ssh-agent service).\r\nOverall the intent was to not only share my findings but also double check my understanding of it in an effort to improve documentation.",
      "created_at": "2017-04-19T19:35:01Z",
      "updated_at": "2017-04-19T19:41:41Z"
    }
  ],
  "created_at": "2017-04-19T15:47:37Z",
  "labels": [
    "Issue-Discussion",
    "WG-Remoting"
  ],
  "number": 3597,
  "state": "open",
  "title": "PowerShell Remoting Over SSH cmdlets: syntax and documentation",
  "updated_at": "2017-04-21T23:24:38Z"
}