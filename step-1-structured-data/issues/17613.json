{
  "_url": "https://github.com/PowerShell/PowerShell/issues/17613",
  "author": "SeeminglyScience",
  "body": "### Steps to reproduce\r\n\r\n```powershell\r\n$script = 'try {\r\n} catch [System.Net.Http.HttpResponseException] {\r\n    $PSItem.\r\n}'\r\n\r\n$column = $script.IndexOf('.', $script.IndexOf('$')) + 1\r\n(TabExpansion2 -inputScript $script -cursorColumn $column).CompletionMatches\r\n```\r\n\r\n### Expected behavior\r\n\r\n```console\r\nCompletionText        ListItemText          ResultType ToolTip\r\n--------------        ------------          ---------- -------\r\nCategoryInfo          CategoryInfo            Property System.Management.Automation.ErrorCategoryInfo CategoryInfo { get; }\r\nErrorDetails          ErrorDetails            Property System.Management.Automation.ErrorDetails ErrorDetails { get; set; }\r\nException             Exception               Property System.Exception Exception { get; }\r\nFullyQualifiedErrorId FullyQualifiedErrorId   Property string FullyQualifiedErrorId { get; }\r\nInvocationInfo        InvocationInfo          Property System.Management.Automation.InvocationInfo InvocationInfo { get; }\r\nPipelineIterationInfo PipelineIterationInfo   Property System.Collections.ObjectModel.ReadOnlyCollection[int] PipelineIterationInfo { get;\u2026\r\nPSMessageDetails      PSMessageDetails        Property System.Object PSMessageDetails {get=& { Set-StrictMode -Version 1; $this.Exception.\u2026\r\nScriptStackTrace      ScriptStackTrace        Property string ScriptStackTrace { get; }\r\nTargetObject          TargetObject            Property System.Object TargetObject { get; }\r\nEquals(               Equals                    Method bool Equals(System.Object obj)\r\nGetHashCode(          GetHashCode               Method int GetHashCode()\r\nGetObjectData(        GetObjectData             Method void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runt\u2026\r\nGetType(              GetType                   Method type GetType()\r\nToString(             ToString                  Method string ToString()\r\n```\r\n\r\nIdeally `$PSItem.Exception.<tab>` would also infer members of the exception specified in the catch block.\r\n\r\n\r\n### Actual behavior\r\n\r\n```console\r\nNo results\r\n```\r\n\r\n\r\n### Error details\r\n\r\n_No response_\r\n\r\n### Environment data\r\n\r\n```powershell\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.3.0-preview.5\r\nPSEdition                      Core\r\nGitCommitId                    7.3.0-preview.5\r\nOS                             Microsoft Windows 10.0.19044\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\n\r\n### Visuals\r\n\r\n_No response_",
  "closed_at": "2022-07-25T18:27:24Z",
  "comments": [
    {
      "author": "JustinGrote",
      "author_association": "CONTRIBUTOR",
      "body": "I think the whole idea of \"`$_` is the error\" throws a lot people getting started with error handing (pun intended) and why try/catch is not as popular as it should be, I think this tooling update would go a long way to helping people feel more comfortable with it.",
      "created_at": "2022-06-30T16:13:38Z",
      "updated_at": "2022-06-30T16:13:38Z"
    },
    {
      "author": "MartinGC94",
      "author_association": "CONTRIBUTOR",
      "body": "I've made a fix for this. It's worth noting that this was actually working fine, as long as you provided at least one valid type to the catch block like: `try{}catch [System.DivideByZeroException] {$_.<Tab>}`\r\nMy fix simply adds a fallback to a standard ErrorRecord in case all the types were invalid.  \r\nThe type inference idea by Patrick for `$PSItem.Exception.<tab>` also seems to already have been implemented but I haven't checked if the completion code properly recognizes it, but I would assume it does.",
      "created_at": "2022-07-20T22:19:41Z",
      "updated_at": "2022-07-20T22:19:41Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:This issue was addressed in #17716, which has now been successfully released as `v7.3.0-preview.7`.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.3.0-preview.7)\n",
      "created_at": "2022-08-12T00:00:41Z",
      "updated_at": "2022-08-12T00:00:41Z"
    }
  ],
  "created_at": "2022-06-30T15:52:00Z",
  "labels": [
    "Issue-Enhancement",
    "WG-Interactive-IntelliSense",
    "Resolution-Fixed"
  ],
  "number": 17613,
  "state": "closed",
  "title": "Tab completion should find members for `$_` in a typed `catch` block",
  "updated_at": "2022-08-12T00:00:41Z"
}