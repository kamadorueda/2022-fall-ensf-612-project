{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15795",
  "author": "cklutz",
  "body": "### Prerequisites\n\n- [X] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\n\n### Steps to reproduce\n\nWhen adding '.' to $env:PATH _inside_ PowerShell (like suggested in #14106), the '.' seems to refer to the directory where the `$env:PATH = $env:PATH + ';.'` was issued, but does not denote the actual \"current directory\", when you change the current directory (using `Set-Location`).\r\n\r\n```\r\n(PS> $env:PATH=\"\")\r\nPS> mkdir $env:TEMP\\a\r\nPS> mkdir $env:TEMP\\b\r\nPS> echo \"@echo from a\" > $env:TEMP\\a\\t.cmd\r\nPS> echo \"@echo from b\" > $env:TEMP\\b\\t.cmd\r\nPS> cd $env:TEMP\\a\r\nPS> $env:PATH=$env:PATH + ';.'\r\nPS> t.cmd\r\nfrom a\r\nPS> cd $env:TEMP\\b\r\nPS> t.cmd\r\nfrom a\r\n```\r\n\r\nThat last line should output `from b` (also see \"Expected haviour\" below). Note that clearing `env:PATH` before all this is \"optional\" - the behavior is the same.\r\n\r\nInterestingly, if you repeat `$env:PATH=$env:PATH + ';.'` in another directory (like above in `$env:TEMP\\b`), then this new directory will be considered for the '.' (that is above invoking `t.cmd` would output `from b`, regardless of where  the actual `Get-Location` is at).\r\n\r\nExample:\r\n```\r\nPS> cd $env:TEMP\\a\r\nPS> $env:PATH=$env:PATH + ';.'\r\nPS> t.cmd\r\nfrom a\r\nPS> cd $env:TEMP\\b\r\nPS> $env:PATH=$env:PATH + ';.'\r\nPS> t.cmd\r\nfrom b\r\nPS> cd $env:TEMP\\a\r\nPS> t.cmd\r\nfrom b\r\n```\r\n\r\nTests have been done with 7.1.3, but same behavior can be observed with 7.2.0-preview7.\r\n \n\n### Expected behavior\n\n```console\nPS> cd $env:TEMP\\a\r\nPS> $env:PATH=$env:PATH + ';.'\r\nPS> t.cmd\r\nfrom a\r\nPS> cd $env:TEMP\\a\r\nPS> t.cmd\r\nfrom b\n```\n\n\n### Actual behavior\n\n```console\nPS> cd $env:TEMP\\a\r\nPS> $env:PATH=$env:PATH + ';.'\r\nPS> t.cmd\r\nfrom a\r\nPS> cd $env:TEMP\\a\r\nPS> t.cmd\r\nfrom a\n```\n\n\n### Error details\n\n_No response_\n\n### Environment data\n\n```powershell\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.3\r\nPSEdition                      Core\r\nGitCommitId                    7.1.3\r\nOS                             Microsoft Windows 10.0.18363\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\n```\n\n\n### Visuals\n\n_No response_",
  "closed_at": null,
  "comments": [
    {
      "author": "cklutz",
      "author_association": "NONE",
      "body": "Hi, any news or opinions on this? I would have thought this to be a common issue with people migrating from typical CMD based envs, but then may not :-)",
      "created_at": "2021-09-06T07:22:19Z",
      "updated_at": "2021-09-06T07:23:20Z"
    },
    {
      "author": "timkgithub",
      "author_association": "NONE",
      "body": "I vote to get this triaged also.\r\n\r\nAdding '.\\' to the **PATH** list should always resolve to the current path when you change directories!\r\n",
      "created_at": "2021-10-15T00:58:08Z",
      "updated_at": "2021-10-15T00:58:08Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "What is cmd.exe and bash behavior?",
      "created_at": "2021-10-15T12:13:16Z",
      "updated_at": "2021-10-15T12:13:16Z"
    },
    {
      "author": "cklutz",
      "author_association": "NONE",
      "body": "Bash and CMD.EXE treat it exactly like this. As possibly any other shell (csh ksh sh \u2026). Which is why I opened this issue in the first place. I *think* even Windows powershell does it that way, but cannot verify right now.",
      "created_at": "2021-10-15T15:23:01Z",
      "updated_at": "2021-10-15T15:23:01Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "It looks to me PowerShell command discovery somehow cached the `t.cmd` it found from the first time. From your example repro above, continue to run the following:\r\n```\r\n> cd c:\\   # move to a completely unrelated location, which doesn't contain a 't.cmd' file\r\n> t.cmd\r\nfrom a\r\n```",
      "created_at": "2021-11-10T23:48:49Z",
      "updated_at": "2021-11-10T23:48:49Z"
    }
  ],
  "created_at": "2021-07-19T06:21:31Z",
  "number": 15795,
  "state": "open",
  "title": "Adding '.' to env:PATH adds/remembers the directory where the command was issued, does not denote the ambient current directory later on",
  "updated_at": "2021-11-11T23:55:25Z"
}