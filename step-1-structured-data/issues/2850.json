{
  "_url": "https://github.com/PowerShell/PowerShell/issues/2850",
  "author": "powercode",
  "body": "Fixes #2763 \r\nSystem.Management.Automation:\r\nAdding ProcessCodeMethods.cs to do the pinvokes and the mandatory timestamp check\r\nfor parent processes.\r\nAdding 'Parent' CodeProperty to Process in Types_Ps1Xml.generates.cs \r\nFor unix, ```/proc/<pid>/stat``` is parsed.\r\nMoving\u00a0addition of process PSProperties to SMA ClrFacade.",
  "closed_at": "2017-03-06T23:21:40Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I think that this property will rarely be used. May be better to expose the method `GetParentProcessId` rather than the property?",
      "created_at": "2016-12-07T14:09:47Z",
      "updated_at": "2016-12-07T14:09:47Z"
    },
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "So what is reasonable tests for this? \r\nStarting another version of powershell, checking that Parent.ID -eq $pid and then kill the child?\r\nThat processes in general has parents? Some doesn't, and for some we don't have access.\r\nPowerShell seems like the only process we can know will exist on the system under test.\r\n",
      "created_at": "2017-01-27T13:58:55Z",
      "updated_at": "2017-01-27T14:01:07Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I would start with:\r\n```powershell\r\npowershell.exe -Command { [???]::GetParentProcess($pid) } | Should Be $pid\r\n```",
      "created_at": "2017-01-27T14:23:08Z",
      "updated_at": "2017-01-27T14:23:08Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "Look for other tests that run PowerShell.exe to see how we run cross platform using $pshome.",
      "created_at": "2017-01-27T15:13:15Z",
      "updated_at": "2017-01-27T15:13:15Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "@powercode  - can you either give us permission to push to your branch, or add a test like:\r\n\r\n```powershell\r\nDescribe \"Process Parent property\" -Tags \"CI\" {\r\n    It \"Parent process property\" {\r\n        $powershellexe = (get-process -id $PID).mainmodule.filename\r\n        & $powershellexe -noprofile -command '(Get-Process -Id $pid).Parent.Id' | Should Be $pid\r\n    }\r\n}\r\n```\r\n\r\nIf you add the test yourself, please rebase on master as we've fixed an issue that was causing many hangs in CI and we'll want that to test your change in CI.",
      "created_at": "2017-02-27T05:25:16Z",
      "updated_at": "2017-02-27T05:25:16Z"
    },
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "Sorry for the delay. On sabbatical. Added the test as suggested.",
      "created_at": "2017-02-27T17:16:37Z",
      "updated_at": "2017-02-27T17:16:37Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "Thanks for adding a test - the test fails on Mac.  If you don't have a Mac to investigate, maybe we can find someone to help track down why it works on Linux but not Mac.",
      "created_at": "2017-02-27T17:53:48Z",
      "updated_at": "2017-02-27T17:53:48Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Maybe security http://stackoverflow.com/questions/40218676/get-parent-process-information-at-runtime-on-ios-application",
      "created_at": "2017-02-27T18:15:54Z",
      "updated_at": "2017-02-27T18:15:54Z"
    },
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov No, I parse /proc/$pid. But maybe that info reflects the same information. Anyone has access to a mac to see how the output of /proc/$pid looks?\r\n\r\n",
      "created_at": "2017-02-27T18:26:35Z",
      "updated_at": "2017-02-27T18:27:16Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@vors Can you help with Mac?",
      "created_at": "2017-02-27T18:28:02Z",
      "updated_at": "2017-02-27T18:28:02Z"
    },
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "http://superuser.com/questions/631693/where-is-the-proc-folder-on-mac-os-x#631696\r\n\r\nOS X (which is based on BSD) does not implement a procfs.",
      "created_at": "2017-02-27T18:29:32Z",
      "updated_at": "2017-02-27T18:29:32Z"
    },
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "Is this a viable alternative? \r\n```\r\nps -o ppid --no-headers --pid $pid\r\n```",
      "created_at": "2017-02-27T19:08:52Z",
      "updated_at": "2017-02-27T19:08:52Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "If Powershell is in sandbox we get empty as with sysctl.\r\n\r\nI suggest don't block the PR, pending the test for Mac and open Issue to fix this problem.",
      "created_at": "2017-02-27T19:19:49Z",
      "updated_at": "2017-02-27T19:20:46Z"
    },
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "How about something like this in libpsl-native\r\n```\r\npid_t GetPPid(pid_t pid)\r\n{\r\n    const pid_t PIDUnknown = UINT_MAX;\r\n    struct kinfo_proc info;\r\n    size_t length = sizeof(struct kinfo_proc);\r\n    int mib[4] = {CTL_KERN, KERN_PROC, KERN_PROC_PID, pid};\r\n    if (sysctl(mib, 4, &info, &length, NULL, 0) < 0)\r\n        return PIDUnknown;\r\n    if (length == 0)\r\n        return PIDUnknown;\r\n    return info.kp_eproc.e_ppid;\r\n}\r\n```\r\nAnd maybe switch the Linux version to using that implementation too?",
      "created_at": "2017-03-01T03:43:42Z",
      "updated_at": "2017-03-01T03:44:20Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "1 implementation that works on Mac/Linux is ideal, so if it works, go for it.",
      "created_at": "2017-03-01T04:00:17Z",
      "updated_at": "2017-03-01T04:00:17Z"
    },
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "I moved some code around (to Platform.Unix).\r\nAll sysctl's aren't implemented across FreeBSD/Linux and the kinfo_proc seems to be one of them. So we have a sysctl for OSX and parsing of procfs for Linux.\r\n",
      "created_at": "2017-03-02T03:28:50Z",
      "updated_at": "2017-03-02T03:28:50Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "@andschwa - it'd be great if you can review the native Linux/Mac code here.",
      "created_at": "2017-03-06T06:06:41Z",
      "updated_at": "2017-03-06T06:06:41Z"
    }
  ],
  "created_at": "2016-12-07T00:40:05Z",
  "number": 2850,
  "state": "closed",
  "title": "Adding Parent extended property to System.Diagnostics.Process",
  "updated_at": "2017-04-25T18:59:48Z"
}