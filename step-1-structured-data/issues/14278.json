{
  "_url": "https://github.com/PowerShell/PowerShell/issues/14278",
  "author": "mklement0",
  "body": "Note: This isn't likely to arise often in practice, but is an inconsistency that should be addressed.\r\n\r\nIn most contexts, notably in string interpolation, PowerShell uses the _invariant_ rather than the _current_ culture for converting numbers to strings, for consistency across cultures; e.g., `\"$(1.2)\"` yields `'1.2'` in any culture, i.e. `.` is always used as the decimal mark.\r\n\r\nBy contrast, when hash tables are converted to `[pscustomobject]`s, which necessitates converting non-string keys to strings, keys that are either of type `[double]` or `[decimal]` are unexpectedly stringified based on the _current_ culture.\r\n\r\n## Steps to reproduce\r\n\r\n```powershell\r\ntry {\r\n $org = [cultureinfo]::CurrentCulture\r\n [cultureinfo]::CurrentCulture = 'fr-FR'  # e.g.; use a culture that uses \",\" as the decimal mark\r\n ([pscustomobject] @{ 1.2 = 'hi' }).'1.2' | Should -Be 'hi'\r\n} finally {\r\n [cultureinfo]::CurrentCulture = $org\r\n}\r\n```\r\n\r\n## Expected behavior\r\n\r\nThe test should succeed, because `[double]` `1.2` should  always stringify to `'1.2'`.\r\n\r\n## Actual behavior\r\n\r\nThe test fails, because with culture `fr-FR` (French) in effect, where `,` is the decimal mark, `1.2` stringified to `'1,2'`.\r\n\r\n```none\r\nExpected 'hi', but got $null.\r\n```\r\n\r\n## Environment data\r\n\r\n```none\r\nPowerShell Core 7.2.0-preview.1\r\n```\r\n",
  "closed_at": null,
  "comments": [],
  "created_at": "2020-11-27T18:14:20Z",
  "labels": [
    "Issue-Question",
    "WG-Engine",
    "Breaking-Change"
  ],
  "number": 14278,
  "state": "open",
  "title": "Converting a hashtable to [pscustomobject] unexpectedly stringifies keys in a culture-sensitive fashion",
  "updated_at": "2020-11-29T17:04:13Z"
}