{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7213",
  "author": "SidShetye",
  "body": "Needed for x-platform scripting (us: our .net core projects)\r\n\r\n## Update by @travisez13 on 7/2/2018\r\n\r\n### Scenario\r\n\r\nUse PowerShell to initialize development and production environments with certificates with private keys across supported platforms, mirroring DotNet Core`s certificate store model.  Development platforms are Windows 10, macOS and Ubuntu. Production platforms are Windows Server and RHEL.  This should support user and machine locations and the various certificate stores supported on that platform by DotNet Core.",
  "closed_at": null,
  "comments": [
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "what would this do on Linux?    I think we need a little more information.",
      "created_at": "2018-06-30T18:59:59Z",
      "updated_at": "2018-06-30T18:59:59Z"
    },
    {
      "author": "SidShetye",
      "author_association": "NONE",
      "body": "It should import the certificate and private key into specified certificate stores (my, trust/root etc) and locations (local user vs machine). They aren\u2019t fully consistent across OS\u2019s, so I\u2019d suggest mirroring the same model as dotnet\u2019s. \r\n\r\nSpecifically our use case is to initialize developer platforms and production servers with the right certificates for .net development and production workloads.",
      "created_at": "2018-06-30T22:44:56Z",
      "updated_at": "2018-06-30T22:46:51Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "So the expectation would be able to use the certificates stored in DotNet Core applications?",
      "created_at": "2018-06-30T23:46:36Z",
      "updated_at": "2018-06-30T23:46:36Z"
    },
    {
      "author": "SidShetye",
      "author_association": "NONE",
      "body": "Yes, powershell initializes the environments, including certificates and private keys in each OS. .NET Apps use these certificates. Development platforms are Windows 10, macOS and Ubuntu. Production platforms are Windows Server and RHEL. ",
      "created_at": "2018-07-01T02:02:02Z",
      "updated_at": "2018-07-01T02:02:02Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "I updated the issue description with my current understanding of the Enhancement request. Please tell me if I got it wrong.\r\n\r\nBTW, I checked about 3 Unix platforms and none of the certificate stores have certificates in them by default (vs Windows behavior).  Also, very few stores were supported in the local machine context.  But, I agree we should mirror the DotNet Core behavior.  I just want to set expectations.\r\n\r\nAnother thing to consider, is that this CmdLet is provided by Windows, in Windows PowerShell, not PowerShell it self.  So, we have to think about how to maintain compatibilty with Windows when implementing.\r\n\r\nThanks for the feedback.",
      "created_at": "2018-07-02T19:42:45Z",
      "updated_at": "2018-07-02T19:42:45Z"
    },
    {
      "author": "SidShetye",
      "author_association": "NONE",
      "body": "Thanks for the background. To share more, we're retooling our environments to support x-platform builds and products. Various OSes don't follow the same certificate store model (makes sense) but that makes it hell for end users like ourselves. The hope is that by .NET/Powershell abstracting away the underlying differences, users have a consistent API to work against productively.",
      "created_at": "2018-07-03T01:10:13Z",
      "updated_at": "2018-07-03T01:10:13Z"
    },
    {
      "author": "SidShetye",
      "author_association": "NONE",
      "body": "Any update on this? Certificate store operations are pretty painful across the platforms supported by powershell/ps core, so having PS abstract this pain away would be great. ",
      "created_at": "2019-09-10T23:46:59Z",
      "updated_at": "2019-09-10T23:46:59Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "The request is understood.  It's in our backlog, but if we decide to work on it, then it will be moved to a specific milestone.",
      "created_at": "2019-09-11T00:02:43Z",
      "updated_at": "2019-09-11T00:02:43Z"
    }
  ],
  "created_at": "2018-06-30T07:51:48Z",
  "labels": [
    "Issue-Enhancement"
  ],
  "number": 7213,
  "state": "open",
  "title": "Support Import-PfxCertificate on Unix",
  "updated_at": "2019-09-11T00:02:44Z"
}