{
  "_url": "https://github.com/PowerShell/PowerShell/issues/829",
  "author": "TingLiu6",
  "body": "After running Pester test code below,  the exception is 'Execution OK' rather than the desired one.\n\n```\n    It \"Should be throw Exception when missing mandatory parameter -script\" -Skip:($IsLinux -Or $IsOSX) {\n        $ErrorActionPreference = \"Stop\"\n        try {\n            powershell.exe -noninteractive -command 'sbp -line 1' \n            Throw \"Execution OK\" \n        }\n        catch {\n            $_.FullyQualifiedErrorId | Should Be \"MissingMandatoryParameter,Microsoft.PowerShell.Commands.SetPSBreakpointCommand\"\n        }\n        $ErrorActionPreference = \"SilentlyContinue\"\n    }\n```\n\nBut when running command \"powershell.exe -noninteractive -command 'sbp -line 1'\" in our test environment, it throw the exception as expected: \n![capture](https://cloud.githubusercontent.com/assets/16587262/14481717/524a2876-0168-11e6-9529-c0927dc23ac0.JPG)\n",
  "closed_at": "2016-04-20T18:41:54Z",
  "comments": [
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "We don't yet have support for noninteractive on Linux; what does it do?\n",
      "created_at": "2016-04-13T07:03:18Z",
      "updated_at": "2016-04-13T07:03:18Z"
    },
    {
      "author": "TingLiu6",
      "author_association": "CONTRIBUTOR",
      "body": "Skipping on Linux, does it support for Windows? \nIt's a unit test for Set-PSBreakpoint, Details please refer to the file below(Line 106-110).\n[Set-PSBreakpoint Tests](https://github.com/PowerShell/psl-monad/blob/5b0cc1d0973cd6eddc348177e2f306c727b4d4d9/monad/tests/monad/DRT/commands/utility/UnitTests/Set-PsBreakpointTests.cs)\n",
      "created_at": "2016-04-13T08:51:49Z",
      "updated_at": "2016-04-13T08:51:49Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Sorry, I shouldn't have said Linux. I mean the CoreConsoleHost, which is PowerShell Core's host on both Windows and Linux.\n",
      "created_at": "2016-04-13T15:27:36Z",
      "updated_at": "2016-08-18T00:00:51Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Once we have `-noninteractive` we need to fix the pending tests in `Set-PSBreakpoint`.\n",
      "created_at": "2016-04-14T18:49:39Z",
      "updated_at": "2016-04-14T18:49:39Z"
    },
    {
      "author": "palladia",
      "author_association": "CONTRIBUTOR",
      "body": "Fixed with #858\n",
      "created_at": "2016-04-18T20:04:53Z",
      "updated_at": "2016-04-18T20:04:53Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "@palladia Did you re-enable the pending tests and fix how PowerShell itself is getting called? That second part is blocked on #855, which I'm waiting for a sign-off.\n",
      "created_at": "2016-04-18T20:08:35Z",
      "updated_at": "2016-04-18T20:08:35Z"
    },
    {
      "author": "palladia",
      "author_association": "CONTRIBUTOR",
      "body": "I didn't touch the Pester tests.\n",
      "created_at": "2016-04-18T20:11:24Z",
      "updated_at": "2016-04-18T20:11:24Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "@palladia Please enable them and use `Get-PSOutput` from the build module to run the development version of PowerShell in the test.\n",
      "created_at": "2016-04-18T20:21:27Z",
      "updated_at": "2016-04-18T20:21:27Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Fixed.\n",
      "created_at": "2016-04-20T18:41:54Z",
      "updated_at": "2016-04-20T18:41:54Z"
    }
  ],
  "created_at": "2016-04-13T03:19:41Z",
  "number": 829,
  "state": "closed",
  "title": "Fail to catch the exception in Pester Test when run 'powershell.exe -noninteractive' command.",
  "updated_at": "2016-08-18T00:00:51Z"
}