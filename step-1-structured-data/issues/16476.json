{
  "_url": "https://github.com/PowerShell/PowerShell/issues/16476",
  "author": "nebzz",
  "body": "### Prerequisites\n\n- [X] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\n\n### Steps to reproduce\n\nName any folder with th first character starting with and angle brakcet, eg. [MyFolder]\r\n\r\nno just to cd in this path: cd /path/to/[Myfolder]\r\n\r\nis unreliable and will almost always eventually fail.\r\n\r\nAs you can see on the attached screenshot, I could initial cd into the folder\r\nbut after sometime the path can't be found, even as printing the folder contents show its present\r\n\r\n![pw](https://user-images.githubusercontent.com/6778757/141932387-3ed23123-42de-4a18-aebc-703dec1fef15.png)\r\nnt\n\n### Expected behavior\n\n```console\nPS c: cd /path/to/[Myfolder]\r\nPS /path/to/[Myfolder]:\n```\n\n\n### Actual behavior\n\n```console\nPS c: cd /path/to/[Myfolder]\r\nSet-Location: Cannot find path '/path/to/[Myfolder]' because it does not exist.\n```\n\n\n### Error details\n\n```console\nSet-Location: Cannot find path '/path/to/[Myfolder]' because it does not exist.\n```\n\n\n### Environment data\n\n```powershell\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.0\r\nPSEdition                      Core\r\nGitCommitId                    7.2.0\r\nOS                             Microsoft Windows 10.0.19043\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\n```\n\n\n### Visuals\n\n![pw](https://user-images.githubusercontent.com/6778757/141932674-b4a43f12-6d42-4551-9fbe-13799780d115.png)\r\n",
  "closed_at": "2021-11-16T17:53:13Z",
  "comments": [
    {
      "author": "kborowinski",
      "author_association": "NONE",
      "body": "@nebzz : This is why *Set-Location* and similar cmdlets have **LiteralPath** parameter:\r\n```\r\n> cd -LiteralPath D:\\TMP\\[Student]\\\r\nD:\\TMP\\[Student] >\r\n```",
      "created_at": "2021-11-16T12:15:11Z",
      "updated_at": "2021-11-16T12:15:11Z"
    },
    {
      "author": "nebzz",
      "author_association": "NONE",
      "body": "But this is not obvious, for instance, \r\n\r\nI was compiling my java files using vscode java pack.  vscode (not commands I type) would try to compile and run the java files, and would run into the same problem... considering these are legal folder names would it not be best to adapt PS to be able to handle such folder names",
      "created_at": "2021-11-16T12:19:43Z",
      "updated_at": "2021-11-16T12:20:31Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "The adaptation is `-LiteralPath`, that's how PS handles them.\r\n\r\nThe reason this particular adaptation is necessary is mainly historic; wildcard patterns on Windows (and even DOS) have always accepted `[abc]` and similar patterns as a wildcard expression when searching or filtering items.\r\n\r\nThere is a lot of work that can be done to make this interface friendlier, and there are a number of existing issues around PS's specific implementations and edge cases where things aren't quite as nice (see #7999 for a decently comprehensive breakdown).\r\n\r\nIt's possible that `Set-Location` specifically could be updated to not use wildcards at all, but I suspect it was implemented as a convenience feature to minimise the amount of typing required to navigate. I'm unsure how likely it would be to expect this to change in the future, but typically features like this with a long history are difficult to change due to the risk of breaking existing code.",
      "created_at": "2021-11-16T17:06:22Z",
      "updated_at": "2021-11-16T17:06:22Z"
    },
    {
      "author": "nebzz",
      "author_association": "NONE",
      "body": "Noted, thank you.",
      "created_at": "2021-11-16T17:08:26Z",
      "updated_at": "2021-11-16T17:08:26Z"
    },
    {
      "author": "MartinGC94",
      "author_association": "CONTRIBUTOR",
      "body": "You can add this to your $profile to replace the cd alias with a function: \r\n```\r\nRemove-Item -LiteralPath Alias:\\cd\r\nfunction cd ([string]$Path)\r\n{\r\n    Set-Location -LiteralPath $Path\r\n}\r\n```",
      "created_at": "2021-11-16T17:16:32Z",
      "updated_at": "2021-11-16T17:16:32Z"
    },
    {
      "author": "nebzz",
      "author_association": "NONE",
      "body": "Great, thank you!",
      "created_at": "2021-11-16T17:17:26Z",
      "updated_at": "2021-11-16T17:17:26Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "`LP` is an alias for the `LiteralPath` parameter, so this:\r\n```\r\n> cd -LiteralPath D:\\TMP\\[Student]\\\r\n```\r\ncan be shortened to:\r\n```\r\n> cd -lp D:\\TMP\\[Student]\\\r\n```",
      "created_at": "2021-11-16T18:23:24Z",
      "updated_at": "2021-11-16T18:23:24Z"
    }
  ],
  "created_at": "2021-11-16T06:25:28Z",
  "labels": [
    "Issue-Question",
    "WG-Engine-Providers"
  ],
  "number": 16476,
  "state": "closed",
  "title": "In ability to set location of folders whose filename starts with an angle bracket",
  "updated_at": "2021-11-16T18:23:24Z"
}