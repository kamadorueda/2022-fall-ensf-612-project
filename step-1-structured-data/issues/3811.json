{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3811",
  "author": "MadelineRitchie",
  "body": "Invoke-WebRequest should allow body content on DELETE, and perhaps any verb. \r\n\r\nWhenever I run into an API that accepts data on DELETE, I am hamstrung by the client-side enforcement of which verbs can send a body and which cannot. For example, posting data on DELETE is used by many applications such as tumblr/collins to log reasons server-side. This may or may not be a good use of verbs and APIs, but I can't fix the server. I'm required to reimplement Invoke-WebRequest around System.Net.HttpWebRequest::CreateHttp to get the request in the shape that I need. Allowing the user to send a body with any verb is going to allow some needed flexibility in our world of varying APIs. Having a request fail because Invoke-WebRequest can only query perfect APIs will keep people from using it. Curl is a good example of how an API consumer should be less opinionated because it's a part of an imperfect world. With curl, if I construct an HTTP request that follows the core of HTTP but mismatches verbs, content, headers, etc, that's really my prerogative. If the goal for PowerShell 6.0 is to be amazing in the cloud, it has to be amazing in some rainier clouds.\r\n\r\n\r\nAs far as HTTP standards, body content on DELETE has some discussion here:\r\nhttp://stackoverflow.com/questions/299628/is-an-entity-body-allowed-for-an-http-delete-request \r\n\r\n\r\nThank you for your time. I love love PowerShell.\r\n\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.0-beta\r\nPSEdition                      Core\r\nBuildVersion                   3.0.0.0\r\nCLRVersion\r\nGitCommitId                    v6.0.0-beta.1\r\nOS                             Darwin 16.5.0 Darwin Kernel Version 16.5.0: Fri Mar  3 16:52:33 PST 2017; root:xnu-3789.51.2~3/RELEASE_X86_64\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```",
  "closed_at": "2017-10-03T14:17:31Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@JasonRitchie Thanks for your report!",
      "created_at": "2017-05-18T15:15:05Z",
      "updated_at": "2017-05-18T15:15:05Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@JasonRitchie is there a specific scenario/api that fails because we don't allow body on DELETE?  I'm trying to prioritize this work.  Thanks.",
      "created_at": "2017-05-18T21:52:31Z",
      "updated_at": "2017-05-18T21:52:31Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT This appears to be fixed (likely due to upstream changes). I can no longer repro this.\r\n@JasonRitchie  Can you confirm this is no longer an issue?\r\n\r\n```powershell\r\n$Body = \"Test\"\r\nInvoke-WebRequest -Method DELETE -Body $Body -uri https://httpbin.org/delete\r\nInvoke-RestMethod -Method DELETE -Body $Body -uri https://httpbin.org/delete\r\n```\r\n\r\nResult:\r\n\r\n```none\r\nStatusCode        : 200\r\nStatusDescription : OK\r\nContent           : {\r\n                      \"args\": {},\r\n                      \"data\": \"Test\",\r\n                      \"files\": {},\r\n                      \"form\": {},\r\n                      \"headers\": {\r\n                        \"Connection\": \"close\",\r\n                        \"Content-Length\": \"4\",\r\n                        \"Host\": \"httpbin.org\",\r\n                        \"User-Agent\": \"Mozilla/5.0 (Wi...\r\nRawContent        : HTTP/1.1 200 OK\r\n                    Connection: keep-alive\r\n                    Date: Tue, 03 Oct 2017 09:23:03 GMT\r\n                    Via: 1.1 vegur\r\n                    Server: meinheld/0.6.1\r\n                    Access-Control-Allow-Origin: *\r\n                    Access-Control-Allow-Credentials: true\r\n                    X-Powered-...\r\nForms             :\r\nHeaders           : {[Connection, System.String[]], [Date, System.String[]], [Via, System.String[]], [Server,\r\n                    System.String[]]...}\r\nImages            : {}\r\nInputFields       : {}\r\nLinks             : {}\r\nParsedHtml        :\r\nRawContentLength  : 360\r\nRelationLink      : {}\r\n\r\nargs    :\r\ndata    : Test\r\nfiles   :\r\nform    :\r\nheaders : @{Connection=close; Content-Length=4; Host=httpbin.org; User-Agent=Mozilla/5.0 (Windows NT; Microsoft\r\n          Windows 10.0.15063 ; en-US) PowerShell/6.0.0}\r\njson    :\r\norigin  : 173.239.232.67\r\nurl     : https://httpbin.org/delete\r\n```\r\n\r\n`$PSversionTable`:\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.0-beta.7\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.0-beta.7-83-g417e9889399e2e0e6a90d52ff58ae08ec08b1cf2\r\nOS                             Microsoft Windows 10.0.15063\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```",
      "created_at": "2017-10-03T09:27:42Z",
      "updated_at": "2017-10-03T09:27:42Z"
    },
    {
      "author": "MadelineRitchie",
      "author_association": "NONE",
      "body": "I believe this was a lack of understanding on my part.\r\n\r\nI dug back into this and tried to reproduce it, and I was able to, but resolving it was as simple as setting -ContentType correctly. This worked even when I rolled back to beta.1.\r\n\r\nI'll give the details here for anyone else who may come across this.\r\n\r\nIn my initial naive attempt, you can see the body content is sent in query string format as the \"data\" content. The application I was hitting, tumblr collins, would have none of this. I have to admit I spent far too long stuck on this and I didn't have the understanding back then to identify the real issue.\r\n```\r\nInvoke-WebRequest -Method DELETE -Body $Body -uri https://httpbin.org/delete -Headers @{'authorization'='basic thing'}\r\ntatusCode        : 200                                                                                                                                                                                                                                                   StatusDescription : OK\r\nContent           : {\r\n                      \"args\": {},\r\n                      \"data\": \"baz=qux&reason=no+reason&foo=bar\",\r\n                      \"files\": {},\r\n                      \"form\": {},\r\n                      \"headers\": {\r\n                        \"Accept\": \"*/*\",\r\n                        \"Authorization\": \"basic thing\",\r\n                        \"Connection\": \"close\",\r\n                       ...\r\nRawContent        : HTTP/1.1 200 OK\r\n                    Connection: keep-alive\r\n                    Server: meinheld/0.6.1\r\n                    Date: Tue, 03 Oct 2017 14:01:03 GMT\r\n                    Access-Control-Allow-Origin: *\r\n                    Access-Control-Allow-Credentials: true\r\n                    X-Powered-By: Flask\r\n                    X-Processed-...\r\nForms             :\r\nHeaders           : {[Connection, System.String[]], [Server, System.String[]], [Date, System.String[]], [Access-Control-Allow-Origin, System.String[]]...}\r\nImages            : {}\r\nInputFields       : {}\r\nLinks             : {}\r\nParsedHtml        :\r\nRawContentLength  : 535\r\n```\r\n\r\nToday as I revisited this I compared the behavior of POST to DELETE. DELETE doesn't set a content type by default. I have no problem with this behavior. In fact, I found this behavior defined in the official documentation.\r\n\r\nhttps://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/invoke-webrequest?view=powershell-6 \r\n`If this parameter is omitted and the request method is POST, Invoke-WebRequest sets the content type to application/x-www-form-urlencoded. Otherwise, the content type is not specified in the call.`\r\n\r\nHere is all it took:\r\n```\r\nInvoke-WebRequest -Method DELETE -Body $Body -uri https://httpbin.org/delete -Headers @{'authorization'='basic thing'} -ContentType 'application/x-www-form-urlencoded'\r\ntatusCode        : 200                                                                                                                                                                                                                                                   StatusDescription : OK\r\nContent           : {\r\n                      \"args\": {},\r\n                      \"data\": \"\",\r\n                      \"files\": {},\r\n                      \"form\": {\r\n                        \"baz\": \"qux\",\r\n                        \"foo\": \"bar\",\r\n                        \"reason\": \"no reason\"\r\n                      },\r\n                      \"headers\": {\r\n                        \"Accept\": \"*/*\",\r\n                        \"Authorization\": \"basic thing...\r\nRawContent        : HTTP/1.1 200 OK\r\n                    Connection: keep-alive\r\n                    Server: meinheld/0.6.1\r\n                    Date: Tue, 03 Oct 2017 14:13:48 GMT\r\n                    Access-Control-Allow-Origin: *\r\n                    Access-Control-Allow-Credentials: true\r\n                    X-Powered-By: Flask\r\n                    X-Processed-...\r\nForms             :\r\nHeaders           : {[Connection, System.String[]], [Server, System.String[]], [Date, System.String[]], [Access-Control-Allow-Origin, System.String[]]...}\r\nImages            : {}\r\nInputFields       : {}\r\nLinks             : {}\r\nParsedHtml        :\r\nRawContentLength  : 628\r\nRelationLink      : {}\r\n```\r\n\r\nI'll try to learn from this. I appreciate your time. I personally have no reason for this request to remain open.",
      "created_at": "2017-10-03T14:17:30Z",
      "updated_at": "2017-10-03T14:17:30Z"
    }
  ],
  "created_at": "2017-05-18T14:31:23Z",
  "labels": [
    "Resolution-Answered",
    "WG-Cmdlets-Utility"
  ],
  "number": 3811,
  "state": "closed",
  "title": "Invoke-WebRequest should allow body content on DELETE",
  "updated_at": "2017-10-03T16:24:46Z"
}