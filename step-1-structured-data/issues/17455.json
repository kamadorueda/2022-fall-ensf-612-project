{
  "_url": "https://github.com/PowerShell/PowerShell/issues/17455",
  "author": "daxian-dbw",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nFix #17452\r\n\r\nThe changes in this PR update the behavior of `Out-File` and `Out-String` regarding the `RenderingOutput` setting to be the following:\r\n- when the input object is pure string, these 2 cmdlets keep the string input unchanged regardless of the `RenderingOutput` setting\r\n- when the input object needs to have formatting views applied to it, these 2 cmdlets remove escape sequences from the formatting output strings based on the `RenderingOutput` setting.\r\n\r\nThis change is a breaking change to these 2 cmdlets' existing behavior regarding `RenderingOutput`.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [ ] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [ ] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/main/reference/7.3/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [x] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [x] Issue filed: https://github.com/MicrosoftDocs/PowerShell-Docs/issues/8892\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n",
  "closed_at": "2022-06-09T01:13:41Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "We need to update docs https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_ansi_terminals?view=powershell-7.2\n\n<blockquote><img src=\"https://docs.microsoft.com/media/logos/logo-powershell-social.png\" width=\"48\" align=\"right\"><div><strong><a href=\"https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_ansi_terminals\">about ANSI terminals - PowerShell</a></strong></div><div>Describes the features of PowerShell that use ANSI escape sequences and the terminal hosts that support them.</div></blockquote>",
      "created_at": "2022-05-31T17:04:20Z",
      "updated_at": "2022-05-31T17:04:22Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee Need the committee to review the breaking change comparing with 7.2.x.\r\nBelow is a summary of the breaking change. The corresponding issue is https://github.com/PowerShell/PowerShell/issues/17452.\r\n\r\nIn 7.2.x, `Out-File` and `Out-String` remove escape sequences from the passed-in strings when `$PSStyle.OutputRendering` is `Host` or `PlainText`.\r\n\r\nWhen the passed-in object has formatting views applied to it, removing escape sequences from the resulted formatting text makes perfect sense when the output rendering option is `Host` and `PlainText`.\r\n\r\nHowever, when the passed-in objects are pure strings, those 2 cmdlets shouldn't make any changes to the string objects, because\r\n1. that will make the scenarios like ``(Get-Content file-a -Raw).Replace(\"`r`n\", \"`n\") > file-b`` not working. Another example is that `Set-Content` and `Out-File` behave differently on string input under those output rendering options but they should really behave the same:\r\n   ```\r\n   ## Out-File changes the input strings when output rendering is `Host` or `PlainText`\r\n   \"`e[31mabc`e[0m\" | Set-Content -Path .\\abc.txt\r\n   \"`e[31mabc`e[0m\" | Out-File -Path .\\abc.txt\r\n   ```\r\n2. that also cause potential security problems as we are altering the string input when doing redirection. This was the reason why we changed the default `OutputRendering` option from `Host` to `Ansi` in [v7.2.1](https://github.com/PowerShell/PowerShell/releases/tag/v7.2.1)\r\n\r\n3. given that we have changed the default output rendering option back to `Host` in 7.3 preview, ``\"`e[31mabc`e[0m\" > .\\abc.txt`` won't work the same as in 7.0.x and 7.2.x by default. That is a regression to 2 LTS releases.\r\n\r\nI think the `$PSStyle.OutputRendering` option should only affect formatting output when it comes to `Out-File` and `Out-String`. When the input objects are pure strings, they should not be altered by `Out-File` or `Out-String` regardless of the output rendering option.",
      "created_at": "2022-06-06T17:10:28Z",
      "updated_at": "2022-06-07T21:55:15Z"
    },
    {
      "author": "ImportTaste",
      "author_association": "NONE",
      "body": "Is this going to get rid of the extra linebreak that happens too?",
      "created_at": "2022-06-07T20:58:55Z",
      "updated_at": "2022-06-07T20:58:55Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@ImportTaste This PR only affects escape sequences.",
      "created_at": "2022-06-07T21:52:49Z",
      "updated_at": "2022-06-07T21:52:49Z"
    },
    {
      "author": "pull-request-quantifier[bot]",
      "author_association": "NONE",
      "body": "### ![](https://img.shields.io/static/v1?label=Quantified&message=Small&color=green)\r\n\r\nThis PR has `66` quantified lines of changes. In general, a change size of upto `200` lines is ideal for the best PR experience!\r\n\r\n------\r\n\r\n<details >\r\n    <summary display=\"inline\"> <strong>Quantification details</strong></summary>\r\n    <p />\r\n\r\n```\r\nLabel      : Small\r\nSize       : +60 -6\r\nPercentile : 26.4%\r\n\r\nTotal files changed: 5\r\n\r\nChange summary by file extension:\r\n.cs : +6 -4\r\n.ps1 : +54 -2\r\n```\r\n> Change counts above are quantified counts, based on the [PullRequestQuantifier customizations](https://github.com/microsoft/PullRequestQuantifier/blob/main/docs/prquantifier-yaml.md).\r\n    \r\n</details>\r\n\r\n\r\n<details>\r\n    <summary display=\"inline\"> <strong>Why proper sizing of changes matters</strong> </summary>\r\n    <p/>\r\n    <p/>\r\n\r\nOptimal pull request sizes drive a better predictable PR flow as they strike a\r\nbalance between between PR complexity and PR review overhead. PRs within the\r\noptimal size (typical small, or medium sized PRs) mean:\r\n\r\n- Fast and predictable releases to production:\r\n  - Optimal size changes are more likely to be reviewed faster with fewer\r\niterations.\r\n  - Similarity in low PR complexity drives similar review times.\r\n- Review quality is likely higher as complexity is lower:\r\n  - Bugs are more likely to be detected.\r\n  - Code inconsistencies are more likely to be detetcted.\r\n- Knowledge sharing is improved within the participants:\r\n  - Small portions can be assimilated better.\r\n- Better engineering practices are exercised:\r\n  - Solving big problems by dividing them in well contained, smaller problems.\r\n  - Exercising separation of concerns within the code changes.\r\n\r\n#### What can I do to optimize my changes\r\n\r\n- Use the PullRequestQuantifier to quantify your PR accurately\r\n  - Create a context profile for your repo using the [context generator](https://github.com/microsoft/PullRequestQuantifier/releases)\r\n  - Exclude files that are not necessary to be reviewed or do not increase the review complexity. Example: Autogenerated code, docs, project IDE setting files, binaries, etc. Check out the `Excluded` section from your `prquantifier.yaml` context profile. \r\n  - Understand your typical change complexity, drive towards the desired complexity by adjusting the label mapping in your `prquantifier.yaml` context profile.\r\n  - Only use the labels that matter to you, [see context specification](./docs/prquantifier-yaml.md) to customize your `prquantifier.yaml` context profile.\r\n- Change your engineering behaviors\r\n  - For PRs that fall outside of the desired spectrum, review the details and check if:\r\n    - Your PR could be split in smaller, self-contained PRs instead\r\n    - Your PR only solves one particular issue. (For example, don't refactor and code new features in the same PR).\r\n\r\n#### How to interpret the change counts in git diff output\r\n\r\n- One line was added: `+1 -0`\r\n- One line was deleted: `+0 -1`\r\n- One line was modified: `+1 -1` (git diff doesn't know about modified, it will\r\ninterpret that line like one addition plus one deletion)\r\n- Change percentiles: Change characteristics (addition, deletion, modification)\r\nof this PR in relation to all other PRs within the repository.\r\n\r\n</details>\r\n\r\n<p />\r\n\r\n------\r\n\r\nWas this comment helpful? <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoiZGF4aWFuLWRidyIsIlJlcG9zaXRvcnlMaW5rIjoiaHR0cHM6Ly9naXRodWIuY29tL1Bvd2VyU2hlbGwvUG93ZXJTaGVsbCIsIlB1bGxSZXF1ZXN0TGluayI6Imh0dHBzOi8vZ2l0aHViLmNvbS9Qb3dlclNoZWxsL1Bvd2VyU2hlbGwvcHVsbC8xNzQ1NSIsIkV2ZW50VHlwZSI6IlRodW1ic1VwIn0=&amp;anonymous=True\" target=\"_blank\" title=\"Thumbs up\"><strong>:thumbsup:</strong></a> <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoiZGF4aWFuLWRidyIsIlJlcG9zaXRvcnlMaW5rIjoiaHR0cHM6Ly9naXRodWIuY29tL1Bvd2VyU2hlbGwvUG93ZXJTaGVsbCIsIlB1bGxSZXF1ZXN0TGluayI6Imh0dHBzOi8vZ2l0aHViLmNvbS9Qb3dlclNoZWxsL1Bvd2VyU2hlbGwvcHVsbC8xNzQ1NSIsIkV2ZW50VHlwZSI6Ik5ldXRyYWwifQ==&amp;anonymous=True\" target=\"_blank\" title=\"Neutral\"><strong>&nbsp;:ok_hand:</strong></a> <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoiZGF4aWFuLWRidyIsIlJlcG9zaXRvcnlMaW5rIjoiaHR0cHM6Ly9naXRodWIuY29tL1Bvd2VyU2hlbGwvUG93ZXJTaGVsbCIsIlB1bGxSZXF1ZXN0TGluayI6Imh0dHBzOi8vZ2l0aHViLmNvbS9Qb3dlclNoZWxsL1Bvd2VyU2hlbGwvcHVsbC8xNzQ1NSIsIkV2ZW50VHlwZSI6IlRodW1ic0Rvd24ifQ==&amp;anonymous=True\" target=\"_blank\" title=\"Thumbs down\"><strong>&nbsp;:thumbsdown:</strong></a> (<a href=\"MAILTO:prquantifier@microsoft.com\" title=\"Mail to prquantifier@microsoft.com\">Email</a>)\r\n[Customize PullRequestQuantifier](https://github.com/PowerShell/PowerShell/blob/master/.github/prquantifier.yaml) for this repository.\r\n\r\n",
      "created_at": "2022-06-08T18:01:11Z",
      "updated_at": "2022-06-08T18:01:11Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "I agree that we should consider so, but maybe wait until we get issue reports that someone really gets affected by this breaking change.\r\nAlso, `-AsPlainText` may be misleading because it means \"leaves the string as is\" in other places where this name is used, not \"removing ANSI sequences\", but we can discuss this more when we really get to consider adding this parameter.",
      "created_at": "2022-06-08T23:10:22Z",
      "updated_at": "2022-06-08T23:11:09Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee reviewed this, we would recommend adding a parameter to enable users to get back the previous behavior.",
      "created_at": "2022-06-08T23:44:35Z",
      "updated_at": "2022-06-08T23:44:35Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@SteveL-MSFT Is that a requirement for this PR or could do in separate PR? Also, is that supposed to be done now or should wait until there is a report about needing the previous behavior?",
      "created_at": "2022-06-08T23:49:14Z",
      "updated_at": "2022-06-08T23:49:14Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Given that the recommendation is a separate feature, I think it would be fine to use a separate PR if we really decided to add a parameter for the previous behavior. I will merge this PR and open an issue for that.\r\n\r\nOpened the issue https://github.com/PowerShell/PowerShell/issues/17509. I also left my comments there.",
      "created_at": "2022-06-09T01:11:59Z",
      "updated_at": "2022-06-09T02:31:39Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.3.0-preview.5` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.3.0-preview.5)\n",
      "created_at": "2022-06-22T20:27:09Z",
      "updated_at": "2022-06-22T20:27:09Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "/backport to release/v7.2.6",
      "created_at": "2022-08-02T20:03:06Z",
      "updated_at": "2022-08-02T20:03:06Z"
    },
    {
      "author": "github-actions[bot]",
      "author_association": "CONTRIBUTOR",
      "body": "Started backporting to release/v7.2.6: https://github.com/PowerShell/PowerShell/actions/runs/2784883343\n\n<blockquote><img src=\"https://repository-images.githubusercontent.com/49609581/aad0ad80-cdec-11ea-8248-a37bc0571bfd\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/PowerShell/PowerShell\">Make `Out-String` and `Out-File` keep string input unchanged \u00b7 PowerShell/PowerShell@0e4d2e4</a></strong></div><div>PowerShell for every system! Contribute to PowerShell/PowerShell development by creating an account on GitHub.</div></blockquote>",
      "created_at": "2022-08-02T20:04:46Z",
      "updated_at": "2022-08-02T20:04:48Z"
    },
    {
      "author": "github-actions[bot]",
      "author_association": "CONTRIBUTOR",
      "body": "@adityapatwardhan backporting to release/v7.2.6 failed, the patch most likely resulted in conflicts:\n\n```shell\n$ git am --3way --ignore-whitespace --keep-non-patch changes.patch\n\nApplying: Make Out-String and Out-File keep string input unchanged\n.git/rebase-apply/patch:91: trailing whitespace.\n            (Get-Verb -Verb Get | Out-String).Contains(\"`e[\") | Should -BeTrue \nwarning: 1 line adds whitespace errors.\nUsing index info to reconstruct a base tree...\nM\tsrc/System.Management.Automation/FormatAndOutput/common/ILineOutput.cs\nM\ttest/powershell/engine/Formatting/PSStyle.Tests.ps1\nFalling back to patching base and 3-way merge...\nAuto-merging test/powershell/engine/Formatting/PSStyle.Tests.ps1\nCONFLICT (content): Merge conflict in test/powershell/engine/Formatting/PSStyle.Tests.ps1\nAuto-merging src/System.Management.Automation/FormatAndOutput/common/ILineOutput.cs\nerror: Failed to merge in the changes.\nhint: Use 'git am --show-current-patch=diff' to see the failed patch\nPatch failed at 0001 Make Out-String and Out-File keep string input unchanged\nWhen you have resolved this problem, run \"git am --continue\".\nIf you prefer to skip this patch, run \"git am --skip\" instead.\nTo restore the original branch and stop patching, run \"git am --abort\".\nError: The process '/usr/bin/git' failed with exit code 128\n```\n\nPlease backport manually!",
      "created_at": "2022-08-02T20:05:01Z",
      "updated_at": "2022-08-02T20:05:01Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "Backport done via https://github.com/PowerShell/PowerShell/pull/17859",
      "created_at": "2022-08-08T19:28:06Z",
      "updated_at": "2022-08-08T19:28:06Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.2.6` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.2.6)\n",
      "created_at": "2022-08-11T22:19:07Z",
      "updated_at": "2022-08-11T22:19:07Z"
    }
  ],
  "created_at": "2022-05-28T18:06:07Z",
  "number": 17455,
  "state": "closed",
  "title": "Make `Out-String` and `Out-File` keep string input unchanged",
  "updated_at": "2022-08-11T22:19:08Z"
}