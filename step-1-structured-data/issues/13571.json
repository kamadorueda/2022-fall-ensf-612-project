{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13571",
  "author": "atriumcarceri",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 and PowerShell 7+ issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6).\r\n\r\n-->\r\n\r\n## Steps to reproduce\r\n\r\n```powershell\r\nImport-Module ActiveDirectory\r\n$ErrorActionPreference = \"Continue\"\r\n$scriptThrottleLimit = 6\r\n$scriptTimeoutLimit = 60\r\n\r\n\r\n$enabledUsers = Get-ADUser -SearchBase $staffOU -Filter {Enabled -eq $true} -Properties SamAccountName, ipPhone  Where-Object { $_.ipPhone.Length -eq 4 }\r\n\r\n$enabledUsers | ForEach-Object -Parallel {\r\n    $error.Clear()\r\n\tGet-ADPrincipalGroupMembership -Identity $_\t\r\n}  -ThrottleLimit $scriptThrottleLimit -TimeoutSeconds $scriptTimeoutLimit\r\n```\r\n\r\n## Expected behavior\r\n\r\n```none\r\nnormal parallel work with all objects\r\n```\r\n\r\n## Actual behavior\r\nhalf of objects trowing error\r\n```powershell\r\n\r\nInvalidOperation: The pipeline has been stopped.\r\n> Get-Error\r\nException             : \r\n    Type        : System.Management.Automation.PipelineStoppedException\r\n    ErrorRecord : \r\n        Exception             : \r\n            Type    : System.Management.Automation.ParentContainsErrorRecordException\r\n            Message : The pipeline has been stopped.\r\n            HResult : -2146233087\r\n        CategoryInfo          : OperationStopped: (:) [], ParentContainsErrorRecordException\r\n        FullyQualifiedErrorId : PipelineStopped\r\n    TargetSite  : \r\n        Name          : Throw\r\n        DeclaringType : System.Runtime.ExceptionServices.ExceptionDispatchInfo\r\n        MemberType    : Method\r\n        Module        : System.Private.CoreLib.dll\r\n    StackTrace  : \r\n   at System.Management.Automation.Internal.PipelineProcessor.SynchronousExecuteEnumerate(Object input)\r\n   at System.Management.Automation.Runspaces.LocalPipeline.InvokeHelper()\r\n   at System.Management.Automation.Runspaces.LocalPipeline.InvokeThreadProc()\r\n    Message     : The pipeline has been stopped.\r\n    Source      : System.Private.CoreLib\r\n    HResult     : -2146233087\r\nTargetObject          : System.Management.Automation.PSTasks.PSTask\r\nCategoryInfo          : InvalidOperation: (System.Management.A\u2026tion.PSTasks.PSTask:PSTask) [], PipelineStoppedException\r\nFullyQualifiedErrorId : PSTaskException\r\n```\r\nif i set errorpreferedaction is stop, that i have module import error\r\n\r\n```powershell\r\nGet-ADPrincipalGroupMembership: \r\nLine |\r\n   4 |      Get-ADPrincipalGroupMembership -Identity $_.SamAccountName\r\n     |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n     | The 'Get-ADPrincipalGroupMembership' command was found in the module 'ActiveDirectory', but the module could not be loaded. For more information, run 'Import-Module ActiveDirectory'.\r\n```\r\nand here is get-error output\r\n```powershell\r\nType        : System.Management.Automation.ActionPreferenceStopException\r\nErrorRecord : \r\n    Exception             : \r\n        Type        : System.Management.Automation.CommandNotFoundException\r\n        ErrorRecord : \r\n            Exception             : \r\n                Type    : System.Management.Automation.ParentContainsErrorRecordException\r\n                Message : The 'Get-ADPrincipalGroupMembership' command was found in the module 'ActiveDirectory', but the module could not be loaded. For more information, run 'Import-Module ActiveDirectory'.\r\n                HResult : -2146233087\r\n            TargetObject          : Get-ADPrincipalGroupMembership\r\n            CategoryInfo          : ObjectNotFound: (Get-ADPrincipalGroupMembership:String) [], ParentContainsErrorRecordException\r\n            FullyQualifiedErrorId : CouldNotAutoloadMatchingModule\r\n            InvocationInfo        : \r\n                ScriptLineNumber : 4\r\n                OffsetInLine     : 5\r\n                HistoryId        : 1\r\n                Line             : Get-ADPrincipalGroupMembership -Identity $_.SamAccountName\r\n\r\n                PositionMessage  : At line:4 char:5\r\n                                   +     Get-ADPrincipalGroupMembership -Identity $_.SamAccountName\r\n                                   +     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n                InvocationName   : Get-ADPrincipalGroupMembership\r\n                CommandOrigin    : Internal\r\n            ScriptStackTrace      : at <ScriptBlock>, <No file>: line 4\r\n        CommandName : Get-ADPrincipalGroupMembership\r\n        TargetSite  : \r\n            Name          : TryModuleAutoDiscovery\r\n            DeclaringType : System.Management.Automation.CommandDiscovery, System.Management.Automation, Version=7.0.3.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\r\n            MemberType    : Method\r\n            Module        : System.Management.Automation.dll\r\n        StackTrace  : \r\n   at System.Management.Automation.CommandDiscovery.TryModuleAutoDiscovery(String commandName, ExecutionContext context, String originalCommandName, CommandOrigin commandOrigin, SearchResolutionOptions searchResolutionOptions, CommandTypes commandTypes,\r\nException& lastError)\r\n   at System.Management.Automation.CommandDiscovery.LookupCommandInfo(String commandName, CommandTypes commandTypes, SearchResolutionOptions searchResolutionOptions, CommandOrigin commandOrigin, ExecutionContext context)\r\n   at System.Management.Automation.CommandDiscovery.LookupCommandProcessor(String commandName, CommandOrigin commandOrigin, Nullable`1 useLocalScope)\r\n   at System.Management.Automation.ExecutionContext.CreateCommand(String command, Boolean dotSource)\r\n   at System.Management.Automation.PipelineOps.AddCommand(PipelineProcessor pipe, CommandParameterInternal[] commandElements, CommandBaseAst commandBaseAst, CommandRedirection[] redirections, ExecutionContext context)\r\n   at System.Management.Automation.PipelineOps.InvokePipeline(Object input, Boolean ignoreInput, CommandParameterInternal[][] pipeElements, CommandBaseAst[] pipeElementAsts, CommandRedirection[][] commandRedirections, FunctionContext funcContext)\r\n   at System.Management.Automation.Interpreter.ActionCallInstruction`6.Run(InterpretedFrame frame)\r\n   at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.Run(InterpretedFrame frame)\r\n        Message     : The 'Get-ADPrincipalGroupMembership' command was found in the module 'ActiveDirectory', but the module could not be loaded. For more information, run 'Import-Module ActiveDirectory'.\r\n        Data        : System.Collections.ListDictionaryInternal\r\n        Source      : System.Management.Automation\r\n        HResult     : -2146233087\r\n    TargetObject          : Get-ADPrincipalGroupMembership\r\n    CategoryInfo          : ObjectNotFound: (Get-ADPrincipalGroupMembership:String) [], CommandNotFoundException\r\n    FullyQualifiedErrorId : CouldNotAutoloadMatchingModule\r\n    InvocationInfo        : \r\n        ScriptLineNumber : 4\r\n        OffsetInLine     : 5\r\n        HistoryId        : 1\r\n        Line             : Get-ADPrincipalGroupMembership -Identity $_.SamAccountName\r\n\r\n        PositionMessage  : At line:4 char:5\r\n                           +     Get-ADPrincipalGroupMembership -Identity $_.SamAccountName\r\n                           +     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n        InvocationName   : Get-ADPrincipalGroupMembership\r\n        CommandOrigin    : Internal\r\n    ScriptStackTrace      : at <ScriptBlock>, <No file>: line 4\r\nTargetSite  : \r\n    Name          : Invoke\r\n    DeclaringType : System.Management.Automation.Runspaces.PipelineBase, System.Management.Automation, Version=7.0.3.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\r\n    MemberType    : Method\r\n    Module        : System.Management.Automation.dll\r\nStackTrace  : \r\n   at System.Management.Automation.Runspaces.PipelineBase.Invoke(IEnumerable input)\r\n   at System.Management.Automation.PowerShell.Worker.ConstructPipelineAndDoWork(Runspace rs, Boolean performSyncInvoke)\r\n   at System.Management.Automation.PowerShell.Worker.CreateRunspaceIfNeededAndDoWork(Runspace rsToUse, Boolean isSync)\r\n   at System.Management.Automation.PowerShell.CoreInvokeHelper[TInput,TOutput](PSDataCollection`1 input, PSDataCollection`1 output, PSInvocationSettings settings)\r\n   at System.Management.Automation.PowerShell.CoreInvoke[TInput,TOutput](PSDataCollection`1 input, PSDataCollection`1 output, PSInvocationSettings settings)\r\n   at System.Management.Automation.PowerShell.Invoke[T](IEnumerable input, PSInvocationSettings settings)\r\n   at System.Threading.Tasks.Task`1.InnerInvoke()\r\n   at System.Threading.ExecutionContext.RunFromThreadPoolDispatchLoop(Thread threadPoolThread, ExecutionContext executionContext, ContextCallback callback, Object state)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.PowerShell.EditorServices.Services.PowerShellContextService.ExecuteCommandAsync[TResult](PSCommand psCommand, StringBuilder errorMessages, ExecutionOptions executionOptions) in\r\nD:\\a\\1\\s\\src\\PowerShellEditorServices\\Services\\PowerShellContext\\PowerShellContextService.cs:line 927\r\n   at Microsoft.PowerShell.EditorServices.Services.PowerShellContextService.ExecuteCommandAsync[TResult](PSCommand psCommand, StringBuilder errorMessages, ExecutionOptions executionOptions) in\r\nD:\\a\\1\\s\\src\\PowerShellEditorServices\\Services\\PowerShellContext\\PowerShellContextService.cs:line 927\r\nMessage     : The running command stopped because the preference variable \"ErrorActionPreference\" or common parameter is set to Stop: The 'Get-ADPrincipalGroupMembership' command was found in the module 'ActiveDirectory', but the module could not\r\nbe loaded. For more information, run 'Import-Module ActiveDirectory'.\r\nData        : System.Collections.ListDictionaryInternal\r\nSource      : System.Management.Automation\r\nHResult     : -2146233087\r\n```\r\n\r\n## Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.3\r\nPSEdition                      Core\r\nGitCommitId                    7.0.3\r\nOS                             Microsoft Windows 10.0.14393\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2020-11-05T08:00:05Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@PaulHigin Could you please look the issue?",
      "created_at": "2020-09-04T04:13:29Z",
      "updated_at": "2020-09-04T04:13:29Z"
    },
    {
      "author": "tcochunk",
      "author_association": "NONE",
      "body": "Seeing a similar issue, any input would be much appreciated.",
      "created_at": "2020-11-03T17:09:51Z",
      "updated_at": "2020-11-03T17:09:51Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "This is related to #12240\r\n\r\nCurrently, the session state of the script running `foreach-object -parallel` is not transferred to each runspace/thread started to handle parallel runs.  Consequently the ActiveDirectory module for parallel run is loaded through command discovery.  It is not clear what the actual problem is, but there are a number of ways a PowerShell module auto-load can fail.\r\n\r\nI haven't yet started on issue #12240, but it should address this issue.  The workaround is to manually load the ActiveDirectory module for each script run in parallel:\r\n\r\n```powershell\r\n$enabledUsers = Get-ADUser -SearchBase $staffOU -Filter {Enabled -eq $true} -Properties SamAccountName, ipPhone  Where-Object { $_.ipPhone.Length -eq 4 }\r\n$enabledUsers | ForEach-Object -Parallel {\r\n    Import-Module ActiveDirectory\r\n    $ErrorActionPreference = \"Continue\"\r\n    $error.Clear()\r\n    Get-ADPrincipalGroupMembership -Identity $_\t\r\n}  -ThrottleLimit $scriptThrottleLimit -TimeoutSeconds $scriptTimeoutLimit\r\n\r\n```",
      "created_at": "2020-11-03T21:15:05Z",
      "updated_at": "2020-11-03T21:15:05Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as duplicate and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2020-11-05T08:00:05Z",
      "updated_at": "2020-11-05T08:00:05Z"
    }
  ],
  "created_at": "2020-09-03T21:31:28Z",
  "number": 13571,
  "state": "closed",
  "title": "Parallel execution with module interruption",
  "updated_at": "2020-11-05T08:00:05Z"
}