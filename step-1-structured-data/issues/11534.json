{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11534",
  "author": "paalbra",
  "body": "# Steps to reproduce\r\n\r\n```powershell\r\n$date = Get-Date \"2019-12-25\"\r\nwhile ($date -lt (Get-Date \"2020-01-09\")){\r\n    Get-Date $date -UFormat '%Y-%m-%d : %V'\r\n    $date = $date.AddDays(1)\r\n}\r\n```\r\n\r\n# Expected behavior\r\n\r\n```powershell\r\n2019-12-25 : 52\r\n2019-12-26 : 52\r\n2019-12-27 : 52\r\n2019-12-28 : 52\r\n2019-12-29 : 52\r\n2019-12-30 : 01\r\n2019-12-31 : 01\r\n2020-01-01 : 01\r\n2020-01-02 : 01\r\n2020-01-03 : 01\r\n2020-01-04 : 01\r\n2020-01-05 : 01\r\n2020-01-06 : 02\r\n2020-01-07 : 02\r\n2020-01-08 : 02\r\n2020-01-09 : 02\r\n```\r\n\r\n# Actual behavior\r\n\r\nWeek number of 2020-01-03 is wrong (and other dates that trigger the same issue)\r\n\r\n```powershell\r\n2019-12-25 : 52\r\n2019-12-26 : 52\r\n2019-12-27 : 52\r\n2019-12-28 : 52\r\n2019-12-29 : 52\r\n2019-12-30 : 01\r\n2019-12-31 : 01\r\n2020-01-01 : 01\r\n2020-01-02 : 01\r\n2020-01-03 : 53\r\n2020-01-04 : 01\r\n2020-01-05 : 01\r\n2020-01-06 : 02\r\n2020-01-07 : 02\r\n2020-01-08 : 02\r\n2020-01-09 : 02\r\n```\r\n\r\n# Environment data\r\n\r\nBuilt of master:\r\n\r\n```powershell\r\nPS /> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-preview.6\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-preview.6-109-gb19e2b9d4cb65d9b705f457317d1803dea6eb150\r\nOS                             Linux 5.4.7-200.fc31.x86_64 #1 SMP Tue Dec 31 22:25:12 UTC 2019\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2020-01-14T18:26:25Z",
  "comments": [
    {
      "author": "paalbra",
      "author_association": "CONTRIBUTOR",
      "body": "I'm not sure why this was done, but it leads to the issue:\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/e78cb8302de745d4377a792b8f51063c8453246c/src/Microsoft.PowerShell.Commands.Utility/commands/utility/GetDateCommand.cs#L494-L498",
      "created_at": "2020-01-09T14:08:42Z",
      "updated_at": "2020-01-09T14:08:42Z"
    },
    {
      "author": "paalbra",
      "author_association": "CONTRIBUTOR",
      "body": "https://github.com/PowerShell/PowerShell/commit/6bd70bc2d065918c03228f54befc3ed8cf1bfc59\r\n\r\nhttps://github.com/PowerShell/PowerShell/pull/6542\r\n\r\nA PR review comment is referring to \"blog post comments\" in https://blogs.msdn.microsoft.com/shawnste/2006/01/24/iso-8601-week-of-year-format-in-microsoft-net/ . These comments seem to be gone? The code in that blog post seems to be the correct thing to do\r\n\r\n<blockquote><div><strong><a href=\"https://docs.microsoft.com/en-us/archive/blogs/shawnste/iso-8601-week-of-year-format-in-microsoft-net\">ISO 8601 Week of Year format in Microsoft .Net</a></strong></div></blockquote>\r\n\r\nThis PR review comment: https://github.com/PowerShell/PowerShell/pull/6542#pullrequestreview-110307854",
      "created_at": "2020-01-09T14:10:43Z",
      "updated_at": "2020-01-09T14:28:48Z"
    },
    {
      "author": "paalbra",
      "author_association": "CONTRIBUTOR",
      "body": "I'll add the code from that blog post just in case it gets removed. For future reference:\r\n\r\n```c#\r\nusing System;\r\nusing System.Globalization;\r\n\r\nclass Test\r\n{\r\n    // Need a calendar. Culture's irrelevent since we specify start day of week\r\n    private static Calendar cal = CultureInfo.InvariantCulture.Calendar;\r\n\r\n    // This presumes that weeks start with Monday.\r\n    // Week 1 is the 1st week of the year with a Thursday in it.\r\n    public static int GetIso8601WeekOfYear(DateTime time)\r\n    {\r\n        // Seriously cheat. If its Monday, Tuesday or Wednesday, then it'll\r\n        // be the same week# as whatever Thursday, Friday or Saturday are,\r\n        // and we always get those right\r\n        DayOfWeek day = cal.GetDayOfWeek(time);\r\n        if (day >= DayOfWeek.Monday && day <= DayOfWeek.Wednesday)\r\n        {\r\n            time = time.AddDays(3);\r\n        }\r\n\r\n        // Return the week of our adjusted day\r\n        return cal.GetWeekOfYear(time, CalendarWeekRule.FirstFourDayWeek, DayOfWeek.Monday);\r\n    }\r\n\r\n    static void Main(string[] args)\r\n    {\r\n        // 1/1/1990 starts on a Monday\r\n        DateTime dt = new DateTime(1990, 1, 1);\r\n        Console.WriteLine(\"Starting at \" + dt + \" day: \" + cal.GetDayOfWeek(dt) + \" Week: \" +GetIso8601WeekOfYear(dt));\r\n\r\n        for (int i = 0; i < 100000; i++)\r\n        {\r\n            for (int days = 0; days < 7; dt=dt.AddDays(1), days++)\r\n            {\r\n                if (GetIso8601WeekOfYear(dt) != cal.GetWeekOfYear(dt, CalendarWeekRule.FirstFourDayWeek, DayOfWeek.Monday))\r\n                {\r\n                Console.WriteLine(\"Iso Week \" + GetIso8601WeekOfYear(dt) +\r\n                                  \" GetWeekOfYear: \" + cal.GetWeekOfYear(dt, CalendarWeekRule.FirstFourDayWeek, DayOfWeek.Monday) +\r\n                                  \" Date: \" + dt + \" Day: \" + cal.GetDayOfWeek(dt));\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n```",
      "created_at": "2020-01-09T14:34:24Z",
      "updated_at": "2020-01-09T14:34:24Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov you might have some background here",
      "created_at": "2020-01-09T18:14:20Z",
      "updated_at": "2020-01-09T18:14:20Z"
    },
    {
      "author": "KalleOlaviNiemitalo",
      "author_association": "NONE",
      "body": "PowerShell 7 targets .NET Core 3.1, so I think it could now use [ISOWeek](https://docs.microsoft.com/dotnet/api/system.globalization.isoweek?view=netcore-3.1).",
      "created_at": "2020-01-09T18:14:43Z",
      "updated_at": "2020-01-09T18:15:03Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:This issue was addressed in #11536, which has now been successfully released as `v7.0.0-rc.2`.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.0.0-rc.2)\n",
      "created_at": "2020-01-16T23:39:10Z",
      "updated_at": "2020-01-16T23:39:10Z"
    },
    {
      "author": "B-Art",
      "author_association": "NONE",
      "body": "2012-12-31 in Powershell 7.1.1 still gives week 53 should be 1 When using:\r\n`\r\n(Get-Culture).Calendar.GetWeekOfYear('2012-12-31', (Get-Culture).DateTimeFormat.CalendarWeekRule, (Get-Culture).DateTimeFormat.FirstDayOfWeek)\r\n`\r\nThe formula should be based on the number of Thursdays in THIS year and must be starting with a Thursday or a Wendsday( When this is a Leapyear.)\r\n'2012-01-01' is a Sunday.....?\r\n\r\nhttp://week-number.net/calendar-with-week-numbers-2012.html\r\n\r\n<blockquote><div><strong><a href=\"http://week-number.net/calendar-with-week-numbers-2012.html\">2012 calendar with Week Numbers - What week is it?</a></strong></div></blockquote>",
      "created_at": "2021-02-03T22:24:13Z",
      "updated_at": "2021-02-03T22:46:29Z"
    },
    {
      "author": "KalleOlaviNiemitalo",
      "author_association": "NONE",
      "body": "@B-Art, a request to make Calendar.GetWeekOfYear use the ISO week number rules was already filed as <https://github.com/dotnet/runtime/issues/25762> and rejected. PowerShell nowadays uses an ISO-compliant method for the \"%V\" format in Get-Date but I don't think it should second-guess your intentions if your PowerShell code calls Calendar.GetWeekOfYear directly.",
      "created_at": "2021-02-03T22:49:29Z",
      "updated_at": "2021-02-03T22:49:29Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I think you mean new GetISOWeekOfYear()",
      "created_at": "2021-02-04T03:21:38Z",
      "updated_at": "2021-02-04T03:21:38Z"
    }
  ],
  "created_at": "2020-01-09T14:06:35Z",
  "labels": [
    "Issue-Question",
    "Resolution-Fixed",
    "WG-Cmdlets-Utility"
  ],
  "number": 11534,
  "state": "closed",
  "title": "Get-Date -UFormat \"%V\" returns wrong weeknumber",
  "updated_at": "2021-02-04T03:21:38Z"
}