{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7010",
  "author": "mklement0",
  "body": "Note: The issue is closely related to #2934 and also to #7005\r\n\r\nSaid issue describes the surprising behavior of `Copy-Item` copying the _content_ of source directories to the target directory if that target directory didn't previously exist, rather than the source directories _as a whole_, which is what happens if the target _did_ exist.\r\n\r\nIn the case below, in addition to the inconsistency described, a bug surfaces when _more than 1_ directory is copied to a non-preexisting target directory.  \r\n\r\nIf there happens to be _exactly 1_ directory among the source paths, that directory is effectively ignored (because, I think, its copy becomes the target directory _itself_).\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\n$ErrorActionPreference = 'Stop'\r\n\r\ntrap { Pop-Location }\r\n\r\n# Create and switch to a playgroud folder.\r\n$tempDir = Join-Path ([io.path]::GetTempPath()) $PID\r\n$null = New-Item -Force -ItemType Directory $tempDir\r\nPush-Location $tempDir\r\n\r\n# Create a 'source' directory with *2* subdirs, 'subd1', 'subd2'\r\n# Note: Whether or not these subdirs. are empty is irrelevant.\r\n$null = new-Item -force -ItemType Directory source\r\n$null = new-Item -force -ItemType Directory source/subd1\r\n$null = new-Item -force -ItemType Directory source/subd2\r\n\r\n# Ensure that the 'dest' directory doesn't exist yet.\r\nif (Test-Path ./dest) { Remove-Item -Force -Recurse dest }\r\n\r\n# Copy the *content* of 'source' to 'dest'.\r\n# Currently BREAKS.\r\n# Note \r\n#  * The problem only surfaces if 'dest' is created *on demand*, i.e., didn't\r\n#     already exist.\r\n#  * If there were only *1* subdir., it would effectively be QUIETLY IGNORED.\r\n#    because Copy-Item would effectively copy that subdir. *as 'dest'*.\r\n#  * Whether or not you use -Recurse and/or -Force makes no difference\r\n#    here.\r\nCopy-Item source/* dest -rec\r\n\r\n# List what was copied to 'dest'\r\nGet-ChildItem -Name -Recurse dest\r\n\r\nPop-Location\r\nRemove-Item $tempDir -Recurse\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```none\r\nsubd1\r\nsubd2\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\nNothing gets copied to `dest` and the following error occurs:\r\n\r\n```none\r\nCopy-Item : Container cannot be copied onto existing leaf item.\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n```powershell\r\nPowerShell Core v6.1.0-preview.2 on macOS 10.13.4\r\nPowerShell Core v6.1.0-preview.2 on Ubuntu 16.04.4 LTS\r\nPowerShell Core v6.1.0-preview.2 on Microsoft Windows 10 Pro (64-bit; Version 1709, OS Build: 16299.371)\r\nWindows PowerShell v5.1.17134.48 on Microsoft Windows 10 Pro (64-bit; Version 1709, OS Build: 16299.371)\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "Totally agree, that the `Copy-Item` weirdnesses need to be resolved. I myself have tripped over those a couple of times when writing very simple CI deployment scripts...",
      "created_at": "2018-06-07T20:53:48Z",
      "updated_at": "2018-06-07T20:53:48Z"
    },
    {
      "author": "BrucePay",
      "author_association": "COLLABORATOR",
      "body": "The current behaviour when copying multiple items onto a nonexistent target is to copy each item onto the target item, e.g. `copy a.txt,b.txt,c.txt d.txt` copies `a.txt` onto `d.txt`, `b.txt` onto `d.txt`, etc. (IIRC the intent was to replicate the behaviour of `cmd.exe` which concatenates the three files into the destination but that obviously didn't happen since it replaces rather than concatenates). Now if the items being copied are directories you get an error because you can't copy one directory on top of another.",
      "created_at": "2018-06-08T23:56:20Z",
      "updated_at": "2018-06-08T23:56:20Z"
    },
    {
      "author": "GCascaes",
      "author_association": "NONE",
      "body": "Any return on this bug fix?",
      "created_at": "2021-01-16T19:40:13Z",
      "updated_at": "2021-01-16T19:40:13Z"
    }
  ],
  "created_at": "2018-06-06T15:54:23Z",
  "labels": [
    "WG-Cmdlets-Management",
    "WG-Engine-Providers",
    "Area-FileSystem-Provider"
  ],
  "number": 7010,
  "state": "open",
  "title": "Copy-Item fails when copying multiple subdirectories to a target directory that did not previously exist",
  "updated_at": "2021-11-29T17:46:12Z"
}