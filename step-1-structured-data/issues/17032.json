{
  "_url": "https://github.com/PowerShell/PowerShell/issues/17032",
  "author": "mgrandi",
  "body": "### Prerequisites\n\n- [X] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\n\n### Steps to reproduce\n\n\r\n\r\n\r\nIn the XML docs for `Cmdlet.WriteDebug`, it says that it throws `System.InvalidOperationException` if you call `WriteDebug` outside of ProcessRecord/Begin/EndProcessing:\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/10027be363cf37c5888befb7126b6f4a5380e314/src/System.Management.Automation/engine/cmdlet.cs#L611-L616\r\n\r\nhowever, in the code right below it, it actually throws a `System.NotImplementedException`\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/10027be363cf37c5888befb7126b6f4a5380e314/src/System.Management.Automation/engine/cmdlet.cs#L633-L642\r\n\r\nand indeed, if you make a sample cmdlet and have a constructor for the cmdlet, and call `this.WriteDebug(\"debug!\");` in it, it throws `NotImplementedException`.\r\n\r\nSo I feel like the XML docs are wrong here, however the exception `InvalidOperationException` makes more sense, since `Cmdlet.WriteDebug` (and friends)` are implemented, you just called it at the wrong spot in the processing.\r\n\r\nthe powershell window:\r\n\r\n```plaintext\r\n\r\nPS C:\\Users\\mgrandi\\source\\repos\\TestCmdlet\\bin\\Debug\\netstandard2.0> Test-writedebugcmdlet\r\nTest-writedebugcmdlet: WriteDebug\r\n\r\n\r\nPS C:\\Users\\mgrandi\\source\\repos\\TestCmdlet\\bin\\Debug\\netstandard2.0> $error[0].Exception.StackTrace\r\n   at System.Management.Automation.Cmdlet.WriteDebug(String text)\r\n   at TestCmdlet.TestWriteDebugCmdlet..ctor() in C:\\Users\\mgrandi\\source\\repos\\TestCmdlet\\TestWriteDebugCmdlet.cs:line 16\r\n   at lambda_method17(Closure )\r\n   at System.Management.Automation.CommandProcessor.ConstructInstance(Type type)\r\n   at System.Management.Automation.CommandProcessor.Init(CmdletInfo cmdletInformation)\r\nPS C:\\Users\\mgrandi\\source\\repos\\TestCmdlet\\bin\\Debug\\netstandard2.0>\r\n\r\n\r\n```\r\n\r\nerror from visual studio:\r\n\r\n```plaintext\r\n\r\nSystem.NotImplementedException\r\n  HResult=0x80004001\r\n  Message=WriteDebug\r\n  Source=System.Management.Automation\r\n  StackTrace:\r\n   at System.Management.Automation.Cmdlet.WriteDebug(String text)\r\n   at TestCmdlet.TestWriteDebugCmdlet..ctor() in C:\\Users\\mgrandi\\source\\repos\\TestCmdlet\\TestWriteDebugCmdlet.cs:line 16\r\n   at System.Management.Automation.CommandProcessor.ConstructInstance(Type type)\r\n   at System.Management.Automation.CommandProcessor.Init(CmdletInfo cmdletInformation)\r\n\r\n\r\n\r\n```\r\n\r\n\r\nsource code of my test cmdlet that I used: \r\n\r\n```csharp\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\nusing System.Management.Automation;\r\nusing System.Management.Automation.Runspaces;\r\n\r\nnamespace TestCmdlet\r\n{\r\n    [Cmdlet(VerbsDiagnostic.Test, \"WriteDebugCmdlet\")]\r\n    [OutputType(typeof(FavoriteStuff))]\r\n    public class TestWriteDebugCmdlet : PSCmdlet\r\n    {\r\n\r\n        public TestWriteDebugCmdlet()\r\n        {\r\n            this.WriteDebug(\"this is debug!\");\r\n        }\r\n\r\n        [Parameter(\r\n            Mandatory = false,\r\n            Position = 0,\r\n            ValueFromPipeline = true,\r\n            ValueFromPipelineByPropertyName = false)]\r\n        public int ValueOne { get; set; }\r\n\r\n       \r\n\r\n        // This method gets called once for each cmdlet in the pipeline when the pipeline starts executing\r\n        protected override void BeginProcessing()\r\n        {\r\n            WriteVerbose(\"Begin!\");\r\n        }\r\n\r\n        // This method will be called for each input received from the pipeline to this cmdlet; if no input is received, this method is not called\r\n        protected override void ProcessRecord()\r\n        {\r\n\r\n            WriteObject(String.Format(\"ValueOne (int): `{0}`\", ValueOne));\r\n\r\n        }\r\n\r\n        // This method will be called once at the end of pipeline execution; if no input is received, this method is not called\r\n        protected override void EndProcessing()\r\n        {\r\n            WriteVerbose(\"End!\");\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n```\r\n\r\n\n\n### Expected behavior\n\n```console\nN/A, xmldocs bug\n```\n\n\n### Actual behavior\n\n```console\nN/A, xmldocs bug\n```\n\n\n### Error details\n\n```console\nN/A, XMLdocs bug\n```\n\n\n### Environment data\n\n```powershell\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.2\r\nPSEdition                      Core\r\nGitCommitId                    7.2.2\r\nOS                             Microsoft Windows 10.0.22000\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\n```\n\n\n### Visuals\n\n_No response_",
  "closed_at": null,
  "comments": [
    {
      "author": "RamiSJ12",
      "author_association": "NONE",
      "body": "Try it",
      "created_at": "2022-03-19T03:15:34Z",
      "updated_at": "2022-03-19T03:15:34Z"
    }
  ],
  "created_at": "2022-03-19T02:14:44Z",
  "number": 17032,
  "state": "open",
  "title": "XML Docs are wrong for `Cmdlet.WriteDebug` re exceptions thrown",
  "updated_at": "2022-03-19T03:34:19Z"
}