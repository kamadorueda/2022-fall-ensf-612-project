{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11530",
  "author": "jackhorton",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 and PowerShell 7+ issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n\r\n-->\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\nSet-PSDebug -Trace 2\r\n$proc2 = Start-Process -FilePath sc.exe -PassThru -Wait\r\n```\r\n\r\n# Expected behavior\r\n\r\nSame behavior as when PSDebug is at level 0; the (exited) process object is stored in `$proc2` and no crash occurs\r\n\r\n# Actual behavior\r\n\r\n```none\r\nPS C:\\Users\\jahorto> $proc2 = Start-Process -FilePath sc.exe -PassThru -Wait\r\nDEBUG:    1+  >>>> $proc2 = Start-Process -FilePath sc.exe -PassThru -Wait\r\nDEBUG:     ! CALL function '<ScriptBlock>'\r\nDEBUG:   19+                                         if ( &  >>>> { Set-StrictMode -Version 1; $_.PSMessageDetails } ) {\r\nDEBUG:     ! CALL function '<ScriptBlock>'\r\nDEBUG:   19+                                         if ( & {  >>>> Set-StrictMode -Version 1; $_.PSMessageDetails } ) {\r\nDEBUG:   19+                                         if ( & { Set-StrictMode -Version 1;  >>>> $_.PSMessageDetails } ) {\r\nDEBUG:    1+ &  >>>> { Set-StrictMode -Version 1; $this.Exception.InnerException.PSMessageDetails }\r\nDEBUG:     ! CALL function '<ScriptBlock>'\r\nDEBUG:    1+ & {  >>>> Set-StrictMode -Version 1; $this.Exception.InnerException.PSMessageDetails }\r\nDEBUG:    1+ & { Set-StrictMode -Version 1;  >>>> $this.Exception.InnerException.PSMessageDetails }\r\nDEBUG:    1+ & { Set-StrictMode -Version 1; $this.Exception.InnerException.PSMessageDetails  >>>> }\r\nDEBUG:   19+                                         if ( & { Set-StrictMode -Version 1; $_.PSMessageDetails  >>>> } ) {\r\nDEBUG:   25+                                         $errorCategoryMsg = &  >>>> { Set-StrictMode -Version 1; $_.ErrorCategory_Message }\r\n\r\nDEBUG:     ! CALL function '<ScriptBlock>'\r\nDEBUG:   25+                                         $errorCategoryMsg = & {  >>>> Set-StrictMode -Version 1; $_.ErrorCategory_Message }\r\n\r\nDEBUG:   25+                                         $errorCategoryMsg = & { Set-StrictMode -Version 1;  >>>> $_.ErrorCategory_Message }\r\n\r\nDEBUG:   25+                                         $errorCategoryMsg = & { Set-StrictMode -Version 1; $_.ErrorCategory_Message  >>>> }\r\n\r\nDEBUG:   41+                                         $originInfo = &  >>>> { Set-StrictMode -Version 1; $_.OriginInfo } \r\nDEBUG:     ! CALL function '<ScriptBlock>'\r\nDEBUG:   41+                                         $originInfo = & {  >>>> Set-StrictMode -Version 1; $_.OriginInfo } \r\nDEBUG:   41+                                         $originInfo = & { Set-StrictMode -Version 1;  >>>> $_.OriginInfo } \r\nDEBUG:   41+                                         $originInfo = & { Set-StrictMode -Version 1; $_.OriginInfo  >>>> } \r\nCannot convert value to type System.String.\r\nAt line:1 char:1\r\n+ $proc2 = Start-Process -FilePath sc.exe -PassThru -Wait\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : InvalidArgument: (:) [], RuntimeException\r\n+ FullyQualifiedErrorId : InvalidCastFromAnyTypeToString\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.2.3\r\nPSEdition                      Core\r\nGitCommitId                    6.2.3\r\nOS                             Microsoft Windows 10.0.19041\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "jackhorton",
      "author_association": "NONE",
      "body": "Also, this reproduces in Windows PowerShell as well.",
      "created_at": "2020-01-08T22:32:36Z",
      "updated_at": "2020-01-08T22:32:36Z"
    },
    {
      "author": "DrStrangepork",
      "author_association": "NONE",
      "body": "This problem still exists in PowerShell Core 7.1 and 7.2",
      "created_at": "2021-11-18T15:17:32Z",
      "updated_at": "2021-11-18T15:17:32Z"
    }
  ],
  "created_at": "2020-01-08T22:30:01Z",
  "labels": [
    "Issue-Bug",
    "WG-Engine"
  ],
  "number": 11530,
  "state": "open",
  "title": "Set-PSDebug -Trace 2 causes Start-Process -PassThru -Wait to crash upon the process exiting",
  "updated_at": "2021-11-18T15:17:32Z"
}