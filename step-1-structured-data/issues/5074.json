{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5074",
  "author": "thezim",
  "body": "I've been using [this](https://github.com/thezim/launchpowershell) for awhile now. Would be nice if the installer could install something similar making PowerShell launch-able via Spotlight and dock-able.",
  "closed_at": "2017-10-18T19:22:07Z",
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Would you be willing to contribute that as a PR?",
      "created_at": "2017-10-10T00:44:06Z",
      "updated_at": "2017-10-10T00:44:06Z"
    },
    {
      "author": "thezim",
      "author_association": "CONTRIBUTOR",
      "body": "Sure, just need to figure where it should go. The app really simple, just a few folders, plist file, shell script, and icns file. A shell script can be used to generate everything except the icns file which we already have. Do you think we should pregen it in repo and package it up or have the package generate it during the install.",
      "created_at": "2017-10-10T15:38:00Z",
      "updated_at": "2017-10-10T15:38:00Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "If the content is pretty static, I don't think we need to generate it every time and we can maybe store it under \"assets\"?  packaging.psm1 would need to be updated to put this into the macOS package.\r\n\r\ncc @TravisEz13 ",
      "created_at": "2017-10-10T16:17:40Z",
      "updated_at": "2017-10-10T16:17:40Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@thezim Do you know how to use the xcode commandline to package these assets?",
      "created_at": "2017-10-10T17:21:40Z",
      "updated_at": "2017-10-10T17:21:40Z"
    },
    {
      "author": "thezim",
      "author_association": "CONTRIBUTOR",
      "body": "@TravisEz13 I do now. I was able to create a package with the following. Tested the package and it works.\r\n\r\n```bash\r\nchown -R root:wheel *\r\npkgbuild --root ROOT --identifier com.mirosoft.powershell --version 1.0 PowerShell.pkg\r\n```\r\nROOT/PowerShell.app/[remaining files and folders]\r\n\r\nIs there an existing identifier/CFBundleIdentifier that should be used? I see `powershell` is used by the standard installer.\r\n",
      "created_at": "2017-10-10T22:55:40Z",
      "updated_at": "2017-10-10T22:55:40Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "I think this one should be something like `PowerShell launcher` (not intended to be the exact identifier).   The files probably should go in a folder under `tools/packaging`.    An argument could be made that the icon should be under `assets` and copied during packing.  Add a function which builds the package to `tools/packaging/packaging.psm1` and make sure it's exported in the psd1. (I wrote this in a hurry sorry for any errors.)",
      "created_at": "2017-10-10T23:17:12Z",
      "updated_at": "2017-10-10T23:17:12Z"
    },
    {
      "author": "thezim",
      "author_association": "CONTRIBUTOR",
      "body": "@TravisEz13 thanks. I'll start on a PR.",
      "created_at": "2017-10-11T02:57:31Z",
      "updated_at": "2017-10-11T02:57:31Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "Thank you.",
      "created_at": "2017-10-11T23:23:36Z",
      "updated_at": "2017-10-11T23:23:36Z"
    },
    {
      "author": "thezim",
      "author_association": "CONTRIBUTOR",
      "body": "@TravisEz13 Now that I understand the `packaging` module better, do we what this as a separate .pkg file and an exported function? I see only `Start-PSPackage` is exported currently. I have it working now 0283108b3eb7014963a7d7cea71068428b2c66b3 by including the app in the entire package which I thought made sense. Let me know if have gone in a wrong direction.",
      "created_at": "2017-10-13T01:41:12Z",
      "updated_at": "2017-10-13T17:04:29Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "I think one package is okay.  We can see what feedback we get and see if we need to seperate them.",
      "created_at": "2017-10-16T18:50:27Z",
      "updated_at": "2017-10-16T18:50:27Z"
    }
  ],
  "created_at": "2017-10-10T00:05:57Z",
  "number": 5074,
  "state": "closed",
  "title": "Add macOS app to launch PowerShell.",
  "updated_at": "2017-10-19T02:57:29Z"
}