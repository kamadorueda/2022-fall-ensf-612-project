{
  "_url": "https://github.com/PowerShell/PowerShell/issues/559",
  "author": "vors",
  "body": "Consider\n\n```\nping -c 4 ya.ru | grep 64\n```\n\nRun it in PS and in bash. Compare UX.\nIn PS output of ping is collected,  then it's passed down the pipe all together.\nIn bash you see output of grep instantly after ping send one line to the pipe.\n\nAs @BrucePay pointed out it never appeared to be a problem on windows due to the lack of pipeable native command-line tools.\n\nAs a minimum, we should sort out this buffering flow.\nDesirable: improve pipe speed for certain cases (i.e. native command to native command).\n\nOpen question: can we use a native pipe to provide a compatible speed, when pipeline doesn't involve PS commands?\n",
  "closed_at": "2016-11-16T02:00:02Z",
  "comments": [
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "Moving to a next milestone, it took longer then I anticipated.\n",
      "created_at": "2016-07-20T22:43:03Z",
      "updated_at": "2016-07-20T22:43:03Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "How are you planning on addressing this one? AFAIK, the reason this is happening is that the pipeline waits for everything to get loaded into memory before it takes input. \n\nThere's another scenario where people want to pipe large amounts of binary data from a native binary and it's putting all of that binary data (5+ GBs) into memory before passing them to the next native command in PowerShell. \n",
      "created_at": "2016-07-21T21:36:23Z",
      "updated_at": "2016-07-21T21:36:23Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "I'm putting that on hold.\nWe will do that post-Aug17.\nCurrent work-in-progress is stored in https://github.com/vors/PowerShell/tree/native-pipe\n",
      "created_at": "2016-07-23T00:18:41Z",
      "updated_at": "2016-08-19T08:12:14Z"
    },
    {
      "author": "be5invis",
      "author_association": "NONE",
      "body": "Related: #1908\nPiping through EXEs or EXE to file (or vice versa) currently should not parse the piped content as string, instead of redirecting it directly as bytes.\n",
      "created_at": "2016-08-18T20:18:10Z",
      "updated_at": "2016-08-18T20:18:10Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "@be5invis absolutely!\n\nCurrent plan is to address it by two separate changes:\n1. Move start of native executable from pipeline `Complete()` method (executes at the time of `end` block) to `Prepare()` method (executes at the time of `begin` block). This is prototyped in https://github.com/vors/PowerShell/tree/native-pipe\n2. Combine sequential native pipline elements and treat them as one pipeline element. Link them with IO redirection directly instead of powershell pipeline.\n\nTogether these two changes will cover simple scenarios:\n- `native | native`\n- `ps | native`\n\nUnfortunately `native | ps` and more complicated scenarios, like `ps | native | ps`, will still be sub-optimal. I'm looking forward for propositions to address them.\n",
      "created_at": "2016-08-19T08:19:58Z",
      "updated_at": "2016-08-19T08:19:58Z"
    },
    {
      "author": "be5invis",
      "author_association": "NONE",
      "body": "@vors I suggest adding a \u201cas-bytes\u201d operator that accepts raw (bytes) input and redirecting from Native to PS can use this scanerio:\n\n``` powershell\nnative | as-bytes | your-parser | ps\n```\n",
      "created_at": "2016-08-19T08:23:19Z",
      "updated_at": "2016-08-19T08:23:19Z"
    },
    {
      "author": "Jaykul",
      "author_association": "CONTRIBUTOR",
      "body": "Currently this behaves as expected, so is it only native-to-native that is affected?\n\n``` posh\nping -c 4 ya.ru | sls 64\n```\n\nI mean, that might behave weirdly if it was a binary stream, but I imagine that handling byte-by-byte streams in a PowerShell process block would be ... really sub-optimal.\n\nAre you fixing redirect to file as well?\n",
      "created_at": "2016-08-22T02:27:31Z",
      "updated_at": "2016-08-22T02:27:31Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "I'm going to narrow scope if this issue just to the first part:\n\n> Move start of native executable from pipeline Complete() method\n\nFor the `native | native` part, we will use #1908\n",
      "created_at": "2016-09-12T17:29:17Z",
      "updated_at": "2016-09-12T17:29:17Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "Doing this work, I'm constantly having problems because of #1486\nSince this change will affect a lot of code paths, I'd like to extensively run \"Feature\" tests locally in different systems and make sure that I don't introduce regressions. I'm considering this work blocked on #1486 and moving it to the next milestone to fix our test harness first.\n",
      "created_at": "2016-09-12T19:00:20Z",
      "updated_at": "2016-09-12T19:00:20Z"
    },
    {
      "author": "joaoe",
      "author_association": "NONE",
      "body": "Does the fix work for the use case with fd redirection ?\r\n```\r\ncommand 2>&1 | other\r\n```\r\nPowerShell also mangles output when redirecting file descriptors.\r\n",
      "created_at": "2019-11-24T03:58:57Z",
      "updated_at": "2019-11-24T03:59:15Z"
    }
  ],
  "created_at": "2016-02-19T07:19:31Z",
  "labels": [
    "Issue-Enhancement",
    "Usability",
    "WG-Engine",
    "Resolution-Fixed"
  ],
  "number": 559,
  "state": "closed",
  "title": "Improve pipeline for native commands",
  "updated_at": "2019-11-24T03:59:15Z"
}