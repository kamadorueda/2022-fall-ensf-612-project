{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9540",
  "author": "Bartolomeus-649",
  "body": "# Invoke-WebRequest should not need a session to specify cookies\r\n\r\nToday you need to use a session to be able to specify cookies for a request with `Invoke-WebRequest`, that should not be needed.\r\n\r\nThis restriction that you need to use a session to include cookies in a request makes it very complicated to \"replay\" recorded requests, which is a great help when you need to reproduce tricky problems where you need to reach a specific state.\r\nAs an example, if you use the new Chromium-based Edge, and copies a request from the network trace in the devtools as PowerShell, it won't work, since all headers, including cookies and useragent are specified in the `-Headers` parameter.\r\n\r\n\r\n# Proposed technical implementation details (optional)\r\nStart by using/setting all headers as specified with the `-Headers` parameter, then if Sessions and/or `-UserAgent` are used, then just use them instead and overwrite any previous headers.\r\n\r\n## And this is what the PowerShell Edge produce looks like:\r\n```\r\nInvoke-WebRequest -Uri \"https://abc.go.com/\" -Headers @{\"method\"=\"GET\"; \"authority\"=\"abc.go.com\"; \"scheme\"=\"https\"; \"path\"=\"/\"; \"pragma\"=\"no-cache\"; \"cache-control\"=\"no-cache\"; \"upgrade-insecure-requests\"=\"1\"; \"user-agent\"=\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.18 Safari/537.36 Edg/75.0.139.4\"; \"dnt\"=\"1\"; \"accept\"=\"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3\"; \"accept-encoding\"=\"gzip, deflate, br\"; \"accept-language\"=\"en-US,en;q=0.9,\"; \"cookie\"=\"SWID=2727B4CB-A7BB-41CC-AB3D-7C9BC01CF4D7\"}\r\n```",
  "closed_at": null,
  "comments": [
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "`Method`, `scheme`, and `path` are not usually headers. Those are part of the HTTP start line and not the headers proper. \r\n\r\nEven taking that into account... The example you provided works without issue:\r\n\r\n```powershell\r\n$Headers = @{\r\n    \"method\" = \"GET\"\r\n    \"authority\" = \"abc.go.com\"\r\n    \"scheme\" = \"https\"\r\n    \"path\" = \"/\"\r\n    \"pragma\" = \"no-cache\"\r\n    \"cache-control\" = \"no-cache\"\r\n    \"upgrade-insecure-requests\" = \"1\"\r\n    \"user-agent\" = \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.18 Safari/537.36 Edg/75.0.139.4\"\r\n    \"dnt\" = \"1\"\r\n    \"accept\" = \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3\"\r\n    \"accept-encoding\" = \"gzip, deflate, br\"\r\n    \"accept-language\" = \"en-US,en;q=0.9,\"\r\n    \"cookie\" = \"SWID=2727B4CB-A7BB-41CC-AB3D-7C9BC01CF4D7\"\r\n}\r\n$Uri = 'https://httpbin.org/get'\r\n$Result = Invoke-WebRequest -Uri $Uri -Headers $Headers\r\n$ResponseObject = $Result.Content | ConvertFrom-Json\r\n\r\nforeach($Item in $Headers.GetEnumerator()){\r\n    $Key = $Item.Key\r\n    if (-not ($ResponseObject.headers.$Key -eq $Item.Value)){\r\n        'Key: {0}' -f $Key\r\n        'Headers: {0}' -f $Item.Value\r\n        'Response: {0}' -f $ResponseObject.headers.$Key\r\n        '---'\r\n    }\r\n}\r\n```\r\n\r\nResult:\r\n\r\n```none\r\nKey: accept-language\r\nHeaders: en-US,en;q=0.9,\r\nResponse: en-US, en; q=0.9\r\n---\r\nKey: accept\r\nHeaders: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3\r\nResponse: text/html, application/xhtml+xml, application/xml; q=0.9, image/webp, image/apng, */*; q=0.8, application/signed-exchange; v=b3\r\n---\r\n```\r\n\r\nAnd those differences only arise because the HttpClient API automatically cleans up dirty headers.",
      "created_at": "2019-05-06T02:50:32Z",
      "updated_at": "2019-05-06T02:50:32Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "For clarity, sessions are not required for cookies and can definitely be sent in the Headers param.",
      "created_at": "2019-05-06T02:51:47Z",
      "updated_at": "2019-05-06T02:51:47Z"
    },
    {
      "author": "Bartolomeus-649",
      "author_association": "NONE",
      "body": "From the documentation\r\n> -Headers\r\n> \r\n> Specifies the headers of the web request. Enter a hash table or dictionary.\r\n> \r\n> To set UserAgent headers, use the -UserAgent parameter. **You cannot use this parameter to specify User-Agent or cookie headers.**\r\n\r\nAnd no, it does not work.\r\nThis command:\r\n`Invoke-WebRequest -Uri \"http://www.microsoft.com\" -Headers @{\"cookie\" = \"MyCookieVarable=MyCookieValue\"}`\r\n\r\nProduce this request as caught by Fiddler\r\n```\r\nGET http://www.microsoft.com/ HTTP/1.1\r\nUser-Agent: Mozilla/5.0 (Windows NT; Windows NT 10.0; sv-SE) WindowsPowerShell/5.1.17134.590\r\nHost: www.microsoft.com\r\nConnection: Keep-Alive\r\n```\r\nAs you can see, there are no cookies sent.",
      "created_at": "2019-05-06T14:48:41Z",
      "updated_at": "2019-05-06T14:48:41Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "what version of PowerShell?",
      "created_at": "2019-05-06T15:06:26Z",
      "updated_at": "2019-05-06T15:06:26Z"
    },
    {
      "author": "Bartolomeus-649",
      "author_association": "NONE",
      "body": "10.0.17134.1",
      "created_at": "2019-05-06T15:48:14Z",
      "updated_at": "2019-05-06T15:48:14Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "That looks to be a PowerShell 5.1 issue. Please verify the issue still exists in [6.2.0](https://github.com/PowerShell/PowerShell/releases/tag/v6.2.0). ",
      "created_at": "2019-05-06T15:59:01Z",
      "updated_at": "2019-05-06T15:59:01Z"
    },
    {
      "author": "Bartolomeus-649",
      "author_association": "NONE",
      "body": "ok, seems to work better in 6.2.0, but these version numbers seems a bit confusing, the first one clearly say it is version 10.0.\r\n\r\nThis is what the same request look like according to Fiddler in 6.2, which is much beter\r\n```\r\nGET http://www.microsoft.com/ HTTP/1.1\r\nCookie: MyCookieVarable=MyCookieValue\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Microsoft Windows 10.0.17134; sv-SE) PowerShell/6.2.0\r\nHost: www.microsoft.com\r\n```\r\n\r\n\r\nand, in the doc for 6.2 it still say:\r\n\r\n> -Headers <IDictionary>\r\n>  Specifies the headers of the web request. Enter a hash table or dictionary.\r\n> \r\n> To set UserAgent headers, use the -UserAgent parameter. **You cannot use this parameter to specify `User-Agent` or cookie headers.**\r\n\r\n",
      "created_at": "2019-05-06T16:39:12Z",
      "updated_at": "2019-05-06T16:39:12Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "I recommend opening an issue in the docs repo or submitting a PR to fix  it in the 6+ docs. https://github.com/MicrosoftDocs/PowerShell-Docs/issues/new",
      "created_at": "2019-05-06T16:41:51Z",
      "updated_at": "2019-05-06T16:41:51Z"
    }
  ],
  "created_at": "2019-05-05T22:51:08Z",
  "number": 9540,
  "state": "open",
  "title": "Allow setting all headers for Invoke-WebRquest",
  "updated_at": "2019-05-06T16:41:51Z"
}