{
  "_url": "https://github.com/PowerShell/PowerShell/issues/16677",
  "author": "iRon7",
  "body": "### Summary of the new feature / enhancement\r\n\r\nThis issue is related to #16298 [`String` >>>Regex>>> `PSCustomObject`](https://github.com/PowerShell/PowerShell/issues/16257) which is closed after it moved to a discussion (not sure about the exact reason it is closed, meaning that I might make the same mistake here).\r\n\r\nAnyways, reading from a fix text table usually generated from an external program is something that is quiet often required noting the concerned StackOverflow questions, like:\r\n* [Convert Formatted String Output with empty cells to PS Object](https://stackoverflow.com/a/69118599/1701026)\r\n* [Powershell String to csv (netstat -ano)](https://stackoverflow.com/q/65346664/1701026)\r\n* [convert list output to table(object)](https://stackoverflow.com/a/60882963/1701026)\r\n* [Convert System.String to object](https://stackoverflow.com/q/56964468/1701026)\r\n* [Another grep / awk q, parsing diskpart output](https://stackoverflow.com/q/42680382/1701026)\r\n* [How to read powershell table from file](https://stackoverflow.com/a/53364959/1701026)\r\n* [Split string on arbitrary-length substrings (Powershell)](https://stackoverflow.com/a/55752375/1701026)\r\n* [ConvertFrom-Sting Template Parsing Failure with Array](https://stackoverflow.com/q/52835623/1701026)\r\n* [How can I use powershell to intercept a specified string of a command output?](https://stackoverflow.com/a/51279071/1701026)\r\n\r\nAs you can see from some of the answers, I have created my own \"solution\" for this: [`ConvertFrom-SourceTable`](https://www.powershellgallery.com/packages?q=convertfrom-sourcetable) but I would expect a more standard way using the `ConvertFrom-String` with e.g. a `-Table` parameter.\r\n\r\nBesides from converting the output of an external program, it could be useful to build a human readable\" in-script source/settings table.\r\n\r\n### Proposed technical implementation details (optional)\r\n\r\n```PowerShell\r\n$Colors = ConvertFrom-SourceTable ' # ConvertFrom-String -Table\r\n\tName       Value         RGB\r\n\t----       -----         ---\r\n\tBlack   0x000000       0,0,0\r\n\tWhite   0xFFFFFF 255,255,255\r\n\tRed     0xFF0000     255,0,0\r\n\tLime    0x00FF00     0,255,0\r\n\tBlue    0x0000FF     0,0,255\r\n\tYellow  0xFFFF00   255,255,0\r\n\tCyan    0x00FFFF   0,255,255\r\n\tMagenta 0xFF00FF   255,0,255\r\n\tSilver  0xC0C0C0 192,192,192\r\n\tGray    0x808080 128,128,128\r\n\tMaroon  0x800000     128,0,0\r\n\tOlive   0x808000   128,128,0\r\n\tGreen   0x008000     0,128,0\r\n\tPurple  0x800080   128,0,128\r\n\tTeal    0x008080   0,128,128\r\n\tNavy    0x000080     0,0,128'\r\n```",
  "closed_at": "2021-12-28T17:12:46Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@iRon7 The cmdlet is not in the repository and we can do nothing here. We already have #726 as tracking issue and it is better to have all other new conversations in Discussions with reference to #726.",
      "created_at": "2021-12-28T16:36:26Z",
      "updated_at": "2021-12-28T16:36:26Z"
    },
    {
      "author": "iRon7",
      "author_association": "NONE",
      "body": "@iSazonov, Thank you for the explanation.\r\nI have closed the issue as is linked to #726 and the idea is recorded anyways in case anything changes to the concerned `ConvertFrom-String` cmdlet.",
      "created_at": "2021-12-28T17:12:46Z",
      "updated_at": "2021-12-28T17:12:46Z"
    }
  ],
  "created_at": "2021-12-28T15:14:39Z",
  "number": 16677,
  "state": "closed",
  "title": "Add table support to `ConvertFrom-String`",
  "updated_at": "2021-12-28T17:12:48Z"
}