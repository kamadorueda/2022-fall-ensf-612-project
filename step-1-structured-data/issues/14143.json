{
  "_url": "https://github.com/PowerShell/PowerShell/issues/14143",
  "author": "jbpAtEy",
  "body": "Background: I see a similar issue was brought up previously in https://github.com/PowerShell/PowerShell/issues/3705\r\nBackground: I am using PS 7.x (currently 7.1.0) to export and read data from something known as PingFederate via API that outputs JSON\r\n\r\nBelow is output from a test lab. The screen grabs are from a previous test when i thought the issue was the vendor of PingFederate\r\nPlease note that the expected behavior is that both pulls are treated as JSON.\r\n\r\nNotes that Test Object 2, the string, has the following part causing the error\r\n```\r\n\"EmployeeID\":{\"source\":{\"type\":\"AUTHENTICATION_POLICY_CONTRACT\"},\"value\":\"EmployeeID\"},\"EmployeeId\":{\"source\":{\"type\":\"AUTHENTICATION_POLICY_CONTRACT\"},\"value\":\"EmployeeID\"\r\n```\r\n\r\nRFCs that show JSON is Case Sensitive:\r\nJSON RFC (current 2020 11 19) https://tools.ietf.org/html/rfc8259\r\nJSON Data Type RFC (current 2020 11 19) https://www.ietf.org/rfc/rfc4627.txt\r\n\r\n## From PowerShell Window\r\n```\r\nPowerShell 7.1.0\r\nCopyright (c) Microsoft Corporation.\r\n\r\nhttps://aka.ms/powershell\r\nType 'help' to get help.\r\n\r\nPS C:\\temp\\EYSAFEPISCT> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.0\r\nPSEdition                      Core\r\nGitCommitId                    7.1.0\r\nOS                             Microsoft Windows 10.0.17763\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\nPS C:\\temp\\EYSAFEPISCT> $PFFTECreds = Get-Credential\r\n\r\nPowerShell credential request\r\nEnter your credentials.\r\nUser: PIAdmin\r\nPassword for user PIAdmin: **********\r\n\r\nPS C:\\temp\\EYSAFEPISCT> $headers = @{} # headers variable\r\nPS C:\\temp\\EYSAFEPISCT> $headers.Add(\"X-Xsrf-Header\",\"PingFederate\")\r\nPS C:\\temp\\EYSAFEPISCT> $PFFTEURL2 = \"https://pingui.lab.ey:9999/pf-admin-api/v1/idp/spConnections?page=2&numberPerPage=1\"\r\nPS C:\\temp\\EYSAFEPISCT> $PFFTEURL1 = \"https://pingui.lab.ey:9999/pf-admin-api/v1/idp/spConnections?page=1&numberPerPage=1\"\r\nPS C:\\temp\\EYSAFEPISCT> $testObj1 = Invoke-RESTMethod -Uri $PFFTEURL2 -Credential $PFFTECreds -Headers $headers -SslProtocol Tls12 -SkipCertificateCheck -ErrorVariable errors\r\nPS C:\\temp\\EYSAFEPISCT> $testObj2 = Invoke-RESTMethod -Uri $PFFTEURL1 -Credential $PFFTECreds -Headers $headers -SslProtocol Tls12 -SkipCertificateCheck -ErrorVariable errors\r\nPS C:\\temp\\EYSAFEPISCT> Get-Member -InputObject $testObj1\r\n\r\n   TypeName: System.Management.Automation.PSCustomObject\r\n\r\nName        MemberType   Definition\r\n----        ----------   ----------\r\nEquals      Method       bool Equals(System.Object obj)\r\nGetHashCode Method       int GetHashCode()\r\nGetType     Method       type GetType()\r\nToString    Method       string ToString()\r\nitems       NoteProperty Object[] items=System.Object[]\r\n\r\nPS C:\\temp\\EYSAFEPISCT> Get-Member -InputObject $testObj2\r\n\r\n   TypeName: System.String\r\n\r\nName                 MemberType            Definition\r\n----                 ----------            ----------\r\nClone                Method                System.Object Clone(), System.Object ICloneable.Clone()\r\nCompareTo            Method                int CompareTo(System.Object value), int CompareTo(string strB), int IComparable.CompareTo(System.Object obj), int IComparable[string].Compar\u2026\r\nContains             Method                bool Contains(string value), bool Contains(string value, System.StringComparison comparisonType), bool Contains(char value), bool Contains(c\u2026\r\nCopyTo               Method                void CopyTo(int sourceIndex, char[] destination, int destinationIndex, int count)\r\nEndsWith             Method                bool EndsWith(string value), bool EndsWith(string value, System.StringComparison comparisonType), bool EndsWith(string value, bool ignoreCas\u2026\r\nEnumerateRunes       Method                System.Text.StringRuneEnumerator EnumerateRunes()\r\nEquals               Method                bool Equals(System.Object obj), bool Equals(string value), bool Equals(string value, System.StringComparison comparisonType), bool IEquatabl\u2026\r\nGetEnumerator        Method                System.CharEnumerator GetEnumerator(), System.Collections.IEnumerator IEnumerable.GetEnumerator(), System.Collections.Generic.IEnumerator[ch\u2026\r\nGetHashCode          Method                int GetHashCode(), int GetHashCode(System.StringComparison comparisonType)\r\nGetPinnableReference Method                System.Char&, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e GetPinnableReference()\r\nGetType              Method                type GetType()\r\nGetTypeCode          Method                System.TypeCode GetTypeCode(), System.TypeCode IConvertible.GetTypeCode()\r\nIndexOf              Method                int IndexOf(char value), int IndexOf(char value, int startIndex), int IndexOf(char value, System.StringComparison comparisonType), int Index\u2026\r\nIndexOfAny           Method                int IndexOfAny(char[] anyOf), int IndexOfAny(char[] anyOf, int startIndex), int IndexOfAny(char[] anyOf, int startIndex, int count)\r\nInsert               Method                string Insert(int startIndex, string value)\r\nIsNormalized         Method                bool IsNormalized(), bool IsNormalized(System.Text.NormalizationForm normalizationForm)\r\nLastIndexOf          Method                int LastIndexOf(char value), int LastIndexOf(char value, int startIndex), int LastIndexOf(char value, int startIndex, int count), int LastIn\u2026\r\nLastIndexOfAny       Method                int LastIndexOfAny(char[] anyOf), int LastIndexOfAny(char[] anyOf, int startIndex), int LastIndexOfAny(char[] anyOf, int startIndex, int cou\u2026\r\nNormalize            Method                string Normalize(), string Normalize(System.Text.NormalizationForm normalizationForm)\r\nPadLeft              Method                string PadLeft(int totalWidth), string PadLeft(int totalWidth, char paddingChar)\r\nPadRight             Method                string PadRight(int totalWidth), string PadRight(int totalWidth, char paddingChar)\r\nRemove               Method                string Remove(int startIndex, int count), string Remove(int startIndex)\r\nReplace              Method                string Replace(string oldValue, string newValue, bool ignoreCase, cultureinfo culture), string Replace(string oldValue, string newValue, Sys\u2026\r\nSplit                Method                string[] Split(char separator, System.StringSplitOptions options), string[] Split(char separator, int count, System.StringSplitOptions optio\u2026\r\nStartsWith           Method                bool StartsWith(string value), bool StartsWith(string value, System.StringComparison comparisonType), bool StartsWith(string value, bool ign\u2026\r\nSubstring            Method                string Substring(int startIndex), string Substring(int startIndex, int length)\r\nToBoolean            Method                bool IConvertible.ToBoolean(System.IFormatProvider provider)\r\nToByte               Method                byte IConvertible.ToByte(System.IFormatProvider provider)\r\nToChar               Method                char IConvertible.ToChar(System.IFormatProvider provider)\r\nToCharArray          Method                char[] ToCharArray(), char[] ToCharArray(int startIndex, int length)\r\nToDateTime           Method                datetime IConvertible.ToDateTime(System.IFormatProvider provider)\r\nToDecimal            Method                decimal IConvertible.ToDecimal(System.IFormatProvider provider)\r\nToDouble             Method                double IConvertible.ToDouble(System.IFormatProvider provider)\r\nToInt16              Method                short IConvertible.ToInt16(System.IFormatProvider provider)\r\nToInt32              Method                int IConvertible.ToInt32(System.IFormatProvider provider)\r\nToInt64              Method                long IConvertible.ToInt64(System.IFormatProvider provider)\r\nToLower              Method                string ToLower(), string ToLower(cultureinfo culture)\r\nToLowerInvariant     Method                string ToLowerInvariant()\r\nToSByte              Method                sbyte IConvertible.ToSByte(System.IFormatProvider provider)\r\nToSingle             Method                float IConvertible.ToSingle(System.IFormatProvider provider)\r\nToString             Method                string ToString(), string ToString(System.IFormatProvider provider), string IConvertible.ToString(System.IFormatProvider provider)\r\nToType               Method                System.Object IConvertible.ToType(type conversionType, System.IFormatProvider provider)\r\nToUInt16             Method                ushort IConvertible.ToUInt16(System.IFormatProvider provider)\r\nToUInt32             Method                uint IConvertible.ToUInt32(System.IFormatProvider provider)\r\nToUInt64             Method                ulong IConvertible.ToUInt64(System.IFormatProvider provider)\r\nToUpper              Method                string ToUpper(), string ToUpper(cultureinfo culture)\r\nToUpperInvariant     Method                string ToUpperInvariant()\r\nTrim                 Method                string Trim(), string Trim(char trimChar), string Trim(Params char[] trimChars)\r\nTrimEnd              Method                string TrimEnd(), string TrimEnd(char trimChar), string TrimEnd(Params char[] trimChars)\r\nTrimStart            Method                string TrimStart(), string TrimStart(char trimChar), string TrimStart(Params char[] trimChars)\r\nChars                ParameterizedProperty char Chars(int index) {get;}\r\nLength               Property              int Length {get;}\r\n\r\nPS C:\\temp\\EYSAFEPISCT>\r\n```\r\n\r\n![labtest-screen1](https://user-images.githubusercontent.com/38132319/99686136-4bf50b00-2a51-11eb-9e5d-205362b92078.png)\r\n![labtest-screen2](https://user-images.githubusercontent.com/38132319/99686138-4bf50b00-2a51-11eb-9bd9-59d156f838a7.png)\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "_Update_: This comment only applies to _explicit_ `ConvertFrom-Json` calls, not to the implicit JSON parsing built into `Invoke-RestMethod` - see [below](https://github.com/PowerShell/PowerShell/issues/14143#issuecomment-730566112) for a workaround.\r\n\r\nNot allowing case variations of the same property name in a single object is by design, given that member access in PowerShell is case-insensitive (by default, a `[pscustomobject]` object [graph] is constructed, where such case variations aren't permitted).\r\n\r\nThe workaround is implied by the error message you get:\r\n\r\n```powershell\r\nPS> '{ \"foo\": 1, \"Foo\": 2 }' | ConvertFrom-Json\r\nConvertFrom-Json: Cannot convert the JSON string because it contains keys with different casing. \r\nPlease use the -AsHashTable switch instead. \r\nThe key that was attempted to be added to the existing key 'foo' was 'Foo'.\r\n```\r\n\r\nNote:\r\n\r\n* `-AsHashTable` returns a hashtable with case-_sensitive_ key lookups, allowing you to target `.foo` and `.Foo` separately, whether or not the input had properties whose names are case variations; this can be surprising, given that hashtable _literals_ in PowerShell always use case-_insensitive_ lookups.\r\n  * In other words: For lookups, _all_ key names must then be specified _case-exactly_ (both with index syntax, `$ht['foo']`, and with dot notation, `$ht.foo`).\r\n\r\n* You also need `-AsHashTable` if your JSON input has a property name that is the _empty string_:\r\n\r\n  * ` '{ \"\": 1}' | ConvertFrom-Json -AsHashTable`\r\n\r\n* `-AsHashTable` isn't available in Windows PowerShell.\r\n",
      "created_at": "2020-11-19T18:20:28Z",
      "updated_at": "2020-11-19T18:47:31Z"
    },
    {
      "author": "jbpAtEy",
      "author_association": "NONE",
      "body": "HI @mklement0 \r\n\r\nI'm not trying to convert from JSON to anything. i am trying to handle it as JSON. this fails. JSON standard is case sensitive. if JSON is to be supported it should be in an object that is capable of handling the JSON standard. \r\n\r\nthank you.",
      "created_at": "2020-11-19T18:29:06Z",
      "updated_at": "2020-11-19T18:29:06Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@jbpAtEy, good point: I missed that you're not calling `ConvertFrom-Json` _explicitly_:\r\n\r\n> I'm not trying to convert from JSON to anything.\r\n\r\nYou _are_ converting it to a `[pscustomobject]` graph, which is what  `Invoke-RESTMethod` does for you _implicitly_.\r\nAnother way of putting it: it has `ConvertFrom-Json` _built in_.\r\n\r\nUnlike with an _explicit_ `ConvertFrom-Json` call, however, there's currently no way to pass `-AsHashTable` to `Invoke-RestMethod`, so you are indeed limited with respect to what JSON you can process.\r\n\r\nAt least for now, the workaround for you is to use [`Invoke-WebRequest`](https://docs.microsoft.com/powershell/module/microsoft.powershell.utility/invoke-webrequest) and to pass the `.Content` value (the JSON _text_) of the response object to `ConvertFrom-Json -AsHashtable`.\r\n\r\n",
      "created_at": "2020-11-19T18:45:56Z",
      "updated_at": "2020-11-20T12:48:41Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "For symmetry, it would make sense to me to enhance `Invoke-RestMethod` to also support an `-AsHashTable` switch, but I suggest you create a new issue of type \"Feature Request/Idea\" and present a focused case there.\r\n",
      "created_at": "2020-11-19T18:51:29Z",
      "updated_at": "2020-11-19T18:51:29Z"
    }
  ],
  "created_at": "2020-11-19T15:31:48Z",
  "labels": [
    "Issue-Question",
    "WG-Cmdlets-Utility"
  ],
  "number": 14143,
  "state": "open",
  "title": "JSON auto-parse is case insensitive",
  "updated_at": "2020-11-20T17:43:45Z"
}