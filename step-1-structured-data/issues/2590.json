{
  "_url": "https://github.com/PowerShell/PowerShell/issues/2590",
  "author": "bmanikm",
  "body": "https://github.com/PowerShell/PowerShellGet/issues/45\r\n\r\nSteps to reproduce\r\n------------------\r\n```powershell\r\nSave-Module biz.dfch.PS.Appclusive.Client -Repository PSGallery -RequiredVersion 4.9.1.20161024 -Path C:\\Temp -Force\r\n$ModuleInfo = Test-ModuleManifest C:\\Temp\\biz.dfch.PS.Appclusive.Client\\4.9.1.20161024\\biz.dfch.PS.Appclusive.Client.psd1 -Verbose\r\n$ModuleInfo.ExportedCommands['Get-Job']\r\n$ModuleInfo.ExportedCommands['Get-ApcJob']\r\n$moduleInfo.Prefix\r\n```\r\n\r\n\r\nExpected behavior\r\n-----------------\r\n```powershell\r\n$ModuleInfo.ExportedCommands['Get-ApcJob']\r\n```\r\n\r\nActual behavior\r\n---------------\r\n```powershell\r\n$ModuleInfo.ExportedCommands['Get-Job']\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\nPS C:\\> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      5.1.14393.206\r\nPSEdition                      Desktop\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nBuildVersion                   10.0.14393.206\r\nCLRVersion                     4.0.30319.42000\r\nWSManStackVersion              3.0\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\n\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "ScriptAutomate",
      "author_association": "CONTRIBUTOR",
      "body": "Ran into this issue recently. When importing a module, none of the imported commands are given the DefaultCommandPrefix that is set within the module manifest (as mentioned above)",
      "created_at": "2017-01-24T08:58:48Z",
      "updated_at": "2017-01-24T08:58:48Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "It seems that the correct thing to do is in the ExportedCommands hashtable, the value should have the prefix applied command while the key should be the original\r\n\r\n```powershell\r\nPS C:\\temp> $modinfo = get-module biz.dfch.PS.Appclusive.Client -ListAvailable\r\nPS C:\\temp> $modinfo.ExportedCommands\r\n\r\nKey                               Value\r\n---                               -----\r\nEnter-Server                      Enter-Server\r\nNew-KeyNameValue                  New-KeyNameValue\r\nGet-KeyNameValue                  Get-KeyNameValue\r\nSet-KeyNameValue                  Set-KeyNameValue\r\nRemove-KeyNameValue               Remove-KeyNameValue\r\nNew-ManagementCredential          New-ManagementCredential\r\nGet-ManagementCredential          Get-ManagementCredential\r\n```\r\n",
      "created_at": "2017-05-16T22:08:40Z",
      "updated_at": "2017-05-16T22:08:40Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT my follow up question there is whether `Get-Module` is using the same codepath as `Test-ModuleManifest`. In my opinion, `Test-ModuleManifest` should spit out the original key value pairs represented by the manifest, and we should only be \"calculating\" the value with the prefix at `Get/Import-Module` time ",
      "created_at": "2017-05-16T22:27:11Z",
      "updated_at": "2017-05-16T22:27:11Z"
    }
  ],
  "created_at": "2016-11-02T17:56:55Z",
  "labels": [
    "WG-Engine",
    "Issue-Discussion"
  ],
  "number": 2590,
  "state": "open",
  "title": "DefaultCommandPrefix not honoured by Test-ModuleManifest Cmdlet",
  "updated_at": "2018-07-22T00:33:48Z"
}