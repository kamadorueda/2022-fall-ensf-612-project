{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3393",
  "author": "TravisEz13",
  "body": "<!--\r\n\r\nIf it is a bug report:\r\n- make sure you are able to repro it on the latest released version. \r\nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\r\n- Search the existing issues.\r\n- Refer to the [FAQ](../docs/FAQ.md).\r\n- Refer to the [known issues](../docs/KNOWNISSUES.md).\r\n- Fill out the following repro template\r\n\r\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\r\n-->\r\n\r\nSteps to reproduce\r\n------------------\r\n1. **Cause the job to go into the WER debugger**\r\n```\r\n$job = Start-Job {\r\nfunction CrashPowerShell\r\n{\r\n    $classDefinition = @'\r\n    using System;\r\n    using System.Threading;\r\n    # The following code is to simulate a random crash you may get in real code\r\n    public class PowerShellCrashTest {\r\n        public static void CrashPowerShell() {\r\n            Thread thread = new Thread(() => { throw new Exception(); });\r\n            thread.Start();\r\n            Thread.Sleep(TimeSpan.FromSeconds(60)); // This sleep should not complete because the process should crash shortly after the thread starts.\r\n        }\r\n    }\r\n'@\r\n    Add-Type -TypeDefinition $classDefinition\r\n    [PowerShellCrashTest]::CrashPowerShell()\r\n}\r\n\r\n# Again, The following call is to simulate a random crash you may get in real code\r\nCrashPowerShell\r\n}\r\n```\r\n2. **Don't let the process out of the debugger (assume you aren't paying attention)**\r\n\r\nIf a Windows Error Reporting window (\u201cpowershell has stopped working\u201d) shows, do not interact with the window. Wait for a couple of minutes, and check the state of the job through the variable $job.\r\n\r\n\r\nExpected behavior\r\n-----------------\r\nThe job will be at the state \u201cFailed\u201d, and the JobStateInfo will contain an exception.\r\n\r\nActual behavior\r\n---------------\r\nThe job will report that it reached the state \u201cCompleted\u201d, and the JobStateInfo will not have any exception.\r\n\r\nDiscussion\r\n-----------\r\n\r\nThis introduces two issues:\r\n1. We do not detect the crash so that our engine that starts PowerShell jobs during deployment can report it as an error.\r\n2. Even if we work around the first issue (e.g. by adding a line that returns a value to the end of the job to find if execution reached the end), we still do not have a way to get the details of the exception that caused the crash. This makes it very difficult to investigate the underlying root cause of the failure in the script that was running as a job.\r\n\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      5.1.14393.953\r\nPSEdition                      Desktop\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nBuildVersion                   10.0.14393.953\r\nCLRVersion                     4.0.30319.42000\r\nWSManStackVersion              3.0\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\n```\r\n",
  "closed_at": "2017-04-19T20:02:12Z",
  "comments": [
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "Once the target process crashes the job client probably doesn't get anymore information through the remoting system and the client side is eventually closed due to an inactivity timeout.  This should generate an error on the client side (session broken) that the job should report with a \"Failed\" status.",
      "created_at": "2017-03-22T19:36:45Z",
      "updated_at": "2017-03-22T19:36:45Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "I found the place were the operation timeout error is being dropped by the job class during error handling.  It is a simple one-line fix and I'll create a PR for it.",
      "created_at": "2017-03-28T15:59:32Z",
      "updated_at": "2017-03-28T15:59:32Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "This was fixed with PR #3445.",
      "created_at": "2017-04-19T20:02:12Z",
      "updated_at": "2017-04-19T20:02:12Z"
    }
  ],
  "created_at": "2017-03-22T01:45:10Z",
  "labels": [
    "Issue-Bug",
    "Porting",
    "WG-Cmdlets",
    "Resolution-Fixed"
  ],
  "number": 3393,
  "state": "closed",
  "title": "A remoting timeout communicating with a job should cause the job to fail",
  "updated_at": "2017-04-23T15:11:10Z"
}