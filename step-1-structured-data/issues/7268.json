{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7268",
  "author": "CatGirlsAreLife",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\n- Windows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nIf it is a bug report:\r\n- make sure you are able to repro it on the latest released version. \r\nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n- Fill out the following repro template:\r\n\r\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\r\n-->\r\nI am trying to set [environment]::CurrentDirectory to the value in Get-Location just so I can take that location to do this:\r\n\r\n    $env:nsmkpth = [environment]::CurrentDirectory + \"\\newsmake\\\"\r\n    if(!(Test-Path -Path $env:nsmkpth)) {\r\n        git clone -q https://github.com/Elskom/newsmake.git\r\n        Set-Location -Path newsmake/build\r\n        cmake ..\r\n        Set-Location -Path ../..\r\n    } else {\r\n        Set-Location -Path newsmake\r\n        git pull -q\r\n        Set-Location -Path ..\r\n    }\r\n\r\nI am needing this to work on appveyor on my GitHub repository to when after it restores newsmake folder from the build cache, it would run git pull on it and check for changes and then run msbuild on it when it does change (eventually as it would need a way to compare the commit hashes that HEAD points to).\r\n\r\nAlternatively if using Get-Location in the setting of the environment variable did not fail I would use that but it would still lead to ps saying native command error on anything git outputs even when pulling I think. Powershell really also needs to be more git friendly and not mark any output from it as a error. Although maybe they write everything to stderr which might be why powershell thinks it is a error. If this if actually worked I would be able to test the git pull senerio then.",
  "closed_at": "2018-07-12T21:02:00Z",
  "comments": [
    {
      "author": "BrucePay",
      "author_association": "COLLABORATOR",
      "body": "Hi @CatGirlsAreLife PowerShell supports multiple shell instances per-process so it can't (and doesn't) use the process current directory. This means that you can't use `[environment]::CurrentDirectory` to find out the current PowerShell instances current directory. You should do something like:\r\n```powershell\r\n$env:nsmkpth = Join-Path (Get-Location) newsmake\r\n```\r\n>  if using Get-Location in the setting of the environment variable did not fail \r\n\r\nHmm - it shouldn't be failing. What error message do you get?",
      "created_at": "2018-07-11T17:56:28Z",
      "updated_at": "2018-07-11T17:56:28Z"
    },
    {
      "author": "CatGirlsAreLife",
      "author_association": "NONE",
      "body": "I was refering to where it seems the if would always return true and do what is not in the else statement. All because it would try to look in C:\\Windows\\system32\\newsmake which never is created in my build. which then causes this:\r\n\r\ngit : fatal: destination path 'newsmake' already exists and is not an empty directory.\r\nAt line:5 char:1\r\n+ git clone -q https://github.com/Elskom/newsmake.git\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n   + CategoryInfo          : NotSpecified: (fatal: destinat...mpty directory.:String) [], RemoteException\r\n    + FullyQualifiedErrorId : NativeCommandError\r\n\r\nAnd thanks for a option for the fix to the environment variable. Will test that now :ok_hand:.",
      "created_at": "2018-07-12T00:03:48Z",
      "updated_at": "2018-07-12T00:03:48Z"
    },
    {
      "author": "BrucePay",
      "author_association": "COLLABORATOR",
      "body": ">  it would try to look in C:\\Windows\\system32\\newsmake\r\n\r\nRight - that's because it's using the process working directory, which, as I said, is not the PowerShell instance current working directory. If you use `Get-Location` (or the `$PWD` variable) instead of `[environment]::CurrentDirectory` to get the working directory location it should work properly.",
      "created_at": "2018-07-12T17:12:59Z",
      "updated_at": "2018-07-12T17:12:59Z"
    },
    {
      "author": "CatGirlsAreLife",
      "author_association": "NONE",
      "body": "Thanks, also the Join-Path solution worked flawlessly.\r\n\r\nPerhaps the powesell documentation should include cases like this issue has so others can see from there the possible solutions to this senerio?",
      "created_at": "2018-07-12T21:01:39Z",
      "updated_at": "2018-07-12T21:03:24Z"
    }
  ],
  "created_at": "2018-07-11T16:56:44Z",
  "number": 7268,
  "state": "closed",
  "title": "Cannot set [environment]::CurrentDirectory to value in Get-Location",
  "updated_at": "2018-07-12T21:03:24Z"
}