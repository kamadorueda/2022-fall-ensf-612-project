{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4893",
  "author": "xuesongyuan",
  "body": "<!--\r\n\r\nIf it is a bug report:\r\n- make sure you are able to repro it on the latest released version. \r\nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://github.com/PowerShell/PowerShell/blob/master/docs/KNOWNISSUES.md).\r\n- Fill out the following repro template\r\n\r\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\r\n-->\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\n\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\nThere should be a way to specify RemoteCetificateValidationCallback in a similar fashion to HttpWebRequest.RemoteCertificateValidationCallback. This will allow a per-connection certificate validation instead of the per-process validation via ServicePointManager.RemoteCertificateValidationCallback. This will be extremely useful for a service that is establishing PSH connection to many hosts.\r\n\r\nActual behavior\r\n---------------\r\n\r\n```none\r\n\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\n\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "This is in the context of the web cmdlets.  What @xuesongyuan is asking for is a way to inspect the server cert and approve or deny",
      "created_at": "2017-09-22T01:16:10Z",
      "updated_at": "2017-09-22T01:16:10Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "This seems doable, with [`HttpClientHandler.ServerCertificateCustomValidation`](https://docs.microsoft.com/en-us/dotnet/api/system.net.http.httpclienthandler.servercertificatecustomvalidationcallback?view=netcore-2.0#System_Net_Http_HttpClientHandler_ServerCertificateCustomValidationCallback).\r\n\r\nIt expects a `Func<HttpRequestMessage,X509Certificate2,X509Chain,SslPolicyErrors,Boolean>`. But if I'm not mistaken that can easily be made to work with a `ScriptBlock`. \r\n\r\nI guess the question is how to set it. It could be supplied as a parameter or perhaps exposed as a public static property on `WebRequestPSCmdlet` or somewhere else (maybe its own singleton?). I imagine that most users would want this as a sort of `set and forget` for the duration of the thread as the callback could contain the logic for all their calls to the Web Cmdlets. \r\n\r\nMaking it a parameter is the easy route, but then user would have to supply it every call or set it as a `$PSDefaultParameterValues` entry. That might be a bit inconvenient, but it is definitely a pattern most PowerShell users are familiar with. If the Parameter is acceptable, this could be implemented fairly quick.",
      "created_at": "2017-09-22T10:01:20Z",
      "updated_at": "2017-09-22T10:01:20Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I think a scriptblock parameter is fine for now.  ",
      "created_at": "2017-09-22T14:01:48Z",
      "updated_at": "2017-09-22T14:01:48Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "Is this one up for grabs or will the Microsoft team be taking this one?",
      "created_at": "2017-09-22T14:08:43Z",
      "updated_at": "2017-09-22T14:08:43Z"
    },
    {
      "author": "xuesongyuan",
      "author_association": "NONE",
      "body": "Just wanted to make sure that this callback will be available through System.Management.Automation.Runspaces, e.g., WSManconnectionInfo, or something similar.",
      "created_at": "2017-09-22T15:25:39Z",
      "updated_at": "2017-09-22T15:25:39Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@xuesongyuan  You are not referring to `Invoke-WebRequest` and `Invoke-RestMethod`? I'm not sure I understand the relationship between legacy `HttpWebRequest.RemoteCertificateValidationCallback` and runspaces.",
      "created_at": "2017-09-22T15:35:43Z",
      "updated_at": "2017-09-22T15:35:58Z"
    },
    {
      "author": "xuesongyuan",
      "author_association": "NONE",
      "body": "It seems useful to support Invoke-WebRequest and Invoke-RestMethod. However, the one we are looking for is to provide callback overriding capability so that it is not just SkipCA/SkipCN on WSManConnectionInfo.\r\n\r\nBasically, we would like to do a server certificate validation when opening a remote runspace. So far, we have been using either SkipCA or SkipCN. It would be much better if we can check thumbprint of the certificate since we provision VM with a specific certificate protecting WinRM over HTTPS. This can somewhat be achieved through ServicePointManager.RemoteCertificateValidationCallback however it affects all SSL connections.",
      "created_at": "2017-09-22T15:49:20Z",
      "updated_at": "2017-09-22T15:49:20Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@markekraus in general, I've been marking issues as `Up-for-grabs` to indicate both that the Microsoft PowerShell Team doesn't intend to implement it AND that it's relatively easy for someone new to pick it up.  Contributors, such as yourself, can pick up any issue that isn't assigned to someone.  Expectation is that my team members assign issues to themselves if they are actively working on it.  Unassigned means anyone can take it.  Since GitHub doesn't allow assigning to contributors not in the PowerShell Org, make a statement here if you intend to take it (awesome!) and I can assign it to myself so we don't get duplicate work.\r\n",
      "created_at": "2017-09-22T16:04:20Z",
      "updated_at": "2017-09-22T16:04:20Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT Thanks for clarifying, Unfortunately, it looks like we missed the mark on what @xuesongyuan was requesting. It looks like they are referring to remoting. I believe the web cmdlets are completely decoupled from that in Core. `HttpClient` _only_ uses per-connection validation callbacks, but I'm not familiar with anything in the remoting code to be of use there and at glance it is not using `HttpClient`.\r\n\r\nI can see value in supplying a callback for the web cmdlets, so I will create a new issue to track that. \r\n\r\nAs for assigning issues to contributors, @iSazonov has been able to [assign to me](https://github.com/PowerShell/PowerShell/issues?q=is%3Aissue+assignee%3Amarkekraus+is%3Aclosed) in the past.\r\n\r\n@xuesongyuan It would be possible in 5.1 to create validation logic that would accommodate both remoting and web requests by including checks on the `sender` object. I don't think `ServicePointManager.RemoteCertificateValidationCallback` works at all in Core.",
      "created_at": "2017-09-22T16:18:10Z",
      "updated_at": "2017-09-22T16:18:10Z"
    },
    {
      "author": "xuesongyuan",
      "author_association": "NONE",
      "body": "@markekraus I saw ServicePointManager remote cert validation callback mechanism mentioned but have never tried it out since it does not fit our requirement. As to 5.1, what is the timeline? What does the API look like?",
      "created_at": "2017-09-22T16:25:02Z",
      "updated_at": "2017-09-22T16:25:02Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@xuesongyuan I think we are on different topics. The feature available in 5.1 already is the `ServicePointManager.RemoteCertificateValidationCallback`. This is not available in 6.0. I do not know how or if this impacts remoting. But if it does impact both web requests and remoting in 5.1, the logic in the callback can handle both but you would need to do checks on the `sender` object to determine what is calling it. I'm not meaning to suggest this is possible, but that it is something you could test now in Windows PowerShell 5.1.\r\n\r\nI apologize for the confusion. I only jumped into the thread because of the mention of Web Cmdlets. remoting topics are a bit out of my depth.",
      "created_at": "2017-09-22T17:26:19Z",
      "updated_at": "2017-09-22T17:26:19Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "If this is needed at the api level, we wouldn't start looking at it until after 6.0.0 ships and no commitment to doing it in 6.1.0",
      "created_at": "2017-09-22T17:51:56Z",
      "updated_at": "2017-09-22T17:51:56Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "/cc @PaulHigin Could you please comment the Issue?",
      "created_at": "2017-09-22T18:15:59Z",
      "updated_at": "2017-09-22T18:15:59Z"
    },
    {
      "author": "xuesongyuan",
      "author_association": "NONE",
      "body": "What are timeframes for 6.0.0 and 6.1.0?",
      "created_at": "2017-09-25T21:31:28Z",
      "updated_at": "2017-09-25T21:31:28Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Expectation is that 6.0.0 is final by end of this year, 6.1.0 is undefined at this time but starts after 6.0.0",
      "created_at": "2017-09-25T21:36:10Z",
      "updated_at": "2017-09-25T21:36:10Z"
    }
  ],
  "created_at": "2017-09-21T22:37:35Z",
  "labels": [
    "Issue-Enhancement",
    "WG-Remoting"
  ],
  "number": 4893,
  "state": "open",
  "title": "Allow per-connection remote server certificate validation",
  "updated_at": "2018-06-20T20:00:11Z"
}