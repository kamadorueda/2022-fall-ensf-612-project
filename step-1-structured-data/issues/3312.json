{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3312",
  "author": "schittli",
  "body": "Good morning\r\n\r\nI have to handle a big OrderedDictionary. Therefore, I passed it by reference to a function.\r\nUnfortunately, this referenced object does not know the OrderedDictionary methods like Contains().\r\n\r\nIn https://msdn.microsoft.com/powershell/reference/5.1/Microsoft.PowerShell.Core/about/about_Ref\r\nthere is no note about any restrictions. If this kind of .Net (!) object is not supported, it would be great to get a more descriptive error.\r\n\r\nSteps to reproduce\r\n------------------\r\n```\r\n# Just test if [ref]$dict has a method named 'Contains'\r\nfunction TestRef([ref]$adict) {\r\n\t# This should probably will create an exception:\r\n\tWrite-Host $adict.Contains('a')\r\n\t# Exception:\r\n\t# Method invocation failed because \r\n\t# [System.Management.Automation.PSReference`1[[System.Collections.Specialized.OrderedDictionary, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]] \r\n\t# does not contain a method named 'Contains'.\r\n\t# +     Write-Host $adict.Contains('a')\r\n\t# +     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\t#     + CategoryInfo          : InvalidOperation: (:) [], RuntimeException\r\n\t# + FullyQualifiedErrorId : MethodNotFound\r\n}\r\n\r\n# Create an OrderedDictionary\r\n$ODict = New-Object Collections.Specialized.OrderedDictionary([StringComparer]::OrdinalIgnoreCase)\r\n$ODict['a'] = '1'\r\n\r\n# Assure that there is a method named 'Contains'\r\nWrite-Host $ODict.Contains('a')\r\n\r\n# Pass ODict by reference and call Contains in it\r\nTestRef ([ref]$ODict)\r\n\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n[ref] should work as the developer expect. \r\nOr it should create a parser exception (which is probably almost impossible).\r\nOr it should create a clear exception says that this kind of object is not supported.\r\n\r\nActual behavior\r\n---------------\r\nIt looks like there is a wrapper for [ref] Objects which does not completely support common .Net Objects.\r\n\r\nEnvironment data\r\n----------------\r\n```\r\nName                           Value\r\n----                           -----\r\nPSVersion                      5.1.14393.693\r\nPSEdition                      Desktop\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nBuildVersion                   10.0.14393.693\r\nCLRVersion                     4.0.30319.42000\r\nWSManStackVersion              3.0\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\n\r\n```",
  "closed_at": "2017-03-13T01:07:48Z",
  "comments": [
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "This is by design.  Objects other than value types are passed by reference, so you shouldn't normally use `[ref]`.\r\n\r\n`[ref]` exists mostly for COM support. It is usable outside of COM though, it creates a wrapper object which you need to unwrap.",
      "created_at": "2017-03-13T01:07:48Z",
      "updated_at": "2017-03-13T01:07:48Z"
    },
    {
      "author": "schittli",
      "author_association": "NONE",
      "body": "Hi Jason, thank you very much!, I'm sorry for the trouble. \r\nI've added a 'not helpful' vote to the help page [about_Ref]( https://msdn.microsoft.com/powershell/reference/5.1/Microsoft.PowerShell.Core/about/about_Ref) because it does not explain which kind of objects needs a [ref] for methods.",
      "created_at": "2017-03-13T06:31:26Z",
      "updated_at": "2017-03-13T06:31:26Z"
    }
  ],
  "created_at": "2017-03-12T09:04:53Z",
  "labels": [
    "WG-Language",
    "Resolution-By Design"
  ],
  "number": 3312,
  "state": "closed",
  "title": "OrderedDictionary: PSReference: Exception: \u2026 does not contain a method named 'Contains'",
  "updated_at": "2017-03-13T06:31:26Z"
}