{
  "_url": "https://github.com/PowerShell/PowerShell/issues/14361",
  "author": "lenihan",
  "body": "I created a script \"Get-Foo.ps1\" that is in directory that is in my PATH.\r\n\r\nFrom a directory that does not contain Get-Foo.ps1...\r\n**If I type \"get-fo\" then tab, it is not found.**\r\nIf I type \"Get-Fo\" then tab, it is found.\r\n\r\nFrom the directory that does contain Get-Foo.ps1...\r\nIf I type \"get-fo\" then tab, it is found.\r\nIf I type \"Get-Fo\" then tab, it is found.",
  "closed_at": null,
  "comments": [
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "The `Get-Command` behavior is:\r\n```\r\nPS:19> Get-Command get-foo*\r\nPS:20> Get-Command Get-Foo*\r\n\r\nCommandType     Name                                               Version    Source\r\n-----------     ----                                               -------    ------\r\nExternalScript  Get-Foo.ps1                                                   /home/user/tmp/Get-Foo.ps1\r\n```\r\nThis inconsistency needs to be addressed in PowerShell, not PSReadLine.",
      "created_at": "2020-12-09T18:25:50Z",
      "updated_at": "2020-12-09T18:26:14Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "It would certainly be nice to have consistency here, namely consistently case-_insensitive_ tab-completion and wildcard matching, even on platforms with case-sensitive file-systems.\r\n\r\nHowever, something we will probably have to live with is that for actual _invocation_ of a `*.ps1` script the name has to be case-_exact_ on Linux; while that won't be a problem if that name is tab-completed, a manually typed `get-foo` command fails to call `Get-Foo.ps1`, which is a pitfall for cross-platform scripters.\r\n\r\n\r\n\r\n",
      "created_at": "2020-12-09T21:53:42Z",
      "updated_at": "2021-02-19T22:23:04Z"
    },
    {
      "author": "Liturgist",
      "author_association": "NONE",
      "body": "Adding  `#Requires -CaseSensitive` would be helpful to cross-platform development. It would at least eliminate that problem when moving to a different platform.",
      "created_at": "2021-02-15T16:27:19Z",
      "updated_at": "2021-02-15T16:27:19Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Technically, we have two different aspects to consider with respect to case-sensitivity:\r\n\r\n* Globbing (wildcard-based file-name matching)\r\n* Command lookup\r\n\r\nTab-completion merely uses the _results_ of the above.\r\n\r\n* If `Get-Foo.ps1` is located in the current directory, _globbing_ applies, which in PowerShell is always case-INsensitive.\r\n\r\n* If `Get-Foo.ps1` is (only) present in a directory listed in `$env:PATH`, _command lookup_ applies:\r\n  * While command lookup is _generally_ case-INsensitive, with respect to commands that are _files on disk_, it is the host platform's file-system's case-sensitivity that matters in this case, so on Linux only a case-_exact_ file name / name prefix works for invocation / tab completion.\r\n\r\nThat is, on Linux (by default, but other platforms can have case-sensitive volumes too) PowerShell's case-INsensitive nature is at odds with the native file-system.\r\n\r\nOur options are:\r\n\r\n* Leave everything as-is and merely _document_ the problem.\r\n  * This means that on case-sensitive file-system `*.ps1` scripts must always be invoked case-exactly: `Get-Foo` works, but `get-foo` doesn't.\r\n\r\n* Make an exception _for `*.ps1` files_ (don't know about how feasible that is without performance concerns):\r\n  * This is defensible in that direct, in-process invocation of plain-text `*.ps1` files (not marked as executable on Unix platforms) is clearly a PowerShell-only feature - no other shell can support that.\r\n\r\n* Make lookup of disk-based commands  _generally_ case-INSensitive, irrespective of the case-sensitivity of the host platform's file-system (again, performance may be a concern).\r\n\r\n(In the latter two cases there can be ambiguity if _both_ `Get-Foo.ps1` and `get-foo.ps1` exist in the same dir., for instance, but I think even saying that which one is picked is _undefined_ is acceptable in this edge case.)\r\n\r\n---\r\n\r\nAs an aside: globbing exhibits potentially unexpected case-INsensitivity when calling native programs on case-sensitive file-systems (Linux):\r\n\r\nFor instance, the following two commands work differently on Linux:\r\n\r\n```powershell\r\n# PowerShell does the globbing: case-INsensitive, even on Linux:\r\n# Matches both t.txt and T.TXT, for instance.\r\nprintf '%s\\n' t*.txt\r\n\r\n# Globbing is delegated to the native shell: case-SENSITIVE, at least by default:\r\n# Matches only t.txt and *not* also T.TXT, for instance.\r\nsh -c 'printf ''%s\\n'' t*.txt'\r\n```\r\n\r\nThis may just be a matter of needing to _document_ the behavior.\r\n\r\n\r\n\r\n\r\n\r\n",
      "created_at": "2021-02-19T22:22:55Z",
      "updated_at": "2021-02-19T22:22:55Z"
    },
    {
      "author": "JoeSalmeri",
      "author_association": "NONE",
      "body": "\r\nThis too is something that drives me nuts with pwsh on Linux because I want to name ps1 files Get-Foo.ps1 not get-foo.ps1 to follow general pwsh conventions.\r\n\r\nIn bash, we have the 'set completion-ignore-case on' setting in ~/.inputrc.\r\n\r\nWe need a similar type configuration for pwsh or for PSReadLine ( I don't care where it is just that it exists ).\r\n\r\nI have the 'set completion-ignore-case on' in my .inputrc and if we go back to the original issue reported but use BASH instead of pwsh as our shell then typing 'get-fo' then tab will find Get-Foo.ps1 (since it is on the path) as would be expected.  Clearly bash does not have a problem doing the case-insensitive command searches on a case sensitive file system.\r\n\r\nThis was tested and is TRUE for both EXT4 and BTRFS file systems which are case sensitive.\r\n\r\nI find it quite ironic that BASH can do a case-INsentive match of a powershell mixed case named script on a case sensitive filesystem and find and the script but powershell cannot!\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
      "created_at": "2021-12-23T20:28:15Z",
      "updated_at": "2021-12-23T20:28:15Z"
    },
    {
      "author": "JoeSalmeri",
      "author_association": "NONE",
      "body": "On Linux why don't they use the fnmatch function?\r\n\r\n    https://man7.org/linux/man-pages/man3/fnmatch.3.html\r\n\r\nThe FNM_CASEFOLD flag allows case-insenstive matching\r\n\r\n\r\n\r\n\r\n",
      "created_at": "2021-12-23T20:50:11Z",
      "updated_at": "2021-12-23T20:50:27Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "/cc @MartinGC94 if you have an interest.",
      "created_at": "2021-12-24T05:18:56Z",
      "updated_at": "2021-12-24T05:18:56Z"
    }
  ],
  "created_at": "2020-12-02T18:35:28Z",
  "number": 14361,
  "state": "open",
  "title": "Tab Completion for powershell scripts is case sensitive when scripts found in PATH (linux)",
  "updated_at": "2021-12-24T19:18:05Z"
}