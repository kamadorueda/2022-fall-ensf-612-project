{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12925",
  "author": "rajdeep-biswas",
  "body": "# PR Summary\r\n\r\n<!-- Summarize your PR between here and the checklist. -->\r\nChanged code in CorePsPlatform.cs so that process names with spaces in them can be handled.\r\n## PR Context\r\n\r\n<!-- Provide a little reasoning as to why this Pull Request helps and why you have opened it. -->\r\nFix for #12908 \r\nThis was caused by the inconsistency in the index position after split, which has been fixed here by only considering the substring which stats after the last closing parenthesis ')' and hence it will always have a consistent index for process ID after split()ing.\r\nNote: first ever PR, please be lenient with my documentation. I'm open to suggestions for any changes.\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [ ] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [ ] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2022-07-09T06:01:12Z",
  "comments": [
    {
      "author": "rajdeep-biswas",
      "author_association": "NONE",
      "body": "> Please add a test.\r\n\r\nHi, I went through the testing guide but couldn't find an exact detail of how to add a test to the code, could you please point me to an example?",
      "created_at": "2020-06-09T14:05:05Z",
      "updated_at": "2020-06-09T14:05:05Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@therajdeepbiswas \r\n\r\nYou should add a test to Get-Process.Tests.ps1 file.\r\nThe test should be skipped if not `$IsLinux`.\r\nI guess we can not rename process on the fly so we have to create an executable file with appropriate name (like \"T ( E ( S ) T)\") and run it. Perhaps we could use https://stackoverflow.com/questions/11130229/start-a-process-with-a-name\r\n\n\n<blockquote><img src=\"https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded\" width=\"48\" align=\"right\"><div>Stack Overflow</div><div><strong><a href=\"https://stackoverflow.com/questions/11130229/start-a-process-with-a-name\">Start a process with a name</a></strong></div><div>Basically I want to dynamically start some processes which may create their own children processes, also I want to kill a certain group of processes I just created whenever I want. One way I could ...</div></blockquote>",
      "created_at": "2020-06-10T04:42:14Z",
      "updated_at": "2020-06-10T04:42:16Z"
    },
    {
      "author": "rajdeep-biswas",
      "author_association": "NONE",
      "body": "> create an executable file with appropriate name (like \"T ( E ( S ) T)\") and run it.\r\n\r\n@iSazonov I don't think it is possible to assign an alias with special characters from within PowerShell (so as to be executed from a testcase). ~If I were to do it from bash, that alias wouldn't carry over to PowerShell when I run the latter~. And even if I'm going to create a custom executable, that extra file will always be hardcoded for that one test case, isn't it?\r\n\r\nI thought it would be better to create a temporary file for one manual test.\r\nI called it \"t(e(s)t)\" and the contents of it are as follows\r\n`#!/bin/bash`\r\n`pwsh`\r\n\r\nAfter executing this from bash, it launched PowerShell as expected and on running `Get-Process`, you can note that it was indeed listed in the process list as shown below in the screenshot.\r\n\r\n![image](https://user-images.githubusercontent.com/32306614/84246488-53b89700-ab24-11ea-8d32-6b1d73be209f.png)\r\n\r\nAnd indeed the issue seems to have been solved from the one manual test, as shown below.\r\n\r\n![image](https://user-images.githubusercontent.com/32306614/84246586-75198300-ab24-11ea-9263-eafad9bf16f9.png)\r\n\r\nI don't think including this one file to run testcases on it time and again makes any sense. So it will be unnecessary to include the hardcoded testcase, however, I have added a testcase that checks if the parent property returned is not not null when looked up using process name (and not process ID). Adding in next commit.",
      "created_at": "2020-06-10T08:45:30Z",
      "updated_at": "2020-06-10T08:57:50Z"
    },
    {
      "author": "microsoft-cla-retired[bot]",
      "author_association": "NONE",
      "body": "[![CLA assistant check](https://cla.opensource.microsoft.com/pull/badge/signed)](https://cla.opensource.microsoft.com/PowerShell/PowerShell?pullRequest=12925) <br/>All CLA requirements met.",
      "created_at": "2020-06-10T08:47:37Z",
      "updated_at": "2020-06-10T13:49:05Z"
    },
    {
      "author": "rajdeep-biswas",
      "author_association": "NONE",
      "body": "The CI test for macos is failing on a pester file I did not change anything in. Please suggest me how to fix this.",
      "created_at": "2020-06-10T09:42:08Z",
      "updated_at": "2020-06-10T09:42:08Z"
    },
    {
      "author": "Araon",
      "author_association": "NONE",
      "body": "_Lmao_",
      "created_at": "2020-06-10T11:52:45Z",
      "updated_at": "2020-06-10T11:52:45Z"
    },
    {
      "author": "rajdeep-biswas",
      "author_association": "NONE",
      "body": "@iSazonov what now?",
      "created_at": "2020-06-10T12:24:05Z",
      "updated_at": "2020-06-10T12:24:05Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@therajdeepbiswas Please fix the test and make the test positive to cover the new code path.\r\n> Your test never checks the new code path on Linux. If we remove the cs code the test will pass.",
      "created_at": "2020-06-10T12:31:28Z",
      "updated_at": "2020-06-10T12:31:28Z"
    },
    {
      "author": "rajdeep-biswas",
      "author_association": "NONE",
      "body": "> @therajdeepbiswas Please fix the test and make the test positive to cover the new code path.\r\n\r\n@iSazonov My test file, in itself is working when executed offline using `Start-PSPester -Path test/powershell/Modules/Microsoft.PowerShell.Management/Get-Process.Tests.ps1`, and the new testcase which I wrote seems to be passing as can be inferred from the screenshot below.\r\n\r\n![image](https://user-images.githubusercontent.com/32306614/84269313-aefb8100-ab46-11ea-9d98-7156cb88bccc.png)\r\n\r\n\r\n> The CI test for macos is failing on a pester file I did not change anything in.\r\n\r\nand, as I mentioned earlier, the build was failing on a test file I hadn't modified at all.\r\nThe following results are from the automated tests\r\n`Check failure on line 1 in Test-Connection.Error occurred in Describe block`\r\n`azure-pipelines / PowerShell-CI-macos`\r\n`Test-Connection.Error occurred in Describe block`\r\n`Exception calling \"GetHostEntry\" with \"1\" argument(s): \"nodename nor servname provided, or not known\"`\r\nRaw Output: `At /Users/runner/runners/2.169.1/work/1/s/test/powershell/Modules/Microsoft.PowerShell.Management/Test-Connection.Tests.ps1:15 char:9`\r\n\r\nPlease note that `Test-Connection.Tests.ps1` is a file I did not modify.\r\n\r\n> and make the test positive to cover the new code path.\r\n\r\nPS: also, I'm not sure what you mean by 'cover the new code path', could you please care to elaborate?",
      "created_at": "2020-06-10T12:52:36Z",
      "updated_at": "2020-06-10T12:53:44Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> the build was failing on a test file I hadn't modified at all.\r\n\r\nIt is because there is a bug in .Net. (Process name is \"ConsoleHost mai\".) After the bug will be fixed your test will pass. You should create a process name so that your new code is executed in the new test.",
      "created_at": "2020-06-11T08:55:30Z",
      "updated_at": "2020-06-11T08:57:24Z"
    },
    {
      "author": "rajdeep-biswas",
      "author_association": "NONE",
      "body": "> create a process name\r\n\r\nBy this do you mean a test that invokes the Get-Process function which I modified?",
      "created_at": "2020-06-11T10:43:24Z",
      "updated_at": "2020-06-11T10:43:24Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Yes. You could use Bash sample you mentioned above.",
      "created_at": "2020-06-11T11:02:23Z",
      "updated_at": "2020-06-11T11:03:06Z"
    },
    {
      "author": "rajdeep-biswas",
      "author_association": "NONE",
      "body": "That can only be done through a manual test, right? How can you write a pester test that executes a custom bash file?",
      "created_at": "2020-06-11T11:16:52Z",
      "updated_at": "2020-06-11T11:16:52Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "You can create a bash script file on fly, set exec flag by chmod +x and run the script from pwsh.\r\n```\r\nPS /home/sie> & './t t.sh'\r\n\r\n NPM(K)    PM(M)      WS(M)     CPU(s)      Id  SI ProcessName\r\n ------    -----      -----     ------      --  -- -----------\r\n      0     0.00       4.97       0.40       8   8 bash\r\n      0     0.00      99.42       1.51    2412   8 ConsoleHost mai\r\n      0     0.00      85.93       0.70    2440   8 ConsoleHost mai\r\n      0     0.00       0.54       0.02       1   0 init\r\n      0     0.00       0.08       0.00       6   6 init\r\n      0     0.00       0.08       0.39       7   6 init\r\n      0     0.00       3.11       0.00    2439   8 t t.sh\r\n\r\n```",
      "created_at": "2020-06-11T12:53:43Z",
      "updated_at": "2020-06-11T12:53:43Z"
    },
    {
      "author": "rajdeep-biswas",
      "author_association": "NONE",
      "body": "@iSazonov please check if this is what you are talking about.",
      "created_at": "2020-06-11T14:40:48Z",
      "updated_at": "2020-06-11T14:40:48Z"
    },
    {
      "author": "rajdeep-biswas",
      "author_association": "NONE",
      "body": "@iSazonov Done as you suggested. Please check.",
      "created_at": "2020-06-12T00:49:24Z",
      "updated_at": "2020-06-12T00:49:24Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@therajdeepbiswas Please have a look at the failures.",
      "created_at": "2020-06-12T18:00:51Z",
      "updated_at": "2020-06-12T18:00:51Z"
    },
    {
      "author": "rajdeep-biswas",
      "author_association": "NONE",
      "body": "Hi @adityapatwardhan \nI think the macos fails are being caused due to how @iSazonov describe the .net bug.\n> > the build was failing on a test file I hadn't modified at all.\n> \n> It is because there is a bug in .Net. (Process name is \"ConsoleHost mai\".) After the bug will be fixed your test will pass. You should create a process name so that your new code is executed in the new test.\n\nAnd about the linux fails, I think they're because of an unbuilt version of pwsh. (The pwsh in the current branch is still running the version that is not bug free, right?)",
      "created_at": "2020-06-12T18:03:25Z",
      "updated_at": "2020-06-12T18:04:19Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "The workaround with bash doesn't seems work for C# app. We could create a host application for the test but I think it's not worth  for the edge case.\r\n",
      "created_at": "2020-06-18T05:21:12Z",
      "updated_at": "2020-06-18T05:21:12Z"
    },
    {
      "author": "rajdeep-biswas",
      "author_association": "NONE",
      "body": "> I don't think including this one file to run testcases on it time and again makes any sense. So it will be unnecessary to include the hardcoded testcase\r\n\r\nI had meant something similar when I said this.\r\n@iSazonov what do we do now, revert back the testcase files back to when all of the checks were passing and move on with the bugfix?",
      "created_at": "2020-06-20T06:22:01Z",
      "updated_at": "2020-06-20T06:22:01Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@therajdeepbiswas I think current test could be removed.\r\n\r\nPerhaps @adityapatwardhan has an idea about adding test or agree to merge without test. ",
      "created_at": "2020-06-20T18:40:16Z",
      "updated_at": "2020-06-20T18:40:16Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2020-06-28T02:00:29Z",
      "updated_at": "2020-06-28T02:00:29Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "Closed and re-opened the PR so restart CI tests. The CI structure has changed since.",
      "created_at": "2020-07-21T00:17:34Z",
      "updated_at": "2020-07-21T00:17:34Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2020-07-28T02:00:16Z",
      "updated_at": "2020-07-28T02:00:16Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@therajdeepbiswas Please look CI failures.",
      "created_at": "2020-07-28T10:44:31Z",
      "updated_at": "2020-07-28T10:44:31Z"
    },
    {
      "author": "rajdeep-biswas",
      "author_association": "NONE",
      "body": "> @therajdeepbiswas I think current test could be removed.\n> \n> Perhaps @adityapatwardhan has an idea about adding test or agree to merge without test. \n\nWaiting on confirmation about this, @iSazonov ",
      "created_at": "2020-07-28T11:17:19Z",
      "updated_at": "2020-07-28T11:17:33Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2020-08-04T14:00:13Z",
      "updated_at": "2020-08-04T14:00:13Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@therajdeepbiswas Since we moved to .Net 6.0 please rebase.",
      "created_at": "2021-02-14T17:46:45Z",
      "updated_at": "2021-02-14T17:46:45Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2021-02-22T02:00:07Z",
      "updated_at": "2021-02-22T02:00:07Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@therajdeepbiswas yes, please rebase.",
      "created_at": "2021-04-20T13:38:51Z",
      "updated_at": "2021-04-20T13:38:51Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2021-04-27T14:00:07Z",
      "updated_at": "2021-04-27T14:00:07Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@therajdeepbiswas The test you have added is failing please have a look.",
      "created_at": "2021-09-02T00:08:47Z",
      "updated_at": "2021-09-02T00:08:47Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2021-09-09T02:00:39Z",
      "updated_at": "2021-09-09T02:00:39Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2021-09-23T02:00:50Z",
      "updated_at": "2021-09-23T02:00:50Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as stale because it has been marked as requiring author feedback but has not had any activity for **15 days**. It will be closed if no further activity occurs **within 10 days of this comment**.",
      "created_at": "2022-06-28T23:01:12Z",
      "updated_at": "2022-06-28T23:01:12Z"
    }
  ],
  "created_at": "2020-06-09T10:59:51Z",
  "number": 12925,
  "state": "closed",
  "title": "Fix: Process.Parent property is null on Linux if the process name contains a space",
  "updated_at": "2022-07-09T06:01:12Z"
}