{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13685",
  "author": "leonardder",
  "body": "## Summary of the new feature/enhancement\r\nI'm building a PowerShell hosting library for several PowerShell based workflows. Scripts are run by populating an object with the necessary values:\r\n\r\n```c#\r\nusing System;\r\nusing System.Collections;\r\nusing System.Collections.Generic;\r\nusing System.Collections.ObjectModel;\r\nusing System.Management.Automation;\r\nusing System.Management.Automation.Runspaces;\r\n\r\nnamespace Helper.PS.Model\r\n{\r\n    public sealed class ScriptExecutionDetails\r\n    {\r\n        public Command Command { get; set; }\r\n        public Collection<Command> PreScriptCommands { get; set; } = new Collection<Command>();\r\n        public Collection<Command> PostScriptCommands { get; set; } = new Collection<Command>();\r\n        public Boolean UseStrictMode { get; set; } = true;\r\n        ...\r\n\r\n        public ScriptExecutionDetails()\r\n        {\r\n        }\r\n\r\n        public ScriptExecutionDetails(Command command)\r\n        {\r\n            this.Command = command ?? throw new ArgumentNullException(nameof(command));\r\n        }\r\n\r\n        public ScriptExecutionDetails(String command, Boolean isScript, IDictionary<String, Object> parameters = null)\r\n            : this()\r\n        {\r\n            if (String.IsNullOrEmpty(command))\r\n            {\r\n                throw new ArgumentException($\"'{nameof(command)}' cannot be null or empty\", nameof(command));\r\n            }\r\n            this.Command = new Command(command, isScript: isScript);\r\n            if (parameters != null)\r\n            {\r\n                foreach (KeyValuePair<String, Object> param in parameters)\r\n                {\r\n                    this.Command.Parameters.Add(param.Key, param.Value);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n\r\nThis object is then processed when populating the PowerShell object.\r\n\r\nOne issue I'm facing is that I can't control which commands are piped and which ones are batched, because I can't set the IsEndOfStatement property on the Command objects.\r\nhttps://github.com/PowerShell/PowerShell/blob/10237bdeb37718595d475bd0014b005a035b34df/src/System.Management.Automation/engine/hostifaces/Command.cs#L187\r\n\r\n## Proposed technical implementation details (optional)\r\n\r\nRemove the internal keyword",
  "closed_at": null,
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "You need to use `.AddStatement()` to end the current pipeline and start a new series of commands. \ud83d\ude42 ",
      "created_at": "2020-09-24T11:23:28Z",
      "updated_at": "2020-09-24T11:23:28Z"
    },
    {
      "author": "leonardder",
      "author_association": "NONE",
      "body": "Yes, that's what I do now. But I'd like to be able to do this when constructing the ScriptExecutionDetails object and adding commands to it. The PowerShell object is hidden to the internals of the library.\r\n\r\nTherefore, while I know there is an alternative, It would help to know why this setter was marked internal in the first place.",
      "created_at": "2020-09-24T11:28:09Z",
      "updated_at": "2020-09-24T11:28:09Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "Yeah it'd be nice to be able to control this on the object, even if through a constructor argument.\r\n\r\n> Therefore, while I know there is an alternative, It would help to know why this setter was marked internal in the first place.\r\n\r\nMy guess is thread safety reasons, since most of the `PSCommand` API's change state behind a lock.  I would have guessed `MergeMyResults` would have the same problem, but that is probably easier to check once at the start of an invocation and cache.\r\n\r\n/cc @daxian-dbw @PaulHigin, they might know the history.",
      "created_at": "2020-09-24T11:37:33Z",
      "updated_at": "2020-09-24T11:37:33Z"
    }
  ],
  "created_at": "2020-09-24T11:14:14Z",
  "labels": [
    "Issue-Question",
    "WG-DevEx-SDK",
    "Needs-Triage"
  ],
  "number": 13685,
  "state": "open",
  "title": "Feature Request: System.Management.Automation.Runspaces.Command.IsEndOfStatement should have a public setter",
  "updated_at": "2021-02-25T22:05:05Z"
}