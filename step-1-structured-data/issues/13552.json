{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13552",
  "author": "Joe-Zer0",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 and PowerShell 7+ issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6).\r\n\r\n-->\r\n\r\nCopied items do not retain their attributes.\r\n\r\n## Steps to reproduce\r\n\r\n```powershell\r\nmd temp1\r\nmd temp2\r\ncd .\\temp1\\\r\ngit init\r\n(Get-Item .\\.git\\ -Force).Attributes\r\n# Output:  Hidden, Directory\r\nCopy-Item * ..\\temp2\\ -Recurse -Force\r\ncd ..\\temp2\\\r\n(Get-Item .\\.git\\ -Force).Attributes\r\n# Output:  Directory\r\n```\r\n\r\n## Expected behavior\r\n\r\n```none\r\nThe .git folder should still have the Hidden attribute after it is copied.\r\n```\r\n\r\n## Actual behavior\r\n\r\n```none\r\nThe .git folder no longer has the Hidden attribute.\r\n```\r\n\r\n## Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\n$PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.3\r\nPSEdition                      Core\r\nGitCommitId                    7.0.3\r\nOS                             Microsoft Windows 10.0.18362\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@Joe-Zer0 Can you reproduce with latest PowerShell 7.1 Preview build?",
      "created_at": "2020-09-01T05:25:00Z",
      "updated_at": "2020-09-01T05:25:00Z"
    },
    {
      "author": "Joe-Zer0",
      "author_association": "NONE",
      "body": "@iSazonov \r\nI tested this with docker image mcr.microsoft.com/powershell:7.1.0-preview.6-nanoserver-1903.\r\n```\r\n$PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.0-preview.6\r\nPSEdition                      Core\r\nGitCommitId                    7.1.0-preview.6\r\nOS                             Microsoft Windows 10.0.18362\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\nIt didn't have git, so my steps are slightly different.  But you can see that Copy-Item is still not copying the Hidden attribute.\r\n```\r\nPS C:\\temp\\temp1> md HiddenFolder\r\n\r\n    Directory: C:\\temp\\temp1\r\n\r\nMode                 LastWriteTime         Length Name\r\n----                 -------------         ------ ----\r\nd----            9/1/2020  8:00 AM                HiddenFolder\r\n\r\nPS C:\\temp\\temp1> (Get-Item .\\HiddenFolder\\).Attributes += 'Hidden'\r\nPS C:\\temp\\temp1> gci\r\nPS C:\\temp\\temp1> gci -fo\r\n\r\n    Directory: C:\\temp\\temp1\r\n\r\nMode                 LastWriteTime         Length Name\r\n----                 -------------         ------ ----\r\nd--h-            9/1/2020  8:00 AM                HiddenFolder\r\n\r\nPS C:\\temp\\temp1> cp * ..\\temp2\\ -r -fo\r\nPS C:\\temp\\temp1> cd ..\\temp2\\\r\nPS C:\\temp\\temp2> gci -fo\r\n\r\n    Directory: C:\\temp\\temp2\r\n\r\nMode                 LastWriteTime         Length Name\r\n----                 -------------         ------ ----\r\nd----            9/1/2020  8:01 AM                HiddenFolder\r\n```",
      "created_at": "2020-09-01T13:05:35Z",
      "updated_at": "2020-09-01T13:05:35Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "After reviewing FileSystem provider code I see that we do manual enumeration and always care about file metadata/attributes but never about directory metadata/attributes. \r\n\r\n_Also we should fix three code paths - local session, SessionFrom and SessionTo:_\r\nhttps://github.com/PowerShell/PowerShell/blob/152456d7a0b0185a73731aff92c01f699641a350/src/System.Management.Automation/namespaces/FileSystemProvider.cs#L3649-L3669\r\n\r\nCompare CopyFileInfoItem() and CopyDirectoryInfoItem() for local session:\r\n    for file we use FIleInfo:\r\nhttps://github.com/PowerShell/PowerShell/blob/152456d7a0b0185a73731aff92c01f699641a350/src/System.Management.Automation/namespaces/FileSystemProvider.cs#L3976-L3982\r\n\r\n    for directory we use a path not DirectoryInfo:\r\nhttps://github.com/PowerShell/PowerShell/blob/152456d7a0b0185a73731aff92c01f699641a350/src/System.Management.Automation/namespaces/FileSystemProvider.cs#L3826-L3831\r\nhttps://github.com/PowerShell/PowerShell/blob/152456d7a0b0185a73731aff92c01f699641a350/src/System.Management.Automation/namespaces/FileSystemProvider.cs#L2810\r\n\r\nFor the fix we should create tests for local session scenario and manually test for both remote scenarios.",
      "created_at": "2020-09-02T04:46:13Z",
      "updated_at": "2020-09-02T04:46:13Z"
    },
    {
      "author": "Joe-Zer0",
      "author_association": "NONE",
      "body": "@iSazonov Thank you very much for your help! ",
      "created_at": "2020-09-02T06:30:13Z",
      "updated_at": "2020-09-02T06:30:13Z"
    },
    {
      "author": "Joe-Zer0",
      "author_association": "NONE",
      "body": "I believe I have a fix for this issue.  What branch should I create the pull request on?",
      "created_at": "2020-09-11T18:03:03Z",
      "updated_at": "2020-09-11T18:03:03Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Target the master branch for pull requests. \ud83d\ude42 ",
      "created_at": "2020-09-11T18:21:28Z",
      "updated_at": "2020-09-11T18:21:28Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "Actually, I am a bit concerned that this could be a breaking change.  This is new behavior, and if attributes are transferred automatically, are there scenarios where that can fail?  My concern is that existing scripts may break.  Would it be better to make this new behavior opt-in with a parameter switch?\r\n\r\nI'll mark this for committee review.\r\n\r\n/cc @anmenaga ",
      "created_at": "2020-09-28T17:40:38Z",
      "updated_at": "2020-09-28T17:40:38Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee reviewed this.  While exploring behaviors in cmd.exe with xcopy and bash with /bin/cp, we recognize that the default behavior is different between Windows and Linux/macOS.  Also recognize that there is a discrepancy in the current behavior where file attributes are copied, but directory attributes are not on all platforms.  Also, have dynamic parameters `-IncludeAttributes` and `-ExcludeAttributes` in the FileSystemProvider for Copy-Item so that users can get explicit behavior on all platforms.\r\n\r\nBecause we have some concerns about application compatibility, although likely a bucket 3 breaking change, we request that any change is done as an Experimental Feature.",
      "created_at": "2020-09-30T23:11:12Z",
      "updated_at": "2020-09-30T23:11:12Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "It is not clear - today we copy only file attributes:\r\n- will preserve current behavior without these new parameters?\r\n- with IncludeAttributes will we copy both file and directory attributes?\r\n- with ExcludeAttributes  will we exclude all file and directory attributes?\r\n\r\n_It seems we get a complex behavior and it can confuse users._ I'd prefer more simple UX.\r\n\r\nSince file attributes are coped by default should new parameter be -IncludeDirectoryAttributes? And what about with Exclude in the case? Have -ExcludeFileAttributes only or -ExcludeDirectoryAttributes too?\r\n\r\n---\r\n\r\nI tested with Far Manager - it copies directory attributes by default.\r\nIf this feature is present and gone then it will definitely be a bucket 3 breaking change. \r\nBut if this feature is not present, and it will be added, then this is definitely not a breaking change. (Those to whom it is important use a workaround today. Those who don't care ignore it at all.)\r\n\r\nMy proposal is:\r\n- add the feature (copy directory attributes) by default (as experimental feature)\r\n- add backward compatibility switch ExcludeDirectoryAttributes\r\n\r\nWe have about 1 year for getting feedbacks and adoption.\r\n\r\n",
      "created_at": "2020-10-01T03:48:54Z",
      "updated_at": "2020-10-01T03:48:54Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee reviewed this again, we agree on an experimental feature that copies the directory attributes.  In addition, not having any `-ExcludeDirectoryAttributes` switch initially unless customer feedback makes it clear this is needed.  In the case of someone copying a ReadOnly directory and subsequently trying to write to it because it worked previously they would get a clear error message and should update their script to modify the directory attribute explicitly.",
      "created_at": "2020-12-16T23:31:21Z",
      "updated_at": "2020-12-16T23:31:21Z"
    }
  ],
  "created_at": "2020-08-31T19:54:01Z",
  "labels": [
    "Issue-Enhancement",
    "Up-for-Grabs",
    "Committee-Reviewed",
    "WG-Cmdlets-Management",
    "Area-FileSystem-Provider"
  ],
  "number": 13552,
  "state": "open",
  "title": "Copy-Item does not retain Hidden attribute",
  "updated_at": "2021-11-30T16:53:26Z"
}