{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13706",
  "author": "billti",
  "body": "**Environment:** I'm using PowerShell 7.0.3 on Windows 10 build 19042.\r\n\r\nIf a native Windows app (non-console) attaches to the console with `AttachConsole`, and then writes to it via `WriteFile(GetStdHandle(STD_OUTPUT_HANDLE), ...)`, this works fine if the output is not redirected. However if the output is redirected (e.g. `.\\app.exe > .\\app.log`), then this fails. \r\n\r\nThis works fine from a `cmd.exe` console, if the output is not redirected, or if the app is a console app.\r\n\r\nI've put a simple project showing the issue at <https://github.com/billti/WinCons> (and also details on [StackOverflow](https://stackoverflow.com/questions/64106748/writefile-on-redirected-stdout-in-windows-gui-app-returns-error-no-data) before I figured out it was PowerShell specific).\r\n\r\n## Steps to reproduce\r\n\r\n1. See minimal native Windows app at https://github.com/billti/WinCons and build this with the `build.bat` file in the project root.\r\n2. From a `cmd.exe` command prompt, run `.\\app.exe > .\\cmd.log` and observe this works fine.\r\n3. From a `pwsh` command prompt do the same and observe that it crashes.\r\n4. Run without redirecting (e.g. `.\\app.exe`) in either cmd or pwsh and observe this works fine.\r\n\r\n## Expected behavior\r\n\r\nPowerShell should successfully write to the redirected stdout handle the same as cmd.exe does.\r\n\r\n## Actual behavior\r\n\r\nThe call to `WriteFile` with the redirected stdout handle fails with a GetLastError result of `0xE8 ERROR_NO_DATA \"The pipe is being closed.\"`\r\n\r\n",
  "closed_at": null,
  "comments": [],
  "created_at": "2020-09-28T18:58:07Z",
  "labels": [
    "Issue-Question",
    "WG-Interactive-Console"
  ],
  "number": 13706,
  "state": "open",
  "title": "WriteFile to a redirected stdout on an attached PowerShell console fails",
  "updated_at": "2020-09-29T12:21:36Z"
}