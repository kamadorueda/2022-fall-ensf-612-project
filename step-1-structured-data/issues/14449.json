{
  "_url": "https://github.com/PowerShell/PowerShell/issues/14449",
  "author": "petrasteri",
  "body": "## Steps to reproduce\r\n\r\nWe use the following instruction to calculate a folder size\r\n\r\ngci c:\\my_folder | measure Length -sum\r\n\r\nHowever, if the folder is empty, this instruction returns an error.  This happens in PowerShell 5 to PowerShell 7 (Win 10 to Windows Server 2016 to 2019).  The error message is:\r\n\r\n**Measure-Object: Cannot process argument because the value of argument \u201cProperty\u201d is not valid. Change the value of the \u201cProperty\u201d argument and run the operation again.**\r\n\r\n## Expected behavior\r\nReturns 0.  No error.  Especially, no red error message on the screen.\r\n\r\n## Actual behavior\r\nBig RED error message on the screen.  Even though 0 is returned, but the error message is annoying.\r\n\r\n## Environment data\r\nc:\\my_folder is an empty folder\r\n\r\n## My opinion\r\nMeasure-Object\u2019s behaviour is correct.  So the culprit is the folder object returned by PowerShell.  The size property of the folder object should be set to zero by default.\r\n\r\nOf course, if other changes in PowerShell's internal working could lead to the disappearance of the error message, I'm happy with that too.",
  "closed_at": null,
  "comments": [
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "How about using `gci -file` if your intention is to only measure files?",
      "created_at": "2020-12-17T07:56:03Z",
      "updated_at": "2020-12-17T07:56:03Z"
    },
    {
      "author": "petrasteri",
      "author_association": "NONE",
      "body": "I have tried your command but I don't get what you mean.\r\n\r\nBut my intention is to get the folder size, meaning that the sum of all files inside it, no matter the number of files inside it.  If the folder is empty, I of course expect the size to be zero.\r\n\r\nIt's like counting the number of people living in a house in real life.  If a house has nobody living inside it, I expect the answer to be zero, not \"something is not a property of the house\".",
      "created_at": "2020-12-17T08:21:33Z",
      "updated_at": "2020-12-17T08:21:33Z"
    },
    {
      "author": "ghost",
      "author_association": "NONE",
      "body": "Hey petrasteri,\r\n\r\nis that \"my_folder\" an actual folder or is it a symlink?",
      "created_at": "2020-12-17T08:41:38Z",
      "updated_at": "2020-12-17T08:41:51Z"
    },
    {
      "author": "petrasteri",
      "author_association": "NONE",
      "body": "Not symlink\r\n\r\nLook, here is an example with my C:\\temp\\p folder\r\n\r\n![image](https://user-images.githubusercontent.com/12992229/102482835-206f3b80-4064-11eb-919f-d63fe17c6812.png)\r\n",
      "created_at": "2020-12-17T11:34:04Z",
      "updated_at": "2020-12-17T11:34:04Z"
    },
    {
      "author": "petrasteri",
      "author_association": "NONE",
      "body": "Maybe it's better that an official cmdlet called **get-folder-size** is given so we don't have to fiddle with **gci** and **measure**",
      "created_at": "2020-12-17T11:36:29Z",
      "updated_at": "2020-12-17T11:36:29Z"
    },
    {
      "author": "ghost",
      "author_association": "NONE",
      "body": "I am actually working on a module that could solve your problem. it is about folder sizes aswell, if your interessted i could finish it in a few days.",
      "created_at": "2020-12-17T11:47:36Z",
      "updated_at": "2020-12-17T11:47:36Z"
    },
    {
      "author": "petrasteri",
      "author_association": "NONE",
      "body": "That's nice.\r\nWill your module be available only in the new PowerShell 7?  Or will it be reintegrated into PowerShell 5 (in Windows 10 and Windows Server 2019)?",
      "created_at": "2020-12-17T12:32:07Z",
      "updated_at": "2020-12-17T12:32:07Z"
    },
    {
      "author": "ghost",
      "author_association": "NONE",
      "body": "its developed in pwsh7 but i see no reason yet it wouldn work on pwsh5 or even 3.",
      "created_at": "2020-12-17T12:58:28Z",
      "updated_at": "2020-12-17T12:58:28Z"
    },
    {
      "author": "petrasteri",
      "author_association": "NONE",
      "body": "That sounds great.",
      "created_at": "2020-12-17T22:23:43Z",
      "updated_at": "2020-12-17T22:23:43Z"
    },
    {
      "author": "bpayette",
      "author_association": "CONTRIBUTOR",
      "body": "The problem only occurs when the folder isn't empty but only contains folders. In this situation, @powercode's suggestion does workaround the issue:\r\n```powershell\r\ngci -file c:\\my_folder | measure Length -sum\r\n```\r\nsince it doesn't return the `DirectoryInfo` objects.  That said, this does seem inconsistent. Unless you're in strict mode, PowerShell simply ignores missing properties so, unless otherwise specified, `Measure-Object` should do the same.",
      "created_at": "2020-12-18T00:06:34Z",
      "updated_at": "2020-12-18T00:06:34Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "The code is here:\r\nhttps://github.com/PowerShell/PowerShell/blob/7f3364f5dd5c3095d1b177c682960f3bb3ca4ca0/src/Microsoft.PowerShell.Commands.Utility/commands/utility/Measure-Object.cs#L818-L827",
      "created_at": "2020-12-18T06:50:58Z",
      "updated_at": "2020-12-18T06:50:58Z"
    },
    {
      "author": "ghost",
      "author_association": "NONE",
      "body": "@petrasteri \r\nHey i just released my ncdu clone\r\n\r\nhttps://github.com/FrankDetzer/HumanFriendlyOutput\n\n<blockquote><img src=\"https://avatars0.githubusercontent.com/u/57404682?s=400&v=4\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/FrankDetzer/HumanFriendlyOutput\">FrankDetzer/HumanFriendlyOutput</a></strong></div><div>Use the Get-HumanFriendlyFileList cmdlet to view items and folders and their respective size and attributes. - FrankDetzer/HumanFriendlyOutput</div></blockquote>",
      "created_at": "2020-12-21T21:07:56Z",
      "updated_at": "2020-12-21T21:07:58Z"
    },
    {
      "author": "KiwiThePoodle",
      "author_association": "CONTRIBUTOR",
      "body": "@bpayette\r\n\r\nHey, I just wanted to clarify on your comment. Are you saying that Measure-Object should just ignore the missing property and not print the error when gci -file is not used?",
      "created_at": "2021-11-12T03:20:03Z",
      "updated_at": "2021-11-12T03:20:03Z"
    },
    {
      "author": "plastikfan",
      "author_association": "NONE",
      "body": "> The problem only occurs when the folder isn't empty but only contains folders. In this situation, @powercode's suggestion does workaround the issue:\r\n> \r\n> ```powershell\r\n> gci -file c:\\my_folder | measure Length -sum\r\n> ```\r\n> \r\n> since it doesn't return the `DirectoryInfo` objects. That said, this does seem inconsistent. Unless you're in strict mode, PowerShell simply ignores missing properties so, unless otherwise specified, `Measure-Object` should do the same.\r\n\r\nIt would be nice for this to get fixed properly for Directories (which don't contain files) without resorting to measuring files instead of directories as the workaround suggested above. For directory structures with large numbers of files, measuring individual files is dog slow compared to measuring directories and is very noticable for large directory trees, so its not a practical solution. Looking forward to seeing this get fixed, thanks.\r\n\r\n",
      "created_at": "2022-09-26T15:00:13Z",
      "updated_at": "2022-09-26T15:00:13Z"
    }
  ],
  "created_at": "2020-12-17T07:28:13Z",
  "labels": [
    "Issue-Enhancement",
    "Up-for-Grabs",
    "WG-Cmdlets-Utility"
  ],
  "number": 14449,
  "state": "open",
  "title": "Empty folder size value should be set to zero",
  "updated_at": "2022-09-26T15:00:13Z"
}