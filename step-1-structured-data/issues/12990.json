{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12990",
  "author": "pcgeek86",
  "body": "## Summary\r\n\r\nWhen I use the PowerShell built-in classes to construct type formatting data, using a tabular format, the `ScriptBlock` is not being interpreted properly in the `DisplayEntry` class. Instead of putting my `ScriptBlock` into the `ScriptBlock` field, it is simply emitting a semicolon.\r\n\r\nI can't tell if I'm using the classes incorrectly, or if this is a bug. AFAICT from reading the docs and using Intellisense, I am using the classes correctly. \r\n\r\n## Steps to reproduce\r\n\r\n```powershell\r\n# Create a type definition\r\n$TableControl = [System.Management.Automation.TableControl]::new()\r\n\r\n$TableColumnHeader = [System.Management.Automation.TableControlColumnHeader]::new('First Name', 0, [System.Management.Automation.Alignment]::Left)\r\n$TableControl.Headers.Add($TableColumnHeader)\r\n\r\n$DisplayEntry = [System.Management.Automation.DisplayEntry]::new('\"$_.FirstName\"', [System.Management.Automation.DisplayEntryValueType]::ScriptBlock)\r\n$TableColumn = [System.Management.Automation.TableControlColumn]::new([System.Management.Automation.Alignment]::Undefined, $DisplayEntry)\r\n\r\n$ArrayList = [System.Collections.Generic.List[System.Management.Automation.TableControlColumn]]::new(10)\r\n$ArrayList.Add($TableColumn)\r\n\r\n$TableRow = [System.Management.Automation.TableControlRow]::new($ArrayList)\r\n$TableControl.Rows.Add($TableRow)\r\n$TableControl.AutoSize = $true\r\n\r\n$FormatView = [System.Management.Automation.FormatViewDefinition]::new('Person', $TableControl)\r\n$ExTypeDef = [System.Management.Automation.ExtendedTypeDefinition]::new('Person')\r\n$ExTypeDef.FormatViewDefinition.Add($FormatView)\r\n\r\nExport-FormatData -InputObject $ExTypeDef -Path person.ps1xml\r\n\r\nGet-Content -Raw -Path .\\person.ps1xml\r\n```\r\n\r\n## Expected behavior\r\n\r\n```none\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<Configuration>\r\n  <ViewDefinitions>\r\n    <View>\r\n      <Name>Person</Name>\r\n      <ViewSelectedBy>\r\n        <TypeName>Person</TypeName>\r\n      </ViewSelectedBy>\r\n      <TableControl>\r\n        <AutoSize />\r\n        <TableHeaders>\r\n          <TableColumnHeader>\r\n            <Label>First Name</Label>\r\n            <Alignment>Left</Alignment>\r\n          </TableColumnHeader>\r\n        </TableHeaders>\r\n        <TableRowEntries>\r\n          <TableRowEntry>\r\n            <TableColumnItems>\r\n              <TableColumnItem>\r\n                <ScriptBlock>$PSItem.FirstName</ScriptBlock>\r\n              </TableColumnItem>\r\n            </TableColumnItems>\r\n          </TableRowEntry>\r\n        </TableRowEntries>\r\n      </TableControl>\r\n    </View>\r\n  </ViewDefinitions>\r\n</Configuration>\r\n```\r\n\r\n## Actual behavior\r\n\r\n```none\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<Configuration>\r\n  <ViewDefinitions>\r\n    <View>\r\n      <Name>Person</Name>\r\n      <ViewSelectedBy>\r\n        <TypeName>Person</TypeName>\r\n      </ViewSelectedBy>\r\n      <TableControl>\r\n        <AutoSize />\r\n        <TableHeaders>\r\n          <TableColumnHeader>\r\n            <Label>First Name</Label>\r\n            <Alignment>Left</Alignment>\r\n          </TableColumnHeader>\r\n        </TableHeaders>\r\n        <TableRowEntries>\r\n          <TableRowEntry>\r\n            <TableColumnItems>\r\n              <TableColumnItem>\r\n                <ScriptBlock>;</ScriptBlock>\r\n              </TableColumnItem>\r\n            </TableColumnItems>\r\n          </TableRowEntry>\r\n        </TableRowEntries>\r\n      </TableControl>\r\n    </View>\r\n  </ViewDefinitions>\r\n</Configuration>\r\n```\r\n\r\n## Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.2\r\nPSEdition                      Core\r\nGitCommitId                    7.0.2\r\nOS                             Microsoft Windows 10.0.19041\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u0393\u00c7\u00aa}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2020-06-19T00:51:14Z",
  "comments": [
    {
      "author": "pcgeek86",
      "author_association": "NONE",
      "body": "@felixfbecker any thoughts on this? I know you've done quite a bit of work with PowerShell format types.",
      "created_at": "2020-06-18T19:14:02Z",
      "updated_at": "2020-06-18T19:14:02Z"
    },
    {
      "author": "felixfbecker",
      "author_association": "CONTRIBUTOR",
      "body": "Hmm honestly I never used the .NET classes, I always write the .Format.ps1xml files by hand (it's quite nice with [autocompletion in VS Code](https://code.visualstudio.com/docs/languages/powershell#_typesps1xml-and-formatps1xml-files))",
      "created_at": "2020-06-18T19:17:56Z",
      "updated_at": "2020-06-18T19:17:56Z"
    },
    {
      "author": "pcgeek86",
      "author_association": "NONE",
      "body": "I saw you were working on the schemas ... nice",
      "created_at": "2020-06-18T19:18:46Z",
      "updated_at": "2020-06-18T19:18:46Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@StartAutomating may have some input here since he authored the EZOut module which handles formatters. Not sure if he's using this method or a custom method though.",
      "created_at": "2020-06-18T20:23:23Z",
      "updated_at": "2020-06-18T20:23:23Z"
    },
    {
      "author": "ThomasNieto",
      "author_association": "CONTRIBUTOR",
      "body": "@pcgeek86 To get `ScriptBlock` content exported you need to add the `-IncludeScriptBlock` parameter on `Export-FormatData`.",
      "created_at": "2020-06-19T00:49:27Z",
      "updated_at": "2020-06-19T00:49:39Z"
    },
    {
      "author": "pcgeek86",
      "author_association": "NONE",
      "body": "Thanks! I didn't realize that parameter existed. Appreciate you bringing it to my attention!",
      "created_at": "2020-06-19T00:51:11Z",
      "updated_at": "2020-06-19T00:51:11Z"
    }
  ],
  "created_at": "2020-06-18T19:07:42Z",
  "number": 12990,
  "state": "closed",
  "title": "PowerShell Type Formatting: ScriptBlock in DisplayEntry is emitting a semicolon instead of the actual ScriptBlock",
  "updated_at": "2020-06-19T00:51:14Z"
}