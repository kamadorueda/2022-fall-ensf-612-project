{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11754",
  "author": "scotthardwick",
  "body": "(If I need to break this feature request up into a multiple, I can do so. Wasn't sure if I should break it based on Import/Export, or to post one per new parameter suggestion. In the end I have bundled all these suggestions together.)\r\n\r\nAs the programmers work towards PowerShell 7's final release, I wanted to suggest perhaps we strengthen some of the options that are available in PowerShell's CSV cmdlets (Import-CSV, Export-CSV, ConvertTo-CSV, ConvertFrom-CSV).\r\n\r\nI can't speak for every programmer everywhere, but as an admin scripter working with legacy systems, I find I do a lot of processing on CSV files that are batch created and dumped somewhere for me.  While PowerShell has a good few features, I still find myself pre-processing the file and then post fixing the object.  Below are some suggestions that might make it easier for CSV users.  I don't think any of these should be controversial and none of this should break existing code.  \r\n\r\nPowerShell's code for CSV operations seems to be based around:\r\nsrc/Microsoft.PowerShell.Commands.Utility/commands/utility/CsvCommands.cs\r\n\r\nImport\r\n---------------------\r\n\r\n- `-Header <String[]>`        \r\n\r\n- `-Delimiter <Char>`         Defaults to (Get-Culture).TextInfo.ListSeparator\r\n\r\n- (NEW) `-EscapeChar <Char> ` Allow user to define the Escape Character. Defaults to \" keeping backward compatibility.\r\n\r\n- (NEW) `-QuoteChar <Char> `  Allow user to define the Quote Character. Defaults to \" keeping backward compatibility.\r\n\r\n- (NEW) `-CommentChar <Char>` Allow user to define the Comment Character. Defaults to #  keeping backward compatibility.  (Note: I see some commented with // so wasn't sure if this parameter should be CommentStr <String> for \"//\" )\r\n\r\n- (NEW) `-Strict`             Indicates to raise an error when the number of fields is different from that of the header record.\r\n\r\n- (NEW) `-First <Int32>  `    Specifies the number of lines at the beginning of a data file to parse after the header (if avail) and after skip (if specified)\r\n\r\n- (NEW) `-Last <Int32>`       Specifies the number of lines at the end of a data file to parse after skiplast (if specified)\r\n\r\n- (NEW) `-Skip <Int32>`       Specifies the number of lines at the beginning of a data file that the parser should skip over after the header (if avail)\r\n\r\n- (NEW) `-SkipLast <Int32> `  Specifies the number of lines at the end of a data file that the parser should skip over\r\n\r\n- (NEW) `-Trim <TrimKind>`    Specifies if PowerShell should trim spaces before placing the content into the object. Default is None for backward compatibility. Options of None/Trim/InsideQuotes\r\n\r\n- (NEW) `-NoHeaderSpaces`     Remove spaces from any header name in the object property name.\r\n\r\n- (NEW) `-ColumnTypes`         (See #11942) Specifies the Type of the specified columns. Columns not specified default to [string].  This could be implemented in multiple ways and I am not sure what would be best.  The parameter may also be better named something like TypeMap.  One possible way to do this would be:\r\n`-ColumnTypes @{Age='Int';Birthday=[DateTime]}`\r\n\r\nExport\r\n---------------------\r\n\r\n- (NEW) `-Header <String[]>`  Allow user to define the outgoing header of the file.  \r\n\r\n- `-Delimiter <Char> `        Defaults to \",\" and oddly not (Get-Culture).TextInfo.ListSeparator. Changing this would be a breaking change.So just leave alone.\r\n\r\n- (NEW) `-EscapeChar <Char>`  Allow user to define the Escape Character. Defaults to \" keeping backward compatibility.\r\n\r\n- (NEW) `-QuoteChar <Char>`   Allow user to define the Quote Character. Defaults to \" keeping backward compatibility.\r\n\r\n- `-UseQuotes <QuoteKind>`    ie, Never/Always/AsNeeded\r\n\r\n- `-QuoteFields <String[]>`   ex. \"DateTime\", \"Date\"\r\n\r\n- (NEW) `-Trim <TrimKind>`    Specifies if PowerShell should trim spaces before exporting the content. Default is None for backward compatibility. Options of None/Trim\r\n\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@scotthardwick can you please add some formatting to your post? As it is, it's very much a block of text and quite hard to read. \r\n\r\nThanks! \ud83d\ude0a",
      "created_at": "2020-02-02T17:45:38Z",
      "updated_at": "2020-02-02T17:45:38Z"
    },
    {
      "author": "scotthardwick",
      "author_association": "NONE",
      "body": "@vexx32  Thanks for the suggestion. I have gone in and done some formatting. Hope that helps!",
      "created_at": "2020-02-02T18:16:07Z",
      "updated_at": "2020-02-02T18:16:07Z"
    },
    {
      "author": "iRon7",
      "author_association": "NONE",
      "body": "I don't think it is a good idea to add (common) parameters like  `-Last`, `-First`, `-Skip`  and `-SkipLast` to just these two cmdlets. Instead:\r\n* the  [`Select-Object`](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/select-object?view=powershell-7) cmdlet should be used.\r\n\r\nOr:\r\n\r\n* If it is decided for these two `csv` cmdlets , any other cmdlet that supports an `-InputObject` parameter via the pipeline comes in play. Meaning that it should be considered to add them to the [CommonParameters](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_commonparameters?view=powershell-7). See: #12164",
      "created_at": "2020-03-20T15:52:37Z",
      "updated_at": "2020-03-20T15:54:11Z"
    },
    {
      "author": "Andrei-Paul",
      "author_association": "NONE",
      "body": "OMG YES please. I would have loved me some escape char support the past few days.\r\n\r\n-UseQuotes <QuoteKind> ie, Never/Always/AsNeeded - Python also has NonNumeric, it would be nice to have data feature parity between the 2.\r\n\r\nWhat python doesn't have and would be nice to have would be to distinguish between empty strings and $null, by quoting one but not the other. Why? Because an empty response is not the same thing as no response at all.",
      "created_at": "2021-02-04T09:52:45Z",
      "updated_at": "2021-02-04T09:56:45Z"
    }
  ],
  "created_at": "2020-02-02T15:56:51Z",
  "number": 11754,
  "state": "open",
  "title": "Additional Parameters for Import-CSV and Export-CSV",
  "updated_at": "2021-02-04T09:56:45Z"
}