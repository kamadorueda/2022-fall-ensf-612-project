{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3652",
  "author": "jianyunt",
  "body": "If you have two child items let's say Ben and Benjamin. Notice the child names - one starts with another. This is a fairly common case.  Now if you cd to Ben and then dir ..\\ [tab], PowerShell will show \".\\Benjamin\". Expected \"..\\Benjamin\".  \r\nNote: this issue does not repo on FileSystem as it implements NormalizeRelativePath() by itself.\r\n\r\n\r\n\r\n\r\nSteps to reproduce\r\n------------------\r\n1. Need to create a PowerShell provider (feel free talk to me about it)\r\n2. cd the a child item\r\n3. dir ..\\    [tab]\r\n\r\nThe output looks like this\r\n\r\n``` PowerShell\r\nPS Alexa:\\> dir\r\n\r\n  Name\r\n  ----\r\n  Ben\r\n  benjamin\r\n\r\n\r\nPS Alexa:\\> cd Ben\r\nPS Alexa:\\Ben> dir ..\\ [tab]\r\n\r\n```\r\n\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n``` PowerShell\r\nPS Alexa:\\Ben> dir ..\\Ben\\\r\nPS Alexa:\\Ben> dir ..\\benjamin\r\n```\r\n\r\n\r\nActual behavior\r\n---------------\r\n\r\n``` PowerShell\r\nPS Alexa:\\Ben> dir ..\\Ben\\\r\nPS Alexa:\\Ben> dir .\\benjamin\r\n```\r\n\r\nNote that .\\benjamin  instead of ..\\benjamin\r\n\r\nInitial Analysis\r\n---------------\r\nI think the problem is in ContractRelativePath()/NavigationProviderBase.cs  line #677:\r\n\r\n``` C#\r\n\r\n                // If the base path isn't really a base, then we resolve to a parent\r\n                // path (such as ../../foo)\r\n\r\n                if (!normalizedPath.StartsWith(normalizedBasePath, StringComparison.OrdinalIgnoreCase) &&\r\n                    (basePath.Length > 0))\r\n                {\r\n                           ...\r\n                }\r\n\r\n```\r\nIn my case, \r\n\r\nnormalizedPath = Alexa\\\\benjamin\r\nnormalizedBasePath = Alexa\\\\Ben\r\n\r\nThe above if statement should be true. However  string.StartsWith() matches for this case , if becomes false, so the if block doesn't get executed. Thus the ContractRelativePath returns \"benjamin\" instead of expected \"..\\benjamin\".\r\nYou possibly need to use tokenizer instead of simple string match.\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\nName                           Value\r\n----                           -----\r\nWSManStackVersion              3.0\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nCLRVersion\r\nPSRemotingProtocolVersion      2.3\r\nPSVersion                      6.0.0-alpha\r\nGitCommitId                    v6.0.0-alpha.18\r\nPSEdition                      Core\r\nBuildVersion                   3.0.0.0\r\nSerializationVersion           1.1.0.1\r\n\r\n\r\n```\r\n",
  "closed_at": null,
  "comments": [],
  "created_at": "2017-04-26T18:12:38Z",
  "labels": [
    "WG-Interactive-IntelliSense",
    "WG-Engine-Providers"
  ],
  "number": 3652,
  "state": "open",
  "title": "dir ..\\ [tab] can navigate items at one level up. But PS shows .\\childitem instead",
  "updated_at": "2017-04-27T18:57:25Z"
}