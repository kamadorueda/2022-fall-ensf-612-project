{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3598",
  "author": "mklement0",
  "body": "Steps to reproduce\r\n------------------\r\n\r\nThe following uses variations of `Get-Random 1` to produce a number in the interval `[0,1)`, which for any integer type should invariably yield `0`:\r\n\r\n```powershell\r\n[sbyte], [byte], [int16], [uint16], [int], [uint32], [int64], [uint64] | % {\r\n  [pscustomobject] @{\r\n    TypeIn = $_.Name\r\n    Result = Get-Random ($_::Parse(1))\r\n    TypeOut = (Get-Random ($_::Parse(1))).GetType().Name\r\n  }\r\n}\r\n```\r\n\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```\r\nTypeIn            Result TypeOut\r\n------            ------ -------\r\nSByte                  0 SByte \r\nByte                   0 Byte \r\nInt16                  0 Int16 \r\nUInt16                 0 UInt16\r\nInt32                  0 Int32  \r\nUInt32                 0 UInt32 \r\nInt64                  0 Int64  \r\nUInt64                 0 UInt64 \r\n```\r\n\r\n\r\nActual behavior\r\n---------------\r\n\r\nSomething like:\r\n\r\n```\r\nTypeIn            Result TypeOut\r\n------            ------ -------\r\nSByte  0.412813293008512 Double \r\nByte   0.117663220557227 Double \r\nInt16  0.326887441485602 Double \r\nUInt16 0.502738704207697 Double \r\nInt32                  0 Int32  \r\nUInt32 0.995645226908683 Double \r\nInt64                  0 Int64  \r\nUInt64  0.39285415708686 Double \r\n```\r\n\r\nNote how only `[int32]` and `[int64]` correctly output a (type-preserved) integer.\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\nPowerShell Core v6.0.0-alpha (v6.0.0-alpha.18) on Darwin Kernel Version 16.5.0: Fri Mar  3 16:52:33 PST 2017; root:xnu-3789.51.2~3/RELEASE_X86_64\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "With code side it is \"by design\" not \"unexpectedly\". So should we change the design?",
      "created_at": "2017-04-19T17:34:15Z",
      "updated_at": "2017-04-19T17:34:15Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov:\r\n\r\nThe existing [documentation](https://msdn.microsoft.com/en-us/powershell/reference/5.0/microsoft.powershell.utility/get-random) _partially contradicts_  current behavior:\r\n\r\n> Enter a 32-bit integer or a double-precision floating-point number, or an object that can be converted to an integer or double\r\n\r\nIf we assume that \"to an integer\" means to an `[int32]`, then certainly the _smaller_ integer types would qualify for that conversion - but that's not what's happening currently.\r\n\r\nUnder the same assumption, you could argue that the _larger_ integer types only fit into `[double]`, so they should be treated as that, which is true for `[uint64]`, but _not_ for `[int64]`.\r\n\r\nI think that a change is warranted from a common-sense standpoint, and that the change falls into [bucket 3 - unlikely grey area]( https://github.com/PowerShell/PowerShell/blob/master/docs/dev-process/breaking-change-contract.md#bucket-3-unlikely-grey-area).",
      "created_at": "2017-04-20T04:11:36Z",
      "updated_at": "2017-04-20T04:14:25Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@mklement0 I mean only that the code make this _explicity_ and it is not bug. \r\nIs \"Expected behavior\" that you want to get _precisely_ or you want to get int32 for small \"integers\"? ",
      "created_at": "2017-04-20T05:08:08Z",
      "updated_at": "2017-04-20T05:08:08Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov:  That's fine, as long as there's agreement that the behavior is counter-intuitive (which is what I meant by \"unexpected\").\r\n\r\nI think getting the precise type back makes sense, but I'm not sure I'm aware of all the ramifications.\r\n\r\n(As an aside: It's open to debate whether the [source code](https://github.com/PowerShell/PowerShell/blob/02b5f357a20e6dee9f8e60e3adb9025be3c94490/src/Microsoft.PowerShell.Commands.Utility/commands/utility/GetRandomCommand.cs#L385) reflects deliberate intent to treat the less common integer types not explicitly mentioned as `[double]`, or whether that was a mere oversight.)",
      "created_at": "2017-04-20T15:15:02Z",
      "updated_at": "2017-04-20T15:15:02Z"
    }
  ],
  "created_at": "2017-04-19T16:44:29Z",
  "labels": [
    "Issue-Enhancement",
    "WG-Cmdlets-Utility"
  ],
  "number": 3598,
  "state": "open",
  "title": "Get-Random unexpectedly outputs [double] values with various integer types",
  "updated_at": "2020-04-08T18:53:03Z"
}