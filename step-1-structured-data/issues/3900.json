{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3900",
  "author": "adityapatwardhan",
  "body": "A lot of binary modules written for Windows Powershell (Full cLR) use GAC for their assemblies.\r\nCoreCLR does not have a GAC and hence fails to locate the assemblies.\r\n\r\nAdded functionality to search the well known location of GAC on Windows to load the assemblies.\r\nThis functionality can be opted-in by adding a key-value to PowershellProperties.json file at $PSHOME.\r\nThe key-value pair for enabling GAC loading is: \"AllowGacLoading\" : \"true\"\r\n\r\n<!--\r\n\r\nIf you are a PowerShell Team member, please make sure you choose the Reviewer(s) and Assignee for your PR.\r\nIf you are not from the PowerShell Team, you can leave the fields blank and the Maintainers will choose them for you. If you are familiar with the team, feel free to mention some Reviewers yourself.\r\n\r\nFor more information about the roles of Reviewer and Assignee, refer to CONTRIBUTING.md.\r\n\r\n-->\r\n",
  "closed_at": "2017-06-07T17:34:45Z",
  "comments": [
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Talked to @adityapatwardhan offline. The GAC probing logic should be put in AssemblyLoadContext and hook up with the `Resolving` event of the default loader. `Assembly.Load` will trigger the `Resolving` event if the default loader cannot resolve the assembly request. Implicit assembly loading is also taken care of by `Assembly.Load` in this way.",
      "created_at": "2017-05-31T23:31:56Z",
      "updated_at": "2017-05-31T23:31:56Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "Closing this PR and will start a new one for changes in AssemblyLoadContext. ",
      "created_at": "2017-06-07T17:34:45Z",
      "updated_at": "2017-06-07T17:34:45Z"
    }
  ],
  "created_at": "2017-05-31T23:06:14Z",
  "number": 3900,
  "state": "closed",
  "title": "Added functionality to load Windows Powershell Modules",
  "updated_at": "2018-11-01T17:37:54Z"
}