{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6236",
  "author": "markekraus",
  "body": "## PR Summary\r\n\r\nFixes breaking changes made in #6235 \r\nref #6233\r\n\r\n## PR Checklist\r\n\r\n- [X] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [X] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [X] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` to the beginning of the title and remove the prefix when the PR is ready.\r\n- **User-facing changes**\r\n    - [X] Not Applicable\r\n    - **OR**\r\n    - [ ] User-facing [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed - Issue link:\r\n- **Testing - New and feature**\r\n    - [X] Not Applicable or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n        - [ ] [Add `[feature]` if the change is significant or affects feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\r\n",
  "closed_at": "2018-02-24T20:05:49Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I'd prefer set TLS12 only for GitHub request and then revert to SystemDefault.",
      "created_at": "2018-02-24T19:47:25Z",
      "updated_at": "2018-02-24T19:47:25Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "Hey @markekraus you beat me on the time of it! I did the @iSazonov suggestion in #6237 , can you review it please?",
      "created_at": "2018-02-24T19:48:23Z",
      "updated_at": "2018-02-24T19:48:38Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov We would need to update this all over the place.. I believe turning on tls 1.2 is fine as a boot strap operation in general. ",
      "created_at": "2018-02-24T19:54:03Z",
      "updated_at": "2018-02-24T19:54:03Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "> We would need to update this all over the place\r\n\r\nI think for the purpose of restoring correctness in master, we can just do it case by case. We reviewed the whole bootstrap script and it seems to be the only place that required TSL12 currently.",
      "created_at": "2018-02-24T20:00:24Z",
      "updated_at": "2018-02-24T20:01:42Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "Yes but we have a bunch of helper function etc that rely on iwr calls to github. So as a bootstrap operation, it makes complete sense to just enable TLS 1.2 for the session. my method doesn't break any of the current settings, it just makes 1.2 enabled as a possibility.",
      "created_at": "2018-02-24T20:05:53Z",
      "updated_at": "2018-02-24T20:05:53Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I am afraid to change this setting at all because it has unpredictable changes in the future on system level. The best thing would be to use a parameter `-Protocol` out of pwsh, but if we want it to work on Windows PowerShell version, it's best to make a fix only for broken line.",
      "created_at": "2018-02-24T20:09:46Z",
      "updated_at": "2018-02-24T20:10:11Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "> unpredictable changes in the future on system level.\r\n\r\nI think it's scoped to the current session only.\r\n\r\nI'm with Ilya on the desire to have idempotent scripts, but since we already have more severe side effects (installing software, changing PATH) I'm ok with leaving it as is - don't see real case scenarios where people may hit problems because of adding TLS12 support flag.",
      "created_at": "2018-02-24T20:13:57Z",
      "updated_at": "2018-02-24T20:13:57Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov @markekraus just wanted to thank you guys for engaging so quickly and point out the problems. Sorry again for the rushing the changes thru the PR -- we got a little bit too excited and that was one of the small changes that I was comfortable to merge without waiting for others review. We will avoid rushing in the next 2 days. Thank you!",
      "created_at": "2018-02-24T20:17:23Z",
      "updated_at": "2018-02-24T20:17:23Z"
    },
    {
      "author": "TylerLeonhardt",
      "author_association": "MEMBER",
      "body": "@markekraus would you mind explaining this change a little more? I'm curious.",
      "created_at": "2018-02-24T20:26:28Z",
      "updated_at": "2018-02-24T20:26:28Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@tylerl0706 Settings in `System.Net.ServicePointManager` affect several APIs in .NET at the appdomain level. When you set `ServicePointManager.SecurityProtocol` to `SslProtocols.Tls12` that means that those APIs will ONLY work with TLS 1.2. In PowerShell, the largest affect is on `Invoke-WebRequest` and `Invok-RestMethod`. With the original change, if I ran `Start-PSBootStrap` in my PowerShell session, I would break my ability access sites that still operate on TLS 1.0. I wouldn't have a clue as to why they stopped working. My change takes the existing `ServicePointManager.SecurityProtocol` and ensures that `SslProtocols.Tls12`  is added to it. This effectively switches on TLS 1.2 without disabling any of the current Settings. \r\n\r\n\r\nFor example, in my profile I have this:\r\n\r\n\r\n```powershell\r\n[System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor [System.Security.Authentication.SslProtocols]::Tls12 -bor [System.Security.Authentication.SslProtocols]::Tls11\r\n```\r\n\r\nThis turns on TLS 1.1 and TLS 1.2 as I work with several APIs that are TLS 1.1 or 1.2 only.\r\n\r\nRunning this\r\n\r\n```powershell\r\n[Net.ServicePointManager]::SecurityProtocol = [Net.ServicePointManager]::SecurityProtocol -bor [System.Security.Authentication.SslProtocols]::Tls12\r\n```\r\n\r\nWould have no affect on my current settings. but running\r\n\r\n```powershell\r\n[Net.ServicePointManager]::SecurityProtocol = [System.Security.Authentication.SslProtocols]::Tls12\r\n```\r\n\r\nWould break all of my TLS 1.1 APIs for the current PowerShell Session.\r\n\r\nDoes that answer your question?\r\n",
      "created_at": "2018-02-24T20:47:03Z",
      "updated_at": "2018-02-24T20:47:03Z"
    },
    {
      "author": "TylerLeonhardt",
      "author_association": "MEMBER",
      "body": "Yep! Thanks for the explanation. \ud83d\udc4d \r\n",
      "created_at": "2018-02-24T23:21:45Z",
      "updated_at": "2018-02-24T23:22:00Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@markekraus  I was reviewing the other fix after the fact and was going to ask for this.  Thanks.",
      "created_at": "2018-02-26T18:18:29Z",
      "updated_at": "2018-02-26T18:18:29Z"
    }
  ],
  "created_at": "2018-02-24T19:41:27Z",
  "number": 6236,
  "state": "closed",
  "title": "Use TLS 1.2 in Start-PSBootStrap Without Breaking HTTPS",
  "updated_at": "2018-02-26T18:18:29Z"
}