{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11197",
  "author": "BillzGitHub",
  "body": "Hi all,\r\n\r\nJust upgraded to PowerShell 7.0.0-preview. After the update, when running `pipenv shell`, I get the following response back:\r\n\r\n```\r\nLaunching subshell in virtual environment\u2026\r\nCould not execute because the specified command or file was not found.\r\nPossible reasons for this include:\r\n  * You misspelled a built-in dotnet command.\r\n  * You intended to execute a .NET Core program, but dotnet-C:\\Users\\Bill does not exist.\r\n  * You intended to run a global tool, but a dotnet-prefixed executable with this name could not be found on the PATH.\r\n```\r\n\r\nI ran this command 10 minutes before, in the previous preview, and it worked just fine.\r\n\r\nI've ran `pipenv check` and am getting a proper response. I've also checked this in regular PowerShell and the command runs just fine.\r\n\r\nI'll be using regular PowerShell for the time being, just wanted to give a heads up.\r\n\r\nThanks,\r\nBill",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Please add $PSVersionTable and repo steps.",
      "created_at": "2019-11-26T09:24:02Z",
      "updated_at": "2019-11-26T09:24:02Z"
    },
    {
      "author": "BillzGitHub",
      "author_association": "NONE",
      "body": "$PSVersionTable:\r\n```\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-preview.6\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-preview.6\r\nOS                             Microsoft Windows 10.0.18363\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\nTo repro,\r\n\r\n```\r\n\u2192 C:\\git\u203a mkdir ps7ReproTest\r\n\r\n\r\n    Directory: C:\\git\r\n\r\nMode                 LastWriteTime         Length Name\r\n----                 -------------         ------ ----\r\nd----          11/26/2019 10:43 AM                ps7ReproTest\r\n\r\n\u2192 C:\\git\u203a cd .\\ps7ReproTest\\\r\n\u2192 C:\\git\\ps7ReproTest\u203a pipenv --python 3.7\r\nCreating a virtualenv for this project\u2026\r\nPipfile: C:\\git\\Pipfile\r\nUsing C:/Users/Bill LaLonde/AppData/Local/Programs/Python/Python37/python.exe (3.7.5) to create virtualenv\u2026\r\n[=   ] Creating virtual environment...Already using interpreter C:\\Users\\Bill LaLonde\\AppData\\Local\\Programs\\Python\\Python37\\python.exe\r\nUsing base prefix 'C:\\\\Users\\\\Bill LaLonde\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python37'\r\nNew python executable in C:\\Users\\Bill LaLonde\\.virtualenvs\\git-cJou6T9E\\Scripts\\python.exe\r\nInstalling setuptools, pip, wheel...\r\ndone.\r\nRunning virtualenv with interpreter C:/Users/Bill LaLonde/AppData/Local/Programs/Python/Python37/python.exe\r\n\r\nSuccessfully created virtual environment!\r\nVirtualenv location: C:\\Users\\Bill LaLonde\\.virtualenvs\\git-cJou6T9E\r\n\u2192 C:\\git\\ps7ReproTest\u203a pipenv shell\r\nLaunching subshell in virtual environment\u2026\r\nCould not execute because the specified command or file was not found.\r\nPossible reasons for this include:\r\n  * You misspelled a built-in dotnet command.\r\n  * You intended to execute a .NET Core program, but dotnet-C:\\Users\\Bill does not exist.\r\n  * You intended to run a global tool, but a dotnet-prefixed executable with this name could not be found on the PATH.\r\n\u2192 C:\\git\\ps7ReproTest\u203a\r\n```\r\n-------------------------------------------------------------------------------------------------\r\nRunning through the same steps in $PSVersionTable\r\n```\r\nName                           Value\r\n----                           -----\r\nPSVersion                      5.1.18362.145\r\nPSEdition                      Desktop\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nBuildVersion                   10.0.18362.145\r\nCLRVersion                     4.0.30319.42000\r\nWSManStackVersion              3.0\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\n```\r\n\r\nthe command works fine, as shown below:\r\n```\r\nPS C:\\git> mkdir ps7repro\r\n\r\n    Directory: C:\\git\r\n\r\n\r\nMode                LastWriteTime         Length Name\r\n----                -------------         ------ ----\r\nd-----       11/26/2019  10:35 AM                ps7repro\r\n\r\n\r\nPS C:\\git> cd .\\ps7repro\\                                                                                               PS C:\\git\\ps7repro> pipenv --python 3.7                                                                                 Creating a virtualenv for this project\u2026\r\nPipfile: C:\\git\\ps7repro\\Pipfile\r\nUsing C:/Users/Bill LaLonde/AppData/Local/Programs/Python/Python37/python.exe (3.7.5) to create virtualenv\u2026\r\n[    ] Creating virtual environment...Already using interpreter C:\\Users\\Bill LaLonde\\AppData\\Local\\Programs\\Python\\Python37\\python.exe\r\nUsing base prefix 'C:\\\\Users\\\\Bill LaLonde\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python37'\r\nNew python executable in C:\\Users\\Bill LaLonde\\.virtualenvs\\ps7repro-ZK4BJ3Xh\\Scripts\\python.exe\r\nInstalling setuptools, pip, wheel...\r\ndone.\r\nRunning virtualenv with interpreter C:/Users/Bill LaLonde/AppData/Local/Programs/Python/Python37/python.exe\r\n\r\nSuccessfully created virtual environment!\r\nVirtualenv location: C:\\Users\\Bill LaLonde\\.virtualenvs\\ps7repro-ZK4BJ3Xh\r\nCreating a Pipfile for this project\u2026\r\nPS C:\\git\\ps7repro> pipenv shell\r\nLaunching subshell in virtual environment\u2026\r\nWindows PowerShell\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nTry the new cross-platform PowerShell https://aka.ms/pscore6\r\n```",
      "created_at": "2019-11-26T18:48:26Z",
      "updated_at": "2019-11-26T18:48:48Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@BillzGitHub Thanks! Please clarify what is initial shell (cmd.exe, pwsh)?",
      "created_at": "2019-11-27T03:43:34Z",
      "updated_at": "2019-11-27T03:43:34Z"
    },
    {
      "author": "BillzGitHub",
      "author_association": "NONE",
      "body": "I may be interpreting this wrong but I believe you're asking for the initial shell I was running, before the upgrade, when this worked.\r\n\r\nThat was PowerShell Preview as well though I'm not certain if it was `v7.0.0-preview.5` OR `v7.0.0-preview.4`",
      "created_at": "2019-11-27T04:52:44Z",
      "updated_at": "2019-11-27T04:52:55Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Sorry, I ask about ` C:\\git\u203a mkdir ps7ReproTest` - is it run in cmd.exe?",
      "created_at": "2019-11-27T06:55:50Z",
      "updated_at": "2019-11-27T06:55:50Z"
    },
    {
      "author": "BillzGitHub",
      "author_association": "NONE",
      "body": "Oh, that was run in pwsh",
      "created_at": "2019-11-27T17:36:02Z",
      "updated_at": "2019-11-27T17:36:02Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@BillzGitHub Thanks! Please put all in the issue description (repo steps and $PSVersionTable). It will help readers to understand the issue.\r\n\r\nI don't know how pipenv works but I guess PowerShell is sensitive to env variables and this could be cause the issue.",
      "created_at": "2019-11-28T05:13:47Z",
      "updated_at": "2019-11-28T05:13:47Z"
    },
    {
      "author": "BillzGitHub",
      "author_association": "NONE",
      "body": "Hi iSazonov,\r\n\r\nI believe I've already added all of the information you requested above. The only possible piece left would be to explain what Pipenv is and how it functions. So here goes, (from https://github.com/pypa/pipenv)\r\n```\r\nPipenv is a tool that aims to bring the best of all packaging worlds (bundler, composer, npm, cargo, yarn, etc.) to the Python world. Windows is a first-class citizen, in our world.\r\n\r\nIt automatically creates and manages a virtualenv for your projects, as well as adds/removes packages from your Pipfile as you install/uninstall packages. It also generates the ever-important Pipfile.lock, which is used to produce deterministic builds.\r\n```\r\n\r\nThis is a particular important tool for times when you are building or managing applications that use varying versions of packages to run. For example lets say you have an app that runs Python 2.7 and NumPy 1.3. Now lets assume you also manage an app that uses Python 3.7 and Pandas 0.25 and NumPy 1.7\r\n\r\nWithout virtual environments you would need to install all of these to your local machine. With pipenv you can specify what requirements are need for a specific application and they are only contained within that environment.\r\n\r\nLet me know if there is additional information I can provide.\r\n\r\nThanks,\r\nBill\n\n<blockquote><img src=\"https://avatars2.githubusercontent.com/u/647025?s=400&v=4\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicon.ico\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/pypa/pipenv\">pypa/pipenv</a></strong></div><div> Python Development Workflow for Humans. Contribute to pypa/pipenv development by creating an account on GitHub.</div></blockquote>",
      "created_at": "2019-12-03T23:29:52Z",
      "updated_at": "2019-12-03T23:29:54Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@BillzGitHub Thanks! I suggest you to download latest daily preview build and re-check. \r\nAlso I'd compare PSModulePath and PATH env variables before and after Pipenv start, and with previous pwsh version.",
      "created_at": "2019-12-04T06:16:30Z",
      "updated_at": "2019-12-04T06:17:03Z"
    }
  ],
  "created_at": "2019-11-26T05:01:43Z",
  "labels": [
    "WG-Engine",
    "Issue-Discussion"
  ],
  "number": 11197,
  "state": "open",
  "title": "`pipenv shell` command outputs: Could not execute because the specified command or file was not found",
  "updated_at": "2019-12-04T06:17:03Z"
}