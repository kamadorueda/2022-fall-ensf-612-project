{
  "_url": "https://github.com/PowerShell/PowerShell/issues/2597",
  "author": "mirichmo",
  "body": "The packages should contain Windows, Linux, and macOS binaries.\r\n\r\nWe need to use the PowerShellTeam profile to publish them and develop a process for regular updates.",
  "closed_at": "2017-03-20T17:36:22Z",
  "comments": [
    {
      "author": "atanasa",
      "author_association": "NONE",
      "body": "Can you also publish a package that could act as a \"platform\" dependency, that is, when publishing an app that consumes that package, dotnet cli should not output any dependencies that are already preinstalled by PowerShell (the platform). Essentially a package that defines the PowerShell platform similar to the Microsoft.NETCore.App that defines the .Net Core platform for Console Apps.\n\n**Reasons**: \nIs there a way to build a module with dotnet cli that produce all the required module output? Currently a portable library project does not output any packaged dependencies. What I've done is to use a repurposed console app project because dotnet cli would then collect all the required dependencies on publish. The issue there is that even if I use the platform dependency for the .Net Core it would output the PowerShell reference assemblies (e.g. System.Management.Automation). We've worked around this by manually creating a PowerShell \"platform\" package, but there is the inconvenience of updating this with every release of PowerShell.\n\nIf there is a better approach than to use a platform package, let me know.\n\nHere is a sample fragment from the project.json for the module project.\n\n``` json\n  \"frameworks\": {\n    \"netcoreapp1.0\": {\n      \"dependencies\": {\n        \"PowerShell.Platform\": {\n          \"version\": \"1.0.0-alpha9\",\n          \"type\": \"platform\"\n        }\n      }\n    }\n  },\n```\n",
      "created_at": "2016-11-08T14:27:28Z",
      "updated_at": "2016-11-08T14:27:28Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "@atanasa sounds like you are describing https://github.com/PowerShell/PowerShell/tree/master/src/Microsoft.PowerShell.SDK\n\nWe already publish this package to MyGet feed.\n",
      "created_at": "2016-11-16T22:47:32Z",
      "updated_at": "2016-11-16T22:47:32Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Dupe of https://github.com/PowerShell/PowerShell/issues/1152",
      "created_at": "2017-03-20T17:36:22Z",
      "updated_at": "2017-03-20T17:36:22Z"
    }
  ],
  "created_at": "2016-11-03T20:20:27Z",
  "labels": [
    "Resolution-Duplicate",
    "Area-Maintainers-Build"
  ],
  "number": 2597,
  "state": "closed",
  "title": "Publish PowerShell Core Assemblies to NuGet",
  "updated_at": "2017-03-20T17:36:22Z"
}