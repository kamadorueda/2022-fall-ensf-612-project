{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9526",
  "author": "adityapatwardhan",
  "body": "This repros only on container for ubuntu. It works as expected on VMs and containers of other Linux distros\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\nPS /> docker run -it --rm mcr.microsoft.com/powershell:latest\r\nPowerShell 6.2.0\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\n\r\nhttps://aka.ms/pscore6-docs\r\nType 'help' to get help.\r\n\r\nPS /> $result = Write-Information \"Test Message\" *>&1\r\nPS /> $result.Computer\r\n\r\nPS /> [Environment]::MachineName\r\n35dc3ee9a157\r\nPS /> cat /etc/os-release\r\nNAME=\"Ubuntu\"\r\nVERSION=\"18.04.2 LTS (Bionic Beaver)\"\r\nID=ubuntu\r\nID_LIKE=debian\r\nPRETTY_NAME=\"Ubuntu 18.04.2 LTS\"\r\nVERSION_ID=\"18.04\"\r\nHOME_URL=\"https://www.ubuntu.com/\"\r\nSUPPORT_URL=\"https://help.ubuntu.com/\"\r\nBUG_REPORT_URL=\"https://bugs.launchpad.net/ubuntu/\"\r\nPRIVACY_POLICY_URL=\"https://www.ubuntu.com/legal/terms-and-policies/privacy-policy\"\r\nVERSION_CODENAME=bionic\r\nUBUNTU_CODENAME=bionic\r\nPS />\r\n```\r\n\r\n# Expected behavior\r\n\r\n```none\r\nPS /> $result.Computer\r\n35dc3ee9a157\r\n```\r\n\r\n# Actual behavior\r\n\r\n```none\r\n$result.Computer is an empty string\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nPS /> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.2.0\r\nPSEdition                      Core\r\nGitCommitId                    6.2.0\r\nOS                             Linux 4.9.125-linuxkit #1 SMP Fri Sep 7 08:20:28 UTC 2018\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n```\r\n",
  "closed_at": "2019-05-10T04:26:45Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "We call `GetFullyQualifiedName()` from `libpsl-native` to get computer name. So a root of the issue is there.\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/3bfca6d0fa9c935d78e9f7e9640b3994e5ca5c65/src/System.Management.Automation/engine/cmdlet.cs#L690\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/3bfca6d0fa9c935d78e9f7e9640b3994e5ca5c65/src/System.Management.Automation/engine/InformationRecord.cs#L124\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/3bfca6d0fa9c935d78e9f7e9640b3994e5ca5c65/src/System.Management.Automation/utils/PsUtils.cs#L216\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/3bfca6d0fa9c935d78e9f7e9640b3994e5ca5c65/src/System.Management.Automation/CoreCLR/CorePsPlatform.cs#L528\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/3bfca6d0fa9c935d78e9f7e9640b3994e5ca5c65/src/System.Management.Automation/CoreCLR/CorePsPlatform.cs#L693-L695",
      "created_at": "2019-05-03T18:19:29Z",
      "updated_at": "2019-05-03T18:20:04Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Perhaps if GetFullyQualifiedName() is empty or null, we can fallback to [Environment]::MachineName?",
      "created_at": "2019-05-03T19:09:31Z",
      "updated_at": "2019-05-03T19:09:31Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Or use ` [Environment]::MachineName` directly and remove pinvoke?",
      "created_at": "2019-05-03T19:18:24Z",
      "updated_at": "2019-05-03T19:18:33Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I see on Windows we use `System.Net.NetworkInformation.IPGlobalProperties.GetIPGlobalProperties` - the API is ported and we could test it and use for all platforms.",
      "created_at": "2019-05-03T19:26:19Z",
      "updated_at": "2019-05-03T19:26:19Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "We should probably see if we can get rid of libpsl-native altogether as .NET Core keeps adding more APIs",
      "created_at": "2019-05-03T19:37:25Z",
      "updated_at": "2019-05-03T19:37:25Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I'd expect the issue on container for ubuntu is not PowerShell issue and should be fixed on container for ubuntu.\r\n\r\nI reviewed API  that we use on Unix-es - we use the same [GetHostName()](https://github.com/PowerShell/PowerShell-Native/blob/5e914ec784b3c7e4b1b6f176e4543aec5d1cd6dd/src/libpsl-native/src/getcomputername.cpp#L23) ([and CoreFX](https://github.com/dotnet/corefx/blob/09e2417cd0505df4558535651efb1bbcffdf0c59/src/Common/src/CoreLib/Interop/Unix/System.Native/Interop.GetHostName.cs#L15)) to get host name but [getaddrinfo()](https://github.com/PowerShell/PowerShell-Native/blob/5e914ec784b3c7e4b1b6f176e4543aec5d1cd6dd/src/libpsl-native/src/getfullyqualifiedname.cpp#L41) to get domain name - CoreFX uses [GetDomainName()](https://github.com/dotnet/corefx/blob/a6f76f4f620cbe74821c6445af3f13e048361658/src/Common/src/Interop/Unix/System.Native/Interop.GetDomainName.cs#L15)\r\n\r\nI think we should follow CoreFX and remove P/Invokes in our code.",
      "created_at": "2019-05-04T04:00:38Z",
      "updated_at": "2019-05-04T04:00:38Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@adityapatwardhan Can we close the issue?",
      "created_at": "2019-05-09T18:55:01Z",
      "updated_at": "2019-05-09T18:55:01Z"
    }
  ],
  "created_at": "2019-05-02T23:43:47Z",
  "number": 9526,
  "state": "closed",
  "title": "Computer field in InformationRecord is incorrect on Ubuntu 18.04 container",
  "updated_at": "2019-05-10T04:26:45Z"
}