{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11098",
  "author": "Mettcon",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n\r\n-->\r\nNothing get's loaded and it throws no error. No matter if it's valid input or not.\r\nWith `Add-Type -Assembly 'Name.For.Assembly, Version=1.0.0.0, Culture=neutral, PublicKeyToken=123'` could be loaded.\r\nRequires for Administrator and Modules work like expected.\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\n@\"\r\n#Requires -RunAsAdministrator\r\n#Requires -Assembly 'Name.For.Assembly, Version=1.0.0.0, Culture=neutral, PublicKeyToken=123'\r\nWrite-Host 'bla'\r\n\"@ > RequiresTest.ps1\r\n```\r\n\r\n# Expected behavior\r\nExpected it to work like `Requires -Module ModuleName`\r\n\r\n# Actual behavior\r\nLike mentioned above, nothing happens. \r\nThe following showed no difference before and after execution\r\n```powershell\r\n[System.AppDomain]::CurrentDomain.GetAssemblies() | select Fullname\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-preview.5\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-preview.5\r\nOS                             Microsoft Windows 10.0.14393\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n```powershell\r\nName                           Value\r\n----                           -----\r\nPSVersion                      5.1.14393.206\r\nPSEdition                      Desktop\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nBuildVersion                   10.0.14393.206\r\nCLRVersion                     4.0.30319.42000\r\nWSManStackVersion              3.0\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\n```",
  "closed_at": "2019-11-19T13:00:17Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@Mettcon Please look #5022 and referenced there RFC.",
      "created_at": "2019-11-18T10:09:59Z",
      "updated_at": "2019-11-18T10:09:59Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov does the `using assembly` alternative permit a fully qualified assembly name?",
      "created_at": "2019-11-18T11:29:07Z",
      "updated_at": "2019-11-18T11:29:07Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Yes, #5022 and https://github.com/PowerShell/PowerShell-RFC/pull/122 reject `#Requires -Assembly`\r\nTracking issues #9929 #6653",
      "created_at": "2019-11-18T12:01:48Z",
      "updated_at": "2019-11-18T12:01:48Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as duplicate and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2019-11-19T13:00:16Z",
      "updated_at": "2019-11-19T13:00:16Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov It is unclear from these issues whether or not `#Requires -Assembly` should be supported. [Documentation](https://docs.microsoft.com/powershell/module/microsoft.powershell.core/about/about_requires) suggests there is support, but this issue states the statement has no effect.\r\n\r\nIf `#Requires -Assembly` is not supported, than we should *throw an error instead of failing silently*.",
      "created_at": "2020-05-05T16:12:58Z",
      "updated_at": "2020-05-05T16:12:58Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@xtqqczze What is a behavior on Windows PowerShell 5?",
      "created_at": "2020-05-05T17:44:42Z",
      "updated_at": "2020-05-05T17:44:42Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov According to https://github.com/MicrosoftDocs/PowerShell-Docs/issues/4518, the `#Requires -Assembly` feature was present in Windows PowerShell 5.1 (and likely earlier).\r\n\r\nHowever, my tests in Windows PowerShell 5.1 show the behaviour is the same, i.e. nothing is loaded and no error is thrown.",
      "created_at": "2020-05-06T00:47:25Z",
      "updated_at": "2020-05-06T00:47:25Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Perhaps @rjmholt could comment - should we remove the parameter?",
      "created_at": "2020-05-06T03:27:04Z",
      "updated_at": "2020-05-06T03:27:04Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "I suspect it remains for compatibility with PS 5.1 -- my guess is that's been discussed elsewhere, but can't remember.\r\n\r\nBasically:\r\n\r\n- `using assembly` is preferred to `#require -Assembly` because it should try to load something rather than just fail if it's not loaded already. `#require` has a tradition of being an assertion rather than performing an action, and also presents as a comment pragma and isn't stored in an AST, meaning it's not as good a fit.\r\n- But because acceptance for the syntax (even if it does nothing) was added in PS 5.1, removing it would cause parse errors for scripts that would otherwise \"just work\" in migration from 5.1 to 7. So given the choice between a wart and a hard failure, the wart was chosen.\r\n\r\nI think the question remains open for whether it should be removed for PS vNext",
      "created_at": "2020-05-06T05:34:55Z",
      "updated_at": "2020-05-06T05:34:55Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> my guess is that's been discussed elsewhere, but can't remember.\r\n\r\nIt is your RFC :-)\r\n\r\nI think we should update docs with \"that currently it is not work on 5 and 7 versions and will be probably removed in future.\"",
      "created_at": "2020-05-06T06:06:26Z",
      "updated_at": "2020-05-06T06:06:26Z"
    }
  ],
  "created_at": "2019-11-18T07:32:23Z",
  "labels": [
    "Resolution-Duplicate",
    "Issue-Question"
  ],
  "number": 11098,
  "state": "closed",
  "title": "'#Requires -Assembly' does not have any effect",
  "updated_at": "2020-05-06T06:06:26Z"
}