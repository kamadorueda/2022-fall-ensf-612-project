{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11112",
  "author": "reflectedobject",
  "body": "```powershell\r\n $PSVersionTable\r\n```\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-preview.5\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-preview.5\r\nOS                             Microsoft Windows 10.0.18362\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\nAdd-Type -TypeDefinition @\"\r\nusing System;\r\nusing System.Data.SqlClient;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace Helper.Sql\r\n{\r\n    public class SqlCommandExt<T>\r\n    {\r\n        public SqlCommandExt() {;}\r\n        public SqlParameter[] AddArrayParameters(SqlCommand cmd, IEnumerable<T> values, string paramNameRoot, int start = 1, string separator = \", \")\r\n        {\r\n            var parameters = new List<SqlParameter>();\r\n            var parameterNames = new List<string>();\r\n            var paramNbr = start;\r\n            foreach (var value in values)\r\n            {\r\n                var paramName = string.Format(\"@{0}{1}\", paramNameRoot, paramNbr++);\r\n                parameterNames.Add(paramName);\r\n                parameters.Add(cmd.Parameters.AddWithValue(paramName, value));\r\n            }\r\n\r\n            cmd.CommandText = cmd.CommandText.Replace(\"@@\" + paramNameRoot, string.Join(separator, parameterNames));\r\n\r\n            return parameters.ToArray();\r\n        }\r\n    }\r\n}\r\n\"@ -ReferencedAssemblies System.Data\r\n```\r\n\r\n# Expected behavior\r\n\r\n```none\r\nType definition succeeds. As it does with all previous versions.\r\n```\r\n\r\n# Actual behavior\r\n\r\n```none\r\nErrors:\r\nAdd-Type: (10,50): error CS1069: The type name 'SqlCommand' could not be found in the namespace 'System.Data.SqlClient'. This type has been forwarded to assembly 'System.Data.SqlClient, Version=4.6.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' Consider adding a reference to that assembly.\r\n        public SqlParameter[] AddArrayParameters(SqlCommand cmd, IEnumerable<T> values, string paramNameRoot, int start = 1, string separator = \", \")\r\n                                                 ^\r\n\r\nAdd-Type: (10,16): error CS1069: The type name 'SqlParameter' could not be found in the namespace 'System.Data.SqlClient'. This type has been forwarded to assembly 'System.Data.SqlClient, Version=4.6.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' Consider adding a reference to that assembly.\r\n        public SqlParameter[] AddArrayParameters(SqlCommand cmd, IEnumerable<T> values, string paramNameRoot, int start = 1, string separator = \", \")\r\n               ^\r\n\r\nAdd-Type: (12,39): error CS1069: The type name 'SqlParameter' could not be found in the namespace 'System.Data.SqlClient'. This type has been forwarded to assembly 'System.Data.SqlClient, Version=4.6.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' Consider adding a reference to that assembly.\r\n            var parameters = new List<SqlParameter>();\r\n                                      ^\r\n\r\nAdd-Type: Cannot add type. Compilation errors occurred.\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\n\r\n```\r\n",
  "closed_at": "2020-02-01T12:00:08Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@reflectedobject `System.Data` isn't a pre-loaded assembly. You'll need to add `-ReferencedAssemblies 'System.Data` to the `Add-Type` command call to load it in and use the types it contains, which include the `System.Data.SqlClient` namespace. \ud83d\ude42 ",
      "created_at": "2019-11-19T02:20:42Z",
      "updated_at": "2019-11-19T02:20:42Z"
    },
    {
      "author": "reflectedobject",
      "author_association": "NONE",
      "body": "That is exactly what I am doing - please check the last line of my posted code.\r\n```none\r\n\"@ -ReferencedAssemblies System.Data'\r\n```\r\n\r\nThe code works fine with Powershell for Windows but fails with the Powershell 7 preview (5).\r\n\r\n> @reflectedobject System.Data isn't a pre-loaded assembly. You'll need to add -ReferencedAssemblies 'System.Data to the Add-Type command call to load it in and use the types it contains, which include the System.Data.SqlClient namespace. \ud83d\ude42\r\n\r\n",
      "created_at": "2019-11-19T13:47:13Z",
      "updated_at": "2019-11-19T13:48:11Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "You're right, sorry, I didn't see that one.\r\n\r\nI suspect the issue may come either from where the System.Data assemblies are installed (possibly in a location Windows PowerShell reaches by default, but must be targeted specifically for PS Core), or how they're built. If the System.Data assemblies depend on classes only available in .NET Framework, they may not be able to be loaded under .NET Core.\r\n\r\n@potatoqualitee have you folx looked at using the `System.Data` assembly in PowerShell Core/7 thus far? Perhaps you might be more familiar working with this side of things than some of the other folx in the repo here. \ud83d\ude42 ",
      "created_at": "2019-11-19T13:57:43Z",
      "updated_at": "2019-11-19T13:57:43Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "`SqlCommand` is technically in the assembly `System.Data.SqlClient` now.  That said, the `System.Data` assembly does have a `TypeForwardedTo` pointing to the correct assembly, so maybe that should be accounted for in some way by `Add-Type`.",
      "created_at": "2019-11-19T16:10:38Z",
      "updated_at": "2019-11-19T16:10:38Z"
    },
    {
      "author": "reflectedobject",
      "author_association": "NONE",
      "body": "> SqlCommand is technically in the assembly System.Data.SqlClient now.  That said, the System.Data assembly does have a TypeForwardedTo pointing to the correct assembly, so maybe that should be accounted for in some way by Add-Type.\r\n\r\nAny pointer on how that can be accomplished? Never had to deal with `TypeForwardTo` before.",
      "created_at": "2019-11-19T22:58:30Z",
      "updated_at": "2019-11-19T22:58:30Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Short-term you should be able to just reference `Systom.Data.SqlClient` instead in the -ReferencedAssemblies\r\n\r\nLong term we probably need to try to determine how to handle that in `Add-Type` itself so that forwarded types are automatically picked up.",
      "created_at": "2019-11-19T23:14:24Z",
      "updated_at": "2019-11-19T23:14:36Z"
    },
    {
      "author": "reflectedobject",
      "author_association": "NONE",
      "body": "Thanks for all the feedback. I have tried a few referenced assembly variants and got the following:\r\n\r\n```powershell\r\nAdd-Type -TypeDefinition @\" \u2026 omitted as same as at beginning of post ...\"@ -ReferencedAssemblies System.Data.SqlClient\r\n```\r\nGive another set of hard to decrypt messages (for me at least).\r\nIt appears to be some ambiguity/conflict for the `System.Runtime` Assembly. \r\n\r\nIn the interim I have compiled the code into a .NET Core library and load the DLL rather than the script included code. \r\n\r\nI'd be grateful for any pointers to get it to work like it did. \r\n\r\n```None\r\nAdd-Type: error CS1702: Assuming assembly reference 'System.Runtime, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' used by 'System.Data.SqlClient' matches identity 'System.Runtime, Version=4.2.2.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' of 'System.Runtime', you may need to supply runtime policy\r\nAdd-Type: error CS1702: Assuming assembly reference 'System.Runtime, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' used by 'System.Data.SqlClient' matches identity 'System.Runtime, Version=4.2.2.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' of 'System.Runtime', you may need to supply runtime policy\r\nAdd-Type: (27,34): error CS0246: The type or namespace name 'List<>' could not be found (are you missing a using directive or an assembly reference?)\r\n            var parameters = new List<SqlParameter>();\r\n                                 ^\r\n\r\nAdd-Type: error CS1702: Assuming assembly reference 'System.Runtime, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' used by 'System.Data.SqlClient' matches identity 'System.Runtime, Version=4.2.2.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' of 'System.Runtime', you may need to supply runtime policy\r\nAdd-Type: (28,38): error CS0246: The type or namespace name 'List<>' could not be found (are you missing a using directive or an assembly reference?)\r\n            var parameterNames = new List<string>();\r\n                                     ^\r\n\r\nAdd-Type: (34,47): error CS0012: The type 'DbParameterCollection' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Data.Common, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.\r\n                parameters.Add(cmd.Parameters.AddWithValue(paramName, value));\r\n                                              ^\r\n\r\nAdd-Type: (34,32): error CS1702: Assuming assembly reference 'System.Runtime, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' used by 'System.Data.SqlClient' matches identity 'System.Runtime, Version=4.2.2.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' of 'System.Runtime', you may need to supply runtime policy\r\n                parameters.Add(cmd.Parameters.AddWithValue(paramName, value));\r\n                               ^\r\n\r\nAdd-Type: error CS1702: Assuming assembly reference 'System.Runtime, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' used by 'System.Data.SqlClient' matches identity 'System.Runtime, Version=4.2.2.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' of 'System.Runtime', you may need to supply runtime policy       Add-Type: error CS1702: Assuming assembly reference 'System.Runtime, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' used by 'System.Data.SqlClient' matches identity 'System.Runtime, Version=4.2.2.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' of 'System.Runtime', you may need to supply runtime policy       Add-Type: Cannot add type. Compilation errors occurred.\r\n```",
      "created_at": "2019-11-20T11:53:03Z",
      "updated_at": "2019-11-20T11:53:03Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Interesting. Not sure about the version # mismatches there, but it looks like you need `-ReferencedAssemblies System.Data.Common, System.Data.SqlClient` and then also just check your `using` statements; `List<>` is in the `Systems.Collection.Generic` namespace, so make sure you have that in your using statements. \ud83d\ude42 ",
      "created_at": "2019-11-20T13:18:12Z",
      "updated_at": "2019-11-20T13:18:21Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "Yeah, looks like `System.Data.SqlClient` references `System.Runtime, Version=4.2.2.0` when PS itself references `4.2.1.0`.  You can get it to work by adding `System.Runtime` to the referenced assemblies and adding `-IgnoreWarnings` and `-WarningAction None`.\r\n\r\n`Add-Type` needs some work when it comes to references, especially around version conflicts.\r\n\r\nHere's a smaller repro that works:\r\n\r\n```powershell\r\nAdd-Type -WarningAction Ignore -IgnoreWarnings -ReferencedAssemblies System.Runtime, System.Data, System.Data.SqlClient -TypeDefinition '\r\n        using System;\r\n        using System.Data.SqlClient;\r\n        public static class Testing {\r\n            public static SqlCommand DoSomething() => throw new System.NotImplementedException();\r\n        }'\r\n```",
      "created_at": "2019-11-20T14:07:46Z",
      "updated_at": "2019-11-20T14:07:46Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2020-02-01T12:00:07Z",
      "updated_at": "2020-02-01T12:00:07Z"
    }
  ],
  "created_at": "2019-11-19T02:02:32Z",
  "labels": [
    "Issue-Question",
    "Resolution-Answered"
  ],
  "number": 11112,
  "state": "closed",
  "title": "Type definition fails in Powershell 7.0.0-preview.5",
  "updated_at": "2020-02-01T12:00:08Z"
}