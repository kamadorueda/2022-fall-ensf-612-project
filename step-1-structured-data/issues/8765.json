{
  "_url": "https://github.com/PowerShell/PowerShell/issues/8765",
  "author": "SeeminglyScience",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n\r\n-->\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\n$stream = $null\r\n$peReader = $null\r\ntry {\r\n    $stream = (Get-Item ([ref].Assembly.Location)).OpenRead()\r\n    $peReader = [System.Reflection.PortableExecutable.PEReader]::new($stream)\r\n    $memoryReader = $peReader.GetMetadata().GetReader()\r\n\r\n    # yield\r\n    $memoryReader\r\n} finally {\r\n    if ($null -ne $peReader) {\r\n        $peReader.Dispose()\r\n    }\r\n\r\n    if ($null -ne $stream) {\r\n        $stream.Dispose()\r\n    }\r\n}\r\n```\r\n\r\n# Expected behavior\r\n\r\n```none\r\nLength         : 4239440\r\nOffset         : 0\r\nRemainingBytes : 4239440\r\nStartPointer   :\r\nCurrentPointer :\r\n```\r\n\r\n# Actual behavior\r\n\r\n```none\r\nformat-default : No coercion operator is defined between types 'System.Byte*' and 'System.Object'.\r\n+ CategoryInfo          : NotSpecified: (:) [format-default], InvalidOperationException\r\n+ FullyQualifiedErrorId : System.InvalidOperationException,Microsoft.PowerShell.Commands.FormatDefaultCommand\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.2.0-preview.3\r\nPSEdition                      Core\r\nGitCommitId                    6.2.0-preview.3\r\nOS                             Microsoft Windows 10.0.17134\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\n# Notes\r\n\r\n```raw\r\nPS> $Error[0].GetBaseException() | Format-List * -Force\r\n\r\nMessage        : No coercion operator is defined between types 'System.Byte*' and 'System.Object'.\r\nData           : {}\r\nInnerException :\r\nTargetSite     : System.Linq.Expressions.UnaryExpression\r\n                 GetUserDefinedCoercionOrThrow(System.Linq.Expressions.ExpressionType,\r\n                 System.Linq.Expressions.Expression, System.Type)\r\nStackTrace     :    at System.Linq.Expressions.Expression.GetUserDefinedCoercionOrThrow(ExpressionType coercionType,\r\n                 Expression expression, Type convertToType)\r\n                    at System.Management.Automation.Language.PSGetMemberBinder.WrapGetMemberInTry(Expression expr)\r\n                    at System.Management.Automation.Language.PSGetMemberBinder.FallbackGetMember(DynamicMetaObject\r\n                 target, DynamicMetaObject errorSuggestion)\r\n                    at System.Dynamic.DynamicMetaObjectBinder.Bind(Object[] args, ReadOnlyCollection`1 parameters,\r\n                 LabelTarget returnLabel)\r\n                    at System.Runtime.CompilerServices.CallSiteBinder.BindCore[T](CallSite`1 site, Object[] args)\r\n                    at System.Dynamic.UpdateDelegates.UpdateAndExecute1[T0,TRet](CallSite site, T0 arg0)\r\n                    at Microsoft.PowerShell.Commands.PSPropertyExpression.GetValue(PSObject target, Boolean\r\n                 eatExceptions)\r\n                    at Microsoft.PowerShell.Commands.PSPropertyExpression.GetValues(PSObject target, Boolean expand,\r\n                 Boolean eatExceptions)\r\n                    at Microsoft.PowerShell.Commands.Internal.Format.PSObjectHelper.GetExpressionDisplayValue(PSObject\r\n                 so, Int32 enumerationLimit, PSPropertyExpression ex, FieldFormattingDirective directive,\r\n                 StringFormatError formatErrorObject, PSPropertyExpressionFactory expressionFactory,\r\n                 PSPropertyExpressionResult& result)\r\n                    at Microsoft.PowerShell.Commands.Internal.Format.ViewGenerator.GetExpressionDisplayValue(PSObject\r\n                 so, Int32 enumerationLimit, PSPropertyExpression ex, FieldFormattingDirective directive,\r\n                 PSPropertyExpressionResult& expressionResult)\r\n                    at Microsoft.PowerShell.Commands.Internal.Format.ListViewGenerator.GenerateListViewEntryFromPropert\r\n                 ies(PSObject so, Int32 enumerationLimit)\r\n                    at Microsoft.PowerShell.Commands.Internal.Format.ListViewGenerator.GeneratePayload(PSObject so,\r\n                 Int32 enumerationLimit)\r\n                    at\r\n                 Microsoft.PowerShell.Commands.Internal.Format.InnerFormatShapeCommand.WritePayloadObject(PSObject so)\r\n                    at System.Management.Automation.CommandProcessor.ProcessRecord()\r\nHelpLink       :\r\nSource         : System.Linq.Expressions\r\nHResult        : -2146233079\r\n```\r\n\r\nThis does not reproduce on Windows PowerShell, instead the property is displayed as blank like expected.",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw Is the Issue related #7788 and/or #7808?",
      "created_at": "2019-01-28T17:37:03Z",
      "updated_at": "2019-01-28T17:37:03Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov They're pretty similar in nature, just different code paths.\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/f06ebb692aaa95a0c006d1a737c25dce2f415672/src/System.Management.Automation/engine/runtime/Binding/Binders.cs#L5243-L5248\r\n\r\nAt a glance, it looks like the above should be\r\n\r\n```csharp\r\nif (adapterData.member.DeclaringType.IsGenericTypeDefinition ||\r\n    adapterData.propertyType.IsByRefLike ||\r\n    adapterData.propertyType.IsPointer) \r\n{ \r\n    // This is kinda lame - we really should throw an error, but accessing property getter \r\n    // doesn't throw error in PowerShell since V2, even in strict mode. \r\n    expr = ExpressionCache.NullConstant; \r\n} \r\n```\r\n\r\nPossibly also `adapterData.propertyType.IsByRef`.",
      "created_at": "2019-02-01T13:15:59Z",
      "updated_at": "2019-02-01T13:19:30Z"
    }
  ],
  "created_at": "2019-01-28T13:01:25Z",
  "labels": [
    "Issue-Bug",
    "WG-Engine"
  ],
  "number": 8765,
  "state": "open",
  "title": "Formatter throws when object has a pointer property",
  "updated_at": "2019-02-16T18:40:29Z"
}