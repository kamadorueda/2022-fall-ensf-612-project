{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15054",
  "author": "mklement0",
  "body": "Note: Windows is _not_ affected.\r\n\r\n## Steps to reproduce\r\n\r\n```powershell\r\n# Fails on macOS and Linux - no statement-terminating error occurs.\r\n{ Start-Process nosuch } | Should -Throw\r\n```\r\n\r\nIf you run `Start-Process nosuch` directly, a system error message that cannot be captured prints directly to stderr:\r\n\r\n* Ubuntu:\r\n\r\n```\r\n\"gio: file:///.../nosuch: Error when getting information for file \u201c/.../nosuch\u201d: No such file or directory\"\r\n```\r\n\r\n* macOS:\r\n\r\n```\r\nThe file /.../nosuch does not exist.\r\n```\r\n\r\n## Expected behavior\r\n\r\nThe test should succeed.\r\n\r\n\r\n## Actual behavior\r\n\r\nThe test fails, because no statement-terminating error is triggered, even though no such file in the current directory / no such executable in the path exists.\r\n\r\n```none\r\nExpected an exception, to be thrown, but no exception was thrown.\r\n```\r\n\r\n## Environment data\r\n\r\n\r\n```none\r\nPowerShell Core v7.2.0-preview.4 on macOS 10.15.7\r\nPowerShell Core v7.2.0-preview.4 on Ubuntu 18.04.5 LTS\r\n```\r\n",
  "closed_at": "2021-03-19T16:00:04Z",
  "comments": [
    {
      "author": "237dmitry",
      "author_association": "NONE",
      "body": "```\r\n{ Start-Process nosuch } | Should -Throw\r\nShould: The term 'Should' is not recognized as a name of.....\r\n```\r\nIs this a some module?\r\n\r\n```\r\nStart-Process nosuch\r\nxdg-open: file 'nosuch' does not exist\r\n```",
      "created_at": "2021-03-17T17:27:21Z",
      "updated_at": "2021-03-17T17:27:21Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "The `Should` command comes with [Pester](https://github.com/pester/Pester), which is the predominant test framework for PowerShell.",
      "created_at": "2021-03-17T17:31:30Z",
      "updated_at": "2021-03-17T17:32:39Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "Seems like a reasonable ask to me, barring difficulty of implementation",
      "created_at": "2021-03-17T17:33:59Z",
      "updated_at": "2021-03-17T17:33:59Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks, @joeyaiello, it shouldn't be hard to implement, given that the underlying .NET API reports an exception:\r\n\r\n```powershell\r\nPS> [System.Diagnostics.Process]::Start([System.Diagnostics.ProcessStartInfo] @{ FileName = 'nosuch' }).WaitForExit()\r\nMethodInvocationException: Exception calling \"Start\" with \"1\" argument(s): \"No such file or directory\"\r\n```\r\n\r\n@237dmitry, you can install Pester with `Install-Module Pester`.\r\nProviding repro steps in the form of Pester tests (via `Should`) makes it easy for others to verify the problem and helps implementers verify when the problem is fixed.\r\n",
      "created_at": "2021-03-17T17:38:50Z",
      "updated_at": "2021-03-17T17:38:50Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "The problem is related to setting `UseShellExecute` to `true`:\r\n\r\n```powershell\r\nPS> [System.Diagnostics.Process]::Start([System.Diagnostics.ProcessStartInfo] @{ FileName = 'nosuch'; UseShellExecute = $true }).WaitForExit()\r\nThe file /Users/mklement/Desktop/pg/nosuch does not exist.\r\n```\r\n\r\n",
      "created_at": "2021-03-17T17:42:06Z",
      "updated_at": "2021-03-17T17:42:06Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "The way `Start-Process` works is it tries to find the target first.  If it's not found, and no arguments were provided, then it tries `UseShellExecute = true`.  At this point, it's all handled by the dotnet runtime.  Dotnet relies on `xdg-open` on Linux and `open` on macOS.  You can try this by running `open foo` on macOS and you'll see the stderr message.  It appears that dotnet runtime writes this directly to the console and thus you can't actually redirect.  Created https://github.com/dotnet/runtime/issues/49788",
      "created_at": "2021-03-17T23:33:20Z",
      "updated_at": "2021-03-17T23:33:20Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as external and has not had any activity for **1 day**. It has been be closed for housekeeping purposes.",
      "created_at": "2021-03-19T16:00:03Z",
      "updated_at": "2021-03-19T16:00:03Z"
    }
  ],
  "created_at": "2021-03-17T17:03:22Z",
  "number": 15054,
  "state": "closed",
  "title": "Start-Process on Unix: trying to launch / open a nonexistent file doesn't trigger an error",
  "updated_at": "2021-03-19T16:00:04Z"
}