{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11401",
  "author": "Actionn",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 and PowerShell 7+ issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n\r\n-->\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\nPS C:\\Users\\xxx\\Desktop> Get-Process -computer localhost\r\nGet-Process: A parameter cannot be found that matches parameter name 'computer'.\r\n```\r\n\r\n# Expected behavior\r\n\r\n```none\r\nComputer should be a parameter, you should be able to supply an array of objects to it and it will return processes from multiple hosts.\r\n```\r\n\r\n# Actual behavior\r\n\r\n```none\r\nerror returns: Get-Process: A parameter cannot be found that matches parameter name 'computer'.\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nPS C:\\Users\\xxx\\Desktop> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-rc.1\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-rc.1\r\nOS                             Microsoft Windows 10.0.18363\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2019-12-21T12:00:21Z",
  "comments": [
    {
      "author": "alexandair",
      "author_association": "CONTRIBUTOR",
      "body": "`-ComputerName` parameter is removed from cmdlets that are not directly related to PowerShell remoting. Solution for your problem is to use PowerShell remoting: `Invoke-Command -ComputerName $array_of_computer_names -ScriptBlock {Get-Process}`.",
      "created_at": "2019-12-19T09:43:55Z",
      "updated_at": "2019-12-19T09:43:55Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "In Windows PowerShell the cmdlet is based on WMI and utilizes WMI remoting. PowerShell Core doesn't use WMI and can not directly support remoting. As mentioned a workaround is `Invoke-Command -ComputerName`",
      "created_at": "2019-12-20T08:14:13Z",
      "updated_at": "2019-12-20T08:14:13Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2019-12-21T12:00:09Z",
      "updated_at": "2019-12-21T12:00:09Z"
    }
  ],
  "created_at": "2019-12-19T00:39:02Z",
  "number": 11401,
  "state": "closed",
  "title": "Powershell 7: -Computer switch missing from Get-Process",
  "updated_at": "2019-12-21T12:00:21Z"
}