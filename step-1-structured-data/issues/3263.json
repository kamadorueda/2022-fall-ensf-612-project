{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3263",
  "author": "mvadu",
  "body": " Is there a mapping to get the equivalent folders between platforms? Or what is the suggested method to reuse same script between Windows and Linux?\r\n\r\nI have a script which downloads few executables (Influxdb) to temp folder. The  executable then creates a folder under `~/.<folder>` in Linux and `%UserProfile%\\.<folder>` in Windows. I was hoping to reuse same Powershell script as part of my .Net Core application. However the scripts in Linux fails to get to `$env:UserProfile`.\r\n\r\nSteps to reproduce\r\n------------------\r\n test-path $env:USERPROFILE\r\n\r\nExpected behavior\r\n-----------------\r\nTrue\r\n\r\nActual behavior\r\n---------------\r\nWorks in Windows\r\n\r\nLinux: Ubuntu 16.04\r\n```powershell\r\nTest-Path : Cannot bind argument to parameter 'Path' because it is null.\r\nAt line:1 char:12\r\n+  test-path $env:USERPROFILE\r\n+            ~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : InvalidData: (:) [Test-Path], ParameterBindingVa\r\n   lidationException\r\n    + FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,M\r\n   icrosoft.PowerShell.Commands.TestPathCommand\r\n\r\n ```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.0-alpha\r\nPSEdition                      Core\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nBuildVersion                   3.0.0.0\r\nGitCommitId                    v6.0.0-alpha.15\r\nCLRVersion\r\nWSManStackVersion              3.0\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\n\r\n```\r\n",
  "closed_at": "2017-05-15T18:54:04Z",
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "We should add this case to https://github.com/PowerShell/PowerShell-RFC/blob/master/1-Draft/RFC0019-PowerShell-Core-Interop-Module.md",
      "created_at": "2017-03-05T23:18:09Z",
      "updated_at": "2017-03-05T23:18:09Z"
    },
    {
      "author": "BrucePay",
      "author_association": "COLLABORATOR",
      "body": "@mvadu Rather than depending on system-specific environment variables, you should use ~ which is supported on all platforms e.g. test-path ~  (~ support in paths has been in PowerShell since V1).\r\n@SteveL-MSFT Are you suggesting that we add all of the Windows-specific environment variables to Linux and macOS and vise versa? ",
      "created_at": "2017-03-06T19:56:12Z",
      "updated_at": "2017-03-06T19:56:12Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@BrucePay not sure how you came to that conclusion, my point is that the RFC is about interop/portability and the discussion should happen there",
      "created_at": "2017-03-06T20:04:14Z",
      "updated_at": "2017-03-06T20:04:14Z"
    },
    {
      "author": "mvadu",
      "author_association": "NONE",
      "body": "@BrucePay `$env:UserProfile` was just an example, and for `~` I can as well use `$HOME` which works same across platform. My point was similar to @SteveL-MSFT stated, we need to have standard scripts which work across multiple platform with least amount of conditional (`if($IsLinux){}`) logic.",
      "created_at": "2017-03-06T23:17:03Z",
      "updated_at": "2017-03-06T23:17:03Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Related to (duplicate of?) #1262.",
      "created_at": "2017-03-13T18:07:46Z",
      "updated_at": "2017-03-13T18:07:46Z"
    },
    {
      "author": "dbussanich",
      "author_association": "NONE",
      "body": "$env:SystemRoot should be added to MacOS/Linux. Need some way to pragmatically determine the system root.",
      "created_at": "2017-04-11T18:24:57Z",
      "updated_at": "2017-04-11T18:24:57Z"
    },
    {
      "author": "marrobHD",
      "author_association": "NONE",
      "body": "or just use\r\n```PS\r\nPS /home/adminuser> echo $env:USERNAME\r\nadminuser\r\nPS /home/adminuser> echo $env:USER\r\nadminuser\r\n```\r\n\r\nYou can also Type `echo $env:` and press `TAB` afterwards to see all available options on BASH when `bash-completion packet` is installed on the system.\r\n```Ps\r\nPS /home/adminuser> echo $env:\r\n_                                JOURNAL_STREAM                   SNAP_COMMON                      USER                             \r\nBAMF_DESKTOP_FILE_HINT           LANG                             SNAP_CONTEXT                     USERNAME                         \r\nCLR_ICU_VERSION_OVERRIDE         LOGNAME                          SNAP_COOKIE                      VTE_VERSION                      \r\nCOLORTERM                        MANAGERPID                       SNAP_DATA                        WINDOWPATH                       \r\nDBUS_SESSION_BUS_ADDRESS         PATH                             SNAP_INSTANCE_KEY                XAUTHORITY                       \r\nDESKTOP_SESSION                  POWERSHELL_DISTRIBUTION_CHANNEL  SNAP_INSTANCE_NAME               XDG_CONFIG_DIRS                  \r\nDISPLAY                          PSModulePath                     SNAP_LIBRARY_PATH                XDG_CURRENT_DESKTOP              \r\nGDMSESSION                       PWD                              SNAP_NAME                        XDG_DATA_DIRS                    \r\nGNOME_DESKTOP_SESSION_ID         QT_ACCESSIBILITY                 SNAP_REAL_HOME                   XDG_MENU_PREFIX                  \r\nGNOME_SHELL_SESSION_MODE         QT_IM_MODULE                     SNAP_REEXEC                      XDG_RUNTIME_DIR                  \r\nGNOME_TERMINAL_SCREEN            QT_QPA_PLATFORMTHEME             SNAP_REVISION                    XDG_SESSION_CLASS                \r\nGNOME_TERMINAL_SERVICE           QT_STYLE_OVERRIDE                SNAP_USER_COMMON                 XDG_SESSION_DESKTOP              \r\nGPG_AGENT_INFO                   SESSION_MANAGER                  SNAP_USER_DATA                   XDG_SESSION_TYPE                 \r\nGTK_MODULES                      SHELL                            SNAP_VERSION                     XMODIFIERS                       \r\nHOME                             SHLVL                            SSH_AGENT_PID                    \r\nIM_CONFIG_PHASE                  SNAP                             SSH_AUTH_SOCK                    \r\nINVOCATION_ID                    SNAP_ARCH                        TERM                             \r\n\r\n```\r\n\r\n",
      "created_at": "2022-02-18T09:00:33Z",
      "updated_at": "2022-02-18T09:00:33Z"
    }
  ],
  "created_at": "2017-03-05T22:33:53Z",
  "number": 3263,
  "state": "closed",
  "title": "Mapping for Basic Environment Variables between platforms",
  "updated_at": "2022-02-18T09:00:34Z"
}