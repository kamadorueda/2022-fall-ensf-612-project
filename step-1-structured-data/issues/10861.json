{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10861",
  "author": "danstur",
  "body": "# PR Summary\r\n\r\nChanges the default behavior of ConvertFrom-Json to follow the usual collection-unwrapping behavior. With this change `('[1,2]' | ConvertFrom-Json | Measure-Object).Count` returns 2, instead of 1.\r\n\r\nProvides a NoEnumerate switch similar to the Write-Output command to revert to the old behavior.\r\n\r\nSee issue #3424.\r\n\r\n## PR Context\r\n\r\nImproves the user experience for the majority of people by changing ConvertFrom-Json's behavior to match the default behavior when dealing with collections. See for example [this](https://stackoverflow.com/questions/44471175/adding-a-specific-property-to-each-json-object-in-an-array-in-powershell/44473567#44473567) or [this](https://stackoverflow.com/questions/53602313/different-evaluation-for-convertfrom-json) stackoverflow question for examples of people falling into this trap.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n- **User-facing changes**\r\n    - [x] Single element Json arrays can no longer be round tripped with ConvertTo-Json.\r\n        - [x] Issue filed: https://github.com/MicrosoftDocs/PowerShell-Docs/issues/5101\r\n- **Testing - New and feature**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n",
  "closed_at": "2019-11-15T00:41:00Z",
  "comments": [
    {
      "author": "msftclas",
      "author_association": "NONE",
      "body": "[![CLA assistant check](https://cla.opensource.microsoft.com/pull/badge/signed)](https://cla.opensource.microsoft.com/PowerShell/PowerShell?pullRequest=10861) <br/>All CLA requirements met.",
      "created_at": "2019-10-21T22:47:07Z",
      "updated_at": "2019-10-21T22:50:52Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "/cc @mklement0 Could you please review?",
      "created_at": "2019-10-22T05:25:11Z",
      "updated_at": "2019-10-22T05:25:11Z"
    },
    {
      "author": "danstur",
      "author_association": "CONTRIBUTOR",
      "body": "Looked at the failing checks.\r\n\r\nI'm not sure what mandatory parameter I'm supposed to be passing to `ConvertFrom-Json` in my tests. \r\n\r\nI can change the documentation for the new parameter, I pretty much just copied it from the Write-Output cmdlet. Starting the sentence with \"Get or sets\" strikes me as awkward - any proposals for the text?",
      "created_at": "2019-10-24T17:32:15Z",
      "updated_at": "2019-10-24T17:32:15Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Everything now looks good to me - I'm also baffled by the two Codacy failures:\r\n\r\n> Cmdlet 'ConvertFrom-Json' may be used incorrectly. Please check that all mandatory parameters are supplied.\r\n\r\n@SteveL-MSFT, since you seem to have set up Codacy, any ideas?\r\n\r\n",
      "created_at": "2019-10-24T18:24:23Z",
      "updated_at": "2019-10-24T18:24:23Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Codacy is probably using existing stable versions of PS as reference. Since we're adding a parameter here, we can expect it to complain.",
      "created_at": "2019-10-24T19:45:10Z",
      "updated_at": "2019-10-24T19:45:10Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks, @vexx32.\r\n\r\nIt's curious that instead of complaining about an _unrecognized_ parameter it admonishes checking for _mandatory_ ones   - but perhaps it's a catch-all message for any unrecognized syntax (can this be customized?).\r\n\r\nI haven't participated much in code reviews, so I'm asking innocently:\r\n\r\n* Will this not keep happening?\r\n\r\n* What's the protocol when it does happen? Can it be ignored and overridden by those with merge privileges?\r\n\r\n\r\n\r\n",
      "created_at": "2019-10-24T20:32:06Z",
      "updated_at": "2019-10-24T20:32:06Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "This particular warning seems to be a new thing, I think? I haven't seen it much until now, at least. \r\n\r\nCodacy issues have always been considered fairly low-priority and not blocking, though -- we have Codacy completely ignoring C# at the moment as its linter isn't entirely up to speed and the newer C# features confuse it a lot. \r\n\r\nIts PS linting is fairly good, but it's not mandatory to fix all issues -- some of them, like this one, we simply can't, after all! :slight_smile:\r\n\r\nIt's generally up to the folks reviewing whether we ask authors to fix Codacy issues, from what I've seen. \ud83d\ude42 ",
      "created_at": "2019-10-24T23:46:13Z",
      "updated_at": "2019-10-24T23:46:13Z"
    },
    {
      "author": "anmenaga",
      "author_association": "CONTRIBUTOR",
      "body": "* Codacy failures are false positives, can be ignored.\r\n* Under `Breaking changes/User-facing changes` there is no link to the doc issue, so I filed a new doc issue to document changes in this PR: https://github.com/MicrosoftDocs/PowerShell-Docs/issues/5101",
      "created_at": "2019-11-15T00:39:55Z",
      "updated_at": "2019-11-15T00:39:55Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@danstur Thanks for your contribution.",
      "created_at": "2019-11-15T03:03:53Z",
      "updated_at": "2019-11-15T03:03:53Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.0.0-preview.6` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.0.0-preview.6)\n",
      "created_at": "2019-11-21T22:35:33Z",
      "updated_at": "2019-11-21T22:35:33Z"
    }
  ],
  "created_at": "2019-10-21T22:46:54Z",
  "number": 10861,
  "state": "closed",
  "title": "ConvertFrom-Json: Unwrap Collections by default",
  "updated_at": "2019-11-21T22:35:33Z"
}