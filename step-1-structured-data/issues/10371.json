{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10371",
  "author": "irisxzhou",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n\r\n-->\r\n\r\n# Steps to reproduce\r\nRun in elevated PowerShell prompt:\r\n```powershell\r\nGet-Service -Name msquic\r\n\r\n```\r\nIf not run in an elevated prompt, no object is returned in PS6/7, and only the exception is shown. In PS5, the object is returned and there is no exception.\r\n\r\n# Expected behavior\r\nFrom PowerShell 5: \r\n```\r\n\r\nStatus   Name               DisplayName\r\n------   ----               -----------\r\nRunning  MsQuic             msquic\r\n\r\n```\r\n\r\n# Actual behavior\r\nFrom PowerShell 6.2 and 7:\r\n```none\r\nget-service : Service 'MsQuic (MsQuic)' cannot be queried due to the following error:\r\nAt line:1 char:1\r\n+ get-service -name msquic\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : PermissionDenied: (System.ServiceProcess.ServiceController:ServiceController) [Get-Service], ServiceCommandException\r\n+ FullyQualifiedErrorId : CouldNotGetServiceInfo,Microsoft.PowerShell.Commands.GetServiceCommand\r\n\r\n\r\nStatus   Name               DisplayName\r\n------   ----               -----------\r\nRunning  MsQuic             MsQuic\r\n\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\nPowerShell 6.2:\r\n```\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.2.1\r\nPSEdition                      Core\r\nGitCommitId                    6.2.1\r\nOS                             Microsoft Windows 10.0.18956\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\nPowerShell 7: \r\n```\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-preview.1\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-preview.1\r\nOS                             Microsoft Windows 10.0.18956\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "What is MsQuic? How could we install it? Maybe you know another repo scenario?",
      "created_at": "2019-08-17T18:06:50Z",
      "updated_at": "2019-08-17T18:06:50Z"
    },
    {
      "author": "irisxzhou",
      "author_association": "NONE",
      "body": "MsQuic is a driver. The way that I obtained it is by first getting a list of drivers, then iterating through their names with `Get-Service`, as follows: \r\n```powershell \r\n$drivers = Get-CimInstance win32_SystemDriver\r\nforeach ($driver in $drivers) \r\n{\r\n    $svcObj = Get-Service -Name $driver.Name \r\n}\r\n```\r\n\r\nWhen I do this, then I get a few drivers on my computer that return the same error (MsQuic is just the first one for me). If I say \r\n```powershell\r\n$svcObj = Get-Service -Name $driver.Name -ErrorAction -SilentlyContinue\r\n``` \r\nwe can bypass that problem and access the driver objects that throw exceptions, because the correct object is still returned, but in that case it just seems like the exception is wrong. ",
      "created_at": "2019-08-19T17:13:34Z",
      "updated_at": "2019-08-19T17:13:34Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I can repo with \r\n```powershell\r\nGet-Service -Name WinQuic\r\nGet-Service : Service 'WinQuic (WinQuic)' cannot be queried due to the following error:\r\nAt line:1 char:1\r\n+ Get-Service -Name WinQuic\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : PermissionDenied: (System.ServiceProcess.ServiceController:ServiceController) [Get-Service], ServiceCommandException\r\n+ FullyQualifiedErrorId : CouldNotGetServiceInfo,Microsoft.PowerShell.Commands.GetServiceCommand\r\n\r\n\r\nStatus   Name               DisplayName\r\n------   ----               -----------\r\nRunning  WinQuic            WinQuic\r\n\r\nPS > $error[0] | fl * -Force\r\n\r\nPSMessageDetails      :\r\nException             : Microsoft.PowerShell.Commands.ServiceCommandException: Service 'WinQuic (WinQuic)' cannot be qu\r\n                        eried due to the following error:\r\nTargetObject          : WinQuic\r\nCategoryInfo          : PermissionDenied: (System.ServiceProcess.ServiceController:ServiceController) [Get-Service], Se\r\n                        rviceCommandException\r\nFullyQualifiedErrorId : CouldNotGetServiceInfo,Microsoft.PowerShell.Commands.GetServiceCommand\r\nErrorDetails          :\r\nInvocationInfo        : System.Management.Automation.InvocationInfo\r\nScriptStackTrace      : at <ScriptBlock>, <No file>: line 1\r\nPipelineIterationInfo : {0, 1}\r\n",
      "created_at": "2019-08-20T04:32:17Z",
      "updated_at": "2019-08-20T04:32:17Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "/cc @daxian-dbw  @bergmeister @SteveL-MSFT \r\nIt seems it is again an issue with ServiceController. Should we report in CoreFX repo?",
      "created_at": "2019-08-20T04:33:14Z",
      "updated_at": "2019-08-20T04:34:14Z"
    },
    {
      "author": "KalleOlaviNiemitalo",
      "author_association": "NONE",
      "body": "In PowerShell Core 6.2.0, I get two errors, whether elevated or not:\r\n\r\n```\r\nget-service : Service 'WinQuic (WinQuic)' cannot be queried due to the following error:\r\nAt line:1 char:1\r\n+ get-service -name winquic\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : PermissionDenied: (System.ServiceProcess.ServiceController:ServiceController) [Get-Service], ServiceCommandException\r\n+ FullyQualifiedErrorId : CouldNotGetServiceInfo,Microsoft.PowerShell.Commands.GetServiceCommand\r\n```\r\n\r\nThe first error above is reported by Microsoft.PowerShell.Commands.GetServiceCommand.AddProperties after its QueryServiceConfig2 call returns false and sets Win32 error 15100 \"The resource loader failed to find MUI file\". This error has ErrorCategory.PermissionDenied even though permission was not denied.\r\n\r\n```\r\nget-service : The resource loader failed to find MUI file\r\nAt line:1 char:1\r\n+ get-service -name winquic\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : NotSpecified: (:) [Get-Service], Win32Exception\r\n+ FullyQualifiedErrorId : System.ComponentModel.Win32Exception,Microsoft.PowerShell.Commands.GetServiceCommand\r\n```\r\n\r\nThe second error above comes from a Win32Exception thrown by System.ServiceProcess.ServiceController.get_StartType after its QueryServiceConfig call returns false and sets Win32 error 15100 \"The resource loader failed to find MUI file\".\r\n\r\nProcess Monitor shows that [HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\WinQuic] \"DisplayName\" is \"@%SystemRoot%\\system32\\drivers\\winquic.sys,-1\" and \"Description\" is \"@%SystemRoot%\\system32\\drivers\\winquic.sys,-2\". services.exe tries to access \"C:\\Windows\\System32\\drivers\\winquic.sys\" (success, but apparently lacks the resources), \"C:\\WINDOWS\\system32\\SystemResources\\winquic.sys.mun\" (directory does not exist), \"C:\\Windows\\System32\\drivers\\en-US\\winquic.sys.mui\" (file does not exist), and \"C:\\WINDOWS\\system32\\drivers\\en\\winquic.sys.mui\" (directory does not exist).\r\n\r\n`Get-Service -Name SshdBroker` triggers similar errors.\r\n\r\nEven if CoreFX fixes ServiceController\u2026 although I am not sure how it can be fixed, since QueryServiceConfig is failing\u2026 it seems the ErrorCategory.PermissionDenied should still be corrected at the PowerShell side.",
      "created_at": "2019-08-20T08:29:07Z",
      "updated_at": "2019-08-20T08:29:07Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "The problem is actually here: https://github.com/PowerShell/PowerShell/blob/master/src/Microsoft.PowerShell.Commands.Management/commands/management/Service.cs#L677\r\n\r\nThe cmdlet fails at querying some information and writes a non-terminating error.  This doesn't happen in Windows PowerShell because these are actually additional note properties being added.  Seems like the right thing to do is just to not emit the non-terminating error at all and doc that some of these properties will be `$null` if they cannot be retrieved.\n\n<blockquote><img src=\"https://avatars0.githubusercontent.com/u/11524380?s=400&v=4\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicon.ico\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/PowerShell/PowerShell\">PowerShell/PowerShell</a></strong></div><div>PowerShell for every system! Contribute to PowerShell/PowerShell development by creating an account on GitHub.</div></blockquote>",
      "created_at": "2019-08-20T17:06:57Z",
      "updated_at": "2019-08-20T17:06:59Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": ">  not emit the non-terminating error\r\n\r\nHow does an user know that a property cannot be read? I believe the non-terminating error is right thing in the case.",
      "created_at": "2019-08-21T03:36:11Z",
      "updated_at": "2019-08-21T03:36:11Z"
    },
    {
      "author": "jhoneill",
      "author_association": "NONE",
      "body": "I get this issue with ssd-broker service from Open-ssh .\r\n Fine in Windows PowerShell ; error in 6/7\r\n```\r\nget-service : Service 'SshdBroker (SshdBroker)' cannot be queried due to the following error:\r\nAt line:1 char:1\r\n+ get-service\r\n+ ~~~~~~~~~~~\r\n+ CategoryInfo          : PermissionDenied: (System.ServiceProcess.ServiceController:ServiceController) [Get-Service], ServiceCommandException\r\n+ FullyQualifiedErrorId : CouldNotGetServiceInfo,Microsoft.PowerShell.Commands.GetServiceCommand\r\n```\r\n\r\nSo it appears to be more than drivers. (It also may be an easier one to test with). \r\n",
      "created_at": "2019-08-21T15:58:26Z",
      "updated_at": "2019-08-21T15:58:26Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "Not sure which OpenSSH you're talking about, using the built-in one in Windows 10 I only have `sshd` and `ssh-agent`, and they both work fine. \r\n\r\nAs others have said, my take is that if we fail to retrieve a property, it's perfectly fine to emit a non-terminating error as long as we still emit what we *were* able to retrieve. \r\n\r\nIs it also possibly the case that we're trying to retrieve more properties than Windows PowerShell did, and that's why we're hitting this now? ",
      "created_at": "2019-08-21T21:46:06Z",
      "updated_at": "2019-08-21T21:46:06Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov there are other cases where failure to retrieve specific information simply has that property be $null without emitting any error",
      "created_at": "2019-08-21T21:47:00Z",
      "updated_at": "2019-08-21T21:47:00Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": ">get-service : Service 'MsQuic (MsQuic)' cannot be queried due to the following error:\r\nAt line:1 char:1\r\n\r\nAt least the error message needs to be updated.",
      "created_at": "2019-08-21T21:58:30Z",
      "updated_at": "2019-08-21T21:58:30Z"
    },
    {
      "author": "jhoneill",
      "author_association": "NONE",
      "body": "@joeyaiello \r\n> Not sure which OpenSSH you're talking about, using the built-in one in Windows 10 I only have `sshd` and `ssh-agent`, and they both work fine.\r\n\r\nI'm not sure how I've configured mine differently, but I don't think it was delivered in Windows (the EXE files are not signed, and have no copyright notice.  But when I look in the Services GUI I get this in the description box. `Failed to Read Description. Error Code: 15100` \r\n\r\n15100 is The resource loader failed to find MUI file, so it looks like it should be loading a language specific description and can't find it. (en-GB instead of en-US ? who knows).\r\n\r\n> As others have said, my take is that if we fail to retrieve a property, it's perfectly fine to emit a non-terminating error as long as we still emit what we _were_ able to retrieve.\r\n\r\nMy first reaction was NO! But having seen that services has ERROR in the the description, I've changed to \"yeah, OK, that's what happens elsewhere\". The other information IS returned, so that's OK.  I was anti-producing an error because it caused a pester test I had to fail (get-service was get-anyRandomData) and including -errorAction fixes that.\r\n\r\n> \r\n> Is it also possibly the case that we're trying to retrieve more properties than Windows PowerShell did, and that's why we're hitting this now?\r\n\r\nYep. Windows PowerShell does not get the description. So no error. A quick reg hack will probably fix the description. \r\n  \r\n",
      "created_at": "2019-08-23T09:54:03Z",
      "updated_at": "2019-08-23T09:55:13Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "@jhoneill We had the discussion last week in the @PowerShell/powershell-committee and we agree that there is differing behavior between cmdlets in throwing non-terminating errors vs. just blanking the information that can't be retrieved. For instance, there's a (maybe bug, maybe by-design) behavior in `Get-Process` on macOS where `Get-Process` can't always retrieve the name of a process. Today, we just return what we can get (like the PID) and we return the process name as `$null`.\r\n\r\nHowever, we may not need to make a broad call on that, as I believe @JamesWTruher is investigating whether there's just a bug here we can fix. ",
      "created_at": "2019-08-28T21:37:29Z",
      "updated_at": "2019-08-28T21:37:29Z"
    },
    {
      "author": "jhoneill",
      "author_association": "NONE",
      "body": "@joeyaiello  Yes, that makes sense.\r\nThis seems an odd case where other things in Windows were saying \"error.\" when anything tried to read the description of that service (a reg hack did make it go away - there was an invalid reference to a resource in a DLL), I think if reading something causes an error reporting that error is better than swallowing it. If something is unexpectedly blank when the OS returns it's better to roll with it rather than \"What no process name ! I'm chucking an error\"   \r\n",
      "created_at": "2019-08-28T22:47:05Z",
      "updated_at": "2019-08-28T22:47:05Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee reviewed this, we agree that if a property value cannot be retrieved, then suppressing the error will be a better user experience.  If an entire object cannot be retrieved, then a non-terminating error is appropriate (with a good error message).",
      "created_at": "2019-09-18T22:57:01Z",
      "updated_at": "2019-09-18T22:57:01Z"
    },
    {
      "author": "mattcargile",
      "author_association": "NONE",
      "body": "FYI, I see this happening now with `gsv McpManagementService | select *`. ",
      "created_at": "2022-10-21T21:46:11Z",
      "updated_at": "2022-10-21T21:46:11Z"
    }
  ],
  "created_at": "2019-08-16T20:24:16Z",
  "number": 10371,
  "state": "open",
  "title": "Some drivers throw an exception when fetched with Get-Service, but still return the object anyway",
  "updated_at": "2022-10-21T21:46:12Z"
}