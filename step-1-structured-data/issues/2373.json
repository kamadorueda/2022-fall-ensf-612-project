{
  "_url": "https://github.com/PowerShell/PowerShell/issues/2373",
  "author": "iSazonov",
  "body": "Now FilterHashtable parameter in Get-WinEvent for named data field:\n1. generates a valid query, ex. @{Logname=\"System\";Param=\"a\"}\n2. generates a valid query for multiple values, ex.\n@{Logname=\"System\";Param=\"a\",\"b\"}\n\nNow I need help in creating tests #2368\n\nClose #2327 \n",
  "closed_at": "2016-10-07T18:48:09Z",
  "comments": [
    {
      "author": "msftclas",
      "author_association": "NONE",
      "body": "Hi **@iSazonov**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    <span>You've already signed the contribution license agreement. Thanks!</span>\n        <p>The agreement was validated by Microsoft and real humans are currently evaluating your PR.</p>\n\nTTYL, MSBOT;\n",
      "created_at": "2016-09-28T12:43:05Z",
      "updated_at": "2016-09-28T12:43:05Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@iSazonov I have manually verified your code changes and it works as expected, thanks for fixing it! Now we are waiting on you to address the PR comments.\nAt the same time, @JamesWTruher is following up on the `.evtx` test file (thanks Jim!). Once we have that test file ready and merged, you can add test for this PR.\n",
      "created_at": "2016-09-29T21:51:15Z",
      "updated_at": "2016-09-29T21:51:15Z"
    },
    {
      "author": "JamesWTruher",
      "author_association": "MEMBER",
      "body": "I was able to construct a set of tests for this - it required an EVTX file - I'll create a PR for that (the test which uses filterhash is commented out - take a look, and if it's good, you can uncomment the test. I don't want to mark it as pending because on linux it means that tests would be marked both pending and skipped which is not allowed.\n\n-- Update by @daxian-dbw --\n@iSazonov The PR is #2388. The test is `It 'Get-WinEvent can retrieve events with UserData queries using FilterHashtable'`.\nPlease take a look. if the test looks good to you, please uncomment the test in this PR.\n",
      "created_at": "2016-09-29T22:56:30Z",
      "updated_at": "2016-09-29T23:27:40Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@JamesWTruher Great test! Thanks!\n\nRequired addition.\nThis test checks only the first part of my fixes.\n\n> $filter = @{ path = \"$eventLogFile\"; Param2 = \"Windows x64\"}\n\nThe second part would look like this:\n\n> $filter = @{ path = \"$eventLogFile\"; Param2 = **\"Windows x64\",\"Windows x32\"**}\n\nas the named parameter by definition are String[].\n",
      "created_at": "2016-09-30T06:16:58Z",
      "updated_at": "2016-09-30T06:17:49Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Thanks @iSazonov for the updates. The EVTX file is now available, please add another test to cover all your changes. Now we are waiting on you to address the `StringBuilder` comment and add the additional test.\n",
      "created_at": "2016-09-30T17:05:33Z",
      "updated_at": "2016-09-30T17:05:33Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw  About  StringBuilder  comment above.\nI add one test. For second test need help from @JamesWTruher - comment above.\n",
      "created_at": "2016-10-01T19:43:28Z",
      "updated_at": "2016-10-01T19:43:28Z"
    },
    {
      "author": "msftclas",
      "author_association": "NONE",
      "body": "Hi **@iSazonov**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    <span>You've already signed the contribution license agreement. Thanks!</span>\n        <p>The agreement was validated by Microsoft and real humans are currently evaluating your PR.</p>\n\nTTYL, MSBOT;\n",
      "created_at": "2016-10-01T19:43:46Z",
      "updated_at": "2016-10-01T19:43:46Z"
    },
    {
      "author": "JamesWTruher",
      "author_association": "MEMBER",
      "body": "Please feel free to add these tests in your PR, since the test code is now all merged, you should be able to add tests you think are good\n\n---\n\nIn reply to: [250667902](https://github.com/PowerShell/PowerShell/pull/2373#issuecomment-250667902) [](ancestors = 250667902)\n",
      "created_at": "2016-10-03T18:08:05Z",
      "updated_at": "2016-10-03T18:08:05Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@iSazonov thanks for your replies to the review comments. As for the additional test, please see @JamesWTruher 's comment.\nNow we are only waiting on the additional test.\n",
      "created_at": "2016-10-03T22:27:00Z",
      "updated_at": "2016-10-03T22:31:46Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@JamesWTruher I can add second test, but it requires additional events in the evtx file. Now there are only three events, only one is suitable for new test and need at least two.\n\n> $filter = @{ path = \"$eventLogFile\"; Param2 = \"Windows x64\",\"Windows x32\"}\n- here for the \"Windows x64\" there are a event and for \"Windows x32\" a event does not exists in evtx.\n",
      "created_at": "2016-10-04T03:33:38Z",
      "updated_at": "2016-10-04T03:33:38Z"
    },
    {
      "author": "JamesWTruher",
      "author_association": "MEMBER",
      "body": "I think you can use DriverName (it's in UserData.SetupInstallPrinterDriver) - it's not Param, but it should still work:\n\n```\n<Event xmlns='http://schemas.microsoft.com/win/2004/08/events/event'>\n...\n<UserData>\n<SetupInstallPrinterDriver xmlns='http://manifests.microsoft.com/win/2005/08/windows/printing/spooler/core/events'>\n...\n<DriverName>Microsoft enhanced Point and Print compatibility driver</DriverName>\n...\n</SetupInstallPrinterDriver>\n</UserData>\n</Event>\n\n<Event xmlns='http://schemas.microsoft.com/win/2004/08/events/event'>\n...\n<UserData>\n<SetupInstallPrinterDriver ...\n<DriverName>Remote Desktop Easy Print</DriverName>\n... \n</SetupInstallPrinterDriver>\n</UserData>\n</Event>\n```\n",
      "created_at": "2016-10-04T23:34:58Z",
      "updated_at": "2016-10-04T23:34:58Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@iSazonov Please see @JamesWTruher's comment about using 'DriverName' to test passing a string array value like `$filter = @{ path = \"$eventLogFile\"; DriverName = \"Remote Desktop Easy Print\", \"Microsoft enhanced Point and Print compatibility driver\" }`.\nAnd also, could you please rebase your branch? Your PR contains some merge commits.\n",
      "created_at": "2016-10-05T23:59:04Z",
      "updated_at": "2016-10-05T23:59:04Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "1. Sorry for the delay the #2425 it stopped me. Now all test ready.\n2. Sorry for the refuse I only learn git. Now I made rebase.\n",
      "created_at": "2016-10-06T08:07:10Z",
      "updated_at": "2016-10-06T08:07:10Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@iSazonov Thanks for the update! It look mostly good except for one small typo (please see my comment above). Once you fix the typo, the PR will be ready to merge.\n",
      "created_at": "2016-10-06T17:17:03Z",
      "updated_at": "2016-10-06T17:17:03Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw Small question about planned support of <Suppress> and use StringBuilder. In fact, we need to build a **XML** query: is it acceptable to use System.Xml.XmlWriter?\n\nPowershell sample:\n\n``` powershell\n$sb = New-Object -TypeName \"System.Text.StringBuilder\";\n\n$XmlWriterSettings = New-Object System.Xml.XmlWriterSettings\n$XmlWriterSettings.OmitXmlDeclaration = $true\n$xmlWriter =  [System.Xml.XmlWriter]::Create($sb, $XmlWriterSettings)\n\n$Path = \"ppathh\"\n$Id = 0\n$xmlWriter.WriteStartElement(\"QueryList\")\n$xmlWriter.WriteStartElement(\"Query\")\n$XmlWriter.WriteAttributeString(\"Id\", $Id.ToString())\n$XmlWriter.WriteAttributeString(\"Path\", $Path)\n\n$xmlWriter.WriteStartElement(\"Select\")\n$XmlWriter.WriteAttributeString(\"Path\", $Path)\n$XmlWriter.WriteRaw(\"*\")\n$xmlWriter.WriteEndElement()\n\n$xmlWriter.WriteStartElement(\"Suspend\")\n$XmlWriter.WriteAttributeString(\"Path\", $Path)\n$XmlWriter.WriteRaw(\"*\")\n$xmlWriter.WriteEndElement()\n\n#$xmlWriter.WriteEndElement()\n#$xmlWriter.WriteEndElement()\n$xmlWriter.Flush()\n$xmlWriter.Close()\n$sb.ToString()\n```\n",
      "created_at": "2016-10-07T03:27:39Z",
      "updated_at": "2016-10-07T03:56:11Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@iSazonov Performance difference between `XmlWriter` and `StringBuilder` shouldn't be a consideration here, and they both will avoid generating a bunch of new strings like the current code does (Yay! :)). So you should pick the solution that you think is more maintainable.\n\n`XmlWriter` make it easier to not generate any malformed XML queries, especially when the query is complex, but on the other hand it possibly will make the code less concise, for example, you may end up repeating following code snippet in many places. So if you decide to go with `XmlWriter`, please try avoid repeat as much as possible \ud83d\ude04 (for example, maybe put the code snippet below in a method that you can call whenever you need to generate a `<Query>` element)\n\n``` powershell\n$xmlWriter.WriteStartElement(\"QueryList\")\n$xmlWriter.WriteStartElement(\"Query\")\n$XmlWriter.WriteAttributeString(\"Id\", $Id.ToString())\n$XmlWriter.WriteAttributeString(\"Path\", $Path)\n\n$xmlWriter.WriteStartElement(\"Select\")\n$XmlWriter.WriteAttributeString(\"Path\", $Path)\n```\n",
      "created_at": "2016-10-07T18:43:25Z",
      "updated_at": "2016-10-07T18:43:25Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@iSazonov Thanks again for fixing this issue with Get-WinEvent!\n",
      "created_at": "2016-10-07T18:45:47Z",
      "updated_at": "2016-10-07T18:45:47Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw Thanks for help and advices! This is my first code after 20 years \ud83d\ude0a\n",
      "created_at": "2016-10-09T14:37:50Z",
      "updated_at": "2016-10-09T14:37:50Z"
    }
  ],
  "created_at": "2016-09-28T12:43:02Z",
  "number": 2373,
  "state": "closed",
  "title": "Fix Get-WinEvent -FilterHashtable to work with named event data field",
  "updated_at": "2018-10-15T21:56:25Z"
}