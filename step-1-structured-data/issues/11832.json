{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11832",
  "author": "daxian-dbw",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nFix #11783 \r\n\r\n- Generate and include `Microsoft.Management.Infrastructure.CimCmdlets` NuGet package\r\n- Include all built-in module folders in `Microsoft.PowerShell.SDK` NuGet package except for the `PSDesiredConfiguration` module.\r\n   - `PSDesiredConfiguration` module is not included because it has files in nested folders, which cause the file path length to be more than 180 in the dotnet-interactive global tool, so it will require the long path support to work. I'm not sure if this would be a problem, and thus don't have it included.\r\n\r\n## PR Context\r\n\r\n<!-- Provide a little reasoning as to why this Pull Request helps and why you have opened it. -->\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2020-02-12T00:13:22Z",
  "comments": [
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "The solution is not perfect.\r\n\r\nThis fix targets `dotnet publish` because that's what we use for both the Azure Function worker and dotnet-interactive global tool.\r\nMost hosting application probably can be covered by this usage to generate a self-contained package that is portable to all platforms.\r\nIt turns out `dotnet build` also generates the `runtime` folder in the build output folder, so it works fine for `dotnet build`.\r\n\r\nFor `dotnet publish -runtime <rid>`, this could be used by a hosting application in case the dotnet runtime is not installed on the target platform, but since the content files will be bin-placed to the output folder, the hosting application author can always write a simple post build script to correct the path and make it work. So I think we are fine there.",
      "created_at": "2020-02-11T22:14:30Z",
      "updated_at": "2020-02-12T17:58:55Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@daxian-dbw If a doc issue was filed, please add the link in the description",
      "created_at": "2020-02-12T00:12:07Z",
      "updated_at": "2020-02-12T00:12:07Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.0.0-rc.3` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.0.0-rc.3)\n",
      "created_at": "2020-02-21T23:54:15Z",
      "updated_at": "2020-02-21T23:54:15Z"
    }
  ],
  "created_at": "2020-02-11T22:04:25Z",
  "number": 11832,
  "state": "closed",
  "title": "Update the NuGet package generation to include 'cimcmdlet.dll' and most of the built-in modules",
  "updated_at": "2020-02-21T23:54:15Z"
}