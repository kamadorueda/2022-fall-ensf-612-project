{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9451",
  "author": "mklement0",
  "body": "If you use a path with a key literally named `.` or `..` that is based on one of the registry drive provider's drives such as `HKCU:`, these names are currently misinterpreted as referring to the current and parent \"directory\" respectively, as in the filesystem.\r\n\r\nThe workaround is to use a provider-native path via the `registry::` prefix.\r\n\r\nIf it's too late to change this behavior and perhaps people rely on it, expecting filesystem-analogous behavior, the pitfall - and workaround - should be _documented_.\r\n\r\nNote that creating a key named `.` is not a hypothetical example; you need it to define a file type for extension-less file names, for instance (`HKEY_CLASSES_ROOT\\.`)\r\n\r\n# Steps to reproduce (on Windows)\r\n\r\nNote: The same applies analogously to a key literally named `'..'`.\r\n\r\n```powershell\r\n# A path to a key named \".\"\r\n$regPathPS = 'HKCU:\\_tmp\\.'\r\n# Equivalent provider-native path.\r\n$regPathProviderNative = 'registry::HKEY_CURRENT_USER\\_tmp\\.'\r\n\r\n# Create the key using the provider-native path\r\n# - which is currently the only option.\r\n$null = New-Item -Force $regPathProviderNative\r\n\r\n# Try to retrieve the new key using the PS drive notation.\r\n# This currently retrieves 'HKCU:\\_tmp' instead, i.e., the\r\n# *parent* path, because the \".\" is misinterpreted as a reference to\r\n# the \"directory\" HKCU:\\_tmp\r\ntry {\r\n\r\n  (Get-Item -LiteralPath $regPathPS).PSChildName | Should -Be '.'\r\n\r\n} finally {\r\n  # Clean up.\r\n  Remove-Item -Recurse -LiteralPath (Split-Path -Path $regPathPS)\r\n}\r\n```\r\n\r\n# Expected behavior\r\n\r\nThe test should pass.\r\n\r\n# Actual behavior\r\n\r\nThe test fails:\r\n\r\n```none\r\n...\r\nStrings differ at index 0.\r\nExpected: '.'\r\nBut was:  '_tmp'\r\n...\r\n```\r\n\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nPowerShell Core 6.2.0 / Windows PowerShell v5.1\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "kvprasoon",
      "author_association": "CONTRIBUTOR",
      "body": "Is the problem is in `Get-Item` ? It get the proper childname using `Get-ChildItem`",
      "created_at": "2019-04-24T16:38:44Z",
      "updated_at": "2019-04-24T16:38:44Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@kvprasoon, no: `Get-ChildItem` is equally affected. \r\n\r\nIt only works _incidentally_ in this scenario: it still targets only `registry::HKEY_CURRENT_USER\\_tmp` and _enumerates its children_ - the only one of which happens to be `.` in the test above; if you create a sibling key, say, `registry::HKEY_CURRENT_USER\\_tmp\\foo`, you'll see that `Get-ChildItem HKCU:\\_tmp\\.` enumerates them both.",
      "created_at": "2019-04-24T18:35:29Z",
      "updated_at": "2019-04-24T18:35:29Z"
    }
  ],
  "created_at": "2019-04-23T18:22:13Z",
  "number": 9451,
  "state": "open",
  "title": "Registry provider: key names \".\" and \"..\" aren't supported in PS drive paths due to filesystem-like path normalization",
  "updated_at": "2021-12-01T07:38:05Z"
}