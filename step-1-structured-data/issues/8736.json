{
  "_url": "https://github.com/PowerShell/PowerShell/issues/8736",
  "author": "jonnords",
  "body": "\r\n# Steps to reproduce\r\nI'm taking an UTF-8 encoded JSON and uploads the data to a qnamaker.ai instance.\r\nOf a couple of 100 entries a few of them were failing and after some testing it seems to be due to the contentlength being incorrectly calculated for those entries.\r\n\r\nI attempted to use Chunked which works perfectly in PS 5.1 but fails in core, I also attempted to set the content length but it ended up with a request containing two content lengths in the same request.\r\n\r\n$APIKey= @{\"Ocp-Apim-Subscription-Key\"= $subscriptionKey;\"Transfer-encoding\" = \"Chunked\"}\r\n\r\nInvoke-WebRequest -Method Put -Headers $APIKey -Uri $uri -ContentType \"application/json\" -Body $publish -skipheadervalidation\r\n\r\n# Expected behavior\r\n\r\nI'm not certain why Chunked transfer encoding is failing in Core but not in the same script running 5.1 .\r\n\r\nIf I define my own Content-Length the invoke method should not include it's own Content-length. Alternatively use a more exact measure of length. I think what I hit is described here for node.js https://stackoverflow.com/questions/18692580/node-js-post-causes-error-socket-hang-up-code-econnreset/18693340#18693340\r\n\r\n# Actual behavior\r\n\r\nChunked requests are failing in Core 6.1 works in PS 5.1\r\nCategory   : InvalidOperation\r\nActivity   : Invoke-RestMethod\r\nReason     : HttpResponseException\r\nTargetName : Method: PUT, RequestUri:\r\n             'https://westus.api.cognitive.microsoft.com/qnamaker/v4.0/knowledgebases/', Version: 2.0,\r\n             Content: System.Net.Http.ByteArrayContent, Headers:\r\n             {\r\n               Ocp-Apim-Subscription-Key: 86418e3c2dfd420d80fb13857539608b\r\n               Transfer-Encoding: Chunked\r\n               User-Agent: Mozilla/5.0\r\n               User-Agent: (Windows NT 10.0; Microsoft Windows 10.0.17763; en-US)\r\n               User-Agent: PowerShell/6.1.1\r\n               Content-Type: application/json; charset=utf-8\r\n             }\r\nTargetType : HttpRequestMessage\r\n\r\nContent-Length is being represented twice although calculated separate from the cmdlet. \r\n             {\r\n               Ocp-Apim-Subscription-Key: 86418e3c2dfd420d80fb13857539608b\r\n               User-Agent: Mozilla/5.0\r\n               User-Agent: (Windows NT 10.0; Microsoft Windows 10.0.17763; en-US)\r\n               User-Agent: PowerShell/6.1.1\r\n               Content-Length: 1401\r\n               Content-Length: 5604\r\n               Content-Type: application/json\r\n             }\r\nTargetType : HttpRequestMessage\r\n\r\n\r\n# Environment data\r\n\r\nPS 6.1.1\r\n",
  "closed_at": "2019-01-28T13:06:15Z",
  "comments": [
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "I believe this actually the same issue as #7618\r\n\r\nwe do not send UTF-8 by default, it would need to be defined in the Content-type charset but doing that now results in an error.\r\n\r\nThe difference in encoding type used to encode the byte stream for transport would explain the difference in content-length",
      "created_at": "2019-01-25T00:36:13Z",
      "updated_at": "2019-01-25T00:37:22Z"
    },
    {
      "author": "jonnords",
      "author_association": "NONE",
      "body": "Ok, it seems plausible. I need to pass utf-8 in PS 5.1 or it will fail with similar symptoms. On top of chunking this is what I send in PS 5.1\r\nInvoke-RestMethod -Method Post -Headers $apikey -Uri $URI -ContentType \"application/json; charset=utf-8\" -Body $body",
      "created_at": "2019-01-25T08:12:45Z",
      "updated_at": "2019-01-25T08:12:45Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@jonnords for issues with 5.1, you will need to open or vote on an issue at [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell). This repository is only for issues with 6.0.0 and up (PowerShell Core). Issues with the web cmdlets on windows would be in a completely different .NET API.",
      "created_at": "2019-01-25T12:53:07Z",
      "updated_at": "2019-01-25T12:53:07Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@markekraus What is status the Issue after #8742?",
      "created_at": "2019-01-26T07:51:28Z",
      "updated_at": "2019-01-26T07:51:28Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov I was waiting for #8742 to have @jonnords try with fix in place to ensure it is the same issue.\r\n\r\n@jonnords If could download the latest nightly build and test. You will need to supply `-ContentType 'application/json; charset=utf-8' -TransferEncoding chuncked` and do not include a content-length header (it should be calculated for you)",
      "created_at": "2019-01-26T14:24:44Z",
      "updated_at": "2019-01-26T14:24:44Z"
    },
    {
      "author": "jonnords",
      "author_association": "NONE",
      "body": "Downloaded the latest build and it worked like a charm.\r\n\r\nInvoke-RestMethod -Method Put -Headers $APIKey -Uri $uri -ContentType \"application/json; charset=utf-8\" -Body $publish -TransferEncoding Chunked\r\n\r\nThank you for the swift response.\r\n\r\nFrom: Mark Kraus <notifications@github.com>\r\nSent: Saturday, January 26, 2019 3:25 PM\r\nTo: PowerShell/PowerShell <PowerShell@noreply.github.com>\r\nCc: Jon Nordstr\u00f6m <jonnords@microsoft.com>; Mention <mention@noreply.github.com>\r\nSubject: Re: [PowerShell/PowerShell] invoke-restmethod and invoke-webrequest Content-Length incorrectly calculated (#8736)\r\n\r\n\r\n@iSazonov<https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2FiSazonov&data=02%7C01%7Cjonnords%40microsoft.com%7C9433838b5bfa4052ef2108d6839a117c%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636841095085244352&sdata=4rOBCz730lIiEoOTXJb9%2FUZM0HhBihYAhx%2BRyI2gr5Y%3D&reserved=0> I was waiting for #8742<https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2FPowerShell%2FPowerShell%2Fpull%2F8742&data=02%7C01%7Cjonnords%40microsoft.com%7C9433838b5bfa4052ef2108d6839a117c%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636841095085254357&sdata=7Kj3u0thcs1mc3ies77Vx1FUHmHgKyRV%2BdP8ZayoaGQ%3D&reserved=0> to have @jonnords<https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fjonnords&data=02%7C01%7Cjonnords%40microsoft.com%7C9433838b5bfa4052ef2108d6839a117c%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636841095085264361&sdata=D9%2FMA5vndujHYsFjmcYBinl%2B1T26E%2BE8zGQ05qe64Qc%3D&reserved=0> try with fix in place to ensure it is the same issue.\r\n\r\n@jonnords<https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fjonnords&data=02%7C01%7Cjonnords%40microsoft.com%7C9433838b5bfa4052ef2108d6839a117c%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636841095085274371&sdata=x5RZ8fr6U8vS1Mr8iXHxMiS3KWGfr0Sqm%2BDvt9dbmbM%3D&reserved=0> If could download the latest nightly build and test. You will need to supply -ContentType 'application/json; charset=utf-8' -TransferEncoding chuncked and do not include a content-length header (it should be calculated for you)\r\n\r\n\u2014\r\nYou are receiving this because you were mentioned.\r\nReply to this email directly, view it on GitHub<https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2FPowerShell%2FPowerShell%2Fissues%2F8736%23issuecomment-457835209&data=02%7C01%7Cjonnords%40microsoft.com%7C9433838b5bfa4052ef2108d6839a117c%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636841095085284380&sdata=nx5IDNvCiEr21dAWnfpjztP3RaZi%2FPu4pj5qwRC6uuE%3D&reserved=0>, or mute the thread<https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAiQMBnipR9F5Dc0piGfcLQRx_QiE_W3iks5vHGVBgaJpZM4aRiTM&data=02%7C01%7Cjonnords%40microsoft.com%7C9433838b5bfa4052ef2108d6839a117c%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636841095085294385&sdata=oyp5SwXSev7U7E1HrUl9YGcKHODmYnaxwuM98D6sJBQ%3D&reserved=0>.\r\n",
      "created_at": "2019-01-28T11:03:04Z",
      "updated_at": "2019-01-28T11:03:04Z"
    }
  ],
  "created_at": "2019-01-24T19:15:50Z",
  "number": 8736,
  "state": "closed",
  "title": "invoke-restmethod and invoke-webrequest Content-Length incorrectly calculated",
  "updated_at": "2019-01-28T13:06:15Z"
}