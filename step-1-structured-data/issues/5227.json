{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5227",
  "author": "JohnLBevan",
  "body": "**Summary** \r\n\r\nIt would be helpful if we could splat using the property of a variable (i.e. where that property is itself a hashtable) to a command.\r\n\r\n**Code Example:**\r\n\r\n    function Test-Demo {\r\n        [CmdletBinding()]\r\n        Param (\r\n            [Parameter()]\r\n            [string]$One\r\n            ,\r\n            [Parameter()]\r\n            [string]$Two\r\n        )\r\n        \"1 = $One\"\r\n        \"2 = $Two\"\r\n    }\r\n    $test = @{\r\n        testInt = @{ \r\n            One = '1'\r\n            Two = '2'\r\n        }\r\n        testString = @{\r\n            One = 'One'\r\n            Two = 'Two'\r\n        }\r\n    }\r\n\r\n    #to splat a property, we first need to assign the property to a \"top level\" variable:\r\n    $t = $test.testString\r\n    Test-Demo @t \r\n\r\n    #however it would be nice if we could instead do this:\r\n    Test-Demo @test.testString \r\n\r\n    #or if that's not possible for some reason, maybe something like this:\r\n    Test-Demo ([splat]$test.testString) \r\n\r\nThis could be particularly useful when dealing with config files. e.g. Our config holds database information (instance, catalog, credentials), and also sections with other properties specific to our functions.  e.g.\r\n\r\n    $config = Get-MyScriptConfig -Path '.\\Config.xml'\r\n    Invoke-Something @config.DatabaseConnectionInfo @config.Something\r\n\r\n",
  "closed_at": "2017-10-26T08:45:08Z",
  "comments": [
    {
      "author": "IISResetMe",
      "author_association": "COLLABORATOR",
      "body": "Sounds like we need to revive https://github.com/PowerShell/PowerShell-RFC/issues/6 - the RFC draft suggests generalized expression splatting, with syntax like:\r\n\r\n```PowerShell\r\nTest-Demo @$test.testString\r\n```",
      "created_at": "2017-10-26T04:32:37Z",
      "updated_at": "2017-10-26T04:32:37Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@JohnLBevan Can we close the Issue looking https://github.com/PowerShell/PowerShell-RFC/issues/6 ?",
      "created_at": "2017-10-26T07:05:27Z",
      "updated_at": "2017-10-26T07:05:27Z"
    },
    {
      "author": "JohnLBevan",
      "author_association": "NONE",
      "body": "@iSazonov ; yes, happy for this to be closed given it's already covered there.  Thank-you.",
      "created_at": "2017-10-26T08:45:08Z",
      "updated_at": "2017-10-26T08:45:08Z"
    }
  ],
  "created_at": "2017-10-25T09:11:13Z",
  "number": 5227,
  "state": "closed",
  "title": "Splatting a property",
  "updated_at": "2017-10-26T12:46:26Z"
}