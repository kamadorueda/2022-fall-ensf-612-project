{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7160",
  "author": "daxian-dbw",
  "body": "I suggest changing the current behavior of `Get-Module <path-to-directory> -ListAvaialble` and `Get-Module <path-to-directory> -ListAvaialble`.\r\n\r\nToday, `Get-Module <path-to-directory> -ListAvaialble` assumes the passed in directory is a module folder -- it uses the directory name as the module name and only tries to find valid module files with the same name right under the directory. `Get-Module <path-to-directory> -ListAvaialble -All` does recursively search the directory for valid module files, but then it filters the found modules using the directory name, so again, only the modules with the same name as the given directory name can be returned. Both behaviors seem wrong and useless to me.\r\n\r\nI think for `Get-Module <directory-Foo> -ListAvailable` and `Get-Module <directory-Foo> -ListAvailable -All`, the behaviors should be the same as if running `Get-Module -ListAvailable` and `Get-Module -ListAvailable -All` when `$env:PSModulePath = <directory-Foo>`. Namely, `Get-Module <directory-Foo> -ListAvailable` should treat `directory-Foo` as a module path, and find all availalbe **default** modules within that module path; `Get-Module <directory-Foo> -ListAvailable -All` should also treat `directory-Foo` as a module path, and find all modules within that module path. The proposed behaviors make more sense because:\r\n- The semantics of `-ListAvailable` and `-All` is consistent between `Get-Module <directory-path>` and `Get-Module <module-name>`;\r\n- The proposed behaviors are more useful since they allow the user to look for available modules from an arbitrary directory.\r\n\r\nExpected Behavior\r\n-----------\r\n```\r\nGet-Module \"$PSHOME\\Modules\" -ListAvailable\r\n## Return all availalbe default modules under '$PSHOME\\Modules',\r\n## just like running 'Get-Module -ListAvailable' when '$env:PSModulePath == \"$PSHOME\\Modules\"'\r\n\r\nGet-Module \"$PSHOME\\Modules\" -ListAvailable -All\r\n## Return all modules under '$PSHOME\\Modules', \r\n## just like running 'Get-Module -ListAvailable -All' when '$env:PSModulePath == \"$PSHOME\\Modules\"'\r\n```\r\n\r\nActual Behavior\r\n-----------\r\n```\r\nPS:4> Get-Module \"$PSHOME\\Modules\" -ListAvailable\r\nGet-Module : The specified module 'C:\\Program Files\\PowerShell\\6.0.2\\Modules' was not found. Update the Name parameter to point to a valid path, and then try again.\r\nAt line:1 char:1\r\n+ Get-Module \"$PSHOME\\Modules\" -ListAvailable\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : ResourceUnavailable: (C:\\Program File...l\\6.0.2\\Modules:String) [Get-Module], FileNotFoundException\r\n+ FullyQualifiedErrorId : Modules_ModuleNotFoundForGetModule,Microsoft.PowerShell.Commands.GetModuleCommand\r\n\r\nPS:5> Get-Module \"$PSHOME\\Modules\" -ListAvailable -All\r\nGet-Module : The specified module 'C:\\Program Files\\PowerShell\\6.0.2\\Modules' was not found. Update the Name parameter to point to a valid path, and then try again.\r\nAt line:1 char:1\r\n+ Get-Module \"$PSHOME\\Modules\" -ListAvailable -All\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : ResourceUnavailable: (C:\\Program File...l\\6.0.2\\Modules:String) [Get-Module], FileNotFoundException\r\n+ FullyQualifiedErrorId : Modules_ModuleNotFoundForGetModule,Microsoft.PowerShell.Commands.GetModuleCommand\r\n```\r\n",
  "closed_at": "2018-06-28T00:21:21Z",
  "comments": [
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@BrucePay Could you please take a look at the proposed behavior change and see if it makes sense?",
      "created_at": "2018-06-25T07:49:40Z",
      "updated_at": "2018-06-25T07:49:40Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee reviewed this and to get the desired behavior to list modules in a path, you must add a wildcard:\r\n\r\n> get-module $path\\\\* -listavailable\r\n",
      "created_at": "2018-06-27T22:24:30Z",
      "updated_at": "2018-06-27T22:24:40Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "@HemantMahawar and I were the minorities in the room, but we also felt like it would make sense (though a very low priority) to add a `-Path` parameter that doesn't expect that the leaf of the directory it's passed is a module name. ",
      "created_at": "2018-06-27T22:25:51Z",
      "updated_at": "2018-06-27T22:25:51Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "It turns out the existing behavior of `Get-Module <Path-to-directory> -ListAvailable` becomes interesting when wildcard characters are using in the path. So we cannot change the current behavior.\r\nI will close this issue and update #7145 to revert the breaking change.",
      "created_at": "2018-06-28T00:21:21Z",
      "updated_at": "2018-06-28T00:21:21Z"
    }
  ],
  "created_at": "2018-06-25T07:40:01Z",
  "labels": [
    "Issue-Enhancement",
    "Breaking-Change",
    "Committee-Reviewed",
    "WG-Cmdlets-Core"
  ],
  "number": 7160,
  "state": "closed",
  "title": "'Get-Module <Path-to-directory> -ListAvailable -All' should return all modules within the directory",
  "updated_at": "2018-06-28T00:21:21Z"
}