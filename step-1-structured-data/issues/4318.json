{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4318",
  "author": "KirkMunro",
  "body": "There are many scenarios where the default serialization behaviour of ```ConvertTo-Json``` for enumerated types is undesirable. JSON does not contain type information for the properties contained within it, and as a result deserialization of JSON enumerations into a meaningful representation (such as their string representation) is impossible.\r\n\r\nThis PR adds a new ```-EnumsAsStrings``` parameter to the ```ConvertTo-Json``` cmdlet to provide an alternative serialization option that converts all enumerations to their string representation as part of the serialization process, so that the data remains meaningful when the JSON string is deserialized later.",
  "closed_at": "2017-08-16T16:57:30Z",
  "comments": [
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT: I'd like to get some clarification from the PowerShell Team on how you guys want PRs handled. This PR is done. It's tested and working, and all required changes have been completed. It just needs to be merged. Yet earlier today, @iSazonov added some additional requested changes _that in my opinion add no additional value whatsoever to this PR_.\r\n\r\nSpeaking as someone who is extremely busy, yet makes time to submit PRs when I can, I find this very disrespectful of my time. The casing used in the comment before the added parameter matches the casing used in the comments before the other parameters in the file. Had I decided to change that and use \"Gets\", and at the same time changed the other comments to use \"Gets\" (for consistency), I would very likely have received a comment to undo the unnecessary changes that do not pertain to this PR. And for the \"extra blank line comments\" requests -- why? Who says they are extra? Why is the blank line at the top of the test script block not also considered extra? I can see blank lines considered unnecessary when there are many in a row or when they are used a little too liberally in code, but when we're talking about a single blank line here and there that makes a file more readable, do we really need to nitpick on those details? If so, where are the rules written so that people like me who want to submit PRs can follow them from the onset and not waste time later with these insignificant details? IMHO these requested changes are absurd and have nothing to do with the PR at hand, so I am summarily ignoring them unless someone from the PowerShell team can provide me with a good reason to take time away from what I am otherwise busy doing in order to make these changes. Otherwise, if we can get back to focusing feedback on changes that are actually _required_ for a PR to be approved, it would be appreciated.",
      "created_at": "2017-08-15T16:57:23Z",
      "updated_at": "2017-08-15T16:57:23Z"
    },
    {
      "author": "mirichmo",
      "author_association": "MEMBER",
      "body": "@KirkMunro All comments are welcome on PRs and issues and we have a process for handling scenarios like this although I am not sure if we ever documented it. I filed issue #4595 to cover the documentation hole.\r\n\r\nIdeally, if the changes requested are small, the author will just push a quick update to the PR and be done with it. If not, and the comments are non-blocking as they are in this case, the process is to file an issue covering the requested change and merge the PR. I filed issue #4596 to document the requested changes.",
      "created_at": "2017-08-16T16:53:20Z",
      "updated_at": "2017-08-16T16:53:20Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "@mirichmo I think your process is missing something. Should you really take _all_ of the requested changes verbatim and throw them into an issue for someone else to address? Even the blank line changes? Really? That makes no sense. If I were to waste my time going through PRs and adding comments where I felt blank lines should be removed, does that mean you or someone else from the PowerShell team should create an issue suggesting someone in the community may want to remove those lines at some point? And for the single \"Gets\" comment, wouldn't it be more appropriate to log an issue suggesting that all of the comments where the string starts with lowercase be changed to start with uppercase, and not just one that happened to be entered as part of this PR in a manner consistent with the rest of the file? I don't see any value in #4596 at all -- it feels more like you're passing the time wasting on to someone else, and I feel there is an incorrect judgement being made with respect to what is an appropriate comment to add to a PR and what is not. Saying all comments are welcome is one thing, sure, but for people who are maintainers on a repository, I think the community needs to be able to expect better.",
      "created_at": "2017-08-17T00:39:40Z",
      "updated_at": "2017-08-17T00:39:40Z"
    },
    {
      "author": "mirichmo",
      "author_association": "MEMBER",
      "body": "@KirkMunro I am trying to establish a common process and behave in a predictable manner while also respecting the person submitting the PR and the person leaving the comments. Maybe @iSazonov feels strongly about those change requests and would like to do them himself? Maybe I should have just marked them as \"Won't Fix\" and forgotten the whole thing? I am learning here and your feedback is helpful. A better way to handle this scenario rather than just filing an issue would probably have been to leave a comment stating, \"I do not consider these to be blocking comments that must be addressed as part of this PR. Please file an issue covering the comments if you would like to see them addressed.\"\r\n\r\nAlso, I do not see issues as static things. Creating a separate issue allows for discussion and suggestions as well. Your suggestion regarding expanding #4596 to cover all strings like that does make it more interesting.",
      "created_at": "2017-08-17T18:11:11Z",
      "updated_at": "2017-08-17T18:11:11Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "Maybe rather than pull all comments that did not result in changes within a PR into an issue (which may just create undesirable noise), the right approach when closing a PR is for the author of the PR or the PS Team member merging/closing the PR to identify any optional changes that were not made and reply to those with a link that references an article (some anchored portion of a markdown file) that indicates that the proposed change was not required for the PR, but if they believe it is an important change to make they can file a separate issue requesting that change or they can open a PR with those changes. Then if the person proposing said changes really feels strongly that they should be made, they can take the appropriate steps to try to influence those changes. I wouldn't mind being able to drop in a simple hyperlink in response to any PR change requests that I am not in agreement with. I also think that document should discuss how to propose the right change and how to avoid proposing changes that are inappropriate to avoid all of this in the first place.",
      "created_at": "2017-08-18T04:50:17Z",
      "updated_at": "2017-08-18T04:50:17Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@KirkMunro thanks for your feedback, I didn't respond earlier as I was out of the country on vacation.  We as a team are still learning on how to properly engage with the community since becoming OSS.  I agree that we want to make it as easy as possible for the community to submit PRs and get them merged, but also easy for the community and team to provide feedback against those PRs.\r\n\r\nLet me discuss it with the team and we'll share out thoughts on how to improve the process and experience.",
      "created_at": "2017-08-28T21:40:06Z",
      "updated_at": "2017-08-28T21:40:06Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@KirkMunro I hope I addressed your concerns with this PR https://github.com/PowerShell/PowerShell/pull/4710",
      "created_at": "2017-08-31T19:05:34Z",
      "updated_at": "2017-08-31T19:05:34Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "I saw that earlier today. Thanks @SteveL-MSFT, that did address my concerns.",
      "created_at": "2017-08-31T22:14:34Z",
      "updated_at": "2017-08-31T22:14:34Z"
    }
  ],
  "created_at": "2017-07-21T16:06:51Z",
  "number": 4318,
  "state": "closed",
  "title": "Added support for converting enums as strings in JSON",
  "updated_at": "2019-01-07T21:22:42Z"
}