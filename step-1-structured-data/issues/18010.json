{
  "_url": "https://github.com/PowerShell/PowerShell/issues/18010",
  "author": "stephen147",
  "body": "### Prerequisites\r\n\r\n- [x] Write a descriptive title.\r\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- [X] Search the existing issues.\r\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\r\n\r\n### Steps to reproduce\r\n\r\n`Split([Environment]::NewLine` doesn't work as it should. \r\n\r\nIn v5.1 of  PowerShell returns 3 from the code below whereas in v7 it doesn't\r\n\r\n### Expected behavior\r\n\r\n```console\r\nPS > (\"test`rtest`rtest\".Split([Environment]::NewLine,[StringSplitOptions]::None)).count\r\n3\r\n```\r\n\r\n\r\n### Actual behavior\r\n\r\n```console\r\nPS > (\"test`rtest`rtest\".Split([Environment]::NewLine,[StringSplitOptions]::None)).count\r\n1\r\n```\r\n\r\n\r\n### Error details\r\n\r\n_No response_\r\n\r\n### Environment data\r\n\r\n```powershell\r\nPSVersion                      5.1.19041.1682                                                      \r\nPSEdition                      Desktop                                                             \r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}                                             \r\nBuildVersion                   10.0.19041.1682                                                     \r\nCLRVersion                     4.0.30319.42000                                                     \r\nWSManStackVersion              3.0                                                                 \r\nPSRemotingProtocolVersion      2.3                                                                 \r\nSerializationVersion           1.1.0.1\r\n```\r\n\r\n\r\n### Visuals\r\n\r\n_No response_",
  "closed_at": "2022-09-04T00:01:29Z",
  "comments": [
    {
      "author": "237dmitry",
      "author_association": "NONE",
      "body": "Windows newline:\r\n```powershell\r\nPS > [int[]][char[]][environment]::NewLine    # `r`n\r\n13\r\n10\r\n\r\nPS > [int[]][char[]] \"`r`n\"\r\n13\r\n10\r\n\r\nPS > (\"test`rtest`rtest\".Split(\"`r\",[StringSplitOptions]::None)).count\r\n3\r\n```",
      "created_at": "2022-09-02T07:02:36Z",
      "updated_at": "2022-09-02T07:05:47Z"
    },
    {
      "author": "jhoneill",
      "author_association": "NONE",
      "body": "There are multiple .SPLIT methods and if you pass a string a different one gets select in PowerShell 5/ .NET Framework 4 compared with PowerShell 6/7 and .NET core / .NET 6\r\n\r\n```\r\n>  (\"test`rtest`rtest\".Split(\"`r`n\",[StringSplitOptions]::None)).count\r\n3\r\n\r\n\"123456789\".Split(\"369\")\r\n12\r\n45\r\n78\r\n```\r\nThere it splits by 3 or 6 or 9 -  \"369\" is **converted to a [char[]]**\r\n\r\nIn PowerShell 6 or 7  (.NET core / .NET 6) it split by 369 - (i.e. it doesn't split 123456789  , but will split 123694578 ) because \"369\" **remains as a string** . I can't say *why* this is but to me, passing the string when it is accepted (not changing type) looks like the more correct behaviour.    \r\n\r\nTo make 6/7 behave like 5 needs\r\n```\r\n (\"test`rtest`rtest\".Split([char[]][Environment]::NewLine,[StringSplitOptions]::None)).count\r\n```\r\n\r\nHowever this will not work on mac/linux PowerShell where `[Environment]::NewLine` is only ``` `n```\r\n\r\nA more reliable way is to use the split operator  ``` -split \"`r`n|`n|`r\" ```  to keep blank lines or  ``` -split \"[`r`n]+```  to treat multiple line breaks as one. The first says \"try for cr lf first, then lf, then cr\" the second says any sequence of cr and lf\r\n\r\n",
      "created_at": "2022-09-02T08:58:24Z",
      "updated_at": "2022-09-02T08:58:24Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2022-09-04T00:01:28Z",
      "updated_at": "2022-09-04T00:01:28Z"
    },
    {
      "author": "stephen147",
      "author_association": "NONE",
      "body": "Thanks all,\r\n\r\nI've ended up using `-split '\\r?\\n'` as this seems the most robust method.",
      "created_at": "2022-09-19T21:51:27Z",
      "updated_at": "2022-09-19T21:51:27Z"
    }
  ],
  "created_at": "2022-09-01T23:23:21Z",
  "labels": [
    "Issue-Question",
    "Resolution-Answered"
  ],
  "number": 18010,
  "state": "closed",
  "title": ".Split([Environment]::NewLine not splitting by new lines",
  "updated_at": "2022-09-19T21:51:27Z"
}