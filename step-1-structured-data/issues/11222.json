{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11222",
  "author": "peppekerstens",
  "body": "# Summary of the new feature/enhancement\r\n\r\nCommand is hopefully self-explanatory :)\r\n\r\n<!-- \r\nA clear and concise description of what the problem is that the new feature would solve.\r\nTry formulating it in user story style (if applicable):\r\n'As a user I want X so that Y.' with X being the being the action and Y being the value of the action.\r\n-->\r\n\r\n# Proposed technical implementation details (optional)\r\n\r\n<!-- \r\nA clear and concise description of what you want to happen.\r\nConsider providing an example PowerShell experience with expected result.\r\n-->\r\n",
  "closed_at": "2021-06-15T04:35:02Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Most installations are performed using package managers. So the cmdlet could be useful only for SxS scenarios if zip package is used. Since we have new version notifications in 7.0 I think the cmdlet has very small value.\r\n/cc @daxian-dbw Thoughts?",
      "created_at": "2019-12-05T05:37:55Z",
      "updated_at": "2019-12-05T05:37:55Z"
    },
    {
      "author": "peppekerstens",
      "author_association": "NONE",
      "body": "@iSazonov you are correct. This applies to the Windows variant only and would replace/enhance\r\n\r\niex \"& { $(irm https://aka.ms/install-powershell.ps1) } -UseMSI -Preview\"\r\n\r\nI had the beginner/lazy in mind. But enhancing/improving the documentation [here](https://docs.microsoft.com/en-us/powershell), providing a more friendly manner like this script could/should suffice.\r\n\n\n<blockquote></blockquote>",
      "created_at": "2019-12-23T06:36:33Z",
      "updated_at": "2019-12-23T06:36:35Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@peppekerstens You could ask in https://github.com/PowerShell/PowerShell-Docs or pull a PR there.\r\nAlso I guess MSFT will promote AppX package from Store for beginners.\n\n<blockquote><img src=\"https://repository-images.githubusercontent.com/44411511/850abe80-7ca6-11e9-886f-a1b13b275ae0\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicon.ico\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/MicrosoftDocs/PowerShell-Docs\">MicrosoftDocs/PowerShell-Docs</a></strong></div><div>The official PowerShell documentation sources. Contribute to MicrosoftDocs/PowerShell-Docs development by creating an account on GitHub.</div></blockquote>",
      "created_at": "2019-12-23T10:26:21Z",
      "updated_at": "2019-12-23T10:26:23Z"
    },
    {
      "author": "TylerLeonhardt",
      "author_association": "MEMBER",
      "body": "Duplicate of https://github.com/PowerShell/PowerShell/issues/12678",
      "created_at": "2020-12-04T19:03:58Z",
      "updated_at": "2020-12-04T19:03:58Z"
    },
    {
      "author": "peppekerstens",
      "author_association": "NONE",
      "body": "@SteveL-MSFT and @TylerLeonhardt and @iSazonov \r\n\r\nCould we combine the MSIX PS versions with the [MSIX commands](https://docs.microsoft.com/en-us/windows/msix/desktop/powershell-msix-cmdlets) to create a more package-like install/update experience within the console environment of Windows (with the non GUI core versions in mind)?\r\n\r\nOn that note: why are the MSIX packages published to the MS store but not within Github anymore? \r\nhttps://github.com/PowerShell/PowerShell/issues/12009 - not really fixed this way...",
      "created_at": "2020-12-10T11:02:11Z",
      "updated_at": "2020-12-10T11:02:11Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@peppekerstens Appx module does not compatible with current PowerShell 7.1 version.\r\n\r\nI am not a proponent of a self-renewal approach. I believe this is a task for package managers and each distributive  vendor can have a different approach. We have a good compromise today in notifying users of new versions - after getting the notification they can run a package manager command to update PowerShell. _We could add a feature so that users can assign a custom callback for the notification._\r\n",
      "created_at": "2020-12-10T12:08:03Z",
      "updated_at": "2020-12-10T12:11:37Z"
    },
    {
      "author": "peppekerstens",
      "author_association": "NONE",
      "body": "@iSazonov I totally agree on your perspective and 'get' the way it is being done within a *unix/*linux env . So maybe I am missing something here....\r\n\r\nI am trying to move forward to that same principle within Windows... What is the preferred packagemanager within the Windows environment and in which way has that manager updating for PowerShell covered?\r\n\r\n",
      "created_at": "2020-12-17T14:15:45Z",
      "updated_at": "2020-12-17T14:15:45Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> What is the preferred packagemanager within the Windows environment and in which way has that manager updating for PowerShell covered?\r\n\r\nMSFT actively works on WinGet :-) but it is your preference which manager to use. In any case you could try WinGet and feedback in WinGet repository.",
      "created_at": "2020-12-17T16:46:41Z",
      "updated_at": "2020-12-17T16:46:41Z"
    },
    {
      "author": "jdhitsolutions",
      "author_association": "COLLABORATOR",
      "body": "This looks like a duplicate of https://github.com/PowerShell/PowerShell/issues/8663.",
      "created_at": "2021-06-14T19:53:54Z",
      "updated_at": "2021-06-14T19:53:54Z"
    }
  ],
  "created_at": "2019-11-30T20:11:41Z",
  "number": 11222,
  "state": "closed",
  "title": "Introduce command update-powershell",
  "updated_at": "2021-06-15T04:35:02Z"
}