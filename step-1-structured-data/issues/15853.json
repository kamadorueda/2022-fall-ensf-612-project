{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15853",
  "author": "hayhay27",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nFix https://github.com/PowerShell/PowerShell/issues/12641\r\n\r\n- Add `HttpVersionCompletionsAttribute` with completions `1.0`, `1.1`, `2.0`, `3.0`\r\n- Handle input conversions from `string`, `int` and `double` to `Version` (generalize `ArgumentToVersionTransformationAttribute` from `Set-StrictMode`)\r\n- Enrich Verbose mesasge for request with http version and uri\r\n- Add pester tests for `HttpVersion` completions\r\n- Add xUnit tests for `ArgumentToVersionTransformationAttribute`\r\n\r\n## PR Context\r\n\r\nThis PR addressed to issue https://github.com/PowerShell/PowerShell/issues/12641\r\nAt the moment impossible make requests to network resources served only with HTTP/2 cause of default http version in `HttpRequestMessage.Version`=1.1\r\n\r\nChanges in this PR allow to set http version during invocation `Invoke-RestMethod` or `Invoke-WebRequest`\r\n\r\nThis is my first PR to PowerShell. I have a couple of questions about tests. How and where to implement (at least point me right place please).\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [x] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [x] Issue filed: https://github.com/MicrosoftDocs/PowerShell-Docs/issues/8065 <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and opened an issue in the relevant tool repository. This may include:\r\n        - [ ] Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode\r\n        (which runs in a different PS Host).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n",
  "closed_at": "2021-11-02T23:53:37Z",
  "comments": [
    {
      "author": "microsoft-cla-retired[bot]",
      "author_association": "NONE",
      "body": "[![CLA assistant check](https://cla.opensource.microsoft.com/pull/badge/signed)](https://cla.opensource.microsoft.com/PowerShell/PowerShell?pullRequest=15853) <br/>All CLA requirements met.",
      "created_at": "2021-08-01T13:34:03Z",
      "updated_at": "2021-08-01T13:41:32Z"
    },
    {
      "author": "hayhay27",
      "author_association": "CONTRIBUTOR",
      "body": "> \r\n> \r\n> As for test, I think we have no need to do real HTTP requests with specified version since we utilize .Net Runtime features. I think it would enough if you did manual checks and shared results.\r\n> Nevertheless, we must verify that (1) the parameter accepts well-know values without throw, (2) transformation attribute works (it could be xUnit tests), (3) tab-completion works.\r\n\r\n1. do you mean a pester test?\r\n2. done with xunit\r\n3. done with xunit",
      "created_at": "2021-08-01T20:37:56Z",
      "updated_at": "2021-08-01T20:37:56Z"
    },
    {
      "author": "hayhay27",
      "author_association": "CONTRIBUTOR",
      "body": "I have no idea about failed tests )\r\nWhat is that? )",
      "created_at": "2021-08-25T07:41:20Z",
      "updated_at": "2021-08-25T07:41:20Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@hayhay27 Please update the PR description to address latest code changes.",
      "created_at": "2021-08-27T05:13:54Z",
      "updated_at": "2021-08-27T05:13:54Z"
    },
    {
      "author": "hayhay27",
      "author_association": "CONTRIBUTOR",
      "body": "while we keep silence\r\n\r\nI thought with your blessing I can update docs for this PR",
      "created_at": "2021-09-02T13:20:20Z",
      "updated_at": "2021-09-02T13:20:20Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "You can open new issue in PowerShell-Docs repository and add reference in the PR description.",
      "created_at": "2021-09-02T18:01:25Z",
      "updated_at": "2021-09-02T18:01:25Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@hayhay27 Thanks you for your contribution!\r\nA new parameter `-HttpVersion` is added but there is no test case to validate the use of this new parameter. Can you please add functional tests to validate if this new parameter works as expected?",
      "created_at": "2021-09-03T23:37:11Z",
      "updated_at": "2021-09-03T23:37:11Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw Can you confirm that CI OS-s we use support HTTP3 and it is enabled by default? I think we can do only manual check today.",
      "created_at": "2021-09-04T17:09:27Z",
      "updated_at": "2021-09-04T17:09:27Z"
    },
    {
      "author": "hayhay27",
      "author_association": "CONTRIBUTOR",
      "body": "> @daxian-dbw Can you confirm that CI OS-s we use support HTTP3 and it is enabled by default? I think we can do only manual check today.\r\n\r\nWe can do it only for 1.0, 1.1, 2.0. I think we can extrapolate results to 3.0\r\nCould you point me same tests (right place) where I can add new one.",
      "created_at": "2021-09-06T07:51:46Z",
      "updated_at": "2021-09-06T07:51:46Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "I don't know whether the VMs used in CI support HTTP3, but yes, at least validate the new parameter for 1.0, 1.1, and 2.0.\r\nYou can find the `WebCmdlets.test.ps1` at https://github.com/PowerShell/PowerShell/blob/master/test/powershell/Modules/Microsoft.PowerShell.Utility/WebCmdlets.Tests.ps1, which contains all tests for `Invoke-WebRequest` and `Invoke-RestMethod`.\r\n\r\nI already requested the Cmdlet WG to review this PR and the corresponding issue.\r\n",
      "created_at": "2021-09-07T17:12:23Z",
      "updated_at": "2021-09-08T01:45:15Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@hayhay27 Please look CodeFactor issues.",
      "created_at": "2021-09-09T07:45:32Z",
      "updated_at": "2021-09-09T07:45:32Z"
    },
    {
      "author": "hayhay27",
      "author_association": "CONTRIBUTOR",
      "body": "> \r\n> \r\n> @hayhay27 Please look CodeFactor issues.\r\n\r\nJust one question. How to check code style locally?",
      "created_at": "2021-09-09T17:32:21Z",
      "updated_at": "2021-09-09T17:32:21Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> > @hayhay27 Please look CodeFactor issues.\r\n> \r\n> Just one question. How to check code style locally?\r\n\r\nYou have no need to do this locally - see CofeFactor report in the PR.\r\n(but you could temporary add the package https://github.com/DotNetAnalyzers/StyleCopAnalyzers)\n\n<blockquote><img src=\"https://opengraph.githubassets.com/059ce8c991b81df3bb87a95aa03d83cb9c7f4a01e06267f8122c4affd52bf2f4/DotNetAnalyzers/StyleCopAnalyzers\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/DotNetAnalyzers/StyleCopAnalyzers\">GitHub - DotNetAnalyzers/StyleCopAnalyzers: An implementation of StyleCop rules using the .NET Compiler Platform</a></strong></div><div>An implementation of StyleCop rules using the .NET Compiler Platform - GitHub - DotNetAnalyzers/StyleCopAnalyzers: An implementation of StyleCop rules using the .NET Compiler Platform</div></blockquote>",
      "created_at": "2021-09-09T17:48:37Z",
      "updated_at": "2021-09-09T17:48:39Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2021-09-17T02:00:37Z",
      "updated_at": "2021-09-24T19:47:36Z"
    },
    {
      "author": "hayhay27",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov\r\nHi! What can I do to complete this PR?",
      "created_at": "2021-09-24T18:17:05Z",
      "updated_at": "2021-09-24T18:17:05Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@hayhay27 This PR and the corresponding issue need to be reviewed by Cmdlet Working Group. I just pinged that WG again. Thank you for your patience!\r\n\r\nAlso, I would love to get a review from @rjmholt, @JamesWTruher, or @adityapatwardhan.",
      "created_at": "2021-09-24T19:54:41Z",
      "updated_at": "2021-09-24T20:05:02Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2021-10-02T02:00:38Z",
      "updated_at": "2021-10-02T02:00:38Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "The changes in this PR look good and I think the actual feature addition is great. Made some style comments",
      "created_at": "2021-10-05T17:45:57Z",
      "updated_at": "2021-10-05T17:45:57Z"
    },
    {
      "author": "hayhay27",
      "author_association": "CONTRIBUTOR",
      "body": "@rjmholt Thanks a lot!\r\nI applied all your comments\r\n\r\n",
      "created_at": "2021-10-08T17:00:12Z",
      "updated_at": "2021-10-08T17:00:12Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@rjmholt Can you please take another look?",
      "created_at": "2021-10-15T22:18:09Z",
      "updated_at": "2021-10-15T22:18:09Z"
    },
    {
      "author": "pull-request-quantifier[bot]",
      "author_association": "NONE",
      "body": "### ![](https://img.shields.io/static/v1?label=Quantified&message=Large&color=red)\r\n\r\nThis PR has `254` quantified lines of changes. In general, a change size of upto `200` lines is ideal for the best PR experience!\r\n\r\n------\r\n\r\n<details >\r\n    <summary display=\"inline\"> <strong>Quantification details</strong></summary>\r\n    <p />\r\n\r\n```\r\nLabel      : Large\r\nSize       : +186 -68\r\nPercentile : 65.4%\r\n\r\nTotal files changed: 10\r\n\r\nChange summary by file extension:\r\n.cs : +145 -66\r\n.resx : +2 -2\r\n.ps1 : +39 -0\r\n```\r\n> Change counts above are quantified counts, based on the [PullRequestQuantifier customizations](https://github.com/microsoft/PullRequestQuantifier/blob/main/docs/prquantifier-yaml.md).\r\n    \r\n</details>\r\n\r\n\r\n<details>\r\n    <summary display=\"inline\"> <strong>Why proper sizing of changes matters</strong> </summary>\r\n    <p/>\r\n    <p/>\r\n\r\nOptimal pull request sizes drive a better predictable PR flow as they strike a\r\nbalance between between PR complexity and PR review overhead. PRs within the\r\noptimal size (typical small, or medium sized PRs) mean:\r\n\r\n- Fast and predictable releases to production:\r\n  - Optimal size changes are more likely to be reviewed faster with fewer\r\niterations.\r\n  - Similarity in low PR complexity drives similar review times.\r\n- Review quality is likely higher as complexity is lower:\r\n  - Bugs are more likely to be detected.\r\n  - Code inconsistencies are more likely to be detetcted.\r\n- Knowledge sharing is improved within the participants:\r\n  - Small portions can be assimilated better.\r\n- Better engineering practices are exercised:\r\n  - Solving big problems by dividing them in well contained, smaller problems.\r\n  - Exercising separation of concerns within the code changes.\r\n\r\n#### What can I do to optimize my changes\r\n\r\n- Use the PullRequestQuantifier to quantify your PR accurately\r\n  - Create a context profile for your repo using the [context generator](https://github.com/microsoft/PullRequestQuantifier/releases)\r\n  - Exclude files that are not necessary to be reviewed or do not increase the review complexity. Example: Autogenerated code, docs, project IDE setting files, binaries, etc. Check out the `Excluded` section from your `prquantifier.yaml` context profile. \r\n  - Understand your typical change complexity, drive towards the desired complexity by adjusting the label mapping in your `prquantifier.yaml` context profile.\r\n  - Only use the labels that matter to you, [see context specification](./docs/prquantifier-yaml.md) to customize your `prquantifier.yaml` context profile.\r\n- Change your engineering behaviors\r\n  - For PRs that fall outside of the desired spectrum, review the details and check if:\r\n    - Your PR could be split in smaller, self-contained PRs instead\r\n    - Your PR only solves one particular issue. (For example, don't refactor and code new features in the same PR).\r\n\r\n#### How to interpret the change counts in git diff output\r\n\r\n- One line was added: `+1 -0`\r\n- One line was deleted: `+0 -1`\r\n- One line was modified: `+1 -1` (git diff doesn't know about modified, it will\r\ninterpret that line like one addition plus one deletion)\r\n- Change percentiles: Change characteristics (addition, deletion, modification)\r\nof this PR in relation to all other PRs within the repository.\r\n\r\n</details>\r\n\r\n<p />\r\n\r\n------\r\n\r\nWas this comment helpful? <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoiaGF5aGF5MjciLCJSZXBvc2l0b3J5TGluayI6Imh0dHBzOi8vZ2l0aHViLmNvbS9Qb3dlclNoZWxsL1Bvd2VyU2hlbGwiLCJQdWxsUmVxdWVzdExpbmsiOiJodHRwczovL2dpdGh1Yi5jb20vUG93ZXJTaGVsbC9Qb3dlclNoZWxsL3B1bGwvMTU4NTMiLCJFdmVudFR5cGUiOiJUaHVtYnNVcCJ9&amp;anonymous=True\" target=\"_blank\" title=\"Thumbs up\"><strong>:thumbsup:</strong></a> <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoiaGF5aGF5MjciLCJSZXBvc2l0b3J5TGluayI6Imh0dHBzOi8vZ2l0aHViLmNvbS9Qb3dlclNoZWxsL1Bvd2VyU2hlbGwiLCJQdWxsUmVxdWVzdExpbmsiOiJodHRwczovL2dpdGh1Yi5jb20vUG93ZXJTaGVsbC9Qb3dlclNoZWxsL3B1bGwvMTU4NTMiLCJFdmVudFR5cGUiOiJOZXV0cmFsIn0=&amp;anonymous=True\" target=\"_blank\" title=\"Neutral\"><strong>&nbsp;:ok_hand:</strong></a> <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoiaGF5aGF5MjciLCJSZXBvc2l0b3J5TGluayI6Imh0dHBzOi8vZ2l0aHViLmNvbS9Qb3dlclNoZWxsL1Bvd2VyU2hlbGwiLCJQdWxsUmVxdWVzdExpbmsiOiJodHRwczovL2dpdGh1Yi5jb20vUG93ZXJTaGVsbC9Qb3dlclNoZWxsL3B1bGwvMTU4NTMiLCJFdmVudFR5cGUiOiJUaHVtYnNEb3duIn0=&amp;anonymous=True\" target=\"_blank\" title=\"Thumbs down\"><strong>&nbsp;:thumbsdown:</strong></a> (<a href=\"MAILTO:prquantifier@microsoft.com\" title=\"Mail to prquantifier@microsoft.com\">Email</a>)\r\n[Customize PullRequestQuantifier](https://github.com/PowerShell/PowerShell/blob/master/.github/prquantifier.yaml) for this repository.\r\n\r\n",
      "created_at": "2021-11-02T21:30:07Z",
      "updated_at": "2021-11-02T21:30:07Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@hayhay27 Thank you for your contribution!",
      "created_at": "2021-11-02T23:54:18Z",
      "updated_at": "2021-11-02T23:54:18Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.3.0-preview.1` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.3.0-preview.1)\n",
      "created_at": "2021-12-16T19:59:42Z",
      "updated_at": "2021-12-16T19:59:42Z"
    }
  ],
  "created_at": "2021-08-01T13:33:50Z",
  "number": 15853,
  "state": "closed",
  "title": "Add HttpVersion parameter to Invoke-WebRequest cmdlet",
  "updated_at": "2021-12-16T19:59:42Z"
}