{
  "_url": "https://github.com/PowerShell/PowerShell/issues/14469",
  "author": "iSazonov",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nFix #12795\r\n\r\nWhile modern (SSD) disks are fast, this does not mean that disk operations have become so insignificant that they can be neglected. For case correction we use additional disk operations (enumerations).\r\n\r\nIt is very weird that we do case corrections for file paths which are excluded in the PR:\r\n- on Linux\r\n- for operations without output like IsItemContainer()\r\n\r\n## PR Context\r\n\r\n#9250 Return correct casing of filesystem path during normalization\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [ ] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2021-11-02T05:41:39Z",
  "comments": [
    {
      "author": "xavierd",
      "author_association": "NONE",
      "body": "I'm wondering if this would also help to fix #13432.",
      "created_at": "2020-12-21T02:10:16Z",
      "updated_at": "2020-12-21T02:10:16Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> I'm wondering if this would also help to fix #13432.\r\n\r\n@xavierd  I hope. I replaced full enumeration with getting first element from IEnumerable. Could you please download compiled artifact from the PR and analyze PerfView traces to confirm.",
      "created_at": "2020-12-21T05:30:19Z",
      "updated_at": "2020-12-21T05:30:19Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2020-12-28T14:00:07Z",
      "updated_at": "2020-12-28T14:00:07Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2021-05-28T14:00:09Z",
      "updated_at": "2021-05-28T14:00:09Z"
    },
    {
      "author": "JamesWTruher",
      "author_association": "MEMBER",
      "body": "While the WG agrees that something might be done, we have an overriding concern  for compatibility and being comprehensive in the light that some unix file systems may be case insensitive. We have decided to reject this PR for the following reasons: \r\n- high level of risk due to complexity in current code base\r\n- we need to have expected behavior well documented \r\n- we need to have proper, comprehensive validation for new behaviors",
      "created_at": "2021-08-23T21:02:45Z",
      "updated_at": "2021-08-23T21:02:45Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> While the WG agrees that something might be done, we have an overriding concern for compatibility and being comprehensive in the light that some unix file systems may be case insensitive. We have decided to reject this PR for the following reasons:\r\n> \r\n> * high level of risk due to complexity in current code base\r\n> * we need to have expected behavior well documented\r\n> * we need to have proper, comprehensive validation for new behaviors\r\n\r\nInteresting! :-) Could please the WG point me RFC, public discussion and important business scenarios for adding the feature? Did the WG explicitly measure and approve 5x, 10x and more extra P/Invokes for every path in processing? Is the opinion of the WG unapologetically strict that the main thing is that I should see in the console once a day \"Abc\" instead of \"abc\", although I do not care about it and I need my scripts run every minute to work as fast as possible?  ",
      "created_at": "2021-08-24T09:19:30Z",
      "updated_at": "2021-08-24T09:19:30Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2021-08-31T14:00:39Z",
      "updated_at": "2021-08-31T14:00:39Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Given that the engine WG has rejected this PR, I will close it for housekeeping purpose.",
      "created_at": "2021-11-02T05:41:39Z",
      "updated_at": "2021-11-02T05:41:39Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I can't agree with that. It makes absolutely no sense to do this in scripts. For cosmetic effect we make file operations slow. PowerShell is already bad with files and this makes it unusable at all. Of course this is not a problem if you just type `cd /var/log`, but I have to say goodbye to PowerShell every time for large disks.\r\nIt's a shame that PowerShell remains a toy not suitable for serious work in a corporate environment.",
      "created_at": "2021-11-02T11:58:20Z",
      "updated_at": "2021-11-02T11:58:20Z"
    },
    {
      "author": "mi-hol",
      "author_association": "NONE",
      "body": "@SteveL-MSFT As a consequence of this WG decision the slogan \"PowerShell for every system!\" should be removed from github\u00b4s About page!",
      "created_at": "2021-12-01T11:14:34Z",
      "updated_at": "2021-12-01T11:14:34Z"
    }
  ],
  "created_at": "2020-12-20T18:29:27Z",
  "number": 14469,
  "state": "closed",
  "title": "Reduce aggressive correcting casing of file system paths",
  "updated_at": "2021-12-01T11:14:34Z"
}