{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11875",
  "author": "Life3Code",
  "body": "While testing the new Start-ThreadJob in Windows Server 2019, I kicked off 10000 back-end jobs with the command below:\r\n    \r\n    _**1..10000 | % {Start-ThreadJob -Name \"Test\" -ScriptBlock {sleep 3} -ThrottleLimit 2048}**_\r\n\r\nThe pwsh.exe process acquired most of the system memory, which is expected. After finished testing, I ran _**Get-Job | Remove-Job**_ to release the system resource, however the memory in pwsh.exe process is not released, it still holds a large amount of memory.",
  "closed_at": "2020-02-18T20:52:09Z",
  "comments": [
    {
      "author": "anmenaga",
      "author_association": "CONTRIBUTOR",
      "body": "PowerShell is a .NET app, so it is .NET that manages memory; `Remove-Job` just makes job-related memory available for [.NET garbage collection](https://docs.microsoft.com/en-us/dotnet/standard/garbage-collection/fundamentals).\r\nUsed memory should go down if you force .NET garbage collection:\r\n```\r\nPS C:\\> Get-Job | Remove-Job -Force\r\nPS C:\\> \"Memory used before collection: $([System.GC]::GetTotalMemory($false))\"\r\nMemory used before collection: 4633516304\r\nPS C:\\> [System.GC]::Collect()\r\nPS C:\\> \"Memory used after full collection: $([System.GC]::GetTotalMemory($true))\"\r\nMemory used after full collection: 83220320\r\n```",
      "created_at": "2020-02-18T20:19:33Z",
      "updated_at": "2020-02-18T20:19:33Z"
    },
    {
      "author": "Life3Code",
      "author_association": "NONE",
      "body": "Thank you. memory consumption remained low after running garbage collection.This fixed the problem, ",
      "created_at": "2020-02-18T20:52:09Z",
      "updated_at": "2020-02-18T20:52:09Z"
    }
  ],
  "created_at": "2020-02-18T19:03:34Z",
  "labels": [
    "Issue-Question"
  ],
  "number": 11875,
  "state": "closed",
  "title": "Start-ThreadJob holds a large amount of memory",
  "updated_at": "2020-02-18T20:52:09Z"
}