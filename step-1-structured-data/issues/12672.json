{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12672",
  "author": "MattKotsenas",
  "body": "# Steps to reproduce\r\n\r\n```powershell\r\n# Step 1. Create an object array to hold our streams\r\n[object[]]$BootOptions = @()\r\n\r\n#Step 2. Add a COM object to the array\r\n$BootOptions += (New-Object -ComObject IMAPI2FS.BootOptions)\r\n\r\n# Step 3. Create another COM object who's property `BootImageOptionsArray`\r\n# is a `SAFEARRAY(Variant)`\r\n$Image = New-Object -ComObject IMAPI2FS.MsftFileSystemImage\r\n\r\n# Step 4. Create a copy of the array by iterating and calling `SetValue`\r\n$copySetValue = [array]::CreateInstance([object], $BootOptions.Count)\r\nfor ($i = 0; $i -lt $BootOptions.Count; $i++)\r\n{\r\n    $copySetValue.SetValue($BootOptions[$i], $i)\r\n}\r\n\r\n# Step 5. Create another copy of the array using indexers\r\n$copyIndexer = [array]::CreateInstance([object], $BootOptions.Count)\r\nfor ($i = 0; $i -lt $BootOptions.Count; $i++)\r\n{\r\n    $copyIndexer[$i] = $BootOptions[$i]\r\n}\r\n\r\n# Step 6. Try to assign the array\r\n$Image.BootImageOptionsArray = $copySetValue # works\r\n$Image.BootImageOptionsArray = $BootOptions # throws exception\r\n$Image.BootImageOptionsArray = $copyIndexer # throws exception\r\n```\r\n\r\n# Expected behavior\r\n\r\n```none\r\nAssignment to BootImageOptionsArray works in all three cases.\r\n\r\nI can't explain how these three arrays are different (all appear as System.Object[] to me).\r\nI don't believe that this issue is unique to the particular COM objects I'm using in the repro, though I can't be sure.\r\n```\r\n\r\n# Actual behavior\r\n\r\n```none\r\nAssignment works when using $copySetValue, but in the other two cases fails with the following exception:\r\n\r\nErrorRecord                 : Exception setting \"BootImageOptionsArray\": \"Specified cast is not valid.\"\r\nWasThrownFromThrowStatement : False\r\nTargetSite                  : Void BasePropertySet(System.Management.Automation.PSProperty, System.Object, Boolean)\r\nStackTrace                  :    at System.Management.Automation.Adapter.BasePropertySet(PSProperty property, Object setValue, Boolean convert)\r\n                                 at System.Management.Automation.PSProperty.set_Value(Object value)\r\n                                 at System.Management.Automation.Language.PSSetMemberBinder.SetAdaptedValue(Object obj, String member, Object value)\r\n                                 at System.Dynamic.UpdateDelegates.UpdateAndExecute2[T0,T1,TRet](CallSite site, T0 arg0, T1 arg1)\r\n                                 at System.Management.Automation.Interpreter.DynamicInstruction`3.Run(InterpretedFrame frame)\r\n                                 at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.Run(InterpretedFrame frame)\r\nMessage                     : Exception setting \"BootImageOptionsArray\": \"Specified cast is not valid.\"\r\nData                        : {System.Management.Automation.Interpreter.InterpretedFrameInfo}\r\nInnerException              : System.InvalidCastException: Specified cast is not valid.\r\nHelpLink                    :\r\nSource                      : System.Management.Automation\r\nHResult                     : -2146233087\r\n```\r\n\r\n# Environment data\r\n\r\n```none\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0\r\nOS                             Microsoft Windows 10.0.19041\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n\r\n```\r\n",
  "closed_at": "2021-01-16T12:17:24Z",
  "comments": [
    {
      "author": "MattKotsenas",
      "author_association": "NONE",
      "body": "Any update here? Anything else I can provide to help troubleshoot this issue? Thanks!",
      "created_at": "2020-10-23T20:18:00Z",
      "updated_at": "2020-10-23T20:18:00Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "The result of `New-Object -ComObject etc` is wrapped in a `PSObject`.  These wrappers are usually invisible, but that's not always feasible. Passing an array to an interop API (like COM or .NET) is one of the scenarios where it isn't.\r\n\r\nThe middle one works because if a .NET method takes `object`, the method binder will unwrap the `PSObject` before passing it to the API.\r\n\r\nThe easiest fix is to change the `$BootOptions` assignment to this:\r\n\r\n```powershell\r\n$BootOptions += (New-Object -ComObject IMAPI2FS.BootOptions).psobject.BaseObject\r\n```",
      "created_at": "2020-10-23T20:36:50Z",
      "updated_at": "2020-10-23T20:37:25Z"
    }
  ],
  "created_at": "2020-05-15T00:50:44Z",
  "labels": [
    "Issue-Question",
    "WG-Engine",
    "Resolution-Answered"
  ],
  "number": 12672,
  "state": "closed",
  "title": "InvalidCastException when trying to assign object[] to SAFEARRAY(Variant)",
  "updated_at": "2021-01-16T12:17:24Z"
}