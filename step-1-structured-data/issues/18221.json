{
  "_url": "https://github.com/PowerShell/PowerShell/issues/18221",
  "author": "dkaszews",
  "body": "### Prerequisites\n\n- [X] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\n\n### Steps to reproduce\n\nRegression from 7.2.4 on Linux ARM64 (I also use the same 7.3.0-preview-8 on my work Windows machine and it does not have the same issue).\r\n\r\nStart writing any input, then press Ctrl-C.\n\n### Expected behavior\n\n```console\nLine gets cleared\n```\n\n\n### Actual behavior\n\n```console\nA literal `@` gets added to the line\n```\n\n\n### Error details\n\n_No response_\n\n### Environment data\n\n```powershell\nName                           Value\r\n----                           -----\r\nPSVersion                      7.3.0-preview.8\r\nPSEdition                      Core\r\nGitCommitId                    7.3.0-preview.8\r\nOS                             Linux 5.15.0-1015-raspi #17-Ubuntu SMP PREEMPT Mon Sep 12 13:14:51 UTC 2022\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\n```\n\n\n### Visuals\n\n![image](https://user-images.githubusercontent.com/26599495/194141626-f0a04a8d-f285-4752-ae1e-9c8ae3ae1508.png)\r\n",
  "closed_at": "2022-10-07T10:34:42Z",
  "comments": [
    {
      "author": "dkaszews",
      "author_association": "CONTRIBUTOR",
      "body": "Slightly different reproduction with `-NoProfile` - nothing happens, the line is not cleared but also `@` is not added.\r\n\r\nReproduces in raw terminal, in NeoVim terminal buffer, inside tmux, etc. Also reproduces when ssh'ing from my phone, so it is likely not a terminal issue (additionally shown by 7.2.4 working fine on same connection).",
      "created_at": "2022-10-05T19:12:01Z",
      "updated_at": "2022-10-05T19:12:01Z"
    },
    {
      "author": "237dmitry",
      "author_association": "NONE",
      "body": "I use `ESC` to clear line or script block.",
      "created_at": "2022-10-05T19:25:18Z",
      "updated_at": "2022-10-05T19:25:18Z"
    },
    {
      "author": "dkaszews",
      "author_association": "CONTRIBUTOR",
      "body": "Did quick bisection, the breaking change is between preview.7 and preview.8, rolled back for now:\r\n```diff\r\n+ 7.2.6\r\n+ 7.3.0-preview.4\r\n+ 7.3.0-preview.6\r\n+ 7.3.0-preview.7\r\n- 7.3.0-preview.8\r\n```",
      "created_at": "2022-10-05T19:27:42Z",
      "updated_at": "2022-10-05T19:30:25Z"
    },
    {
      "author": "dkaszews",
      "author_association": "CONTRIBUTOR",
      "body": "> I use `ESC` to clear line or script block.\r\n\r\n@237dmitry I use `Set-PSReadLineOption -EditMode vi`, so `ESC` just exits the insert mode and does not clear line. It may also be part of the reason behind differences in behavior with `-NoProfile`.",
      "created_at": "2022-10-05T19:30:16Z",
      "updated_at": "2022-10-05T19:30:47Z"
    },
    {
      "author": "237dmitry",
      "author_association": "NONE",
      "body": ">  I use Set-PSReadLineOption -EditMode vi\r\n\r\nThen `Ctrl-U`\r\n\r\nPS. In bash 'Ctrl-C' does not work either. Terminal Tilix.",
      "created_at": "2022-10-05T19:37:59Z",
      "updated_at": "2022-10-05T19:41:11Z"
    },
    {
      "author": "dkaszews",
      "author_association": "CONTRIBUTOR",
      "body": "`Ctrl-U` has exact same behavior: line not cleared, `@` added",
      "created_at": "2022-10-05T19:40:13Z",
      "updated_at": "2022-10-05T19:40:13Z"
    },
    {
      "author": "237dmitry",
      "author_association": "NONE",
      "body": "`Get-PSReadLineKeyHandler` show `Ctrrl-Home`\r\n\r\n```\r\nCtrl+Home        BackwardDeleteInput Delete text from the cursor to the start of the input\r\n```",
      "created_at": "2022-10-05T19:44:35Z",
      "updated_at": "2022-10-05T19:44:35Z"
    },
    {
      "author": "dkaszews",
      "author_association": "CONTRIBUTOR",
      "body": "@237dmitry That's not a solution, just workaround. `Ctrl+Home` does work, but on my Chromebook it requires pressing `Ctrl+Search+Left`, much less convenient than `Ctrl+C`. Plus it does not do the same if the cursor is not at the end. ",
      "created_at": "2022-10-05T20:33:46Z",
      "updated_at": "2022-10-05T20:33:46Z"
    },
    {
      "author": "dkaszews",
      "author_association": "CONTRIBUTOR",
      "body": "Testing with `git bisect v7.3.0-preview.7 v7.3.0-preview.8`, it looks like #18106 is at fault:\r\n\r\n```pwsh\r\n578aef29af131a8779a3b70106ad32f531e202f4 is the first bad commit\r\ncommit 578aef29af131a8779a3b70106ad32f531e202f4\r\nAuthor: Aditya Patwardhan <adityap@microsoft.com>\r\nDate:   Thu Sep 15 16:55:16 2022 -0700\r\n\r\n    [release/v7.3.0-rc.1] Update `DotnetRuntimeMetadata.json` for .NET 7 RC1 build (#18106)\r\n\r\n DotnetRuntimeMetadata.json                         |  8 +++---\r\n assets/wix/files.wxs                               | 30 +++++++++++-----------\r\n global.json                                        |  2 +-\r\n ...Microsoft.PowerShell.Commands.Management.csproj |  2 +-\r\n .../Microsoft.PowerShell.Commands.Utility.csproj   |  6 ++---\r\n .../Microsoft.PowerShell.CoreCLR.Eventing.csproj   |  2 +-\r\n .../Microsoft.PowerShell.SDK.csproj                | 20 +++++++--------\r\n .../Microsoft.WSMan.Management.csproj              |  2 +-\r\n .../System.Management.Automation.csproj            | 14 +++++-----\r\n .../BenchmarkDotNet.Extensions.csproj              |  4 +--\r\n .../ResultsComparer/ResultsComparer.csproj         |  2 +-\r\n test/tools/TestService/TestService.csproj          |  2 +-\r\n test/tools/WebListener/WebListener.csproj          |  4 +--\r\n 13 files changed, 49 insertions(+), 49 deletions(-)\r\n```\r\n\r\nUsing `7.3.0-preview.8` with #18106 reverted does in fact fix the issue.",
      "created_at": "2022-10-05T20:39:55Z",
      "updated_at": "2022-10-05T20:39:55Z"
    },
    {
      "author": "237dmitry",
      "author_association": "NONE",
      "body": "> Ctrl+Home does work\r\n\r\n`Set-PSReadLineKeyHandler`\r\n\r\nMaybe `^C` conflicts:\r\n```\r\nCtrl+C           Copy                Copy selected region to the system clipboard.  If no region is selected, copy the whole line\r\nCtrl+c           CopyOrCancelLine    Either copy selected text to the clipboard, or if no text is selected, cancel editing the line with CancelLine.\r\n```\r\nPSReadLine v.2.2.6",
      "created_at": "2022-10-05T20:55:26Z",
      "updated_at": "2022-10-05T21:00:45Z"
    },
    {
      "author": "fMichaleczek",
      "author_association": "NONE",
      "body": "https://github.com/PowerShell/PowerShell/releases/tag/v7.3.0-preview.8\r\n\r\n![image](https://user-images.githubusercontent.com/6187529/194532225-2a6fc1d5-a122-432e-ae2b-60f59c24e1cd.png)\r\n\n\n<blockquote><img src=\"https://opengraph.githubassets.com/54b23b09b0fd10206ed63227a0507d04f63573fa4198eb75a7de6dabb257dbde/PowerShell/PowerShell/releases/tag/v7.3.0-preview.8\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"/PowerShell/PowerShell/releases/tag/v7.3.0-preview.8\">Release v7.3.0-preview.8 Release of PowerShell \u00b7 PowerShell/PowerShell</a></strong></div><div>7.3.0-preview.8 - 2022-09-20\nNOTE: Known issue about Console.ReadKey() on Unix platforms that the KeyChar is not preserved for Ctrl+Letter inputs. This causes all key bindings in the form of Ctrl+L...</div></blockquote>",
      "created_at": "2022-10-07T10:24:24Z",
      "updated_at": "2022-10-07T10:24:26Z"
    },
    {
      "author": "dkaszews",
      "author_association": "CONTRIBUTOR",
      "body": "@fMichaleczek Thanks, I somehow missed it when downloading the package \ud83e\udd26 . It checks out as the commit I found by bisection updates .NET. At least I had some fun refreshing how to use `git bisect`. ",
      "created_at": "2022-10-07T10:34:42Z",
      "updated_at": "2022-10-07T10:34:42Z"
    }
  ],
  "created_at": "2022-10-05T19:06:49Z",
  "labels": [],
  "number": 18221,
  "state": "closed",
  "title": "Ctrl-C does not clear line",
  "updated_at": "2022-10-07T10:34:48Z"
}