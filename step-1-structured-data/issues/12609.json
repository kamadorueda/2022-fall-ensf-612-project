{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12609",
  "author": "weshaggard",
  "body": "My team uses powershell scripts a lot as part of our Azure DevOps pipelines and there is a lot of times we don't have enough information to debug when something goes wrong so I'm been trying to find a nice easy way to output the exact command line so we can try and reproduce it locally. I found an old PS blog post https://devblogs.microsoft.com/powershell/getting-all-your-parameters/ which I thought would do the job so I started using [MyInvocation.Line](https://github.com/Azure/azure-sdk-tools/commit/80de19bbcd4226c37c0085036bdf15b1022afd0c#diff-bb4f526089847eee6eb5471ec830d63c) but the first time I needed to use this information to debug I realized it only contained the first line of the command line and since we often split long command lines across multiple lines to make reading easier that didn't end up helping like I wanted. \r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\n> function test { $myinvocation.line.substring($myInvocation.OffSetInLine-1) }\r\n> test 1 2 3 `\r\n>> 4 5 6\r\n```\r\n\r\n# Expected behavior\r\n\r\n```none\r\ntest 1 2 3 4 5 6\r\n```\r\nor perhaps\r\n```none\r\ntest 1 2 3 `\r\n4 5 6\r\n```\r\n\r\n# Actual behavior\r\n\r\n```none\r\ntest 1 2 3 `\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\n> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0\r\nOS                             Microsoft Windows 10.0.18363\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\nI'd also be happy with another simple way to echo the exact command line of a script call. ",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Code for the Line:\r\nhttps://github.com/PowerShell/PowerShell/blob/f4382202ae4622bf26795e29a7b39b9d7cdfb3fb/src/System.Management.Automation/engine/InvocationInfo.cs#L259-L270\r\n\r\n@TylerLeonhardt @SeeminglyScience  Can we return `ScriptPosition.Text`? Or it break PSES?",
      "created_at": "2020-05-08T17:49:38Z",
      "updated_at": "2020-05-08T17:52:32Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> My team uses powershell scripts a lot as part of our Azure DevOps pipelines and there is a lot of times we don't have _enough information to debug_ when something goes wrong\r\n\r\n/cc @joeyaiello @SteveL-MSFT for information.",
      "created_at": "2020-05-08T17:52:08Z",
      "updated_at": "2020-05-08T17:52:08Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "Ideally `ScriptPosition` would just become public.  I don't think the change you suggested would necessarily break anything because iirc PSES typically directly accesses `ScriptPosition` via reflection. That said, it would be sort of a lie since it isn't necessarily a line.  If the property was named `Statement` I'd be all for it.",
      "created_at": "2020-05-08T20:09:17Z",
      "updated_at": "2020-05-08T20:10:12Z"
    },
    {
      "author": "Jaykul",
      "author_association": "CONTRIBUTOR",
      "body": "I'm fairly certain we'd all be content with a \"Statement\" property instead ...",
      "created_at": "2022-07-09T03:41:47Z",
      "updated_at": "2022-07-09T03:41:47Z"
    },
    {
      "author": "IISResetMe",
      "author_association": "COLLABORATOR",
      "body": "WG-Engine reviewed this issue yesterday, and we generally agree the full extent of the originating statement should be made part of the public API, but that the `Line` property should retain its current behavior to guard against existing use cases expecting a single-line string. \r\n\r\nI expect to have a PR ready for further discussion later this week.",
      "created_at": "2022-08-09T08:43:02Z",
      "updated_at": "2022-08-09T08:43:02Z"
    }
  ],
  "created_at": "2020-05-08T17:03:00Z",
  "labels": [
    "Issue-Question",
    "WG-Engine",
    "Needs-Triage"
  ],
  "number": 12609,
  "state": "open",
  "title": "MyInvocation.Line doesn't work for commands split across multiple lines",
  "updated_at": "2022-08-09T08:43:03Z"
}