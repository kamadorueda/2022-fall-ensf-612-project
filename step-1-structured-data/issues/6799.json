{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6799",
  "author": "Jackbennett",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\n- Windows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nIf it is a bug report:\r\n- make sure you are able to repro it on the latest released version. \r\nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://github.com/PowerShell/PowerShell/blob/master/docs/KNOWNISSUES.md).\r\n- Fill out the following repro template:\r\n\r\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\r\n-->\r\n\r\nSteps to reproduce\r\n------------------\r\n1. Install the preview MSI\r\n2. Click Open at a shadow copy prior date;\r\n\r\n![image](https://user-images.githubusercontent.com/791134/39518106-c80ce8c0-4df9-11e8-9cbd-8b7ef94c674f.png)\r\n\r\nExpected behavior\r\n-----------------\r\nWindows explorer at this file path.\r\n\r\nActual behavior\r\n---------------\r\npwsh.exe at path `PS V:\\@GMT-2018.04.23-10.11.03\\` (of the time opened)\r\n\r\nWork Around\r\n--------------\r\nI can just type `start .` to get explorer\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.1.0-preview.2\r\nPSEdition                      Core\r\nGitCommitId                    v6.1.0-preview.2\r\nOS                             Microsoft Windows 10.0.16299\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2018-10-04T18:08:16Z",
  "comments": [
    {
      "author": "GeeLaw",
      "author_association": "NONE",
      "body": "Did you mean installing the preview PowerShell somehow makes File Explorer think `pwsh.exe` is the shell program (which is usually `explorer.exe`)?",
      "created_at": "2018-05-02T14:27:45Z",
      "updated_at": "2018-05-02T14:27:45Z"
    },
    {
      "author": "Jackbennett",
      "author_association": "NONE",
      "body": "Yeh but it's not like win-e does anything different. I'm not sure what\nhandler would have changed.\n\nOn Wed, 2 May 2018, 3:28 pm Gee Law, <notifications@github.com> wrote:\n\n> Did you mean installing the preview PowerShell somehow makes File Explorer\n> think pwsh.exe is the shell program (which is usually explorer.exe)?\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/PowerShell/PowerShell/issues/6799#issuecomment-385996889>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAwSXlyPY6YFUdlrDP1JsiWkHasup5VYks5tucJ0gaJpZM4TvMxV>\n> .\n>\n",
      "created_at": "2018-05-02T16:36:42Z",
      "updated_at": "2018-05-02T16:36:42Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "/cc @bergmeister Could you please comment?",
      "created_at": "2018-05-03T08:45:16Z",
      "updated_at": "2018-05-03T08:45:16Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "On Windows 10 1803, when I click open on one of the previous versions of a library folder, then nothing happens at all, no matter if I have installed preview2, the latest preview or uninstall pwsh completely (but it works when opening e.g. a text file inside one of those folders)...\r\nThis should not be related to the optional context menu that was added in 6.1 but it would be good to know whether the behaviour is different on your machine if you have have the explorer context menu option in the PowerShell installer enabled or not. I rather suspect some other program has changed your system. Does this behaviour stop happening if you uninstall the preview and install 6.0.2 instead @Jackbennett ?\r\nOtherwise, just for the record: After 6.0.2, MSFT did some compliance refactoring of the installer but I was not involved in that.",
      "created_at": "2018-05-03T12:24:17Z",
      "updated_at": "2018-05-03T13:10:17Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "@Jackbennett Does this still happen with `6.1.0` in your environment?",
      "created_at": "2018-10-01T21:56:08Z",
      "updated_at": "2018-10-01T21:56:08Z"
    },
    {
      "author": "Jackbennett",
      "author_association": "NONE",
      "body": "I'm afraid to report the same issue\r\n\r\n![image](https://user-images.githubusercontent.com/791134/46342429-9a0ce180-c632-11e8-8b06-58a7a9e6f2c9.png)\r\n\r\n\r\nSorry it's been a while but on the up side this is completely re-imaged with MDT 1709 windows 10 x64 which was a fresh build from a microsoft ISO install from the initial report.\r\n\r\n# Steps to reproduce\r\n1. Find a folder with previous versions\r\n1. Select \"open\" on an older folder version\r\n1. You will see explorer open at that point in time.\r\n1. Install `PowerShell-6.1.0-win-x64.msi`\r\n1. Click open again, You now get pwsh.exe at the previous version file path\r\n\r\n```\r\n> $PsversionTable\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.1.0\r\nPSEdition                      Core\r\nGitCommitId                    6.1.0\r\nOS                             Microsoft Windows 10.0.16299\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\nWinver: \r\n![image](https://user-images.githubusercontent.com/791134/46342626-2b7c5380-c633-11e8-8df7-5ac949a3bd65.png)\r\n\r\n\r\n",
      "created_at": "2018-10-02T10:08:24Z",
      "updated_at": "2018-10-02T10:08:24Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "@Jackbennett Thanks for the detailed report. I suspect this might be related to #7815 that I started to investigate yesterday. I hope to have an answer in the next days. For the moment the recommendation is to re-install PowerShell without the context menu option if this is a blocking problem.",
      "created_at": "2018-10-02T10:36:58Z",
      "updated_at": "2018-10-02T10:36:58Z"
    },
    {
      "author": "Jackbennett",
      "author_association": "NONE",
      "body": "For completeness removed/installed without the context option ticked does indeed fix the issue. Interesting  coincidence.",
      "created_at": "2018-10-02T11:36:50Z",
      "updated_at": "2018-10-02T11:36:50Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for confirming this (as it proves the problem is caused by this feature). I will investigate but there is a chance that this might even be a bug in Windows",
      "created_at": "2018-10-02T12:44:06Z",
      "updated_at": "2018-10-02T12:44:06Z"
    },
    {
      "author": "GeeLaw",
      "author_association": "NONE",
      "body": "Perhaps it is because PowerShell context menu assumed the default verb for folders?",
      "created_at": "2018-10-02T15:59:25Z",
      "updated_at": "2018-10-02T15:59:25Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "@GeeLaw  Where did you see that we assume the default verb for folders?\r\nI checked all the registry keys and could boil it down to the HKCR\\Directory\\shell\\PowerShell6x64 entry and HKCR\\Directory\\ContextMenus\\PowerShell6x64\\shell\\open, which is necessary for non-admin sub menu context menu.",
      "created_at": "2018-10-02T21:31:42Z",
      "updated_at": "2018-10-02T22:18:59Z"
    },
    {
      "author": "GeeLaw",
      "author_association": "NONE",
      "body": "@bergmeister Sorry, it isn't because PS6 assumes the **default** verb, it is because it takes the `open` verb -- the cascaded menu verb is named as `open`. If `SEE_MASK_INVOKEIDLIST` is used, this verb will be found by `ShellExecuteEx`, which is the case for \"Open\" in \"Previous Versions\".\r\n\r\nIf you rename `HKCR\\Directory\\ContextMenus\\PowerShell6x64\\shell\\open` to `openpwsh`, the problem will go away.\r\n\r\nOrdinarily, the `open` verb is found in `HKLM\\SOFTWARE\\Classes\\Folder\\shell\\open`. PowerShell's context menu overrides this because it is found **later** than the should-be `open`.\r\n\r\nI'm writing a blog entry for a detailed analysis on this issue. Will be modifying this comment to reflect the entry later. *Updated:* [here](https://geelaw.blog/entries/pwsh-6-preview-messing-verbs/) it is.\r\n\r\nIt is also worth mentioning that currently the installer does **not** install on a per-user basis. The cascaded context menu will always be created for all users. As a piece of advice, the installer should be more specific on whether to install the keys to `HKCU\\Software\\Classes` or `HKLM\\SOFTWARE\\Classes`. Even if the installer is running as administrator, the value still might be written to `HKCU\\Software\\Classes`, if the key already exists in `HKCU`.",
      "created_at": "2018-10-02T23:10:23Z",
      "updated_at": "2018-10-03T00:40:19Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "@GeeLaw Thanks for the detailed answer, I opened a pull request with a fix for the `open` verb to use `openpwsh` but I don't think we should change `runas` to `runaspwsh` due to the required elevation (and having a flickering launcher instead is not preferred instead, I proposed this already when I originally did the feature) because as far as I can see, continuing to use the default verb for `runas` should not cause a problem or is probably an edge case to be disregarded.",
      "created_at": "2018-10-03T09:18:20Z",
      "updated_at": "2018-10-03T09:18:20Z"
    },
    {
      "author": "JHBoricua",
      "author_association": "NONE",
      "body": "Has there been a regression of this? I just installed the latest Powershell Core MSI (PowerShell-6.1.3-win-x64) and it's opening the previous version of a folder in a powershell window. Uninstalling PowerShell core reverts the behavior back to normal.\r\n\r\nOr has something changed and this is the intended behavior now? ",
      "created_at": "2019-03-07T21:54:12Z",
      "updated_at": "2019-03-07T21:54:12Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "@JHBoricua The fix was in https://github.com/PowerShell/PowerShell/pull/7932/files You can just check your registry entries. The fix was made after 6.1 was released, therefore it is very unlikely, the commit was included in one of the patches (which are  mostly just for security critical patching of the runtime, etc.). Please try 6.2-rc",
      "created_at": "2019-03-07T22:04:31Z",
      "updated_at": "2019-03-07T22:04:31Z"
    }
  ],
  "created_at": "2018-05-02T10:15:33Z",
  "labels": [
    "Resolution-Duplicate",
    "Issue-Question",
    "Area-Maintainers-Build"
  ],
  "number": 6799,
  "state": "closed",
  "title": "Windows \"previous versions\" now opens pwsh.exe not explorer",
  "updated_at": "2019-03-07T22:04:31Z"
}