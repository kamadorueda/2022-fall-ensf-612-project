{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5492",
  "author": "JamesWTruher",
  "body": "On CentOS and RedHat the tests in test/powershell/Modules/Microsoft.PowerShell.Utility/WebCmdlets.Tests.ps1\r\n \r\n```\r\nInvoke-WebRequest tests\r\n  HTTPS Tests\r\n    Verifies Invoke-WebRequest Certificate Authentication Successful with -Certificate\r\nInvoke-RestMethod tests\r\n  HTTPS Tests\r\n    Verifies Invoke-RestMethod Certificate Authentication Successful with -Certificate\r\n```\r\nFail with the message `The handler does not support client authentication certificates with this combination of libcurl (7.29.0) and its SSL backend (\"NSS/3.16.2.3 Basic ECC\").`\r\n\r\nThis is referenced by this corefx issue: https://github.com/dotnet/corefx/issues/10146 which is still open (as of Nov 17, 2017). We need to document when we release.",
  "closed_at": "2018-05-09T11:35:54Z",
  "comments": [
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "I am working on a 6.0.0 documentation refresh for the Web Cmdlets. https://github.com/PowerShell/PowerShell-Docs/pull/1870 Here is what I have for the `-Certificate` parameter:\r\n\r\n### -Certificate\r\nSpecifies the client certificate that is used for a secure web request.\r\nEnter a variable that contains a certificate or a command or expression that gets the certificate.\r\n\r\nTo find a certificate, use `Get-PfxCertificate` or use the `Get-ChildItem` cmdlet in the Certificate (`Cert:`) drive.\r\nIf the certificate is not valid or does not have sufficient authority, the command fails.\r\n\r\n> **Note**: This feature may not work on OS platforms where `libcurl` is configured with a TLS provider other than OpenSSL.\r\n",
      "created_at": "2017-11-17T20:04:13Z",
      "updated_at": "2017-11-17T21:24:37Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "anyone finding this via google... you can make the Web Cmdlets SSL features work on CentOS 7 by compiling curl from source and using `--with-ssl -with-gssapi`\r\n\r\n```bash\r\nyum install -y autoconf autoconf automake libtool openssl openssl-devel krb5-devel git\r\ngit clone https://github.com/curl/curl.git\r\ncd curl\r\n./buildconf\r\n./configure --with-ssl -with-gssapi\r\nmake && make install\r\n```\r\n\r\nAfter curl is compiled and installed, you will need to run `pwsh` like so:\r\n\r\n```bash\r\nLD_LIBRARY_PATH=/usr/local/lib pwsh\r\n```",
      "created_at": "2018-01-10T15:16:53Z",
      "updated_at": "2018-01-10T15:19:00Z"
    }
  ],
  "created_at": "2017-11-17T19:42:52Z",
  "number": 5492,
  "state": "closed",
  "title": "Doc: We need to document the issue with libcurl/ssl on Centos and RH",
  "updated_at": "2018-10-30T05:48:53Z"
}