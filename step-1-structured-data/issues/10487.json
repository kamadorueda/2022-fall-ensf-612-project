{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10487",
  "author": "msftrncs",
  "body": "# PR Summary\r\n\r\nFlag the `switch` statement condition clause `default` token as a keyword\r\ntoken to facilitate (PSReadLine) highlighting it as a keyword.  Closes #10470.\r\n\r\nThis change is to treat the `default` clause keyword as a full keyword token, and as such token based highlighters will see it as a keyword.\r\n\r\n## PR Context\r\n\r\nFlagging the `default` condition clause token of the `switch` statement as a keyword will facilitate highlighting of the keyword to better contrast against other bareword string literal conditions.\r\n\r\nA simple (partial) example:\r\n```PowerShell\r\n# return simple element value (need to check for Boolean datatype, and process value accordingly)\r\nswitch ($node.Name) {\r\n    true { $true; continue } # return a Boolean TRUE value\r\n    false { $false; continue } # return a Boolean FALSE value\r\n    default { $node.Value } # return the element value\r\n}\r\n```\r\nHighlighting of the `default` keyword in the above example makes it easier to distinguish the special condition clause from the other bareword conditions.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [X] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2020-06-09T17:22:39Z",
  "comments": [
    {
      "author": "msftrncs",
      "author_association": "CONTRIBUTOR",
      "body": "I may need guidance on tests, I have not yet ventured in to any of the tests so far.",
      "created_at": "2019-09-05T06:26:49Z",
      "updated_at": "2019-09-05T06:26:49Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I do not find any tests for keywords.",
      "created_at": "2019-09-05T09:02:59Z",
      "updated_at": "2019-09-05T09:02:59Z"
    },
    {
      "author": "msftrncs",
      "author_association": "CONTRIBUTOR",
      "body": "As for tests, it looks like, adding to `test\\powershell\\language\\parser\\parsing.tests.ps1`, some `ParseInput` expressions could be constructed to test the tokenizer results of a sample `switch` statement.  I am referencing the ternary operator parsing tests that @daxian-dbw added.",
      "created_at": "2019-09-18T05:31:40Z",
      "updated_at": "2019-09-18T05:31:40Z"
    },
    {
      "author": "msftrncs",
      "author_association": "CONTRIBUTOR",
      "body": "I rebased, and have updated the commits to reflect creating the `default` keyword token.  I have also included a potential test, after correcting an existing one that changed because of the error records no longer being the same.  Please provide an initial review of this approach, and if there is any other testing that should be done.  ",
      "created_at": "2019-10-01T05:22:34Z",
      "updated_at": "2019-10-01T05:22:34Z"
    },
    {
      "author": "msftrncs",
      "author_association": "CONTRIBUTOR",
      "body": "I have revised the commits again, though the bulk of changes is now in the tests.  I still have the feeling the tests are still a work in progress, though they are closer to what I was first expecting.",
      "created_at": "2019-10-03T04:54:21Z",
      "updated_at": "2019-10-03T04:54:21Z"
    },
    {
      "author": "msftrncs",
      "author_association": "CONTRIBUTOR",
      "body": "I'm removing the WIP prefix, as I think this is ready for review.  I am quite interested for feedback.",
      "created_at": "2019-10-15T05:51:46Z",
      "updated_at": "2019-10-15T05:51:46Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw @JamesWTruher @adityapatwardhan Please review the PR.",
      "created_at": "2019-10-15T07:28:34Z",
      "updated_at": "2019-10-15T07:28:34Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMainainer, Please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2020-05-27T02:03:17Z",
      "updated_at": "2020-05-27T02:03:17Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@msftrncs Thanks for your contribution!",
      "created_at": "2020-06-10T04:22:08Z",
      "updated_at": "2020-06-10T04:22:08Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.1.0-preview.4` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.1.0-preview.4)\n",
      "created_at": "2020-06-25T19:06:59Z",
      "updated_at": "2020-06-25T19:06:59Z"
    }
  ],
  "created_at": "2019-09-05T06:21:54Z",
  "number": 10487,
  "state": "closed",
  "title": "Flag `default` switch statement condition clause as keyword",
  "updated_at": "2020-08-18T18:01:53Z"
}