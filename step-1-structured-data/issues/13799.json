{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13799",
  "author": "eugenesmlv",
  "body": "# PR Summary\r\n\r\nThese changes provide more informative method definition for methods with the optional parameters.\r\n\r\n* Primitive value types and strings.\r\n```\r\nstatic void Bar(int optParam = -1)\r\nstatic void Bar(string optParam = \"default string\")\r\n```\r\n\r\n* Reference types.\r\n```\r\nstatic void Bar(string optParam = null)\r\n```\r\n\r\n* Enums.\r\n```\r\nstatic void Bar(System.UriKind optParam = System.UriKind.Relative)\r\n```\r\n\r\n* Structs and generic method parameters.\r\n```\r\nstatic void Bar(datetime optParam = default)\r\nstatic void GenericBar[T](T optParam = default)\r\n```\r\n\r\n## PR Context\r\n\r\nFix #13728\r\n\r\nThe changes don't cover a case with an `OptionalAttribute`. Calling such a method without optional arguments throws an exception.\r\n\r\n``` powershell\r\nAdd-Type -NameSpace demo -Name Foo -MemberDefinition @\"\r\npublic static void Bar([System.Runtime.InteropServices.Optional]int optParam) { }\r\n\"@\r\n\r\n[demo.Foo]::Bar()\r\n#OperationStopped: Expression of type 'System.Reflection.Missing' cannot be used for parameter of type 'System.Int32' of method 'Void Bar(Int32)' (Parameter 'arg0')\r\n```\r\n\r\nI could investigate it if you show me where to start.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [ ] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2022-06-27T19:21:26Z",
  "comments": [
    {
      "author": "eugenesmlv",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov it seems like `CompletionCompleters` also uses a method definition for the tooltip. Is it possible to test that case somehow?\r\nhttps://github.com/PowerShell/PowerShell/blob/67bdf7292db700f5fecb9337d17b29457ae14ed2/src/System.Management.Automation/engine/CommandCompletion/CompletionCompleters.cs#L5312-L5318",
      "created_at": "2020-10-17T16:50:40Z",
      "updated_at": "2020-10-17T16:50:40Z"
    },
    {
      "author": "eugenesmlv",
      "author_association": "CONTRIBUTOR",
      "body": "> You can use TabCompletion2 (see our tests how it is used).\r\n\r\nI couldn't find TabCompletion2 anywhere. Do you mean TabExpansion2? Anyway, as far as I understand, tab completion completes just method name and there are already tests for that.\r\n\r\n> Do you mean \"method signature\"?\r\n\r\nRather, \"method signature with parameters of various types such as parameters passed by reference, generic and optional parameters\", but it seems to me, we could combine tests for the overloaded definition and different method signature into one context.\r\n\r\nI also want to suggest to mark parameters passed by reference with `[in]` and `[out]` keywords in addition to the `[ref]`. Can I implement that in this PR?",
      "created_at": "2020-10-19T11:22:15Z",
      "updated_at": "2020-10-19T11:22:15Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "> > You can use TabCompletion2 (see our tests how it is used).\r\n> \r\n> I couldn't find TabCompletion2 anywhere. Do you mean TabExpansion2? Anyway, as far as I understand, tab completion completes just method name and there are already tests for that.\r\n\r\nTab expansion results include a tooltip, which is only shown in editors and some PSReadLine key handlers (but not the <kbd>Tab</kbd> one).  You can see it here:\r\n\r\n```powershell\r\n(TabExpansion2 -inputScript ($s = '$Host.PushRunspace') -cursorColumn $s.Length).CompletionMatches\r\n```\r\n\r\nreturns\r\n\r\n```raw\r\nCompletionText ListItemText ResultType ToolTip\r\n-------------- ------------ ---------- -------\r\nPushRunspace(  PushRunspace     Method void PushRunspace(runspace runspace)\u2026\r\n```\r\n\r\n> I also want to suggest to mark parameters passed by reference with `[in]` and `[out]` keywords in addition to the `[ref]`. Can I implement that in this PR?\r\n\r\nMaybe best to open an issue to discuss that one. Part of the problem there is that `[in]` and `[out]` aren't really a thing in PowerShell, so the way to pass it will still be `[ref]`.\r\n\r\n",
      "created_at": "2020-10-19T14:21:23Z",
      "updated_at": "2020-10-19T14:22:51Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> I couldn't find TabCompletion2 anywhere. Do you mean TabExpansion2?\r\n\r\nYes, sorry.",
      "created_at": "2020-10-19T15:12:50Z",
      "updated_at": "2020-10-19T15:12:50Z"
    },
    {
      "author": "eugenesmlv",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov @SeeminglyScience thanks for helping me! I've added tests for the TabExpansion2 tooltip.",
      "created_at": "2020-10-19T18:28:25Z",
      "updated_at": "2020-10-19T18:28:25Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2020-10-27T14:00:12Z",
      "updated_at": "2020-10-27T14:00:12Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2021-09-23T02:00:42Z",
      "updated_at": "2021-09-23T02:00:42Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "/rebase",
      "created_at": "2022-05-18T05:13:24Z",
      "updated_at": "2022-05-18T05:13:24Z"
    },
    {
      "author": "github-actions[bot]",
      "author_association": "CONTRIBUTOR",
      "body": "Started rebase: https://github.com/PowerShell/PowerShell/actions/runs/2343284398\n\n<blockquote><img src=\"https://repository-images.githubusercontent.com/49609581/aad0ad80-cdec-11ea-8248-a37bc0571bfd\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/PowerShell/PowerShell\">Show optional parameters as such when dislplaying method definition and overloads \u00b7 PowerShell/PowerShell@3f35800</a></strong></div><div>PowerShell for every system! Contribute to PowerShell/PowerShell development by creating an account on GitHub.</div></blockquote>",
      "created_at": "2022-05-18T05:14:01Z",
      "updated_at": "2022-05-18T05:14:03Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@TravisEz13 Could you please look the rebase error? https://github.com/PowerShell/PowerShell/runs/6483334261?check_suite_focus=true#step:5:31\n\n<blockquote><img src=\"https://repository-images.githubusercontent.com/49609581/aad0ad80-cdec-11ea-8248-a37bc0571bfd\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/PowerShell/PowerShell\">Show optional parameters as such when dislplaying method definition and overloads \u00b7 PowerShell/PowerShell@3f35800</a></strong></div><div>PowerShell for every system! Contribute to PowerShell/PowerShell development by creating an account on GitHub.</div></blockquote>",
      "created_at": "2022-05-18T05:16:23Z",
      "updated_at": "2022-05-18T05:16:25Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2022-05-25T14:01:03Z",
      "updated_at": "2022-05-25T14:01:03Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.3.0-preview.6` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.3.0-preview.6)\n",
      "created_at": "2022-07-18T21:42:52Z",
      "updated_at": "2022-07-18T21:42:52Z"
    }
  ],
  "created_at": "2020-10-17T16:03:23Z",
  "number": 13799,
  "state": "closed",
  "title": "Show optional parameters as such when dislplaying method definition and overloads",
  "updated_at": "2022-07-18T21:42:52Z"
}