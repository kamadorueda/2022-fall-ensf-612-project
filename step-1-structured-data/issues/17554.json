{
  "_url": "https://github.com/PowerShell/PowerShell/issues/17554",
  "author": "soredake",
  "body": "### Summary of the new feature / enhancement\n\nRight now there is no way to download multiple files with Invoke-WebRequest, trying to do so with `Invoke-WebRequest -Uri link1,link2` will result in error `Invoke-WebRequest: Cannot convert 'System.Object[]' to the type 'System.Uri' required by parameter 'Uri'. Specified method is not supported.`, this feature depends on https://github.com/PowerShell/PowerShell/issues/17553\n\n### Proposed technical implementation details (optional)\n\n_No response_",
  "closed_at": "2022-09-08T22:01:19Z",
  "comments": [
    {
      "author": "jhoneill",
      "author_association": "NONE",
      "body": "As a general principal a command should accept multiple items for its \"target\" parameter - the file to delete, the service to the start , the URL to fetch. And this should also be accepted via the pipeline . Invoke-WebRequest does neither. \r\n#17553   Suggests allowing a directory - which I now take to be \"Instead of a full path\" -  but not all URIs translate to a sensible / usable file name  if I call http://host/service/api/id=123?params  and http://host/service/api/id=456?params  I'm not sure how reliable one can make a rule for selecting a file name automatically. That's likely to be the obstacle - but it should go to the cmdlet working group to see if it is worth pushing forward.\r\n\r\n\r\n\r\n",
      "created_at": "2022-06-21T21:55:54Z",
      "updated_at": "2022-06-21T21:57:02Z"
    },
    {
      "author": "jborean93",
      "author_association": "COLLABORATOR",
      "body": "If worse comes to worse you can always use `ForEach-Object -Parallel` which is great for situations like like\r\n\r\n```powershell\r\n$url1, $url2 | ForEach-Object -Parallel {\r\n    Invoke-WebRequest -Uri $_ ...\r\n}\r\n```",
      "created_at": "2022-06-21T22:01:49Z",
      "updated_at": "2022-06-21T22:01:49Z"
    },
    {
      "author": "soredake",
      "author_association": "NONE",
      "body": "> but not all URIs translate to a sensible / usable file name if I call http://host/service/api/id=123?params and http://host/service/api/id=456?params I'm not sure how reliable one can make a rule for selecting a file name automatically\r\n\r\nCurl for example has `-O` for selecting remote file name, wget has `--content-disposition` for the same purpose, and many (if not most) site from which you need to download something (mpv scripts from github in my case) will provide a correct remote file name.",
      "created_at": "2022-06-22T06:07:29Z",
      "updated_at": "2022-06-22T06:07:29Z"
    },
    {
      "author": "jhoneill",
      "author_association": "NONE",
      "body": "> Curl for example has `-O` for selecting remote file name, wget has `--content-disposition` for the same purpose, and many (if not most) site from which you need to download something (mpv scripts from github in my case) will provide a correct remote file name.\r\n\r\nThis is one the cmdlet working group should talk about and  doing something similar is an option\r\n\r\n\r\n\r\n> If worse comes to worse you can always use `ForEach-Object -Parallel` which is great for situations like like\r\n\r\nThe script block can determine the name and for slow downloads running in parallel is an obvious speed advantage. \r\nBut supporting multiple targets from one call is still desirable - where possible. \r\n",
      "created_at": "2022-06-22T07:02:32Z",
      "updated_at": "2022-06-22T07:02:32Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2022-06-23T12:01:17Z",
      "updated_at": "2022-06-23T12:01:17Z"
    },
    {
      "author": "soredake",
      "author_association": "NONE",
      "body": "I don't think issue is done.....",
      "created_at": "2022-06-23T12:13:34Z",
      "updated_at": "2022-06-23T12:13:34Z"
    },
    {
      "author": "soredake",
      "author_association": "NONE",
      "body": "Can someone reopen this? @jborean93",
      "created_at": "2022-06-23T12:15:03Z",
      "updated_at": "2022-06-23T15:27:47Z"
    },
    {
      "author": "soredake",
      "author_association": "NONE",
      "body": "@jborean93",
      "created_at": "2022-06-24T09:38:16Z",
      "updated_at": "2022-06-24T09:38:16Z"
    },
    {
      "author": "soredake",
      "author_association": "NONE",
      "body": "@iSazonov",
      "created_at": "2022-06-24T12:47:44Z",
      "updated_at": "2022-06-24T12:47:44Z"
    },
    {
      "author": "jhoneill",
      "author_association": "NONE",
      "body": "@iSazonov   Ilya either this or #17553  (or both) should stay open - I'm putting it in the front of the cmdlet working group and we'll see that happens there. The response might be that the workaround posted here is enough or might be some change to the cmdlet is appropriate but if could wait for that before closing it ? \r\n\r\n  ",
      "created_at": "2022-06-24T13:34:13Z",
      "updated_at": "2022-06-24T13:34:13Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "The Cmdlet WG discussed this and agreed that adding concurrency support into the cmdlet is not needed and would add lots of complexity (such as determining the output filenames where not all sites include it in the URL or the header).  PowerShell jobs is intended to be used for parallel execution so we recommend adding an example of how to do this in the Invoke-WebRequest documentation.  That doc issue has been created here: https://github.com/MicrosoftDocs/PowerShell-Docs/issues/8998",
      "created_at": "2022-09-07T16:10:39Z",
      "updated_at": "2022-09-07T16:10:39Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as declined and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2022-09-08T22:01:19Z",
      "updated_at": "2022-09-08T22:01:19Z"
    }
  ],
  "created_at": "2022-06-21T16:30:25Z",
  "labels": [
    "Issue-Enhancement",
    "WG-Cmdlets-Utility",
    "Resolution-Declined"
  ],
  "number": 17554,
  "state": "closed",
  "title": "Allow downloading multiple files with Invoke-WebRequest",
  "updated_at": "2022-09-08T22:01:19Z"
}