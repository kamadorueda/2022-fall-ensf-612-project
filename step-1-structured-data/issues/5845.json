{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5845",
  "author": "jcarino",
  "body": "## PR Summary\r\n\r\nString concats in ReadPdhMultiString have been replaced with a StringBuilder to significantly reduce heap allocation and GC.\r\n\r\nReadPdhMultiString reads characters one by one from a pointer location into a string, then splits that string into a string collection (on the null character '\\0'). However, it does this through a looped string concat, allocating a new string on the heap for each character read in.  This has significant GC implications for large strings.  The string concats have been replaced with a string builder, and the strings are split and added to the StringCollection on the fly.\r\n\r\n## PR Checklist\r\n\r\nNote: Please mark anything not applicable to this PR `NA`.\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - [x] Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [NA ] User facing [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - [ NA] Issue filed - Issue link:\r\n- [x] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [ ] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` to the beginning of the title and remove the prefix when the PR is ready.\r\n",
  "closed_at": "2018-01-30T00:37:05Z",
  "comments": [
    {
      "author": "msftclas",
      "author_association": "NONE",
      "body": "[![CLA assistant check](https://cla.opensource.microsoft.com/pull/badge/signed)](https://cla.opensource.microsoft.com/PowerShell/PowerShell?pullRequest=5845) <br/>All CLA requirements met.",
      "created_at": "2018-01-10T20:18:08Z",
      "updated_at": "2018-01-11T18:10:14Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@jcarino We can not merge the contribution until you sign CLA.",
      "created_at": "2018-01-11T04:58:56Z",
      "updated_at": "2018-01-11T04:58:56Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Ah, `PdhHelper.cs` isn't used currently and excluded from compiling.",
      "created_at": "2018-01-11T06:26:05Z",
      "updated_at": "2018-01-11T06:26:05Z"
    },
    {
      "author": "jcarino",
      "author_association": "NONE",
      "body": "CLA has now been signed.\r\nI know this module is excluded due to issue #4303 but this is an issue in production, and if/when related modules are added back this might be useful.",
      "created_at": "2018-01-11T18:17:06Z",
      "updated_at": "2018-01-11T18:17:06Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@dantraMSFT Please clarify - this file is excluded from compilation - is it acceptable to change it without tests? And will we use it later?",
      "created_at": "2018-01-12T04:48:41Z",
      "updated_at": "2018-01-12T04:48:41Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "> this file is excluded from compilation \r\n\r\n@iSazonov Thanks for bringing it up :) You are right that we don't have a way to officially validate the changes. @TravisEz13, any thoughts?\r\n\r\nFor background: the perf counter cmdlets are disabled due to unsupported APIs. But the files are left in place so that\r\n1. They can be brought back easily in future once the issue is resolved.\r\n2. Users can enable building those cmdlets themselves and use the cmdlets privately.",
      "created_at": "2018-01-18T22:45:27Z",
      "updated_at": "2018-01-18T22:45:27Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "We should not make changes that are not tested.\r\n\r\nI think we can postpone this change until the API is ported in the future. I've seen that CoreFX team still doesn't have a consensus how to do it.\r\n\r\nAlso if we decide to use Windows Compatibility Pack and it will support this API, then we could also include this in the compilation.",
      "created_at": "2018-01-19T03:52:14Z",
      "updated_at": "2018-01-19T03:55:17Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "Not only is it not tested.  The file is not being compiled.  I don't think we can take any changes to this file except possibly adding a comment to this effect and pointing to the issue to add the CmdLets back using supported APIs.  https://github.com/PowerShell/PowerShell/issues/4306",
      "created_at": "2018-01-20T01:29:08Z",
      "updated_at": "2018-01-20T01:29:08Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I think we should close the PR until we compile this code again.",
      "created_at": "2018-01-27T17:19:07Z",
      "updated_at": "2018-01-27T17:19:07Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@jcarino The consensus is that we cannot take changes to this code at this time.",
      "created_at": "2018-01-30T00:37:05Z",
      "updated_at": "2018-01-30T00:37:05Z"
    }
  ],
  "created_at": "2018-01-10T20:17:58Z",
  "number": 5845,
  "state": "closed",
  "title": "WIP - Fix performance and memory allocation issues in ReadPdhMultiString.",
  "updated_at": "2018-01-30T00:37:05Z"
}