{
  "_url": "https://github.com/PowerShell/PowerShell/issues/8201",
  "author": "Jaykul",
  "body": "I find it bewildering that _of all the Record types_, the **Information** record isn't an `InformationalRecord`\r\n\r\nThat is, the [InformationRecord](https://github.com/PowerShell/PowerShell/blob/5d03e1653a7d518715fa3f00587cad6b5c78cc89/src/System.Management.Automation/engine/InformationRecord.cs) class does not derive from the [InformationalRecord](https://github.com/PowerShell/PowerShell/blob/5d03e1653a7d518715fa3f00587cad6b5c78cc89/src/System.Management.Automation/engine/hostifaces/InformationalRecord.cs) class the way that the Verbose, Debug, and Warning records do.\r\n\r\nIt looks to me like we could make it inherit without much fuss, and the missing PipelineIterationInfo and especially the InvocationInfo properties would be very useful for a variety of applications of the InformationRecord and it's tag-based filtering.",
  "closed_at": "2019-09-30T12:00:50Z",
  "comments": [
    {
      "author": "Jaykul",
      "author_association": "CONTRIBUTOR",
      "body": "For consistency, I would love it if ErrorRecord could derive from this too -- although it already has stuff like the ScriptStackTrace, etc, so it probably doesn't matter...\r\n\r\nAlso, for what it's worth, I wouldn't suggest Progress inherit this, because it's already slower than we'd like ;-)",
      "created_at": "2018-11-07T21:41:37Z",
      "updated_at": "2018-11-07T21:41:37Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Progress needs a whole revamp in itself really. See #7983 ",
      "created_at": "2018-11-07T21:58:08Z",
      "updated_at": "2018-11-07T21:58:08Z"
    },
    {
      "author": "BrucePay",
      "author_association": "COLLABORATOR",
      "body": "@Jaykul If you look at the source, you'll see that `InfomationRecord` is an elaboration on writing a string to the console i.e. `Write-Host`.  It exists for an entirely different purpose than InformationalRecord which provides metadata about the runtime state of the engine. In other words, an `InfomationRecord` is  _from_ an application and an `InformationalRecord` is _about_ an application. The name collision is unfortunate but isn't going to change given they're both public classes.\r\n",
      "created_at": "2018-11-08T01:31:11Z",
      "updated_at": "2018-11-08T01:31:11Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2019-09-30T12:00:49Z",
      "updated_at": "2019-09-30T12:00:49Z"
    }
  ],
  "created_at": "2018-11-07T21:39:51Z",
  "labels": [
    "Issue-Question",
    "Resolution-Answered"
  ],
  "number": 8201,
  "state": "closed",
  "title": "InformationRecord should derive from InformationalRecord",
  "updated_at": "2019-09-30T12:00:50Z"
}