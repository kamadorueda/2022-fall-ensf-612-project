{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4130",
  "author": "mklement0",
  "body": "Steps to reproduce\r\n------------------\r\n\r\n```powershell\r\n# Get the list of drives (using only 1 filesystem and only 1 registry drive)\r\n(Get-PSDrive | ? { $_.Provider.Name -notin 'FileSystem', 'Registry' -or $_.Name -in 'C', '/', 'HKLM' }).Name | % {\r\n  # Construct a (dummy) path to an item in the root location; e.g., \"C:\\Foo\"\r\n  $path = $(if ($_ -eq '/') { $_ } else { $_ + ':/' }) + 'Foo'\r\n  [pscustomobject] @{ \r\n    Command = \"Split-Path -Parent $path\"\r\n    Result = Split-Path -Parent $path\r\n  }\r\n}\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\nOn Windows:\r\n\r\n```none\r\nCommand                  Result\r\n-------                  ------\r\nSplit-Path Alias:/Foo    Alias:\\\r\nSplit-Path C:/Foo        C:\\\r\nSplit-Path Cert:/Foo     Cert:\\\r\nSplit-Path Env:/Foo      Env:\\\r\nSplit-Path Function:/Foo Function:\\\r\nSplit-Path HKLM:/Foo     HKLM:\\\r\nSplit-Path Variable:/Foo Variable:\\\r\nSplit-Path WSMan:/Foo    WSMan:\\\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n```none\r\nCommand                  Result\r\n-------                  ------\r\nSplit-Path Alias:/Foo\r\nSplit-Path C:/Foo        C:\\\r\nSplit-Path Cert:/Foo     Cert:\\\r\nSplit-Path Env:/Foo\r\nSplit-Path Function:/Foo\r\nSplit-Path HKLM:/Foo     HKLM:\\\r\nSplit-Path Variable:/Foo\r\nSplit-Path WSMan:/Foo    WSMan:\\\r\n```\r\n\r\nSome drives unexpectedly report the _empty string_.\r\n\r\nUnix systems have only a subset of these drives, but the shared subset behaves the same.\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\nPowerShell Core v6.0.0-beta.3 on macOS 10.12.5\r\nPowerShell Core v6.0.0-beta.3 on Ubuntu 16.04.1 LTS\r\nPowerShell Core v6.0.0-beta.3 on Microsoft Windows 10 Pro (64-bit; v10.0.14393)\r\nWindows PowerShell v5.1.15063.413 on Microsoft Windows 10 Pro (64-bit; v10.0.15063)\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "BrucePay",
      "author_association": "COLLABORATOR",
      "body": "Here's what's happening: Path parsing is handled by the underlying provider infrastructure since each provider can have its own notion of what constitutes a path. There are different types of providers including ones that don't support the notion of paths within their namespace. This is the case for the function, alias, env and variable providers. They are not NavigationProviders which means they don't support (nested) paths, just a flat list of names. As such, these providers don't implement the path parsing APIs. When Split-Path tries to split a \"path\" in these providers it gets a PSNotSupportedException and explicitly returns the empty string. The comment from the code is as follows:\r\n\r\n```\r\n                            // Since getting the parent path is not supported,\r\n                            // the provider must be a container, item, or drive\r\n                            // provider.  Since the paths for these types of\r\n                            // providers can't be split, asking for the parent\r\n                            // is asking for an empty string\r\n```\r\n",
      "created_at": "2017-06-29T20:59:29Z",
      "updated_at": "2017-06-29T20:59:29Z"
    }
  ],
  "created_at": "2017-06-28T15:47:53Z",
  "number": 4130,
  "state": "open",
  "title": "Split-Path -Parent treats paths of root-location items inconsistently across providers",
  "updated_at": "2018-03-01T21:04:01Z"
}