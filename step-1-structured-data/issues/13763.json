{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13763",
  "author": "nikita-sakharin",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 and PowerShell 7+ issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6).\r\n\r\n-->\r\n\r\n## Steps to reproduce\r\n\r\n```powershell\r\nTest-Path -Path 'C:\\Users\\username\\Documents\\test.json' -Exclude '*.json' -IsValid\r\nTest-Path -Path 'C:\\Users\\username\\Documents\\test.txt' -Include '*.json' -IsValid\r\n```\r\n\r\n## Expected behavior\r\n\r\n```none\r\nFalse\r\nFalse\r\n```\r\n\r\n## Actual behavior\r\n\r\n```none\r\nTrue\r\nTrue\r\n```\r\n\r\n## Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.0-rc.1\r\nPSEdition                      Core\r\nGitCommitId                    7.1.0-rc.1\r\nOS                             Microsoft Windows 10.0.17763\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "Shriram0908",
      "author_association": "CONTRIBUTOR",
      "body": "Hi @nikitasa1997 From Microsoft Documentation IsValid only checks the syntax of the path is valid or not and does not care if the file is present or not.\r\n\r\n[Test-Path documentation](https://docs.microsoft.com/en-us/powershell/module/Microsoft.PowerShell.Management/Test-Path?view=powershell-7)\r\n\r\n```\r\n-IsValid\r\n\r\nIndicates that this cmdlet tests the syntax of the path, regardless of whether the elements of the path exist. This cmdlet returns $True if the path syntax is valid and $False if it is not.",
      "created_at": "2021-01-20T16:49:56Z",
      "updated_at": "2021-01-20T16:49:56Z"
    },
    {
      "author": "kvprasoon",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov with the current expectation of `-IsValid` parameter, isn't this issue invalid, can't this issue be closed ?",
      "created_at": "2021-04-19T15:45:52Z",
      "updated_at": "2021-04-19T15:45:52Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Since now we use WG (work group) workflow I set triage request.",
      "created_at": "2021-04-19T16:52:09Z",
      "updated_at": "2021-04-19T16:52:09Z"
    },
    {
      "author": "nikita-sakharin",
      "author_association": "NONE",
      "body": "> Hi @nikita-sakharin From Microsoft Documentation IsValid only checks the syntax of the path is valid or not and does not care if the file is present or not.\r\n> \r\n> [Test-Path documentation](https://docs.microsoft.com/en-us/powershell/module/Microsoft.PowerShell.Management/Test-Path?view=powershell-7)\r\n> \r\n> ```\r\n> -IsValid\r\n> \r\n> Indicates that this cmdlet tests the syntax of the path, regardless of whether the elements of the path exist. This cmdlet returns $True if the path syntax is valid and $False if it is not.\r\n> ```\r\n\r\nGood day, @Shriram0908, @iSazonov!\r\nLet's take as an example the code:\r\n```\r\nSet-Content -Path '~\\Documents\\test.txt' -Value 'Hello, World!'\r\nTest-Path -Path '~\\Documents\\test.txt'\r\nTest-Path -Path '~\\Documents\\test.txt' -Include '*.txt'\r\n```\r\nOutput is:\r\n```\r\nTrue\r\nTrue\r\n```\r\nAfter that:\r\n```\r\nTest-Path -Path '~\\Documents\\test.txt' -Include '*.json'\r\nTest-Path -Path '~\\Documents\\test.txt' -Exclude '*.txt'\r\n```\r\nOutput is:\r\n```\r\nFalse\r\nFalse\r\n```\r\nThus, I expect the `-IsValid` flag to behave in a same way. And what could be the reason for otherwise? Or else `-Include` and `-Exclude` flags are pointless with the `-IsValid` flag and should raise some error.",
      "created_at": "2021-04-23T19:18:43Z",
      "updated_at": "2022-10-28T17:18:18Z"
    }
  ],
  "created_at": "2020-10-09T19:31:30Z",
  "labels": [
    "Issue-Bug",
    "Up-for-Grabs",
    "WG-Cmdlets-Management",
    "Needs-Triage",
    "Area-FileSystem-Provider"
  ],
  "number": 13763,
  "state": "open",
  "title": "Test-Path ignore -Include and -Exclude when -IsValid is set",
  "updated_at": "2022-10-28T17:18:18Z"
}