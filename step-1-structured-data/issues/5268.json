{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5268",
  "author": "lzybkr",
  "body": "To speed up scope creation, I removed AllScope from most default aliases.\r\n\r\nThis results in a 15-20% speedup for:\r\n```powershell\r\nfunction foo {}\r\nfor ($i = 0; $i -lt 100kb; $i++) { & { foo } }\r\n```\r\nI left AllScope of a few frequently used aliases because it does make command lookup faster. If we introduce something like dynamic sites for command lookup, then we could probably remove the rest\r\nof the AllScope aliases.\r\n\r\nThis is a low risk breaking change. One can ask for aliases at a particular scope:\r\n```powershell\r\nGet-Alias -Scope 1 nsn\r\n````\r\nThis could now fail if the scope number doesn't correspond to global scope.\r\n\r\n<!--\r\n\r\nIf you are a PowerShell Team member, please make sure you choose the Reviewer(s) and Assignee for your PR.\r\nIf you are not from the PowerShell Team, you can leave the fields blank and the Maintainers will choose them for you. If you are familiar with the team, feel free to mention some Reviewers yourself.\r\n\r\nFor more information about the roles of Reviewer and Assignee, refer to [CONTRIBUTING.md](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md).\r\n\r\n-->\r\n",
  "closed_at": "2017-10-31T03:05:49Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Does it make sense to leave these aliases readonly? I think we talked about this earlier. We could use `[Alias()]` in cmdlet definitions.",
      "created_at": "2017-10-30T04:50:21Z",
      "updated_at": "2017-10-30T04:51:35Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "That's 2 questions.\r\n\r\nI don't feel strongly about using `ReadOnly`. I think it's unnecessary, but also don't see the harm.\r\n\r\nAs for using the `Alias` attribute - I thought there was an unrelated reason to not use the attribute - but I don't recall. If it was simply the lack of ability to specify scope options, the attribute could be enhanced to support that.",
      "created_at": "2017-10-30T05:47:55Z",
      "updated_at": "2017-10-30T05:47:55Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "If we remove ReadOnly here we can safely move to `Alias()` attribute.\r\nI found the @daxian-dbw  related [comment(s)](https://github.com/PowerShell/PowerShell/pull/3595#issuecomment-296239341) and [comment](https://github.com/PowerShell/PowerShell/pull/3595#issuecomment-300950380).\r\n\r\nAfter PR 3595 I tried to enhance Alias attribute in [the my branch](https://github.com/iSazonov/PowerShell/tree/add-options-to-alias-attribute). I couldn't implement AllScope and froze the work. But ReadOnly works. If we don't remove ReadOnly here after deletion of so much AllScope, maybe it makes sense to finish the work for ReadOnly here or I can push new PR later if you approve.\r\n",
      "created_at": "2017-10-30T08:50:53Z",
      "updated_at": "2017-10-30T08:50:53Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "If we remove AllScope from all the aliases, what perf impact would it be to the commonly used ones?  Also, it seems like we should have an internal overload of SessionStateAliasEntry constructor rather than passing empty string everytime for the description.",
      "created_at": "2017-10-30T18:55:04Z",
      "updated_at": "2017-10-30T18:55:04Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "I considered adding the overload, but if we're fine with removing `ReadOnly`, we won't even need that.",
      "created_at": "2017-10-30T19:28:26Z",
      "updated_at": "2017-10-30T19:28:26Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "As for perf impact on the common commands - it depends a lot, but command lookup isn't exactly cheap - there is a 25% difference in perf between in the two examples below - in the first, command lookup happens just once, in the second, it happens on every invocation.\r\n\r\n```powershell\r\nfunction foo {}\r\nmeasure-command { & {\r\n    $c = Get-Command foo\r\n    for ($i = 0; $i -lt 100kb; $i++) { & $c }\r\n} }\r\nmeasure-command { & {\r\n    for ($i = 0; $i -lt 100kb; $i++) {foo }\r\n} }\r\n```\r\n",
      "created_at": "2017-10-30T19:36:14Z",
      "updated_at": "2017-10-30T19:36:14Z"
    }
  ],
  "created_at": "2017-10-29T05:45:53Z",
  "number": 5268,
  "state": "closed",
  "title": "Remove AllScope from most default aliases",
  "updated_at": "2017-10-31T21:09:40Z"
}