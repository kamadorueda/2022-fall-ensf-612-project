{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4662",
  "author": "SteveL-MSFT",
  "body": "Steps to reproduce\r\n------------------\r\n\r\n```powershell\r\nfunction invoke-throw\r\n{\r\n        throw \"hello\"\r\n}\r\n\r\ntry\r\n{\r\n        invoke-throw -erroraction silentlycontinue\r\n}\r\nfinally\r\n{\r\n        \"world\"\r\n}\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```none\r\nworld\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n```none\r\nworld\r\nhello\r\nAt C:\\Users\\slee\\test\\silentlycontinue.ps1:3 char:2\r\n+     throw \"hello\"\r\n+     ~~~~~~~~~~~~~\r\n    + CategoryInfo          : OperationStopped: (hello:String) [], RuntimeException\r\n    + FullyQualifiedErrorId : hello\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.0-beta\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.0-beta.5\r\nOS                             Microsoft Windows 10.0.16261\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2017-08-24T20:40:30Z",
  "comments": [
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "As explained in [Our Error Handling, Ourselves - time to fully understand and properly document PowerShell's error handling](https://github.com/PowerShell/PowerShell-Docs/issues/1583), the `-ErrorAction` common parameter acts only on _non-terminating_ errors.\r\n\r\nYou're triggering a (script)-_terminating_ error (with `Throw`), so `-ErrorAction` doesn't apply.\r\nBecause there is no `Catch` block, the error surfaces.\r\n\r\nAs explained in the linked post, confusingly, `$ErrorActionPreference = 'SilentlyContinue'` - i.e., use of the _preference variable_ rather than the _parameter_ - _does_ apply, so the following _is_ effective in silencing the error.\r\n\r\n```powershell\r\nfunction invoke-throw\r\n{\r\n        throw \"hello\"\r\n}\r\n\r\ntry\r\n{\r\n    $ErrorActionPreference = 'SilentlyContinue'    \r\n    invoke-throw\r\n}\r\nfinally\r\n{\r\n        \"world\"\r\n}\r\n```\r\n\r\nNote: If you added a `Catch` block, then that block _by itself_ would silence the error message by default, irrespective of whether you used `-ErrorAction SilentlyContinue` or `$ErrorActionPreference = 'SilentlyContinue' `\r\n\r\n\r\n",
      "created_at": "2017-08-24T20:13:33Z",
      "updated_at": "2017-08-24T20:13:33Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@mklement0 ugh, you're right!  my workaround has been to use a catch and ignore block",
      "created_at": "2017-08-24T20:40:29Z",
      "updated_at": "2017-08-24T20:40:29Z"
    }
  ],
  "created_at": "2017-08-24T19:12:01Z",
  "labels": [
    "WG-Engine",
    "Resolution-Answered"
  ],
  "number": 4662,
  "state": "closed",
  "title": "\"-ErrorAction SilentlyContinue\" ignored if used within try { }",
  "updated_at": "2017-08-24T20:40:30Z"
}