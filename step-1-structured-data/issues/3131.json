{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3131",
  "author": "vors",
  "body": "<!--\r\n\r\nIf it is a bug report:\r\n- make sure you are able to repro it on the latest released version. \r\nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\r\n- Search the existing issues.\r\n- Refer to the [FAQ](../docs/FAQ.md).\r\n- Refer to the [known issues](../docs/KNOWNISSUES.md).\r\n- Fill out the following repro template\r\n\r\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\r\n-->\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\nTry to use dropbox API https://www.dropbox.com/developers/documentation/http/teams#team-get_info\r\n\r\n**I'm passing explicit `-ContentType 'application/json'` and getting error `Bad HTTP \"Content-Type\" header: \"application/x-www-form-urlencoded\"`**\r\n\r\n```\r\nInvoke-RestMethod -Uri https://api.dropboxapi.com/2/team/get_info -ContentType 'application/json' -Headers @{\"Authorization\" = \"Bearer $AUTH_TOKEN\" } -Method POST\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\nSuccess, like when I call\r\n\r\n```\r\ncurl -X POST https://api.dropboxapi.com/2/team/get_info --header \"Authorization: Bearer $AUTH_TOKEN\"\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\nCurrent behavior just returns generic error, see #2193\r\n\r\nHere is the output [deobfuscated with my hotfix](https://github.com/PowerShell/PowerShell/issues/2193#issuecomment-279125767)\r\n\r\n```\r\nError in call to API function \"team/get_info\": Bad HTTP \"Content-Type\" header: \"application/x-www-form-urlencoded\".  Expecting one of \"application/json\", \"application/json; charset=utf-8\", \"text/plain; charset=dropbox-cors-hack\".\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value                                                                                                                              \r\n----                           -----                                                                                                                              \r\nPSVersion                      6.0.0-alpha                                                                                                                        \r\nPSEdition                      Core                                                                                                                               \r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}                                                                                                            \r\nBuildVersion                   3.0.0.0                                                                                                                            \r\nGitCommitId                    v6.0.0-alpha.14-78-gaa764dd54edd5b214eb1fcb67aba5370014e7663-dirty                                                                 \r\nCLRVersion                                                                                                                                                        \r\nWSManStackVersion              3.0                                                                                                                                \r\nPSRemotingProtocolVersion      2.3                                                                                                                                \r\nSerializationVersion           1.1.0.1 \r\n```\r\n",
  "closed_at": "2018-11-04T01:52:32Z",
  "comments": [
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "I read the code a little bit and it could be dotnet problem O_o\r\nSo, if endpoint require some payload, I can run `\r\nInvoke-RestMethod -Uri https://api.dropboxapi.com/2/team/groups/list -ContentType 'application/json' -Headers @{\"Authorization\" = \"Bearer $AUTH_TOKEN\" } -Method POST -Verbose -Body (@{'limit' = 100} | ConvertTo-Json)\r\n`\r\nAnd I get a good response\r\n\r\nBut if it doesn't require, the `Content-Type` header is [not getting set](https://github.com/PowerShell/PowerShell/blob/aa764dd54edd5b214eb1fcb67aba5370014e7663/src/Microsoft.PowerShell.Commands.Utility/commands/utility/WebCmdlet/CoreCLR/WebRequestPSCmdlet.CoreClr.cs#L294).\r\n\r\nIf I add dummy `-Body ''`, I getting `Error in call to API function \"team/get_info\": request body: could not decode input as JSON`\r\n",
      "created_at": "2017-02-11T08:33:18Z",
      "updated_at": "2017-02-11T08:33:18Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@vors I looked at this and it does appear to be a limitation with dotnet.  They don't allow Body to be null and having Content-Type header.  Best we can do here might be to output a warning that `ContentType` isn't being used if the Body is not specified.  Based on my reading of [RFC2626](https://www.w3.org/Protocols/rfc2616/rfc2616-sec7.html#sec7) you should be allowed to specify `Content-Type` without a Body.",
      "created_at": "2017-03-09T21:56:39Z",
      "updated_at": "2017-03-09T21:56:39Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT thanks for confirming. That was my understanding as well.\r\n\r\nIt seems dotnet-core specific, because in the Full framework, there is a [separate field](https://github.com/PowerShell/PowerShell/blob/d59627f9ae51c90f405efc3def38e134d4164d88/src/Microsoft.PowerShell.Commands.Utility/commands/utility/WebCmdlet/FullClr/WebRequestPSCmdlet.FullClr.cs#L257) for the ContentType.\r\n\r\nThat pretty much prohibits using most of the Dropbox API v2 endpoints from PowerShell core and from dotnet core as well. For example https://github.com/dropbox/dropbox-sdk-dotnet could not be ported to dotnet core. ",
      "created_at": "2017-03-10T02:11:02Z",
      "updated_at": "2017-03-10T02:11:02Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@vors did you open an issue against corefx?  We should ref it here",
      "created_at": "2017-03-10T02:13:28Z",
      "updated_at": "2017-03-10T02:13:28Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "BTW, on the full version of PS v5.1 I'm getting another error\r\n\r\n```\r\nInvoke-WebRequest : Error in call to API function \"team/get_info\": request body: could not decode\r\ninput as JSON\r\nAt line:1 char:1\r\n+ Invoke-WebRequest -Uri https://api.dropboxapi.com/2/team/get_info -Co ...\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : InvalidOperation: (System.Net.HttpWebRequest:HttpWebRequest) [Invoke\r\n   -WebRequest], WebException\r\n    + FullyQualifiedErrorId : WebCmdletWebResponseException,Microsoft.PowerShell.Commands.InvokeWe\r\n   bRequestCommand\r\n```",
      "created_at": "2017-03-10T02:29:57Z",
      "updated_at": "2017-03-10T02:29:57Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "After conversation in corefx issue, it seems that `-Body \"null\"` workaround is the right way to do it in the dropbox case.\r\nMeanwhile, I think that powershell side of things could be improved.\r\nParticualrly, I don't like the fact that powershell silently ignores `-ContentType 'application/json'` and uses `application/x-www-form-urlencoded`. It would be better to not set the ContentType in this case at all imo.",
      "created_at": "2017-03-11T01:38:45Z",
      "updated_at": "2017-03-11T01:39:54Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@vors so the workaround is to have the word `null` in the body?\r\n",
      "created_at": "2017-03-11T01:40:27Z",
      "updated_at": "2017-03-11T01:40:27Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT in the dropbox v2 API case yes.\r\nThere could be different API endpoints that may be unavailable because of a similar issue, I don't have data about it.",
      "created_at": "2017-03-11T01:43:47Z",
      "updated_at": "2017-03-11T01:43:47Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@markekraus Could you please look the Issue?\r\n@vors Currently we was moved to .Net Core 2.1 with new WebClient - could you please update status of the Issue?",
      "created_at": "2018-10-31T14:52:45Z",
      "updated_at": "2018-10-31T14:53:05Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "Hey it works on 6.1.0 :) \ud83d\udc4d ",
      "created_at": "2018-11-04T01:52:32Z",
      "updated_at": "2018-11-04T01:52:32Z"
    },
    {
      "author": "50nar",
      "author_association": "NONE",
      "body": "Can this be re-opened ? This is still an issue in 6.2.1\r\n\r\nPowerShell 6.2.1\r\n````\r\nInvoke-WebRequest -Uri \"http://httpbin.org/headers\" -ContentType 'application/json'\r\n\r\nStatusCode        : 200\r\nStatusDescription : OK\r\nContent           : {\r\n                      \"headers\": {\r\n                        \"Host\": \"httpbin.org\",\r\n                        \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Microsoft Windows 10.0.18922; en-GB) PowerShell/6.2.1\"\r\n                      }\r\n                    }\r\n\r\nRawContent        : HTTP/1.1 200 OK\r\n                    Access-Control-Allow-Credentials: true\r\n                    Access-Control-Allow-Origin: *\r\n                    Date: Fri, 28 Jun 2019 19:01:06 GMT\r\n                    Referrer-Policy: no-referrer-when-downgrade\r\n                    Server: nginx\r\n                    X-Content-Type\u2026\r\nHeaders           : {[Access-Control-Allow-Credentials, System.String[]], [Access-Control-Allow-Origin, System.String[]], [Date, System.String[]], [Referrer-Policy, System.String[]]\u2026}\r\nImages            : {}\r\nInputFields       : {}\r\nLinks             : {}\r\nRawContentLength  : 155\r\nRelationLink      : {}\r\n```\r\n\r\nPowershell 5.1\r\n```\r\n\r\nStatusCode        : 200\r\nStatusDescription : OK\r\nContent           : {\r\n                      \"headers\": {\r\n                        \"Content-Type\": \"application/json\",\r\n                        \"Host\": \"httpbin.org\",\r\n                        \"User-Agent\": \"Mozilla/5.0 (Windows NT; Windows NT 10.0; en-GB)\r\n                    WindowsPowerShell/5.1.18922.1000\"\r\n                      }\r\n                    }\r\n\r\nRawContent        : HTTP/1.1 200 OK\r\n                    Access-Control-Allow-Credentials: true\r\n                    Access-Control-Allow-Origin: *\r\n                    Referrer-Policy: no-referrer-when-downgrade\r\n                    X-Content-Type-Options: nosniff\r\n                    X-Frame-Options: DENY\r\n                    X-XSS-Prot...\r\nForms             : {}\r\nHeaders           : {[Access-Control-Allow-Credentials, true], [Access-Control-Allow-Origin, *], [Referrer-Policy,\r\n                    no-referrer-when-downgrade], [X-Content-Type-Options, nosniff]...}\r\nImages            : {}\r\nInputFields       : {}\r\nLinks             : {}\r\nParsedHtml        : mshtml.HTMLDocumentClass\r\nRawContentLength  : 194\r\n```\r\n\r\n\r\nInvoke-WebRequest -Method Post -ContentType 'application/json' $url\r\n```\r\nThis does not send content type header at all !\r\nWhen I run it in 5.1.18922.1000 it works. I''ve also tested this on windows 8. Same behaviour\r\n```\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.2.1\r\nPSEdition                      Core\r\nGitCommitId                    6.2.1\r\nOS                             Microsoft Windows 10.0.18922\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```",
      "created_at": "2019-06-28T18:57:39Z",
      "updated_at": "2019-06-28T19:05:35Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@yar05 Please open new issue with repo steps and reference the issue.",
      "created_at": "2019-06-28T19:38:07Z",
      "updated_at": "2019-06-28T19:38:07Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@yar05 this appears to be an optimization by .NET.  `Content-Type` is only necessary if there is a body to indicate the media type of the body content.  Since you are not providing a body, that header doesn't get included.  If you try:\r\n\r\n```powershell\r\nInvoke-WebRequest -Uri \"http://httpbin.org/headers\" -ContentType \"application/json\" -Body \"test\"\r\n```\r\n\r\nYou'll see\r\n\r\n```output\r\nStatusCode        : 200                                                                                                                                                                                                                                                         StatusDescription : OK                                                                                                                                                                                                                                                          Content           : {\r\n                      \"headers\": {\r\n                        \"Content-Length\": \"4\",\r\n                        \"Content-Type\": \"application/json\",\r\n                        \"Host\": \"httpbin.org\",\r\n                        \"User-Agent\": \"Mozilla/5.0 (Macintosh; Darwin 18.6.0 Darwin Kernel Version 18.6.0:\u2026\r\nRawContent        : HTTP/1.1 200 OK\r\n                    Access-Control-Allow-Credentials: true\r\n                    Access-Control-Allow-Origin: *\r\n                    Date: Fri, 05 Jul 2019 20:45:47 GMT\r\n                    Referrer-Policy: no-referrer-when-downgrade\r\n                    Server: nginx\r\n                    X-Content-Type-Optio\u2026\r\nHeaders           : {[Access-Control-Allow-Credentials, System.String[]], [Access-Control-Allow-Origin, System.String[]], [Date, System.String[]], [Referrer-Policy, System.String[]]\u2026}\r\nImages            : {}\r\nInputFields       : {}\r\nLinks             : {}\r\nRawContentLength  : 300\r\nRelationLink      : {}\r\n```\r\n",
      "created_at": "2019-07-05T20:46:21Z",
      "updated_at": "2019-07-05T20:46:21Z"
    }
  ],
  "created_at": "2017-02-11T07:14:47Z",
  "labels": [
    "Resolution-Fixed",
    "Resolution-External",
    "WG-Cmdlets-Utility"
  ],
  "number": 3131,
  "state": "closed",
  "title": "Invoke-WebRequest / Invoke-RestMethod ContentType problem",
  "updated_at": "2021-04-26T20:37:07Z"
}