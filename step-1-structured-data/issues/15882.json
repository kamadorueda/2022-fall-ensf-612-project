{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15882",
  "author": "SteveL-MSFT",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nThe original behavior of `Automatic` was borrowed from Linux where redirection kept ANSI codes and you would need to explicitly suppress it.  macOS, on the other hand, did the opposite.  I think for most users, particularly Windows users, it would be better to default to `Host` so that ANSI is only written to the host and never to the pipeline.  This will reduce confusion for users when they redirect text to a file and see ANSI codes in it.  Users who want to keep the ANSI codes can always use `$PSStyle.OutputRendering = 'Ansi'` to force it.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [x] Issue filed: https://github.com/MicrosoftDocs/PowerShell-Docs/issues/7926\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and opened an issue in the relevant tool repository. This may include:\r\n        - [ ] Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode\r\n        (which runs in a different PS Host).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n",
  "closed_at": "2021-08-16T21:17:08Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Formally it is a breaking change.",
      "created_at": "2021-08-06T03:17:01Z",
      "updated_at": "2021-08-06T03:17:01Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "The other usage of OutputRendering.Ansi is expected.",
      "created_at": "2021-08-06T05:21:00Z",
      "updated_at": "2021-08-06T05:21:00Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@SteveL-MSFT Since now `Automatic` is default to `Host`, any reason to keep `OutputRendering.Automatic`? Could we just use `Host` as the default value for `$PSStyle.OutputRendering`?\r\n\r\nI may not fully understand the purpose of this change :) So, it looks like `Automatic` behaves like `Host` when rendering, but behaves like `Ansi` in `StringDecorated/ValueStringDecorated.ToString`. This inconsistency looks a little weird ...",
      "created_at": "2021-08-14T21:21:14Z",
      "updated_at": "2021-08-14T21:28:55Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Yeah, we should probably get rid of `Automatic` now since it works the same as `Host`.  I'll make that change.",
      "created_at": "2021-08-15T05:07:28Z",
      "updated_at": "2021-08-15T05:07:28Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "What if we want to change the default behavior for different systems after receiving feedback? ",
      "created_at": "2021-08-15T09:35:14Z",
      "updated_at": "2021-08-15T09:35:14Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov perhaps not \"ideal\", but we can always add a `Automatic` back later (it would not have enum value 0 though), but I'm convinced now that macOS got it right and Linux is just maintaining compat.",
      "created_at": "2021-08-15T17:59:14Z",
      "updated_at": "2021-08-15T17:59:14Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "Open PRs should not be assigned to milestone, so they are not assigned to the wrong milestone after they are merged.  For backport consideration, use a `backport` label. ",
      "created_at": "2021-08-16T20:35:15Z",
      "updated_at": "2021-08-16T20:35:15Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.2.0-preview.9` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.2.0-preview.9)\n",
      "created_at": "2021-08-23T18:37:08Z",
      "updated_at": "2021-08-23T18:37:08Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.2.0-preview.10` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.2.0-preview.10)\n",
      "created_at": "2021-09-28T23:18:58Z",
      "updated_at": "2021-09-28T23:18:58Z"
    }
  ],
  "created_at": "2021-08-05T22:47:54Z",
  "number": 15882,
  "state": "closed",
  "title": "Change default to `OutputRendering.Host` and remove `OutputRendering.Automatic`",
  "updated_at": "2021-09-28T23:18:59Z"
}