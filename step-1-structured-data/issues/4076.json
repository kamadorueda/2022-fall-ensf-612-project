{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4076",
  "author": "SteveL-MSFT",
  "body": "<!--\r\n\r\nIf it is a bug report:\r\n- make sure you are able to repro it on the latest released version. \r\nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\r\n- Search the existing issues.\r\n- Refer to the [FAQ](../docs/FAQ.md).\r\n- Refer to the [known issues](../docs/KNOWNISSUES.md).\r\n- Fill out the following repro template\r\n\r\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\r\n-->\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\ncopy \\\\fake\\share\\* .\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```none\r\ncmd returns \"The network path was not found.\"\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n```none\r\nNo error message, no output\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.0-beta\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.0-beta.2-61-g36c51f2f0760c2346505687ecf8e945984a1506a-dirty\r\nOS                             Microsoft Windows 10.0.16225\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\nTFS:12196563",
  "closed_at": null,
  "comments": [
    {
      "author": "Tadas",
      "author_association": "CONTRIBUTOR",
      "body": "Same with Get-ChildItem - it doesn't show an error\r\n`Get-ChildItem \\\\fake\\share\\*`\r\n\r\nRemoving the wildcard makes it work as expected\r\n```\r\nPS> Get-ChildItem \\\\fake\\share\\\r\nGet-ChildItem : Cannot find path '\\\\fake\\share\\' because it does not exist.\r\nAt line:1 char:1\r\n+ Get-ChildItem \\\\fake\\share\\\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : ObjectNotFound: (\\\\fake\\share\\:String) [Get-ChildItem], ItemNotFoundException\r\n    + FullyQualifiedErrorId : PathNotFound,Microsoft.PowerShell.Commands.GetChildItemCommand\r\n```\r\nI'll give this one a shot over the weekend, I think I know where the problem is.",
      "created_at": "2017-06-23T15:41:51Z",
      "updated_at": "2017-06-23T15:41:51Z"
    },
    {
      "author": "Tadas",
      "author_association": "CONTRIBUTOR",
      "body": "I'd say the problem lies somewhere in LocationGlobber.cs and how it handles different types of paths. `Get-ChildItem C:\\fake\\path\\*` works as expected while `Get-ChildItem \\\\fake\\path\\*` does not. \r\n\r\nBut that is as far as I got - couldn't wrap my head around LocationGlobber \ud83d\ude35",
      "created_at": "2017-06-26T22:29:12Z",
      "updated_at": "2017-06-26T22:29:12Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@Tadas thanks for looking into it anyways :)",
      "created_at": "2017-06-26T22:47:58Z",
      "updated_at": "2017-06-26T22:47:58Z"
    },
    {
      "author": "zhenggu",
      "author_association": "CONTRIBUTOR",
      "body": "on mac, Get-ChildItem //f/* also have this issue.",
      "created_at": "2018-09-18T14:50:58Z",
      "updated_at": "2018-09-18T14:50:58Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I think a non-terminating error should be returned",
      "created_at": "2018-09-18T20:16:23Z",
      "updated_at": "2018-09-18T20:16:23Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Seems we have conclusion that for wildcards we should return nothing.\r\n\r\n/cc @mklement0 ",
      "created_at": "2018-09-19T06:38:05Z",
      "updated_at": "2018-09-19T06:38:05Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov: \r\n\r\nReturning nothing for non-matching wildcards  only applies if the literal path of the part - `\\\\fake\\path` in this case - does exist; if it doesn't, I'd expect an error too.\r\n\r\n@zhenggu:\r\n\r\n> on mac, `Get-ChildItem //f/*` also have this issue.\r\n\r\nIndeed - very curious, given that `//` has no special meaning on Unix-like platforms and _should_ just be treated as a single `/`. In fact, that applies even to 3+ consecutive `/` chars.",
      "created_at": "2018-09-19T13:39:17Z",
      "updated_at": "2018-09-19T13:39:17Z"
    }
  ],
  "created_at": "2017-06-22T18:10:24Z",
  "number": 4076,
  "state": "open",
  "title": "copy from \\\\fake\\share doesn't output error message",
  "updated_at": "2021-11-30T15:40:15Z"
}