{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12002",
  "author": "KevinMarquette",
  "body": "After installing the 7.0.0 GA, I discovered that my PS 6.2 folder was empty. Is this intended?\r\n\r\nI Installed using PowerShell-7.0.0-win-x64.msi\r\n\r\n# Expected behavior\r\nI expected that my PowerShell 6 release would have been left in place.\r\n\r\n# Actual behavior\r\nC:\\Program Files\\PowerShell\\6 is empty.\r\nAny shortcuts or tasks targeting that release are not broken.\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0\r\nOS                             Microsoft Windows 10.0.18363\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "KaylorDave",
      "author_association": "NONE",
      "body": "Seconding this, I was rather surprised when my PowerShell 6 install was removed.",
      "created_at": "2020-03-04T18:00:31Z",
      "updated_at": "2020-03-04T18:00:31Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "Same here.  Hmm...",
      "created_at": "2020-03-04T18:00:39Z",
      "updated_at": "2020-03-04T18:00:50Z"
    },
    {
      "author": "tommymaynard",
      "author_association": "CONTRIBUTOR",
      "body": "I lost everything in `/Program Files/PowerShell/6`, `6.0.4`, and `6-preview`. Launching PowerShell 6.2.4 in the Windows Terminal resulted in `\"[error 0x80070002 when launching 'C:\\Program Files\\PowerShell\\6\\pwsh.exe']`.",
      "created_at": "2020-03-04T18:02:22Z",
      "updated_at": "2020-03-04T18:02:22Z"
    },
    {
      "author": "KaylorDave",
      "author_association": "NONE",
      "body": "For anyone who comes across this, you can keep your 6 install side-by-side by just copying the PowerShell\\6 folder somewhere else prior to installing 7. Doesn't help if you've already lost your 6 install though :(.",
      "created_at": "2020-03-04T18:02:49Z",
      "updated_at": "2020-03-04T18:02:49Z"
    },
    {
      "author": "techthoughts2",
      "author_association": "NONE",
      "body": "Same. While excited for 7 we will have use for PowerShell 6 for some time. Wasn't expecting it to be removed.",
      "created_at": "2020-03-04T18:05:08Z",
      "updated_at": "2020-03-04T18:05:08Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Checking on this",
      "created_at": "2020-03-04T18:08:37Z",
      "updated_at": "2020-03-04T18:08:37Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "It was discussed long time ago and it is by design because we can have only single \"main\" version.",
      "created_at": "2020-03-04T18:10:54Z",
      "updated_at": "2020-03-04T18:10:54Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "Not sure that makes sense.  What is the point then of installing into versioned directories: `6` and `7`?",
      "created_at": "2020-03-04T18:12:16Z",
      "updated_at": "2020-03-04T18:12:16Z"
    },
    {
      "author": "KaylorDave",
      "author_association": "NONE",
      "body": "It's fine for there to only be one 'main' version advertised by GitHub or by installation scripts, but we still have a use for 6, why does it need to remove 6 on my local system when they run fine as separate executables?",
      "created_at": "2020-03-04T18:12:51Z",
      "updated_at": "2020-03-04T18:12:51Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> why does it need to remove 6 on my local system when they run fine as separate executables?\r\n\r\n_Because it is design for MSI installer. If you want install 7.0 as SxS you must use ZIP package._\r\n\r\nI won\u2019t be surprised if this is in the documentation.\r\n",
      "created_at": "2020-03-04T18:17:41Z",
      "updated_at": "2020-03-04T18:18:46Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Looks like I missed some team discussion on this or forgot about it.  Anyways, the official answer is that PS7 is expected to be an update over PS6.  So the current behavior is by-design.   We'll make sure docs call it out explicitly.",
      "created_at": "2020-03-04T18:18:03Z",
      "updated_at": "2020-03-04T18:18:03Z"
    },
    {
      "author": "KevinMarquette",
      "author_association": "CONTRIBUTOR",
      "body": "I am fine with the `$env:path` getting cleared so you only get the latest when you run pwsh. But I don't think it should remove the 6 files. Any place we have a full path specified will be broken. \r\n\r\nThis makes the install of 7 over 6 a dangerous upgrade that can break things even if it would have been compatible. We have been preaching the side by side nature of PowerShell to the community for a while now and deleting those files breaks that promise.",
      "created_at": "2020-03-04T18:22:47Z",
      "updated_at": "2020-03-04T18:22:47Z"
    },
    {
      "author": "KaylorDave",
      "author_association": "NONE",
      "body": "> Because it is design for MSI installer. If you want install 7.0 as SxS you must use ZIP package.\r\n\r\nThe MSI could have been designed with SxS as an option. Or it could have warned that it was going to remove 6.x versions.",
      "created_at": "2020-03-04T18:25:35Z",
      "updated_at": "2020-03-04T18:25:35Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Please see PowerShell Committee conclution https://github.com/PowerShell/PowerShell-RFC/pull/202#issuecomment-516135008",
      "created_at": "2020-03-04T18:28:37Z",
      "updated_at": "2020-03-04T18:28:37Z"
    },
    {
      "author": "KaylorDave",
      "author_association": "NONE",
      "body": "I understand the reasoning, but at the end of the day this is a behavior change from previous updates. It doesn't even particularly matter to me where this ends up, other SxS installation methods are available. But there was no communication on this and there's nothing I can find in the docs. This should be communicated in the main README file on the github page imo.",
      "created_at": "2020-03-04T18:34:34Z",
      "updated_at": "2020-03-04T18:34:34Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Yeah communication should have been significantly more overt and clear here. I don't think we can reasonably expect an appreciable percentage of pwsh users to be regularly checking / taking notes on occurrences in the RFC repo.\r\n\r\nIf a change in behaviour or policy is documented in a way that changes something significantly, it probably should be documented outside the repo in a help topic, and probably publicised by the powershell team.",
      "created_at": "2020-03-04T18:37:01Z",
      "updated_at": "2020-03-04T18:37:01Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "Worth noting that on macOS and Linux, upgrading PowerShell through the package manager necessarily clobbers the previous install. So far all the stable installs have removed the previous one on all platforms.",
      "created_at": "2020-03-04T18:39:34Z",
      "updated_at": "2020-03-04T18:39:34Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> The MSI could have been designed with SxS as an option. \r\n\r\nThis will lead to bugs. PowerShell depends on some environment variables, which constantly leads to problems of coexistence, but the MSFT team is not yet ready to abandon these dependencies.",
      "created_at": "2020-03-04T18:40:17Z",
      "updated_at": "2020-03-04T18:40:17Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> Worth noting that on macOS and Linux, upgrading PowerShell through the package manager necessarily clobbers the previous install.\r\n\r\nAnd having the same experience on all platforms is very good UX.",
      "created_at": "2020-03-04T18:43:29Z",
      "updated_at": "2020-03-04T18:43:29Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "> This makes the install of 7 over 6 a dangerous upgrade that can break things even if it would have been compatible. We have been preaching the side by side nature of PowerShell to the community for a while now and deleting those files breaks that promise.\r\n\r\nFrom a code perspective, it's no more dangerous than us doing an in-place upgrade from 6.0 to 6.1 and then again to 6.2 (which we did do). The trade off here was against having a dangling 6.2 on your box that's out of support in <6 months and can't be upgraded to a supported, serviceable state. \r\n\r\nI hear everyone that we could have communicated better, and I can add some of this language to my announcement blog if folks think it would be helpful as a call out there. ",
      "created_at": "2020-03-04T18:53:59Z",
      "updated_at": "2020-03-04T18:53:59Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "> The trade off here was against having a dangling 6.2 on your box that's out of support in <6 months and can't be upgraded to a supported, serviceable state.\r\n\r\nFWIW this happened to me. Had 6.0.2 on my box and didn't realise for a year until I picked it up as a bug when writing [this](https://github.com/PowerShell/vscode-powershell/pull/2238).",
      "created_at": "2020-03-04T18:59:59Z",
      "updated_at": "2020-03-04T18:59:59Z"
    },
    {
      "author": "austoonz",
      "author_association": "NONE",
      "body": "Perhaps an MSI installer flag should be added that allows the customer to \"KeepExistingPwshVersions\"?\r\nThen customers can decide at install time whether they want previous versions removed or not.",
      "created_at": "2020-03-04T21:32:19Z",
      "updated_at": "2020-03-04T21:32:19Z"
    },
    {
      "author": "jckenny",
      "author_association": "NONE",
      "body": "Will PowerShell 8 automatically remove 7 when that is released or will 7 not be touched because it is a long term support release?",
      "created_at": "2020-03-06T16:42:07Z",
      "updated_at": "2020-03-06T16:42:07Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "For next version numbering #12057",
      "created_at": "2020-03-06T17:56:55Z",
      "updated_at": "2020-03-06T17:56:55Z"
    }
  ],
  "created_at": "2020-03-04T17:53:15Z",
  "number": 12002,
  "state": "open",
  "title": "Installing PowerShell 7.0.0 GA removed my PS 6 install",
  "updated_at": "2020-03-06T17:56:55Z"
}