{
  "_url": "https://github.com/PowerShell/PowerShell/issues/776",
  "author": "palladia",
  "body": "There are two ways to load a module, Load(Module), or LoadFrom(Path).  Load(Module) only seems to look in default (bin) directory, so personal Modules (in $HOME/.powershell/Modules, e.g.) needs LoadFrom() to load it correctly.  \n\nBut it seems that LoadFrom() calls Load() anyway, before attempting to load from path.  But since Load() throws an exception if it cannot load, LoadFrom() never gets to try to load from path, resulting in an error.\n\nWe need to put try..catch around the Load() call, so that if it throws exception, it will still attempt to load from full path.\n\n<!-- Reviewable:start -->\n\n---\n\nThis change is [<img src=\"https://reviewable.io/review_button.svg\" height=\"35\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/powershell/powershell/776)\n\n<!-- Reviewable:end -->\n",
  "closed_at": "2016-04-09T01:58:45Z",
  "comments": [
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "A module or a DLL?\n",
      "created_at": "2016-04-06T21:02:12Z",
      "updated_at": "2016-04-06T21:02:12Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Ah its a PR (sorry on phone), can you describe what was happening? We can't do a catch all here, and there are other locations this logic exists.\n",
      "created_at": "2016-04-06T21:16:30Z",
      "updated_at": "2016-04-06T21:16:30Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "Doess thi API throw exception?\nWe need a test for that.\n",
      "created_at": "2016-04-06T21:21:12Z",
      "updated_at": "2016-04-06T21:21:12Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "I think we indeed Specifically want to catch a FileNotFoundException here, but nothing else, and we'll have to track down in the old repo the other place this happens.\n",
      "created_at": "2016-04-06T21:25:11Z",
      "updated_at": "2016-04-06T21:25:11Z"
    },
    {
      "author": "palladia",
      "author_association": "CONTRIBUTOR",
      "body": "In my scenario, it was trying to load the Microsoft.PowerShell.PSReadLine.dll in my ~/.powershell/Modules/PSReadLine directory.  \n\nFrom what I could trace, this call to PowerShellAssemblyLoadContext::LoadFrom() calls Assembly.Load(\"PSReadLine\"), which somehow calls PowerShellAssemblyLoadContext::Load(\"PSReadLine\").  It throws FileNotFoundException in there because it can't find ~/PowerShell/bin/PSReadLine.dll.\n\nAt the very least, Load() throws FileNotFoundException or FileLoadException.  There could be other exceptions thrown.\n",
      "created_at": "2016-04-06T21:33:37Z",
      "updated_at": "2016-04-06T21:33:37Z"
    },
    {
      "author": "palladia",
      "author_association": "CONTRIBUTOR",
      "body": "I was actually more worried about the locking, but I didn't observe any problem.\n",
      "created_at": "2016-04-06T21:36:30Z",
      "updated_at": "2016-04-06T21:36:30Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Yeah this code is tricky because we're trying to simultaneously support three flavors in a bunch of different scenarios. \n",
      "created_at": "2016-04-06T21:51:52Z",
      "updated_at": "2016-04-06T21:51:52Z"
    },
    {
      "author": "palladia",
      "author_association": "CONTRIBUTOR",
      "body": "That's why I asked about the history (and how well it's tested).\n",
      "created_at": "2016-04-06T21:53:18Z",
      "updated_at": "2016-04-06T21:53:18Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Recent history is available in the psl-monad repo. I'll take a look at this tomorrow. Unfortunately we don't have extensive module testing (yet) so this code was tested by the good old \"is it working yet\" approach to getting the not-yet-deprecated snapin system to actually load all of PowerShell's assemblies yet (via the CorePsSnapIn for SMA _and_ system modules for the the rest), keeping in mind that in .NET Core scenario, all these assemblies are already in the TPA, and so we're just satisfying PowerShell's demands (and letting it do its cmdlets analysis).\n",
      "created_at": "2016-04-06T21:57:32Z",
      "updated_at": "2016-04-06T21:57:32Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Can you post the path it was going to attempt to load PsReadLine from? It should be a local variable once you break in this function.\n",
      "created_at": "2016-04-06T21:58:57Z",
      "updated_at": "2016-04-06T21:58:57Z"
    },
    {
      "author": "palladia",
      "author_association": "CONTRIBUTOR",
      "body": "I was a bit surprised to find this complicated code, and it just looked a bit strangely written.\n",
      "created_at": "2016-04-06T22:02:26Z",
      "updated_at": "2016-04-06T22:02:26Z"
    },
    {
      "author": "palladia",
      "author_association": "CONTRIBUTOR",
      "body": "My module was \"PSReadLine\", and its manifest file lists a \"nested\" assembly as \"Microsoft.PowerShell.PSreadLine.dll\".\n\nIf you look at ClrFacade::LoadAssembly(), you see that it first attempts to call ClrFacade.Load(\"PSReadLine\"), and then ClrFacade.LoadFrom(thefullpath).  I guess if you don't like catch-all, you can catch at least the 4 exceptions listed there?\n\nAnyway, ClrFacade ends up calling PsAssemblyLoadContext.Load(), which only looked for following:\n/home/george/PowerShell/bin/Microsoft.PowerShell.PSReadLine.ni.dll\n/home/george/PowerShell/bin/Microsoft.PowerShell.PSReadLine.dll\nSince neither exists, it throws FileNotFoundException and give up.\n\nIt then goes to LoadFrom(), which repeats the call to Load(), and fails identically as the first call.  But since LoadFrom() did not have the catches, it gives up prematurely, and the DLL is never found/loaded.\n",
      "created_at": "2016-04-06T22:10:25Z",
      "updated_at": "2016-04-06T22:10:25Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:This issue was addressed in #10017, which has now been successfully released as `v7.0.0-preview.2`.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.0.0-preview.2)\n",
      "created_at": "2019-07-17T20:54:14Z",
      "updated_at": "2019-07-17T20:54:14Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:This issue was addressed in #9954, which has now been successfully released as `v7.0.0-preview.2`.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.0.0-preview.2)\n",
      "created_at": "2019-07-17T20:54:17Z",
      "updated_at": "2019-07-17T20:54:17Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:This issue was addressed in #9885, which has now been successfully released as `v7.0.0-preview.2`.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.0.0-preview.2)\n",
      "created_at": "2019-07-17T20:54:20Z",
      "updated_at": "2019-07-17T20:54:20Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:This issue was addressed in #9875, which has now been successfully released as `v7.0.0-preview.2`.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.0.0-preview.2)\n",
      "created_at": "2019-07-17T20:54:24Z",
      "updated_at": "2019-07-17T20:54:24Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:This issue was addressed in #9862, which has now been successfully released as `v7.0.0-preview.2`.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.0.0-preview.2)\n",
      "created_at": "2019-07-17T20:54:27Z",
      "updated_at": "2019-07-17T20:54:27Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:This issue was addressed in #9854, which has now been successfully released as `v7.0.0-preview.2`.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.0.0-preview.2)\n",
      "created_at": "2019-07-17T20:54:30Z",
      "updated_at": "2019-07-17T20:54:30Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:This issue was addressed in #9843, which has now been successfully released as `v7.0.0-preview.2`.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.0.0-preview.2)\n",
      "created_at": "2019-07-17T20:54:33Z",
      "updated_at": "2019-07-17T20:54:33Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:This issue was addressed in #9805, which has now been successfully released as `v7.0.0-preview.2`.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.0.0-preview.2)\n",
      "created_at": "2019-07-17T20:54:36Z",
      "updated_at": "2019-07-17T20:54:36Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:This issue was addressed in #10364, which has now been successfully released as `v7.0.0-preview.3`.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.0.0-preview.3)\n",
      "created_at": "2019-08-20T22:35:55Z",
      "updated_at": "2019-08-20T22:35:55Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:This issue was addressed in #10421, which has now been successfully released as `v7.0.0-preview.4`.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.0.0-preview.4)\n",
      "created_at": "2019-09-19T17:51:13Z",
      "updated_at": "2019-09-19T17:51:13Z"
    }
  ],
  "created_at": "2016-04-06T16:46:42Z",
  "number": 776,
  "state": "closed",
  "title": "ipmo fails to load personal module",
  "updated_at": "2019-09-19T17:51:13Z"
}