{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9893",
  "author": "daxian-dbw",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nFix #9779 \r\n\r\n.NET Core changes to return \"shortest roundtrippable string\" by default for the `ToString()` method of `double` and `float` types. This results in `ToString()` for `double`/`float` values sometimes return a string in 17-digit/9-digit precision format. This PR updated the double/float-to-string conversion in PowerShell to continue using the old precision specifier before the change in .NET Core 3.0.\r\n\r\n## PR Context\r\n\r\n<!-- Provide a little reasoning as to why this Pull Request helps and why you have opened it. -->\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [ ] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n",
  "closed_at": "2019-06-19T03:56:44Z",
  "comments": [
    {
      "author": "PoshChan",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw, your last commit had 14 failures in `PowerShell-CI-linux`\r\n(These are 5 of the failures)\r\n\r\nTabCompletion.Should complete abbreviated cmdlet\r\n```powershell\r\nExpected exactly 'Import-PowerShellDataFile', but got $null.\r\nat <ScriptBlock>, /home/vsts/work/1/s/test/powershell/Host/TabCompletion/TabCompletion.Tests.ps1: line 16\r\n16:         $res | Should -BeExactly 'Import-PowerShellDataFile'\r\n```\r\nTabCompletion.Should complete abbreviated function\r\n```powershell\r\nExpected the actual value to be greater than or equal to 1, but got 0.\r\nat <ScriptBlock>, /home/vsts/work/1/s/test/powershell/Host/TabCompletion/TabCompletion.Tests.ps1: line 21\r\n21:         $res.Count | Should -BeGreaterOrEqual 1\r\n```\r\nTemp: drive.TEMP: drive exists\r\n```powershell\r\nExpected exactly 'Temp', but got $null.\r\nat <ScriptBlock>, /home/vsts/work/1/s/test/powershell/Modules/Microsoft.PowerShell.Management/Get-PSDrive.Tests.ps1: line 64\r\n64:         $res.Name | Should -BeExactly \"Temp\"\r\n```\r\nGet-Command Feature tests.-UseAbbreviationExpansion tests.Can return multiple results relying on auto module loading\r\n```powershell\r\nExpected a collection with size 2, but got an empty collection.\r\nat <ScriptBlock>, /home/vsts/work/1/s/test/powershell/Modules/Microsoft.PowerShell.Utility/Get-Command.Tests.ps1: line 39\r\n39:             $results | Should -HaveCount 2\r\n```\r\nGet-Command Feature tests.-UseAbbreviationExpansion tests.Can return multiple results for cmdlets matching abbreviation\r\n```powershell\r\nExpected 'Invoke-Command' to be found in collection @(), but it was not found.\r\nat <ScriptBlock>, /home/vsts/work/1/s/test/powershell/Modules/Microsoft.PowerShell.Utility/Get-Command.Tests.ps1: line 69\r\n69:             $results.Name | Should -Contain \"Invoke-Command\"\r\n```\r\n",
      "created_at": "2019-06-13T20:23:06Z",
      "updated_at": "2019-06-13T20:23:06Z"
    },
    {
      "author": "PoshChan",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw, your last commit had 8 failures in `PowerShell-CI-macos`\r\n(These are 5 of the failures)\r\n\r\nTemp: drive.TEMP: drive exists\r\n```powershell\r\nExpected exactly 'Temp', but got $null.\r\nat <ScriptBlock>, /Users/vsts/agent/2.152.1/work/1/s/test/powershell/Modules/Microsoft.PowerShell.Management/Get-PSDrive.Tests.ps1: line 64\r\n64:         $res.Name | Should -BeExactly \"Temp\"\r\n```\r\nGet-Command Feature tests.-UseAbbreviationExpansion tests.Can return multiple results relying on auto module loading\r\n```powershell\r\nExpected a collection with size 2, but got an empty collection.\r\nat <ScriptBlock>, /Users/vsts/agent/2.152.1/work/1/s/test/powershell/Modules/Microsoft.PowerShell.Utility/Get-Command.Tests.ps1: line 39\r\n39:             $results | Should -HaveCount 2\r\n```\r\nGet-Command Feature tests.-UseAbbreviationExpansion tests.Can return multiple results for cmdlets matching abbreviation\r\n```powershell\r\nExpected 'Invoke-Command' to be found in collection @(), but it was not found.\r\nat <ScriptBlock>, /Users/vsts/agent/2.152.1/work/1/s/test/powershell/Modules/Microsoft.PowerShell.Utility/Get-Command.Tests.ps1: line 69\r\n69:             $results.Name | Should -Contain \"Invoke-Command\"\r\n```\r\nGet-Command Feature tests.-UseAbbreviationExpansion tests.Will return multiple results for functions matching abbreviation\r\n```powershell\r\nExpected a collection with size 2, but got an empty collection.\r\nat <ScriptBlock>, /Users/vsts/agent/2.152.1/work/1/s/test/powershell/Modules/Microsoft.PowerShell.Utility/Get-Command.Tests.ps1: line 87\r\n87:                 $results | Should -HaveCount 2\r\n```\r\nGet-Command Feature tests.-UseAbbreviationExpansion tests.Valid cmdlets works with name i-psdf and module $null\r\n```powershell\r\nExpected a collection with size 1, but got an empty collection.\r\nat <ScriptBlock>, /Users/vsts/agent/2.152.1/work/1/s/test/powershell/Modules/Microsoft.PowerShell.Utility/Get-Command.Tests.ps1: line 62\r\n62:             $results | Should -HaveCount 1\r\n```\r\n",
      "created_at": "2019-06-13T20:35:50Z",
      "updated_at": "2019-06-13T20:35:50Z"
    },
    {
      "author": "PoshChan",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw, your last commit had 4 failures in `PowerShell-CI-linux`\r\nDotNetAPI.Should be able to use static .NET classes and get a constant\r\n```powershell\r\nExpected regular expression '2.718281828459045' to match 2.71828182845905, but it did not match.\r\nat <ScriptBlock>, /home/vsts/work/1/s/test/powershell/Language/Interop/DotNet/DotNetAPI.Tests.ps1: line 9\r\n9: \t[System.Math]::E  | Should -Match $posh_E.ToString()\r\n```\r\nParserTests (admin\\monad\\tests\\monad\\src\\engine\\core\\ParserTests.cs).Numerical Notations Tests (starting at line 2374 to line 2452).-3.402823E+38 should return -3.4028235E+38, with type [double]\r\n```powershell\r\nExpected '-3.4028235E+38', but got -3.402823E+38.\r\nat <ScriptBlock>, /home/vsts/work/1/s/test/powershell/Language/Parser/Parser.Tests.ps1: line 937\r\n937:             ExecuteCommand $Script | Should -Be $ExpectedValue\r\n```\r\nParserTests (admin\\monad\\tests\\monad\\src\\engine\\core\\ParserTests.cs).Numerical Notations Tests (starting at line 2374 to line 2452).3.402823E+38 should return 3.4028235E+38, with type [double]\r\n```powershell\r\nExpected '3.4028235E+38', but got 3.402823E+38.\r\nat <ScriptBlock>, /home/vsts/work/1/s/test/powershell/Language/Parser/Parser.Tests.ps1: line 937\r\n937:             ExecuteCommand $Script | Should -Be $ExpectedValue\r\n```\r\nJoin-String.Should join numeric values Formatted\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 16\r\nActual length:   13\r\nStrings differ at index 3.\r\nExpected: '1.20; 3.40; 5.60'\r\nBut was:  '1.2; 3.4; 5.6'\r\nat <ScriptBlock>, /home/vsts/work/1/s/test/powershell/Modules/Microsoft.PowerShell.Utility/Join-String.Tests.ps1: line 67\r\n67:         $actual | Should -BeExactly $expected\r\n```\r\n",
      "created_at": "2019-06-13T22:00:34Z",
      "updated_at": "2019-06-13T22:00:34Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Enforcing `G15` for double type results in a few test failures. Will look into them.",
      "created_at": "2019-06-13T22:48:52Z",
      "updated_at": "2019-06-13T22:48:52Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@iSazonov @rjmholt The `TryFastTrackPrimitiveTypes` method was updated to always honor the `format` and `formatProvider`.\r\nPlease take another look, thanks!",
      "created_at": "2019-06-14T15:27:16Z",
      "updated_at": "2019-06-14T15:27:34Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Rebased to master to force Windows CI to work properly.",
      "created_at": "2019-06-17T16:45:01Z",
      "updated_at": "2019-06-17T16:45:01Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Restarted MacOs Ci.\r\n\r\nI wonder that Macos CI is very slow now (week ago it was very fast).",
      "created_at": "2019-06-17T17:54:45Z",
      "updated_at": "2019-06-17T18:20:36Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@iSazonov All CI builds passed. This PR is ready to be merged :)",
      "created_at": "2019-06-18T20:52:56Z",
      "updated_at": "2019-06-18T20:52:56Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "Thank you, guys! Appreciate it \ud83d\ude4f \ud83d\ude4f \ud83d\ude4f ",
      "created_at": "2019-06-19T04:38:00Z",
      "updated_at": "2019-06-19T04:38:00Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.0.0-preview.2` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.0.0-preview.2)\n",
      "created_at": "2019-07-17T20:56:23Z",
      "updated_at": "2019-07-17T20:56:23Z"
    }
  ],
  "created_at": "2019-06-13T20:02:44Z",
  "number": 9893,
  "state": "closed",
  "title": "Use the original precision (prior-dotnet-core-3) for double/fload-to-string conversion",
  "updated_at": "2019-07-17T20:56:23Z"
}