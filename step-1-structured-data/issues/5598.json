{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5598",
  "author": "Stephanevg",
  "body": "Hi,\r\n\r\nI bumped into this issue, which threw me off, at the begining since I though my Instance wasn't created.\r\nIt is impossible to list the members of our instance until we add something to the Queue. \r\nI would expect that once I have instanciated my object, I can have a look at it's members prior to having to add something into the queue.\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\n$q = New-Object System.Collections.Queue\r\n$q | gm # throws an error\r\n\r\n$q.Enqueue(\"hi\")\r\n$q | gm # does not throw an error anymore, and will display the existing members.\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```powershell\r\n$q = New-Object System.Collections.Queue\r\n$q | gm #should display the members that are available to us even thou the queue is still empty.\r\n\r\n   TypeName: System.String\r\n\r\nName             MemberType            Definition\r\n----             ----------            ----------\r\nClone            Method                System.Object Clone(), System.Object ICloneable.Clone()\r\nCompareTo        Method                int CompareTo(System.Object value), int CompareTo(string strB), int IComparable.CompareTo(System.Obj...\r\nContains         Method                bool Contains(string value)\r\nCopyTo           Method                void CopyTo(int sourceIndex, char[] destination, int destinationIndex, int count)\r\nEndsWith         Method                bool EndsWith(string value), bool EndsWith(string value, System.StringComparison comparisonType), bo...\r\nEquals           Method                bool Equals(System.Object obj), bool Equals(string value), bool Equals(string value, System.StringCo...\r\nGetEnumerator    Method                System.CharEnumerator GetEnumerator(), System.Collections.IEnumerator IEnumerable.GetEnumerator(), S...\r\nGetHashCode      Method                int GetHashCode()\r\nGetType          Method                type GetType()\r\nGetTypeCode      Method                System.TypeCode GetTypeCode(), System.TypeCode IConvertible.GetTypeCode()\r\nIndexOf          Method                int IndexOf(char value), int IndexOf(char value, int startIndex), int IndexOf(char value, int startI...\r\nIndexOfAny       Method                int IndexOfAny(char[] anyOf), int IndexOfAny(char[] anyOf, int startIndex), int IndexOfAny(char[] an...\r\nInsert           Method                string Insert(int startIndex, string value)\r\nIsNormalized     Method                bool IsNormalized(), bool IsNormalized(System.Text.NormalizationForm normalizationForm)\r\nLastIndexOf      Method                int LastIndexOf(char value), int LastIndexOf(char value, int startIndex), int LastIndexOf(char value...\r\nLastIndexOfAny   Method                int LastIndexOfAny(char[] anyOf), int LastIndexOfAny(char[] anyOf, int startIndex), int LastIndexOfA...\r\nNormalize        Method                string Normalize(), string Normalize(System.Text.NormalizationForm normalizationForm)\r\nPadLeft          Method                string PadLeft(int totalWidth), string PadLeft(int totalWidth, char paddingChar)\r\nPadRight         Method                string PadRight(int totalWidth), string PadRight(int totalWidth, char paddingChar)\r\nRemove           Method                string Remove(int startIndex, int count), string Remove(int startIndex)\r\nReplace          Method                string Replace(char oldChar, char newChar), string Replace(string oldValue, string newValue)\r\nSplit            Method                string[] Split(Params char[] separator), string[] Split(char[] separator, int count), string[] Split...\r\nStartsWith       Method                bool StartsWith(string value), bool StartsWith(string value, System.StringComparison comparisonType)...\r\nSubstring        Method                string Substring(int startIndex), string Substring(int startIndex, int length)\r\nToBoolean        Method                bool IConvertible.ToBoolean(System.IFormatProvider provider)\r\nToByte           Method                byte IConvertible.ToByte(System.IFormatProvider provider)\r\nToChar           Method                char IConvertible.ToChar(System.IFormatProvider provider)\r\nToCharArray      Method                char[] ToCharArray(), char[] ToCharArray(int startIndex, int length)\r\nToDateTime       Method                datetime IConvertible.ToDateTime(System.IFormatProvider provider)\r\nToDecimal        Method                decimal IConvertible.ToDecimal(System.IFormatProvider provider)\r\nToDouble         Method                double IConvertible.ToDouble(System.IFormatProvider provider)\r\nToInt16          Method                int16 IConvertible.ToInt16(System.IFormatProvider provider)\r\nToInt32          Method                int IConvertible.ToInt32(System.IFormatProvider provider)\r\nToInt64          Method                long IConvertible.ToInt64(System.IFormatProvider provider)\r\nToLower          Method                string ToLower(), string ToLower(cultureinfo culture)\r\nToLowerInvariant Method                string ToLowerInvariant()\r\nToSByte          Method                sbyte IConvertible.ToSByte(System.IFormatProvider provider)\r\nToSingle         Method                float IConvertible.ToSingle(System.IFormatProvider provider)\r\nToString         Method                string ToString(), string ToString(System.IFormatProvider provider), string IConvertible.ToString(Sy...\r\nToType           Method                System.Object IConvertible.ToType(type conversionType, System.IFormatProvider provider)\r\nToUInt16         Method                uint16 IConvertible.ToUInt16(System.IFormatProvider provider)\r\nToUInt32         Method                uint32 IConvertible.ToUInt32(System.IFormatProvider provider)\r\nToUInt64         Method                uint64 IConvertible.ToUInt64(System.IFormatProvider provider)\r\nToUpper          Method                string ToUpper(), string ToUpper(cultureinfo culture)\r\nToUpperInvariant Method                string ToUpperInvariant()\r\nTrim             Method                string Trim(Params char[] trimChars), string Trim()\r\nTrimEnd          Method                string TrimEnd(Params char[] trimChars)\r\nTrimStart        Method                string TrimStart(Params char[] trimChars)\r\nChars            ParameterizedProperty char Chars(int index) {get;}\r\nLength           Property              int Length {get;}\r\n\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n```powershell\r\n$q = New-Object System.Collections.Queue\r\n$q | gm # throws an error\r\n\r\ngm : You must specify an object for the Get-Member cmdlet.\r\nAt line:1 char:6\r\n+ $q | gm # throws an error\r\n+      ~~\r\n    + CategoryInfo          : CloseError: (:) [Get-Member], InvalidOperationException\r\n    + FullyQualifiedErrorId : NoObjectInGetMember,Microsoft.PowerShell.Commands.GetMemberCommand\r\n\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value\r\n----                           -----\r\nPSVersion                      5.1.14393.1884\r\nPSEdition                      Desktop\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nBuildVersion                   10.0.14393.1884\r\nCLRVersion                     4.0.30319.42000\r\nWSManStackVersion              3.0\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\n```\r\n\r\n",
  "closed_at": "2019-09-28T18:35:54Z",
  "comments": [
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@Stephanevg Please note that this repo is only for PowerShell Core (6.0.0) issues. Windows PowerShell (5.1) issues should be filed on [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell).\r\n\r\nI have reproduced this for you on \r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.0-rc\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.0-rc\r\nOS                             Microsoft Windows 10.0.15063\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\nThis appears to be `by design`. `System.Collections.Queue` Implements `IEnumerable`. Enumerables are unwrapped when piped, meaning each element of the collection is sent separately through the pipeline.  \r\n\r\nYour code is equivalent to \r\n\r\n```powershell\r\n@() | Get-Member\r\n```\r\n\r\nYou can avoid this unwrapping using the unary comma operator:\r\n\r\n```powershell\r\n,$q | Get-Member\r\n```\r\n\r\nOr using the `-InputObject`  parameter:\r\n\r\n```powershell\r\nGet-Member -InputObject $q\r\n```",
      "created_at": "2017-12-01T10:48:38Z",
      "updated_at": "2017-12-01T10:49:24Z"
    }
  ],
  "created_at": "2017-12-01T10:37:39Z",
  "number": 5598,
  "state": "closed",
  "title": "System.Collections.Queue throws error when piped to Get-Member",
  "updated_at": "2019-09-28T18:35:54Z"
}