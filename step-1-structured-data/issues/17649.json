{
  "_url": "https://github.com/PowerShell/PowerShell/issues/17649",
  "author": "mklement0",
  "body": "### Prerequisites\r\n\r\n- [X] Write a descriptive title.\r\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- [X] Search the existing issues.\r\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\r\n\r\n### Steps to reproduce\r\n\r\nNote: Only `[hashtable]` is affected, not also `[ordered]` hashtables / generic dictionaries.\r\n\r\n```powershell\r\n# The call on the *unordered* hashtable fails quietly.\r\n# .ForEach('ToString') would yield an analogous symptom.\r\n(@{ foo = 1 }, [ordered] @{ foo = 2 }).ForEach('Item', 'foo')\r\n```\r\n\r\n### Expected behavior\r\n\r\n```console\r\n1\r\n2\r\n```\r\n\r\n\r\n### Actual behavior\r\n\r\n```console\r\n2\r\n```\r\n\r\n\r\n### Error details\r\n\r\n_No response_\r\n\r\n### Environment data\r\n\r\n```powershell\r\nPowerShell Core 7.3.0-preview.5\r\n```\r\n\r\n\r\n### Visuals\r\n\r\n_No response_",
  "closed_at": null,
  "comments": [
    {
      "author": "jhoneill",
      "author_association": "NONE",
      "body": "Since you're gathering some of the weirder things hash tables do, I imported something which was equivalent to   \r\n`@{locks=1; keys=2}`    Which `.Keys` would you expect to have precedence ? \r\n",
      "created_at": "2022-07-09T10:44:47Z",
      "updated_at": "2022-07-09T10:44:47Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "For it to be consistent with member-access enumeration, the type-native `.Keys` property _should_ take precedence, but it is the other way around, unfortunately (workaround: ` @{locks=1; keys=2}.get_Keys()` or `@{locks=1; keys=2}.psbase.Keys`) - see #7758\r\n\r\n\r\n\r\n",
      "created_at": "2022-07-09T12:41:40Z",
      "updated_at": "2022-07-09T12:41:40Z"
    },
    {
      "author": "jhoneill",
      "author_association": "NONE",
      "body": ":-)  No surprise that it's come up before and if anyone knew it , I guess you would.  \r\n \r\nI got to `get_keys()`  - eventually. But I had to go some serious bafflement and swearing before it dawned on me that  I was getting something back from an API call which got converted into a hashtable which had \"keys\" as a key.  \r\n",
      "created_at": "2022-07-09T15:52:35Z",
      "updated_at": "2022-07-09T15:52:35Z"
    }
  ],
  "created_at": "2022-07-08T19:09:19Z",
  "number": 17649,
  "state": "open",
  "title": "Intrinsic .ForEach() method doesn't work with methods / parameterized properties of hashtables",
  "updated_at": "2022-07-11T17:12:53Z"
}