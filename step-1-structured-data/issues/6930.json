{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6930",
  "author": "iSazonov",
  "body": "## PR Summary\r\n\r\nRelated #4708.\r\n\r\nDisable:\r\n1. [SA1402 FileMayOnlyContainASingleType\r\n](https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1402.md)\r\n1. [SA1403 FileMayOnlyContainASingleNamespace\r\n](https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1403.md) \r\n1. [SA1101 PrefixLocalCallsWithThis](https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1101.md)\r\n1. [SA1126 PrefixCallsCorrectly](https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1126.md)\r\n\r\n[stylecop.json](https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/Configuration.md)\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` to the beginning of the title and remove the prefix when the PR is ready.\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] User-facing [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed - Issue link:\r\n- **Testing - New and feature**\r\n    - [x] Not Applicable or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n        - [ ] [Add `[feature]` if the change is significant or affects feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\r\n",
  "closed_at": "2018-06-04T05:41:11Z",
  "comments": [
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "I think for this project we need to disable [SA1200](https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1200.md) too. This project almost exclusively has using statements outside the namespace. \r\n\r\nAs for whether that is a good thing or not... is debatable.",
      "created_at": "2018-05-24T10:02:46Z",
      "updated_at": "2018-05-24T10:02:46Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "restarted CI due to an update-help connection failure in travis-ci",
      "created_at": "2018-05-24T20:29:18Z",
      "updated_at": "2018-05-24T20:29:18Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@SteveL-MSFT @adityapatwardhan @daxian-dbw I've put the list of what is being disabled in the description.  Are we all ok with this?  I prefer a file only contain a single class, but I agree that it is not what we have been doing.",
      "created_at": "2018-05-24T20:32:57Z",
      "updated_at": "2018-05-24T20:32:57Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "My opinion on this is that we should do what is best for an Open Source project, whatever that is. \r\n\r\nOne problem I hear from people acclimating to the code base is that these monolith files are both intimidating and hard to follow. It is often gating low complexity changes from novice contributors.\r\n\r\nI personally believe it is easier to track changes from larger numbers of people if those changes are spread over a larger number of files.\r\n\r\nTo both those ends, one class per file is probably better.",
      "created_at": "2018-05-24T22:41:55Z",
      "updated_at": "2018-05-24T22:41:55Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "While IntelliSense works in VS Code I haven't difficulties with multi-class files. :-)\r\n\r\nOur guideline says that we don't want style changes but CodeFactor fixes is style changes. Should we ignore/remove the requirement or replace with requirement to fix CodeFactor issues?\r\n\r\nAlso we have a requirement to follow current file style. This makes the code easier to read. If we follow the CodeFactor requirements we break the readability.\r\n\r\nI suppose we should first set a top policy:\r\n- should we fix **all** (approved/not disabled) CodeFactor issues\r\n- should we fix problems for **specific rules** only",
      "created_at": "2018-05-25T03:53:14Z",
      "updated_at": "2018-05-25T03:53:14Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "> Also we have a requirement to follow current file style. \r\n\r\nExcept, in practice, reviewers are requesting contributors not do that as often as they enforce it \r\n\r\nIMO, for StyleCop or CodeFactor to really help us, we have to first refactor the entire code base to meet the style rules chosen, Then all new changes would just need to follow the rules. I had a recent PR where CodeFactor was complaining about code I didn't even touch just because it was in the same file. I'm not sure how that is even useful.",
      "created_at": "2018-05-25T08:25:41Z",
      "updated_at": "2018-05-25T08:25:41Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Fix all 186264 issues is very hude work even if we turn down some rules.",
      "created_at": "2018-05-25T09:35:28Z",
      "updated_at": "2018-05-25T09:35:28Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov Agreed. This problem is why I ultimately stopped investigating style enforcement, The project has guidelines which are not compatible with style enforcement (use style of surrounding code, don't make style changes), tools for style enforcement are not precise enough to limit detection to just the code added or change in the PR (makes it useless for reviews), and fixing the style globally so that rules and tools can be useful is a massive undertaking. Also, trying to fix the problems in a single area (like web cmdlets) is a strain on the reviewers and the contributor, there are not enough contributors and reviewers to tackle the problem in just one area, let alone globally.",
      "created_at": "2018-05-25T10:03:20Z",
      "updated_at": "2018-05-25T10:03:20Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Some issues can be easily fixed:\r\n\"\" -> string.Empty\r\nString -> string\r\n\r\nIt is up to 1-2% issues.\r\n\r\nDo you know of other problems that can be easily fixed?",
      "created_at": "2018-05-25T10:09:58Z",
      "updated_at": "2018-05-25T10:09:58Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "* `Char` -> `char`\r\n* \"Closing Curly braces must be followed by a blank line\"\r\n* \"Elements must be separated by a blank line\"\r\n* Single line comments must begin with a space\r\n\r\nBasically, the white space rules are all easy wins and there are a ton of them.",
      "created_at": "2018-05-25T10:27:41Z",
      "updated_at": "2018-05-25T10:27:41Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "We could also properly configure \"The file header must contain a copyright tag\" so that it doesn't false-alarm or just disable [SA1634](https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1634.md).\r\n\r\n[SA1518](https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1518.md) should be set to required.\r\n\r\nThese are some of the easy low risk wins, I think:\r\n\r\n- https://www.codefactor.io/repository/github/powershell/powershell/pull/6930?category=Maintainability&groupId=259\r\n- https://www.codefactor.io/repository/github/powershell/powershell/pull/6930?category=Maintainability&groupId=281\r\n- https://www.codefactor.io/repository/github/powershell/powershell/pull/6930?category=Maintainability&groupId=46\r\n- https://www.codefactor.io/repository/github/powershell/powershell/pull/6930?category=Maintainability&groupId=22\r\n- https://www.codefactor.io/repository/github/powershell/powershell/pull/6930?category=Style&groupId=81\r\n- https://www.codefactor.io/repository/github/powershell/powershell/pull/6930?category=Style&groupId=72\r\n- https://www.codefactor.io/repository/github/powershell/powershell/pull/6930?category=Style&groupId=264\r\n- https://www.codefactor.io/repository/github/powershell/powershell/pull/6930?category=Style&groupId=93\r\n- https://www.codefactor.io/repository/github/powershell/powershell/pull/6930?category=Style&groupId=80\r\n- https://www.codefactor.io/repository/github/powershell/powershell/pull/6930?category=Style&groupId=83\r\n- https://www.codefactor.io/repository/github/powershell/powershell/pull/6930?category=Style&groupId=95\r\n- https://www.codefactor.io/repository/github/powershell/powershell/pull/6930?category=Style&groupId=6\r\n- https://www.codefactor.io/repository/github/powershell/powershell/pull/6930?category=Style&groupId=40\r\n- https://www.codefactor.io/repository/github/powershell/powershell/pull/6930?category=Style&groupId=85\r\n- https://www.codefactor.io/repository/github/powershell/powershell/pull/6930?category=Style&groupId=39\r\n- https://www.codefactor.io/repository/github/powershell/powershell/pull/6930?category=Style&groupId=38\r\n- https://www.codefactor.io/repository/github/powershell/powershell/pull/6930?category=Style&groupId=18\r\n- https://www.codefactor.io/repository/github/powershell/powershell/pull/6930?category=Style&groupId=8\r\n- https://www.codefactor.io/repository/github/powershell/powershell/pull/6930?category=Style&groupId=82\r\n- https://www.codefactor.io/repository/github/powershell/powershell/pull/6930?category=Style&groupId=9\r\n- https://www.codefactor.io/repository/github/powershell/powershell/pull/6930?category=Style&groupId=269\r\n- https://www.codefactor.io/repository/github/powershell/powershell/pull/6930?category=Style&groupId=5\r\n\r\n\r\n",
      "created_at": "2018-05-25T11:02:27Z",
      "updated_at": "2018-05-25T11:02:27Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@markekraus Thanks!\r\n\r\nSA1518 is on by default.\r\n\r\n> the white space rules are all easy wins and there are a ton of them.\r\n\r\nMaybe formatting tool from [.NET code formatter tool](https://github.com/dotnet/codeformatter) can help? Our [docs](https://github.com/PowerShell/PowerShell/blob/ec1106a329ed0de5681d7b9cf01a85ff5158caa6/docs/dev-process/coding-guidelines.md) says :-)\r\n>We also run the .NET code formatter tool regularly to keep consistent formatting.\r\n\r\nWhere can get a config for the CodeFormatter?",
      "created_at": "2018-05-25T12:03:18Z",
      "updated_at": "2018-05-25T12:03:18Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "The default settings were used when I ran the code formatter.\r\n\r\nSome folks may like StyleCop, but I think it will **discourage** some contributors - it's far too picky.\r\n\r\nAnd I've stated this before, but I **strongly** oppose one class per file - that decision should be up to the author and primary maintainer of the feature.",
      "created_at": "2018-05-29T17:01:56Z",
      "updated_at": "2018-05-29T17:01:56Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "And to provide some data behind my objection to 1 class per file - there are > 3200 types in System.Management.Automation and ~740 cs files, so the average is >4 types per file. Going to 1 type per file means quadrupling the number of files in the project.\r\n\r\nI'm not opposed to targeted improvements, but please don't blindly apply an arbitrary policy.",
      "created_at": "2018-05-29T17:32:33Z",
      "updated_at": "2018-05-29T17:32:33Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@lzybkr Thanks! I agree that we should disable rule for \"one class per file\".\r\nWhat do you think about rule which says about prefixes like \"this.\"? CodeFactor reports tons such issues.",
      "created_at": "2018-05-29T17:44:29Z",
      "updated_at": "2018-05-29T17:44:48Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "I'd also ignore the `this.` prefix warning. More unnecessary churn if you change it, and **much** riskier to use a regex to \"fix\".",
      "created_at": "2018-05-29T17:59:51Z",
      "updated_at": "2018-05-29T17:59:51Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I'm fine with the proposed disabled settings.  In general, we should error on the side of productivity and lowering the barrier for contributions.",
      "created_at": "2018-05-30T03:06:49Z",
      "updated_at": "2018-05-30T03:06:49Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@lzybkr \r\n>  much riskier to use a regex to \"fix\".\r\n\r\nI did not use a script with Regex. I did the changes in VS Code step by step selecting a pattern and then visually checking the results to exclude false changes, then commit changes for the pattern, then select next pattern.",
      "created_at": "2018-05-30T04:02:20Z",
      "updated_at": "2018-05-30T04:02:20Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Disable SA1101 and SA1126 - up to 25% win.",
      "created_at": "2018-05-30T04:12:24Z",
      "updated_at": "2018-05-30T04:12:24Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I think we should disable \r\n- [SA1600 ElementsMustBeDocumented](https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1600.md) rule because it give strange issues like https://github.com/PowerShell/PowerShell/blob/4c925f58b80893690532c26788a913fdd35fdb70/src/System.Management.Automation/namespaces/FileSystemProvider.cs#L7344\r\n- [SA1201 ElementsMustAppearInTheCorrectOrder](https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1201.md) and [SA1202 ElementsMustBeOrderedByAccess](https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1202.md) - I believe we'll never reorder all our files.\r\n",
      "created_at": "2018-05-30T04:19:28Z",
      "updated_at": "2018-05-30T04:23:07Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "@iSazonov - removing `this.` can change a program's behavior. Consider:\r\n\r\n```c#\r\n    class C {\r\n        int value;\r\n        void f(int v1, int value) {\r\n            this.value = v1;\r\n        }\r\n    }\r\n```\r\n\r\nIf you remove `this.` - you will be assigning to the parameter. I'm not aware of tools that will help detect this change - it's very manual. This is why I said it's risky.",
      "created_at": "2018-05-31T05:18:19Z",
      "updated_at": "2018-05-31T05:18:19Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@lzybkr I means disabling rules SA1101 and SA1126 not changing real code. I believe you agree with the disabling.",
      "created_at": "2018-05-31T05:25:02Z",
      "updated_at": "2018-05-31T05:25:02Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "In #6949 @lzybkr suggest disable [SA1131 UseReadableConditions](https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/0298ccf2d632c19e0a72ec640f95e8c72daf00b0/documentation/SA1131.md)",
      "created_at": "2018-05-31T05:38:01Z",
      "updated_at": "2018-05-31T05:38:01Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I think we can merge, look how CodeFactor statistics will be changed for master branch and continue adjust the settings in follow PRs.",
      "created_at": "2018-06-03T04:52:58Z",
      "updated_at": "2018-06-03T04:52:58Z"
    }
  ],
  "created_at": "2018-05-24T09:50:38Z",
  "number": 6930,
  "state": "closed",
  "title": "Add Settings.StyleCop file",
  "updated_at": "2018-06-04T05:41:16Z"
}