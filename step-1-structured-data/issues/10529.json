{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10529",
  "author": "msftrncs",
  "body": "# Steps to reproduce\r\n\r\n```powershell\r\n[convert]:: #locate cursor over `]` and press <CTRL-SPACE>\r\n```\r\n\r\n# Expected behavior\r\n\r\nShow completions for the type(s) beginning with `convert`\r\n\r\n# Actual behavior\r\n\r\nInstead of offering completions for `convert` (to which there might not be any), it instead replaces `convert` with the first member of `[convert]`, `DBNull`.\r\n\r\n```powershell\r\n[DBNull]::\r\n```\r\n\r\n# Environment data\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-preview.3\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-preview.3\r\nOS                             Microsoft Windows 10.0.18362\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\nThis does appear to happen all the way back to Windows PowerShell 5.1 (on the above listed Windows 10 system).\r\n\r\n---\r\n\r\nI might try to debug in to this later.  It would seem to me that the completion logic is missing the fact that the cursor position is still inside the 'type' reference and so it should be completing the type reference, not the member accessor that follows it.\r\n\r\n~Interestingly enough, VS Code (the PowerShell extension uses the completions from a PowerShell session) doesn't seem to have this issue, probably because the extension uses its own logic to determine what its actually completing.~ (incomplete comparison, when put in the same situation, VS Code offers no completions at all)\r\n",
  "closed_at": "2022-03-24T22:55:28Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I can confirm.",
      "created_at": "2019-09-13T04:58:48Z",
      "updated_at": "2019-09-13T04:58:48Z"
    },
    {
      "author": "msftrncs",
      "author_association": "CONTRIBUTOR",
      "body": "So far, I have determined that this only happens when the expression near the cursor results in a 'MemberExpressionAst', and the expression results in an error ('ErrorExpressionAst') due to the member expression not being complete, and the token at the cursor is a `TokenKind` `Identifier`.\r\n\r\nI have found other scenarios where this occurs, such as:\r\n\r\n```PowerShell\r\n$psversiontable.pscompatibleversions. # put cursor before last . and press <CTRL-SPACE>\r\n```\r\n\r\nResult is (with a menu of `array` members)\r\n```PowerShell\r\n$psversiontable.Count.\r\n```\r\n\r\n",
      "created_at": "2019-09-13T05:29:25Z",
      "updated_at": "2019-09-13T05:29:25Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:This issue was addressed in #16504, which has now been successfully released as `v7.3.0-preview.4`.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.3.0-preview.4)\n",
      "created_at": "2022-05-23T16:21:20Z",
      "updated_at": "2022-05-23T16:21:20Z"
    }
  ],
  "created_at": "2019-09-12T21:37:56Z",
  "labels": [
    "Issue-Bug",
    "WG-Interactive-IntelliSense",
    "Resolution-Fixed"
  ],
  "number": 10529,
  "state": "closed",
  "title": "type completion overwrites type name with member if accessor appears after cursor",
  "updated_at": "2022-05-23T16:21:21Z"
}