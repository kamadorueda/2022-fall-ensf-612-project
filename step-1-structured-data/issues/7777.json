{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7777",
  "author": "SteveL-MSFT",
  "body": "Format-Hex currently [filters out control characters in the ASCII range](https://github.com/PowerShell/PowerShell/blob/a3786158ca51cd65388743f900b69ec9e253c3d9/src/Microsoft.PowerShell.Commands.Utility/commands/utility/UtilityCommon.cs#L174) that would affect the console display.  Needs to be updated to handle Unicode control characters.  Also consider replacing use of period for non-printable characters with the Unicode symbol for non-printable to avoid confusion with actual periods.",
  "closed_at": "2019-10-16T16:46:25Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Is \"`u{00}\" expected output format?",
      "created_at": "2018-09-14T06:46:38Z",
      "updated_at": "2018-09-14T06:46:38Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Any unprintable character (beyond the control characters) should be replaced with the box with question mark symbol.",
      "created_at": "2018-09-14T18:27:49Z",
      "updated_at": "2018-09-14T18:27:49Z"
    },
    {
      "author": "ThreeFive-O",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov I think @SteveL-MSFT  means this one:\r\n\r\n> U+FFFD \ufffd REPLACEMENT CHARACTER used to replace an unknown, unrecognized or unrepresentable character\r\n\r\nfrom https://en.wikipedia.org/wiki/Specials_(Unicode_block)",
      "created_at": "2018-09-17T17:25:00Z",
      "updated_at": "2018-09-17T17:25:00Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@ThreeFive-O Thanks for clarify.\r\n\r\nWill this symbol be well displayed in the Windows 7 console with default config?",
      "created_at": "2018-09-18T04:52:31Z",
      "updated_at": "2018-09-18T04:52:31Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "With Raster fonts (default on Windows 7) the replacement symbol is not displayed.\r\nOn other Windows (by default) the symbol is displayed as an empty square.\r\n\r\nIt does not look good.",
      "created_at": "2018-09-18T07:14:45Z",
      "updated_at": "2018-09-18T07:15:42Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "We might have to special case Win7 and do something like detect if the font can display and and maybe just show a question mark.",
      "created_at": "2018-09-18T21:22:32Z",
      "updated_at": "2018-09-18T21:22:32Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Determining the capabilities of a font at runtime looks impossible.\r\nWe could add new parameter `ReplacementCharacter` with standard default U+FFFD \ufffd REPLACEMENT CHARACTER.",
      "created_at": "2018-09-19T06:45:06Z",
      "updated_at": "2018-09-19T06:45:06Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov does U+FFFD render as whitespace on Win7?  That might be good enough since the telemetry shows that only a minor % of customers are on Win7 and it's probably a small set of those customers using format-hex.",
      "created_at": "2018-09-21T22:25:15Z",
      "updated_at": "2018-09-21T22:25:15Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> does U+FFFD render as whitespace on Win7?\r\n\r\nRaster font is _default_ on Windows 7 console and the symbol is displayed as whitespace. User have to select TrueType font to see the symbol. I personally always do this. \r\nIf Unix consoles use TrueType font by default I think we could use the symbol.\r\n\r\nAlso I tried `Char.IsControl()` in code you link and get surprised results. It is again a problem on Windows 7. I don't know can we accept this for new Windows version and Unix-s.",
      "created_at": "2018-09-23T06:43:34Z",
      "updated_at": "2018-09-23T06:43:34Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I think this should be pretty straight forward as I expect the unicode control characters to be documented on the internet and just needs to be added to the already existing filter out list",
      "created_at": "2019-01-01T03:51:40Z",
      "updated_at": "2019-01-01T03:51:40Z"
    },
    {
      "author": "paulbailey1979",
      "author_association": "NONE",
      "body": "Not sure if it's an ideal solution, but I've added a simple Unicode detect statement to ByteCollection.ToString() - https://github.com/PowerShell/PowerShell/pull/9762 ",
      "created_at": "2019-05-29T22:06:15Z",
      "updated_at": "2019-05-29T22:06:15Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Unicode control characters https://en.wikipedia.org/wiki/Unicode_control_characters\r\n> The control characters U+0000\u2013U+001F and U+007F come from ASCII. Additionally, U+0080\u2013U+009F were used in conjunction with ISO 8859 character sets (among others). They are specified in ISO 6429 and often referred to as C0 and C1 control codes respectively. \r\n\r\nSo right fix is (1) convert byte to Unicode char, (2) check char.IsControl, (3) replace controls with U+FFFD",
      "created_at": "2019-05-30T04:12:44Z",
      "updated_at": "2019-05-30T04:12:44Z"
    },
    {
      "author": "paulbailey1979",
      "author_association": "NONE",
      "body": "Here it is, but I think replacing all control chars with /uFFFD makes the right hand column hard to read if the byte collection is mostly Unicode.\r\n\r\n![image](https://user-images.githubusercontent.com/13857411/58916196-dab97f00-871a-11e9-936b-7cc9b1f266a2.png)\r\n\r\n... a slight alteration made to display 0 values as a space.\r\n\r\n![image](https://user-images.githubusercontent.com/13857411/58916903-e7d76d80-871c-11e9-8acc-2baac02bf61a.png)\r\n\r\nThoughts?\r\n\r\nThe Win10 raster font displayed /uFFFD correctly - does it display correctly on other systems? If Windows 7 raster fonts displays /uFFFD as a space then that would be acceptable to me.",
      "created_at": "2019-06-04T22:14:52Z",
      "updated_at": "2019-06-04T22:14:52Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@paulbailey1979 About Windows 7 see my comment above https://github.com/PowerShell/PowerShell/issues/7777#issuecomment-423795715 I think it is not a problem.\r\n\r\n>  display 0 values as a space\r\n\r\nLGTM.  /cc @SteveL-MSFT Thoughts?\r\n",
      "created_at": "2019-06-05T06:29:16Z",
      "updated_at": "2019-06-05T06:29:16Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "0x00 displayed as space makes sense to me as I believe other hex renderers do this.",
      "created_at": "2019-06-05T08:15:19Z",
      "updated_at": "2019-06-05T08:15:19Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT this was actually done during #8674 as you can see here:\r\nhttps://github.com/vexx32/PowerShell/blob/a2ae1684bd8e523fb3c2e17d273d75b16ced8059/src/Microsoft.PowerShell.Commands.Utility/commands/utility/UtilityCommon.cs#L260-L290\r\n\r\nClosing this one for now; feel free to reopen if you think I missed anything with that implementation. Going to add a note to the PR and the associated doc issue.\r\n\n\n<blockquote><img src=\"https://avatars2.githubusercontent.com/u/32407840?s=400&v=4\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicon.ico\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/vexx32/PowerShell\">vexx32/PowerShell</a></strong></div><div>PowerShell for every system! Contribute to vexx32/PowerShell development by creating an account on GitHub.</div></blockquote>",
      "created_at": "2019-10-16T16:46:23Z",
      "updated_at": "2019-10-16T16:46:25Z"
    }
  ],
  "created_at": "2018-09-13T16:50:54Z",
  "number": 7777,
  "state": "closed",
  "title": "Format-Hex should not try to render unicode control characters that affect the display",
  "updated_at": "2019-10-16T17:57:04Z"
}