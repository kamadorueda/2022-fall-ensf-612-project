{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4985",
  "author": "Windos",
  "body": "Addresses issue #3726 by adding decrementing depth to ProcessPathItems.\r\n\r\nIncludes tests specifically for the examples listed in the issue and also testing that recursion still works when excluding or including a string.\r\n",
  "closed_at": "2017-10-23T19:22:06Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw Can we ask @Windos to fix (replace with overloads) skipIsItemContainerCheck defaults in the PR? It seems adding new parameter (depth) complicate the Api and it would be good to eliminate that now.",
      "created_at": "2017-10-04T03:42:18Z",
      "updated_at": "2017-10-04T03:45:19Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Well, the optional parameter was introduced to be an alternative of overloads, to reduce the number of overloads of a method.\r\nIf we remove `skipIsItemContainerCheck` by adding overloads, then there will be 4 overloads of `ProcessPathItems`, which IMHO might be cumbersome.\r\n\r\nThe optional parameter should never be used for public APIs or even internal APIs that may be called from other friend assemblies because the default value is baked into the caller, and that means if we change the default value, the caller assembly needs to be re-compile to get the new default value.\r\nHowever, it's fine for private methods, as long as it doesn't affect readability much.",
      "created_at": "2017-10-04T17:51:28Z",
      "updated_at": "2017-10-04T17:51:28Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw I asked because adding second optional parameter reduced readability. Do we have to create overloads in this case or can we just replace its with one method with all the parameters?",
      "created_at": "2017-10-05T05:04:02Z",
      "updated_at": "2017-10-05T05:04:02Z"
    },
    {
      "author": "Windos",
      "author_association": "CONTRIBUTOR",
      "body": "I'm happy to put the work in regardless of which direction is decided on.",
      "created_at": "2017-10-06T08:46:13Z",
      "updated_at": "2017-10-06T08:46:13Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@iSazonov I think you made the right call. Adding the second optional parameter would worsen the readability. I think the current two overloads look good.",
      "created_at": "2017-10-06T15:52:05Z",
      "updated_at": "2017-10-06T15:52:05Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@iSazonov @daxian-dbw can you update your review",
      "created_at": "2017-10-09T16:24:19Z",
      "updated_at": "2017-10-09T16:24:19Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw Is `uint depth` parameter on best place? What about before last?",
      "created_at": "2017-10-09T18:31:50Z",
      "updated_at": "2017-10-09T18:32:40Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@daxian-dbw  Can you update your review?",
      "created_at": "2017-10-10T21:10:07Z",
      "updated_at": "2017-10-10T21:10:07Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@Windos Thanks for your contribution!",
      "created_at": "2017-10-23T19:22:22Z",
      "updated_at": "2017-10-23T19:22:22Z"
    }
  ],
  "created_at": "2017-10-03T10:28:47Z",
  "number": 4985,
  "state": "closed",
  "title": "Make Get-ChildItem honor Depth parameter with Include/Exclude",
  "updated_at": "2017-10-24T04:59:40Z"
}