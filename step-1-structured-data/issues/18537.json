{
  "_url": "https://github.com/PowerShell/PowerShell/issues/18537",
  "author": "kborowinski",
  "body": "### Prerequisites\r\n\r\n- [X] Write a descriptive title.\r\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- [X] Search the existing issues.\r\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\r\n\r\n### Steps to reproduce\r\n\r\nSaving Excel workbook with *ImportExcel* module on latest daily build of PS 7.3 throws following exception:\r\n*(It works correctly on PowerShell 7.3.0 GA and PowerShell 7.2.7 or PowerShell 5.1)*\r\n```powershell\r\nPSMessageDetails      :\r\nException             : System.Management.Automation.MethodInvocationException: Exception calling \"SaveAs\" with \"1\" argument(s): \"Error saving file ---\"\r\n                         ---> System.InvalidOperationException: Error saving file ---\r\n                         ---> System.ArgumentException: 'IBM437' is not a supported encoding name. For information on defining a custom encoding, see the documentation for the Encoding.RegisterProvider method. (Parameter 'name')\r\n                           at System.Text.EncodingTable.InternalGetCodePageFromName(String name)\r\n                           at System.Text.EncodingTable.GetCodePageFromName(String name)\r\n                           at System.Text.Encoding.GetEncoding(String name)\r\n                           at OfficeOpenXml.Packaging.Ionic.Zip.ZipOutputStream..ctor(Stream stream, Boolean leaveOpen)\r\n                           at OfficeOpenXml.Packaging.ZipPackage.Save(Stream stream)\r\n                           at OfficeOpenXml.ExcelPackage.Save()\r\n                           --- End of inner exception stack trace ---\r\n                           at OfficeOpenXml.ExcelPackage.Save()\r\n                           at CallSite.Target(Closure, CallSite, ExcelPackage, Object)\r\n                           --- End of inner exception stack trace ---\r\n                           at System.Management.Automation.ExceptionHandlingOps.CheckActionPreference(FunctionContext funcContext, Exception exception) in D:\\DEVELOPMENT\\PowerShellCore\\src\\System.Management.Automation\\engine\\runtime\\Operations\\MiscOps.cs:line 1659\r\n                           at System.Management.Automation.Interpreter.ActionCallInstruction`2.Run(InterpretedFrame frame) in D:\\DEVELOPMENT\\PowerShellCore\\src\\System.Management.Automation\\engine\\interpreter\\CallInstruction.Generated.cs:line 504\r\n                           at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.Run(InterpretedFrame frame) in D:\\DEVELOPMENT\\PowerShellCore\\src\\System.Management.Automation\\engine\\interpreter\\ControlFlowInstructions.cs:line 338\r\n                           at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.Run(InterpretedFrame frame) in D:\\DEVELOPMENT\\PowerShellCore\\src\\System.Management.Automation\\engine\\interpreter\\ControlFlowInstructions.cs:line 338\r\n                           at System.Management.Automation.Interpreter.Interpreter.Run(InterpretedFrame frame) in D:\\DEVELOPMENT\\PowerShellCore\\src\\System.Management.Automation\\engine\\interpreter\\Interpreter.cs:line 101\r\n                           at System.Management.Automation.Interpreter.LightLambda.RunVoid1[T0](T0 arg0) in D:\\DEVELOPMENT\\PowerShellCore\\src\\System.Management.Automation\\engine\\interpreter\\LightLambda.Generated.cs:line 82\r\n                           at System.Management.Automation.PSScriptCmdlet.RunClause(Action`1 clause, Object dollarUnderbar, Object inputToProcess) in D:\\DEVELOPMENT\\PowerShellCore\\src\\System.Management.Automation\\engine\\runtime\\CompiledScriptBlock.cs:line 2435\r\n                           at System.Management.Automation.CommandProcessorBase.Complete() in D:\\DEVELOPMENT\\PowerShellCore\\src\\System.Management.Automation\\engine\\CommandProcessorBase.cs:line 593\r\nTargetObject          :\r\nCategoryInfo          : NotSpecified: (:) [], MethodInvocationException\r\nFullyQualifiedErrorId : InvalidOperationException\r\nErrorDetails          :\r\nInvocationInfo        : System.Management.Automation.InvocationInfo\r\nScriptStackTrace      : at Close-ExcelPackage, C:\\Program Files\\WindowsPowerShell\\Modules\\ImportExcel\\7.8.2\\Public\\Close-ExcelPackage.ps1: line 25\r\n                        at Export-KBExcelNodeStatusReport<End>, <No file>: line 1001\r\n                        at <ScriptBlock>, <No file>: line 1\r\nPipelineIterationInfo : {}\r\n\r\n```\r\n\r\n### Expected behavior\r\n\r\n```console\r\nThe Excel workbook should be saved without exception like on PowerShell 7.3.0 GA and PowerShell 7.2.7, or PowerShell 5.1\r\n```\r\n\r\n\r\n### Actual behavior\r\n\r\n```console\r\nAn exception is thrown.\r\n```\r\n\r\n\r\n### Error details\r\n\r\n```console\r\nPSMessageDetails      :\r\nException             : System.Management.Automation.MethodInvocationException: Exception calling \"SaveAs\" with \"1\" argument(s): \"Error saving file ---\"\r\n                         ---> System.InvalidOperationException: Error saving file ---\r\n                         ---> System.ArgumentException: 'IBM437' is not a supported encoding name. For information on defining a custom encoding, see the documentation for the Encoding.RegisterProvider method. (Parameter 'name')\r\n                           at System.Text.EncodingTable.InternalGetCodePageFromName(String name)\r\n                           at System.Text.EncodingTable.GetCodePageFromName(String name)\r\n                           at System.Text.Encoding.GetEncoding(String name)\r\n                           at OfficeOpenXml.Packaging.Ionic.Zip.ZipOutputStream..ctor(Stream stream, Boolean leaveOpen)\r\n                           at OfficeOpenXml.Packaging.ZipPackage.Save(Stream stream)\r\n                           at OfficeOpenXml.ExcelPackage.Save()\r\n                           --- End of inner exception stack trace ---\r\n                           at OfficeOpenXml.ExcelPackage.Save()\r\n                           at CallSite.Target(Closure, CallSite, ExcelPackage, Object)\r\n                           --- End of inner exception stack trace ---\r\n                           at System.Management.Automation.ExceptionHandlingOps.CheckActionPreference(FunctionContext funcContext, Exception exception) in D:\\DEVELOPMENT\\PowerShellCore\\src\\System.Management.Automation\\engine\\runtime\\Operations\\MiscOps.cs:line 1659\r\n                           at System.Management.Automation.Interpreter.ActionCallInstruction`2.Run(InterpretedFrame frame) in D:\\DEVELOPMENT\\PowerShellCore\\src\\System.Management.Automation\\engine\\interpreter\\CallInstruction.Generated.cs:line 504\r\n                           at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.Run(InterpretedFrame frame) in D:\\DEVELOPMENT\\PowerShellCore\\src\\System.Management.Automation\\engine\\interpreter\\ControlFlowInstructions.cs:line 338\r\n                           at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.Run(InterpretedFrame frame) in D:\\DEVELOPMENT\\PowerShellCore\\src\\System.Management.Automation\\engine\\interpreter\\ControlFlowInstructions.cs:line 338\r\n                           at System.Management.Automation.Interpreter.Interpreter.Run(InterpretedFrame frame) in D:\\DEVELOPMENT\\PowerShellCore\\src\\System.Management.Automation\\engine\\interpreter\\Interpreter.cs:line 101\r\n                           at System.Management.Automation.Interpreter.LightLambda.RunVoid1[T0](T0 arg0) in D:\\DEVELOPMENT\\PowerShellCore\\src\\System.Management.Automation\\engine\\interpreter\\LightLambda.Generated.cs:line 82\r\n                           at System.Management.Automation.PSScriptCmdlet.RunClause(Action`1 clause, Object dollarUnderbar, Object inputToProcess) in D:\\DEVELOPMENT\\PowerShellCore\\src\\System.Management.Automation\\engine\\runtime\\CompiledScriptBlock.cs:line 2435\r\n                           at System.Management.Automation.CommandProcessorBase.Complete() in D:\\DEVELOPMENT\\PowerShellCore\\src\\System.Management.Automation\\engine\\CommandProcessorBase.cs:line 593\r\nTargetObject          :\r\nCategoryInfo          : NotSpecified: (:) [], MethodInvocationException\r\nFullyQualifiedErrorId : InvalidOperationException\r\nErrorDetails          :\r\nInvocationInfo        : System.Management.Automation.InvocationInfo\r\nScriptStackTrace      : at Close-ExcelPackage, C:\\Program Files\\WindowsPowerShell\\Modules\\ImportExcel\\7.8.2\\Public\\Close-ExcelPackage.ps1: line 25\r\n                        at Export-KBExcelNodeStatusReport<End>, <No file>: line 1001\r\n                        at <ScriptBlock>, <No file>: line 1\r\nPipelineIterationInfo : {}\r\n```\r\n\r\n\r\n### Environment data\r\n\r\n```powershell\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.3.0-preview.3\r\nPSEdition                      Core\r\nGitCommitId                    7.3.0-preview.3-461-g9f459c05f617fe530dac340aa546d198724d85da\r\nOS                             Microsoft Windows 10.0.19045\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0, 5.0, 5.1, 6.0.0, 6.1.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\n\r\n### Visuals\r\n\r\n![exception](https://user-images.githubusercontent.com/16168755/201366948-8225c4ec-938d-4925-9466-bce19dff5850.jpg)\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I guess it is regression after https://github.com/PowerShell/PowerShell/pull/18356/files#r1002716991\r\n\r\n/cc @daxian-dbw \n\n<blockquote><img src=\"https://avatars.githubusercontent.com/u/45661989?s=400&v=4\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/PowerShell/PowerShell/pull/18356\">Replace `UTF8Encoding(false)` with `Encoding.Default` part 2 by xtqqczze \u00b7 Pull Request #18356 \u00b7 PowerShell/PowerShell</a></strong></div><div>Follow-up: #18144.\ncc: @iSazonov, @daxian-dbw, @JamesWTruher\nContext: dotnet/runtime#45541, #5080</div></blockquote>",
      "created_at": "2022-11-11T16:15:56Z",
      "updated_at": "2022-11-11T16:15:59Z"
    }
  ],
  "created_at": "2022-11-11T15:10:51Z",
  "number": 18537,
  "state": "open",
  "title": "\"IBM437 is not supported encoding name\" exception when saving Excel workbook on daily PS 7.3 build",
  "updated_at": "2022-11-11T16:15:59Z"
}