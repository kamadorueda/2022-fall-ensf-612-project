{
  "_url": "https://github.com/PowerShell/PowerShell/issues/2369",
  "author": "oising",
  "body": "Certain classes of 8dot3 short names cause the FileSystemProvider to erroneously state that the folder does not exist, but only for certain operations. The below example is from my own office, where my `$env:temp` folder uses the short filename reference in the path string (some historical reason for this, no idea.) Calls to `test-path $env:path` return `true`, and `dir $env:path` succeed, but `cd $env:temp` fails stating:\n\n```\ncd : An object at the specified path C:\\Users\\OA148~1.GRE does not exist.\nAt line:1 char:1\n+ cd $env:temp\n+ ~~~~~~~~~~~~\n    + CategoryInfo          : InvalidArgument: (:) [Set-Location], PSArgumentException\n    + FullyQualifiedErrorId : Argument,Microsoft.PowerShell.Commands.SetLocationCommand\n```\n\nReproduction requires short file name generation to be enabled, so if it's not enabled for you, you'll need to run:\n\n`fsutil behavior set disable8dot3 0` and then reboot.\n## Steps to reproduce\n\n```\nPS c:\\temp> md o.grehan\nPS c:\\temp> fsutil file setshortname c:\\temp\\o.grehan OA148~1.GRE\nPS c:\\temp> test-path -PathType Container C:\\temp\\oa148~1.gre\nTrue\nPS c:\\temp> cd C:\\temp\\oa148~1.gre\ncd : An object at the specified path C:\\temp\\oa148~1.gre does not exist.\n...\n```\n\nInitial investigation led me to believe that the issue lies in `FileSystemProvider.NormalizeThePath(String, Stack<String>)` method. There appears to be some assumption that is no longer true when the \"short\" name becomes longer than the original target \"long\" name. This seems to occur when the target has a long \"extension\", e.g. \"o.grehan.\" \n\nIt appears this bug has existed since v1.\n## Expected behavior\n\nShould be able to set-location to the folder by using the 8dot3 name.\n## Actual behavior\n\nUnable to set-location by using the 8dot3 name. \n## Environment data\n\n<!-- provide the output of $PSVersionTable -->\n\n``` powershell\n> $PSVersionTable\nName                           Value\n----                           -----\nPSVersion                      5.0.10586.494\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\nBuildVersion                   10.0.10586.494\nCLRVersion                     4.0.30319.42000\nWSManStackVersion              3.0\nPSRemotingProtocolVersion      2.3\nSerializationVersion           1.1.0.1\n```\n",
  "closed_at": null,
  "comments": [
    {
      "author": "oising",
      "author_association": "CONTRIBUTOR",
      "body": "`cd` works fine, btw, for most SFNs - specifically ones that are actually shorter than their targets (which is the majority of the time.)\n",
      "created_at": "2016-09-27T19:57:45Z",
      "updated_at": "2016-09-27T19:57:45Z"
    },
    {
      "author": "oising",
      "author_association": "CONTRIBUTOR",
      "body": "Trying to fork and write a fix for a PR and my build fails precisely because of this bug. Oh, the irony!\n\n![image](https://cloud.githubusercontent.com/assets/1844001/19580754/fec0beba-96ed-11e6-8b7a-85150eb6fcf9.png)\n",
      "created_at": "2016-10-20T22:53:19Z",
      "updated_at": "2016-10-20T22:53:19Z"
    },
    {
      "author": "oising",
      "author_association": "CONTRIBUTOR",
      "body": "I have to run: `$env:temp = \"c:\\users\\o.grehan\\appdata\\temp\"` and it avoids triggering the bug. \n",
      "created_at": "2016-10-20T22:54:34Z",
      "updated_at": "2016-10-20T22:54:34Z"
    },
    {
      "author": "bormm",
      "author_association": "NONE",
      "body": "This is still an issue and also has a \"newer\" duplicate( #7760). Unfortunately it never got any interest from microsoft in the last 5 years, even you find [530.000 pages](https://www.google.com/search?q=%22An+object+at+the+specified+path%22) with this error message and most seems to be related with this issue. As even Microsoft developers do not know about this, it also causes [this issue in Azure DevOps](https://github.com/microsoft/azure-pipelines-tasks/issues/10571#issuecomment-766994556).\r\n\r\nCan this again be reviewed for PowerShell 7? @rjmholt \r\n\r\n![grafik](https://user-images.githubusercontent.com/23644239/105747964-bfc7fe00-5f41-11eb-8f9e-31d731360023.png)\r\n\r\n",
      "created_at": "2021-01-25T17:56:45Z",
      "updated_at": "2021-01-25T18:16:59Z"
    },
    {
      "author": "arsing",
      "author_association": "NONE",
      "body": "Copying repro steps from #7760 :\r\n\r\n```powershell\r\nNew-Item -Type Directory .\\a.bcde\r\nNew-Item -Type File .\\a.bcde\\f.txt\r\nGet-ChildItem '.\\A5055~1.BCD\\f.txt' # succeeds\r\nGet-Content '.\\A5055~1.BCD\\f.txt' # succeeds\r\nRemove-Item '.\\A5055~1.BCD\\f.txt' # fails\r\nSet-Location '.\\A5055~1.BCD' # fails\r\n```",
      "created_at": "2021-01-25T18:42:54Z",
      "updated_at": "2021-01-25T18:42:54Z"
    }
  ],
  "created_at": "2016-09-27T19:45:35Z",
  "number": 2369,
  "state": "open",
  "title": "FileSystemProvider path normalization for 8dot3 names broken in certain cases",
  "updated_at": "2021-11-30T15:48:49Z"
}