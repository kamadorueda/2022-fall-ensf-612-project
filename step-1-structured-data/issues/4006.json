{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4006",
  "author": "iSazonov",
  "body": "Fix #3813 \r\nFix #1491\r\n\r\nProblem\r\n---\r\nNewlines are added by console width when ErrorRecord formatted.\r\n\r\nSolution\r\n---\r\nOverride the format width with Int32.MaxValue for ErrorRecord type.\r\n\r\n\r\n",
  "closed_at": "2017-07-24T21:02:23Z",
  "comments": [
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov This is awesome, thank you for tacking this! \ud83c\udf89 ",
      "created_at": "2017-06-15T04:52:05Z",
      "updated_at": "2017-06-15T04:52:05Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": ">Another concern - you've added a property to the base of formatting, but only tested it with a complex control.\r\n\r\nI think we should make the \"Width\" property and the constructor \"public static CustomControlBuilder Create(bool outOfBand = false, int? width = null)\" as `internal` - now I don't see real scenarios where users can use this. So we solve the problem with error formatting and we should not consider these (list and table) options yet, pending feedback. (A possible scenario is an output to \"fixed-width\" text files.)\r\n\r\n>nobody should have to specify anything in their custom format specification - long lines should simply not get wrapped when output goes to a file.\r\n\r\nGood point! It seems the bevavior based on the [LineOutput property ](https://github.com/PowerShell/PowerShell/blob/master/src/System.Management.Automation/commands/utility/FormatAndOutput/common/BaseOutputtingCommand.cs#L597)and [LineOutput class ](https://github.com/PowerShell/PowerShell/blob/master/src/System.Management.Automation/commands/utility/FormatAndOutput/common/ILineOutput.cs#L138) - we could make it more generic to support not only a host but also files. Right now I don't really know where is a right place to initialize it. Maybe it's in internal [Out-LineOutput](https://github.com/PowerShell/PowerShell/blob/master/src/System.Management.Automation/commands/utility/FormatAndOutput/out-textInterface/OutTextInterface.cs#L19) cmdlet\r\nHere we fix only error formating for host. For file output formating it would be good to open a new Issue. It'll give us more time to think.",
      "created_at": "2017-06-16T13:20:26Z",
      "updated_at": "2017-06-16T13:20:26Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "What's the status of this PR?\r\n\r\n> I'd like to ask you to explore other approaches.\r\n\r\nWe are not going ahead with the current approach, correct?",
      "created_at": "2017-07-18T21:27:20Z",
      "updated_at": "2017-07-18T21:27:20Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": ">What's the status of this PR?\r\n\r\nUnder review and discussion.  @lzybkr is very busy... ",
      "created_at": "2017-07-19T05:27:48Z",
      "updated_at": "2017-07-19T05:27:48Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "I'm going to close this PR because I don't think it's the right approach. Wrapping should be automatic in fixed width output devices, but should not wrap otherwise (e.g. files or infinite width hosts like the ISE).\r\n\r\nThis behavior should be automatic - not requiring opt-in via a new property.\r\n\r\n",
      "created_at": "2017-07-24T21:02:23Z",
      "updated_at": "2017-07-24T21:02:23Z"
    }
  ],
  "created_at": "2017-06-14T11:56:52Z",
  "number": 4006,
  "state": "closed",
  "title": "Enhance formatting to exclude explicit newlines when writing errors",
  "updated_at": "2018-09-28T12:37:22Z"
}