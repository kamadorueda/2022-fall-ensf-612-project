{
  "_url": "https://github.com/PowerShell/PowerShell/issues/14189",
  "author": "powercode",
  "body": "Tracking issue: #12631.\r\n\r\nShould we allow null for the parameters to \r\n\r\nWriteDebug, WriteWarning, WriteVerbose, etc?",
  "closed_at": "2021-06-12T07:37:39Z",
  "comments": [
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "> Should we allow null for the parameters to\r\n>\r\n> WriteDebug, WriteWarning, WriteVerbose, etc?\r\n\r\nI suspect that we ideally would not, but I'm not sure if making such a change would break anything",
      "created_at": "2020-11-20T01:02:37Z",
      "updated_at": "2020-11-20T01:02:37Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "IParameterMetadataProvider has 5 dependencies. This complicates understanding design intentions and we will review this later on phase 5.",
      "created_at": "2020-11-20T13:27:22Z",
      "updated_at": "2020-11-20T13:27:22Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> > Should we allow null for the parameters to\r\n> > WriteDebug, WriteWarning, WriteVerbose, etc?\r\n> \r\n> I suspect that we ideally would not, but I'm not sure if making such a change would break anything\r\n\r\nNullable annotations can not break anything. They only explicitly expose design intentions.",
      "created_at": "2020-11-20T13:29:39Z",
      "updated_at": "2020-11-20T13:29:39Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as stale because it has been marked as requiring author feedback but has not had any activity for **15 days**. It will be closed if no further activity occurs **within 10 days of this comment**.",
      "created_at": "2020-12-08T20:00:12Z",
      "updated_at": "2020-12-08T20:00:12Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> Should we allow null for the parameters to\r\n> \r\n> WriteDebug, WriteWarning, WriteVerbose, etc?\r\n\r\nIt seems it makes no sense.",
      "created_at": "2021-05-18T16:16:38Z",
      "updated_at": "2021-05-20T05:32:24Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Hmm, we never check for null in the WriteDebug() API until low level host implementations where we ignore null messages.\r\nFor WriteError() we throw if null.\r\nFor WriteObject() we accept null.\r\nFor  WriteProgress() we throw if null.\r\nFor WriteVerbose we accept null (we do the same as for WriteDebug()).\r\nFor WriteWarning we accept null (we do the same as for WriteDebug()).\r\nFor WriteCommandDetail() we accept null.\r\n\r\n",
      "created_at": "2021-05-20T05:32:10Z",
      "updated_at": "2021-05-20T05:32:10Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as stale because it has been marked as requiring author feedback but has not had any activity for **15 days**. It will be closed if no further activity occurs **within 10 days of this comment**.",
      "created_at": "2021-06-08T11:00:05Z",
      "updated_at": "2021-06-08T11:00:05Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "WriteObject makes sense. The throws make sense. The skips trouble me, since changing them is breaking, but it would be nice to change the type signature. But I'm not sure I see the value there. I guess the best course of action is to label the APIs as you've researched them @iSazonov ",
      "created_at": "2021-06-10T17:36:56Z",
      "updated_at": "2021-06-10T17:36:56Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": ">  The skips trouble me, since changing them is breaking\r\n\r\nNullable annotations are only about _design intentions_. So we can annotate all the \"skips\" as non-nullable without adding real null checks and de-facto without breaking changes.\r\nI can the commit if you want.",
      "created_at": "2021-06-10T17:54:10Z",
      "updated_at": "2021-06-10T17:54:10Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "> So we can annotate all the \"skips\" as non-nullable without adding real null checks and de-facto without breaking changes.\r\n\r\nYeah that's perfect",
      "created_at": "2021-06-10T18:28:35Z",
      "updated_at": "2021-06-10T18:28:35Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "The PR branch was removed so I opened new PR #15566.",
      "created_at": "2021-06-12T07:37:35Z",
      "updated_at": "2021-06-12T07:37:35Z"
    }
  ],
  "created_at": "2020-11-20T00:36:20Z",
  "number": 14189,
  "state": "closed",
  "title": "Enable nullable: System.Management.Automation.ICommandRuntime",
  "updated_at": "2021-06-12T07:37:39Z"
}