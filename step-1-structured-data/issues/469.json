{
  "_url": "https://github.com/PowerShell/PowerShell/issues/469",
  "author": "palladia",
  "body": null,
  "closed_at": "2016-02-11T16:14:15Z",
  "comments": [
    {
      "author": "paulcallen",
      "author_association": "MEMBER",
      "body": "need to investigate the order it displays on Linux vs Windows as seems to be odd order.\n",
      "created_at": "2016-02-03T19:45:16Z",
      "updated_at": "2016-02-03T19:45:16Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "@palladia can you write up your findings really quick here? (Why it was or was not sorted.)\n",
      "created_at": "2016-02-09T21:27:28Z",
      "updated_at": "2016-02-09T21:27:28Z"
    },
    {
      "author": "palladia",
      "author_association": "CONTRIBUTOR",
      "body": "This is kind of an odd bug.  If you look at the code, you see that it's calling System.IO.DirectoryInfo.EnumerateDirectories() and System.IO.DirectoryInfo.EnumerateFiles() to get enumerated list of directories and files.\n\nIf you read the documentation on these calls, nowhere does it say that the enumerated list is sorted in any way.  So it's not really a bug in CoreCLR.  But on FullCLR Windows and CoreCLR WIndows builds, the names are nicely sorted, but on Linux, it's all jumbled.  It's probably using different methods in the lower layer to get the list of files/directories, and that's why Windows and Linux are different. \n\nI know the fix does seem to be redundant for Windows platform, but I don't want to do if (Platform.Windows()) either since there is no guarantee that Windows calls will always return a sorted list.\n",
      "created_at": "2016-02-09T21:39:55Z",
      "updated_at": "2016-02-09T21:39:55Z"
    }
  ],
  "created_at": "2016-02-02T19:51:04Z",
  "labels": [],
  "number": 469,
  "state": "closed",
  "title": "Sort dir/ls/Get-ChildItem output",
  "updated_at": "2016-03-14T19:28:14Z"
}