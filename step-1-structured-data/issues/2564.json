{
  "_url": "https://github.com/PowerShell/PowerShell/issues/2564",
  "author": "Daniel15",
  "body": "<!--\n\nIf it is a bug report:\n- make sure you are able to repro it on the latest released version. \nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\n- Search the existing issues.\n- Refer to the [FAQ](../docs/FAQ.md).\n- Refer to the [known issues](../docs/KNOWNISSUES.md).\n- Fill out the following repro template\n\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\n-->\n## Steps to reproduce\n\n``` powershell\n# test.ps1\n$npm_data = Invoke-RestMethod -Uri https://registry.npmjs.org/babel-standalone\n```\n\n```\npowershell ./test.ps1\n```\n## Expected behavior\n\nRequest works\n## Actual behavior\n\n```\n16:16 daniel@dan /tmp\n% powershell ./test.ps1\n[1]    14785 segmentation fault  powershell ./test.ps1\n16:16 daniel@dan /tmp\n% powershell ./test.ps1\n[1]    14802 segmentation fault  powershell ./test.ps1\n```\n## Environment data\n\nDebian Testing, PowerShell 6.0.0-alpha.11\n\n``` powershell\n> $PSVersionTable\n\nName                           Value\n----                           -----\nPSVersion                      6.0.0-alpha\nPSEdition                      Core\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\nBuildVersion                   3.0.0.0\nGitCommitId                    v6.0.0-alpha.11\nCLRVersion\nWSManStackVersion              3.0\nPSRemotingProtocolVersion      2.3\nSerializationVersion           1.1.0.1\n\n```\n",
  "closed_at": "2016-11-01T18:00:54Z",
  "comments": [
    {
      "author": "Daniel15",
      "author_association": "NONE",
      "body": "I don't have debug symbols, but looking at the backtrace it seems like it has something to do with HTTPS:\n\n```\nThread 16 \"powershell\" received signal SIGSEGV, Segmentation fault.\n[Switching to Thread 0x7fff3cfdc700 (LWP 15678)]\n0x00007fff5d6ccddd in ?? () from /usr/lib/x86_64-linux-gnu/libcrypto.so.1.0.0\n(gdb) backtrace\n#0  0x00007fff5d6ccddd in ?? () from /usr/lib/x86_64-linux-gnu/libcrypto.so.1.0.0\n#1  0x00007fff5d6c6e6c in X509_verify_cert () from /usr/lib/x86_64-linux-gnu/libcrypto.so.1.0.0\n#2  0x00007fff8156cca5 in ?? ()\n#3  0x00007fff3cfdac10 in ?? ()\n#4  0x1bf42da236c3271e in ?? ()\n#5  0x000000006a724b52 in ?? ()\n#6  0x00007ffff67dbf90 in vtable for InlinedCallFrame () from /opt/microsoft/powershell/6.0.0-alpha.11/libcoreclr.so\n#7  0x00007fff3cfdb5f8 in ?? ()\n#8  0x00007fff81676738 in ?? ()\n#9  0x00007fff81676738 in ?? ()\n#10 0x00007fff3cfdac10 in ?? ()\n#11 0x00007fff8156cca5 in ?? ()\n#12 0x00007fff3cfdacb0 in ?? ()\n#13 0x00007fff81676738 in ?? ()\n#14 0x00007fff605ee678 in ?? ()\n#15 0x00007fff440ad730 in ?? ()\n#16 0x0000000000000000 in ?? ()\n\n```\n",
      "created_at": "2016-10-29T23:25:31Z",
      "updated_at": "2016-10-29T23:25:31Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Debian Testing isn't supported. Does this reproduce on Ubuntu 16.04?\n",
      "created_at": "2016-11-01T17:45:09Z",
      "updated_at": "2016-11-01T17:45:09Z"
    },
    {
      "author": "Daniel15",
      "author_association": "NONE",
      "body": "> Debian Testing isn't supported. \n\nNot officially supported, or not supported at all?  If the package installs correctly, then it should run. Any incompatibilities (eg. invalid library versions) should be caught when I try to install the package. The fact that I managed to install the package means that it should execute correctly, or that the dependencies listed for the package are incorrect.\n\n> Does this reproduce on Ubuntu 16.04?\n\nHmm, it seems to work fine for me (tested in Docker). I suspect that means that some of the dependencies listed for the package are incorrect (eg. version range is too wide, or something like that).\n",
      "created_at": "2016-11-01T17:52:57Z",
      "updated_at": "2016-11-01T17:53:25Z"
    },
    {
      "author": "Daniel15",
      "author_association": "NONE",
      "body": "Hmm... Looks like Ubuntu has OpenSSL 1.0.2g while Debian has 1.0.2j. Maybe that's what's causing the issue? However, The PowerShell .deb file does not specify any particular OpenSSL version:\n\n>  Depends: libc6, libcurl3, libgcc1, libssl1.0.0, libstdc++6, libtinfo5, libunwind8, libuuid1, zlib1g, libicu55\n\nIf you do link against a specific version of OpenSSL and require that version of OpenSSL for PowerShell to run correctly, you should explicitly specify that version in the dependency.\n",
      "created_at": "2016-11-01T17:59:35Z",
      "updated_at": "2016-11-01T17:59:35Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "> Not officially supported, or not supported at all?\n\nNot supported at all, not even by .NET Core. If you want a closer to compatible build, add the Debian 8 runtime and rebuild.\n\n> If the package installs correctly, then it should run. Any incompatibilities (eg. invalid library versions) should be caught when I try to install the package.\n\nNot true at all. It catches incompatibilities for platform it is built for (Ubuntu 16.04). You're installing on an untested platform, where I 100% did not test if libraries were compatible.\n\n> I suspect that means that some of the dependencies listed for the package are incorrect (eg. version range is too wide, or something like that).\n\nNope. The dependency you're having problems with belongs to .NET Core. The package dependencies are simply those inherited from .NET Core. See if you can reproduce your bug with just C# code using .NET Core, and file an issue with CoreFX.\n",
      "created_at": "2016-11-01T17:59:57Z",
      "updated_at": "2016-11-01T17:59:57Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "> If you do link against a specific version of OpenSSL and require that version of OpenSSL for PowerShell to run correctly, you should explicitly specify that version in the dependency.\n\n@Daniel15 PowerShell does not link against anything. PowerShell uses .NET Core, which links against OpenSSL.\n\nI am closing this issue, feel free to reference in your bug report to .NET Core.\n",
      "created_at": "2016-11-01T18:00:54Z",
      "updated_at": "2016-11-01T18:00:54Z"
    },
    {
      "author": "Daniel15",
      "author_association": "NONE",
      "body": "Thanks for the info, I can repro using .NET Core too. I usually use Mono which works fine. I'll report it over at the .NET Core repo instead.\n",
      "created_at": "2016-11-01T18:11:03Z",
      "updated_at": "2016-11-01T18:11:03Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Mono is a completely different runtime \ud83d\ude04 you're looking for [CoreFX](https://github.com/dotnet/corefx).\n",
      "created_at": "2016-11-01T18:12:35Z",
      "updated_at": "2016-11-01T18:12:35Z"
    },
    {
      "author": "Daniel15",
      "author_association": "NONE",
      "body": "I know, I just meant that SSL connections are fine with Mono, which is what I'm using for all the other .NET stuff I'm running (eg. ASP.NET Core sites) \ud83d\ude1b  .NET Core still has some APIs missing.\n",
      "created_at": "2016-11-01T18:16:00Z",
      "updated_at": "2016-11-01T18:16:00Z"
    },
    {
      "author": "Daniel15",
      "author_association": "NONE",
      "body": "@andschwa - Filed it here: https://github.com/dotnet/corefx/issues/13221\n",
      "created_at": "2016-11-01T18:22:00Z",
      "updated_at": "2016-11-01T18:22:00Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "> .NET Core still has some APIs missing.\n\nYou can say that again!\n\nBut yeah, I agree, this kind of problem _shouldn't_ happen, but with no concrete guidance from our runtime I've just run into the same problem over and over. To gather the package dependencies for PowerShell's packages, the best I could do was manually reconcile with the Ubuntu `dotnet` packages that once existed. I couldn't just say \"depend on `dotnet`\" and have `dotnet` depend on the packages it needs, since they don't _have_ packages; so I pretty much just had to make my best guess. And trust me, I didn't even try to guess for Debian Testing.\n\nThanks for trying our PowerShell!\n",
      "created_at": "2016-11-01T18:52:12Z",
      "updated_at": "2016-11-01T18:52:12Z"
    },
    {
      "author": "Daniel15",
      "author_association": "NONE",
      "body": ">  since they don't have packages\n\nWhat about the repo at https://apt-mo.trafficmanager.net/repos/dotnet-release/? That's what I used to install .NET Core. It's mentioned in the Ubuntu instructions at https://www.microsoft.com/net/core#ubuntu. Couldn't PowerShell be added to the same repo?\n\nI suspect I could build from source to fix the OpenSSL thing, I really don't want to have to do that though. Dealing with source packages is annoying when I can just `apt-get` everything else on my system (including Mono)\n",
      "created_at": "2016-11-01T18:54:55Z",
      "updated_at": "2016-11-01T18:55:10Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "I was just looking at that, it looks like they're back to releasing Ubuntu packages (it's been on and off).\n\nDoes the Debian 8 .NET Core \"package\" (the tarball from https://www.microsoft.com/net/core#debian) repro the same error on Debian Testing?\n",
      "created_at": "2016-11-01T18:57:12Z",
      "updated_at": "2016-11-01T18:57:12Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "> Dealing with source packages is annoying when I can just apt-get everything else on my system (including Mono)\n\nPreaching to the choir \ud83d\ude04 \n",
      "created_at": "2016-11-01T18:58:59Z",
      "updated_at": "2016-11-01T18:58:59Z"
    },
    {
      "author": "Daniel15",
      "author_association": "NONE",
      "body": "> Does the Debian 8 .NET Core \"package\" (the tarball from https://www.microsoft.com/net/core#debian) repro the same error on Debian Testing?\n\nI just tested that - Yes, it still repros :( I guess the package is built for Debian 8 and can't handle the newer libraries that come with Debian Testing (Stretch). \n",
      "created_at": "2016-11-20T06:32:55Z",
      "updated_at": "2016-11-20T06:32:55Z"
    }
  ],
  "created_at": "2016-10-29T23:19:17Z",
  "labels": [
    "WG-Cmdlets",
    "Resolution-External"
  ],
  "number": 2564,
  "state": "closed",
  "title": "Invoke-RestMethod causes segfault in libcrypto.so",
  "updated_at": "2017-03-15T06:32:08Z"
}