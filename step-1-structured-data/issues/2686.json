{
  "_url": "https://github.com/PowerShell/PowerShell/issues/2686",
  "author": "kedziorm",
  "body": "I just installed the latest release of the Powershell by typing:\r\n`sudo dpkg -i powershell_6.0.0-alpha.12-1ubuntu1.16.04.1_amd64.deb`\r\n\r\nThere was no errors during installation, but it seems that I have no access to Linux paths from Powershell (**even as a root**).\r\n\r\nSteps to reproduce\r\n------------------\r\nRun powershell and type:\r\n`Get-Content ~`\r\n\r\nExpected behavior\r\n-----------------\r\nShould provide content of the home directory of current user (similarly as Linux command `ls ~`).\r\n\r\nPlease note that even if I run powershell as root (by typing `sudo powershell`) I receive mentioned error.\r\n\r\nActual behavior\r\n---------------\r\n\"PermissionDenied\" error\r\n\r\n```\r\npowershell\r\n\r\nPS /home/testingdata> Get-Content ~                                             \r\nGet-Content : Access to the path '/home/testingdata' is denied.\r\nAt line:1 char:1\r\n+ Get-Content ~\r\n+ ~~~~~~~~~~~~~\r\n    + CategoryInfo          : PermissionDenied: (/home/testingdata:String) [Ge \r\n   t-Content], UnauthorizedAccessException\r\n    + FullyQualifiedErrorId : GetContentReaderUnauthorizedAccessError,Microsof \r\n   t.PowerShell.Commands.GetContentCommand\r\n \r\nPS /home/testingdata> whoami                                                    \r\ntestingdata\r\nPS /home/testingdata> \r\n```\r\n\r\n\r\nTrying as a root:\r\n\r\n```\r\nsudo su\r\ncd ~\r\n\r\nPS /root>  Get-Content ~                                                        \r\nGet-Content : Access to the path '/root' is denied.\r\nAt line:1 char:1\r\n+ Get-Content ~\r\n+ ~~~~~~~~~~~~~\r\n    + CategoryInfo          : PermissionDenied: (/root:String) [Get-Content],  \r\n   UnauthorizedAccessException\r\n    + FullyQualifiedErrorId : GetContentReaderUnauthorizedAccessError,Microsof \r\n   t.PowerShell.Commands.GetContentCommand\r\n \r\nPS /root> whoami                                                                \r\nroot\r\n```\r\n\r\n\r\nEnvironment data\r\n----------------\r\n\r\nI use Ubuntu 16.04 LTS 64-bit.\r\n\r\n> Name                           Value                                           \r\n> ----                           -----                                           \r\n> PSVersion                      6.0.0-alpha                                     \r\n> PSEdition                      Core                                            \r\n> PSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}                         \r\n> BuildVersion                   3.0.0.0                                         \r\n> GitCommitId                    v6.0.0-alpha.12                                 \r\n> CLRVersion                                                                     \r\n> WSManStackVersion              3.0                                             \r\n> PSRemotingProtocolVersion      2.3                                             \r\n> SerializationVersion           1.1.0.1\r\n\r\n```\r\n",
  "closed_at": "2018-09-28T15:36:14Z",
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Get-Content is for reading the contents of a file.  ~ resolves to the home directory which is not a file.  The PowerShell cmdlet you should be using is Get-ChildItem:\n\n``` powershell\nget-childitem ~\n```\n\nthis is equivalent to `ls ~` although you can just use `ls ~` in PowerShell, but `get-childitem ~` will return file and directory objects instead of just text for further processing.\n",
      "created_at": "2016-11-15T20:30:25Z",
      "updated_at": "2016-11-15T20:30:25Z"
    },
    {
      "author": "kedziorm",
      "author_association": "NONE",
      "body": "@SteveL-MSFT Sorry, shame on me.\nI'm really sorry for such stupid mistake (I used both cmdlets in past...) - I should check ls since `ls` is a standard alias for Get-ChildItem. \nOkay, so it's obvious that it's my fault, but I think that error message might be confusing, suggesting that it is permission issue - maybe that should be \"Unable to read content of... because ... is directory, file expected\"?\n",
      "created_at": "2016-11-16T05:31:34Z",
      "updated_at": "2016-11-16T05:31:34Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@kedziorm agree that the error message isn't a good one.\n\n```\n> cat ./Downloads/\n/bin/cat: ./Downloads/: Is a directory\n```\n\nUpdated title to reflect this discussion\n",
      "created_at": "2016-11-16T17:13:35Z",
      "updated_at": "2016-11-16T17:13:35Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Should we silently skip directory objects as `Unblock-File` because we can get paths from pipeline?",
      "created_at": "2017-10-08T07:59:11Z",
      "updated_at": "2017-10-08T07:59:11Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov that's an interesting idea and makes sense to me as an improvement, but since it's a `break change`, let's have Committee review the idea",
      "created_at": "2017-10-08T17:34:39Z",
      "updated_at": "2017-10-08T17:34:39Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee reviewed this and agreed that we should have a better error message and not silently ignore directories",
      "created_at": "2017-11-01T22:57:20Z",
      "updated_at": "2017-11-01T22:57:20Z"
    },
    {
      "author": "zhenggu",
      "author_association": "CONTRIBUTOR",
      "body": "The bug is caused by class FileStream of dotnet raise System.UnauthorizedAccessException when passes path with one directory, should we fix in function CreateStreams of FileSystemContentStream.cs, or submit a bug to dotnet?",
      "created_at": "2018-09-18T13:54:52Z",
      "updated_at": "2018-09-18T13:55:34Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@zhenggu I don't think dotnet will or should make a change as in that case an app is explicitly (although accidentally) trying to read a directory as a FileStream.  I think this fix will be in the FileSystemProvider where if `Get-Content` is called on a folder, it should just error out early with a good error message than catch an exception from CoreFx.",
      "created_at": "2018-09-18T20:13:39Z",
      "updated_at": "2018-09-18T20:13:39Z"
    }
  ],
  "created_at": "2016-11-15T19:17:55Z",
  "labels": [
    "WG-Cmdlets",
    "Up-for-Grabs",
    "Resolution-Fixed",
    "Committee-Reviewed"
  ],
  "number": 2686,
  "state": "closed",
  "title": "Bad error message when using Get-Content with a Directory",
  "updated_at": "2018-10-30T06:04:39Z"
}