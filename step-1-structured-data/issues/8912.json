{
  "_url": "https://github.com/PowerShell/PowerShell/issues/8912",
  "author": "rkeithhill",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n\r\n-->\r\nI have `$env:PAGER` set to `less \"-PPowerShell help page line %lt (press h for help or q to quit)\"` and on PS Core 6.1.0 on Windows 10 1809, PS Core uses less and gives me this nice footer during paging:\r\n\r\n![image](https://user-images.githubusercontent.com/5177512/52985938-40277100-33b3-11e9-83a4-525e06308539.png)\r\n\r\nBut in PS Core 6.2.0-preview.4 that same env var setting, causes `more.com` to be invoked. That is rather rude - ignoring my less preference.\r\n\r\n# Steps to reproduce\r\nSet the following env var value.\r\n```powershell\r\n$env:PAGER = 'less \"-PPowerShell help page line %lt (press h for help or q to quit)\"'\r\n```\r\n\r\n# Expected behavior\r\nI get paging via less and with my desired footer.\r\n\r\n\r\n# Actual behavior\r\nmore.com is invoked instead.\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.2.0-preview.4\r\nPSEdition                      Core\r\nGitCommitId                    6.2.0-preview.4\r\nOS                             Microsoft Windows 10.0.17763\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2019-04-10T21:17:20Z",
  "comments": [
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "Ah, I see this warning when I scroll up - it goes by pretty fast and winds up off-screen:\r\n```\r\nWARNING: Ignoring invalid custom-paging utility command line specified in $env:PAGER: less \"-PPowerShell help page line %lt (press h for help or q to quit)\"\r\n```\r\nOK, so this is a (lesser) **breaking** change.  Is there a work-around?",
      "created_at": "2019-02-19T02:39:27Z",
      "updated_at": "2019-02-19T02:40:05Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "I'm not sure this script works as expected:\r\n```\r\n            # Split the command line into tokens, respecting quoting. \r\n            $customPagerCommand, $customPagerCommandArgs = & { Write-Output -- $customPagerCommandLine }\r\n```\r\ne.g.\r\n```\r\n$customPagerCommandLine = 'less \"-PPowerShell help page line %lt (press h for help or q to quit)\"'\r\n$customPagerCommand, $customPagerCommandArgs = & { Write-Output -- $customPagerCommandLine }\r\n```\r\nOutputs the entire value to `$customPagerCommand` because `$customPagerCommandLine` is always interpreted as a **single string**.  Something like this works but I wouldn't recommend iex:\r\n```\r\n $customPagerCommand, $customPagerCommandArgs = iex \"Write-Output -- $customPagerCommandLine\"\r\n```\r\n\r\n\r\n\r\n\r\n",
      "created_at": "2019-02-19T02:53:16Z",
      "updated_at": "2019-02-19T02:53:44Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "Another possible approach:\r\n```\r\n$errs = $null\r\n$t = [System.Management.Automation.PSParser]::Tokenize($customPagerCommandLine, [ref]$errs)\r\n$customPagerCommand = $t[0]\r\n$customPagerArgs = $t[1]\r\n```",
      "created_at": "2019-02-19T03:46:40Z",
      "updated_at": "2019-02-19T03:46:40Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "Looks like this is defined here:\r\nhttps://github.com/PowerShell/PowerShell/blob/ff3edaa2e38d715b287bbb7046fd75a5ba5d1061/src/System.Management.Automation/engine/InitialSessionState.cs#L4106-L4215\r\n\r\nPossibly last changed in this commit: https://github.com/PowerShell/PowerShell/commit/4858afb613e0f39c620c3cdc82ab4e00099eeb3e.",
      "created_at": "2019-02-19T05:37:01Z",
      "updated_at": "2019-02-19T05:37:01Z"
    },
    {
      "author": "pougetat",
      "author_association": "NONE",
      "body": "Just saw this issue. I'll look into it asap since I committed that code. :)",
      "created_at": "2019-02-19T07:38:08Z",
      "updated_at": "2019-02-19T07:38:08Z"
    },
    {
      "author": "pougetat",
      "author_association": "NONE",
      "body": "@rkeithhill @rjmholt \r\nFirst of all thanks for your investigative work. :)\r\nI've looked into this issue and it does seem that my code is not tokenizing the custom env:PAGER that is being set. I am about to open a PR that tokenizes properly and once it is merged this env:PAGER variable will work :\r\n\r\n```Powershell\r\n$env:PAGER = '\"C:\\Program Files\\Git\\usr\\bin\\less.exe\" \"-PPowerShell\r\nhelp page line %lt (press h for help or q to quit)\"'\r\n```\r\n\r\nYou should replace the path specified with whichever path the less executable is located at. However since you said your PSCore uses less you might not even need the path.",
      "created_at": "2019-02-19T08:34:51Z",
      "updated_at": "2019-02-19T10:00:05Z"
    }
  ],
  "created_at": "2019-02-19T02:31:15Z",
  "number": 8912,
  "state": "closed",
  "title": "Passing parameters to $env:PAGER is broken in 6.2.0-preview.4",
  "updated_at": "2019-04-11T03:00:40Z"
}