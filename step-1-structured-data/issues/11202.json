{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11202",
  "author": "doctordns",
  "body": "The BestPractices module can, apparently, be loaded using Import-Module (In P6). Using -Verbose shows the module at least partly loading. But no commands are available and Get-BPAModule does not run.\r\n\r\nIn earlier preview versions of PowerShell 7, This module did NOT load using Import-module OR using the earlier Import-WinModule. Now the module seems to load but is not available. And there are not any error/warning messages to guide the IT Pro. If anything, this is WORSE than the behaviour of using the older PSWIndowsCompatibility module.\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\n# Import the BestPracticesmodule\r\nImport-module BestPractices   # produces no error\r\nGet-Module                    # Produces no output\r\nImport-module BestPractices -Verbose\r\nVERBOSE: Loading module from path 'C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules\\BestPractices\\BestPractices.psd1'.\r\nVERBOSE: Loading 'TypesToProcess' from path 'C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules\\BestPractices\\Microsoft.BestPractices.Types.ps1xml'.\r\nVERBOSE: Loading 'FormatsToProcess' from path 'C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules\\BestPractices\\Microsoft.BestPractices.Cmdlets.Formats.ps1xml'.\r\n# Test it out\r\nGet-BPAModel                  # produces no output (and no errors!)\r\n```\r\n\r\n# Expected behaviour\r\n\r\nThe expected behaviour is that **Get-BPAModel** returns the BPA models available.\r\n\r\n# Actual behaviour\r\n\r\nNo error messages and Get-BPAModel returns no output (or errors).\r\n\r\n# Environment data\r\n\r\n```none\r\nPS C:\\Windows\\System32> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-preview.6\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-preview.6\r\nOS                             Microsoft Windows 10.0.17763\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@anmenaga  can you take a look?",
      "created_at": "2019-11-26T20:53:49Z",
      "updated_at": "2019-11-26T20:53:49Z"
    },
    {
      "author": "anmenaga",
      "author_association": "CONTRIBUTOR",
      "body": "Interesting... Importing `BestPractices` module in Windows PS actually breaks `Get-FormatData` cmdlet:\r\n![BestPractCapture](https://user-images.githubusercontent.com/11860095/69674860-3aea0780-1052-11ea-938d-350c6a944550.png)\r\nThis breaks `WinCompat` because `Get-FormatData` is used in implicit remoting call chain: `Import-Module -UseWindowsPowerShell -> [implicit PS remoting code] -> Export-PSSession -FormatTypeName \"*\" -Session $s -> [in session $s] Get-FormatData -TypeName '*'`\r\n\r\nAnother issue is that we are missing an error-reporting path in one case in implicit remoting code; this should be fixed independently.",
      "created_at": "2019-11-26T21:46:14Z",
      "updated_at": "2019-11-26T21:46:14Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I think the priority here is to fix it so that an error is reported to the user.",
      "created_at": "2019-11-26T22:31:45Z",
      "updated_at": "2019-11-26T22:31:45Z"
    },
    {
      "author": "doctordns",
      "author_association": "COLLABORATOR",
      "body": "I'd LIKE the priority to be getting the module to work either natively or via the new compat logic.\r\n\r\nBut if that can't happen, then at least an error message back to the user.",
      "created_at": "2019-11-28T16:44:33Z",
      "updated_at": "2019-11-28T16:44:33Z"
    },
    {
      "author": "doctordns",
      "author_association": "COLLABORATOR",
      "body": "In RC1, there is a new and different error message. The best practices module still does not load fully:\r\n\r\n```powershell\r\nPS C:\\Foo> # Import the BestPracticesmodule\r\nPS C:\\Foo> Import-module BestPractices   # produces no error\r\nImport-Module: Failed to generate proxies for remote module 'BestPractices'. Running the Get-FormatData command in a remote session reported the following error: Unable to cast object of type 'Microsoft.PowerShell.Commands.Internal.Format.ControlReference' to type 'Microsoft.PowerShell.Commands.Internal.Format.ComplexControlBody'..\r\n```",
      "created_at": "2020-01-11T20:34:16Z",
      "updated_at": "2020-01-11T20:34:16Z"
    },
    {
      "author": "anmenaga",
      "author_association": "CONTRIBUTOR",
      "body": "Basically the remaining issue here is that implicit PS Remoting code is doing a blanket `Export-PSSession -FormatTypeName \"*\"`. It needs to collect data only for types needed by the remote module; this is not trivial; needs some prototyping.",
      "created_at": "2020-01-30T01:26:03Z",
      "updated_at": "2020-01-30T01:26:03Z"
    },
    {
      "author": "anmenaga",
      "author_association": "CONTRIBUTOR",
      "body": "An important side effect - importing `BestPractices` module through WinCompat, makes it impossible to load any other module into that WinCompat session.\r\n```\r\nPS E:\\> ipmo BestPractices\r\nImport-Module: Failed to generate proxies for remote module 'BestPractices'. Running the Get-FormatData command in a remote session reported the following error: Unable to cast object of type 'Microsoft.PowerShell.Commands.Internal.Format.ControlReference' to type 'Microsoft.PowerShell.Commands.Internal.Format.ComplexControlBody'..\r\nPS E:\\> ipmo ServerManager\r\nImport-Module: Failed to generate proxies for remote module 'ServerManager'. Running the Get-FormatData command in a remote session reported the following error: Unable to cast object of type 'Microsoft.PowerShell.Commands.Internal.Format.ControlReference' to type 'Microsoft.PowerShell.Commands.Internal.Format.ComplexControlBody'..\r\nPS E:\\>\r\n```\r\n",
      "created_at": "2020-01-30T21:03:13Z",
      "updated_at": "2020-01-30T21:03:13Z"
    },
    {
      "author": "alx9r",
      "author_association": "NONE",
      "body": "@anmenaga Should I expect that the fix for this would have to come via an update to Windows PowerShell?  Or do you foresee a workaround being implemented in PowerShell core edition?",
      "created_at": "2020-04-23T14:39:14Z",
      "updated_at": "2020-04-23T14:39:14Z"
    }
  ],
  "created_at": "2019-11-26T20:32:17Z",
  "labels": [
    "Issue-Bug",
    "WG-Remoting"
  ],
  "number": 11202,
  "state": "open",
  "title": "Windows Server Best Practices module does load properly in PowerShell 7 P6",
  "updated_at": "2020-12-14T20:14:06Z"
}