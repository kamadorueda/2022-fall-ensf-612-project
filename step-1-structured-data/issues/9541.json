{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9541",
  "author": "bigboy-pdb-spam",
  "body": "# Steps to reproduce\r\n\r\nIn File Explorer on an NTFS volume, create the file: [abc].txt\r\n\r\nFollowing this run:\r\n\r\n```powershell\r\nls '[abc].txt'\r\n```\r\n\r\n# Expected behavior\r\n\r\n```none\r\n    Directory: C:\\Users\\Dave\r\n\r\nMode                LastWriteTime         Length Name\r\n----                -------------         ------ ----\r\n-a----        2019-05-06 12:07 AM              0 [abc].txt\r\n```\r\n\r\n# Actual behavior\r\n\r\nNo output displayed.\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.2.0\r\nPSEdition                      Core\r\nGitCommitId                    6.2.0\r\nOS                             Microsoft Windows 10.0.17763\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\n# Additional Cases and Information\r\n\r\nThe file name can be displayed using tab completion, but the brackets are preceded by back ticks, which indicates that Windows can see the file and assumes that the brackets are special characters. When attempting to list the file using the `ls` command, the following error is generated:\r\n\r\n```none\r\nls : Cannot find path 'C:\\Users\\Dave\\`[abc`].txt' because it does not exist.\r\nAt line:1 char:1\r\n+ ls '.\\`[abc`].txt'\r\n+ ~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : ObjectNotFound: (C:\\Users\\Dave\\`[abc`].txt:String) [Get-ChildItem], ItemNotFoundException\r\n+ FullyQualifiedErrorId : PathNotFound,Microsoft.PowerShell.Commands.GetChildItemCommand\r\n```\r\n\r\nOther commands generate no output or errors as well.\r\n\r\n```powershell\r\nGet-FileHash '[abc].txt'\r\n# Generates no output\r\n\r\n1 | Out-File '[abc].txt'\r\n# Generates error stating that the wildcard path did not resolve to a file\r\n```\r\n\r\nAccording to [Microsoft's \"About Quoting Rules\" page](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_quoting_rules?view=powershell-5.1), \"When you enclose a string in single-quotation marks (a single-quoted string), the string is passed to the command exactly as you type it. No substitution is performed\".",
  "closed_at": "2019-05-31T17:14:40Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "/cc @kwkam @mklement0 ",
      "created_at": "2019-05-06T05:33:35Z",
      "updated_at": "2019-05-06T05:33:35Z"
    },
    {
      "author": "kwkam",
      "author_association": "CONTRIBUTOR",
      "body": "**Short:**\r\nhttps://github.com/PowerShell/PowerShell/pull/9257 resolves this issue.\r\n\r\n**Long:**\r\nMost cmdlets that accept a path treats the first string parameter as `-Path`, which can do wildcard/glob. The command\r\n```PowerShell\r\nls '[abc].txt'\r\n```\r\nis the same as\r\n```PowerShell\r\nGet-ChildItem -Path '[abc].txt'\r\n```\r\nwhere `[abc].txt` will be considered as a wildcard pattern which matches either `a.txt`/`b.txt`/`c.txt`, so we have to:\r\n1. Escape the bracket, tell the cmdlet that we are not doing wildcard:\r\n```PowerShell\r\nGet-ChildItem -Path '`[abc`].txt'\r\n```\r\n2. Or, use `-LiteralPath` to indicate that the path is literal:\r\n```PowerShell\r\nGet-ChildItem -LiteralPath '[abc].txt'\r\n```\r\nHowever, the first solution still does not work because the `Get-ChildItem` cmdlet is not handling the `-Path` argument correctly, when it contains escaped special character:\r\n- `Get-ChildItem` check if glob should be performed on `-Path`\r\n  - if contains (non-escaped) wildcard character\r\n    - resolves the path as pattern\r\n  - else\r\n    - resolves the path as literal (first solution falls in here)\r\n\r\nWhich means it will try to find a file literally named ``` `[abc`].txt ``` instead of `[abc].txt`",
      "created_at": "2019-05-06T16:10:23Z",
      "updated_at": "2019-05-06T16:10:23Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@kwkam Thanks for great comment! Should we add new test in #9257 related the issue?",
      "created_at": "2019-05-06T16:31:04Z",
      "updated_at": "2019-05-06T16:31:04Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "And the related issues re file-creating cmdlets such as  `Out-File` (and operator `>`) are #4726  and #9475. Related: #9225.",
      "created_at": "2019-05-06T16:35:10Z",
      "updated_at": "2019-05-06T16:35:10Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:This issue was addressed in #9257, which has now been successfully released as `v7.0.0-preview.2`.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.0.0-preview.2)\n",
      "created_at": "2019-07-17T20:55:54Z",
      "updated_at": "2019-07-17T20:55:54Z"
    }
  ],
  "created_at": "2019-05-06T04:20:32Z",
  "number": 9541,
  "state": "closed",
  "title": "Brackets Treated As Special Characters In Single Quotes",
  "updated_at": "2019-07-17T20:55:54Z"
}