{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11715",
  "author": "rkeithhill",
  "body": "# Steps to reproduce\r\nOpen up PS7 in a RedHat7 terminal.  Follow the instructions on this page to install VSCode:\r\n\r\nhttps://code.visualstudio.com/docs/setup/linux#_rhel-fedora-and-centos-based-distributions\r\n\r\nThe specific command that chokes is this:\r\n```powershell\r\nsudo sh -c 'echo -e \"[code]\\nname=Visual Studio Code\\nbaseurl=https://packages.microsoft.com/yumrepos/vscode\\nenabled=1\\ngpgcheck=1\\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc\" > /etc/yum.repos.d/vscode.repo'\r\n```\r\n\r\n# Expected behavior\r\n\r\nThe file `/etc/yum.repos.d/vscode.repo` is created.\r\n\r\n# Actual behavior\r\n\r\nThe file is not created.  Specifically, PS7 seems to have issues with the spaces in \"Visual Studio Code\" and the `\\n` are not translated into newlines by sh.\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-rc.1\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-rc.1\r\nOS                             Linux 3.10.0-862.el7.x86_64 #1 SMP Wed Mar 21 18:14:51 EDT 2018\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "BTW the workaround is to **exit PowerShell** and execute the command directly from `sh`.  :-(",
      "created_at": "2020-01-30T05:16:52Z",
      "updated_at": "2020-01-30T05:17:09Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Unfortunately, this is the fundamentally broken quoting of arguments passed to external programs rearing its head again, and it affects _all_ PowerShell versions to date, as now summarized in https://github.com/PowerShell/PowerShell/issues/1995#issuecomment-562334606.\r\n\r\n```powershell\r\nPS> sh -c 'echo -e \"Visual Studio Code\"'\r\n```\r\n\r\nbreaks down into the following arguments:\r\n\r\n```none\r\n$1=[sh]\r\n$2=[-c]\r\n$3=[echo -e Visual]\r\n$4=[Studio]\r\n$5=[Code]\r\n```\r\n\r\nThe net effect is that only `'Visual'` is echoed.\r\n\r\n(As an aside: `echo`'s `-e` option is not POSIX-compliant and shouldn't be used with `sh`; on macOS and Ubuntu, for instance, the `-e` _prints_ instead of being interpreted as an option - POSIX `echo` supports no options at all.)\r\n\r\nThe reason is that the intermediate, re-quoted version of the command constructed behind the scenes looks like this, which is broken, due to lack of `\\`-escaping of the embedded `\"` chars.:\r\n\r\n```sh\r\n# !! Broken quoting.\r\nsh -c \"echo -e \"Visual Studio Code\"\"\r\n```\r\n\r\nThe workaround is to _manually_ perform the `\\`-escaping, which, of course would break once the underlying problem is fixed (which therefore can't be done without breaking backward compatibility:\r\n\r\n\r\n```powershell\r\n# Sadly, the \\-escaping is necessary.\r\nPS> sh -c 'echo -e \\\"Visual Studio Code\\\"'\r\n```\r\n",
      "created_at": "2020-01-30T13:14:00Z",
      "updated_at": "2020-01-30T13:14:00Z"
    }
  ],
  "created_at": "2020-01-29T05:27:22Z",
  "labels": [
    "Issue-Bug",
    "Area-Maintainers-Documentation"
  ],
  "number": 11715,
  "state": "open",
  "title": "VSCode manual install instructions don't work from PS7 RC.1",
  "updated_at": "2020-01-30T13:14:01Z"
}