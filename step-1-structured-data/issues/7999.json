{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7999",
  "author": "rjmholt",
  "body": "Was investigating escaping a filename for PowerShell in https://github.com/PowerShell/PowerShellEditorServices/pull/765#discussion_r224297544.\r\n\r\nI created a directory with the following files:\r\n```\r\nMode                LastWriteTime         Length Name\r\n----                -------------         ------ ----\r\n-a----       10/11/2018  10:57 AM              9 [script.ps1\r\n-a----       10/11/2018  10:57 AM              1 `[script.ps1\r\n-a----       10/11/2018  10:57 AM              1 ``[script.ps1\r\n-a----       10/11/2018  10:57 AM              1 ```[script.ps1\r\n-a----       10/11/2018  10:57 AM              1 ````[script.ps1\r\n-a----       10/11/2018  10:57 AM              8 script.ps1\r\n```\r\n\r\n(`New-Item` doesn't seem to have a `LiteralPath` parameter by the way)\r\n\r\nI then run the following:\r\n```powershell\r\nforeach ($i in 0..12) { $ticks = '`' * $i; Get-Item \"./$ticks[script.ps1\" }\r\n```\r\n\r\n## Actual Results\r\n\r\nThe output of this in the given directory gives me:\r\n```\r\nGet-Item : Cannot retrieve the dynamic parameters for the cmdlet. The specified wildcard character pattern is not valid: [script.ps1\r\nAt line:1 char:44\r\n+ ... h ($i in 0..12) { $ticks = '`' * $i; Get-Item \"./$ticks[script.ps1\" }\r\n+                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : InvalidArgument: (:) [Get-Item], ParameterBindingException\r\n+ FullyQualifiedErrorId : GetDynamicParametersException,Microsoft.PowerShell.Commands.GetItemCommand\r\n\r\n\r\n\r\n    Directory: C:\\Users\\roholt\\Documents\\Dev\\sandbox\\badnames\r\n\r\n\r\nMode                LastWriteTime         Length Name\r\n----                -------------         ------ ----\r\n-a----       10/11/2018  10:57 AM              9 [script.ps1\r\n-a----       10/11/2018  10:57 AM              9 [script.ps1\r\n-a----       10/11/2018  10:57 AM              1 `[script.ps1\r\nGet-Item : Cannot retrieve the dynamic parameters for the cmdlet. The specified wildcard character pattern is not valid: ``[script.ps1\r\nAt line:1 char:44\r\n+ ... h ($i in 0..12) { $ticks = '`' * $i; Get-Item \"./$ticks[script.ps1\" }\r\n+                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : InvalidArgument: (:) [Get-Item], ParameterBindingException\r\n+ FullyQualifiedErrorId : GetDynamicParametersException,Microsoft.PowerShell.Commands.GetItemCommand\r\n\r\n-a----       10/11/2018  10:57 AM              1 ``[script.ps1\r\n-a----       10/11/2018  10:57 AM              1 `[script.ps1\r\n-a----       10/11/2018  10:57 AM              1 ```[script.ps1\r\nGet-Item : Cannot retrieve the dynamic parameters for the cmdlet. The specified wildcard character pattern is not valid: ````[script.ps1\r\nAt line:1 char:44\r\n+ ... h ($i in 0..12) { $ticks = '`' * $i; Get-Item \"./$ticks[script.ps1\" }\r\n+                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : InvalidArgument: (:) [Get-Item], ParameterBindingException\r\n+ FullyQualifiedErrorId : GetDynamicParametersException,Microsoft.PowerShell.Commands.GetItemCommand\r\n\r\n-a----       10/11/2018  10:57 AM              1 ````[script.ps1\r\n-a----       10/11/2018  10:57 AM              1 ``[script.ps1\r\nGet-Item : Cannot find path 'C:\\Users\\roholt\\Documents\\Dev\\sandbox\\badnames\\`````[script.ps1' because it does not exist.\r\nAt line:1 char:44\r\n+ ... h ($i in 0..12) { $ticks = '`' * $i; Get-Item \"./$ticks[script.ps1\" }\r\n+                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : ObjectNotFound: (C:\\Users\\roholt...````[script.ps1:String) [Get-Item], ItemNotFoundException\r\n+ FullyQualifiedErrorId : PathNotFound,Microsoft.PowerShell.Commands.GetItemCommand\r\n\r\nGet-Item : Cannot retrieve the dynamic parameters for the cmdlet. The specified wildcard character pattern is not valid: ``````[script.ps1\r\nAt line:1 char:44\r\n+ ... h ($i in 0..12) { $ticks = '`' * $i; Get-Item \"./$ticks[script.ps1\" }\r\n+                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : InvalidArgument: (:) [Get-Item], ParameterBindingException\r\n+ FullyQualifiedErrorId : GetDynamicParametersException,Microsoft.PowerShell.Commands.GetItemCommand\r\n```\r\n\r\nMore concretely:\r\n\r\n```\r\n> Get-Item './[script.ps1'  # 0\r\n# Error (The specified wildcard character pattern is not valid: [script.ps1)\r\n> Get-Item './`[script.ps1'  # 1\r\n# Finds '[script.ps1'\r\n> Get-Item './``[script.ps1'  # 2\r\n# Finds '[script.ps1'                         <--- ???\r\n> Get-Item './```[script.ps1'  # 3\r\n# Finds '`[script.ps1'\r\n> Get-Item './````[script.ps1'  # 4\r\n# Error (The specified wildcard character pattern is not valid: ``[script.ps1)\r\n> Get-Item './`````[script.ps1'  # 5\r\n# Finds '``[script.ps1'\r\n> Get-Item './``````[script.ps1'  # 6\r\n# Finds '`[script.ps1'                         <--- ???\r\n> Get-Item './```````[script.ps1'  # 7\r\n# Finds '```[script.ps1'\r\n> Get-Item './````````[script.ps1'  # 8\r\n# Error (The specified wildcard character pattern is not valid: ````[script.ps1)\r\n> Get-Item './`````````[script.ps1'  # 9\r\n# Finds '````[script.ps1'\r\n> Get-Item './``````````[script.ps1'  # 10\r\n# Finds '``[script.ps1'                         <--- ???\r\n> Get-Item './```````````[script.ps1'  # 11\r\n# Error (Cannot find path 'C:\\Users\\roholt\\Documents\\Dev\\sandbox\\badnames\\`````[script.ps1' because it does not exist.)\r\n> Get-Item './````````````[script.ps1'  # 12\r\n# Error (The specified wildcard character pattern is not valid: ``````[script.ps1)\r\n```\r\n\r\nCases 0, 1, 3, 4, 5, 7, 8, 9, 11 and 12 make sense. Cases 2, 6 and 10 seem pretty strange to me.\r\n\r\n## Expected Behaviour\r\n\r\nCases 2, 6 and 10 should report an invalid wildcard pattern, like cases 0, 4, 8 and 12.\r\n\r\nTagging @JamesWTruher because we discussed this offline earlier.",
  "closed_at": null,
  "comments": [
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "Trying to resolve the PSES issue linked above, I also tried the following:\r\n\r\n- Create files called `[script.ps1`, `` `[script.ps1``, ` ``[script.ps1`, etc.\r\n- Populate them with the content `0`, `1`, `2`, etc. respectively (so the content of the file represents the number of backticks in the name).\r\n- Execute them directly in order\r\n\r\nHere are my results:\r\n```\r\n> ./[script.ps1  # 0\r\n# Error (The specified wildcard character pattern is not valid)\r\n> ./`[script.ps1  # 1\r\n# Error (The specified wildcard character pattern is not valid)\r\n> ./``[script.ps1  # 2\r\n1\r\n> ./```[script.ps1 # 3\r\n1\r\n> ./````[script.ps1  # 4\r\n0\r\n> ./`````[script.ps1  # 5\r\n0\r\n> ./``````[script.ps1  # 6\r\n3\r\n> ./```````[script.ps1  # 7\r\n3\r\n> ./````````[script.ps1  # 8\r\n# Error (The specified wildcard character pattern is not valid)\r\n> ./`````````[script.ps1  # 9\r\n# Error (The specified wildcard character pattern is not valid)s\r\n> ./``````````[script.ps1  # 10\r\n# Error (The specified wildcard character pattern is not valid)\r\n> ./```````````[script.ps1  # 11\r\n# Error (The specified wildcard character pattern is not valid)\r\n> ./````````````[script.ps1  # 12\r\n1\r\n> ./`````````````[script.ps1  # 13\r\n1\r\n> ./``````````````[script.ps1  # 14\r\n# Error (The specified wildcard character pattern is not valid)\r\n> ./```````````````[script.ps1  # 15\r\n# Error (The specified wildcard character pattern is not valid)\r\n> ./````````````````[script.ps1  # 16\r\n# Error (The specified wildcard character pattern is not valid)\r\n> ./`````````````````[script.ps1  # 17\r\n# Error (The specified wildcard character pattern is not valid)\r\n> ./``````````````````[script.ps1  # 18\r\n# Error (The specified wildcard character pattern is not valid)\r\n> ./```````````````````[script.ps1  # 19\r\n# Error (The specified wildcard character pattern is not valid)\r\nC:\\Users\\roholt\\Documents\\Dev\\sandbox\\badnames\r\n> ./````````````````````[script.ps1  # 20\r\n2\r\n# I stopped at this point\r\n```\r\n\r\nI also tried invoking with a string literal:\r\n```\r\n> & '.\\[script.ps1'  # 0\r\n# Error (The specified wildcard character pattern is not valid)\r\n> & '.\\`[script.ps1'  # 1\r\n1\r\n> & '.\\``[script.ps1'  # 2\r\n0\r\n> & '.\\```[script.ps1'  # 3\r\n3\r\n> & '.\\````[script.ps1'  # 4\r\n# Error (The specified wildcard character pattern is not valid)\r\n> & '.\\`````[script.ps1'  # 5\r\n# Error (The specified wildcard character pattern is not valid)\r\n> & '.\\``````[script.ps1'  # 6\r\n1\r\n> & '.\\```````[script.ps1'  # 7\r\n# Error (The specified wildcard character pattern is not valid)\r\n> & '.\\````````[script.ps1'  # 8\r\n# Error (The specified wildcard character pattern is not valid)\r\n> & '.\\`````````[script.ps1'  # 9\r\n# Error (The specified wildcard character pattern is not valid)\r\n> & '.\\``````````[script.ps1'  # 10\r\n2\r\n> & '.\\```````````[script.ps1'  # 11\r\n# Error (The specified wildcard character pattern is not valid)\r\n> & '.\\````````````[script.ps1'  # 12\r\n# Error (The specified wildcard character pattern is not valid)\r\n> & '.\\`````````````[script.ps1'  # 13\r\n# Error (The specified wildcard character pattern is not valid)\r\n> & '.\\``````````````[script.ps1'  # 14\r\n3\r\n# I stopped at this point\r\n```",
      "created_at": "2018-10-11T21:02:38Z",
      "updated_at": "2018-10-11T21:02:38Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "After discussing this further with @JamesWTruher, we think one way to get around this is to use the fully provider-qualified name: ``Microsoft.PowerShell.Core\\FileSystem::C:\\path\\to\\`[script.ps1``",
      "created_at": "2018-10-11T23:23:03Z",
      "updated_at": "2018-10-11T23:23:03Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@rjmholt Please look #7399 - perhaps it could resolve the issue (fix for ContainsValidWildcardPattern).",
      "created_at": "2018-10-12T11:22:39Z",
      "updated_at": "2018-10-12T11:32:08Z"
    },
    {
      "author": "kwkam",
      "author_association": "CONTRIBUTOR",
      "body": "I believe this is more related to the WildcardPatten escape & unescape inconsistency mentioned in #7407",
      "created_at": "2018-10-12T12:06:22Z",
      "updated_at": "2018-10-12T12:06:22Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Re invocation with `.` / `&`: methinks the command-name argument should never be interpreted as a wildcard expression (though fixing that would technically be a breaking change)  - see #4726 \r\n\r\nTo add to the cases of unexpected behaviors with `-Path`: an argument that also contains _unescaped_ wildcard characters introduces the unexpected need for an additional layer of escaping:\r\n\r\n```powershell\r\n$null = New-Item 'a['\r\n\r\nGet-Item 'a`['  # OK - no unescaped metachar.\r\n\r\nGet-Item '*`['  # BREAKS - unescaped metachar. *\r\n\r\nGet-Item '*``['  # WORKS, but shouldn't be necessary\r\n```\r\n\r\nAlso, interestingly, performing the filtering via `-Include` does _not_ exhibit the bug:\r\n\r\n```powershell\r\nGet-ChildItem * -Include '*`['  # OK\r\n```\r\n",
      "created_at": "2019-01-09T10:37:00Z",
      "updated_at": "2019-01-09T10:48:08Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "> ```powershell\r\n> Get-Item '*``['  # WORKS, but shouldn't be necessary\r\n> ```\r\n\r\nI think this is the most important problem here; the input is unescaped a varying (and hard-to-predict) number of times, which undermines the whole concept of escaping to my mind.",
      "created_at": "2019-01-09T18:25:43Z",
      "updated_at": "2019-01-09T18:25:43Z"
    },
    {
      "author": "zzJinux",
      "author_association": "NONE",
      "body": "I think I found one more doubtful behavior. Please check if it's right\r\n## Reproduce\r\nworking directory:\r\n```\r\nMode                LastWriteTime         Length Name\r\n----                -------------         ------ ----\r\nd-----        2019-06-14 \uc624\ud6c4 10:05                []\r\nd-----        2019-06-14 \uc624\ud6c4 10:50                ``\r\n```\r\nThen run the following:\r\n```powershell\r\ngi '``[``]'\r\n```\r\n## Expected\r\n```\r\nMode                LastWriteTime         Length Name\r\n----                -------------         ------ ----\r\nd-----        2019-06-14 \uc624\ud6c4 10:50                ``\r\n```\r\n`'``[``]'` should be interpreted as `BACKTICK META-LBRACKET BACKTICK META-RBRACKET`, then match ` `` `\r\n## Actual\r\n```\r\nMode                LastWriteTime         Length Name\r\n----                -------------         ------ ----\r\nd-----        2019-06-14 \uc624\ud6c4 10:05                []\r\n```",
      "created_at": "2019-06-14T14:16:05Z",
      "updated_at": "2019-06-14T14:16:05Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@vexx32  states that the WG decided that fixing this issue should also encompass a related fix for the native globbing feature - see  https://github.com/PowerShell/PowerShell/issues/15959#issuecomment-913707641 ",
      "created_at": "2021-09-06T19:52:39Z",
      "updated_at": "2021-09-06T19:53:23Z"
    }
  ],
  "created_at": "2018-10-11T18:19:50Z",
  "number": 7999,
  "state": "open",
  "title": "Backtick escaping inconsistent",
  "updated_at": "2021-11-30T14:52:28Z"
}