{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3158",
  "author": "HemantMahawar",
  "body": "Add more details later\r\n<!--\r\n\r\nIf it is a bug report:\r\n- make sure you are able to repro it on the latest released version. \r\nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\r\n- Search the existing issues.\r\n- Refer to the [FAQ](../docs/FAQ.md).\r\n- Refer to the [known issues](../docs/KNOWNISSUES.md).\r\n- Fill out the following repro template\r\n\r\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\r\n-->\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n\r\nActual behavior\r\n---------------\r\n\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\n\r\n```\r\n",
  "closed_at": "2019-03-15T17:51:31Z",
  "comments": [
    {
      "author": "apetitjean",
      "author_association": "NONE",
      "body": "That is *definitely* something that should be addressed! That makes just 10 years we struggle with that ;-)",
      "created_at": "2017-02-23T13:31:13Z",
      "updated_at": "2017-02-23T13:31:13Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Related: #4292 \r\n\r\nGiven the current capabilities:\r\n\r\n* In _hindsight_, by inspecting `$Error`, I don't think there's a (straightforward) way to classify previous errors - though I'm not sure that's needed. [_Update_: It is needed in order to provide error type-specific coloring, for instance - see #3647]\r\n\r\n* To distinguish errors _as they occur_, use a `Try / Catch` statement: only _terminating_ errors will trigger the `Catch` handler:\r\n\r\nNote: I'm using `1 / 0` as a stand-in for a pipeline-terminating error here:\r\n\r\n```powershell\r\n# Trigger a pipeline-terminating error; works the same with a script-terminating error (Throw).\r\n$errCountBefore = $Error.Count\r\n$terminatingErrorOccurred = $False\r\nTry {\r\n  1 / 0\r\n}  Catch { # TRIGGERED by a TERMINATING ERROR - both pipeline-terminating and script-terminating\r\n  # Note: To also *output* the error, use Write-Error $_, but note that this\r\n  #       *duplicates* the automatically generated $Error entry.\r\n  Write-Error $_\r\n  $terminatingErrorOccurred = $True\r\n}\r\nif ($terminatingErrorOccurred)            { 'Terminating error occurred.' }\r\nelseif ($Error.Count -gt $errCountBefore) { 'Non-terminating error occurred.' }\r\n\r\n'---'\r\n\r\n# Trigger a non-terminating error.\r\n$errCountBefore = $Error.Count\r\n$terminatingErrorOccurred = $False\r\nTry {\r\n  # A non-terminating error prints its output to the error stream,\r\n  # irrespective of any enclosing Try/Catch handler.\r\n  Get-Item /NoSuch\r\n}  Catch {  # NOT triggered by a NON-TERMINATING ERROR\r\n $terminatingErrorOccurred = $True\r\n}\r\nif ($terminatingErrorOccurred)            { 'Terminating error occurred.' }\r\nelseif ($Error.Count -gt $errCountBefore) { 'Non-terminating error occurred.' }\r\n```\r\n\r\nThe above yields:\r\n\r\n```none\r\n/Users/jdoe/Desktop/pg/pg1.ps1 : Attempted to divide by zero.\r\n....\r\nTerminating error occurred.\r\n---\r\nGet-Item : Cannot find path '/NoSuch' because it does not exist.\r\n...\r\nNon-terminating error occurred.\r\n```\r\n\r\n\r\n",
      "created_at": "2017-07-19T02:45:59Z",
      "updated_at": "2017-09-07T16:05:21Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT: I want this for Functions per our discussion on `critical` vs `error` logs. \r\n\r\n/cc @TylerLeonhardt @daxian-dbw ",
      "created_at": "2019-03-13T19:10:13Z",
      "updated_at": "2019-03-13T19:10:13Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Dupe of https://github.com/PowerShell/PowerShell/issues/4781.  Yes, this one is older, but the latter has more discussion.",
      "created_at": "2019-03-15T17:51:31Z",
      "updated_at": "2019-03-15T17:51:49Z"
    }
  ],
  "created_at": "2017-02-16T00:35:26Z",
  "number": 3158,
  "state": "closed",
  "title": "Provide a way to distinguish between terminating error vs. non-terminating error",
  "updated_at": "2019-03-15T17:51:49Z"
}