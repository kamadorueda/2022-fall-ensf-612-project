{
  "_url": "https://github.com/PowerShell/PowerShell/issues/17936",
  "author": "sbj42",
  "body": "### Prerequisites\n\n- [X] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\n\n### Steps to reproduce\n\nWhen PowerShell runs a batch script which has `EXIT /B 1`, it generally sets `$LASTEXITCODE` to 1 and `$?` returns false.  But I found a case where it does not.  The follow batch script:\r\n```bat\r\n@ECHO OFF\r\n(\r\n    EXIT /B 1\r\n    echo unreachable\r\n)\r\n```\r\n\r\nReturns ERRORLEVEL 1 in `cmd`, but `$LASTEXITCODE` 0 in `pwsh`.  If `EXIT /B 1` is the last command in a code block, then it works as expected.  But if there are any commands after it then `$LASTEXITCODE` isn't set correctly.\r\n\n\n### Expected behavior\n\n```console\nPS> .\\test.bat\r\nPS> $?\r\nFalse\n```\n\n\n### Actual behavior\n\n```console\nPS> .\\test.bat\r\nPS> $?\r\nTrue\n```\n\n\n### Error details\n\n_No response_\n\n### Environment data\n\n```powershell\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.6\r\nPSEdition                      Core\r\nGitCommitId                    7.2.6\r\nOS                             Microsoft Windows 10.0.19044\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\n```\n\n\n### Visuals\n\n_No response_",
  "closed_at": "2022-08-24T00:01:14Z",
  "comments": [
    {
      "author": "kasini3000",
      "author_association": "NONE",
      "body": "1 The culprit is the \"brackets\" that cause multiple lines to execute together.\r\n2 You shouldn't write code like this.\r\n3 For $LASTEXITCODE, I personally think it is as expected.\r\n4 (exit 1 ; Write-Output 'aa' ) such powershell code will report an error, and $LASTEXITCODE = 0,\r\nFor bat, I think the same should be done.\r\nAt present, the step of reporting an error is missing.\r\n5 I am very interested, what do you think?",
      "created_at": "2022-08-19T18:49:42Z",
      "updated_at": "2022-08-19T18:49:42Z"
    },
    {
      "author": "sbj42",
      "author_association": "NONE",
      "body": "Regarding 1 and 2: Naturally the example I gave was not from a useful `.bat` script.  It was a simplification of a real-world script, which looks more like this:\r\n```bat\r\nREM some argument parsing before this\r\nIF [\"%ARG%\"] == [\"xyz\"] (\r\n    FOR %%T IN (dir1, dir2, dir3) DO (\r\n        (pushd %%T && CALL build.bat %REST% && popd) || EXIT /B 1\r\n    )\r\n    EXIT /B 0\r\n)\r\nREM some other cases after this\r\n```\r\n\r\nSo you see, in this case the `EXIT /B 1` is a way to exit the script early in case one of the loop iterations fails.  Even though there are no \"extra commands\" after that exit, it still returns `$LASTEXITCODE` 0.\r\n\r\nRegarding 3 and 4: Perhaps there is some reason why powershell returns exit code 0 from `(exit 1; Write-Output 'aa')`.  It seems surprising to me, since my understanding is that `exit 1` should set the exit code and also stop the script.  So I don't see why the presence of commands that aren't run would \"clear\" the exit code.  Maybe it would be worth mentioning in [the documentation](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_language_keywords?view=powershell-7.2&viewFallbackFrom=powershell-6#exit).\r\n",
      "created_at": "2022-08-20T04:43:41Z",
      "updated_at": "2022-08-20T04:43:41Z"
    },
    {
      "author": "scriptingstudio",
      "author_association": "NONE",
      "body": "Powershell returns exit code of cmd shell, not your script.\r\nSo your \"Actual behavior\" is correct.",
      "created_at": "2022-08-20T08:04:55Z",
      "updated_at": "2022-08-20T08:04:55Z"
    },
    {
      "author": "sbj42",
      "author_association": "NONE",
      "body": "@scriptingstudio after some testing I think I understand your comment, please tell me if I'm wrong:\r\n\r\nI think you're saying that PowerShell executes `cmd /c \".\\test.bat\"` (or something similar).  It then sets lastexitcode to the exit code the `cmd.exe` process.\r\n\r\nI tested in `cmd` and confirmed that while the command `test.bat` returns errorlevel 1, `cmd /c test.bat` returns errorlevel 0!  As described before that discrepancy happens only when there are additional commands in a code block after the `exit /b`.\r\n\r\nSo it seems the conclusion here is that if this is a bug, it is a bug in `cmd.exe` and not in PowerShell.",
      "created_at": "2022-08-20T14:00:41Z",
      "updated_at": "2022-08-20T14:00:41Z"
    },
    {
      "author": "sbj42",
      "author_association": "NONE",
      "body": "If desired, PowerShell could work around the bug by running something like `cmd /c \".\\test.bat && exit /b %errorlevel%\"`",
      "created_at": "2022-08-20T14:07:27Z",
      "updated_at": "2022-08-20T14:07:27Z"
    },
    {
      "author": "scriptingstudio",
      "author_association": "NONE",
      "body": "The doc states about `$lastexitcode`, `Contains the exit code of the last native program that was run.` The key word is `native`. In your case native program is `cmd.exe`.\r\nhttps://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_automatic_variables?view=powershell-7.2#lastexitcode\n\n<blockquote><img src=\"https://docs.microsoft.com/media/logos/logo-powershell-social.png\" width=\"48\" align=\"right\"><div><strong><a href=\"https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_automatic_variables\">about Automatic Variables - PowerShell</a></strong></div><div>Describes variables that store state information for PowerShell. These variables are created and maintained by PowerShell.</div></blockquote>",
      "created_at": "2022-08-20T14:09:20Z",
      "updated_at": "2022-08-20T14:09:23Z"
    },
    {
      "author": "237dmitry",
      "author_association": "NONE",
      "body": "> The key word is native. In your case native program is cmd.exe\r\n\r\nWhy then this batch returned errorlevel correctly?\r\n\r\n```\r\n@echo off\r\nexit /b 555\r\necho unreachable\r\n```",
      "created_at": "2022-08-20T15:35:53Z",
      "updated_at": "2022-08-20T15:44:50Z"
    },
    {
      "author": "scriptingstudio",
      "author_association": "NONE",
      "body": "> Why then this batch returned errorlevel correctly?\r\n\r\ndifferent scope\r\n``` cmd\r\nEXIT [/B] [exitCode]\r\n\r\n  /B          specifies to exit the current batch script instead of\r\n              CMD.EXE.  If executed from outside a batch script, it\r\n              will quit CMD.EXE\r\n\r\n  exitCode    specifies a numeric number.  if /B is specified, sets\r\n              ERRORLEVEL that number.  If quitting CMD.EXE, sets the process\r\n              exit code with that number.\r\n```",
      "created_at": "2022-08-20T16:24:03Z",
      "updated_at": "2022-08-20T16:24:03Z"
    },
    {
      "author": "237dmitry",
      "author_association": "NONE",
      "body": "> different scope\r\n\r\nIs this different scope?\r\n```\r\n@echo off\r\n(\r\n    echo reachable\r\n    exit /b 555\r\n)\r\n```\r\n",
      "created_at": "2022-08-20T16:42:41Z",
      "updated_at": "2022-08-20T16:42:41Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2022-08-24T00:01:13Z",
      "updated_at": "2022-08-24T00:01:13Z"
    }
  ],
  "created_at": "2022-08-19T17:10:04Z",
  "labels": [
    "Resolution-Answered"
  ],
  "number": 17936,
  "state": "closed",
  "title": "Batch script that returns ERRORLEVEL 1 in CMD returns $LASTEXITCODE 0 in PowerShell",
  "updated_at": "2022-08-24T00:01:14Z"
}