{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9395",
  "author": "msftrncs",
  "body": "trying to build the repository, I run in to an error.  I almost exclusively store files on UNC paths.  Why?  Guaranteed there is a bug out there to be squashed when it comes to UNC paths.\r\n\r\nRunning `Start-PSBootstrap` resulted in\r\n```None\r\nInstalling PowerShell build dependencies\r\nWARNING: Could not find 'dotnet', appending C:\\Users\\Carl\\AppData\\Local\\Microsoft\\dotnet to PATH.\r\nWARNING: Still could not find 'dotnet', restoring PATH.\r\ndotnet not present.  Installing dotnet.\r\nProcessing -File 'Microsoft.PowerShell.Core\\FileSystem::\\\\svr-2015-01\\User Documents\\Carl\\Git Repositories\\PowerShell\\tools\\dotnet-install.ps1' failed: The given path's format is not supported. Specify a valid path for the -File parameter.\r\nWindows PowerShell\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nTry the new cross-platform PowerShell https://aka.ms/pscore6\r\n\r\nExecution of { & $fullPSPath -NoLogo -NoProfile -File $fullDotnetInstallPath -Channel $Channel -Version $Version } by build.psm1: line 1541 failed with exit code -196608\r\nAt \\\\svr-2015-01\\User Documents\\Carl\\Git Repositories\\PowerShell\\build.psm1:2036 char:17\r\n+                 throw $errorMessage\r\n+                 ~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : OperationStopped: (Execution of { & $f\\u2026h exit code -196608:String) [], RuntimeException\r\n+ FullyQualifiedErrorId : Execution of { & $fullPSPath -NoLogo -NoProfile -File $fullDotnetInstallPath -Channel $Channel -Version $Version } by build.psm1: line 1541 failed with exit code -196608\r\n```\r\n\r\nPowerShell doesn't even support its own path syntax for its -file parameter.    This appears that this is just a problem with Windows PowerShell, which is being called to support the dotnet installer on Windows.  It looks like PowerShell core does not exhibit this issue.\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "It is not clear that you want - build PowerShell Core from UNC or report an language issue/bug? For first I think it make no sense to fix build scripts until we will really need this in development process. For second please make simple repo steps to demo a problem you want fix.",
      "created_at": "2019-04-18T10:05:02Z",
      "updated_at": "2019-04-18T10:05:02Z"
    },
    {
      "author": "msftrncs",
      "author_association": "CONTRIBUTOR",
      "body": "Step 1:  Attempt to build a fresh clone of PowerShell Core from a UNC path in a fresh environment.\r\n\r\nThe build process fails at this point:\r\nhttps://github.com/PowerShell/PowerShell/blob/9140e421eceeef9d92cf671cc6aaa0782ea343cd/build.psm1#L1541\r\n\r\nThe actual issue is that Windows PowerShell's FILE parameter does not accept 'provider path notation' and the UNC path when resolved by JOIN-PATH results in a PSPATH that contains the provider which is then sent to Windows PowerShell which fails. I am really surprised that more people do not use UNC paths, but I suppose even 'nix users utilize mount points (links) instead of UNC paths.\r\n\r\nI relocated the clone of the repository to a local drive, and let the install-dotnet script run there, but I suspect that the install-dotnet script would have worked in a UNC path, but didn't try it.  I could try it, and if it works, I think I could suggest a solution to the install-dotnet function that would allow for calling Windows PowerShell with the install-dotnet script path.\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/9140e421eceeef9d92cf671cc6aaa0782ea343cd/build.psm1#L1540\r\n\r\n`$fullDotnetInstallPath = (Join-Path -Path $pwd.Path -ChildPath $installScript) -replace '^[^:]*::', ''`\r\n",
      "created_at": "2019-04-18T19:28:37Z",
      "updated_at": "2019-04-18T19:28:37Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> the install-dotnet script would have worked in a UNC path\r\n\r\n@TravisEz13 Could you please comment this? Make sense to track/fix this?\r\n I still think it make no sense to fix build scripts until we will really need this in development process.",
      "created_at": "2019-04-19T03:47:54Z",
      "updated_at": "2019-04-19T03:48:53Z"
    },
    {
      "author": "msftrncs",
      "author_association": "CONTRIBUTOR",
      "body": "Alternately:\r\n\r\n`$fullDotnetInstallPath = Join-Path -Path $pwd.ProviderPath -ChildPath $installScript`",
      "created_at": "2019-04-19T04:17:35Z",
      "updated_at": "2019-04-19T04:17:35Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "I agree this is an issue with the script, but building from UNC would **not be officially supported** as it creates issues with debugging.  But on the other hand, most people don't run in the supported configuration.  We only check that if you go to create a package.\r\n",
      "created_at": "2019-04-22T18:30:34Z",
      "updated_at": "2019-04-22T18:30:34Z"
    }
  ],
  "created_at": "2019-04-18T05:02:58Z",
  "number": 9395,
  "state": "open",
  "title": "build failure with repository on UNC path.",
  "updated_at": "2019-04-23T03:23:32Z"
}