{
  "_url": "https://github.com/PowerShell/PowerShell/issues/8138",
  "author": "KevinMarquette",
  "body": "You can pipe a name to `Get-Module`. But if you specify the `ListAvailable` parameter, it will give a ParameterBindingException.\r\n\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\nPS> 'Microsoft.PowerShell.Utility' | Get-Module\r\nModuleType Version    Name                                ExportedCommands\r\n---------- -------    ----                                ----------------\r\nManifest   6.1.0.0    Microsoft.PowerShell.Utility        {Add-Member, Add-Type, Clear-Variable, Compare-Object...}\r\n\r\nPS> 'Microsoft.PowerShell.Utility' | Get-Module -ListAvailable\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\nIt should list all available module with that name.\r\n\r\n```none\r\nModuleType Version    Name                                ExportedCommands\r\n---------- -------    ----                                ----------------\r\nManifest   6.1.0.0    Microsoft.PowerShell.Utility        {Add-Member, Add-Type, Clear-Variable, Compare-Object...}\r\n```\r\n\r\nActual behavior\r\n---------------\r\nThis ParameterBindingException:\r\n\r\n```none\r\nGet-Module : Parameter set cannot be resolved using the specified named parameters. One or more parameters issued cannot be used together or an insufficient number of parameters were provided.\r\nAt line:1 char:34\r\n+ 'Microsoft.PowerShell.Utility' | Get-Module -ListAvailable\r\n+                                  ~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : InvalidArgument: (:) [Get-Module], ParameterBindingException\r\n+ FullyQualifiedErrorId : AmbiguousParameterSet,Microsoft.PowerShell.Commands.GetModuleCommand\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.1.0\r\nPSEdition                      Core\r\nGitCommitId                    6.1.0\r\nOS                             Microsoft Windows 10.0.17134\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "```powershell\r\nPS /Users/steve/repos/PowerShell> Trace-Command -Name ParameterBinding -Expression { ,\"psreadline\" | gmo -ListAvailable } -PSHost\r\nDEBUG: ParameterBinding Information: 0 : BIND NAMED cmd line args [Get-Module]\r\nDEBUG: ParameterBinding Information: 0 :     BIND arg [True] to parameter [ListAvailable]\r\nDEBUG: ParameterBinding Information: 0 :         COERCE arg to [System.Management.Automation.SwitchParameter]\r\nDEBUG: ParameterBinding Information: 0 :             Parameter and arg types the same, no coercion is needed.\r\nDEBUG: ParameterBinding Information: 0 :         BIND arg [True] to param [ListAvailable] SUCCESSFUL\r\nDEBUG: ParameterBinding Information: 0 : BIND POSITIONAL cmd line args [Get-Module]\r\nDEBUG: ParameterBinding Information: 0 : MANDATORY PARAMETER CHECK on cmdlet [Get-Module]\r\nDEBUG: ParameterBinding Information: 0 :     Remaining valid parameter set: Available\r\nDEBUG: ParameterBinding Information: 0 :     Remaining valid parameter set: PsSession\r\nDEBUG: ParameterBinding Information: 0 :     Remaining valid parameter set: CimSession\r\n```\r\n\r\nIt can't differentiate between the parametersets when in pipeline.  Seems like it should be doing the pipeline binding before the mandatory check. cc @BrucePay ",
      "created_at": "2018-10-29T00:03:03Z",
      "updated_at": "2018-10-29T00:20:52Z"
    }
  ],
  "created_at": "2018-10-28T21:46:26Z",
  "number": 8138,
  "state": "open",
  "title": "piping module name to Get-Module with -ListAvailable gives ParameterBindingException",
  "updated_at": "2018-10-29T00:20:52Z"
}