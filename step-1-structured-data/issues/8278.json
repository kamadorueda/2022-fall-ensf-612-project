{
  "_url": "https://github.com/PowerShell/PowerShell/issues/8278",
  "author": "najeebanwer",
  "body": "Steps to reproduce\r\n------------------\r\nUse \"Open Here\" context menu at root folder of drive, e.g. C:\\\r\n\r\nExpected behavior\r\n-----------------\r\nNo error message.\r\n\r\nActual behavior\r\n---------------\r\nShows the following error, although the correct folder is open in PowerShell:\r\n\r\n> PowerShell 6.1.1\r\n> Copyright (c) Microsoft Corporation. All rights reserved.\r\n> \r\n> https://aka.ms/pscore6-docs\r\n> Type 'help' to get help.\r\n> \r\n> Set-Location : Cannot find path 'C:\" ' because it does not exist.\r\n> + CategoryInfo          : ObjectNotFound: (C:\" :String) [Set-Location], ItemNotFoundException\r\n> + FullyQualifiedErrorId : PathNotFound,Microsoft.PowerShell.Commands.SetLocationCommand\r\n> \r\n> PS C:\\>\r\n\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\n\r\n```\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.1.1\r\nPSEdition                      Core\r\nGitCommitId                    6.1.1\r\nOS                             Microsoft Windows 10.0.17763\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n",
  "closed_at": "2018-11-19T19:12:41Z",
  "comments": [
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "@najeebanwer, \r\n\r\nCan you please be clearer on the \"Steps to reproduce\"?  How do you get to the \"Open Here\"?\r\nI got Windows 10 Insider version 18282 and I don't see a \"Open Here..\" in File Explorer script property.\r\n\r\nBut, of course I may be missing an Option to be set, and the information you provide can help understand how to get to the issue.\r\n\r\nGreatly Appreciated!\r\n",
      "created_at": "2018-11-15T14:49:12Z",
      "updated_at": "2018-11-15T14:49:36Z"
    },
    {
      "author": "najeebanwer",
      "author_association": "NONE",
      "body": "@MaximoTrinidad,\r\nThe \"Open here\" context menu is one of the options during PowerShell installation.\r\n\r\n![image](https://user-images.githubusercontent.com/34123660/48561088-d92a8580-e8b4-11e8-9ec5-6b1a7c362a09.png)\r\n",
      "created_at": "2018-11-15T15:02:07Z",
      "updated_at": "2018-11-15T15:02:07Z"
    },
    {
      "author": "najeebanwer",
      "author_association": "NONE",
      "body": "Closed issue by mistake...",
      "created_at": "2018-11-15T15:09:02Z",
      "updated_at": "2018-11-15T15:09:02Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "@najeebanwer \r\n\r\nYeap! There's an issue when select \"Open Here..\"  from the c:\\ Windows root.  It's happening in both PSCore 6.1.1 and Preview 6.2.0-preview.1.\r\n\r\n![pscore_openhere_issues_01_2018-11-15_10-25-07](https://user-images.githubusercontent.com/19892435/48563025-6f64a880-e8c1-11e8-9377-0a530de6e650.jpg)\r\n\r\n\r\n\r\n\r\n\r\n",
      "created_at": "2018-11-15T15:30:20Z",
      "updated_at": "2018-11-15T15:30:20Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I think I see the problem.  Running this from cmd.exe is a simpler repro:\r\n\r\n```\r\npwsh -noexit -workingdirectory \"c:\\\"\r\n```\r\n\r\nThe backslash is treated as an escape character so powershell receives `c:\"`.  Not sure yet how to fix.",
      "created_at": "2018-11-15T23:26:24Z",
      "updated_at": "2018-11-15T23:26:24Z"
    },
    {
      "author": "najeebanwer",
      "author_association": "NONE",
      "body": "Maybe backslash in a quoted string should be treated as a literal and not an escape character?",
      "created_at": "2018-11-15T23:53:46Z",
      "updated_at": "2018-11-15T23:53:46Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "This isn't fundamentally something PowerShell has control over, though; it's an issue with the command call itself being parsed in Windows and how it's being handed to PowerShell, it would seem?",
      "created_at": "2018-11-16T00:03:46Z",
      "updated_at": "2018-11-16T00:03:46Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@vexx32 is correct, by the time .Net gets the arg, it's `c:\"`.  We don't get the raw input as it's been unescaped by Win32 apis.  All potential solutions I can think of are hacky, so maybe just special case this where `<driveletter>:\"` is received, transform to `<driveletter>:\\`.  Note that in general, the outer shell is expected to perform proper escaping, so this should be:\r\n\r\n```\r\npwsh -noexit -workingdirectory \"c:\\\\\"\r\n```\r\n\r\nand if you try that in cmd.exe, it works fine.  However, in the case of the `Open Here` menu, we don't have that option.",
      "created_at": "2018-11-16T00:31:35Z",
      "updated_at": "2018-11-16T00:32:45Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Alternative proposal, we add a new parameter that handles this case since `\"c:\\program files\\\"` would similarly fail because according to [Microsoft cpp command line parsing](https://docs.microsoft.com/en-us/cpp/cpp/parsing-cpp-command-line-arguments?view=vs-2017) a backslash preceding a double quote is a double quote otherwise it's literal.  So we can have something like: `-TrailingQuoteAsBackSlash` as a hidden switch to `pwsh` that will automatically convert a trailing quote to a single backslash.  The normal path of using `-WorkingDirectory` won't change and normal rules apply where the outer shell must escape correctly before passing to PowerShell.",
      "created_at": "2018-11-16T01:06:31Z",
      "updated_at": "2018-11-16T01:06:31Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "Just as a remark, this scenario actually used to work in the original implementation that I did where I was using `pwsh.exe -NoExit -Command Set-Location -LiteralPath '%V'`, I changed this later in PR [6660](https://github.com/PowerShell/PowerShell/pull/6660/files) to use the `-WorkingDirectory` parameter as the initial implementation could not deal with single quotes",
      "created_at": "2018-11-16T22:17:02Z",
      "updated_at": "2018-11-16T22:17:02Z"
    },
    {
      "author": "najeebanwer",
      "author_association": "NONE",
      "body": "On PowerShell-6.2.0-preview.3-win-x64, this works partially.\r\nThe \"Open here as Administrator\" context menu item has the \"-RemoveWorkingDirectoryTrailingCharacter\" argument and that works.\r\nThe \"Open here\" context menu item does not have this argument. Or maybe it was in the duplicate \"Open here\" item in the Registry that I deleted?",
      "created_at": "2018-12-11T06:43:46Z",
      "updated_at": "2018-12-11T06:43:46Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@najeebanwer you probably deleted the wrong duplicate.  I would suggest removing the other one and doing a repair with the MSI.",
      "created_at": "2018-12-18T03:33:02Z",
      "updated_at": "2018-12-18T03:33:02Z"
    }
  ],
  "created_at": "2018-11-15T14:25:25Z",
  "number": 8278,
  "state": "closed",
  "title": "PowerShell 6.1.1 - Context Menu \"Open Here\" gives error when path is root of drive",
  "updated_at": "2019-02-15T12:03:39Z"
}