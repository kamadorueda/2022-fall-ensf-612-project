{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5774",
  "author": "bergmeister",
  "body": "## PR Summary\r\nA new dialogue is added in the Windows installer to offer the option of adding explorer.exe context menus to open PowerShell in the current location as a normal shell or as administrator. The context menu entries are achiveven via registry entries and is available when right-clicking on:\r\n\r\n- the background of explorer\r\n- a folder in explorer\r\n- a drive in explorer\r\n- on the Desktop\r\n\r\nAdding the new custom dialog required copy-pasting the WiX source code of [WixUI_InstallDir.wxs](https://github.com/wixtoolset/wix3/blob/7c8457fa3802858add8981b92996e19574e762da/src/ext/UIExtension/wixlib/WixUI_InstallDir.wxs) as a base as described in the official WiX documentation [here](http://wixtoolset.org/documentation/manual/v3/wixui/wixui_customizations.html).\r\nThe registry entries are quite standard but the approach for the context menu of opening PowerShell as an Administrator must be discussed:\r\nThe Windows registry has the limitation that it only offers a `runas/command` structure but not a `runas/proogram/command` structure, which means there can only be one main context entry to open PowerShell as an Admin. Since a user might have alerady configured this context menu, I decided that it is best to not stomp over it but rather open PowerShell normally but then elevate it. This of course has the disadvantage that it takes a bit longer and a window is visible for a brief moment. The only alternative that would allow to launch PowerShell elevated the first time is to have the 2 context menu in a submenu, see [here](https://blogs.msdn.microsoft.com/andrew_richards/2017/03/01/enhancing-the-open-command-prompt-here-shift-right-click-context-menu-experience/)\r\nThe registry keys contain the PowerShell version to cater for side by side installations of future versions.\r\nSome stuff had to be created in a WiX fragment, which means that this XML section could be factored out into its own file (with the disadvantage of having to linkt this file then into the compilation process of candle,, light, etc.)\r\nThe best person to review is probably @SteveL-MSFT \r\n\r\nThis is how it currently looks like: \r\nInstaller: \r\n![image](https://user-images.githubusercontent.com/9250262/34503331-9bc821dc-f00f-11e7-9b77-aaf8d5753fdd.png)\r\nExplorer context menu:\r\n![image](https://user-images.githubusercontent.com/9250262/34503294-71dc1996-f00f-11e7-86b2-60a5822e694e.png)\r\n\r\n\r\n\r\n## PR Checklist\r\n\r\nNote: Please mark anything not applicable to this PR `NA`.\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - [x] Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [?] User facing [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission) Maybe document the WiX parameter to enable users to use this feature as well when installing quietly?\r\n    - [x] Issue filed - Issue link: https://github.com/PowerShell/PowerShell/issues/5012\r\n- [x] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [NA] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting) A test for this would require a UI automation framework like Ranorex or Selenium.\r\n    - [NA] [Add `[feature]` if the change is significant or affectes feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` to the beginning of the title and remove the prefix when the PR is ready.\r\n\r\n  ",
  "closed_at": "2018-01-05T17:53:20Z",
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@bergmeister Thanks for doing this.  I think I prefer the submenu to starting a process to start elevated PowerShell.  cc @joeyaiello ",
      "created_at": "2018-01-03T00:42:07Z",
      "updated_at": "2018-01-03T00:42:07Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "Ok. Any preference on the naming of the menu? I am thinking of `PowerShell X.Y.Z` for the menu and then `Open here` and `Open here as Administrator` here for the 2 submenus.\r\n  ",
      "created_at": "2018-01-03T07:48:51Z",
      "updated_at": "2018-01-03T07:50:59Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT I changed it to use submenus to properly elevate it. This is how it looks now (the logic whether the submenu pops out on the left or right hand side is handled by Windows depending on where one right-clicks):\r\n![image](https://user-images.githubusercontent.com/9250262/34543529-3ed9210e-f0d9-11e7-8e1d-a83bc7211b08.png)",
      "created_at": "2018-01-03T22:38:42Z",
      "updated_at": "2018-01-04T00:47:33Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "NB: I also tweaked the tabbing index on the new installer page to be consistent with other WiX dialogues and to be able to use the spacebar to toggle the checkbox. Additionally, the context menus also have accessibility shortcuts now, which means that the top context menu can be selected using the `P` key (or pressing it multiple times if other menus also have the same key configured) and `H` or `A` for the submenus (the latter is the Admin shell). I am done now and the PR can be reviewed again.\r\n  ",
      "created_at": "2018-01-03T23:34:28Z",
      "updated_at": "2018-01-03T23:36:18Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks. Do you think we should document the new property `EXPLORER_CONTEXT_MENU_OPENPOWERSHELL` for people who want to install the MSI quietly (`/q` option of `msiexec.exe`) to allow them to use this new feature as well?\r\n  ",
      "created_at": "2018-01-04T06:13:39Z",
      "updated_at": "2018-01-04T06:37:29Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@bergmeister yes, we should document it.  However, since this msi is new, we don't have an existing doc to put it.  @sdwheeler can you suggest how we should document the property that can be passed to the msi installer for non-interactive (quiet) installs?",
      "created_at": "2018-01-04T06:35:48Z",
      "updated_at": "2018-01-04T06:35:48Z"
    },
    {
      "author": "sdwheeler",
      "author_association": "COLLABORATOR",
      "body": "@bergmeister @SteveL-MSFT Please create an issue for this in the PowerShell-Docs repo. It should probably be assigned to @joeyaiello. He is working on the V6 setup docs. Joey and I can work out how and where this should be documented. Also include all possible MSI properties that could be used so we can be complete.\r\n  ",
      "created_at": "2018-01-04T15:51:29Z",
      "updated_at": "2018-01-04T15:51:56Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Created https://github.com/PowerShell/PowerShell-Docs/issues/2007",
      "created_at": "2018-01-04T16:57:53Z",
      "updated_at": "2018-01-04T16:57:53Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "@sdwheeler The new property is the only one as far as I am aware. But I thought that this would go only into 6.1 or this a candidate for merge to the release branch @SteveL-MSFT  ?",
      "created_at": "2018-01-04T16:59:15Z",
      "updated_at": "2018-01-04T16:59:15Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@bergmeister this is planned for 6.1",
      "created_at": "2018-01-04T17:59:44Z",
      "updated_at": "2018-01-04T17:59:44Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Currently we have a nuget package to set `PSModulePath` with Windows PowerShell module paths. It is not obvious. My request (for follow PR) is to add the option to the installer too.",
      "created_at": "2018-01-05T10:16:34Z",
      "updated_at": "2018-01-05T10:16:34Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": ">Do you think we should document the new property EXPLORER_CONTEXT_MENU_OPENPOWERSHELL \r\n\r\nMaybe `ADD_EXPLORER_CONTEXT_MENU_OPENPOWERSHELL`.",
      "created_at": "2018-01-05T11:26:57Z",
      "updated_at": "2018-01-05T11:26:57Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov I applied your renaming suggestion. Please open an issue about your `PSModulePath` request with more details in it, I would be happy to help you by doing the UI/WiX bit of it in case you haven't worked much with WiX much yet.",
      "created_at": "2018-01-05T12:46:48Z",
      "updated_at": "2018-01-05T12:46:48Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@bergmeister Thanks!\r\nI'll open a Issue about `PSModulePath` if @SteveL-MSFT approve.",
      "created_at": "2018-01-05T17:40:20Z",
      "updated_at": "2018-01-05T17:40:20Z"
    }
  ],
  "created_at": "2018-01-02T22:54:18Z",
  "number": 5774,
  "state": "closed",
  "title": "Add option to add explorer context menu in Windows installer",
  "updated_at": "2020-03-06T16:10:23Z"
}