{
  "_url": "https://github.com/PowerShell/PowerShell/issues/8974",
  "author": "unnamedcrewman",
  "body": "UPDATE:  Solved; non-issue\r\n\r\nIn my Powershell profile, I'm trying do a quick check for the existence of a specific drive/folder, and then use `Set-Location` to change my working directory based on the result.  I'm using the exact same profile for Powershell 5.1 and 6, but I'm getting different, and somewhat unexpected results in Powershell 6. \r\n\r\nThe entire profile is:\r\n\r\n    Write-Host \"Testing for D:\\ ...\"\r\n\r\n    if (Test-Path D:)\r\n    {\r\n        Write-Host \"D: is alive and well\"\r\n        Write-Host \"Switching to D:\\ ...\"\r\n        Set-Location -Path D:\\\r\n    }\r\n\r\n    $dir = Get-Location\r\n\r\n    Write-Host \"Current directory is: \"$dir\r\n\r\nThe Results I get for 5.1 are:\r\n\r\n    Windows PowerShell\r\n    Copyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n    Testing for D:\\ ...\r\n    D: is alive and well\r\n    Switching to D:\\ ...\r\n    Current directory is:  D:\\\r\n    PS D:\\>                     <=====(I expected the D:\\ here)\r\n\r\nThe results I get from 6 are:\r\n\r\n    PowerShell 6.1.3\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n\r\n    https://aka.ms/pscore6-docs\r\n    Type 'help' to get help.\r\n\r\n    Testing for D:\\ ...\r\n    D: is alive and well\r\n    Switching to D:\\ ...\r\n    Current directory is:  D:\\\r\n    PS C:\\Users\\bleep>          <===== (I expected D:\\ here instead of C:\\Users\\bleep)\r\n\r\nI've read some stuff about `Set-Location`, and I get the hint that it maybe not as intuitive as it as I was expecting (i.e. differences between CWD and process directory), but I've not found enough to help me understand if that relates to the issue here, or if there is a \"solution\".\r\n\r\nI have two basic questions:\r\n\r\n- Is this expected behavior?\r\n- If it is expected, is there a way to achieve the 5.1 result (a prompt in the D:\\ drive)  via a profile script for Core 6?\r\n\r\nNB. I know that there are a number of ways to set the starting directory(commandline switch; modified windows shortcut, etc.), but at this point I'm specifically interested in the possibility of doing it through a startup script.\r\n",
  "closed_at": "2019-03-01T06:51:42Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Can you repo without PSReadline?",
      "created_at": "2019-02-27T05:32:10Z",
      "updated_at": "2019-02-27T05:32:10Z"
    },
    {
      "author": "unnamedcrewman",
      "author_association": "NONE",
      "body": "I still get the same behavior without PSReadline.\r\n\r\nI tested with PSReadline disabled two ways: \r\n\r\n- Adding `Remove-Module -Name PSReadline` as the first line of the profile.\r\n- By deleting the PSReadline folder from `C:\\Program Files\\PowerShell\\6\\Modules` folder.\r\n",
      "created_at": "2019-02-27T10:18:21Z",
      "updated_at": "2019-02-27T10:18:21Z"
    },
    {
      "author": "unnamedcrewman",
      "author_association": "NONE",
      "body": "Well, I'm a bit of an idiot.  I'm just starting out trying to learn/use the console a bit more, and I've always started PowerShell from the start menu using the shortcut there.  In poking around on some other stuff, I just realized that `-WorkingDirectory ~`  is baked into the Start menu shortcut that gets setup on installation.  Removing the working directory requirement solves my problem.\r\n\r\nSorry for the fuss.\r\n",
      "created_at": "2019-03-01T06:51:42Z",
      "updated_at": "2019-03-01T06:51:42Z"
    }
  ],
  "created_at": "2019-02-25T12:53:39Z",
  "labels": [
    "Issue-Question",
    "Resolution-Answered"
  ],
  "number": 8974,
  "state": "closed",
  "title": "Unexpected problems with Set-Location in user profile.",
  "updated_at": "2019-03-01T12:03:52Z"
}