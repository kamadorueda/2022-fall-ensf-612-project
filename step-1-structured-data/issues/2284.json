{
  "_url": "https://github.com/PowerShell/PowerShell/issues/2284",
  "author": "concentrateddon",
  "body": "What's the correct way to reference System.Management.Automation? E.g., this snippet from project.json:\n\n```\n  \"dependencies\": {\n    \"Microsoft.NETCore.App\": {\n      \"version\": \"1.0.0\",\n      \"type\": \"platform\"\n    },\n    \"Microsoft.AspNetCore.Diagnostics\": \"1.0.0\",\n    \"Microsoft.AspNetCore.Server.IISIntegration\": \"1.0.0\",\n    \"Microsoft.AspNetCore.Server.Kestrel\": \"1.0.0\",\n    \"Microsoft.Extensions.Logging.Console\": \"1.0.0\",\n    \"Microsoft.Extensions.Configuration.EnvironmentVariables\": \"1.0.0\",\n    \"Microsoft.Extensions.Configuration.FileExtensions\": \"1.0.0\",\n    \"Microsoft.Extensions.Configuration.Json\": \"1.0.0\",\n    \"Microsoft.Extensions.Configuration.CommandLine\": \"1.0.0\",\n    \"Microsoft.AspNetCore.Routing\": \"1.0.0\",\n    \"System.Security.Cryptography.Algorithms\": \"4.2.0\",\n    \"System.Management.Automation\": \"6.1.7601.17514\"\n  },\n```\n\nWorks when you run **dotnet restore** in that it finds and claims to install the System.Management.Automation dependency (noting that .17515 isn't compatible with .NET Core). But you can't simply add a **using** in the code, or it says:\n\n```\nThe type or namespace name 'Management' does not exist in the namespace 'System'\n```\n\nThe intent here is to programmatically instantiate PowerShell in the code, but .NET Core is a bit restrictive in how it wants references handled...\n",
  "closed_at": "2016-09-16T18:24:57Z",
  "comments": [
    {
      "author": "mirichmo",
      "author_association": "MEMBER",
      "body": "This is a known issue for NuGet that we are trying to resolve. There are a number of rogue System.Management.Automation packages that external people have posted. Those packages are all \"FullCLR\" assemblies and are not compatible with PowerShell Core.\n\nThe current way to consume the PowerShell Core version of System.Management.Automation is to copy the technique used by this project. Our [nuget.config](https://github.com/PowerShell/PowerShell/blob/master/nuget.config) file points to the correct version that is posted to MyGet. [powershell-win-core\\project.json](https://github.com/PowerShell/PowerShell/blob/master/src/powershell-win-core/project.json) shows how to consume it within your project.json.\n",
      "created_at": "2016-09-16T17:10:15Z",
      "updated_at": "2016-09-16T17:10:15Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "Hi Don.\n\nThere are few things about `dotnet` cli that may help you sort it out.\n- If you don't specify nuget feeds explicitly with `nuget.config` it will use https://www.nuget.org\n  PowerShell Team didn't published SMA there, but somebody did a long time ago (as @mirichmo said) https://www.nuget.org/packages?q=System.Management.Automation\n- You current setup consumes this package from nuget. You can make it consume your local SMA copy from GAC, if you build for FullCLR, but you would need to include reference under `frameworks / net451 / frameworkAssemblies`, like here https://github.com/PowerShell/PowerShell/blob/dd2394b1e6088f6c82054f5cae5520e532010fd4/src/System.Management.Automation/project.json#L188\n- There are different `dependencies` sections in `project.json`: globabl and framework specific. You should use them appropriately.\n- CoreCLR version of SMA will require additional massage on Initialization to register ALC (AssemblyLoadContext). For example, check our c# test runner: https://github.com/PowerShell/PowerShell/blob/master/test/csharp/fixture_AssemblyLoadContext.cs\n",
      "created_at": "2016-09-16T18:23:58Z",
      "updated_at": "2016-09-16T18:23:58Z"
    },
    {
      "author": "concentrateddon",
      "author_association": "NONE",
      "body": "Perfect.\n",
      "created_at": "2016-09-16T18:24:57Z",
      "updated_at": "2016-09-16T18:24:57Z"
    }
  ],
  "created_at": "2016-09-16T14:16:01Z",
  "labels": [
    "Issue-Question",
    "Area-Maintainers-Build"
  ],
  "number": 2284,
  "state": "closed",
  "title": "Referencing System.Management.Automation in .NET Core / VS Code",
  "updated_at": "2016-09-16T18:24:57Z"
}