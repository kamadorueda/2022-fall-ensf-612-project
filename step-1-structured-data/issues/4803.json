{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4803",
  "author": "markekraus",
  "body": "Note: The test case `@{name = 'badstarttype'; parameter = \"StartupType\"; value = \"System\"}` from `test\\powershell\\Modules\\Microsoft.PowerShell.Management\\Set-Service.Tests.ps1` failed in daily test run due to this issue, so it's disabled for now. Please re-enable the test when fixing this issue.\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\nNew-Service -StartupType System -Name badstarttype -BinaryPathName \"$PSHOME\\powershell.exe\" -ErrorAction Stop\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\nShould throw \r\n\r\n```none\r\nCouldNotNewService,Microsoft.PowerShell.Commands.NewServiceCommand\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\nCreates Service when run on release build\r\n\r\n```none\r\nName                : badstarttype\r\nRequiredServices    :\r\nCanPauseAndContinue : False\r\nCanShutdown         : False\r\nCanStop             : False\r\nDisplayName         : badstarttype\r\nDependentServices   : {}\r\nMachineName         : .\r\nServiceName         : badstarttype\r\nServicesDependedOn  :\r\nStartType           :\r\nServiceHandle       : Microsoft.Win32.SafeHandles.SafeServiceHandle\r\nStatus              : Stopped\r\nServiceType         : Win32OwnProcess\r\n```\r\n\r\nFails Fast on debug build:\r\n\r\n```none\r\nFailFast: bad StartupType\r\n\r\n   at System.Diagnostics.Debug.Assert(Boolean condition, String message, String detailMessage)\r\n   at System.Management.Automation.Diagnostics.Assert(Boolean condition, String whyThisShouldNeverHappen, String detailMessage) in C:\\github\\PowerShell\\src\\System.Management.Automation\\utils\\assert.cs:line 196\r\n   at System.Management.Automation.Diagnostics.Assert(Boolean condition, String whyThisShouldNeverHappen) in C:\\github\\PowerShell\\src\\System.Management.Automation\\utils\\assert.cs:line 131\r\n   at Microsoft.PowerShell.Commands.NewServiceCommand.BeginProcessing() in C:\\github\\PowerShell\\src\\Microsoft.PowerShell.Commands.Management\\commands\\management\\Service.cs:line 2018\r\n   at System.Management.Automation.Cmdlet.DoBeginProcessing() in C:\\github\\PowerShell\\src\\System.Management.Automation\\engine\\cmdlet.cs:line 164\r\n   at System.Management.Automation.CommandProcessorBase.DoBegin() in C:\\github\\PowerShell\\src\\System.Management.Automation\\engine\\CommandProcessorBase.cs:line 500\r\n   at System.Management.Automation.CommandProcessor.DoBegin() in C:\\github\\PowerShell\\src\\System.Management.Automation\\engine\\CommandProcessor.cs:line 272\r\n   at System.Management.Automation.Internal.PipelineProcessor.Start(Boolean incomingStream) in C:\\github\\PowerShell\\src\\System.Management.Automation\\engine\\pipeline.cs:line 1050\r\n   at System.Management.Automation.Internal.PipelineProcessor.SynchronousExecuteEnumerate(Object input) in C:\\github\\PowerShell\\src\\System.Management.Automation\\engine\\pipeline.cs:line 489\r\n   at System.Management.Automation.PipelineOps.InvokePipeline(Object input, Boolean ignoreInput, CommandParameterInternal[][] pipeElements, CommandBaseAst[] pipeElementAsts, CommandRedirection[][] commandRedirections, FunctionContext funcContext) in C:\\github\\PowerShell\\src\\System.Management.Automation\\engine\\runtime\\Operations\\MiscOps.cs:line 455\r\n   at System.Management.Automation.Interpreter.ActionCallInstruction`6.Run(InterpretedFrame frame) in C:\\github\\PowerShell\\src\\System.Management.Automation\\engine\\interpreter\\CallInstruction.Generated.cs:line 569\r\n   at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.Run(InterpretedFrame frame) in C:\\github\\PowerShell\\src\\System.Management.Automation\\engine\\interpreter\\ControlFlowInstructions.cs:line 356\r\n   at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.Run(InterpretedFrame frame) in C:\\github\\PowerShell\\src\\System.Management.Automation\\engine\\interpreter\\ControlFlowInstructions.cs:line 356\r\n   at System.Management.Automation.Interpreter.Interpreter.Run(InterpretedFrame frame) in C:\\github\\PowerShell\\src\\System.Management.Automation\\engine\\interpreter\\Interpreter.cs:line 111\r\n   at System.Management.Automation.Interpreter.LightLambda.RunVoid1[T0](T0 arg0) in C:\\github\\PowerShell\\src\\System.Management.Automation\\engine\\interpreter\\LightLambda.Generated.cs:line 78\r\n   at System.Management.Automation.DlrScriptCommandProcessor.RunClause(Action`1 clause, Object dollarUnderbar, Object inputToProcess) in C:\\github\\PowerShell\\src\\System.Management.Automation\\engine\\ScriptCommandProcessor.cs:line 516\r\n   at System.Management.Automation.DlrScriptCommandProcessor.Complete() in C:\\github\\PowerShell\\src\\System.Management.Automation\\engine\\ScriptCommandProcessor.cs:line 417\r\n   at System.Management.Automation.CommandProcessorBase.DoComplete() in C:\\github\\PowerShell\\src\\System.Management.Automation\\engine\\CommandProcessorBase.cs:line 614\r\n   at System.Management.Automation.Internal.PipelineProcessor.DoCompleteCore(CommandProcessorBase commandRequestingUpstreamCommandsToStop) in C:\\github\\PowerShell\\src\\System.Management.Automation\\engine\\pipeline.cs:line 607\r\n   at System.Management.Automation.Internal.PipelineProcessor.SynchronousExecuteEnumerate(Object input) in C:\\github\\PowerShell\\src\\System.Management.Automation\\engine\\pipeline.cs:line 519\r\n   at System.Management.Automation.Runspaces.LocalPipeline.InvokeHelper() in C:\\github\\PowerShell\\src\\System.Management.Automation\\engine\\hostifaces\\LocalPipeline.cs:line 426\r\n   at System.Management.Automation.Runspaces.LocalPipeline.InvokeThreadProc() in C:\\github\\PowerShell\\src\\System.Management.Automation\\engine\\hostifaces\\LocalPipeline.cs:line 622\r\n   at System.Threading.Thread.ThreadMain_ThreadStart()\r\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n\r\n   at System.Environment.FailFast(System.String, System.Exception)\r\n   at System.Management.Automation.Diagnostics.Assert(Boolean, System.String, System.String)\r\n   at System.Management.Automation.Diagnostics.Assert(Boolean, System.String)\r\n   at Microsoft.PowerShell.Commands.NewServiceCommand.BeginProcessing()\r\n   at System.Management.Automation.Cmdlet.DoBeginProcessing()\r\n   at System.Management.Automation.CommandProcessorBase.DoBegin()\r\n   at System.Management.Automation.CommandProcessor.DoBegin()\r\n   at System.Management.Automation.Internal.PipelineProcessor.Start(Boolean)\r\n   at System.Management.Automation.Internal.PipelineProcessor.SynchronousExecuteEnumerate(System.Object)\r\n   at System.Management.Automation.PipelineOps.InvokePipeline(System.Object, Boolean, System.Management.Automation.CommandParameterInternal[][], System.Management.Automation.Language.CommandBaseAst[], System.Management.Automation.CommandRedirection[][], System.Management.Automation.Language.FunctionContext)\r\n   at System.Management.Automation.Interpreter.ActionCallInstruction`6[[System.__Canon, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.__Canon, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.__Canon, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.__Canon, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.__Canon, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].Run(System.Management.Automation.Interpreter.InterpretedFrame)\r\n   at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.Run(System.Management.Automation.Interpreter.InterpretedFrame)\r\n   at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.Run(System.Management.Automation.Interpreter.InterpretedFrame)\r\n   at System.Management.Automation.Interpreter.Interpreter.Run(System.Management.Automation.Interpreter.InterpretedFrame)\r\n   at System.Management.Automation.Interpreter.LightLambda.RunVoid1[[System.__Canon, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]](System.__Canon)\r\n   at System.Management.Automation.DlrScriptCommandProcessor.RunClause(System.Action`1<System.Management.Automation.Language.FunctionContext>, System.Object, System.Object)\r\n   at System.Management.Automation.DlrScriptCommandProcessor.Complete()\r\n   at System.Management.Automation.CommandProcessorBase.DoComplete()\r\n   at System.Management.Automation.Internal.PipelineProcessor.DoCompleteCore(System.Management.Automation.CommandProcessorBase)\r\n   at System.Management.Automation.Internal.PipelineProcessor.SynchronousExecuteEnumerate(System.Object)\r\n   at System.Management.Automation.Runspaces.LocalPipeline.InvokeHelper()\r\n   at System.Management.Automation.Runspaces.LocalPipeline.InvokeThreadProc()\r\n   at System.Threading.Thread.ThreadMain_ThreadStart()\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n```powershell\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.0-beta\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.0-beta.6-43-g2761c3ff210caf7a9c18968c03c18c6921046251\r\nOS                             Microsoft Windows 10.0.15063\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n```\r\n\r\nRef #4785 ([comment](https://github.com/PowerShell/PowerShell/pull/4785#discussion_r137960812))",
  "closed_at": "2017-09-15T08:24:41Z",
  "comments": [
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov  I think this is mislabeled. Shouldn't it be `Area-Cmdlets-Management` ?",
      "created_at": "2017-09-11T13:07:21Z",
      "updated_at": "2017-09-11T13:07:21Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@markekraus Thanks! Fixed.",
      "created_at": "2017-09-11T13:56:45Z",
      "updated_at": "2017-09-11T13:56:45Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "When I was doing code coverage analysis and wrote the test, I assumed an error condition.  But the [code](https://github.com/PowerShell/PowerShell/blob/master/src/Microsoft.PowerShell.Commands.Management/commands/management/Service.cs#L2017) actually ignores any unsupported types and sets it to Auto by default.  Seems like it should fail rather than silently set it to some default.",
      "created_at": "2017-09-11T21:36:49Z",
      "updated_at": "2017-09-11T21:36:49Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "We should throw for `Boot` too. And for both New-Service and Set-Service.\r\nOr maybe enable this with `-Force`?",
      "created_at": "2017-09-12T04:55:38Z",
      "updated_at": "2017-09-12T04:56:35Z"
    }
  ],
  "created_at": "2017-09-10T22:05:20Z",
  "labels": [
    "Issue-Bug",
    "Resolution-Fixed",
    "WG-Cmdlets-Management"
  ],
  "number": 4803,
  "state": "closed",
  "title": "New-Service Should Throw on System StartupType",
  "updated_at": "2017-09-26T08:13:01Z"
}