{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13788",
  "author": "AurimasNav",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 and PowerShell 7+ issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6).\r\n\r\n-->\r\n\r\n## Steps to reproduce\r\n\r\n```powershell\r\n>\"{'key':'value',}\" | ConvertFrom-Json\r\n```\r\n\r\n## Expected behavior\r\n\r\nexpecting pwsh to throw an exception just like powershell 5.1\r\n```powershell\r\nConvertFrom-Json : Invalid JSON primitive: .\r\nAt line:1 char:22\r\n+ \"{'key':'value',}\" | ConvertFrom-Json\r\n+                      ~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : NotSpecified: (:) [ConvertFrom-Json], ArgumentException\r\n    + FullyQualifiedErrorId : System.ArgumentException,Microsoft.PowerShell.Commands.ConvertFromJsonCommand\r\n```\r\n\r\n## Actual behavior\r\n\r\n```powershell\r\n>\"{'key':'value',}\" | ConvertFrom-Json\r\n\r\nkey\r\n---\r\nvalue\r\n```\r\n\r\n## Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.3\r\nPSEdition                      Core\r\nGitCommitId                    7.0.3\r\nOS                             Microsoft Windows 10.0.18363\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\nI would expect pwsh 7 to throw in this case just like powershell 5.1 does, in a case where I need to pass this json string down to some other tool I can't validate it using pwsh which I was able to do with powershell 5.1, I've laso tried ```Test-Json``` which behaves consistently:\r\n```powershell\r\n> \"{'key':'value',}\" | Test-Json\r\nTrue\r\n```",
  "closed_at": "2020-10-27T05:00:08Z",
  "comments": [
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "This is probably due to Newtonsoft.Json being tolerant and not being configured to reject input like this. If we've been permissive like this, it's possible someone now depends on it, but changing it would strike me as a bucket 3 breaking change",
      "created_at": "2020-10-15T17:05:54Z",
      "updated_at": "2020-10-15T17:05:54Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "We will consider this during migration to the new .Net JSON API.\r\n",
      "created_at": "2020-10-16T05:07:30Z",
      "updated_at": "2020-10-16T05:07:30Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "> We will consider this during migration to the new .Net JSON API.\r\n\r\nYeah this is the kind of change that would occur with that migration. In this case I think it's acceptable. Although perhaps in the case of something like comments in the JSON or trailing commas, we might have compatibility issues that we need to investigate.",
      "created_at": "2020-10-16T16:59:22Z",
      "updated_at": "2020-10-16T16:59:22Z"
    },
    {
      "author": "BrucePay",
      "author_association": "COLLABORATOR",
      "body": "Maybe we should add a '-Strict' flag.",
      "created_at": "2020-10-16T19:11:04Z",
      "updated_at": "2020-10-16T19:11:04Z"
    },
    {
      "author": "Serg046",
      "author_association": "NONE",
      "body": "Duplicate of https://github.com/PowerShell/PowerShell/issues/11117.\r\nNewtonsoft.Json doesn't support trailing comma validation. If we need this, we will have to write a custom [JsonTextReader](https://github.com/JamesNK/Newtonsoft.Json/issues/818#issuecomment-452131435).\r\n",
      "created_at": "2020-10-23T21:18:57Z",
      "updated_at": "2020-10-24T01:05:38Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Dup #10628",
      "created_at": "2020-10-26T04:21:22Z",
      "updated_at": "2020-10-26T04:21:22Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as duplicate and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2020-10-27T05:00:07Z",
      "updated_at": "2020-10-27T05:00:07Z"
    }
  ],
  "created_at": "2020-10-15T17:02:32Z",
  "labels": [
    "Resolution-Duplicate",
    "Issue-Enhancement",
    "WG-Cmdlets-Utility"
  ],
  "number": 13788,
  "state": "closed",
  "title": "ConvertFrom-Json tolerates non-standard JSON -- consider a -Strict flag",
  "updated_at": "2020-10-27T05:00:08Z"
}