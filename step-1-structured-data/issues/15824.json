{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15824",
  "author": "adityapatwardhan",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nEnable the `PublishReadyToRunComposite` switch in PowerShellCommon.props file which enables generating a single file `pwsh.r2r.dll` which has all the ready2run code. It keeps the original assemblies as IL.\r\n\r\n## PR Context\r\n\r\nThe `PublishReadyToRunComposite` switch provides improved startup performance. From testing on my machine (Windows 10).\r\n\r\nThe startup time goes from 493 ms on `7.2.0-preview.8` to 451 ms on private build with these changes. \r\n\r\nA gain of about 8.5%\r\n\r\nThe gains on Linux are supposed to be higher. I will measure and update here.\r\n\r\n## PR Checklist\r\n\r\n- [ ] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [ ] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [ ] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [ ] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [ ] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [ ] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and opened an issue in the relevant tool repository. This may include:\r\n        - [ ] Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode\r\n        (which runs in a different PS Host).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n",
  "closed_at": "2021-09-21T06:00:36Z",
  "comments": [
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as stale because it has been marked as requiring author feedback but has not had any activity for **15 days**. It will be closed if no further activity occurs **within 10 days of this comment**.",
      "created_at": "2021-08-25T23:00:34Z",
      "updated_at": "2021-08-25T23:00:34Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@adityapatwardhan Should it be re-created for 6.0-rc1?",
      "created_at": "2021-08-26T03:46:38Z",
      "updated_at": "2021-08-26T03:46:38Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@adityapatwardhan is experimenting with the R2R composite configuration, focusing on Linux/macOS platforms currently I think. On windows, we see a ~3% improvement in startup with more than 27MB total size increment -- the gain doesn't seem worth the cost. We will see how it goes on Linux/macOS, as according to .NET team's blog, they see more improvements on Linux platform.",
      "created_at": "2021-08-26T18:37:02Z",
      "updated_at": "2021-08-26T18:37:02Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as stale because it has been marked as requiring author feedback but has not had any activity for **15 days**. It will be closed if no further activity occurs **within 10 days of this comment**.",
      "created_at": "2021-09-10T20:00:35Z",
      "updated_at": "2021-09-10T20:00:35Z"
    }
  ],
  "created_at": "2021-07-23T22:03:42Z",
  "number": 15824,
  "state": "closed",
  "title": "WIP: Enable `PublishReadyToRunComposite` for improved performance",
  "updated_at": "2021-09-21T06:00:36Z"
}