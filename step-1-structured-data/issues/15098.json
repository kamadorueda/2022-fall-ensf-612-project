{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15098",
  "author": "ayeltsov",
  "body": "## Steps to reproduce\r\n\r\nHave host OS of Windows 10, with guest Windows Server 2019 (script assumes that VM name starts with your user name)\r\nBoth have latest release PowerShell core (7.1.3) \r\nBoth domain joined in my case, I'm admin on both, running as admin on the host.\r\n\r\nRun 3 or more instances of below script.\r\nIt looks complicated, but all it does is executes remote command in a loop, over and over. The complexity is to make it easier to detect different messages.\r\n\r\n```powershell\r\nwhile($true)\r\n{\r\n    if(!$global:cred) { $global:cred = Get-Credential}\r\n    try\r\n    {\r\n        Start-Process -Credential $global:cred -FilePath \"cmd.exe\" -ArgumentList \"/c ECHO Hi\"\r\n        Write-Host \"Credentials Ok\"\r\n        break;\r\n    }\r\n    catch\r\n    {\r\n        Write-Host \"Credentials didn't work\"\r\n        Write-Host $_\r\n        Start-Sleep -seconds 1\r\n        $global:cred = $null\r\n    }\r\n    Write-Host \"Will try to get credentials again\"\r\n}\r\n\r\n[string] $state0 = \"\";\r\n[string] $state = \"StartingExecution\";\r\n$stateChange = Get-Date\r\nwhile($true)\r\n{\r\n    if($state0 -ne $state)\r\n    {\r\n        [datetime]$now = Get-Date\r\n        $duration = new-timespan -Start $stateChange -End $now\r\n        \r\n        Write-Host \"$($now.ToString('HH:mm:ss.fff')) duration: $($duration.ToString())\"\r\n        Write-Host \"$($now.ToString('HH:mm:ss.fff')) state: $state\"\r\n        $stateChange = Get-Date\r\n        $state0 = $state\r\n    }\r\n    else\r\n    {\r\n        Start-Sleep -Milliseconds 200\r\n    }\r\n\r\n    $VmName = (Get-VM | Where {$_.Name.StartsWith($env:UserName)} | select -First 1 -ExpandProperty Name)\r\n    if(-not $VmName)\r\n    {\r\n        $state = \"No VM\"\r\n        continue;\r\n    }\r\n\r\n    try\r\n    {\r\n        #$result = Invoke-Command -ConfigurationName powershell.7 -ErrorAction Stop -ComputerName $VmName -Credential $cred { Write-Output ('Connected, powershell is '+ $PSVersionTable.PSVersion.ToString()) }\r\n        $result = Invoke-Command -ConfigurationName powershell.7 -ErrorAction Stop -VMName $VmName -Credential $cred { Write-Output ('connected, powershell is '+ $PSVersionTable.PSVersion.ToString()) }\r\n        $state = \"VM $($VmName) $($result.ToString())\"\r\n    }\r\n    catch\r\n    {\r\n        $lastError = $_\r\n        $exceptionMessage = $lastError.Exception.Message\r\n        $state = \"VM $($VmName) $exceptionMessage\"\r\n    }\r\n}\r\n\r\n\r\n```\r\n\r\n## Expected behavior\r\n\r\n```none\r\nPS C:\\Users\\ayeltsov> &\"C:\\Users\\ayeltsov\\OneDrive - Microsoft\\Documents\\ConnectToVm.ps1\"\r\n\r\nPowerShell credential request\r\nEnter your credentials.\r\nUser: redmond\\ayeltsov\r\nPassword for user redmond\\ayeltsov: **********\r\n\r\nCredentials Ok\r\n16:04:12.137 duration: 00:00:00.0002203\r\n16:04:12.137 state: StartingExecution\r\n16:04:14.132 duration: 00:00:01.9818751\r\n16:04:14.132 state: VM ayeltsov-051724 connected, powershell is 7.1.3\r\n<and it should stay like this>\r\n```\r\n\r\n## Actual behavior\r\n\r\nAfter some time, one of the scripts will fail with:\r\n\r\n*The background process reported an error with the following message: \"The Hyper-V socket target process has ended.\".*\r\n\r\nNote: the crash is also occurring when VM has Powershell 5, so could be something in lower level (WinRm) or some long existing code.\r\n\r\n\r\n```none\r\n\r\nCredentials Ok\r\n16:03:27.474 duration: 00:00:00\r\n16:03:27.474 state: StartingExecution\r\n16:03:28.704 duration: 00:00:01.2269826\r\n16:03:28.704 state: VM ayeltsov-051724 connected, powershell is 7.1.3\r\n16:16:08.226 duration: 00:12:39.5190498\r\n16:16:08.226 state: VM ayeltsov-051724 The background process reported an error with the following message: \"The Hyper-V socket target process has ended.\".\r\n16:16:11.507 duration: 00:00:03.2769891\r\n16:16:11.507 state: VM ayeltsov-051724 connected, powershell is 7.1.3\r\n16:18:52.589 duration: 00:02:41.0766050\r\n16:18:52.589 state: VM ayeltsov-051724 The background process reported an error with the following message: \"The Hyper-V socket target process has ended.\".\r\n16:18:55.341 duration: 00:00:02.7475448\r\n16:18:55.341 state: VM ayeltsov-051724 connected, powershell is 7.1.3\r\n\r\nThe \"some time\" can be minutes, and it can be hours.\r\nI had a series of about 5 reproes in , then slightly modifies script for cleaner output (without changing the essence of what it's doing), and it's been running clean for last 30 minutes as I'm filling out this bug.\r\n\r\nThe guest will have following crash:\r\n\r\nFault bucket 2105295028781546140, type 5\r\nEvent Name: PowerShell\r\nResponse: Not available\r\nCab Id: 0\r\n\r\nProblem signature:\r\nP1: powershell.exe\r\nP2: 10.0.17763.1490\r\nP3: System.Net.Sockets.SocketException\r\nP4: Management.Automation.PSInvalidOperation\r\nP5: ion.Remoting.RemoteSessionHyperVSocketServer..ctor\r\nP6: ion.Remoting.RemoteSessionHyperVSocketServer..ctor\r\nP7: Consol.. main thread\r\nP8: \r\nP9: \r\nP10: \r\n\r\nAttached files:\r\n\\\\?\\C:\\ProgramData\\Microsoft\\Windows\\WER\\Temp\\WERA679.tmp.WERInternalMetadata.xml\r\n\\\\?\\C:\\ProgramData\\Microsoft\\Windows\\WER\\Temp\\WERA6E7.tmp.xml\r\n\\\\?\\C:\\ProgramData\\Microsoft\\Windows\\WER\\Temp\\WERA783.tmp.csv\r\n\\\\?\\C:\\ProgramData\\Microsoft\\Windows\\WER\\Temp\\WERA7E3.tmp.txt\r\n\r\nThese files may be available here:\r\n\\\\?\\C:\\ProgramData\\Microsoft\\Windows\\WER\\ReportArchive\\Critical_powershell.exe_25fa62dbcb2fadf8e7c922c50a5cd95febfecc_00000000_82acab6a\r\n\r\nAnalysis symbol: \r\nRechecking for solution: 0\r\nReport Id: b48f5802-8028-4d0e-a557-58a86ca64994\r\nReport Status: 268435456\r\nHashed bucket: 034647c2e9c19e6b3d3782aca1eb7a9c\r\nCab Guid: 0\r\n\r\n```\r\n\r\n## Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nHost:\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.3\r\nPSEdition                      Core\r\nGitCommitId                    7.1.3\r\nOS                             Microsoft Windows 10.0.19042\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\nGuest:\r\n\r\n\r\nPS C:\\Windows\\System32> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.3\r\nPSEdition                      Core\r\nGitCommitId                    7.1.3\r\nOS                             Microsoft Windows 10.0.17763\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n```\r\n\r\n## Impact\r\n\r\nSQL Server team has internal tool to run tests in a semi-disposable VM (they live for a few hours to a few days), and overall, we see this error a few times a week.\r\n\r\nWhile not a frequent error, it's difficult to harden the tool to expect this error for every interaction with VM and make every step idempotent. This is what we see in telemetry:\r\n\r\n```\r\n... | where Message contains \"The Hyper-V socket target process has ended\"\r\n| summarize count() by bin(EventInfo_Time, 1d) \r\n| order by EventInfo_Time desc ;\r\n\r\nEventInfo_Time\tcount_\r\n2021-03-23 00:00:00.0000000\t2\r\n2021-03-22 00:00:00.0000000\t2\r\n2021-03-11 00:00:00.0000000\t1\r\n2021-03-09 00:00:00.0000000\t1\r\n2021-03-03 00:00:00.0000000\t2\r\n2021-03-01 00:00:00.0000000\t1\r\n2021-02-26 00:00:00.0000000\t1\r\n2021-02-25 00:00:00.0000000\t1\r\n2021-02-24 00:00:00.0000000\t2\r\n2021-02-22 00:00:00.0000000\t1\r\n2021-02-19 00:00:00.0000000\t2\r\n2021-02-18 00:00:00.0000000\t2\r\n```\r\n",
  "closed_at": "2022-01-08T04:00:56Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Since you have a crush dump you could internally communicate with PowerShell team.",
      "created_at": "2021-03-27T08:06:10Z",
      "updated_at": "2021-03-27T08:06:10Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "What version and edition is the host os?",
      "created_at": "2021-04-07T21:32:07Z",
      "updated_at": "2021-04-07T21:32:07Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as \"Waiting on Author\" and has not had any activity for **7 day**. It has been closed for housekeeping purposes.",
      "created_at": "2022-01-08T04:00:54Z",
      "updated_at": "2022-01-08T04:00:54Z"
    }
  ],
  "created_at": "2021-03-24T23:29:06Z",
  "number": 15098,
  "state": "closed",
  "title": "Intermittent Powershell Direct crashes - fault bucket 2105295028781546140",
  "updated_at": "2022-01-08T04:00:56Z"
}