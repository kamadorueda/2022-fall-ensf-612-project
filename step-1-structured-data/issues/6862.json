{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6862",
  "author": "bergmeister",
  "body": "This is either a bug or a `Debug.Assert` call needs to be reviewed. The `VerifyAmsiUninitializeCalled` method that is called [here](https://github.com/PowerShell/PowerShell/blob/80951777cfde34e9d527dedd833f90cc715ad684/src/System.Management.Automation/security/SecuritySupport.cs#L1635) has a `Debug.Assert` violation in the following scenario:\r\n- Debug build (because `Debug.Assert` is only enabled in Debug)\r\n- The `-CrossGen` option on `Start-PSBuild` is not used\r\n- The ConsoleHost gets closed by the window that is hosting pwsh (can be directly or indirectly, i.e. nested) via the Windows UI (Close button on the window itself or the taskbar) but not via typing `exit`\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\ngit clone https://github.com/PowerShell/PowerShell.git PowerShellReproIssue6862\r\ncd .\\PowerShellReproIssue6862\r\nImport-Module .\\build.psm1\r\nStart-PSBootStrap\r\nStart-PSBuild\r\nInvoke-Item \"$pwd/src\\powershell-win-core\\bin\\Debug\\netcoreapp2.1\\win7-x64\\publish\\pwsh.exe\"\r\n# Then close the window via the `X` button or the `Close` option on the taskbar\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\nThe window closes normally.\r\n\r\nActual behavior\r\n---------------\r\n\r\nDebug.Assert failure [here](https://github.com/PowerShell/PowerShell/blob/80951777cfde34e9d527dedd833f90cc715ad684/src/System.Management.Automation/security/SecuritySupport.cs#L1711)\r\n![image](https://user-images.githubusercontent.com/9250262/39972339-00255166-5705-11e8-8b13-a808f7a5b823.png)\r\n\r\n\r\nEnvironment data\r\n----------------\r\n\r\n(Latest state of master)\r\n\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.0-beta.3\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.0-beta.3-1131-gd07a3e7c2faf3f3489ae80e17cb2f02533c392e6\r\nOS                             Microsoft Windows 10.0.17134\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2019-01-22T23:37:39Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "/cc @TravisEz13 @PaulHigin Please look the AMSI issue.",
      "created_at": "2018-05-14T03:25:35Z",
      "updated_at": "2018-05-14T03:25:35Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "/cc @SteveL-MSFT @dantraMSFT This is just the case about `Assert` that we discussed recently. Perhaps we should audit the code (`Asserts`).",
      "created_at": "2018-05-14T03:28:41Z",
      "updated_at": "2018-05-14T03:28:41Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "Thanks.  I'll take a look sometime this week.",
      "created_at": "2018-05-15T16:01:34Z",
      "updated_at": "2018-05-15T16:01:34Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "When PowerShell is closed via the console (clicking on window [x]) there is a race condition between PowerShell runspace clean up, the appdomain callback for the AMSI uninit assert check, and the process terminating.  I don't believe this code was intended to work for this case, but instead is for the case where PowerShell exits cleanly from the command line (by typing 'exit').\r\n\r\nI believe the assert is useful for the cleanly exiting case so it would be good to keep it.  It is interesting that we are seeing the assert for the \"Invoke-Item\" case, when in most other cases the process terminates before the assert can be displayed.",
      "created_at": "2018-05-17T21:19:09Z",
      "updated_at": "2018-05-17T21:19:09Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for the info. The fact that the assertion failure does not happen when using the `-CrossGen` switch confirms to me as well that it is a race condition as some code is faster. I guess there could also be scenarios on different hardware where this happens even when using `-CrossGen`. We should maybe eat more dog food that is compiled in Debug to uncover such cases.",
      "created_at": "2018-05-17T21:29:18Z",
      "updated_at": "2018-05-17T21:29:18Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "Note that I still see this happening with the latest changes in master but the likelihood seems to have decreased a bit.",
      "created_at": "2018-10-12T09:42:36Z",
      "updated_at": "2018-10-12T09:42:36Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Continues to annoy.",
      "created_at": "2018-10-12T11:06:28Z",
      "updated_at": "2018-10-12T11:06:28Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "I agree.  I am beginning to use PSCore6 more than Windows PowerShell and it is very annoying.  I think the assert should be removed.  I'll check with the AMSI folks and see if it is Ok to ignore the un-initialize on process exit.",
      "created_at": "2018-10-15T17:32:27Z",
      "updated_at": "2018-10-15T17:32:27Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "We discussed this briefly this morning and agree that @PaulHigin will submit PR to remove this assert as it's no longer providing value",
      "created_at": "2019-01-22T17:47:18Z",
      "updated_at": "2019-01-22T17:47:18Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "I have submitted a PR (#8713).",
      "created_at": "2019-01-22T23:37:39Z",
      "updated_at": "2019-01-22T23:37:39Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "@PaulHigin One can use [closing keywords](https://help.github.com/articles/closing-issues-using-keywords/) in the PR (e.g `Fixes #REPLACE_WITH_ISSUE_NUMBER`), then the issue gets closed automatically when the PR gets merged. It is not important in this case but useful in general where people track issues.",
      "created_at": "2019-01-22T23:40:52Z",
      "updated_at": "2019-01-22T23:40:52Z"
    }
  ],
  "created_at": "2018-05-13T22:28:48Z",
  "labels": [
    "WG-Engine",
    "Issue-Code Cleanup"
  ],
  "number": 6862,
  "state": "closed",
  "title": "AMSI not uninitialized when pwsh is not crossgen'd and the window hosting pwsh (directly or indirectly) gets closed (on Windows)",
  "updated_at": "2019-01-22T23:40:52Z"
}