{
  "_url": "https://github.com/PowerShell/PowerShell/issues/1225",
  "author": "daxian-dbw",
  "body": "## Steps to reproduce\n1. Build full PS in Github.\n2. Open the generated Microsoft.PowerShell.Activities.dll and Microsoft.PowerShell.GraphicalHost.dll in ILSpy.exe.\n3. Open the Microsoft.PowerShell.Activities.dll and Microsoft.PowerShell.GraphicalHost.dll from the GAC.\n4. Compare the items in \"Resources\" folder that are displayed in ILSpy.exe. \n## Expected behavior\n\nYou will see for each of the DLLs from GAC, there is a \"*.g.resources\" item. Those resources are expected to be embedded in the DLLs produced in Github.\n## Actual behavior\n\nThose resources items are missing from the DLLs produced in Github.\n## Environment data\n\nPS:122> dotnet --info\n.NET Command Line Tools (1.0.0-preview2-003119)\n\nProduct Information:\n Version:            1.0.0-preview2-003119\n Commit SHA-1 hash:  0708fe095e\n\nRuntime Environment:\n OS Name:     Windows\n OS Version:  10.0.10586\n OS Platform: Windows\n RID:         win10-x64\n",
  "closed_at": "2018-08-31T22:10:13Z",
  "comments": [
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw do you know a simple test that we can add in `test\\fullclr`?\n",
      "created_at": "2016-06-28T00:34:22Z",
      "updated_at": "2016-06-28T00:34:22Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "I don't know how can we exercise the code path that actually involves loading the xaml resources :(\n@chunqingchen do you happen to know a simple test for this?\n",
      "created_at": "2016-06-28T00:36:19Z",
      "updated_at": "2016-06-28T00:36:19Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "Low-priority, moving it for `Future`\n",
      "created_at": "2016-07-07T00:35:42Z",
      "updated_at": "2016-07-07T00:35:42Z"
    },
    {
      "author": "chunqingchen",
      "author_association": "CONTRIBUTOR",
      "body": "I'm afraid there's no simple test at hand. looks like this scenario is good for one time verification?\n",
      "created_at": "2016-07-07T18:40:25Z",
      "updated_at": "2016-07-07T18:40:25Z"
    },
    {
      "author": "1RedOne",
      "author_association": "CONTRIBUTOR",
      "body": "Been testing my XAML tools in PowerShell on Linux today and finding that I can't instantiate a XML NodeReader Object.  \n",
      "created_at": "2016-08-18T15:55:17Z",
      "updated_at": "2016-08-18T15:55:17Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw Seems we can close the Issue.",
      "created_at": "2018-08-22T13:24:34Z",
      "updated_at": "2018-08-22T13:24:34Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw is it really won't fix or it's not an issue anymore because the dotnet cli changed the behavior? If we don't embed them, that's probably a change of public interface. I guess nothing but PowerShell ISE should depend on it, but still may be worth to throw breaking change label at it and mention in the changelog.",
      "created_at": "2018-09-01T11:20:33Z",
      "updated_at": "2018-09-01T11:20:33Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@vors Graphical host and WorkFlows was removed from the repo. ",
      "created_at": "2018-09-01T19:04:12Z",
      "updated_at": "2018-09-01T19:04:12Z"
    }
  ],
  "created_at": "2016-06-28T00:26:20Z",
  "labels": [
    "Issue-Enhancement",
    "Resolution-Won't Fix",
    "Area-Maintainers-Build"
  ],
  "number": 1225,
  "state": "closed",
  "title": "Xaml and other resources are not embeded into Microsoft.PowerShell.GraphicalHost and Microsoft.PowerShell.Activities.dll",
  "updated_at": "2018-09-01T19:04:12Z"
}