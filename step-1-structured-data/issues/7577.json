{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7577",
  "author": "JustinGrote",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\n- Windows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nIf it is a bug report:\r\n- make sure you are able to repro it on the latest released version. \r\nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n- Fill out the following repro template:\r\n\r\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\r\n-->\r\n\r\nWrite-Host has a 150ms delay (~50ms on Linux) when called from a profile, but it doesn't if called directly. I thought maybe this would be due to CPU startup time but it's not, it's consistent every time, rarely wavers.\r\n\r\nThis is important because custom prompts and whatnot use write-host, and so a delay for no reason makes powershell feel more \"sluggish\" on startup.\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\nSave the following to ~\\desktop\\cpscript.ps1. Run ~\\desktop\\cpscript.ps1 from commandline. Normal expected behavior.\r\n\r\nAdd ~\\desktop\\cpscript.ps1 to profile.ps1. Start powershell normally. Second write-host takes +150ms to run, the remainder run normally.\r\n\r\n```powershell\r\n$cpnum = 0\r\n$stopwatch = [system.diagnostics.stopwatch]::StartNew()\r\n\r\n\"Checkpoint $($cpnum++;$cpnum): $($stopwatch.elapsed.milliseconds)ms\"\r\n\"Checkpoint $($cpnum++;$cpnum): $($stopwatch.elapsed.milliseconds)ms\"\r\n\"Checkpoint $($cpnum++;$cpnum): $($stopwatch.elapsed.milliseconds)ms\"\r\n\"Checkpoint $($cpnum++;$cpnum): $($stopwatch.elapsed.milliseconds)ms\"\r\n\"Checkpoint $($cpnum++;$cpnum): $($stopwatch.elapsed.milliseconds)ms\"\r\nwrite-host \"WHCheckpoint $($cpnum++;$cpnum): $($stopwatch.elapsed.milliseconds)ms\"\r\nwrite-host \"WHCheckpoint $($cpnum++;$cpnum): $($stopwatch.elapsed.milliseconds)ms\"\r\nwrite-host \"WHCheckpoint $($cpnum++;$cpnum): $($stopwatch.elapsed.milliseconds)ms\"\r\nwrite-host \"WHCheckpoint $($cpnum++;$cpnum): $($stopwatch.elapsed.milliseconds)ms\"\r\nwrite-host \"WHCheckpoint $($cpnum++;$cpnum): $($stopwatch.elapsed.milliseconds)ms\"\r\n```\r\n\r\nDoesn't have to be write host, can also be write-output, write-warning, etc. and it has the same effect.\r\n\r\nExpected behavior\r\n-----------------\r\n\r\nWhat happens when you run ~\\desktop\\CPScript.ps1 in a normal session\r\n```none\r\nCheckpoint 1: 0ms          \r\nCheckpoint 2: 0ms          \r\nCheckpoint 3: 1ms          \r\nCheckpoint 4: 1ms          \r\nCheckpoint 5: 1ms          \r\nWHCheckpoint 6: 2ms        \r\nWHCheckpoint 7: 3ms        \r\nWHCheckpoint 8: 3ms        \r\nWHCheckpoint 9: 4ms        \r\nWHCheckpoint 10: 5ms       \r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\nWhat happens when you run it called from the profile\r\n```none\r\nCheckpoint 1: 5ms\r\nCheckpoint 2: 10ms\r\nCheckpoint 3: 10ms\r\nCheckpoint 4: 11ms\r\nCheckpoint 5: 11ms\r\nWHCheckpoint 6: 11ms\r\nWHCheckpoint 7: 178ms\r\nWHCheckpoint 8: 179ms\r\nWHCheckpoint 9: 179ms\r\nWHCheckpoint 10: 180ms\r\n\r\n```\r\n\r\nLinux\r\n```none\r\nCheckpoint 1: 5ms\r\nCheckpoint 2: 12ms\r\nCheckpoint 3: 12ms\r\nCheckpoint 4: 12ms\r\nCheckpoint 5: 12ms\r\nWHCheckpoint 6: 12ms\r\nWHCheckpoint 7: 75ms\r\nWHCheckpoint 8: 75ms\r\nWHCheckpoint 9: 76ms\r\nWHCheckpoint 10: 76ms\r\n```\r\n\r\nSame behavior less pronounced.\r\n\r\nAppears to happen on PS5.1 as well\r\n```none\r\nCheckpoint 1: 4ms\r\nCheckpoint 2: 8ms\r\nCheckpoint 3: 8ms\r\nCheckpoint 4: 9ms\r\nCheckpoint 5: 9ms\r\nWHCheckpoint 6: 10ms\r\nWHCheckpoint 7: 180ms\r\nWHCheckpoint 8: 181ms\r\nWHCheckpoint 9: 186ms\r\nWHCheckpoint 10: 187ms\r\n```\r\n\r\nNote that the first write-host works just fine, so whatever is introducting the delay is code **after** write-host writes to console.\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.1.0-preview.4\r\nPSEdition                      Core\r\nGitCommitId                    6.1.0-preview.4\r\nOS                             Microsoft Windows 10.0.17134\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n```\r\n\r\nHappens in PS5.1 as well.",
  "closed_at": null,
  "comments": [
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "I have some ideas on where that delay is coming from, but I'll take this opportunity to share some tools to help analyze the performance, see this [PR](https://github.com/PowerShell/PowerShell/pull/7595).\r\n\r\nThe regions of interest defined in that PR should make it relatively simple to understand where that delay is coming from.\r\n\r\nNote that these events are available in PS5.1 as well - I added this instrumentation to help make major improvements to the startup scenario - PS5.1 is much faster in your scenario than PS5.0.",
      "created_at": "2018-08-21T23:21:51Z",
      "updated_at": "2018-08-21T23:21:51Z"
    },
    {
      "author": "JustinGrote",
      "author_association": "CONTRIBUTOR",
      "body": "@izybkr Interesting PR, thanks I'll see if I can use that to dial it in a bit.\r\n\r\nI didn't try a PS5.0 so I can't comment on how \"fast\" it is relative to the other tests, I only did PS Core and PS 5.1",
      "created_at": "2018-08-22T15:34:25Z",
      "updated_at": "2018-08-22T15:34:25Z"
    },
    {
      "author": "JustinGrote",
      "author_association": "CONTRIBUTOR",
      "body": "@lzybkr Just a bump that this is still an issue, tested all the way up to Windows Insider and latest pwsh preview. Workaround is to not use write-host at all in your prompt (which is where the slowness was most visible) but to use ANSI escape sequences only, which is more viable now with Windows 1809 than it was in the past.\r\n\r\nI have observed that it **does not** occur when running -version 2 parameter, I currently can't verify 3/4/5 to see if there's a point it was introduced, but it may be due to the new Write-Information and Write-Host layer that was added in 5\r\n",
      "created_at": "2019-08-02T22:08:27Z",
      "updated_at": "2019-08-02T22:08:55Z"
    }
  ],
  "created_at": "2018-08-20T21:45:59Z",
  "labels": [
    "WG-Engine-Performance"
  ],
  "number": 7577,
  "state": "open",
  "title": "Write-Host 150ms+ delay after first command when executed from profile",
  "updated_at": "2019-08-02T22:08:55Z"
}