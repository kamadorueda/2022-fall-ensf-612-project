{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10082",
  "author": "iSazonov",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\n- Reduce allocations in GetVariableItems() with 2-level cache for VariableScopeItemSearcher()\r\nBefore \r\n![image](https://user-images.githubusercontent.com/22290914/60864842-2ab9c300-a23e-11e9-908c-315a9040f5b7.png)\r\nAfter\r\n![image](https://user-images.githubusercontent.com/22290914/60864899-46bd6480-a23e-11e9-9ac4-1067eed95860.png)\r\n\r\n\r\n## PR Context\r\n\r\nRelated #10055\r\n\r\n<!-- Provide a little reasoning as to why this Pull Request helps and why you have opened it. -->\r\n\r\n## PR Checklist\r\n\r\n- [ ] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [ ] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [ ] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [ ] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [ ] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n",
  "closed_at": "2019-07-12T02:58:36Z",
  "comments": [
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "This seems like the wrong approach to addressing frequent variable lookups. I feel like I've described a better approach elsewhere, but I'll repeat here anyway.\r\n\r\nA better approach would:\r\n\r\n* Use the `VariableAnalysis` pass to assign integer indices for each dynamic lookup - one index per unique `VariablePath`.\r\n* Store an array of `PSVariable` in the `FunctionContext` for dynamic lookups.\r\n* On dynamic lookup, first check the function context for the given index. If the entry is not `null` **and** the variable was not deleted (Remove-Variable), you can skip the scope search.\r\n* Otherwise, proceed with a normal dynamic search. Upon a successful search, store the found `PSVariable` in the `FunctionContext` for subsequent lookups.\r\n\r\nThis is the rough approach I implemented in PowerShell V2 but never got around to implementing in the new parser. It works quite well.",
      "created_at": "2019-07-10T17:04:54Z",
      "updated_at": "2019-07-10T17:04:54Z"
    }
  ],
  "created_at": "2019-07-09T06:40:57Z",
  "number": 10082,
  "state": "closed",
  "title": "Reduce allocations in GetVariableItems() with 2-level cache for VariableScopeItemSearcher()",
  "updated_at": "2019-08-06T12:10:55Z"
}