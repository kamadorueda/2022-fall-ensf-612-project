{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6469",
  "author": "rjmholt",
  "body": "## PR Summary\r\n\r\nFix for #3803. Restores the tokenizer state more fully to prevent the null dereference causing the original error. Also changed the name of a variable to express that it doesn't actually mean that the PowerShell session is interactive or not.\r\n\r\n<!-- summarize your PR between here and the checklist -->\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` to the beginning of the title and remove the prefix when the PR is ready.\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [x] User-facing [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed - Issue link:\r\n- **Testing - New and feature**\r\n    - [x] Not Applicable or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n        - [ ] [Add `[feature]` if the change is significant or affects feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\r\n",
  "closed_at": "2018-04-26T01:04:04Z",
  "comments": [
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "I've opened [an RFC](https://github.com/PowerShell/PowerShell-RFC/pull/122) on updating the behaviour of `#requires`. Please feel free to comment in the PR.",
      "created_at": "2018-03-23T18:33:07Z",
      "updated_at": "2018-03-23T18:33:07Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "@rjmholt - I meant can you add a test for the bug that was fixed - the fix isn't obvious I guess - so maybe check first/last tokens that were supposed to be set but caused the exception.",
      "created_at": "2018-03-26T17:43:20Z",
      "updated_at": "2018-03-26T17:44:39Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "(Clicked the wrong button just then). Ok will do. The test I wrote traverses the code path I fixed -- just doesn't check the tokenizer state specifically.\r\n\r\nI assume the thing to do is to add a tokenizer test somewhere in [Parser.Tests.ps1](https://github.com/PowerShell/PowerShell/blob/master/test/powershell/Language/Parser/Parser.Tests.ps1)? Is there a straightforward way to access the tokenizer's state?\r\n\r\nI've been assuming the contract on `FirstToken` and `LastToken` is that they represent the first and last token produced by the tokenizer as it moves over a script, and that nested scans should just save and restore the parent scan's state. Is that correct?",
      "created_at": "2018-03-26T17:57:04Z",
      "updated_at": "2018-03-26T17:57:04Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "@rjmholt - First/Last token are exposed through PowerShell variables `$^` and `$$`, so your test should check the variables.\r\n\r\n`Parser.Tests.ps1` seems like a good place for this test.",
      "created_at": "2018-03-26T18:04:34Z",
      "updated_at": "2018-03-26T18:04:34Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@rjmholt Can you please address @lzybkr's comments (_if there is any pending_)?",
      "created_at": "2018-04-24T01:05:34Z",
      "updated_at": "2018-04-24T01:05:34Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw I think this is all addressed. I just tried `$ps.Invoke()` again, but it's still as I describe in the comment above.",
      "created_at": "2018-04-24T01:34:35Z",
      "updated_at": "2018-04-24T01:34:35Z"
    }
  ],
  "created_at": "2018-03-23T00:34:33Z",
  "number": 6469,
  "state": "closed",
  "title": "Add error handling for interactive #requires",
  "updated_at": "2018-06-22T22:55:33Z"
}