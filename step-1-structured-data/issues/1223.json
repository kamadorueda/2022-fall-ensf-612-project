{
  "_url": "https://github.com/PowerShell/PowerShell/issues/1223",
  "author": "andschwa",
  "body": "This PR is a request for comment of my work-in-progress to support literal backslashes in filenames (as is allowed on some filesystems, like Linux). Right now, this PR is really no good, but shows what's going on.\n\nThis highlights the main problem: PowerShell has no single say in path normalization; instead there are several different \"normalization\" functions that are all variations on the same theme, and another dozen calls to `path.Replace` to normalize, skipping the functions entirely. This is not unsurprising, given the age and size of the code-base.\n\nHowever, it presents us with a problem, since supporting literal backslashes in a file-path mandates that the path is both normalized and processed for escape characters once (and only once). We should maybe process globs at the same time, to share code, but on the hand hand, since glob expanding is conditional, perhaps we need to process escape characters only for backslash at first, and later assume the path has been normalized.\n\nNo matter what: we need to normalize each path once and only once, accounting for backtick-escaped backslashes.\n\nIt would probably be helpful to be passing around path objects (this is PowerShell, isn't it?) instead of strings, but given the public APIs, this would be a bit more work.\n\n/cc @JamesWTruher @lzybkr \n",
  "closed_at": "2016-07-06T17:54:08Z",
  "comments": [
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "For #1115.\n",
      "created_at": "2016-06-29T01:45:17Z",
      "updated_at": "2016-06-29T01:45:17Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Sorry, let me clarify. This isn't a code review request, this is a demonstration of the problems in our way for fixing the issue at hand, and I'm looking to start the discussion on how to design the correct solution.\n",
      "created_at": "2016-06-29T02:41:42Z",
      "updated_at": "2016-06-29T02:41:42Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "I can't seem to find who owns the filesystem provider. While I've reverted the changes that lost slash agnosticism, without them we have a different problem (handling filenames with backslashes in them). #1115 should be assigned properly once we've at least started the design. \n/cc @BrucePay \n",
      "created_at": "2016-06-29T02:48:14Z",
      "updated_at": "2016-06-29T02:48:14Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Oh, #954 will fall into this too.\n",
      "created_at": "2016-06-29T17:22:30Z",
      "updated_at": "2016-06-29T17:22:30Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Looks like we don't have any clue how to do this. Closing for now.\n",
      "created_at": "2016-07-06T17:54:08Z",
      "updated_at": "2016-07-06T17:54:08Z"
    }
  ],
  "created_at": "2016-06-27T23:21:34Z",
  "number": 1223,
  "state": "closed",
  "title": "WIP/RFC path normalization",
  "updated_at": "2016-07-06T17:54:08Z"
}