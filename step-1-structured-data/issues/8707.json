{
  "_url": "https://github.com/PowerShell/PowerShell/issues/8707",
  "author": "mvadu",
  "body": "I am trying to run bunch of scripts in individual PowerShell instances, run with a RunPool. The scripts invoke multiple other scripts based on the data conditions and produce variety of Verbose and Debug data. I want to be able to iterate over the individual instances `Streams` and get that instance specific records without worrying about rest of the instances. \r\n\r\nBut latest version of the Powershell (all the way back to v5) somehow jumbles the streams across different instances when run inside a pool. \r\n\r\nSorry for the lengthy program, but I am just creating 3 instances, and writing stuff to individual streams with respective write-xxx overloads. The script is run with a `*>text.txt` redirection from Powershell 6 command window.\r\n\r\nIn the generated file I don't see 2 verbose records, and one message crosses the stream boundary and appears inside an unrelated instance (as can be seen with the runspace ID in the message).\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\nusing namespace System.Management.Automation\r\nusing namespace System.Management.Automation.Runspaces\r\n\r\n\r\n$scriptblock = {\r\n    Write-Verbose \"($([Runspace]::DefaultRunspace.ID)) Verbose\"\r\n    Write-Debug \"($([Runspace]::DefaultRunspace.ID)) Debug\"\r\n    Write-Information \"($([Runspace]::DefaultRunspace.ID)) Information\"\r\n    Start-Sleep -Seconds 5\r\n    Write-Verbose \"($([Runspace]::DefaultRunspace.ID)) Verbose-2\"    \r\n#    Write-Error \"($([Runspace]::DefaultRunspace.ID)) Error\"\r\n}\r\n\r\n$sessionstate = [InitialSessionState]::CreateDefault()\r\n\r\n$sessionstate.Variables.Add(\r\n    (New-Object SessionStateVariableEntry('ErrorActionPreference', 'Continue', $null))\r\n)\r\n$sessionstate.Variables.Add(\r\n    (New-Object SessionStateVariableEntry('DebugPreference', 'Continue', $null))\r\n)\r\n$sessionstate.Variables.Add(\r\n    (New-Object SessionStateVariableEntry('InformationPreference', 'Continue', $null))\r\n)\r\n$sessionstate.Variables.Add(\r\n    (New-Object SessionStateVariableEntry('VerbosePreference', 'Continue', $null))\r\n)\r\n$workerPool = [runspacefactory]::CreateRunspacePool(1, $env:NUMBER_OF_PROCESSORS - 4, $sessionstate, $Host)\r\n$workerPool.Open()        \r\n\r\n$workers = New-Object Collections.Generic.List[pscustomobject]\r\n\r\n1..3 | foreach {\r\n    $workerThread = [PowerShell]::Create()\r\n    $workerThread.AddScript($scriptblock) | out-null\r\n    $workerThread.Streams.ClearStreams()\r\n\r\n    # $outStreams = @{\r\n    #     Verbose     = New-Object PSDataCollection[VerboseRecord]\r\n    #     Information = New-Object PSDataCollection[InformationRecord]\r\n    #     Debug       = New-Object PSDataCollection[DebugRecord]\r\n    #     Error       = New-Object PSDataCollection[ErrorRecord]\r\n    #     Warning     = New-Object PSDataCollection[WarningRecord]\r\n    # }\r\n\r\n    # $workerThread.Streams.Verbose = $outStreams.Verbose\r\n    # $workerThread.Streams.Information = $outStreams.Information\r\n    # $workerThread.Streams.Debug = $outStreams.Debug\r\n    # $workerThread.Streams.Error = $outStreams.Error\r\n    # $workerThread.Streams.Warning = $outStreams.Warning\r\n    \r\n    $workerThread.RunspacePool = $workerPool\r\n    $workers.Add([pscustomobject]@{ \r\n            Thread      = $workerThread\r\n            AsyncResult = $workerThread.BeginInvoke() \r\n        })\r\n}\r\n  \r\nwhile ($workers.Count -gt 0 -and $workers.AsyncResult.IsCompleted -ne $true) {\r\n    #    Write-Debug \"$(get-date)\"\r\n    Start-Sleep -Milliseconds 500\r\n}\r\n\r\nforeach ($worker in $workers) {\r\n    try {\r\n        $job = $worker.Thread.EndInvoke($worker.AsyncResult)\r\n        Write-Output \"-----------$($worker.Thread.InstanceId)-----------\"\r\n        $worker.Thread.Streams.Verbose | Write-Output\r\n        $worker.Thread.Streams.Debug | Write-Output\r\n        $worker.Thread.Streams.Error | Write-Output\r\n        $worker.Thread.Streams.Information | Write-Output\r\n    }\r\n    catch [Exception] { \r\n        Write-Error \"Error $($_.Exception.Message) at $($_.InvocationInfo.PositionMessage)\"\r\n        continue\r\n    }\r\n    finally{\r\n        $worker.Thread.Streams.Verbose.Dispose()\r\n        $worker.Thread.Streams.Debug.Dispose()\r\n        $worker.Thread.Streams.Error.Dispose()\r\n        $worker.Thread.Streams.Information.Dispose()\r\n        $worker.Thread.Dispose()   \r\n    }\r\n}\r\n$workerPool.Close()\r\n$workerPool.Dispose()\r\n```\r\n\r\n# Expected behavior\r\n\r\nEach message from individual PowerShell Instances should not cross the stream boundaries, and be available in their respective streams.\r\n\r\n# Actual behavior\r\n\r\n```none\r\n.\\testRunspace.ps1 *> test.txt\r\nVERBOSE: (49) Verbose\r\nDEBUG: (49) Debug\r\n(49) Information\r\nVERBOSE: (50) Verbose\r\nDEBUG: (50) Debug\r\n(50) Information\r\nVERBOSE: (51) Verbose\r\nDEBUG: (51) Debug\r\n(51) Information\r\nVERBOSE: (49) Verbose-2\r\nVERBOSE: (50) Verbose-2\r\nVERBOSE: (51) Verbose-2\r\n\r\n****************************************************************************\r\ntest.txt\r\n****************************************************************************\r\n-----------0a6e612b-413a-41d2-9d2b-99775a3b4465-----------\r\n(49) Verbose\r\n(49) Debug\r\n(49) Information\r\n-----------6578258d-74d8-417c-a0b1-6c06e38aaa06-----------\r\n(50) Verbose\r\n(50) Debug\r\n(50) Information\r\n-----------29e90e34-f844-4441-9636-ebd15e32d1cc-----------\r\n(51) Verbose\r\n**(49) Verbose-2**\r\n(51) Debug\r\n(51) Information\r\n```\r\n\r\n# Environment data\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.1.2\r\nPSEdition                      Core\r\nGitCommitId                    6.1.2\r\nOS                             Microsoft Windows 6.3.9600\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "BrucePay",
      "author_association": "COLLABORATOR",
      "body": "@mvadu \r\n> But latest version of the Powershell (all the way back to v5) somehow jumbles the streams across different instances when run inside a pool.\r\n\r\nAre you saying this worked differently in versions prior to v5? (i.e. it used to work and now it doesn't?)",
      "created_at": "2019-01-22T19:14:47Z",
      "updated_at": "2019-01-22T19:14:47Z"
    },
    {
      "author": "mvadu",
      "author_association": "NONE",
      "body": "@BrucePay  I am not sure, the machines where I have easy access run PS v5+. I have a Windows 7 laptop, but I have to modify the code (due to lack of `using` support). \r\n\r\nSo my statement above is more of earliest version I have been able to reproduce the issue than indicating a regression issue. Sorry if it caused a confusion.",
      "created_at": "2019-01-22T19:40:33Z",
      "updated_at": "2019-01-22T19:40:33Z"
    },
    {
      "author": "mvadu",
      "author_association": "NONE",
      "body": "Okay, I tried in Windows 7. I had to remove `write-information` part, and instead of printing `Runspace.ID` I used `InstanceID`. Even there I can see same result. In the actual shell all entries appear sequentially. But in the individual streams, only one Verbose-2 entry appears, and is placed out of order.\r\nIs my expectation wrong, or its an actual issue?\r\n\r\n```\r\nName                           Value                                                                                                                                                                                                                           \r\n----                           -----                                                                                                                                                                                                                           \r\nPSVersion                      4.0                                                                                                                                                                                                                             \r\nWSManStackVersion              3.0                                                                                                                                                                                                                             \r\nSerializationVersion           1.1.0.1                                                                                                                                                                                                                         \r\nCLRVersion                     4.0.30319.36470                                                                                                                                                                                                                 \r\nBuildVersion                   6.3.9600.19170                                                                                                                                                                                                                  \r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0}                                                                                                                                                                                                            \r\nPSRemotingProtocolVersion      2.2                   \r\n```\r\n\r\n```\r\nVERBOSE: (efb46443-f4ce-49dc-9731-829919c84842) Verbose\r\nDEBUG: (efb46443-f4ce-49dc-9731-829919c84842) Debug\r\nVERBOSE: (bcfea0d1-cb5b-4268-b284-bf29b8e660ae) Verbose\r\nDEBUG: (bcfea0d1-cb5b-4268-b284-bf29b8e660ae) Debug\r\nVERBOSE: (65caa5db-5128-4dbb-bca5-2cf68809a6eb) Verbose\r\nDEBUG: (65caa5db-5128-4dbb-bca5-2cf68809a6eb) Debug\r\nVERBOSE: (efb46443-f4ce-49dc-9731-829919c84842) Verbose-2\r\nVERBOSE: (bcfea0d1-cb5b-4268-b284-bf29b8e660ae) Verbose-2\r\nVERBOSE: (65caa5db-5128-4dbb-bca5-2cf68809a6eb) Verbose-2\r\n-----------287cf587-a0f9-4509-929d-571af56d8d90-----------\r\n(efb46443-f4ce-49dc-9731-829919c84842) Verbose\r\n(efb46443-f4ce-49dc-9731-829919c84842) Debug\r\n-----------48d666c1-41dd-434a-972f-4b3c8cd0dd05-----------\r\n(bcfea0d1-cb5b-4268-b284-bf29b8e660ae) Verbose\r\n(bcfea0d1-cb5b-4268-b284-bf29b8e660ae) Debug\r\n-----------b1258f46-1c44-4da1-90c3-94917f7ca344-----------\r\n(65caa5db-5128-4dbb-bca5-2cf68809a6eb) Verbose\r\n(efb46443-f4ce-49dc-9731-829919c84842) Verbose-2\r\n(65caa5db-5128-4dbb-bca5-2cf68809a6eb) Debug\r\n```",
      "created_at": "2019-01-22T20:46:37Z",
      "updated_at": "2019-01-22T20:46:37Z"
    },
    {
      "author": "mvadu",
      "author_association": "NONE",
      "body": "@BrucePay any update on this issue, either a confirmation/acknowledgement of the issue or its more of user misunderstanding?",
      "created_at": "2019-01-28T21:17:03Z",
      "updated_at": "2019-01-28T21:17:03Z"
    }
  ],
  "created_at": "2019-01-21T17:57:32Z",
  "labels": [
    "Issue-Question"
  ],
  "number": 8707,
  "state": "open",
  "title": "Stream outputs from different PowerShell instances mixed up when run inside a RunSpacePool",
  "updated_at": "2019-01-28T21:17:04Z"
}