{
  "_url": "https://github.com/PowerShell/PowerShell/issues/17616",
  "author": "SteveL-MSFT",
  "body": "### Summary of the new feature / enhancement\n\n```powershell\r\ninvoke-item https://bing.com\r\n```\r\n\r\nThis should be equivalent to the cmd.exe `start https://bing.com` which will automatically open that URL into your default browser.  However, PowerShell complains that `https:` is not a valid drive.  There are also other scheme associations that would work like `file://` or anything registered with the shell.\r\n\n\n### Proposed technical implementation details (optional)\n\nIn the `Invoke-Item` cmdlet, if the path fails with a `DriveNotFoundException`, then fallback to using ShellExecute to allow the shell to try to resolve it to a handler.",
  "closed_at": "2022-08-11T09:01:18Z",
  "comments": [
    {
      "author": "237dmitry",
      "author_association": "NONE",
      "body": "> This should be equivalent to the cmd.exe `start https://bing.com`\r\n\r\nFull equivalent:\r\n```\r\nstart https://bing.com\r\n```\r\nFor uniformity, I agree, it would be good if Invoke-Item could work not only with elements of the file system.",
      "created_at": "2022-07-02T03:17:12Z",
      "updated_at": "2022-07-02T06:54:07Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I believe it is more fundamental problem since it is possible to use `:` char on Unix file systems.",
      "created_at": "2022-07-02T17:55:16Z",
      "updated_at": "2022-07-02T17:55:16Z"
    },
    {
      "author": "jdhitsolutions",
      "author_association": "COLLABORATOR",
      "body": "Under Working Group review",
      "created_at": "2022-07-06T15:50:42Z",
      "updated_at": "2022-07-06T15:50:42Z"
    },
    {
      "author": "TobiasPSP",
      "author_association": "COLLABORATOR",
      "body": "The cmdlet working group reviewed this and concluded: \r\n`Start-Process` is the cmdlet that runs executable code as well as monikers like 'https:' where you can submit an *unstructured* executable path and run it through *ShellExecute*-like functionality.\r\nThe *-item family of cmdlets on the other hand has a much different deign and works strictly *structured* through means of providers and the drives they expose, exposing just the functionality that the provider authors have implemented.\r\nIf you wanted to extend this system for any reason you can add new providers. \r\nWe feel that adding a generic *ShellExecute*-like functionality to `Invoke-Item` would violate the structured provider concept and add attack surfaces. \r\nThe requested *ShellExecute*-like functionality (`start https://...`) is already implemented in PowerShell. Please use `Start-Process` or its alias `start`.",
      "created_at": "2022-08-10T05:49:46Z",
      "updated_at": "2022-08-10T05:55:42Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as by-design and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2022-08-11T09:01:17Z",
      "updated_at": "2022-08-11T09:01:17Z"
    }
  ],
  "created_at": "2022-07-01T15:26:02Z",
  "labels": [
    "Issue-Enhancement",
    "WG-Cmdlets",
    "Resolution-By Design"
  ],
  "number": 17616,
  "state": "closed",
  "title": "Invoke-Item should fallback to ShellExecute if path is not a filesystem path",
  "updated_at": "2022-08-11T09:01:18Z"
}