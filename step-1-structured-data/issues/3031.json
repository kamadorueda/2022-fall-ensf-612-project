{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3031",
  "author": "joeyaiello",
  "body": "I'm okay being told that this isn't important, but it does feel a little annoying for anyone trying to build muscle memory on where to glance when checking for the `PSVersion`, `GitCommitId`, or `PSEdition`. \r\n\r\nSteps to reproduce\r\n------------------\r\nCall $PSVersionTable from any version of PowerShell Core 6.0\r\n\r\nExpected behavior\r\n-----------------\r\nThe ordering of the output should remain the same between versions. \r\n\r\nActual behavior\r\n---------------\r\nThe ordering of the output has changed for every alpha:\r\n\r\n![image](https://cloud.githubusercontent.com/assets/1255187/22215729/4c306ada-e151-11e6-9864-b138b1607a00.png)\r\n\r\n",
  "closed_at": "2017-04-13T05:04:53Z",
  "comments": [
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "I'd say either pick an order based on relevance in which case PSVersion and PSEdition should probably be the first two fields and BuildVersion/GitCommitId that last two.  Or just make it alphabetical.  I'd prefer the former but could live with the latter.",
      "created_at": "2017-01-23T18:33:33Z",
      "updated_at": "2017-01-23T18:33:33Z"
    },
    {
      "author": "BrucePay",
      "author_association": "COLLABORATOR",
      "body": "$PSVersionTable is simply a hashtable so the order of the keys is not\u00a0guaranteed. Changing the type of the object would be a breaking change. Since it's just a hashtable, it's displayed using the normal hashtable renderer. It might be reasonable to change the hashtable rendering so\u00a0that the keys are sorted first though this would change the behavior for all hashtables.\u00a0(Changing how an object is rendered is not considered a breaking change.)",
      "created_at": "2017-01-25T19:32:27Z",
      "updated_at": "2017-01-25T19:32:27Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "If we don't want alphabetical, there are a couple of options:\r\n\r\n* Use OrderedDictionary - maybe not a breaking change (unlikely breaking change?) because there is no C# api here -and reasonable because it still supports IDictionary\r\n* Add to PSTypeNames to trigger a custom formatter",
      "created_at": "2017-01-25T21:45:30Z",
      "updated_at": "2017-01-25T21:45:30Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "We already have a \"breaking\" change.\r\nIn Windows PowerShell the '$PSVersionTable' type is `System.Management.Automation.PSVersionHashTable`, in PowerShell Core is `Hashtable`.",
      "created_at": "2017-04-11T10:54:51Z",
      "updated_at": "2017-04-11T10:54:51Z"
    }
  ],
  "created_at": "2017-01-23T17:51:21Z",
  "number": 3031,
  "state": "closed",
  "title": "Order of PSVersionTable keeps changing",
  "updated_at": "2017-04-13T06:23:06Z"
}