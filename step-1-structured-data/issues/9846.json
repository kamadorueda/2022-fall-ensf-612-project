{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9846",
  "author": "mikeTWC1984",
  "body": "\r\n# Environment: Win 10, ps 5.1 and Powershell Core\r\n\r\nI'm adding DB2 database driver to my PS script. That driver is a  .net core wrapper for non C# client. Nuget name is IBM.Data.DB2.Core.  Dotnet  driver is located in lib\\netstandard2.0 folder as usually, but actual client is in build\\clidriver folder. If I would build dotnet console app, it would put that clidriver folder in the same directory with IBM.Data.DB2.Core.dll. This approach would work if I run script in powershell 5.1 console. However if I run it in Pwsh Core, or even in ISE, it can't figure out where clidriver folder is (and throw weird error). This can be fixed if I add this dll from the original location (lib/netstandard), somehow it knows nuget folder structure.\r\nWondering if there is a way to push pwsh core to look for clidriver folder in current directory (like PS5 or console app do)? Below is a script you can use for testing. No need to set up database, just see if you get error from DB client (on success) or  some weird unrelated error\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\n\r\n\r\n<# Initial setup  (Windows 10, ps 5.1)\r\n\r\nnuget install IBM.Data.DB2.Core\r\n\r\n# copying dependencies like console app would do\r\n\r\nCopy-Item .\\IBM.Data.DB2.Core.1.3.0.100\\build\\clidriver -Recurse -Destination \".\"\r\nCopy-Item .\\IBM.Data.DB2.Core.1.3.0.100\\lib\\netstandard2.0\\IBM.Data.DB2.Core.dll -Destination \".\"\r\n\r\n#>\r\n\r\n\r\n\r\n\r\n# If you copy clidriver and target dll to your project folder (like console app) it will only work in Powershell 5 console\r\n# It will fail in ISE, powershell core and VSCode\r\n Add-Type -path .\\IBM.Data.DB2.Core.dll # assuming clidriver folder is copied here too.\r\n\r\n \r\n# But it will work everywhere if adding DLL from \\lib\\netstandard\r\n# Somehow it knows nuget structure and uses modules from \\buid\\clidriver\r\n# Add-Type -Path .\\IBM.Data.DB2.Core.1.3.0.100\\lib\\netstandard2.0\\IBM.Data.DB2.Core.dll\r\n\r\n# ------------------------ Test Script ----------------------------------------------------------- #\r\n\r\n$str = \"Database=sysadmin;User ID=informix;Password=in4mix;Server=localhost:9089;\"\r\n$cn  = New-Object IBM.Data.DB2.Core.DB2Connection $str\r\n\r\n\r\n$cn.Open() # On success you should see ERROR [08001] [IBM] SQL1336N (that comes from db client)\r\n           # On error you'll see \"Length cannot be less than zero\" (so it can't refer to clidriver folder)\r\n$cn.Close()\r\n```",
  "closed_at": "2020-01-30T13:46:56Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Now you can resolve the issue with PowerShell native resolver feature https://github.com/PowerShell/PowerShell/pull/11032",
      "created_at": "2020-01-30T13:46:56Z",
      "updated_at": "2020-01-30T13:46:56Z"
    }
  ],
  "created_at": "2019-06-06T20:26:57Z",
  "labels": [
    "Issue-Question",
    "Resolution-Answered"
  ],
  "number": 9846,
  "state": "closed",
  "title": "Loading nuget with referenced modules - Weird behavior ",
  "updated_at": "2020-01-30T13:47:03Z"
}