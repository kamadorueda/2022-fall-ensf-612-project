{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6427",
  "author": "ghost",
  "body": "There is a demand of this feature:\r\n\r\nhttps://stackoverflow.com/q/39245288\r\nhttps://stackoverflow.com/q/18861709\r\n\r\nIn Unix, it is possible using `--color=always` and the pipe will pass the piper's colors to pipee: https://superuser.com/a/352719\r\n\r\nPlease consider adding this option.\r\n\r\nThanks!",
  "closed_at": "2018-03-19T20:14:41Z",
  "comments": [
    {
      "author": "BrucePay",
      "author_association": "COLLABORATOR",
      "body": "@kasper3 I the specific case you cite, `--color=always` is an option on the 'ls' _command_ causing it to always emit color codes regardless of whether the output is a tty or not. So it's up to the command to emit the color codes not the shell. Quoting from the superuser.com example:\r\n\r\n> you can't easily fix it in tee/pipe as tee/pipe are not stripping these color codes. The problem is that the initial command sees it is not writing to the terminal. ",
      "created_at": "2018-03-19T18:39:07Z",
      "updated_at": "2018-03-19T18:39:07Z"
    },
    {
      "author": "ghost",
      "author_association": "NONE",
      "body": "@BrucePay, thanks! I am trying to pipe the output of MSBuild to `Out-Default`, `Write-Host` etc. Was wondering if somehow i can preserve the colors. Could that be an option of pipe, perhaps a new pipe syntax `^|`, that will push the raw output to RHS?",
      "created_at": "2018-03-19T19:25:26Z",
      "updated_at": "2018-03-19T19:25:26Z"
    },
    {
      "author": "BrucePay",
      "author_association": "COLLABORATOR",
      "body": "@kasper3 Unfortunately the change must be made to the command being run (i.e. msbuild) not the shell since it's the command that generates the colors.\r\n\r\nNote:  the superuser.com mentions a utility `unbuffer` that (I infer)  launches a command with it's output redirected into a pseudo-tty then takes the output of the pseudo-tty and redirects that to the pipeline. This command should work with PowerShell but it's only on Unix/Linux since it depends on pseudo-ttys..",
      "created_at": "2018-03-19T19:46:51Z",
      "updated_at": "2018-03-19T19:46:51Z"
    },
    {
      "author": "ghost",
      "author_association": "NONE",
      "body": "Oh nice, i just found a way to do it while reading @Veigres comments at https://github.com/Microsoft/msbuild/issues/2364:\r\n\r\n`msbuild /clp:ForceConsoleColor | Write-Host`\r\n\r\nRetreating this proposal. Thanks for your help!\r\n\r\nbtw, i have drilled down to the code, https://github.com/Microsoft/msbuild/blob/6851538897f5d7b08024a6d8435bc44be5869e53/src/Deprecated/Engine/Logging/BaseConsoleLogger.cs#L411-L426, maybe it can be opened as API addition in CoreFX to provide property like `public bool Console.IsTty` if there are other use-cases?",
      "created_at": "2018-03-19T20:14:41Z",
      "updated_at": "2018-03-19T20:44:52Z"
    },
    {
      "author": "ghost",
      "author_association": "NONE",
      "body": "@BrucePay, I found one exception that in PowerShell workflow block (`foreach -parallel` or inline script etc.), if we invoke `msbuild /clp:ForceConsoleColor | Write-Host`, and the workflow callsite is using ` | Out-Default`, then the colors are lost. Is this something PowerShell can accommodate (or already does)?",
      "created_at": "2018-03-20T16:37:09Z",
      "updated_at": "2018-03-20T16:37:09Z"
    },
    {
      "author": "M-Pixel",
      "author_association": "NONE",
      "body": "I'd like to know this as well.  For programs that _already_ emit colors, that color is lost when piped to `Out-Default`.  How can it be preserved?",
      "created_at": "2019-06-21T00:39:25Z",
      "updated_at": "2019-06-21T00:39:25Z"
    }
  ],
  "created_at": "2018-03-19T14:33:43Z",
  "labels": [
    "Issue-Question",
    "Resolution-Answered"
  ],
  "number": 6427,
  "state": "closed",
  "title": "Preserve colors when piping the output",
  "updated_at": "2019-06-21T00:39:25Z"
}