{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6303",
  "author": "TravisEz13",
  "body": "## PR Summary\r\n\r\nMSI: Make sure that file components are patchable\r\n    - avoid changing names and guids of components between builds as this prevents patch generation\r\n        - This required submitting the file generated by heat\r\n    - add code to make sure the generated file is not out of date\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` to the beginning of the title and remove the prefix when the PR is ready.\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] User-facing [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed - Issue link:\r\n- **Testing - New and feature**\r\n    - [x] Not Applicable or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n        - [ ] [Add `[feature]` if the change is significant or affects feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\r\n",
  "closed_at": "2018-03-06T18:13:27Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I wonder - is this implement RFC suggestion for root path `C:\\Program Files\\PowerShell`?",
      "created_at": "2018-03-05T12:38:01Z",
      "updated_at": "2018-03-05T12:38:01Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@iSazonov Only partially... During the work to make everything patchable.  The need for the changes in the RFC was discovered.  This does not change the actual install location.  This big change here is to fix the GUIDs for all the file components.  This allows the file components to be patched (using an MSP, which is required by Microsoft Update for Security Patches.) \r\n\r\nAfter we merge most of the MSI PRs I have pending, I'll submit the main implementation for RFC.  I'll mark it as a WIP until the RFC is done.",
      "created_at": "2018-03-05T18:16:13Z",
      "updated_at": "2018-03-05T18:16:13Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@TravisEz13 Thanks for clarify. I don't understand how it works - it seems the change links component to root PowerShell directory. Main question is should we review rest components? And whether repair works for such components?",
      "created_at": "2018-03-06T06:12:53Z",
      "updated_at": "2018-03-06T06:12:53Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "I already have and submitted two other PRs for all significant issues.  The main other issue is that in a patch only differences are applied to the original MSI.  We need to remove all references to the specific version numbers from the GUI.  Otherwise, when you are applying the 6.0.3 patch to 6.0.2 MSI, the patch will still say 6.0.2.  Perhaps there is a way to use the actual MSI version at runtime.  I'll have a PR for that sometime after this is merged.",
      "created_at": "2018-03-06T18:12:56Z",
      "updated_at": "2018-03-06T18:12:56Z"
    }
  ],
  "created_at": "2018-03-03T00:02:36Z",
  "number": 6303,
  "state": "closed",
  "title": "MSI: Make sure that file components are patchable",
  "updated_at": "2018-03-14T00:58:02Z"
}