{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5444",
  "author": "mklement0",
  "body": "`New-Item -Force`, at least with the filesystem provider, commendably employs desired-state logic with _directories_ (_update: see [comment below](https://github.com/PowerShell/PowerShell/issues/5444#issuecomment-384805763) for why registry keys should be considered the analog of directories, not files_):\r\nIf the specified path doesn't exist yet, it is created; if it already does, no action is taken (and no error is reported).\r\n\r\nBy contrast, the registry provider currently blindly _recreates_ the _leaf_ component of the path, which can result in data loss.\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\n# Create HKCU:/foo/bar with value 'baz1'; -Force ensures that ancestral component `foo` is implicitly created.\r\nNew-Item -Force HKCU:/foo/bar | Set-ItemProperty -Name baz1 -Value 1\r\n# Now - seemingly - add another value, 'baz2'\r\nNew-Item -Force HKCU:/foo/bar | Set-ItemProperty -Name baz2 -Value 2\r\n# List the resulting values.\r\nGet-Item HKCU:/foo/bar\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```none\r\n\r\n\r\n    Hive: HKEY_CURRENT_USER\\foo\r\n\r\n\r\nName                           Property                                                                                                                                            \r\n----                           --------                                                                                                                                            \r\nbar                            baz1 : 1                                                                                                                                            \r\n                               baz2 : 2                                                                                                                                            \r\n\r\n\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n```none\r\n\r\n\r\n    Hive: HKEY_CURRENT_USER\\foo\r\n\r\n\r\nName                           Property                                                                                                                                            \r\n----                           --------                                                                                                                                            \r\nbar                            baz2 : 2                                                                                                                                            \r\n```\r\n\r\nOnly `baz2` is present, because `New-Item -Force HKCU:/foo/bar` recreated the `bar` key, wiping out `baz1` in the process.\r\n\r\nEnvironment data\r\n----------------\r\n\r\n```powershell\r\nPowerShell Core v6.0.0-beta.9 on Microsoft Windows 10 Pro (64-bit; v10.0.15063)\r\nWindows PowerShell v5.1.15063.674 on Microsoft Windows 10 Pro (64-bit; v10.0.15063)\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "Jaykul",
      "author_association": "CONTRIBUTOR",
      "body": "That's *exactly* what happens with **leaf** items in every provider (if you `new-item -force -type file` it blows away the file).",
      "created_at": "2018-04-26T21:04:09Z",
      "updated_at": "2018-04-26T21:04:09Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@Jaykul: \r\n\r\nThat's true with _files_, yes, but the registry provider has no item sub-type that is the analog of a file - **there's only _one_ item type - a registry _key_ - and it is _always_ a _container_, and thus the equivalent of a _directory_.**\r\n\r\nThus, my argument is: just as `New-Item -Type Directory -Force /foo/bar` doesn't blow away the content of an existing `bar` directory, neither should `New-Item -Force HKCU:/foo/bar` recreate key `bar`.\r\n\r\n\r\n\r\n",
      "created_at": "2018-04-26T22:16:10Z",
      "updated_at": "2018-04-27T03:10:10Z"
    }
  ],
  "created_at": "2017-11-14T10:42:04Z",
  "labels": [
    "Issue-Bug",
    "WG-Engine-Providers"
  ],
  "number": 5444,
  "state": "open",
  "title": "Registry provider: New-Item -Force shouldn't blindly recreate the leaf path component (registry key)",
  "updated_at": "2018-04-28T18:52:34Z"
}