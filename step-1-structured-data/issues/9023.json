{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9023",
  "author": "alphatross",
  "body": "# Summary of the new feature/enhancement\r\n\r\nAs a user installing PowerShell Core on Windows via the downloadable MSI file, I would like all the directories referenced in $env:PSModulePath to actually exist on my system following installation of PowerShell Core, so that PowerShellGet cmdlets like Install-Module -Scope CurrentUser work 'out of the box' without needing to manually create required directory paths.\r\n\r\n# Proposed technical implementation details\r\n\r\nStraight after installation and launching PowerShell 6.1.3 Core, it would be nice to be able to run:\r\n\r\n`PS C:\\Users\\Me> Install-Module -Name Az -Scope  CurrentUser`\r\n\r\n.. without receiving the Error:\r\n\r\n```\r\nPackageManagement\\Install-Package : Could not find a part of the path 'C:\\Users\\Me\\Documents\\PowerShell\\Modules\\Az.Accounts\\1.3.0'.\r\nAt C:\\program files\\powershell\\6\\Modules\\PowerShellGet\\PSModule.psm1:9491 char:21\r\n+ ...          $null = PackageManagement\\Install-Package @PSBoundParameters\r\n+                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : NotSpecified: (Microsoft.Power....InstallPackage:InstallPackage) [Install-Package], Exception\r\n+ FullyQualifiedErrorId : System.IO.DirectoryNotFoundException,Microsoft.PowerShell.Commands.CopyItemCommand,Microsoft.PowerShell.PackageManagement.Cmdlets.InstallPackage\r\n```\r\n\r\nAs the Module Paths for PowerShell Core differ from those used in PowerShell for Windows 5.1 (also installed), I'm assuming I need to manually create the 'C:\\Users\\Me\\Documents\\PowerShell\\Modules' path for Install-Package to work.  However, I think it would be a smoother experience if a path being referenced in $env:PSModulePath (and critical for PowerShellGet) exists after installation of PowerShell.\r\n\r\nThe MSI File is available at the following URL, which contains no instructions for manually creating directories like 'C:\\Users\\Me\\Documents\\PowerShell\\Modules' or 'C:\\Program Files\\PowerShell\\Modules':\r\n\r\n[https://docs.microsoft.com/en-us/powershell/scripting/install/installing-powershell-core-on-windows?view=powershell-6](https://docs.microsoft.com/en-us/powershell/scripting/install/installing-powershell-core-on-windows?view=powershell-6)\r\n",
  "closed_at": "2019-03-02T14:41:33Z",
  "comments": [
    {
      "author": "alphatross",
      "author_association": "NONE",
      "body": "```\r\nPS C:\\Users\\Me> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.1.3\r\nPSEdition                      Core\r\nGitCommitId                    6.1.3\r\nOS                             Microsoft Windows 10.0.17134\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```",
      "created_at": "2019-03-02T02:18:34Z",
      "updated_at": "2019-03-02T02:18:34Z"
    },
    {
      "author": "alphatross",
      "author_association": "NONE",
      "body": "Closing after I found that even \"mkdir\" from a Command-Prompt has similar behavior ('Cannot find the file specified'), so this is likely not related to PowerShell (strangely, creating Folders from Explorer works)\r\nLooks like I have bigger problems....\r\nWill close and re-open if necessary once my system is stable.",
      "created_at": "2019-03-02T02:47:43Z",
      "updated_at": "2019-03-02T02:47:43Z"
    },
    {
      "author": "alphatross",
      "author_association": "NONE",
      "body": "Even though this was not a Powershell issue, but a Windows Defender issue, I'm reopening temporarily in case anyone else encounters a similar issue using Install-Module.  This was a little tricky to track down.\r\n\r\nThe problem was a recent update to Windows Defender, which has a Ransomware Protection feature that automatically includes profile folders (`C:\\Users\\<yourname>\\Documents` etc) as \"Protected Folders\".  Applications such as cmd.exe and Powershell Core (pwsh.exe) have to be manually added under \"Allow an app through Controlled folder access\".  There seems to be no way to exclude a subfolder such as PowerShell\\Modules under a Protected Folder that's been added (and I'm thinking it would not be smart idea to remove `C:\\Users\\<yourname>\\Documents` being a Malware-protected folder)\r\n\r\nDoes this mean Powershell needs to reconsider the Module location being under \"MyDocuments\" for the local user under Windows?  **Perhaps the MSI file should add an exception for the Module location as part of the setup?**\r\n\r\nFeel free to close, as I should likely create a new Issue based on this new information.  Just wanted to make this visible in case anyone else encounters this.",
      "created_at": "2019-03-02T07:25:46Z",
      "updated_at": "2019-03-02T07:25:46Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "I think leaving this issue with the context is valuable. \ud83d\ude42 \r\n\r\nIt looks like the available options are, essentially:\r\n\r\n1. Add an exception in Defender for the pwsh modules location.\r\n2. Move the modules location.\r\n\r\nI'd guess option 1 will likely be preferred, but that depends how difficult it is to create an exception during the install.",
      "created_at": "2019-03-02T12:53:12Z",
      "updated_at": "2019-03-02T12:53:12Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "It is not first report for the problem. Search works so close the issue.",
      "created_at": "2019-03-02T14:41:33Z",
      "updated_at": "2019-03-02T14:41:33Z"
    },
    {
      "author": "Siddharth-Gandhi",
      "author_association": "NONE",
      "body": "Thank YOU very much! Could not find anything about solving the \"Could not find path\" error anywhere. Allowing Powershell in Windows Defender did the trick.\r\n",
      "created_at": "2020-10-05T14:51:49Z",
      "updated_at": "2020-10-05T14:51:49Z"
    }
  ],
  "created_at": "2019-03-02T01:57:16Z",
  "labels": [
    "Issue-Question",
    "Resolution-Answered"
  ],
  "number": 9023,
  "state": "closed",
  "title": "Can MSI used to Install PowerShell Core on Windows Create CurrentUser Module Paths?",
  "updated_at": "2020-10-05T14:51:49Z"
}