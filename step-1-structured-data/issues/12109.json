{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12109",
  "author": "0x6797",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 and PowerShell 7+ issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n\r\n-->\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\n$job = (Start-Job -Name 'a job' -FilePath .\\Exec-Job.ps1 -ArgumentList (ConvertTo-SecureString -String 'aaa' -AsPlainText -Force))\r\n$job\r\n```\r\n\r\nMy repository is :\r\nhttps://github.com/0x6797/azure-powershell-jobs\r\n\r\nAnd I has executed ./Exec-Parallel-Jobs.ps1\r\n\r\nIt is similar to this issue.\r\nhttps://github.com/PowerShell/PowerShell/issues/7172\r\n\r\n# Expected behavior\r\n\r\n\r\n```none\r\nId     Name            PSJobTypeName   State         HasMoreData     Location             Command\r\n--     ----            -------------   -----         -----------     --------             -------\r\n9      a job           BackgroundJob   Completed     True            localhost            [CmdletBinding()]\u2026\r\n```\r\n\r\n# Actual behavior\r\n\r\nIt failed on Linux, but it succeed on Windows PowerShell 7\r\n\r\n```none\r\nId     Name            PSJobTypeName   State         HasMoreData     Location             Command\r\n--     ----            -------------   -----         -----------     --------             -------\r\n9      a job           BackgroundJob   Failed        False           localhost            [CmdletBinding()]\u2026\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0\r\nOS                             Linux 5.0.0-1032-azure #34-Ubuntu SMP Mon Feb 10 19:37:25 UTC 2020\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Why do you use AsPlainText ?",
      "created_at": "2020-03-12T09:17:31Z",
      "updated_at": "2020-03-12T09:17:31Z"
    },
    {
      "author": "0x6797",
      "author_association": "NONE",
      "body": "```powershell\r\n$job = (Start-Job -Name 'a job' -FilePath .\\Exec-Job.ps1 -ArgumentList (ConvertTo-SecureString -String 'aaa'  -Force))            \r\n\r\nConvertTo-SecureString: The parameter value \"aaa\" is not a valid encrypted string.\r\n```\r\n\r\nI'm using a SecureString to specify a machine password in Azure PowerShell.",
      "created_at": "2020-03-12T09:28:06Z",
      "updated_at": "2020-03-12T09:28:06Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Sorry, I skipped that you use plain text.\r\n\r\nCould you share an error from failed job?",
      "created_at": "2020-03-12T10:22:29Z",
      "updated_at": "2020-03-12T10:22:29Z"
    },
    {
      "author": "0x6797",
      "author_association": "NONE",
      "body": "Never mind.\r\nIt occurs no error in a failed job.\r\n\r\n```powershell\r\n$job = Start-Job -Name \"a job\" -FilePath ./Exec-Job.ps1 -ArgumentList (ConvertTo-SecureString -String 'aaa' -AsPlainText -Force)                                                          \r\n$job | ConvertTo-Json\r\n````\r\n\r\n```json\r\n{\r\n  \"HasMoreData\": false,\r\n  \"StatusMessage\": null,\r\n  \"Location\": \"localhost\",\r\n  \"Command\": \"[CmdletBinding()]\\nparam (\\n    [Parameter(Mandatory=$true, HelpMessage=\\\"The admin password for the VM\\\")]\\n    [System.Security.SecureString] $Password\\n)\\n\\n\\n$DebugPreference = \\\"Continue\\\" \\nSet-StrictMode -Version Latest\\n\\nreturn \\\"Succeeded\\\"\",\r\n  \"JobStateInfo\": {\r\n    \"State\": 3,\r\n    \"Reason\": null\r\n  },\r\n  \"Finished\": {\r\n    \"Handle\": {\r\n      \"value\": 5700\r\n    },\r\n    \"SafeWaitHandle\": {\r\n      \"IsInvalid\": false,\r\n      \"IsClosed\": false\r\n    }\r\n  },\r\n  \"InstanceId\": \"fb2d01c8-b861-4563-bd58-18d0e3cb345e\",\r\n  \"Id\": 3,\r\n  \"Name\": \"a job\",\r\n  \"ChildJobs\": [\r\n    {\r\n      \"StatusMessage\": \"\",\r\n      \"HasMoreData\": false,\r\n      \"Location\": \"localhost\",\r\n      \"Runspace\": \"System.Management.Automation.RemoteRunspace\",\r\n      \"Debugger\": \"System.Management.Automation.RemotingJobDebugger\",\r\n      \"IsAsync\": true,\r\n      \"Command\": \"[CmdletBinding()]\\nparam (\\n    [Parameter(Mandatory=$true, HelpMessage=\\\"The admin password for the VM\\\")]\\n    [System.Security.SecureString] $Password\\n)\\n\\n\\n$DebugPreference = \\\"Continue\\\" \\nSet-StrictMode -Version Latest\\n\\nreturn \\\"Succeeded\\\"\",\r\n      \"JobStateInfo\": \"Failed\",\r\n      \"Finished\": \"System.Threading.ManualResetEvent\",\r\n      \"InstanceId\": \"0371e42b-eb2e-4b26-9787-77c9afeb94bf\",\r\n      \"Id\": 4,\r\n      \"Name\": \"Job4\",\r\n      \"ChildJobs\": \"\",\r\n      \"PSBeginTime\": null,\r\n      \"PSEndTime\": \"2020-03-13T02:05:22.3741521+00:00\",\r\n      \"PSJobTypeName\": \"\",\r\n      \"Output\": \"\",\r\n      \"Error\": \"\",\r\n      \"Progress\": \"\",\r\n      \"Verbose\": \"\",\r\n      \"Debug\": \"\",\r\n      \"Warning\": \"\",\r\n      \"Information\": \"\"\r\n    }\r\n  ],\r\n  \"PSBeginTime\": \"2020-03-13T02:05:21.5682664+00:00\",\r\n  \"PSEndTime\": \"2020-03-13T02:05:22.3741626+00:00\",\r\n  \"PSJobTypeName\": \"BackgroundJob\",\r\n  \"Output\": [],\r\n  \"Error\": [],\r\n  \"Progress\": [],\r\n  \"Verbose\": [],\r\n  \"Debug\": [],\r\n  \"Warning\": [],\r\n  \"Information\": [],\r\n  \"State\": \"Failed\"\r\n}\r\n```\r\n\r\n",
      "created_at": "2020-03-13T02:09:24Z",
      "updated_at": "2020-03-13T02:09:24Z"
    },
    {
      "author": "0x6797",
      "author_association": "NONE",
      "body": "Should I avoid to use SecureString?\r\nhttps://github.com/PowerShell/PowerShell/issues/12114#issuecomment-598192488\r\n\r\nIf so, Could I see a warning or a 'deprecated' message when I would use ConvertTo-SecureString.\r\n",
      "created_at": "2020-03-13T02:26:26Z",
      "updated_at": "2020-03-13T02:26:26Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I ask about error because I guess there is the same error as in https://github.com/PowerShell/PowerShell/issues/4952. I guess it is an issue with libme on Unix/MacOs.\r\nPerhaps @PaulHigin have thoughts.",
      "created_at": "2020-03-13T03:46:32Z",
      "updated_at": "2020-03-13T03:46:32Z"
    },
    {
      "author": "0x6797",
      "author_association": "NONE",
      "body": "Thank you for your response.\r\nCould you tell me how to get errors in my environment?",
      "created_at": "2020-03-13T03:59:15Z",
      "updated_at": "2020-03-13T03:59:15Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "If Get-Error show nothing you could build and debug.\r\n\r\nAlso direct call Exec-Job.ps1 works well?",
      "created_at": "2020-03-13T04:28:46Z",
      "updated_at": "2020-03-13T04:29:48Z"
    },
    {
      "author": "0x6797",
      "author_association": "NONE",
      "body": "Is here what you want?\r\n\r\n```yaml\r\nType           : System.Management.Automation.CmdletInvocationException\r\nErrorRecord    : \r\n    Exception             : \r\n        Type        : System.Management.Automation.PSArgumentOutOfRangeException\r\n        ErrorRecord : \r\n            Exception             : \r\n                Type    : System.Management.Automation.ParentContainsErrorRecordException\r\n                Message : The scope number '1' exceeds the number of active scopes. (Parameter 'Scope')\r\n                          Actual value was 1.\r\n                HResult : -2146233087\r\n            CategoryInfo          : InvalidArgument: (:) [], ParentContainsErrorRecordException\r\n            FullyQualifiedErrorId : ArgumentOutOfRange\r\n        Message     : The scope number '1' exceeds the number of active scopes. (Parameter 'Scope')\r\n                      Actual value was 1.\r\n        ActualValue : 1\r\n        ParamName   : Scope\r\n        TargetSite  : \r\n            Name          : GetScopeByID\r\n            DeclaringType : System.Management.Automation.SessionStateInternal, System.Management.Automation, Version=7.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\r\n            MemberType    : Method\r\n            Module        : System.Management.Automation.dll\r\n        StackTrace  : \r\n   at System.Management.Automation.SessionStateInternal.GetScopeByID(Int32 scopeID)\r\n   at System.Management.Automation.SessionStateInternal.GetScopeByID(String scopeID)\r\n   at System.Management.Automation.SessionStateInternal.GetVariableTableAtScope(String scopeID)\r\n   at Microsoft.PowerShell.Commands.VariableCommandBase.GetMatchingVariables(String name, String lookupScope, Boolean& wasFiltered, Boolean quiet)\r\n   at Microsoft.PowerShell.Commands.GetVariableCommand.ProcessRecord()\r\n   at System.Management.Automation.Cmdlet.DoProcessRecord()\r\n   at System.Management.Automation.CommandProcessor.ProcessRecord()\r\n        Source      : System.Management.Automation\r\n        HResult     : -2146233086\r\n    CategoryInfo          : InvalidArgument: (:) [Get-Variable], PSArgumentOutOfRangeException\r\n    FullyQualifiedErrorId : ArgumentOutOfRange,Microsoft.PowerShell.Commands.GetVariableCommand\r\n    InvocationInfo        : \r\n        MyCommand       : Get-Variable\r\n        HistoryId       : 24\r\n        InvocationName  : Get-Variable\r\n        CommandOrigin   : Internal\r\n    ScriptStackTrace      : at <ScriptBlock>, /home/hayashi_toshiki/Documents/azure-powershell-jobs/Exec-Parallel-Jobs.ps1: line 22\r\n                            at <ScriptBlock>, <No file>: line 1\r\n    PipelineIterationInfo :\r\n\r\n\r\n\r\nTargetSite     : \r\n    Name          : Invoke\r\n    DeclaringType : System.Management.Automation.Runspaces.PipelineBase, System.Management.Automation, Version=7.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\r\n    MemberType    : Method\r\n    Module        : System.Management.Automation.dll\r\nStackTrace     : \r\n   at System.Management.Automation.Runspaces.PipelineBase.Invoke(IEnumerable input)\r\n   at System.Management.Automation.Runspaces.Pipeline.Invoke()\r\n   at System.Management.Automation.PowerShell.Worker.ConstructPipelineAndDoWork(Runspace rs, Boolean performSyncInvoke)\r\n   at System.Management.Automation.PowerShell.CoreInvokeHelper[TInput,TOutput](PSDataCollection`1 input, PSDataCollection`1 output, PSInvocationSettings settings)\r\n   at System.Management.Automation.PowerShell.CoreInvoke[TInput,TOutput](PSDataCollection`1 input, PSDataCollection`1 output, PSInvocationSettings settings)\r\n   at System.Management.Automation.PowerShell.CoreInvoke[TOutput](IEnumerable input, PSDataCollection`1 output, PSInvocationSettings settings)\r\n   at System.Management.Automation.PowerShell.Invoke[T](IEnumerable input, IList`1 output, PSInvocationSettings settings)\r\n   at System.Management.Automation.PowerShell.Invoke[T](IEnumerable input, PSInvocationSettings settings)\r\n   at Microsoft.PowerShell.EditorServices.Services.PowerShellContextService.ExecuteCommandAsync[TResult](PSCommand psCommand, StringBuilder errorMessages, ExecutionOptions executionOptions) in D:\\a\\1\\s\\src\\PowerShellEditorServices\\Services\\PowerShellContext\\PowerShellContextService.cs:line 760\r\n   at Microsoft.PowerShell.EditorServices.Services.PowerShellContextService.ExecuteCommandAsync[TResult](PSCommand psCommand, StringBuilder errorMessages, ExecutionOptions executionOptions) in D:\\a\\1\\s\\src\\PowerShellEditorServices\\Services\\PowerShellContext\\PowerShellContextService.cs:line 809\r\nMessage        : The scope number '1' exceeds the number of active scopes. (Parameter 'Scope')\r\n                 Actual value was 1.\r\nInnerException : \r\n    Type        : System.Management.Automation.PSArgumentOutOfRangeException\r\n    ErrorRecord : \r\n        Exception             : \r\n            Type    : System.Management.Automation.ParentContainsErrorRecordException\r\n            Message : The scope number '1' exceeds the number of active scopes. (Parameter 'Scope')\r\n                      Actual value was 1.\r\n            HResult : -2146233087\r\n        CategoryInfo          : InvalidArgument: (:) [], ParentContainsErrorRecordException\r\n        FullyQualifiedErrorId : ArgumentOutOfRange\r\n    Message     : The scope number '1' exceeds the number of active scopes. (Parameter 'Scope')\r\n                  Actual value was 1.\r\n    ActualValue : 1\r\n    ParamName   : Scope\r\n    TargetSite  : \r\n        Name          : GetScopeByID\r\n        DeclaringType : System.Management.Automation.SessionStateInternal, System.Management.Automation, Version=7.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\r\n        MemberType    : Method\r\n        Module        : System.Management.Automation.dll\r\n    StackTrace  : \r\n   at System.Management.Automation.SessionStateInternal.GetScopeByID(Int32 scopeID)\r\n   at System.Management.Automation.SessionStateInternal.GetScopeByID(String scopeID)\r\n   at System.Management.Automation.SessionStateInternal.GetVariableTableAtScope(String scopeID)\r\n   at Microsoft.PowerShell.Commands.VariableCommandBase.GetMatchingVariables(String name, String lookupScope, Boolean& wasFiltered, Boolean quiet)\r\n   at Microsoft.PowerShell.Commands.GetVariableCommand.ProcessRecord()\r\n   at System.Management.Automation.Cmdlet.DoProcessRecord()\r\n   at System.Management.Automation.CommandProcessor.ProcessRecord()\r\n    Source      : System.Management.Automation\r\n    HResult     : -2146233086\r\nSource         : System.Management.Automation\r\nHResult        : -2146233087\r\n```\r\n\r\n> Also direct call Exec-Job.ps1 works well?\r\n\r\nI called Exec-Job.ps1 directly, and it completed normally.\r\nBut, I could see System.Management.Automation.CmdletInvocationException in invoking that script.\r\n\r\nHere is.\r\n\r\n```yaml\r\nType           : System.Management.Automation.CmdletInvocationException\r\nErrorRecord    : \r\n    Exception             : \r\n        Type        : System.Management.Automation.PSArgumentOutOfRangeException\r\n        ErrorRecord : \r\n            Exception             : \r\n                Type    : System.Management.Automation.ParentContainsErrorRecordException\r\n                Message : The scope number '1' exceeds the number of active scopes. (Parameter 'Scope')\r\n                          Actual value was 1.\r\n                HResult : -2146233087\r\n            CategoryInfo          : InvalidArgument: (:) [], ParentContainsErrorRecordException\r\n            FullyQualifiedErrorId : ArgumentOutOfRange\r\n        Message     : The scope number '1' exceeds the number of active scopes. (Parameter 'Scope')\r\n                      Actual value was 1.\r\n        ActualValue : 1\r\n        ParamName   : Scope\r\n        TargetSite  : \r\n            Name          : GetScopeByID\r\n            DeclaringType : System.Management.Automation.SessionStateInternal, System.Management.Automation, Version=7.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\r\n            MemberType    : Method\r\n            Module        : System.Management.Automation.dll\r\n        StackTrace  : \r\n   at System.Management.Automation.SessionStateInternal.GetScopeByID(Int32 scopeID)\r\n   at System.Management.Automation.SessionStateInternal.GetScopeByID(String scopeID)\r\n   at System.Management.Automation.SessionStateInternal.GetVariableTableAtScope(String scopeID)\r\n   at Microsoft.PowerShell.Commands.VariableCommandBase.GetMatchingVariables(String name, String lookupScope, Boolean& wasFiltered, Boolean quiet)\r\n   at Microsoft.PowerShell.Commands.GetVariableCommand.ProcessRecord()\r\n   at System.Management.Automation.Cmdlet.DoProcessRecord()\r\n   at System.Management.Automation.CommandProcessor.ProcessRecord()\r\n        Source      : System.Management.Automation\r\n        HResult     : -2146233086\r\n    CategoryInfo          : InvalidArgument: (:) [Get-Variable], PSArgumentOutOfRangeException\r\n    FullyQualifiedErrorId : ArgumentOutOfRange,Microsoft.PowerShell.Commands.GetVariableCommand\r\n    InvocationInfo        : \r\n        MyCommand       : Get-Variable\r\n        HistoryId       : 32\r\n        InvocationName  : Get-Variable\r\n        CommandOrigin   : Internal\r\n    ScriptStackTrace      : at <ScriptBlock>, /home/hayashi_toshiki/Documents/azure-powershell-jobs/Exec-Job.ps1: line 8\r\n                            at <ScriptBlock>, <No file>: line 1\r\n    PipelineIterationInfo : \r\n\r\n\r\n\r\nTargetSite     : \r\n    Name          : Invoke\r\n    DeclaringType : System.Management.Automation.Runspaces.PipelineBase, System.Management.Automation, Version=7.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\r\n    MemberType    : Method\r\n    Module        : System.Management.Automation.dll\r\nStackTrace     : \r\n   at System.Management.Automation.Runspaces.PipelineBase.Invoke(IEnumerable input)\r\n   at System.Management.Automation.Runspaces.Pipeline.Invoke()\r\n   at System.Management.Automation.PowerShell.Worker.ConstructPipelineAndDoWork(Runspace rs, Boolean performSyncInvoke)\r\n   at System.Management.Automation.PowerShell.CoreInvokeHelper[TInput,TOutput](PSDataCollection`1 input, PSDataCollection`1 output, PSInvocationSettings settings)\r\n   at System.Management.Automation.PowerShell.CoreInvoke[TInput,TOutput](PSDataCollection`1 input, PSDataCollection`1 output, PSInvocationSettings settings)\r\n   at System.Management.Automation.PowerShell.CoreInvoke[TOutput](IEnumerable input, PSDataCollection`1 output, PSInvocationSettings settings)\r\n   at System.Management.Automation.PowerShell.Invoke[T](IEnumerable input, IList`1 output, PSInvocationSettings settings)\r\n   at System.Management.Automation.PowerShell.Invoke[T](IEnumerable input, PSInvocationSettings settings)\r\n   at Microsoft.PowerShell.EditorServices.Services.PowerShellContextService.ExecuteCommandAsync[TResult](PSCommand psCommand, StringBuilder errorMessages, ExecutionOptions executionOptions) in D:\\a\\1\\s\\src\\PowerShellEditorServices\\Services\\PowerShellContext\\PowerShellContextService.cs:line 908\r\n   at Microsoft.PowerShell.EditorServices.Services.PowerShellContextService.ExecuteCommandAsync[TResult](PSCommand psCommand, StringBuilder errorMessages, ExecutionOptions executionOptions) in D:\\a\\1\\s\\src\\PowerShellEditorServices\\Services\\PowerShellContext\\PowerShellContextService.cs:line 908\r\nMessage        : The scope number '1' exceeds the number of active scopes. (Parameter 'Scope')\r\n                 Actual value was 1.\r\nInnerException : \r\n    Type        : System.Management.Automation.PSArgumentOutOfRangeException\r\n    ErrorRecord : \r\n        Exception             : \r\n            Type    : System.Management.Automation.ParentContainsErrorRecordException\r\n            Message : The scope number '1' exceeds the number of active scopes. (Parameter 'Scope')\r\n                      Actual value was 1.\r\n            HResult : -2146233087\r\n        CategoryInfo          : InvalidArgument: (:) [], ParentContainsErrorRecordException\r\n        FullyQualifiedErrorId : ArgumentOutOfRange\r\n    Message     : The scope number '1' exceeds the number of active scopes. (Parameter 'Scope')\r\n                  Actual value was 1.\r\n    ActualValue : 1\r\n    ParamName   : Scope\r\n    TargetSite  : \r\n        Name          : GetScopeByID\r\n        DeclaringType : System.Management.Automation.SessionStateInternal, System.Management.Automation, Version=7.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\r\n        MemberType    : Method\r\n        Module        : System.Management.Automation.dll\r\n    StackTrace  : \r\n   at System.Management.Automation.SessionStateInternal.GetScopeByID(Int32 scopeID)\r\n   at System.Management.Automation.SessionStateInternal.GetScopeByID(String scopeID)\r\n   at System.Management.Automation.SessionStateInternal.GetVariableTableAtScope(String scopeID)\r\n   at Microsoft.PowerShell.Commands.VariableCommandBase.GetMatchingVariables(String name, String lookupScope, Boolean& wasFiltered, Boolean quiet)\r\n   at Microsoft.PowerShell.Commands.GetVariableCommand.ProcessRecord()\r\n   at System.Management.Automation.Cmdlet.DoProcessRecord()\r\n   at System.Management.Automation.CommandProcessor.ProcessRecord()\r\n    Source      : System.Management.Automation\r\n    HResult     : -2146233086\r\nSource         : System.Management.Automation\r\nHResult        : -2146233087\r\n```\r\n",
      "created_at": "2020-03-13T05:51:38Z",
      "updated_at": "2020-03-13T05:51:38Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "I think the error is unrelated to `SecureString`, and instead relates to scoping:\r\n\r\nThe problem is that by using `Start-Job -FilePath`, the _content_ of the referenced script file executes _directly in the global scope_, and if your script contains attempts  to reference any scope _above_ the current scope - notably via `Get-Variable -Scope 1` - an error occurs, because the global scope is the topmost scope.\r\n\r\nHere's a simple demonstration:\r\n\r\n```powershell\r\n@'\r\n'in'\r\nGet-Variable HOME -Scope 1 -ValueOnly\r\n'out'\r\n'@ > t.ps1\r\n\r\nStart-Job -FilePath ./t.ps1 | Receive-Job -Wait -AutoRemove\r\n```\r\n\r\nIf you run `./t.ps1` directly, it'll work as expected and report the value of the automatic `$HOME` variable.\r\n\r\nBy contrast, the invocation via `Start-Job -FilePath` above yields the following:\r\n\r\n```none\r\nin\r\nGet-Variable: The scope number '1' exceeds the number of active scopes. (Parameter 'Scope')\r\nActual value was 1.\r\nout\r\n```",
      "created_at": "2020-03-14T19:33:09Z",
      "updated_at": "2020-03-14T19:33:09Z"
    }
  ],
  "created_at": "2020-03-12T06:34:20Z",
  "number": 12109,
  "state": "open",
  "title": "Jobs failed in Start-Job with an SecureString argument.",
  "updated_at": "2020-05-08T10:36:17Z"
}