{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11976",
  "author": "jpoehls",
  "body": "# Steps to reproduce\r\n\r\n1. Create a `C:\\temp\\repro.ps1` file with the following content:\r\n\r\n```powershell\r\n$global:ErrorView = 'ConciseView' # NormalView and CategoryView work as expected\r\n\r\n# Bug happens when the path is >= 128 characters long.\r\n# Shorten path to < 128 characters and it works as expected.\r\nResolve-Path -LiteralPath 'C:\\really\\long\\path\\that\\does\\not\\exist\\but\\is\\exactly\\128\\characters\\long\\and\\breaks\\the\\world\\which\\is\\not\\great.oops.2bad.exe'\r\n```\r\n\r\n2. Open a PowerShell 7 RC3 prompt\r\n3. Run this command `c:\\temp\\repro.ps1`\r\n\r\n# Expected behavior\r\n\r\nConcise error view should be shown:\r\n\r\n```none\r\nResolve-Path: C:\\temp\\repro.ps1:5\r\nLine |\r\n   5 |  Resolve-Path -LiteralPath 'C:\\really\\long\\path\\that\\does\\not\\exist\\bu \u2026\r\n     |  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n     | Cannot find path\r\n     | 'C:\\really\\long\\path\\that\\does\\not\\exist\\but\\i\\exactly\\128\\characters\\long\\and\\breaks\\the\\world\\which\\is\\not\\great.oops.2bad.exe'\r\n     | because it does not exist.\r\n```\r\n\r\n# Actual behavior\r\n\r\n* No error is written to the host.\r\n* `$? = True`\r\n* `Get-Error` returns information about an exception thrown by `Get-ConciseViewPositionMessage`.\r\n\r\n```none\r\nException             :\r\n    Type           : System.Management.Automation.MethodInvocationException\r\n    ErrorRecord    :\r\n        Exception             :\r\n            Type    : System.Management.Automation.ParentContainsErrorRecordException\r\n            Message : Exception calling \"Substring\" with \"1\" argument(s): \"StartIndex cannot be less than zero. (Parameter 'startIndex')\"\r\n            HResult : -2146233087\r\n        CategoryInfo          : NotSpecified: (:) [], ParentContainsErrorRecordException\r\n        FullyQualifiedErrorId : ArgumentOutOfRangeException\r\n        InvocationInfo        :\r\n            ScriptLineNumber : 171\r\n            OffsetInLine     : 53\r\n            HistoryId        : -1\r\n            Line             : $remainingMessage = $remainingMessage.Substring($substring.Length - $prefix.Length).Trim()\r\n\r\n            PositionMessage  : At line:171 char:53\r\n                               + \u2026             $remainingMessage = $remainingMessage.Substring($substrin \u2026\r\n                               +               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n            CommandOrigin    : Internal\r\n        ScriptStackTrace      : at Get-ConciseViewPositionMessage, <No file>: line 171\r\n                                at <ScriptBlock>, <No file>: line 227\r\n                                at <ScriptBlock>, C:\\temp\\repro.ps1: line 5\r\n                                at <ScriptBlock>, <No file>: line 1\r\n    TargetSite     :\r\n        Name          : CheckActionPreference\r\n        DeclaringType : System.Management.Automation.ExceptionHandlingOps, System.Management.Automation, Version=7.0.0.0, Culture=neutral,\r\nPublicKeyToken=31bf3856ad364e35\r\n        MemberType    : Method\r\n        Module        : System.Management.Automation.dll\r\n    StackTrace     :\r\n   at System.Management.Automation.ExceptionHandlingOps.CheckActionPreference(FunctionContext funcContext, Exception exception)\r\n   at System.Management.Automation.Interpreter.ActionCallInstruction`2.Run(InterpretedFrame frame)\r\n   at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.Run(InterpretedFrame frame)\r\n   at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.Run(InterpretedFrame frame)\r\n   at System.Management.Automation.Interpreter.Interpreter.Run(InterpretedFrame frame)\r\n   at System.Management.Automation.Interpreter.LightLambda.RunVoid1[T0](T0 arg0)\r\n   at System.Management.Automation.ScriptBlock.InvokeWithPipeImpl(ScriptBlockClauseToInvoke clauseToInvoke, Boolean createLocalScope,\r\nDictionary`2 functionsToDefine, List`1 variablesToDefine, ErrorHandlingBehavior errorHandlingBehavior, Object dollarUnder, Object input, Object\r\nscriptThis, Pipe outputPipe, InvocationInfo invocationInfo, Object[] args)\r\n   at System.Management.Automation.ScriptBlock.InvokeWithPipe(Boolean useLocalScope, ErrorHandlingBehavior errorHandlingBehavior, Object\r\ndollarUnder, Object input, Object scriptThis, Pipe outputPipe, InvocationInfo invocationInfo, Boolean propagateAllExceptionsToTop, List`1\r\nvariablesToDefine, Dictionary`2 functionsToDefine, Object[] args)\r\n   at System.Management.Automation.ScriptBlock.DoInvokeReturnAsIs(Boolean useLocalScope, ErrorHandlingBehavior errorHandlingBehavior, Object\r\ndollarUnder, Object input, Object scriptThis, Object[] args)\r\n   at Microsoft.PowerShell.Commands.PSPropertyExpression.GetValue(PSObject target, Boolean eatExceptions)\r\n    Message        : Exception calling \"Substring\" with \"1\" argument(s): \"StartIndex cannot be less than zero. (Parameter 'startIndex')\"\r\n    Data           : System.Collections.ListDictionaryInternal\r\n    InnerException :\r\n        Type       : System.ArgumentOutOfRangeException\r\n        Message    : StartIndex cannot be less than zero. (Parameter 'startIndex')\r\n        ParamName  : startIndex\r\n        TargetSite :\r\n            Name          : Substring\r\n            DeclaringType : string\r\n            MemberType    : Method\r\n            Module        : System.Private.CoreLib.dll\r\n        StackTrace :\r\n   at System.String.Substring(Int32 startIndex, Int32 length)\r\n   at CallSite.Target(Closure , CallSite , Object , Object )\r\n        Source     : System.Private.CoreLib\r\n        HResult    : -2146233086\r\n    Source         : System.Management.Automation\r\n    HResult        : -2146233087\r\nCategoryInfo          : NotSpecified: (:) [], MethodInvocationException\r\nFullyQualifiedErrorId : ArgumentOutOfRangeException\r\nInvocationInfo        :\r\n    ScriptLineNumber : 171\r\n    OffsetInLine     : 53\r\n    HistoryId        : -1\r\n    Line             : $remainingMessage = $remainingMessage.Substring($substring.Length - $prefix.Length).Trim()\r\n\r\n    PositionMessage  : At line:171 char:53\r\n                       + \u2026             $remainingMessage = $remainingMessage.Substring($substrin \u2026\r\n                       +               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    CommandOrigin    : Internal\r\nScriptStackTrace      : at Get-ConciseViewPositionMessage, <No file>: line 171\r\n                        at <ScriptBlock>, <No file>: line 227\r\n                        at <ScriptBlock>, C:\\temp\\repro.ps1: line 5\r\n                        at <ScriptBlock>, <No file>: line 1\r\n```\r\n\r\n# Environment data\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-rc.3\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-rc.3\r\nOS                             Microsoft Windows 10.0.17763\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2020-02-28T20:41:10Z",
  "comments": [
    {
      "author": "jpoehls",
      "author_association": "NONE",
      "body": "Assuming this isn't something unique to my environment, this is a critical issue since the concise error view is the new default and this bug results on errors not being shown to users in some cases.",
      "created_at": "2020-02-28T18:37:20Z",
      "updated_at": "2020-02-28T18:37:20Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Perhaps it was fixed in #11941 /cc @SteveL-MSFT ",
      "created_at": "2020-02-28T19:39:40Z",
      "updated_at": "2020-02-28T19:39:40Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "This is already fixed via https://github.com/PowerShell/PowerShell/pull/11880, we should consider it for 7.0.1",
      "created_at": "2020-02-28T20:38:03Z",
      "updated_at": "2020-02-28T20:38:03Z"
    }
  ],
  "created_at": "2020-02-28T18:35:12Z",
  "number": 11976,
  "state": "closed",
  "title": "Get-ConciseViewPositionMessage throws ArgumentOutOfRangeException in some cases",
  "updated_at": "2020-02-28T20:41:10Z"
}