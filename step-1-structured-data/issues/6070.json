{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6070",
  "author": "dantraMSFT",
  "body": "Currently, the only method a cmdlet has for stopping pipeline input is to throw an exception. However, doing so loses output that the cmdlet may have written.  \r\n\r\nIn contrast, built in cmdlets have this capability.  For example, Select-Object -First is able to cancel processing of subsequent input objects when the number of objects specified by -First is met. \r\n\r\nIn many cases, the limitation can be addressed by simply placing a Select-Object statement at the end of the pipeline but only if the constraint is a count of objects.  In the cases where the constraint is not a simple count of objects, there is no direct method for accomplishing the same result.\r\n\r\nThis enhancement proposes providing the same capability to external managed and script-based cmdlets.\r\n\r\nNOTE: Select-Object cancels pipeline input by throwing the internal exception StopUpstreamCommandsException.  A simple solution would be to mark this exception as public or provide a static method that encapsulates it.",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Dup #3821",
      "created_at": "2018-01-31T09:24:14Z",
      "updated_at": "2018-01-31T09:24:14Z"
    }
  ],
  "created_at": "2018-01-30T21:26:27Z",
  "labels": [
    "Issue-Enhancement",
    "WG-Cmdlets"
  ],
  "number": 6070,
  "state": "open",
  "title": "Provide support for cmdlets to stop the pipeline input gracefully",
  "updated_at": "2018-01-31T09:24:15Z"
}