{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11097",
  "author": "vexx32",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nPrior to this PR, a hashtable piped into `Select-Object -[Expand]Property Keys` where the user expected `Keys` to retrieve the _property value_ from the hashtable rather than the _dictionary entry_ would return no value (in the case of -ExpandProperty, an error would be emitted, stating that the property could not be found).\r\n\r\nThis PR fixes this issue, and examines hashtable members as well as their key/value entries. The logic is designed such that hashtable key/values are still prioritised over hashtable members, so if a user creates a hashtable such as `@{ Keys = \"None\" }` and then selects the `Keys` property via Select-Object, it will have the same result as using `$ht.Keys` already does: the returned value will always prioritise an actual key/value entry over the hashtable members.\r\n\r\nNote that this means creating a hashtable with a key named `Keys` will prevent access to the `Keys` member on the hashtable in this manner. This new behaviour is consistent with existing behaviour with retrieval of hashtable keys, and also consistent with dot-property access behaviour with hashtables -- you can access `$ht.Keys` up until you add a key with the name `Keys`, at which point you will always get that key value back.\r\n\r\nTests have been added to cover these cases explicitly.\r\n\r\n## PR Context\r\n\r\nUsers should be able to utilise hashtables as actual hashtable objects as well as pseudo-PSObjects where appropriate. It is disingenuous for these commands to pretend hashtables don't have other members which may be desired in some circumstances.\r\n\r\nThis PR fixes #11094 \r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [ ] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [x] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2020-06-19T22:46:55Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Note for reviewers -- the Select-Object test file hasn't been updated in a _long_ time (still using tabs instead of spaces) so I included a format-only commit 6544c98 to sort that separately. You'll probably want to review that commit individually and then the following one for added tests.\r\n\r\nNo existing tests were modified in this PR apart from the formatting fixes. I only did a quick tabs-to-spaces and then auto-format commit, so if there are specific style issues you also want to fix while I'm there let me know, we can fix them either here or in a follow up PR as necessary. \ud83d\ude42 ",
      "created_at": "2019-11-18T05:45:48Z",
      "updated_at": "2019-11-18T05:46:07Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Also, I think the Codacy suggestion to make `IfHashtableWrapAsPSCustomObject()` a static method can be ignored. \ud83d\ude04 ",
      "created_at": "2019-11-18T05:49:57Z",
      "updated_at": "2019-11-18T05:49:57Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Hmm, interesting. Didn't expect to break that, but there you have it. \r\n",
      "created_at": "2019-11-18T06:07:29Z",
      "updated_at": "2019-11-18T06:09:00Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@PoshChan please remind me in 17 hours",
      "created_at": "2019-11-18T06:09:07Z",
      "updated_at": "2019-11-18T06:09:07Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@vexx32 The PR description is more complex than the fix :-)",
      "created_at": "2019-11-18T08:52:38Z",
      "updated_at": "2019-11-18T08:52:38Z"
    },
    {
      "author": "PoshChan",
      "author_association": "COLLABORATOR",
      "body": "@vexx32, this is the reminder you requested 17 hours ago",
      "created_at": "2019-11-18T23:09:17Z",
      "updated_at": "2019-11-18T23:09:17Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "That was simpler than I expected! \ud83c\udf89 ",
      "created_at": "2019-11-18T23:24:34Z",
      "updated_at": "2019-11-18T23:24:34Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@PoshChan please retry macos",
      "created_at": "2019-11-19T00:06:14Z",
      "updated_at": "2019-11-19T00:06:14Z"
    },
    {
      "author": "PoshChan",
      "author_association": "COLLABORATOR",
      "body": "@vexx32, successfully started retry of `PowerShell-CI-macOS`",
      "created_at": "2019-11-19T00:06:53Z",
      "updated_at": "2019-11-19T00:06:53Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMainainer, Please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2020-05-27T02:02:26Z",
      "updated_at": "2020-05-27T02:02:26Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@vexx32 Please look CI failures.",
      "created_at": "2020-06-11T07:25:22Z",
      "updated_at": "2020-06-11T07:25:22Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@vexx32 The test failure in mac CI is a known issue. Can you please check on the Windows failure?",
      "created_at": "2020-06-12T23:52:12Z",
      "updated_at": "2020-06-12T23:52:12Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "That's one I haven't seen before. Something to do with remoting? Not sure what to make of it \ud83d\ude05 \r\n\r\n```\r\nUnhandled exception. System.NullReferenceException: Object reference not set to an instance of an object.\r\n   at System.Management.Automation.Remoting.PrioritySendDataCollection.ReadOrRegisterCallback(OnDataAvailableCallback callback, DataPriorityType& priorityType) in D:\\a\\1\\s\\src\\System.Management.Automation\\engine\\remoting\\fanin\\PriorityCollection.cs:line 240\r\n   at System.Management.Automation.Remoting.Client.WSManClientCommandTransportManager.SendOneItem() in D:\\a\\1\\s\\src\\System.Management.Automation\\engine\\remoting\\fanin\\WSManTransportManager.cs:line 3975\r\n\r\n   at System.Management.Automation.Remoting.Client.WSManClientCommandTransportManager.OnRemoteCmdSendCompleted(IntPtr operationContext, Int32 flags, IntPtr error, IntPtr shellOperationHandle, IntPtr commandOperationHandle, IntPtr operationHandle, IntPtr data) in D:\\a\\1\\s\\src\\System.Management.Automation\\engine\\remoting\\fanin\\WSManTransportManager.cs:line 3681\r\nAn error has occurred that was not properly handled. Additional information is shown below. The PowerShell process will exit.\r\nExecution of {& $powershell $PSFlags -c $command} by build.psm1: line 1332 failed with exit code -1073741819\r\nAt D:\\a\\1\\s\\build.psm1:2191 char:17\r\n+                 throw $errorMessage\r\n+                 ~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : OperationStopped: (Execution of {& $po\u2026it code -1073741819:String) [], RuntimeException\r\n+ FullyQualifiedErrorId : Execution of {& $powershell $PSFlags -c $command} by build.psm1: line 1332 failed with exit code -1073741819\r\n##[error]PowerShell exited with code '1'.\r\n```",
      "created_at": "2020-06-13T00:05:42Z",
      "updated_at": "2020-06-13T00:05:42Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@PoshChan please retry windows",
      "created_at": "2020-06-15T17:41:10Z",
      "updated_at": "2020-06-15T17:41:10Z"
    },
    {
      "author": "PoshChan",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw, did not find any matching pull request checks",
      "created_at": "2020-06-15T17:41:34Z",
      "updated_at": "2020-06-15T17:41:34Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@iSazonov It was called out at https://github.com/PowerShell/PowerShell/pull/11097#issuecomment-554862128 that there is a format-only commit included.\r\nI'm fine to keep that commit in this PR because this test file was seldom touched.\r\n\r\nBTW @iSazonov, it's easier to review after ignoring the white space characters: https://github.com/PowerShell/PowerShell/pull/11097/files?w=1",
      "created_at": "2020-06-15T20:31:20Z",
      "updated_at": "2020-06-16T17:24:34Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Apologies about the mangled tests, not sure how that happened. Should be all fixed up now. \ud83d\udc96 \ud83d\ude0a ",
      "created_at": "2020-06-19T16:17:20Z",
      "updated_at": "2020-06-19T16:17:20Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.1.0-preview.4` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.1.0-preview.4)\n",
      "created_at": "2020-06-25T19:07:17Z",
      "updated_at": "2020-06-25T19:07:17Z"
    }
  ],
  "created_at": "2019-11-18T05:39:32Z",
  "number": 11097,
  "state": "closed",
  "title": "Fix Issue in Select-Object where Hashtable members (e.g., `Keys`) cannot be used with -Property or -ExpandProperty",
  "updated_at": "2020-06-25T19:07:17Z"
}