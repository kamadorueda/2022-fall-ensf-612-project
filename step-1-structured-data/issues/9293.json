{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9293",
  "author": "Halkcyon",
  "body": "# Steps to reproduce\r\n\r\nSteps documented below.  `$PWD.Path` populates, but other members break (returning `$null`).  This behavior does not happen by using `Set-Location` without piping.\r\n\r\n# Expected behavior\r\n\r\n```powershell\r\n$ > Set-Location -Path C:\\\r\n$ > $PWD.Drive\r\n\r\nName           Used (GB)     Free (GB) Provider      Root\r\n----           ---------     --------- --------      ----\r\nC                  50.00        100.00 FileSystem    C:\\\r\n\r\n$ > Get-Item -Path C:\\Windows | Set-Location\r\n$ > $PWD.Drive\r\n\r\nName           Used (GB)     Free (GB) Provider      Root\r\n----           ---------     --------- --------      ----\r\nC                  50.00        100.00 FileSystem    C:\\\r\n\r\n$ >\r\n```\r\n\r\n# Actual behavior\r\n\r\n```powershell\r\n$ > Set-Location -Path C:\\\r\n$ > $PWD.Drive\r\n\r\nName           Used (GB)     Free (GB) Provider      Root\r\n----           ---------     --------- --------      ----\r\nC                  50.00        100.00 FileSystem    C:\\\r\n\r\n$ > Get-Item -Path C:\\Windows | Set-Location\r\n$ > $PWD.Drive\r\n$ >\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.2.0\r\nPSEdition                      Core\r\nGitCommitId                    6.2.0\r\nOS                             Microsoft Windows 6.1.7601 S\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "The issue isn't the pipe here, it's the type of item you're providing. You're piping in a `DirectoryInfo` _object_ and not a string, which seems to cause Set-Location to actually use the `PSPath` property, seen here:\r\n\r\n```\r\nPS Microsoft.PowerShell.Core\\FileSystem::C:\\windows> get-item c:\\windows | Set-location\r\nPS Microsoft.PowerShell.Core\\FileSystem::C:\\windows> $pwd|fl *\r\n\r\nDrive        : \r\nProvider     : Microsoft.PowerShell.Core\\FileSystem\r\nProviderPath : C:\\windows\r\nPath         : Microsoft.PowerShell.Core\\FileSystem::C:\\windows\r\n```\r\n\r\nEither the `Set-Location` command needs to be updated to normalize the path it's using properly, or whatever it's calling that causes $pwd to be updated needs to be fixed. Ideally, I'd want both fixed to double-check each other, tbh, just in case someone tries to be funny and update it themselves somehow in a weird way.",
      "created_at": "2019-04-04T17:51:20Z",
      "updated_at": "2019-04-04T17:52:37Z"
    },
    {
      "author": "Halkcyon",
      "author_association": "NONE",
      "body": "@vexx32 Thanks for the additional digging.  I found this behavior also exists on Windows PowerShell.  I noticed it because it kept breaking `$Function:prompt`\r\n",
      "created_at": "2019-04-04T18:28:31Z",
      "updated_at": "2019-04-04T18:29:05Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Aaaand I figured out a way to fix it.\r\n\r\n```\r\nPS Z:\\Scripts\\PowerShell-Core> gi c:\\windows|set-location\r\nPS C:\\windows> $pwd\r\n\r\nPath\r\n----\r\nC:\\windows\r\n\r\nPS C:\\windows> $pwd|fl *\r\n\r\nDrive        : C\r\nProvider     : Microsoft.PowerShell.Core\\FileSystem\r\nProviderPath : C:\\windows\r\nPath         : C:\\windows\r\n```",
      "created_at": "2019-04-04T18:46:55Z",
      "updated_at": "2019-04-04T18:46:55Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "_Update_: This may be a separate problem - see #10522\r\n\r\n---\r\n\r\nAs of 7.0.0-preview.3, the problem is now more conspicuous:\r\n\r\n```\r\nPS> Get-Item / | Set-Location\r\nPS Microsoft.PowerShell.Core\\FileSystem::>\r\n```\r\n\r\nNote the broken current location reported via the `prompt` function, based on the stringification of `$executionContext.SessionState.Path.CurrentLocation` (effectively, its `.Path` property).\r\n\r\n(As an aside: on Windows you'd get `PS Microsoft.PowerShell.Core\\FileSystem::C:\\>`, but on Unix the `/` gets eaten.)\r\n\r\n\r\n",
      "created_at": "2019-09-12T17:07:40Z",
      "updated_at": "2019-09-12T17:26:54Z"
    }
  ],
  "created_at": "2019-04-04T16:51:54Z",
  "labels": [
    "Issue-Question",
    "WG-Cmdlets-Management",
    "Area-FileSystem-Provider"
  ],
  "number": 9293,
  "state": "open",
  "title": "`Set-Location` breaks `$PWD`",
  "updated_at": "2021-12-10T03:01:13Z"
}