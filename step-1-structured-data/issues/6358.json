{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6358",
  "author": "kalgiz",
  "body": "## PR Summary\r\n\r\nTerminate the loop in PsUtils.GetMainModule() which was infinite when there was no main module (mainModule variable was always null which was a condition to continue entering the loop). That caused the commands like e.g. Get-Process -FileVersionInfo to hang on Linux.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [ ] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` to the beginning of the title and remove the prefix when the PR is ready.\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] User-facing [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed - Issue link:\r\n- **Testing - New and feature**\r\n    - [x] Not Applicable or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n        - [ ] [Add `[feature]` if the change is significant or affects feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\r\n",
  "closed_at": "2018-04-03T17:58:07Z",
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@kalgiz can you add a test for `Get-Process -FileVersion` where it currently hangs?  Seems like either we don't have such a test already or that test only runs on Windows.",
      "created_at": "2018-03-20T20:17:00Z",
      "updated_at": "2018-03-20T20:17:00Z"
    },
    {
      "author": "kalgiz",
      "author_association": "CONTRIBUTOR",
      "body": "I added test for idle process, but I am not sure how to test that it doesn't hang.",
      "created_at": "2018-03-20T22:43:19Z",
      "updated_at": "2018-03-20T22:43:19Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@kalgiz \r\n>I added test for idle process, but I am not sure how to test that it doesn't hang.\r\n\r\nWe could use new runspace and `Wait-UntilTrue()` help function.",
      "created_at": "2018-03-21T03:44:57Z",
      "updated_at": "2018-03-21T03:44:57Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov in general, I think we should only use `Wait-UntilTrue` for scriptblocks we expect to take some time and may take longer than expected (like making a web request).  In this case, the call is expected to return immediately, so I don't think there's a need to wrap it in `Wait-UntilTrue` otherwise we'd do that everywhere (and would be best if Pester had some automatic timeout capability which is an open issue for them already).\r\n\r\nI also noticed that `Wait-UntilTrue` doesn't work exactly as expected.  If the pipeline is blocked, the timeout never happens.  That helper should be rewritten to invoke the scriptblock async.",
      "created_at": "2018-03-23T18:51:22Z",
      "updated_at": "2018-03-23T18:51:22Z"
    },
    {
      "author": "kalgiz",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov Wait-UntilTrue seems more appropriate for more complex operations, involving other components, which might take some time. This one is expected to perform immediately.",
      "created_at": "2018-03-23T19:24:47Z",
      "updated_at": "2018-03-23T19:24:47Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@kalgiz Please fix the Travis CI build.",
      "created_at": "2018-03-26T22:15:49Z",
      "updated_at": "2018-03-26T22:15:49Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@kalgiz  Restarted CI as an unrelated test failed.",
      "created_at": "2018-03-28T18:02:29Z",
      "updated_at": "2018-03-28T18:02:29Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@daxian-dbw Are you signed off?",
      "created_at": "2018-03-28T20:15:11Z",
      "updated_at": "2018-03-28T20:15:11Z"
    }
  ],
  "created_at": "2018-03-10T01:58:34Z",
  "number": 6358,
  "state": "closed",
  "title": "Terminate the loop in PsUtils.GetMainModule() which was infinite in case there was no main module.",
  "updated_at": "2018-04-03T17:58:07Z"
}