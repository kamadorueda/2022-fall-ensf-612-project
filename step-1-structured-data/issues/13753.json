{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13753",
  "author": "eabase",
  "body": "The following issues have been raised in the Win32-OpenSSH repo:\r\n\r\n* https://github.com/PowerShell/Win32-OpenSSH/issues/1677\r\n* https://github.com/PowerShell/Win32-OpenSSH/issues/1672\r\n* https://github.com/PowerShell/Win32-OpenSSH/issues/784\r\n\r\nIt describe how the **`Subsystem .../pwsh.exe -sshs -NoLogo -NoProfile`** is not being respected. \r\n\r\nIt's not clear if this is a powershell issue or a  Win32-OpenSSH issue?\r\n",
  "closed_at": "2020-10-08T19:00:07Z",
  "comments": [
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "@eabase \r\n\r\nCan you please provide all the necessary information that's required when submitting the issue?\r\n\r\n- Is this Windows PowerShell? PowerShell 7? or, PowerShell Preview.\r\n- Is this on Windows 10? or Server?\r\n- What's the OS Build?  \r\n- How can we reproduce the error?\r\n\r\nUse the $PSVersionTable, as it has been laid out when creating the issue in this repository.\r\n\r\nAll this information will help in getting to the bottom of the issue you're experiencing.\r\n\r\nThank You!",
      "created_at": "2020-10-06T18:03:52Z",
      "updated_at": "2020-10-06T18:03:52Z"
    },
    {
      "author": "jborean93",
      "author_association": "COLLABORATOR",
      "body": "The `Subsystem` is only used as part of a PSRemoting session, through cmdlets like `Enter-PSSession` and `Invoke-Command` so from that perspective it is working as intended. There's no logo that will appear when you do an interactive PSRemoting session through `Enter-PSSession` and `-NoProfile` is being honoured correctly by it not loading the profile on a logon.\r\n\r\nWhen you run `ssh username@hostname` it isn't using that `Subsystem` at all, but rather the `Default*` properties under `HKLM:\\SOFTWARE\\OpenSSH\\` to define what application to use for the shell and what args to run with it. If that isn't working then you need to go through the SSH repo and ask there as it isn't a problem with PowerShell.\r\n\r\n",
      "created_at": "2020-10-06T19:03:02Z",
      "updated_at": "2020-10-06T19:03:02Z"
    },
    {
      "author": "eabase",
      "author_association": "NONE",
      "body": "@MaximoTrinidad \r\n\r\n\r\n**\"OpenSSH for Windows\" version**\r\n\r\n7.7.2.2 \r\n\r\n**Server OperatingSystems**\r\n\r\n```\r\n  OS Name               : Microsoft Windows 10 Home (64-bit)\r\n  OS Version            : 10.0.18363  [2020-09-09 12:38:59 AM]\r\n  OS BuildLabEx         : 18362.1\r\n  OS HAL                : 10.0.18362.752\r\n  OS Kernel             : 10.0.18362.1110\r\n  OS UBR                : 1110\r\n```\r\n\r\n**Client OperatingSystem**\r\n\r\nI tried both:\r\n* Win10 Home \r\n* Win 8 Home +/- Cygwin\r\n\r\n`PowerShell Version    : 5.1.18362.1110`\r\n\r\nBut I want to run it on Core 7.0.3 and that doesn't seem to work... possibly because of [spaces in path definition](https://github.com/PowerShell/Win32-OpenSSH/issues/784). \r\n",
      "created_at": "2020-10-06T20:13:17Z",
      "updated_at": "2020-10-06T20:13:17Z"
    },
    {
      "author": "eabase",
      "author_association": "NONE",
      "body": "@jborean93 \r\n\r\n> When you run ssh username@hostname it isn't using that Subsystem at all, but rather the Default* properties under HKLM:\\SOFTWARE\\OpenSSH\\ to define what application to use for the shell and what args to run with it.\r\n\r\n**Wow!** Now that is something important to tell the OpenSSH people about! \r\n\r\n > The Subsystem is only used as part of a PSRemoting session, through cmdlets like Enter-PSSession and Invoke-Command so from that perspective it is working as intended. There's no logo that will appear when you do an interactive PSRemoting session through Enter-PSSession and -NoProfile is being honoured correctly by it not loading the profile on a logon.\r\n\r\nI'm not using those cmdlets, I'm just using standard ssh sessions. So, **no that is what seem to be broken then**. \r\n\r\nAfter setting:\r\n```powershell\r\nSet-ItemProperty -Path \"HKLM:\\SOFTWARE\\OpenSSH\" -Name DefaultShell -Value \"C:\\Program Files\\PowerShell\\7\\pwsh.exe\"\r\nSet-ItemProperty -Path \"HKLM:\\SOFTWARE\\OpenSSH\" -Name DefaultShellCommandOption -Value \"-NoLogo -NoProfile -c\"\r\n```\r\nIt still loads the profile and logos. ",
      "created_at": "2020-10-06T20:21:03Z",
      "updated_at": "2020-10-06T20:23:43Z"
    },
    {
      "author": "jborean93",
      "author_association": "COLLABORATOR",
      "body": "> Wow! Now that is something important to tell the OpenSSH people about!\r\n\r\nI'm sure they already know about it.\r\n\r\n> I'm not using those cmdlets, I'm just using standard ssh sessions. So, no that is what seem to be broken then.\r\n\r\nThen the problem isn't PowerShell but something in Win32-OpenSSH and you should direct your questions there. This repo can't do anything to help you with this unfortunately.",
      "created_at": "2020-10-06T20:47:32Z",
      "updated_at": "2020-10-06T21:34:31Z"
    },
    {
      "author": "eabase",
      "author_association": "NONE",
      "body": "> Then the problem isn't PowerShell but something in Win32-OpenSSH and you should direct your questions there. This repo can't do anything to help you with this unfortunately.\r\n\r\nThey were the ones telling me to come here... :ru: :runner:  :1st_place_medal: \r\n",
      "created_at": "2020-10-07T07:07:48Z",
      "updated_at": "2020-10-07T07:09:14Z"
    },
    {
      "author": "jborean93",
      "author_association": "COLLABORATOR",
      "body": "I can replicate the problem but there's a few things that need to be cleared up. There are 3 main types of SSH methods when it comes to SSH on Windows:\r\n\r\n* When you call `ssh user@host` you are creating an interactive logon\r\n* When you call `ssh user@host 'command to run'` you are creating a non-interactive logon to run an individual command\r\n* When you call `Enter-PSSession` or `Invoke-Command` with the `-HostName` in PowerShell you are creating a PSRemoting session through the PowerShell subsystem\r\n\r\nFor my testing I've set the following reg keys\r\n\r\n```powershell\r\nSet-ItemProperty -Path \"HKLM:\\SOFTWARE\\OpenSSH\" -Name DefaultShell -Value \"C:\\Program Files\\PowerShell\\7\\pwsh.exe\"\r\nSet-ItemProperty -Path \"HKLM:\\SOFTWARE\\OpenSSH\" -Name DefaultShellCommandOption -Value \"-NoLogo -Command\"\r\n```\r\n\r\nThe first is simple, the `sshd` service will start a new process that is set to call `C:\\Windows\\System32\\cmd.exe` by default or whatever `DefaultShell` is set at. In this example I simply called `ssh username@hostname` and I can see that `sshd.exe` will spawn the pwsh process based on what I have set in `DefaultShell`.\r\n\r\n<img width=\"1090\" alt=\"image\" src=\"https://user-images.githubusercontent.com/8462645/95304937-acc4eb80-08c8-11eb-84fc-5139819e3a3f.png\">\r\n\r\nI did find that the value of `DefaultShellCommandOption` is ignored here, it seems like only `DefaultShell` is used for this type of logon.\r\n\r\nWhen I run `ssh username@hostname Start-Sleep -Seconds 60` this is the process tree\r\n\r\n<img width=\"765\" alt=\"image\" src=\"https://user-images.githubusercontent.com/8462645/95305393-3ffe2100-08c9-11eb-979d-41c5adfdf168.png\">\r\n\r\nThe command line here is `\"C:\\program files\\powershell\\7\\pwsh.exe\" -c \"Start-Sleep -Seconds 60\"` which is not what I have specified in `DefaultShellCommandOption`. This is entirely outside of PowerShell's realm, the `sshd.exe` service is ignoring the value here\r\n\r\nFinally when I run `Enter-PSSession -HostName hostname` this is the process tree\r\n\r\n<img width=\"964\" alt=\"image\" src=\"https://user-images.githubusercontent.com/8462645/95305869-ecd89e00-08c9-11eb-9876-8526c6f5a4a1.png\">\r\n\r\nWe can see that our `Subsystem` entry was used and started the value that was in your `sshd_config`. This is because PowerShell does not use a naked SSH session but rather an SSH subsystem to read and write bytes directly to that `pwsh -sshs` process. This is done specifically for PSRemoting which doesn't operate like a normal process but rather with an exchange of PowerShell specific packets.\r\n\r\nPutting it all together PowerShell is doing nothing here that isn't expected. It's been told to start normally which it does so. The issue lies in the Win32-OpenSSH software as that isn't using the `DefaultShellCommandOption` option that is configured. This must be fixed there as there is nothing the PowerShell team can do. ~~It may even already be fixed in a newer release of Win32-OpenSSH, I know the one that is included in Windows is quite old~~ (scratch that, I just tested the latest GitHub release and it's still an issue).",
      "created_at": "2020-10-07T08:24:50Z",
      "updated_at": "2020-10-07T08:31:18Z"
    },
    {
      "author": "eabase",
      "author_association": "NONE",
      "body": "OT side note: \r\n\r\n>  ~It may even already be fixed in a newer release of Win32-OpenSSH, I know the one that is included in Windows is quite old~ (scratch that, I just tested the latest GitHub release and it's still an issue).\r\n\r\nI also just tried to install the [latest available](https://github.com/PowerShell/Win32-OpenSSH/releases/tag/v8.1.0.0p1-Beta) release (8.1.0) of *Win32-OpenSSH* according [their instructions](https://github.com/PowerShell/Win32-OpenSSH/wiki/Install-Win32-OpenSSH) and **that broke my SSH server access**. (I can only login from local host, but remote host just keep timing out and DEBUG3 doesn't show anything at all.  :-1: \r\n\r\n```diff\r\n- UPDATE\r\n```\r\n\r\nAlthough it should have been obvious, I did not \"uninstall\" the old out-of-the-box OpenSSH before trying the new one. Apparently it took over some ports or services and messed with the new one. As soon as I removed those client/server packages it worked again as before.  I wish there were some better log messages about this. (There were none.)",
      "created_at": "2020-10-07T14:15:01Z",
      "updated_at": "2020-10-07T17:03:05Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "@eabase \r\n\r\nI just finishing getting my refurbished laptop ready. So, I will try my ssh components.\r\nAlthough, I'm on Windows 10 Pro, and I never recall adding registry keys to make this work.  I have a series of blog posts (www.maxtblog.com) where I show how to setup SSH to work work with PowerShell Core (at that time), but I need to verify this using the latest version of PowerShell (v7.0.3, and Preview).\r\n\r\nI will get back to this issue later.   ",
      "created_at": "2020-10-07T14:30:54Z",
      "updated_at": "2020-10-07T14:31:52Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as external and has not had any activity for **1 day**. It has been be closed for housekeeping purposes.",
      "created_at": "2020-10-08T19:00:05Z",
      "updated_at": "2020-10-08T19:00:05Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "Yes, PowerShell ignores these two switches when started as an SSH remoting server.  Runspace initialization is performed in a different path in this case.  \r\n\r\nThe switches are only necessary to ensure the session is started as a server session.",
      "created_at": "2020-10-08T20:10:35Z",
      "updated_at": "2020-10-08T20:10:35Z"
    },
    {
      "author": "eabase",
      "author_association": "NONE",
      "body": "@PaulHigin \r\n\r\n> ...ignores these two switches when started as an SSH remoting server...The switches are only necessary to ensure the session is started as a server session.\r\n\r\nCan you clarify what you just said? (Sound contradictory to me.)\r\n\r\n>  Runspace initialization is performed in a different path in this case.\r\n\r\nWhere is that?\r\n\r\nMaybe you can forward this info to the Win32-OpenSSH devs? ",
      "created_at": "2020-10-13T16:39:53Z",
      "updated_at": "2020-10-13T16:39:53Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "Sorry for the confusion.  If you look at PowerShell start up code, it has morphed over the years with various options and code paths.  In order to start up in server mode these switches are necessary to go down the right code path.  This can definitely be cleaned up, but since it is not a common operation, it is not high priority.\r\n\r\nRemoting runspace initialization is done in response to a PSRP session creation message.  Initialization is configurable:\r\nhttps://github.com/PowerShell/PowerShell/blob/master/src/System.Management.Automation/engine/remoting/fanin/InitialSessionStateProvider.cs\r\nBut this is currently only supported in WinRM remoting.  PowerShell SSH remoting currently just initializes the runspace as default, but will eventually be configurable similar to WinRM.\r\n\r\nThis has nothing to do with Win32-OpenSSH so I see no reason to inform them.\n\n<blockquote><img src=\"https://repository-images.githubusercontent.com/49609581/aad0ad80-cdec-11ea-8248-a37bc0571bfd\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/PowerShell/PowerShell\">PowerShell/PowerShell</a></strong></div><div>PowerShell for every system! Contribute to PowerShell/PowerShell development by creating an account on GitHub.</div></blockquote>",
      "created_at": "2020-10-14T16:35:12Z",
      "updated_at": "2020-10-14T16:35:15Z"
    }
  ],
  "created_at": "2020-10-06T16:55:55Z",
  "labels": [
    "Issue-Question",
    "Resolution-External"
  ],
  "number": 13753,
  "state": "closed",
  "title": "Is this a powershell or OpenSSH issue? \"-sshs -NoLogo -NoProfile\" not respected\"",
  "updated_at": "2020-10-14T16:35:15Z"
}