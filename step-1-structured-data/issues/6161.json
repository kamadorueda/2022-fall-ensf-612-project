{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6161",
  "author": "mklement0",
  "body": "[Closed, because it is based on a misconception of how `-ExpandProperty` works.]\r\n\r\n`-ExpandProperty` makes `Select-Object` return a single property _value_, which is mutually exclusive with `-Property`, which outputs a _custom object_ with the specified properties.\r\n\r\nCurrently, `-Property` is quietly ignored when `-ExpandProperty` is also specified.\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\n[pscustomobject] @{ one = 1; two = 2; three = 3 } | \r\n  Select-Object -ExpandProperty one -Property three\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\nA statement-terminating error complaining about mutually exclusive parameters should be issued.\r\n\r\nActual behavior\r\n---------------\r\n\r\n```none\r\n1\r\n```\r\n\r\nThat is, the `-Property` argument was silently _ignored_.\r\n\r\nEnvironment data\r\n----------------\r\n\r\n```powershell\r\nPowerShell Core v6.0.1\r\nWindows PowerShell v5.1\r\n```\r\n",
  "closed_at": "2018-02-17T19:29:07Z",
  "comments": [
    {
      "author": "dragonwolf83",
      "author_association": "NONE",
      "body": "That is not entirely correct and making it mutually exclusive would be a breaking change.\r\n\r\n`-ExpandProperty` on a Property containing an _Array_  or single value will ignore other properties like your example.\r\n\r\n`-ExpandProperty` on a Property containing a _PSObject_ will add a row for record with the`-Property` list and include the expanded properties that matched to that row.\r\n\r\nUsing your example, I embed `PSObject` called `three` containing values 3 and 4 and it gets added :\r\n```PowerShell\r\n[pscustomobject] @{ one = 1; two = 2; three = [pscustomobject] @{ three = 3; four = 4 } }| \r\n    Select one, two -ExpandProperty three \r\n\r\nthree four one two\r\n----- ---- --- ---\r\n    3    4   1   2\r\n```\r\n\r\nThis is very useful for flattening data from nested objects so that you have it all in the main record. For example, I took custom fields that were embedded in a ticket and expanded it this way so that the custom field would look like a regular field alongside the others.\r\n\r\nThis is one of the things I do a lot so the proposed change would break half my scripts.\r\n\r\n",
      "created_at": "2018-02-16T23:54:41Z",
      "updated_at": "2018-02-16T23:57:15Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks, @dragonwolf83 - I forgot about the many subtleties of `-ExpandProperty`.\r\n\r\nThe current `Select-Object` docs are woefully inadequate (incomplete, and partially misleading).\r\n\r\nHere's what actually happens, and from that perspective the behavior is consistent in all 3 cases you mention:\r\n\r\n* The single property you pass to `-ExpandProperty` becomes the _output type_. That is, instances of whatever type the referenced property is are output.\r\n\r\n* Any properties you pass to `-Property` are _added as  note properties_ to those output-type instances.\r\n\r\n  * If the `-ExpandProperty` property is a _collection_, the note properties are added to _each element_ of that collection (and the collection is invariably converted to `[object[]]` on output).  \r\n\r\n  * Often, the output formatting may not show these note properties, which makes it _look_ like they're not there (ignored), but they are.\r\n\r\nIn short: The real problem is one of _poor documentation_, and I'll add an issue in the docs repo.\r\n\r\n",
      "created_at": "2018-02-17T19:40:16Z",
      "updated_at": "2018-02-17T19:59:40Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "I've created a documentation issue: https://github.com/PowerShell/PowerShell-Docs/issues/2130",
      "created_at": "2018-02-17T20:30:51Z",
      "updated_at": "2018-02-17T20:30:51Z"
    }
  ],
  "created_at": "2018-02-15T14:54:11Z",
  "labels": [
    "Issue-Question",
    "Resolution-Answered"
  ],
  "number": 6161,
  "state": "closed",
  "title": "Select-Object -ExpandProperty and -Property should be mutually exclusive",
  "updated_at": "2018-03-24T18:01:16Z"
}