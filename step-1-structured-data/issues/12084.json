{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12084",
  "author": "p0W3RH311",
  "body": "```\r\nPS C:\\> $a = 5,7,100,44,1,3\r\nPS C:\\> $a.min()\r\n1\r\nPS C:\\> $a.min(2)\r\n3\r\nPS C:\\> $a.max()\r\n100\r\nPS C:\\> $a.max(3)\r\n7\r\n```\r\n\r\nindex in this example begin with 1 and not zero\r\n\r\nin case of array string[] min and max return les longest and smallest string\r\n\r\n\r\n",
  "closed_at": "2020-03-14T17:33:05Z",
  "comments": [
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "If proper support for LINQ is ever implemented, we should get this for free - see #2226 (associated, but abandoned RFC: https://github.com/PowerShell/PowerShell-RFC/pull/86/files).\r\n\r\nIn the meantime, there's this (somewhat cumbersome):\r\n\r\n```powershell\r\n[int[]] $a = 5,7,100,44,1,3 \r\n[Linq.Enumerable]::Min($a) # Note: input array must have specific numeric type\r\n\r\n[Linq.Enumerable]::Max($a) \r\n```",
      "created_at": "2020-03-08T18:56:28Z",
      "updated_at": "2020-03-08T18:57:12Z"
    }
  ],
  "created_at": "2020-03-08T18:10:59Z",
  "labels": [
    "Issue-Enhancement",
    "Resolution-Answered"
  ],
  "number": 12084,
  "state": "closed",
  "title": "add new member to array",
  "updated_at": "2020-03-14T17:33:05Z"
}