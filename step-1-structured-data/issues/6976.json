{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6976",
  "author": "mklement0",
  "body": "Note: I have not tried to analyze whether the problem is in PowerShell or CoreFx; on the PowerShell side, new features were recently added to `-replace` - see #6029 - but I have no idea whether this symptom relates to that.\r\n\r\nThe problem appears to be specific to `-replace`; using `-match` does not exhibit the symptom.\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\nRun the following command line:\r\n\r\n* first on v6.0.2 (the current stable release as of this writing).\r\n\r\n* then on v6.1.0-preview.2 (the current preview release).\r\n\r\n```powershell\r\n$arr =  (, 'fooo') * 1e6; (Measure-Command { $arr -replace '(?<=.{3}).+' }).TotalSeconds\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\nSimilar timings.\r\n\r\nActual behavior\r\n---------------\r\n\r\nHere are sample timings, in seconds, from a Windows 10 VM:\r\n\r\n```none\r\n# v6.0.2\r\n1.8444752\r\n\r\n# v6.1.0-preview.2\r\n# !! more than 30 times slower\r\n61.5428622\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\nPowerShell Core v6.0.2\r\nPowerShell Core v6.1.0-preview.2\r\n```\r\n",
  "closed_at": "2018-06-27T18:06:16Z",
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@mklement0 this is a great find.  I did a private build reverting the change in #6029 and the same test on my macBook went from 35.6s to 1.4s so that PR is causing this perf degradation.",
      "created_at": "2018-06-02T21:31:33Z",
      "updated_at": "2018-06-02T21:31:33Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "Well, that's an unfortunate perf regression.  You'd think that the PR could treat a replacement `string` the way it originally worked and only invoke the new code if replacement is of type `scriptblock`.  ",
      "created_at": "2018-06-02T22:17:16Z",
      "updated_at": "2018-06-02T22:17:16Z"
    },
    {
      "author": "BrucePay",
      "author_association": "COLLABORATOR",
      "body": "Note: the regression is not related to the actual regex, the operator was slow for any replacement string because it went through a very expensive path testing for `MatchEvaluator` before defaulting to string.",
      "created_at": "2018-06-21T22:49:52Z",
      "updated_at": "2018-06-21T22:49:52Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Closed via #7135",
      "created_at": "2018-06-27T18:06:16Z",
      "updated_at": "2018-06-27T18:06:16Z"
    }
  ],
  "created_at": "2018-06-02T18:54:23Z",
  "number": 6976,
  "state": "closed",
  "title": "Combining the -replace operator with a lookbehind assertion slowed down by a factor of 30+ between v6.0.2 and v6.1.0-preview.2",
  "updated_at": "2018-06-27T18:06:16Z"
}