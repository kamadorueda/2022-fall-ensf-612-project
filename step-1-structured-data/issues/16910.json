{
  "_url": "https://github.com/PowerShell/PowerShell/issues/16910",
  "author": "daxian-dbw",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nBump PSReadLine from 2.1.0 to 2.2.2\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [ ] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n",
  "closed_at": "2022-02-23T19:36:46Z",
  "comments": [
    {
      "author": "pull-request-quantifier[bot]",
      "author_association": "NONE",
      "body": "### ![](https://img.shields.io/static/v1?label=Quantified&message=Extra%20Small&color=green)\r\n\r\nThis PR has `36` quantified lines of changes. In general, a change size of upto `200` lines is ideal for the best PR experience!\r\n\r\n------\r\n\r\n<details >\r\n    <summary display=\"inline\"> <strong>Quantification details</strong></summary>\r\n    <p />\r\n\r\n```\r\nLabel      : Extra Small\r\nSize       : +30 -6\r\nPercentile : 14.4%\r\n\r\nTotal files changed: 3\r\n\r\nChange summary by file extension:\r\n.wxs : +27 -3\r\n.csproj : +1 -1\r\n.ps1 : +2 -2\r\n```\r\n> Change counts above are quantified counts, based on the [PullRequestQuantifier customizations](https://github.com/microsoft/PullRequestQuantifier/blob/main/docs/prquantifier-yaml.md).\r\n    \r\n</details>\r\n\r\n\r\n<details>\r\n    <summary display=\"inline\"> <strong>Why proper sizing of changes matters</strong> </summary>\r\n    <p/>\r\n    <p/>\r\n\r\nOptimal pull request sizes drive a better predictable PR flow as they strike a\r\nbalance between between PR complexity and PR review overhead. PRs within the\r\noptimal size (typical small, or medium sized PRs) mean:\r\n\r\n- Fast and predictable releases to production:\r\n  - Optimal size changes are more likely to be reviewed faster with fewer\r\niterations.\r\n  - Similarity in low PR complexity drives similar review times.\r\n- Review quality is likely higher as complexity is lower:\r\n  - Bugs are more likely to be detected.\r\n  - Code inconsistencies are more likely to be detetcted.\r\n- Knowledge sharing is improved within the participants:\r\n  - Small portions can be assimilated better.\r\n- Better engineering practices are exercised:\r\n  - Solving big problems by dividing them in well contained, smaller problems.\r\n  - Exercising separation of concerns within the code changes.\r\n\r\n#### What can I do to optimize my changes\r\n\r\n- Use the PullRequestQuantifier to quantify your PR accurately\r\n  - Create a context profile for your repo using the [context generator](https://github.com/microsoft/PullRequestQuantifier/releases)\r\n  - Exclude files that are not necessary to be reviewed or do not increase the review complexity. Example: Autogenerated code, docs, project IDE setting files, binaries, etc. Check out the `Excluded` section from your `prquantifier.yaml` context profile. \r\n  - Understand your typical change complexity, drive towards the desired complexity by adjusting the label mapping in your `prquantifier.yaml` context profile.\r\n  - Only use the labels that matter to you, [see context specification](./docs/prquantifier-yaml.md) to customize your `prquantifier.yaml` context profile.\r\n- Change your engineering behaviors\r\n  - For PRs that fall outside of the desired spectrum, review the details and check if:\r\n    - Your PR could be split in smaller, self-contained PRs instead\r\n    - Your PR only solves one particular issue. (For example, don't refactor and code new features in the same PR).\r\n\r\n#### How to interpret the change counts in git diff output\r\n\r\n- One line was added: `+1 -0`\r\n- One line was deleted: `+0 -1`\r\n- One line was modified: `+1 -1` (git diff doesn't know about modified, it will\r\ninterpret that line like one addition plus one deletion)\r\n- Change percentiles: Change characteristics (addition, deletion, modification)\r\nof this PR in relation to all other PRs within the repository.\r\n\r\n</details>\r\n\r\n<p />\r\n\r\n------\r\n\r\nWas this comment helpful? <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoiZGF4aWFuLWRidyIsIlJlcG9zaXRvcnlMaW5rIjoiaHR0cHM6Ly9naXRodWIuY29tL1Bvd2VyU2hlbGwvUG93ZXJTaGVsbCIsIlB1bGxSZXF1ZXN0TGluayI6Imh0dHBzOi8vZ2l0aHViLmNvbS9Qb3dlclNoZWxsL1Bvd2VyU2hlbGwvcHVsbC8xNjkxMCIsIkV2ZW50VHlwZSI6IlRodW1ic1VwIn0=&amp;anonymous=True\" target=\"_blank\" title=\"Thumbs up\"><strong>:thumbsup:</strong></a> <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoiZGF4aWFuLWRidyIsIlJlcG9zaXRvcnlMaW5rIjoiaHR0cHM6Ly9naXRodWIuY29tL1Bvd2VyU2hlbGwvUG93ZXJTaGVsbCIsIlB1bGxSZXF1ZXN0TGluayI6Imh0dHBzOi8vZ2l0aHViLmNvbS9Qb3dlclNoZWxsL1Bvd2VyU2hlbGwvcHVsbC8xNjkxMCIsIkV2ZW50VHlwZSI6Ik5ldXRyYWwifQ==&amp;anonymous=True\" target=\"_blank\" title=\"Neutral\"><strong>&nbsp;:ok_hand:</strong></a> <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoiZGF4aWFuLWRidyIsIlJlcG9zaXRvcnlMaW5rIjoiaHR0cHM6Ly9naXRodWIuY29tL1Bvd2VyU2hlbGwvUG93ZXJTaGVsbCIsIlB1bGxSZXF1ZXN0TGluayI6Imh0dHBzOi8vZ2l0aHViLmNvbS9Qb3dlclNoZWxsL1Bvd2VyU2hlbGwvcHVsbC8xNjkxMCIsIkV2ZW50VHlwZSI6IlRodW1ic0Rvd24ifQ==&amp;anonymous=True\" target=\"_blank\" title=\"Thumbs down\"><strong>&nbsp;:thumbsdown:</strong></a> (<a href=\"MAILTO:prquantifier@microsoft.com\" title=\"Mail to prquantifier@microsoft.com\">Email</a>)\r\n[Customize PullRequestQuantifier](https://github.com/PowerShell/PowerShell/blob/master/.github/prquantifier.yaml) for this repository.\r\n\r\n",
      "created_at": "2022-02-23T16:52:43Z",
      "updated_at": "2022-02-23T16:52:43Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I hope to get this with Windows monthly update too :-)",
      "created_at": "2022-02-23T18:01:40Z",
      "updated_at": "2022-02-23T18:01:40Z"
    },
    {
      "author": "doctordns",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov is PSReadLine now serviced by Microsoft Update?",
      "created_at": "2022-02-23T18:08:38Z",
      "updated_at": "2022-02-23T18:08:38Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> @iSazonov is PSReadLine now serviced by Microsoft Update?\r\n\r\nIt is a part of WMF and distributed with Windows PowerShell for years.",
      "created_at": "2022-02-23T18:24:18Z",
      "updated_at": "2022-02-23T18:24:18Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@doctordns I guess your question was about the MU support for PowerShell 7.2+. The answer to that is: no, the updates t PSReadLine itself doesn't get pushed through MU, but PowerShell will bundle the latest stable release and the MU for PowerShell will refresh the PSReadLine module.",
      "created_at": "2022-02-23T19:39:16Z",
      "updated_at": "2022-02-23T19:39:16Z"
    },
    {
      "author": "doctordns",
      "author_association": "COLLABORATOR",
      "body": "@daxian. So Windows PowerShell will automatically get updated via MU while PowerShell 7 will not. PowerShell 7 will get updatgecd versions (of PSReadline) when I get an updated version of Powershell 7 (eg 7.2.2 when that ships)?? And when that happens we'll be updated by MU? ",
      "created_at": "2022-02-24T14:44:34Z",
      "updated_at": "2022-02-24T14:44:34Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "> eg 7.2.2 when that ships\r\n\r\nThis PR was merged in master but not backported. I'm not sure if we are going to backport it for 7.2.2, but it sounds like a good idea :)\r\n\r\n> And when that happens we'll be updated by MU?\r\n\r\nIf we decided to backport this change to 7.2.x, then yes, you will be updated by MU.",
      "created_at": "2022-02-24T17:16:33Z",
      "updated_at": "2022-02-24T17:16:33Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I still don't understand about Windows PowerShell - will we get the update?",
      "created_at": "2022-02-24T17:52:01Z",
      "updated_at": "2022-02-24T17:52:01Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "We will get updates about Windows PowerShell when there is an update to Windows PowerShell.\r\nBe noted that, anything happens in this repo doesn't affect Windows PowerShell.",
      "created_at": "2022-02-24T18:01:48Z",
      "updated_at": "2022-02-24T18:01:48Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Thanks for clarify! \r\n(Current PSRL version in Windows is too unfortunate)",
      "created_at": "2022-02-24T18:22:10Z",
      "updated_at": "2022-02-24T18:22:10Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-maintainers \r\nWe only take security fixes and regression to LTS.  This is appropriate for 7.3.  Rejecting backport.",
      "created_at": "2022-03-02T19:35:21Z",
      "updated_at": "2022-03-02T19:35:21Z"
    }
  ],
  "created_at": "2022-02-23T16:52:38Z",
  "number": 16910,
  "state": "closed",
  "title": "Bump PSReadLine from 2.1.0 to 2.2.2",
  "updated_at": "2022-03-02T19:35:21Z"
}