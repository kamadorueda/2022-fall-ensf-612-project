{
  "_url": "https://github.com/PowerShell/PowerShell/issues/18109",
  "author": "ProRedMax",
  "body": "### Prerequisites\n\n- [X] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\n\n### Steps to reproduce\n\nI am experiencing a problem when running the PowerShell SDK in a kiosk (AssignedAccess) environment in a WindowsBackgroundService. When I am using the library in a non-kiosk environment it works fine. But the weird thing is that once I am in the kiosk or when I get back from it, I am always getting an exception. I already asked this on StackOverflow but without any solutions.\n\n### Expected behavior\n\n```console\n\ufeff$user = \"ExamX\"\r\n$Sid = (Get-LocalUser -Name $user).SID.Value\r\nRemove-LocalUser -SID $Sid\r\nClear-AssignedAccess\r\nsc.exe stop \"ExamX Service\"\r\nsc.exe delete \"ExamX Service\"\r\n$path = \"HKLM:\\SOFTWARE\\ExamX\\ExamInfo\\\"\r\nRemove-Item -Recurse $path -ErrorAction SilentlyContinue\n```\n\n\n### Actual behavior\n\n```console\nException Trace System.TypeInitializationException: The type initializer for 'System.Management.Automation.ExperimentalFeature' threw an exception.\r\n ---> System.TypeInitializationException: The type initializer for 'System.Management.Automation.Configuration.PowerShellConfig' threw an exception.\r\n ---> System.ArgumentNullException: Value cannot be null. (Parameter 'path1')\r\n   at System.IO.Path.Combine(String path1, String path2)\r\n   at System.Management.Automation.Configuration.PowerShellConfig..ctor()\r\n   at System.Management.Automation.Configuration.PowerShellConfig..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at System.Management.Automation.ExperimentalFeature..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at System.Management.Automation.Runspaces.AsyncResult.EndInvoke()\r\n   at System.Management.Automation.PowerShell.EndInvoke(IAsyncResult asyncResult)\r\n   at ExamX_Service.WindowsService.PowershellHandler.Execute() in C:\\ExamX\\Service\\ExamX_Service\\ExamX_Service\\PowershellHandler.cs:line 33\r\n   at ExamX_Service.WindowsService.WindowsBackgroundService.RunRecoveryScript(ILogger`1 logger) in C:\\ExamX\\Service\\ExamX_Service\\ExamX_Service\\WindowsBackgroundService.cs:line 134\r\n   at ExamX_Service.WindowsService.WindowsBackgroundService.ExecuteAsync(CancellationToken stoppingToken) in C:\\ExamX\\Service\\ExamX_Service\\ExamX_Service\\WindowsBackgroundService.cs:line 110\n```\n\n\n### Error details\n\n_No response_\n\n### Environment data\n\n```powershell\nI can't really execute this command due to the exception being thrown\n```\n\n\n### Visuals\n\n_No response_",
  "closed_at": null,
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Based on the stacktrace, it seems that somehow this is returning `null` https://github.com/PowerShell/PowerShell/blob/fd67038ed88a844c51bcadbd720e6c2335fa4900/src/System.Management.Automation/engine/Utils.cs#L484-L489 which should not be the case.  You must be hosting PowerShell?  Are you building it as a single self-contained exe or something like that such that SMA.dll isn't found?",
      "created_at": "2022-10-04T15:03:14Z",
      "updated_at": "2022-10-04T15:03:14Z"
    },
    {
      "author": "ProRedMax",
      "author_association": "NONE",
      "body": "So I am using a fresh virtual machine (So I am not hosting PowerShell in any way I know) and just calling the PowerShell library. As I mentioned it works fine in a non-kiosk environment. The weird thing is that when I return from the kiosk it still does not work. This is how I am using the library:\r\nCall in WindowsBackgroundService.cs\r\n```c#\r\n        var powershellHandler = new PowershellHandler();\r\n        powershellHandler.AddCommand(\"Set-ExecutionPolicy Unrestricted\");\r\n        foreach (var line in File.ReadAllLines(@\"C:\\Program Files (x86)\\ExamX\\ExamX_Service\\RecoveryScript.ps1\"))\r\n            powershellHandler.AddCommand(line);\r\n\r\n        return powershellHandler.Execute();\r\n```\r\n\r\n\r\nAnd this is the actual PowershellHandler:\r\n\r\n```c#\r\npublic class PowershellHandler\r\n    {\r\n        private readonly PowerShell _powerShell;\r\n\r\n        public PowershellHandler()\r\n        {\r\n            _powerShell = PowerShell.Create();\r\n        }\r\n\r\n        public void AddCommand(string command)\r\n        {\r\n            _powerShell.AddScript(command);\r\n        }\r\n\r\n        public string Execute()\r\n        {\r\n            string errorMsg = string.Empty;\r\n            string output = string.Empty;\r\n            _powerShell.AddCommand(\"Out-String\");\r\n            PSDataCollection<PSObject> outputCollection = new();\r\n            _powerShell.Streams.Error.DataAdded += (object sender, DataAddedEventArgs e) =>\r\n            {\r\n                errorMsg = ((PSDataCollection<ErrorRecord>) sender)[e.Index].ToString();\r\n            };\r\n\r\n            IAsyncResult result = _powerShell.BeginInvoke<PSObject, PSObject>(null, outputCollection);\r\n\r\n            _powerShell.EndInvoke(result);\r\n\r\n            StringBuilder sb = new();\r\n\r\n            foreach (var outputitem in outputCollection)\r\n            {\r\n                sb.AppendLine(outputitem.BaseObject.ToString());\r\n            }\r\n\r\n            _powerShell.Commands.Clear();\r\n\r\n            if (!string.IsNullOrEmpty(errorMsg))\r\n            {\r\n                return errorMsg;\r\n            }\r\n\r\n            return sb.ToString().Trim();\r\n        }\r\n    }\r\n```\r\n\r\n",
      "created_at": "2022-10-05T07:41:37Z",
      "updated_at": "2022-10-05T07:41:37Z"
    }
  ],
  "created_at": "2022-09-16T06:57:07Z",
  "number": 18109,
  "state": "open",
  "title": "The type initializer for 'System.Management.Automation.ExperimentalFeature' threw an exception.",
  "updated_at": "2022-10-05T07:41:37Z"
}