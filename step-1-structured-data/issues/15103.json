{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15103",
  "author": "MostHated",
  "body": "Hey there,\r\n    I apologize if there is a way to do this that I am not aware of, but I have not come across info on it if there is. \r\n\r\nMy request is to have a way to run scripts directly from a shell without loading the items in my $PROFILE.\r\n\r\nCurrently, I have a PowerShell script I created running on Linux which I use to parse /proc/net/dev to determine the current network rate. As seen in the excerpt below, the script uses the shebang `#!/usr/bin/env pwsh` in order to allow me to invoke the script on a schedule easily from [Jobber](https://github.com/dshearer/jobber) as seen in the second dropdown below. There doesn't seem to be a way that I am aware of to run the script without the unnecessary overhead of including the loading of my $PROFILE, such as custom prompt and other modules that are only needed/used in an active terminal. \r\n\r\nI was attempting to profile the script by watching it in HTOP and noticed that upon each invocation it was somewhere in the neighborhood of 100MB in size and 27 threads, which I thought was a bit excessive. I went into my $PROFILE and commented everything out and right away saw each invocation dropped down to 87MB (still 27 threads). While still pretty heavy, definitely better. \r\n\r\nI realize that there is always going to be fairly substantial overhead of running a PowerShell script on Linux compared to simply running a Bash script due to the runtime and all that, but I feel it would definitely help with adoption to be able to run things in a familiar manner without having to exclusively choose between any sort of personal customization and trying to maintain minimal overhead for additional performance in these two situations (me, actively using pwsh in a terminal vs having a script run on a schedule). \r\n\r\nAll in all, I love being able to have the much more friendly and familiar(to me, at least) coding experience of the .Net ecosystem on my Linux boxes and was hoping to utilize it more often and in different situations, but if each script is going to cost 100MB a pop, it seems that I my thought of replacing a lot of these small random bash scripts on my system with PowerShell scripts may not be the best idea and will end up being much more situational based on need. Either way, though, I really do like at least having the option and ability to do so, at least. :+1: \r\n\r\nThanks,\r\n-MH\r\n\r\n<details>\r\n<summary>Script Excerpt</summary>\r\n\r\n```powershell\r\n#!/usr/bin/env pwsh\r\n<#\t\r\n\t.NOTES\r\n\t======================================================\r\n     Created on:   03/24/2021\r\n     Created by:   instance.id\r\n     Platform:     Linux\r\n\t Filename:     traffic.ps1\r\n\t======================================================\r\n\t.DESCRIPTION\r\n\t\tParses cat /proc/net/dev to determine current network transfer rate\r\n#>\r\n\r\n# --------------- Linux current network transfer rate check\r\n# ---------------------------------------------------------\r\nparam (\r\n    [Parameter()]\r\n    [int]$Sleep = 1,\r\n    [string]$Device,\r\n    [switch]$Human,\r\n    [switch]$NoLabel,\r\n    [switch]$Pad,\r\n    [switch]$Conky\r\n)\r\n\r\n```\r\n\r\n\r\n</details>\r\n\r\n\r\n<details>\r\n<summary>Jobber Invocation</summary>\r\n\r\n```yaml\r\njobs:\r\n  speed:\r\n     cmd: /home/mosthated/.conky/scripts/traffic.ps1 -Device enp6s0 -Sleep 1 -Human -Pad -Conky\r\n     time: '*/2 * * * * *'\r\n     onError: Continue\r\n```\r\n\r\n</details>\r\n\r\n",
  "closed_at": "2021-03-28T12:00:05Z",
  "comments": [
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "It is unfortunate that PowerShell loads its profiles even in unattended (non-interactive) invocations, which not only makes for increased overhead but also for a less predictable execution environment.\r\n\r\nThe problem has been discussed before, and the idea came up to provide  _separate executable_ that doesn't load  profiles and fixes other legacy problems: #8072.\r\n\r\nUnfortunately, momentum behind this has stalled, but I'm definitely in favor of resolving this.\r\n\r\n",
      "created_at": "2021-03-25T18:45:15Z",
      "updated_at": "2021-03-25T18:45:15Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "It is definitely a suboptimal solution, but if your scripts run on _Linux only_ and you're willing to assume a _default installation_, you can use `#!/usr/bin/pwsh -noprofile`",
      "created_at": "2021-03-25T18:49:27Z",
      "updated_at": "2021-03-25T18:49:27Z"
    },
    {
      "author": "MostHated",
      "author_association": "NONE",
      "body": "** Edit - it looks like that does the trick and should work pretty well for this particular situation. I definitely appreciate it. :+1: Though, as you mentioned, it definitely is a shame that, that is the only way to go about it\r\n\r\n\r\nThanks for the reply. This script in particular is linux only as it is using cat /proc/net/dev to get the network traffic and it is just a personal script for my desktops system monitor (Conky), but I did try `#!/usr/bin/env pwsh -noprofile` and that didn't work, but I didn't try `#!/usr/bin/pwsh -noprofile`, I will give that a go. Thanks.",
      "created_at": "2021-03-25T19:15:33Z",
      "updated_at": "2021-03-25T19:23:15Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "`#!/usr/bin/env pwsh -noprofile` doesn't work, because it uses _two_ arguments, which Linux doesn't support (macOS does, but this discrepancy prevents a _portable_ (cross-Unix) solution).",
      "created_at": "2021-03-25T19:22:31Z",
      "updated_at": "2021-03-25T19:22:31Z"
    },
    {
      "author": "jborean93",
      "author_association": "COLLABORATOR",
      "body": "As a workaround you can create an executable script in the `PATH` Called `pwsh_no_profile` which just calls `pwsh -NoProfile` and set that as your shebang argument.",
      "created_at": "2021-03-25T20:18:35Z",
      "updated_at": "2021-03-25T20:18:35Z"
    },
    {
      "author": "237dmitry",
      "author_association": "NONE",
      "body": "```\r\n#!/usr/bin/env -S pwsh -noprofile\r\n\r\nscript itself\r\n``` \r\nand \r\n```\r\nchmod +x yourscript\r\n```\r\nto run it out from pwsh shell.",
      "created_at": "2021-03-25T20:21:44Z",
      "updated_at": "2021-03-25T20:37:47Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Nice, @237dmitry - didn't know about the `-S` option for making `env` split the single argument it is given on Linux into individual arguments, but there's a caveat:\r\n\r\n* On Linux distros, it requires [GNU coreutils v8.30+](https://savannah.gnu.org/forum/forum.php?forum_id=9187), which are included with Ubuntu 19.04+, for instance, but not with Ubuntu 18.04 and earlier.\r\nIn other words: older Linux distros may not support it (though that problem will take care of itself over time).\r\n\r\n* (On macOS it is supported since at least Catalina; it isn't necessary there, but does no harm, which makes the solution portable.)\r\n\r\nJust to spell out @jborean93's suggestion:\r\n\r\n* Create the helper script, `pwsh-np` (from PowerShell) in `/usr/bin` (Linux) / `/usr/local/bin` (macOS):\r\n\r\n```powershell\r\n@'\r\n#!/bin/sh\r\npwsh -noprofile \"$@\"\r\n'@ | sudo pwsh -noprofile -c { $newBin = Join-Path ($IsLinux ? '/usr/bin' : '/usr/local/bin') pwsh-np; $input > $newBin; chmod a+x $newBin }\r\n```\r\n\r\n* Then you can use it in your shebang lines; e.g.:\r\n\r\n```sh\r\n#!/usr/bin/env pwsh-np\r\n\r\n'Look, ma - no profile!'\r\n```",
      "created_at": "2021-03-25T21:12:24Z",
      "updated_at": "2021-03-25T21:12:24Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2021-03-28T12:00:04Z",
      "updated_at": "2021-03-28T12:00:04Z"
    }
  ],
  "created_at": "2021-03-25T18:22:36Z",
  "labels": [
    "Issue-Enhancement",
    "Resolution-Answered",
    "Needs-Triage"
  ],
  "number": 15103,
  "state": "closed",
  "title": "[Feature Request: Linux] - A way to use \"-noprofile\" when running script directly from shell ( $> ./myscript.ps1 ) using #!/usr/bin/env pwsh ",
  "updated_at": "2021-03-28T12:00:05Z"
}