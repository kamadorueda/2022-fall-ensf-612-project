{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6674",
  "author": "daniel0x00",
  "body": "`Invoke-WebRequest` Headers property is handled as a `Dictionary[string,System.Collections.Generic.IEnumerable[string]]` in PS Core; while in Windows PS is `Dictionary[string,string]`. \r\n\r\n![2018-04-18 13_01_54-c__program files_powershell_6 1 0-preview 1_pwsh exe](https://user-images.githubusercontent.com/6474092/38928350-d50decfa-4308-11e8-8e06-5b65400281fe.png)\r\n\r\n\r\nTherefore the Values of the headers are treated differently:\r\n\r\n![daqudfiwkaeg6fp](https://user-images.githubusercontent.com/6474092/38928587-951ef07a-4309-11e8-89cf-560de4f41ba2.jpg)\r\n\r\n\r\nSteve Lee pointed out this could not be expected:\r\n[https://twitter.com/daniel0x00/status/984894285387632641](url)\r\n\r\nThanks,\r\nDaniel Ferreira\r\n",
  "closed_at": "2018-04-18T11:39:16Z",
  "comments": [
    {
      "author": "daniel0x00",
      "author_association": "NONE",
      "body": "Correct Steve Lee tweet URL: https://twitter.com/daniel0x00/status/984762438577991680",
      "created_at": "2018-04-18T11:20:26Z",
      "updated_at": "2018-04-18T11:20:26Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@daniel0x00 I looked into the history of this.  It appears that at the time the webcmdlets were ported to dotnetcore 1.0 for NanoServer, the type changed for Headers.  At this time, it would be a breaking change to make it consistent with Windows PowerShell.  Given the extensive changes in the webcmdlets, I think you should consider it a different cmdlet with the same name as the Windows PowerShell counterpart.  Compatibility is retained where possible, but in this case, it seems we need to worry about compatibility with PS Core 6.0.",
      "created_at": "2018-04-18T11:39:16Z",
      "updated_at": "2018-04-18T11:39:16Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "For context, This is `By Design` and is documented in the [breaking changes](https://github.com/PowerShell/PowerShell/blob/master/docs/BREAKINGCHANGES.md#changes-to-web-cmdlets).\r\n\r\nI consider reverting it to the same behavior as Windows PowerShell, but this breaking change actually fixes unexpected behavior. In Windows PowerShell, when a remote endpoint returns multiple response headers with the same name, they were being concatenated and joined with a comma. HttpClient treats these as separate array entries. The old method made it really hard to parse complex headers which include header separator characters as part of their values (such as cookies).\r\n\r\nIf the endpoint returns \r\n\r\n```\r\nMyHeader: A,B,C\r\nMyHeader: D,E,F\r\n```\r\n\r\nIn Windows PowerShell `$result.Headers.MyHeader` would be `A,B,C,D,E,F`. which makes it impossible to determine the separate values. In PowerShell Core `$result.Headers.MyHeader[0]` would be `A,B,C` and `$result.Headers.MyHeader[1]` would be `D,E,F`.\r\n\r\nYou can see this difference in behavior with this:\r\n\r\n```powershell\r\n$Result = Invoke-WebRequest 'https://httpbin.org/response-headers?MyHeader=A,B,C&MyHeader=D,E,F'\r\n$Result.Headers.MyHeader | Select -First 1\r\n$Result.Headers.MyHeader | Select -Skip 1\r\n```\r\n\r\n[More info.](https://get-powershellblog.blogspot.com/2017/11/powershell-core-web-cmdlets-in-depth.html#L10)",
      "created_at": "2018-04-18T12:25:05Z",
      "updated_at": "2018-04-18T12:25:05Z"
    },
    {
      "author": "daniel0x00",
      "author_association": "NONE",
      "body": "@markekraus now that I got it, I will vote for leave it as is in PS Core, so no major changes will happen again. New string[] way makes more sense even if that means code needs to be rewritten (as mine). Thanks for the effort of explaining!",
      "created_at": "2018-04-18T12:56:48Z",
      "updated_at": "2018-04-18T12:56:48Z"
    }
  ],
  "created_at": "2018-04-18T11:11:04Z",
  "labels": [
    "Resolution-Answered"
  ],
  "number": 6674,
  "state": "closed",
  "title": "Invoke-WebRequest Headers not treated as Dictionary[string,string]",
  "updated_at": "2018-04-18T12:56:48Z"
}