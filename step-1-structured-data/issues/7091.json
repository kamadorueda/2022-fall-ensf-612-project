{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7091",
  "author": "rmbolger",
  "body": "Steps to reproduce\r\n------------------\r\n\r\n```powershell\r\n# add a ScriptProperty to System.String\r\nUpdate-TypeData -TypeName System.String -MemberType ScriptProperty -MemberName Foo -Value { $this.ToUpper() }\r\n\r\n# call ConvertTo-Json with an object that contains at least one string\r\n'asdf' | ConvertTo-Json\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```none\r\n\"asdf\"\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n```none\r\nProcess is terminating due to StackOverflowException.\r\nAborted (core dumped)\r\n```\r\n\r\nIn this simple example where the script value is `$this.ToUpper()`, crashing with a StackOverflowException happens reliably and relatively quickly. If the script value is changed to something more complex, the PowerShell process tends to hang and consume massive amounts of memory until it crashes or is terminated.\r\n\r\nEnvironment data\r\n----------------\r\n\r\nThis seems to affect both Windows PowerShell and PowerShell Core 6.0.2 regardless of OS platform. The tests I did were from Windows 10 1803 running Windows PowerShell 5.1 and PowerShell Core 6.0.2 both on Windows and Ubuntu 16.04 via WSL. I've included the `$PSVersionTable` output for all below.\r\n\r\n```powershell\r\n# Win PowerShell 5.1\r\nName                           Value\r\n----                           -----\r\nPSVersion                      5.1.17134.112\r\nPSEdition                      Desktop\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nBuildVersion                   10.0.17134.112\r\nCLRVersion                     4.0.30319.42000\r\nWSManStackVersion              3.0\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\n\r\n# PowerShell Core 6.0.2 (Windows)\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.2\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.2\r\nOS                             Microsoft Windows 10.0.17134\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n# PowerShell Core 6.0.2 (Ubuntu 16.04)\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.2\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.2\r\nOS                             Linux 4.4.0-17134-Microsoft #112-Microsoft Thu Jun 07 22:57:00 PST 2018\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2020-11-04T22:46:56Z",
  "comments": [
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Good find.\r\n\r\n#5797 is essentially the same issue with respect to `NoteProperty` members (but without a crash) in that it also asks that such ETS properties be _ignored_ during to-JSON serialization.\r\n\r\n",
      "created_at": "2018-06-17T12:07:02Z",
      "updated_at": "2018-06-18T01:23:12Z"
    },
    {
      "author": "msftrncs",
      "author_association": "CONTRIBUTOR",
      "body": "Still happening in 6.2 RC 1, and per #6847, the object might be converted to a hash first, something must be going wrong during that pre-conversion before being sent to NewtonSoft?",
      "created_at": "2019-03-17T06:52:45Z",
      "updated_at": "2019-03-17T06:52:45Z"
    },
    {
      "author": "kganjam",
      "author_association": "NONE",
      "body": "Still happening in 7.0.3. This bug caused me to lose more than a week dealing with an internal support team as I thought the issue was due to something wrong in their code. In fact, their code was simple calling ConvertTo-Json and I happened to have had some extension methods for System.String. ",
      "created_at": "2020-10-28T04:22:44Z",
      "updated_at": "2020-10-28T04:22:44Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Closing as dupe of https://github.com/PowerShell/PowerShell/issues/5797, carry on discussion in that one",
      "created_at": "2020-11-04T22:46:56Z",
      "updated_at": "2020-11-04T22:46:56Z"
    }
  ],
  "created_at": "2018-06-17T06:26:31Z",
  "labels": [
    "Resolution-Duplicate",
    "Issue-Discussion",
    "WG-Cmdlets-Utility"
  ],
  "number": 7091,
  "state": "closed",
  "title": "ScriptProperty extensions on String via Update-TypeData break ConvertTo-Json",
  "updated_at": "2020-11-04T22:46:56Z"
}