{
  "_url": "https://github.com/PowerShell/PowerShell/issues/1955",
  "author": "ritalin",
  "body": "<!--\n\nIf it is a bug report:\n- make sure you are able to repro it on the latest released version. \nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\n- Search the existing issues.\n- Refer to the [FAQ](../docs/FAQ.md).\n- Refer to the [known issues](../docs/KNOWNISSUES.md).\n- Fill out the following repro template\n\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\n-->\n## Steps to reproduce\n1. pushd src/libpsl-native\n2. cmake -DCMAKE_BUILD_TYPE=Debug .\n3. make -j\n4. make test\n## Expected behavior\n\ntest success\n## Actual behavior\n\ntest failed\n\n> [  FAILED  ] GetFullyQualifiedNameTest.ValidateLinuxGetFullyQualifiedDomainName\n## Environment data\n\nMac OS X 10.11.4\n\n<!-- provide the output of $PSVersionTable -->\n\n``` powershell\n> $PSVersionTable\n\n```\n",
  "closed_at": "2016-09-21T14:59:44Z",
  "comments": [
    {
      "author": "ritalin",
      "author_association": "NONE",
      "body": "## Reason\n\nIn ValidateLinuxGetFullyQualifiedDomainName, \n\n`GetFullyQualifiedName()` function of my machine has returned first uppercase phrase (eg: Xxx-Yyy-Zzz).\n\nBut expected host name was lowercase phrase(eg: xxx-yyy-zzz).\n\nTherefore, this test has been failed.\n\n## Proposal resolution\n\nDo I convert the result for `GetFullyQualifiedName()` function into lowercase string ?\n",
      "created_at": "2016-08-19T14:35:07Z",
      "updated_at": "2016-08-19T14:35:07Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "For the resolution, I'm really not sure. This test has been really iffy. The code is [here](https://github.com/PowerShell/PowerShell/blob/master/src/libpsl-native/test/test-getfullyqualifiedname.cpp), and the function it's testing is [here](https://github.com/PowerShell/PowerShell/blob/master/src/libpsl-native/src/getfullyqualifiedname.cpp).\n\nThere seems to be much disagreement between `getaddrinfo()->ai_canonname` and `gethostname()`; which, to be fair, is probably to be expected (nodename and canonnname are not necessarily identical).\n\nI think the main problem is [here](https://github.com/PowerShell/PowerShell/blob/master/src/libpsl-native/src/getfullyqualifiedname.cpp#L27), where the library first attempts to get the hostname, and if it looks like an FQDN, uses it; otherwise it attempts to get the cannonname. This logic was implemented in 2d442eb73279a24638e63c4a82344de5717e5a70.\n\n@palladia do you remember why this was done? It's causing problems :smile: \n",
      "created_at": "2016-08-19T18:52:42Z",
      "updated_at": "2016-08-19T18:52:42Z"
    },
    {
      "author": "JamesWTruher",
      "author_association": "MEMBER",
      "body": "If there is no effect of doing this evaluation as case insensitive, there's no harm in calling ToLower on the string. However, there looks to be a case insensitive assert, so I would suggest ASSERT_STRCASEEQ rather than doing the conversion\n",
      "created_at": "2016-09-19T22:32:02Z",
      "updated_at": "2016-09-19T22:32:02Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "@ritalin can you verify if this still reproduces? I've modified the test (and I'm getting sorely tempted to delete it, there are just so many edge cases).\n",
      "created_at": "2016-09-19T22:34:01Z",
      "updated_at": "2016-09-19T22:34:01Z"
    },
    {
      "author": "ritalin",
      "author_association": "NONE",
      "body": "In v6.0.0-alpha.10, all test is green, and  build process has been successful.\n\nThanks.\n",
      "created_at": "2016-09-21T14:59:44Z",
      "updated_at": "2016-09-21T14:59:44Z"
    }
  ],
  "created_at": "2016-08-19T14:25:37Z",
  "number": 1955,
  "state": "closed",
  "title": "GetFullyQualifiedNameTest.ValidateLinuxGetFullyQualifiedDomainName test failed",
  "updated_at": "2016-09-21T14:59:44Z"
}