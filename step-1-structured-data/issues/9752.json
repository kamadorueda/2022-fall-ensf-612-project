{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9752",
  "author": "tlsalex",
  "body": "OK ,this is my second time to ask the same question which is about how to let a normal user to run an app or cmdlet that require elevated rights.\r\n\r\nNow I know how to define an JEA in a system. I will use bellow steps run a desired app(external command)\r\n\r\nEnter-PSSession -ComputerName WS-FN -ConfigurationName finance_admins.\r\nmoney.exe\r\ninvoice.exe\r\n\r\n\r\nBut if the user is not an IT technician , she is just a normal user from finance dept. \r\nShould I just tell her type the first command , then type the app name to run it ?\r\n\r\n**It is not convenient at all.**\r\n\r\nHowever, in linux , we can use chmod to make an app always run as the owner of that file , let's say the owner is root .\r\nchmod u+s /path/to/file/or/executable \r\n\r\nThen other normal users just run it without any steps. this way is very convenient  and handy.\r\n\r\nAny good ideas ?\r\n\r\n\r\n\r\n",
  "closed_at": "2021-01-15T10:35:59Z",
  "comments": [
    {
      "author": "bpayette",
      "author_association": "CONTRIBUTOR",
      "body": "@tlsalex Hmmm - wouldn't wrapping the commands in a small script suffice? The user would run `money.ps1` which would take care of all the JEA magic resulting in a very simple straightforward experience.",
      "created_at": "2019-05-30T19:10:54Z",
      "updated_at": "2019-05-30T19:10:54Z"
    },
    {
      "author": "tlsalex",
      "author_association": "NONE",
      "body": "@bpayette , thank you.  But in other case,  for some security reason ,PowerShell is disabled via policy by security team , and a non IT technician user sometimes need to run some apps that required elevated rights, I look for a way to solve this situation for a long time , RUNAS is my current solution , but it not the best  solution when we compare it with chmod u+s in linux",
      "created_at": "2019-05-31T08:11:50Z",
      "updated_at": "2019-05-31T08:11:50Z"
    },
    {
      "author": "MovGP0",
      "author_association": "NONE",
      "body": "You can digitally sign the script to make it work. \r\n\r\nHowever, if you don't have access to the private certificate of your company, or PowerShell is disabled, then you need to talk with the Administrators. ",
      "created_at": "2019-06-09T07:10:07Z",
      "updated_at": "2019-06-09T07:10:07Z"
    },
    {
      "author": "bpayette",
      "author_association": "CONTRIBUTOR",
      "body": "@tlsalex To be clear, setuid is an operating system feature not a shell feature. You could try opening a bug on Windows itself to get the kernel team to add setuid support but that seems unlikely given that setuid is broadly considered a [security risk](http://maxsi.org/blog/setuid-bit-considered-harmful/).  As @MovGP0  suggests, a better option would be to talk to the Admin team and see why they are blocking PowerShell.",
      "created_at": "2019-06-10T17:26:27Z",
      "updated_at": "2019-06-10T17:26:27Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Dup #11343",
      "created_at": "2021-01-15T10:35:59Z",
      "updated_at": "2021-01-15T10:35:59Z"
    }
  ],
  "created_at": "2019-05-29T10:04:29Z",
  "number": 9752,
  "state": "closed",
  "title": "JEA for non IT technician ?",
  "updated_at": "2021-01-15T10:36:14Z"
}