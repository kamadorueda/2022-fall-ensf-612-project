{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6843",
  "author": "daxian-dbw",
  "body": "## PR Summary\r\n\r\nFix #6813\r\n\r\nThis regression was introduced by #6523, in [`PSModuleInfo.cs`](https://github.com/PowerShell/PowerShell/pull/6523/files#diff-9bbf82b18c0321d75bdb0e7693a44040L582). A circular nested module check was removed because the comment there suggested it happens only with a deprecated workflow module. This causes a `StackOverflow` exception when running into circular nested modules.\r\n\r\nCircular nested modules could happen for a module that is not well structured. For example, the module folder `test` contains two files: `test.psd1` and `test.psm1`, and `test.psd1` has the following content:\r\n```\r\n@{ ModuleVersion = '0.0.1'; RootModule = 'test'; NestedModules = @('test') }\r\n```\r\nThe same value `test` is put in both RootModule and NestedModule, which will end up with a module whose nested module points to itself.\r\n\r\nThere are two changes in this PR:\r\n1. Add back the circular nested module check in `PSModuleInfo.cs`.\r\n2. Remove a wrong `Dbg.Assert` in `ModuleCmdletBase.cs` and two checks before it.\r\n   - For the assertion `Dbg.Assert(newManifestInfo.SessionState == ss`, when facing the example above, the nested module will first be loaded with a different session state, and then when trying to load the root module, the same loaded nested module will be reused for it. So 'newManifestInfo.SessionState' is not `ss`. The assersion will fail in that case.\r\n   - For the two checks before the assersion, they are not needed anymore based on the comments there. \r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [ ] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` to the beginning of the title and remove the prefix when the PR is ready.\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] User-facing [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed - Issue link:\r\n- **Testing - New and feature**\r\n    - [ ] Not Applicable or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n        - [x] [Add `[feature]` if the change is significant or affects feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\r\n",
  "closed_at": "2018-05-10T23:09:37Z",
  "comments": [
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@rjmholt I tried out the scenario you mentioned above and powershell handles it (yay!):\r\n```\r\nPS:7> Import-Module mtest\r\nImport-Module : Cannot load the module 'F:\\tmp\\dump\\mtest\\blah' because the module nesting limit has been exceeded. Modules can only be nested to 10 levels. Evaluate and change the order in which you are loading modules to prevent exceeding the nesting limit, and then try running your script again.\r\nAt line:1 char:1\r\n+ Import-Module mtest\r\n+ ~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : InvalidOperation: (F:\\tmp\\dump\\mtest\\blah:String) [Import-Module], InvalidOperationException\r\n+ FullyQualifiedErrorId : Modules_ModuleTooDeeplyNested,Microsoft.PowerShell.Commands.ImportModuleCommand\r\n```",
      "created_at": "2018-05-09T17:02:41Z",
      "updated_at": "2018-05-09T17:02:41Z"
    }
  ],
  "created_at": "2018-05-08T19:51:15Z",
  "number": 6843,
  "state": "closed",
  "title": "Fix a module-loading regression that caused an infinite loop",
  "updated_at": "2018-05-10T23:09:40Z"
}