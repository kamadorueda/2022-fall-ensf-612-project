{
  "_url": "https://github.com/PowerShell/PowerShell/issues/2934",
  "author": "rickwebiii",
  "body": "Suppose I have the following directories in the current working path:\r\nsrc\\foo\\bar\r\n\r\nand the dest directory does not exist.\r\n\r\nRunning \"Copy-Item -Recurse src dest\" yields dest\\foo\\bar\r\n\r\nHowever, if dest does exist then I get dest\\**src**\\foo\\bar\r\n\r\nI at least expect to get the same behavior regardless of whether dest already exists or not.\r\n\r\nEnvironment data\r\n----------------\r\n```\r\nName                           Value\r\n----                           -----\r\nPSVersion                      5.1.14393.576\r\nPSEdition                      Desktop\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nBuildVersion                   10.0.14393.576\r\nCLRVersion                     4.0.30319.42000\r\nWSManStackVersion              3.0\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "dennismi",
      "author_association": "NONE",
      "body": "I can confirm this. It is really annoying. And if you need to add more items to the destination, the copy item throws an error, unless you force it.",
      "created_at": "2017-10-13T08:15:42Z",
      "updated_at": "2017-10-13T08:15:42Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "The same inconsistent behavior also has less obvious manifestations: #7005 and #7010\r\n\r\nThe question is: How should this inconsistency be resolved?  \r\n\r\nIt comes down to this:\r\n\r\n```powershell\r\nCopy-Item -Recurse <source-dir-path> <dest-dir-path>\r\n```\r\n\r\nshould you end up with:\r\n\r\n *  (a) `<dest-dir-path>/<contents-of-source-dir>` \r\n * or (b) `<dest-dir-path>/<source-dir-name>/<contents-of-source-dir>`?\r\n\r\nCurrently - and that's the problem - you get (a) if `<dest-dir-path>` didn't previously exist, and (b) if it did.\r\n\r\nIf we look at the behavior of native utilities for comparison: \r\n\r\n* `xcopy /S` on Windows seemingly always does (a)\r\n* `cp -R` on Unix actually exhibits the same inconsistency as `Copy-Item -Recurse`\r\n\r\nThe only way **to currently get predictable behavior** is to (assume a source dir. path of `$a` and a destination dir. path of `$b`):\r\n\r\n* Ensure that the target dir. (`$b`) already exists.\r\n\r\n* Then, depending on whether you want behavior (a) or (b):\r\n\r\n  * To get behavior (a): Explicitly target the *content* of the source directory:\r\n\r\n     * `Copy-Item -Recurse -Force $a/* $b`\r\n\r\n     * Note the need for `-Force`, which is needed to ensure that _hidden_ items are copied too.\r\n\r\n        * With `cp` on Unix, you can more simply just use `$a/.`, but that doesn't work in PowerShell.\r\n\r\n  * To get behavior (b): No further action needed.\r\n\r\n---\r\n\r\nIf a change is made, it will be a _breaking_ one.\r\n\r\nThe alternative is to merely _document_ the behavior and live with it, but I personally find that unsatisfactory.\r\n",
      "created_at": "2018-06-06T16:29:40Z",
      "updated_at": "2018-06-06T16:29:40Z"
    },
    {
      "author": "Aculeo",
      "author_association": "NONE",
      "body": "While this would be a pretty big breaking change, the current behavior is very confusing and can lead to nasty bugs that are hard to track down. I stumbled into this problem on more than one occasion. My preference would also to get this changed.\r\n\r\nAs it stands I've gotten into the habit of writing this when copying a folder to another location:\r\n\r\n```powershell\r\nif (!(Test-Path $TargetPath)) {\r\n    New-Item -ItemType Directory $TargetPath\r\n}\r\nCopy-Item -Path \"$SourcePath\\*\" -Destination $TargetPath -Recurse -Force\r\n```\r\n\r\nSomewhat annoying to have this much boilerplate code just for a simple, complete and consistent copy.",
      "created_at": "2022-11-11T12:45:28Z",
      "updated_at": "2022-11-11T12:45:28Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@Aculeo, you can ease the pain a bit by replacing the `if` statement with `$null = New-Item -Force -ItemType Directory $TargetPath`, which, thanks to `-Force`, is a quiet no-op if the dir. already exists (the `New-Item` call returns a `[System.IO.DirectoryInfo]` instance either way - representing either the newly created or the preexisting dir.  - which `$null = ` discards).\r\n\r\nYou can therefore even roll it into a single command:\r\n\r\n```powershell\r\nCopy-Item -Path \"$SourcePath\\*\" -Destination (New-Item -Force -ItemType Directory $TargetPath) -Recurse -Force\r\n```",
      "created_at": "2022-11-11T15:18:41Z",
      "updated_at": "2022-11-11T15:18:41Z"
    }
  ],
  "created_at": "2016-12-27T18:26:17Z",
  "number": 2934,
  "state": "open",
  "title": "Different directory structures when using Copy-Item when destination does or does not exist.",
  "updated_at": "2022-11-11T15:18:41Z"
}