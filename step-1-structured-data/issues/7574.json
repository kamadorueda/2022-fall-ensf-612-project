{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7574",
  "author": "alexandair",
  "body": "When we run `echo -n` and `printf` in bash shell, they don't output the trailing newline and piping the output to `base64` gives the encoded string for the actual input string \"foo\" without including the trailing newline. If we do the same in PowerShell shell, the trailing newline is part of the output and we get a different encoded string.\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```bash\r\n$ # a trailing newline is part of the output\r\n$ echo \"foo\" | base64\r\nZm9vCg==\r\n\r\n$ # a trailing newline is not part of the output\r\n$ echo -n \"foo\" | base64\r\nZm9v\r\n\r\n$ # a trailing newline is not part of the output\r\n$ printf \"foo\" | base64\r\nZm9v\r\n```\r\n\r\n```powershell\r\n$ pwsh-preview\r\n\r\nPS> remove-alias echo\r\n\r\nPS> gcm echo\r\n\r\nCommandType     Name     Version    Source\r\n-----------     ----     -------    ------\r\nApplication     echo     0.0.0.0    /bin/echo\r\n\r\n$ # a trailing newline is part of the output (EXPECTED)\r\nPS> echo \"foo\" | base64\r\nZm9vCg==\r\n\r\n$ # a trailing newline is part of the output (UNEXPECTED)\r\nPS> echo -n \"foo\" | base64\r\nZm9vCg==\r\n\r\n$ # a trailing newline is part of the output (UNEXPECTED)\r\nPS> printf \"foo\" | base64\r\nZm9vCg==\r\n\r\n$ # a proof that a trailing newline is part of the output\r\nPS> echo -n \"foo\" | base64 | base64 -d | od -c\r\n0000000   f   o   o  \\n\r\n0000004\r\n\r\n$ # a proof that a trailing newline is part of the output\r\nPS> printf \"foo\" | base64 | base64 -d | od -c\r\n0000000   f   o   o  \\n\r\n0000004\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```none\r\nPS> remove-alias echo\r\nPS> echo \"foo\" | base64\r\nZm9vCg==\r\nPS> echo -n \"foo\" | base64\r\nZm9v\r\nPS> printf \"foo\" | base64\r\nZm9v\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n```none\r\nPS> echo \"foo\" | base64\r\nZm9vCg==\r\nPS> echo -n \"foo\" | base64\r\nZm9vCg==\r\nPS> printf \"foo\" | base64\r\nZm9vCg==\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.1.0-preview.4\r\nPSEdition                      Core\r\nGitCommitId                    6.1.0-preview.4\r\nOS                             Linux 4.4.0-17134-M\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "In PowerShell \"echo\" is an alias for \"Write-Output\". We have request to implement `-Nonewline` switch.",
      "created_at": "2018-08-22T06:55:02Z",
      "updated_at": "2018-08-22T06:55:02Z"
    },
    {
      "author": "alexandair",
      "author_association": "CONTRIBUTOR",
      "body": "This issue is all about  external Linux commands. In repro steps, I remove echo alias, and later use echo Linux command. The problem also applies to printf command.",
      "created_at": "2018-08-22T11:45:08Z",
      "updated_at": "2018-08-22T11:45:08Z"
    }
  ],
  "created_at": "2018-08-20T13:44:16Z",
  "number": 7574,
  "state": "open",
  "title": "Linux commands echo and printf should not output the trailing newline when we run them in PowerShell",
  "updated_at": "2018-08-22T12:53:17Z"
}