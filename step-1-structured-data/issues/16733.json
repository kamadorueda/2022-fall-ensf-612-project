{
  "_url": "https://github.com/PowerShell/PowerShell/issues/16733",
  "author": "natedogith1",
  "body": "### Prerequisites\n\n- [X] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\n\n### Steps to reproduce\n\n```powershell\r\n1..3 | ForEach-Object -ThrottleLimit 1 -Parallel { cmd /k exit 1; Write-Host $? }\r\n```\n\n### Expected behavior\n\n```console\nFalse\r\nFalse\r\nFalse\n```\n\n\n### Actual behavior\n\n```console\nFalse\r\nTrue\r\nTrue\n```\n\n\n### Error details\n\n_No response_\n\n### Environment data\n\n```powershell\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.1\r\nPSEdition                      Core\r\nGitCommitId                    7.2.1\r\nOS                             Microsoft Windows 10.0.19042\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\n```\n\n\n### Visuals\n\n_No response_",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "/cc @PaulHigin ",
      "created_at": "2022-01-12T03:27:15Z",
      "updated_at": "2022-01-12T03:27:15Z"
    },
    {
      "author": "elsaco",
      "author_association": "NONE",
      "body": "@natedogith1 is it `Parallel` or `ThrottleLimit` is breaking `ForEach-Object`?\r\n\r\nI get different results w/out `ThrottleLimit` or other value than `1`:\r\n\r\n```\r\nPS C:\\> 1..3 | ForEach-Object -Parallel { cmd /c exit 1; Write-Host $? }\r\nFalse\r\nFalse\r\nFalse\r\nPS C:\\> 1..3 | ForEach-Object -Parallel { cmd /c exit 1; Write-Host $? } -ThrottleLimit 3\r\nFalse\r\nFalse\r\nFalse\r\nPS C:\\> 1..3 | ForEach-Object -Parallel { cmd /c exit 1; Write-Host $? } -ThrottleLimit 2\r\nFalse\r\nFalse\r\nTrue\r\n```",
      "created_at": "2022-01-13T04:37:28Z",
      "updated_at": "2022-01-13T04:37:28Z"
    },
    {
      "author": "kasini3000",
      "author_association": "NONE",
      "body": "```powershell\r\nPS C:\\ProgramData\\kasini3000> 1..3 | ForEach-Object -ThrottleLimit 1 -Parallel { cmd /k exit 1; Write-Host $? }\r\nFalse\r\nTrue\r\nTrue\r\nPS C:\\ProgramData\\kasini3000> 1..3 | ForEach-Object -ThrottleLimit 1 -Parallel { cmd /k exit 1; Write-Host $? } -UseNewRunspace\r\nFalse\r\nFalse\r\nFalse\r\n\r\nPS C:\\ProgramData\\kasini3000> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.3.0-preview.1\r\nPSEdition                      Core\r\nGitCommitId                    7.3.0-preview.1\r\nOS                             Microsoft Windows 10.0.19044\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n```\r\nLook at the manual to know\uff1a\r\n\r\n### -UseNewRunspace\r\n\r\nIn PowerShell 7, a new runspace is created for each loop iteration to ensure maximum isolation. This can have a large performance and resource penalty.\r\nStarting with PowerShell 7.1, runspaces in the runspace pool will be reused by default. This results in good performance but poor isolation. You can still use the UseNewRunspace switch to create a new runspace for each iteration.",
      "created_at": "2022-01-13T17:44:14Z",
      "updated_at": "2022-01-15T07:51:10Z"
    },
    {
      "author": "237dmitry",
      "author_association": "NONE",
      "body": "```\r\n1..3 | ForEach-Object -ThrottleLimit 1 -Parallel { & { cmd /k exit 1; Write-Host $? } }\r\nFalse\r\nFalse\r\nFalse\r\n```",
      "created_at": "2022-01-14T08:40:14Z",
      "updated_at": "2022-01-14T08:40:14Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Turns out this was reported again (by me) in #17355.\r\n\r\nWhile `-UseNewRunspace` is a _workaround_, it shouldn't be necessary.\r\n\r\n",
      "created_at": "2022-08-29T01:51:46Z",
      "updated_at": "2022-08-29T01:52:08Z"
    },
    {
      "author": "dkaszews",
      "author_association": "CONTRIBUTOR",
      "body": "Isn't this because `Write-Host` itself succeeds, resetting `$?`, so that another thread reads a different value? Basically equivalent to running in parallel: `$global:success = $true; $global:success = [bool] Write-Host $global:success`, where the latter returns nothing, ergo null, cast to false. ",
      "created_at": "2022-08-29T17:56:06Z",
      "updated_at": "2022-08-30T07:08:07Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@dkaszews\r\n\r\nThe true cause of the problem is summarized in [this comment](https://github.com/PowerShell/PowerShell/issues/17355#issuecomment-1128071911) by @PaulHigin, and i suggest continuing the conversation there, if necessary.",
      "created_at": "2022-08-30T03:33:42Z",
      "updated_at": "2022-08-30T07:33:19Z"
    },
    {
      "author": "dkaszews",
      "author_association": "CONTRIBUTOR",
      "body": "@mklement0 corrected my example",
      "created_at": "2022-08-30T07:09:29Z",
      "updated_at": "2022-08-30T07:09:29Z"
    }
  ],
  "created_at": "2022-01-12T00:15:58Z",
  "number": 16733,
  "state": "open",
  "title": "ForEach-Object -Parallel break $?",
  "updated_at": "2022-08-30T07:33:19Z"
}