{
  "_url": "https://github.com/PowerShell/PowerShell/issues/17006",
  "author": "corbob",
  "body": "### Prerequisites\r\n\r\n- [X] Write a descriptive title.\r\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- [X] Search the existing issues.\r\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\r\n\r\n### Steps to reproduce\r\n\r\nWhen I open iTerm2 on MacOS, it defaults to 80 characters wide. When I then run `gci` to look at files in a directory, I do not get any names. Further, if I make it merely 1 character wider I get a 1 character wide column for file names.\r\n\r\n### Expected behavior\r\n\r\n```console\r\nI would expect it to output the names of items, perhaps reducing the size of other columns if needed.\r\n```\r\n\r\n\r\n### Actual behavior\r\n\r\n```console\r\nSee screenshots below\r\n```\r\n\r\n\r\n### Error details\r\n\r\n_No response_\r\n\r\n### Environment data\r\n\r\n```powershell\r\n\u001b[32;1mName                           Value\u001b[0m\r\n\u001b[32;1m----                           -----\u001b[0m\r\nPSVersion                      7.2.1\r\nPSEdition                      Core\r\nGitCommitId                    7.2.1\r\nOS                             Darwin 21.4.0 Darwin Kernel Version 21.4.0: Mon \u2026\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\n\r\n### Visuals\r\n\r\n80 Character buffer:\r\n\r\n![Screenshot of iTerm2 showing directory listing with no item names](https://user-images.githubusercontent.com/30301021/158656691-684f6c83-e515-4336-9e54-881f089df015.png)\r\n\r\n81 Character buffer:\r\n\r\n![Screenshot of iTerm2 showing directory listing with 1 character wide item names](https://user-images.githubusercontent.com/30301021/158656725-a1a038de-a974-47a6-8a44-b4814566a746.png)\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "corbob",
      "author_association": "CONTRIBUTOR",
      "body": "It appears to be table output of default cmdlets that is really poor on 80 characters (or just over 80):\r\n\r\n![image](https://user-images.githubusercontent.com/30301021/158659087-790ae9b7-d28e-4ea6-b8f1-0462d83facfd.png)\r\n\r\n![image](https://user-images.githubusercontent.com/30301021/158659118-a9aa099c-4e06-452d-8032-e9f0931b8f10.png)\r\n",
      "created_at": "2022-03-16T18:14:52Z",
      "updated_at": "2022-03-16T18:14:52Z"
    },
    {
      "author": "jborean93",
      "author_association": "COLLABORATOR",
      "body": "Somewhat related https://github.com/PowerShell/PowerShell/issues/16712.",
      "created_at": "2022-03-16T19:22:34Z",
      "updated_at": "2022-03-16T19:22:34Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "WG-Engine:\r\n\r\nWe think there are two main things we should look to do here:\r\n\r\n1. Define a set of \"Narrow\" views for the builtin cmdlets to be able to use. In the short term, this would allow users to set their own default views to a builtin Narrow view that suits their console, if they prefer / require a narrower-width console.\r\n2. In the longer term, look to enhance the formatting system to be able to recognise that it is operating in a narrow console, and automatically switch to the appropriate \"Narrow\" view to better fit in the console by default.\r\n\r\nSome other relevant discussion points:\r\n\r\n- `-AutoSize` by default is probably not a great option, especially for this cmdlet, as it creates inconsistent output for example in the case of using `Get-ChildItem -Recurse`, many tables with varying column widths can be generated if `-AutoSize` is the default, which may not be desirable. Similar issues exist for any other cmdlet which includes grouping behaviour in its default formatter.\r\n- As a part of the longer-term effort, it may be worth looking into whether the formatter can more intelligently select columns to drop in a case where it is forced to fit into a very narrow console.",
      "created_at": "2022-03-17T23:11:56Z",
      "updated_at": "2022-03-17T23:11:56Z"
    },
    {
      "author": "dkaszews",
      "author_association": "CONTRIBUTOR",
      "body": "Running into the same issue when remoting from my phone, I think that each column should be as narrow as possible, even if it produces inconsistencies with `-Recurse`. There will be inconsistencies anyway if one file is owned by `user_with_a_very_long_name_that_does_not_fit_on_screen_anyway`. I don't understand why User, Group and Size waste so much space. \r\n\r\nI have seen somebody modify the default view for `FileInfo` could that be used to change minimum column width to something reasonable? If so, how? \r\n\r\n![Screenshot_20221016-205938](https://user-images.githubusercontent.com/26599495/196053232-3b566d0b-c08d-4389-9319-f6e96385a3d9.jpg)\r\n",
      "created_at": "2022-10-16T19:07:55Z",
      "updated_at": "2022-10-16T19:07:55Z"
    }
  ],
  "created_at": "2022-03-16T18:03:25Z",
  "labels": [
    "Issue-Question",
    "WG-Engine-Format"
  ],
  "number": 17006,
  "state": "open",
  "title": "Get-ChildItem on 80 character buffer doesn't include the item name, and 81 character it's a single character wide",
  "updated_at": "2022-10-16T19:07:55Z"
}