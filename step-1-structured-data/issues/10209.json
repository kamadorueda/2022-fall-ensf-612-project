{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10209",
  "author": "ghost",
  "body": "sha256 checksums are not in a properly formatted files(or a file).\r\nthis makes it difficult to use them.\r\n\r\n---\r\n\r\n<details>\r\n\r\n<summary>in case more information is required</summary>\r\n\r\n<p>\r\nexample file( https://cdimage.debian.org/debian-cd/current/amd64/iso-cd/SHA256SUMS ) with proper formatting.\r\n\r\n```\r\n58405101948aff46d5261e0a4d3e8f98ea3dc5366a9ada881ebe921eafd5f737  debian-edu-10.0.0-amd64-netinst.iso\r\nde14801ab29ea71e606ff516e87b1ca68499de21098f994778f77121ea41323d  debian-mac-10.0.0-amd64-netinst.iso\r\n```\r\n\r\n---\r\n\r\nmost recent affected releases:\r\nhttps://github.com/PowerShell/PowerShell/tree/v7.0.0-preview.2\r\nhttps://github.com/PowerShell/PowerShell/releases/tag/v6.2.2\r\nhttps://github.com/PowerShell/PowerShell/releases/tag/v6.1.5\r\n\r\n---\r\n\r\ncurrent workaround(incomplete, not preferred):\r\n1. Scroll up or down till you find it. Select the checksums on releases page and click `Inspect Element` and the copy the contents of \r\n\r\n```HTML\r\n<ul>...</ul>\r\n```\r\n\r\n2. Remove the useless text ...\r\n\r\nnote- its not preferred because most people don't expect this to be how a popular project to provide checksums.\r\n</p>\r\n</details>",
  "closed_at": "2021-09-24T03:05:35Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@TravisEz13 Is it possible to put all checksums in a file?",
      "created_at": "2019-07-23T05:00:34Z",
      "updated_at": "2019-07-23T05:00:34Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@snow8gaia Can you contribute a PowerShell script which takes a directory and uses Get-FileHash to generate the format you want?",
      "created_at": "2019-07-24T00:28:19Z",
      "updated_at": "2019-07-24T00:28:19Z"
    },
    {
      "author": "ghost",
      "author_association": "NONE",
      "body": "thanks for powershell. sorry, can't do that; change of plans.\r\n\r\n<details>\r\n\r\n<summary> this may not be the best place to start; **may not work** </summary>\r\n\r\n<p>\r\n\r\nfor eg: directory is stored in $x and is known, `cd $x` and ->\r\n\r\n```powershell\r\nforeach ( $file in gci -File *.*  )\r\n{ echo ( (Get-FileHash $file).Hash + '  ' + $file.name )  >> checksums.SHA256 }\r\n```\r\n\r\nuse `gci -Path x` for a target directory x. works without echo.\r\n\r\nthe format is more due to what is easy to do with the checksum \r\nutilities in coreutils (https://www.gnu.org/software/coreutils/coreutils.html)\r\nand Powershell has no alternative as of 26 Jul 2019.\r\n\r\n---\r\nlinks used -\r\nhttps://askubuntu.com/questions/867246/sha1sum-of-files-in-a-directory \r\nespecially\r\nhttps://ss64.com/ps/foreach.html\r\n\r\nhas a dark theme -\r\nhttps://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/get-filehash?view=powershell-6#examples\r\n\r\n---\r\n\r\nmight not respond to any future events.",
      "created_at": "2019-07-26T12:52:38Z",
      "updated_at": "2019-07-26T12:52:38Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Would we need a single file or multiple checksum files, one for each zipfile? \ud83e\udd14 ",
      "created_at": "2019-07-26T13:24:02Z",
      "updated_at": "2019-07-26T13:24:02Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "I think a single file is adequate as the file has the filenames in it.",
      "created_at": "2019-07-26T21:16:41Z",
      "updated_at": "2019-07-26T21:16:41Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "If we assume we're doing something like the [md5sum](https://en.wikipedia.org/wiki/Md5sum) format we can fairly easily do this:\r\n\r\n```powershell\r\n$Path = \"/folder/path\"\r\n$OutputPath = Join-Path $Path 'hashes.md5'\r\nGet-ChildItem -Path $Path |\r\n    Get-FileHash -Algorithm MD5 |\r\n    ForEach-Object { \"$($_.Hash) $($_.Path | Split-Path -Leaf)\" } |\r\n    Set-Content -Path $OutputPath\r\n```\r\n\r\nThe same can be done for any hashing format that Get-FileHash supports. According to [the wiki pages for file verification](https://en.wikipedia.org/wiki/File_verification), hash files typically just list each file on a line where each line contains a hash and a filename, separated by a single space.\r\n\r\nPretty straightforward format to follow. :)",
      "created_at": "2019-07-26T23:08:38Z",
      "updated_at": "2019-07-26T23:10:57Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "This is what @snow8gaia  provided.  The syntax needs to be fixed, but we should use SHA256\r\n```powershell\r\nforeach ( $file in gci -File *.*  )\r\n{ echo ( (Get-FileHash $file).Hash + '  ' + $file.name )  >> checksums.SHA256 }\r\n```",
      "created_at": "2019-07-27T00:18:36Z",
      "updated_at": "2019-07-27T00:18:36Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "```powershell\r\n$Path = \"/folder/path\"\r\n$OutputPath = Join-Path $Path \u2018hashes.sha256\u2019\r\n$null = New-Item $OutputPath -ItemType File -Force\r\n foreach ($file in Get-ChildItem -Path $Path -File ){\r\n     Get-FileHash -Algorithm SHA256 -Path $file |\r\n     ForEach-Object { \"$($_.Hash) $($file.Name)\" } |\r\n     Out-File -Path $OutputPath -Append\r\n}\r\n```",
      "created_at": "2019-07-27T00:20:19Z",
      "updated_at": "2019-07-27T00:27:57Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "I think having one hash file per file would be confusing.  I don't think that is a viable option.  The format clearly supports multiple files in the hash file, so we can have one file with all the hashes.",
      "created_at": "2019-08-15T20:49:11Z",
      "updated_at": "2019-08-15T20:49:11Z"
    },
    {
      "author": "Chuxel",
      "author_association": "NONE",
      "body": "Any update on this?  I am having to download arm64 for Debian because there's no apt package in the Microsoft pool.  There's no great way to verify automatically unless we parse html.",
      "created_at": "2021-09-18T16:17:05Z",
      "updated_at": "2021-09-18T16:17:05Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "I created https://github.com/PowerShell/PowerShell/pull/16147 to add the sha256 hashes.  ",
      "created_at": "2021-09-23T23:30:30Z",
      "updated_at": "2021-09-23T23:30:30Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "One difference, according to the file spec, we are supposed to add an `*` before the file name for binary files.\r\n\r\n",
      "created_at": "2021-09-29T19:39:10Z",
      "updated_at": "2021-09-29T19:39:10Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "Please provide feedback before the release of 7.2.  After the release of 7.2, we will only backport changes which are not breaking.\r\n\r\nI only implemented sha256.  If you want to implement another hash format, you have the file location and can look at the final code (a bug was found during the release so look at the file in master not the PR), and implement another hash.",
      "created_at": "2021-09-29T19:42:44Z",
      "updated_at": "2021-09-29T19:42:44Z"
    },
    {
      "author": "Chuxel",
      "author_association": "NONE",
      "body": "SHA256 is fine from my perspective! ",
      "created_at": "2021-09-29T20:43:36Z",
      "updated_at": "2021-09-29T20:43:36Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "We are going to be required to provide this format for the contents of our packages.\r\nGenerating this should be simple as we will have a task to just generate this.\r\nImagine this for packages, how much more difficult would this be to use?\r\n\r\n```json\r\n{\r\n    \"Outputs\": [\r\n        {\r\n            \"Source\": \"/Accessibility.dll\",\r\n            \"AzureArtifactsHash\": \"044D5A90000300000004000000FFFF0000B800000000000000400000000000000000\",\r\n            \"Sha256Hash\": \"CF21AA06D52BE85EE2C995BC475E0A90E773AC59B9621D95A53C172FD98DB87F\"\r\n        },\r\n        {\r\n            \"Source\": \"/api-ms-win-core-datetime-l1-1-0.dll\",\r\n            \"AzureArtifactsHash\": \"044D5A90000300000004000000FFFF0000B800000000000000400000000000000000\",\r\n            \"Sha256Hash\": \"913EAAA7997A6AEE53574CFFB83F9C9C1700B1D8B46744A5E12D76A1E53376FD\"\r\n        },\r\n        {\r\n            \"Source\": \"/zh-Hant/WindowsFormsIntegration.resources.dll\",\r\n            \"AzureArtifactsHash\": \"044D5A90000300000004000000FFFF0000B800000000000000400000000000000000\",\r\n            \"Sha256Hash\": \"143F539D34A0653DF145CF3592AA64D60A05147F00ABAC14A6F43E2B59708EC1\"\r\n        }\r\n    ],\r\n    \"CloudBuildId\": \"101010\",\r\n    \"Repo\": \"https://github.com/powershell/powershell\",\r\n    \"Branch\": \"doentexist\",\r\n    \"CommitId\": \"6ee476e9c6d25f12257f5f97635c77b586bff314\",\r\n    \"Version\": \"7.2.10\",\r\n    \"Timestamp\": 1633150231\r\n}\r\n```",
      "created_at": "2021-10-02T19:33:23Z",
      "updated_at": "2021-10-02T19:33:23Z"
    }
  ],
  "created_at": "2019-07-23T04:37:05Z",
  "labels": [
    "Issue-Enhancement",
    "Area-Maintainers-Build",
    "Resolution-Fixed"
  ],
  "number": 10209,
  "state": "closed",
  "title": "placement of sha256 checksums on releases page",
  "updated_at": "2021-10-02T19:33:24Z"
}