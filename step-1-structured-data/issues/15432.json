{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15432",
  "author": "rkeithhill",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 and PowerShell 7+ issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6).\r\n\r\n-->\r\n\r\n## Steps to reproduce\r\n\r\n```powershell\r\niex (New-Object Net.WebClient).DownloadString(\"http://bit.ly/e0Mw9w\")\r\n```\r\n\r\n## Expected behavior\r\n\r\nAfter terminating the rick-roll, executing `clear-host` should clear the entire console but it does not.  \r\n\r\n## Actual behavior\r\n\r\nThis is my console right after executing `clear-host`:\r\n\r\n![image](https://user-images.githubusercontent.com/5177512/119076385-b14d9880-b9af-11eb-861d-ca315c34fe92.png)\r\n\r\nNotice that there is still text at the bottom of the screen.  I don't see this problem in the PowerShell console.  It appears that the script resets what PS thinks is the terminal size.  That actually resets the console size but that does not impact the Windows Terminal tab size.  Before running the script, PS sees the WIndows Terminal buffer/window size as:\r\n\r\n```\r\nBufferSize            : 121,68\r\nWindowSize            : 121,68\r\n```\r\n\r\nAfter the script runs (and is aborted by pressing `Q`)) it is:\r\n\r\n```\r\nBufferSize            : 83,45\r\nWindowSize            : 83,45\r\n```\r\n\r\nIt would appear `Clear-Host` is operating on bad buffer/size data.\r\n\r\n## Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.0-preview.5\r\nPSEdition                      Core\r\nGitCommitId                    7.2.0-preview.5\r\nOS                             Microsoft Windows 10.0.19042\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\nRelated: #644",
  "closed_at": "2022-09-09T01:01:20Z",
  "comments": [
    {
      "author": "237dmitry",
      "author_association": "NONE",
      "body": "> iex (New-Object Net.WebClient).DownloadString(\"http://bit.ly/e0Mw9w\")\r\n\r\nThis is potentially dangerous.\n\n<blockquote></blockquote>",
      "created_at": "2021-05-21T08:00:20Z",
      "updated_at": "2021-05-21T08:00:22Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "@237dmitry fair point.  I've attached Lee Holmes' script (with the sort alias corrected to sort-object) so folks can look at it before running it.  \r\n\r\n\r\n[rick-roll.ps1.txt](https://github.com/PowerShell/PowerShell/files/6523954/rick-roll.ps1.txt)\r\n",
      "created_at": "2021-05-21T16:42:53Z",
      "updated_at": "2021-05-21T16:42:53Z"
    },
    {
      "author": "237dmitry",
      "author_association": "NONE",
      "body": "I have already downloaded the script by removing `iex` and writing output to a file, but it does not work in Linux\r\n\r\nI tried to fix script, commented out all related to (for playing music):\r\n- ComObject (unavailable)\r\n- MTA (unavailable)\r\n\r\nAs a result I got a screen completely filled with similar lines `@;;;;;;;;+###@@@####++#######;;;;;';::;::,:;:::::#'`\r\n",
      "created_at": "2021-05-21T18:29:03Z",
      "updated_at": "2021-05-21T18:29:03Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Yeah, the way it works isn't really cross platform. As far as I know there aren't really any readily-accessible APIs built into core .NET (or pwsh) that allow playing audio and are cross platform. \r\n\r\nThe ASCII lines are how the script renders the \"video\" in the console. Not sure if there are discrepancies in the console on Linux, though. Hard to say without reworking the script a bit, I think. It wasn't written with an expectation to run on Linux, so it makes use of Windows-specific APIs a fair bit there.\r\n\r\n",
      "created_at": "2021-05-21T18:52:31Z",
      "updated_at": "2021-05-21T18:52:31Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "Yes, this is not a cross-platform issue.  The issue is specific to running the script within **Windows Terminal**, which causes `Clear-Host` to not work correctly afterwards.",
      "created_at": "2021-05-21T19:00:27Z",
      "updated_at": "2021-05-21T19:00:27Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "If this script is modifying the window size and not just the buffer size, and Windows Terminal is not respecting those changes properly, I don't think Clear-Host has much of a chance of working correctly.\r\n\r\nI would probably expect that either:\r\n\r\n- The script should be OK to change the buffer size, but changing the window size is an odd choice -- and in any case, it should properly restore the original window and buffer sizes once it is quit, and/or\r\n- This is either a console host issue, or a Windows Terminal issue, whichever end of that is responsible for the change in windowsize being ignored / not picked up on by Windows Terminal.",
      "created_at": "2021-05-21T19:04:31Z",
      "updated_at": "2021-05-21T19:04:44Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "Yup, a simple repro is to dump a bunch of text to the terminal (dir ~) and then execute:\r\n```powershell\r\ndir C:\\Windows\r\n$host.UI.RawUI.WindowSize = New-Object System.Management.Automation.Host.Size 83,45\r\nClear-Host\r\n```",
      "created_at": "2021-05-21T19:12:42Z",
      "updated_at": "2021-05-21T19:15:57Z"
    },
    {
      "author": "237dmitry",
      "author_association": "NONE",
      "body": "I at last tried the script in Windows in Windows Terminal Preview (v. 1.8.1032.0).  Clear-Host works without problem. pwsh 7.1.3",
      "created_at": "2021-05-21T19:13:32Z",
      "updated_at": "2021-05-21T19:13:32Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "I'm on the same version of both and see the issue - even with the simple repro above.",
      "created_at": "2021-05-21T19:15:59Z",
      "updated_at": "2021-05-21T19:15:59Z"
    },
    {
      "author": "237dmitry",
      "author_association": "NONE",
      "body": "Maybe `$profile`, `Prompt{}` and `settings.json` (config of wt) settings has some effect?\r\n",
      "created_at": "2021-05-21T19:32:04Z",
      "updated_at": "2021-05-21T19:32:04Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "Behaves the same with `-noprofile`.",
      "created_at": "2021-05-21T20:45:13Z",
      "updated_at": "2021-05-21T20:45:13Z"
    },
    {
      "author": "237dmitry",
      "author_association": "NONE",
      "body": "I think this code has to be executed in call-block to avoid the remaining variables. You also need to return the default state of the esc-sequences:\r\n```\r\n& { iex (New-Object Net.WebClient).DownloadString(\"http://bit.ly/e0Mw9w\") }; \"`e[0m\"\r\n```\r\nIf just run the script it leaves many variables, you could see them `dir variable:`\r\nThey did not appear immediately, but then they made themselves felt in the form of white background stripes.\r\n",
      "created_at": "2021-05-21T21:13:32Z",
      "updated_at": "2021-05-21T21:13:32Z"
    },
    {
      "author": "237dmitry",
      "author_association": "NONE",
      "body": "In my opinion, this script is not written neatly. It leaves a lot of garbage behind.",
      "created_at": "2021-05-21T21:24:30Z",
      "updated_at": "2021-05-21T21:24:30Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "@237dmitry ignore the script. This issue is really about why the following breaks `Clear-Host` functionality in Windows Terminal:\r\n```powershell\r\ndir C:\\Windows\r\n$host.UI.RawUI.WindowSize = New-Object System.Management.Automation.Host.Size 83,45\r\nClear-Host\r\n```",
      "created_at": "2021-05-21T22:36:21Z",
      "updated_at": "2021-05-21T22:36:21Z"
    },
    {
      "author": "237dmitry",
      "author_association": "NONE",
      "body": "This issue is to team of Window Terminal. In standard host window changed its size but not in WT or Alacritty.\r\n\r\n![ss-20210522024053](https://user-images.githubusercontent.com/78153320/119207562-43849800-baa7-11eb-817a-90e144cddd96.png)\r\n\r\n`Clear-Host` cleared host",
      "created_at": "2021-05-21T23:43:57Z",
      "updated_at": "2021-05-22T05:07:42Z"
    },
    {
      "author": "theJasonHelmick",
      "author_association": "CONTRIBUTOR",
      "body": "The interactive WG has reviewed this issue. We can repo the issue. It appears calling [SetConsoleWindowInfo](https://docs.microsoft.com/en-us/windows/console/setconsolewindowinfo) to change the window doesn't work in Windows Terminal.\r\n\r\nAfter calling the function, the .NET `Console.BufferHeight`, `Console.BufferWidth`, `Console.WindowHeight`, and `WindowWidth` all reflect the specified value. However, the Windows Terminal window doesn't change.  See https://github.com/microsoft/terminal/issues/13940#issuecomment-1240033943 of the issue we opened in the Windows Terminal repo.",
      "created_at": "2022-09-07T20:23:21Z",
      "updated_at": "2022-09-08T00:04:15Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as external and has not had any activity for **1 day**. It has been be closed for housekeeping purposes.",
      "created_at": "2022-09-09T01:01:19Z",
      "updated_at": "2022-09-09T01:01:19Z"
    }
  ],
  "created_at": "2021-05-21T03:22:47Z",
  "labels": [
    "WG-Interactive-Console",
    "Resolution-External"
  ],
  "number": 15432,
  "state": "closed",
  "title": "Clear-Host does not clear the entire Windows Terminal after running Lee's rick-roll",
  "updated_at": "2022-09-09T01:01:20Z"
}