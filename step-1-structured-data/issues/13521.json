{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13521",
  "author": "metablaster",
  "body": "## Steps to reproduce\r\n\r\nTo be able to reproduce problem first install duplicate modules of different version:\r\n\r\n```powershell\r\nInstall-Module -Name PackageManagement -RequiredVersion \"1.3\" -Scope CurrentUser\r\nInstall-Module -Name PackageManagement -RequiredVersion \"1.4.7\" -Scope CurrentUser\r\n```\r\n\r\nNow ask `Get-Module` to get you exact module by specifying fully qualified name of a module\r\n```powershell\r\nGet-Module -ListAvailable -FullyQualifiedName @{ModuleName = \"PackageManagement\"; ModuleVersion = \"1.3\" }\r\n```\r\n\r\n## Expected behavior\r\n\r\n```powershell\r\nModuleType Version    PreRelease Name                                PSEdition ExportedCommands\r\n---------- -------    ---------- ----                                --------- ----------------\r\nScript     1.3                   PackageManagement                   Desk      {Find-Package, Get-Package...}\r\n```\r\n\r\n## Actual behavior\r\n\r\n```powershell\r\nModuleType Version    PreRelease Name                                PSEdition ExportedCommands\r\n---------- -------    ---------- ----                                --------- ----------------\r\nScript     1.4.7                 PackageManagement                   Desk      {Find-Package, Get-Package...}\r\nScript     1.3                   PackageManagement                   Desk      {Find-Package, Get-Package...}\r\n```\r\n\r\n## Environment data\r\n\r\n```powershell\r\nPS> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.3\r\nPSEdition                      Core\r\nGitCommitId                    7.0.3\r\nOS                             Microsoft Windows 10.0.19041\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\nBasically if we specify `FullyQualifiedName` with the exact version then that's what the output must be.\r\nHowever the output includes all the possible modules of different versions (but same name) that one may have on his computer.\r\n\r\nOf course if we specify `-PSEdition \"Core\"` then there is no output at all.",
  "closed_at": "2020-08-26T14:44:45Z",
  "comments": [
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "`ModuleVersion` specifies the minimum version, the key you want is `RequiredVersion`.",
      "created_at": "2020-08-26T14:32:37Z",
      "updated_at": "2020-08-26T14:32:37Z"
    },
    {
      "author": "metablaster",
      "author_association": "NONE",
      "body": "Thank you, I didn't know that, msdn docs only talk about these 2 and GUID key.\r\nBut after your answer I took a look [here](https://docs.microsoft.com/en-us/dotnet/api/microsoft.powershell.commands.modulespecification?view=powershellsdk-7.0.0) and it makes sense.",
      "created_at": "2020-08-26T14:44:45Z",
      "updated_at": "2020-08-26T14:44:45Z"
    }
  ],
  "created_at": "2020-08-26T14:19:11Z",
  "labels": [
    "Issue-Question"
  ],
  "number": 13521,
  "state": "closed",
  "title": "Get-Module -FullyQualifiedName returns modules one didn't ask for",
  "updated_at": "2020-08-26T14:44:45Z"
}