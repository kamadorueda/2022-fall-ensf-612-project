{
  "_url": "https://github.com/PowerShell/PowerShell/issues/2785",
  "author": "clintharrison",
  "body": "Steps to reproduce\r\n------------------\r\nRun the following snippet:\r\n```powershell\r\n$timerA = New-Object Timers.Timer\r\n$timerA.Interval = 1 * 1000\r\n$timerA.AutoReset = $True\r\n$timerA.Enabled = $True\r\n\r\nRegister-ObjectEvent $timerA -SourceIdentifier \"timerA\" -EventName Elapsed -Action {\r\n    Write-Host \"hello from timerA\"\r\n}\r\n\r\n$timerB = New-Object Timers.Timer\r\n$timerB.Interval = 2 * 1000\r\n$timerB.AutoReset = $True\r\n$timerB.Enabled = $True\r\n\r\nRegister-ObjectEvent $timerB -SourceIdentifier \"timerB\" -EventName Elapsed -Action {\r\n    Write-Host \"hello from timerB\"\r\n    ForEach ($name In @(\"timerA\", \"timerB\")) {\r\n        Write-Host \"Stopping $name\"\r\n        Stop-Job $name\r\n        Remove-Job -Force $name\r\n    }\r\n}\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\nBoth timers should stop and input should return to PowerShell as normal, outputting:\r\n```\r\nhello from timerA\r\nhello from timerB\r\nStopping timerA\r\nStopping timerB\r\n```\r\n\r\nActual behavior\r\n---------------\r\nThe PowerShell process hangs (usually, but not always) while stopping timerA, and the process must be killed.\r\n```\r\nhello from timerA\r\nhello from timerB\r\nStopping timerA\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value\r\n----                           -----\r\nWSManStackVersion              3.0\r\nPSRemotingProtocolVersion      2.3\r\nBuildVersion                   3.0.0.0\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.0-alpha.13\r\nSerializationVersion           1.1.0.1\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nCLRVersion\r\nPSVersion                      6.0.0-alpha\r\n```\r\n\r\nUnfortunately I don't have symbols for this alpha version, but doing this in PS 5.1.14393.0, the thread seems to have this stack:\r\n```\r\nntdll.dll!NtDelayExecution+0x14\r\nKERNELBASE.dll!SleepEx+0xa7\r\nclr.dll!EESleepEx+0x33\r\nclr.dll!Thread::UserSleep+0xa5\r\nclr.dll!ThreadNative::Sleep+0xad\r\n[Managed to Unmanaged Transition]\r\nmscorlib.dll!System.Threading.Thread.Sleep+0xa\r\nSystem.Management.Automation.dll!System.Management.Automation.PSLocalEventManager.DrainPendingActions+0x106\r\nSystem.Management.Automation.dll!System.Management.Automation.PSLocalEventManager.UnsubscribeEvent+0x1a5\r\nSystem.Management.Automation.dll!Microsoft.PowerShell.Commands.StopJobCommand.ProcessRecord+0x434\r\n...\r\n```\r\n",
  "closed_at": "2022-06-08T04:00:58Z",
  "comments": [
    {
      "author": "StevenBucher98",
      "author_association": "COLLABORATOR",
      "body": "Cannot seem to reproduce, marking fixed since we have had many releases since this issue first arose. ",
      "created_at": "2022-06-06T17:17:17Z",
      "updated_at": "2022-06-06T17:17:17Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as fixed and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2022-06-08T04:00:57Z",
      "updated_at": "2022-06-08T04:00:57Z"
    }
  ],
  "created_at": "2016-11-26T00:55:35Z",
  "number": 2785,
  "state": "closed",
  "title": "Stop-Job on PSEventJob for System.Timers.Timer Elapsed occasionally waits forever",
  "updated_at": "2022-06-08T04:00:58Z"
}