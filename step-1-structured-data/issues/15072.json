{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15072",
  "author": "hazychill",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 and PowerShell 7+ issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6).\r\n\r\n-->\r\n\r\n## Steps to reproduce\r\n\r\n```powershell\r\nMove-Item -LiteralPath 'D:\\work\\testdir' -Destination 'I:\\work\\testdir'\r\n```\r\n\r\n`D:` and `I:` are just two different simple volume on two different HDD, not DFS or something.\r\n\r\n## Expected behavior\r\nDirectory `testdir` is moved from `D:` to `I:` without error, which is the case with PowerShell-7.2.0-**preview.3**.\r\n\r\n```none\r\nPS D:\\tools\\PowerShell-7.2.0-preview.3-win-x64> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.0-preview.3\r\nPSEdition                      Core\r\nGitCommitId                    7.2.0-preview.3\r\nOS                             Microsoft Windows 10.0.19042\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\nPS D:\\tools\\PowerShell-7.2.0-preview.3-win-x64> Get-ChildItem -LiteralPath 'D:\\work'\r\n\r\n    Directory: D:\\work\r\n\r\nMode                 LastWriteTime         Length Name\r\n----                 -------------         ------ ----\r\nd----          2021/03/20    21:47                testdir\r\n\r\nPS D:\\tools\\PowerShell-7.2.0-preview.3-win-x64> Get-ChildItem -LiteralPath 'I:\\work'\r\nPS D:\\tools\\PowerShell-7.2.0-preview.3-win-x64> Move-Item -LiteralPath 'D:\\work\\testdir' -Destination 'I:\\work\\testdir'\r\nPS D:\\tools\\PowerShell-7.2.0-preview.3-win-x64> Get-ChildItem -LiteralPath 'D:\\work'\r\nPS D:\\tools\\PowerShell-7.2.0-preview.3-win-x64> Get-ChildItem -LiteralPath 'I:\\work'\r\n\r\n    Directory: I:\\work\r\n\r\nMode                 LastWriteTime         Length Name\r\n----                 -------------         ------ ----\r\nd----          2021/03/20    21:59                testdir\r\n\r\nPS D:\\tools\\PowerShell-7.2.0-preview.3-win-x64>\r\n```\r\n\r\n## Actual behavior\r\nIn PowerShell-7.2.0-**preview.4**, Move-Item returns error.\r\n\r\n```none\r\nPS D:\\tools\\PowerShell-7.2.0-preview.4-win-x64> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.0-preview.4\r\nPSEdition                      Core\r\nGitCommitId                    7.2.0-preview.4\r\nOS                             Microsoft Windows 10.0.19042\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\nPS D:\\tools\\PowerShell-7.2.0-preview.4-win-x64> Get-ChildItem -LiteralPath 'D:\\work'\r\n\r\n    Directory: D:\\work\r\n\r\nMode                 LastWriteTime         Length Name\r\n----                 -------------         ------ ----\r\nd----          2021/03/20    21:59                testdir\r\n\r\nPS D:\\tools\\PowerShell-7.2.0-preview.4-win-x64> Get-ChildItem -LiteralPath 'I:\\work'\r\nPS D:\\tools\\PowerShell-7.2.0-preview.4-win-x64> Move-Item -LiteralPath 'D:\\work\\testdir' -Destination 'I:\\work\\testdir'\r\nMove-Item: Source and destination path must have identical roots. Move will not work across volumes.\r\nPS D:\\tools\\PowerShell-7.2.0-preview.4-win-x64> Get-ChildItem -LiteralPath 'D:\\work'\r\n\r\n    Directory: D:\\work\r\n\r\nMode                 LastWriteTime         Length Name\r\n----                 -------------         ------ ----\r\nd----          2021/03/20    21:59                testdir\r\n\r\nPS D:\\tools\\PowerShell-7.2.0-preview.4-win-x64> Get-ChildItem -LiteralPath 'I:\\work'\r\nPS D:\\tools\\PowerShell-7.2.0-preview.4-win-x64>\r\n```\r\n\r\nError details\r\n```none\r\nPS D:\\tools\\PowerShell-7.2.0-preview.4-win-x64> Get-Error\r\n\r\nException             :\r\n    Type       : System.IO.IOException\r\n    TargetSite :\r\n        Name          : MoveTo\r\n        DeclaringType : System.IO.DirectoryInfo\r\n        MemberType    : Method\r\n        Module        : System.IO.FileSystem.dll\r\n    StackTrace :\r\n   at System.IO.DirectoryInfo.MoveTo(String destDirName)\r\n   at Microsoft.PowerShell.Commands.FileSystemProvider.MoveDirectoryInfoUnchecked(DirectoryInfo directory, String destinationPath, Boolean force)\r\n   at Microsoft.PowerShell.Commands.FileSystemProvider.MoveDirectoryInfoItem(DirectoryInfo directory, String destination, Boolean force)\r\n    Message    : Source and destination path must have identical roots. Move will not work across volumes.\r\n    Source     : System.IO.FileSystem\r\n    HResult    : -2146232800\r\nTargetObject          : D:\\work\\testdir\r\nCategoryInfo          : WriteError: (D:\\work\\testdir:DirectoryInfo) [Move-Item], IOException\r\nFullyQualifiedErrorId : MoveDirectoryItemIOError,Microsoft.PowerShell.Commands.MoveItemCommand\r\nInvocationInfo        :\r\n    MyCommand        : Move-Item\r\n    ScriptLineNumber : 1\r\n    OffsetInLine     : 1\r\n    HistoryId        : 4\r\n    Line             : Move-Item -LiteralPath 'D:\\work\\testdir' -Destination 'I:\\work\\testdir'\r\n    PositionMessage  : At line:1 char:1\r\n                       + Move-Item -LiteralPath 'D:\\work\\testdir' -Destination 'I:\\work\\testdi \u2026\r\n                       + ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    InvocationName   : Move-Item\r\n    CommandOrigin    : Internal\r\nScriptStackTrace      : at <ScriptBlock>, <No file>: line 1\r\nPipelineIterationInfo :\r\n```\r\nIn my quick analysis, #14913 may affect this issue. DirectoryInfo.MoveTo returns IOException with `HResult = -2146232800(0x80131620)`, not `-2147024891(0x80070005)`, which fallback condition for CopyAndDelete expects.\r\n\r\n## Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nPS D:\\tools\\PowerShell-7.2.0-preview.4-win-x64> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.0-preview.4\r\nPSEdition                      Core\r\nGitCommitId                    7.2.0-preview.4\r\nOS                             Microsoft Windows 10.0.19042\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2021-03-25T22:11:17Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I can confirm. It's a shame that this happened!\r\nAs I commented in #14913 _we shouldn't depend on driver error codes_.\r\nAnd moreover a best way is to follow .Net and use one code path for all platforms if possible. See https://github.com/PowerShell/PowerShell/pull/14913#issuecomment-791898561",
      "created_at": "2021-03-20T18:01:42Z",
      "updated_at": "2021-03-20T18:03:27Z"
    },
    {
      "author": "237dmitry",
      "author_association": "NONE",
      "body": "Is this even possible? Move a directory from one partition to another without copying/deleting it.",
      "created_at": "2021-03-20T20:30:48Z",
      "updated_at": "2021-03-20T20:30:48Z"
    },
    {
      "author": "jborean93",
      "author_association": "COLLABORATOR",
      "body": "> Is this even possible? Move a directory from one partition to another without copying/deleting it.\r\n\r\nNo but the code is meant to have a fallback to do the copy and delete if the move fails due to it being in different volumes.",
      "created_at": "2021-03-20T21:14:49Z",
      "updated_at": "2021-03-20T21:14:58Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Relying on any `IOException` to try CopyAndDelete() is a big behavioral change and may introduce other subtle side effects.  Looking at my original PR, it seems that the mistake was removing the existing code to check the root drive on Windows.  The safest fix is to add that check back restoring the previous behavior.",
      "created_at": "2021-03-21T01:40:50Z",
      "updated_at": "2021-03-21T01:40:50Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:This issue was addressed in #15077, which has now been successfully released as `v7.2.0-preview.5`.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.2.0-preview.5)\n",
      "created_at": "2021-04-14T23:58:59Z",
      "updated_at": "2021-04-14T23:58:59Z"
    }
  ],
  "created_at": "2021-03-20T14:05:44Z",
  "labels": [
    "WG-Engine-Providers",
    "Needs-Triage"
  ],
  "number": 15072,
  "state": "closed",
  "title": "Move-Item: Move directory to another drive fails",
  "updated_at": "2021-04-14T23:58:59Z"
}