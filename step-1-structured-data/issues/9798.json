{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9798",
  "author": "austoonz",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n\r\n-->\r\n\r\nI installed PowerShell 7.0.0-preview.1 using the [msi](https://github.com/PowerShell/PowerShell/releases/download/v7.0.0-preview.1/PowerShell-7.0.0-preview.1-win-x64.msi) and there are no package providers available.\r\n\r\nI have not uninstalled/reinstalled in case is further information you'd like from the system before I try that.\r\n\r\nI suspect this is something to do with Amazon WorkSpaces. The three Windows 10 Amazon WorkSpaces environments I've installed the above linked MSI on have no package providers available.\r\n\r\nThe one standard Windows 10 desktop I installed the MSI on has the two default package providers.\r\n\r\n# Steps to reproduce\r\n\r\n??\r\n\r\n# Expected behavior\r\n\r\n```none\r\nPS>Get-PackageProvider\r\n\r\nName                     Version          DynamicOptions\r\n----                     -------          --------------\r\nNuGet                    3.0.0.1          Destination, ExcludeVersion, Scope, SkipDependencies, Headers, FilterOnTag, \u2026\r\nPowerShellGet            2.1.2.0          PackageManagementProvider, Type, Scope, AllowClobber, SkipPublisherCheck, In\u2026\r\nPS>\r\n```\r\n\r\n# Actual behavior\r\n\r\n```none\r\nPS C:\\> Get-PackageProvider\r\nPS C:\\>\r\n```\r\n\r\n# Environment data\r\n\r\n```powershell\r\nPS>$PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-preview.1\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-preview.1\r\nOS                             Microsoft Windows 10.0.18362\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\nPS>Get-CimInstance -ClassName Win32_OperatingSystem | Select-Object Caption,Version\r\n\r\nCaption                         Version\r\n-------                         -------\r\nMicrosoft Windows 10 Enterprise 10.0.18362\r\n\r\nPS>(Get-PackageProvider).Count\r\n0\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "RichardSiddaway",
      "author_association": "NONE",
      "body": "I'm seeing the same behaviour of no package providers being available to the PS 7 preview even though PS 6.2.1 and Windows PowerShell can see and use the providers. I'm using a standalone Windows 10 laptop so Amazon Web services (as reported above) isn't an issue for me\r\n ```\r\nPS> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-preview.1\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-preview.1\r\nOS                             Microsoft Windows 10.0.17763\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```",
      "created_at": "2019-06-14T14:44:31Z",
      "updated_at": "2019-06-14T14:48:05Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Came across something like this yesterday on a new install.\r\n\r\nAfter attempting to run any powershelllget or PackageManagement command, run this and check the result:\r\n\r\n```powershell\r\nGet-Module | Select Name, ModuleBase\r\n```\r\n\r\nFor me, I saw PS loading these modules from `C:\\Program Files\\PowerShell\\Modules` before the ones in the `PowerShell7-preview\\modules` folder.\r\n\r\nFor whatever reason I had old versions in that folder, which failed to work pretty much at all, but mostly very quietly failing like this.\r\n\r\nDeleting the ones in the generic folder allowed it to use the ones in its own folders which worked for me.",
      "created_at": "2019-06-14T15:12:21Z",
      "updated_at": "2019-06-14T15:12:21Z"
    },
    {
      "author": "austoonz",
      "author_association": "NONE",
      "body": "Thanks @vexx32 - while that wasn't the case for me it did give me something to look at... and good news.\r\n\r\nThe issue for me has been solved by removing the PackageManagement module from my user PS Module path. I had pre-1.4 versions of PackageManagement which was breaking PowerShell 7.0-preview.1.\r\n\r\nAs soon as I removed PackageManagement and re-launched PowerShell 7.0-preview.1 the PackageProviders started working as expected.\r\n\r\n**Before**\r\n```powershell\r\nPS>Get-Module -Name PackageManagement -ListAvailable | Select Name,Version,ModuleBase\r\n\r\nName              Version ModuleBase\r\n----              ------- ----------\r\nPackageManagement 1.3.1   D:\\Users\\<username>\\Documents\\PowerShell\\Modules\\PackageManagement\\1.3.1\r\nPackageManagement 1.2.4   D:\\Users\\<username>\\Documents\\PowerShell\\Modules\\PackageManagement\\1.2.4\r\nPackageManagement 1.2.3   D:\\Users\\<username>\\Documents\\PowerShell\\Modules\\PackageManagement\\1.2.3\r\nPackageManagement 1.4     C:\\program files\\powershell\\7-preview\\Modules\\PackageManagement\r\n\r\nPS>Get-PackageProvider\r\n\r\nPS>\r\n```\r\n\r\n**After**\r\n```powershell\r\nPS>Get-Module -Name PackageManagement -ListAvailable | Select Name,Version,ModuleBase\r\n\r\nName              Version ModuleBase\r\n----              ------- ----------\r\nPackageManagement 1.4     C:\\program files\\powershell\\7-preview\\Modules\\PackageManagement\r\n\r\nPS>Get-PackageProvider | Select Name,Version\r\n\r\nName          Version\r\n----          -------\r\nNuGet         3.0.0.1\r\nPowerShellGet 2.1.4.0\r\n```",
      "created_at": "2019-06-14T16:42:49Z",
      "updated_at": "2019-06-14T16:42:49Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Awesome! \r\n\r\n@SteveL-MSFT is there anything we can do with respect to this sort of issue? I feel as though anyone coming from PS 6.x to PS 7 risks running into the same issues.",
      "created_at": "2019-06-14T16:54:03Z",
      "updated_at": "2019-06-14T16:54:03Z"
    },
    {
      "author": "RichardSiddaway",
      "author_association": "NONE",
      "body": "@vexx32 That solved the issue I had.  Thank you",
      "created_at": "2019-06-14T17:16:35Z",
      "updated_at": "2019-06-14T17:16:35Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Hmmm, don't see an obvious fix here.  We prioritize modules from the user folder first.\r\n\r\nChanging the current behavior to load newest module irregardless of the priority in `$env:PSModulePath` is a breaking change and likely to impact a number of customers that wanted to use a specific version.\r\n\r\nWe could print out a warning message if we import a module that isn't the latest one, but there's a perf impact to any change that has to gather all the versions to determine if it's latest.\r\n\r\nThe specific issue here with PkgMgmt is that a change in .NET Core 3.0 broke PkgMgmt due to a bug in PkgMgmt which required a change.",
      "created_at": "2019-06-14T17:58:50Z",
      "updated_at": "2019-06-14T17:58:50Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Yeah, I'm wondering if, since we _know_ for a fact that lower versions of PkgMgmt won't work, is there some way we can set a minimum version for PS7 for those modules?",
      "created_at": "2019-06-14T18:00:07Z",
      "updated_at": "2019-06-14T18:00:07Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@vexx32 you can declare a module to require a minimum version of PowerShell, but can't declare a minimum version of a module for PowerShell.  I would hate to special case this within PS7.  Seems like what we need is a way to notify users they have an outdated version of a module.  I'll add this to my PSGet3 RFC.  I'm open to other ideas to help users here as documentation is probably not sufficient.",
      "created_at": "2019-06-20T15:12:55Z",
      "updated_at": "2019-06-20T15:12:55Z"
    },
    {
      "author": "srjennings",
      "author_association": "NONE",
      "body": "I ran into this issue today with PS7 on 1909 (fresh install of PS7 GA version) @SteveL-MSFT @vexx32 \r\nThis was fixed by removing the old version PackageManagement folder from `C:\\Users\\Username\\Documents\\PowerShell\\Modules`",
      "created_at": "2020-03-07T15:24:51Z",
      "updated_at": "2020-03-07T15:24:51Z"
    },
    {
      "author": "bigben386",
      "author_association": "NONE",
      "body": "Hi Everyone. I am having a similar issue. PS7 is my first PS Core install on my system. I don't have any packagemanagement modules in the user directory but get-package shows nothing for me in PS7. Here is my windows powershell output:\r\n```\r\nGet-Module packagemanagement -ListAvailable\r\n\r\n\r\n    Directory: C:\\Program Files (x86)\\WindowsPowerShell\\Modules\r\n\r\n\r\nModuleType Version    Name                                ExportedCommands\r\n---------- -------    ----                                ----------------\r\nBinary     1.0.0.1    PackageManagement                   {Find-Package, Get-Package, Get-PackageProvider, Get-Packa...\r\n\r\n\r\n    Directory: C:\\Program Files\\WindowsPowerShell\\Modules\r\n\r\n\r\nModuleType Version    Name                                ExportedCommands\r\n---------- -------    ----                                ----------------\r\nScript     1.4.6      PackageManagement                   {Find-Package, Get-Package, Get-PackageProvider, Get-Packa...\r\nScript     1.4.5      PackageManagement                   {Find-Package, Get-Package, Get-PackageProvider, Get-Packa...\r\nBinary     1.0.0.1    PackageManagement                   {Find-Package, Get-Package, Get-PackageProvider, Get-Packa...\r\n```\r\n\r\nAny suggestions on how to get these cmdlets working in PS7 is greatly appreciated.",
      "created_at": "2020-03-10T15:38:44Z",
      "updated_at": "2020-03-10T15:42:03Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "if you remove the pre-1.4 versions of PackageManagement in those paths (just delete the folders) it should be usable from that state I think. \ud83d\ude42 ",
      "created_at": "2020-03-10T17:18:31Z",
      "updated_at": "2020-03-10T17:18:31Z"
    },
    {
      "author": "bigben386",
      "author_association": "NONE",
      "body": "I tried deleting the PackageManagement folders and still don't get any results in PS7. I also tried deleting just the 1.0.0.1 folder but that still didn't work. Removing both packagemanagement folders also breaks powershell get thus making it difficult to reinstall packagemanagement.\r\n\r\nIn PS7, get-module shows only v1.4.6. I tried manually importing it. No errors were received but get-package still shows nothing and only nuget and powershellget show up as package providers.",
      "created_at": "2020-03-10T18:00:56Z",
      "updated_at": "2020-03-10T18:00:56Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Those would be the package providers I'd expect to see. Are you expecting something else to show up as well?\r\n\r\n`Get-Package` will only show something if you've installed something from an online source.  If it's returning nothing, it isn't seeing anything installed that way. \r\n\r\nTry using `Find-Module` to see if you can find a module from the PSGallery and/or `Install-Module` to see if installation is working for you. \ud83d\ude42 ",
      "created_at": "2020-03-10T18:19:41Z",
      "updated_at": "2020-03-10T18:19:41Z"
    },
    {
      "author": "bigben386",
      "author_association": "NONE",
      "body": "OK maybe this is a noob PSCore issue then. I have lots of windows powershell scripts that use get-package and uninstall-package. The provider is mostly msi, msu, and programs. Those providers paths in windows powershell are in C:\\Program Files\\WindowsPowerShell\\Modules\\PackageManagement. 1.4.6 is the latest on psgallery. If I import this module into PS7, still those providers do not show up as being available.\r\n```\r\nPS C:\\Windows\\System32> Get-PackageProvider -ListAvailable\r\n\r\nName                     Version          DynamicOptions\r\n----                     -------          --------------\r\nNuGet                    3.0.0.1          Destination, ExcludeVersion, Scope, SkipDependencies, Headers, FilterOnTag, \u2026\r\nPowerShellGet            2.2.3.0          PackageManagementProvider, Type, Scope, AllowClobber, SkipPublisherCheck, In\u2026\r\nPowerShellGet            1.0.0.1\r\n```",
      "created_at": "2020-03-10T19:02:58Z",
      "updated_at": "2020-03-10T19:02:58Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Ah, I gotcha. I'm actually not sure if those providers are _supposed_ to be supported in pwsh going forward. Some / all of that is going to be using Windows-specific APIs, so I would expect some or all of them to be missing in PowerShell 6+\r\n\r\n@SteveL-MSFT are you able to confirm whether the `msi`, `msu`, or `Programs` providers are supposed to be accessible from pwsh?",
      "created_at": "2020-03-10T23:26:51Z",
      "updated_at": "2020-03-10T23:26:51Z"
    },
    {
      "author": "bigben386",
      "author_association": "NONE",
      "body": "Ok. I saw packagemanagement in the list of natively supported windows management modules but maybe you are right about it not including support for all the providers. ",
      "created_at": "2020-03-11T00:43:15Z",
      "updated_at": "2020-03-11T00:43:15Z"
    },
    {
      "author": "ThomasNieto",
      "author_association": "CONTRIBUTOR",
      "body": "@SydneyhSmith / @alerickson are these providers supposed to be available on PS Core?",
      "created_at": "2020-10-19T00:03:26Z",
      "updated_at": "2020-10-19T00:03:26Z"
    }
  ],
  "created_at": "2019-06-01T19:39:52Z",
  "number": 9798,
  "state": "open",
  "title": "No PackageProviders available after installing 7.0.0-preview.1;",
  "updated_at": "2021-01-15T10:41:59Z"
}