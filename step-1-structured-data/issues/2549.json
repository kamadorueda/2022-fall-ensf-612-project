{
  "_url": "https://github.com/PowerShell/PowerShell/issues/2549",
  "author": "oising",
  "body": "Tab completion sometimes becomes completely inoperative due to a failure to populate the type cache for command completion. This can happen when the shell has loaded assemblies that require binding redirection for certain types, but doesn't itself use those types. \n\nFor example, when trying to use completion with the SharePoint administrative mini-shell, the snap-in for SharePoint loads some server-side assemblies from SharePoint. Some of the Types in these assemblies require binding redirection to newer versions of their dependencies - in my case, there is an assembly reference to v10 of sql analysis services, but a binding redirect to v12; this is normally handled by SharePoint's Web.config. The snap-in doesn't use these types, but since InitializeTypeCache scans the entire assembly, it triggers dependency resolution. In the PowerShell context, there are no binding redirections in play, so attempts to load the Types fail with a `ReflectionTypeLoadException` and the entire `InitializeTypeCache` call is aborted, leaving an empty cache, and no working tab completion.\n",
  "closed_at": "2016-11-18T22:36:26Z",
  "comments": [
    {
      "author": "msftclas",
      "author_association": "NONE",
      "body": "Hi **@oising**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    <span>You've already signed the contribution license agreement. Thanks!</span>\n        <p>The agreement was validated by Microsoft and real humans are currently evaluating your PR.</p>\n\nTTYL, MSBOT;\n",
      "created_at": "2016-10-27T19:16:36Z",
      "updated_at": "2016-10-27T19:16:36Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "Great PR, thank you @oising !\n\nCan we use it as an opportunity to remove LINQ usage from this place, according to [coding guidelines](https://github.com/PowerShell/PowerShell/blob/master/docs/dev-process/coding-guidelines.md#performance-considerations) ?\n",
      "created_at": "2016-10-27T19:31:14Z",
      "updated_at": "2016-10-27T19:31:14Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "Also, if you can think about a simple repro, it would be very good to have a test for this. I think it could be done with few `Add-Type -OutputAssembly` calls.\n",
      "created_at": "2016-10-27T19:31:46Z",
      "updated_at": "2016-10-27T19:32:36Z"
    },
    {
      "author": "oising",
      "author_association": "CONTRIBUTOR",
      "body": "Hmm, belay the merge. There will also be cases where a TypeLoadException may occur. Not quite the same thing as a ReflectionTypeLoadException. Investigating...\n",
      "created_at": "2016-10-27T19:44:21Z",
      "updated_at": "2016-10-27T19:44:21Z"
    },
    {
      "author": "oising",
      "author_association": "CONTRIBUTOR",
      "body": "And my fix bars the entire assembly's Types from inclusion in the cache. It appears there are ways to only exclude the failed Types. I'll revise the PR when I'm done.\n",
      "created_at": "2016-10-27T20:16:43Z",
      "updated_at": "2016-10-27T20:16:43Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "I recall hearing that the type cache isn't really necessary - reflection is fast enough on it's own. I'm not sure removing the cache actually helps fix this issue, but if it does, you might explore that assuming the performance really is just as good without the cache.\n",
      "created_at": "2016-10-31T17:19:39Z",
      "updated_at": "2016-10-31T17:19:39Z"
    },
    {
      "author": "oising",
      "author_association": "CONTRIBUTOR",
      "body": "@lzybkr Perhaps, but do we want to incur those kinds of exceptions repeatedly during a session? I guess they are the exception (har har) but yeah, perhaps pragmatism might prevail. I'll check the timings with and without caching.  \n",
      "created_at": "2016-10-31T18:21:54Z",
      "updated_at": "2016-10-31T18:21:54Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "I actually remember that I filed #1574 some time ago, about a similar issue. The described example (misformatted internal type) could be a good example to add to the tests.\n",
      "created_at": "2016-11-01T06:10:14Z",
      "updated_at": "2016-11-01T06:10:14Z"
    }
  ],
  "created_at": "2016-10-27T19:16:32Z",
  "number": 2549,
  "state": "closed",
  "title": "Guard against ReflectionTypeLoadException in InitializeTypeCache",
  "updated_at": "2016-11-18T22:36:26Z"
}