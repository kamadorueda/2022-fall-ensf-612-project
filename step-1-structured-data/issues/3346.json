{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3346",
  "author": "HemantMahawar",
  "body": "https://windowsserver.uservoice.com/forums/301869-powershell/suggestions/12303924-add-a-compile-verb\r\n\r\nNEW Verbs:\r\n- Build",
  "closed_at": "2017-09-02T00:41:08Z",
  "comments": [
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "I think we also talked about `Deploy`, right? ",
      "created_at": "2017-03-16T17:35:26Z",
      "updated_at": "2017-03-16T17:35:26Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@joeyaiello @HemantMahawar These would be under Lifecycle, correct?  Give me a description of Build and Deploy",
      "created_at": "2017-04-23T23:17:50Z",
      "updated_at": "2017-04-23T23:17:50Z"
    },
    {
      "author": "dragonwolf83",
      "author_association": "NONE",
      "body": "Deploy seems to already have a comparable Lifecycle verb, Install. Based on the existing description below, I would think Install would be the more appropriate verb.\r\n\r\n> Install (is)\r\nPlaces a resource in a location, and optionally initializes it. This verb is paired with Uninstall.\r\nFor this action, do not a use verb such as Setup.\r\n\r\nIf you have a Deploy, you also need a Rollback verb. Install and Uninstall both already cover those concepts quite well.\r\n\r\nOn the other hand, you could change the Install language to say it is intended for **local** resources while Deploy is used for remote resources. \r\n\r\nFor Build, I think in software dev it makes more sense than any other verb. The guidance for New though should be updated to remove Build from the list of \"do not use\" verbs.\r\n",
      "created_at": "2017-04-24T01:38:00Z",
      "updated_at": "2017-04-24T01:38:00Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@joeyaiello will write up descriptions of the verbs: build and deploy",
      "created_at": "2017-05-10T23:10:34Z",
      "updated_at": "2017-05-10T23:10:34Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "Here's a first pass, can I get a review from @SteveL-MSFT, @HemantMahawar, and @BrucePay ? \r\n\r\n## Build\r\n\r\nCreates an artifact (usually a binary or ) out of some set of input files (usually source code or declarative documents). For PowerShell's purposes this may include the \"linking\" step of a compilation process. \r\n> Comments: do not use `Compile`\r\n\r\n## Deploy\r\n\r\nSends an application, website, or solution to a remote target[s] in such a way that a consumer of that solution can access it after deployment is complete. This differs from `Install` because it sends this application to a remote target (or targets) to be installed whereas `Install` targets a local instance. This differs from `Publish` because `Deploy` is used for the application lifecycle rather than data or content.",
      "created_at": "2017-05-16T23:01:53Z",
      "updated_at": "2017-08-31T20:17:43Z"
    },
    {
      "author": "RichardSiddaway",
      "author_association": "NONE",
      "body": "I think you also need Rollback to complete the set - Similar argument that Uninstall is local while Rollback is remote - also rollback has the connotation of setting the state back to the point before the deployment.\r\nDeploy/Rollback then tend to function almost as a transaction",
      "created_at": "2017-05-17T09:06:04Z",
      "updated_at": "2017-05-17T09:06:04Z"
    },
    {
      "author": "ArieHein",
      "author_association": "NONE",
      "body": "Although PS likes verbs to have a \"positive\" and \"negative\" effects ,I dont think RollBack is necessary the way forwards, in quite a few DevOps pipelines, Rollback is simple a Deploy -Version \"last working one\", which you can also say that Uninstall is basically Install -U or Install -Action U so while I can understand Install/Uninstall being the English language, RollBack isn't necessary the opposite of Deploy.\r\nIts kind of like the Verb Set, you set a value to a paramaeter, we dont have a UnSet verb,  you just Set it to a new value which underneath implies there was an unset.\r\n\r\nHope this makes sense somewhat :)",
      "created_at": "2017-05-17T16:37:00Z",
      "updated_at": "2017-05-17T16:37:00Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@HemantMahawar can you comment on RollBack verb?",
      "created_at": "2017-05-19T20:39:01Z",
      "updated_at": "2017-05-19T20:39:01Z"
    },
    {
      "author": "dragonwolf83",
      "author_association": "NONE",
      "body": "The trick of keeping standard verbs and buzzwords..... Playing Devil's Advocate here.\r\n\r\nI just remembered that there is also a `Publish` and `Unpublish` verb-set. \r\n> Makes a resource available to others. This verb is paired with Unpublish. \r\n> For this action, do not use verbs such as Deploy, Release, or Install.\r\n\r\n`Publish` is used in Visual Studio instead of `Deploy` for some of the built-in deployment option. So between `Install`, `Deploy`, and `Publish` you have major overlaps of similar concepts. Is it really worth muddling the waters more? I'm assuming its because of the DevOps push and to be more generally accepted driving this. With better guidance, it can be made to work though.\r\n\r\nThinking in terms of Deploy itself. Does it make sense in the context of a Cmdlet vs a Script? When is it better to have a Deploy verb vs a Deploy script with no need for an approved verb? Deployments often are a series of commands (hopefully cmdlets) that do a `Build | Copy | Register | Update-SqlSchema | Update-SqlData`. Should I wrap that into a Deploy cmdlet or would I have a Deploy script that did all of the actions needed? Does wrapping that many things into a single cmdlet go with the original principles of doing one thing well?\r\n\r\n@ArieHein For simple deployments, yes, a `Deploy -Version` works, I also wonder why you would be using Deploy in that case and not just `Copy-Item`. `Build -Version | Copy -Destination`. More complex deployments change the state of the machine or data. In those scenarios, you might have to run unregister/uninstall commands, restore database commands, etc. While you could do that with a `-Rollback` parameter, that goes against the idea of the Verb-Noun concept in PowerShell and doing one thing well.\r\n\r\nFood for thought. I would love to see more feedback on how people are planning to use these verbs and if it makes the most sense to have Deploy/Rollback Cmdlets over a Deploy Script. Personally, I've been doing larger tasks like that as scripts and using Cmdlets to build up re-usable tasks. ",
      "created_at": "2017-05-19T21:45:43Z",
      "updated_at": "2017-05-19T21:45:43Z"
    },
    {
      "author": "ArieHein",
      "author_association": "NONE",
      "body": "By Copy-Item you assume file shares / ports are open between source and target.\r\nDeploy might be the ability to set the transfer method and then do it. \r\nPublish on the other hand is packaging to smaller size to then transfer to the destination.\r\nVS actually uses Build and Release.\r\nDidnt say I'm a fan of Deploy, was just commenting that if Deploy is to be used, not sure RollBack is the right verb.",
      "created_at": "2017-05-20T02:20:41Z",
      "updated_at": "2017-05-20T02:20:41Z"
    },
    {
      "author": "dragonwolf83",
      "author_association": "NONE",
      "body": "I was referring to ASP.NET and SQL Server Data Tools. They both use Publish to indicate you are pushing a build to a web/database server. You can see an example on [MSDN](https://msdn.microsoft.com/en-us/library/dd394698(v=vs.110).aspx).\r\n",
      "created_at": "2017-05-20T02:24:44Z",
      "updated_at": "2017-05-20T02:25:01Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@joeyaiello thoughts on the `RollBack` verb?",
      "created_at": "2017-05-25T16:52:32Z",
      "updated_at": "2017-05-25T16:52:32Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "Yeah, we should probably bring in @grayzu on this, he'll have stronger opinions than me on `Deploy` vs. `Publish` and `Rollback` or no. ",
      "created_at": "2017-05-25T17:37:34Z",
      "updated_at": "2017-05-25T17:37:34Z"
    },
    {
      "author": "grayzu",
      "author_association": "NONE",
      "body": "Let me start by saying that I agree with @dragonwolf83 (nice alias btw). From a DevOps perspective these verbs would typically be used for a script vs a single cmdlet where multiple tasks, steps, things would be done during build or deploy. What that means from an approved verb perspective I will leave up to @joeyaiello, @HemantMahawar & co.\r\n\r\nAs far as Deploy vs Install goes, I see Deploy as more than just a remote vs local thing. Deployments will typically consist of a number of different actions such as configuration, installation, etc. against a number of different targets. For example deploying a web application consists of copying bits, opening ports, configuring IIS, etc. I think the unique thing with deployments vs installations is that deployments will configure components that are not \"Owned\" by the component being deployed. So I do think that deploy make sense as an additional verb and is different than install.\r\n\r\nI agree with @ArieHein points on a Rollback verb. Rollback in a DevOps is typically just another Deployment with the previous configuration. If a component does do an actual rollback where the system is reverted to the previous state, not just applying old config, then the verb would make sense. \r\n",
      "created_at": "2017-06-02T22:21:14Z",
      "updated_at": "2017-06-14T23:36:53Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee reviewed this and agree on `Build` and `Deploy`, however, don't believe there is a need to have Rollback.  For Rollback usage, our recommendation is (other than Deploy a different config) use `-Rollback` switch to `Deploy` or use the `Repair` verb.",
      "created_at": "2017-08-31T00:32:14Z",
      "updated_at": "2017-08-31T00:32:14Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT Should we change the Issue label?",
      "created_at": "2017-08-31T05:32:40Z",
      "updated_at": "2017-08-31T05:32:40Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "I changed the definition of Deploy up above, that's what we decided to go with. ",
      "created_at": "2017-08-31T20:18:11Z",
      "updated_at": "2017-08-31T20:18:11Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "And I think we agreed both Build and Deploy should be in the Lifecycle group. ",
      "created_at": "2017-08-31T20:20:01Z",
      "updated_at": "2017-08-31T20:20:01Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@joeyaiello the short versions of the descriptions are only effectively comments in the code as VerbInfo type today doesn't have a description property (we should probably fix in the future; created https://github.com/PowerShell/PowerShell/issues/4732).  The actual descriptions you put should be in https://github.com/PowerShell/PowerShell-Docs/issues/1630",
      "created_at": "2017-08-31T20:48:37Z",
      "updated_at": "2017-08-31T20:48:37Z"
    }
  ],
  "created_at": "2017-03-16T17:29:32Z",
  "number": 3346,
  "state": "closed",
  "title": "Add DevOps relevant verbs to approved verb list",
  "updated_at": "2017-09-26T08:02:25Z"
}