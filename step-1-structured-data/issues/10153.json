{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10153",
  "author": "lzybkr",
  "body": "# PR Summary\r\n\r\nProof of concept change to speed up ForEach-Object. I don't plan to do further work, but someone else can hopefully use the idea.\r\n\r\nThis undoubtedly misses something important, but it does make ForEach-Object faster. (Note I include the loop for comparison, the cmdlet is still an order of magnitude slower.)\r\n\r\n| Script | Before | After |\r\n|-|-|-|\r\n| `1..100kb \\| % { }` | 335ms | 180ms |\r\n| `foreach ($i in 1..100kb) { }` | 10ms | 10ms |\r\n| `dir -re PowerShell \\| % Name` | 230ms | 220ms |\r\n\r\n## PR Context\r\n\r\nPeople often use trivial pipelines with `ForEach-Object` to micro-benchmark PowerShell and conclude that it is slow, or they should use the `foreach` statement instead of the cmdlet.\r\n\r\nI've long had the idea that we can have dynamic sites like we have for property access or method invocation, for but instead for parameter binding.\r\n\r\nThis PR is the embodiment of that idea for the single use case of binding `InputObject` for the `ForEach-Object` command.\r\n\r\n## PR Checklist\r\n\r\n- [ ] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [ ] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [ ] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [ ] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [ ] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n",
  "closed_at": "2020-07-10T18:00:12Z",
  "comments": [
    {
      "author": "TobiasPSP",
      "author_association": "COLLABORATOR",
      "body": "When using & { process { $_ }} instead of Foreach-Object/Where-Object, there is a huge performance gain, apparently caused by using a simple function instead of an advanced function. Parameter binding is no issue for these cmdlets in the vast majority of use cases as users typically only use $_ in their payload scriptblocks, and thus internally switching to a simple function w/o cmdletbinding might improve the speed without having to reinvent the entire cmdlet. ",
      "created_at": "2019-07-15T05:40:56Z",
      "updated_at": "2019-07-15T05:40:56Z"
    },
    {
      "author": "PrzemyslawKlys",
      "author_association": "NONE",
      "body": "I have an open issue https://github.com/PowerShell/PowerShell/issues/9941 for Where-Object. @daxian-dbw is taking care of it. Maybe those two can be worked together? Seems similar to me?",
      "created_at": "2019-07-15T06:25:49Z",
      "updated_at": "2019-07-15T06:25:49Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I guess there is 2 places for perf consideration:\r\n- Bindings. If source collection is strong typed collection we could bind only once. For common case source collection may contains free-typed objects and we have to do binding for every object.\r\n- Compilation. Perhaps we could compile to something more faster. Ex., for Where-Object a filter function is more faster than scriptblock, maybe a delegate is better. Although maybe this is again binding.",
      "created_at": "2019-07-15T08:57:53Z",
      "updated_at": "2019-07-15T08:57:53Z"
    },
    {
      "author": "mi-hol",
      "author_association": "NONE",
      "body": "@lzybkr @daxian-dbw could the suggestion from @TobiasPSP  be considered for 7.1? In his blog he shows many alternative approaches to speed up pwsh that should be unnecessary due to optimizations in the core.",
      "created_at": "2020-03-22T18:14:45Z",
      "updated_at": "2020-03-22T18:14:45Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@mi-hol Please check out the issue https://github.com/PowerShell/PowerShell/issues/10982. There is tons of discussion there.",
      "created_at": "2020-03-26T22:58:39Z",
      "updated_at": "2020-03-26T22:58:39Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMainainer, Please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2020-05-27T02:03:35Z",
      "updated_at": "2020-05-27T02:03:35Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as stale because it has been marked as requiring author feedback but has not had any activity for **15 days**. It will be closed if no further activity occurs **within 10 days of this comment**.",
      "created_at": "2020-06-30T08:00:20Z",
      "updated_at": "2020-06-30T08:00:20Z"
    },
    {
      "author": "ImportTaste",
      "author_association": "NONE",
      "body": "Why did this PR get marked as 'Waiting on Author' when there wasn't any maintainer feedback that I can see?\r\n\r\n**EDIT:** Oops, nevermind. Didn't notice daxian-dbw was part of the PowerShell team.",
      "created_at": "2022-01-01T17:54:28Z",
      "updated_at": "2022-01-01T17:56:02Z"
    }
  ],
  "created_at": "2019-07-14T22:30:03Z",
  "number": 10153,
  "state": "closed",
  "title": "Fast pipeline binding for ForEach-Object",
  "updated_at": "2022-01-01T17:56:02Z"
}