{
  "_url": "https://github.com/PowerShell/PowerShell/issues/18209",
  "author": "tylermontneyacc",
  "body": "### Summary of the new feature / enhancement\r\n\r\nFor instance, my private NuGet server requires a client certificate. I cannot specify this with `Install-Package`.\r\n\r\n### Proposed technical implementation details (optional)\r\n\r\nAs far as I can tell, `Install-Package` calls `Invoke-WebRequest`. This cmdlet does support client certificate authentication, which should be a simple pass through.",
  "closed_at": "2022-10-04T20:06:11Z",
  "comments": [
    {
      "author": "dkaszews",
      "author_association": "CONTRIBUTOR",
      "body": "Sounds like a simple change, I could look at it but I'm not that familiar with NuGet and don't know how to set up a server for testing. Can you please share an example (can be a partial clone of your private server with changed cert)? ",
      "created_at": "2022-10-04T05:20:06Z",
      "updated_at": "2022-10-04T05:20:06Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "This is a request for Packagemangement not PowerShell https://github.com/oneget/oneget (although it's deprecated)\n\n<blockquote><img src=\"https://opengraph.githubassets.com/9cfaa85086f111b7289ab8f46f083dabfa1fd485698ea20173089e6aeec484dd/OneGet/oneget\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/OneGet/oneget\">GitHub - OneGet/oneget: PackageManagement (aka OneGet) is a package manager for Windows</a></strong></div><div>PackageManagement (aka OneGet) is a package manager for Windows - GitHub - OneGet/oneget: PackageManagement (aka OneGet) is a package manager for Windows</div></blockquote>",
      "created_at": "2022-10-04T14:58:53Z",
      "updated_at": "2022-10-04T14:58:56Z"
    },
    {
      "author": "dkaszews",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT Why? It's about a missing param in `Install-Module` cmdlet. It's the same if .NET had an important feature in `System.Net.Http` that was not exposed via `Invoke-WebRequest`. Here it's possible to download a module via `Invoke-RestMethod` and then installing it from local file, but it makes more sense to add a credential to `Install-Module` directly",
      "created_at": "2022-10-04T15:05:33Z",
      "updated_at": "2022-10-04T15:05:33Z"
    },
    {
      "author": "tylermontneyacc",
      "author_association": "NONE",
      "body": "@SteveL-MSFT I'm not using OneGet.\r\n\r\n@dkaszews I hadn't considered installing from file. As for the server, does this work https://github.com/tylermontneyacc/ExampleNuGetServer?\n\n<blockquote><img src=\"https://opengraph.githubassets.com/697d91d70f5dcab1f11dd9d3fdb408f6d54bfa1e141a9257f1d9d4912d532c7a/tylermontneyacc/ExampleNuGetServer\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/tylermontneyacc/ExampleNuGetServer\">GitHub - tylermontneyacc/ExampleNuGetServer</a></strong></div><div>Contribute to tylermontneyacc/ExampleNuGetServer development by creating an account on GitHub.</div></blockquote>",
      "created_at": "2022-10-04T16:17:02Z",
      "updated_at": "2022-10-04T16:17:04Z"
    },
    {
      "author": "jborean93",
      "author_association": "COLLABORATOR",
      "body": "The `Install-Module` cmdlet is part of the `PowerShellGet` module and is not part of this repository so asking here is the wrong place to ask. The tricky thing is that `PowerShellGet` is going through a transition at the moment, there are 2 different versions out there\r\n\r\n* V2 - https://github.com/PowerShell/PowerShellGetv2\r\n  * This is what gets shipped with Windows and PowerShell 7 currently\r\n  * You use `Install-Module` to install modules and it interacts with `PackageManagement` (OneGet) and `nuget.exe`\r\n  * This is essentially on life support in favour of V3\r\n* V3 - https://github.com/powershell/powershellget\r\n  * Currently a beta but is the future of installing modules in PowerShell\r\n  * You use `Install-PSResource` to install modules\r\n  * There is a shim you can use to get backwards compatibility and make `Install-Module` sit on top of the new command\r\n  * No hard dependency on `nuget.exe` being present on your system and no need for `PackageManagement`\r\n\r\nUnfortunately when looking at `Get-Help Register-PSResourceRepository -Full` I cannot find any parameter that relates to certificate auth which means the functionality is not there. If you wish for this I recommend you raise a request for it at https://github.com/powershell/powershellget so the right people can see it.\r\n\r\n<blockquote><img src=\"https://opengraph.githubassets.com/860d039827fb34650c03e3539672f562b4c7fc71cfca54158f32fc23be792c3d/PowerShell/PowerShellGetv2\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/PowerShell/PowerShellGetv2\">GitHub - PowerShell/PowerShellGetv2: PowerShellGet is the Package Manager for PowerShell</a></strong></div><div>PowerShellGet is the Package Manager for PowerShell - GitHub - PowerShell/PowerShellGetv2: PowerShellGet is the Package Manager for PowerShell</div></blockquote>\r\n<blockquote><img src=\"https://opengraph.githubassets.com/ac2b1b29ef380bcc8c6646e60f94ac3c2ede6df3b119ee677c2329ac5d242035/PowerShell/PowerShellGet\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/PowerShell/PowerShellGet\">GitHub - PowerShell/PowerShellGet: PowerShellGet is the package manager for PowerShell</a></strong></div><div>PowerShellGet is the package manager for PowerShell - GitHub - PowerShell/PowerShellGet: PowerShellGet is the package manager for PowerShell</div></blockquote>",
      "created_at": "2022-10-04T19:01:44Z",
      "updated_at": "2022-10-04T19:09:34Z"
    },
    {
      "author": "dkaszews",
      "author_association": "CONTRIBUTOR",
      "body": "@jborean93 Thanks, I assumed it's part of this repo since it comes bundled with the release.\r\n\r\nIf PowerShell uses v2 and it is not marked as closed yet, and there is no timeline for switching to v3, I think opening an issue there makes most sense.\r\n\r\n@tylermontneyacc Feel free to put a link to the promoted issue here as a comment, I will take a look whether I can try and help. ",
      "created_at": "2022-10-04T19:06:28Z",
      "updated_at": "2022-10-04T19:06:28Z"
    },
    {
      "author": "jborean93",
      "author_association": "COLLABORATOR",
      "body": "You can put it on the v2 repo but I doubt you will get any traction, all work for PowerShellGet is focused on v3 and getting that out the door so it is better to try and implement it there.",
      "created_at": "2022-10-04T19:09:04Z",
      "updated_at": "2022-10-04T19:09:04Z"
    },
    {
      "author": "tylermontneyacc",
      "author_association": "NONE",
      "body": "@jborean93 That makes more sense, just assumed it was part of the PS core.\r\n\r\n@dkaszews I'll throw it in V3.",
      "created_at": "2022-10-04T20:06:04Z",
      "updated_at": "2022-10-04T20:06:04Z"
    }
  ],
  "created_at": "2022-10-03T19:22:37Z",
  "number": 18209,
  "state": "closed",
  "title": "Install-Package should offer client certificate authentication",
  "updated_at": "2022-10-04T20:06:11Z"
}