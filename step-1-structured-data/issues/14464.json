{
  "_url": "https://github.com/PowerShell/PowerShell/issues/14464",
  "author": "metablaster",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 and PowerShell 7+ issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6).\r\n\r\n-->\r\n\r\n## Steps to reproduce\r\n\r\n```powershell\r\nfunction Test-Stream\r\n{\r\n\tforeach ($i in 1..3)\r\n\t{\r\n\t\tWrite-Information -MessageData \"Performing operation $i\" -INFA \"Continue\"\r\n\r\n\t\t[PSCustomObject]@{\r\n\t\t\tKey1 = \"A$i\"\r\n\t\t\tKey2 = \"B$i\"\r\n\t\t}\r\n\t}\r\n}\r\n\r\nTest-Stream\r\n```\r\n\r\n## Expected behavior\r\n\r\n```none\r\nPerforming operation 1\r\n\r\nKey1 Key2\r\n---- ----\r\nA1   B1\r\nPerforming operation 2\r\nA2   B2\r\nPerforming operation 3\r\nA3   B3\r\n```\r\n\r\n## Actual behavior\r\n\r\n```none\r\nPerforming operation 1\r\n\r\nPerforming operation 2\r\nPerforming operation 3\r\nKey1 Key2\r\n---- ----\r\nA1   B1\r\nA2   B2\r\nA3   B3\r\n```\r\n\r\n## Workaround\r\n\r\nOne workaround is to use success stream instead of information stream, ex `Write-Output`:\r\n\r\n```powershell\r\nfunction Test-Stream2\r\n{\r\n\tforeach ($i in 1..3)\r\n\t{\r\n                # Using success stream instead, not good idea!\r\n\t\tWrite-Output \"Performing operation $i\" -INFA \"Continue\"\r\n\r\n\t\t[PSCustomObject]@{\r\n\t\t\tKey1 = \"A$i\"\r\n\t\t\tKey2 = \"B$i\"\r\n\t\t}\r\n\t}\r\n}\r\n\r\nTest-Stream2\r\n```\r\n\r\nWhich results in output shown in `Expected behavior`, but problem is when we need to select property, ex:\r\n\r\n```powershell\r\nTest-Stream2 | Select-Object -Property Key1\r\n```\r\n\r\nThis is even worse because now we not only lost those informational messages, but the output doesn't look right either.\r\n\r\n```none\r\nKey1\r\n----\r\n\r\nA1\r\n\r\nA2\r\n\r\nA3\r\n```\r\n\r\nThis is relatively simple example, since all of the output will still be on same screen, but often enough output can span 20 or more lines or consist of multiple unrelated outputs, and in that case how do you figure out which informational message is referring to which line or output?\r\n\r\nYou see a bunch on informational message in one place and a bunch of output in another place which looks like there is no connections between them and it kinds of defeats the purpose of non success streams. (at least when it comes to showing them in the console)\r\n\r\nExpected behavior would be to print output sequentially instead of separating data and other streams into chunks.\r\n\r\nOff course, same behavior happens with other streams: `Write-Warning`, `Write-Error`, `Write-Debug` etc.. but at least error stream will tell us on which line something happened, but that's not the case with other streams.\r\n\r\nI'm sure there must be some rationale behind current design, and if so, a switch parameter that would let us have expected behavior would be great, ex:\r\n\r\n```powershell\r\n# Wait until success stream is done processing\r\nWrite-Information -Message \"Sample Operation\" -Wait\r\n```\r\n\r\n## Additional related unexpected behavior\r\n\r\nPlease run both functions in same time as follows:\r\n\r\n```powershell\r\nTest-Stream\r\nTest-Stream2\r\n```\r\n\r\nThere is no way this should be expected behavior?\r\n\r\n```\r\nPerforming operation 1\r\n\r\nPerforming operation 2\r\nPerforming operation 3\r\nPerforming operation 1\r\nPerforming operation 2\r\nPerforming operation 3\r\nKey1 Key2\r\n---- ----\r\nA1   B1\r\nA2   B2\r\nA3   B3\r\nA1   B1\r\nA2   B2\r\nA3   B3\r\n```\r\n\r\nAt least those 2 function outputs (including streams) should have been separated, because now it looks like there is one output while there are 2.\r\nAnd if you go ahead and modify my second function `Test-Stream2` then it's going to be even worse because there will be no output at all:\r\n\r\n```powershell\r\n# Modification of Test-Stream2, Test-Stream stays the same\r\nfunction Test-Stream2\r\n{\r\n\tforeach ($i in 1..3)\r\n\t{\r\n\t\tWrite-Information -MessageData \"Performing operation $i\" -INFA \"Continue\"\r\n\r\n\t\t[PSCustomObject]@{\r\n\t\t\tUNRELATED_KEY1 = \"A$i\"\r\n\t\t\tUNRELATED_KEY2 = \"B$i\"\r\n\t\t}\r\n\t}\r\n}\r\n\r\nTest-Stream\r\nTest-Stream2\r\n```\r\n\r\n```none\r\nPerforming operation 1\r\n\r\nPerforming operation 2\r\nPerforming operation 3\r\nPerforming operation 1\r\nPerforming operation 2\r\nPerforming operation 3\r\nKey1 Key2\r\n---- ----\r\nA1   B1\r\nA2   B2\r\nA3   B3\r\n\r\n<output is missing>\r\n\r\n```\r\n\r\nAs you can see, the info messages are telling us both functions run, but second one didn't print anything, in fact it's not clear from this output which one failed and why.\r\n\r\nIf those informational messages would have been printed then we could tell at which point the output stopped working.\r\n\r\nIf after all these samples I'm still wrong, please let me know how to achieve what I'm trying to do.\r\n\r\n**EDIT:**\r\nBtw, I know we should use hash tables for key/value pairs, but this is just an example, and is reproducable with \"non key/value pair\" objects, create any `PSCustomObject` you like and the result will be the same.\r\nAnd `Format-Table` doesn't work for me, it only separates 2 functions, but streams are still unrelated to output.\r\n\r\nI should have titled this issue with `PSCustomObject` but I guess it's too late now...\r\n\r\n## Environment data\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.0\r\nPSEdition                      Core\r\nGitCommitId                    7.1.0\r\nOS                             Microsoft Windows 10.0.19042\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2020-12-19T11:15:36Z",
  "comments": [
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Please see #4594",
      "created_at": "2020-12-19T04:04:16Z",
      "updated_at": "2020-12-19T04:04:16Z"
    },
    {
      "author": "metablaster",
      "author_association": "NONE",
      "body": "Thank you, I searched for this problem for some time but couldn't find this issue.\r\nI'll ask my additional question in the link you posted.",
      "created_at": "2020-12-19T11:15:36Z",
      "updated_at": "2020-12-19T11:15:36Z"
    }
  ],
  "created_at": "2020-12-19T01:51:38Z",
  "number": 14464,
  "state": "closed",
  "title": "Success stream not consistent with other streams",
  "updated_at": "2020-12-19T11:15:37Z"
}