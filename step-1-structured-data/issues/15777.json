{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15777",
  "author": "tikicoder",
  "body": "### Prerequisites\n\n- [X] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\n\n### Steps to reproduce\n\nHere is a sample code below. Basically I am trying to take an array and then break in the foreach. When I do this in a function it causes the script to end.\r\n\r\n$rulesets_keys = @(\"rule1\", \"rule2\", \"rule3\")\r\nfunction test2($rulesets_keys){\r\n  write-host \"test call\"\r\n  test -rulesets_keys $rulesets_keys\r\n  write-host \"end test\"\r\n}\r\nfunction test($rulesets_keys){\r\n\r\n  try {\r\n    $rulesets_keys | foreach { $_; break}\r\n  }\r\n  catch {}\r\n  write-host \"after\"\r\n\r\n}\r\n\r\ntest -rulesets_keys $rulesets_keys\r\ntest2 -rulesets_keys $rulesets_keys\r\n\r\n\r\n---------------\r\noutput \r\nPS C:\\Users\\utruero> test -rulesets_keys $rulesets_keys\r\nrule1\r\nPS C:\\Users\\utruero> test2 -rulesets_keys $rulesets_keys\r\ntest call\r\nrule1\n\n### Expected behavior\n\n```console\nI would expect that the break would just break the foreach function\n```\n\n\n### Actual behavior\n\n```console\nit causes the whole script to break at that point\n```\n\n\n### Error details\n\n```console\nnone\n```\n\n\n### Environment data\n\n```powershell\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.3\r\nPSEdition                      Core\r\nGitCommitId                    7.1.3\r\nOS                             Microsoft Windows 10.0.19042\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\n```\n\n\n### Visuals\n\n![image](https://user-images.githubusercontent.com/787308/125691049-88bbd571-0da2-470e-8941-e7ba51ef9c18.png)\r\n",
  "closed_at": "2021-07-16T12:00:39Z",
  "comments": [
    {
      "author": "jborean93",
      "author_association": "COLLABORATOR",
      "body": "See https://github.com/PowerShell/PowerShell/issues/15762. Using `foreach` like this (as part of a pipeline) is just an alias for `ForEach-Object` which isn't an actual loop in PowerShell. When you use `break/continue` it will continue to unwind the stack until it finds the language level loop which in this case is the whole stack causing it to act like return.\r\n\r\nWhile using `return` in a `ForEach-Object` block is similar to `continue` there's no real equivalent to `break` here. The closest is to have a check at the start and just return when it's true like so:\r\n\r\n```powershell\r\n$break = $false\r\n1..5 | ForEach-Object -Process {\r\n    if ($break) { return }\r\n\r\n    if ($_ -eq 3) {\r\n        $break = $true\r\n        return\r\n    }\r\n\r\n    $_\r\n}\r\n```",
      "created_at": "2021-07-14T23:01:50Z",
      "updated_at": "2021-07-14T23:02:14Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2021-07-16T12:00:38Z",
      "updated_at": "2021-07-16T12:00:38Z"
    }
  ],
  "created_at": "2021-07-14T20:50:41Z",
  "labels": [
    "Issue-Question",
    "Resolution-Answered",
    "Needs-Triage"
  ],
  "number": 15777,
  "state": "closed",
  "title": "Break command inside ForEach causes a return in function",
  "updated_at": "2021-07-16T12:00:39Z"
}