{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6932",
  "author": "kevinlrak",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\n- Windows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nIf it is a bug report:\r\n- make sure you are able to repro it on the latest released version. \r\nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://github.com/PowerShell/PowerShell/blob/master/docs/KNOWNISSUES.md).\r\n- Fill out the following repro template:\r\n\r\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\r\n-->\r\n\r\nTest-Connection was added in [5328](https://github.com/PowerShell/PowerShell/pull/5328 \"Add ported Test-Connection cmdlet\") but it appears that Test-NetConnection is still missing.\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\nGet-Command Test-NetConnection\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```none\r\n\r\nCommandType     Name                                               Version    Source\r\n-----------     ----                                               -------    ------\r\nFunction        Test-NetConnection                                 1.0.0.0    NetTCPIP\r\n\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n```none\r\nGet-Command : The term 'Test-NetConnection' is not recognized as the name of a cmdlet, function, script file, or operable program.\r\nCheck the spelling of the name, or if a path was included, verify that the path is correct and try again.\r\nAt line:1 char:1\r\n+ Get-Command Test-NetConnection\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : ObjectNotFound: (Test-NetConnection:String) [Get-Command], CommandNotFoundException\r\n+ FullyQualifiedErrorId : CommandNotFoundException,Microsoft.PowerShell.Commands.GetCommandCommand\r\n\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.1.0-preview.2\r\nPSEdition                      Core\r\nGitCommitId                    v6.1.0-preview.2\r\nOS                             Microsoft Windows 10.0.14393\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2018-05-26T18:04:13Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "We added `Test-Connection` - this is new **ported** cmdlet. `Test-NetConnection` - this is Windows PowerShell cmdlet from nettcpip module.",
      "created_at": "2018-05-24T17:24:05Z",
      "updated_at": "2018-05-24T17:27:49Z"
    },
    {
      "author": "kevinlrak",
      "author_association": "NONE",
      "body": "I'm a little unclear, does that mean that Powershell 6 will not have Test-NetConnection? I would expect the ability to check a specific port on a system would be of even more interest to unix admins.\r\n\r\nMy assumption was that, like Test-Connection, Test-NetConnection had also been overlooked. If that was an incorrect assumption, then perhaps this should be re-labeled as a feature request. Otherwise, I believe this is a bug.",
      "created_at": "2018-05-24T17:34:43Z",
      "updated_at": "2018-05-24T17:34:43Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@kevinlrak Current `Test-Connection` ported implementation was enhanced. Please see `help Test-Connection`. \r\n```powershell\r\nGet-Help -Name Test-Connection\r\nNAME\r\n    Test-Connection\r\n\r\nSYNTAX\r\n    Test-Connection [-TargetName] <string[]> [-Ping] [-IPv4] [-IPv6] [-ResolveDestination] [-Source <string>]\r\n    [-MaxHops <int>] [-Count <int>] [-Delay <int>] [-BufferSize <int>] [-DontFragment] [-TimeoutSeconds <int>]\r\n    [-Quiet] [<CommonParameters>]\r\n\r\n    Test-Connection [-TargetName] <string[]> [-Ping] [-IPv4] [-IPv6] [-ResolveDestination] [-Source <string>]\r\n    [-MaxHops <int>] [-Delay <int>] [-BufferSize <int>] [-DontFragment] [-Continues] [-TimeoutSeconds <int>] [-Quiet]\r\n    [<CommonParameters>]\r\n\r\n    Test-Connection [-TargetName] <string[]> -Traceroute [-IPv4] [-IPv6] [-ResolveDestination] [-Source <string>]\r\n    [-MaxHops <int>] [-TimeoutSeconds <int>] [-Quiet] [<CommonParameters>]\r\n\r\n    Test-Connection [-TargetName] <string[]> -MTUSizeDetect [-IPv4] [-IPv6] [-ResolveDestination] [-TimeoutSeconds\r\n    <int>] [-Quiet] [<CommonParameters>]\r\n\r\n    Test-Connection [-TargetName] <string[]> -TCPPort <int> [-IPv4] [-IPv6] [-ResolveDestination] [-Source <string>]\r\n    [-TimeoutSeconds <int>] [-Quiet] [<CommonParameters>]\r\n```\r\nYou can to check a specific port too.\r\n.Net Core has still bugs in APIs and not all in Test-Connection works on Unix.\r\nFeel free to test and feedback.\r\n\r\nNettcpip module is not in the repo (another MSFT team is owner) and it is not ported.",
      "created_at": "2018-05-25T04:39:36Z",
      "updated_at": "2019-03-18T12:30:46Z"
    },
    {
      "author": "kevinlrak",
      "author_association": "NONE",
      "body": "@iSazonov what version are you running? I'm on the 6.1.0-preview.2, but my help Test-Connection does not match what you put above. Neither does [the online help page for Test-Connection in Powershell 6](https://docs.microsoft.com/en-us/powershell/module/Microsoft.PowerShell.Management/Test-Connection?view=powershell-6).\r\n\r\nHere is what I get:\r\n```powershell\r\nSYNTAX\r\n    Test-Connection [-ComputerName] <String[]> [-AsJob] [-BufferSize <Int32>] [-Count <Int32>] [-Delay <Int32>] [-Impersonation {Default | Anonymous | Identify | Impersonate | Delegate}] [-ThrottleLimit <Int32>] [-TimeToLive <Int32>] [-DcomAuthentication <AuthenticationLevel>] [-Protocol <String>] [-WsmanAuthentication <String>] [<CommonParameters>]\r\n\r\n    Test-Connection [-ComputerName] <String[]> [-Source] <String[]> [-AsJob] [-BufferSize <Int32>] [-Count <Int32>] [-Credential <PSCredential>] [-Delay <Int32>] [-Impersonation {Default | Anonymous | Identify | Impersonate | Delegate}] [-ThrottleLimit <Int32>] [-TimeToLive <Int32>] [-DcomAuthentication <AuthenticationLevel>] [-Protocol <String>] [-WsmanAuthentication <String>] [<CommonParameters>]\r\n\r\n    Test-Connection [-ComputerName] <String[]> [-BufferSize <Int32>] [-Count <Int32>] [-Delay <Int32>] [-Impersonation {Default | Anonymous | Identify | Impersonate | Delegate}] [-Quiet] [-TimeToLive <Int32>] [-DcomAuthentication <AuthenticationLevel>] [-Protocol <String>] [-WsmanAuthentication <String>] [<CommonParameters>]\r\n```\r\n\r\nHowever, when I try running Test-Connection with the -TCPPort flag, it does seem to function. So I believe this is mostly a problem with that enhancement being undocumented in the latest current release (6.1.0-preview.2)",
      "created_at": "2018-05-25T13:11:29Z",
      "updated_at": "2018-05-25T13:12:33Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@kevinlrak It is a trick :-) or bug. You catch Windows PowerShell help. You can find where it is by:\r\n```c#\r\ngcm Test-Connection | fl\r\n```\r\nI get \r\n```\r\nDLL              : C:\\Users\\sie\\Downloads\\PowerShell-6.1.0-preview.9168-win-x64\\Microsoft.PowerShell.Commands.M\r\n                   anagement.dll\r\nHelpFile         : C:\\Users\\sie\\Documents\\PowerShell\\Help\\en-US\\Microsoft.PowerShell.Commands.Management.dll-He\r\n                   lp.xml\r\n```\r\nAfter I rename folder `C:\\Users\\sie\\Documents\\PowerShell\\Help` I get the right help.",
      "created_at": "2018-05-25T13:25:19Z",
      "updated_at": "2018-05-25T13:25:19Z"
    },
    {
      "author": "corretge",
      "author_association": "NONE",
      "body": "In PowerShell 6.0.2, version installed through HomeBrew on a Mac, both commands are missing:\r\n\r\n- Get-Command : The term 'Test-NetConnection' is not recognized as the name of a cmdlet [...]\r\n- get-Command : The term 'Test-Connection' is not recognized as the name of a cmdlet [...]\r\n\r\n```\r\n$PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.2\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.2\r\nOS                             Darwin 17.5.0 Darwin Kernel Version 17.5.0: Fri Apr 13 19:32:32 PDT 2018; root:xnu-4570.51.2~1/RELEA...\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n```",
      "created_at": "2018-05-29T06:27:40Z",
      "updated_at": "2018-05-29T06:29:56Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@corretge You'll get Test-Connection in 6.1 version or you can use 6.1 Preview2 or current dev builds.",
      "created_at": "2018-05-29T07:34:52Z",
      "updated_at": "2018-05-29T07:34:52Z"
    },
    {
      "author": "MrFly72",
      "author_association": "NONE",
      "body": "In my eyes this is breaking all compatibility with no understand from my side, why not implement Test-NetConnection...\r\nIt would be really wise to implement it .\r\nThis is again one of the commands where I have if/else for what it is running on. and worse enough, it has to be a check for 5.1/7.x, Windows/Linux (5.1 does not support -TCPPort, Linux does not support Test-NetConnection)\r\nis this the type of Multi-Plattform-Support Microsoft is aiming at?\r\nPlease reconsider this, as it really breaks scripts that do network checks and should run on multiple plattforms or be easy to port.\r\n",
      "created_at": "2022-03-13T17:54:02Z",
      "updated_at": "2022-03-13T17:54:02Z"
    },
    {
      "author": "claytonolley",
      "author_association": "NONE",
      "body": "I just came across this today and could really use Test-NetConnection in pwsh on Mac!",
      "created_at": "2022-04-04T17:14:13Z",
      "updated_at": "2022-04-04T17:14:13Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "See above; you should be able to use `Test-Connection` for most of the use cases that `Test-NetConnection` covered in earlier versions. If you have a specific use case that the current implementation doesn't cover, I suggest you open a feature / improvement request for that cmdlet instead. \ud83d\ude42 ",
      "created_at": "2022-04-04T23:04:12Z",
      "updated_at": "2022-04-04T23:04:12Z"
    },
    {
      "author": "MrFly72",
      "author_association": "NONE",
      "body": "@vexx32 But as said above. This breaks scripts to be compatible on multiple plattforms. And that because of a really bad reason, in my eyes, as Test-NetConnection could be easily built as the functionality is present in parts in test-connection.",
      "created_at": "2022-04-05T07:31:48Z",
      "updated_at": "2022-04-05T07:31:48Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "I have to disagree, since I wrote quite a lot of the current implementation of Test-Connection. Many of the features Test-NetConnection had are simply not available in .NET itself currently. Even the things that are there largely only work on Windows, from what I've been able to determine.\r\n\r\nIt's probably possible with a third-party library, but I'm not familiar enough in that area to know what would be useful to look at, nor would I expect the maintainers to want to pull it in as a permanent dependency.\r\n\r\nTest-NetConnection is simply not cross-platform compatible; some of the things it does on WIndows simply don't have direct analogues on other platforms, as far as I am able to tell. `Test-Connection` is, to the best of our current ability, the closest we have and is available even back in WinPS 5.1 (with some minor differences from the current implementation; it too had to be rewritten completely, in the end).\r\n\r\nIf you'd like to expand what it can do, feel free; I have no doubt that useful functionality would likely be welcomed as a PR. \ud83d\ude42 ",
      "created_at": "2022-04-05T13:04:12Z",
      "updated_at": "2022-04-05T13:05:31Z"
    },
    {
      "author": "MrFly72",
      "author_association": "NONE",
      "body": "But exactly thats the current problem. Test-Connection does not support eg. TCPPort in 5.1\r\nSo there is no way currently to write code that can be used on 5.1 + 7.x on multiple plattforms, other then doing stuff like.\r\nif ($IsLinux) ..... etc. In my script I am doing this:\r\n```\r\nif ($IsLinux) {\r\n    if (-Not (Test-Connection -TargetName $url -TcpPort $port)) {\r\n        Write-Host \"Warning! Synology cannot be reached!!!\" -ForegroundColor Red\r\n    }\r\n}\r\nelse {\r\n    if (-Not (Test-NetConnection -ComputerName $url -Port $port)) {\r\n        Write-Host \"Warning! Synology cannot be reached!!!\" -ForegroundColor Red\r\n    }\r\n}\r\n```",
      "created_at": "2022-04-05T13:12:15Z",
      "updated_at": "2022-04-05T13:16:45Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "I mean, if you ensure you're using the same version of PowerShell on both, you can skip the check. Beyond that, I don't know what you can really expect, they're two different software packages.",
      "created_at": "2022-04-05T14:34:23Z",
      "updated_at": "2022-04-05T14:34:23Z"
    },
    {
      "author": "ClaytonOlleyNutrien",
      "author_association": "NONE",
      "body": "Test-Connection is icmp only... I specifically needed something to test a tcp port connection. I just ended up using netcat instead. ",
      "created_at": "2022-04-05T15:16:58Z",
      "updated_at": "2022-04-05T15:16:58Z"
    },
    {
      "author": "MrFly72",
      "author_association": "NONE",
      "body": "> Test-Connection is icmp only... I specifically needed something to test a tcp port connection. I just ended up using netcat instead.\r\n\r\nWith -TCPPort Parameter it is a TCP-Connection?",
      "created_at": "2022-04-05T15:48:55Z",
      "updated_at": "2022-04-05T15:48:55Z"
    },
    {
      "author": "ClaytonOlleyNutrien",
      "author_association": "NONE",
      "body": "My apologies, I missed that. The documentation could use some updating it seems. Thanks, and sorry to bother! ",
      "created_at": "2022-04-05T15:54:20Z",
      "updated_at": "2022-04-05T15:54:20Z"
    },
    {
      "author": "shaheerxt",
      "author_association": "NONE",
      "body": "I know this discussion has been closed, but I wanted to provide an important takeaway.\r\n\r\nI am using mac and installed powershell for it. \r\n`brew install --cask powershell`\r\n\r\nI access it using pwsh command.\r\n\r\nFirst i logged in with **Az login** , and it was successful.\r\n\r\nBut i faced an issue with **Get-AzStorageAccount** command.\r\n`Get-AzStorageAccount: The term 'Get-AzStorageAccount' is not recognized as a name of a cmdlet, function, script file, or executable program.`\r\n\r\nSo installed **Az** module\r\n`Install-Module Az\r\n`\r\n\r\nBut still there was an issue with port connectivity check\r\n```\r\nPS /Users/whosecode> Test-NetConnection -ComputerName ([System.Uri]::new($storageAccount.Context.FileEndPoint).Host) -Port 445\r\nTest-NetConnection: The term 'Test-NetConnection' is not recognized as a name of a cmdlet, function, script file, or executable program.\r\n```\r\n\r\nSo I came across a note about  **Test-Connection** instead of Test-NetConnection , and it seems returning right result.\r\n```\r\nPS /Users/whosecode> Test-Connection -ComputerName ([System.Uri]::new($storageAccount.Context.FileEndPoint).Host) -TcpPort 445\r\nFalse\r\n```",
      "created_at": "2022-10-27T04:01:25Z",
      "updated_at": "2022-10-27T04:01:25Z"
    }
  ],
  "created_at": "2018-05-24T17:09:30Z",
  "labels": [
    "Issue-Question",
    "Resolution-Answered"
  ],
  "number": 6932,
  "state": "closed",
  "title": "Test-NetConnection cmdlet is missing from PowerShell Core 6.0.1 release",
  "updated_at": "2022-10-27T04:01:25Z"
}