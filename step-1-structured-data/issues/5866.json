{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5866",
  "author": "markekraus",
  "body": "I, like several others, disagree with the removal of the `sc` alias for `set-content` from PS Core. This issue is to request it be re-added for 6.1.0. I'm creating this as a separate issue from #5862 as I believe that one speaks more directly about the governance issues than this specific alias.\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\nsc stop spooler\r\ngc stop\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```none\r\nspooler\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n```none\r\n[SC] OpenService FAILED 5:\r\n\r\nAccess is denied.\r\n\r\ngc : Cannot find path 'C:\\Program Files\\PowerShell\\6.0.0\\stop' because it does not exist.\r\nAt line:1 char:1\r\n+ gc stop\r\n+ ~~~~~~~\r\n+ CategoryInfo          : ObjectNotFound: (C:\\Program Files\\PowerShell\\6.0.0\\stop:String) [Get-Content], ItemNotFoundException\r\n+ FullyQualifiedErrorId : PathNotFound,Microsoft.PowerShell.Commands.GetContentCommand\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.0\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.0\r\nOS                             Microsoft Windows 10.0.16299\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2020-02-01T19:14:38Z",
  "comments": [
    {
      "author": "essentialexch",
      "author_association": "NONE",
      "body": "I agree. Please re-add the alias.",
      "created_at": "2018-01-11T13:42:50Z",
      "updated_at": "2018-01-11T13:42:50Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "The Issue is direct duplication #3980 and duplication of some discussions that were previously.\r\n\r\nI think we just lost #3980  otherwise `sc` alias would have been removed a long time ago.\r\n\r\nThe very fact of such a request indicates that the use of aliases in scripts is a bad practice. We've already discussed this before. Even there was a suggestion to exhance the restricted mode to prevent aliases in scripts. Diagnostics are already supported by the PowerShell analyzer and VS Code editor.\r\n\r\nAs for interactive mode, any user can add aliases as he wants.\r\nWe removed not only this alias, but a few more. This we have also discussed earlier. For backward compatibility there was a suggestion to create and use a special module.",
      "created_at": "2018-01-11T13:56:34Z",
      "updated_at": "2018-01-11T13:56:34Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov all well and good. I still disagree with its removal after being around for a decade. I'm not alone and that conversation was mostly carried out in a closed issue with outmuch time or visibility for community feedback. This issue is to give voice to the other side of the argument.",
      "created_at": "2018-01-11T14:01:47Z",
      "updated_at": "2018-01-11T14:02:11Z"
    },
    {
      "author": "essentialexch",
      "author_association": "NONE",
      "body": "@iSazonov then delete ALL THE BUILT-IN ALIASES. I won't like it, but I can get behind it. This \"one this month\", \"one the day before GA\", \"one six months ago\" -- it's ridiculous.",
      "created_at": "2018-01-11T14:05:38Z",
      "updated_at": "2018-01-11T14:05:38Z"
    },
    {
      "author": "Jaykul",
      "author_association": "CONTRIBUTOR",
      "body": "This is NOT a duplication of #3980 -- it's literally _the opposite_ of that.\r\n\r\nI vehemently agree with @swngdnz, the dribbling removal of aliases is painful and is causing me _a lot_ of frustration. Every time someone changes a built-in alias, _**thousands** of people_ have to individually add that into their profile scripts or deal with the frustration every time they inadvertently use the wrong tool because of years of practice.\r\n\r\nPeople keep talking about hypothetical \"backward compatibility modules\" -- but that is just irrational. Such a module doesn't exist. If you were shipping such a module _in the box_, then you could use it as an rationale. You're not. This was suggested **months ago** when the first round of arguments about aliases passed -- move the aliases into modules and let people import the ones they want in their profiles. But nothing was done, and now here we are at GA, and the team is still deleting individual aliases.\r\n\r\nI don't care if the alias comes back. Removing it was the **wrong decision**, but for me, it's done. I'm not going to skip PowerShell 6.0 and wait for 6.1 because of a missing alias, so I have to go modify my profile regardless.  \r\n\r\nIn fact, let's just kill them all #5870",
      "created_at": "2018-01-11T19:32:53Z",
      "updated_at": "2018-01-11T19:32:53Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "First of all: the PowerShell devs have been very good most of the times with listening and respecting the community. I can only guess that pressure from outside the PS team forced this change. Therefore I encourage both sides to be reasonable in this discussion.\r\nI personally use around 10 aliases on a daily basis but would not have a problem if one of them got removed and therefore don't understand why this is an issue. Alias customisation is what the profile is for and PSScriptAnalyzer has a rule to warn against the usage of aliases. I personally have a profile consisting of a common profile and additionally special additions when I am in the ISE or ConEmu and I would simply create another one for pwsh, adding one line is not that hard.\r\nBut maybe we need something like an alias 'theme' that consists of an alias list that is optimised for e.g. WindowPowerShell, Unix and I am sure someone makes `posh-alias` at some point.",
      "created_at": "2018-01-11T19:39:48Z",
      "updated_at": "2018-01-11T19:39:48Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "> Alias customisation is what the profile is for\r\n\r\nExcept when the alias has been around for a decade. Yes. adding the alias back to my profile is simple. You know what else is simple? Adding `.exe` to `sc` to ensure one is calling the binary. I see no benefit to this being removed. That's why it's a problem. I use `sc` when I'm in the console. Now I have to tote around a profile with me on multiple systems or relearn `set-co<tab>`. This was imposed on me and other users for reasons that escape me. Other alias removals make sense to me. `curl` in linux doesn't have a convenient `.exe` to append to it and the full path is painful. But removing `sc` to make it easier to call `sc.exe` on windows when it has been there for a long time and there are PowerShell-native ways to accomplish some/most of `sc.exe` uses just doesn't make sense.",
      "created_at": "2018-01-11T19:53:53Z",
      "updated_at": "2018-01-11T19:54:53Z"
    },
    {
      "author": "essentialexch",
      "author_association": "NONE",
      "body": "> adding one line is not that hard.\r\n\r\nFirst, you have to know to add that line. Second, it's not one line by one person. It's one line by thousands of people. Each of whom has to have that knowledge.\r\n\r\nDo you think your average admin-scripter knows what PSScriptAnalyzer is? Or cares? Or has ever used it? Or ever will? Much less understand why his script has stopped working after installing the \"new and improved\" version of software....\r\n\r\nTilting at windmills. But I care a lot about that average admin-scripter.",
      "created_at": "2018-01-11T20:05:46Z",
      "updated_at": "2018-01-11T20:05:46Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "If someone thinks this is critical, you can spend time and publish to the community a \"PowerShell-Core-Compatibility-Alias-Module\" module to return all or part of Windows PowerShell aliases. If the community wants to, we can even include this module in our distributions. Anyone could auto import this module and be happy.\r\n\r\nGuys please  do not speculate - we have dozens of incompatible changes in cmdlets and many features are still not ported - this is the main problem not only for beginners, but also for experts. Better think about it how to help the project faster and easier to solve it.",
      "created_at": "2018-01-12T03:36:31Z",
      "updated_at": "2018-01-12T03:36:31Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Would addressed in RFC https://github.com/PowerShell/PowerShell-RFC/pull/129",
      "created_at": "2020-02-01T19:14:38Z",
      "updated_at": "2020-02-01T19:14:38Z"
    }
  ],
  "created_at": "2018-01-11T13:36:27Z",
  "number": 5866,
  "state": "closed",
  "title": "Add sc alias for Set-Content",
  "updated_at": "2020-02-01T19:14:39Z"
}