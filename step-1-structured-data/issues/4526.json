{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4526",
  "author": "ghost",
  "body": "<!--\r\n\r\nIf it is a bug report:\r\n- make sure you are able to repro it on the latest released version. \r\nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\r\n- Search the existing issues.\r\n- Refer to the [FAQ](../docs/FAQ.md).\r\n- Refer to the [known issues](../docs/KNOWNISSUES.md).\r\n- Fill out the following repro template\r\n\r\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\r\n-->\r\n\r\nSteps to reproduce\r\n------------------\r\nInstalled PowerShell though: `$ yaourt -S powershell`\r\nThen tried to connect:\r\n```\r\n`PS /home/... > Connect-SPOService -Url \"https://***-admin.sharepoint.com\" -Credential \"***@***.***\"`\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\nThat `Connect-SPOService` is working.\r\n\r\nActual behavior\r\n---------------\r\n\r\n```\r\nConnect-SPOService : The term 'Connect-SPOService' is not recognized as the name of a cmdlet, function, script file, or operable \r\nprogram. Check the spelling of the name, or if a path was included, verify that the path is correct and try again.\r\nAt line:1 char:1\r\n+ Connect-SPOService -Url \"https://***-admin.sharepoint.com\" -Cred ...\r\n+ ~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : ObjectNotFound: (Connect-SPOService:String) [], CommandNotFoundException\r\n    + FullyQualifiedErrorId : CommandNotFoundException\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```\r\nPS /home/...> $PSVersionTable                                                                                             \r\n\r\nName                           Value                                                                                             \r\n----                           -----                                                                                             \r\nPSVersion                      6.0.0-beta                                                                                        \r\nPSEdition                      Core                                                                                              \r\nGitCommitId                    v6.0.0-beta.3                                                                                     \r\nOS                             Linux 4.12.4-1-ARCH #1 SMP PREEMPT Fri Jul 28 18:54:18 UTC 2017                                   \r\nPlatform                       Unix                                                                                              \r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}                                                                           \r\nPSRemotingProtocolVersion      2.3                                                                                               \r\nSerializationVersion           1.1.0.1                                                                                           \r\nWSManStackVersion              3.0     \r\n```\r\n",
  "closed_at": "2017-08-14T06:24:26Z",
  "comments": [
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "The error message just tells us that a cmdlet by that name doesn't exist (and isn't defined in an  auto-loading module).\r\n\r\nGenerally, many cmdlets simply don't work on PS _Core_ (yet), given that the underlying frameworks differ - see [Known Issues](https://github.com/PowerShell/PowerShell/blob/master/docs/KNOWNISSUES.md#net-framework-vs-net-core-framework).\r\n\r\n~~More specifically, [this issue](https://github.com/PowerShell/PowerShell/issues/4187) suggests that the SharePoint cmdlets are contained in a _snapin_, which PS _Core_ fundamentally doesn't support.~~ [This blog post](http://blog.falchionconsulting.com/index.php/2013/01/using-powershell-to-manage-sharepoint-2013-online/) states that a module is now being used for the Sharepoint Online cmdlets, but as @markekraus demonstrates below, the issue is that the included DLL is compiled for the Windows-only full .NET Framework.\r\n\r\nOn a side note: Generally, please make sure that you're running the _latest_ version of PS Core before reporting issues (you're running beta _3_ - current is beta _5_).",
      "created_at": "2017-08-08T15:02:58Z",
      "updated_at": "2017-08-09T08:58:56Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "You can import the SharePoint Online Management Shell using this:\r\n\r\n```powershell\r\n$SPOModulePath = 'C:\\Program Files\\SharePoint Online Management Shell\\'\r\n$adminUPN = 'Admin.User@adatum.com'\r\n$orgName = 'adatum'\r\n\r\n$userCredential = Get-Credential -UserName $adminUPN\r\n$Env:PSModulePath = '{0};{1}' -f $Env:PSModulePath, $SPOModulePath\r\nImport-Module Microsoft.Online.SharePoint.PowerShell -DisableNameChecking\r\n$uri = \"https://$orgName-admin.sharepoint.com\"\r\nConnect-SPOService -Url $uri -Credential $userCredential\r\n```\r\n\r\nBut, there is a some kind of compatibility issue in `Microsoft.SharePoint.Client.ClientContext.GetFormDigestInfoPrivate()` where it is sending a 0 length SOAP `POST` to SharePoint Online when trying to determine if it has a tenant admin site or not. `Connect-SPOService` always returns ` The remote server returned an error: (400) Bad Request.` in beta.5. \r\nIt looks like is has something to do with the way it uses `System.IO.TextWriter` to write to the `System.Net.RequestStream`. In any case, that is something for either the SharePoint Online Module maintainers to correct or something in CoreFX.",
      "created_at": "2017-08-08T17:20:31Z",
      "updated_at": "2017-08-08T17:20:31Z"
    },
    {
      "author": "ghost",
      "author_association": "NONE",
      "body": "@mklement0, thanks, but Arch has only the beta3 at the moment (I like indeed having the latest software and so using Arch is part of it).\r\n\r\n@markekraus, on the line `Import-Module Microsoft.Online.SharePoint.PowerShell -DisableNameChecking` I get:\r\n```\r\nPS /home/...> Import-Module Microsoft.Online.SharePoint.PowerShell -DisableNameChecking                                                                           \r\nImport-Module : The specified module 'Microsoft.Online.SharePoint.PowerShell' \r\nwas not loaded because no valid module file was found in any module directory.\r\nAt line:1 char:1\r\n+ Import-Module Microsoft.Online.SharePoint.PowerShell -DisableNameChec ...\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : ResourceUnavailable: (Microsoft.Online.SharePoin \r\n   t.PowerShell:String) [Import-Module], FileNotFoundException\r\n    + FullyQualifiedErrorId : Modules_ModuleNotFound,Microsoft.PowerShell.Comm \r\n   ands.ImportModuleCommand\r\n```\r\n",
      "created_at": "2017-08-09T07:11:09Z",
      "updated_at": "2017-08-09T09:19:34Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@passboltUser: I see re Arch Linux packages; I have not tried myself (except on Ubuntu), but, based on the [installation instructions](https://github.com/PowerShell/PowerShell/blob/master/docs/installation/linux.md#package-installation-instructions), I'd expect running [the installation script](https://github.com/PowerShell/PowerShell/blob/master/tools/download.sh) directly to work on Arch Linux too, which would get you the latest release:\r\n\r\n```sh\r\nbash <(curl -fsSL https://raw.githubusercontent.com/PowerShell/PowerShell/master/tools/download.sh)\r\n```",
      "created_at": "2017-08-09T08:15:34Z",
      "updated_at": "2017-08-09T08:15:34Z"
    },
    {
      "author": "ghost",
      "author_association": "NONE",
      "body": "@mklement0, Arch doesn't use .`deb`-based packages and there's no `dpkg` installed either. In the script there's only `centos`, `ubuntu` and `opensuse` (maybe you should offer Arch packages). The changelog from beta3 to beta5 also doesn't mention anynthing related to my problem.",
      "created_at": "2017-08-09T08:32:16Z",
      "updated_at": "2017-08-09T08:32:16Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@passboltUser \r\n\r\nI don't believe this will work on Linux. I believe the dll's for the SharePoint Online Modules are compiled for Full .NET Framework which would require them to be used on Windows. Regardless, it wont work there either. There is either an issue with [CoreFX](https://github.com/dotnet/corefx) and compatibility between  `System.IO.TextWriter` and `System.Net.RequestStream` or that is a \"by design\" change that would require the SharePoint Online Module maintainers to correct within their module.\r\n\r\nThis is a PowerShell representation of the C# used in the SharePoint Online Module that is causing the issue.\r\n\r\n```powershell\r\n$Uri = 'https://httpbin.org/post'\r\n$WebRequest = [System.Net.HttpWebRequest]::Create($Uri)\r\n$WebRequest.ContentType = \"text/xml\"\r\n$WebRequest.Method = 'POST'\r\n$BodyString = \"<?xml version=\"\"1.0\"\" encoding=\"\"utf-8\"\"?>`r`n<soap:Envelope xmlns:xsi=\"\"http://www.w3.org/2001/XMLSchema-instance\"\" xmlns:xsd=\"\"http://www.w3.org/2001/XMLSchema\"\" xmlns:soap=\"\"http://schemas.xmlsoap.org/soap/envelope/\"\">`r`n  <soap:Body>`r`n    <GetUpdatedFormDigestInformation xmlns=\"\"http://schemas.microsoft.com/sharepoint/soap/\"\" />`r`n  </soap:Body>`r`n</soap:Envelope>\"\r\n$WebRequest.Headers[\"SOAPAction\"] = \"http://schemas.microsoft.com/sharepoint/soap/GetUpdatedFormDigestInformation\"\r\n$WebRequest.Headers[\"X-RequestForceAuthentication\"] = \"true\"\r\n$RequestStream = $WebRequest.GetRequestStream()\r\n\r\n[System.IO.TextWriter]$TextWriter = [System.IO.StreamWriter]::new($RequestStream, [system.text.encoding]::UTF8)\r\n$TextWriter.Write($BodyString)\r\n$TextWriter.Flush()\r\n$WebRequest.GetRequestStream().Close()\r\n$WebRequest.GetRequestStream().Close()\r\n$Response = $WebRequest.GetResponse()\r\n[System.IO.StreamReader]$ResponseStream = $Response.GetResponseStream()\r\n$ResponseStream.ReadToEnd().Trim()\r\n````\r\n\r\n5.1 result:\r\n\r\n```JSON\r\n{\r\n  \"args\": {},\r\n  \"data\": \"\\ufeff<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\\r\\n<soap:Envelope xmlns:xsi=\\\"http://www.w3.org/2001/XMLSche\r\nma-instance\\\" xmlns:xsd=\\\"http://www.w3.org/2001/XMLSchema\\\" xmlns:soap=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\">\\r\r\n\\n  <soap:Body>\\r\\n    <GetUpdatedFormDigestInformation xmlns=\\\"http://schemas.microsoft.com/sharepoint/soap/\\\" />\\r\\n\r\n</soap:Body>\\r\\n</soap:Envelope>\",\r\n  \"files\": {},\r\n  \"form\": {},\r\n  \"headers\": {\r\n    \"Connection\": \"close\",\r\n    \"Content-Length\": \"356\",\r\n    \"Content-Type\": \"text/xml\",\r\n    \"Expect\": \"100-continue\",\r\n    \"Host\": \"httpbin.org\",\r\n    \"Soapaction\": \"http://schemas.microsoft.com/sharepoint/soap/GetUpdatedFormDigestInformation\",\r\n    \"X-Requestforceauthentication\": \"true\"\r\n  },\r\n  \"json\": null,\r\n  \"origin\": \"173.239.232.48\",\r\n  \"url\": \"https://httpbin.org/post\"\r\n}\r\n```\r\n\r\n6.0.0-beta.5 result:\r\n\r\n```JSON\r\n{\r\n  \"args\": {},\r\n  \"data\": \"\",\r\n  \"files\": {},\r\n  \"form\": {},\r\n  \"headers\": {\r\n    \"Connection\": \"close\",\r\n    \"Content-Length\": \"0\",\r\n    \"Content-Type\": \"text/xml\",\r\n    \"Host\": \"httpbin.org\",\r\n    \"Soapaction\": \"http://schemas.microsoft.com/sharepoint/soap/GetUpdatedFormDigestInformation\",\r\n    \"X-Requestforceauthentication\": \"true\"\r\n  },\r\n  \"json\": null,\r\n  \"origin\": \"173.239.232.48\",\r\n  \"url\": \"https://httpbin.org/post\"\r\n}\r\n```",
      "created_at": "2017-08-09T08:52:30Z",
      "updated_at": "2017-08-09T08:52:30Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@passboltUser: \r\n\r\nTo be clear: this part of the discussion is just about generally running the latest PS Core version on Arch Linux - looks like @markekraus found the real problem.\r\n\r\nRe download script: I see, thanks for letting me know (guess I could have looked at the source myself :).  \r\n\r\nSupporting Arch Linux too via the download script sounds like a great idea, especially if the official package lags behind. (I'm just a fellow PowerShell user, so I can't speak to plans in that regard.)\r\n\r\nHave you tried the [beta.5 AppImage release](https://github.com/PowerShell/PowerShell/releases/download/v6.0.0-beta.5/PowerShell-6.0.0-beta.5-x86_64.AppImage) from the [releases page](https://github.com/PowerShell/PowerShell/releases)? Again, I have no personal experience, but it sounds like AppImages are supported on Arch Linux in principle.  \r\nIf that works, it shouldn't be too hard to integrate it into the download script.",
      "created_at": "2017-08-09T09:00:20Z",
      "updated_at": "2017-08-09T09:03:37Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@passboltUser I'll ad another wrench in this. The SharePoint Online and SharePointPnPPowerShellOnline Modules both have `Microsoft.Win32.Registry` dependencies. Obviously, the windows registry is not available on Linux.\r\n\r\nYou might want to take this issue to [SharePoint/PnP-PowerShell](https://github.com/SharePoint/PnP-PowerShell) and see if they have any plans to make this work with Core and/or Linux.",
      "created_at": "2017-08-09T09:24:23Z",
      "updated_at": "2017-08-09T09:24:23Z"
    },
    {
      "author": "ghost",
      "author_association": "NONE",
      "body": "Thanks @markekraus. So the problem doesn't occur with 5.1? Maybe I should try 5.1?",
      "created_at": "2017-08-09T12:21:55Z",
      "updated_at": "2017-08-09T12:21:55Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@passboltUser assuming you have [downloaded](https://www.microsoft.com/en-us/download/details.aspx?id=35588) and installed the SharePoint Online Module on a Windows system, it should work without issue on Windows PowerShell 5.1. `Connect-SPOService` is not an included command in PowerShell, you have to install the module and as stated previously it is currently only working on Windows.",
      "created_at": "2017-08-09T12:26:38Z",
      "updated_at": "2017-08-09T12:30:15Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@passboltUser: The system requirements stated for the linked download:\r\n\r\n> Windows 10 , Windows 7 Service Pack 1, Windows 8, Windows Server 2008 R2 SP1, Windows Server 2008 Service Pack 2, Windows Server 2012, Windows Server 2016\r\n\r\n> PowerShell 3.0",
      "created_at": "2017-08-09T12:30:34Z",
      "updated_at": "2017-08-09T12:30:34Z"
    },
    {
      "author": "ghost",
      "author_association": "NONE",
      "body": "@markekraus, `Connect-SPOService` works on Windows without problems. I want to install it on my Arch Linux, since PowerShell is open source and available for Linux from what I read. ",
      "created_at": "2017-08-09T13:31:59Z",
      "updated_at": "2017-08-09T13:31:59Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@passboltUser as @mklement0 mentioned earlier not all modules will work on Linux ([more info](https://github.com/PowerShell/PowerShell/blob/master/docs/KNOWNISSUES.md#net-framework-vs-net-core-framework)). If a module was made specifically to run on Windows or was compiled to use the Full .NET framework, it will not run on Linux. That is not an issue with PowerShell Core. As mentioned, this module has dependencies on the Windows Registry. That means it definitely cannot run on Linux as Linux does not have a Windows Registry. It would be up to the module maintainers to port their code to .NET Standard or .NET Core and to write towards Linux compatibility if they so wish. There may be things required by the SharePoint Online API that may not be possible to accomplish on Linux. Or  they may have no desire to make their module available on Linux. or, they may not have had enough demand for it to justify the work required to refactor the module.\r\n\r\nAs the SharePoint Online Module is not an included PowerShell Core module, your best bet is to reach out to the SharePoint teams and ask if they are making any plans to make a Core and/or Linux compatible version of their module.",
      "created_at": "2017-08-09T13:41:31Z",
      "updated_at": "2017-08-09T13:42:41Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "As noted by others, we did work to make existing FullCLR Windows PowerShell modules work with PowerShell Core, however, this doesn't mean they will ever work on non-Windows.  My recommendation is to ask product teams to port their cmdlets to PowerShell Core and ensure they are cross platform.  Feedback coming from users is more likely to succeed than when it comes from the PowerShell Team.  The [SharePoint UserVoice](https://sharepoint.uservoice.com/) is a good place to start.",
      "created_at": "2017-08-14T06:24:26Z",
      "updated_at": "2017-08-14T06:24:26Z"
    },
    {
      "author": "ilantom",
      "author_association": "NONE",
      "body": "Make sure you have installed SharePoint Online Management Shell on your system which worked for me!",
      "created_at": "2018-06-20T16:39:38Z",
      "updated_at": "2018-06-20T16:39:38Z"
    },
    {
      "author": "KungFoo-Panda",
      "author_association": "NONE",
      "body": "I can see this is a closed issue, but just in case it helps somebody.\r\n\r\nThis republishing of the command works on a Mac, albeit the `Connect-SPOService` method is not compatible with a Mac.\r\n\r\nLocate the directory of you PSGallery modules by executing > `Get-Module -ListAvailable`\r\nthis returns a 'Directory' location which is displayed prior to the installed modules section...\r\n\r\n>     Directory: **/Users/{username}/.local/share/powershell/Modules**\r\n> \r\n> ModuleType Version    PreRelease Name                                PSEdition\r\n> ---------- -------    ---------- ----                                ---------\r\n> Binary     16.0.2071\u2026            Microsoft.Online.SharePoint.PowerS\u2026 Desk \r\n> \r\n\r\nThe final step is to import the module directly from the Directory location > `Import-Module /Users/{username}/.local/share/powershell/Modules/Microsoft.Online.SharePoint.PowerShell/`\r\n\r\nIt should now be possible to locate and execute the `Connect-SPOService` method.",
      "created_at": "2021-01-18T23:26:34Z",
      "updated_at": "2021-01-18T23:41:40Z"
    }
  ],
  "created_at": "2017-08-08T14:02:00Z",
  "labels": [
    "Issue-Question",
    "Resolution-External"
  ],
  "number": 4526,
  "state": "closed",
  "title": "Connect-SPOService : The term 'Connect-SPOService' is not recognized as the name of a cmdlet, function, script file, or operable  program. Check the spelling of the name, or if a path was included, verify that the path is correct and try again.",
  "updated_at": "2021-01-18T23:41:40Z"
}