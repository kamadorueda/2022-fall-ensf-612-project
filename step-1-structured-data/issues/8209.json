{
  "_url": "https://github.com/PowerShell/PowerShell/issues/8209",
  "author": "vexx32",
  "body": "## PR Summary\r\n\r\nResolves #8157 \r\n\r\nThis change reflects the cmdlets' actual defined attributes when querying a cmdlet's or function's defined ConfirmImpact value. Tests have been updated to reflect the true values now reported.\r\n\r\nPrior to this PR they would report as having \"Medium\" impact when querying the attribute's set ConfirmImpact as that is the default value, despite not implementing ShouldProcess in the first place nor declaring support for it.\r\n\r\nThis is primarily a change in how this value reports when `SupportsShouldProcess` is not set to `true` for a given command, in the interest of visibility for the actual effective ConfirmImpact level of a cmdlet.\r\n\r\nAll changes from `Medium` to `None` are reflective of this. The only cmdlets that had an actual effective ConfirmImpact change are those that have been changed to `Low` per committee decision, and are all listed in the PR description.\r\n\r\nIt is my hope that by making plain the true effective implementations of ShouldProcess support in cmdlets and the effective ConfirmImpact values here that we can have a concrete reference point to look at and check which cmdlets _should_ have ShouldProcess support and do not, or have an inappropriate ConfirmImpact value.\r\n\r\nPer @PowerShell/powershell-committee's recommendation, the following cmdlets have additionally had their `ConfirmImpact` ratings set to `Low`:\r\n\r\n* `New-PSDrive`\r\n* `New-Alias`\r\n* `New-TemporaryFile`\r\n* `Update-TypeData`\r\n* `Update-FormatData`\r\n* `New-Variable`\r\n* `ForEach-Object`\r\n* `New-ModuleManifest`\r\n* `Receive-PSSession`\r\n\r\n***Note***: The above change with the `ConfirmImpact` reporting highlighted that there were many discussed commands that simply do not currently implement `ShouldProcess` support.\r\n\r\nThe full list of commands loaded in a default session and their current ConfirmImpact ratings are detailed in these gists:\r\n\r\n* [Sorted Alphabetically](https://gist.github.com/vexx32/0405621b4ceca0b706067e10053dd5cb)\r\n* [Sorted by ConfirmImpact](https://gist.github.com/vexx32/b3e044c4f902341df7dd6dd2b76ebffd)\r\n\r\n## Following PR\r\n\r\n1. Further discussion may be warranted as to whether there is **missing** ShouldProcess support, or whether some commands may want to be **increased** in severity.\r\n2. As touched upon in the related issue, we may want to modify the default setting of `ConfirmImpact` according to the _chosen verb_ of a cmdlet. This would only make a difference if the function or cmdlet **explicitly sets** `SupportsShouldProcess = true` _without_ setting a `ConfirmImpact`. Some possible considerations that I think seem intuitive at the present moment:\r\n    * `Get` -> `ConfirmImpact.Low`\r\n    * `Format` -> `ConfirmImpact.Low` \r\n    * `Convert` / `ConvertTo` / `ConvertFrom` -> `ConfirmImpact.Low`\r\n    * `Import` / `Export` -> `ConfirmImpact.Low`\r\n    * `Join` -> `ConfirmImpact.Low`\r\n    * `Measure` -> `ConfirmImpact.Low`\r\n    * `Out` -> `ConfirmImpact.Low`\r\n    * `Remove` -> `ConfirmImpact.High`\r\n    * `Select` -> `ConfirmImpact.Low`\r\n    * `Show` -> `ConfirmImpact.Low`\r\n    * `Stop` -> `ConfirmImpact.High`\r\n    * `Test` -> `ConfirmImpact.Low`\r\n    * `Wait` -> `ConfirmImpact.Low`\r\n    * `Write` -> `ConfirmImpact.Low`\r\n\r\n## PR Checklist\r\n\r\n- [X] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [X] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [X] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` to the beginning of the title and remove the prefix when the PR is ready.\r\n- **User-facing changes**\r\n    - [X] Not Applicable\r\n    - **OR**\r\n    - [ ] User-facing [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed - Issue link:\r\n- **Testing - New and feature**\r\n    - [ ] Not Applicable or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n        - [ ] [Add `[feature]` if the change is significant or affects feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\r\n",
  "closed_at": "2019-01-26T11:12:01Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@vexx32 Please create new ConfirmImpact test for all cmdlets in the repo. I mean that the test should check only current values of ConfirmImpact. It should be another PR and we should merge it before the PR. Then in the PR we'll see changes we'll do. ",
      "created_at": "2018-11-08T05:45:09Z",
      "updated_at": "2018-11-08T05:45:09Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov can you advise the most appropriate location for those tests to be placed? \ud83d\ude42 ",
      "created_at": "2018-11-08T13:14:55Z",
      "updated_at": "2018-11-08T13:14:55Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Perhaps near DefaultCommands.Tests.ps1 would be good. `DefaultConfirmImpacts.Tests.ps1` or something like. \r\nAnd please use the same pattern for clarity.",
      "created_at": "2018-11-08T14:47:23Z",
      "updated_at": "2018-11-08T14:49:26Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "***Note:*** Currently failing test is due to test that expects ConfirmImpact to be reported for a cmdlet that is defined with `ConfirmImpact = 'High'` but does not set `SupportsShouldProcess`. I will fix this test also in the test-focused PR suggested by @iSazonov.",
      "created_at": "2018-11-08T17:45:25Z",
      "updated_at": "2018-11-08T17:45:25Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov I'm having difficulty testing this effectively. It seems `Get-Command` is not registering the default modules as present at test time, it would seem. Tried a few different ways to go, but it seems the point where these tests get executed does not have the modules the default commands are packaged in.\r\n\r\nWould this have to be moved to an xunit test, or do we have some other possible way to test for these? See #8214 ",
      "created_at": "2018-11-08T21:49:57Z",
      "updated_at": "2018-11-08T21:49:57Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@vexx32 See my answer in #8214.",
      "created_at": "2018-11-09T03:28:16Z",
      "updated_at": "2018-11-09T03:28:16Z"
    },
    {
      "author": "stale[bot]",
      "author_association": "NONE",
      "body": "This PR has been automatically marked as stale because it has not had activity in the last 30 days. It will be closed if no further activity occurs within 10 days.\nThank you for your contributions.\nCommunity members are welcome to grab these works.\n",
      "created_at": "2018-12-16T09:17:18Z",
      "updated_at": "2018-12-16T09:17:18Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Bump. Test for this are  in #8214, ready to go. :smile:\r\n\r\nOnce that gets merged in I'll pull in those changes and assess exactly which cmdlets register differently with this change.",
      "created_at": "2018-12-16T12:16:49Z",
      "updated_at": "2018-12-16T13:45:07Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov @SteveL-MSFT \r\n\r\nI noted that while testing these changes the test I had previously constructed didn't provide particularly useful output, and changed it to also `-PassThru` the objects that it compares so that we can actually _see_ the commands it's comparing and the differences properly.\r\n\r\nI tested this locally and it passes, so hopefully the CI should pass as well. I noted as I went through there were still a few commands that _do_ have a properly-implemented `Medium` ShouldProcess level declared. If you like, I can run through and point out the ones that _probably_ should have a `Low` impact by my estimation and you guys can run thru and approve or deny any that shouldn't be changed?\r\n\r\nThere were also a couple as I ran through that I side-eyed and went \"really, _that_ didn't implement ShouldProcess?\" so there may be a few of those kicking about too. Hopefully most of those ones should be pretty obvious in the diff display, though.",
      "created_at": "2018-12-21T03:03:08Z",
      "updated_at": "2018-12-21T03:03:08Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@vexx32 Please update the PR description (if needed).\r\n\r\nDo we need documentation issue?",
      "created_at": "2019-01-19T06:09:02Z",
      "updated_at": "2019-01-19T06:09:02Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "I don't think this change affects any documentation, unless the handful of cmdlets that *did* get changes in their ConfirmImpact mention the impact level specifically.\r\n\r\nThe rest of this change is likely to be largely invisible unless you're specifically looking for this data. PR description is OK, I think it's alright to leave the comments about possible follow up in case someone needs to refer to them. The description of the change remains accurate. :smile:",
      "created_at": "2019-01-19T11:58:09Z",
      "updated_at": "2019-01-19T11:58:09Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Codacy's static analysis for this PR is incorrect and should be ignored.",
      "created_at": "2019-01-26T11:04:59Z",
      "updated_at": "2019-01-26T11:04:59Z"
    }
  ],
  "created_at": "2018-11-08T05:30:12Z",
  "number": 8209,
  "state": "closed",
  "title": "ConfirmImpact: Correctly Report impact level when SupportsShouldProcess = false",
  "updated_at": "2020-06-13T22:09:18Z"
}