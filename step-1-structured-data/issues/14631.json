{
  "_url": "https://github.com/PowerShell/PowerShell/issues/14631",
  "author": "superbonaci",
  "body": "I'm trying to install PowerShell-7.1.1-win-x86.msi on my notebook. Has Intel Atom CPU and Windows 7 Starter Version 6.1 build 7600. I get this error:\r\n\r\n![](https://i.imgur.com/V9nd885.png)\r\n\r\nPowerShell requires the Universal C Runtime to be installed to enable remoting over WinRM. You can find a download link to it here: https://aka.ms/pscore6-prereq\r\n\r\nAny idea how to fix that?",
  "closed_at": "2021-01-23T00:00:05Z",
  "comments": [
    {
      "author": "superbonaci",
      "author_association": "NONE",
      "body": "I can't install Windows 7 SP1 due to lack of drivers.",
      "created_at": "2021-01-19T15:48:23Z",
      "updated_at": "2021-01-19T15:48:23Z"
    },
    {
      "author": "jborean93",
      "author_association": "COLLABORATOR",
      "body": "So did you install the universal C runtime? In your link there is the text that tells you where to get it\r\n\r\n> Install the [Universal C Runtime](https://www.microsoft.com/download/details.aspx?id=50410) on Windows versions predating Windows 10. It's available via direct download or Windows Update. Fully patched systems already have this package installed.",
      "created_at": "2021-01-19T19:09:07Z",
      "updated_at": "2021-01-19T19:09:07Z"
    },
    {
      "author": "superbonaci",
      "author_association": "NONE",
      "body": "@jborean93 which specific file do you recommend?",
      "created_at": "2021-01-19T19:10:52Z",
      "updated_at": "2021-01-19T19:10:52Z"
    },
    {
      "author": "jborean93",
      "author_association": "COLLABORATOR",
      "body": "In the URL you shared (and my quoted response) it says Install the Universal C Runtime. The Universal C Runtime is a link to the Universal C Runtime that you need to install.",
      "created_at": "2021-01-19T19:14:24Z",
      "updated_at": "2021-01-19T19:14:24Z"
    },
    {
      "author": "superbonaci",
      "author_association": "NONE",
      "body": "Downloaded the file `WindowsUCRT.zip`, size `8.237.933 bytes`. Contents are these:\r\n\r\n````\r\n    Directory: C:\\Users\\pp\\Desktop\\WindowsUCRT\r\n\r\n\r\nMode                LastWriteTime     Length Name\r\n----                -------------     ------ ----\r\n-----        23/10/2015     17:46     250148 sdk_license.rtf\r\n-----        20/11/2015     13:52      86038 Windows UCRT ReadMe.rtf\r\n-----        11/12/2015     17:50    1136143 Windows6.0-KB3118401-x64.msu\r\n-----        11/12/2015     17:50     700047 Windows6.0-KB3118401-x86.msu\r\n-----        12/12/2015     18:29    1047061 Windows6.1-KB3118401-x64.msu\r\n-----        12/12/2015     18:29     639386 Windows6.1-KB3118401-x86.msu\r\n-----        15/12/2015      8:40     546756 Windows8-RT-KB3118401-arm.msu\r\n-----        15/12/2015      8:50    1380813 Windows8-RT-KB3118401-x64.msu\r\n-----        15/12/2015      8:45     631624 Windows8-RT-KB3118401-x86.msu\r\n-----        20/11/2015      9:47     544771 Windows8.1-KB3118401-arm.msu\r\n-----        20/11/2015     10:00    1015961 Windows8.1-KB3118401-x64.msu\r\n-----        20/11/2015      9:54     607985 Windows8.1-KB3118401-x86.msu\r\n````\r\n\r\nI get for all of them this error:\r\n\r\n![](https://i.imgur.com/laT1mZn.png)\r\n\r\nWindows Update Standalone Installer\r\nThe update is not applicable to your computer.",
      "created_at": "2021-01-20T21:53:01Z",
      "updated_at": "2021-01-20T21:53:01Z"
    },
    {
      "author": "superbonaci",
      "author_association": "NONE",
      "body": "@iSazonov why do you mark as properly answered when was not. Obviously there are compatibility issues.",
      "created_at": "2021-01-20T21:54:03Z",
      "updated_at": "2021-01-20T21:54:03Z"
    },
    {
      "author": "jborean93",
      "author_association": "COLLABORATOR",
      "body": "If you can't install the update as it's not applicable then there's nothing PowerShell can do. Update your OS to a newer version, you can't keep using end of life products and still expect new software to work on them.",
      "created_at": "2021-01-20T22:02:02Z",
      "updated_at": "2021-01-20T22:02:02Z"
    },
    {
      "author": "superbonaci",
      "author_association": "NONE",
      "body": "@jborean93 Ideally Service Pack 1 should work, but can't due to lack of a certain driver. PowerShell installer should know better and not recommend me an update that doesn't work.",
      "created_at": "2021-01-20T22:06:52Z",
      "updated_at": "2021-01-20T22:06:52Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> @iSazonov why do you mark as properly answered when was not. Obviously there are compatibility issues.\r\n\r\nThe repository is for PowerShell developers and only bugs can be addressed here. To get a support please use other resources from MSFT or community.\r\n\r\nNotice, Windows 7 is not supported some years.\r\n\r\nYou could skip the installer step and enable remoting later manually.",
      "created_at": "2021-01-21T04:27:53Z",
      "updated_at": "2021-01-21T04:32:39Z"
    },
    {
      "author": "superbonaci",
      "author_association": "NONE",
      "body": "> You could skip the installer step and enable remoting later manually.\r\n\r\nWhat is that and how do I do it?",
      "created_at": "2021-01-21T07:28:00Z",
      "updated_at": "2021-01-21T07:28:00Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "See docs https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/enable-psremoting?view=powershell-7.1\n\n<blockquote><img src=\"https://docs.microsoft.com/media/logos/logo-powershell-social.png\" width=\"48\" align=\"right\"><div><strong><a href=\"https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/enable-psremoting\">Enable-PSRemoting (Microsoft.PowerShell.Core) - PowerShell</a></strong></div><div>The Enable-PSRemoting cmdlet configures the computer to receive PowerShell remote commands that are sent by using the WS-Management technology. WS-Management based PowerShell remoting is currently supported only on Windows platform. PowerShell remoting is enabled by default on Windows Server platforms. You can use Enable-PSRemoting to enable PowerShell remoting on other supported versions of Windows and to re-enable remoting if it becomes disabled. You have to run this command only one time on each computer that will receive commands. You do not have to run it on computers that only send commands. Because the configuration starts listeners to accept remote connections, it is prudent to run it only where it is needed. Enabling PowerShell remoting on client versions of Windows when the computer is on a public network is normally disallowed, but you can skip this restriction by using the SkipNetworkProfileCheck parameter. For more information, see the description of the SkipNetworkProfileCheck parameter. Multiple PowerShell installations can exist side-by-side on a single computer. Running Enable-PSRemoting will configure a remoting endpoint for the specific installation version that you are running the cmdlet in. So if you run Enable-PSRemoting while running PowerShell 6.2, a remoting endpoint will be configured that runs PowerShell 6.2. If you run Enable-PSRemoting while running PowerShell 7-preview, a remoting endpoint will be configured that runs PowerShell 7-preview. Enable-PSRemoting creates two remoting endpoint configurations as needed. If the endpoint configurations already exist, then they are simply ensured to be enabled. The created configurations are identical but have different names. One will have a simple name corresponding to the PowerShell version that hosts the session. The other configuration name contains more detailed information about the PowerShell version which hosts the session. For example, when running Enable-PSRemoting in PowerShell 6.2, you will get two configured endpoints named PowerShell.6, PowerShell.6.2.2. This allows you to create a connection to the latest PowerShell 6 host version by using the simple name PowerShell.6. Or you can connect to a specific PowerShell host version by using the longer name PowerShell.6.2.2. To use the newly enabled remoting endpoints, you must specify them by name with the ConfigurationName parameter when creating a remote connection using the Invoke-Command,New-PSSession,Enter-PSSession cmdlets. For more information, see Example 4. The Enable-PSRemoting cmdlet performs the following operations:  Runs the Set-WSManQuickConfig cmdlet, which performs the following tasks:  Starts the WinRM service. Sets the startup type on the WinRM service to Automatic. Creates a listener to accept requests on any IP address. Enables a firewall exception for WS-Management communications. Creates the simple and long name session endpoint configurations if needed. Enables all session configurations. Changes the security descriptor of all session configurations to allow remote access.   Restarts the WinRM service to make the preceding changes effective.  To run this cmdlet on the Windows platform, start PowerShell by using the Run as administrator option. This cmdlet is not available on Linux or MacOS versions of PowerShell.  Caution This cmdlet does not affect remote endpoint configurations created by Windows PowerShell. It only affects endpoints created with PowerShell version 6 and greater. To enable and disable PowerShell remoting endpoints that are hosted by Windows PowerShell, run the Enable-PSRemoting cmdlet from within a Windows PowerShell session.  </div></blockquote>",
      "created_at": "2021-01-21T17:31:01Z",
      "updated_at": "2021-01-21T17:31:04Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2021-01-23T00:00:04Z",
      "updated_at": "2021-01-23T00:00:04Z"
    }
  ],
  "created_at": "2021-01-19T15:07:49Z",
  "number": 14631,
  "state": "closed",
  "title": "Can't install PS7 on Windows 7",
  "updated_at": "2021-01-23T00:00:05Z"
}