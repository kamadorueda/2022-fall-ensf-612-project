{
  "_url": "https://github.com/PowerShell/PowerShell/issues/1522",
  "author": "lzybkr",
  "body": "<!--\n\nIf it is a bug report:\n- make sure you are able to repro it on the latest released version. \nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\n- Search the existing issues.\n- Refer to the [FAQ](../docs/FAQ.md).\n- Refer to the [known issues](../docs/KNOWNISSUES.md).\n- Fill out the following repro template\n\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\n-->\n## Steps to reproduce\n\n``` powershell\n$VerbosePreference = 'Continue'\n$PWD.Drive\n```\n## Expected behavior\n\n```\nName Used (GB) Free (GB) Provider   Root CurrentLocation\n---- --------- --------- --------   ---- ---------------\nC       219.04     17.90 FileSystem C:\\    Users\\jasonsh\n```\n## Actual behavior\n\n```\nVERBOSE: Perform operation 'Query CimInstances' with following parameters, ''queryExpression' = SELECT * FROM Win32_LogicalDisk WHERE DeviceId='C:','queryDialect' = WQL,'namespaceName' =\nroot\\cimv2'.\nVERBOSE: Operation 'Query CimInstances' complete.\nVERBOSE: Perform operation 'Query CimInstances' with following parameters, ''queryExpression' = SELECT * FROM Win32_LogicalDisk WHERE DeviceId='C:','queryDialect' = WQL,'namespaceName' =\nroot\\cimv2'.\nVERBOSE: Operation 'Query CimInstances' complete.\nVERBOSE: Perform operation 'Query CimInstances' with following parameters, ''queryExpression' = SELECT * FROM Win32_LogicalDisk WHERE DeviceId='C:','queryDialect' = WQL,'namespaceName' =\nroot\\cimv2'.\nVERBOSE: Operation 'Query CimInstances' complete.\nVERBOSE: Perform operation 'Query CimInstances' with following parameters, ''queryExpression' = SELECT * FROM Win32_LogicalDisk WHERE DeviceId='C:','queryDialect' = WQL,'namespaceName' =\nroot\\cimv2'.\nVERBOSE: Operation 'Query CimInstances' complete.\nName Used (GB) Free (GB) Provider   Root CurrentLocation\n---- --------- --------- --------   ---- ---------------\nC       219.04     17.90 FileSystem C:\\    Users\\jasonsh\n```\n## Environment data\n\n<!-- provide the output of $PSVersionTable -->\n\n``` powershell\n> $PSVersionTable\n\nName                      Value                  \n----                      -----                  \nPSVersion                 5.1.14395.1000         \nPSEdition                 Desktop                \nPSCompatibleVersions      {1.0, 2.0, 3.0, 4.0...}\nBuildVersion              10.0.14395.1000        \nCLRVersion                4.0.30319.42000        \nWSManStackVersion         3.0                    \nPSRemotingProtocolVersion 2.3                    \nSerializationVersion      1.1.0.1                \n```\n",
  "closed_at": "2018-08-31T20:25:47Z",
  "comments": [
    {
      "author": "megamorf",
      "author_association": "CONTRIBUTOR",
      "body": "Do you have an ETA for a fix? We're having this issue with `$PSCustomObject | Export-CliXML` in 5.1 on Win7/Server 2012 R2 and cannot suppress the verbose output :(\r\n\r\n```powershell\r\n$VerbosePreference = \"Continue\"\r\nFunction New-JobInfoObject\r\n{\r\n    [CmdletBinding()]\r\n    param(\r\n        $Phase,\r\n        $Job,\r\n        [ValidateScript({ $_ -is [datetime] })]\r\n        $StartTime = (Get-Date),\r\n        $LogFolder\r\n    )\r\n    $HashTable = [ordered]@{\r\n        Phase = $Phase\r\n        Job = $Job\r\n        PSStartTime = $StartTime\r\n        PSEndTime = $null\r\n        Logs = [PSCustomObject]@{\r\n            LogFolder = $LogFolder\r\n            LogFile = $null\r\n        }\r\n    }\r\n    $JobInfoObject = [pscustomobject]$HashTable\r\n    $JobInfoObject.PSObject.TypeNames.Insert(0,'CitrixSetup.JobInfo')\r\n    $JobInfoObject | Add-Member -MemberType ScriptMethod -Name Start -Value {$this.PSStartTime = Get-Date}\r\n    $JobInfoObject | Add-Member -MemberType ScriptMethod -Name End   -Value {$this.PSEndTime = Get-Date}\r\n    $JobInfoObject | Add-Member -MemberType ScriptProperty -Name Duration -Value {New-TimeSpan -Start $this.PSStartTime -End $this.PSEndTime}\r\n    $JobInfoObject\r\n}\r\n# Just Dummy values for debug purposes\r\n$Phase = Get-ChildItem \"C:\\Program Files\\WindowsPowerShell\\Modules\" | select -f 1\r\n$CurrentlogFolder = $env:temp\r\nforeach ($Script in (Get-ChildItem -LiteralPath $Phase.FullName -File -Recurse -Exclude *.Tests.ps1 | Sort-Object -Property Name))\r\n{\r\n    $JobInfo = New-JobInfoObject -Phase $Phase -Job $Script -LogFolder $CurrentlogFolder\r\n    Write-Verbose \"Starting Job $($JobInfo.Job.Fullname)\"\r\n    $JobInfo.Logs.LogFile = (Join-Path -Path $JobInfo.Logs.LogFolder -ChildPath $JobInfo.Job.Basename) + '.log'\r\n    $JobInfo.End()\r\n    Write-Verbose \"before bad Verbose output\"\r\n    $JobInfo | Export-CliXml -LiteralPath ($JobInfo.Logs.LogFile.replace('.log','.xml' )) -Encoding UTF8 -Force -verbose:$false\r\n    write-verbose \"after bad verbose output\"\r\n}\r\n```",
      "created_at": "2017-05-10T21:31:53Z",
      "updated_at": "2017-05-10T21:32:21Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "@megamorf Your problem appears to have been in `6.0.0-beta.1` already, but I don't think we're going to be bringing it back into 5.1 as it's not a critical/blocking issue:\r\n\r\n```\r\nVERBOSE: Starting Job C:\\Program Files\\WindowsPowerShell\\Modules\\foo\\foo.psm1\r\nVERBOSE: before bad Verbose output\r\nVERBOSE: after bad verbose output\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.0-beta\r\nPSEdition                      Core\r\nBuildVersion                   3.0.0.0\r\nCLRVersion\r\nGitCommitId                    v6.0.0-beta.1\r\nOS                             Microsoft Windows 10.0.16199\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\nThe original problem from @lzybkr still exists, but I'm moving this out because it's not a critical problem.",
      "created_at": "2017-05-23T19:34:15Z",
      "updated_at": "2017-05-23T19:34:15Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I can not repo in PowerShell Core 6.1 Preview4 and Windows PowerShell 5.1.\r\n\r\n/cc @SteveL-MSFT ",
      "created_at": "2018-08-22T13:38:53Z",
      "updated_at": "2018-08-22T13:38:53Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Doesn't repro in PSCore6.1.  I can repro in Windows PowerShell 5.1, but we're not going to backport this change.",
      "created_at": "2018-08-31T20:25:47Z",
      "updated_at": "2018-08-31T20:25:47Z"
    },
    {
      "author": "totollygeek",
      "author_association": "NONE",
      "body": "I am getting that same issue with PowerShell Core 7 at the moment \ud83e\udd14",
      "created_at": "2020-03-13T09:24:01Z",
      "updated_at": "2020-03-13T09:24:01Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@totollygeek Please open new issue with _full repo steps_. (Repo steps from the issue do not work for me - I can not repo.)",
      "created_at": "2020-03-13T10:09:25Z",
      "updated_at": "2020-03-13T10:09:25Z"
    }
  ],
  "created_at": "2016-07-26T19:14:28Z",
  "labels": [
    "WG-Engine",
    "Resolution-Fixed"
  ],
  "number": 1522,
  "state": "closed",
  "title": "spurious verbose messages from built-in type table ScriptProperty members",
  "updated_at": "2020-03-13T10:09:25Z"
}