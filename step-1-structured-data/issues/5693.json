{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5693",
  "author": "narrieta",
  "body": "I was very surprised that if the call to 'bar' is done from within try/catch, then its $ErrorActionPreference is ignored.\r\n\r\nSee the script below. When 'bar' is called errors are ignored as expected, but when doing it within try/catch the errors surface.  Is this the expected behavior?\r\n\r\nThe script below is a simplification of my actual scenario; in my actual scenario 'foo', 'bar' and the call to 'bar' are on different modules/scripts. \r\n\r\n```\r\nfunction foo($i) {\r\n    if ($i -eq 3) {\r\n        throw 'error'\r\n    }\r\n}\r\n\r\nfunction bar {\r\n    $ErrorActionPreference = 'SilentlyContinue'\r\n\r\n    for ($i = 0; $i -lt 5; $i++) {\r\n        Write-Verbose -Verbose $i\r\n\r\n        foo($i)\r\n    }\r\n}\r\n\r\nWrite-Verbose -Verbose 'No try/catch'\r\n\r\nbar\r\n\r\nWrite-Verbose -Verbose ''\r\n\r\nWrite-Verbose -Verbose 'With try/catch' \r\n\r\ntry {\r\n    bar\r\n} catch {\r\n    Write-Verbose -Verbose $_\r\n}  \r\n \r\n```\r\n```\r\n\r\nVERBOSE: No try/catch\r\nVERBOSE: 0\r\nVERBOSE: 1\r\nVERBOSE: 2\r\nVERBOSE: 3\r\nVERBOSE: 4\r\nVERBOSE: \r\nVERBOSE: With try/catch\r\nVERBOSE: 0\r\nVERBOSE: 1\r\nVERBOSE: 2\r\nVERBOSE: 3\r\nVERBOSE: error\r\n\r\n```",
  "closed_at": null,
  "comments": [
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "It's definitely surprising.\r\n\r\nOfficially - according to the current documentation - `$ErrorActionPreference` should only apply to _non-terminating errors_, whereas it clearly does apply to a script-terminating error triggered by `Throw` as well (unlike the `-ErrorAction` _parameter_) - but apparently not consistently, as your example shows.\r\n\r\nI've added your symptom to [this doc issue](https://github.com/PowerShell/PowerShell-Docs/issues/1583) , where I'm trying to document PowerShell's de-facto error-handling behavior (and also how it deviates from the current documentation).",
      "created_at": "2017-12-15T22:06:54Z",
      "updated_at": "2017-12-15T22:06:54Z"
    },
    {
      "author": "narrieta",
      "author_association": "NONE",
      "body": "Yes, *very* surprising. I think this can make using 3rd-party modules (that set $ErrorActionPreference) harder to use. In my case, the caller and the function setting $ErrorActionPreference were on different modules, with a call stack about 5 levels deep. It was very surprising to add a try catch around a function in one module, and see errors popping out apparently from nowhere. I knew the section of our code that sets $ErrorActionPreference to 'SilentlyIgnore' (we have legacy code that produces known errors that can be ignored) so it was easy to understand what was happening. When using 3rd-party modules this could be a lot harder.",
      "created_at": "2017-12-15T22:20:54Z",
      "updated_at": "2017-12-15T22:20:54Z"
    },
    {
      "author": "narrieta",
      "author_association": "NONE",
      "body": "BTW, I understand that this behavior has been there since V2, when try/catch was introduced, so changing it now may be risky.",
      "created_at": "2017-12-15T22:21:42Z",
      "updated_at": "2017-12-15T22:21:42Z"
    }
  ],
  "created_at": "2017-12-14T21:33:57Z",
  "labels": [
    "Issue-Question",
    "WG-Engine",
    "Breaking-Change"
  ],
  "number": 5693,
  "state": "open",
  "title": "try/catch overrides $ErrorActionPreference?",
  "updated_at": "2021-01-15T05:09:54Z"
}