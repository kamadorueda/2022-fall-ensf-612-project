{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6721",
  "author": "joeyaiello",
  "body": "In PowerShell Core, it appears that provider prompts are using `PSDriveInfo.Root` instead of `PSDriveInfo.Name` in order to generate each provider's prompt function. \r\n\r\nThis is a regression from Windows PowerShell (I can't find a PR that intended to change this behavior), and it makes it significantly more difficult to deduce which provider you're using during interactive usage.\r\n\r\nAdditionally, the inconsistency of `HKEY_LOCAL_MACHINE:\\` vs. `HKLM:\\` means that a user may think that they can `cd HKEY_LOCAL_MACHINE:\\` when that doesn't actually work.\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\nGet-PSDrive | ? Provider -NotMatch 'FileSystem' | % { cd \"$($_.Name):\"; prompt }\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```none\r\nPS Alias:\\>\r\nPS Cert:\\>\r\nPS Env:\\>\r\nPS Function:\\>\r\nPS HKCU:\\>\r\nPS HKLM:\\>\r\nPS Variable:\\>\r\nPS WSMan:\\>\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n```none\r\n>\r\n\\>\r\n>\r\n>\r\nHKEY_CURRENT_USER\\>\r\nHKEY_LOCAL_MACHINE\\>\r\n>\r\n>\r\n>\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.1.0-preview.1\r\nPSEdition                      Core\r\nGitCommitId                    v6.1.0-preview.1\r\nOS                             Microsoft Windows 10.0.17650\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "BrucePay",
      "author_association": "COLLABORATOR",
      "body": "@joeyaiello  I can't seem to repro your issue. The `prompt` function uses this API ` $executionContext.SessionState.Path.CurrentLocation.` to figure out what path to display. What happens if you try your example calling this API directly instead of through the prompt. When I run it, I see\r\n```\r\nPS HKLM:\\> Get-PSDrive | ? Provider -NotMatch 'FileSystem' | \r\n    % { cd \"$($_.Name):\"; $executionContext.SessionState.Path.CurrentLocation.Path }\r\nAlias:\\\r\nCert:\\\r\nEnv:\\\r\nFunction:\\\r\nHKCU:\\\r\nHKLM:\\\r\nVariable:\\\r\nWSMan:\\\r\n```\r\nwhich looks fine.",
      "created_at": "2018-04-24T16:37:04Z",
      "updated_at": "2018-04-24T16:37:04Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "It is not clear what we are tracking here. Should we fix something or we can close the issue? /cc @joeyaiello ",
      "created_at": "2019-09-28T19:03:10Z",
      "updated_at": "2019-09-28T19:03:10Z"
    }
  ],
  "created_at": "2018-04-24T13:51:58Z",
  "labels": [
    "Issue-Question",
    "WG-Engine-Providers"
  ],
  "number": 6721,
  "state": "open",
  "title": "Non-filesystem providers don't display root of the drives correctly in the prompt",
  "updated_at": "2019-09-28T19:03:11Z"
}