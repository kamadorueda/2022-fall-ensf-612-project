{
  "_url": "https://github.com/PowerShell/PowerShell/issues/14055",
  "author": "HCl-10",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 and PowerShell 7+ issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6).\r\n\r\n-->\r\n\r\n## Steps to reproduce\r\n\r\nInstall powershell 7.1 in wsl ubuntu 20.04, then run the following command:\r\n\r\n```sh\r\nchsh -s /usr/bin/pwsh\r\n```\r\n\r\nRestart wsl, and an error will occur.\r\n\r\n## Expected behavior\r\n\r\nStart powershell in wsl ubuntu 20.04 normally.\r\n\r\n## Actual behavior\r\nAn error occured:\r\n\r\n```none\r\n: 6: export: (x86)/Dev-Cpp/TDM-GCC-64/bin:/mnt/c/Program: bad variable name\r\n```\r\n(Maybe pwsh will load all Windows PATH before running wsl, `C:\\Program Files (x86)\\Dev-Cpp\\TDM-GCC-64\\bin` is the first in my PATH)\r\n\r\n## Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.0\r\nPSEdition                      Core\r\nGitCommitId                    7.1.0\r\nOS                             Linux 4.4.0-19041-Microsoft #488-Microsoft Mon Sep 01 13:43:00 PST 2020\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "fMichaleczek",
      "author_association": "NONE",
      "body": "@HCl-10 I had problems with WSL and PATH which contains \"Program Files\" to compile OpenWrt, so I am sure it's a PowerShell Issue. see https://github.com/microsoft/WSL/issues/1640#issuecomment-713966706",
      "created_at": "2020-11-12T13:49:43Z",
      "updated_at": "2020-11-12T13:56:26Z"
    },
    {
      "author": "anmenaga",
      "author_association": "CONTRIBUTOR",
      "body": "@daxian-dbw may have more info on this.",
      "created_at": "2020-11-12T20:27:47Z",
      "updated_at": "2020-11-12T20:27:47Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "/cc @rjmholt ",
      "created_at": "2020-11-13T17:16:01Z",
      "updated_at": "2020-11-13T17:16:01Z"
    },
    {
      "author": "jonstelly",
      "author_association": "NONE",
      "body": "Any ideas on this one?  I have the same issue.  I've got Ubuntu 20.04 WSL and the apt package install of powershell 7.1.X gives me the following error when configured as my shell: `: 6: export: (x86)/Microsoft: bad variable name`.\r\n\r\nOddly, if I install the dotnet global tool: `sudo dotnet tool update --tool-path /usr/local/bin powershell` and use that location as my shell I do not get this error.\r\n\r\nI'd prefer to use the APT install, especially since the nuget tool package is a few days late with the 7.1.4 update and it would just feel more natural to use the APT install.",
      "created_at": "2021-08-16T21:39:31Z",
      "updated_at": "2021-08-16T21:39:31Z"
    },
    {
      "author": "TBBle",
      "author_association": "NONE",
      "body": "As noted in #14640, the problem is probably that something is trying to\r\n```\r\nexport PATH=...\r\n```\r\n\r\nand the `...` is not quoted correctly for the current shell, so the first thing that has a space before it, and doesn't look like a valid shell env-var name, i.e. `(x86)/Microsoft` or `(x86)/Dev-Cpp/TDM-GCC-64/bin:/mnt/c/Program`, causes this error.\r\n\r\nI would _guess_ that PowerShell is being asked to evaluate a bash script, and differences in quoting behaviour (not a bug) are breaking this. So not really a PowerShell issue, unless reading the script is a built-in PowerShell behaviour.\r\n\r\nI think it's much more likely it's a WSL issue, that (per https://github.com/microsoft/WSL/issues/1640#issuecomment-713966706) WSL's `appendWindowsPath` feature is assuming bash is the shell when it appends that path, and hence the quoting is incorrect when PowerShell is the shell.",
      "created_at": "2021-08-20T01:01:51Z",
      "updated_at": "2021-08-20T01:01:51Z"
    },
    {
      "author": "jonstelly",
      "author_association": "NONE",
      "body": "Any suggestions of how I might debug this?  The error message isn\u2019t super helpful.\r\n\r\nAlso, why the dotnet global tool install works but the apt package doesn\u2019t?  I\u2019m guessing some configuration that comes with the apt package but not with the global tool?",
      "created_at": "2021-08-20T01:06:13Z",
      "updated_at": "2021-08-20T01:06:13Z"
    },
    {
      "author": "TBBle",
      "author_association": "NONE",
      "body": "_Assuming_ disabling `appendWindowsPath` avoids the issue (at the cost of not having Windows's `$PATH` in the WSL `$PATH`), then the problem is probably in the `appendWindowsPath` implementation, which might have magic to detect PowerShell, but it is failing for the APT-installed version.\r\n\r\nIt's also possible that the reason it works with the global tool version is that the global tool version has known issues in command-line parsing and quotes, e.g. #11747, and those issues coincide with the `appendWindowsPath` implementation to _work_ (or at least not-fail).\r\n\r\nOne other thing to check: Does `appendWindowsPath` actually _work_ with the gobal tool install? You've mentioned that it doesn't give the error, but I don't know if that means that `appendWindowsPath` is successful, or if it's just failing in a way that doesn't produce an error.",
      "created_at": "2021-08-20T01:29:59Z",
      "updated_at": "2021-08-20T01:30:23Z"
    },
    {
      "author": "jonstelly",
      "author_association": "NONE",
      "body": "This seems to be caused by an issue in Ubuntu in `/etc/profile.d/apps-bin-path.sh`.  It sounds like apps-bin-path.sh has been fixed in 21.10 but Ubuntu on WSL is still 20.04.\r\n\r\nWork-around: https://github.com/PowerShell/PowerShell/issues/9842#issuecomment-979325295",
      "created_at": "2021-12-16T20:02:44Z",
      "updated_at": "2021-12-16T20:02:44Z"
    }
  ],
  "created_at": "2020-11-12T12:06:28Z",
  "number": 14055,
  "state": "open",
  "title": "Error when trying to use powershell 7.1 as default shell of ubuntu 20.04 in wsl",
  "updated_at": "2021-12-16T20:02:44Z"
}