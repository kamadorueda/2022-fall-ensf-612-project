{
  "_url": "https://github.com/PowerShell/PowerShell/issues/900",
  "author": "JumpingYang001",
  "body": "From UT:https://github.com/PowerShell/psl-monad/blob/master/monad/tests/monad/DRT/commands/utility/UnitTests/FormatAndOutputTests.cs#L780\n\nbelow cases fail:\nIt \"Format-Table variable with single line string for End-To-End should work\"{\n        $p=\"single line string\"\n        $result=$p|Format-Table -Property \"foo\",\"bar\"|Out-String\n        $result|Should BeNullOrEmpty\n    }\n\n```\nIt \"Format-Table variable with multiple line string for End-To-End should work\"{\n    $p=\"Line1\\nLine2\"\n    $result=$p|Format-Table -Property \"foo\",\"bar\"|Out-String\n    $result|Should BeNullOrEmpty\n}\n\nIt \"Format-Table variable with string sequence for End-To-End should work\"{\n    $p=\"Line1\",\"Line2\"\n    $result=$p|Format-Table -Property \"foo\",\"bar\"|Out-String\n    $result|Should BeNullOrEmpty\n}\n\nIt \"Format-Table variable with string sequence for End-To-End should work\"{\n    $p=\"Line1\",\"Line2\"\n    $result=$p|Format-Table -Property \"foo\",\"bar\"|Out-String\n    $result|Should BeNullOrEmpty\n}\n```\n",
  "closed_at": "2016-06-16T21:53:42Z",
  "comments": [
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Why would they be null or empty? The code as presented isn't null or empty on stock Windows PowerShell:\n\n``` powershell\nPS C:\\Users\\andschwa\\src\\PowerShell> $p=\"Line1\\nLine2\"\nPS C:\\Users\\andschwa\\src\\PowerShell> $result=$p|Format-Table -Property \"foo\",\"bar\"|Out-String\nPS C:\\Users\\andschwa\\src\\PowerShell> $result\nLine1\\nLine2\n\nPS C:\\Users\\andschwa\\src\\PowerShell>\n```\n",
      "created_at": "2016-04-22T20:35:09Z",
      "updated_at": "2016-04-22T20:35:09Z"
    },
    {
      "author": "JumpingYang001",
      "author_association": "CONTRIBUTOR",
      "body": "@andschwa just from From UT:https://github.com/PowerShell/psl-monad/blob/master/monad/tests/monad/DRT/commands/utility/UnitTests/FormatAndOutputTests.cs#L780 which shows these result should be null or empty.\nAnd from my understanding, \"$p|Format-Table\" should show Line1\\nLine2, but \"$p|Format-Table -Property \"foo\",\"bar\"\" should show nothing, how about your opinion?\n",
      "created_at": "2016-04-25T02:58:44Z",
      "updated_at": "2016-04-25T02:58:44Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Ah, I see what you mean now. This does seem buggy.\n",
      "created_at": "2016-04-25T16:19:50Z",
      "updated_at": "2016-04-25T16:19:50Z"
    },
    {
      "author": "JamesWTruher",
      "author_association": "MEMBER",
      "body": "strings are special in powershell. This should either use an object with properties that are missing, or if it's specific to strings, then -force should be used. Something like:\n`\"zipper\" | format-list -force foo,bar`\nI think I saw tests which use objects. So it may be that the test is specific to strings.\n",
      "created_at": "2016-05-03T00:16:48Z",
      "updated_at": "2016-05-03T00:17:18Z"
    },
    {
      "author": "JamesWTruher",
      "author_association": "MEMBER",
      "body": "likely, these tests should look like this:\n\n```\n    It \"Format-List with Null Objects for End-To-End should work\"{\n        $p = $null\n        $result = $p | Format-List  -force -Property\"foo\",\"bar\" | Out-String\n        $result | Should BeNullOrEmpty\n    }\n\n    It \"Format-List with single line string for End-To-End should work\" {\n        $p = \"single line string\"\n        $result = $p | Format-List -force -Property \"foo\",\"bar\" | Out-String\n        $result.trim() | Should BeNullOrEmpty\n    }\n\n    It \"Format-List with multiple line string for End-To-End should work\" {\n        $p = \"Line1\\nLine2\"\n        $result = $p | Format-List -force -Property \"foo\",\"bar\" | Out-String\n        $result.trim() | Should BeNullOrEmpty\n    }\n\n    It \"Format-List with string sequence for End-To-End should work\" {\n        $p = \"Line1\",\"Line2\"\n        $result = $p | Format-List -Force -Property \"foo\",\"bar\" | Out-String\n        $result.trim() | Should BeNullOrEmpty\n    }\n\n```\n",
      "created_at": "2016-05-03T00:32:44Z",
      "updated_at": "2016-05-03T00:32:44Z"
    },
    {
      "author": "JumpingYang001",
      "author_association": "CONTRIBUTOR",
      "body": "@JamesWTruher @andschwa It works when using -Force, so we can close this issue, thanks.\n",
      "created_at": "2016-05-03T03:08:33Z",
      "updated_at": "2016-05-03T03:08:33Z"
    }
  ],
  "created_at": "2016-04-22T05:26:05Z",
  "number": 900,
  "state": "closed",
  "title": "Format-Table with simple E2E cases not works very well",
  "updated_at": "2016-06-16T21:53:42Z"
}