{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7347",
  "author": "sethvs",
  "body": "## PR Summary\r\n\r\nFix #7337\r\n \r\nAlso fixing following error message to include 'MaximumVersion' in the list of 'valid members':\r\n```\r\n  <data name=\"InvalidModuleSpecificationMember\" xml:space=\"preserve\">\r\n    <value>The hashtable describing a module contains one or more members that are not valid.  The valid members are ({0}). Remove the members that are not valid ({1}), then try again.</value>\r\n  </data>\r\n```\r\nConcerning if the change is breaking, I would refer it to Unlikely Grey Area.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [ ] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` to the beginning of the title and remove the prefix when the PR is ready.\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] User-facing [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed - Issue link:\r\n- **Testing - New and feature**\r\n    - [ ] Not Applicable or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n        - [ ] [Add `[feature]` if the change is significant or affects feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\r\n",
  "closed_at": "2018-09-06T09:24:33Z",
  "comments": [
    {
      "author": "anmenaga",
      "author_association": "CONTRIBUTOR",
      "body": "@daxian-dbw @SteveL-MSFT please evaluate if this technically breaking (however unlikely) change has to go to PS Committee for review.",
      "created_at": "2018-08-01T20:50:59Z",
      "updated_at": "2018-08-01T20:50:59Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee agrees this is a breaking change.  For example using this in a pipeline would terminate the pipeline now whereas a $null being returned would not execute the rest of the pipeline.  We agree that this should have been an error and would accept returning a non-terminating error and not a terminating one.",
      "created_at": "2018-08-08T22:16:13Z",
      "updated_at": "2018-08-08T22:16:13Z"
    },
    {
      "author": "sethvs",
      "author_association": "CONTRIBUTOR",
      "body": "Can you guide me a little bit?\r\nHow can I use WriteError in there?\r\nhttps://github.com/PowerShell/PowerShell/blob/321537c6e52b24e9187afd267bb0b18b242bbed3/src/System.Management.Automation/engine/Modules/ModuleSpecification.cs#L167-L172\r\n\r\nOr is there another way to return a non-terminating error?",
      "created_at": "2018-08-12T11:10:27Z",
      "updated_at": "2018-08-12T11:29:58Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@sethvs I took a look at the code.  Since the validation is in the ModuleSpecification class that should continue to return an exception that gets thrown.  You'll probably need to update GetModuleCommand.cs to handle this specific case.",
      "created_at": "2018-08-14T20:14:42Z",
      "updated_at": "2018-08-14T20:14:42Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT is it possible for a parameter binding exception to be non-terminating? The error when called with `Get-Module` will occur when the hashtable is cast to a `ModuleSpecification`; execution will never reach `Get-Module`.",
      "created_at": "2018-08-15T02:38:58Z",
      "updated_at": "2018-08-15T02:38:58Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "Also for reference, here is `Import-Module`'s version check:\r\nhttps://github.com/PowerShell/PowerShell/blob/c94fc31f9767fe5bc835ee4921896b6331eaad4d/src/System.Management.Automation/engine/Modules/ImportModuleCommand.cs#L1686-L1690\r\n\r\nI think that's a terminating error, no?",
      "created_at": "2018-08-15T02:41:57Z",
      "updated_at": "2018-08-15T02:41:57Z"
    },
    {
      "author": "sethvs",
      "author_association": "CONTRIBUTOR",
      "body": "Is this OK with VSTS: PowerShell-CI-macos?",
      "created_at": "2018-08-15T12:05:10Z",
      "updated_at": "2018-08-15T12:05:10Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@sethvs the VSTS runs are currently not blocking for merging, we're still working on improving them.  They currently run in parallel to allow us to validate it's going to work for us.",
      "created_at": "2018-08-21T00:20:19Z",
      "updated_at": "2018-08-21T00:20:19Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "In light of recent discussions about returning nothing vs an error.  I'd like @PowerShell/powershell-committee to re-review this",
      "created_at": "2018-08-21T00:21:21Z",
      "updated_at": "2018-08-21T00:21:21Z"
    },
    {
      "author": "sethvs",
      "author_association": "CONTRIBUTOR",
      "body": "Close and reopen to restart tests.",
      "created_at": "2018-09-05T16:16:27Z",
      "updated_at": "2018-09-05T16:16:27Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee re-reviewed this.  The conclusion is that well-formed filters should return nothing if the result set is nothing and not return an error.  In this case, the filter is well-formed, although invalid.  Since this is also a breaking change, our recommendation is to not take this change as it's inconsistent with the desired filtering behavior and introduces a breaking change.",
      "created_at": "2018-09-05T22:58:04Z",
      "updated_at": "2018-09-05T22:58:04Z"
    }
  ],
  "created_at": "2018-07-24T11:35:18Z",
  "number": 7347,
  "state": "closed",
  "title": "Throw error message when MaxumimVersion is less than Version when using Import-Module cmdlet with -FullyQualifiedName parameter.",
  "updated_at": "2018-09-06T09:24:33Z"
}