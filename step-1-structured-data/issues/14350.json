{
  "_url": "https://github.com/PowerShell/PowerShell/issues/14350",
  "author": "darthwalsh",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 and PowerShell 7+ issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6).\r\n\r\n-->\r\n\r\nFor [`Select-String`](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/select-string) combining `-Context` and `-Raw` is a painful gotcha. If I want to replicate `\"ABCDEF\" -split \"\" | /usr/bin/grep \"B\" -C 1` it seems intuitive that I could just combine these params. If I comb over the documentation, it seems like an unfortunate implementation details that `-Raw` only outputs the Line property, and doesn't consider the Context property?\r\n\r\nThe intention of using `-Raw` is to be more like `grep`, but if I was using `Select-String \"B\" -Context 1` then adding `-Raw` makes the output **less** like grep. I think the best option would be to match the `grep` behavior and print the Context lines, but otherwise it would help to at least error indicating there is never a reason to use `-Context` if you are using `-Raw`.\r\n\r\n## Steps to reproduce\r\n\r\n```powershell\r\n\"ABCDEF\" -split \"\" | Select-String \"B\" -Context 1 -Raw\r\n```\r\n\r\n## Expected behavior\r\n\r\nIdeally:\r\n```none\r\nA\r\nB\r\nC\r\n```\r\n\r\nOtherwise:\r\n```none\r\nSelect-String: Parameter set cannot be resolved using the specified named parameters. One or more parameters issued cannot be used together or an insufficient number of parameters were provided.\r\n```\r\n\r\nand then document that [`-Raw`](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/select-string?view=powershell-7.1#parameters:~:text=False-,%2DRaw,Causes,-the%20cmdlet%20to%20output%20only%20the%20matching%20strings%2C%20rather%20than) can't be combined with `-Context`.\r\n\r\n## Actual behavior\r\n\r\n```none\r\nB\r\n```\r\n\r\n## Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.0\r\nPSEdition                      Core\r\nGitCommitId                    7.1.0\r\nOS                             Darwin 19.6.0 Darwin Kernel Version 19.6.0: Thu Oct 29 22:56:45 PDT 2020; root:xnu-6153.141.2.2~1/RELEASE_X86_64\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Good catch - it definitely makes sense to support the combination of `-Raw` and `-Context`.\r\n\r\nHere's what I would expect that to do, expressed in PowerShell code:\r\n\r\n```powershell\r\n# This is what `\"ABCDEF\" -split \"\" | Select-String \"B\"-Raw  -Context 1` should do:\r\nPS> \"ABCDEF\" -split \"\" | Select-String \"B\" -Context 1 | \r\n       % { $_.Context.PreContext + $_.Line +  $_.Context.PostContext  }\r\n\r\nA\r\nB\r\nC\r\n```\r\n\r\nNote that the `$_.Context.Pre/PostContext` values are always _arrays_, so the above performs array concatenation and therefore outputs the resulting lines _individually_  - my sense is that this is more PowerShell-like (the alternative would be to output a _single, multiline_ string).\r\n\r\n\r\n",
      "created_at": "2020-12-08T13:08:08Z",
      "updated_at": "2020-12-08T13:08:08Z"
    },
    {
      "author": "darthwalsh",
      "author_association": "NONE",
      "body": "Right, returning individual lines as individual pipeline entries instead of multiline strings is expected.\r\n\r\nThe other difficulty is ensuring that overlapping lines are only returned once, the way that `-Context 2` correctly handles:\r\n\r\n```powershell\r\n\u279c ~ \"ABCDEFGHIJKL\".ToCharArray() | Select-String \"B|D\" -Context 2\r\n\r\n  A\r\n> B\r\n  C\r\n> D\r\n  E\r\n  F\r\n\r\n\u279c ~\r\n```",
      "created_at": "2020-12-08T19:38:10Z",
      "updated_at": "2020-12-08T19:38:10Z"
    }
  ],
  "created_at": "2020-12-08T04:10:11Z",
  "labels": [
    "Issue-Question",
    "WG-Cmdlets-Utility"
  ],
  "number": 14350,
  "state": "open",
  "title": "Select-String with both -Context  and -Raw should follow grep behavior, or be an invalid parameter set.",
  "updated_at": "2020-12-08T19:38:11Z"
}