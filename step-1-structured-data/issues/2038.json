{
  "_url": "https://github.com/PowerShell/PowerShell/issues/2038",
  "author": "dlwyatt",
  "body": "Resolves issues #2035 \n\nIn the current code, two calls to `BindParameter` are potentially made, and the assumption was that if a caller had specified `Set-ClusterOwnerNode foo,bar` instead of `Set-ClusterOwnerNode foo bar`, the first call would fail.\n\nThis was not the case with Advanced Functions, so the logic which was supposed to cover that case in `HandleRemainingArguments()` wasn't being triggered.  This update unwraps a single-element list first, rather than requiring a failed call to `BindParameter` before that happens.\n\nAs a result, `Write-Object` no longer needs its own foreach loop to compensate for being sent a `List<Object>` from `HandleRemainingArguments()`.\n",
  "closed_at": "2017-10-12T00:09:59Z",
  "comments": [
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "I think this is a [bucket 2 breaking change](https://github.com/PowerShell/PowerShell/blob/master/docs/dev-process/breaking-change-contract.md#bucket-2-reasonable-grey-area), so maybe we need an RFC.\n\n@daxian-dbw - can you review?\n",
      "created_at": "2016-08-23T21:22:32Z",
      "updated_at": "2016-08-23T21:22:32Z"
    },
    {
      "author": "dlwyatt",
      "author_association": "CONTRIBUTOR",
      "body": "If someone's _depending on_ this difference in behavior between `Do-Something 1 2 3` and `Do-Something 1,2,3`, I want to give that person a stern talking-to.  :)\n",
      "created_at": "2016-08-23T21:27:35Z",
      "updated_at": "2016-08-23T21:27:35Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "as shown by the discussion about `Write-Output`, the change to `HandleRemainingArguments` in this PR would be a breaking change.\nanother example would be when an array of string can be converted to a specific element type of the parameter type:\n\n```\nclass dummy {\n    [object] $Path\n    [object] $Name\n    dummy ([object[]] $a) {\n        $this.Path = $a[0]\n        $this.Name = $a[1]\n    }\n    [string] ToString() {\n        return ($this.Path + \" -- \" + $this.Name)\n    }\n}\n\n\nfunction Test-Attribute\n{\n    param(\n         [string[]]\n         [Parameter(Position=0)]\n         $Path,\n\n         [dummy[]]\n         [Parameter(ValueFromRemainingArguments)]\n         $Extra\n         )\n\n\n     $Extra.Count;\n     for ($i = 0; $i -lt $Extra.Count; $i++)\n     {\n        \"${i}: $($Extra[$i].GetType().FullName) $($Extra[$i])\"\n     }\n}\n\nPS D:\\> Test-Attribute root aa,bb\n1\n0: dummy aa -- bb\nPS D:\\>\nPS D:\\> Test-Attribute root aa bb\nTest-Attribute : Cannot process argument transformation on parameter 'Extra'. Cannot convert value\n\"System.Collections.Generic.List`1[System.Object]\" to type \"dummy[]\". Error: \"Cannot convert the \"aa\" value of type\n\"System.String\" to type \"dummy\".\"\nAt line:1 char:1\n+ Test-Attribute root aa bb\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : InvalidData: (:) [Test-Attribute], ParameterBindingArgumentTransformationException\n    + FullyQualifiedErrorId : ParameterArgumentTransformationError,Test-Attribute\n```\n\n**Another proposal of the fix:**\nIf the parameter is declared with `ValueFromRemaningArgument` and **`Position`**, and `valueFromRemainingArguments.Count == 1`, then we use the specified argument directly instead of wrapping it in a `List`.\n\nWhen `Position` is specified, I assume the author would like `do-something aa` to be interpreted as `do-something -param aa` instead of treating `aa` as remaining arguments.\n\nThis won't solve the problem to parameters with `ValueFromRemaningArgument` but without `Position`, and also would require `Write-Object` to be changed -- remove `Position=0` from the parameter declaration of `InputObject`. So this would also be a breaking change.\n\nFixing parameter binder bugs is very tricky. It would be so easy to break existing behavior.\n",
      "created_at": "2016-08-24T17:55:54Z",
      "updated_at": "2016-08-24T17:55:54Z"
    },
    {
      "author": "dlwyatt",
      "author_association": "CONTRIBUTOR",
      "body": "The more I play with this, the more I think it's the existing behavior that's broken.  I'd advise people not to declare `ValueFromRemainingArguments` parameters at all, in the current form.\n",
      "created_at": "2016-08-24T17:59:34Z",
      "updated_at": "2016-08-24T17:59:34Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Let me get more data about the usage of `ValueFromRemainingArguments` and `Write-Output`. Will reply back here.\n",
      "created_at": "2016-08-24T18:31:29Z",
      "updated_at": "2016-08-24T18:31:29Z"
    },
    {
      "author": "jpsnover",
      "author_association": "CONTRIBUTOR",
      "body": "> IMHO, this behavior of Write-Output is pretty intuitive -- when -NoEnumerate is specified, give me back what ever items I gave you. In case of a b c, I gave you 3 items, so 3 items should be returned by Write-Output; in case of a,b,c, I gave you 1 item, which is an array, so the same item should be returned back.\r\n\r\n@dlwyatt I'm not a good person to explain the parsing (maybe @BrucePay can weigh in) but in this example, the parser views this as 1 parameter - an array with 3 values.\r\n\r\nOr in this example:\r\n\r\n> Do-Something 1 2 3 \r\n> This has 3 parameters with one value each.\r\n> \r\n> Do-Something 1,2,3\r\n> This has 1 parameter with 3 values.\r\n\r\nI don't see any value in breaking existing semantics but we could consider adding a new attribute [CollapseAllArgumentsIntoASingleArray](name TBD)  \r\nThat seems like a bad thing because cmdlets with positional parameters are, and need to be, precise.\r\nSo a change like this would yield a unpredictable UX.\r\n",
      "created_at": "2016-08-28T15:32:04Z",
      "updated_at": "2017-10-19T00:46:29Z"
    },
    {
      "author": "dlwyatt",
      "author_association": "CONTRIBUTOR",
      "body": "@jpsnover :  That's exactly what `ValueFromRemainingArguments` is supposed to do already.  It's the equivalent of declaring `params string[] someParam` in C#.  There are just some implementation quirks that cause it to not behave the same way when one syntax or the other are used.\n",
      "created_at": "2016-08-28T15:58:53Z",
      "updated_at": "2016-08-28T15:58:53Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "We have discussed this and would like more data about potential breakage if we took the change.\nWe'll leave this open until somebody (likely us) do that work.\n",
      "created_at": "2016-09-22T20:20:46Z",
      "updated_at": "2016-09-22T20:20:46Z"
    },
    {
      "author": "dlwyatt",
      "author_association": "CONTRIBUTOR",
      "body": "When you import the temporary module, the assembly is in use until PowerShell exits.  That's why I don't create it in TestDrive:\\, and why I use the same file name every time (so we're not littering the test system with multiple dlls).",
      "created_at": "2017-05-30T18:17:58Z",
      "updated_at": "2017-05-30T18:17:58Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@dlwyatt  Thanks for clafify! \r\nWe use temporary modules in several tests and we never cared about unloading them. That's why I'm surprised we're doing this here.",
      "created_at": "2017-05-31T03:53:11Z",
      "updated_at": "2017-05-31T03:53:11Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "@daxian-dbw I know this is a really old one, but Dave already fixed the merge conflicts back in May. Can we just fix it up real quick and get it merged (we already approved it in the committee way back when).\r\n\r\nIf the PR is too old for you to push into the fork branch directly, could I ping @dlwyatt in one last time to fix the merge conflict in the ParameterBinding tests. Sorry... :'(",
      "created_at": "2017-10-10T22:24:29Z",
      "updated_at": "2017-10-10T22:24:29Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@joeyaiello Since the committee already approved this breaking change, I added `Committee-Reviewed` label. I cannot make changes directly to the submitting branch `dlwyatt:ValueFromRemainingArgumentsFix`. I can get the changes from this PR and resolve the conflicts, but then need to submit another PR.",
      "created_at": "2017-10-10T22:30:04Z",
      "updated_at": "2017-10-10T22:36:47Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@joeyaiello When you say the committee has approved, do you mean the changes in this PR has been approved and it's ready to merge as soon as the conflict is resolved? Or do you mean the committee has approved to take the breaking change, but code review still needs to be done?",
      "created_at": "2017-10-10T22:38:59Z",
      "updated_at": "2017-10-10T22:38:59Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Just synced with @joeyaiello offline, and he has confirmed that the PR is ready to merge as soon as the conflict is resolved.",
      "created_at": "2017-10-11T18:51:54Z",
      "updated_at": "2017-10-11T18:51:54Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@dlwyatt: Sorry that we need to ask you again to resolve the conflict \ud83e\udd15. Or, please check the `\"Allow edits from maintainers\"` box on the PR (might need to close and reopen or something like that), and then I can resolve the conflict on behalf of you. Thank you!",
      "created_at": "2017-10-11T19:10:25Z",
      "updated_at": "2017-10-11T19:10:25Z"
    },
    {
      "author": "dlwyatt",
      "author_association": "CONTRIBUTOR",
      "body": "Just rebased.  Will check back in a bit to make sure the tests are still passing.",
      "created_at": "2017-10-11T22:24:58Z",
      "updated_at": "2017-10-11T22:24:58Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@dlwyatt Thank you! This will be the last rebase for sure \ud83d\ude04 ",
      "created_at": "2017-10-12T00:02:13Z",
      "updated_at": "2017-10-12T00:02:13Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw Should we add Docs-Needed and remove Review-Needed?",
      "created_at": "2017-10-12T03:06:38Z",
      "updated_at": "2017-10-12T03:06:38Z"
    }
  ],
  "created_at": "2016-08-23T19:58:31Z",
  "number": 2038,
  "state": "closed",
  "title": "Fix Parameter Binder bug with Advanced Functions and ValueFromRemainingArguments",
  "updated_at": "2018-10-15T21:56:25Z"
}