{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6522",
  "author": "mklement0",
  "body": "_[Updated based on @lzybkr's feedback below.]_\r\n\r\nUse of `[CmdletBinding()]` and parameter attributes in `Filter` functions requires special considerations, and it is easy to create functions that invariably fail at runtime, in obscure fashion.\r\n\r\nPerhaps it's possible to detect such cases at parse time.\r\n\r\nNote that a tempting reason to use `[CmdletBinding()]` is to benefit from its automatic enforcement of allowing only arguments for explicitly declared parameters to be passed.\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\nFilter foo1 { [CmdletBinding()] param() $_ }\r\nFilter foo2 { param([Parameter(Position=0)] $Bar) $_ }\r\n1 | foo1; 1 | foo2\r\n```\r\n\r\nThe reasons these two `Filter` functions invariably fail when invoked is that - due to using `[CmdletBinding()]` and/or parameter attributes - at least one pipeline-binding parameter must be defined explicitly.  \r\nThis requirement makes the use of these attributes in `Filter` functions impractical, as you may as well define a regular `Function` function with an explicit `process` block at that point, which offers the added flexibility of `begin` and `end` blocks.\r\n\r\nExpected behavior\r\n-----------------\r\n\r\nIdeally, report an error during the parsing stage.\r\n\r\nActual behavior\r\n---------------\r\n\r\n```none\r\nfoo1 : The input object cannot be bound to any parameters for the command either \r\nbecause the command does not take pipeline input or the input and its properties \r\ndo not match any of the parameters that take pipeline input.\r\n...\r\nfoo2 : The input object cannot be bound to any parameters for the command either \r\nbecause the command does not take pipeline input or the input and its properties \r\ndo not match any of the parameters that take pipeline input.\r\n```\r\n\r\nThat is, the function definitions succeeded, but any attempt to use them invariably fails.\r\n\r\nNote that if you use just `[CmdletBinding()]`  and no `param()` block, the functions don't break, but `[CmdletBinding()]` is quietly ignored.\r\n\r\n\r\n\r\nEnvironment data\r\n----------------\r\n\r\n```powershell\r\nPowerShell Core v6.0.2 on macOS 10.13.3\r\nPowerShell Core v6.0.2 on Ubuntu 16.04.3 LTS\r\nPowerShell Core v6.0.2 on Microsoft Windows 10 Pro (64-bit; v10.0.15063)\r\nWindows PowerShell v5.1.15063.674 on Microsoft Windows 10 Pro (64-bit; v10.0.15063)\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "If the body does not use named blocks, the body is a `process` block if you used the `filter` keyword or the body is an `end` block if you used the `function` keyword.\r\n\r\nThe following should all work similarly:\r\n\r\n```powershell\r\nfunction f1 {\r\n    param([Parameter(ValueFromPipeline)]$InputObject)\r\n    process { $InputObject }\r\n}\r\nfilter f2 {\r\n    param([Parameter(ValueFromPipeline)]$InputObject)\r\n    $InputObject\r\n}\r\nfilter f3 {\r\n    param([Parameter(ValueFromPipeline)]$InputObject)\r\n    process { $InputObject }\r\n}\r\n```\r\n\r\nSo your actual issue is that a function with a `process` block (named or unnamed when using `filter`) must specify a parameter with `ValueFromPipeline` if the function uses cmdlet binding.\r\n\r\nLike many other semantic errors involving the Parameter attribute, this could be detected at parse time, but hasn't in part because resolution of types and attributes was deferred until first invocation to allow a script to load necessary assemblies.\r\n\r\nThat said, `Parameter` and `CmdletBinding` could be special cased - symbol resolution could happen in two stages - an early pass (like what is needed for classes) can be performed during parsing, and a second time upon invocation.",
      "created_at": "2018-03-28T19:56:01Z",
      "updated_at": "2018-03-28T19:56:01Z"
    }
  ],
  "created_at": "2018-03-28T18:40:44Z",
  "number": 6522,
  "state": "open",
  "title": "Detect broken use of  [CmdletBinding()] and parameter attributes in Filter functions at parse time",
  "updated_at": "2018-03-29T15:05:39Z"
}