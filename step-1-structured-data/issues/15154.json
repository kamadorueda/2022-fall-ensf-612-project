{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15154",
  "author": "iSazonov",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nUse static lambda keyword where possible to make code readability better.\r\n\r\n**No functional changes.**\r\n**No changes in generated IL code** (one exclusion - one delegate was converted to static).\r\n\r\n## PR Context\r\n\r\n<!-- Provide a little reasoning as to why this Pull Request helps and why you have opened it. -->\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [ ] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and opened an issue in the relevant tool repository. This may include:\r\n        - [ ] Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode\r\n        (which runs in a different PS Host).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n",
  "closed_at": "2021-04-12T19:44:06Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> I'm not super familiar with this feature,\r\n\r\nIn general, Lambda does two allocations - (1) a delegate, (2) an instance of temporary class.\r\nIf a lambda uses only parameter arguments in its body Roslyn excludes second allocation (no closure created).\r\nRoslyn already does the optimization for years. Now C# allows to add \"static\" keyword for such lambdas. This explicitly shows that the lambda does not use \"external\" variables - this makes a code readability better, also this protects from a regression (if the lambda is on hot path adding \"external\" variable can raise huge allocations.).",
      "created_at": "2021-04-05T03:50:19Z",
      "updated_at": "2021-04-09T03:09:26Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@PoshChan Please remind me in 1 day",
      "created_at": "2021-04-08T19:51:56Z",
      "updated_at": "2021-04-08T19:51:56Z"
    },
    {
      "author": "PoshChan",
      "author_association": "COLLABORATOR",
      "body": "@TravisEz13, this is the reminder you requested 1 day ago",
      "created_at": "2021-04-09T19:52:42Z",
      "updated_at": "2021-04-09T19:52:42Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@PoshChan Please remind me in 30 minutes",
      "created_at": "2021-04-10T16:29:42Z",
      "updated_at": "2021-04-10T16:29:42Z"
    },
    {
      "author": "PoshChan",
      "author_association": "COLLABORATOR",
      "body": "@TravisEz13, this is the reminder you requested 30 minutes ago",
      "created_at": "2021-04-10T17:00:35Z",
      "updated_at": "2021-04-10T17:00:35Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.2.0-preview.5` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.2.0-preview.5)\n",
      "created_at": "2021-04-14T23:58:44Z",
      "updated_at": "2021-04-14T23:58:44Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov I wonder whether it would be worth proposing an analyzer for static lambda.",
      "created_at": "2021-04-15T16:32:33Z",
      "updated_at": "2021-04-15T16:32:33Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "It is ask for Roslyn repo. (I asked in .Net Runtime without answer.)",
      "created_at": "2021-04-15T17:18:21Z",
      "updated_at": "2021-04-15T17:18:21Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "> It is ask for Roslyn repo. (I asked in .Net Runtime without answer.)\r\n\r\nI can't find an existing issue.",
      "created_at": "2021-04-15T18:53:49Z",
      "updated_at": "2021-04-15T18:53:49Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "It was my comment in an PR. :-)\r\n\r\nYou could review rules from last version of analyzers - perhaps such rule is there.",
      "created_at": "2021-04-16T03:04:26Z",
      "updated_at": "2021-04-16T03:05:54Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "@xtqqczze I have submitted a new analyzer proposal: https://github.com/dotnet/roslyn-analyzers/issues/5027.",
      "created_at": "2021-04-16T13:35:22Z",
      "updated_at": "2021-04-16T13:35:22Z"
    }
  ],
  "created_at": "2021-04-04T15:42:02Z",
  "number": 15154,
  "state": "closed",
  "title": "Use static lambda keyword",
  "updated_at": "2021-04-16T13:35:22Z"
}