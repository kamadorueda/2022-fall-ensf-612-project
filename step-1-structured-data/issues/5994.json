{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5994",
  "author": "ExE-Boss",
  "body": "Given the fact that PowerShell is moving to Unicode (see #4681, https://github.com/PowerShell/PowerShell-RFC/issues/71#issuecomment-306614751, etc.), it might be a good idea to fix the `help` function for this particular case.\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/5b5168d72e0a51679667ec26e31d426b5ab4a122/src/System.Management.Automation/engine/InitialSessionState.cs#L4261-L4264\r\n\r\n## Known cases where `[Console]::OutputEncoding` is set to Unicode:\r\n- PowerShell is launched inside Visual Studio Code\r\n- PowerShell is launched in a non-Windows environment (even Bash on Ubuntu on Windows)\r\n- `[Console]::OutputEncoding` has been manually set to Unicode\r\n\r\n---\r\n\r\nBlocks #7233\r\n\r\n---\r\n\r\nA possible workaround is to install [`less` for Windows](https://chocolatey.org/packages/less) and set `$env:PAGER` to `less.exe`, which supports UTF-8 properly, unlike the old `more.com`.",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "`More` has related [comment](https://github.com/PowerShell/PowerShell/blob/5b5168d72e0a51679667ec26e31d426b5ab4a122/src/System.Management.Automation/engine/InitialSessionState.cs#L4758)\r\n\r\n",
      "created_at": "2018-01-24T09:26:38Z",
      "updated_at": "2018-01-24T09:26:38Z"
    },
    {
      "author": "ExE-Boss",
      "author_association": "NONE",
      "body": "The `More` function\u2019s related comment has since moved to: https://github.com/PowerShell/PowerShell/blob/1abf290f839f766400a64ddd8b853709489c8aa5/src/System.Management.Automation/engine/InitialSessionState.cs#L4218-L4223",
      "created_at": "2018-08-25T15:19:44Z",
      "updated_at": "2018-08-25T15:19:44Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "**Indeed, we need a replacement for `more.com`.**\r\n\r\nNote that \"Unicode\" in Windows speak often refers to UTF-16LE specifically, not to Unicode encodings in general.\r\n\r\nUTF-8 is Core's default, though not yet fully implemented in the console / terminal - see #7233 and #7634 \r\n\r\nAnd with UTF-8 also assigned to `[console]::InputEncoding` (not just ` [console]::OutputEncoding` and `$OutputEncoding`), as will be the case, `more.com` goes haywire.\r\n\r\n(Curiously, using UTF-16LE output results only in minor misbehavior: non-Basic Latin / Latin1- Supplement-range characters render as `?`).\r\n\r\n```powershell\r\nPS> $OutputEncoding = [console]::InputEncoding = [console]::OutputEncoding = [text.utf8encoding]::new($False); '\u00fc', '\u20ac' +  0..5 | more.com\r\n(gobbledygook along the lines of:\r\n\u00fc\r\n\u20ac            \u265b\uffda\u0300\u8000                                    \u265e\uffd1\u0400\u8000                                    \u2655\uffd4\u0500\u8000                                    \u2668\uffeb\u0600\u8000                   \u266f\uffee\u0700\u8000                                    \u2662\uffe5\u0800\u8000\"C:\\WINDOWS\\system32\\more.com\"\r\n)\r\n```\r\n---\r\n\r\nFor the sake of completeness: UTF-16LE:\r\n\r\n```powershell\r\nPS> $OutputEncoding = [console]::InputEncoding = [console]::OutputEncoding = [text.encoding]::unicode; '\u00fc', '\u20ac' +  0..5 | more.com\r\n\u00fc\r\n?\r\n0\r\n1\r\n2\r\n3\r\n4\r\n5\r\n```\r\n\r\n`\u20ac`, which is outside the Latin-1 Supplement Unicode range, rendered as `?`.",
      "created_at": "2018-08-25T18:44:49Z",
      "updated_at": "2018-08-25T18:44:49Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "> Indeed, we need a replacement for more.com.\r\n\r\nSince `more.com` is important to the command line user experience in general, I wonder if we should make a plea to the [WSL / Console team](https://github.com/Microsoft/console) to improve this utility?  Heck **maybe** like they did with `curl` and `tar` (and `ssh`), a future drop of Windows could include the GNU `less` utility.  That might be a \"bit\" much for Windows users given the VI style key bindings but as an option to `more.com`, I'd certainly use it.  And conveniently, PowerShell allows you to pick a \"pager\" utility that it will use.\r\n\r\ncc @bitcrazed",
      "created_at": "2018-08-25T19:18:53Z",
      "updated_at": "2018-08-25T19:20:44Z"
    },
    {
      "author": "ExE-Boss",
      "author_association": "NONE",
      "body": "@rkeithhill The issue is that `less` is GPL licensed, whereas `ssh` and `tar` are BSD licensed and `curl` is\u00a0MIT/X-derivate licensed.\r\n\r\n**Edit:** After inspecting the `less` source code, I\u2019ve found that it\u2019s also distributable under the\u00a0`less`\u00a0license, which is a BSD\u2011style license.",
      "created_at": "2018-08-25T19:39:48Z",
      "updated_at": "2018-08-25T19:50:18Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "OK, well then perhaps an overhaul of `more.com` or more likely, a new pager for Windows.  Probably would be better to have more typical Windows key bindings anyway, like `Ctrl+f` for find, etc.",
      "created_at": "2018-08-25T20:16:59Z",
      "updated_at": "2018-08-25T20:16:59Z"
    },
    {
      "author": "bitcrazed",
      "author_association": "NONE",
      "body": "We're keen to add more *NIX command-line tools where we can. Bear with ;)",
      "created_at": "2018-08-29T22:11:57Z",
      "updated_at": "2018-08-29T22:11:57Z"
    },
    {
      "author": "ExE-Boss",
      "author_association": "NONE",
      "body": "@bitcrazed There\u2019s also [UnxUtils](http://unxutils.sourceforge.net/) [<img align=\"top\" src=\"https://img.shields.io/chocolatey/v/UnxUtils.svg\" alt=\"(chocolatey&nbsp;package)\"/>](https://chocolatey.org/packages/UnxUtils), which does precisely that, but it\u2019s not been updated since Windows\u00a0XP, and the `patch` utility doesn\u2019t have a manifest for disabling the need for elevation.\r\n\r\nAnd\u00a0many other utilities which are part of it have subtle, or not so subtle (i.e. `whoami` not working), incompatibilities with modern windows.",
      "created_at": "2018-08-29T23:24:34Z",
      "updated_at": "2018-08-29T23:26:37Z"
    }
  ],
  "created_at": "2018-01-23T16:40:32Z",
  "labels": [
    "WG-Engine",
    "WG-Interactive-HelpSystem"
  ],
  "number": 5994,
  "state": "open",
  "title": "The help function breaks when [Console]::OutputEncoding is set to Unicode",
  "updated_at": "2018-08-29T23:26:37Z"
}