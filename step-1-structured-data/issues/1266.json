{
  "_url": "https://github.com/PowerShell/PowerShell/issues/1266",
  "author": "daxian-dbw",
  "body": "I went through the following sub powershell projects in PowerShell repo to search for missing files, by comparing the map.json files and project.json files with the sources files in windows build.\n- [x] Microsoft.PowerShell.Commands.Diagnostics\n- [x] Microsoft.PowerShell.Commands.Management\n- [x] Microsoft.PowerShell.Commands.Utility\n- [x] Microsoft.PowerShell.ConsoleHost\n- [x] Microsoft.PowerShell.CoreCLR.AssemblyLoadContext\n- [x] Microsoft.PowerShell.CoreCLR.Eventing\n- [x] Microsoft.PowerShell.LocalAccounts\n- [x] Microsoft.PowerShell.PSReadLine\n- [x] Microsoft.PowerShell.Security\n- [x] System.Management.Automation\n- [x] Modules\n\nThe analysis result is as follows, for both Full PS and PS Core:\n1. All .resx files are embeded when building CoreCLR assemblies, even though a .resx file is not needed for the CoreCLR assembly\n2. Microsoft.PowerShell.Commands.Management:\n   - map.json is missing:\n     - TimeZoneResources.resx\n     - TimeZoneCommands.cs\n   - project.json shouldn't exclude for CoreCLR:\n     - Computer.cs (#1146)\n3. Microsoft.PowerShell.Commands.Utility:\n   - map.json is missing\n     - ~~All string manipulation source files~~ _(they were intentionally skipped due to #726)_\n   - project.json needs to exclude for CoreCLR:\n     - FormObject.cs\n     - FormObjectCollection.cs\n     - WebCmdletElementCollection.cs\n     - WebRequestMethod.cs\n4. Microsoft.PowerShell.ConsoleHost:\n   - project.json needs to exclude for CoreCLR _(they are now guarded by `!PORTABLE`, but they should be completely excluded from CoreCLR build)_\n     - MshHostMshSnapin.cs\n     - EngineInstaller.cs\n5. Microsoft.PowerShell.Security:\n   - map.json is missing\n     - CatalogCommands.cs\n6. System.Management.Automation\n   - map.json - missing\n     - security\\CatalogHelper.cs\n     - CatalogStrings.resx\n     - ~~CorePsModuleAssemblyAnalyzer~~ _(expected, not built in windows build either)_\n\nThey need to be fixed in PowerShell Core.\n",
  "closed_at": "2016-07-11T20:10:12Z",
  "comments": [
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@vors For the \"string manipulation\" source files in Utility.dll, did you intentionally skip them for PowerShell?\n",
      "created_at": "2016-07-01T23:21:48Z",
      "updated_at": "2016-08-16T07:50:45Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw yes, it's #726\n",
      "created_at": "2016-07-01T23:24:26Z",
      "updated_at": "2016-07-01T23:24:26Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw good analysis!\n",
      "created_at": "2016-07-02T03:57:34Z",
      "updated_at": "2016-07-02T03:57:34Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "We should do the same exercise for files under `src/Modules`. I noticed and fixed few missed files there, there could be more. \n",
      "created_at": "2016-07-02T04:02:47Z",
      "updated_at": "2016-07-02T04:02:47Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "The module files under `src/Modules` are updated and cleaned up appropriately. This is done via #1332\n",
      "created_at": "2016-07-11T20:10:02Z",
      "updated_at": "2016-07-11T20:10:02Z"
    }
  ],
  "created_at": "2016-07-01T23:13:33Z",
  "number": 1266,
  "state": "closed",
  "title": "Missing files in PowerShell repo",
  "updated_at": "2016-08-17T06:00:26Z"
}