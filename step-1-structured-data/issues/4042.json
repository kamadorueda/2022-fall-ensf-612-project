{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4042",
  "author": "Bartolomeus-649",
  "body": "Regarding _Event.format.ps1xml_ and why someone thought it would be a good idea to group on ProviderName when displaying _System.Diagnostics.Eventing.Reader.EventLogRecord_'s.\r\n\r\nAs far as I can see EventLogRecord is a pretty straight forward class with a bunch of properties, one of them being a collection of \"properties\".\r\n\r\nIs there a reason to not just display this as a plain table?\r\nIt's not so easy to get rid of the grouping, but on the other hand, for those that want grouping it it is right there in Select-Object.\r\n\r\n\r\n  ",
  "closed_at": "2021-01-15T04:50:40Z",
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I don't know the historical reason why it groups by default, but I agree it seems like not grouping would be more useful.\r\n\r\n```powershell\r\nPS C:\\Users\\slee> get-winevent -LogName application\r\n\r\n\r\n   ProviderName: Windows Error Reporting\r\n\r\nTimeCreated                     Id LevelDisplayName Message\r\n-----------                     -- ---------------- -------\r\n6/20/2017 4:14:21 PM          1001 Information      Fault bucket 127927607110, type 5...\r\n6/20/2017 4:14:20 PM          1001 Information      Fault bucket , type 0...\r\n6/20/2017 4:14:20 PM          1001 Information      Fault bucket , type 0...\r\n\r\n\r\n   ProviderName: Microsoft-Windows-Security-SPP\r\n\r\nTimeCreated                     Id LevelDisplayName Message\r\n-----------                     -- ---------------- -------\r\n6/20/2017 4:14:14 PM         16384 Information      Successfully scheduled Software Protection service for re-start ...\r\n\r\n\r\n   ProviderName: Windows Error Reporting\r\n\r\nTimeCreated                     Id LevelDisplayName Message\r\n-----------                     -- ---------------- -------\r\n6/20/2017 4:14:05 PM          1001 Information      Fault bucket 127927606267, type 5...\r\n6/20/2017 4:12:53 PM          1001 Information      Fault bucket 127927607110, type 5...\r\n6/20/2017 4:12:51 PM          1001 Information      Fault bucket , type 0...\r\n6/20/2017 4:12:51 PM          1001 Information      Fault bucket , type 0...\r\n```\r\ncompared to\r\n```powershell\r\nPS C:\\Users\\slee> get-winevent -LogName application  | select timecreated,id,leveldisplayname,message\r\n\r\nTimeCreated             Id LevelDisplayName Message\r\n-----------             -- ---------------- -------\r\n6/20/2017 4:14:21 PM  1001 Information      Fault bucket 127927607110, type 5...\r\n6/20/2017 4:14:20 PM  1001 Information      Fault bucket , type 0...\r\n6/20/2017 4:14:20 PM  1001 Information      Fault bucket , type 0...\r\n6/20/2017 4:14:14 PM 16384 Information      Successfully scheduled Software Protection service for re-start at 2017-...\r\n6/20/2017 4:14:05 PM  1001 Information      Fault bucket 127927606267, type 5...\r\n6/20/2017 4:12:53 PM  1001 Information      Fault bucket 127927607110, type 5...\r\n6/20/2017 4:12:51 PM  1001 Information      Fault bucket , type 0...\r\n6/20/2017 4:12:51 PM  1001 Information      Fault bucket , type 0...\r\n6/20/2017 4:12:51 PM   916 Information      svchost (5616,G,0) The beta feature EseDiskFlushConsistency is enabled i...\r\n6/20/2017 4:12:34 PM  1001 Information      Fault bucket 127927606267, type 5...\r\n6/20/2017 4:10:50 PM    15 Information      Updated Windows Defender status successfully to SECURITY_PRODUCT_STATE_ON.\r\n6/20/2017 4:10:50 PM    15 Information      Updated Windows Defender status successfully to SECURITY_PRODUCT_STATE_ON.\r\n6/20/2017 4:08:39 PM 16384 Information      Successfully scheduled Software Protection service for re-start at 2017-...\r\n6/20/2017 4:07:59 PM  1001 Information      Fault bucket 127911070002, type 5...\r\n```\r\ncc @joeyaiello @HemantMahawar \r\n\r\nSince it's formatting, it wouldn't be a breaking change.",
      "created_at": "2017-06-20T23:23:14Z",
      "updated_at": "2017-06-20T23:23:14Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "It looks as a emulation of MMC Event Viewer main page.",
      "created_at": "2017-06-21T05:07:22Z",
      "updated_at": "2017-06-21T05:07:22Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "When we eventually get [curses support](https://github.com/PowerShell/PowerShell/issues/3957), we could do some interesting things with viewing object collections",
      "created_at": "2017-06-21T05:12:19Z",
      "updated_at": "2017-06-21T05:12:19Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I think the MMC Event Viewer main page and the group view is very useful when we don't know where to start to troubleshoot. an Windows issue. In other cases, we are usually more precise about the event selection. So I'd leave it as is.",
      "created_at": "2017-06-21T06:19:50Z",
      "updated_at": "2017-06-21T06:19:50Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Perhaps the simply thing to do here is to add a new View so you can do something like:\r\n\r\n```powershell\r\nGet-WinEvent -LogName Application | Format-Table -View Flat\r\n```\r\n",
      "created_at": "2017-06-21T17:55:19Z",
      "updated_at": "2017-06-21T17:55:19Z"
    },
    {
      "author": "Bartolomeus-649",
      "author_association": "NONE",
      "body": "Why not make it behave like all other CmdLets?  Are there any other similar CmdLets that group their output by default?  Are there any other CmdLets from `Microsoft.PowerShell.Diagnostics` that group the output by default?\r\n\r\nAlso, doing what people expect and adhearing to the  [Principle of least astonishment](https://en.wikipedia.org/wiki/Principle_of_least_astonishment) is always a good thing.\r\n\r\nAnd if keeping the grouped by output, then `Get-EventLog` need to be changed to group it's output as well, if there is to be a consistent and predictable result.\r\n\r\nAlso, note that the group by \"feature\", is not a \"real\" group by. As you can see in @SteveL-MSFT initial response, the ProviderName `Windows Error Reporting` is present two times in the output.",
      "created_at": "2017-06-22T11:34:45Z",
      "updated_at": "2017-06-22T11:34:45Z"
    },
    {
      "author": "ghost",
      "author_association": "NONE",
      "body": "Get-ChildItem groups their output by default based on directory. There are times when you want it flat too so I up-voted the Format-Table -View Flat option. \r\n\r\nThe Grouping of Get-WinEvent is not all confusing to me. It is grouping based on the type of log, because each one is a different source, a different file. It seems to mirrors the MMC output which is tree-based navigation, much like Get-ChildItem with file system. \r\n\r\nThe cool thing about PowerShell is that once you understand that PSObject and Formatting are two separate things, stuff like this don't matter. Consistency is not a good thing when you need output to format differently based on the data. PowerShell tries to be smart about it with default Format Views. Then, if you don't like it, you just pipe to Format-Table or Format-List and change the fields and view.",
      "created_at": "2017-06-23T03:16:47Z",
      "updated_at": "2017-06-23T03:16:47Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Close as stale issue. Feel free to continue discussion.",
      "created_at": "2021-01-15T04:50:40Z",
      "updated_at": "2021-01-15T04:50:40Z"
    }
  ],
  "created_at": "2017-06-18T00:18:05Z",
  "labels": [
    "Issue-Question",
    "WG-Cmdlets"
  ],
  "number": 4042,
  "state": "closed",
  "title": "Why group System.Diagnostics.Eventing.Reader.EventLogRecord?",
  "updated_at": "2021-01-15T04:50:40Z"
}