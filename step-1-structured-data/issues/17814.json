{
  "_url": "https://github.com/PowerShell/PowerShell/issues/17814",
  "author": "mcfi",
  "body": "### Prerequisites\r\n\r\n- [X] Write a descriptive title.\r\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- [X] Search the existing issues.\r\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\r\n\r\n### Steps to reproduce\r\n\r\n1. Download ARM64 powershell core 7.2.5 on ARM64 Windows 11 22H2 (22621)\r\n2. Launch pwsh.exe and type \"Import-Module PKI\"\r\n3. Observe this failure message: \"Import-Module: Could not load file or assembly 'Microsoft.CertificateServices.PKIClient.Cmdlets, Culture=neutral, PublicKeyToken=null'. Format of the executable (.exe) or library (.dll) is invalid.\"\r\n\r\n### Expected behavior\r\n\r\n```console\r\nNo error.\r\n```\r\n\r\n\r\n### Actual behavior\r\n\r\n```console\r\nImport-Module: Could not load file or assembly 'Microsoft.CertificateServices.PKIClient.Cmdlets, Culture=neutral, PublicKeyToken=null'. Format of the executable (.exe) or library (.dll) is invalid.\r\n```\r\n\r\n\r\n### Error details\r\n\r\n```console\r\nException             :\r\n    Type           : System.BadImageFormatException\r\n    Message        : Could not load file or assembly 'Microsoft.CertificateServices.PKIClient.Cmdlets, Culture=neutral, PublicKeyToken=null'. Format of the executable\r\n(.exe) or library (.dll) is invalid.\r\n    FileName       : Microsoft.CertificateServices.PKIClient.Cmdlets, Culture=neutral, PublicKeyToken=null\r\n    TargetSite     :\r\n        Name          : LoadBinaryModule\r\n        DeclaringType : Microsoft.PowerShell.Commands.ModuleCmdletBase\r\n        MemberType    : Method\r\n        Module        : System.Management.Automation.dll\r\n    InnerException :\r\n        Type       : System.BadImageFormatException\r\n        Message    : Could not load file or assembly 'C:\\WINDOWS\\Microsoft.NET\\assembly\\GAC_64\\Microsoft.CertificateServices.PKIClient.Cmdlets\\v4.0_10.0.0.0__31bf3856a\r\nd364e35\\Microsoft.CertificateServices.PKIClient.Cmdlets.dll'. Format of the executable (.exe) or library (.dll) is invalid.\r\n        FileName   : C:\\WINDOWS\\Microsoft.NET\\assembly\\GAC_64\\Microsoft.CertificateServices.PKIClient.Cmdlets\\v4.0_10.0.0.0__31bf3856ad364e35\\Microsoft.Certificate\r\nServices.PKIClient.Cmdlets.dll\r\n        TargetSite :\r\n            Name          : LoadFromPath\r\n            DeclaringType : System.Runtime.Loader.AssemblyLoadContext\r\n            MemberType    : Method\r\n            Module        : System.Private.CoreLib.dll\r\n        Source     : System.Private.CoreLib\r\n        HResult    : -2147024703\r\n        StackTrace :\r\n   at System.Runtime.Loader.AssemblyLoadContext.LoadFromPath(IntPtr ptrNativeAssemblyLoadContext, String ilPath, String niPath, ObjectHandleOnStack retAssembly)\r\n   at System.Runtime.Loader.AssemblyLoadContext.LoadFromAssemblyPath(String assemblyPath)\r\n   at System.Management.Automation.PowerShellAssemblyLoadContext.Resolve(AssemblyLoadContext loadContext, AssemblyName assemblyName)\r\n   at System.Runtime.Loader.AssemblyLoadContext.GetFirstResolvedAssemblyFromResolvingEvent(AssemblyName assemblyName)\r\n   at System.Runtime.Loader.AssemblyLoadContext.ResolveUsingEvent(AssemblyName assemblyName)\r\n   at System.Runtime.Loader.AssemblyLoadContext.ResolveUsingResolvingEvent(IntPtr gchManagedAssemblyLoadContext, AssemblyName assemblyName)\r\n    Source         : System.Management.Automation\r\n    HResult        : -2147024703\r\n    StackTrace     :\r\n   at Microsoft.PowerShell.Commands.ModuleCmdletBase.LoadBinaryModule(PSModuleInfo parentModule, String moduleName, String fileName, Assembly assemblyToLoad, String\r\nmoduleBase, SessionState ss, ImportModuleOptions options, ManifestProcessingFlags manifestProcessingFlags, String prefix, Boolean loadTypes, Boolean loadFormats,\r\nBoolean& found, String shortModuleName, Boolean disableFormatUpdates)\r\n   at Microsoft.PowerShell.Commands.ModuleCmdletBase.LoadModuleNamedInManifest(PSModuleInfo parentModule, ModuleSpecification moduleSpecification, String moduleBase,\r\nBoolean searchModulePath, String prefix, SessionState ss, ImportModuleOptions options, ManifestProcessingFlags manifestProcessingFlags, Boolean loadTypes, Boolean\r\nloadFormats, Object privateData, Boolean& found, String shortModuleName, Nullable`1 manifestLanguageMode)\r\n   at Microsoft.PowerShell.Commands.ModuleCmdletBase.LoadModuleManifest(String moduleManifestPath, ExternalScriptInfo manifestScriptInfo, Hashtable data, Hashtable\r\nlocalizedData, ManifestProcessingFlags manifestProcessingFlags, Version minimumVersion, Version maximumVersion, Version requiredVersion, Nullable`1\r\nrequiredModuleGuid, ImportModuleOptions& options, Boolean& containedErrors)\r\n   at Microsoft.PowerShell.Commands.ModuleCmdletBase.LoadModule(PSModuleInfo parentModule, String fileName, String moduleBase, String prefix, SessionState ss, Object\r\nprivateData, ImportModuleOptions& options, ManifestProcessingFlags manifestProcessingFlags, Boolean& found, Boolean& moduleFileFound)\r\n   at Microsoft.PowerShell.Commands.ModuleCmdletBase.LoadUsingExtensions(PSModuleInfo parentModule, String moduleName, String fileBaseName, String extension, String\r\nmoduleBase, String prefix, SessionState ss, ImportModuleOptions options, ManifestProcessingFlags manifestProcessingFlags, Boolean& found, Boolean& moduleFileFound)\r\n   at Microsoft.PowerShell.Commands.ModuleCmdletBase.LoadUsingModulePath(PSModuleInfo parentModule, Boolean found, IEnumerable`1 modulePath, String name, SessionState\r\nss, ImportModuleOptions options, ManifestProcessingFlags manifestProcessingFlags, PSModuleInfo& module)\r\n   at Microsoft.PowerShell.Commands.ImportModuleCommand.ImportModule_LocallyViaName(ImportModuleOptions importModuleOptions, String name)\r\n   at Microsoft.PowerShell.Commands.ImportModuleCommand.ImportModule_LocallyViaName_WithTelemetry(ImportModuleOptions importModuleOptions, String name)\r\n   at Microsoft.PowerShell.Commands.ImportModuleCommand.ProcessRecord()\r\n   at System.Management.Automation.Cmdlet.DoProcessRecord()\r\n   at System.Management.Automation.CommandProcessor.ProcessRecord()\r\nCategoryInfo          : NotSpecified: (:) [Import-Module], BadImageFormatException\r\nFullyQualifiedErrorId : System.BadImageFormatException,Microsoft.PowerShell.Commands.ImportModuleCommand\r\nInvocationInfo        :\r\n    MyCommand        : Import-Module\r\n    ScriptLineNumber : 1\r\n    OffsetInLine     : 1\r\n    HistoryId        : 5\r\n    Line             : Import-Module PKI\r\n    PositionMessage  : At line:1 char:1\r\n                       + Import-Module PKI\r\n                       + ~~~~~~~~~~~~~~~~~\r\n    InvocationName   : Import-Module\r\n    CommandOrigin    : Internal\r\nScriptStackTrace      : at <ScriptBlock>, <No file>: line 1\r\n```\r\n\r\n\r\n### Environment data\r\n\r\n```powershell\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.5\r\nPSEdition                      Core\r\nGitCommitId                    7.2.5\r\nOS                             Microsoft Windows 10.0.25173\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\n\r\n### Visuals\r\n\r\n_No response_",
  "closed_at": "2022-08-03T03:03:14Z",
  "comments": [
    {
      "author": "mcfi",
      "author_association": "NONE",
      "body": "I debugged it and found that the ARM64 pwsh.exe was attempting to load C:\\WINDOWS\\Microsoft.NET\\assembly\\GAC_64\\Microsoft.CertificateServices.PKIClient.Cmdlets\\v4.0_10.0.0.0__31bf3856ad364e35\\Microsoft.CertificateServices.PKIClient.Cmdlets.dll, which was x64. The powershell core should be enlightened with the GAC_Arm64 folder on ARM64 Windows that contains ARM64 GAC dlls. This means that it should've loaded C:\\WINDOWS\\Microsoft.NET\\assembly\\GAC_Arm64\\Microsoft.CertificateServices.PKIClient.Cmdlets\\v4.0_10.0.0.0__31bf3856ad364e35\\Microsoft.CertificateServices.PKIClient.Cmdlets.dll",
      "created_at": "2022-08-01T22:25:52Z",
      "updated_at": "2022-08-01T22:25:52Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:This issue was addressed in #17816, which has now been successfully released as `v7.3.0-preview.7`.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.3.0-preview.7)\n",
      "created_at": "2022-08-12T00:02:02Z",
      "updated_at": "2022-08-12T00:02:02Z"
    }
  ],
  "created_at": "2022-08-01T22:24:31Z",
  "labels": [
    "Issue-Bug",
    "Resolution-Fixed"
  ],
  "number": 17814,
  "state": "closed",
  "title": "Import-Module PKI fails with ARM64 powershell core 7.2.5 on ARM64 Windows 11 22H2",
  "updated_at": "2022-08-12T00:02:02Z"
}