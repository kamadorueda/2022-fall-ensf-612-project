{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4874",
  "author": "sachidananda04",
  "body": "<!--\r\n\r\nIf it is a bug report:\r\n- make sure you are able to repro it on the latest released version. \r\nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://github.com/PowerShell/PowerShell/blob/master/docs/KNOWNISSUES.md).\r\n- Fill out the following repro template\r\n\r\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\r\n-->\r\n\r\nSteps to reproduce\r\n------------------\r\nI am using \"powershell-6.0.0_beta.7-1.el7.x86_64.rpm\" running inside my docker container\r\n\r\n$cstZone = [System.TimeZoneInfo]::FindSystemTimeZoneById(\"Eastern Standard Time\")\r\nWrite-Host $cstZone\r\n$cstTime = [System.TimeZoneInfo]::ConvertTimeFromUtc((Get-Date).ToUniversalTime(), $cstZone)\r\n$date = Get-Date $cstTime -f \"yyyy-MM-dd\"\r\nWrite-Host $date\r\n\r\n\r\nExpected behavior\r\n-----------------\r\n\r\nShould get the datetime of timezone specified and convert it to UTC.\r\n\r\nActual behavior\r\n---------------\r\nException calling \"FindSystemTimeZoneById\" with \"1\" argument(s): \"The time zone\r\n ID 'Eastern Standard Time' was not found on the local computer.\"\r\n$cstZone = [System.TimeZoneInfo]::FindSystemTimeZoneById(\"Eastern Sta ...\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : NotSpecified: (:) [], MethodInvocationException\r\n    + FullyQualifiedErrorId : TimeZoneNotFoundException\r\n\r\nException calling \"ConvertTimeFromUtc\" with \"2\" argument(s): \"Value cannot be n\r\null.\r\nParameter name: destinationTimeZone\"\r\n $cstTime = [System.TimeZoneInfo]::ConvertTimeFromUtc((Get-Date).ToUni ...\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : NotSpecified: (:) [], MethodInvocationException\r\n    + FullyQualifiedErrorId : ArgumentNullException\r\n \r\nGet-Date : Cannot bind parameter 'Date' to the target. Exception setting \"Date\"\r\n: \"Cannot convert null to type \"System.DateTime\".\"\r\n+ $date = Get-Date $cstTime -f \"yyyy-MM-dd\"\r\n+                  ~~~~~~~~\r\n    + CategoryInfo          : WriteError: (:) [Get-Date], ParameterBindingExce \r\n   ption\r\n    + FullyQualifiedErrorId : ParameterBindingFailed,Microsoft.PowerShell.Comm \r\n   ands.GetDateCommand\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\n\r\n```\r\n",
  "closed_at": "2017-09-20T14:00:36Z",
  "comments": [
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "Dupe of dotnet/corefx#11897\r\n\r\nThis is a CoreFX issue where time zones are inconsistent between Linux and Windows. This will be fixed in PowerShell when it is fixed upstream.",
      "created_at": "2017-09-20T13:40:53Z",
      "updated_at": "2017-09-20T13:40:53Z"
    }
  ],
  "created_at": "2017-09-20T12:44:21Z",
  "labels": [
    "Resolution-External"
  ],
  "number": 4874,
  "state": "closed",
  "title": "Date and time related functions returning error",
  "updated_at": "2017-09-20T14:00:36Z"
}