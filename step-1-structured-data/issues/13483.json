{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13483",
  "author": "Artoria2e5",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\nThis pull request adds a new experimetal feature `PSEscapeForNativeExecutables` to better handle quotes, backslashes, and whitespace in command arguments.\r\n\r\nMany cases of existing code already compensate for the lack of quoting by manually adding backslashes before quotes. These code will need to be fixed. An example of what these stuff look like can be found in the Pester changes.\r\n\r\n## PR Context\r\nSee #1995. This is a more cleaned-up version of #13099, now fully aware of the backward compatibility things. Code duplication is kept to a minimum where I can. (Sorry for effing up with the stale bot. But eh, at least this is a chance of squashing commits.)\r\n\r\nI am still inclined to think that not engaging with the broken NeedsQuote stuff is a better way of fixing things, unlike #13482's patchy approach.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [ ] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n  - **Legal issue**: I cannot represent the folks at .NET Foundation in the CLA. Microsoft would have to make a deal with itself. CC @stephentoub who seems to be an author.\r\n- [ ] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [x] Experimental feature name: PSEscapeForNativeExecutables\r\n- **User-facing changes**\r\n    - [x] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n      - Okay, actually these tests need to be \"restored\" for when the feature is turned off. Some conditionals will be needed instead of what I currently have.\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2021-05-11T02:36:41Z",
  "comments": [
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "/cc @JamesWTruher and @SteveL-MSFT ",
      "created_at": "2020-08-19T22:58:50Z",
      "updated_at": "2020-08-19T22:58:50Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@Artoria2e5 Please resolve the merge conflict.",
      "created_at": "2020-08-21T05:50:39Z",
      "updated_at": "2020-08-21T05:50:39Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2020-08-30T02:00:13Z",
      "updated_at": "2020-08-30T02:00:13Z"
    },
    {
      "author": "JamesWTruher",
      "author_association": "MEMBER",
      "body": "based on feedback and the fact that enough has changed underneath this change that I'm going to close this and implement something a little different",
      "created_at": "2020-10-15T22:53:15Z",
      "updated_at": "2020-10-15T22:53:15Z"
    },
    {
      "author": "JamesWTruher",
      "author_association": "MEMBER",
      "body": "whoops - sorry @Artoria2e5  - i thought this was mine",
      "created_at": "2020-10-15T22:54:03Z",
      "updated_at": "2020-10-15T22:54:03Z"
    },
    {
      "author": "Artoria2e5",
      "author_association": "NONE",
      "body": "I should really get some strong coffee and just finish up the tests. As for testing the diverging `&` behavior, I think I could just add a utility ps function to \"over-escape\" the input when the feature is off.",
      "created_at": "2020-10-17T09:35:39Z",
      "updated_at": "2020-10-17T09:37:13Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2020-10-28T14:00:08Z",
      "updated_at": "2020-10-28T14:00:08Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee reviewed this, we would like to see the native command parameter binder leverage the new .NET API that passes an array of arguments to processes so that there isn't incorrect handling of args.  We would also like to see this change early in 7.2 to gauge compatibility impact of such a change.",
      "created_at": "2020-12-16T23:54:23Z",
      "updated_at": "2020-12-16T23:54:23Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2021-01-14T02:00:12Z",
      "updated_at": "2021-01-14T02:00:12Z"
    },
    {
      "author": "Artoria2e5",
      "author_association": "NONE",
      "body": "Now that the new native facility has been added, I do not see any possibility for this PR to be accepted. Closing it myself.",
      "created_at": "2021-05-11T02:36:41Z",
      "updated_at": "2021-05-11T02:36:41Z"
    }
  ],
  "created_at": "2020-08-19T22:32:26Z",
  "number": 13483,
  "state": "closed",
  "title": "WIP: Add experimental option for quoting cmdline",
  "updated_at": "2021-09-15T18:33:45Z"
}