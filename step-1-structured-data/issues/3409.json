{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3409",
  "author": "daxian-dbw",
  "body": "Fix #2291\r\nAdd documentation about how to host PowerShell Core in .NET Core application.",
  "closed_at": "2017-03-25T00:53:25Z",
  "comments": [
    {
      "author": "daviwil",
      "author_association": "CONTRIBUTOR",
      "body": "This is really cool!\r\n\r\nQuick question: does this tie the application to a specific version of PowerShell Core?  Specifically, if I build against Microsoft.PowerShell.SDK of a specific version, is there any way I could get my application to load assemblies from a newer version of PowerShell Core if I have its filesystem path?\r\n\r\nI'm asking because I'm re-evaluating whether I could make PowerShell Editor Services a standalone process again, not a module running inside of powershell.exe.",
      "created_at": "2017-03-24T02:59:29Z",
      "updated_at": "2017-03-24T02:59:44Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@daviwil When you build your application this way, a specific version (depending on the package version you use) of PowerShell Core assemblies will be published to your publish folder. But your application is not necessarily tied to them. You can just replace them with a newer version of PS Core assemblies, and your application should continue to work as long as the new PS Core assemblies are targeting the same set of .NET Core packages.\r\n\r\nThere is one problem, though -- we haven't published any powershell core packages for Linux/OSX yet.\r\nPowerShell Core builds separately for Windows and Unix, so the assemblies are different between Windows and Unix platforms. All PowerShell Core packages we published so far contain windows assemblies only \u2639\ufe0f.\r\n\r\nThere is a workaround. Build your application using the existing powershell core NuGet packages, but replace the powershell assemblies with those from a Linux/OSX package. That hopefully would work.",
      "created_at": "2017-03-24T05:11:09Z",
      "updated_at": "2017-03-24T18:09:59Z"
    },
    {
      "author": "daviwil",
      "author_association": "CONTRIBUTOR",
      "body": "@daxian-dbw thanks for the explanation!  Seems like it would be more complex go have my own process hosting PowerShell so I think I'll stick with my current model of being hosted inside of powershell.exe :)",
      "created_at": "2017-03-24T16:18:21Z",
      "updated_at": "2017-03-24T16:18:21Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@mirichmo I addressed your comments. Could you please take another look?",
      "created_at": "2017-03-24T18:11:00Z",
      "updated_at": "2017-03-24T18:11:00Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@joeyaiello @mirichmo All comments have been addressed. Can you please take another look?",
      "created_at": "2017-03-24T23:14:40Z",
      "updated_at": "2017-03-24T23:14:40Z"
    }
  ],
  "created_at": "2017-03-24T01:07:19Z",
  "number": 3409,
  "state": "closed",
  "title": "Add documentation about hosting PowerShell Core",
  "updated_at": "2017-03-25T02:36:29Z"
}