{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12674",
  "author": "nimehta2010",
  "body": "# Steps to reproduce\r\n\r\nGo to PS7 on RHEL\r\nInstall-Module -Name ExchangeOnlineManagement -RequiredVersion 0.4669.0\r\nThis works correctly on ubuntu but gives the following error on RHEL\r\n\r\n# Expected behavior\r\n\r\nExpected it to connect the RPS session\r\n\r\n# Actual behavior\r\n\r\nTo sign in, use a web browser to open the page https://microsoft.com/devicelogin and enter the code ARMCN94XP to authenticate.\r\nException: /root/.local/share/powershell/Modules/ExchangeOnlineManagement/0.4669.0/netCore/ExchangeOnlineManagement.psm1:426\r\nLine |\r\n 426 |  \u2026             $PSSession = New-ExoPSSession -ExchangeEnvironmentName $E \u2026\r\n     |                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n     | This parameter set requires WSMan, and no supported WSMan client library was found. WSMan is either\r\n     | not installed or unavailable for this system.\r\n\r\nPS /home/nimehta-linux1> $Error.Exception\r\n\r\nErrorCode                   : 0\r\nTransportMessage            :\r\nErrorRecord                 : This parameter set requires WSMan, and no supported WSMan client library was found.\r\n                              WSMan is either not installed or unavailable for this system.\r\nWasThrownFromThrowStatement : True\r\nTargetSite                  : Void .ctor()\r\nStackTrace                  :    at System.Management.Automation.Remoting.Client.WSManClientSessionTransportManager.WSM\r\n                              anAPIDataCommon..ctor()\r\n                                 at System.Management.Automation.Remoting.Client.WSManClientSessionTransportManager..ct\r\n                              or(Guid runspacePoolInstanceId, WSManConnectionInfo connectionInfo,\r\n                              PSRemotingCryptoHelper cryptoHelper, String sessionName)\r\n                                 at System.Management.Automation.Runspaces.WSManConnectionInfo.CreateClientSessionTrans\r\n                              portManager(Guid instanceId, String sessionName, PSRemotingCryptoHelper cryptoHelper)\r\n                                 at System.Management.Automation.Remoting.ClientRemoteSessionDSHandlerImpl..ctor(Client\r\n                              RemoteSession session, PSRemotingCryptoHelper cryptoHelper, RunspaceConnectionInfo\r\n                              connectionInfo, URIDirectionReported uriRedirectionHandler)\r\n                                 at System.Management.Automation.Remoting.ClientRemoteSessionImpl..ctor(RemoteRunspaceP\r\n                              oolInternal rsPool, URIDirectionReported uriRedirectionHandler)\r\n                                 at System.Management.Automation.Internal.ClientRunspacePoolDataStructureHandler.Create\r\n                              ClientRemoteSession(RemoteRunspacePoolInternal rsPoolInternal)\r\n                                 at System.Management.Automation.Internal.ClientRunspacePoolDataStructureHandler..ctor(\r\n                              RemoteRunspacePoolInternal clientRunspacePool, TypeTable typeTable)\r\n                                 at System.Management.Automation.Runspaces.Internal.RemoteRunspacePoolInternal.CreateDS\r\n                              Handler(TypeTable typeTable)\r\n                                 at\r\n                              System.Management.Automation.Runspaces.Internal.RemoteRunspacePoolInternal..ctor(Int32\r\n                              minRunspaces, Int32 maxRunspaces, TypeTable typeTable, PSHost host,\r\n                              PSPrimitiveDictionary applicationArguments, RunspaceConnectionInfo connectionInfo,\r\n                              String name)\r\n                                 at System.Management.Automation.Runspaces.RunspacePool..ctor(Int32 minRunspaces,\r\n                              Int32 maxRunspaces, TypeTable typeTable, PSHost host, PSPrimitiveDictionary\r\n                              applicationArguments, RunspaceConnectionInfo connectionInfo, String name)\r\n                                 at System.Management.Automation.RemoteRunspace..ctor(TypeTable typeTable,\r\n                              RunspaceConnectionInfo connectionInfo, PSHost host, PSPrimitiveDictionary\r\n                              applicationArguments, String name, Int32 id)\r\n                                 at Microsoft.PowerShell.Commands.NewPSSessionCommand.CreateRunspacesWhenUriParameterSp\r\n                              ecified()\r\n                                 at Microsoft.PowerShell.Commands.NewPSSessionCommand.ProcessRecord()\r\n                                 at System.Management.Automation.Cmdlet.DoProcessRecord()\r\n                                 at System.Management.Automation.CommandProcessor.ProcessRecord()\r\nMessage                     : This parameter set requires WSMan, and no supported WSMan client library was found.\r\n                              WSMan is either not installed or unavailable for this system.\r\nData                        : {}\r\nInnerException              : System.DllNotFoundException: Unable to load shared library 'libpsrpclient' or one of its\r\n                              dependencies. In order to help diagnose loading problems, consider setting the LD_DEBUG\r\n                              environment variable: liblibpsrpclient: cannot open shared object file: No such file or\r\n                              directory\r\n                                 at System.Management.Automation.Remoting.Client.WSManNativeApi.WSManInitialize(Int32\r\n                              flags, IntPtr& wsManAPIHandle)\r\n                                 at System.Management.Automation.Remoting.Client.WSManClientSessionTransportManager.WSM\r\n                              anAPIDataCommon..ctor()\r\nHelpLink                    :\r\nSource                      : System.Management.Automation\r\nHResult                     : -2146233087\r\n\r\n\r\n\r\n# Environment data\r\n\r\nPS /home/nimehta-linux1> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-rc.3\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-rc.3\r\nOS                             Linux 4.18.0-147.5.1.el8_1.x86_64 #1 SMP Tue Jan 14 15:50:19 UTC 2020\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n",
  "closed_at": "2020-08-20T18:13:32Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "You could try workarounds from https://github.com/PowerShell/PowerShell/issues/11216",
      "created_at": "2020-05-15T06:36:38Z",
      "updated_at": "2020-05-15T06:36:38Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "This is not supported on RHEL 8. Please have a look at: https://github.com/MicrosoftDocs/PowerShell-Docs/issues/6491",
      "created_at": "2020-08-20T18:13:20Z",
      "updated_at": "2020-08-20T18:13:20Z"
    },
    {
      "author": "andybirenzi",
      "author_association": "NONE",
      "body": "I'm having the same issue on AWS Lambda, did anyone figure out this WSMAN error on linux?",
      "created_at": "2021-03-09T22:36:42Z",
      "updated_at": "2021-03-09T22:36:48Z"
    }
  ],
  "created_at": "2020-05-15T05:13:22Z",
  "labels": [
    "Issue-Question",
    "Resolution-By Design"
  ],
  "number": 12674,
  "state": "closed",
  "title": "New-PSSession does not find WSMan client library on RHEL",
  "updated_at": "2021-03-09T22:36:48Z"
}