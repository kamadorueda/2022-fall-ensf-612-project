{
  "_url": "https://github.com/PowerShell/PowerShell/issues/2904",
  "author": "n3rdopolis",
  "body": "<!--\r\n\r\nIf it is a bug report:\r\n- make sure you are able to repro it on the latest released version. \r\nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\r\n- Search the existing issues.\r\n- Refer to the [FAQ](../docs/FAQ.md).\r\n- Refer to the [known issues](../docs/KNOWNISSUES.md).\r\n- Fill out the following repro template\r\n\r\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\r\n-->\r\n\r\nSteps to reproduce\r\n------------------\r\nTry to get to  01/01/10000 from by adding one day to the last day of the year 9999\r\n```\r\n(get-date 12/31/9999).AddDays(1)\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n```\r\nSaturday, January 1, 10000 12:00:00 AM\r\n```\r\nActual behavior\r\n---------------\r\n```\r\nException calling \"AddDays\" with \"1\" argument(s): \"The added or subtracted value results in an un-representable DateTime.\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```\r\nName                           Value                                                                                                                                              \r\n----                           -----                                                                                                                                              \r\nPSVersion                      6.0.0-alpha                                                                                                                                        \r\nPSEdition                      Core                                                                                                                                               \r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}                                                                                                                            \r\nBuildVersion                   3.0.0.0                                                                                                                                            \r\nGitCommitId                    v6.0.0-alpha.9                                                                                                                                     \r\nCLRVersion                                                                                                                                                                        \r\nWSManStackVersion              3.0                                                                                                                                                \r\nPSRemotingProtocolVersion      2.3                                                                                                                                                \r\nSerializationVersion           1.1.0.1                                                                                                                                            \r\n\r\n\r\n```\r\n",
  "closed_at": "2017-01-12T00:36:22Z",
  "comments": [
    {
      "author": "dijitali",
      "author_association": "NONE",
      "body": "I presume this is just a result of it being a regular .NET `DateTime` object which has a maximum year of 9999.  From [DateTime Structure](https://msdn.microsoft.com/en-us/library/system.datetime(v=vs.110).aspx#Anchor_7):\r\n> The DateTime value type represents dates and times with values ranging from 00:00:00 (midnight), January 1, 0001 Anno Domini (Common Era) through 11:59:59 P.M., December 31, 9999 A.D. (C.E.) in the Gregorian calendar.",
      "created_at": "2016-12-19T14:24:35Z",
      "updated_at": "2016-12-19T14:24:35Z"
    },
    {
      "author": "ArieHein",
      "author_association": "NONE",
      "body": "in what scenario would you use PowerShell to make calculations that are beyond 9999 ? \r\nI'm an optimistic person, but I'm sure by that time, if we haven't destroyed ourselves back to the ashes, PowerShell would be the least of our world troubles :)\r\n",
      "created_at": "2016-12-19T15:10:53Z",
      "updated_at": "2016-12-19T15:10:53Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "It's The End Of The World :-)",
      "created_at": "2016-12-19T16:46:22Z",
      "updated_at": "2016-12-19T16:46:22Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "... as we know it, and I feel fine.  Sorry, big R.E.M. fan.",
      "created_at": "2016-12-19T16:56:29Z",
      "updated_at": "2016-12-19T16:56:29Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "If this needs to be addressed, issue should be opened against CoreCLR",
      "created_at": "2016-12-19T17:02:27Z",
      "updated_at": "2016-12-19T17:02:27Z"
    }
  ],
  "created_at": "2016-12-19T04:14:37Z",
  "labels": [
    "Resolution-External"
  ],
  "number": 2904,
  "state": "closed",
  "title": "Powershell is not year 10000 compliant",
  "updated_at": "2017-01-12T00:36:22Z"
}