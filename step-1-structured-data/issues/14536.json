{
  "_url": "https://github.com/PowerShell/PowerShell/issues/14536",
  "author": "plastikfan",
  "body": "## Summary of the new feature/enhancement\r\n\r\nThis is to help aleviate the problems of working with classes, particularly when developing modules. Currently, the problem we face is that once a class has been defined and is present in a session, it can't be modified. Obviously, the real underlying problem that should be fixed is this write once only nature of class definitions, but I guess if it was easy to fix, then you'd have done that already. Whilst this is not fixed, can we please have a mechanism for working around this issue.\r\n\r\nWe need a quick and easy way to restart the current session without closing down the host window (the console app, or visual studio code etc). And to make things easier for the user, the current working directory should be preserved so they should not have to manually navigate to the directory they were in, in the old session.\r\n\r\n## Proposed technical implementation details (optional)\r\n\r\nperhaps a new function restart-session (argh, restart is not an approved verb, so perhaps redo-session, although that sounds like a misnomer), possibly with an alias of 'res' or 'ress'.\r\n\r\n- redo-session should capture the current directory, kill the current session, then invoke set-location with the previously cached directory\r\n- \r\n- The key requirement though is that no new window should appear, that would be too brutual. Just restart the session.\r\n\r\nI have found another way to partially achieve what I'm looking for and that would be to use this command:\r\n\r\n> Invoke-Command { & \"pwsh\" } -NoNewScope\r\n\r\nThere are a couple of problems with this approach\r\n1) it does not preserve the current working directory\r\n2) it does not close down the previous session, so as a developer repeated running that command to update a class definition would end up with a lot of stacked up powershell sessions\r\n",
  "closed_at": "2021-01-09T00:00:10Z",
  "comments": [
    {
      "author": "doctordns",
      "author_association": "COLLABORATOR",
      "body": "Another related scenario is when I am at the console, have run many commands  to confugurebl an environment, only to find that I needed an elevated console.  I know that SUDO would be a solution, but that won't happen. Can we have a Restart-PSSession -AsAdminstrator ??",
      "created_at": "2021-01-04T11:44:21Z",
      "updated_at": "2021-01-04T11:44:21Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "The workflow I usually have is:\r\n\r\n1. `pwsh`\r\n2. `cd ./Project`\r\n3. `pwsh`\r\n4. `# do my debugging/testing until I need to reload`\r\n5. `exit`\r\n6. Go to step 3\r\n\r\n> > Invoke-Command { & \"pwsh\" } -NoNewScope\r\n\r\nFYI that's the same as just `pwsh` by itself\r\n\r\n> 1. it does not preserve the current working directory\r\n\r\nDo you have something in your profile that sets location? I can't repro that\r\n",
      "created_at": "2021-01-04T14:40:28Z",
      "updated_at": "2021-01-04T14:40:28Z"
    },
    {
      "author": "plastikfan",
      "author_association": "NONE",
      "body": "Hi @SeeminglyScience, yeah, you've git a point about that Invoke-Command, there's little to no point in that. Its just that I saw it in a stackoverflow post, tried it and seemed ok apart from teh caveats I already stated, but it slipped my notice that it's just the same as invoking pwsh.\r\n\r\nAnd your workflow is something I already thought of but its long winded, hence me raising this feature request.",
      "created_at": "2021-01-04T15:07:30Z",
      "updated_at": "2021-01-04T15:07:30Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "> And your workflow is something I already thought of but its long winded, hence me raising this feature request.\r\n\r\nThe actual loop is just `exit` and `pwsh`, but if that's too long winded for you you could throw this in your profile:\r\n\r\n```powershell\r\nfunction Enter-PwshLoop {\r\n    while ($true) {\r\n        pwsh\r\n        if ($LASTEXITCODE) {\r\n            break\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nThen you just do that once, and send `exit` whenever you want a new session.",
      "created_at": "2021-01-04T15:35:37Z",
      "updated_at": "2021-01-04T15:35:37Z"
    },
    {
      "author": "plastikfan",
      "author_association": "NONE",
      "body": "Hey @SeeminglyScience, thats a great suggestion. Actually, I made a tweek to your function that preserves the old file location:\r\n\r\n```powershell\r\nfunction restart-session {\r\n  [Alias('ress')]\r\n  param()\r\n\r\n  [System.Management.Automation.PathInfo]$pathInfo = Get-Location;\r\n  while ($true) {\r\n    pwsh -WorkingDirectory $($pathInfo.Path)\r\n    if ($LASTEXITCODE) {\r\n      break\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nThis works a charm, thanks.\r\n",
      "created_at": "2021-01-04T16:02:24Z",
      "updated_at": "2021-01-04T16:03:00Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I don't think it is worth doing anything special in the Engine to deal with this particular scenario as there are many workarounds.\r\nEx.: create a function to save cwd to a file and exiting, then you could have a code in profile to restore cwd.",
      "created_at": "2021-01-07T12:51:15Z",
      "updated_at": "2021-01-07T12:51:15Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2021-01-09T00:00:09Z",
      "updated_at": "2021-01-09T00:00:09Z"
    },
    {
      "author": "Mdarshan84",
      "author_association": "NONE",
      "body": "This works for powershell, but powershell-ise goes on executing it infinitely.",
      "created_at": "2022-08-01T10:41:41Z",
      "updated_at": "2022-08-01T10:41:41Z"
    },
    {
      "author": "doctordns",
      "author_association": "COLLABORATOR",
      "body": "The Windows Powershell ISE is outside the scope of this repo. You can use the Windows feedback tool to report the ISE issue.",
      "created_at": "2022-08-01T10:49:45Z",
      "updated_at": "2022-08-01T10:49:45Z"
    }
  ],
  "created_at": "2021-01-04T11:04:25Z",
  "labels": [
    "Issue-Enhancement",
    "Resolution-Answered"
  ],
  "number": 14536,
  "state": "closed",
  "title": "Feature Request: Create a quick and easy way to restart the current powershell session preserving cwd.",
  "updated_at": "2022-08-01T10:49:45Z"
}