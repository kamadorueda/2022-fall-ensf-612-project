{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3208",
  "author": "PetSerAl",
  "body": "Fixing #3207",
  "closed_at": "2017-02-27T18:54:08Z",
  "comments": [
    {
      "author": "msftclas",
      "author_association": "NONE",
      "body": "\r\n@__PetSerAl__,\nThanks for your contribution.\nTo ensure that the project team has proper rights to use your work, please complete the Contribution License Agreement at https://cla.microsoft.com.\n\nIt will cover your contributions to all Microsoft-managed open source projects.\n_Thanks,\nMicrosoft Pull Request Bot_",
      "created_at": "2017-02-26T20:07:49Z",
      "updated_at": "2017-02-26T20:07:49Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "Code changes look good - we do need the cla to be signed before it can be merged.",
      "created_at": "2017-02-27T00:42:13Z",
      "updated_at": "2017-02-27T00:42:13Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@PetSerAl Thanks for your contribution!\r\nI updated the title to reflect the change. It's recommended to have a meaningful PR title describing what changes you made (see the guideline in [CONTRIBUTING.md](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request-submission)).",
      "created_at": "2017-02-27T17:25:16Z",
      "updated_at": "2017-02-27T17:25:16Z"
    },
    {
      "author": "msftgits",
      "author_association": "NONE",
      "body": "Hi, I am closing and re-opening this PR to bump the CLA bot. Sorry for the inconvenience!\r\n",
      "created_at": "2017-02-27T17:44:56Z",
      "updated_at": "2017-02-27T17:44:56Z"
    },
    {
      "author": "msftclas",
      "author_association": "NONE",
      "body": "\r\n@PetSerAl,\nThanks for having already signed the Contribution License Agreement. Your agreement has not been validated yet. We will now review your pull request.\n_Thanks,\nMicrosoft Pull Request Bot_",
      "created_at": "2017-02-27T17:45:04Z",
      "updated_at": "2017-02-27T17:45:04Z"
    },
    {
      "author": "PetSerAl",
      "author_association": "CONTRIBUTOR",
      "body": "One possible breaking change came to my mind:\r\n```powershell\r\n$a = ,,$false\r\n$b = ,[PSObject](,$false)\r\n!!$a # $true\r\n!!$b # was $false, now is $true\r\n```\r\nSo, this PR make PowerShell behavior more consistent in regard to wrapping array into `[PSObject]`. But, is this change in behavior acceptable, @daxian-dbw?",
      "created_at": "2017-02-27T20:44:00Z",
      "updated_at": "2017-02-27T22:44:11Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "I think the behavior with the fix reflects the original intention of the code. Here is the comment in `\"case 1\"` before returning `true`:\r\n> // the first element is an array with more than zero elements\r\n> return true;\r\n\r\nAnd as you said, now the conversion is more consistent:\r\n_Before Fix_\r\n```\r\n$true -eq $a\r\nTrue\r\n$true -eq $b\r\nFalse\r\n```\r\n_After Fix_\r\n```\r\n$true -eq $a\r\nTrue\r\n$true -eq $b\r\nTrue\r\n```\r\nUsing a nested array in `if` condition should be rare. I think this behavior change is acceptable. @lzybkr any thoughts?",
      "created_at": "2017-02-27T22:22:19Z",
      "updated_at": "2017-02-27T22:23:57Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "It's definitely obscure, I'm not worried about the change.",
      "created_at": "2017-02-27T22:58:44Z",
      "updated_at": "2017-02-27T22:58:44Z"
    }
  ],
  "created_at": "2017-02-26T20:07:44Z",
  "number": 3208,
  "state": "closed",
  "title": "Fix powershell to not crash on converting recursive array to bool",
  "updated_at": "2017-03-19T00:02:31Z"
}