{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4930",
  "author": "kborowinski",
  "body": "<!--\r\n\r\nIf it is a bug report:\r\n- make sure you are able to repro it on the latest released version. \r\nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://github.com/PowerShell/PowerShell/blob/master/docs/KNOWNISSUES.md).\r\n- Fill out the following repro template\r\n\r\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\r\n-->\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\n#16 bytes (128 bits) key\r\n$K16 = '1234567890123456'\r\n\r\n#24 bytes (192 bits) key\r\n$K24 = '123456789012345678901234'\r\n\r\n#32 bytes (256 bits) key\r\n$K32 = '12345678901234567890123456789012'\r\n\r\n#convert keys to secure strings\r\n$secureK16 = ConvertTo-SecureString -String $K16 -AsPlainText -Force\r\n$secureK24 = ConvertTo-SecureString -String $K24 -AsPlainText -Force\r\n$secureK32 = ConvertTo-SecureString -String $K32 -AsPlainText -Force\r\n\r\n$secureText = ConvertTo-SecureString -String 'The quick brown fox jumps over the lazy dog' -AsPlainText -Force\r\n\r\n#16 bytes secure key works\r\n\"SecureKey length: $($secureK16.Length)\"\r\nConvertFrom-SecureString -SecureString $secureText -SecureKey $secureK16\r\n\r\n#24 bytes secure key fails\r\n\"SecureKey length: $($secureK24.Length)\"\r\nConvertFrom-SecureString -SecureString $secureText -SecureKey $secureK24\r\n\r\n#32 bytes secure key fails\r\n\"SecureKey length: $($secureK32.Length)\"\r\nConvertFrom-SecureString -SecureString $secureText -SecureKey $secureK32\r\n\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```none\r\nConversion should work for the SecureKey lengths of 16, 24, and 32 bytes\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n```powershell\r\nSecureKey length: 16\r\n76492d1116743f0423413b16050a5345MgB8ADEAOQAzADcAVQBRAFUARABQAGYAeQByADkAZwAzAFoAdABBAFEAQQBXAFEAPQA9AHwAYgA3ADUAOQA5AGUAMwBmAGYANwA2AGIANABmADIAZQAwAGQAZQA0ADEAZQA4ADQAMgA0AGUAMQBmAGQAMQA2AGYANAA0AGIAYgAxADMAYgAzADkAYQBmADcAYQBmADQAMAAxAGYAOAA3ADYAYgA0ADYAMQA3ADcAMAA5ADMAMgAxADkAYwBkAGUAMAAwADIAYgAzADkANgA5AGEANwA2ADAANAAzADkAMQBhAGMAMAA1ADgANwBmADgANgBlADYAMQA2ADIAZQBkADMANQBiADgAOABmADkAMgA3ADAAYgA0ADEANQBmADEAZgAyADcAOQBjAGQANwBmADAANgA1ADUAZgAxADUAYQAxADAAZQAxADYAZgA2ADAANwBiADcANwA3ADAAMgA3ADgAMABkADAAMwBmADcANgBmAGMAOABjAGIANwA3ADUANQBiAGIAOQA5ADIAMQA4AGUAZABiAGIAMAAyADcAZAA4ADUAMABkADIAOQA0AGUAYQA2ADUA\r\nSecureKey length: 24\r\nConvertFrom-SecureString : The specified key is not valid. Valid key length settings are either 128 bits, 192 bits, or 256 bits.\r\nAt C:\\Users\\bukem\\Documents\\PowerShell\\TMP\\SecureString.ps1:23 char:1\r\n+ ConvertFrom-SecureString -SecureString $secureText -SecureKey $secure ...\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : InvalidArgument: (:) [ConvertFrom-SecureString], PSArgumentException\r\n    + FullyQualifiedErrorId : Argument,Microsoft.PowerShell.Commands.ConvertFromSecureStringCommand\r\n\r\nSecureKey length: 32\r\nConvertFrom-SecureString : The specified key is not valid. Valid key length settings are either 128 bits, 192 bits, or 256 bits.\r\nAt C:\\Users\\bukem\\Documents\\PowerShell\\TMP\\SecureString.ps1:27 char:1\r\n+ ConvertFrom-SecureString -SecureString $secureText -SecureKey $secure ...\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : InvalidArgument: (:) [ConvertFrom-SecureString], PSArgumentException\r\n    + FullyQualifiedErrorId : Argument,Microsoft.PowerShell.Commands.ConvertFromSecureStringCommand\r\n\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.0-beta\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.0-beta.7\r\nOS                             Microsoft Windows 10.0.16353\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n```\r\n\r\nNote\r\n-----\r\n\r\nI've found that the SecureKey accepts secure strings of length 8,12 and 16 bytes. It looks like there is bug during the internal conversion of secure string to byte array.\r\n\r\n```powershell\r\n#8 bytes (64 bits) key\r\n$K8 = '12345678'\r\n\r\n#12 bytes (96 bits) key\r\n$K12 = '123456789012'\r\n\r\n#convert keys to secure strings\r\n$secureK8 = ConvertTo-SecureString -String $K8 -AsPlainText -Force\r\n$secureK12 = ConvertTo-SecureString -String $K12 -AsPlainText -Force\r\n\r\n$secureText = ConvertTo-SecureString -String 'The quick brown fox jumps over the lazy dog' -AsPlainText -Force\r\n\r\n#8 bytes secure key works\r\n\"SecureKey length: $($secureK8.Length)\"\r\nConvertFrom-SecureString -SecureString $secureText -SecureKey $secureK8\r\n\r\n#12 bytes secure key works\r\n\"SecureKey length: $($secureK12.Length)\"\r\nConvertFrom-SecureString -SecureString $secureText -SecureKey $secureK12\r\n```\r\n\r\n```powershell\r\nSecureKey length: 8\r\n76492d1116743f0423413b16050a5345MgB8ADAAKwBlADUARQBaAFcAdgBQAE0ANABuAG4AbgB4AGMAMwBUAHYAcABmAGcAPQA9AHwAMwA1ADIAYgBiAGQAMQBlADMANQA1ADcAZgBmAGUAYgA4AGEAMABjADMANgAyAGQAMgA4ADcAYwBkADMAMgAzADcAMwA2ADQAYgA4ADMANQBhADgAMAA3AGYAOQA1ADUAZQAxAGEAZAAyAGIAZgAwADIAZAA5ADUAMwA5ADgAOAAxADIANwBjADAAMgAyADEANwA3ADIAMwBhAGEAZQBlADgANgA0AGMAZgBiAGMAYQAzADMAZgBiAGQAYQAxADMANwA0ADgANwBjAGIAMQA1AGMAYwAyADIAZgAxAGUAMgA1ADQAYgBlAGQAMgBmADMAMgBiAGIAYwA3ADkAOQA4AGMANAAwADMANwBkADgANAAyADgAYgBmADYAMAA1ADYAMgA3ADgAOABhADkANgBmADgANABmADEANgAyADgANwBmADEAMwBhAGQAMQA2ADMAZQA5ADYAMABlADEAMwA5ADAAMQBhADUANAA0ADYAZQBiADUAOQAzAGIAMgAzADUA\r\nSecureKey length: 12\r\n76492d1116743f0423413b16050a5345MgB8AHoANQBxAFYAVwAxADcARQBJAHoAdgBXAEIAUABFAHYAUQBZAGYAbQBOAGcAPQA9AHwAMQAzAGIAMABkADIANAA0ADkANABlADcAZAAzADIAYwBhADYAZgBkADgAYwBmADYAOAA1AGUAOQAzADIAZABkAGEAYQBiADcANgA1AGQANgBmADYAOQBiAGQAOABiAGYAMQAxADIAZAA4ADEAMwBhADAAZgBkAGUAMQBmAGYAMQA1AGEAYQA3ADkAYQA0ADMAZQA4AGMAYwAzAGQANQA4AGUANQA2AGYAMQA0ADIAOAAwAGYAMgAxAGQANABiAGQANAA0AGMAMwAwADcAYwA1ADYANQBjAGMAOQA3ADQAYwA4ADkAYQA5ADcAZAAxAGQAZQA3ADIAZgBjADkANQA4ADYAMAAzADYAZQBlADUAMABjAGIAOQA1AGYANwBmAGUAYQA5AGIAMwBmADMAOAA2ADQAYwBiADEAZAAyAGYAMwA5ADIANgBkADEAZgA0ADkAYgAyAGYAMgBmADUAZgA2AGQANQA1AGMAYgBiADgAYQAzADMAMgA5ADAANABiAGIA\r\n```\r\n\r\nPs. ConvertFrom-SecureString has the same behaviour on Windows PowerShell 5.1\r\n\r\n```powershell\r\n\r\n```",
  "closed_at": "2017-09-27T15:08:47Z",
  "comments": [
    {
      "author": "PetSerAl",
      "author_association": "CONTRIBUTOR",
      "body": "`[char]` is 16-bit long",
      "created_at": "2017-09-27T14:27:44Z",
      "updated_at": "2017-09-27T14:27:44Z"
    },
    {
      "author": "kborowinski",
      "author_association": "NONE",
      "body": "Ah, yes, `[char]` is unicode in .NET. Jeez, I need more coffee. Thanks @PetSerAl.\r\n",
      "created_at": "2017-09-27T14:46:54Z",
      "updated_at": "2017-09-27T16:15:07Z"
    }
  ],
  "created_at": "2017-09-27T12:32:23Z",
  "number": 4930,
  "state": "closed",
  "title": "SecureKey parameter in ConvertFrom-SecureString does not accept 24 and 32 bytes secure strings",
  "updated_at": "2017-09-27T17:34:49Z"
}