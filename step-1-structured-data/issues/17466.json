{
  "_url": "https://github.com/PowerShell/PowerShell/issues/17466",
  "author": "jackyking-cn",
  "body": "### Prerequisites\r\n\r\n- [X] Write a descriptive title.\r\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- [X] Search the existing issues.\r\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\r\n\r\n### Steps to reproduce\r\n\r\nexecut `npm config set @scope:registry https://npmmirror.com/`\r\n\r\n### Expected behavior\r\n\r\n```console\r\n`@scope:registry=https://npmmirror.com/` in `>.npmrc`\r\n```\r\n\r\n\r\n### Actual behavior\r\n\r\n```console\r\n`https://npmmirror.com/=` in `>.npmrc`\r\n```\r\n\r\n\r\n### Error details\r\n\r\n```console\r\nnothing\r\n```\r\n\r\n\r\n### Environment data\r\n\r\n```powershell\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.4\r\nPSEdition                      Core\r\nGitCommitId                    7.2.4\r\nOS                             Microsoft Windows 10.0.19042\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\n\r\n### Visuals\r\n\r\n![image](https://user-images.githubusercontent.com/1309499/171323395-468dd665-2c3c-457b-a31c-900bd033f4ef.png)\r\n\r\nOther details: https://github.com/microsoft/terminal/issues/13188",
  "closed_at": "2022-06-02T02:34:07Z",
  "comments": [
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "`@` is a special character in PowerShell used in several scenarios such as hashtables `@{}`, to ensure output is an array `@(1)` and argument splatting e.g. `$npmArgs = \"config\", \"set\", ...; npm @npmArgs`.  In this case, PowerShell thinks you're trying to splat which you can see by looking at the AST:\r\n```powershell\r\n{npm config set @scope:registry https://npmmirror.com/}.Ast.EndBlock.Statements.PipelineElements.CommandElements\r\n```\r\nIf you \"escape\" the `@` char with a back-tick, it should work as intended:\r\n```powershell\r\nnpm config set `@scope:registry https://npmmirror.com/\r\n```\r\nYou could also quote that argument:\r\n```powershell\r\nnpm config set '@scope:registry' https://npmmirror.com/\r\n```\r\nOr you could use PowerShell's stop parsing operator to \"dumb down\" PowerShell command line parsing:\r\n```powershell\r\nnpm config set --% @scope:registry https://npmmirror.com/\r\n```",
      "created_at": "2022-06-01T07:00:42Z",
      "updated_at": "2022-06-01T15:25:28Z"
    },
    {
      "author": "jackyking-cn",
      "author_association": "NONE",
      "body": "thinks a lot.\r\nI think this rule not good, because `npm config set @my-scope:registry https://npmmirror.com/` are executed correctly.",
      "created_at": "2022-06-02T02:34:07Z",
      "updated_at": "2022-06-02T02:34:07Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "I believe `@my-scope:registry` works because when parsing, the syntax for a scoped variable reference is `@<scopename>:<variablename>` where a `-` is not allowed in a scope name.  Therefore, the parser determines the `@my-scope:registry` can't be a splatted variable. This is also what the AST indicates.\r\n\r\n![image](https://user-images.githubusercontent.com/5177512/171553295-fab18f79-91ad-4966-b0b1-9fa84003c828.png)\r\n",
      "created_at": "2022-06-02T04:36:46Z",
      "updated_at": "2022-06-02T04:36:46Z"
    },
    {
      "author": "jackyking-cn",
      "author_association": "NONE",
      "body": "Sorry\uff0cmy english is not good. \r\nYou mean `my-scope` is not allowed a scope name?\r\n\r\nThis is scope docs, https://docs.npmjs.com/cli/v7/using-npm/scope :\r\n> A scope follows the usual rules for package names (URL-safe characters, no leading dots or underscores). \r\n\r\nAnyway, It's a little trouble, can be acceptable.\r\nThank you very much.\r\n",
      "created_at": "2022-06-02T05:31:31Z",
      "updated_at": "2022-06-02T11:47:58Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "`my-scope` is not a valid *PowerShell* scope name.",
      "created_at": "2022-06-02T15:02:39Z",
      "updated_at": "2022-06-02T15:02:39Z"
    }
  ],
  "created_at": "2022-06-01T03:46:45Z",
  "number": 17466,
  "state": "closed",
  "title": "The parameter @scope:registry are not executed correctly",
  "updated_at": "2022-06-02T15:02:39Z"
}