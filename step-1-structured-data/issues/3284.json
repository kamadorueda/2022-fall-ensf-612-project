{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3284",
  "author": "danielodievich",
  "body": "Hello there,\r\n\r\nAdopting a script from Windows to Linux here. The script generates a bunch of custom objects in array, which is converted to JSON using ConvertTo-JSON and written to file. \r\n\r\nThe resulting file is syntactically correct.\r\n\r\nWhen loading the file and parsing it using ConvertFrom-JSON on Ubuntu, the loading fails with \r\n`ConvertFrom-JSON : Conversion from JSON failed with error: Unexpected end when reading JSON. Path '', line 1, position 5.`\r\n\r\nWhen the resulting file is stripped of character returns, the loading succeeds.\r\n\r\nThe process works great on Windows with or without carriage returns.\r\n\r\n[jsontest.zip](https://github.com/PowerShell/PowerShell/files/828537/jsontest.zip)\r\n\r\nSteps to reproduce\r\n------------------\r\njsontest.ps1:\r\n```\r\n$obj1 = New-Object PSCustomObject\r\nAdd-Member -InputObject $obj1 -NotePropertyName \"objectName\" -NotePropertyValue \"object1Name\"\r\nAdd-Member -InputObject $obj1 -NotePropertyName \"objectValue\" -NotePropertyValue \"object1Value\"\r\n\r\n$obj2 = New-Object PSCustomObject\r\nAdd-Member -InputObject $obj2 -NotePropertyName \"objectName\" -NotePropertyValue \"object2Name\"\r\nAdd-Member -InputObject $obj2 -NotePropertyName \"objectValue\" -NotePropertyValue \"object2Value\"\r\n\r\n$arr = @($obj1, $obj2)\r\n\r\n$arr\r\n$arr.count\r\n\r\n$arr | ConvertTo-JSON | Out-File testjson.json -Encoding utf8\r\n```\r\n\r\nProduces the following output:\r\n```\r\nPS /home/administrator/Documents/> ./jsontest.ps1\r\n\r\nobjectName  objectValue\r\n----------  -----------\r\nobject1Name object1Value\r\nobject2Name object2Value\r\n2\r\n```\r\n\r\nProduces the following JSON:\r\n```\r\n[\r\n    {\r\n        \"objectName\":  \"object1Name\",\r\n        \"objectValue\":  \"object1Value\"\r\n    },\r\n    {\r\n        \"objectName\":  \"object2Name\",\r\n        \"objectValue\":  \"object2Value\"\r\n    }\r\n]\r\n```\r\n\r\nThen other script wants to load the file and convert it back to JSON\r\n`Get-Content testjson.json | ConvertFrom-JSON`\r\n\r\nExpected behavior\r\n-----------------\r\n```\r\nPS /home/administrator/Documents/> Get-Content testjson.json | ConvertFrom-JSON\r\n\r\nobjectName  objectValue\r\n----------  -----------\r\nobject1Name object1Value\r\nobject2Name object2Value\r\n```\r\n\r\nActual behavior\r\n---------------\r\n```\r\nPS /home/administrator/Documents/> Get-Content testjson.json | ConvertFrom-JSON\r\n\r\nConvertFrom-JSON : Conversion from JSON failed with error: Additional text encountered after finished reading JSON content: :. Path '', line 1, position 20.\r\nAt line:1 char:29\r\n+ Get-Content testjson.json | ConvertFrom-JSON\r\n+                             ~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : NotSpecified: (:) [ConvertFrom-Json], ArgumentException\r\n    + FullyQualifiedErrorId : System.ArgumentException,Microsoft.PowerShell.Commands.ConvertFromJsonCommand\r\n```\r\n\r\nAfter removing character returns\r\n-----------------\r\nIf I manually remove the character returns from JSON file:\r\n`[    {        \"objectName\":  \"object1Name\",        \"objectValue\":  \"object1Value\"    },    {        \"objectName\":  \"object2Name\",        \"objectValue\":  \"object2Value\"    }]\r\n`\r\n... then the ConvertFrom-JSON command works\r\n\r\nUsing -Compress\r\n-----------------\r\nIf I change the command from:\r\n`$arr | ConvertTo-JSON | Out-File testjson.json -Encoding utf8`\r\nto\r\n`$arr | ConvertTo-JSON -Compress | Out-File testjson.json -Encoding utf8`\r\n... the resulting JSON does not have carriage returns and subsequent loading works great.\r\n\r\nEnvironment data\r\n----------------\r\n```\r\nPS /home/administrator/Documents/>  lsb_release\u00a0-a\r\nNo LSB modules are available.\r\nDistributor ID: Ubuntu\r\nDescription:    Ubuntu 14.04.5 LTS\r\nRelease:        14.04\r\nCodename:       trusty\r\n\r\n\r\nPS /home/administrator/Documents/> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.0-alpha\r\nPSEdition                      Core\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nBuildVersion                   3.0.0.0\r\nGitCommitId                    v6.0.0-alpha.16\r\nCLRVersion\r\nWSManStackVersion              3.0\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\n```\r\n\r\n",
  "closed_at": "2017-05-25T22:55:06Z",
  "comments": [
    {
      "author": "danielodievich",
      "author_association": "NONE",
      "body": "Seems related to #956",
      "created_at": "2017-03-08T18:26:55Z",
      "updated_at": "2017-03-08T18:26:55Z"
    },
    {
      "author": "heaths",
      "author_association": "CONTRIBUTOR",
      "body": "This occurs with program output as well. I was about to open a bug with the following information.\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n1. Download recent https://github.com/Microsoft/vswhere release (or `choco install vswhere`)\r\n2. Run `vswhere -format json | convertfrom-json`\r\n\r\nExpected behavior\r\n-----------------\r\n\r\nGet back an array of zero or more instances. This works in PowerShell 5.1 (and in previous versions I've tried).\r\n\r\nActual behavior\r\n---------------\r\n\r\nGet an error like that in bug #956:\r\n\r\n```powershell\r\n> vswhere -format json | convertfrom-json\r\nconvertfromjson : The term 'convertfromjson' is not recognized as the name of a cmdlet, function, script file, or operable program. Check the spelling of the name, or if a path was included, verify that the path is correct and try again.\r\nAt line:1 char:24\r\n+ vswhere -format json | convertfromjson | clip\r\n+                        ~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : ObjectNotFound: (convertfromjson:String) [], CommandNotFoundException\r\n    + FullyQualifiedErrorId : CommandNotFoundException\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n```powershell\r\n> $PSVersionTable\r\n\r\nName                           Value                                                                                   \r\n----                           -----                                                                                   \r\nPSVersion                      6.0.0-beta                                                                              \r\nPSEdition                      Core                                                                                    \r\nBuildVersion                   3.0.0.0                                                                                 \r\nCLRVersion                                                                                                             \r\nGitCommitId                    v6.0.0-beta.1                                                                           \r\nOS                             Microsoft Windows 10.0.15063                                                            \r\nPlatform                       Win32NT                                                                                 \r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}                                                                 \r\nPSRemotingProtocolVersion      2.3                                                                                     \r\nSerializationVersion           1.1.0.1                                                                                 \r\nWSManStackVersion              3.0                                                                                     \r\n```\r\n\r\nMore information\r\n---\r\nThis does appear to be a multiline JSON issue like in bug #956 but that bug is indeed resolved. Both PowerShell 5 and 6 are measuring 33 lines on my machine from `vswhere -format json` so the behavior for returning an array from program output is fixed, but `ConvertFrom-Json`",
      "created_at": "2017-05-10T02:10:39Z",
      "updated_at": "2017-05-10T02:10:39Z"
    },
    {
      "author": "Francisco-Gamino",
      "author_association": "CONTRIBUTOR",
      "body": "This issue has been addressed.",
      "created_at": "2017-05-25T22:55:06Z",
      "updated_at": "2017-05-25T22:55:06Z"
    },
    {
      "author": "prad9",
      "author_association": "NONE",
      "body": "Currently running 6.0.2 have same issue again. \r\n",
      "created_at": "2018-05-30T03:14:40Z",
      "updated_at": "2018-05-30T03:14:40Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@prad9 The fix contains tests and the tests is passed. Could you please add more information and repo steps?",
      "created_at": "2018-05-30T03:26:31Z",
      "updated_at": "2018-05-30T03:26:31Z"
    },
    {
      "author": "kodeballer",
      "author_association": "NONE",
      "body": "What OS @prad9 , clean powershell install ? Thanks",
      "created_at": "2018-07-04T05:49:04Z",
      "updated_at": "2018-07-04T05:49:04Z"
    },
    {
      "author": "prad9",
      "author_association": "NONE",
      "body": "Win 10 Business. I will try to re-install. Thanks",
      "created_at": "2018-07-04T20:57:04Z",
      "updated_at": "2018-07-04T20:57:04Z"
    },
    {
      "author": "miketheitguy",
      "author_association": "NONE",
      "body": "The behavior is confusing to use when combined with the `get-content` cmdlet.\r\n\r\nFor example:\r\n**Works**\r\n`get-content file.json | convertfrom-json`\r\n**Doesn't Work**\r\n`Convertfrom-Json -InputObject (Get-Content file.json)`\r\n**Works**\r\n`Convertfrom-Json -InputObject (Get-Content file.json -raw)`\r\n\r\nWhen you do it via the latter method, you need to pass a `-raw` parameter because `Get-Content` automatically creates an array based on newlines. Still, seemingly very confusing as when piping to `ConvertFrom-Json` I don't need to use `-raw`.",
      "created_at": "2019-01-08T06:31:55Z",
      "updated_at": "2019-01-08T06:32:19Z"
    }
  ],
  "created_at": "2017-03-08T18:15:07Z",
  "labels": [
    "Issue-Bug",
    "Resolution-Fixed",
    "WG-Cmdlets-Utility"
  ],
  "number": 3284,
  "state": "closed",
  "title": "ConvertFrom-JSON fails to parse syntactically-correct JSON array",
  "updated_at": "2019-01-08T06:32:19Z"
}