{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11684",
  "author": "he852100",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 and PowerShell 7+ issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n\r\n-->\r\nObjective: Increase the frequency of alias use,Reduce learning costs\r\n\r\n# Steps to reproduce\r\nType tabs to display aliases\r\n```powershell\r\n\r\n```\r\n\r\n# Expected behavior\r\n\r\n```none\r\nPS >get-process <tab>\r\ngps -> Get-Process\r\n\r\nPS >Get-It <tab>\r\ngi -> Get-Item               gp -> Get-ItemProperty       gpv -> Get-ItemPropertyValue\r\n```\r\n\r\n# Actual behavior\r\n\r\n```none\r\nPS >Get-It <tab>\r\nGet-Item               Get-ItemProperty       Get-ItemPropertyValue\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\n\r\n```\r\n",
  "closed_at": "2020-02-03T00:00:12Z",
  "comments": [
    {
      "author": "doctordns",
      "author_association": "COLLABORATOR",
      "body": "I am not convinced about the need for this.\r\n\r\nIn general, best practice suggests NOT using aliases in production code.  Encouraging more use seems to be anti-best practice. For that reason alone, I am not keen on this idea.\r\n\r\nBUT: this might be useful in an interactive session where terseness can be a virtue.   However, \r\nI teach students to do this:\r\n```powershell\r\ngal -def get-alias\r\n```\r\nI also train them on when and when not to use aliases. \r\n\r\nEven if we wanted this feature, using Tab today does do _something useful, If you type a tab after a cmdlet name, PowerShell iterates through items based on the cmdlet (eg with Get-Alias <tab> it runs through the aliases, Get-ChildItem <tab> runs through files.  Changing this behaviour to show aliases is not helpful. Tabl Completion is about _completing_ a command line, not in showing alternatives (eg aliases). \r\n\r\nTL;DR - I am not convinced we need such a device and in any case, it changes existing behaviour in a way less helpful.\r\n\r\n\r\n",
      "created_at": "2020-01-26T11:43:27Z",
      "updated_at": "2020-01-26T11:43:27Z"
    },
    {
      "author": "jhoneill",
      "author_association": "NONE",
      "body": "> In general, best practice suggests NOT using aliases in production code. Encouraging more use seems to be anti-best practice. For that reason alone, I am not keen on this idea.\r\n\r\n**Agree**\r\n\r\nA better solution would be to have a PS Readline keybinding which shows `get-alias -definition [current token]` but not bind it to tab. ",
      "created_at": "2020-01-26T13:16:33Z",
      "updated_at": "2020-01-26T13:16:33Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2020-02-03T00:00:11Z",
      "updated_at": "2020-02-03T00:00:11Z"
    }
  ],
  "created_at": "2020-01-26T10:41:38Z",
  "number": 11684,
  "state": "closed",
  "title": "Show alias",
  "updated_at": "2020-02-03T00:00:12Z"
}