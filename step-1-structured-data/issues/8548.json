{
  "_url": "https://github.com/PowerShell/PowerShell/issues/8548",
  "author": "djniu",
  "body": "Since this issue #6281 was closed, I build a net core project and use the latest Nuget package, then make a docker image to test, the exception \"System.DllNotFoundException: Unable to load shared library 'libpsrpclient' or one of its dependencies\" still throws\r\n\r\n# Steps to reproduce\r\nError:\r\n```\r\nThis parameter set requires WSMan, and no supported WSMan client library was found. WSMan is either not installed or unavailable for th is system. ---> System.DllNotFoundException: Unable to load shared library 'libpsrpclient' or one of its dependencies\r\n```\r\ncsproj:\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"psrp\" Version=\"1.4.5-0\" />\r\n    <PackageReference Include=\"System.Management.Automation\" Version=\"6.1.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\nDocker file:\r\n```\r\nFROM microsoft/dotnet:2.1-sdk AS publish\r\nWORKDIR /src\r\nCOPY . .\r\nWORKDIR /src/TestDocker\r\nRUN dotnet publish TestDocker.csproj -c Release --runtime linux-x64 -o /app --source \"https://proget.xxxxx.net/nuget/NuGet.org\" --source \"https://powershell.myget.org/F/powershell-core/api/v3/index.json\"\r\n\r\nFROM microsoft/dotnet:2.1-runtime AS base\r\nWORKDIR /app\r\n\r\nFROM base AS final\r\nWORKDIR /app\r\nCOPY --from=publish /app .\r\nENTRYPOINT [\"dotnet\", \"TestDocker.dll\"]\r\n```\r\nCode:\r\n```\r\nvar credential = new PSCredential(userName, secureString);\r\n WSManConnectionInfo connectionInfo = new WSManConnectionInfo(\r\n                new Uri(\"https://outlook.office365.com/PowerShell-LiveID\"),\r\n                \"http://schemas.microsoft.com/powershell/Microsoft.Exchange\", credential);\r\nconnectionInfo.AuthenticationMechanism = AuthenticationMechanism.Basic;\r\nRunspace runspace = RunspaceFactory.CreateRunspace(connectionInfo);\r\n```\r\n\r\n# Expected behavior\r\n\r\n```\r\nApplication run as expected\r\n\r\n```\r\n\r\n# Actual behavior\r\n```\r\nException throw:\r\nSystem.Management.Automation.Remoting.PSRemotingTransportException: This parameter set requires WSMan, and no supported WSMan client library was found. WSMan is either not installed or unavailable for this system. ---> System.DllNotFoundException: Unable to load shared library 'libpsrpclient' or one of its dependencies. In order to help diagnose loading problems, consider setting the LD_DEBUG environmen\r\nt variable: liblibpsrpclient: cannot open shared object file: No such file or directory\r\n   at System.Management.Automation.Remoting.Client.WSManNativeApi.WSManInitialize(Int32 flags, IntPtr& wsManAPIHandle)\r\n   at System.Management.Automation.Remoting.Client.WSManClientSessionTransportManager.WSManAPIDataCommon..ctor()\r\n```\r\n",
  "closed_at": "2018-12-28T09:41:50Z",
  "comments": [
    {
      "author": "djniu",
      "author_association": "NONE",
      "body": "Finally I figure out what's going on. I checked how the psrp loaded the libpsrpclient.so and found out that the psrpclient require libssl1.0.0, however in microsoft/dotnet:2.1-runtime based image, there are only libssl1.0.2 and libssl1.1, so I edited the docker file and manually to install libssl1.0.0. Here we can't use command \"apt-get install libssl1.0.0\" to install, need to use \"dpkg -i libssl1.0.0_1.0.1t-1+deb8u10_amd64.deb\" to install. \r\n\r\nCode in Docker file:\r\n```\r\nRUN apt-get -y install wget\r\nRUN wget \"http://security.debian.org/debian-security/pool/updates/main/o/openssl/libssl1.0.0_1.0.1t-1+deb8u10_amd64.deb\"\r\nRUN dpkg -i libssl1.0.0_1.0.1t-1+deb8u10_amd64.deb\r\n```",
      "created_at": "2018-12-28T09:41:50Z",
      "updated_at": "2018-12-28T09:41:50Z"
    },
    {
      "author": "Veverke",
      "author_association": "NONE",
      "body": "Adding on @djniu 's solution\r\nThat alone did not work for me.\r\nlibssl package would not install due missing `multiarch-support` dependency.\r\nSo the dockerfile additions that fixed the issue for me look like\r\n\r\n`RUN wget \"http://http.us.debian.org/debian/pool/main/g/glibc/multiarch-support_2.19-18+deb8u10_amd64.deb\"`\r\n`RUN dpkg -i multiarch-support_2.19-18+deb8u10_amd64.deb`\r\n`RUN wget \"http://security.debian.org/debian-security/pool/updates/main/o/openssl/libssl1.0.0_1.0.1t-1+deb8u12_amd64.deb\"`\r\n`RUN dpkg -i libssl1.0.0_1.0.1t-1+deb8u12_amd64.deb   `  \r\n\r\nIn addition, I am leaving below 2 more RUN commands related to the missing WSMan client issue (the original title of this issue, before rename) - in case you may benefit from it.\r\n#install powershell WSMan.Management module (https://www.bloggingforlogging.com/2020/08/21/wacky-wsman-on-linux/)\r\n`RUN pwsh -Command \"Install-Module -Name PSWSMan -Force\"`\r\n`RUN pwsh -Command \"Install-WSMan\"`\r\n\r\nWith all these RUN additions to my dockerfile, I can finally establish remote sessions via powershell in my docker container.\r\n",
      "created_at": "2021-03-09T09:13:45Z",
      "updated_at": "2021-03-09T09:16:55Z"
    }
  ],
  "created_at": "2018-12-27T03:50:56Z",
  "number": 8548,
  "state": "closed",
  "title": "Unable to load shared library 'libpsrpclient' or one of its dependencies",
  "updated_at": "2021-03-09T09:16:55Z"
}