{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10795",
  "author": "Kriegel",
  "body": "If you use an Function that is not saved on disk the 'Source' property of the cmdlet Write-Information points to them self.\r\n\r\nThe `$PSCmdlet.WriteInformation()` Method points to the ambient Function.\r\n(Which is the expected behavior)\r\n\r\n\r\nIf you save the Function to Disk as script the 'Source' property of the cmdlet Write-Information points to the full script path instead to the Function.\r\n\r\nThe `$PSCmdlet.WriteInformation()` Method points even to the full script path.\r\n(Which is VERY surprising and not expected)\r\n\r\n\r\nCode to reproduce:\r\n\r\n```powershell\r\n\r\nFunction New-PsStreamInformationRecordObject {\r\n\r\n    [CmdletBinding()]\r\n    Param ()\r\n\r\n    Process {\r\n\r\n        $InformationPreference = 'Continue'\r\n\r\n        $PSCmdlet.WriteInformation('PSCmdlet Information',@('Tag1','Tag2','Tag3'))\r\n        Write-Information 'Write Information' -Tags 'Tag1','Tag2','Tag3'\r\n    }\r\n}\r\n\r\nNew-PsStreamInformationRecordObject 6>&1 | Select-Object Source\r\n\r\n```\r\n\r\nTested with:\r\n\r\nPSVersion                      6.2.3\r\nPSEdition                      Core\r\nGitCommitId                    6.2.3\r\nOS                             Microsoft Windows 10.0.16299\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I'd say it is by-design and you need \"InvocationInfo\" as you referenced.",
      "created_at": "2019-10-15T17:32:41Z",
      "updated_at": "2019-10-15T17:32:41Z"
    },
    {
      "author": "Kriegel",
      "author_association": "NONE",
      "body": "I feel so so sad that every insane behaviour can be hidden behind the killer phrase by-design....\r\n\r\nMy minimum wish is that `$PSCmdlet.WriteInformation()` should have an reliable behaviour to point always to the ambient function.  *snivel*\r\n\r\nOk, my fear is, that even the \"InvocationInfo\" will point to the wrong caller (them self) if we implement one. But that we can discuss in 10796.\r\nUntil Implementation of an \"InvocationInfo\" I leave this issue open.\r\n\r\n",
      "created_at": "2019-10-15T19:38:05Z",
      "updated_at": "2019-10-15T19:38:05Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "/cc @SteveL-MSFT @daxian-dbw for conclusion.",
      "created_at": "2020-01-31T10:17:36Z",
      "updated_at": "2020-01-31T10:17:36Z"
    }
  ],
  "created_at": "2019-10-15T13:38:47Z",
  "number": 10795,
  "state": "open",
  "title": "Write-Information property 'Source' points to the wrong source",
  "updated_at": "2020-01-31T10:17:36Z"
}