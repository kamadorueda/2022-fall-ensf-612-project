{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10534",
  "author": "SeeminglyScience",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n\r\n-->\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\n# Closest equivalent to C#'s \"default\" keyword\r\n$defaultArray = [Activator]::CreateInstance(\r\n    [System.Collections.Immutable.ImmutableArray[string]])\r\n\r\n[PSCustomObject]@{\r\n    SomeProperty = $defaultArray\r\n}\r\n```\r\n\r\n# Expected behavior\r\n\r\nThe exception is expected (and by design), but I'd also expect that PowerShell would swallow it.  PowerShell already swallows exceptions thrown by `IEnumerator.MoveNext`, and all exceptions thrown by property get accessors.\r\n\r\n```none\r\nSomeProperty\r\n------------\r\n\r\n```\r\n\r\n# Actual behavior\r\n\r\n```none\r\nformat-default : Exception has been thrown by the target of an invocation.\r\n+ CategoryInfo          : NotSpecified: (:) [format-default], TargetInvocationException\r\n+ FullyQualifiedErrorId : System.Reflection.TargetInvocationException,Microsoft.PowerShell.Commands.FormatDefaultCommand\r\n```\r\n\r\nFull inner exception:\r\n\r\n```\r\nTargetSite     : Void ThrowInvalidOperationIfNotInitialized()\r\nStackTrace     :    at System.Collections.Immutable.ImmutableArray`1.ThrowInvalidOperationIfNotInitialized()\r\n                    at System.Collections.Immutable.ImmutableArray`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()\r\nMessage        : This operation cannot be performed on a default instance of ImmutableArray<T>.  Consider initializing the array, or checking the ImmutableArray<T>.IsDefault property.\r\nData           : {}\r\nInnerException :\r\nHelpLink       :\r\nSource         : System.Collections.Immutable\r\nHResult        : -2146233079\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-preview.3\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-preview.3\r\nOS                             Microsoft Windows 10.0.18362\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Trace shows that PowerShell throws on GetEnumerator(). So it is .Net Core issue.",
      "created_at": "2019-09-16T10:31:45Z",
      "updated_at": "2019-09-16T10:31:45Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov Well the exception is by design.  I'm suggesting that PowerShell swallow it.  It already swallows exceptions thrown by the enumerator itself and any exceptions throw by property accessors.",
      "created_at": "2019-09-16T10:59:34Z",
      "updated_at": "2019-09-16T10:59:34Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@SeeminglyScience Please update (add more info) the issue description.",
      "created_at": "2019-09-16T11:07:16Z",
      "updated_at": "2019-09-16T11:09:03Z"
    }
  ],
  "created_at": "2019-09-13T17:01:26Z",
  "number": 10534,
  "state": "open",
  "title": "Formatter throws if property contains a default instance of ImmutableArray<>",
  "updated_at": "2019-09-16T12:03:14Z"
}