{
  "_url": "https://github.com/PowerShell/PowerShell/issues/14294",
  "author": "sdwheeler",
  "body": "## Steps to reproduce\r\n\r\n```powershell\r\nSet-StrictMode -Version:Latest\r\n\r\nfunction Test-ShouldProcess {\r\n    [CmdletBinding(\r\n        SupportsShouldProcess,\r\n        ConfirmImpact = 'High'\r\n    )]\r\n    param(\r\n        [Switch]$Force\r\n    )\r\n\r\n    if ($Force -and -not $Confirm){\r\n        $ConfirmPreference = 'None'\r\n    }\r\n\r\n    if ($PSCmdlet.ShouldProcess('TARGET')){\r\n        Write-Output \"Some Action\"\r\n    }\r\n}\r\n\r\nTest-ShouldProcess -Force\r\n```\r\n\r\n## Actual behavior\r\n\r\n```none\r\nInvalidOperation: C:\\temp\\testsp.ps1:12\r\nLine |\r\n  12 |      if ($Force -and -not $Confirm){\r\n     |                           ~~~~~~~~\r\n     | The variable '$Confirm' cannot be retrieved because it has not been set.\r\n```\r\n\r\nThis error does not occur when Strict Mode is off. If you try to add `$Confirm` as a switch parameter you get the following error:\r\n\r\n```none\r\nTest-ShouldProcess: C:\\temp\\testsp.ps1:22\r\nLine |\r\n  22 |  Test-ShouldProcess -Force -confirm:$true\r\n     |  ~~~~~~~~~~~~~~~~~~\r\n     | A parameter with the name 'Confirm' was defined multiple times for the command.\r\n```\r\n\r\nSo Strict Mode does not see that `$Confirm` has been defined, but **SupportsShouldProcess** does not allow you to define it.\r\n\r\n## Environment data\r\n\r\nThis was tested in PowerShell 5.1 and 7.1.\r\n\r\n",
  "closed_at": "2020-12-01T23:35:10Z",
  "comments": [
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "@sdwheeler A parameter is defined, but it is not translated into a variable.  Same way other common parameters work like `-Verbose`, there's no `$Verbose` variable created.\r\n\r\nThe example should be more like this:\r\n\r\n```powershell\r\nif ($Force -or $PSCmdlet.ShouldProcess('Target')) {\r\n  # do thing\r\n}\r\n```",
      "created_at": "2020-11-30T20:14:37Z",
      "updated_at": "2020-11-30T20:14:37Z"
    },
    {
      "author": "sdwheeler",
      "author_association": "COLLABORATOR",
      "body": "So you are saying this is by design? We should probably document that there are no variables created for those parameters and you are not allowed to create variables .",
      "created_at": "2020-11-30T22:25:21Z",
      "updated_at": "2020-11-30T22:25:21Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "Yeah.  Creating a variable for the actual switch parameter wouldn't make sense because a parameter isn't the only way these things are scoped.  Verbose, warning, whatif, debug, confirm, etc are all propagated via the preference variables and also to child scopes and cmdlet calls.\r\n\r\n`Force` is different because it's purely convention.",
      "created_at": "2020-12-01T02:36:17Z",
      "updated_at": "2020-12-01T02:36:17Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Just to spell it out:\r\n\r\n> all propagated via the preference variables\r\n\r\n* In other words: For common switch parameters a local variable _is_ created, but it is a local copy of the corresponding _preference_ variable, not named for the switch itself; in the case at hand: `$ConfirmPreference`, which `-Confirm` sets to `'Low'`, and `-Confirm:$false` to `'None'`.\r\n\r\n* This local copy is only created when the common parameter is actually specified. However, thanks to dynamic scoping `$ConfirmPreference` can usually relied on to have a value via the copy in the _global_ scope, but note that it's - surprisingly - possible to _remove_ the variable there: `Remove-Variable -Scope Global ConfirmPreference`.\r\n\r\nGiven the above (and assuming that no one has removed the global `$ConfirmPreference` copy), you could write your conditional as follows (I'm not sure what the exact intent is):\r\n\r\n```powershell\r\nif ($Force -and $ConfirmPreference -ne 'Low') {\r\n  $ConfirmPreference = 'None'\r\n}\r\n``` \r\n",
      "created_at": "2020-12-01T21:50:48Z",
      "updated_at": "2020-12-01T21:50:48Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "> you could write your conditional as follows (I'm not sure what the exact intent is):\r\n\r\nI'd probably leave that out of the documentation though.  I believe the intended usage is letting the command runtime determine what to do (e.g. via `ShouldProcess`, `WriteVerbose`, etc)",
      "created_at": "2020-12-01T23:08:29Z",
      "updated_at": "2020-12-01T23:08:29Z"
    },
    {
      "author": "sdwheeler",
      "author_association": "COLLABORATOR",
      "body": "I have updated the doc that prompted this issue. See the original issue at https://github.com/MicrosoftDocs/PowerShell-Docs/issues/6948\r\n\r\nI think this can be closed. If there are more suggestions for doc updates, open a new issue in the docs repo or submit a PR with appropriate changes to the docs.",
      "created_at": "2020-12-01T23:35:10Z",
      "updated_at": "2020-12-01T23:35:10Z"
    }
  ],
  "created_at": "2020-11-30T19:05:55Z",
  "number": 14294,
  "state": "closed",
  "title": "SupportsShouldProcess does not create $Confirm in a way recognized by Strict Mode",
  "updated_at": "2020-12-01T23:35:11Z"
}