{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15087",
  "author": "jeffreymcclain",
  "body": "## Steps to reproduce\r\n\r\nFor reference, I have tried running the following commands from the following source machines: \r\n\r\n1. Windows 10 laptop (not AD domain joined) with both PowerShell 5.1 and PowerShell 7.1\r\n2. Ubuntu server (not AD domain joined) with PowerShell 7.1\r\n3. Windows 2019 (AD domain joined) with both PowerShell 5.1 and PowerShell 7.1 and \"AD DS and AD LDS Tools\" installed\r\n\r\nThe destination machine is a Windows 2019 Server that is AD domain joined and has RSAT: \"AD DS and AD LDS Tools\" installed. Furthermore, when I copy and paste the New-ADUser and Set-ADUser commands below (with the array of proxyAddresses as a parameter) into PowerShell 5.1 directly on the destination machine, they execute without any errors. The commands only seem to fail when run remotely via Import-PSSession.\r\n\r\n```\r\n# Create PSCredential object\r\n$SecureString = ConvertTo-SecureString $ADPassword -AsPlainText -Force\r\n$credential = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList $ADUsername, $SecureString\r\n\r\n# connect remotely to AD server using IP address and admin credential, import Active Directory module\r\n$session = New-PSSession -ComputerName $IP -Credential $credential -Authentication Negotiate -ErrorAction Stop\r\nImport-PSSession -Session $Session -Module ActiveDirectory\r\n    \r\n<#\r\nThese two commands fail with \"invalid type\" errors when run remotely, seemingly due to the array of proxyAddresses.\r\nThese same two commands execute successfully when run on the destination Windows 2019 server (not via Import-PSSession)\r\n#>\r\n# Invalid type 'System.Collections.ArrayList'. Parameter name: proxyAddresses\r\nNew-ADUser -Name 'Test' -SamAccountName 'test' -OtherAttributes @{proxyAddresses='SMTP:test@test1.com','smtp:test@test2.com','smtp:test@test3.com'} -Credential $Credential\r\n# Invalid type 'System.Management.Automation.PSObject'. Parameter name: proxyAddresses\r\nSet-ADUser -Identity 'test' -Add @{proxyAddresses='smtp:test@test4.com','smtp:test@test5.com'} -Credential $Credential\r\n\r\n# However, these two commands succeed when run remotely, since only one proxyAddresses is being set at a time.\r\nNew-ADUser -Name 'Test' -SamAccountName 'test' -OtherAttributes @{proxyAddresses='SMTP:test@test1.com'} -Credential $Credential\r\nSet-ADUser -Identity 'test' -Add @{proxyAddresses='smtp:test@test2.com'} -Credential $Credential\r\n```\r\n\r\n## Expected behavior\r\n\r\n```\r\n# both commands should run successfully via Import-PSSession, since they run successfully on the destination itself\r\nNew-ADUser -Name 'Test' -SamAccountName 'test' -OtherAttributes @{proxyAddresses='SMTP:test@test1.com','smtp:test@test2.com','smtp:test@test3.com'} -Credential $Credential\r\nSet-ADUser -Identity 'test' -Add @{proxyAddresses='smtp:test@test4.com','smtp:test@test5.com'} -Credential $Credential\r\n```\r\n\r\n## Actual behavior\r\n\r\nThe two commands \r\n```\r\nNew-ADUser -Name 'Test' -SamAccountName 'test' -OtherAttributes @{proxyAddresses='SMTP:test@test1.com','smtp:test@test2.com','smtp:test@test3.com'} -Credential $Credential\r\nSet-ADUser -Identity 'test' -Add @{proxyAddresses='smtp:test@test4.com','smtp:test@test5.com'} -Credential $Credential\r\n```\r\nfail with the following errors:\r\n```\r\nInvalid type 'System.Collections.ArrayList'. Parameter name: proxyAddresses\r\nInvalid type 'System.Management.Automation.PSObject'. Parameter name: proxyAddresses\r\n```\r\n\r\n## Environment data\r\n\r\n```\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.3\r\nPSEdition                      Core\r\nGitCommitId                    7.1.3\r\nOS                             Microsoft Windows 10.0.19042\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```",
  "closed_at": null,
  "comments": [
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "WG-Remoting\r\n\r\nMy guess is that the remoting serialization system is converting the string array within a hash table into an array list, which in turn is breaking the parameter binding of the AD cmdlet.  A fix for this may be a breaking change, but should be looked into.",
      "created_at": "2021-06-08T21:03:56Z",
      "updated_at": "2021-06-08T21:03:56Z"
    }
  ],
  "created_at": "2021-03-23T18:55:51Z",
  "labels": [
    "WG-Remoting",
    "Needs-Investigation"
  ],
  "number": 15087,
  "state": "open",
  "title": "Import-PSSession: Cmdlets fail to parse string array parameter?",
  "updated_at": "2021-06-08T21:04:13Z"
}