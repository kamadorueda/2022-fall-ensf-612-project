{
  "_url": "https://github.com/PowerShell/PowerShell/issues/2872",
  "author": "sandersaares",
  "body": "While I see that PowerShell respects platform line endings quite well, it is sometimes necessary to generate files for one OS when operating on another OS. As far as I can tell, Set-Content always uses the platform line endings. Therefore, at the moment, newline characters have to be manually post-processed when this is done.\r\n\r\nHaving a `-NewlineString` or equivalent parameter on Set-Content would simplify this, at least for many basic cases.",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "\ud83d\udc4d Looks good!\r\n\ud83d\udc4e Powershell i/o is based on CoreCLR where `Environment.Newline` is platform _**readonly**_ property. I believe that if we want it, then we need to make a feature request in .Net Core to manage i/o more flexibility that is very desirable for multi platform support.\r\n\ud83d\udc4d Now Powershell already handle `NoNewline`. So we can easy enhance this to handle `newline`\r\nFor `Add-Content` and `Set-Content` [here](https://github.com/PowerShell/PowerShell/blob/309bf603f9aff9009dce7e725d42b2d4f99f58c9/src/System.Management.Automation/namespaces/FileSystemContentStream.cs#L1111) and [here](https://github.com/PowerShell/PowerShell/blob/master/src/System.Management.Automation/namespaces/FileSystemProvider.cs#L7627) \r\nFor `Out-File` [here](https://github.com/PowerShell/PowerShell/blob/309bf603f9aff9009dce7e725d42b2d4f99f58c9/src/System.Management.Automation/commands/utility/FormatAndOutput/common/ILineOutput.cs#L395)\r\nFor `Write-Host` it is unnecessary I think. \r\n\r\nProposed parameter:\r\n```powershell\r\nSet-Content -Newline ( Default | Windows | Unix )\r\n```\r\n`Default` is platform default (current behavior)",
      "created_at": "2016-12-12T17:34:51Z",
      "updated_at": "2016-12-12T17:34:51Z"
    },
    {
      "author": "kittholland",
      "author_association": "CONTRIBUTOR",
      "body": "Would it make sense or be possible to support a variable we could define as our line ending kind of how $OFS works?",
      "created_at": "2016-12-12T19:10:52Z",
      "updated_at": "2016-12-12T19:10:52Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "+1 Good point!",
      "created_at": "2016-12-12T19:24:56Z",
      "updated_at": "2016-12-12T19:24:56Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "$EOL??",
      "created_at": "2016-12-12T21:42:29Z",
      "updated_at": "2016-12-12T21:42:29Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I think a full name will be more user friendly.\r\n$EndOfLine\r\n$FileOutputNewLine\r\n???",
      "created_at": "2016-12-13T03:56:12Z",
      "updated_at": "2016-12-13T03:56:12Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov kind of like the user friendly `$OFS` (output field separator)?  ;-)",
      "created_at": "2016-12-13T04:16:36Z",
      "updated_at": "2016-12-13T04:16:36Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I would like to have this name was closer to the cmdlets on which it has effect `$FIleContentNewLine`",
      "created_at": "2016-12-13T05:07:44Z",
      "updated_at": "2016-12-13T05:07:44Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee reviewed this and believes this is useful, however, can be complicated enough to warrant an RFC to discuss the design proposal before implementation.  Some considerations is environment variable vs parameters vs new cmdlet (maybe also handle encoding conversion?).",
      "created_at": "2017-01-12T00:31:47Z",
      "updated_at": "2017-01-12T00:31:47Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "If there's interest in an environment variable to control this, please open a new issue.  Let's keep this some simply for `Set-Content -LineEnding` parameter",
      "created_at": "2019-04-11T12:41:00Z",
      "updated_at": "2019-04-11T12:41:00Z"
    }
  ],
  "created_at": "2016-12-12T14:40:10Z",
  "labels": [
    "Issue-Enhancement",
    "WG-Cmdlets",
    "Hacktoberfest",
    "Committee-Reviewed"
  ],
  "number": 2872,
  "state": "open",
  "title": "Add newline customization parameter to Set-Content ",
  "updated_at": "2019-10-15T21:08:46Z"
}