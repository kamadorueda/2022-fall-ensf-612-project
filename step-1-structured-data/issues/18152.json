{
  "_url": "https://github.com/PowerShell/PowerShell/issues/18152",
  "author": "SeeminglyScience",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nThese changes make it so that command discovery (and subsequently tab completion) no longer trigger the download of files not yet on disk when cloud storage is present in `env:PSModulePath` (e.g. backing up `Documents` with OneDrive).\r\n\r\nI believe this would technically be a breaking change, ~~though I'm unsure if we would need to put this behind an experimental change as the experience is pretty rough if you hit this currently. Happy to add that on request though.~~ Experimental feature added as `PSModuleAutoLoadSkipOfflineFiles`\r\n\r\n<!-- Summarize your PR between here and the checklist. -->\r\n\r\n## PR Context\r\n\r\n<!-- Provide a little reasoning as to why this Pull Request helps and why you have opened it. -->\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [ ] None\r\n    - **OR**\r\n    - [x] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/main/reference/7.3/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [x] Experimental feature name(s): `PSModuleAutoLoadSkipOfflineFiles`\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [x] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [x] Issue filed: MicrosoftDocs/PowerShell-Docs#9417\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and opened an issue in the relevant tool repository. This may include:\r\n        - [ ] Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode\r\n        (which runs in a different PS Host).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n",
  "closed_at": "2022-11-08T22:37:29Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "This seems too uncompromising a decision. If we go this way, we rather need an option. Then the main difficulty will be to decide whether it should be opt-in or opt-out.",
      "created_at": "2022-09-24T05:07:42Z",
      "updated_at": "2022-09-24T05:07:42Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "> This seems too uncompromising a decision. If we go this way, we rather need an option. Then the main difficulty will be to decide whether it should be opt-in or opt-out.\r\n\r\nWith this change you already have the option to simply pin the modules folder. This change *only* excludes files that have not already been downloaded by OneDrive. The experience of module discovery attempting to import modules that have not yet been downloaded is quite bad (tab completion will wait until **every** module has been downloaded before returning).",
      "created_at": "2022-09-26T15:06:05Z",
      "updated_at": "2022-09-26T15:06:05Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I still think it is not PowerShell problem. What if about TwoDrive? \ud83d\ude04 I believe One Drive must have folder/file exclusion option.",
      "created_at": "2022-09-26T16:18:56Z",
      "updated_at": "2022-09-26T16:18:56Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "> I still think it is not PowerShell problem. What if about TwoDrive? \ud83d\ude04 I believe One Drive must have folder/file exclusion option.\r\n\r\nI would guess most cloud providers have a way to say \"I want this folder to always be available\". Or at least a way to trigger the download. The changes in this PR are not actually `OneDrive` specific either, FYI. Any cloud provider can decorate their files with the same attributes and we'll skip their not-on-disk files as well.",
      "created_at": "2022-09-26T17:01:12Z",
      "updated_at": "2022-09-26T17:01:12Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov FYI - We've had conversations with OneDrive team and it doesn't seem they will do anything specific for us.  We've heard from many customers where they weren't aware MyDocuments is now in OneDrive and complain about PS perf.   Perhaps we should put this as an experimental feature as a way to advertise the change and get feedback.",
      "created_at": "2022-09-26T19:50:14Z",
      "updated_at": "2022-09-26T19:50:14Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> they will do anything specific for us.\r\n\r\nIf I were them, I would also answer because the question is unfortunate - too small a niche. \r\nIn my opinion, the request should be this - we need to allow OneDrive users the flexibility to configure exactly what they want to sync now. For example, I don't want to sync large files or video files and some folders, but I want to sync Excel and Word files.\r\nThis feature will also allow users to adjust the synchronization of folders with PowerShell modules.\r\nIt is my preffered solution.\r\n\r\nIf PowerShell does use a workaround, however, it could disrupt the familiar user environment. For example, I used to actively sync modules via OneDrive for a while. At the very least, we need an option to explicitly enable or disable it. I'd start with opt-in.",
      "created_at": "2022-09-27T04:09:43Z",
      "updated_at": "2022-09-27T04:09:43Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "Added experimental feature `PSModuleAutoLoadSkipOfflineFiles`",
      "created_at": "2022-09-27T18:18:09Z",
      "updated_at": "2022-09-27T18:18:09Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov the longer term solution for PS7 is to remove PSModulePath from including MyDocuments, it should be under AppData (see https://github.com/PowerShell/PowerShell/issues/15552).  This is an interim fix addressing real world feedback.",
      "created_at": "2022-10-03T16:51:20Z",
      "updated_at": "2022-10-03T16:51:20Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> @iSazonov the longer term solution for PS7 is to remove PSModulePath from including MyDocuments, it should be under AppData (see #15552). This is an interim fix addressing real world feedback.\r\n\r\nBoth of these decisions are questionable. If there are users who are bothered by it, then there are also users who use it. \r\nNote that the problem didn't exist until OneDrive came along. This clearly suggests that it is the OneDrive setup that should give users control over the situation as they need it.\r\nOtherwise you get a strange situation - some developers create cloud sync, others block it. It's more like a rivalry of teams.\r\nThese attributes are more for temporary and auxiliary files that should never be synced, while modules may very well be, especially if the user prefers to sync his profile.ps1. \r\n",
      "created_at": "2022-10-03T17:19:49Z",
      "updated_at": "2022-10-03T17:19:49Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2022-10-11T02:01:21Z",
      "updated_at": "2022-10-11T02:01:21Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "> These attributes are more for temporary and auxiliary files that should never be synced, while modules may very well be, especially if the user prefers to sync his profile.ps1.\r\n\r\nThe attributes are for informing anything that does file based discovery that retrieving a particular file's content would be expensive. `Pinned` is another attribute that lets the user tell the cloud provider that a specific folder (such as the Modules folder) should always be synced. That's an easy way to configure this already built in, and not specific to OneDrive (though I personally haven't checked other cloud providers).",
      "created_at": "2022-10-11T19:13:44Z",
      "updated_at": "2022-10-11T19:13:44Z"
    },
    {
      "author": "pull-request-quantifier[bot]",
      "author_association": "NONE",
      "body": "### ![](https://img.shields.io/static/v1?label=Quantified&message=Extra%20Small&color=green)\r\n\r\nThis PR has `32` quantified lines of changes. In general, a change size of upto `200` lines is ideal for the best PR experience!\r\n\r\n------\r\n\r\n<details >\r\n    <summary display=\"inline\"> <strong>Quantification details</strong></summary>\r\n    <p />\r\n\r\n```\r\nLabel      : Extra Small\r\nSize       : +30 -2\r\nPercentile : 12.8%\r\n\r\nTotal files changed: 4\r\n\r\nChange summary by file extension:\r\n.json : +2 -0\r\n.cs : +28 -2\r\n```\r\n> Change counts above are quantified counts, based on the [PullRequestQuantifier customizations](https://github.com/microsoft/PullRequestQuantifier/blob/main/docs/prquantifier-yaml.md).\r\n    \r\n</details>\r\n\r\n\r\n<details>\r\n    <summary display=\"inline\"> <strong>Why proper sizing of changes matters</strong> </summary>\r\n    <p/>\r\n    <p/>\r\n\r\nOptimal pull request sizes drive a better predictable PR flow as they strike a\r\nbalance between between PR complexity and PR review overhead. PRs within the\r\noptimal size (typical small, or medium sized PRs) mean:\r\n\r\n- Fast and predictable releases to production:\r\n  - Optimal size changes are more likely to be reviewed faster with fewer\r\niterations.\r\n  - Similarity in low PR complexity drives similar review times.\r\n- Review quality is likely higher as complexity is lower:\r\n  - Bugs are more likely to be detected.\r\n  - Code inconsistencies are more likely to be detected.\r\n- Knowledge sharing is improved within the participants:\r\n  - Small portions can be assimilated better.\r\n- Better engineering practices are exercised:\r\n  - Solving big problems by dividing them in well contained, smaller problems.\r\n  - Exercising separation of concerns within the code changes.\r\n\r\n#### What can I do to optimize my changes\r\n\r\n- Use the PullRequestQuantifier to quantify your PR accurately\r\n  - Create a context profile for your repo using the [context generator](https://github.com/microsoft/PullRequestQuantifier/releases)\r\n  - Exclude files that are not necessary to be reviewed or do not increase the review complexity. Example: Autogenerated code, docs, project IDE setting files, binaries, etc. Check out the `Excluded` section from your `prquantifier.yaml` context profile. \r\n  - Understand your typical change complexity, drive towards the desired complexity by adjusting the label mapping in your `prquantifier.yaml` context profile.\r\n  - Only use the labels that matter to you, [see context specification](./docs/prquantifier-yaml.md) to customize your `prquantifier.yaml` context profile.\r\n- Change your engineering behaviors\r\n  - For PRs that fall outside of the desired spectrum, review the details and check if:\r\n    - Your PR could be split in smaller, self-contained PRs instead\r\n    - Your PR only solves one particular issue. (For example, don't refactor and code new features in the same PR).\r\n\r\n#### How to interpret the change counts in git diff output\r\n\r\n- One line was added: `+1 -0`\r\n- One line was deleted: `+0 -1`\r\n- One line was modified: `+1 -1` (git diff doesn't know about modified, it will\r\ninterpret that line like one addition plus one deletion)\r\n- Change percentiles: Change characteristics (addition, deletion, modification)\r\nof this PR in relation to all other PRs within the repository.\r\n\r\n</details>\r\n\r\n<p />\r\n\r\n------\r\n\r\nWas this comment helpful? <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoiU2VlbWluZ2x5U2NpZW5jZSIsIlJlcG9zaXRvcnlMaW5rIjoiaHR0cHM6Ly9naXRodWIuY29tL1Bvd2VyU2hlbGwvUG93ZXJTaGVsbCIsIlB1bGxSZXF1ZXN0TGluayI6Imh0dHBzOi8vZ2l0aHViLmNvbS9Qb3dlclNoZWxsL1Bvd2VyU2hlbGwvcHVsbC8xODE1MiIsIkV2ZW50VHlwZSI6IlRodW1ic1VwIn0=&amp;anonymous=True\" target=\"_blank\" title=\"Thumbs up\"><strong>:thumbsup:</strong></a> <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoiU2VlbWluZ2x5U2NpZW5jZSIsIlJlcG9zaXRvcnlMaW5rIjoiaHR0cHM6Ly9naXRodWIuY29tL1Bvd2VyU2hlbGwvUG93ZXJTaGVsbCIsIlB1bGxSZXF1ZXN0TGluayI6Imh0dHBzOi8vZ2l0aHViLmNvbS9Qb3dlclNoZWxsL1Bvd2VyU2hlbGwvcHVsbC8xODE1MiIsIkV2ZW50VHlwZSI6Ik5ldXRyYWwifQ==&amp;anonymous=True\" target=\"_blank\" title=\"Neutral\"><strong>&nbsp;:ok_hand:</strong></a> <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoiU2VlbWluZ2x5U2NpZW5jZSIsIlJlcG9zaXRvcnlMaW5rIjoiaHR0cHM6Ly9naXRodWIuY29tL1Bvd2VyU2hlbGwvUG93ZXJTaGVsbCIsIlB1bGxSZXF1ZXN0TGluayI6Imh0dHBzOi8vZ2l0aHViLmNvbS9Qb3dlclNoZWxsL1Bvd2VyU2hlbGwvcHVsbC8xODE1MiIsIkV2ZW50VHlwZSI6IlRodW1ic0Rvd24ifQ==&amp;anonymous=True\" target=\"_blank\" title=\"Thumbs down\"><strong>&nbsp;:thumbsdown:</strong></a> (<a href=\"MAILTO:prquantifier@microsoft.com\" title=\"Mail to prquantifier@microsoft.com\">Email</a>)\r\n[Customize PullRequestQuantifier](https://github.com/PowerShell/PowerShell/blob/master/.github/prquantifier.yaml) for this repository.\r\n\r\n",
      "created_at": "2022-11-07T20:06:09Z",
      "updated_at": "2022-11-07T20:06:09Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@SeeminglyScience FYI, PR https://github.com/PowerShell/PowerShell/pull/18484 was submitted to make those 2 JSON file build artifacts only.\r\n\r\nPlease open doc issue and update the PR check list with the doc issue link.",
      "created_at": "2022-11-08T00:44:45Z",
      "updated_at": "2022-11-08T00:44:45Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "Yep! I'll be filing an issue in the docs repo. I need to fix something though, it seems like disabling the experimental feature isn't actually reverting behavior (though I could have sworn it was previously).\r\n\r\nUpdate: `Disable-ExperimentalFeature` doesn't seem to be updating the file... unsure if that's environmental or a new bug with the command.\r\n\r\nManually removed it and it's working, so unrelated. I'll get that issue filed for docs and separately figure out what's up with `Disable-`\r\n\r\nUpdate 2: And now I can't even repro `Disable-ExperimentalFeature` not working, so I'm at a loss there.",
      "created_at": "2022-11-08T19:40:16Z",
      "updated_at": "2022-11-08T21:09:19Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw docs issue has been filed and PR description has been updated",
      "created_at": "2022-11-08T20:12:34Z",
      "updated_at": "2022-11-08T20:12:34Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@SeeminglyScience Thanks! I will merge this PR.",
      "created_at": "2022-11-08T22:35:53Z",
      "updated_at": "2022-11-08T22:35:53Z"
    }
  ],
  "created_at": "2022-09-23T20:29:14Z",
  "number": 18152,
  "state": "closed",
  "title": "Skip cloud files marked as not on disk during command discovery",
  "updated_at": "2022-11-08T22:37:30Z"
}