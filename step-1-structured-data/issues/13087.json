{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13087",
  "author": "kilasuit",
  "body": "Allows the use of Privately Scoped Functions/Cmdlets in a more PowerShell friendly way than doing this\r\n\r\n```powershell\r\n$module = Get-Module MyModule\r\n& $module { Get-PrivateFunction }\r\n```\r\n\r\n## Proposed technical implementation details (optional)\r\n\r\nUsing pure PowerShell this can be done like so - https://github.com/kilasuit/Invoke-PrivateCommand/blob/master/InvokePrivateCommand.ps1\r\n\r\nBut I am not sure how you'd do the same in C# to add this to Microsoft.PowerShell.Core (or Microsoft.PowerShell.Utility)\r\n\r\nIt is potentially going to be easier adding this as a script function that is shipped alongside and loaded as part of the loading of the module anyway.\r\n",
  "closed_at": "2021-07-08T21:00:38Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Adding on some of @SeeminglyScience's suggestions from the PS discord in case they were missed:\r\n\r\n```cs\r\n// moduleInfo should be an instance of PSModuleInfo\r\nvar sb = moduleInfo.NewBoundScriptBlock(originalSb);\r\nPowerShell.Create(RunspaceMode.CurrentRunspace).AddScript(\". $args[0]\", useLocalScope: false).AddArgument(sb)\r\n```\r\n\r\nand\r\n\r\n```cs\r\nInvokeCommand.InvokeScript(moduleInfo.SessionState, scriptBlock.Ast.GetScriptBlock())\r\n```",
      "created_at": "2020-07-03T01:07:53Z",
      "updated_at": "2020-07-03T01:08:08Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "Note that `Ast.GetScriptBlock()` is only required if `scriptBlock` has an existing session state affinity (Due to a bug, see #12883).  If it was created with `ScriptBlock.Create` it can be skipped.",
      "created_at": "2020-07-03T01:34:25Z",
      "updated_at": "2020-07-03T01:34:25Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "That said, the original description reads like you're looking to add a `Invoke-PrivateCommand` as a built in command?  If so, maybe a separate issue should be opened discussing the use cases before you put in the effort of drafting a PR.",
      "created_at": "2020-07-03T01:39:16Z",
      "updated_at": "2020-07-03T01:39:16Z"
    },
    {
      "author": "kilasuit",
      "author_association": "COLLABORATOR",
      "body": "> \r\n> \r\n> That said, the original description reads like you're looking to add a `Invoke-PrivateCommand` as a built in command? If so, maybe a separate issue should be opened discussing the use cases before you put in the effort of drafting a PR.\r\n\r\nI opened this issue to see if there was a desire to have this built in or not (my view it should be). As otherwise I'll release it as a seperate module just making use of the PowerShell implementation due to it's simplicity.",
      "created_at": "2020-07-03T02:09:37Z",
      "updated_at": "2020-07-03T02:09:37Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Adding to the Core only makes sense if commonly used scenarios exist. It also violates an intent of the author of the module. Private functions can be changed by the author at any time. This cannot be used on a regular basis. Similar code could be in an analysis module (like Pester) but not in Core.\r\n",
      "created_at": "2020-07-03T05:37:56Z",
      "updated_at": "2020-07-03T05:37:56Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Pester provides an `InModuleScope` function for this purpose, yeah. Dunno if I think it should / needs to be a default cmdlet. \ud83e\udd37 ",
      "created_at": "2020-07-03T05:43:43Z",
      "updated_at": "2020-07-03T05:43:43Z"
    },
    {
      "author": "JamesWTruher",
      "author_association": "MEMBER",
      "body": "This seems like a great thing for the gallery. However, this is not something that we would like to perpetuate as it breaks the model that the module author has when he doesn't want to export a function, so putting it in PowerShell is not something we would entertain.",
      "created_at": "2021-06-01T19:58:31Z",
      "updated_at": "2021-06-01T19:58:31Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as by-design and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2021-07-08T21:00:38Z",
      "updated_at": "2021-07-08T21:00:38Z"
    }
  ],
  "created_at": "2020-07-02T23:20:54Z",
  "number": 13087,
  "state": "closed",
  "title": "Add a Invoke-PrivateCommand into PowerShell.Core",
  "updated_at": "2021-07-08T21:00:38Z"
}