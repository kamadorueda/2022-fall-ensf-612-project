{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12489",
  "author": "mklement0",
  "body": "The CLI's `-OutputFormat Xml` (`-o Xml` / `-of Xml`) parameter produces CLIXML output that can later be read with `Import-CliXml`, for instance.\r\n\r\nIf a `-Command` / `-c` command string / a `*.ps1` script file passed to `-File` writes to _multiple_ streams, the output XML text is broken in two (possibly related) ways:\r\n\r\n* The single magic `#< CLIXML` comment that is usually on the first line only is _doubled_ (that is, the 2nd line contains the same comment, with only the 3rd line containing the XML).\r\n\r\n* A _2nd_ top-level `<Objs>` root element appears, seemingly covering the non-success streams separately, which results in broken XML as well as a loss of the ordering of output objects.\r\n\r\nAs an aside: it seems that _host_ output is captured as _success_-stream output (`S=\"Output\"`) rather than _information_-stream output (`S=\"information\"`). \r\nIs this by (historical) design, retained for backward compatibility?\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\n{ \r\n $ErrorActionPreference = 'Stop'\r\n pwsh -o xml -noprofile -command 'Write-Output output!; Write-Verbose -vb verbose!' | \r\n   Write-Output \r\n} | Should -not -Throw\r\n```\r\n\r\n# Expected behavior\r\n\r\nThe test should succeed - no errors should occur.\r\n\r\nNote that the test relies on the fact that PowerShell automatically _deserializes_ CLIXML text when you send it through the pipeline, so that `Write-Output` outputs the deserialized (\"rehydrated\") output objects.\r\n\r\n# Actual behavior\r\n\r\nThe following error occurs:\r\n\r\n```none\r\nExpected no exception to be thrown, but an exception \r\n\"Cannot process the XML from the 'Output' stream of '/.../pwsh': \r\nData at the root level is invalid. Line 1, position 1.\" was\r\nthrown from line:1 char:36 ...\r\n```\r\n\r\nIf you want to examine the actual XML, run the following on Unix:\r\n\r\n```powershell\r\nsh -c 'pwsh -o xml -noprofile -command ''Write-Output output!; Write-Verbose -vb verbose!'' > out.xml'\r\n```\r\n\r\nYou'll see the following content in `out.xml` - note the doubled comment line and the presence of _two_ root elements (broken XML):\r\n\r\n```xml\r\n#< CLIXML\r\n#< CLIXML\r\n<Objs Version=\"1.1.0.1\" xmlns=\"http://schemas.microsoft.com/powershell/2004/04\">\r\n\t<S S=\"Output\">\r\n\t\toutput!\r\n\t</S>\r\n</Objs>\r\n<Objs Version=\"1.1.0.1\" xmlns=\"http://schemas.microsoft.com/powershell/2004/04\">\r\n\t<S S=\"verbose\">\r\n\t\tverbose!\r\n\t</S>\r\n</Objs>\r\n```\r\n\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nPowerShell Core 7.1.0-preview.2\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "I've seen this turn up in a few places, but wasn't sure what exactly was causing it. Thanks for the detailed investigation as always! :blush: \ud83d\udc96",
      "created_at": "2020-04-25T15:55:05Z",
      "updated_at": "2020-04-25T15:55:05Z"
    },
    {
      "author": "Jaykul",
      "author_association": "CONTRIBUTOR",
      "body": "Another very baffling side-effect of this, is when you get *only* error output. So for instance:\r\n\r\n```powershell\r\n$Result = pwsh -OutputFormat Xml -Command Get-Typo | Where Text -eq \"X\"\r\n```\r\n\r\nYou expect a `#< CLIXML` header to mean the output gets converted to objects and you'll capture it in `$Result`, but in this case you get a spew of XML because the command is not found... It might take you a while to realize that `pwsh` (or `PowerShell`, because this has always been like this) has produced all this output on stderr, and the hosting instance doesn't deserialize stderr output, even if it _does_ have the CLIXML header.\r\n\r\nNOTE: You can work around this by redirecting the other stream to stdout ... but then it's all co-mingled...",
      "created_at": "2022-03-31T00:14:20Z",
      "updated_at": "2022-03-31T00:14:20Z"
    }
  ],
  "created_at": "2020-04-25T15:33:46Z",
  "number": 12489,
  "state": "open",
  "title": "CLI: -OutputFormat XML situationally produces broken XML (CLIXML)",
  "updated_at": "2022-03-31T00:14:20Z"
}