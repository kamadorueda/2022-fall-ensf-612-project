{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13638",
  "author": "DHowett",
  "body": "## Steps to reproduce\r\n\r\n```powershell\r\nPS> cmd /c echo \":(top,exclude).*\"\r\n```\r\n\r\n## Expected behavior\r\n\r\n```none\r\n:(top,exclude).*\r\n```\r\n\r\n## Actual behavior\r\n\r\n```none\r\nC:\\Users\\duhowett\\src\\openconsole-inbox\\:(top,exclude).*\r\n```\r\n\r\n## Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.0-preview.7\r\nPSEdition                      Core\r\nGitCommitId                    7.1.0-preview.7\r\nOS                             Microsoft Windows 10.0.19042\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\nIt appears as though the check here\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/3effa204103460c996a8612aa70718fdf924047d/src/System.Management.Automation/engine/NativeCommandParameterBinder.cs#L388-L406\r\n\r\nis not strict enough.\r\n\r\nI encountered this by trying to use a `git` globbing expression, which can begin with `:` to introduce a set of flags.\r\n\r\n```powershell\r\nPS> & git log \":(top,exclude).git/\" \":(top,exclude)**/*.rec\"\r\nfatal: invalid object name 'C'.\r\n```",
  "closed_at": "2020-09-16T02:07:36Z",
  "comments": [
    {
      "author": "DHowett",
      "author_association": "NONE",
      "body": "(This broke an existing script that we were using to generate git logs.)",
      "created_at": "2020-09-15T21:57:17Z",
      "updated_at": "2020-09-15T21:57:17Z"
    },
    {
      "author": "DHowett",
      "author_association": "NONE",
      "body": "(We cannot figure out how to get `:x` to behave normally.)",
      "created_at": "2020-09-15T21:57:30Z",
      "updated_at": "2020-09-15T21:57:30Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "As for a _workaround_, on _Windows_ - assuming you don't need _PowerShell_ to perform the globbing - the stop-parsing symbol will (`--%`) will do (adding the `\"...\"` around the arguments would yield the same):\r\n\r\n```powershell\r\nPS> git log --% :(top,exclude).git/ :(top,exclude)**/*.rec\r\n```",
      "created_at": "2020-09-15T23:06:24Z",
      "updated_at": "2020-09-15T23:31:20Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "As for the root cause: please see #13640 - I suggest you close this issue in favor of the latter.\r\n[Edit: I missed that you've commendably already done all the hard analysis work, but the linked issue may still be a more succinct formulation, complete with tests.]\r\n\r\nAnother workaround (apart from using `--%`)  _on Windows_ is to use `'...'` rather than `\"...\"` quoting, though the fact that this works is arguably a separate bug:\r\n\r\n```powershell\r\n# On Windows:\r\nPS> cmd /c echo  ':(top,exclude).git/' ':(top,exclude)**/*.rec'\r\n:(top,exclude).git/ :(top,exclude)**/*.rec\r\n```",
      "created_at": "2020-09-15T23:29:33Z",
      "updated_at": "2020-09-15T23:53:50Z"
    }
  ],
  "created_at": "2020-09-15T21:56:35Z",
  "labels": [
    "Issue-Question",
    "WG-Engine-Providers"
  ],
  "number": 13638,
  "state": "closed",
  "title": "PSNativePSPathResolution breaks passing strings starting with \":\" to native tools",
  "updated_at": "2020-09-16T03:08:48Z"
}