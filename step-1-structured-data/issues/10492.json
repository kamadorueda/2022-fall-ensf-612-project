{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10492",
  "author": "KirkMunro",
  "body": "# PR Summary\r\n\r\n- Adds an experimental `-Runspace` parameter `Get-PSBreakpoint`, `Set-PSBreakpoint`, `Enable-PSBreakpoint`, `Disable-PSBreakpoint`, and `Remove-PSBreakpoint`. This parameter is added to the \"Microsoft.PowerShell.Utility.PSManageBreakpointsInRunspace\" experimental flag that was added in PR #10338. \r\n- Refactors the classes behind the `*-PSBreakpoint` cmdlets so that they all work consistently. This refactoring did not change the behavior of these cmdlets beyond adding support for runspace breakpoint management, with one exception:\r\n    - Changed the default parameter set for `Enable-PSBreakpoint` so that it is more performant when passed in breakpoints via a pipeline. The previous configuration for this cmdlet would always result in the \"Id\" parameter set being used, even when you pipe in a breakpoint. This change does not impact the functionality of the cmdlet -- it still accepts pipeline input and command line input with named or unnamed parameters the same way. The only visible impact is that this cmdlet will prompt users for a breakpoint instead of an ID now. See Issue #10188 for a discussion related to this.\r\n\r\n## PR Context\r\n\r\nNow that the SDK has been enhanced to support breakpoint management in runspaces (see PR #10338), this PR builds on that work, exposing a common `-Runspace` parameter in all `*-PSBreakpoint` cmdlets so that users can use the same cmdlets to manage breakpoints in their local session or in a remote runspace.\r\n\r\n## PR Checklist\r\n\r\n- [X] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [X] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [X] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [X] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [X] Issue filed: [Docs Issue #6259](https://github.com/MicrosoftDocs/PowerShell-Docs/issues/6259)\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [X] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [X] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2020-07-21T18:48:56Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@KirkMunro At first look there is a lot of style changes in the PR. Could you please move them in another PR? It would be nice for code review.",
      "created_at": "2019-09-06T04:07:47Z",
      "updated_at": "2019-09-06T04:07:47Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "> @KirkMunro At first look there is a lot of style changes in the PR. Could you please move them in another PR? It would be nice for code review.\r\n\r\n@iSazonov I would rather not, unless I absolutely have to.\r\n\r\nThis PR was originally part of #10189, which they asked to be broken up into other PRs. After a side discussion between @TylerLeonhardt, @PaulHigin and @SteveL-MSFT, they suggested this set of changes (adding the `-Runspace` parameter and refactoring under the base classes) as the second phase of the #10189 changes in an email.\r\n\r\nThe only real \"style changes\" are replacement of cmdlet parameter property/field pairs with just properties, using static strings where appropriate (for parameter set names), and adding regions to make the set of breakpoint cmdlet classes consistent with one another. They were made while setting up base classes for the breakpoint cmdlets, which makes the code much easier to maintain going forward. I don't think they should really get in the way of this code review.",
      "created_at": "2019-09-06T04:23:22Z",
      "updated_at": "2019-09-06T04:23:22Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@KirkMunro I only want to speed up a code review of the PR. It is possible for reviewer to check up to 500 lines of code at a time. The PR has over 1000 changes. Also style changes distract and slows down code review too.\r\n\r\n",
      "created_at": "2019-09-06T04:39:14Z",
      "updated_at": "2019-09-06T04:39:14Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": ">  Also style changes distract and slows down code review too.\r\n\r\nThe end result of the refactoring is leaner, consistent, better defined, DRY code that is easier to work with and maintain going forward. In this case, I don't believe separating some of the changes out into a separate PR buys us anything except for more work all around.",
      "created_at": "2019-09-06T17:09:48Z",
      "updated_at": "2019-09-06T17:11:21Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@PaulHigin Can you have a look at this?",
      "created_at": "2019-09-11T18:04:59Z",
      "updated_at": "2019-09-11T18:04:59Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "@PowerShell/powershell-committee doesn't think we need to weigh in here as @PaulHigin is fully on board with the design now",
      "created_at": "2019-12-11T23:55:08Z",
      "updated_at": "2019-12-11T23:55:08Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "> @PowerShell/powershell-committee doesn't think we need to weigh in here as @PaulHigin is fully on board with the design now\r\n\r\nDoes that mean @PaulHigin understands and agrees with the design in this PR, like it sounds, so this can be merged once reviews have completed?",
      "created_at": "2019-12-12T16:51:42Z",
      "updated_at": "2019-12-12T16:51:42Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@KirkMunro Please resolve merge conflicts\r\n@PaulHigin Please update your review",
      "created_at": "2020-03-23T22:18:52Z",
      "updated_at": "2020-03-23T22:18:52Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@PaulHigin and @KirkMunro ping..",
      "created_at": "2020-04-13T17:25:00Z",
      "updated_at": "2020-04-13T17:25:00Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as stale because it has been marked as requiring author feedback but has not had any activity for **15 days**. It will be closed if no further activity occurs **within 10 days of this comment**.",
      "created_at": "2020-06-06T20:00:12Z",
      "updated_at": "2020-06-06T20:00:12Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "@adityapatwardhan and @PaulHigin: I have merged in master and resolved all conflicts.\r\n\r\nThe single Codacy issue is incorrect, suggesting I should make a method static that cannot be made static. The PowerShell-CI-macos failures seem to have nothing to do with this PR.\r\n\r\nI have also manually re-reviewed the code changes to ensure that nothing unexpected came from the merge.\r\n\r\nFrom my perspective, this PR is good to go.",
      "created_at": "2020-06-14T14:57:08Z",
      "updated_at": "2020-06-14T14:57:08Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@PaulHigin Please re-review the PR. @KirkMunro Thanks for the updates",
      "created_at": "2020-06-15T19:21:30Z",
      "updated_at": "2020-06-15T19:21:30Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@KirkMunro Please open new issue in PowerShell-Docs repository.",
      "created_at": "2020-06-16T17:15:41Z",
      "updated_at": "2020-06-16T17:15:41Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2020-06-24T02:00:10Z",
      "updated_at": "2020-06-24T02:00:10Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov: Docs issue filed, and this PR has been updated with the link at the top, so it should be good to go.",
      "created_at": "2020-07-10T16:49:19Z",
      "updated_at": "2020-07-10T16:49:19Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@KirkMunro Please resolve the merge conflict.",
      "created_at": "2020-07-13T20:07:48Z",
      "updated_at": "2020-07-13T20:07:48Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "@adityapatwardhan: Done.",
      "created_at": "2020-07-15T02:03:14Z",
      "updated_at": "2020-07-15T02:03:14Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@KirkMunro Thank you for your contribution and your patience!",
      "created_at": "2020-07-21T18:49:21Z",
      "updated_at": "2020-07-21T18:49:21Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.1.0-preview.6` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.1.0-preview.6)\n",
      "created_at": "2020-08-17T22:21:22Z",
      "updated_at": "2020-08-17T22:21:22Z"
    }
  ],
  "created_at": "2019-09-06T03:29:19Z",
  "number": 10492,
  "state": "closed",
  "title": "Add -Runspace parameter to all *-PSBreakpoint cmdlets",
  "updated_at": "2020-08-17T22:21:22Z"
}