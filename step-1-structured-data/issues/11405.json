{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11405",
  "author": "Silvenga",
  "body": "I was asked by the Azure DevOps support team (case `119110624002446`) to open this bug as it was believed that this is a bug in PowerShell Core, and not Azure DevOps.\r\n\r\n# Steps to reproduce\r\n\r\nGiven a `azure-pipeline.yaml`\r\n\r\n```yaml\r\njobs:\r\n- job: HelloWorld\r\n  pool:\r\n    vmImage: ubuntu-latest\r\n  steps:\r\n  - powershell: |\r\n      Start-Process \"tail\" -Args \"-f /dev/null\" \r\n      exit 0\r\n    timeoutInMinutes: 1\r\n```\r\n\r\n# Expected behavior\r\n\r\nThe task should not timeout.\r\n\r\nWhen executed from a local Ubuntu machine:\r\n\r\n```\r\n~$ pwsh\r\nPS> Start-Process \"tail\" -Args \"-f /dev/null\"\r\nPS> ps\r\n   PID TTY          TIME CMD\r\n31187 pts/0    00:00:00 bash\r\n31236 pts/0    00:00:02 pwsh\r\n31398 pts/0    00:00:00 tail\r\n31404 pts/0    00:00:00 ps\r\nPS> exit\r\n~$ ps\r\n   PID TTY          TIME CMD\r\n31187 pts/0    00:00:00 bash\r\n31398 pts/0    00:00:00 tail\r\n31423 pts/0    00:00:00 ps\r\n```\r\n\r\nThe main process (pwsh) does complete and the tail process's parent becomes init:\r\n\r\n```\r\n~$ pstree -s -p 31398\r\nsystemd(1)\u2500\u2500\u2500tail(31398)\r\n```\r\n\r\nWhich is desired behavior.\r\n\r\n# Actual behavior\r\n\r\nThe script exists with exit code 0, and then the task times out waiting for the pwsh process to stop (assumed).\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.2.3\r\nPSEdition                      Core\r\nGitCommitId                    6.2.3\r\nOS                             Linux 4.15.0-1064-azure #69-Ubuntu SMP Tue Nov \u2026\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2020-04-18T00:00:22Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT Please triage the issue.",
      "created_at": "2020-01-31T12:27:05Z",
      "updated_at": "2020-01-31T12:27:05Z"
    },
    {
      "author": "Silvenga",
      "author_association": "NONE",
      "body": "Also, a separate case `120022124006034` for PowerShell running under Azure DevOps is suggesting that this issue impacts **PowerShell 5** on Windows Server.\r\n\r\n@iSazonov or @SteveL-MSFT can you provide any insights into this?",
      "created_at": "2020-04-15T23:08:45Z",
      "updated_at": "2020-04-15T23:08:45Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@Silvenga Have you repo steps for Windows PowerShell?",
      "created_at": "2020-04-16T07:35:45Z",
      "updated_at": "2020-04-16T17:02:59Z"
    },
    {
      "author": "Silvenga",
      "author_association": "NONE",
      "body": "@iSazonov I have an example pipeline with logs - https://github.com/Silvenga/Repo-Case-PowerShell5-Pipeline-Timeout\r\n\r\nThis issue is the same as the PowerShell Core \"problem\" talked about in this issue, except:\r\n- It occurs only ~20% of the time.\r\n- Is new behavior (used to work 100% of the time).\r\n- Occurs on only on Windows.\r\n- Occurs only on PowerShell 5.\r\n\r\nIt is my belief this is a bug in the Azure DevOps agent, but my support case keeps ending up in this repo (I was given this issue has evidence it's not a Azure DevOps issue \ud83e\udd26). \r\n\r\nFrustrating to say the least.\r\n\r\nNote that we've seen a major breaking change in Azure DevOps Pipelines, where pwsh is used instead of PowerShell (even when PowerShell is requested). This is new behavior that we've tracked to 4/14. Needless to say, a lot of our scripts are broken. So, the repo case cannot be ran anymore, without Azure DevOps creating a workaround for us. The logs will have to do.\n\n<blockquote><img src=\"https://avatars1.githubusercontent.com/u/2753330?s=400&v=4\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/Silvenga/Repo-Case-PowerShell5-Pipeline-Timeout\">Silvenga/Repo-Case-PowerShell5-Pipeline-Timeout</a></strong></div><div>Contribute to Silvenga/Repo-Case-PowerShell5-Pipeline-Timeout development by creating an account on GitHub.</div></blockquote>",
      "created_at": "2020-04-16T15:22:22Z",
      "updated_at": "2020-04-16T15:22:24Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "If I understand right the following happens: Start-Process runs a \"tail\" process, pwsh exits and Azure engine waits \"tail\" process exits but it never exits.\r\n\r\nPerhaps @PaulHigin has thoughts about the issue.",
      "created_at": "2020-04-16T15:46:07Z",
      "updated_at": "2020-04-16T15:46:07Z"
    },
    {
      "author": "Silvenga",
      "author_association": "NONE",
      "body": "Yep, that's what appears to be occurring @iSazonov - which I've been told is a pwsh bug. I think I proved that pwsh is correctly spawning new processes under at least Linux.\r\n\r\nRunning Bash/Batch to execute PowerShell does not cause this behavior. So, this is not normal behavior for Tasks (orphan cleanup in fact occurs by the agent when the Job is complete). Again, I do not believe this is an issue with pwsh, but if Azure DevOps Product believes it is \ud83e\udd37.\r\n\r\nWhat's worse is if the first PowerShell Task timeouts, every PowerShell Task timeouts afterwards (a simple Write-Host will timeout). This suggests that the Azure DevOps agent isn't simply waiting for an orphaned process to stop, but some global agent state is getting messed up.",
      "created_at": "2020-04-16T15:58:24Z",
      "updated_at": "2020-04-16T15:58:24Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "Adding @daxian-dbw  @TravisEz13 \r\n\r\nThis sounds like a random issue when running in Azure DevOps.  There doesn't seem to be a repro in PowerShell running outside Azure DevOps.\r\n",
      "created_at": "2020-04-16T16:45:36Z",
      "updated_at": "2020-04-16T16:45:36Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@Silvenga  Why to just run `tail -f /dev/nul` ?",
      "created_at": "2020-04-16T17:04:44Z",
      "updated_at": "2020-04-16T17:04:44Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@Silvenga To debug the issue, we need Azure DevOps to provide us a repro that we can debug as many have pointed out, this issues seems specific to the environment they provide.",
      "created_at": "2020-04-16T17:09:01Z",
      "updated_at": "2020-04-16T17:09:44Z"
    },
    {
      "author": "Silvenga",
      "author_association": "NONE",
      "body": "@TravisEz13 just for this contributed example. I needed some command that never exits (and exists by default on most Linux distributions), my first thought was `tail -f /dev/null`. This command is purely to create a simple reproduction case.\r\n\r\nIn a real-world example, we are starting a HTTP interception proxy (think Fiddler but accessible via an API) in some of our end-to-end tests, to test the L7 behavior of a third party.\r\n\r\nIn a nutshell, the example would look like:\r\n- The interception API is started, listening for HTTP Proxy connections.\r\n- The third party under test is started.\r\n- We execute our testing payload against the third party.\r\n- We assert on the observed communication from the third party through the HTTP interception proxy.\r\n- Cleanup.",
      "created_at": "2020-04-16T17:13:58Z",
      "updated_at": "2020-04-16T17:13:58Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@Silvenga So again, the azure DevOps environments are not debuggable and making the report not actionable and I go back to this.  Unfortunately, I'm going back to https://github.com/PowerShell/PowerShell/issues/11405#issuecomment-614779230\r\n",
      "created_at": "2020-04-16T17:21:59Z",
      "updated_at": "2020-04-16T17:21:59Z"
    },
    {
      "author": "Silvenga",
      "author_association": "NONE",
      "body": "I can build out an Azure DevOps pipeline, if that would be helpful.\r\n\r\nIMO, there are two separate problems here (that are not bugs in pwsh).\r\n- The Azure DevOps agent is incorrectly handling/tracking processes that pwsh starts.\r\n- The Azure DevOps agent is incorrectly handling/tracking processes that PowerShell 5 starts.\r\n\r\nI would agree with you @TravisEz13 - I need something to go back to Azure DevOps support with.",
      "created_at": "2020-04-16T17:23:25Z",
      "updated_at": "2020-04-16T17:23:25Z"
    },
    {
      "author": "Silvenga",
      "author_association": "NONE",
      "body": "Would you say that, given a similar issue occurs under both PowerShell 5 and pwsh, that this is not a pwsh issue and that this issue should be closed as likely a problem with the Azure DevOps agent?",
      "created_at": "2020-04-16T17:27:18Z",
      "updated_at": "2020-04-16T17:27:18Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "The pipeline doesn't help as it's not remotely accessible.  We would need a pipeline with a self-hosted agent that both repro's the problem and we can access to debug the issue.",
      "created_at": "2020-04-16T17:27:36Z",
      "updated_at": "2020-04-16T17:27:36Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@Silvenga I'm going to mark it as answered.  This will close it after 24 hours of inactivity.",
      "created_at": "2020-04-16T17:28:21Z",
      "updated_at": "2020-04-16T17:28:21Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "I'll try to ask Azure DevOps if they are willing to provide us an environment, but I think it's more likely if you ask.",
      "created_at": "2020-04-16T17:29:56Z",
      "updated_at": "2020-04-16T17:29:56Z"
    },
    {
      "author": "Silvenga",
      "author_association": "NONE",
      "body": "I'll ask, thanks for your help.",
      "created_at": "2020-04-16T17:30:31Z",
      "updated_at": "2020-04-16T17:30:31Z"
    },
    {
      "author": "Silvenga",
      "author_association": "NONE",
      "body": "I've requested an environment from the Azure DevOps team through the open support case.",
      "created_at": "2020-04-16T17:39:53Z",
      "updated_at": "2020-04-16T17:39:53Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@Silvenga I've sent an email to you to the email in your GitHub profile so you have a more private way to contact me if that is needed.",
      "created_at": "2020-04-16T17:54:32Z",
      "updated_at": "2020-04-16T17:54:32Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2020-04-18T00:00:21Z",
      "updated_at": "2020-04-18T00:00:21Z"
    }
  ],
  "created_at": "2019-12-19T18:35:30Z",
  "number": 11405,
  "state": "closed",
  "title": "Azure DevOps Causes a Differing Behavior (Start-Process)",
  "updated_at": "2020-04-18T00:00:22Z"
}