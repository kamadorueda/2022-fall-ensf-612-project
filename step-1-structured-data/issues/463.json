{
  "_url": "https://github.com/PowerShell/PowerShell/issues/463",
  "author": "andschwa",
  "body": "See [OneGet](https://github.com/OneGet/oneget). It would great to enable this module with its PowerShell provider so that PowerShell modules can be installed automatically.\n",
  "closed_at": "2016-07-07T17:25:25Z",
  "comments": [
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "~~OneGet is not necessarily what we need.~~ To install PowerShell modules, all we need is PSGet, which unfortunately depends on the module PackageManagement, which makes native calls.\n",
      "created_at": "2016-01-30T01:46:33Z",
      "updated_at": "2016-03-15T23:28:37Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "And PackageManagement _is_ OneGet. It was renamed.\n\nThis is blocked until OneGet is ported to Linux.\n",
      "created_at": "2016-03-09T03:09:59Z",
      "updated_at": "2016-03-09T03:09:59Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "And just to clarify, PowerShellGet, the module to obtain scripts from the PowerShell gallery, is called PSGet in the sources. This module is dependent on the PackageManagement library (aka OneGet) which is Windows-only and out of our scope.\n",
      "created_at": "2016-03-09T03:11:16Z",
      "updated_at": "2016-03-09T03:11:16Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "We can get PSGet on Windows Core PowerShell if we get PSGet and its dependency ported to PowerShell repo(that is, build with .NET CLI so we can a) build the CoreCLR version and b) deploy it).\n",
      "created_at": "2016-04-12T16:45:41Z",
      "updated_at": "2016-08-18T00:06:17Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Spoke with @raghushantha: we have the sources for OneGet etc. in the SD sync repo [here](https://github.com/PowerShell/psl-monad/tree/master/monad/src/oneget). Adding some projects to build the necessary libraries for Windows should be pretty straight-forward.\n",
      "created_at": "2016-04-12T18:11:06Z",
      "updated_at": "2016-04-12T18:11:06Z"
    },
    {
      "author": "raghushantha",
      "author_association": "MEMBER",
      "body": "@quoctruong Can we sync to the latest sources from rs1 sd branch? I want to see if PackageManagement builds/works against the latest CoreCLR\n",
      "created_at": "2016-04-12T18:53:04Z",
      "updated_at": "2016-04-12T18:53:04Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "@vors Let's get latest SD changes to the psl-monad repo.\n",
      "created_at": "2016-04-12T19:02:34Z",
      "updated_at": "2016-04-12T19:02:34Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "@andschwa @raghushantha done, synced to [SD:695331]\n",
      "created_at": "2016-04-12T19:09:16Z",
      "updated_at": "2016-04-12T19:09:16Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Awesome. @raghushantha to start with, just add the PSGet etc. projects and copy the files in. We will _probably_ want to do it correctly with the `mapping.json`, but we'll need to know what files we need to map first.\n",
      "created_at": "2016-04-12T19:12:43Z",
      "updated_at": "2016-04-12T19:12:43Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "Not probably, but _for sure_. Please, don't merge changes without adding files to mapping. Here are details: https://github.com/PowerShell/PowerShell/blob/master/docs/workflow/mapping.md\n",
      "created_at": "2016-04-12T19:49:40Z",
      "updated_at": "2016-04-12T19:49:40Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "@raghushantha @quoctruong I believe you just enabled this, right? If so, can we add tests then close?\n",
      "created_at": "2016-06-20T21:28:04Z",
      "updated_at": "2016-06-20T21:28:04Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "@andschwa @raghushantha \n\nJust popped open 0.5.0 on my Win10 box, and it's listing the module as `PSGet` instead of `PowerShellGet`. Can we get that corrected before we close this? \n",
      "created_at": "2016-06-21T17:06:47Z",
      "updated_at": "2016-06-21T17:06:47Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "@joeyaiello which module is it pointing to? Keep in mind that on Windows, it inherits the environment's module path, so it'll show everything on the system (including in-box).\n",
      "created_at": "2016-06-21T17:35:41Z",
      "updated_at": "2016-06-21T17:35:41Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "The PowerShell Core one:\n\n```\nPS C:\\Program Files\\OpenPowerShell\\0.5.0> get-module -li PSGet                                                          \n\n    Directory: C:\\program files\\openpowershell\\0.5.0\\Modules\n\n\nModuleType Version    Name                                ExportedCommands\n---------- -------    ----                                ----------------\nScript     1.0.0.1    PSGet                               {Install-Module, Find-Module, Save-Module, Update-Module...}\n```\n\nAlso, it doesn't import on Windows (looks like a GAC problem?):\n\n```\nPS C:\\Program Files\\OpenPowerShell\\0.5.0> ipmo psget                                                                    Import-Module : Could not load file or assembly 'System, Version=4.0.0.0, Culture=neutral,\nPublicKeyToken=b77a5c561934e089' or one of its dependencies. The system cannot find the file specified.\nAt line:1 char:1\n+ ipmo psget\n+ ~~~~~~~~~~\n    + CategoryInfo          : NotSpecified: (:) [Import-Module], FileNotFoundException\n    + FullyQualifiedErrorId : System.IO.FileNotFoundException,Microsoft.PowerShell.Commands.ImportModuleCommand\n```\n",
      "created_at": "2016-06-21T19:14:06Z",
      "updated_at": "2016-08-17T07:08:00Z"
    },
    {
      "author": "mgreenegit",
      "author_association": "MEMBER",
      "body": "Also does not import on Ubuntu 14.04 LTS.  Error is missing PackageManagement module.\n",
      "created_at": "2016-06-21T19:19:33Z",
      "updated_at": "2016-06-21T19:19:33Z"
    },
    {
      "author": "raghushantha",
      "author_association": "MEMBER",
      "body": "#1237, #1251 takes care of this\n",
      "created_at": "2016-07-07T17:25:25Z",
      "updated_at": "2016-07-07T17:25:25Z"
    }
  ],
  "created_at": "2016-01-28T23:45:17Z",
  "labels": [
    "Area-PackageManagement",
    "Area-PowerShellGet"
  ],
  "number": 463,
  "state": "closed",
  "title": "Enable PowerShellGet Module",
  "updated_at": "2016-08-18T00:06:17Z"
}