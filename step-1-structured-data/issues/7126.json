{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7126",
  "author": "rjmholt",
  "body": "## PR Summary\r\n\r\nRefactors the code for `ModuleSpecification`s:\r\n* Use `nameof` where appropriate\r\n* Factor out a repeated `entry.Key.ToString()` call\r\n* Use a `StringBuilder` in the `ToString()` method\r\n* Dissect a trick comparison method into something simpler\r\n* Use HashCode.Combine() method\r\n\r\nEach of the above is its own commit, so we can take any change out.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` to the beginning of the title and remove the prefix when the PR is ready.\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] User-facing [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed - Issue link:\r\n- **Testing - New and feature**\r\n    - [ ] Not Applicable or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n        - [x] [Add `[feature]` if the change is significant or affects feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\r\n",
  "closed_at": "2018-07-03T06:18:13Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "We could use https://stackoverflow.com/questions/263400/what-is-the-best-algorithm-for-an-overridden-system-object-gethashcode",
      "created_at": "2018-06-21T08:01:11Z",
      "updated_at": "2018-06-21T08:01:11Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov I actually was thinking of that exact StackOverflow answer. I didn\u2019t want to change the actual numerical result of `GetHashCode()` without approval on the basis that it could break things...\r\n\r\nBut I definitely agree that that would be a better hash algorithm and can change it over in this PR if that is desired.",
      "created_at": "2018-06-21T13:36:29Z",
      "updated_at": "2018-06-21T13:36:29Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "GetHashCode result is not persistent.\r\nFrom https://msdn.microsoft.com/en-us/library/system.object.gethashcode%28v=vs.110%29.aspx\r\n> \r\n\u2022You should not assume that equal hash codes imply object equality. \r\n\r\n\r\n\u2022You should never persist or use a hash code outside the application domain in which it was created, because the same object may hash across application domains, processes, and platforms. \r\n\r\nIf changing GetHashCode would breang something it would be a bug due to misuse of the method.",
      "created_at": "2018-06-21T15:08:19Z",
      "updated_at": "2018-06-21T15:10:55Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "Ah wasn't aware of the second principle! In that case I shall change it use Mr Skeet's implementation",
      "created_at": "2018-06-21T16:10:47Z",
      "updated_at": "2018-06-21T16:10:47Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "Ok, I've written some tests in #7140. Please take a look.",
      "created_at": "2018-06-22T04:39:55Z",
      "updated_at": "2018-06-22T04:39:55Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Waiting #7140",
      "created_at": "2018-06-22T18:08:42Z",
      "updated_at": "2018-06-22T18:08:42Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "Going to change the hashcode logic to use .NET Core's native implementation",
      "created_at": "2018-06-25T16:23:39Z",
      "updated_at": "2018-06-25T16:23:39Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@rjmholt Please rebase to get new tests from #7140.",
      "created_at": "2018-06-28T03:00:04Z",
      "updated_at": "2018-06-28T03:00:31Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "It looks like this is passing all the new tests I wrote \ud83d\ude03 ",
      "created_at": "2018-06-28T21:52:52Z",
      "updated_at": "2018-06-28T21:52:52Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@BrucePay @daxian-dbw Could you please review the PR? ",
      "created_at": "2018-06-29T03:11:13Z",
      "updated_at": "2018-06-29T03:11:13Z"
    }
  ],
  "created_at": "2018-06-21T01:45:00Z",
  "number": 7126,
  "state": "closed",
  "title": "Refactor module specification logic",
  "updated_at": "2021-06-11T20:01:54Z"
}