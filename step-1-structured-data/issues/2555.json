{
  "_url": "https://github.com/PowerShell/PowerShell/issues/2555",
  "author": "daxian-dbw",
  "body": "This issue is mostly due to the fact that windows desktop has powershell workflow remote endpoint PSSessionConfiguration by default. PowerShell workflow is not supported in PS Core, and thus processing the workflow endpoint causes this issue.\n\nThis issue is related to #1798, and they may have the same root cause.\n## Steps to reproduce\n\n``` powershell\n$sessionConfigurationDll = [IO.Path]::Combine([IO.Path]::GetTempPath(), \"ImplicitRemotingRestrictedConfiguration$(Get-Random).dll\")\nAdd-Type -OutputAssembly $sessionConfigurationDll -TypeDefinition @\"\n\nusing System;\nusing System.Collections.Generic;\nusing System.Management.Automation;\nusing System.Management.Automation.Runspaces;\nusing System.Management.Automation.Remoting;\n\nnamespace MySessionConfiguration\n{\n    public class MySessionConfiguration : PSSessionConfiguration\n    {\n        public override InitialSessionState GetInitialSessionState(PSSenderInfo senderInfo)\n        {\n            //System.Diagnostics.Debugger.Launch();\n            //System.Diagnostics.Debugger.Break();\n\n            InitialSessionState iss = InitialSessionState.CreateRestricted(System.Management.Automation.SessionCapabilities.RemoteServer);\n\n            // add Out-String for testing stuff\n            iss.Commands[\"Out-String\"][0].Visibility = SessionStateEntryVisibility.Public;\n\n            // remove all commands that are not public\n            List<string> commandsToRemove = new List<string>();\n            foreach (SessionStateCommandEntry entry in iss.Commands)\n            {\n                List<SessionStateCommandEntry> sameNameEntries = new List<SessionStateCommandEntry>(iss.Commands[entry.Name]);\n                if (!sameNameEntries.Exists(delegate(SessionStateCommandEntry e) { return e.Visibility == SessionStateEntryVisibility.Public; }))\n                {\n                    commandsToRemove.Add(entry.Name);\n                }\n            }\n\n            foreach (string commandToRemove in commandsToRemove)\n            {\n                iss.Commands.Remove(commandToRemove, null /* all types */);\n            }\n\n            return iss;\n        }\n    }\n}\n\"@\n\nGet-PSSessionConfiguration ImplicitRemotingRestrictedConfiguration* | Unregister-PSSessionConfiguration -Force\n\n$myConfiguration = Register-PSSessionConfiguration `\n    -Name ImplicitRemotingRestrictedConfiguration `\n    -ApplicationBase (Split-Path $sessionConfigurationDll) `\n    -AssemblyName (Split-Path $sessionConfigurationDll -Leaf) `\n    -ConfigurationTypeName \"MySessionConfiguration.MySessionConfiguration\" `\n    -Force\n```\n## Expected behavior\n\nRegister-PSSessionConfiguration runs successfully\n## Actual behavior\n\n```\nException calling \"Load\" with \"1\" argument(s): \"Could not load file or assembly\n'Microsoft.Powershell.Workflow.ServiceCore, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'. The\nsystem cannot find the file specified.\"\nAt line:33 char:9\n+         $serviceCore = [Reflection.Assembly]::Load(\"Microsoft.Powersh ...\n+         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : NotSpecified: (:) [], MethodInvocationException\n    + FullyQualifiedErrorId : FileNotFoundException\n```\n## Environment data\n\n``` powershell\n> $PSVersionTable\nPS C:\\> $PSVersionTable\n\nName                           Value\n----                           -----\nGitCommitId                    v6.0.0-alpha.11-51-ga0dbd11bc2fdd5f4b090b534043f582325535b2a-dirty\nPSVersion                      6.0.0-alpha\nCLRVersion\nPSEdition                      Core\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\nSerializationVersion           1.1.0.1\nPSRemotingProtocolVersion      2.3\nBuildVersion                   3.0.0.0\nWSManStackVersion              3.0\n```\n",
  "closed_at": "2017-09-19T22:27:46Z",
  "comments": [
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "The implicit remoting tests [\"Implicit remoting on restricted ISS\"](https://github.com/PowerShell/PowerShell/blob/master/test/powershell/Modules/Microsoft.PowerShell.Utility/Implicit.Remoting.Tests.ps1#L1499) are skipped due to this bug. So for whoever works on this bug, please update the tests accordingly when you resolve this bug.\n",
      "created_at": "2016-10-29T00:35:57Z",
      "updated_at": "2016-10-29T00:35:57Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "Per conversation with @HemantMahawar and @SteveL-MSFT, anyone using `GetInitialSessionState` to create restricted endpoints is broken (including Exchange). Leaving in 6.0.0 for now (especially if we decide to ship `GetInitialSessionState` in \"PowerShell Standard\" /cc @lzybkr). ",
      "created_at": "2017-05-22T18:32:18Z",
      "updated_at": "2017-05-22T18:32:18Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "This doesn't repro anymore in Beta.7 (possibly earlier):\r\n\r\n```\r\n$myConfiguration\r\n\r\n\r\n   WSManConfig: Microsoft.WSMan.Management\\WSMan::localhost\\Plugin\r\n\r\nType            Keys                                Name\r\n----            ----                                ----\r\nContainer       {Name=ImplicitRemotingRestricted... ImplicitRemotingRestrictedConfiguration\r\n```",
      "created_at": "2017-09-19T22:26:57Z",
      "updated_at": "2017-09-19T22:26:57Z"
    }
  ],
  "created_at": "2016-10-28T17:08:37Z",
  "labels": [
    "WG-Cmdlets",
    "Resolution-Fixed"
  ],
  "number": 2555,
  "state": "closed",
  "title": "Register-PSSessionConfiguration throws error when running in PS Core on Windows desktop",
  "updated_at": "2017-09-19T22:27:50Z"
}