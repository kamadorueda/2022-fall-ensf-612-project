{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13267",
  "author": "tobiaskolkmann",
  "body": "## Summary of the new feature/enhancement\r\n\r\nAs an IT-Administrator I need to delete files according to GDPR. In a lot of cases it is required to make sure that a deleted file cannot be restored, so I need a way to securely erase files in Powershell. \r\nThe cmdlet should be native in powershell, so you don't have to install any additional software\r\n\r\n## Proposed technical implementation details (optional)\r\n\r\nI think the implementation should be in the original Remove-Item cmdlet. If I add the argument \"-Secure\", I want the file to be overridden.\r\nOverride-Content: The most basic function would be to override all bytes the file uses on the harddisk with zeroes. In other cases it may be required to override the bytes with random values.\r\nRepetitions: It may also be required to enter a number of repetions for the override if one override is not sufficient.\r\nExample: Remove-Item C:\\Users\\Tobias\\Secret -Recurse -Secure random -Rep 3\r\n^--> This cmd should securely erase C:\\Users\\Tobias\\Secret with all subfolders and files by overriding all sectors that contain content of the affected files on the volume three times with a random sequence and of course remove the entry in the MFT as before.",
  "closed_at": "2020-07-30T00:00:19Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "I'm pretty sure this is doable even if there isn't a specific API for this kind of thing.\r\n\r\n1. Check file size in bytes\r\n2. Prepare byte array of zeroes or random data\r\n3. Write file X times (possibly recreating byte array each time).\r\n\r\nThe only difficult part here is that this would probably have to be implemented in the filesystem provider itself if we wanted a core implementation, it's not something you could add to the general-purpose cmdlet directly.",
      "created_at": "2020-07-24T14:26:13Z",
      "updated_at": "2020-07-24T14:26:13Z"
    },
    {
      "author": "KalleOlaviNiemitalo",
      "author_association": "NONE",
      "body": "[GNU coreutils documentation of `shred`](https://www.gnu.org/software/coreutils/manual/html_node/shred-invocation.html) warns that just overwriting the file several times does not erase all copies on some types of file systems or devices.\r\n\r\nOn Windows, [FSCTL_SET_ZERO_ON_DEALLOCATION](<https://docs.microsoft.com/windows/win32/api/winioctl/ni-winioctl-fsctl_set_zero_on_deallocation> \"FSCTL_SET_ZERO_ON_DEALLOCATION - Win32 apps | Microsoft Docs\") and [FSCTL_FILE_LEVEL_TRIM](<https://docs.microsoft.com/windows/win32/api/winioctl/ni-winioctl-fsctl_file_level_trim> \"FSCTL_FILE_LEVEL_TRIM - Win32 apps | Microsoft Docs\") look interesting but are not supported by ReFS.",
      "created_at": "2020-07-24T15:35:33Z",
      "updated_at": "2020-07-24T15:35:33Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "[This StackOverflow thread](https://stackoverflow.com/questions/4147775/securely-deleting-a-file-in-c-net) has some interesting points that seem worth considering.\r\n\r\nUnless there's an API available from .NET it might not be worth implementing a tool into PowerShell itself, since it seems like we'd have to maintain syscalls for every supported OS (and figure out the hard way which ones don't support such an API).",
      "created_at": "2020-07-24T15:41:05Z",
      "updated_at": "2020-07-24T15:41:05Z"
    },
    {
      "author": "tobiaskolkmann",
      "author_association": "NONE",
      "body": "> [GNU coreutils documentation of `shred`](https://www.gnu.org/software/coreutils/manual/html_node/shred-invocation.html) warns that just overwriting the file several times does not erase all copies on some types of file systems or devices.\r\n\r\nThat's true. But I suppose that desktop apps got the same problem... we may never find a way to fully delete the whole content of previous versions of a file (without previously encrypting it). And of course there may be VSS copies or backups containing the file as well.\r\nBut I think \"overwriting\" a file should suffice as a feasible way to permanently and \"unrecoverably\" delete files accourding to GDPR requirements.\r\n\r\n\"If\" there is a feasible way, that is to say. \r\n\r\n\r\nA workaround might be: filling ALL empty space with zeroes/random content. But that might confuse the changed block transfer driver for our backup software. May also be very IO-intense, so I'd prefer a \"knive\" solution over the \"sledgehammer\".",
      "created_at": "2020-07-27T14:23:05Z",
      "updated_at": "2020-07-27T14:23:05Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "It is very sensitive area. We could implement this if all OS-s implemented the function in a standard way. But they haven't. So my conclusion we can not implement this because we will confuse users.\r\nUsers should use tools which work reliable in their environment.",
      "created_at": "2020-07-28T15:50:18Z",
      "updated_at": "2020-07-28T15:50:18Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2020-07-30T00:00:17Z",
      "updated_at": "2020-07-30T00:00:17Z"
    }
  ],
  "created_at": "2020-07-24T10:41:29Z",
  "labels": [
    "Issue-Enhancement",
    "Resolution-Answered",
    "WG-Cmdlets-Management"
  ],
  "number": 13267,
  "state": "closed",
  "title": "Feature Request: Secure Erase | Remove-Item",
  "updated_at": "2020-07-30T00:00:19Z"
}