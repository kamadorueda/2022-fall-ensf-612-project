{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11558",
  "author": "xtqqczze",
  "body": "# PR Summary\r\n\r\n* Remove Unicode BOM from code files (#11546 was incomplete)\r\n* Insert final newline into code files, as per `.vscode/settings.json`\r\n* Clean up use of `BeOfType` parameter: remove unnecessary braces\r\n\r\n## PR Context\r\n\r\n* Follow-up to #11546\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n",
  "closed_at": "2020-01-24T19:00:38Z",
  "comments": [
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov PR is ready to merge, CodeFactor issues are not new.",
      "created_at": "2020-01-11T18:00:33Z",
      "updated_at": "2020-01-11T18:00:33Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "> Pass 'BeOfType' parameter as [RuntimeType] instead of [string]\r\n\r\nI don't think changes related to this one are needed. `-BeOfType` takes a string as the type name, and this is how it's used in [Pester's sample code](https://github.com/pester/Pester/wiki/Should#beoftype).",
      "created_at": "2020-01-13T20:19:00Z",
      "updated_at": "2020-01-13T20:37:53Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "@daxian-dbw Judging from [BeOfType tests](https://github.com/pester/Pester/blob/master/Functions/Assertions/BeOfType.Tests.ps1), it is intended for `-BeOfType` to take a RuntimeType as well as a string. Apparently this is a documentation issue for pester.\r\n\r\nPassing a RuntimeType might be preferable because:\r\n* it could be recognised as a type in the AST\r\n* the type object is constructed in the same scope as the assertion, e.g.:\r\n```powershell\r\nusing namespace System.Management.Automation\r\nDescribe \"scope test\"  {\r\n    $p = [ActionPreference]::Continue\r\n    it \"should recognise type passed explicitly\" {\r\n        $p | Should -BeOfType ([ActionPreference]) # Passes\r\n    }\r\n    it \"should recognise type passed as string\" {\r\n        $p | Should -BeOfType ActionPreference     # Fails\r\n    }\r\n}\r\n```\r\n",
      "created_at": "2020-01-13T23:49:57Z",
      "updated_at": "2020-01-13T23:58:06Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Usually we use `$p | Should -BeOfType [ActionPreference]`",
      "created_at": "2020-01-14T03:36:10Z",
      "updated_at": "2020-01-14T03:36:10Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov The parentheses are necessary for the parser to treat the token `[ActionPreference]` as an expression. Otherwise it is parsed as a string anyway:\r\n ```\r\n$p | Should -BeOfType [ActionPreference]   # Fails\r\n```\r\n",
      "created_at": "2020-01-14T10:18:30Z",
      "updated_at": "2020-01-14T10:18:30Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@xtqqczze I won't say either a RuntimeType or a string is preferable. Both are officially supported and both are useful. If you don't expect the type resolution to depend on anything from your script scope, then using a string is just fine. So I don't think it's necessary to change all `-BeOfType` instances to use a RuntimeType. We will not enforce this in our tests and gradually, it will again be a mix of both in our tests.",
      "created_at": "2020-01-14T17:16:30Z",
      "updated_at": "2020-01-14T17:16:30Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "rebased to resolve merge confilcts",
      "created_at": "2020-01-15T13:54:07Z",
      "updated_at": "2020-01-15T13:54:07Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.1.0-preview.1` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.1.0-preview.1)\n",
      "created_at": "2020-03-26T17:44:43Z",
      "updated_at": "2020-03-26T17:44:43Z"
    }
  ],
  "created_at": "2020-01-11T17:18:18Z",
  "number": 11558,
  "state": "closed",
  "title": "Fix pester tests syntax",
  "updated_at": "2020-05-06T01:26:18Z"
}