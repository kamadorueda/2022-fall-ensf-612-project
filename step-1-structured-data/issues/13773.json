{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13773",
  "author": "craibuc",
  "body": "## Steps to reproduce\r\n\r\n### Create a module\r\n\r\n- Create a module `MyModule` that has a `Public` and `Private` subfolder.  Add a script (e.g. `Test-Foo.ps1`) to `Public` and `.keep` to `Private` (no other files or folders should be in `Private`).\r\n- Add this to the module's `psm1` file:\r\n```powershell\r\n\"$PSScriptRoot\\Public\\*.ps1\", \"$PSScriptRoot\\Private\\*.ps1\" | Get-ChildItem | \r\n    Where-Object { $_.Name -like '*.ps1' -and $_.Name -notlike '__*' -and $_.Name -notlike '*.Tests*' } | \r\n        ForEach-Object {\r\n            # dot-source script\r\n            . $_\r\n        }\r\n```\r\n- Publish the module to a repository:\r\n```powershell\r\nPublish-Module -name ./MyModule -Repository MyRepository\r\n```\r\n- Install the module on a different machine:\r\n```powershell\r\nInstall-Module MyModule -Repository MyRepository\r\n```\r\n### Create a script that references the module\r\n\r\n- `Test-Requires.ps1`\r\n```powershell\r\n#Requires -Modules MyModule\r\n\r\n[CmdletBinding()]\r\nparam ()\r\n\r\nWrite-Host 'Hello, world'\r\n```\r\n- Publish the script to a repository:\r\n```powershell\r\nPublish-Script -name ./Test-Requires.ps1 -Repository MyRepository\r\n```\r\n- Install the module on a different machine:\r\n```powershell\r\nInstall-Script Test-Requires -Repository MyRepository\r\n```\r\n\r\n- Run the script\r\n```powershell\r\n./Test-Script.ps1\r\n```\r\n\r\n## Expected behavior\r\n\r\n```powershell\r\nHello, world\r\n```\r\n\r\n## Actual behavior\r\n\r\n### First execution\r\n```none\r\nThe script 'Test-Requires.ps1' cannot be run because the following modules that are specified by the \"#requires\" statements of the script are missing: MyModule.\r\n```\r\n\r\n### Second execution\r\n```powershell\r\nHello, world\r\n```\r\n\r\n## Solution\r\nFor whatever reason, `Publish-Module` doesn't include empty folders (`Private` in this situation).  When the module is loaded manually (`Import-Module MyModule`), the error generated by `Get-ChildItem` is clearly visible.   Unfortunately, this error message isn't reported by logic that is invoked by the `#requires` directive.\r\n\r\nAdding `Get-ChildItem -ErrorAction SilentlyContinue` to the script fixes the problem.\r\n\r\n```powershell\r\n\"$PSScriptRoot\\Public\\*.ps1\", \"$PSScriptRoot\\Private\\*.ps1\" | Get-ChildItem -ErrorAction SilentlyContinue | \r\n    Where-Object { $_.Name -like '*.ps1' -and $_.Name -notlike '__*' -and $_.Name -notlike '*.Tests*' } | \r\n        ForEach-Object {\r\n            # dot-source script\r\n            . $_\r\n        }\r\n```\r\n\r\n## Environment data\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.3\r\nPSEdition                      Core\r\nGitCommitId                    7.0.3\r\nOS                             Microsoft Windows 10.0.14393\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": null,
  "comments": [],
  "created_at": "2020-10-12T20:52:34Z",
  "labels": [
    "Issue-Question",
    "WG-Engine"
  ],
  "number": 13773,
  "state": "open",
  "title": "#requires error message does not accurately describe why a module fails to load",
  "updated_at": "2020-10-14T05:13:56Z"
}