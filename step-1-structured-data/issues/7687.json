{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7687",
  "author": "mi-hol",
  "body": "The [currently published instructions for Ubuntu 18.04  direct-download](https://docs.microsoft.com/en-us/powershell/scripting/setup/installing-powershell-core-on-linux?view=powershell-6#installation-via-direct-download---ubuntu-1804) reference an out-of-date production version 6.0.3 and does not mention the preview versions like RC1. This is a re-occurring issue for each release (just search closed issues).\r\nI wonder how this can be fixed once for all times?\r\n\r\nA meta layer for artifacts where the always changing name is just an attribute came to mind.\r\nThis is a wider issue affecting nearly every IT project so github should add such a feature.\r\nAS interim PlatyPS might be a solution (note: just an idea I am not familiar with it)\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "mi-hol",
      "author_association": "NONE",
      "body": "@SteveL-MSFT From my view the out-of-date file names in all 'direct download instruction' could be a reason why for example RC1 is not getting installed by a larger user base as manifested in the Community Dashboard.",
      "created_at": "2018-09-02T09:27:35Z",
      "updated_at": "2018-09-02T09:28:09Z"
    },
    {
      "author": "binaryWard",
      "author_association": "NONE",
      "body": "I am not sure if the instructions or the release listed on github is the problem.  I have tried this on a fresh Ubuntu 18.04 install with all packages updated.\r\n\r\nI have not installed a previous version of PowerShell.  The only items installed before attempting PowerShell install was installing Docker and Docker-Compose using their repositories.\r\n\r\nWhen using the repository instructions I get the following dependency error.\r\n```\r\nThe following packages have unmet dependencies: \r\npowershell-preview : Depends: liblttng-ust0 but it is not installable\r\nE: Unable to correct problems, you have held broken packages.\r\n```\r\n\r\nWhen I attempted to use the .deb package directly it also failed to installed and ended up removing itself because of the failed dependencies.\r\n\r\n```\r\nPreparing to unpack powershell-preview_6.1.0.rc.1-1.ubuntu.18.04_amd64.deb ...\r\nUnpacking powershell-preview (6.1.0~rc.1-1.ubuntu.18.04) ...\r\ndpkg: dependency problems prevent configuration of powershell-preview:\r\n powershell-preview depends on liblttng-ust0; however:\r\n  Package liblttng-ust0 is not installed.\r\n\r\ndpkg: error processing package powershell-preview (--install):\r\n dependency problems - leaving unconfigured\r\nProcessing triggers for man-db (2.8.3-2) ...\r\nErrors were encountered while processing:\r\n powershell-preview\r\n\r\n\r\n# apt-get install -f\r\nReading package lists... Done\r\nBuilding dependency tree\r\nReading state information... Done\r\nCorrecting dependencies... Done\r\nThe following packages will be REMOVED:\r\n  powershell-preview\r\n0 upgraded, 0 newly installed, 1 to remove and 0 not upgraded.\r\n1 not fully installed or removed.\r\nAfter this operation, 153 MB disk space will be freed\r\n```",
      "created_at": "2018-09-03T19:25:03Z",
      "updated_at": "2018-09-03T19:25:03Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@mi-hol agree that we should try to come up with something static rather than trying to keep the doc updated to latest versions.  Don't have a good solution off the top of my head than to say something like \"download latest release\" and have the version in the sample be generic like \"powershell_6.1.0-preview.ubuntu.18.04_amd64.deb\" and a note saying: \"replace the example version with the specific version\".\r\n\r\n@binaryWard your issue is a different problem that needs to be looked at",
      "created_at": "2018-09-05T20:28:50Z",
      "updated_at": "2018-09-05T20:28:50Z"
    },
    {
      "author": "mi-hol",
      "author_association": "NONE",
      "body": "@SteveL-MSFT while I understand the reasoning for a 'low tech' text-only solution, I had actually hoped for a 'high tech' solution.\r\nPlatyPS's schema looked to me like a great starting point\r\n```\r\nschema: 2.0.0\r\nexternal help file: {file name for `New-ExternalHelp`}.xml\r\n```\r\n",
      "created_at": "2018-09-06T20:11:02Z",
      "updated_at": "2018-09-06T20:12:32Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@binaryWard I created a fresh 18.04 and didn't have a problem installing 6.1.0-RC.  Try this:\r\n\r\n```bash\r\nwget -q https://packages.microsoft.com/config/ubuntu/18.04/packages-microsoft-prod.deb\r\nsudo dpkg -i ./packages-microsoft-prod.deb \r\nsudo apt update\r\nsudo apt install powershell-preview\r\n```\r\n",
      "created_at": "2018-09-07T17:24:41Z",
      "updated_at": "2018-09-07T17:24:41Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "I was really hoping that after the 6.1 GA release, all we had to do to install PS Core on Ubuntu was simply execute:\r\n```\r\nsudo apt update\r\nsudo apt install -y powershell\r\n```\r\nHas there been any progress on getting PS Core into the official Canonical apt repo?\r\n",
      "created_at": "2018-09-07T18:13:40Z",
      "updated_at": "2018-09-07T18:13:40Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@rkeithhill Getting into an official repo essentially means that distro has accepted the responsibility of maintaining and servicing a fork of your code in their code base.  This is why different distros have different versions of some common utilities and they don't necessarily always move to the latest version.  On the other hand, we do publish to the Snap store which shifts the maintenance of the packages back to the package owners instead of the distro owners.  This means that you can just run:\r\n\r\n> sudo snap install powershell --classic\r\n\r\nOn systems that have the Snap client by default.  Independent of that, we are more likely to succeed on getting PSCore6 in Azure Linux images by default.",
      "created_at": "2018-09-07T22:32:19Z",
      "updated_at": "2018-09-07T22:32:19Z"
    },
    {
      "author": "binaryWard",
      "author_association": "NONE",
      "body": "@SteveL-MSFT  \r\nI realize I didn't state if it was the Ubuntu 18.04 workstation or server.  Ubuntu Server has a new installer \"Subiquity\" which has the \"live\" in the iso filename and is the default installer. The older installer is obtained through the \"alternative downloads\" and has a filename without \"live\".\r\n\r\nUbuntu Server 18.04 \"alternative download\" .iso worked. I was able to use the apt repo instructions and install the powershell-preview.\r\n\r\n```\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.1.0-rc.1\r\nPSEdition                      Core\r\nGitCommitId                    6.1.0-rc.1\r\nOS                             Linux 4.15.0-34-generic #37-Ubuntu SMP Mon Aug 27 15:21:48 UTC 2018\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n```\r\n\r\nThe Ubuntu Server 18.04 -live- still gives me the error but I can try that again.  The new installer has an interesting change where there is a \"powershell\" to select in the installer.\r\n\r\nIf I can recreate this problem I will create a new issue.  At first I thought it was related to the documentation but seems there could be something else.\r\n\r\n\r\n",
      "created_at": "2018-09-12T21:04:26Z",
      "updated_at": "2018-09-12T21:04:26Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@binaryWard would be great if you can post a screenshot of where the installer has `powershell` as an option.  Wasn't aware they did that.",
      "created_at": "2018-09-21T21:35:08Z",
      "updated_at": "2018-09-21T21:35:08Z"
    },
    {
      "author": "binaryWard",
      "author_association": "NONE",
      "body": "@SteveL-MSFT if this works the following link should be a screenshot of the \"live\" iso using the newer Ubuntu Installer.\r\n![powershell begin it has](https://user-images.githubusercontent.com/389969/46301108-02908b80-c56b-11e8-9301-175494d888bd.PNG)\r\n\r\n",
      "created_at": "2018-10-01T16:16:04Z",
      "updated_at": "2018-10-01T16:32:58Z"
    }
  ],
  "created_at": "2018-09-02T08:58:11Z",
  "number": 7687,
  "state": "open",
  "title": "Out-of-Date installation instruction  for Ubuntu 18.04 - how to solve once for all times?",
  "updated_at": "2018-10-01T16:32:58Z"
}