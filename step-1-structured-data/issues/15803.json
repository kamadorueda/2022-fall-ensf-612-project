{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15803",
  "author": "xtqqczze",
  "body": "_Tracking issue_: Fix [CA2213: Disposable fields should be disposed](https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2213) and remove suppressions.\r\n\r\nIn #15805, each rule violation will be suppressed like so:\r\n```csharp\r\n#pragma warning disable CA2213 // Disposable fields should be disposed\r\n        private Timer _timer;\r\n#pragma warning restore CA2213 // https://github.com/PowerShell/PowerShell/issues/15803\r\n```\r\n\r\nWe need to review every case and either fix as bug or suppress with description why it is not bug and maybe add more info in (XML) docs.\r\n\r\nSome of the rule violations may be false positives/unfixable/breaking change if the disposable has been injected via a property, etc.\r\n\r\n**TODO: after reviewing and fixing all violations listed here, please re-open https://github.com/PowerShell/PowerShell/pull/15805 to enable the CA2213 rule so as to make sure no violations in future.**\r\n\r\n## Rule violations\r\n\r\n- [ ] 1. https://github.com/PowerShell/PowerShell/blob/a4181ab57eb5f2caafbfc8995a8b1e60622ba43a/src/Microsoft.PowerShell.Commands.Management/cimSupport/cmdletization/cim/cimChildJobBase.cs#L169\r\n- [ ] 2. https://github.com/PowerShell/PowerShell/blob/a4181ab57eb5f2caafbfc8995a8b1e60622ba43a/src/Microsoft.PowerShell.Commands.Management/commands/management/Process.cs#L2186\r\n- [ ] 3. https://github.com/PowerShell/PowerShell/blob/a4181ab57eb5f2caafbfc8995a8b1e60622ba43a/src/Microsoft.PowerShell.Commands.Utility/commands/utility/WebCmdlet/StreamHelper.cs#L27\r\n- [ ] 4. https://github.com/PowerShell/PowerShell/blob/a4181ab57eb5f2caafbfc8995a8b1e60622ba43a/src/Microsoft.PowerShell.Commands.Utility/commands/utility/XmlCommands.cs#L673\r\n- [ ] 5. https://github.com/PowerShell/PowerShell/blob/a4181ab57eb5f2caafbfc8995a8b1e60622ba43a/src/Microsoft.PowerShell.ConsoleHost/host/msh/ConsoleHost.cs#L2981\r\n- [ ] 6. https://github.com/PowerShell/PowerShell/blob/a4181ab57eb5f2caafbfc8995a8b1e60622ba43a/src/Microsoft.PowerShell.ConsoleHost/host/msh/ConsoleHost.cs#L2987\r\n- [ ] 7. https://github.com/PowerShell/PowerShell/blob/a4181ab57eb5f2caafbfc8995a8b1e60622ba43a/src/System.Management.Automation/FormatAndOutput/common/BaseCommand.cs#L231\r\n- [ ] 8. https://github.com/PowerShell/PowerShell/blob/a4181ab57eb5f2caafbfc8995a8b1e60622ba43a/src/System.Management.Automation/engine/CommandSearcher.cs#L1069\r\n- [ ] 9. https://github.com/PowerShell/PowerShell/blob/a4181ab57eb5f2caafbfc8995a8b1e60622ba43a/src/System.Management.Automation/engine/CommandSearcher.cs#L1495\r\n- [ ] 10. https://github.com/PowerShell/PowerShell/blob/a4181ab57eb5f2caafbfc8995a8b1e60622ba43a/src/System.Management.Automation/engine/CommandSearcher.cs#L1661\r\n- [ ] 11. https://github.com/PowerShell/PowerShell/blob/a4181ab57eb5f2caafbfc8995a8b1e60622ba43a/src/System.Management.Automation/engine/CommandSearcher.cs#L1666\r\n- [ ] 12. https://github.com/PowerShell/PowerShell/blob/a4181ab57eb5f2caafbfc8995a8b1e60622ba43a/src/System.Management.Automation/engine/DscResourceSearcher.cs#L33\r\n- [ ] 13. https://github.com/PowerShell/PowerShell/blob/a4181ab57eb5f2caafbfc8995a8b1e60622ba43a/src/System.Management.Automation/engine/InternalCommands.cs#L379\r\n- [ ] 14. https://github.com/PowerShell/PowerShell/blob/a4181ab57eb5f2caafbfc8995a8b1e60622ba43a/src/System.Management.Automation/engine/MshCommandRuntime.cs#L2360\r\n- [ ] 15. https://github.com/PowerShell/PowerShell/blob/a4181ab57eb5f2caafbfc8995a8b1e60622ba43a/src/System.Management.Automation/engine/PSClassSearcher.cs#L39\r\n- [ ] 16. https://github.com/PowerShell/PowerShell/blob/a4181ab57eb5f2caafbfc8995a8b1e60622ba43a/src/System.Management.Automation/engine/debugger/debugger.cs#L1692\r\n- [ ] 17. https://github.com/PowerShell/PowerShell/blob/a4181ab57eb5f2caafbfc8995a8b1e60622ba43a/src/System.Management.Automation/engine/hostifaces/ConnectionBase.cs#L688\r\n- [ ] 18. https://github.com/PowerShell/PowerShell/blob/a4181ab57eb5f2caafbfc8995a8b1e60622ba43a/src/System.Management.Automation/engine/hostifaces/ConnectionBase.cs#L989\r\n- [ ] 19. https://github.com/PowerShell/PowerShell/blob/a4181ab57eb5f2caafbfc8995a8b1e60622ba43a/src/System.Management.Automation/engine/hostifaces/PowerShell.cs#L1940\r\n- [ ] 20. https://github.com/PowerShell/PowerShell/blob/a4181ab57eb5f2caafbfc8995a8b1e60622ba43a/src/System.Management.Automation/engine/remoting/client/Job.cs#L3829\r\n- [ ] 21. https://github.com/PowerShell/PowerShell/blob/a4181ab57eb5f2caafbfc8995a8b1e60622ba43a/src/System.Management.Automation/engine/remoting/client/Job2.cs#L529\r\n- [ ] 22. https://github.com/PowerShell/PowerShell/blob/a4181ab57eb5f2caafbfc8995a8b1e60622ba43a/src/System.Management.Automation/engine/remoting/client/remoterunspace.cs#L47\r\n- [ ] 23. https://github.com/PowerShell/PowerShell/blob/a4181ab57eb5f2caafbfc8995a8b1e60622ba43a/src/System.Management.Automation/engine/remoting/client/remoterunspace.cs#L1796\r\n- [ ] 24. https://github.com/PowerShell/PowerShell/blob/a4181ab57eb5f2caafbfc8995a8b1e60622ba43a/src/System.Management.Automation/engine/remoting/commands/InvokeCommandCommand.cs#L2021\r\n- [ ] 25. https://github.com/PowerShell/PowerShell/blob/a4181ab57eb5f2caafbfc8995a8b1e60622ba43a/src/System.Management.Automation/engine/remoting/commands/ReceiveJob.cs#L317\r\n- [ ] 26. https://github.com/PowerShell/PowerShell/blob/a4181ab57eb5f2caafbfc8995a8b1e60622ba43a/src/System.Management.Automation/engine/remoting/common/RemoteSessionHyperVSocket.cs#L141\r\n- [ ] 27. https://github.com/PowerShell/PowerShell/blob/a4181ab57eb5f2caafbfc8995a8b1e60622ba43a/src/System.Management.Automation/engine/remoting/common/RemoteSessionHyperVSocket.cs#L340\r\n- [ ] 28. https://github.com/PowerShell/PowerShell/blob/a4181ab57eb5f2caafbfc8995a8b1e60622ba43a/src/System.Management.Automation/engine/remoting/common/RemoteSessionNamedPipe.cs#L344\r\n- [ ] 29. https://github.com/PowerShell/PowerShell/blob/a4181ab57eb5f2caafbfc8995a8b1e60622ba43a/src/System.Management.Automation/engine/remoting/common/RemoteSessionNamedPipe.cs#L1010\r\n- [ ] 30. https://github.com/PowerShell/PowerShell/blob/a4181ab57eb5f2caafbfc8995a8b1e60622ba43a/src/System.Management.Automation/engine/remoting/fanin/OutOfProcTransportManager.cs#L482\r\n- [ ] 31. https://github.com/PowerShell/PowerShell/blob/a4181ab57eb5f2caafbfc8995a8b1e60622ba43a/src/System.Management.Automation/engine/remoting/fanin/OutOfProcTransportManager.cs#L1595\r\n- [ ] 32. https://github.com/PowerShell/PowerShell/blob/a4181ab57eb5f2caafbfc8995a8b1e60622ba43a/src/System.Management.Automation/utils/ObjectReader.cs#L491\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "1. cimChildJobBase.cs\r\n\r\n_sleepAndRetryTimer.Dispose() is called in StopJob() and last one is called in Dispose(). So we can suppress the case.",
      "created_at": "2021-08-09T07:26:35Z",
      "updated_at": "2021-08-09T07:26:35Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "2. Process.cs\r\n\r\n_outputWriter.Dispose(); is called in exit handler StreamClosing(). So we can suppress the case.",
      "created_at": "2021-08-09T07:29:49Z",
      "updated_at": "2021-08-09T07:29:49Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "3. WebCmdlet/StreamHelper.cs\r\n\r\n_originalStreamToProxy is never disposed. Web cmdlets write the object to Pipeline.  It is seem we could document this and recommend users to explicitly dispose the class if they need to free resources.\r\n",
      "created_at": "2021-08-09T07:34:48Z",
      "updated_at": "2021-08-18T09:45:54Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "4. XmlCommands.cs\r\n\r\n XmlReader _xr is never disposed. It is seem a bug.",
      "created_at": "2021-08-09T07:39:38Z",
      "updated_at": "2021-08-09T08:05:05Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "6. ConsoleHost.cs\r\n\r\nIt seems ConsoleHost i is not responsible for current  pipeline (runningCmd) but remoteRunspace is. No bug.\r\n ",
      "created_at": "2021-08-09T08:01:26Z",
      "updated_at": "2021-08-09T08:02:13Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "5. ConsoleHost.cs\r\n\r\nConsoleTextWriter _consoleWriter is never disposed. ConsoleHost has Dispose method. It is seem a bug.",
      "created_at": "2021-08-09T08:04:33Z",
      "updated_at": "2021-08-18T09:42:40Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "7. BaseCommand.cs\r\n\r\nDispose(); calls in InternalDispose(). So no bug. But perhaps we could use a standard pattern.",
      "created_at": "2021-08-09T08:10:08Z",
      "updated_at": "2021-08-09T08:10:08Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "8. CommandSearcher.cs\r\n\r\n_matchingCmdlet should be in Dispose(). It is a bug.",
      "created_at": "2021-08-09T08:27:07Z",
      "updated_at": "2021-08-09T08:27:07Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "9. CommandSearcher.cs\r\n\r\n_pathSearcher is in Dispose(). I wonder why it is alarmed.",
      "created_at": "2021-08-09T08:29:18Z",
      "updated_at": "2021-08-18T10:05:17Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "10. CommandSearcher.cs\r\n\r\n_matchingAlias should be in Dispose(). It is a bug.",
      "created_at": "2021-08-09T08:30:30Z",
      "updated_at": "2021-08-09T08:30:30Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "11. CommandSearcher.cs\r\n\r\n_matchingFunctionEnumerator should be in Dispose(). It is a bug.",
      "created_at": "2021-08-09T08:31:24Z",
      "updated_at": "2021-08-09T08:31:24Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "12. DscResourceSearcher.cs\r\n\r\n_matchingResource = null in Reset() and the Reset is called from Dispose(). It is a bug (we should dispose in Reset()).",
      "created_at": "2021-08-09T08:34:26Z",
      "updated_at": "2021-08-09T08:34:26Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "13. InternalCommands.cs\r\n\r\nI guess PSTaskChildJob-s  from _taskJob are disposed in ThreadPool but _taskJob itself is never disposed. I think it is bug.",
      "created_at": "2021-08-09T08:53:24Z",
      "updated_at": "2021-08-09T08:53:24Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "14. MshCommandRuntime.cs\r\n\r\nAllowWrite is not owner of the PipelineProcessor. No bug.",
      "created_at": "2021-08-09T08:57:12Z",
      "updated_at": "2021-08-09T08:57:12Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "15. PSClassSearcher.cs\r\n\r\n_matchingClass = null in Reset() and the Reset is called from Dispose(). It is a bug (we should dispose in Reset()).",
      "created_at": "2021-08-09T09:05:25Z",
      "updated_at": "2021-08-09T09:05:25Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "16. debugger.cs\r\n\r\nIt seems we could remove _psDebuggerCommand at all - it is used only once in `using` statement. Or is there async?",
      "created_at": "2021-08-09T09:14:08Z",
      "updated_at": "2021-08-09T09:39:20Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "17. ConnectionBase.cs\r\n\r\nRunspaceOpening  is disposed in LocalConnection.Dispose(). It is not a bug but we could refactor code so that dispose in RunspaceBase.\r\n",
      "created_at": "2021-08-09T09:19:46Z",
      "updated_at": "2021-08-09T09:19:46Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "18. ConnectionBase.cs\r\n\r\nConnectionBase is not an owner of _currentlyRunningPipeline. It is not a bug. Yes?",
      "created_at": "2021-08-09T09:22:01Z",
      "updated_at": "2021-08-09T09:22:01Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "19. PowerShell.cs\r\n\r\nIt seems PowerShell is not an owner of the _runspacePool.  So no bug. ",
      "created_at": "2021-08-09T09:27:19Z",
      "updated_at": "2021-08-09T09:27:19Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "20. Job.cs\r\n\r\nPSRemotingChildJob is not an owner of the _runspacePool. So no bug.",
      "created_at": "2021-08-09T09:30:02Z",
      "updated_at": "2021-08-09T09:30:02Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "21. Job2.cs\r\n\r\nContainerParentJob should dispose _tracer (Dispose() already is). It is a bug.\r\n",
      "created_at": "2021-08-09T09:32:19Z",
      "updated_at": "2021-08-09T09:35:20Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "22. remoterunspace.cs\r\n\r\nRemoteRunspace is not an owner of the _currentInvokeCommand. So no bug.",
      "created_at": "2021-08-09T09:36:54Z",
      "updated_at": "2021-08-09T09:36:54Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "23. remoterunspace.cs\r\n\r\nIt seems we could remove _psDebuggerCommand at all - it is used only once in `using` statement. Or is there async?",
      "created_at": "2021-08-09T09:39:47Z",
      "updated_at": "2021-08-09T09:39:47Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "24. InvokeCommandCommand.cs\r\n\r\nInvoke-Command calls _steppablePipeline.End() in EndProcessing() where Dispose() is called. So we can suppress the case.\r\n\r\n",
      "created_at": "2021-08-09T09:40:25Z",
      "updated_at": "2021-08-09T09:40:25Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "25. ReceiveJob.cs\r\n\r\n_tracer should be disposed in ReceiveJobCommand.Dispose(). It is a bug.",
      "created_at": "2021-08-09T09:42:43Z",
      "updated_at": "2021-08-09T09:42:43Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "26. VSocket.cs\r\n\r\n_tracer should be disposed in RemoteSessionHyperVSocketServer.Dispose(). It is a bug.",
      "created_at": "2021-08-09T09:43:41Z",
      "updated_at": "2021-08-09T09:43:41Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "27. VSocket.cs\r\n\r\n_tracer should be disposed in RemoteSessionHyperVSocketClient.Dispose(). It is a bug.",
      "created_at": "2021-08-09T09:44:33Z",
      "updated_at": "2021-08-09T09:44:33Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "28. RemoteSessionNamedPipe.cs\r\n\r\n_tracer should be disposed in RemoteSessionNamedPipeServer.Dispose(). It is a bug.",
      "created_at": "2021-08-09T09:46:25Z",
      "updated_at": "2021-08-09T09:46:25Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "29. RemoteSessionNamedPipe.cs\r\n\r\n_tracer should be disposed in NamedPipeClientBase.Dispose(). It is a bug.",
      "created_at": "2021-08-09T09:47:19Z",
      "updated_at": "2021-08-09T09:47:30Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "30. OutOfProcTransportManager.cs\r\n\r\n_tracer should be disposed in OutOfProcessClientSessionTransportManagerBase.Dispose(). It is a bug.",
      "created_at": "2021-08-09T09:49:26Z",
      "updated_at": "2021-08-09T09:49:26Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "31. OutOfProcTransportManager.cs\r\n\r\n_tracer should be disposed in SSHClientSessionTransportManager.Dispose(). It is a bug.",
      "created_at": "2021-08-09T09:50:15Z",
      "updated_at": "2021-08-09T09:50:15Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "32. ObjectReader.cs\r\n\r\n_enumerator should be disposed in PSDataCollectionReader<T, TResult>.Dispose(). It is a bug.",
      "created_at": "2021-08-09T09:52:53Z",
      "updated_at": "2021-08-09T09:52:53Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "WG-Engine discussed this today.\r\n\r\nWe agree that any valid violation of this rule should be fixed. Leaving as up for grabs.",
      "created_at": "2022-01-21T00:19:33Z",
      "updated_at": "2022-01-21T00:19:33Z"
    }
  ],
  "created_at": "2021-07-20T12:44:57Z",
  "number": 15803,
  "state": "open",
  "title": "Fix CA2213: Disposable fields should be disposed",
  "updated_at": "2022-01-21T00:19:33Z"
}