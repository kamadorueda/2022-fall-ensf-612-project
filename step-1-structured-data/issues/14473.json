{
  "_url": "https://github.com/PowerShell/PowerShell/issues/14473",
  "author": "luisaranda",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 and PowerShell 7+ issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6).\r\n\r\n-->\r\n\r\n## Steps to reproduce\r\n\r\nJust run some of the cmdlets on the international module\r\n\r\n```powershell\r\nGet-WinUserLanguageList\r\n```\r\n\r\n\r\n```powershell\r\nNew-WinUserLanguageList -Language \"en-US\"\r\n\r\n```\r\n## Expected behavior\r\n\r\nThis command is working on PowerShell 5.1 and on PowerShell 7.0.0\r\n\r\n```none\r\n$PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0\r\nOS                             Microsoft Windows 10.0.19042\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\n```powershell\r\n> Get-WinUserLanguageList\r\n\r\nLanguageTag     : en-US\r\nAutonym         : English (United States)\r\nEnglishName     : English\r\nLocalizedName   : English (United States)\r\nScriptName      : Latin\r\nInputMethodTips : {0409:00020409}\r\nSpellchecking   : True\r\nHandwriting     : False\r\n```\r\n```powershell\r\n> New-WinUserLanguageList -Language \"en-US\"\r\n\r\nLanguageTag     : en-US\r\nAutonym         : English (United States)\r\nEnglishName     : English\r\nLocalizedName   : English (United States)\r\nScriptName      : Latin\r\nInputMethodTips : {0409:00000409}\r\nSpellchecking   : True\r\nHandwriting     : False\r\n\r\n```\r\n\r\n## Actual behavior\r\n\r\n```powershell\r\n> Get-WinUserLanguageList\r\nGet-WinUserLanguageList: Cannot marshal 'parameter #2': Invalid managed/unmanaged type combination.\r\n```\r\n```powershell\r\n> New-WinUserLanguageList -Language \"en-US\"\r\nNew-WinUserLanguageList: Cannot marshal 'parameter #1': Invalid managed/unmanaged type combination.\r\n```\r\n\r\n## Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\n$PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.0\r\nPSEdition                      Core\r\nGitCommitId                    7.1.0\r\nOS                             Microsoft Windows 10.0.19042\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2020-12-23T12:00:10Z",
  "comments": [
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "Looks like the module uses a p/invoke signature including a `MarshalAs(UnmanagedType.HString)` decoration.  `HString` is the string type for Windows Runtime API's and is no longer supported by the marshaller.\r\n\r\nThe module would need to be changed to include it's own marshalling logic. This issue should probably be moved to [PowerShell/PowerShellModuleCoverage](https://github.com/PowerShell/PowerShellModuleCoverage).",
      "created_at": "2020-12-21T14:24:44Z",
      "updated_at": "2020-12-21T14:24:44Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2020-12-23T12:00:09Z",
      "updated_at": "2020-12-23T12:00:09Z"
    },
    {
      "author": "danstur",
      "author_association": "CONTRIBUTOR",
      "body": "@SeeminglyScience  Why is changing the marshalling behavior in a minor release that breaks public APIs (and one that is shipped with every single Windows installation so can't get any more widespread) not a violation of the breaking changes contract? \r\n\r\nGiven the speed with which Windows components get updated and the.. great interest in the PowerShellModuleCoverage repository this probably means the International module will be broken from 7.1 onwards.",
      "created_at": "2021-02-15T22:21:45Z",
      "updated_at": "2021-02-15T22:21:45Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "> @SeeminglyScience Why is changing the marshalling behavior in a minor release that breaks public APIs (and one that is shipped with every single Windows installation so can't get any more widespread) not a violation of the breaking changes contract?\r\n\r\nThe breaking change was in .NET itself, which the PS team does not typically consider to be part of their change contract.  That said, breaking changes are sometimes accepted in any release.  The [change contract](https://github.com/PowerShell/PowerShell/blob/master/docs/dev-process/breaking-change-contract.md) does not specify what release types can or cannot have breaking changes, though the PS team is pretty adverse to widely impacting breaking changes in general.",
      "created_at": "2021-02-16T15:04:10Z",
      "updated_at": "2021-02-16T15:04:10Z"
    }
  ],
  "created_at": "2020-12-21T05:09:58Z",
  "number": 14473,
  "state": "closed",
  "title": "Breaking changes made that impacted the International module cmdlets",
  "updated_at": "2021-02-16T15:04:10Z"
}