{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11983",
  "author": "codaamok",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 and PowerShell 7+ issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n\r\n-->\r\n\r\n# Steps to reproduce\r\n\r\nTake the scenario where you have a module installed and it exports a function named `Get-FunctionA`. You attempt to install another module from the psgallery where one of its exported functions is also named `Get-FunctionA`. No exception is printed to console however two records are in `$error`.\r\n\r\nIn Windows PowerShell 5.1, the user is given helpful error record immediately printed to console.\r\n\r\n![image](https://user-images.githubusercontent.com/6683266/75624606-cde49180-5bad-11ea-8e89-56aa2da7c5b9.png)\r\n\r\nThe `AutomatedLab.Common` module has functions named the same that `Indented.Net.IP` offers. So for the below I'll use those two modules\r\n\r\n```powershell\r\nInstall-Module AutomatedLab -Scope CurrentUser\r\nInstall-Module Indented.Net.Ip -Scope CurrentUser\r\n```\r\n\r\n# Expected behavior\r\n\r\n```none\r\nPS C:\\> install-module AutomatedLab -Scope CurrentUser\r\nPS C:\\> install-module indented.net.ip -Scope CurrentUser\r\n\r\nUntrusted repository\r\nYou are installing the modules from an untrusted repository. If you trust this repository, change its\r\nInstallationPolicy value by running the Set-PSRepository cmdlet. Are you sure you want to install the modules from     'PSGallery'?\r\nPackageManagement\\Install-Package : The following commands are already available on this system:'ConvertTo-BinaryIP,Co nvertTo-DecimalIP,ConvertTo-DottedDecimalIP,ConvertTo-Mask,ConvertTo-MaskLength,Get-BroadcastAddress,Get-NetworkAddres s,Get-NetworkRange,Get-NetworkSummary'. This module 'Indented.Net.IP' may override the existing commands. If you       still want to install this module 'Indented.Net.IP', use -AllowClobber parameter.\r\nAt C:\\Program Files\\WindowsPowerShell\\Modules\\PowerShellGet\\1.0.0.1\\PSModule.psm1:1809 char:21\r\n+ ...          $null = PackageManagement\\Install-Package @PSBoundParameters\r\n+                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    Exception\r\n    + FullyQualifiedErrorId : CommandAlreadyAvailable,Validate-ModuleCommandAlreadyAvailable,Microsoft.PowerShell.Pac     kageManagement.Cmdlets.InstallPackage\r\n\r\nPS C:\\>\r\n```\r\n\r\n# Actual behavior\r\n\r\n```none\r\nPS C:\\> install-module AutomatedLab -Scope CurrentUser\r\nPS C:\\> install-module indented.net.ip -Scope CurrentUser\r\nPS C:\\>\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-rc.3\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-rc.3\r\nOS                             Microsoft Windows 10.0.18363\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u0393\u00c7\u00aa}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n\r\n```\r\n",
  "closed_at": "2020-09-23T21:51:35Z",
  "comments": [
    {
      "author": "codaamok",
      "author_association": "NONE",
      "body": "Looks like PowerShell 7 has PackageManagement version 1.4.6.",
      "created_at": "2020-03-01T11:21:49Z",
      "updated_at": "2020-03-01T11:21:49Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@alerickson Could you please comment?",
      "created_at": "2020-03-02T17:50:15Z",
      "updated_at": "2020-03-02T17:50:15Z"
    },
    {
      "author": "alerickson",
      "author_association": "MEMBER",
      "body": "I think this is an issue with how the error's being captured and read in PowerShell.\r\nPWSH 6.2.4 w/ PowerShellGet 2.2.3 and PackageMangement 1.4.6 outputs the error as expected:\r\n![pwsh6 2 4jpg](https://user-images.githubusercontent.com/25858831/75718801-6cddbc00-5c88-11ea-9f30-9f467ea84b12.jpg)\r\nbut PWSH 7.0.0-rc.3 w/ PowerShellGet 2.2.3 and PackageMangement 1.4.6 \r\n![pwsh7 0 0-rc3 repro](https://user-images.githubusercontent.com/25858831/75718864-8aab2100-5c88-11ea-83e7-49e2b89d094c.jpg)\r\n\r\n\r\nWhen I try running the command in PowerShellGet that calls into PackageManagement to install, it throws the error and outputs as expected: \r\n![psget install](https://user-images.githubusercontent.com/25858831/75720960-47eb4800-5c8c-11ea-8584-625fbf87094e.jpg)\r\n",
      "created_at": "2020-03-02T21:49:21Z",
      "updated_at": "2020-03-02T21:49:21Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT It could be again in ConciseView.",
      "created_at": "2020-03-03T12:33:26Z",
      "updated_at": "2020-03-03T12:33:26Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "This doesn't repro for me, getting the expected error message.  If you notice the original error, it's about the collection being modified as the output is being created.  I think this is the same as https://github.com/PowerShell/PowerShell/issues/11797",
      "created_at": "2020-09-23T21:51:35Z",
      "updated_at": "2020-09-23T21:51:35Z"
    }
  ],
  "created_at": "2020-03-01T11:19:26Z",
  "number": 11983,
  "state": "closed",
  "title": "Installing module where commands already exist on system",
  "updated_at": "2020-09-23T21:51:46Z"
}