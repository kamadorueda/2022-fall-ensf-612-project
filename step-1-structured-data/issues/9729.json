{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9729",
  "author": "msftrncs",
  "body": "# Steps to reproduce\r\n\r\n```powershell\r\n$a. , $c++ # ++ applies against $c\r\n$a. $c++ # ++ applies against ($a.$c)\r\n$a. , $c++ ++ # error, final ++ applies against $c++ and not ($a. , $c++)\r\n$a.( , $c++)++ # this would work, if the member existed\r\n```\r\n\r\nThis is a very bizarre situation, but I was looking at it from a grammar scoping context.  I expected to scope the `++` after `$c` against the property that was being accessed, but its not what seems to happen.\r\n",
  "closed_at": null,
  "comments": [],
  "created_at": "2019-05-25T06:06:47Z",
  "number": 9729,
  "state": "open",
  "title": "member reference with array operator changes syntax",
  "updated_at": "2019-05-25T07:20:11Z"
}