{
  "_url": "https://github.com/PowerShell/PowerShell/issues/8419",
  "author": "mklement0",
  "body": "On Unix-like platforms, with `SIGPIPE` signals being ignored, as in Ruby, writing to a broken pipe (a pipe whose reader process has since terminated) returns standard error code `EPIPE`.\r\n\r\nHowever, it seems that in PowerShell - unlike in POSIX-like shells such as `bash` - the error code is not relayed to the writing process.\r\n\r\n# Steps to reproduce\r\n\r\nWrite 100,000 lines via Ruby, but cause the pipe to break via `head -n 1` exiting after having received the 1st input line:\r\n\r\n```powershell\r\nruby -e '(1..1e5).each do |i| puts i end' | head -n 1\r\n```\r\n\r\n# Expected behavior\r\n\r\n```none\r\n1\r\n-e:1:in `write': Broken pipe @ io_write - <STDOUT> (Errno::EPIPE)\r\n\tfrom -e:1:in `puts'\r\n\tfrom -e:1:in `puts'\r\n\tfrom -e:1:in `block in <main>'\r\n\tfrom -e:1:in `each'\r\n\tfrom -e:1:in `<main>'\r\n```\r\n\r\n# Actual behavior\r\n\r\n```none\r\n1\r\n```\r\n\r\nThat is, the Ruby code never saw the `EPIPE` standard error code that results from writing to a broken pipe while `SIGPIPE` signals are being ignored.\r\n\r\n```none\r\nPowerShell Core v6.2.0-preview.2 on macOS 10.14.1\r\nPowerShell Core v6.2.0-preview.2 on Ubuntu 18.04.1 LTS\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "For reference https://github.com/PowerShell/PowerShell/pull/2450\r\n",
      "created_at": "2018-12-08T14:03:48Z",
      "updated_at": "2018-12-08T14:03:48Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Seems the issue could be fixed with #8420. ",
      "created_at": "2018-12-08T14:04:50Z",
      "updated_at": "2018-12-08T14:04:50Z"
    }
  ],
  "created_at": "2018-12-07T04:41:50Z",
  "labels": [
    "WG-Engine"
  ],
  "number": 8419,
  "state": "open",
  "title": "Native error codes are masked in PowerShell pipelines on Unix-like platforms",
  "updated_at": "2018-12-08T14:04:50Z"
}