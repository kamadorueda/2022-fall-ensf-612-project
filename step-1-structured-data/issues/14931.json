{
  "_url": "https://github.com/PowerShell/PowerShell/issues/14931",
  "author": "ghost",
  "body": "Is there a way to permanently disable PowerShell version 2 without uninstalling it (e.g. Using Add\\Remove Windows Features) or PowerShell commands (DISM) ?\r\n\r\nIs there a registry key or DLL that can be blocked that will permanently disable PowerShell V2 without uninstalling it ?\r\n\r\nThank you\r\n",
  "closed_at": "2021-03-06T12:00:05Z",
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I think your best option is to change the ACL on the v2 dlls to deny access to everyone.",
      "created_at": "2021-03-04T01:08:12Z",
      "updated_at": "2021-03-04T01:08:12Z"
    },
    {
      "author": "ghost",
      "author_association": "NONE",
      "body": "> I think your best option is to change the ACL on the v2 dlls to deny access to everyone.\r\n\r\nAnd which DLLs are those ? Unless I've missed something while searching, I could find no designated PowerShell Version 2 DLLs.\r\n\r\nThanks",
      "created_at": "2021-03-04T01:34:56Z",
      "updated_at": "2021-03-04T03:06:53Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "```console\r\nPS> powershell -version 2\r\nWindows PowerShell\r\nCopyright (C) 2009 Microsoft Corporation. All rights reserved.\r\n\r\nPS C:\\Windows\\Microsoft.NET> $psversiontable\r\n\r\nName                           Value\r\n----                           -----\r\nCLRVersion                     2.0.50727.9151\r\nBuildVersion                   6.1.7600.16385\r\nPSVersion                      2.0\r\nWSManStackVersion              2.0\r\nPSCompatibleVersions           {1.0, 2.0}\r\nSerializationVersion           1.1.0.1\r\nPSRemotingProtocolVersion      2.1\r\n\r\n\r\nPS C:\\Windows\\Microsoft.NET> [system.appdomain]::currentdomain.getassemblies()\r\n\r\nGAC    Version        Location\r\n---    -------        --------\r\nTrue   v2.0.50727     C:\\Windows\\Microsoft.NET\\Framework64\\v2.0.50727\\mscorlib.dll\r\nTrue   v2.0.50727     C:\\WINDOWS\\assembly\\GAC_MSIL\\Microsoft.PowerShell.ConsoleHost\\1.0.0.0__31bf3856ad364e35\\Microsoft.PowerShell.ConsoleHost.dll\r\nTrue   v2.0.50727     C:\\WINDOWS\\assembly\\GAC_MSIL\\System.Management.Automation\\1.0.0.0__31bf3856ad364e35\\System.Management.Automation.dll\r\nTrue   v2.0.50727     C:\\WINDOWS\\assembly\\GAC_MSIL\\System\\2.0.0.0__b77a5c561934e089\\System.dll\r\nTrue   v2.0.50727     C:\\WINDOWS\\assembly\\GAC_MSIL\\System.Xml\\2.0.0.0__b77a5c561934e089\\System.Xml.dll\r\nTrue   v2.0.50727     C:\\WINDOWS\\assembly\\GAC_MSIL\\Microsoft.PowerShell.Commands.Diagnostics\\1.0.0.0__31bf3856ad364e35\\Microsoft.PowerShell.Commands.Diagnostics.dll\r\nTrue   v2.0.50727     C:\\WINDOWS\\assembly\\GAC_MSIL\\System.Configuration.Install\\2.0.0.0__b03f5f7f11d50a3a\\System.Configuration.Install.dll\r\nTrue   v2.0.50727     C:\\WINDOWS\\assembly\\GAC_MSIL\\Microsoft.WSMan.Management\\1.0.0.0__31bf3856ad364e35\\Microsoft.WSMan.Management.dll\r\nTrue   v2.0.50727     C:\\WINDOWS\\assembly\\GAC_MSIL\\Microsoft.WSMan.Runtime\\1.0.0.0__31bf3856ad364e35\\Microsoft.WSMan.Runtime.dll\r\nTrue   v2.0.50727     C:\\WINDOWS\\assembly\\GAC_64\\System.Transactions\\2.0.0.0__b77a5c561934e089\\System.Transactions.dll\r\nTrue   v2.0.50727     C:\\WINDOWS\\assembly\\GAC_MSIL\\Microsoft.PowerShell.Commands.Utility\\1.0.0.0__31bf3856ad364e35\\Microsoft.PowerShell.Commands.Utility.dll\r\nTrue   v2.0.50727     C:\\WINDOWS\\assembly\\GAC_MSIL\\Microsoft.PowerShell.Commands.Management\\1.0.0.0__31bf3856ad364e35\\Microsoft.PowerShell.Commands.Management.dll\r\nTrue   v2.0.50727     C:\\WINDOWS\\assembly\\GAC_MSIL\\System.Management\\2.0.0.0__b03f5f7f11d50a3a\\System.Management.dll\r\nTrue   v2.0.50727     C:\\WINDOWS\\assembly\\GAC_MSIL\\System.ServiceProcess\\2.0.0.0__b03f5f7f11d50a3a\\System.ServiceProcess.dll\r\nTrue   v2.0.50727     C:\\WINDOWS\\assembly\\GAC_MSIL\\Microsoft.PowerShell.Security\\1.0.0.0__31bf3856ad364e35\\Microsoft.PowerShell.Security.dll\r\nTrue   v2.0.50727     C:\\WINDOWS\\assembly\\GAC_MSIL\\System.DirectoryServices\\2.0.0.0__b03f5f7f11d50a3a\\System.DirectoryServices.dll\r\nTrue   v2.0.50727     C:\\WINDOWS\\assembly\\GAC_64\\System.Data\\2.0.0.0__b77a5c561934e089\\System.Data.dll\r\n```\r\n\r\nThe ones you probably just need to block are Microsoft.PowerShell.ConsoleHost and System.Management.Automation",
      "created_at": "2021-03-04T02:21:15Z",
      "updated_at": "2021-03-04T02:22:24Z"
    },
    {
      "author": "ghost",
      "author_association": "NONE",
      "body": "OK, I thought you meant DLLs outside of .NETFramework.\r\n\r\n> The ones you probably just need to block are Microsoft.PowerShell.ConsoleHost and System.Management.Automation\r\n\r\nThere is not a 1-to-1 correspondence of .NETFramework for each version of PowerShell, correct ?\r\n\r\nFor example, version 5+ are still using .NETFramework 4, correct ?\r\n\r\nThanks",
      "created_at": "2021-03-04T03:05:20Z",
      "updated_at": "2021-03-04T03:43:25Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@AppGuard that is correct, the assembly names are the same, but the versions are different.  As you can see in the list above, they are all v2.0.x",
      "created_at": "2021-03-05T03:02:16Z",
      "updated_at": "2021-03-05T03:02:16Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2021-03-06T12:00:04Z",
      "updated_at": "2021-03-06T12:00:04Z"
    }
  ],
  "created_at": "2021-03-02T22:54:10Z",
  "labels": [
    "Issue-Enhancement",
    "Resolution-Answered"
  ],
  "number": 14931,
  "state": "closed",
  "title": "How to Permanently Disable PowerShell V2 without Uninstalling It",
  "updated_at": "2021-03-06T12:00:05Z"
}