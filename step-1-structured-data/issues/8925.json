{
  "_url": "https://github.com/PowerShell/PowerShell/issues/8925",
  "author": "TylerLeonhardt",
  "body": "As called out in #8889...\r\n\r\nin regards to: https://github.com/PowerShell/PowerShell/blob/1be3f4cc0e465ae11ad8e59e9060f5a59e4762eb/src/System.Management.Automation/engine/remoting/common/RemoteSessionNamedPipe.cs#L555-L557\r\n\r\n@PaulHigin said:\r\n\r\n> This code attempts to dispose the default pipe server on process (appdomain) exit, but it is disabled for CORECLR and so is dead code. This code should be removed or fixed to dispose both the default and custom pipe server objects.",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": ".Net Core has \"context\" as appdomain replacement (and 3.0 will support assembly unload.)",
      "created_at": "2019-02-21T13:22:57Z",
      "updated_at": "2019-02-21T13:22:57Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "I don't mean that we need to dispose on AppDomain exit (since there is none) but that we should consider disposing on process exit (`AppDomain.CurrentDomain.ProcessExit` event is supported now).  We don't do it now but should look into whether it is needed, both for Windows and Linux platforms to ensure named pipe is cleaned up.",
      "created_at": "2019-02-21T17:39:13Z",
      "updated_at": "2019-02-21T17:39:13Z"
    }
  ],
  "created_at": "2019-02-20T17:54:33Z",
  "labels": [
    "Issue-Code Cleanup"
  ],
  "number": 8925,
  "state": "open",
  "title": "Investigate/code clean up ifdef in RemoteSessionNamedPipe.cs",
  "updated_at": "2019-02-21T17:39:14Z"
}