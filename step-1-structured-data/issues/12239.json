{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12239",
  "author": "somescout",
  "body": "# Description\r\n\r\nPowershell omits certain fields in foreach-object -parallel code block, for example Get-ADComputer correctly displays computer name in code block, but return empty string for any extra fields requested in Properties argument. When calling without -Parallel argument everything works as expected.\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\nGet-ADComputer w2 -Properties OperatingSystem | % -Parallel { $_.OperatingSystem }\r\n```\r\n\r\n# Expected behavior\r\n```\r\nWindows 10 Pro\r\n```\r\n\r\n# Actual behavior\r\n```\r\n<nothing>\r\n```\r\n# Environment data\r\n```\r\nPSVersion                      7.1.0-preview.1\r\nPSEdition                      Core\r\nGitCommitId                    7.1.0-preview.1\r\nOS                             Microsoft Windows 10.0.18363\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```",
  "closed_at": "2020-04-01T16:01:47Z",
  "comments": [
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "The `Parallel` parameter doesn't actually serialize anything since it's thread based instead of process based.\r\n\r\nThis is due to the `ActiveDirectory` module defining it's own `PSPropertyAdapter` and registering it on module import.\r\n\r\n@PaulHigin I know `RunspaceFactory.CreateRunspace` has some overloads that take a `TypeTable`.  I'm guessing no, but is there a publicly accessible way to obtain the current `TypeTable`? Eh that's probably not feasible anyway without some method of removing things like script members.",
      "created_at": "2020-04-01T13:34:38Z",
      "updated_at": "2020-04-01T13:34:38Z"
    },
    {
      "author": "somescout",
      "author_association": "NONE",
      "body": "So basically I could use something like this, as workaround\r\n```\r\nGet-ADComputer w2 -Properties OperatingSystem | % -Parallel { $_[\"OperatingSystem\"] }\r\n```\r\nIt is working, but it's inconsistent.",
      "created_at": "2020-04-01T13:45:33Z",
      "updated_at": "2020-04-01T13:45:33Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "@somescout Yeah that should work.  You said it's inconsistent, do you have an example that doesn't work? Or can otherwise elaborate? (I may be able to suggest a more consistent alternative if I know what doesn't work)",
      "created_at": "2020-04-01T13:49:47Z",
      "updated_at": "2020-04-01T13:50:28Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "This is another consequence of the fact that each foreach -parallel loop iteration runspace is intialized (or reset) to its default state, rather than the state of the current runspace running the cmdlet.\r\n\r\nI have created an Issue (#12240) to track this, and have linked this issue to that one.\r\nClosing this issue.",
      "created_at": "2020-04-01T16:01:47Z",
      "updated_at": "2020-04-01T16:01:47Z"
    }
  ],
  "created_at": "2020-04-01T09:10:15Z",
  "labels": [
    "Issue-Question"
  ],
  "number": 12239,
  "state": "closed",
  "title": "Foreach-Object Parallel serialization issue",
  "updated_at": "2020-04-01T16:01:47Z"
}