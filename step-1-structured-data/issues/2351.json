{
  "_url": "https://github.com/PowerShell/PowerShell/issues/2351",
  "author": "kittholland",
  "body": "<!--\n\nIf it is a bug report:\n- make sure you are able to repro it on the latest released version. \nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\n- Search the existing issues.\n- Refer to the [FAQ](../docs/FAQ.md).\n- Refer to the [known issues](../docs/KNOWNISSUES.md).\n- Fill out the following repro template\n\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\n-->\n## Steps to reproduce\n\n`Get-Service -Name Spooler | Select-Object -ExcludeProperty Status`\n## Expected behavior\n\nReturn a Selected.System.ServiceProcess.ServiceController object with all standard properties of System.ServiceProcess.ServiceController except Status.\n## Actual behavior\n\nReturns System.ServiceProcess.ServiceController object with all properties including status. \n\nTo get the desired behavior you must use the -Property parameter in conjunction with the -ExcludeProperty parameter, this is explained in the help documentation for select-object as: \n\n\"This parameter is effective only when the command also includes the Property parameter.\"\n\nI don't understand the case where you would want to declare to explicitly include a property, then exclude it again such as: \n\n`Get-Service -Name Spooler | Select-Object -Property Status -ExcludeProperty Status`\n\nTherefore the convention is to always pass \"-Property *\" when using the -ExcludeProperty parameter. I would suggest defaulting to -Property \\* when using the -ExcludeProperty cmdlet, if that would be considered a breaking change, I would suggest throwing an error if -ExcludeProperty is used without -Property indicating that you are missing a mandatory parameter since ExcludeProperty is dependent on -Property. \n## Environment data\n\n<!-- provide the output of $PSVersionTable -->\n\n``` powershell\n> $PSVersionTable\nName                           Value                                                                                                                                                                                                                                                                                                                      \n----                           -----                                                                                                                                                                                                                                                                                                                      \nPSVersion                      5.0.10586.63                                                                                                                                                                                                                                                                                                               \nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}                                                                                                                                                                                                                                                                                                    \nBuildVersion                   10.0.10586.63                                                                                                                                                                                                                                                                                                              \nCLRVersion                     4.0.30319.42000                                                                                                                                                                                                                                                                                                            \nWSManStackVersion              3.0                                                                                                                                                                                                                                                                                                                        \nPSRemotingProtocolVersion      2.3                                                                                                                                                                                                                                                                                                                        \nSerializationVersion           1.1.0.1   \n```\n",
  "closed_at": "2016-11-01T17:04:44Z",
  "comments": [
    {
      "author": "kittholland",
      "author_association": "CONTRIBUTOR",
      "body": "As an additional note, while testing I found that if I used the -Property \\* pattern on an object with only one property it returned a property named *.\n\nex: \n`[pscustomobject]@{Status = 'Running'} | Select-Object -Property * -ExcludeProperty Status`\n\nReturns: \n`*`\n`-`\n\nWhereas\n`[pscustomobject]@{Status = 'Running'} | Select-Object -Property Status -ExcludeProperty Status`\n\nreturns null as expected.\n",
      "created_at": "2016-09-23T21:03:01Z",
      "updated_at": "2016-09-23T21:03:01Z"
    },
    {
      "author": "ChrisMagnuson",
      "author_association": "NONE",
      "body": "I just hit this bug today, I exclude properties based on other criteria and I have a scenario where it should exclude all properties but instead of returning nothing I get a property named \\* with no value.\n",
      "created_at": "2016-09-23T21:42:29Z",
      "updated_at": "2016-09-23T21:42:29Z"
    },
    {
      "author": "ChrisMagnuson",
      "author_association": "NONE",
      "body": "As a work around I am using `| where {$_.psobject.Properties.name -ne \"*\"}` to filter this bad result out.\n\nEx:\n`[pscustomobject]@{Thing=\"thing1\"} | Select-Object -Property * -ExcludeProperty thing`\n\nReturns:\n`*`\n`-`\n\nAdding the filter:\n`[pscustomobject]@{Thing=\"thing1\"} | Select-Object -Property * -ExcludeProperty thing | where {$_.psobject.Properties.name -ne \"*\"}`\n\nReturns:\n` `\n\nAdding in another property that should pass through with the filter still in place:\n`[pscustomobject]@{Thing=\"thing1\";thing2=\"thing2\"} | \nSelect-Object -Property * -ExcludeProperty thing | \nwhere {$_.psobject.Properties.name -ne \"*\"}`\n\nReturns:\n`thing2`\n`------`\n`thing2`\n",
      "created_at": "2016-09-23T22:01:35Z",
      "updated_at": "2016-09-23T22:01:35Z"
    },
    {
      "author": "kittholland",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for the comments Chris, Our solution also involved the PSObject. We ended up just doing something like:\n\n`$object = [pscustomobject]@{Thing=\"thing1\"}`\n`$object.PSObject.Properties.Remove('Thing')`\n`$object`\n\nWhich returns null and can be looped on to remove multiple properties.\n",
      "created_at": "2016-09-23T22:06:25Z",
      "updated_at": "2016-09-23T22:06:25Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> I would suggest throwing an error if -ExcludeProperty is used without -Property indicating that you are missing a mandatory parameter since ExcludeProperty is dependent on -Property\n\nThis is a breaking change.\n\n> the convention is to always pass \"-Property *\" when using the -ExcludeProperty parameter\n\nAs a solution to this issue, it is very simple and non-breaking change.\n",
      "created_at": "2016-09-27T10:40:57Z",
      "updated_at": "2016-10-06T03:01:04Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "For second issue I opened #2420\n",
      "created_at": "2016-10-04T04:50:55Z",
      "updated_at": "2016-10-04T04:50:55Z"
    }
  ],
  "created_at": "2016-09-23T15:47:18Z",
  "labels": [
    "WG-Cmdlets",
    "Up-for-Grabs"
  ],
  "number": 2351,
  "state": "closed",
  "title": "Select-Object -ExcludeProperty dependency on -Property is unintuitive. ",
  "updated_at": "2016-11-01T17:04:44Z"
}