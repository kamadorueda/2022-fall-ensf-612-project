{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15298",
  "author": "mklement0",
  "body": "Note that `Get-Command` with the name of a command from a not-yet-auto-loaded module implicitly loads that module.\r\n\r\nIn doing so, it seemingly always loads the *highest version installed* even when a `-FullyQualifiedModule` argument requests a specific, lower version.\r\n\r\nIf the targeted lower version _isn't_ currently loaded into the session, `Get-Command`, due to loading the _wrong_ version, reports an error, as it cannot find the lower-version form of the command.\r\n\r\nIf the targeted lower version happens to have previously imported, everything works as intended.\r\n\r\n## Steps to reproduce\r\n\r\n```powershell\r\n# Install two versions of the same module.\r\n$moduleName = 'Native'\r\n$commandName = 'Debug-ExecutableArguments'\r\n$version = '1.4'\r\n$oldVersion = '1.3'\r\n$oldVersion, $version | % { Install-Module -ErrorAction Stop -Force $moduleName -RequiredVersion $_ }\r\n\r\nRemove-Module -ErrorAction Ignore Native # Make sure that no version of the 'Native' module is loaded.\r\n\r\ntrap { $_ | Write-Error; continue }\r\n\r\n# With 1.3 *not loaded*, Get-Command fails to locate that version's command.\r\n# It implicitly loads 1.4 (the highest version), then reports an error.\r\n{ Get-Command -ErrorAction Stop $commandName -FullyQualifiedModule @{ ModuleName=$moduleName; RequiredVersion=$oldVersion } } | Should -Not -Throw\r\n\r\n# With 1.3 explicitly loaded, Get-Command now finds the v1.3 version.\r\nImport-Module $moduleName -RequiredVersion $oldVersion\r\n(Get-Command $commandName -FullyQualifiedModule @{ ModuleName=$moduleName; RequiredVersion=$oldVersion }).Module.Version | Should -Be ([version] $oldVersion)\r\n\r\n# Clean up.\r\n$oldVersion, $version | % { Uninstall-Module -Force $moduleName -RequiredVersion $_ }\r\n```\r\n\r\n## Expected behavior\r\n\r\nBoth tests should succeed.\r\n\r\n## Actual behavior\r\n\r\nThe first test fails, because `Get-Command` loaded the wrong module version into memory.\r\n\r\n```none\r\nExpected no exception to be thrown, but an exception\r\n\"The term 'Debug-ExecutableArguments' is not recognized as a name of a cmdlet, function, script file, or executable \r\nprogram...\"\r\nwas thrown\r\n```\r\n\r\n## Environment data\r\n\r\n```none\r\nPowerShell Core 7.2.0-preview.5\r\n```\r\n",
  "closed_at": null,
  "comments": [],
  "created_at": "2021-04-23T15:03:25Z",
  "number": 15298,
  "state": "open",
  "title": "Get-Command -FullyQualifiedModule mistakenly only ever implicitly loads the highest installed module version",
  "updated_at": "2021-05-03T22:57:41Z"
}