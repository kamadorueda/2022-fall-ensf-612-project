{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10731",
  "author": "doctordns",
  "body": "If you enter a new PowerShell Session (Using lastest daily build), create an error, then use Resolve-Error, Resolve-Error incorrectly shows historyid as -1\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\n...  DO SOME STUFF but NO errors\r\n1/0\r\nResolve-Error\r\n```\r\n\r\n# Expected behavior\r\n\r\nI would have epected the HistoryID shown to be valid, not -1.`\r\n\r\n# Actual behavior\r\n\r\n```none\r\nPS [C:\\foo> ]> Resolve-Error  # no errors yet\r\nPS [C:\\foo> ]> $I=1                # Doing something\r\nPS [C:\\foo> ]> $J=2                # Doing something\r\nPS [C:\\foo> ]> 1/0                 # An error\r\nError: Attempted to divide by zero.\r\nPS [C:\\foo> ]> Resolve-Error\r\n\r\n   HistoryId: -1\r\n\r\nMessage        : Attempted to divide by zero.\r\nStackTrace     :    at System.Management.Automation.IntOps.Divide(Int32 lhs, Int32 rhs)\r\n                    at System.Dynamic.UpdateDelegates.UpdateAndExecute2[T0,T1,TRet](CallSite site, T0 arg0, T1 arg1)\r\n                    at System.Management.Automation.Interpreter.DynamicInstruction`3.Run(InterpretedFrame frame)\r\n                    at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.Run(InterpretedFrame frame)\r\nException      : System.Management.Automation.RuntimeException\r\nInvocationInfo : {}\r\nLine           : 1/0\r\nPosition       : At line:1 char:1\r\n                 + 1/0\r\n                 + ~~~\r\nHistoryId      : -1\r\n\r\nMessage        : Attempted to divide by zero.\r\nStackTrace     :\r\nException      : System.DivideByZeroException\r\nInvocationInfo : {}\r\nLine           : 1/0\r\nPosition       : At line:1 char:1\r\n                 + 1/0\r\n                 + ~~~\r\nHistoryId      : -1\r\n\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nPS [C:\\foo> ]> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-daily.20191008\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-daily.20191008\r\nOS                             Microsoft Windows 10.0.18995\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0, 5.0, 5.1.10032.0, 6.0.0, 6.1.0, 6.2.0, 7.0.0-daily.20191008}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2019-10-08T16:05:48Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@doctordns given @alexandair's comment in #10730, is the `Resolve-Error` call here also triggering `Resolve-AzError` via the alias?\r\n\r\n(`Get-Command Resolve-Error` to check what shows up; remember, aliases have higher selection precedence than functions do.)\r\n\r\nEDIT: Realized I'm confusing this command for the new `Resolve-ErrorRecord` command that Steve has been working on.\r\n\r\nThe Az cmdlets aren't maintained by the PowerShell team; the Az module repo is [here](https://github.com/Azure/azure-powershell)",
      "created_at": "2019-10-08T15:55:31Z",
      "updated_at": "2019-10-08T16:03:52Z"
    }
  ],
  "created_at": "2019-10-08T15:33:52Z",
  "labels": [
    "Issue-Question",
    "Resolution-External"
  ],
  "number": 10731,
  "state": "closed",
  "title": "First Time Resolve-Error is used in a session, it displays HistoryID as -1",
  "updated_at": "2019-10-08T16:05:48Z"
}