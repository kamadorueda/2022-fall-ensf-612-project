{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5879",
  "author": "KurtPfeifle",
  "body": "### TL;DR: Please update and make use of newer 'appimagetool' to enable automatic updates\r\n\r\nThe build script 'appimage.sh' uses a self-hosted 'appimagetool' binary which is more than 1 year old. \r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/2ae61c8ce46de49c6e0feb86ec0f91e4323b3fb4/tools/appimage.sh#L472\r\n\r\nThis binary generates the final AppImage from the AppDir structure which previous steps of 'appimage.sh' had prepared:\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/2ae61c8ce46de49c6e0feb86ec0f91e4323b3fb4/tools/appimage.sh#L474\r\n\r\nThis \"old\" appimagetool misses a very useful feature supported by more recent releases:\r\n\r\n* The most **recent versions of 'appimagetool' can embed an *update string* into the final AppImage**. \r\n\r\nThis is very beneficial for users: it lets them trigger the automatic update of an AppImage to its newer version(s). This update uses the very efficient download of only the \"binary delta\" sections of any new AppImage that is stored at the original hosting location of their previous AppImage -- and the user does not even need to remember where that location was.\r\n\r\nA new version of 'appimagetool' would be run with the *`-u | --updateinformation`* like this:\r\n\r\n    ./appimagetool-x86_64.AppImage \\\r\n          -u \"gh-releases-zsync|PowerShell|PowerShell|continuous|powershell-6*x86_64.AppImage.zsync\" \\\r\n          ./powershell.AppDir\r\n\r\n<sup>(For currently available variations of the update info string see their descriptions in the AppImage Spec document: https://github.com/AppImage/AppImageSpec/blob/master/draft.md#update-information)</sup>\r\n\r\n---- \r\n\r\nThis would, besides generating a *powershell-6.5.4-x86_64.AppImage* in the future, additionally generate an extra, rather small *powershell-6.5.4-x86_64.AppImage.zsync* file. The .zsync file contains the hashes of binary blocks composing the (new) AppImage. It should then be hosted side by side to the real AppImage on the GitHub release page. (For an example, see https://github.com/Subsurface-divelog/subsurface/releases).\r\n\r\nWhen querying for available updates this .zsync file would indicate to clients if or if not updates area available, and would help to determine which \"delta blocks\" need to be downloaded to the user in order to create the new AppImage version there.\r\n\r\nThis could be verified by running the AppImage with the *`--appimage-updateinfo`* flag:\r\n\r\n    $> ./powershell-6.5.4-x86_64.AppImage --appimage-updateinfo\r\n    gh-releases-zsync|PowerShell|PowerShell|continuous|powershell-6*x86_64.AppImage.zsync\r\n\r\nThe user would trigger the update process either by a GUI or a CLI utility on her side. The CLI invokation (as *`\"appimageupdatetool powershell-6.0.0-x86_64.AppImage\"`*) would then check for updates and apply them if available, downloading only a fraction of the size of the full new AppImage. As a result, the user will now have two AppImages: *powershell-6.0.0-x86_64.AppImage* (previous) and *powershell-6.5.4-x86_64.AppImage* (new). She could have used *`--overwrite`* to prevent the previous version to be kept around, though.\r\n\r\nYou can hardly conceive of a more simple and more elegant way to handle updates from the users' point of view.\r\n\r\n----\r\n\r\nFor a full and working real-life example, how this works when a user wants to check for (or really update to) a new AppImage, see this GitHub wiki article:\r\n\r\n* https://github.com/AppImage/AppImageUpdate/wiki/Example:-Step-by-step-walkthrough-with-%60appimageupdatetool%60",
  "closed_at": null,
  "comments": [
    {
      "author": "KurtPfeifle",
      "author_association": "NONE",
      "body": "I noticed that the AppImage build has been removed in the 6.0.3 release.\r\n\r\nIs this a temporary measure? Will it come back? Or is this a permanent situation?",
      "created_at": "2018-03-18T15:53:48Z",
      "updated_at": "2018-03-18T15:53:48Z"
    }
  ],
  "created_at": "2018-01-12T12:48:48Z",
  "number": 5879,
  "state": "open",
  "title": "Build script for AppImage uses outdated 'appimagetool' not supporting future auto-updates of AppImages",
  "updated_at": "2018-03-18T15:53:49Z"
}