{
  "_url": "https://github.com/PowerShell/PowerShell/issues/1451",
  "author": "KarolKaczmarek",
  "body": "## Steps to reproduce\n\nStart-PSBuild\n## Expected behavior\n\nworks\n## Actual behavior\n\nmc.exe not found. Install Microsoft Windows SDK.\nAt C:\\git\\PowerShell\\Build.psm1:104 char:13\n-             throw 'mc.exe not found. Install Microsoft Windows SDK.'\n-             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  - CategoryInfo          : OperationStopped: (mc.exe not foun...ft Windows SDK.:String) [], RuntimeException\n  - FullyQualifiedErrorId : mc.exe not found. Install Microsoft Windows SDK.\n\nThis message isn't helpful. What version of Windows SDK is required?\nCode performs recurse search in C:\\Program Files (x86)\\Microsoft SDKs\\Windows , however on my machine I have v7.0A, v8.1, v8.1A, v10.0A and none of those contains mc.exe\n\nIt would be useful if error message at least provided link to exact version of SDK which is required and ideally it would be installed by Start-PSBootstrap.\n## Environment data\n\nName                           Value\n\n---\n\nPSVersion                      5.1.14392.1000\nPSEdition                      Desktop\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\nBuildVersion                   10.0.14392.1000\nCLRVersion                     4.0.30319.42000\nWSManStackVersion              3.0\nPSRemotingProtocolVersion      2.3\nSerializationVersion           1.1.0.1\n",
  "closed_at": "2016-07-27T17:18:54Z",
  "comments": [
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "cc @mirichmo \n",
      "created_at": "2016-07-20T23:58:11Z",
      "updated_at": "2016-07-20T23:58:11Z"
    },
    {
      "author": "KarolKaczmarek",
      "author_association": "CONTRIBUTOR",
      "body": "btw. I found out v7.1A contains mc.exe, I think we should install it in Start-PSBootstrap, it's available on choco.\n",
      "created_at": "2016-07-21T00:12:04Z",
      "updated_at": "2016-07-21T00:12:13Z"
    },
    {
      "author": "mirichmo",
      "author_association": "MEMBER",
      "body": "We should wrap it in %VS14COMNTOOLS%....\\vc\\vcvarsall.bat as well. That way it will resolve properly.\n",
      "created_at": "2016-07-21T00:22:00Z",
      "updated_at": "2016-07-21T00:22:00Z"
    },
    {
      "author": "KarolKaczmarek",
      "author_association": "CONTRIBUTOR",
      "body": "I don't think resolution is a problem here, as we get the full path to the tool and call it via that path later:\n\n```\n$mcexe = Get-ChildItem \"${env:ProgramFiles(x86)}\\Microsoft SDKs\\Windows\\\" -Recurse -Filter 'mc.exe' | ? {$_.FullName -match 'x64'} | select -First 1 | % {$_.FullName} \n```\n\nIt's just mc.exe isn't present anywhere.\n",
      "created_at": "2016-07-21T00:25:34Z",
      "updated_at": "2016-07-21T00:25:34Z"
    },
    {
      "author": "KarolKaczmarek",
      "author_association": "CONTRIBUTOR",
      "body": "@mirichmo, sent PR #1464 for it \n",
      "created_at": "2016-07-21T18:11:01Z",
      "updated_at": "2016-07-21T18:27:41Z"
    }
  ],
  "created_at": "2016-07-20T23:48:40Z",
  "labels": [],
  "number": 1451,
  "state": "closed",
  "title": "mc.exe required",
  "updated_at": "2016-07-27T17:18:59Z"
}