{
  "_url": "https://github.com/PowerShell/PowerShell/issues/18364",
  "author": "itaymigdal",
  "body": "### Prerequisites\n\n- [X] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\n\n### Steps to reproduce\n\nDoubt if it's a bug, limitation or a lack of enough knowledge:\r\nI'm loading arbitrary .NET assemblies (which I have no control of their source code) and invoke them.\r\nA lot of them are using `console.writeline` (or similar functions), and I want to capture it, means redirecting it to a Powershell variable or even to a file, but nothing seems to catch this - it's just printing it to the console.\r\nTried about million ways to overcome this unsuccessfully (> file.txt , out-string, out-variable, and so on...)\r\nhere is the code:\r\n\r\n```\r\n$file = \"path\\to\\my\\compiled\\assembly\"\r\n$bytes = [System.IO.File]::ReadAllBytes($file)\r\n$assembly = [Reflection.Assembly]::Load($bytes)\r\n$params = @(,[String[]]@(\"some params\"))\r\n$assembly.EntryPoint.invoke($null, $params)  # <-- I want to catch this output, into a variable or a file, but it keeps be printed to the screen.\r\n```\r\n\n\n### Expected behavior\n\n```console\nPS> $x = $assembly.EntryPoint.invoke($null, $params) | out-string\r\nPS> $x\r\noutput\n```\n\n\n### Actual behavior\n\n```console\nPS> $x = $assembly.EntryPoint.invoke($null, $params) | out-string\r\nPS> $x\r\nnothing\n```\n\n\n### Error details\n\n_No response_\n\n### Environment data\n\n```powershell\nName                           Value                                                                                                                                                                                           \r\n----                           -----                                                                                                                                                                                           \r\nPSVersion                      5.1.19041.1682                                                                                                                                                                                  \r\nPSEdition                      Desktop                                                                                                                                                                                         \r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}                                                                                                                                                                         \r\nBuildVersion                   10.0.19041.1682                                                                                                                                                                                 \r\nCLRVersion                     4.0.30319.42000                                                                                                                                                                                 \r\nWSManStackVersion              3.0                                                                                                                                                                                             \r\nPSRemotingProtocolVersion      2.3                                                                                                                                                                                             \r\nSerializationVersion           1.1.0.1\n```\n\n\n### Visuals\n\n_No response_",
  "closed_at": "2022-10-25T03:14:01Z",
  "comments": [
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "You could do that in child PowerShell process, and redirect that, but that's about it. There's no way to generically redirect things written directly to stdout.",
      "created_at": "2022-10-24T17:41:01Z",
      "updated_at": "2022-10-24T17:41:01Z"
    },
    {
      "author": "MartinGC94",
      "author_association": "CONTRIBUTOR",
      "body": "You can also set the console output to a stream like this:\r\n\r\n```\r\n$Writer = [System.IO.StreamWriter]::new(\"$HOME\\DemoLog.txt\")\r\n$Writer.AutoFlush = $true\r\n$OriginalOut = [System.Console]::Out\r\ntry\r\n{\r\n    [System.Console]::SetOut($Writer)\r\n    [System.Console]::WriteLine(\"Hello\")\r\n}\r\nfinally\r\n{\r\n    [System.Console]::SetOut($OriginalOut)\r\n}\r\n```\r\n\r\n",
      "created_at": "2022-10-24T18:06:57Z",
      "updated_at": "2022-10-24T18:06:57Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "Ah thanks for the correction! I think what I ran into when I tried that before was something using the the win32 console APIs directly. Definitely give that a go and see if it works for you @itaymigdal ",
      "created_at": "2022-10-24T18:36:50Z",
      "updated_at": "2022-10-24T18:36:50Z"
    },
    {
      "author": "itaymigdal",
      "author_association": "NONE",
      "body": "I have no control over the assemblies source code (so cannot use console.setout, and already played with the native console API.\r\nAnyway, thanks for the help guys.",
      "created_at": "2022-10-24T20:11:02Z",
      "updated_at": "2022-10-24T20:11:02Z"
    },
    {
      "author": "MartinGC94",
      "author_association": "CONTRIBUTOR",
      "body": "You don't need access to the source code to set the console output. You set it in PowerShell and then you call the method in your class library and then you change the output target back to the original value from PowerShell. I've confirmed it works with a simple class library I built so either your library is doing something weird or you made a mistake when you tested this.",
      "created_at": "2022-10-24T20:56:01Z",
      "updated_at": "2022-10-24T20:56:01Z"
    },
    {
      "author": "itaymigdal",
      "author_association": "NONE",
      "body": "@MartinGC94 \r\nJust to note I execute exe assemblies and not dlls.\r\nI'll try your example and update, thanks.",
      "created_at": "2022-10-25T02:53:25Z",
      "updated_at": "2022-10-25T02:53:25Z"
    },
    {
      "author": "itaymigdal",
      "author_association": "NONE",
      "body": "@MartinGC94\r\nSeems like it's working, great catch! \r\nThank you so much :) ",
      "created_at": "2022-10-25T03:13:36Z",
      "updated_at": "2022-10-25T03:13:36Z"
    }
  ],
  "created_at": "2022-10-24T17:10:22Z",
  "number": 18364,
  "state": "closed",
  "title": "Redirect stdout from loaded assembly console.writeline",
  "updated_at": "2022-10-25T03:14:01Z"
}