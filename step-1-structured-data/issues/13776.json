{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13776",
  "author": "fMichaleczek",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\n<!-- Summarize your PR between here and the checklist. -->\r\n\r\n- Declaring OperatingSystem.IsBrowser in the startup process\r\n- Add a minimal logger support through Console.WriteLine\r\n- Add a sample demo of a Blazor WebAssembly with SMA \r\n\r\n## PR Context\r\n\r\n<!-- Provide a little reasoning as to why this Pull Request helps and why you have opened it. -->\r\nFixes #13755\r\n\r\n## PR Checklist\r\n\r\n- [X] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [ ] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [ ] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [ ] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [ ] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [ ] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2020-12-23T18:00:05Z",
  "comments": [
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2020-10-24T02:00:08Z",
      "updated_at": "2020-10-24T02:00:08Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "cc @SteveL-MSFT Please comment if demos that add licenses should be in the same or different repos.",
      "created_at": "2020-10-25T16:36:11Z",
      "updated_at": "2020-10-25T16:36:11Z"
    },
    {
      "author": "fMichaleczek",
      "author_association": "NONE",
      "body": "@TravisEz13 \r\n\r\n- The demo folder is more for reviewers if they want to see live working sample,  it's the default blazor webassembly template from the Asp.Net Core SDK. I am OK to remove it from the final review. I will publish a real sample later and we will discuss about it.\r\n- I will remove the PowerShell Logger part in the PR because I don't need anymore, the boot process is clean and without error (Blazor already provide a logger for the rest). I will wait for an general logger improvement in 7.2 timeline.",
      "created_at": "2020-11-02T23:52:31Z",
      "updated_at": "2020-11-02T23:53:05Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as stale because it has been marked as requiring author feedback but has not had any activity for **15 days**. It will be closed if no further activity occurs **within 10 days of this comment**.",
      "created_at": "2020-11-21T08:00:06Z",
      "updated_at": "2020-11-21T08:00:06Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "It may make sense to have a powershell-blazor repo for the demo files which may evolve into something more useful.  @fMichaleczek if you're ok with that, I can create the repo and you can submit a PR for the demo files there and just have this PR be PowerShell changes needed to run in browser",
      "created_at": "2020-11-25T03:10:14Z",
      "updated_at": "2020-11-25T03:10:14Z"
    },
    {
      "author": "fMichaleczek",
      "author_association": "NONE",
      "body": "@SteveL-MSFT This PR is a POC to say : it works, see by yourself. First, PowerShell need to be fileless in Blazor environment. I can first make a PR for the version git number and some path. Then it will be about your plugin system, do we go to DI like all dotnet projet for conf, log etc ? Microsoft.Extensions ? Finally we have to update the buildchain (to build on windows), the tests and the demos (maybe better outside). Then we will have an infrastructure and I will begin the RFC to ask community. Do you want more details about a particular item ? ",
      "created_at": "2020-11-25T04:11:47Z",
      "updated_at": "2020-11-25T04:11:47Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@fMichaleczek \"fileless\" meaning it has to be self contained and not try to access the file system?  We have a RFC coming for pluggable subsystems for PowerShell and maybe logging should be a subsystem and can be replaced.  What I'm specifically looking for is changes to PowerShell so that it can be hosted in blazor.  Just like how we have a console host today, I'd imagine there would be a separate blazor host which would be its own project/repo.",
      "created_at": "2020-11-25T04:25:10Z",
      "updated_at": "2020-11-25T04:25:10Z"
    },
    {
      "author": "fMichaleczek",
      "author_association": "NONE",
      "body": "@SteveL-MSFT \n\n> \"fileless\" meaning it has to be self contained and not try to access the file system?  \n\nWhen you load SMA, the inmemory filesystem is empty. json, psd1, psm1 files are unavailable at starting. You can only use assemblies. or download the files and have a lot of latencies. \n\n> We have a RFC coming for pluggable subsystems for PowerShell and maybe logging should be a subsystem and can be replaced.  \n\nargs (maybe not apply to all cases), configuration file, logging and the way we load modules have to evolve.\n\n> What I'm specifically looking for is changes to PowerShell so that it can be hosted in blazor.  \n\nWe are looking for changes to PowerShell so that it can be hosted in AspNetCore, Blazor Wasm, Blazor Wasm Server and MAUI Blazor Wasm.\n\n- PowerShell is always loaded after the DI, so I need a fileless way to configure and inject SMA with a smallset of modules.\n\n- webclient is broken and http is the only  way  to communicate\n\n- MMI package is still weird for unknow platform\n\n> Just like how we have a console host today, I'd imagine there would be a separate blazor host which would be its own project/repo.\n\nI have a monacoeditor + xterm.js demo to finish. 200Mo, need a 100Mbits network \ud83d\ude43 SMA + SDK are to big because of dependencies.\n\nMaybe better to continue here :\nhttps://github.com/PowerShell/PowerShell/issues/13755\n",
      "created_at": "2020-11-25T05:00:42Z",
      "updated_at": "2020-11-25T05:00:42Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as stale because it has been marked as requiring author feedback but has not had any activity for **15 days**. It will be closed if no further activity occurs **within 10 days of this comment**.",
      "created_at": "2020-12-13T08:00:05Z",
      "updated_at": "2020-12-13T08:00:05Z"
    }
  ],
  "created_at": "2020-10-13T14:50:22Z",
  "number": 13776,
  "state": "closed",
  "title": "WIP: Add initial support for Blazor WebAssembly",
  "updated_at": "2020-12-23T18:00:05Z"
}