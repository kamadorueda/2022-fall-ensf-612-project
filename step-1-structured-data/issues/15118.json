{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15118",
  "author": "mklement0",
  "body": "## Summary of the new feature/enhancement\r\n\r\nAttempting to modify an instance of a _read-only_ .NET data type should indicate in the error message resulting from the failed attempt that the data type is indeed read-only.\r\n\r\nFrom the current error messages (as of PowerShell Core 7.2.0-preview.4) this is hard to infer:\r\n\r\nGiven the following dictionary:\r\n\r\n```powershell\r\n$readOnlyDict =\r\n    [System.Collections.ObjectModel.ReadOnlyDictionary[string, string]]::new(\r\n      [System.Collections.Generic.Dictionary[string, string]]::new()\r\n    )\r\n```\r\n\r\nHere are the - unhelpful - error message currently being emitted:\r\n\r\n```powershell\r\n# Note that *getting* a value works fine.\r\nPS> $readOnlyDict['foo'] = 'bar'\r\nInvalidOperation: Unable to index into an object of type \"System.Collections.ObjectModel.ReadOnlyDictionary`2[System.String,System.String]\".\r\n\r\n# Note that the .method *does* exist, due to interface implementations.\r\nPS> $readOnlyDict.Add('foo', 'bar')\r\nMethodException: Cannot find an overload for \"Add\" and the argument count: \"2\".\r\n\r\n# Note that the .method *does* exist, due to interface implementations.\r\nPS> $readOnlyDict.Clear()\r\nMethodException: Cannot find an overload for \"Add\" and the argument count: \"2\".\r\n```\r\n\r\nOnly using _dot notation_, which uses a different code path, currently provides a helpful error message: \r\n\r\n```powershell\r\nPS> $readOnlyDict.foo = 'bar'\r\nOperationStopped: Collection is read-only.\r\n```\r\n\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "For `$readOnlyDict['foo'] = 'bar'`, I agree the error message could be improved. The C# compilation error for the same statement is \r\n> Property or indexer 'ReadOnlyDictionary<string, string>.this[string]' cannot be assigned to -- it is read only\r\n\r\nBut for the other 2 examples `$readOnlyDict.Add('foo', 'bar')` and `$readOnlyDict.Clear()`, they are explicit interface implementation and thus are not directly available on the class. Therefore, powershell cannot find them and the error message is appropriate. The C# complication error is also essentially \"cannot find it\":\r\n> 'ReadOnlyDictionary<string, string>' does not contain a definition for 'Add' and no accessible extension method 'Add' accepting a first argument of type 'ReadOnlyDictionary<string, string>' could be found (press F4 to add an assembly reference or import a namespace)",
      "created_at": "2021-06-24T05:37:49Z",
      "updated_at": "2021-06-24T05:37:49Z"
    }
  ],
  "created_at": "2021-03-29T17:34:08Z",
  "number": 15118,
  "state": "open",
  "title": "Improve the error messages resulting from attempting to modify read-only .NET types",
  "updated_at": "2021-06-24T06:13:26Z"
}