{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7818",
  "author": "schittli",
  "body": "Hello\r\n\r\nIf we create this Directory Junction between local Drives:\r\n```mklink /J C:\\Temp D:\\Data\\Temp\\```\r\n\r\nSo that accessing: ```C:\\Temp\\```\r\nin fact works here: ```D:\\Data\\Temp```\r\n\r\nNow, if we call e.g.\r\n```(Get-Item C:\\Temp\\MyFile.txt).Target```\r\n\r\nWe get:\r\n```\r\nWrong:     Target : {C:\\Data\\Temp\\MyFile.txt}\r\nShould be: Target : {D:\\Data\\Temp\\MyFile.txt}\r\n```\r\n\r\nIt's a shame that M$ still does not have Unit Tests to validate the most basic situations.\r\n(Assuring to return the right Target on different LinkTypes, is the _most important_ reason for this code.)\r\n\r\nThis issue exists in all PowerShell versions, probably because even Tools like FindLinks64.exe (Sysinternals) returns the wrong Drive.\r\n\r\nKind regards,\r\nThomas\r\n",
  "closed_at": "2018-09-27T03:41:50Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I can not repo. `Get-Item C:\\Temp\\MyFile.txt` returns null in Target. `Get-Item C:\\Temp` returns `D:\\Data\\Temp`.",
      "created_at": "2018-09-19T13:07:20Z",
      "updated_at": "2018-09-19T13:07:20Z"
    },
    {
      "author": "kvprasoon",
      "author_association": "CONTRIBUTOR",
      "body": "@schittli The issues exists till Windows PowerShell 5.1, but not a repro in PowerShell 6.1.0 for me too and is null for me too like @iSazonov mentioned.",
      "created_at": "2018-09-22T14:49:38Z",
      "updated_at": "2018-09-22T14:49:53Z"
    },
    {
      "author": "schittli",
      "author_association": "NONE",
      "body": "Thanks a lot for your tests and feedbacks!, I had a mess with my PowerShell installations :-(\r\n\r\n### PowerShell 6 no longer support LinkTypes?\r\nOf course, it's **very annoying** if PowerShell lies for linked dirs and files by telling _'there is no hard or soft link'_ and returning $null for Target and LinkType.\r\n\r\nWe can fall back to shell tools to assure that PowerShell tells the truth... but this can not be the idea. At least, it would be the same concept as in PowerShell 5.1: PowerShell does not provide reliable data :-[\r\n\r\n",
      "created_at": "2018-09-25T14:06:15Z",
      "updated_at": "2018-09-25T14:06:15Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "PowerShell Core 6 support LinkType. You could review source code (and tests!) in the repo to see this.",
      "created_at": "2018-09-26T05:48:07Z",
      "updated_at": "2018-09-26T05:48:07Z"
    },
    {
      "author": "schittli",
      "author_association": "NONE",
      "body": "Thanks a lot!, that sounds great.\r\n**But it also means that PowerShell 6.x has a bug with the described LinkType, otherwise it would display the correct result and not null.**\r\n\r\nWe're a customer and just reporting bugs and not reviewing code. \r\nOtherwise, we expect that products based on PowerShell are free. This would be great: we could save licensing costs for much more than 600k US$ :-)",
      "created_at": "2018-09-26T18:29:26Z",
      "updated_at": "2018-09-26T18:29:26Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@schittli If you see unexpected behavior please open new issue with _clear repo steps_ with latest PowerShell Core build. ",
      "created_at": "2018-09-27T03:41:49Z",
      "updated_at": "2018-09-27T03:41:49Z"
    },
    {
      "author": "schittli",
      "author_association": "NONE",
      "body": "It's a shame:\r\n1. M$ should be interested by itself to fix known bugs\r\n2. At least two persons were able to 'repo' this bug\r\n3. But M$ closes this bugreport, while it could just change the title\r\n\r\nNo, we don't create a new report. We already have a workaround, but many thousands paying M$ Customer computers don't. And M$ is not interested to offer them a tool which does what users expect.\r\n\r\nYes, it's a shame.",
      "created_at": "2018-09-27T07:16:48Z",
      "updated_at": "2018-09-27T07:16:48Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "It will be fixed, sooner or later. Much sooner if you can provide more information. :)",
      "created_at": "2018-09-27T10:17:14Z",
      "updated_at": "2018-09-27T10:17:14Z"
    }
  ],
  "created_at": "2018-09-19T08:01:27Z",
  "labels": [
    "Issue-Question",
    "Resolution-Answered",
    "WG-Engine-Providers"
  ],
  "number": 7818,
  "state": "closed",
  "title": "Get-Item / Get-ChildItem returns wrong Target-Property if Item is on a Directory Junction to another drive",
  "updated_at": "2018-09-27T10:17:14Z"
}