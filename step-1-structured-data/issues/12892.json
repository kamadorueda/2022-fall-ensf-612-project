{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12892",
  "author": "xtqqczze",
  "body": "# PR Summary\r\n\r\nMinimal first step to enable code analyzers in build and live analysis.\r\n\r\n* Add `Analyzers.props`\r\n* Add `CodeAnalysis.ruleset` with rules copied from `microsoft.codeanalysis.netanalyzers\\5.0.0-rtm.20502.2\\rulesets\\AllRulesDefault.ruleset`\r\n\r\n## PR Context\r\n\r\nsee also: #11916\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [NA] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [NA] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [NA] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [NA] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [NA] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [NA] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2020-10-23T17:04:43Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "In #11916 my intention is to force Roslyn analyzers at build time to exclude regressions in code formatting and code style.\r\n\r\nHere you add analyzers but not enable/activate them for build or design time (otherwise the build would fail). Also we already have editorconfig file - why do we need the ruleset. I am not sure that we need this in the time.\r\n\r\nIt would great if you grabbed  #11916 and improved it.",
      "created_at": "2020-06-04T11:06:26Z",
      "updated_at": "2020-06-04T11:06:26Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov  yes this PR has a similar intention as #11916, but review should be easier \ud83d\ude1b\r\n\r\nPlease see 6acc529 for proof analyzers are activated, `CA1001` ia marked as warning which causes build failure:\r\nhttps://dev.azure.com/powershell/2972bb5c-f20c-4a60-8bd9-00ffe9987edc/_apis/build/builds/54691/logs/18\r\n\r\nThe `CodeAnalysis.ruleset` contains 211 rules, I think it makes sense to keep these seperate from the `.editorconfig `",
      "created_at": "2020-06-08T02:48:27Z",
      "updated_at": "2020-06-08T02:53:39Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@xtqqczze Thanks for clarify! I see the behavior of VS was changed since 16.5. But It is not clear has EditorConfig a priority on CodeAnalysisRuleSet?",
      "created_at": "2020-06-08T05:00:28Z",
      "updated_at": "2020-06-08T05:00:28Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@xtqqczze  Please have a look at the failing builds.",
      "created_at": "2020-06-08T19:16:29Z",
      "updated_at": "2020-06-08T19:16:29Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@xtqqczze Could you please check with CA1001 that EditorConfig has a priority over CodeAnalysisRuleSet?",
      "created_at": "2020-06-09T05:56:17Z",
      "updated_at": "2020-06-09T05:56:17Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov  2c736cb shows EditorConfig has a priority over CodeAnalysisRuleSet",
      "created_at": "2020-06-09T08:51:44Z",
      "updated_at": "2020-06-09T08:51:44Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "In the case I suggest to use default ruleset and do all customizations in EditorConfig.",
      "created_at": "2020-06-09T12:25:57Z",
      "updated_at": "2020-06-09T12:25:57Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMainainer, Please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2020-06-16T14:00:15Z",
      "updated_at": "2020-06-16T14:00:15Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@xtqqczze Can respond to @iSazonov comment \r\n> In the case I suggest to use default ruleset and do all customizations in EditorConfig.\r\n",
      "created_at": "2020-06-16T17:19:32Z",
      "updated_at": "2020-06-16T17:19:32Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "> \r\n> \r\n> In the case I suggest to use default ruleset and do all customizations in EditorConfig.\r\n\r\nI think using Ruleset only makes more sense than specifiying default rules in Ruleset and overriding some rules in EditorConfig.\r\n\r\nCurrently there are issues with using EditorConfig to configure diagnostics, for example TreatWarningsAsErrors is ignored: https://github.com/dotnet/roslyn/issues/43051.",
      "created_at": "2020-06-19T18:53:42Z",
      "updated_at": "2020-06-19T19:20:23Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov I think we should use a Ruleset until EditorConfig support for diagnostics is mature.",
      "created_at": "2020-06-19T19:23:05Z",
      "updated_at": "2020-06-19T19:23:05Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@xtqqczze It seems the https://github.com/dotnet/roslyn/issues/43051 issue consider a specific scenario to have an exclusion list of warnings. It is not our case. We use TreatWarningsAsErrors to force all warning as errors. ",
      "created_at": "2020-06-22T07:07:05Z",
      "updated_at": "2020-06-22T07:07:05Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2020-06-29T14:00:19Z",
      "updated_at": "2020-06-29T14:00:19Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "/azp run",
      "created_at": "2020-07-16T06:34:12Z",
      "updated_at": "2020-07-16T06:36:44Z"
    },
    {
      "author": "azure-pipelines[bot]",
      "author_association": "NONE",
      "body": "<samp>\nCommand 'restart' is not supported by Azure Pipelines.<br>\r\n<br>\r\n<b>Supported commands</b><br>\r\n<ul type=\"none\"><li><b>help:</b></li><ul type=\"none\"><li>Get descriptions, examples and documentation about supported commands</li><li><b>Example: </b>help \"command_name\"</li></ul><li><b>list:</b></li><ul type=\"none\"><li>List all pipelines for this repository using a comment.</li><li><b>Example: </b>\"list\"</li></ul><li><b>run:</b></li><ul type=\"none\"><li>Run all pipelines or specific pipelines for this repository using a comment. Use this command by itself to trigger all related pipelines, or specify specific pipelines to run.</li><li><b>Example: </b>\"run\" or \"run pipeline_name, pipeline_name, pipeline_name\"</li></ul><li><b>where:</b></li><ul type=\"none\"><li>Report back the Azure DevOps orgs that are related to this repository and org</li><li><b>Example: </b>\"where\"</li></ul></ul><br>\r\nSee <a href=\"https://go.microsoft.com/fwlink/?linkid=2056279\">additional documentation.</a>\n</samp>",
      "created_at": "2020-07-16T06:36:06Z",
      "updated_at": "2020-07-16T06:37:30Z"
    },
    {
      "author": "azure-pipelines[bot]",
      "author_association": "NONE",
      "body": "<samp>\nAzure Pipelines successfully started running 4 pipeline(s).<br>\r\n\n</samp>",
      "created_at": "2020-07-16T06:37:16Z",
      "updated_at": "2020-07-16T06:37:16Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@xtqqczze Please rebase. I hope this will fix CIs.",
      "created_at": "2020-07-16T06:58:06Z",
      "updated_at": "2020-07-16T06:58:06Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> Ruleset based on microsoft.codeanalysis.fxcopanalyzers\\3.0.0\\rulesets\\AllRulesDefault.ruleset with actions changed from Warning to Info to fix the build.\r\n\r\nPlease enumerate these changes. ~~Maybe in new issue.~~ This helps us to fix its in follow PRs.",
      "created_at": "2020-07-16T14:59:20Z",
      "updated_at": "2020-07-20T04:26:56Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@xtqqczze Please add comments in rules so that we fix temporary changes in follow PRs.",
      "created_at": "2020-07-20T04:26:29Z",
      "updated_at": "2020-07-20T04:26:29Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as stale because it has been marked as requiring author feedback but has not had any activity for **15 days**. It will be closed if no further activity occurs **within 10 days of this comment**.",
      "created_at": "2020-08-05T20:00:12Z",
      "updated_at": "2020-08-05T20:00:12Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "See https://github.com/dotnet/runtime/pull/42272#pullrequestreview-488980943 about RunAnalyzers\r\nDocs https://docs.microsoft.com/en-us/visualstudio/code-quality/disable-code-analysis?view=vs-2019",
      "created_at": "2020-09-18T03:49:26Z",
      "updated_at": "2020-09-18T10:27:03Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as stale because it has been marked as requiring author feedback but has not had any activity for **15 days**. It will be closed if no further activity occurs **within 10 days of this comment**.",
      "created_at": "2020-10-03T11:00:08Z",
      "updated_at": "2020-10-03T11:00:08Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@xtqqczze I see .Net team updated their code (rule list and csproj) - could you please update the PR too?",
      "created_at": "2020-10-14T03:42:49Z",
      "updated_at": "2020-10-14T03:42:49Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "rebased",
      "created_at": "2020-10-22T14:55:29Z",
      "updated_at": "2020-10-22T14:55:29Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov I think it would make more sense to abandon this PR, and start from scratch with new `Microsoft.CodeAnalysis.NetAnalyzers` using EditorConfig rules.",
      "created_at": "2020-10-22T16:10:32Z",
      "updated_at": "2020-10-22T18:58:02Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> @iSazonov I think it would make more sense to abandon this PR, and start from scratch with new `Microsoft.CodeAnalysis.NetAnalyzers` using EditorConfig rules.\r\n\r\nOk.",
      "created_at": "2020-10-22T16:46:30Z",
      "updated_at": "2020-10-22T16:46:30Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "> > @iSazonov I think it would make more sense to abandon this PR, and start from scratch with new `Microsoft.CodeAnalysis.NetAnalyzers` using EditorConfig rules.\r\n> \r\n> Ok.\r\n\r\n> > Previously, you had wanted to use EditorConfig instead of ruleset configuration.\r\n> \r\n> My thought was and is that we shouldn't have two configs - in EditorConfig and in ruleset. If VS Code supports(?) ruleset it is better to use ruleset and follow .Net team's pattern.\r\n> \r\n> _Originally posted by @iSazonov in https://github.com/PowerShell/PowerShell/pull/13835#issuecomment-714652241_\r\n\r\nLet's stick with ruleset configuration then. Honestly, I don't have a preference either way, but I would like to get something merged soon.",
      "created_at": "2020-10-22T18:38:02Z",
      "updated_at": "2020-10-22T18:38:02Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "This PR is ready for review and is the prerequisite enabling further code analyzers so speedy review would be appreciated.",
      "created_at": "2020-10-22T19:27:11Z",
      "updated_at": "2020-10-23T20:11:21Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@xtqqczze I see MSFT updated documentation.\r\nhttps://docs.microsoft.com/en-us/visualstudio/code-quality/roslyn-analyzers-overview?view=vs-2019#build-errors\r\n> Create a .NET 5.0 project which includes analyzers by default in the .NET SDK. Code analysis is enabled, by default, for projects that target .NET 5.0 or later. You can enable code analysis on projects that target earlier .NET versions by setting the EnableNETAnalyzers property to true.\r\n\r\nSo we already got this.\r\n\r\nhttps://docs.microsoft.com/en-us/visualstudio/code-quality/use-roslyn-analyzers?view=vs-2019#convert-an-existing-ruleset-file-to-editorconfig-file\r\n> Starting in Visual Studio 2019 version 16.5, ruleset files are deprecated in favor of the EditorConfig file for analyzer configuration for managed code. Most of the Visual Studio tooling for analyzer rule severity configuration has been updated to work on EditorConfig files instead of ruleset files. EditorConfig files allow you to configure both analyzer rule severities and analyzer options, including Visual Studio IDE code style options. **It is highly recommended that you convert your existing ruleset file to an EditorConfig file.** It is also recommended that you save the EditorConfig file at the root of your repo or in the solution folder. By using the root of your repo or solution folder, you make sure that the severity settings from this file are automatically applied to the entire repo or solution, respectively.\r\n\r\nI think we already got this too and we should do nothing to evolve Roslyn Analyzer. We can check this by forcing some rule in our EditorConfig file. Can you check and confirm?\r\n\r\nhttps://github.com/dotnet/roslyn-analyzers#microsoftcodeanalysisnetanalyzers\r\n>Microsoft.CodeAnalysis.NetAnalyzers\r\nThis is the primary analyzer package for this repo that contains all the .NET code analysis rules (CAxxxx) that are built into the .NET SDK starting .NET5 release. The documentation for CA rules can be found at docs.microsoft.com/visualstudio/code-quality/code-analysis-for-managed-code-warnings.\r\n\r\nSo We have no need to reference the package.",
      "created_at": "2020-10-23T06:50:57Z",
      "updated_at": "2020-10-23T07:17:21Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Please also see https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/overview#code-style-analysis\r\nabout EnforceCodeStyleInBuild. I think we could add this.\n\n<blockquote><img src=\"https://docs.microsoft.com/en-us/media/logos/logo-ms-social.png\" width=\"48\" align=\"right\"><div><strong><a href=\"https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/overview\">Code analysis in .NET</a></strong></div><div>Learn about source code analysis in the .NET SDK.</div></blockquote>",
      "created_at": "2020-10-23T07:02:53Z",
      "updated_at": "2020-10-23T07:02:55Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "> So We have no need to reference the package.\r\n\r\nI have removed the PackageReference, and pushed commit be5c5c3 which proves that a change in the ruleset will break the build.\r\n\r\n",
      "created_at": "2020-10-23T13:27:12Z",
      "updated_at": "2020-10-23T13:27:23Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "> - In VS2019 16.8, you should be able to workaround this issue by using global analyzer configs as per https://github.com/dotnet/roslyn/issues/43051#issuecomment-692837489.\r\n> - In VS2019 16.9 Preview1 and later, the original reported issue should be resolved and you can use editorconfig file itself and /warnaserror will escalate diagnostics configured as warnings in editorconfig to be errors.\r\n> \r\n> _Originally posted by @mavasani in https://github.com/dotnet/roslyn/issues/43051#issuecomment-701702375_\r\n\r\nI have tested EditorConfig configuration with TreatWarningsAsErrors and it is still not working with VS2019 16.8.0 Preview 5.0. The alternative is to use a global AnalyzerConfig (see #13835).\r\n\r\nSee also: https://github.com/dotnet/roslyn/issues/47707",
      "created_at": "2020-10-23T14:05:19Z",
      "updated_at": "2020-10-23T14:09:03Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@xtqqczze TreatWarningsAsErrors issue is about using warning severity only but we should use error severity if we want to force a rule. Yes? I mean why would we use warning severity if we want to stop build with error?",
      "created_at": "2020-10-23T16:19:10Z",
      "updated_at": "2020-10-23T16:21:18Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "> @xtqqczze TreatWarningsAsErrors issue is about using warning severity only but we should use error severity if we want to force a rule. Yes?\r\n\r\nThat is a goal of this PR, to enforce various rules during build.",
      "created_at": "2020-10-23T16:21:45Z",
      "updated_at": "2020-10-23T16:21:45Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "> I mean why would we use warning severity if we want to stop build with error?\r\n\r\nIf `TreatWarningsAsErrors` is enabled then warnings should stop the build.\r\n\r\n",
      "created_at": "2020-10-23T16:24:24Z",
      "updated_at": "2020-10-23T16:24:24Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Since we get a fix for TreatWarningsAsErrors in near future I believe we have no need a workaround today. In EditorConfig we can set severity to error if we want to force a rule.",
      "created_at": "2020-10-23T16:27:01Z",
      "updated_at": "2020-10-23T16:27:01Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "> Since we get a fix for TreatWarningsAsErrors in near future I believe we have no need a workaround today. In EditorConfig we can set severity to error if we want to force a rule.\r\n\r\n@iSazonov In that case, I suggest closing this PR in favour of #13835. Can we make a decision please.",
      "created_at": "2020-10-23T16:30:32Z",
      "updated_at": "2020-10-23T16:30:32Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "We can use `.globalconfig` file (#13835) instead, closing.",
      "created_at": "2020-10-23T17:04:43Z",
      "updated_at": "2020-10-23T17:05:00Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@xtqqczze Why would we need a global config? We can use our .editorconfig file. If we set a severity of a rule to error we will stop the build if the rule violates. Yes?",
      "created_at": "2020-10-23T18:17:16Z",
      "updated_at": "2020-10-23T18:17:16Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "> @xtqqczze Why would we need a global config? We can use our .editorconfig file. If we set a severity of a rule to error we will stop the build if the rule violates. Yes?\r\n\r\nUsing a global AnalyzerConfig avoids bloating EditorConfig with analyzer configuration. Documentation is at https://docs.microsoft.com/dotnet/fundamentals/code-analysis/configuration-files#naming\r\n\r\n<blockquote><img src=\"https://docs.microsoft.com/en-us/media/logos/logo-ms-social.png\" width=\"48\" align=\"right\"><div><strong><a href=\"https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/configuration-files\">Configuration files for code analysis rules - .NET</a></strong></div><div>Learn about different configuration files to configure code analysis rules.</div></blockquote>",
      "created_at": "2020-10-23T19:10:15Z",
      "updated_at": "2020-10-23T19:10:25Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> avoids bloating EditorConfig with analyzer configuration\r\n\r\nBloating? Our file has 194 lines and 142 lines of them with analyzer configuration. I don't expect we will add a lot of rules in near time (maybe ~10 to force new syntax). I believe can live with the EditorConfig while. Also global config does not still supported in VS GUI that is bad UX.",
      "created_at": "2020-10-24T18:40:36Z",
      "updated_at": "2020-10-24T18:42:58Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "> > avoids bloating EditorConfig with analyzer configuration\r\n> \r\n> Bloating? Our file has 194 lines and 142 lines of them with analyzer configuration. I don't expect we will add a lot of rules in near time (maybe ~10 to force new syntax). I believe can live with the EditorConfig while. Also global config does not still supported in VS GUI that is bad UX.\r\n\r\nI think we would want to specify the severity for each rule explicitly (like #13835). There are 246 rules in `Microsoft.CodeAnalysis.NetAnalyzers` alone, ~738 additional lines.\r\n\r\nAnalyzerConfig is a simple text file, I'm not sure what IDE support is needed.\r\n\r\nThe way I see it different configuration kinds should be in separate files:\r\n* **EditorConfig**: file-based configuration settings.\r\n* **Global AnalyzerConfig**: project-level configuration settings. According to documentation, AnalyzerConfig is designed specifically for specifying project-level analyzer configuration options and applies to all the source files in a project, regardless of their file names or file paths.\r\n",
      "created_at": "2020-10-24T22:50:32Z",
      "updated_at": "2020-10-24T23:06:15Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> I think we would want to specify the severity for each rule explicitly (like #13835). There are 246 rules in Microsoft.CodeAnalysis.NetAnalyzers alone, ~738 additional lines.\r\n\r\nCurrently we use defaults and it is well. Do you expect that we will change defaults and set severity to error for 246 rules?\r\n\r\n> AnalyzerConfig is a simple text file, I'm not sure what IDE support is needed.\r\n\r\nIt is mandatory requirement that IDE support Roslyn analyzer configuration. I know VS Code supports EditorConfig but I am not sure it supports GlobalConfig. Can you confirm?",
      "created_at": "2020-10-26T04:38:39Z",
      "updated_at": "2020-10-26T04:38:39Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I tried VS Code with GlobalConfig and it does not work at all :-( OmniSharp uses defaults and ignore the global config. I will open the feature request in OmniSharp repo.\r\n\r\n@xtqqczze Now I suggest to put all global config content to a end of out EditorConfig file. After we get the feature in OmniSharp we will be able to move the rules back to a global config file.",
      "created_at": "2020-10-26T13:14:49Z",
      "updated_at": "2020-10-26T13:14:49Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "> OmniSharp\r\n\r\n@iSazonov Works for me. Do you have `omnisharp.enableRoslynAnalyzers` set to `true` in `.vscode\\settings.json`\r\n\r\nSee also: https://github.com/PowerShell/PowerShell/pull/11627\r\n",
      "created_at": "2020-10-26T13:33:55Z",
      "updated_at": "2020-10-26T13:36:24Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@xtqqczze EditorConfig works but GlobalConfig doesn't work.\r\n\r\nI tested with \r\n```# CA1507: Use nameof to express symbol names\r\ndotnet_diagnostic.CA1507.severity = silent\r\n```\r\n\r\n",
      "created_at": "2020-10-26T13:52:23Z",
      "updated_at": "2020-10-26T13:53:35Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov I tested in VS Code 1.50.1 (Omnisharp 1.37.3) with `src\\Microsoft.PowerShell.Commands.Management\\cimSupport\\cmdletization\\SessionBasedWrapper.cs` open in the editor.\r\n\r\nAs expected, a diagnostic with code CA1507 is listed in the problems tab.\r\n\r\nThen I set `dotnet_diagnostic.CA1507.severity = silent` in `.globalconfig` and restarted VS Code and **the diagnostic is no longer listed**.\r\n\r\nIn my environment, OmniSharp is using the MSBuild instance provided by `Visual Studio Enterprise 2019 16.8.30615.102`.\r\n\r\nPerhaps you could you try setting `omnisharp.loggingLevel` to `debug` and examine the log output?",
      "created_at": "2020-10-26T14:23:09Z",
      "updated_at": "2020-10-26T14:23:09Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> Visual Studio Enterprise 2019 16.8.30615.102\r\n\r\nI updated to latest preview and now it works. Thanks!",
      "created_at": "2020-10-26T14:43:32Z",
      "updated_at": "2020-10-26T14:43:32Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "> It is mandatory requirement that IDE support Roslyn analyzer configuration. I know VS Code supports EditorConfig but I am not sure it supports GlobalConfig. Can you confirm?\r\n\r\nSupport for `.globalconfig` is built into roslyn, so it should work in any IDE (including Visual Studio Enterprise 2019 16.8)\r\n\r\n",
      "created_at": "2020-10-26T15:09:06Z",
      "updated_at": "2020-10-26T15:09:06Z"
    }
  ],
  "created_at": "2020-06-04T00:07:39Z",
  "number": 12892,
  "state": "closed",
  "title": "Enable Microsoft.CodeAnalysis.NetAnalyzers code analyzers",
  "updated_at": "2020-10-26T16:21:41Z"
}