{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10380",
  "author": "daxian-dbw",
  "body": "This is an issue tracking the review comment of https://github.com/PowerShell/PowerShell/pull/8205#discussion_r314878460, which should be fixed in the follow-up PR of #8205.\r\n\r\nThe PR #8205 introduces `ActionPreference.Break`, which will result breaking into the debugger (enable the debugger) when an action (e.g. ErrorAction) is hit.\r\n\r\n`-ErrorAction break` will set the debugger mode to be `Enabled`, and after that the debugger mode will stay `Enabled`. That means once a `ActionPreference.Break` is hit, the session will never be able to run script in optimized mode anymore.\r\nThis feels like a concern to me. I can imagine one scenario where people uses `-ErrorAction Break` -- I don't expect an error will be thrown but want to debug in case the unexpected happens, but after debugging (quit the debugger prompt), I would like the rest of my scripts continue to run as efficient as it can (in optimized mode). That scenario will be compromised as the debugger mode will always be `Enabled` after the `-ErrorAction Break` is hit, and thus the `Compiler` will generated unoptimized code for the rest time of the session.\r\n\r\nThere should be a way to disable the debugger after `ActionPreference.Break` is hit and the debugging session is done.",
  "closed_at": null,
  "comments": [],
  "created_at": "2019-08-19T17:41:36Z",
  "number": 10380,
  "state": "open",
  "title": "Need to be able to disable the debugger when the debugging is done after `ActionPreference.Break` is hit",
  "updated_at": "2019-08-20T03:33:58Z"
}