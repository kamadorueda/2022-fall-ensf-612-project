{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11783",
  "author": "daxian-dbw",
  "body": "# Summary of the new feature/enhancement\r\n\r\nToday, we don't have the PowerShell built-in modules published, so it's hard for an application that hosting powershell to ship the built-in modules along with the application.\r\nBuilt-in modules are needed for hosting application to use `ForEach-Object -Parallel`, which creates separate Runspaces with `InitialSessionState.CreateDefault2()` and thus force module loading instead of using the built-in spanins.\r\nIt's the same for `PSThreadJob` module, or any other modules that create Runspace using the same API.\r\n\r\nWe run into this in Azure Functions, and then in PS sub kernel in dotnet-interactive.\r\nNow, we just have to download the needed module manifests (utility, management) from GitHub powershell repo, and it doesn't really work because\r\n1. dotnet-interactive build a global tool that should work on all platforms\r\n2. the manifest is not platform agnostic, and there is no way to include both Unix/Windows in the global tool and make the right choice at runtime.\r\n",
  "closed_at": "2020-02-12T00:13:22Z",
  "comments": [
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:This issue was addressed in #11832, which has now been successfully released as `v7.0.0-rc.3`.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.0.0-rc.3)\n",
      "created_at": "2020-02-21T23:54:18Z",
      "updated_at": "2020-02-21T23:54:18Z"
    }
  ],
  "created_at": "2020-02-05T18:28:56Z",
  "labels": [
    "Issue-Enhancement",
    "Area-Maintainers-Build"
  ],
  "number": 11783,
  "state": "closed",
  "title": "Publish PowerShell built-in modules along with the NuGet packages for hosting applications to include",
  "updated_at": "2020-02-21T23:54:18Z"
}