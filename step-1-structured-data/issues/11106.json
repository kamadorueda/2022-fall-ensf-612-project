{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11106",
  "author": "JustinGrote",
  "body": "# Summary of the new feature/enhancement\r\n\r\n<!-- \r\nA clear and concise description of what the problem is that the new feature would solve.\r\nTry formulating it in user story style (if applicable):\r\n'As a user I want X so that Y.' with X being the being the action and Y being the value of the action.\r\n-->\r\nGet-Error reports fullyqualifiederrorid without its namespace. This can make it difficult to find the fully qualified exception for use in catch statements, especially if running in Azure Functions or other environments with custom exceptions and you only have text logs to go off of. Since the major point of Get-Error is to address exceptions and perhaps catch them, the fully qualified type is important to do a specific catch, as my most common workflow when looking at errors is doing `$error[0].exception.gettype().fullname` as the very next step so I know what to use in a try/catch.\r\n\r\n# Proposed technical implementation details (optional)\r\n\r\nAdd `FullyQualifiedErrorType` and `FullyQualifiedErrorParentType` properties that would display the full error type (what you would submit as a type to catch) as well as other error types that would catch this property, minus the obvious \"system.exception\" and \"system.object\" that all exceptions inherit from.\r\n\r\ne.g.\r\nFullyQualifiedErrorType:\r\n```powershell\r\n$error[0].exception.gettype()\r\n```\r\nFullyQualifiedErrorParentTypes:\r\n```powershell\r\n$currentType = $error[0].exception.getType()\r\nwhile ($CurrentType) {\r\n    $currentType = $currentType.BaseType\r\n    if ($currentType.fullname -eq 'System.Exception') {break}\r\n    $currentType\r\n}\r\n```\r\n\r\n<!-- \r\nA clear and concise description of what you want to happen.\r\nConsider providing an example PowerShell experience with expected result.\r\n-->\r\n",
  "closed_at": "2019-11-19T18:38:03Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "/cc @SteveL-MSFT ",
      "created_at": "2019-11-19T10:07:31Z",
      "updated_at": "2019-11-19T10:07:31Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Note that `.FullyQualifiedErrorId` is _not_ the same as the [type name of] the exception underlying the error record; when you create an error record, you can choose an error ID at your discretion; e.g.:\r\n\r\n```\r\nPS> [System.Management.Automation.ErrorRecord]::new([exception]::new(), 'MyErrorId', 'InvalidData', $null) | Get-Error\r\n\r\nException             :\r\n    Message : Exception of type 'System.Exception' was thrown.\r\n    HResult : -2146233088\r\nCategoryInfo          : InvalidData: (:) [], Exception\r\nFullyQualifiedErrorId : MyErrorId\r\n```\r\n\r\nNote how the `FullyQualifiedErrorId:` line reflects the custom error ID passed to the error-record constructor - `MyErrorId` - as-is.\r\n\r\nHowever, I agree that it _is_ desirable to have the full exception type name reflected in the output, by introducing _another output line_, e.g., `Type: `:\r\n\r\n```powershell\r\nException             :\r\n    Type: System.Exception   # <<<< new line with full type name.\r\n    Message : Exception of type 'System.Exception' was thrown.\r\n    HResult : -2146233088\r\nCategoryInfo          : InvalidData: (:) [], Exception\r\nFullyQualifiedErrorId : MyErrorId\r\n```\r\n\r\nDitto for `.InnerException`.\r\n\r\n@SteveL-MSFT: Not sure if more work will be done before v7 GA; note that the VT sequences in `Get-Error`'s output are currently invariably emitted, even when you capture the output in a file.\r\n\r\n\r\n",
      "created_at": "2019-11-19T17:54:13Z",
      "updated_at": "2019-11-19T17:54:13Z"
    },
    {
      "author": "JustinGrote",
      "author_association": "CONTRIBUTOR",
      "body": "Right, my point was simply that there should be a property that at least\ncontains either the type definition of the exception or its string\nrepresentation, since 80% of the time, that's what I'm looking for.\n\nOn Tue, Nov 19, 2019, 9:55 AM Michael Klement <notifications@github.com>\nwrote:\n\n> Note that .FullyQualifiedErrorId is *not* the same as the [type name of]\n> the exception underlying the error record; when you create an error record,\n> you can choose an error ID at your discretion; e.g.:\n>\n> PS> [System.Management.Automation.ErrorRecord]::new([exception]::new(), 'MyErrorId', 'InvalidData', $null) | Get-Error\n>\n> Exception             :\n>     Message : Exception of type 'System.Exception' was thrown.\n>     HResult : -2146233088\n> CategoryInfo          : InvalidData: (:) [], Exception\n> FullyQualifiedErrorId : MyErrorId\n>\n> Note how the FullyQualifiedErrorId: line reflects the custom error ID\n> passed to the error-record constructor - MyErrorId - as-is.\n>\n> However, I agree that it *is* desirable to have the full exception type\n> name reflected in the output, by introducing *another output line*, e.g., Type:\n> :\n>\n> Exception             :\n>     Type: System.Exception   # <<<< new line with full type name.\n>     Message : Exception of type 'System.Exception' was thrown.\n>     HResult : -2146233088\n> CategoryInfo          : InvalidData: (:) [], Exception\n> FullyQualifiedErrorId : MyErrorId\n>\n> Ditto for .InnerException.\n>\n> @SteveL-MSFT <https://github.com/SteveL-MSFT>: Not sure if more work will\n> be done before v7 GA; note that the VT sequences in Get-Error's output\n> are currently invariably emitted, even when you capture the output in a\n> file.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/PowerShell/PowerShell/issues/11106?email_source=notifications&email_token=ADUNKUSREBXX63SOZWVJZB3QUQR75A5CNFSM4JO2FVD2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEEPDRPA#issuecomment-555628732>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ADUNKUWOJOVOZLYGVIPM6PDQUQR75ANCNFSM4JO2FVDQ>\n> .\n>\n",
      "created_at": "2019-11-19T18:08:20Z",
      "updated_at": "2019-11-19T18:08:20Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I believe https://github.com/PowerShell/PowerShell/pull/11076 already resolves this?  Didn't make it in time for Preview.6, but should be there for RC.",
      "created_at": "2019-11-19T18:12:50Z",
      "updated_at": "2019-11-19T18:12:50Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Great, @SteveL-MSFT; yes, that should resolve it.\r\n\r\nHowever, can I suggest using just `Type:` rather than `ExceptionType:` as the label?\r\nThis would be consistent with the other labels; e.g., it's `Message:`, not `ExceptionMessage:`.\r\n\r\n@JustinGrote, can you please close this issue?\r\n",
      "created_at": "2019-11-19T18:17:10Z",
      "updated_at": "2019-11-19T18:17:10Z"
    },
    {
      "author": "JustinGrote",
      "author_association": "CONTRIBUTOR",
      "body": "Totally missed the PR (there's a lot of them after all). Thanks @SteveL-MSFT. Meets my criteria.\r\n\r\nFixed by #11076",
      "created_at": "2019-11-19T18:38:03Z",
      "updated_at": "2019-11-19T18:38:03Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT, while you're working on #11076, can you look at these new issues?\r\n\r\n* #11121\r\n* #11122\r\n* #11123\r\n\r\n\r\n",
      "created_at": "2019-11-19T18:55:13Z",
      "updated_at": "2019-11-19T18:55:13Z"
    }
  ],
  "created_at": "2019-11-18T21:10:30Z",
  "labels": [
    "Issue-Enhancement",
    "Resolution-Fixed",
    "WG-Cmdlets-Utility"
  ],
  "number": 11106,
  "state": "closed",
  "title": "PS7: Get-Error should report the fully-qualified error name",
  "updated_at": "2019-11-20T02:57:35Z"
}