{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13830",
  "author": "PaulHigin",
  "body": "Crash dumps have shown that Runspace.Close() operation can crash a process if the final two runspaces of a session are closed at the same time.  This is because a transcription may be closed/disposed by two separate threads, resulting in a IO or Disposed exception.\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/master/src/System.Management.Automation/engine/hostifaces/MshHostUserInterface.cs#L1176\r\n\r\nThe Dispose method should be idempotent and if the underlying writer object is disposed or file is closed, the method should not throw.\r\n\r\nThe problem was found in Windows PowerShell, but the fix (wrap in try/catch) should be applied here as well.\r\n\r\n## Environment data\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.3\r\nPSEdition                      Core\r\nGitCommitId                    7.0.3\r\nOS                             Microsoft Windows 10.0.19042\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2020-11-03T21:00:41Z",
  "comments": [],
  "created_at": "2020-10-21T22:54:05Z",
  "labels": [
    "Issue-Bug",
    "WG-Engine"
  ],
  "number": 13830,
  "state": "closed",
  "title": "TranscriptionOption.Dispose() should be idempotent",
  "updated_at": "2020-11-03T21:00:41Z"
}