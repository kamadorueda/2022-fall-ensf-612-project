{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7911",
  "author": "HumanEquivalentUnit",
  "body": "The dates 31st September, or 30th February are invalid, but `Get-Date` allows you to ask for them. It only validates the -Day param in the range 1-31, but doesn't check the length of the month. Asking for the \"last\" days in a short month, overruns the end of the month and returns a datetime at the beginning of the next month, instead of an exception. This is inconsistent with other .Net DateTime and Get-Date behaviour:\r\n\r\n```\r\n[datetime]::new(2018, 2, 31)            # Exception\r\nGet-Date '2018-02-31'                   # Exception\r\nGet-Date -Year 2018 -Month 2 -Day 31    # returns a DateTime in March\r\n``` \r\n\r\nExpected behavior\r\n-----------------\r\n\r\nAn error, similar to trying the same thing with `[datetime]::new()`, e.g.\r\n\r\n```Exception [..] \"Year, Month, and Day parameters describe an un-representable DateTime.\"```\r\n\r\nActual behavior\r\n---------------\r\n\r\nReturning a date, but (surprise!) not the one requested.\r\n\r\nEnvironment data\r\n----------------\r\n\r\nHappens on PS 6.1.0 Core release version on Linux and on PSv5.1 on Windows.",
  "closed_at": "2018-10-03T22:36:13Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "It is a breaking change.\r\n/cc @SteveL-MSFT ",
      "created_at": "2018-10-02T09:12:39Z",
      "updated_at": "2018-10-02T09:12:39Z"
    },
    {
      "author": "HumanEquivalentUnit",
      "author_association": "CONTRIBUTOR",
      "body": "The cmdlet code takes `DateTime.now` and adds any provided parameter value (year, month, day, hour) as an offset, without further checks. All those params have a consistent size (seconds in a minute, minutes in an hour, hours in a day) - except days in a month, which varies, and that's why the bug only happens to `-Day` values.\r\n\r\nIt could be fixed by more complex parameter validation - but since you can pass `-Day` without `-Year` or `-Month`, that would be quite complex to do.\r\n\r\nHere is a possible fix which fits in ~line 236 of the Get-Date code, once Year and Month are settled, and throws if it would overrun. \r\n\r\n```\r\n                // Day parameter can be 1-31, but some months have fewer days;\r\n                // check against month length to avoid overrunning into next month.\r\n                if (Day > DateTime.DaysInMonth(dateToUse.Year, dateToUse.Month))\r\n                {\r\n                    var e = new PSArgumentOutOfRangeException(\r\n                                \"Day\",\r\n                                Day,\r\n                                \"Day value is greater than the number of days in the month\");\r\n\r\n                    ThrowTerminatingError(\r\n                        new ErrorRecord(e, \"InvalidDate\", ErrorCategory.InvalidArgument, null));\r\n                }\r\n```\r\n\r\n(Is that a reasonable Exception to throw?)",
      "created_at": "2018-10-03T06:42:57Z",
      "updated_at": "2018-10-03T20:59:50Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@HumanEquivalentUnit Thanks for your investigations! This must first be approved by PowerShell committee.",
      "created_at": "2018-10-03T07:30:14Z",
      "updated_at": "2018-10-03T07:30:14Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee reviewed this, we would not accept an error causing a breaking change.  If there is more data about customer impact by this, we can reconsider alternate solutions.",
      "created_at": "2018-10-03T22:26:13Z",
      "updated_at": "2018-10-03T22:27:46Z"
    },
    {
      "author": "HumanEquivalentUnit",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT Thank you for reviewing it; I have no specific need for it to be changed, so from my view this could be closed and left for the record.\r\n\r\nI was about to say, is it worth adding to the Get-Date documentation as a caution - but it's already there. Places I should have looked first (sorry!).",
      "created_at": "2018-10-03T22:36:13Z",
      "updated_at": "2018-10-03T22:36:13Z"
    }
  ],
  "created_at": "2018-10-01T18:35:21Z",
  "labels": [
    "Resolution-Won't Fix",
    "Breaking-Change",
    "Committee-Reviewed",
    "WG-Cmdlets-Utility"
  ],
  "number": 7911,
  "state": "closed",
  "title": "Get-Date -Day NN parameter can overrun the number of days in a month, on short months, with unexpected output.",
  "updated_at": "2018-10-04T04:27:37Z"
}