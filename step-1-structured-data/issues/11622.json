{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11622",
  "author": "rjmholt",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\nhttps://github.com/PowerShell/PowerShell/pull/11312 changed the `SetBreakpoint()` API in a breaking way. This PR restores the original API while continuing to make the new one available.\r\n\r\nTooling will be impacted by not crashing when targeting the `SetBreakpoints` API across PowerShell versions.\r\n\r\n**NOTE** #11312 adds default parameters to other APIs (not broken since they were only added in the 7.0 timeframe). For compatibility it would be favourable to turn those into overloads instead.\r\n\r\nServices https://github.com/PowerShell/PowerShell/issues/11619.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [ ] I have considered the user experience from a tooling perspective and don't believe tool ing will be impacted.\r\n    - **OR**\r\n    - [x] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2020-01-30T19:27:57Z",
  "comments": [
    {
      "author": "TylerLeonhardt",
      "author_association": "MEMBER",
      "body": "> NOTE #11312 adds default parameters to other APIs (not broken since they were only added in the 7.0 timeframe). For compatibility it would be favourable to turn those into overloads instead.\r\n\r\nI spoke to @daxian-dbw about this back when I implemented #11312 and we decided that that breakage was fine.",
      "created_at": "2020-01-24T00:55:51Z",
      "updated_at": "2020-01-24T00:56:57Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "> we decided that that breakage was fine.\r\n\r\nWell it's not mutually exclusive -- perhaps we can have both? Also, it feels like such a decision should be documented in either the PR or the extended commit message.",
      "created_at": "2020-01-27T17:43:44Z",
      "updated_at": "2020-01-27T17:43:44Z"
    },
    {
      "author": "TylerLeonhardt",
      "author_association": "MEMBER",
      "body": "Yeah I thought that was captured but I guess not. I'll defer to @daxian-dbw for the right call here. I'm fine either way. Happy to add a comment on my old PR calling out the break.",
      "created_at": "2020-01-27T19:56:17Z",
      "updated_at": "2020-01-27T19:56:17Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "I agree to have overloads.",
      "created_at": "2020-01-27T22:14:16Z",
      "updated_at": "2020-01-27T22:14:16Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "Please review @PaulHigin ",
      "created_at": "2020-01-29T22:16:40Z",
      "updated_at": "2020-01-29T22:16:40Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.0.0-rc.3` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.0.0-rc.3)\n",
      "created_at": "2020-02-21T23:55:39Z",
      "updated_at": "2020-02-21T23:55:39Z"
    }
  ],
  "created_at": "2020-01-17T23:54:42Z",
  "number": 11622,
  "state": "closed",
  "title": "Restore `SetBreakpoints` API",
  "updated_at": "2020-02-21T23:55:39Z"
}