{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5198",
  "author": "vors",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\n- Windows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nIf it is a bug report:\r\n- make sure you are able to repro it on the latest released version. \r\nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://github.com/PowerShell/PowerShell/blob/master/docs/KNOWNISSUES.md).\r\n- Fill out the following repro template:\r\n\r\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\r\n-->\r\n\r\nMethod call parsing fails when it should not\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\nPS /Users/vors/dev/ZLocation> $response.Send($service.Get() | ConvertTo-Json)                                        \r\nAt line:1 char:30\r\n+ $response.Send($service.Get() | ConvertTo-Json)\r\n+                              ~\r\nMissing ')' in method call.\r\nAt line:1 char:47\r\n+ $response.Send($service.Get() | ConvertTo-Json)\r\n+                                               ~\r\nUnexpected token ')' in expression or statement.\r\n    + CategoryInfo          : ParserError: (:) [], ParentContainsErrorRecordException\r\n    + FullyQualifiedErrorId : MissingEndParenthesisInMethodCall\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\nparses fine\r\n\r\nActual behavior\r\n---------------\r\n\r\nparsing error\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value                                                                                \r\n----                           -----                                                                                \r\nPSVersion                      6.0.0-beta                                                                           \r\nPSEdition                      Core                                                                                 \r\nGitCommitId                    v6.0.0-beta.5                                                                        \r\nOS                             Darwin 16.7.0 Darwin Kernel Version 16.7.0: Thu Jun 15 17:36:27 PDT 2017; root:xnu...\r\nPlatform                       Unix                                                                                 \r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}                                                              \r\nPSRemotingProtocolVersion      2.3                                                                                  \r\nSerializationVersion           1.1.0.1                                                                              \r\nWSManStackVersion              3.0  \r\n```\r\n",
  "closed_at": "2018-11-24T23:20:13Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "`$response.Send($service | ConvertTo-Json)` failed too.\r\nDo we really support a pipe as method parameter?",
      "created_at": "2017-10-22T18:55:00Z",
      "updated_at": "2017-10-22T18:55:00Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "Shouldn't that be `$response.Send(($service | ConverTo-Json))`?",
      "created_at": "2017-10-22T19:00:35Z",
      "updated_at": "2017-10-22T19:00:35Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "Method arguments must be expressions, they can't be a pipeline.\r\n\r\nIf a pipeline were allowed, there would be some ugly ambiguities to resolve, e.g.\r\n\r\n```PowerShell\r\n$obj.Method(Get-Thing 1,2)\r\n```\r\n\r\nDoes this pass `Get-Thing 1` and `2` to `Method` (2 arguments) or the result of `Get-Thing 1,2` (one argument).",
      "created_at": "2017-10-23T05:30:26Z",
      "updated_at": "2017-10-23T05:30:26Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Can we write more clear error message in the case?",
      "created_at": "2017-10-23T05:55:01Z",
      "updated_at": "2017-10-23T05:55:01Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "Ah I see.\r\nI think it's worth to go an extra mile to write a special case error message as @iSazonov suggested.",
      "created_at": "2017-10-23T06:45:24Z",
      "updated_at": "2017-10-23T06:45:24Z"
    }
  ],
  "created_at": "2017-10-22T17:37:20Z",
  "labels": [
    "WG-Language",
    "Resolution-By Design"
  ],
  "number": 5198,
  "state": "closed",
  "title": "Unexpected MissingEndParenthesisInMethodCall",
  "updated_at": "2018-11-24T23:20:13Z"
}