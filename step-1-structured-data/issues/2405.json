{
  "_url": "https://github.com/PowerShell/PowerShell/issues/2405",
  "author": "kilasuit",
  "body": "This decouples PowerShellGet from the PowerShell repository allowing development to occur on the PowerShellGet repository\n",
  "closed_at": "2016-10-06T20:21:57Z",
  "comments": [
    {
      "author": "msftclas",
      "author_association": "NONE",
      "body": "Hi **@kilasuit**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    <span>You've already signed the contribution license agreement. Thanks!</span>\n        <p>The agreement was validated by Microsoft and real humans are currently evaluating your PR.</p>\n\nTTYL, MSBOT;\n",
      "created_at": "2016-10-02T03:36:57Z",
      "updated_at": "2016-10-02T03:36:57Z"
    },
    {
      "author": "bmanikm",
      "author_association": "CONTRIBUTOR",
      "body": "@kilasuit, @vors, @raghushantha \nCan we pull the latest version of PowerShellGet module from the PSGallery as a post-build step?\n",
      "created_at": "2016-10-03T18:12:47Z",
      "updated_at": "2016-10-03T18:12:47Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "As we make our modules installable independently, I don't think we want to ship unreleased versions of those modules, which implies we don't want to build the modules as git submodules\n\nInstead, I think we want to fetch packages from a nuget feed - most likely powershell.myget.org but possibly powershellgallery.com.\n",
      "created_at": "2016-10-03T23:01:33Z",
      "updated_at": "2016-10-03T23:01:33Z"
    },
    {
      "author": "kilasuit",
      "author_association": "COLLABORATOR",
      "body": "@lzybkr totally agree that we need to have that for v6 release but the concern I have currently is that there are 2 places to make changes _until_ the work for #1979 is fully completed (which yes IMO would include pulling the modues in via a nuget feed of sorts like you've suggested once we get there) but I think for the short term pulling in as a git submodule is a realistic middle ground that allows us the time to correctly identify the right route for how we implement it as a bigger part of #1979 and stops the \" 2 places to edit the same code\" issue we currently have.\n\nOn reflection I should really have put the above in the original comment and I'm not actually sure why I didn't.\n",
      "created_at": "2016-10-04T21:20:20Z",
      "updated_at": "2016-10-04T21:20:20Z"
    },
    {
      "author": "kilasuit",
      "author_association": "COLLABORATOR",
      "body": "Hope that clears up any unnecessary confusion caused\n",
      "created_at": "2016-10-04T21:21:20Z",
      "updated_at": "2016-10-04T21:21:20Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "We are moving forward with pulling a package (specifics to be determined). This work might not be done for the next release, but hopefully the release after that.\n\nIntroducing submodules is a pain, removing them is also a pain, so we're rejecting this PR.\n\nAs this issue should be resolved in the short term, we won't be making PowerShellGet/PackageManagement fixes in both places, we'll live with the bugs present in PowerShell/PowerShell for the next release.\n",
      "created_at": "2016-10-06T20:21:57Z",
      "updated_at": "2016-10-06T20:21:57Z"
    },
    {
      "author": "kilasuit",
      "author_association": "COLLABORATOR",
      "body": "No worries @lzybkr - totally agree with the points made re adding/removing submodules and glad to see this be planned to tie in within the next few releases.\n\nI'll keep my eyes on how the package pulling implementation goes in line with #1979 as IMO getting that right really is crucial for the long term.\n",
      "created_at": "2016-10-06T20:41:44Z",
      "updated_at": "2016-10-06T20:41:44Z"
    }
  ],
  "created_at": "2016-10-02T03:36:53Z",
  "number": 2405,
  "state": "closed",
  "title": "Moved PowerShellGet to be a git submodule",
  "updated_at": "2016-10-06T20:41:44Z"
}