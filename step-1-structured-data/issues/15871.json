{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15871",
  "author": "doggy8088",
  "body": "### Prerequisites\r\n\r\n- [X] Write a descriptive title.\r\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- [X] Search the existing issues.\r\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\r\n\r\n### Steps to reproduce\r\n\r\n1. Download a text file encoded with `ISO-8859-1` (Latin-1) encoding/charset\r\n\r\n    ```sh\r\n    curl https://blog.miniasp.com/latin1-example.txt -o latin1-example.txt\r\n    ```\r\n\r\n2. Check my Ubuntu version\r\n\r\n    ```sh\r\n    $ lsb_release -a\r\n    No LSB modules are available.\r\n    Distributor ID: Ubuntu\r\n    Description:    Ubuntu 20.04.2 LTS\r\n    Release:        20.04\r\n    Codename:       focal\r\n    ```\r\n\r\n3. Enter PowerShell and use linux's `cat` to simulate `ISO-8859-1` (Latin-1) encoding output\r\n\r\n    ```sh\r\n    $ pwsh\r\n    PowerShell 7.1.3\r\n    Copyright (c) Microsoft Corporation.\r\n\r\n    https://aka.ms/powershell\r\n    Type 'help' to get help.\r\n\r\n    PS /home/will>cat ./latin1-example.txt > ./cc.txt\r\n    ```\r\n    \r\n    ![image](https://user-images.githubusercontent.com/88981/128235895-8760ec92-d67e-434f-b6e0-b369c06b5ef9.png)\r\n\r\n4. Configure `$PSDefaultParameterValues` and try again\r\n\r\n\r\n    ```sh\r\n    PS /home/will> $PSDefaultParameterValues['*:Encoding'] = 'iso-8859-1'\r\n    PS /home/will> Get-Content ./latin1-example.txt\r\n    \u00b4\u00fa\u00b8\u00d5\r\n    PS /home/will> wc ./latin1-example.txt\r\n    0 0 4 ./latin1-example.txt\r\n    PS /home/will> cat ./latin1-example.txt > ./cc.txt\r\n    PS /home/will> Get-Content ./cc.txt\r\n    ???\r\n    ```\r\n\r\n    ![image](https://user-images.githubusercontent.com/88981/128235573-d7b053e2-aed1-490d-b56f-642bc03c0ac0.png)\r\n\r\n\r\n### Expected behavior\r\n\r\n```console\r\nI expected to read the pipelines data using the same encoding/charset.\r\n```\r\n\r\n\r\n### Actual behavior\r\n\r\n```console\r\nPowerShell can't handle pipelines with encoding correctly.\r\n```\r\n\r\n\r\n### Error details\r\n\r\n```console\r\nI'm in a Linux environment. I have a command which can only output ISO-8859-1 encoding text.  I'd like to read it and save AS IS. But PowerShell seems will always save with a wrong charset. The content will not be the original one.\r\n```\r\n\r\n\r\n### Environment data\r\n\r\n```powershell\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.3\r\nPSEdition                      Core\r\nGitCommitId                    7.1.3\r\nOS                             Linux 5.4.0-80-generic #90-Ubuntu SMP Fri Jul 9 22:49:44 UTC 2021\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\n\r\n### Visuals\r\n\r\n_No response_",
  "closed_at": "2021-08-07T00:00:33Z",
  "comments": [
    {
      "author": "237dmitry",
      "author_association": "NONE",
      "body": "`/usr/bin/cat` nothing knows about file encoding and powershell's encoding. You need to start it from `bash` (to avoid powershell's redirection `>`) or use `Get-Content`:\r\n\r\n```\r\nPS > $PSDefaultParameterValues['*:Encoding'] = 'iso-8859-1'\r\nPS > bash -c \"cat ./latin1-example.txt > cc.txt\"\r\nPS > Get-Content ./cc.txt\r\n\u00b4\u00fa\u00b8\u00d5\r\nPS > Get-Content ./latin1-example.txt > cc.txt\r\nPS > Get-Content ./cc.txt\r\n\u00b4\u00fa\u00b8\u00d5\r\n```",
      "created_at": "2021-08-05T00:31:33Z",
      "updated_at": "2021-08-05T00:31:33Z"
    },
    {
      "author": "jborean93",
      "author_association": "COLLABORATOR",
      "body": "At least on Windows the encoding powershell uses when reading data from stdout is based on `[Console]::OutputEncoding`. This only applies when the output is going to be processed by powershell either with:\r\n\r\n* redirection\r\n* saving to a var\r\n* being pipelined to something else\r\n\r\nWhen none of these apply then the stdout is written directly to the console buffer bypassing PowerShell. Unfortunately some of these concepts may not apply to Linux so take this with a grain of salt.",
      "created_at": "2021-08-05T01:23:29Z",
      "updated_at": "2021-08-05T01:23:29Z"
    },
    {
      "author": "doggy8088",
      "author_association": "NONE",
      "body": "It PowerShell can have a `$InputEncoding` predefined variable. Probably this can be solved.",
      "created_at": "2021-08-05T07:30:46Z",
      "updated_at": "2021-08-05T07:30:46Z"
    },
    {
      "author": "jborean93",
      "author_association": "COLLABORATOR",
      "body": "That's what `[Console]::OutputEncoding` is meant to be for. PowerShell/.NET should be using that when reading the stdout/stderr bytes from the native application. This is what it does on Windows and I would assume it's also what it does on Linux.",
      "created_at": "2021-08-05T18:49:54Z",
      "updated_at": "2021-08-05T18:49:54Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2021-08-07T00:00:32Z",
      "updated_at": "2021-08-07T00:00:32Z"
    }
  ],
  "created_at": "2021-08-04T18:25:37Z",
  "labels": [
    "Issue-Question",
    "WG-Engine",
    "Resolution-Answered",
    "Needs-Triage"
  ],
  "number": 15871,
  "state": "closed",
  "title": "How to read pipeline with iso-8859-1 encoding characters?",
  "updated_at": "2021-08-07T00:00:33Z"
}