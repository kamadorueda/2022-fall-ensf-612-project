{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6632",
  "author": "iSazonov",
  "body": " .Net Core 2.1 Preview2 is [released](https://blogs.msdn.microsoft.com/dotnet/2018/04/11/announcing-net-core-2-1-preview-2).\r\n\r\nWe should move to the new version.\r\n\r\n1. Roll-forward in RTM and Self-contained Application Servicing\r\nThis can affect the creation of security patches.\r\n2. Elimination of platform dependencies on libcurl\r\nWe have some workarounds for libcurl. We should review this. \"On Linux, you need to deploy libcurl yourself if you want to use the old HttpClient implementation.\"",
  "closed_at": "2018-05-17T06:18:54Z",
  "comments": [
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "hmm.. Should we really use a preview release? It's one thing to test it in a branch or something, prep for changes, and test for regressions, but we shouldn't commit a Preview release of .NET Core into PowerShell's Master, IMO.",
      "created_at": "2018-04-12T04:08:04Z",
      "updated_at": "2018-04-12T04:08:04Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@markekraus Plan is to move .Net Core 2.1 Preview2 before PowerShell Core 6.1 Preview2.\r\n\r\n .Net Core 2.1 policy is \"no breaking changes in APIs\". \r\nMy main concerns about the new HttpClient client but .Net Core allow use old implementation based on libcurl.",
      "created_at": "2018-04-12T04:22:44Z",
      "updated_at": "2018-04-12T04:22:44Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "The PSCore6.1 release is essentially tied to the .Net Core 2.1 release because of some dependencies on 2.1.  For the 6.1 Previews, I think it's fine to move to a dotnetcore Preview so we can find issues in dotnetcore and get those fixed before they move out of Preview.",
      "created_at": "2018-04-12T04:23:44Z",
      "updated_at": "2018-04-12T04:23:44Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT Ok, do we have a contract that states that we will not ship 6.1 until 2.1 is GA? What if 2.1 is delayed several months beyond the planned 6.1 GA? Will we revert and ship or will we delay release until 2.1 is final?\r\n\r\n@iSazonov Right, no one is looking forward to getting rid of that libcurl dependency as much as I am. That doesn't mean we should merge a preview framework into master.",
      "created_at": "2018-04-12T05:06:01Z",
      "updated_at": "2018-04-12T05:06:01Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@markekraus I had the same fears when we moved from 1.0 to 2.0 but @daxian-dbw  did this job perfectly!\r\nIt should be a lot easier now - it is 2.0 -> 2.1 not 2.0 -> 3.0. Initially it will be a PR that you can check locally before merging. We should do this as quickly as possible to identify all possible problems before GA. ",
      "created_at": "2018-04-12T05:21:38Z",
      "updated_at": "2018-04-12T05:21:38Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@markekraus We plan to have a new minor GA approx every 6 months, but we're not bound to that timeline.  So if 2.1 slips, 6.1 will slip with it.  Note that PSCore6 will not always have a hard dependency on latest dotnetcore.",
      "created_at": "2018-04-12T13:52:33Z",
      "updated_at": "2018-04-12T13:52:33Z"
    },
    {
      "author": "jherby2k",
      "author_association": "NONE",
      "body": "Oh please oh please do it. Right now my binary module doesn't work under PSCore because it uses some of the Span<T> APIs in System.Memory, which seem to conflict with the library in the 2.0 SDK.",
      "created_at": "2018-04-12T14:33:48Z",
      "updated_at": "2018-04-12T14:33:48Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT \r\n>Note that PSCore6 will not always have a hard dependency on latest dotnetcore.\r\n\r\nFrom https://blogs.msdn.microsoft.com/dotnet/2018/04/11/announcing-net-core-2-1-preview-2/ :\r\n>dotnet publish now publishes self-contained applications with a serviced runtime version. When you publish a self-contained application with the new SDK, your application will include the latest serviced runtime version known by that SDK. When you upgrade to the latest SDK, you\u2019ll publish with the latest .NET Core runtime version. This applies for .NET Core 1.0 runtimes and later.",
      "created_at": "2018-04-12T14:40:07Z",
      "updated_at": "2018-04-12T14:40:07Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov I believe what that means is that when we publish with 2.1, we would automatically get a 2.1.1 servicing release if available, not that it would automatically move to 2.2-preview1 (for example) which is what I meant by \"latest dotnetcore\".  Perhaps I should have said \"latest dotnetcore preview\".",
      "created_at": "2018-04-12T15:57:53Z",
      "updated_at": "2018-04-12T15:57:53Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Preview and RTM has different policy.\r\nPreviews \"do not roll forward from one preview to another or from preview to RTM.\"\r\nFor RTM - \"When you upgrade to the latest SDK, you\u2019ll publish with the latest .NET Core runtime version. \"",
      "created_at": "2018-04-12T17:27:44Z",
      "updated_at": "2018-04-12T17:27:44Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Correct, that means we need to explicitly move to latest Preview",
      "created_at": "2018-04-12T17:38:28Z",
      "updated_at": "2018-04-12T17:38:28Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "Has anyone successfully made this work? I tried updating all of the references and installing the latest SDK but TypeGen ends up doing nothing and then the build dies with a sea of red.",
      "created_at": "2018-04-18T20:04:00Z",
      "updated_at": "2018-04-18T20:04:00Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Seems TypeGen depend cyclically on `dotnet restore`.",
      "created_at": "2018-04-19T03:12:17Z",
      "updated_at": "2018-04-19T03:12:17Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@markekraus I tried 2.1 preview2 sdk and I see the issue. We dynamically create a temporary proj file to generate powershell.inc file but the file doesn't created. I don't discover a root cause. Could you push PR from your branch? Then I'd confirm that we catch the same issue.\r\n\r\n@SteveL-MSFT Seems April 25 is a Preview2 milestone - is someone from MSFT working on the Issue tomove to .Net Core 2.1 Preview2?",
      "created_at": "2018-04-23T17:14:35Z",
      "updated_at": "2018-04-23T17:14:35Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov I'm going to try to work on this today, otherwise we'll have to wait until after PSCore6.1-Preview2 to pick up dotnetcore-2.1-Preview2 (or whatever version they have at that time)",
      "created_at": "2018-04-23T17:25:10Z",
      "updated_at": "2018-04-23T17:25:10Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I see rc1 in their repo.",
      "created_at": "2018-04-23T17:33:40Z",
      "updated_at": "2018-04-23T17:33:40Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov I had it on a local branch and ended up deleting it when I couldn't get it to work. But that's the same issue I saw. The command to generate the powershell.inc completes without output or error btu the file is not created. If you let me know what branch in your repo I can skim the changes to see if it was the same. But it was basically changing all the version references to the new SDK and RuntimeFrameworkVersion references. I also updated all the `netcoreapp2.0` to `netcoreapp2.1`.. not sure if that was the right thing or not.",
      "created_at": "2018-04-23T17:50:59Z",
      "updated_at": "2018-04-23T17:50:59Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@daxian-dbw TypeCatalogGen on this [line](https://github.com/PowerShell/PowerShell/blob/master/build.psm1#L1947) runs, but it doesn't generate a dependency file if we build with dotnetcore 2.1-preview2.  Can you take a look?",
      "created_at": "2018-04-23T21:34:45Z",
      "updated_at": "2018-04-23T21:34:45Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@markekraus  See #6718 ",
      "created_at": "2018-04-24T04:35:10Z",
      "updated_at": "2018-04-24T04:35:10Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov and @SteveL-MSFT have you had any success getting VSCode/Omnisharp to play nice with the RC preview SDK? I'm trying to work on redoing the logic for `-PreserveAuthorizationOnRedirect` but I'm having 0 luck getting a working development environment up and running. if you have some tips or tricks.. I'd appreciate it.\r\n\r\nI'm seeing this in my Omnisharp output\r\n\r\n```none\r\n[fail]: OmniSharp.MSBuild.ProjectLoader\r\n        The \"ResolvePackageAssets\" task failed unexpectedly.\r\nSystem.ArgumentOutOfRangeException: Non-negative number required.\r\nParameter name: value\r\n   at System.IO.FileStream.set_Position(Int64 value)\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageAssets.CacheReader.ReadMetadataStringTable()\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageAssets.ReadItemGroups()\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageAssets.ExecuteCore()\r\n   at Microsoft.NET.Build.Tasks.TaskBase.Execute()\r\n   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n   at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext()\r\n[warn]: OmniSharp.MSBuild.ProjectManager\r\n        Failed to load project file 'c:\\Users\\MarkLocal\\Documents\\github\\PowerShell\\src\\System.Management.Automation\\System.Management.Automation.csproj'.\r\n```",
      "created_at": "2018-04-29T15:34:34Z",
      "updated_at": "2018-04-29T15:34:34Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@markekraus I had to remove all previous .Net Core SDKs before I could able to compile.",
      "created_at": "2018-04-29T17:58:52Z",
      "updated_at": "2018-04-29T17:58:52Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov I can build fine. but I can't get VSCode and Omnisharp to work. I have deleted all the previous SDKs.",
      "created_at": "2018-04-29T20:51:32Z",
      "updated_at": "2018-04-29T20:51:32Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "Hmm.. moving the repo from a deeper path to c:\\git\\PowerShell seems ro have fixed the problem. I saw some unlreated issue in dotnet/sdk about nupkg path lengths.. and decided to try a shorter repo path. *shrugs",
      "created_at": "2018-04-29T21:53:35Z",
      "updated_at": "2018-04-29T21:53:35Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": ":smile: DOS is still alive!",
      "created_at": "2018-04-30T04:32:53Z",
      "updated_at": "2018-04-30T04:32:53Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "So now that the official 2.1 RC1 is out, do we need to make updates? https://blogs.msdn.microsoft.com/dotnet/2018/05/07/announcing-net-core-2-1-rc-1/",
      "created_at": "2018-05-07T16:33:26Z",
      "updated_at": "2018-05-07T16:33:26Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "We should move to RC1-Final before Preview.3 ships.  Should just involve updating global.json as we've made changes in tests/product necessary to move to 2.1",
      "created_at": "2018-05-07T17:53:03Z",
      "updated_at": "2018-05-07T17:53:03Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@markekraus @SteveL-MSFT \r\nThe 2.1-rc1 SDK downloaded from [the link given in the blog](https://www.microsoft.com/net/download/dotnet-core/sdk-2.1.300-rc1) shows version `2.1.300-rc1-008673` with **2.1.0-rc1** Host and **2.1.0-rc1-final** .NET Core rutnimes (see below). However, running `Install-Dotnet -Channel release -Version 2.1.300-rc1-008673` with the same verison installs the same version of SDK but different Host/rutnimes versions.\r\n\r\nI'm not sure what went wrong, but it seems to me on the dotnet core side ...\r\n\r\n#### dotnet SDK download form the blog\r\n```\r\nC:\\>C:\\Users\\dongbow\\Downloads\\dotnet\\dotnet.exe --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.300-rc1-008673\r\n Commit:    f5e3ddbe73\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Users\\dongbow\\Downloads\\dotnet\\sdk\\2.1.300-rc1-008673\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.0-rc1\r\n  Commit:  eb9bc92051\r\n\r\n.NET Core SDKs installed:\r\n  2.1.104 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.300-rc1-008673 [C:\\Users\\dongbow\\Downloads\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.0-rc1-final [C:\\Users\\dongbow\\Downloads\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.0-rc1-final [C:\\Users\\dongbow\\Downloads\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.0-rc1 [C:\\Users\\dongbow\\Downloads\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n#### dotnet SDK downloaded with `Install-Dotnet -Channel release -Version 2.1.300-rc1-008673`\r\n```\r\nPS:8> C:\\Users\\dongbow\\AppData\\Local\\Microsoft\\dotnet\\dotnet.exe --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.300-rc1-008673\r\n Commit:    f5e3ddbe73\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Users\\dongbow\\AppData\\Local\\Microsoft\\dotnet\\sdk\\2.1.300-rc1-008673\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.0-rc1-26428-03\r\n  Commit:  2c36b039fd\r\n\r\n.NET Core SDKs installed:\r\n  2.1.104 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.300-rc1-008673 [C:\\Users\\dongbow\\AppData\\Local\\Microsoft\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.0-rc1-30682 [C:\\Users\\dongbow\\AppData\\Local\\Microsoft\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.0-rc1-30682 [C:\\Users\\dongbow\\AppData\\Local\\Microsoft\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.0-rc1-26428-03 [C:\\Users\\dongbow\\AppData\\Local\\Microsoft\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n``` ",
      "created_at": "2018-05-07T20:34:00Z",
      "updated_at": "2018-05-07T20:34:00Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@daxian-dbw weird. I get the `2.1.0-rc1` [sic] host when I do `Install-Dotnet -Channel release -Version 2.1.300-rc1-008673`",
      "created_at": "2018-05-07T20:50:01Z",
      "updated_at": "2018-05-07T20:50:01Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I see the same as @daxian-dbw on macOS.  I'll reach out to the dotnet team on this.",
      "created_at": "2018-05-08T00:14:34Z",
      "updated_at": "2018-05-08T00:14:34Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I see rtm builds on MyGet.\r\nhttps://dotnet.myget.org/feed/dotnet-core/package/nuget/Microsoft.NET.Sdk/2.1.300-rtm-62909-02\r\n",
      "created_at": "2018-05-10T12:28:44Z",
      "updated_at": "2018-05-10T12:28:44Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Dotnet team must be busy with Build as they aren't responding.  Perhaps for now we should just wait for RTM if they are starting producing those builds.",
      "created_at": "2018-05-10T16:05:07Z",
      "updated_at": "2018-05-10T16:05:07Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "While we could release 6.0.3 with latest .Net Core security updates. :-)",
      "created_at": "2018-05-10T16:08:16Z",
      "updated_at": "2018-05-10T16:08:16Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "what ever happened to the 6.0.0 branch? I don't see it anymore. was it made private or moved somewhere?",
      "created_at": "2018-05-10T16:48:55Z",
      "updated_at": "2018-05-10T16:48:55Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@markekraus 6.0.x servicing updates are done on a private branch since they contain security updates and we don't want to disclose the changes prematurely before the bits being publicly available",
      "created_at": "2018-05-10T20:29:08Z",
      "updated_at": "2018-05-10T20:29:08Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Got a response now that Build is over.  They had an issue with CDN not having correct version, but that has since been fixed.  If you still see wrong info with `dotnet --info`, try cleaning out `~/.dotnet` folder.",
      "created_at": "2018-05-15T05:26:42Z",
      "updated_at": "2018-05-15T05:26:42Z"
    }
  ],
  "created_at": "2018-04-12T03:50:37Z",
  "labels": [
    "Issue-Enhancement",
    "Area-Maintainers-Build",
    "Resolution-Fixed"
  ],
  "number": 6632,
  "state": "closed",
  "title": "Move to .Net Core 2.1 RC1-Final",
  "updated_at": "2018-05-17T06:42:33Z"
}