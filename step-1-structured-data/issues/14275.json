{
  "_url": "https://github.com/PowerShell/PowerShell/issues/14275",
  "author": "jredfox",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 and PowerShell 7+ issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6).\r\n\r\n-->\r\n\r\n## Steps to reproduce\r\n\r\n```powershell\r\njava -Dfile.encoding=Cp1252 -cp C:\\Users\\jredfox\\Documents\\MDK\\md5-spreadsheet\\filededuper\\bin;C:\\Users\\jredfox\\Documents\\MDK\\md5-spreadsheet\\filededuper\\libs\\apache-codecs.jar jredfox.selfcmd.SelfCommandPrompt true jredfox.filededuper.Main\r\n```\r\n\r\nalso tried this command but it resulted in error class not found `Error: Could not find or load main class .encoding=Cp1252`. yet this exact command works just fine in command prompt\r\n```\r\njava -Dfile.encoding=Cp1252 -cp \"C:\\Users\\jredfox\\Documents\\MDK\\md5-spreadsheet\\filededuper\\bin;C:\\Users\\jredfox\\Documents\\MDK\\md5-spreadsheet\\filededuper\\libs\\apache-codecs.jar\" jredfox.selfcmd.SelfCommandPrompt true jredfox.filededuper.Main\r\n```\r\n\r\non command prompt the same command works. See java -cp command on how it's parsed.  Yes I tried removing the jvm flag for file encoding same result.\r\n```\r\njava -Dfile.encoding=Cp1252 -cp C:\\Users\\jredfox\\Documents\\MDK\\md5-spreadsheet\\filededuper\\bin;C:\\Users\\jredfox\\Documents\\MDK\\md5-spreadsheet\\filededuper\\libs\\apache-codecs.jar jredfox.selfcmd.SelfCommandPrompt true jredfox.filededuper.Main\r\n```\r\n\r\n## Expected behavior\r\n\r\n```none\r\nit run the command\r\n```\r\n\r\n## Actual behavior\r\n\r\n```none\r\nit prints the java command as if -cp wasn't even executed\r\nit says unable to find file apache codecs.jar completely when the file exists on that same path and the command works with command prompt. I tried inserting quotes around the paths and everywhere can't seem to get it working.\r\n```\r\n\r\n## Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nwindows 10 updated last week\r\npowershell\r\n```\r\n",
  "closed_at": "2020-11-27T21:12:11Z",
  "comments": [
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "`;` is a metacharacter in PowerShell (unlike in `cmd.exe` (mostly)): it sequences multiple statements.\r\n(Having additional metacharacters is the unavoidable price to pay for PowerShell's vastly superior capabilities.)\r\n\r\nTherefore, you must _quote_ it; either individually, as `` `; `` or, preferably, by quoting the entire argument via enclosing it in `'...'` (verbatim string) or `\"...\"` (expandable (interpolating) string).\r\n\r\n----\r\n\r\nList of PowerShell metacharacters that, when used in _unquoted_ tokens in a PowerShell argument-mode parsing context, must be `` ` ``-escaped (backtick-escaped) or inside a quoted string in order to be interpreted literally (only a subset applies to `cmd.exe`):\r\n\r\n```\r\n<space> ' \" ` , ; ( ) { } | & < > @ #\r\n```\r\n\r\n* Of these, `< > @ #` are only special at the _start_ of an argument.\r\n\r\n* Inside `\"...\"` strings, `` ` `` functions as the escape character too, so ``` `` ``` must be used for a literal `` ` `` there.\r\n",
      "created_at": "2020-11-27T18:30:27Z",
      "updated_at": "2020-11-27T18:44:22Z"
    },
    {
      "author": "jredfox",
      "author_association": "NONE",
      "body": "is there an escape sequence for them? You can clearly name a file with the \"`' characters so I need to tell my program to wrap them to something powershell can parse. I tried wrapping them in \" \" for the java argument classpath but, that didn't work.\r\n\r\nI also tried this and it says could not find or load main class \".encoding=Cp1252 yet it works in command prompt. You claim it's superior yet I had to remove the jvm arg for it to even parse it. and all this works with command prompt\r\n```\r\njava -Dfile.encoding=Cp1252 -cp \"C:\\Users\\jredfox\\Documents\\MDK\\md5-spreadsheet\\filededuper\\bin;C:\\Users\\jredfox\\Documents\\MDK\\md5-spreadsheet\\filededuper\\libs\\apache-codecs.jar\" jredfox.selfcmd.SelfCommandPrompt true jredfox.filededuper.Main\r\n``` ",
      "created_at": "2020-11-27T20:54:11Z",
      "updated_at": "2020-11-27T21:05:17Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "In `'...'` strings, the only thing you ever need to escape is `'` itself, as `''`, everything else is used _verbatim_ (nothing else needs escaping).\r\n\r\nIn `\"...\"` strings, which interpolate, you can escape `\"` as `\"\"` or `` `\" ``  (though note that filenames on Windows cannot contain `\"`), `$` as `` `$ `` (to suppress interpolation),  and `` ` `` itself as ``` `` ```.\r\n\r\nYou can read more about PowerShell string literals in [`about_Quoting_Rules`](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_Quoting_Rules) and also in [this SO answer](https://stackoverflow.com/a/55614306/45375).\r\n\r\nGenerally, please note that this repo is only for reporting actual defects and suggesting improvements.\r\n\r\nFor general support, please use the following resources:\r\n\r\n* [Slack](https://join.slack.com/t/powershell/shared_invite/enQtMzA3MDcxNTM5MTkxLTBmMWIyNzhkYzVjNGRiOTgxZmFlN2E0ZmVmOWU5NDczNTY2NDFhZjFlZTM1MTZiMWIzZDcwMGYzNjQ3YTRkNWM) and [Discord](https://discordapp.com/invite/AtzXnJM) Community Chat - interactive chat with other PowerShell enthusiasts. Both Slack and Discord are bridged via a bot and can seamlessly talk to each other.\r\n\r\n* [StackOverflow.com](https://stackoverflow.com/questions/tagged/powershell) and [PowerShell.org Forum](https://powershell.org/forums/) - search or post new general PowerShell usage questions.\r\n\r\n",
      "created_at": "2020-11-27T21:05:27Z",
      "updated_at": "2020-11-27T21:05:27Z"
    },
    {
      "author": "jredfox",
      "author_association": "NONE",
      "body": "@mklement0 O I see \".\" is a parsing character to. that is making more sense on why it broke. @mklement0 you didn't say in your list of invalid chars \".\" was a parsing character. Wrapping them in \"\" fixed the issue",
      "created_at": "2020-11-27T21:12:11Z",
      "updated_at": "2020-11-27T21:12:52Z"
    },
    {
      "author": "jredfox",
      "author_association": "NONE",
      "body": "solved by adding \"\" to each parameter which parsing characters",
      "created_at": "2020-11-27T21:13:30Z",
      "updated_at": "2020-11-27T21:13:30Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "I didn't notice the additional problem stemming from `-Dfile.encoding=Cp1252`:\r\n\r\nYes, `'-Dfile.encoding=Cp1252'`  or `\"-Dfile.encoding=Cp1252\"` works, but the quoting is only necessary due to a _bug_  - see #6291.\r\n\r\nIn other words: `.` is _not_ a metacharacter in general, it is only erroneously treated as such in this particular case.",
      "created_at": "2020-11-27T21:18:13Z",
      "updated_at": "2020-11-27T21:19:39Z"
    },
    {
      "author": "jredfox",
      "author_association": "NONE",
      "body": "@mklement0 I noticed the reason why my java code is now not working is the start command seems to error alot in powershell itself should I open up a new issue? I wrapped all my arguments in \"\"? Or should I re-open this one\r\n\r\n`Runtime.getRuntime().exec(\"powershell /c start\" + \" \\\"\" + appName + \"\\\" \" + command);`  \r\n\r\nI tried running `start ipconfig` with the same result in powershell itself without using java same result. in my opinion this app is in beta because it keeps giving people the wrong error messages and there are bugs\r\n\r\nalso I ran it as a batch file it works(only thing to make it work) but, it opens up a new command prompt instead of power shell. is there a custom start command for power shell to open up in a new window?  If not I am just going to have to refuse to add powershell support for my program SelfCommandPrompt (double click jar reboots with command prompt terminal based on os) ",
      "created_at": "2020-11-27T21:30:12Z",
      "updated_at": "2020-11-27T21:37:04Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "`start` is the built-in alias for [`Start-Process`](https://docs.microsoft.com/powershell/module/microsoft.powershell.management/start-process), which on Windows by default opens the target application in a _new window_  (and it is unrelated to `cmd.exe`'s internal `start` command) - do not use `Start-Process` to run a console application synchronously - just invoke it directly - see [this SO answer](https://stackoverflow.com/a/51334633/45375).\r\n\r\n(There is a known problem with `Start-Process` with respect to quoting - see #5576.)\r\n\r\nPowerShell has been around for a long time; there are a number of known bugs - reported here - and, as with any software, there are undoubtedly more that aren't yet known.\r\n\r\n* If you find an _actual bug, based on understanding the expected behavior_ and that bug hasn't already been reported, you should report it here.\r\n\r\n* If you need to familiarize yourself with PowerShell's fundamentals and questions arise in the process, please use the resources I've previously mentioned.\r\n\r\n\r\n\r\n",
      "created_at": "2020-11-27T21:41:12Z",
      "updated_at": "2020-11-27T21:41:12Z"
    }
  ],
  "created_at": "2020-11-27T13:40:47Z",
  "labels": [
    "Issue-Question"
  ],
  "number": 14275,
  "state": "closed",
  "title": "Java -cp Command doesn't properly fire",
  "updated_at": "2020-11-27T21:41:12Z"
}