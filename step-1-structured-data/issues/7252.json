{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7252",
  "author": "arahja",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\n- Windows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nIf it is a bug report:\r\n- make sure you are able to repro it on the latest released version. \r\nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n- Fill out the following repro template:\r\n\r\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\r\n-->\r\n\r\nI am not sure if this is the best place to ask this question. Please let me know if there is a better place to ask this question. I already have asked this question on [stack overflow](https://stackoverflow.com/questions/51109655/c-sharp-core-system-management-automation-remote-connection-error) with no response yet.\r\n\r\nI am attempting to write a C# core program using the powershell core SDK to run powershell scripts on remote Linux systems. Running on .net core is a requirement for this project. I am trying to loosely follow a guide I found on [CodeProject](https://www.codeproject.com/Articles/773685/Enable-Remote-PowerShell-Execution-in-Csharp).\r\n\r\nSteps to reproduce\r\n------------------\r\nThis is my code:\r\n\r\n```\r\nusing System;\r\nusing System.Management.Automation;\r\nusing System.Management.Automation.Runspaces;\r\n\r\nnamespace ConsoleApp1\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n\r\n            SSHConnectionInfo connectionInfo = new SSHConnectionInfo(userName: \"user\", computerName: \"server\", keyFilePath: \"id_rsa\");\r\n\r\n\r\n            using (Runspace runspace = RunspaceFactory.CreateRunspace(connectionInfo))\r\n            {\r\n                runspace.Open(); // The program errors out here\r\n                runspace.Close();\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```none\r\n\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\nThis is the error I am receiving:\r\n\r\n```\r\nUnhandled Exception: System.Management.Automation.Remoting.PSRemotingDataStructureException: An error has occurred which PowerShell cannot handle. A remote session might have ended. ---> System.ArgumentException: The path is not of a legal form.\r\nParameter name: path\r\n   at System.IO.Path.GetDirectoryName(String path)\r\n   at System.Management.Automation.Runspaces.SSHConnectionInfo.StartSSHProcess(StreamWriter& stdInWriterVar, StreamReader& stdOutReaderVar, StreamReader& stdErrReaderVar)\r\n   at System.Management.Automation.Remoting.Client.SSHClientSessionTransportManager.CreateAsync()\r\n   at System.Management.Automation.Remoting.ClientRemoteSessionDSHandlerImpl.SendNegotiationAsync(RemoteSessionState sessionState)\r\n   at System.Management.Automation.Remoting.ClientRemoteSessionDSHandlerImpl.HandleStateChanged(Object sender, RemoteSessionStateEventArgs arg)\r\n   at System.Management.Automation.ExtensionMethods.SafeInvoke[T](EventHandler`1 eventHandler, Object sender, T eventArgs)\r\n   at System.Management.Automation.Remoting.ClientRemoteSessionDSHandlerStateMachine.RaiseStateMachineEvents()\r\n   at System.Management.Automation.Remoting.ClientRemoteSessionDSHandlerStateMachine.ProcessEvents()\r\n   --- End of inner exception stack trace ---\r\n   at System.Management.Automation.Runspaces.AsyncResult.EndInvoke()\r\n   at System.Management.Automation.Runspaces.Internal.RunspacePoolInternal.EndOpen(IAsyncResult asyncResult)\r\n   at System.Management.Automation.Runspaces.Internal.RemoteRunspacePoolInternal.Open()\r\n   at System.Management.Automation.RemoteRunspace.Open()\r\n   at ConsoleApp1.Program.Main(String[] args) in C:\\ConsoleApp1\\ConsoleApp1\\Program.cs:line 18\r\nPress any key to continue . . .\r\n```\r\n\r\nIt appears that my C# program is [unable to find the openssh executable](https://github.com/PowerShell/PowerShell/blob/3cc9d26bc26aeab81137a8a54b9b510b4525abe7/src/System.Management.Automation/engine/remoting/common/RunspaceConnectionInfo.cs#L2032).\r\n\r\nEnvironment data\r\n----------------\r\n\r\nInstalled Software:\r\n- PowerShell Core 6.0.2\r\n\t- Version: 6.0.2\r\n\t- Environment Path: C:\\Program Files\\PowerShell\\6.0.2\\\r\n- .net Core 2 SDK\r\n\t- Version: 2.1.201\r\n\t- Environment Path: C:\\Program Files\\dotnet\\\r\n- OpenSSH\r\n\t- Version: OpenSSH_for_Windows_7.6p1 and LibreSSL 2.6.4\r\n\t- Environment Path: C:\\Program Files\\OpenSSH\\\r\n\r\n[NuGet Packages](https://powershell.myget.org/F/powershell-core/api/v3/index.json):\r\n- Microsoft.PowerShell.SDK\r\n\t- Version: 6.0.2\r\n- System.Management.Automation\r\n\t- Version: 6.0.2\r\n\r\n----------------\r\n\r\nAt this point I am not sure what I am missing.",
  "closed_at": "2018-09-12T04:08:15Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Please see docs https://github.com/PowerShell/PowerShell-Docs/blob/36ca87e8a98d61c87cee10ccce73ed71ec1c43ff/reference/docs-conceptual/core-powershell/SSH-Remoting-in-PowerShell-Core.md\r\n",
      "created_at": "2018-07-12T11:02:21Z",
      "updated_at": "2018-07-12T11:02:21Z"
    },
    {
      "author": "arahja",
      "author_association": "NONE",
      "body": "I apologize, I forgot to mention that I am able to use PowerShell 6.0.2 on the same Windows PC to remote into Linux servers using SSH without issue. I will continue to look through the documentation. If you have any other suggestions I welcome them.",
      "created_at": "2018-07-12T13:25:33Z",
      "updated_at": "2018-07-12T14:03:34Z"
    },
    {
      "author": "neel015",
      "author_association": "NONE",
      "body": "Using a pre-release version of powershell core 6.1 and facing  a similar issue. Is there some documentation which I can refer to regarding ssh-ing into Linux using C# and powershell. I can use powershell to start a new-pssession and a ssh key file path with host and user names. But when I try to invoke the same script using the [Powershell Core SDK ](https://www.nuget.org/packages/Microsoft.PowerShell.SDK)dlls, I am having an issue. ",
      "created_at": "2018-09-10T19:44:43Z",
      "updated_at": "2018-09-10T19:44:43Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@PaulHigin Could you please comment the Issue?",
      "created_at": "2018-09-11T04:41:16Z",
      "updated_at": "2018-09-11T04:41:16Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "@arahja\r\nIt looks like you are not passing in a full path to the rsa key file path parameter:\r\n```\r\nSSHConnectionInfo connectionInfo = new SSHConnectionInfo(userName: \"user\", computerName: \"server\", keyFilePath: \"/Users/user/MyKeys/id_rsa\");\r\n```\r\n\r\nBut if you have the id_rsa key file in the user path expected by SSH, you don't need to pass in the key file path and SSH will find it.  This works for me.\r\n```\r\nSSHConnectionInfo connectionInfo = new SSHConnectionInfo(userName: \"user\", computerName: \"localMachine\", keyFilePath: null);\r\n```\r\n\r\nNote that you can experiment with this using PowerShell APIs on the command line:\r\n```powershell\r\n$ci = [System.Management.Automation.Runspaces.SSHConnectionInfo]::new(\"user\",\"localMachine\",$null)\r\n$rs = [runspacefactory]::CreateRunspace($ci)\r\n$rs.Open()\r\n$rs\r\nId Name            ComputerName    Type          State         Availability\r\n -- ----            ------------    ----          -----         ------------\r\n  3 Runspace3       localMachine       Local         Opened        Available\r\n```",
      "created_at": "2018-09-11T17:06:23Z",
      "updated_at": "2018-09-11T17:06:23Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "Actually, looking at this closer it does seem that this error is about finding the ssh command.  The code uses PowerShell's command discovery to look up the filepath.  It uses environment variables to find the ssh command and if it is failing it may be because your hosting process does not have the correct environment set up.  Also you should be able to get the command from a PowerShell command line:\r\n\r\n```powershell\r\nCommandType     Name                                               Version    Source\r\n-----------     ----                                               -------    ------\r\nApplication     ssh                                                0.0.0.0    /usr/bin/ssh\r\n```",
      "created_at": "2018-09-11T17:44:55Z",
      "updated_at": "2018-09-11T17:44:55Z"
    },
    {
      "author": "arahja",
      "author_association": "NONE",
      "body": "Currently this .net core program is running on Windows. I do have \"C:\\Program Files\\OpenSSH\\\" in my Path environment variable. On the same system Powershell Core is able to use OpenSSH.\r\n\r\nI did retry with the full path to the id_rsa file and I recieved this error:\r\n```\r\n{System.Management.Automation.Remoting.PSRemotingDataStructureException: An error has occurred which PowerShell cannot handle. A remote session might have ended. ---> System.InvalidOperationException: Failed to start the SSH client process needed for the remoting connection with error: The filename, directory name, or volume label syntax is incorrect. ---> System.ComponentModel.Win32Exception: The filename, directory name, or volume label syntax is incorrect\r\n   at System.Management.Automation.Runspaces.SSHConnectionInfo.CreateProcessWithRedirectedStd(ProcessStartInfo startInfo, SafePipeHandle& stdInPipeServer, SafePipeHandle& stdOutPipeServer, SafePipeHandle& stdErrPipeServer)\r\n   at System.Management.Automation.Runspaces.SSHConnectionInfo.StartSSHProcessImpl(ProcessStartInfo startInfo, StreamWriter& stdInWriterVar, StreamReader& stdOutReaderVar, StreamReader& stdErrReaderVar)\r\n   --- End of inner exception stack trace ---\r\n   at System.Management.Automation.Runspaces.SSHConnectionInfo.StartSSHProcessImpl(ProcessStartInfo startInfo, StreamWriter& stdInWriterVar, StreamReader& stdOutReaderVar, StreamReader& stdErrReaderVar)\r\n   at System.Management.Automation.Runspaces.SSHConnectionInfo.StartSSHProcess(StreamWriter& stdInWriterVar, StreamReader& stdOutReaderVar, StreamReader& stdErrReaderVar)\r\n   at System.Management.Automation.Remoting.Client.SSHClientSessionTransportManager.CreateAsync()\r\n   at System.Management.Automation.Remoting.ClientRemoteSessionDSHandlerImpl.SendNegotiationAsync(RemoteSessionState sessionState)\r\n   at System.Management.Automation.Remoting.ClientRemoteSessionDSHandlerImpl.HandleStateChanged(Object sender, RemoteSessionStateEventArgs arg)\r\n   at System.Management.Automation.ExtensionMethods.SafeInvoke[T](EventHandler``1 eventHandler, Object sender, T eventArgs)\r\n   at System.Management.Automation.Remoting.ClientRemoteSessionDSHandlerStateMachine.RaiseStateMachineEvents()\r\n   at System.Management.Automation.Remoting.ClientRemoteSessionDSHandlerStateMachine.ProcessEvents()\r\n   --- End of inner exception stack trace ---\r\n   at System.Management.Automation.Runspaces.AsyncResult.EndInvoke()\r\n   at System.Management.Automation.Runspaces.Internal.RunspacePoolInternal.EndOpen(IAsyncResult asyncResult)\r\n   at System.Management.Automation.Runspaces.Internal.RemoteRunspacePoolInternal.Open()\r\n   at System.Management.Automation.RemoteRunspace.Open()\r\n   at remote_powershell.Program.Main(String[] args) in C:\\Users\\arahja\\Documents\\Visual Studio 2017\\Projects\\ConsoleApp1\\ConsoleApp1\\Program.cs:line 17}\tSystem.Management.Automation.Remoting.PSRemotingDataStructureException\r\n```",
      "created_at": "2018-09-11T18:18:32Z",
      "updated_at": "2018-09-11T18:25:40Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "Yes, this error indicates that PowerShell is not finding the file path to ssh.exe (\"The filename, directory name, or volume label syntax is incorrect\").  But I think I know what the problem is.  The code uses PowerShell command look up to get the file path for ssh.exe, and for this it uses the default runspace.\r\n```\r\nvar cmdInfo = context.CommandDiscovery.LookupCommandInfo(sshCommand, CommandOrigin.Internal) as ApplicationInfo;\r\n```\r\nBut since you are hosting SMA.dll directly and probably have not executed any locally running PowerShell scripts, there is no default runspace.  Try adding this to your code:\r\n```\r\nif (System.Management.Automation.Runspaces.Runspace.DefaultRunspace == null)\r\n{\r\n    var defaultRunspace = RunspaceFactory.CreateRunspace();\r\n    defaultRunspace.Open();\r\n    System.Management.Automation.Runspaces.Runspace.DefaultRunspace = defaultRunspace;\r\n}\r\n```\r\n",
      "created_at": "2018-09-11T20:00:33Z",
      "updated_at": "2018-09-11T20:00:33Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "Actually I think this is a bug in PowerShell, and it should create a runspace to find the command if needed, or at the very least provide a better error message.  Can you create an Issue for this?",
      "created_at": "2018-09-11T20:04:00Z",
      "updated_at": "2018-09-11T20:04:00Z"
    },
    {
      "author": "arahja",
      "author_association": "NONE",
      "body": "I definitely can. What would you like me to name it? Also do I list any additional info that is not in this issue?",
      "created_at": "2018-09-11T20:09:54Z",
      "updated_at": "2018-09-11T20:09:54Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "I think \"SSH connection fails ssh command look up without default runspace\".  No more info is needed, just mention that this happens when hosting SMA.dll.  Please assign to me.",
      "created_at": "2018-09-11T20:18:58Z",
      "updated_at": "2018-09-11T20:18:58Z"
    },
    {
      "author": "arahja",
      "author_association": "NONE",
      "body": "@iSazonov @PaulHigin , I don't appear to have the ability to assign issues to people. Could one of you two do this for me? Sorry for the inconvenience. Issue #7763",
      "created_at": "2018-09-11T20:32:03Z",
      "updated_at": "2018-09-11T20:32:28Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "@arahja  Will do.  BTW did you verify that this fixes your problem?",
      "created_at": "2018-09-11T20:52:21Z",
      "updated_at": "2018-09-11T20:52:21Z"
    },
    {
      "author": "arahja",
      "author_association": "NONE",
      "body": "Yes, It does. Thank you for your assistance with this!",
      "created_at": "2018-09-11T20:56:32Z",
      "updated_at": "2018-09-11T20:56:32Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Leave a comment",
      "created_at": "2018-09-12T04:08:15Z",
      "updated_at": "2018-09-12T04:08:15Z"
    }
  ],
  "created_at": "2018-07-09T19:40:44Z",
  "number": 7252,
  "state": "closed",
  "title": "c# Core System.Management.Automation remote connection error",
  "updated_at": "2018-09-12T04:08:15Z"
}