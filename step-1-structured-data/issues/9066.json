{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9066",
  "author": "iSazonov",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nRevert change based on the comment https://github.com/PowerShell/PowerShell/pull/8847#discussion_r262645497\r\n\r\n## PR Context\r\n\r\n<!-- Provide a little reasoning as to why this Pull Request helps and why you have opened it. -->\r\n\r\n## PR Checklist\r\n\r\n- [ ] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [ ] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [ ] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [ ] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [ ] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n        - [ ] [Add `[feature]` to your commit messages if the change is significant or affects feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\r\n",
  "closed_at": "2019-03-14T00:03:24Z",
  "comments": [
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Look goo to me.\r\n~Can you please update this signature as well: https://github.com/PowerShell/PowerShell/blob/master/src/System.Management.Automation/namespaces/FileSystemProvider.cs#L7082\r\nShould be changed from `[return: MarshalAs(UnmanagedType.I1)]` to `[return: MarshalAs(UnmanagedType.Bool)]`.~\r\n\r\nNo change is needed as per @jazzdelightsme pointed out below.",
      "created_at": "2019-03-13T21:56:06Z",
      "updated_at": "2019-03-13T23:59:44Z"
    },
    {
      "author": "jazzdelightsme",
      "author_association": "CONTRIBUTOR",
      "body": "@daxian-dbw : No! `CreateSymbolicLinkW` really does return a 1-byte boolean value. (`BOOLEAN` versus `BOOL`).\r\n\r\n(and I verified this by looking at type information in a debugger; I am **very** sure)",
      "created_at": "2019-03-13T22:35:01Z",
      "updated_at": "2019-03-13T22:36:37Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@jazzdelightsme Thanks for catching that! Can you please explain a bit more about the difference between `BOOLEAN` and `BOOL` in C++?\r\nIs `BOOL` actually defined as an `int` in some header files?",
      "created_at": "2019-03-13T23:26:11Z",
      "updated_at": "2019-03-13T23:28:29Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Ha, I might find it -- https://stackoverflow.com/a/6420546/7129704\r\n\r\n> BOOL is a Microsoft specific type that is defined as an int. You can find it in windef.h\r\n\r\n",
      "created_at": "2019-03-13T23:29:56Z",
      "updated_at": "2019-03-13T23:29:56Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw I see in https://github.com/dotnet/corefx/blob/master/Documentation/coding-guidelines/interop-pinvokes.md#strings that StringBuilder marshalling always  re-allocate/re-copy buffers. Make sense review our code to reduce such allocations? Although at first glance I did not see how we could do it.\r\n\r\nAnd the PR fix could be in 6.2.",
      "created_at": "2019-03-14T03:14:52Z",
      "updated_at": "2019-03-14T03:14:52Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Thanks @iSazonov. By reading that guideline, it seems `StringBuilder` should never be used for P/Invoke as it incurs 4 allocations. I think it make sense to review our uses of it and replace with `ArrayPool<char>` when appropriate, because we will copy the existing pattern when writing new code. I will take a look at this `ReadConsole` case in particular.",
      "created_at": "2019-03-14T17:24:20Z",
      "updated_at": "2019-03-14T17:24:20Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Tracking issue #9139\r\n\r\n> I will take a look at this ReadConsole case in particular.\r\n\r\nPlease review my old PR first - it is related :-)",
      "created_at": "2019-03-14T17:33:07Z",
      "updated_at": "2019-03-14T17:33:07Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@iSazonov We are using `StringBuilder` for the `[out] string` parameter in P/Invoke almost everywhere.",
      "created_at": "2019-03-15T01:49:53Z",
      "updated_at": "2019-03-15T01:49:53Z"
    }
  ],
  "created_at": "2019-03-05T19:22:33Z",
  "number": 9066,
  "state": "closed",
  "title": "Remove 'out' in ReadConsole pinvoke",
  "updated_at": "2019-03-15T01:49:54Z"
}