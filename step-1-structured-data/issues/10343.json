{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10343",
  "author": "jnm2",
  "body": "I'm not sure what the names should be, but XmlPeek and especially XmlPoke are things I find myself needing often. It's a conceptually simple operation. The burden is that it's a lot of code to paste in to whatever use case comes up. Dot-sourcing is a bit better for readability, but now you have to manage multiple files which is easier in a repo than in a gist e.g. for a Boxstarter script.\r\n\r\nHere I'm using them in a CI pipeline that builds a Visual Studio extension that I publish. This demonstrates the need to use namespaces:\r\nhttps://github.com/jnm2/CopyFunctionBreakpointName/blob/0dc5885e4e38c2ff9384175419dbbb117c1652a8/build/Update-Version.ps1#L76-L89\r\n\r\nSimple modifications like this come up in build scripts quite frequently. Here's an example of something slightly different, my Boxstarter script:\r\n\r\n```ps1\r\n$nppConfig = Join-Path $env:APPDATA 'Notepad++\\config.xml'\r\n$nppStylers = Join-Path $env:APPDATA 'Notepad++\\stylers.xml'\r\n\r\nXmlPoke $nppConfig '/NotepadPlus/GUIConfigs/GUIConfig[name=\"TabSetting\"]/@replaceBySpace' 'yes'\r\nXmlPoke $nppConfig '/NotepadPlus/GUIConfigs/GUIConfig[name=\"auto-completion\"]/@autoCAction' '0'\r\nXmlPoke $nppStylers '/NotepadPlus/GlobalStyles/WidgetStyle[fontName=\"Courier New\"]/@fontName' 'Consolas'\r\n```\r\n\r\n### What I'm carrying around currently\r\n\r\n```ps1\r\nfunction XmlPeek(\r\n    [Parameter(Mandatory=$true)] [string] $FilePath,\r\n    [Parameter(Mandatory=$true)] [string] $XPath,\r\n    [HashTable] $NamespaceUrisByPrefix\r\n) {\r\n    $document = [xml](Get-Content $FilePath)\r\n    $namespaceManager = [System.Xml.XmlNamespaceManager]::new($document.NameTable)\r\n\r\n    if ($null -ne $NamespaceUrisByPrefix) {\r\n        foreach ($prefix in $NamespaceUrisByPrefix.Keys) {\r\n            $namespaceManager.AddNamespace($prefix, $NamespaceUrisByPrefix[$prefix]);\r\n        }\r\n    }\r\n\r\n    return $document.SelectSingleNode($XPath, $namespaceManager).Value\r\n}\r\n\r\nfunction XmlPoke(\r\n    [Parameter(Mandatory=$true)] [string] $FilePath,\r\n    [Parameter(Mandatory=$true)] [string] $XPath,\r\n    [Parameter(Mandatory=$true)] [string] $Value,\r\n    [HashTable] $NamespaceUrisByPrefix\r\n) {\r\n    # \u26a0 This should probably be modified to be atomic, which means locking the file and\r\n    # operating on the same FileStream the whole way through.\r\n\r\n    $document = [System.Xml.XmlDocument]::new()\r\n    $document.PreserveWhitespace = $true\r\n    $document.Load((Resolve-Path $FilePath))\r\n\r\n    $namespaceManager = [System.Xml.XmlNamespaceManager]::new($document.NameTable)\r\n\r\n    if ($null -ne $NamespaceUrisByPrefix) {\r\n        foreach ($prefix in $NamespaceUrisByPrefix.Keys) {\r\n            $namespaceManager.AddNamespace($prefix, $NamespaceUrisByPrefix[$prefix]);\r\n        }\r\n    }\r\n\r\n    $document.SelectSingleNode($XPath, $namespaceManager).Value = $Value\r\n    $document.Save((Resolve-Path $FilePath))\r\n}\r\n```\r\n\r\n",
  "closed_at": null,
  "comments": [],
  "created_at": "2019-08-11T19:56:40Z",
  "labels": [
    "Issue-Enhancement"
  ],
  "number": 10343,
  "state": "open",
  "title": "Feature request: XmlPoke and XmlPeek",
  "updated_at": "2019-08-11T19:57:13Z"
}