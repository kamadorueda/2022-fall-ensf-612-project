{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5471",
  "author": "stuajnht",
  "body": "This is to resolve #5185 by adding a `Timeout` parameter to `Start-Process`.\r\n\r\nIf the timeout is reached and the process hasn't finished, the process is stopped.\r\n\r\nTo perform the stopping of processes, the `Stop-Process` cmdlet is invoked. This is done to prevent repeating any checks needed when killing a process.\r\n\r\nBefore the process is stopped, a \"search\" is attempted to find all descendant processes to hopefully avoid any orphaned processes remaining active. This uses WMI on Windows and the `ps` command on UNIX-like systems, as this provided the most reliable way for cross-platform support.\r\n\r\nAs mentioned in the contributing guidelines, this change may warrant a note in the changelog (I am unsure where to put it).",
  "closed_at": "2018-04-30T07:21:08Z",
  "comments": [
    {
      "author": "msftclas",
      "author_association": "NONE",
      "body": "[![CLA assistant check](https://cla.opensource.microsoft.com/pull/badge/signed)](https://cla.opensource.microsoft.com/PowerShell/PowerShell?pullRequest=5471) <br/>All CLA requirements met.",
      "created_at": "2017-11-16T00:15:31Z",
      "updated_at": "2017-11-16T00:18:19Z"
    },
    {
      "author": "stuajnht",
      "author_association": "NONE",
      "body": "Hi all,\r\n\r\nThanks for your review feedback. I have made a number of changes based on it:\r\n* Changed `Timeout` parameter to `ExitTimeout`\r\n* Skipped searching for `testexe`, as `Start-PSPester` puts it into the path\r\n* Set the upper limit for `ExitTimeout` to be a positive range, rather than 32767\r\n* Used autogenerated property for `ExitTimeout`\r\n* Set a timeout and checked the exit code for the `ps axo` process\r\n* Used common coding convention for comments\r\n\r\nAny questions that I have are in the relevant feedback comments.",
      "created_at": "2017-11-17T23:34:35Z",
      "updated_at": "2017-11-17T23:34:35Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "The concept is definitely a good one and something needed.  I'd like @PowerShell/powershell-committee to review the design to make sure it fits with PowerShell norms.",
      "created_at": "2017-11-17T23:57:19Z",
      "updated_at": "2017-11-17T23:57:19Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "As I said above I'd prefer to see `Start-Process -PassThru | Wait-Process -Timeout 10 -PassThru | Stop-Process`.\r\nAnother thought is that `-Wait` and `-ExitTimeout` is duplicates. We'd accept a slight breaking change `-Wait | -Wait <timeout>` where `-Wait` is infinite timeout. It is breaking only `-Wait:$true` that is rare case.\r\nAnother thought is - can there be other timeouts? If no we'd use `-Timeout` name.",
      "created_at": "2017-11-18T09:17:32Z",
      "updated_at": "2017-11-18T09:17:32Z"
    },
    {
      "author": "mattpwhite",
      "author_association": "NONE",
      "body": "Is this a race?  It looks like PIDs are being collected as integers (as opposed to handles that might prevent re-use), then later those PIDs are killed, but there's nothing to say that the PID hasn't been reused by the OS for a different process at that point, or is there?",
      "created_at": "2017-11-22T19:25:12Z",
      "updated_at": "2017-11-22T19:25:12Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@stuajnht: Consistency of parameter names across cmdlets is important, so I agree with @iSazonov that we should revert to `-Timeout`.\r\n\r\n@iSazonov: Being able to specify a timeout value directly is a welcome convenience that we should add to other cmdlets as well - see #5434 and #5433 \r\n\r\nPowerShell lacks the concept of an optional argument value altogether, and I suggest not opening that can of worms with something `-Wait | -Wait <timeout>`. (If anything, to avoid ambiguity, it would have to have the form `-Wait | -Wait:<timeout>`, analogous to how POSIX shells do it.)\r\n\r\nTo me, there's nothing wrong with a separate `-Timeout` parameter.\r\n\r\n\r\n\r\n\r\n\r\n",
      "created_at": "2017-11-23T16:24:30Z",
      "updated_at": "2017-11-23T16:24:46Z"
    },
    {
      "author": "stuajnht",
      "author_association": "NONE",
      "body": "@mklement0 @iSazonov I am happy to change the parameter back to `-Timeout` if no-one else has any objections about the parameter name needing to be clarified about what it does.\r\n\r\n@mattpwhite After trying with a variety of programs, I believe that you are right. When I was coding this, killing the parent process would keep the child processes running. As was mentioned in [one of the comments](https://github.com/PowerShell/PowerShell/pull/5471#discussion_r151304540), ideally the `Stop-Process` cmdlet would have the ability to terminate child processes. My idea was to include something in this PR to prevent child processes being leftover when the timeout occurs, but I realise now it should be in its own PR instead.\r\n\r\n@SteveL-MSFT Has anything been considered if the process should be stopped on the timeout being reached, or if it should just warn the user?\r\n\r\nThanks all, and I'll update the PR once I have more information.",
      "created_at": "2017-11-26T20:18:11Z",
      "updated_at": "2017-11-26T20:18:11Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@stuajnht:\r\n\r\n> if the process should be stopped on the timeout being reached\r\n\r\nTo me, that calls for another switch: `-StopOnTimeout`; by default, _no_ action (other than the timeout error) should be taken.",
      "created_at": "2017-11-26T20:59:14Z",
      "updated_at": "2017-11-26T20:59:14Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@stuajnht I'll try to get the committee to review this today",
      "created_at": "2017-11-27T17:55:32Z",
      "updated_at": "2017-11-27T17:55:32Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee reviewed this and would like the parameter to be called `-MaximumDuration` and validate that when used with `-PassThru`, the dead process object should be emitted.  `-MaximumDuration` implies `-Wait` and no requirement to make them mutually exclusive.  We agree it's a good idea to add `-PassThru` to `Wait-Process` to support advanced usage scenarios as a separate issue/PR.",
      "created_at": "2017-11-29T23:28:07Z",
      "updated_at": "2017-11-29T23:34:23Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "May I ask what the rationale is for not sticking with the well-established `-Timeout` name for the parameter (used in several other cmdlets)?\r\n\r\nAside from this inconsistency, \"duration\" smacks of `[timespan]`.\r\n\r\n",
      "created_at": "2017-11-29T23:37:37Z",
      "updated_at": "2017-11-29T23:37:37Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Implying `-Wait` when a timeout is specified definitely makes sense, but, again ... uh ... calling a timeout a timeout makes sense too.",
      "created_at": "2017-11-29T23:55:13Z",
      "updated_at": "2017-11-29T23:55:13Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@mklement0 the main push back on calling it `Timeout` is that it's not a timeout on the starting of a process, but the max lifetime allowed for the started process.  Duration sounded better than Lifetime.",
      "created_at": "2017-11-30T00:52:46Z",
      "updated_at": "2017-11-30T00:52:46Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT: \r\n\r\nI appreciate your letting me know.\r\n\r\nI don't think there's any point in distinguishing between _launch_ duration and _execution_ duration - they should be treated as a _single_ timeout, starting at the launch point in time.\r\n\r\nIf there's a _technical_ reason for not being able to enforce the timeout during the _launch_ phase a simple note in the documentation will do.\r\n\r\nEven if you did want to make the distinction you're suggesting, `-MaximumDuration` is no less ambiguous than `-Timeout`: duration of _what_?\r\n\r\n\r\n\r\n\r\n",
      "created_at": "2017-11-30T02:33:34Z",
      "updated_at": "2017-11-30T02:33:34Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I'd prefer to see unified parameter names. These parameters (Timeout) are easier to discover and remember than the unique parameters (MaximumDuration) in each cmdlet.",
      "created_at": "2017-11-30T05:00:35Z",
      "updated_at": "2017-11-30T05:00:35Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@mklement0 @iSazonov appreciate all the feedback and you both make valid points, will bring it back up",
      "created_at": "2017-11-30T23:52:08Z",
      "updated_at": "2017-11-30T23:52:08Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee revisited this and would be ok with `-ExecutionTimeout`.  In general, documentation should not be required to understand the intent or purpose of a parameter.  The name should be self documenting as much as possible without being overly verbose.  Just `-Timeout` is ambiguous of the purpose, but `-ExecutionTimeout` is concise and reasonable.",
      "created_at": "2017-12-06T23:09:16Z",
      "updated_at": "2017-12-06T23:09:16Z"
    },
    {
      "author": "stale[bot]",
      "author_association": "NONE",
      "body": "This PR has been automatically marked as stale because it has not had activity in the last 30 days. It will be closed if no further activity occurs within 10 days. Thank you for your contributions.\n",
      "created_at": "2018-03-16T23:47:21Z",
      "updated_at": "2018-03-16T23:47:21Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@stuajnht Could you please continue?",
      "created_at": "2018-03-19T06:34:55Z",
      "updated_at": "2018-03-19T06:34:55Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@iSazonov Please consider the bots comment the request to continue.  By commenting, you are defeating the bot.",
      "created_at": "2018-03-19T20:46:54Z",
      "updated_at": "2018-03-19T20:46:54Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@TravisEz13 Thanks for clarify. I thought the bot only counted commits.\r\nI think the PR is useful and we could grab and continue.",
      "created_at": "2018-03-20T04:32:09Z",
      "updated_at": "2018-03-20T04:32:09Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@iSazonov But a closed PR can be continued as well as long as the owner doesn't delete the branch.  The bot will label all of them as `review-abandoned` so we can query for them.  If you think the wording of the message of the bot needs to be updated, create a PR or just file an issue with a proposal and mention me.",
      "created_at": "2018-03-20T17:29:07Z",
      "updated_at": "2018-03-20T17:29:07Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@TravisEz13 I open Issue #6446 with suggestion.",
      "created_at": "2018-03-21T06:16:17Z",
      "updated_at": "2018-03-21T06:16:17Z"
    },
    {
      "author": "stale[bot]",
      "author_association": "NONE",
      "body": "This PR has been automatically marked as stale because it has not had activity in the last 30 days. It will be closed if no further activity occurs within 10 days.\nThank you for your contributions.\nCommunity members are welcome to grab these works.\n",
      "created_at": "2018-04-20T06:22:17Z",
      "updated_at": "2018-04-20T06:22:17Z"
    },
    {
      "author": "stale[bot]",
      "author_association": "NONE",
      "body": "This PR has be automatically close because it is stale. If you wish to continue working on the PR, please first update the PR, then reopen it.\nThanks again for your contribution.\nCommunity members are welcome to grab these works.\n",
      "created_at": "2018-04-30T07:21:07Z",
      "updated_at": "2018-04-30T07:21:07Z"
    }
  ],
  "created_at": "2017-11-16T00:15:23Z",
  "number": 5471,
  "state": "closed",
  "title": "Start-Process: add parameter -ExitTimeout",
  "updated_at": "2018-04-30T07:21:08Z"
}