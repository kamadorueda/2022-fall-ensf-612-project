{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12911",
  "author": "Chalk-X",
  "body": "When I attempt to communicate with serial devices using PowerShell in Ubuntu 18, I get an \u201caccess denied\u201d message when I try to open the port.  I can create the port object with no problem:\r\n\r\n$port = new-object system.io.ports.serialport ttyACM0\r\n\r\nAnd I can verify the created port:\r\n\r\nEcho $port\r\n\r\n\u2026yields all the specifics.  But when I try to open the port so that I can begin reading or writing:\r\n\r\n$port.open()\r\n\r\n\u2026access is denied.  Is this a procedural error on my part, or a short-coming in the cross platform PowerShell itself?  I\u2019ve tried this with onboard serial ports as well as USB to serial devices with no success.",
  "closed_at": "2020-06-08T14:57:01Z",
  "comments": [
    {
      "author": "KalleOlaviNiemitalo",
      "author_association": "NONE",
      "body": "Use the [strace](https://linux.die.net/man/1/strace) program to check whether the PowerShell process is trying to open `/dev/ttyACM0` and whether that succeeds. If the error is coming from there, you may have to ask the superuser to add your user account to the `dialout` group or change the permissions of the special file.",
      "created_at": "2020-06-06T13:32:00Z",
      "updated_at": "2020-06-06T13:32:00Z"
    },
    {
      "author": "Chalk-X",
      "author_association": "NONE",
      "body": "I've already tried adding to dialout group. Made no difference. Has anyone succeeded with serial com in powershell under linux?\n",
      "created_at": "2020-06-06T16:26:57Z",
      "updated_at": "2020-06-06T16:26:59Z"
    },
    {
      "author": "KalleOlaviNiemitalo",
      "author_association": "NONE",
      "body": "Did `strace` show the `open` call failing with `EACCES` or `EPERM`?\r\n\r\n> I've already tried adding to dialout group.\r\n\r\nUse `id --groups --name` to check whether the change took effect; perhaps it did not if you have not logged in again.",
      "created_at": "2020-06-06T20:33:31Z",
      "updated_at": "2020-06-06T20:33:31Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@chalk-x please change the issue title to summarize the issue instead of duplicating the issue body.",
      "created_at": "2020-06-06T20:43:11Z",
      "updated_at": "2020-06-06T20:43:11Z"
    },
    {
      "author": "Chalk-X",
      "author_association": "NONE",
      "body": "I've already tried to resolve this by adding to the DIALOUT group.  And I did verify that the change took effect.  This was to no avail.  I will try the STRACE program and report the results soon.",
      "created_at": "2020-06-07T12:05:24Z",
      "updated_at": "2020-06-07T12:05:24Z"
    },
    {
      "author": "Chalk-X",
      "author_association": "NONE",
      "body": "First let me clarify...I'm not a programmer or software developer.  I'm an end-user / scripter.  And my understanding of STRACE is very rudimentary.  I couldn't get any results trying STRACE with the PowerShell command $port.open().  So I launched PowerShell itself with STRACE, then executed the serial port commands.  I saw nothing resembling EACCES or EPERM following the $port.open() command.\r\n\r\nI hope someone out there with more expertise can determine whether this serial port access issue is a simple procedural error, or an actual bug in the cross-platform PowerShell.  What say you guys spin up PowerShell on your Linux machines, give this a try and see if you can get to the bottom of it?",
      "created_at": "2020-06-07T21:35:17Z",
      "updated_at": "2020-06-07T21:35:17Z"
    },
    {
      "author": "Chalk-X",
      "author_association": "NONE",
      "body": "Here's the STRACE from the creation of the serial port to the \"access denied\", (attempting to access onboard serial port ttyS0):\r\n\r\nfutex(0x1e24c8$port = new-object system.io.ports.serialport ttyS0  \r\n) = 0\r\nfutex(0x1e24c30, FUTEX_WAKE_PRIVATE, 1) = 0\r\nfutex(0x1fefd84, FUTEX_WAKE_PRIVATE, 1) = 1\r\nfutex(0x1fefd30, FUTEX_WAKE_PRIVATE, 1) = 1\r\nfutex(0x1e24c84, FUTEX_WAIT_PRIVATE, 0, NULL) = 0\r\nfutex(0x1e24c30, FUTEX_WAKE_PRIVATE, 1) = 0\r\nfcntl(1, F_DUPFD_CLOEXEC, 0)            = 108\r\nfstat(108, {st_mode=S_IFCHR|0620, st_rdev=makedev(0x88, 0), ...}) = 0\r\nread(47, \"\\335O\\314\\327\\277t\\235h_\\237\\4\\10\\3gy9\", 16) = 16\r\nread(47, \"\\326\\326\\242b$\\302.\\345/\\33A_Z\\205x\\356\", 16) = 16\r\nread(47, \"v\\320\\250\\315,\\377\\212\\212R\\251\\21\\224\\16\\244\\376,\", 16) = 16\r\nmprotect(0x7fba37dc7000, 4096, PROT_READ|PROT_WRITE) = 0\r\nmprotect(0x7fba37dc8000, 4096, PROT_READ|PROT_WRITE) = 0\r\nmprotect(0x7fba37daf000, 4096, PROT_READ|PROT_WRITE) = 0\r\nmprotect(0x7fba37916000, 4096, PROT_READ|PROT_WRITE) = 0\r\nmprotect(0x7fba37916000, 4096, PROT_READ|PROT_WRITE|PROT_EXEC) = 0\r\nmprotect(0x7fba37dc9000, 4096, PROT_READ|PROT_WRITE) = 0\r\nmprotect(0x7fba37dca000, 4096, PROT_READ|PROT_WRITE) = 0\r\nmprotect(0x7fba316d3000, 4096, PROT_READ|PROT_WRITE) = 0\r\nmprotect(0x7fba316d3000, 4096, PROT_READ|PROT_WRITE|PROT_EXEC) = 0\r\nmprotect(0x7fba37dcb000, 4096, PROT_READ|PROT_WRITE) = 0\r\nmprotect(0x7fba37dcc000, 4096, PROT_READ|PROT_WRITE) = 0\r\nmprotect(0x7fba37dd0000, 4096, PROT_READ|PROT_WRITE) = 0\r\nmprotect(0x7fba37917000, 4096, PROT_READ|PROT_WRITE) = 0\r\nmprotect(0x7fba37917000, 4096, PROT_READ|PROT_WRITE|PROT_EXEC) = 0\r\nmprotect(0x7fba37dcd000, 4096, PROT_READ|PROT_WRITE) = 0\r\nmprotect(0x7fba37dce000, 4096, PROT_READ|PROT_WRITE) = 0\r\nfutex(0x1fefd84, FUTEX_WAKE_PRIVATE, 1) = 1\r\nfutex(0x1e24c80, FUTEX_WAIT_PRIVATE, 0, NULL) = 0\r\nfutex(0x1e24c30, FUTEX_WAKE_PRIVATE, 1) = 0\r\nwrite(108, \"PS /home/bob> \", 14PS /home/bob> )        = 14\r\nread(47, \"\\323\\306\\32\\336\\207y\\251\\375# \\375\\0\\304\\10\\364]\", 16) = 16\r\nfutex(0x1fefd80, FUTEX_WAKE_PRIVATE, 1) = 1\r\nfutex(0x1fefd30, FUTEX_WAKE_PRIVATE, 1) = 1\r\nfutex(0x1e24> $port.open()T_PRIVATE, 0, NULL\r\n) = 0\r\nfutex(0x1e24c30, FUTEX_WAKE_PRIVATE, 1) = 0\r\nfutex(0x1fefd80, FUTEX_WAKE_PRIVATE, 1) = 1\r\nfutex(0x1fefd30, FUTEX_WAKE_PRIVATE, 1) = 1\r\nfutex(0x1e24c80, FUTEX_WAIT_PRIVATE, 0, NULLMethodInvocationException: Exception calling \"Open\" with \"0\" argument(s): \"Access to the port 'ttyS0' is denied.\"\r\n) = 0\r\nfutex(0x1e24c30, FUTEX_WAKE_PRIVATE, 1) = 0\r\nwrite(1, \"\\33[6n\", 4)                   = 4\r\nread(0, \"\\33\", 1)                       = 1\r\nread(0, \"[\", 1)                         = 1\r\nread(0, \"5\", 1)                         = 1\r\nread(0, \"6\", 1)                         = 1\r\nread(0, \";\", 1)                         = 1\r\nread(0, \"2\", 1)                         = 1\r\nread(0, \"1\", 1)                         = 1\r\nread(0, \"R\", 1)                         = 1\r\nwrite(111, \"\\n\", 1\r\n)                     = 1\r\nread(47, \"\\257\\251\\34\\10\\2358\\24XySoG\\324\\25\\242r\", 16) = 16\r\nfutex(0x1fefd84, FUTEX_WAKE_PRIVATE, 1) = 1\r\nfutex(0x1fefd30, FUTEX_WAKE_PRIVATE, 1) = 1\r\nfutex(0x1e24c84, FUTEX_WAIT_PRIVATE, 0, NULL) = 0\r\nfutex(0x1e24c30, FUTEX_WAKE_PRIVATE, 1) = 0\r\nwrite(111, \"PS /home/bob> \", 14PS /home/bob> )        = 14\r\nread(47, \"C\\223\\342\\200)\\320<\\326\\20\\35c\\352\\243\\23rv\", 16) = 16\r\nfutex(0x1fefd80, FUTEX_WAKE_PRIVATE, 1) = 1\r\nfutex(0x1fefd30, FUTEX_WAKE_PRIVATE, 1) = 1\r\nfutex(0x1e24c8exitUTEX_WAIT_PRIVATE, 0, NULL\r\n",
      "created_at": "2020-06-07T21:36:37Z",
      "updated_at": "2020-06-07T21:39:29Z"
    },
    {
      "author": "Chalk-X",
      "author_association": "NONE",
      "body": "I see interesting activity in response to the request to create the port.  Can anyone interpret whether or not ttyS0 was actually set up as requested?  I see NO ATTEMPT at all to access tty in response to $port.open().  My uneducated guess is that cross-platform PowerShell is either incomplete / broken with regard to serial ports...or there is a missing permission somewhere.",
      "created_at": "2020-06-07T21:49:57Z",
      "updated_at": "2020-06-07T21:49:57Z"
    },
    {
      "author": "KalleOlaviNiemitalo",
      "author_association": "NONE",
      "body": "Try `/dev/ttyS0` rather than plain `ttyS0`.",
      "created_at": "2020-06-07T22:30:04Z",
      "updated_at": "2020-06-07T22:30:04Z"
    },
    {
      "author": "Chalk-X",
      "author_association": "NONE",
      "body": "Same result...\"access denied\".  Are you testing any of these suggestions yourself?",
      "created_at": "2020-06-08T01:48:08Z",
      "updated_at": "2020-06-08T01:48:08Z"
    },
    {
      "author": "Chalk-X",
      "author_association": "NONE",
      "body": "OOPS!  Tested your suggestion again on a different machine and, VIOLA, the port opened!  I will now see if I can open two ports and bounce text between them.",
      "created_at": "2020-06-08T02:19:18Z",
      "updated_at": "2020-06-08T02:19:18Z"
    },
    {
      "author": "Chalk-X",
      "author_association": "NONE",
      "body": "I'll play with this more tomorrow.  So far here's what I know:  For this to work I must first lauch PowerShell with \"sudo\".  Then I must create the port object using /dev/ttyS0.  Both of these conditions are required for the port to open.\r\n\r\nWorks beautifully.  I'm stoked.",
      "created_at": "2020-06-08T02:38:46Z",
      "updated_at": "2020-06-08T02:41:31Z"
    },
    {
      "author": "Chalk-X",
      "author_association": "NONE",
      "body": "Everything is working perfectly with the combination of \"sudo\" and /dev/ path.  Frustrating that it took so long to find the right \"combination\" to unlock the serial ports.  Thanks for all the help.  Case closed.",
      "created_at": "2020-06-08T14:57:01Z",
      "updated_at": "2020-06-08T14:57:01Z"
    },
    {
      "author": "KalleOlaviNiemitalo",
      "author_association": "NONE",
      "body": "> Are you testing any of these suggestions yourself?\r\n\r\nNo, I don't have a suitable computer with serial ports.\r\n\r\nThe access-denied error was rather misleading. [The code that throws the exception](https://github.com/dotnet/runtime/blob/b03778465800e6d8a534b2fb79656a9f9ba7e245/src/libraries/System.IO.Ports/src/System/IO/Ports/SafeSerialDeviceHandle.Unix.cs#L23-L31) apparently uses `UnauthorizedAccessException` for Windows compatibility but adds the real reason (file not found) as an inner exception. PowerShell 7 now hides the inner exception by default but [Get-Error](https://docs.microsoft.com/powershell/module/microsoft.powershell.utility/get-error?view=powershell-7) should show the details.",
      "created_at": "2020-06-08T15:42:03Z",
      "updated_at": "2020-06-08T15:42:03Z"
    }
  ],
  "created_at": "2020-06-06T12:01:49Z",
  "number": 12911,
  "state": "closed",
  "title": "Access denied to serial ports.",
  "updated_at": "2020-06-08T15:42:03Z"
}