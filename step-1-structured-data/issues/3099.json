{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3099",
  "author": "iSazonov",
  "body": "1. Currently `Set-Date` tests is silently skipped during elevated test phase in Start-PSPester because the tests use `Test-IsElevated` function instead of `RequireAdminOnWindows` tag.\r\n2. Really if we manually run the test - one is failed:\r\n```powershell\r\nPS > Start-PSPester -Path \\test\\powershell\\Modules\\Microsoft.PowerShell.Utility\\Set-Date.Tests.ps1 -binDir \"C:\\Program Files\\PowerShell\\6.0.0.15\"\r\nVERBOSE: Running pester tests at '\\test\\powershell\\Modules\\Microsoft.PowerShell.Utility\\Set-Date.Tests.ps1'\r\nwith tag 'CI' and ExcludeTag 'Slow'\r\n\r\nDescribing Set-Date\r\n [-] Set-Date should be able to set the date in an elevated context 850ms\r\n   Expected: the expression not to throw an exception. Message was {The parameter is incorrect}\r\n       from \\test\\powershell\\Modules\\Microsoft.PowerShell.Utility\\Set-Date.Tests.ps1:11 char:22\r\n       +         { get-date | set-date } | Should not throw\r\n       +                      ~~~~~~~~\r\n   at line: 11 in \\test\\powershell\\Modules\\Microsoft.PowerShell.Utility\\Set-Date.Tests.ps1\r\n   11:         { get-date | set-date } | Should not throw\r\n [!] Set-Date should produce an error in a non-elevated context 90ms\r\nTests completed in 940ms\r\nPassed: 0 Failed: 1 Skipped: 1 Pending: 0\r\n```\r\nThe command is manually executed failed too (I tested on Windows 10 with PS Core beta 15):\r\n```powershell\r\nPS > get-date | set-date\r\nset-date : The parameter is incorrect\r\nAt line:1 char:12\r\n+ get-date | set-date\r\n+            ~~~~~~~~\r\n    + CategoryInfo          : NotSpecified: (:) [Set-Date], Win32Exception\r\n    + FullyQualifiedErrorId : System.ComponentModel.Win32Exception,Microsoft.PowerShell.Commands.SetDateCommand\r\n\r\nPS > get-date\r\n\r\nSaturday, February 4, 2017 9:09:32 PM\r\n\r\n\r\nPS > set-date\r\n\r\ncmdlet Set-Date at command pipeline position 1\r\nSupply values for the following parameters:\r\nDate: 2/4/2017\r\nset-date : The parameter is incorrect\r\nAt line:1 char:1\r\n+ set-date\r\n+ ~~~~~~~~\r\n    + CategoryInfo          : NotSpecified: (:) [Set-Date], Win32Exception\r\n    + FullyQualifiedErrorId : System.ComponentModel.Win32Exception,Microsoft.PowerShell.Commands.SetDateCommand\r\n```\r\n\r\n\r\n\r\n- [ ] So in [Set-Date.Tests.ps1](https://github.com/PowerShell/PowerShell/blob/master/test/powershell/Modules/Microsoft.PowerShell.Utility/Set-Date.Tests.ps1) the test must be marked by `RequireAdminOnWindows` tag in order to run in admin-elevated phase.\r\nAnd we could remove `Test-IsElevated` from the tests and from `Test.Helpers.psm1`.\r\n\r\n/cc @JamesWTruher @vors \r\n\r\n- [ ] `Set-Date`  requires a fix (for Windows only?).\r\n\r\n/cc @andschwa ",
  "closed_at": "2018-02-06T17:31:30Z",
  "comments": [
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "Good catch",
      "created_at": "2017-02-04T18:45:05Z",
      "updated_at": "2017-02-04T18:45:05Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Tests isn't fixed.",
      "created_at": "2018-01-25T03:58:19Z",
      "updated_at": "2018-01-25T03:58:19Z"
    },
    {
      "author": "stknohg",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov \r\n\r\nI am trying to fix `Set-Date.Tests.ps1`. I have 2 problems.\r\n\r\n1. `RequireAdminOnWindows` tag only affects on Windows.  \r\nThere is no tags like `RequireAdminOnLinux`, `RequireAdminOnMac`.\r\n\r\n2.  `RequireAdminOnWindows` tag is used only to skip elevated context tests.\r\n  The third test(\"Set-Date should produce an error in a non-elevated context\") requires explicitly __non-elevated__ context.\r\n\r\nI think we have to keep using `Test-IsElevated` function and `$IsElevated` variable.\r\n\r\n----\r\n\r\nThe first error in this Issue\r\n\r\n> set-date : The parameter is incorrect\r\n\r\nwas caused by program bug, and I fixed it by #6006 .\r\nNow  `Set-Date.Tests.ps1` works fine without changes.",
      "created_at": "2018-01-25T05:53:28Z",
      "updated_at": "2018-01-25T06:32:32Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "We always run test on CI Travis under sudo.",
      "created_at": "2018-01-25T06:35:07Z",
      "updated_at": "2018-01-25T06:35:07Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "We shouldn't use `Test-IsElevated` - as I said above tests is silently skipped.",
      "created_at": "2018-01-25T06:44:57Z",
      "updated_at": "2018-01-25T06:44:57Z"
    },
    {
      "author": "stknohg",
      "author_association": "CONTRIBUTOR",
      "body": "I wrote a prototype.\r\n\r\n```powershell\r\n# RequireAdminOnWindows tag can use for the first two tests.\r\nDescribe \"Set-Date for admin\" -Tag @('CI', 'RequireAdminOnWindows') {\r\n    It \"Set-Date should be able to set the date in an elevated context\" {\r\n        { Get-Date | Set-Date } | Should Not Throw\r\n    }\r\n\r\n    It \"Set-Date should be able to set the date with -Date parameter\" {\r\n        $target = Get-Date\r\n        $expected = $target\r\n        Set-Date -Date $target | Should Be $expected\r\n    }\r\n}\r\n\r\n# This test is executed in both non-elevated and elevated contexts, \r\n# and fails in elevated context without $IsElevated .\r\nDescribe \"Set-Date for non-admin\" -Tag \"CI\" {\r\n    BeforeAll {\r\n        $IsElevated = Test-IsElevated\r\n    }\r\n\r\n    It \"Set-Date should produce an error in a non-elevated context\" -Skip:($IsElevated) {\r\n        { Get-Date | Set-Date } | ShouldBeErrorId \"System.ComponentModel.Win32Exception,Microsoft.PowerShell.Commands.SetDateCommand\"\r\n    }\r\n}\r\n```\r\n\r\nDo you have a good way for the last test(\"Set-Date should produce an error in a non-elevated context\") without `Test-IsElevated` and `$IsElevated`?\r\n",
      "created_at": "2018-01-25T07:12:03Z",
      "updated_at": "2018-01-25T07:22:37Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@stknohg Our script automatically process `RequireAdminOnWindows` and run tests on Windows with `RequireAdminOnWindows` only in elevated phase. On Unix all tests run under sudo.\r\n\r\nI guess we only need skip last test on Unix - see pattern https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/WritingPesterTests.md",
      "created_at": "2018-01-25T11:03:49Z",
      "updated_at": "2018-01-25T11:03:49Z"
    },
    {
      "author": "stknohg",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov Thank you. I understood about the two CI passes.\r\n\r\nBut I am a little confused.  \r\nMy understanding is\r\n\r\n* The pass with exclusion of tests with 'RequireAdminOnWindows' tag\r\n    * Pattern 1 : CI run tests on Windows (non-elevated phase)\r\n    * Pattern 2 : CI run tests on Linux/Mac (elevated(root) phase)\r\n\r\n* The pass where we run only 'RequireAdminOnWindows' tests\r\n    * Pattern 3 : CI run tests on Windows (elevated phase)\r\n\r\nIs this correct?",
      "created_at": "2018-01-25T12:23:59Z",
      "updated_at": "2018-01-25T12:23:59Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@stknohg Correct. `Test-IsElevated` isn't correct. And our tests works incorrect - you can look logs and see that 1 and 2 test skipped and 3 passed on both CIs, the tests never run elevated on Windows.",
      "created_at": "2018-01-25T13:55:39Z",
      "updated_at": "2018-01-25T13:56:48Z"
    },
    {
      "author": "stknohg",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov Thank you.\r\nReading the CI logs,I understood what you are pointing out.\r\nI will make Pull Request so please review.",
      "created_at": "2018-01-26T01:33:42Z",
      "updated_at": "2018-01-26T01:33:42Z"
    },
    {
      "author": "stknohg",
      "author_association": "CONTRIBUTOR",
      "body": "I pushed Pull Request #6034, but CI tests on Linux/macOS failed.\r\nIt seems to be that CI tests on Linux/macOS are run as normal user.\r\n\r\n\r\n",
      "created_at": "2018-01-26T03:34:58Z",
      "updated_at": "2018-01-26T03:53:14Z"
    }
  ],
  "created_at": "2017-02-04T18:42:25Z",
  "number": 3099,
  "state": "closed",
  "title": "Set-Date don't work and admin-elevated test is silently skipped",
  "updated_at": "2018-02-06T17:31:30Z"
}