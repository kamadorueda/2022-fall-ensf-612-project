{
  "_url": "https://github.com/PowerShell/PowerShell/issues/16962",
  "author": "MartinGC94",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\nFixes https://github.com/PowerShell/PowerShell/issues/15905\r\n\r\nAdds the OutputType attribute with a fitting type to the following commands:\r\n\r\n- Rename-Computer (RenameComputerChangeInfo)\r\n- Get-TimeZone (TimeZoneInfo)\r\n- Set-TimeZone (TimeZoneInfo)\r\n- Invoke-WebRequest (BasicHtmlWebResponseObject)\r\n- ConvertTo-Json (string)\r\n- ConvertTo-Html (string)\r\n- Test-Json (bool)\r\n- New-Variable (PSVariable)\r\n- Pop-Location (PathInfo when used in following providers: Certificate, FileSystem, Registry)\r\n- Push-Location (PathInfo when used in following provider: Registry)\r\n- Resolve-Path (String and PathInfo when used in the following provider: Registry)\r\n- Enable-WSManCredSSP (XmlElement)\r\n- Get-WSManCredSSP (string)\r\n- Invoke-WSManAction (XmlElement)\r\n- New-WSManSessionOption (SessionOption)\r\n- Test-WWMan (XmlElement)\r\n- Set-WSManQuickConfig (string)\r\n- Get-WSManInstance (XmlElement)\r\n- Set-WSManInstance (XmlElement)\r\n- New-WSManInstance (XmlElement)\r\n- TabExpansion2 (CommandCompletion)\r\n\r\nI assume I don't need tests for adding this attribute, if that assumption is wrong then please tell me how you would like to see those tests.\r\n<!-- Summarize your PR between here and the checklist. -->\r\n\r\n## PR Context\r\n\r\n<!-- Provide a little reasoning as to why this Pull Request helps and why you have opened it. -->\r\n\r\n## PR Checklist\r\n\r\n- [X] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [X] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [X] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [X] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [X] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [X] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and opened an issue in the relevant tool repository. This may include:\r\n        - [ ] Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode\r\n        (which runs in a different PS Host).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n",
  "closed_at": "2022-03-24T22:54:09Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> I assume I don't need tests for adding this attribute, if that assumption is wrong then please tell me how you would like to see those tests.\r\n\r\nI'd prefer to have such tests. Perhaps it would be better to add tests for existent annotations and only then continue with the PR.\r\n\r\nNot related for the PR: perhaps you could have an interest to grab https://github.com/iSazonov/PowerShell/tree/outputtype-parameterset-inference",
      "created_at": "2022-03-09T11:42:05Z",
      "updated_at": "2022-03-09T11:49:57Z"
    },
    {
      "author": "MartinGC94",
      "author_association": "CONTRIBUTOR",
      "body": "I don't think any other commands include tests for the different attributes and parameter attributes they have so it seems like overkill to me. If you insist on them getting added, I still need to know how to write those tests, I don't know how to properly test for attributes. I mean I could use tabexpansion2 to test for completions but surely there's a better way?\r\n\r\n>Not related for the PR: perhaps you could have an interest to grab https://github.com/iSazonov/PowerShell/tree/outputtype-parameterset-inference\r\n\r\nI have thought about that feature but I suspect it's going to be a lot of work and if I was going to work on another big feature in the near future I would aim for something more important to me like pseudobinding for splatting hashtables. For now I think I'll take a bit of a break from new big PRs so mine and the other 90+ open PRs can actually get merged without too many merge conflicts.\r\n\r\n<blockquote><img src=\"https://opengraph.githubassets.com/8c376034f973546e29d8400b9ddcc6acd2fb7ee004add6a3de151b592ebb0fa4/iSazonov/PowerShell\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/iSazonov/PowerShell\">GitHub - iSazonov/PowerShell at outputtype-parameterset-inference</a></strong></div><div>PowerShell for every system! Contribute to iSazonov/PowerShell development by creating an account on GitHub.</div></blockquote>",
      "created_at": "2022-03-09T17:11:39Z",
      "updated_at": "2022-03-09T17:12:01Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> I don't think any other commands include tests for the different attributes and parameter attributes they have so it seems like overkill to me. If you insist on them getting added, I still need to know how to write those tests, I don't know how to properly test for attributes. I mean I could use tabexpansion2 to test for completions but surely there's a better way?\r\n\r\nI can not insist :-) I say _ideally_ if we have a code the code must be fully covered by tests.\r\nI think it makes no sense to have _functional_ tests for every cmdlet since code is in Engine and it is the same code and enough to have one functional test for every code path. (It is not huge work to cover the code by tests.)\r\nBut we could generate by a script _compatibility_ tests (like DefaultCommands.Tests.ps1) so that if somebody changed output type of a cmdlet we could see this. The tests could read output type attributes from in-box cmdlets and compare its with etalon values.\r\n\r\n>I have thought about that feature but I suspect it's going to be a lot of work and if I was going to work on another big feature in the near future I would aim for something more important to me like pseudobinding for splatting hashtables. For now I think I'll take a bit of a break from new big PRs so mine and the other 90+ open PRs can actually get merged without too many merge conflicts.\r\n\r\nI stopped the work because of the same reason - no code reviewers. But if you will grab my code (it is small) in near future I can review (and merge if we will have great tests).\r\n",
      "created_at": "2022-03-10T07:32:29Z",
      "updated_at": "2022-03-10T07:32:29Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2022-03-18T02:00:45Z",
      "updated_at": "2022-03-18T02:00:45Z"
    },
    {
      "author": "pull-request-quantifier[bot]",
      "author_association": "NONE",
      "body": "### ![](https://img.shields.io/static/v1?label=Quantified&message=Extra%20Small&color=green)\r\n\r\nThis PR has `24` quantified lines of changes. In general, a change size of upto `200` lines is ideal for the best PR experience!\r\n\r\n------\r\n\r\n<details >\r\n    <summary display=\"inline\"> <strong>Quantification details</strong></summary>\r\n    <p />\r\n\r\n```\r\nLabel      : Extra Small\r\nSize       : +24 -0\r\nPercentile : 9.6%\r\n\r\nTotal files changed: 18\r\n\r\nChange summary by file extension:\r\n.cs : +24 -0\r\n```\r\n> Change counts above are quantified counts, based on the [PullRequestQuantifier customizations](https://github.com/microsoft/PullRequestQuantifier/blob/main/docs/prquantifier-yaml.md).\r\n    \r\n</details>\r\n\r\n\r\n<details>\r\n    <summary display=\"inline\"> <strong>Why proper sizing of changes matters</strong> </summary>\r\n    <p/>\r\n    <p/>\r\n\r\nOptimal pull request sizes drive a better predictable PR flow as they strike a\r\nbalance between between PR complexity and PR review overhead. PRs within the\r\noptimal size (typical small, or medium sized PRs) mean:\r\n\r\n- Fast and predictable releases to production:\r\n  - Optimal size changes are more likely to be reviewed faster with fewer\r\niterations.\r\n  - Similarity in low PR complexity drives similar review times.\r\n- Review quality is likely higher as complexity is lower:\r\n  - Bugs are more likely to be detected.\r\n  - Code inconsistencies are more likely to be detetcted.\r\n- Knowledge sharing is improved within the participants:\r\n  - Small portions can be assimilated better.\r\n- Better engineering practices are exercised:\r\n  - Solving big problems by dividing them in well contained, smaller problems.\r\n  - Exercising separation of concerns within the code changes.\r\n\r\n#### What can I do to optimize my changes\r\n\r\n- Use the PullRequestQuantifier to quantify your PR accurately\r\n  - Create a context profile for your repo using the [context generator](https://github.com/microsoft/PullRequestQuantifier/releases)\r\n  - Exclude files that are not necessary to be reviewed or do not increase the review complexity. Example: Autogenerated code, docs, project IDE setting files, binaries, etc. Check out the `Excluded` section from your `prquantifier.yaml` context profile. \r\n  - Understand your typical change complexity, drive towards the desired complexity by adjusting the label mapping in your `prquantifier.yaml` context profile.\r\n  - Only use the labels that matter to you, [see context specification](./docs/prquantifier-yaml.md) to customize your `prquantifier.yaml` context profile.\r\n- Change your engineering behaviors\r\n  - For PRs that fall outside of the desired spectrum, review the details and check if:\r\n    - Your PR could be split in smaller, self-contained PRs instead\r\n    - Your PR only solves one particular issue. (For example, don't refactor and code new features in the same PR).\r\n\r\n#### How to interpret the change counts in git diff output\r\n\r\n- One line was added: `+1 -0`\r\n- One line was deleted: `+0 -1`\r\n- One line was modified: `+1 -1` (git diff doesn't know about modified, it will\r\ninterpret that line like one addition plus one deletion)\r\n- Change percentiles: Change characteristics (addition, deletion, modification)\r\nof this PR in relation to all other PRs within the repository.\r\n\r\n</details>\r\n\r\n<p />\r\n\r\n------\r\n\r\nWas this comment helpful? <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoiTWFydGluR0M5NCIsIlJlcG9zaXRvcnlMaW5rIjoiaHR0cHM6Ly9naXRodWIuY29tL1Bvd2VyU2hlbGwvUG93ZXJTaGVsbCIsIlB1bGxSZXF1ZXN0TGluayI6Imh0dHBzOi8vZ2l0aHViLmNvbS9Qb3dlclNoZWxsL1Bvd2VyU2hlbGwvcHVsbC8xNjk2MiIsIkV2ZW50VHlwZSI6IlRodW1ic1VwIn0=&amp;anonymous=True\" target=\"_blank\" title=\"Thumbs up\"><strong>:thumbsup:</strong></a> <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoiTWFydGluR0M5NCIsIlJlcG9zaXRvcnlMaW5rIjoiaHR0cHM6Ly9naXRodWIuY29tL1Bvd2VyU2hlbGwvUG93ZXJTaGVsbCIsIlB1bGxSZXF1ZXN0TGluayI6Imh0dHBzOi8vZ2l0aHViLmNvbS9Qb3dlclNoZWxsL1Bvd2VyU2hlbGwvcHVsbC8xNjk2MiIsIkV2ZW50VHlwZSI6Ik5ldXRyYWwifQ==&amp;anonymous=True\" target=\"_blank\" title=\"Neutral\"><strong>&nbsp;:ok_hand:</strong></a> <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoiTWFydGluR0M5NCIsIlJlcG9zaXRvcnlMaW5rIjoiaHR0cHM6Ly9naXRodWIuY29tL1Bvd2VyU2hlbGwvUG93ZXJTaGVsbCIsIlB1bGxSZXF1ZXN0TGluayI6Imh0dHBzOi8vZ2l0aHViLmNvbS9Qb3dlclNoZWxsL1Bvd2VyU2hlbGwvcHVsbC8xNjk2MiIsIkV2ZW50VHlwZSI6IlRodW1ic0Rvd24ifQ==&amp;anonymous=True\" target=\"_blank\" title=\"Thumbs down\"><strong>&nbsp;:thumbsdown:</strong></a> (<a href=\"MAILTO:prquantifier@microsoft.com\" title=\"Mail to prquantifier@microsoft.com\">Email</a>)\r\n[Customize PullRequestQuantifier](https://github.com/PowerShell/PowerShell/blob/master/.github/prquantifier.yaml) for this repository.\r\n\r\n",
      "created_at": "2022-03-23T22:31:14Z",
      "updated_at": "2022-03-23T22:31:14Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.3.0-preview.4` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.3.0-preview.4)\n",
      "created_at": "2022-05-23T16:20:50Z",
      "updated_at": "2022-05-23T16:20:50Z"
    }
  ],
  "created_at": "2022-03-06T09:00:56Z",
  "number": 16962,
  "state": "closed",
  "title": "Add OutputType attribute to various commands",
  "updated_at": "2022-06-05T08:29:34Z"
}