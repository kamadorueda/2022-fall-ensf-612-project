{
  "_url": "https://github.com/PowerShell/PowerShell/issues/1904",
  "author": "McAndersDK",
  "body": "Added possibility to add title to the credential prompt window.\nAdded possibility to only supply username without giving a message.\n",
  "closed_at": "2016-09-16T21:53:55Z",
  "comments": [
    {
      "author": "msftclas",
      "author_association": "NONE",
      "body": "Hi **@McAndersDK**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    <span>\n        In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla.microsoft.com.\n    </span>\n\nTTYL, MSBOT;\n",
      "created_at": "2016-08-18T19:56:48Z",
      "updated_at": "2016-08-18T19:56:48Z"
    },
    {
      "author": "msftclas",
      "author_association": "NONE",
      "body": "**@McAndersDK**, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR.\n<br />Thanks, MSBOT;\n",
      "created_at": "2016-08-18T20:00:20Z",
      "updated_at": "2016-08-18T20:00:20Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "Your code does not compile.  Please fix before we review this PR.\n",
      "created_at": "2016-08-18T20:34:00Z",
      "updated_at": "2016-08-18T20:34:00Z"
    },
    {
      "author": "McAndersDK",
      "author_association": "CONTRIBUTOR",
      "body": "it build on my machine? \nI cant see in the build details what is wrong? @lzybkr \n",
      "created_at": "2016-08-19T05:28:26Z",
      "updated_at": "2016-08-19T05:28:26Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "@McAndersDK you can see logs from the build server by clicking on the build status in your PR (red cross)\n\nFor example, here\nhttps://ci.appveyor.com/project/PowerShell/powershell/build/6.0.0-alpha.9-36#L276\n\nThe compilation error message\n\n```\nC:\\projects\\powershell\\src\\Microsoft.PowerShell.Security\\security\\CredentialCommands.cs(122,83): error CS1061: 'GetCredentialCommand' does not contain a definition for 'Username' and no extension method 'Username' accepting a \nfirst argument of type 'GetCre\ndentialCommand' could be found (are you missing a using directive or an assembly reference?)\nC:\\projects\\powershell\\src\\Microsoft.PowerShell.Security\\security\\CredentialCommands.cs(124,40): error CS1061: 'GetCredentialCommand' does not contain a definition for 'Username' and no extension method 'Username' accepting a \nfirst argument of type 'GetCre\ndentialCommand' could be found (are you missing a using directive or an assembly reference?)\nC:\\projects\\powershell\\src\\Microsoft.PowerShell.Security\\security\\CredentialCommands.cs(129,67): error CS0103: The name 'caption' does not exist in the current context\n```\n",
      "created_at": "2016-08-19T08:10:45Z",
      "updated_at": "2016-08-19T08:10:45Z"
    },
    {
      "author": "McAndersDK",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks @vors for some reason appveyor only showed the first 200 lines here.\nI had to download the log to see the complete output.\n",
      "created_at": "2016-08-19T08:34:46Z",
      "updated_at": "2016-08-19T08:34:46Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "@McAndersDK it should not be the case in general, but could be a one-off problem with AppVeyor.\n",
      "created_at": "2016-08-19T09:37:24Z",
      "updated_at": "2016-08-19T09:37:24Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "Thanks for fixing the build errors.\n\nBefore accepting this PR, we'll need some tests.  I was going to accept this PR without tests because `Get-Credential` is a bit harder to test than some cmdlets, but...\n\n@JamesWTruher has ported our `Get-Credential` to Pester, hopefully we'll see a PR from him today.\n\nAfter that PR is accepted, I'll ask you to add some tests for your new functionality.\n",
      "created_at": "2016-08-19T16:20:34Z",
      "updated_at": "2016-08-19T16:20:34Z"
    },
    {
      "author": "McAndersDK",
      "author_association": "CONTRIBUTOR",
      "body": "@daxian-dbw Thanks for input, I will make sure this will go into the PR with the test for the changes.\n",
      "created_at": "2016-08-19T18:02:14Z",
      "updated_at": "2016-08-19T18:02:14Z"
    },
    {
      "author": "jpsnover",
      "author_association": "CONTRIBUTOR",
      "body": "We should have done this a long time ago. Thanks!\n![542](https://cloud.githubusercontent.com/assets/6188114/17834247/11ced8e8-66ec-11e6-840c-136a27c1689b.gif)\n",
      "created_at": "2016-08-20T22:38:13Z",
      "updated_at": "2016-08-20T22:38:13Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "Can you add a test to test\\powershell\\Modules\\Microsoft.PowerShell.Security\\GetCredential.Tests.ps1 and fix the formatting as @rkeithhill suggested (though we'd fix that with a tool later anyway).\n",
      "created_at": "2016-08-22T16:33:29Z",
      "updated_at": "2016-08-22T16:33:29Z"
    },
    {
      "author": "McAndersDK",
      "author_association": "CONTRIBUTOR",
      "body": "yeah I will. Should I create a new PR with both file in it or just create a new one with the test separate?\n",
      "created_at": "2016-08-22T17:47:46Z",
      "updated_at": "2016-08-22T17:47:46Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "This PR is fine - just push another commit to your branch.\n",
      "created_at": "2016-08-22T17:51:59Z",
      "updated_at": "2016-08-22T17:51:59Z"
    },
    {
      "author": "McAndersDK",
      "author_association": "CONTRIBUTOR",
      "body": "@JamesWTruher How do I access the prompt stream?\n",
      "created_at": "2016-08-22T19:39:41Z",
      "updated_at": "2016-08-22T19:39:41Z"
    },
    {
      "author": "McAndersDK",
      "author_association": "CONTRIBUTOR",
      "body": "@jpsnover I agree \ud83d\udc4d \nI accept any PowerShell swags you can collect \ud83d\ude04 \n",
      "created_at": "2016-08-23T14:26:36Z",
      "updated_at": "2016-08-23T14:26:36Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": ":shipit: \n",
      "created_at": "2016-08-23T16:26:10Z",
      "updated_at": "2016-08-23T16:26:10Z"
    },
    {
      "author": "LeeHolmes",
      "author_association": "CONTRIBUTOR",
      "body": "One danger this opens Get-Credential up to is a pretty convincing phishing vehicle - for example, if the title is \"Microsoft Outlook\", you might not realize this is actually from a PowerShell script.\n\nWhen an alternate title is supplied, I suggest the following text - similar to what we do when there is a credential request coming over a remoting channel:\n\nWarning: A PowerShell script is requesting your credentials. Enter your credentials only if you trust the script that is requesting them.\n",
      "created_at": "2016-08-23T23:05:43Z",
      "updated_at": "2016-08-23T23:05:43Z"
    },
    {
      "author": "McAndersDK",
      "author_association": "CONTRIBUTOR",
      "body": "@LeeHolmes  that is true, but this change will just make it a tiny bit easyer to do.\nnothing stop them from using\n`$Host.UI.PromptForCredential('Microsoft outlook','','','')`\n\nbut to be trully good, one would use YAML to create a 100% look alike to the outlook credential prompt.\n",
      "created_at": "2016-08-24T06:48:50Z",
      "updated_at": "2016-08-24T06:50:19Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "@McAndersDK - in the test host, it looks like you can use `$th.UI.Streams.Prompt`, see https://github.com/PowerShell/PowerShell/blob/master/test/powershell/Common/TestHostCS.psm1#L129\n",
      "created_at": "2016-08-24T16:47:21Z",
      "updated_at": "2016-08-24T16:47:21Z"
    },
    {
      "author": "LeeHolmes",
      "author_association": "CONTRIBUTOR",
      "body": "@McAndersDK - That's a good point, moving the prompt warning to the default host is probably the best place to put it.\n",
      "created_at": "2016-08-25T15:00:36Z",
      "updated_at": "2016-08-25T15:00:36Z"
    },
    {
      "author": "jpsnover",
      "author_association": "CONTRIBUTOR",
      "body": "I struggled with this Q and acknowledging that a bad guy can work around things - I wonder our cmdlet should have a prefix for whatever title string a user supplies.  \n\nI don't know what the right prefix would be but for this example, image that we choose \"XXXX\"\ne.g. Get-Credential -Title \"ENTER OUTLOOK CREDS\"\nwould have a title :\n\"XXXX: ENTER OUTLOOK CREDS\"\n\nthoughts?\n",
      "created_at": "2016-08-25T16:59:39Z",
      "updated_at": "2016-08-25T16:59:39Z"
    },
    {
      "author": "McAndersDK",
      "author_association": "CONTRIBUTOR",
      "body": "For my use case, prepending a string Will also Work. \n\nThe string could also just be the default caption, and the 'title' parameter only get added at the end of the default. \n",
      "created_at": "2016-08-25T18:59:42Z",
      "updated_at": "2016-08-25T18:59:42Z"
    },
    {
      "author": "McAndersDK",
      "author_association": "CONTRIBUTOR",
      "body": "I also agree with @leeholmes that the host should be the one controlling the title, so one cant bypass the this. \n\nA solution could also be to make the credentials Prompt stand out, so every one would know it came from the powershell host. \n",
      "created_at": "2016-08-25T19:06:07Z",
      "updated_at": "2016-08-25T19:06:07Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "I'm fine with opening another issue to make the host ensure the prompt is unambiguously coming from PowerShell.\n\n@McAndersDK - I think this is ready merge unless you're adding a test to verify the title is passed correctly to the host.\n\nSuch a test would be nice but not required as it's still insufficient in validating the title gets displayed, the only way to validate that would require an `expect` like test.\n",
      "created_at": "2016-08-25T19:14:39Z",
      "updated_at": "2016-08-25T19:14:39Z"
    },
    {
      "author": "McAndersDK",
      "author_association": "CONTRIBUTOR",
      "body": "Yeah i need to add some more tests with the streams. \n\nPlease give me some days to add them in. \n",
      "created_at": "2016-08-25T19:43:15Z",
      "updated_at": "2016-08-25T19:43:15Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "Awesome - thanks for being responsive to our feedback.\n",
      "created_at": "2016-08-25T19:52:05Z",
      "updated_at": "2016-08-25T19:52:05Z"
    },
    {
      "author": "McAndersDK",
      "author_association": "CONTRIBUTOR",
      "body": "Travis just timed out?\nHow do we rerun travis? except to do a push?\n",
      "created_at": "2016-08-29T08:03:23Z",
      "updated_at": "2016-08-29T08:03:23Z"
    },
    {
      "author": "McAndersDK",
      "author_association": "CONTRIBUTOR",
      "body": "@lzybkr That did not work. we need to test the invoke for credential object?, if none throw?\nbut why change this? it worked before? atleast the test did not fail, I have not tryed the other way around \n",
      "created_at": "2016-09-01T09:55:43Z",
      "updated_at": "2016-09-01T09:55:43Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "The problem with not using a script block is that if it doesn't throw, the test passes but should fail. Adding the change I suggested exposed the fact that no exception was thrown, so failing the test is correct.\n\nI think this test might not make sense.  Looking at the console host - we prompt for the username if it's null or empty. Other hosts might do that or throw, but we don't really control other hosts.\n\nI'd say just remove this test.\n",
      "created_at": "2016-09-01T15:30:39Z",
      "updated_at": "2016-09-01T15:30:39Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Set \"message\" to optional is not best practice, from https://msdn.microsoft.com/en-us/library/dd878348%28v=vs.85%29.aspx :\n\u2022Each parameter set must have at least one unique parameter. If possible, make this parameter a **mandatory** parameter.\n\nSet both \"message\" and \"title\" to optional open a way to \"anonymous\" request of credential. That is bad. This provokes writing bad code.\n",
      "created_at": "2016-09-19T09:43:23Z",
      "updated_at": "2016-09-19T09:43:23Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "Before this change, you could call `Get-Credential` with no parameters, so I thought the change was necessary to keep that behavior. Maybe it wasn't.\n\nThe current experience (after this PR) with `Get-Credential` and no additional parameters is broken - it prompts twice (see #2306). So maybe we need to revert the change on the `Message` parameter.\n",
      "created_at": "2016-09-19T16:10:06Z",
      "updated_at": "2016-09-19T16:10:06Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> Before this change, you could call  Get-Credential  with no parameters\n\nGet-Credential  with no parameters set message to default \"Enter you credentials\". Message is in another parameter set and that is another experience.\nSo I think we should follow the msdn recommendations above mentioned.\n",
      "created_at": "2016-09-22T12:01:53Z",
      "updated_at": "2016-09-22T13:21:10Z"
    }
  ],
  "created_at": "2016-08-18T19:56:45Z",
  "number": 1904,
  "state": "closed",
  "title": "Added support for title in get-Credential, and message set to optional.",
  "updated_at": "2016-09-22T13:21:10Z"
}