{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15927",
  "author": "2Deep2Dive",
  "body": "### Prerequisites\n\n- [X] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\n\n### Steps to reproduce\n\nWhen using a switch parameter in a function, when some of the parameters are not used the value of 'True' is assigned to the parameter declared above the switch parameter, if the I disable PositionalBinding then an error produced and all is working correctly, if I call the function with all declared parameters, the error is properly produced\r\nThis is a very bad behavior and the \"FirstParm\" Should never be assigned the value 'True' and an error should be produced \r\n\r\n`function Get-Param {\r\n    [CmdletBinding()]\r\n    param (\r\n        [string]$FirstParam =\"\",\r\n        [Parameter(Mandatory=$true)]\r\n        [switch]$SecondParam,\r\n        [Parameter(Mandatory=$true)]\r\n        [string]$ThirdParam\r\n    )\r\n    begin {\r\n        Write-Output $FirstParam   \r\n    } \r\n    process {\r\n        if($FirstParam){\r\n            Write-Output $ThirdParam\r\n        }\r\n    }\r\n    end {}\r\n}\r\nGet-param   -ThirdParam 'Param3' -SecondParam $true`\n\n### Expected behavior\n\n```console\nGet-Param : A positional parameter cannot be found that accepts argument 'True'.\r\nAt D:\\@GitRepos\\PS_Tests\\switch_parameter_test.ps1:26 char:1\r\n+ Get-param   -ThirdParam 'Param3' -SecondParam $true\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : InvalidArgument: (:) [Get-Param], ParameterBindingException\r\n    + FullyQualifiedErrorId : PositionalParameterNotFound,Get-Param\n```\n\n\n### Actual behavior\n\n```console\nTrue\r\nParam3\n```\n\n\n### Error details\n\n_No response_\n\n### Environment data\n\n```powershell\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.4\r\nPSEdition                      Core \r\nGitCommitId                    7.1.4\r\nOS                             Microsoft Windows 10.0.19042\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\n```\n\n\n### Visuals\n\n_No response_",
  "closed_at": "2021-08-15T07:36:13Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "What I think you may be misunderstanding here is that switch parameters don't take values like other parameters do. A function call like `Get-Thing -Switch $true` doesn't pass `$true` to the switch parameter -- ever. Providing the name of the switch parameter **is** providing a value, intrinsically, it doesn't expect another value to be bound to it.  So this command call:\r\n\r\n```ps1\r\nGet-param -ThirdParam 'Param3' -SecondParam $true\r\n```\r\n\r\nPasses the expected value to $ThirdParam, passes an implicit $true to $SecondParam because it's a switch parameter, and then PS attempts to find a parameter that can take the positional value $true, and picks the first parameter.\r\n\r\nIf you want to pass a value explicitly to a switch parameter, you need to use different syntax:\r\n\r\n```ps1\r\nGet-param -ThirdParam 'Param3' -SecondParam:$true\r\n```\r\n\r\nThe `:` forces PS to bind the value to the named parameter, even if it is a switch parameter.",
      "created_at": "2021-08-13T22:59:36Z",
      "updated_at": "2021-08-13T22:59:52Z"
    },
    {
      "author": "2Deep2Dive",
      "author_association": "NONE",
      "body": "Hi @vexx32  Thank you for your prompt reply and explanation, I agree with you, what I misunderstood was that, I thought PowerShell well use either PositionalBinding or the parameter name but not both, but I was wrong.\r\nas you mentioned it uses both depending how the parameter was called with the name or without, I was aware of the `:` but I needed to understand why was this happening.\r\n\r\nThank you again for the info, much appreciated ",
      "created_at": "2021-08-15T07:36:13Z",
      "updated_at": "2021-08-15T07:36:13Z"
    }
  ],
  "created_at": "2021-08-13T20:42:20Z",
  "labels": [
    "Issue-Question",
    "Resolution-Answered"
  ],
  "number": 15927,
  "state": "closed",
  "title": "Unexpected Behavior When using switch parameter ",
  "updated_at": "2021-08-15T09:08:01Z"
}