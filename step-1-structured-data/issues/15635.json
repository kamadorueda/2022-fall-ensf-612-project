{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15635",
  "author": "rjmholt",
  "body": "## Steps to reproduce\r\n\r\n`-LiteralPath` doesn't work:\r\n```powershell\r\nSet-ItemProperty -LiteralPath ./banana.txt -InputObject ([pscustomobject]@{ IsReadOnly = $true })\r\n```\r\n\r\nNon-PSObject input doesn't work:\r\n```powershell\r\nSet-ItemProperty -Path ./banana.txt -InputObject @{ IsReadOnly = $true }\r\n```\r\n\r\n## Expected behavior\r\n\r\n*Makes `banana.txt` readonly*\r\n\r\n## Actual behavior\r\n\r\n1st case:\r\n```none\r\n> Set-ItemProperty -LiteralPath .\\banana.txt -InputObject ([pscustomobject]@{ IsReadOnly = $false })\r\nSet-ItemProperty: Cannot process argument because the value of argument \"property\" is null. Change the value of argument \"property\" to a non-null value.\r\n```\r\n\r\n2nd case:\r\n```none\r\n> set-itemproperty -path .\\banana.txt -InputObject @{ IsReadOnly = $false }\r\nSet-ItemProperty: The property bool IsFixedSize {get;} does not exist or was not found.\r\nSet-ItemProperty: The property bool IsSynchronized {get;} does not exist or was not found.\r\nSet-ItemProperty: The property System.Collections.ICollection Keys {get;} does not exist or was not found.\r\nSet-ItemProperty: The property System.Collections.ICollection Values {get;} does not exist or was not found.\r\nSet-ItemProperty: The property System.Object SyncRoot {get;} does not exist or was not found.\r\nSet-ItemProperty: The property int Count {get;} does not exist or was not found.\r\n```\r\n\r\nCompare with the behaviour here:\r\n\r\n```powershell\r\nset-itemproperty -path .\\banana.txt -InputObject ([pscustomobject]@{ IsReadOnly = $false })\r\n```\r\n\r\nThe issue seems to be here:\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/658837323599ab1c7a81fe66fcd43f7420e4402b/src/Microsoft.PowerShell.Commands.Management/commands/management/SetPropertyCommand.cs#L166-L183\r\n\r\nWe need to:\r\n\r\n- Take account of the LiteralPath/InputObject parameter set in the switch\r\n- Bail out in the switch when the parameter set is not determined (rather than asserting false), since that's clearly undefined behaviour\r\n- Convert `InputObject` properly to a `PSObject`\r\n\r\nWe should also review this unusual dynamic parameters code:\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/658837323599ab1c7a81fe66fcd43f7420e4402b/src/Microsoft.PowerShell.Commands.Management/commands/management/SetPropertyCommand.cs#L116-L143\r\n\r\n## Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\n> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.0-preview.7\r\nPSEdition                      Core\r\nGitCommitId                    7.2.0-preview.7\r\nOS                             Microsoft Windows 10.0.19043\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\nOriginally reported by @chasewilson ",
  "closed_at": null,
  "comments": [],
  "created_at": "2021-06-21T19:20:20Z",
  "labels": [
    "Issue-Bug",
    "WG-Cmdlets-Management",
    "Needs-Triage"
  ],
  "number": 15635,
  "state": "open",
  "title": "Set-ItemProperty InputObject parameter set does not handle non-PSObject inputs or LiteralPath parameter",
  "updated_at": "2021-06-21T22:42:53Z"
}