{
  "_url": "https://github.com/PowerShell/PowerShell/issues/17544",
  "author": "jhoneill",
  "body": "### Summary of the new feature / enhancement\n\nSending some data through format table I see this \r\n\r\n```\r\nProduct         Birmingham          Cardiff        Edinburgh          Glasgow           London\r\n-------         ----------          -------        ---------          -------           ------\r\nAsparagus             26.5               26 26.6666666666667 28.1666666666667 27.3333333333333\r\nCucumber  27.6666666666667 27.3333333333333             33.5 21.1666666666667 28.3333333333333\r\nLettuce   29.6666666666667             23.5 35.1666666666667 25.1666666666667 35.1666666666667\r\nPotato                21.5 26.1666666666667 24.3333333333333             24.5               30\r\nTomato    32.3333333333333               32 28.8333333333333 29.1666666666667             26.5\r\n\r\n```\r\n\r\nUsing custom properties I can specify a format string for each column. But that needs to be done 5 times - and may places of decimals limit the number of columns that can be fitted in. \r\n\r\nIn an ideal world we would have  `<blah> | format-table * -FormatString \"0.00\" ` \r\n\r\n\r\n\n\n### Proposed technical implementation details (optional)\n\n_No response_",
  "closed_at": "2022-07-18T21:27:07Z",
  "comments": [
    {
      "author": "237dmitry",
      "author_association": "NONE",
      "body": "With right-side alignment?",
      "created_at": "2022-06-20T14:52:11Z",
      "updated_at": "2022-06-20T14:52:11Z"
    },
    {
      "author": "jhoneill",
      "author_association": "NONE",
      "body": "When you use @{f=\"0.00\";e='ColumnName'} numbers remain right aligned.  \r\nWhere `@{e={$_.ColumnName.Tostring(\"0.00\")}}`  would be left aligned  \r\n\r\n```\r\nps> $dataToPivot | ConvertTo-CrossTab -ValueName sales -RowName product -columnname location -Aggregate Average  | ft product, @{f=\"0.00\";e=\"Cardiff\"}\r\n\r\nproduct   Cardiff\r\n-------   -------\r\nAsparagus   29.86\r\nCucumber    33.86\r\nLettuce     34.00\r\nPotato      34.86\r\nTomato      37.71\r\n\r\nps> $dataToPivot | ConvertTo-CrossTab -ValueName sales -RowName product -columnname location -Aggregate Average  | ft product, @{n=\"Long name goes here\"; e={$_.Cardiff.tostring(\"0.00\")}}\r\n\r\nproduct   Long name goes here\r\n-------   -------------------\r\nAsparagus 29.86\r\nCucumber  33.86\r\nLettuce   34.00\r\nPotato    34.86\r\nTomato    37.71\r\n ```\r\n\r\nI just don't want to write \r\n```\r\n ft product, @{f=\"0.00\";e=\"Birmingham\"} , @{f=\"0.00\";e=\"Cardiff\"},@{f=\"0.00\";e=\"Edinburgh\"}, @{f=\"0.00\";e=\"Glasgow\"},@{f=\"0.00\";e=\"London\"} \r\n ```\r\n especially as in this case I don't what the column names will be before I run the command \r\n",
      "created_at": "2022-06-20T16:13:27Z",
      "updated_at": "2022-06-20T16:13:27Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Alternate proposal is to have the formatting engine always format floats to 2 decimal places for tables by default.  I think this will be useful in general as most people don't need more than 2 decimal places and the actual object always retain the actual value.",
      "created_at": "2022-07-06T16:48:05Z",
      "updated_at": "2022-07-06T16:48:05Z"
    },
    {
      "author": "jhoneill",
      "author_association": "NONE",
      "body": "@SteveL-MSFT  - that solves my cases.  Ensuring my numbers are floats is a lot easier than doing the custom format strings. \r\n\r\nAnd 2 places works for me - I wonder if someone will come back and say \"make that a parameter\" . \r\n ",
      "created_at": "2022-07-06T19:56:31Z",
      "updated_at": "2022-07-06T19:56:31Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "We always say Formatting System follow current culture. So we should use the format from current culture from OS\r\n![image](https://user-images.githubusercontent.com/22290914/177686520-7cad9c51-8941-4297-8fb1-06d02f3e7291.png)\r\n",
      "created_at": "2022-07-07T03:49:15Z",
      "updated_at": "2022-07-07T03:49:15Z"
    },
    {
      "author": "jhoneill",
      "author_association": "NONE",
      "body": "@iSazonov  (cc @SteveL-MSFT )\r\n \r\nYES \r\n```\r\n(Get-Culture).numberformat\r\nNumberDecimalDigits      : 2\r\nNumberDecimalSeparator   : .\r\n```\r\n\r\nThose are the ones that should be used - format short cut \"N\" with no digits picks those up. \r\n\r\nIt needs to apply to the decimal type not just double and single.\r\n\r\n\r\n",
      "created_at": "2022-07-07T11:40:13Z",
      "updated_at": "2022-07-07T11:42:55Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> It needs to apply to the decimal type not just double and single.\r\n\r\nThey was fixed in #9893 :-)",
      "created_at": "2022-07-07T13:15:34Z",
      "updated_at": "2022-07-07T13:15:34Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov yes, using current culture absolutely makes sense.  I'll create a PR.",
      "created_at": "2022-07-08T18:32:33Z",
      "updated_at": "2022-07-08T18:32:33Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:This issue was addressed in #17650, which has now been successfully released as `v7.3.0-preview.7`.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.3.0-preview.7)\n",
      "created_at": "2022-08-11T23:59:38Z",
      "updated_at": "2022-08-11T23:59:38Z"
    },
    {
      "author": "jhoneill",
      "author_association": "NONE",
      "body": "Downloaded the preview and first tests look like **exactly what I wanted** (though not as I asked for it in when I opened the issue :-)  ). Big thanks to all those who made it happen ",
      "created_at": "2022-08-12T08:30:48Z",
      "updated_at": "2022-08-12T08:31:23Z"
    }
  ],
  "created_at": "2022-06-20T12:40:16Z",
  "number": 17544,
  "state": "closed",
  "title": "Format-Table (and Format-List) should have a -FormatString  parameter. ",
  "updated_at": "2022-08-12T08:31:23Z"
}