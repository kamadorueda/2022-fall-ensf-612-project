{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13264",
  "author": "glatzert",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 and PowerShell 7+ issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6).\r\n\r\n-->\r\n\r\nI'm the maintainer of a small Powershell Module called \"ACME-PS\", the module uses `DefaultCommandPrefix` in it's psd1.\r\nThis seems to have downsides, and should at least be documented or event \"not recommended to use\" (or maybe even marked obsolete)\r\n\r\n## Steps to reproduce\r\n\r\n```powershell\r\nInstall-Module ACME-PS # will fail, because missing, but misleading -AllowClobber\r\nInstall-Module ACME-PS -AllowClobber\r\n```\r\n\r\nType \"Get-Ord[TAB]\" (completes to get-order)\r\nPress [Enter].\r\n\r\n## Expected behavior\r\n\r\nAuto-Completion should not complete to Get-Order, since DefaultCommandPrefix is ACME\r\n\r\n## Actual behavior\r\n\r\nDon't Auto-Complete the command, since it should be \"Get-ACMEOr[TAB]\" which auto-completes.\r\n\r\n## Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.3\r\nPSEdition                      Core\r\nGitCommitId                    7.0.3\r\nOS                             Microsoft Windows 10.0.18363\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "ThomasNieto",
      "author_association": "CONTRIBUTOR",
      "body": "PoweShellGet module is being rewritten and command clobbering is on by default so `-AllowClobber` will no longer be a parameter, however there are some issues with it. I've open a couple of them when trying to reproduce your issue.\r\n\r\nhttps://github.com/PowerShell/PowerShellGet/issues/204\r\nhttps://github.com/PowerShell/PowerShellGet/issues/203\r\n\r\nHere is a related issue when using DefaultCommandPrefix and module loading: https://github.com/PowerShell/PowerShell/issues/12858\r\n\r\ncc: @mklement0 ",
      "created_at": "2020-07-28T14:55:16Z",
      "updated_at": "2020-07-28T14:55:16Z"
    },
    {
      "author": "glatzert",
      "author_association": "NONE",
      "body": "Do we have any idea, if the problems will be fixed?\r\nI prepared a new module version, which ditches the DefaultCommandPrefix for a static one (as seen in PSDbaTools, e.g.), but I'm unsure, if I want to go down that road or not.",
      "created_at": "2020-07-29T07:20:26Z",
      "updated_at": "2020-07-29T07:20:26Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "It looks to me the module analysis code can be improved to take into account the `DefaultCommandPrefix` setting in .psd1 file.\r\n\r\n@ThomasNieto Can you please explain to me why `-AllowClobber` is required in this case?",
      "created_at": "2020-07-31T15:41:28Z",
      "updated_at": "2020-07-31T15:41:28Z"
    },
    {
      "author": "ThomasNieto",
      "author_association": "CONTRIBUTOR",
      "body": "@daxian-dbw I tested with PSGet v3 and `-NoClobber` command producing these two issues:\r\n\r\nPowerShell/PowerShellGet#204\r\nPowerShell/PowerShellGet#203\r\n\r\nI was not able to reproduce requiring `-AllowClobber` in PSGet v2 as the OP indicated. There might be something on the OP system that is causing that.\r\n\r\nI did do some tests on PS 5.1 and PS 7.0.3 with PSGet 2.2.4.1. Command conflict checking is working as expected on PS 5.1 but does not properly check on PS 7.0.3. My testing methodology is below:\r\n\r\nI tested by checking if there any commands with `*acme*` prior to install, confirmed there were none, then installed as normal. Then I created a module manifest with `FunctionsToExport` with a value of `Get-Account` which is one of the command shipped in `acme-ps` with default command prefix of `acme` and still installed as expected.\r\n\r\nTo test the command conflict I updated the module to have the command `Get-AcmeAccount` and then installing `acme-ps` produced the command conflict error only on PS 5.1 but didn't on PS 7.0.3.\r\n\r\nThe last test was to see if `DefaultCommandPrefix` was working so I updated the function to `Get-Account` with a `DefaultCommandPrefix` of `amce`, both PS 5.1 and 7.0.3 threw the error as expected.\r\n\r\nI know this was a lot but I can put it in a pester test if needed.",
      "created_at": "2020-07-31T17:21:57Z",
      "updated_at": "2020-07-31T17:21:57Z"
    },
    {
      "author": "glatzert",
      "author_association": "NONE",
      "body": "The `-AllowClobber` message came from the module having `Export-(ACME)Certificate` clashing with `Export-Certificate`.\r\n(This also affects `Invoke-ScriptAnalyzer` as it'll warn about clobbering `Export-Certificate`.)\r\n\r\nNevertheless I cannot reproduce it again, but I had issues with PowerShellGet, making me remove all modules and clear $env:PSModulePath, so it might really be something on my machine, or an older PSGet Version, which issued that error.\r\n\r\nThanks for your analysis so far \ud83d\udc4d \r\n",
      "created_at": "2020-08-02T13:09:00Z",
      "updated_at": "2020-08-02T13:09:00Z"
    }
  ],
  "created_at": "2020-07-24T08:27:17Z",
  "number": 13264,
  "state": "open",
  "title": "DefaultCommandPrefix confuses auto-completion and breaks `install-module`",
  "updated_at": "2020-08-02T13:09:01Z"
}