{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11280",
  "author": "heaths",
  "body": "# Summary of the new feature/enhancement\r\n\r\nCurrently, when you use `Enter-PSSession` for a remote session, PowerShell prepends \"[_computername_]: \". If we have `$prompt` functions like powerline, that tends to mess up the vibe. Here's an example using my own `$prompt` that is similar to powerline:\r\n\r\n![image](https://user-images.githubusercontent.com/1532486/70355630-7e4d2e80-1827-11ea-859a-820446fccefe.png)\r\n\r\nWhile a good default, it would be nice if we could have a preference variable to disable this and instead (or, perhaps, in addition to the default) have a variable that contains the remote host.\r\n\r\nThe [GetRemotePrompt](https://github.com/PowerShell/PowerShell/blob/d58a82ad19fbfad81e85778c8b08cb1b28f58fce/src/System.Management.Automation/engine/hostifaces/HostUtilities.cs#L683) function does evaluate the `$prompt` function (though, by default, for remotes this isn't possible; see repro steps), but then prepends one of a few different prefixes regardless of a user's `$prompt`.\r\n\r\nI propose:\r\n\r\n1. Define a variable like `$PSRemoteComputerName` (or `$PSRemoteComputerName` - same suffix as the `Enter-PSSession -HostName` parameter) or add a property to something like `$ExecutionContext` (perhaps all remote runspace's `ConnectionInfo`) so scripts - like `$PROFILE` - can access it.\r\n2. Support a preference variable to disable prepending the remote host name.\r\n\r\n## Repro steps\r\n\r\nBy default, `$profile` scripts aren't even run with remote sessions (`$profile` isn't even available), so one does have to make it possible:\r\n\r\n```powershell\r\n# enable remoting (if not enabled already)\r\nenable-psremoting -force\r\n\r\n# create a startup script to set and source $profile\r\n@'\r\n$global:PROFILE = Join-Path $env:USERPROFILE 'Documents\\PowerShell\\Microsoft.PowerShell_profile.ps1'\r\nif (Test-Path $PROFILE -PathType 'Leaf') {\r\n    . $PROFILE\r\n}\r\n'@ > $pshome\\profile.ps1\r\n\r\n# register a new session configuration with that script\r\nregister-pssessionconfiguration -name WithProfile -startupscript $pshome\\profile.ps1\r\n\r\n# remote in with that new session configuration\r\nenter-pssession mycomputer -configurationname withprofile\r\n```\r\n\r\n# Proposed technical implementation details (optional)\r\n\r\n[ConsoleHost](https://github.com/PowerShell/PowerShell/blob/a1c2d3c9777530030031e3404ac72dfd4f1b1b3e/src/Microsoft.PowerShell.ConsoleHost/host/msh/ConsoleHost.cs#L2786) is already evaluating the `$prompt` function, so in [GetRemotePrompt](https://github.com/PowerShell/PowerShell/blob/d58a82ad19fbfad81e85778c8b08cb1b28f58fce/src/System.Management.Automation/engine/hostifaces/HostUtilities.cs#L683) we could evaluate a variable or other property and simply **not** prepend the string. In lieu or in addition to the prefix, we can set variables (constants) for both the username (if SSH) and computername that scripts can use in their `$prompt` or wherever.",
  "closed_at": null,
  "comments": [],
  "created_at": "2019-12-06T21:22:24Z",
  "labels": [
    "Issue-Enhancement"
  ],
  "number": 11280,
  "state": "open",
  "title": "Provide remote machine name and do not clobber $prompt",
  "updated_at": "2019-12-06T21:22:24Z"
}