{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10924",
  "author": "mklement0",
  "body": "`Get-Member -Type Property` (as opposed to the property-type agnostic `-Type Properties`) normally only reports properties native to the object's .NET type.\r\n\r\nBy contrast, `NoteProperty` members such as those created for `[pscustomobject]` instances are _not_ included (e.g., `[pscustomobject] @{ foo=1 } | Get-Member -Type Property` yields no output).\r\n\r\nHowever, in the context of deserializing objects serialized in the context of remoting / background jobs, those `NoteProperty` members of the deserialized object that correspond to the native properties of the original object are misrepresented as native properties in `Get-Member -Type Property`'s output.\r\n\r\n**Note**: \r\n\r\nPerhaps this behavior is by design, to have a \"type-unfaithfully\" deserialized object better emulate the original input object, but I'm not sure this \"white lie\" is helpful (if you use .NET reflection methods such as `.GetType().GetProperties()` directly, they tell the truth) and, conversely, it can be confusing.\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\n# Pass a [System.IO.DirectoryInfo] instance to a background job\r\n# and examine the native properties (there should be none) on the *deserialized* object.\r\nStart-Job { $args | Get-Member -Type Property } -Args (Get-Item /) | Receive-Job -Wait -AutoRemoveJob |\r\n  Should -BeNullOrEmpty\r\n```\r\n\r\n# Expected behavior\r\n\r\nThe test should pass.\r\n\r\n# Actual behavior\r\n\r\nThe test fails:\r\n\r\n```none\r\nExpected $null or empty, but got @(System.String {get;set;}, System.DateTime {get;set;}, System.DateTime {get;set;}, System.Boolean {get;set;}, System.String {get;set;}, System.String {get;set;}, System.DateTime {get;set;}, System.DateTime {get;set;}, System.DateTime {get;set;}, System.DateTime {get;set;}).\r\n```\r\n\r\nThat is, the `NoteProperty` members of the deserialized object that correspond to the original input object's native properties were reported as native properties, even though they are not.\r\n\r\n# Environment data\r\n\r\n```none\r\nPowerShell Core 7.0.0-preview.5\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "BrucePay",
      "author_association": "COLLABORATOR",
      "body": "@mklement0 \r\n> Perhaps this behavior is by design, to have a \"type-unfaithfully\" deserialized object better emulate the original input object, but I'm not sure this \"white lie\" is helpful\r\n\r\nDoing this is beyond \"helpful\". Cmdlets parameters are bound by property name. Preserving the properties on deserialized objects allows them to be used transparently by cmdlets that understand those properties. _This is the core idea behind PowerShell remoting._",
      "created_at": "2019-11-04T01:47:44Z",
      "updated_at": "2019-11-04T01:47:44Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@BrucePay:\r\n\r\nThis by-property-name binding is:\r\n\r\n* neither tied to the _actual_ property type - which happens to be `NoteProperty` in the case of non-type-faithfully deserialized objects\r\n\r\n* nor to the _incorrect property type reported by `Get-Member`_, which is what this issue is about.\r\n\r\nIn other words: the de facto `NoteProperty` members on non-type-faithfully deserialized instances bind just fine to by-property pipeline-binding parameters, just like true type-native `Property` members do.\r\n\r\n---\r\n\r\nIf you truly believe, as your response suggests, that the gist of this  issue is  to complain about _properties being preserved during remoting_, your response is:\r\n\r\n* based on a misreading of the OP\r\n\r\n* amounts to an unnecessary distraction.\r\n\r\nUnfortunately, this is a recurring pattern.\r\n\r\nI've asked this question before:\r\nI do my best to formulate the issues I report here clearly, yet you're repeatedly misinterpreting them.\r\nWhat can I do to help this situation?\r\n",
      "created_at": "2019-11-04T02:14:43Z",
      "updated_at": "2019-11-04T02:15:30Z"
    }
  ],
  "created_at": "2019-10-28T17:54:30Z",
  "number": 10924,
  "state": "open",
  "title": "Get-Member misrepresents some NoteProperty members as type-native properties for deserialized objects",
  "updated_at": "2019-11-04T02:56:21Z"
}