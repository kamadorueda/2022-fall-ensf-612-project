{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3023",
  "author": "n3l5",
  "body": "Error Message:\r\n\"Get-ComputerInfo : Unable to find an entry point named 'GetFirmwareType' in DLL 'kernel32.dll'.\"\r\n\r\nEnvironment:\r\n------------------\r\nWindows Management Framework 5.1\r\nOperating System: Windows 7 x64\r\n\r\n\r\nExamples\r\n------------------\r\n```\r\nPS C:\\Users\\user> Get-ComputerInfo -Property OsInstallDate\r\nGet-ComputerInfo : Unable to find an entry point named 'GetFirmwareType' in DLL 'kernel32.dll'.\r\nAt line:1 char:1\r\n+ Get-ComputerInfo -Property OsInstallDate\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : NotSpecified: (:) [Get-ComputerInfo], EntryPointNotFoundException\r\n    + FullyQualifiedErrorId : System.EntryPointNotFoundException,Microsoft.PowerShell.Commands.GetComputerInfoCommand\r\n\r\nPS C:\\Users\\user> Get-ComputerInfo -Property TimeZone\r\nGet-ComputerInfo : Unable to find an entry point named 'GetFirmwareType' in DLL 'kernel32.dll'.\r\nAt line:1 char:1\r\n+ Get-ComputerInfo -Property TimeZone\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : NotSpecified: (:) [Get-ComputerInfo], EntryPointNotFoundException\r\n    + FullyQualifiedErrorId : System.EntryPointNotFoundException,Microsoft.PowerShell.Commands.GetComputerInfoCommand\r\n```\r\n\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n```\r\nName                           Value\r\n----                           -----\r\nPSVersion                      5.1.14409.1005\r\nPSEdition                      Desktop\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nBuildVersion                   10.0.14409.1005\r\nCLRVersion                     4.0.30319.42000\r\nWSManStackVersion              3.0\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\n```",
  "closed_at": "2017-04-12T18:58:14Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@n3l5 Thanks for bug report!\r\n\r\n`GetFirmwareType`[ is introduced in Windows 8 and Windows Server 2012 ](https://msdn.microsoft.com/en-us/library/windows/desktop/hh848321%28v=vs.85%29.aspx)\r\n\r\n",
      "created_at": "2017-01-20T14:20:44Z",
      "updated_at": "2017-01-20T14:20:44Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "Given the behavior isn't there on Win7, I'm not sure what we can do other than do a better of job of erroring out. We also wouldn't ship a change for that unless we had a hypothetical WMF 5.2, though I'm not speaking here to whether that's happening or not. ",
      "created_at": "2017-01-23T18:12:39Z",
      "updated_at": "2017-01-23T18:12:39Z"
    },
    {
      "author": "n3l5",
      "author_association": "NONE",
      "body": "Unless there is an option to feature request a kernel fix for Win 7 to support this, can be closed out since this appears to be a kernel feature and Win 7 is on the way out.",
      "created_at": "2017-01-23T19:05:42Z",
      "updated_at": "2017-01-23T19:05:42Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks @n3l5! ",
      "created_at": "2017-01-23T19:53:41Z",
      "updated_at": "2017-01-23T19:53:41Z"
    },
    {
      "author": "zii-dmg",
      "author_association": "NONE",
      "body": "Isn't solution is just one `if` check for windows version in [GetComputerInfoCommand.cs](https://github.com/PowerShell/PowerShell/blob/master/src/Microsoft.PowerShell.Commands.Management/commands/management/GetComputerInfoCommand.cs#L561)?",
      "created_at": "2017-03-19T21:12:49Z",
      "updated_at": "2017-03-19T21:12:49Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "We should wrap the api calls so this fails silently.",
      "created_at": "2017-03-19T22:58:25Z",
      "updated_at": "2017-03-19T22:58:25Z"
    },
    {
      "author": "jeffbi",
      "author_association": "CONTRIBUTOR",
      "body": "Just as a point of interest, at the time this cmdlet was written the target OS was Win10.\r\n\r\nFortunately there aren't too many native API calls, so wrapping them shouldn't be too onerous.\r\n\r\n@SteveL-MSFT  I can take this one if you like.",
      "created_at": "2017-03-20T02:56:56Z",
      "updated_at": "2017-03-20T02:56:56Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Perhaps it is time to start porting this cmdlet instead of doing partial fixes. It would be good to do it in Beta time.",
      "created_at": "2017-03-20T03:14:12Z",
      "updated_at": "2017-03-20T03:14:12Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Making it cross-platform is a pretty big task and probably something we'd do for 6.1.0.  @jeffbi it should be pretty straightforward to wraps so they `silentlycontinue` for current release.",
      "created_at": "2017-03-20T16:06:03Z",
      "updated_at": "2017-03-20T16:06:03Z"
    },
    {
      "author": "zii-dmg",
      "author_association": "NONE",
      "body": "Alpha 18 no longer crash on `GetFirmwareType` in Windows 7, but other strange crash - #3541.",
      "created_at": "2017-04-12T17:32:50Z",
      "updated_at": "2017-04-12T17:32:50Z"
    }
  ],
  "created_at": "2017-01-20T13:38:07Z",
  "number": 3023,
  "state": "closed",
  "title": "Get-ComputerInfo : Unable to find an entry point named 'GetFirmwareType' in DLL 'kernel32.dll'.\"",
  "updated_at": "2017-04-13T12:23:53Z"
}