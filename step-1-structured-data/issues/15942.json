{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15942",
  "author": "inshua",
  "body": "### Prerequisites\r\n\r\n- [X] Write a descriptive title.\r\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- [X] Search the existing issues.\r\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\r\n\r\n### Steps to reproduce\r\n\r\nHere I find a strange sample, it maybe caused by command line parser or the Parser itself.\r\n\r\n### Expected behavior\r\n\r\n```console\r\n# start from cmd\r\ncmd /c powershell -C \"'powershell \"\"function f(){2}f'\"\"| out-default\"\r\n```\r\n\r\nit will output \r\n```\r\npowershell \"function f(){2}f\r\n```\r\n\r\n\r\n### Actual behavior\r\n\r\n```console\r\n# start from cmd\r\ncmd /c pwsh -C \"'powershell \"\"function f(){2}f'\"\"| out-default\"\r\n\r\n\r\nNothing output, I've checked the error, error id is \"TerminatorExpectedAtEndOfString\".\r\n```\r\n\r\n\r\n### Error details\r\n\r\n```console\r\nTerminatorExpectedAtEndOfString\r\n```\r\n\r\n\r\n### Environment data\r\n\r\n```powershell\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.4\r\nPSEdition                      Core\r\nGitCommitId                    7.1.4\r\nOS                             Microsoft Windows 10.0.19042\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\nWindows integrated Powershell version:\r\n```\r\nName                           Value\r\n----                           -----\r\nPSVersion                      5.1.19041.1151\r\nPSEdition                      Desktop\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nBuildVersion                   10.0.19041.1151\r\nCLRVersion                     4.0.30319.42000\r\nWSManStackVersion              3.0\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\n```\r\n```\r\n\r\n\r\n### Visuals\r\n\r\n_No response_",
  "closed_at": "2021-08-17T10:15:45Z",
  "comments": [
    {
      "author": "inshua",
      "author_association": "NONE",
      "body": "Solved, it must call CommandLineToArgvW(GetCommandLineW()) to handle arguments instead of SegmentCommandLine like most .net app.",
      "created_at": "2021-08-17T10:15:41Z",
      "updated_at": "2021-08-17T10:15:41Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "/cc @mklement0 for information.",
      "created_at": "2021-08-17T12:29:55Z",
      "updated_at": "2021-08-17T12:29:55Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "If we take PowerShell as the _caller_ out of the picture and call the following from `cmd.exe`:\r\n\r\n```sh\r\nC:\\>pwsh -c \"'powershell \"\"function f(){2}f'\"\"| out-default\"\r\n# !! No output\r\n```\r\n\r\nWhat an application that uses the C/C++ argument parsing (which includes .NET applications and, I believe, `pwsh.exe`) see as the last argument is the following, _verbatim_ (after stripping syntactic double quotes):\r\n\r\n```\r\n'powershell \"function f(){2}f'\"| out-default\r\n```\r\n\r\nThis is _not_ a valid PowerShell command line, due to the unbalanced second `\"`.\r\n\r\nThat `pwsh.exe` fails _quietly_ in the face of such a syntactically invalid command is a bug, and it probably has the same underlying cause as #14284.\r\n\r\n\r\n",
      "created_at": "2021-08-21T19:06:03Z",
      "updated_at": "2021-08-21T19:06:03Z"
    }
  ],
  "created_at": "2021-08-17T08:18:33Z",
  "number": 15942,
  "state": "closed",
  "title": "Who can tell me why this can work on Powershell 5.1 of Windows10 and cannot work with any version of this repo",
  "updated_at": "2021-08-23T03:42:54Z"
}