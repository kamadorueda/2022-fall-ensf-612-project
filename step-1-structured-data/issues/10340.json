{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10340",
  "author": "SteveL-MSFT",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nRe-enabled the existing Clipboard code for Windows which relies on the Clipboard class from WinForms.  For Linux, it requires `xclip` and macOS `pbcopy` and `pbpaste`.  Had to `#ifdef` out a bunch of code that only works on Windows for copy/pasting non-text types.  On Linux/macOS, decided to retain the parameters even if not supported to provide a more detailed error message.\r\n\r\nHad to modify typegen as one of the types in Winforms being used has no HashAlgorithm so typegen threw.  Instead, it skips assemblies where no HashAlgorithm is used which appears to only be an Accessibility assembly associated with WinForms.\r\n\r\nTo support win-arm builds, creating new WINFORMS def in csproj and uses clip.exe to set the clipboard, but no cmdline tool on win-arm to get contents of clipboard so had to disable all tests on win-arm since it depends on getting content out.\r\n\r\nTo support PSXunit tests, default to Microsoft.NET.Sdk if SDKToUse is not explicitly defined.\r\n\r\n## PR Context\r\n\r\nFix https://github.com/PowerShell/PowerShell/issues/4307\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [x] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission) https://github.com/MicrosoftDocs/PowerShell-Docs/pull/4628\r\n        - [ ] Issue filed: <!-- Number/link of that issue here --> \r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2019-11-04T19:29:00Z",
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Not sure why XUnit tests are failing as it doesn't seem the changes here should have that effect so still investigating but repros locally.",
      "created_at": "2019-08-10T20:58:29Z",
      "updated_at": "2019-08-10T20:58:29Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "The remaining Codacy issues are by-design as I don't want to `#if` out those members and code referring to them making it harder to read",
      "created_at": "2019-08-11T00:55:43Z",
      "updated_at": "2019-08-11T00:55:43Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Need to add System.Windows.Forms to https://github.com/PowerShell/PowerShell-Native/blob/master/src/powershell-native/nativemsh/pwrshcommon/pwrshcommon.cpp and publish new PowerShell-Native nupkg.\n\n<blockquote><img src=\"https://avatars0.githubusercontent.com/u/11524380?s=400&v=4\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicon.ico\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/PowerShell/PowerShell-Native\">PowerShell/PowerShell-Native</a></strong></div><div>Contribute to PowerShell/PowerShell-Native development by creating an account on GitHub.</div></blockquote>",
      "created_at": "2019-08-12T03:16:14Z",
      "updated_at": "2019-08-12T03:16:16Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Created https://github.com/PowerShell/PowerShell-Native/pull/28 to update trusted assemblies list to include System.Windows.Forms",
      "created_at": "2019-08-12T15:57:32Z",
      "updated_at": "2019-08-12T15:57:32Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "Apparently there is a VT sequence for setting the clipboard which might be of use here and in PSReadLine, see https://github.com/microsoft/terminal/issues/2946",
      "created_at": "2019-10-12T05:29:02Z",
      "updated_at": "2019-10-12T05:29:02Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@lzybkr On my macBook using iTerm 2, `` \"`e]52;c;SABlAGwAbABvAA==`u{07}\"`` puts up a banner saying the terminal tried to access the clipboard and was denied and I have to enable it in settings to allow.  Looking at the discussion, it seems to be a security concern to read from the clipboard and expectation is some prompt when pasting to the clipboard.\r\n\r\nOn Ubuntu 18.04 with built in Terminal, it doesn't copy to the clipboard.  Seems that it is simply ignored.  Don't see any option in the Terminal to enable it.\r\n",
      "created_at": "2019-10-12T06:08:00Z",
      "updated_at": "2019-10-12T06:12:02Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "@SteveL-MSFT - it seems like a viable fallback if the desired commands are not installed.",
      "created_at": "2019-10-12T06:17:25Z",
      "updated_at": "2019-10-12T06:17:25Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@lzybkr as a fallback, it would be ok.  I'll update this PR when I find some time.",
      "created_at": "2019-10-12T16:02:45Z",
      "updated_at": "2019-10-12T16:02:45Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee there is a request to remove dependency on WinForms and call the win32 apis directly.  WinForms automatically gave us support for FileDropList, Audio, and Image formats (the latter two simply return a .NET object that has metadata about the content).  The first one allowed copying files from Explorer and outputting their file paths, but required specifying that explicitly: Get-ClipBoard -Format FileDropList.  I would propose that we simplify this and have consistency across platforms by only supporting text.  This would also remove the `-Format` and `-Raw` params which would no longer be needed.",
      "created_at": "2019-10-25T17:35:02Z",
      "updated_at": "2019-10-25T17:35:02Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee reviewed this, since the code exists for the PInvokes and we prefer consistency across different platforms, we agreed to remove dependency on WinForms and wait for feedback if any customer needs `-Format`",
      "created_at": "2019-10-28T18:50:35Z",
      "updated_at": "2019-10-28T18:50:35Z"
    },
    {
      "author": "sdwheeler",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT \r\n\r\n- Get-Clipboard https://go.microsoft.com/fwlink/?linkid=2109905\r\n- Set-Clipboard https://go.microsoft.com/fwlink/?linkid=2109826\n\n<blockquote><img src=\"https://docs.microsoft.com/en-us/media/logos/logo-ms-social.png\" width=\"48\" align=\"right\"><div><strong><a href=\"https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.management/get-clipboard\">Get-Clipboard (Microsoft.PowerShell.Management)</a></strong></div><div>The Get-Clipboard cmdlet gets the current Windows clipboard entry. </div></blockquote>\n<blockquote><img src=\"https://docs.microsoft.com/en-us/media/logos/logo-ms-social.png\" width=\"48\" align=\"right\"><div><strong><a href=\"https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.management/set-clipboard\">Set-Clipboard (Microsoft.PowerShell.Management)</a></strong></div><div>The Set-Clipboard cmdlet sets the current Windows clipboard entry. </div></blockquote>",
      "created_at": "2019-10-30T23:24:50Z",
      "updated_at": "2019-10-30T23:24:52Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Remaining Codacy issues are by-design",
      "created_at": "2019-11-02T04:57:26Z",
      "updated_at": "2019-11-02T04:57:26Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Please fix CodeFactor issues.",
      "created_at": "2019-11-02T16:48:03Z",
      "updated_at": "2019-11-02T16:48:03Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PoshChan please retry static",
      "created_at": "2019-11-04T17:38:05Z",
      "updated_at": "2019-11-04T17:38:05Z"
    },
    {
      "author": "PoshChan",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT, successfully started retry of `PowerShell-CI-static-analysis`",
      "created_at": "2019-11-04T17:38:22Z",
      "updated_at": "2019-11-04T17:38:22Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.0.0-preview.6` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.0.0-preview.6)\n",
      "created_at": "2019-11-21T22:35:08Z",
      "updated_at": "2019-11-21T22:35:08Z"
    }
  ],
  "created_at": "2019-08-10T05:38:55Z",
  "number": 10340,
  "state": "closed",
  "title": "Added cross-platform Get-Clipboard and Set-Clipboard",
  "updated_at": "2019-11-21T22:35:08Z"
}