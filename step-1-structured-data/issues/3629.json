{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3629",
  "author": "mklement0",
  "body": "`Write-Error` is used to signal a non-terminating error, yet `$?` (the execution-status automatic variable) isn't set to `$False` in the _caller's_ scope when it is called from an (advanced) function.\r\n\r\nBy contrast, if you use `$PSCmdlet.WriteError` from an advanced function, it is.\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\nfunction foo { Write-Error 'oh no' }; foo; $?\r\nfunction foo2 { [cmdletbinding()] param() $PSCmdlet.WriteError((New-Object System.Management.Automation.ErrorRecord \"oh no\", $null, 'NotSpecified', $null)) }; foo2; $?\r\n```\r\n\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```powershell\r\n# (error details omitted)\r\n$False\r\n# (error details omitted)\r\n$False\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n```powershell\r\n# (error details omitted)\r\n$True\r\n# (error details omitted)\r\n$False\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n```powershell\r\nPowerShell Core v6.0.0-alpha (v6.0.0-alpha.18) on Darwin Kernel Version 16.5.0: Fri Mar  3 16:52:33 PST 2017; root:xnu-3789.51.2~3/RELEASE_X86_64\r\n```\r\n",
  "closed_at": null,
  "comments": [],
  "created_at": "2017-04-23T14:20:42Z",
  "number": 3629,
  "state": "open",
  "title": "Write-Error in a function doesn't set automatic success variable $? to $False (doesn't set the execution status to indicate a non-terminating error) in the caller's scope",
  "updated_at": "2020-03-07T18:16:52Z"
}