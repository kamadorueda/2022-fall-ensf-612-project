{
  "_url": "https://github.com/PowerShell/PowerShell/issues/17147",
  "author": "ExSport",
  "body": "### Prerequisites\r\n\r\n- [X] Write a descriptive title.\r\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- [X] Search the existing issues.\r\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\r\n\r\n### Steps to reproduce\r\n\r\nWhen querying more counters at once and one of them is [User Input Delay Per Session] counterset, it fails with breaking the perfmon functionality (corrupted/disabled PerfLib, etc...).\r\nIt happens in some specific combinations like [User Input Delay Per Session] and [Memory] or [System] countersets. In such combinations invoking Get-Counter will terminate powershell process or returns non-zero Status property for the CounterSamples.\r\n[User Input Delay Per Session] counterset works with .e.g. [SMB Server] counterset so not all are affected.\r\nWhen two different get-counter cmdlets are invoked ([User Input Delay Per Session] separately), all counters are returned without issues.\r\nTested on Windows 2019, Powershell 5.1 and 7.2.2, same behavior.\r\n\r\n### Expected behavior\r\nWhen querying array of counters in one \"dataset\" and [User Input Delay per Session] is used, valid data should be returned without needing to read [User Input Delay per Session] separately.\r\nSo this should work:\r\n```console\r\n(Get-Counter -Counter @('\\smb server\\receive bytes/sec','\\memory\\page faults/sec','\\user input delay per session(max)\\max input delay') -SampleInterval 1 -MaxSamples 1).CounterSamples|Select InstanceName,Path,CookedValue,Status\r\n```\r\n\r\n### Actual behavior\r\nWhen querying array of counters in one dataset and [User Input Delay per Session] is used, it starts to return invalid data or terminates powershell completely.\r\nIssuing command:\r\n```console\r\n(Get-Counter -Counter @('\\smb server\\receive bytes/sec','\\memory\\page faults/sec','\\user input delay per session(max)\\max input delay') -SampleInterval 1 -MaxSamples 1).CounterSamples|Select InstanceName,Path,CookedValue,Status\r\n```\r\nReturns error and non-zero STATUS for MEMORY Counters:\r\n```console\r\nGet-Counter: The data in one of the performance counter samples is not valid. View the Status property for each PerformanceCounterSample object to make sure it contains valid data.\r\nInstanceName Path                                                         CookedValue     Status\r\n------------ ----                                                         -----------     ------\r\n             \\\\ov2p2194\\smb server\\receive bytes/sec                                0          0\r\n             \\\\ov2p2194\\memory\\page faults/sec                                      0 3221228472\r\nmax          \\\\ov2p2194\\user input delay per session(max)\\max input delay           0          0\r\n```\r\n\r\n### Error details\r\n\r\n```console\r\nException             :\r\n    Type    : System.Exception\r\n    Message : The data in one of the performance counter samples is not valid. View the Status property for each\r\nPerformanceCounterSample object to make sure it contains valid data.\r\n    HResult : -2146233088\r\nCategoryInfo          : InvalidResult: (:) [Get-Counter], Exception\r\nFullyQualifiedErrorId : CounterApiError,Microsoft.PowerShell.Commands.GetCounterCommand\r\nInvocationInfo        :\r\n    MyCommand        : Get-Counter\r\n    ScriptLineNumber : 1\r\n    OffsetInLine     : 2\r\n    HistoryId        : 36\r\n    Line             : (Get-Counter -Counter @('\\smb server\\receive bytes/sec','\\memory\\page faults/sec','\\user input\r\ndelay per session(max)\\max input delay') -SampleInterval 1 -MaxSamples 1).CounterSamples|Select\r\nInstanceName,Path,CookedValue,Status\r\n    PositionMessage  : At line:1 char:2\r\n                       + (Get-Counter -Counter @('\\smb server\\receive bytes/sec','\\memory\\page \u2026\r\n                       +  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    InvocationName   : Get-Counter\r\n    CommandOrigin    : Internal\r\nScriptStackTrace      : at <ScriptBlock>, <No file>: line 1\r\nPipelineIterationInfo :\r\n```\r\n\r\n\r\n### Environment data\r\n\r\n```powershell\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.2\r\nPSEdition                      Core\r\nGitCommitId                    7.2.2\r\nOS                             Microsoft Windows 10.0.17763\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\n\r\n### Visuals\r\n\r\n![Screenshot 2022-04-13 164222](https://user-images.githubusercontent.com/1260408/163207704-c9c256ba-1400-4339-a955-c160c149704d.png)\r\n\r\nWhen [user input delay per session] removed, returned values are OK:\r\n![Screenshot 2022-04-13 165212](https://user-images.githubusercontent.com/1260408/163208604-9d983bae-a758-49f5-b5b9-1db91b58a5c4.png)\r\n\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "ExSport",
      "author_association": "NONE",
      "body": "Any update please? E.g. you can reproduce it like me on more, different systems?\r\nThank you",
      "created_at": "2022-04-22T13:24:25Z",
      "updated_at": "2022-04-22T13:24:25Z"
    },
    {
      "author": "ExSport",
      "author_association": "NONE",
      "body": "Seems no interest to this issue from MS side? Thanks for some update.",
      "created_at": "2022-05-18T07:59:28Z",
      "updated_at": "2022-05-18T07:59:28Z"
    },
    {
      "author": "ExSport",
      "author_association": "NONE",
      "body": "Another source of the same issue when called via C#:\r\nhttps://stackoverflow.com/questions/66333570/performancecounter-user-input-delay-per-session-disappears\n\n<blockquote><img src=\"https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded\" width=\"48\" align=\"right\"><div>Stack Overflow</div><div><strong><a href=\"https://stackoverflow.com/questions/66333570/performancecounter-user-input-delay-per-session-disappears\">PerformanceCounter \"User Input Delay per Session\" disappears</a></strong></div><div>Win2019 Server offers new performance counters that can help with performance issues on hosts with RDS (=Remote Desktop Services).\n\nThey have to be activated with a registry key before usage:\nhttps://</div></blockquote>",
      "created_at": "2022-06-01T09:17:44Z",
      "updated_at": "2022-06-01T09:17:46Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I'm not able to repro this with 7.3, there was a [change to how the cmdlet interops with the perf API](https://github.com/PowerShell/PowerShell/pull/17779), can you see if this repros for you with 7.3?",
      "created_at": "2022-10-04T17:11:20Z",
      "updated_at": "2022-10-04T17:11:20Z"
    },
    {
      "author": "ExSport",
      "author_association": "NONE",
      "body": "@SteveL-MSFT Hello Steve\r\nUnfortunately not fixed (OS Win 2019, Posh 7.3.0-preview8):\r\n![image](https://user-images.githubusercontent.com/1260408/194847671-545e4bf2-2bbb-41f9-a178-b2f6701e5ced.png)\r\n",
      "created_at": "2022-10-10T10:39:18Z",
      "updated_at": "2022-10-10T10:39:18Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@ExSport Please share `Get-Error` output.",
      "created_at": "2022-10-10T11:49:39Z",
      "updated_at": "2022-10-10T11:49:39Z"
    },
    {
      "author": "ExSport",
      "author_association": "NONE",
      "body": "Get-Error output:\r\n```\r\nException             :\r\n    Type    : System.Exception\r\n    Message : The data in one of the performance counter samples is not valid. View the Status property for each\r\nPerformanceCounterSample object to make sure it contains valid data.\r\n    HResult : -2146233088\r\nCategoryInfo          : InvalidResult: (:) [Get-Counter], Exception\r\nFullyQualifiedErrorId : CounterApiError,Microsoft.PowerShell.Commands.GetCounterCommand\r\nInvocationInfo        :\r\n    MyCommand        : Get-Counter\r\n    ScriptLineNumber : 1\r\n    OffsetInLine     : 2\r\n    HistoryId        : 4\r\n    Line             : (Get-Counter -Counter @('\\smb server\\receive bytes/sec','\\memory\\page faults/sec','\\user input\r\ndelay per session(max)\\max input delay') -SampleInterval 1 -MaxSamples 1).CounterSamples|Select\r\nInstanceName,Path,CookedValue,Status\r\n    PositionMessage  : At line:1 char:2\r\n                       + (Get-Counter -Counter @('\\smb server\\receive bytes/sec','\\memory\\page \u2026\r\n                       +  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    InvocationName   : Get-Counter\r\n    CommandOrigin    : Internal\r\nScriptStackTrace      : at <ScriptBlock>, <No file>: line 1\r\nPipelineIterationInfo :\r\n```",
      "created_at": "2022-10-10T12:03:08Z",
      "updated_at": "2022-10-10T12:03:08Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I spent some time debugging this.  The actual error being returned as part of the PDH sample is PDH_CSTATUS_NO_OBJECT.  I can easily repro this with:\r\n\r\n```powershell\r\n(Get-Counter -Counter @('\\memory\\page faults/sec', '\\user input delay per session(max)\\max input delay') -SampleInterval 1 -MaxSamples 1).CounterSamples\r\n```\r\n\r\nSame with PS7 and 5.1.  So this is not a regression.  The interesting thing is if I use perfmon with the same two counters, I see the same problem.  No data is returned for `page faults/sec`.  However, if I ONLY have that counter (either the cmdlet or in perfmon), it shows data.  But in perfmon if I add back the second counter, it then doesn't show any data for the first one.  Based on the results of perfmon (and the cmdlet is consistent here), it seems that the problem is with the counter being used with another counter.",
      "created_at": "2022-10-10T23:56:20Z",
      "updated_at": "2022-10-10T23:56:20Z"
    },
    {
      "author": "ExSport",
      "author_association": "NONE",
      "body": "@SteveL-MSFT You can combine more counters without issues but when multiple ones are used, you can't use \"new\" [user input delay] one which will affect other ones in most cases (as described in the first post):\r\nhttps://learn.microsoft.com/en-us/windows-server/remote/remote-desktop-services/rds-rdsh-performance-counters\r\nWithout this one, you are able to read more counters at once or your are able to read this one alone or with e.g. SMB counters but not with other ones like memory ones, etc.\r\nIt is possible to read them \"together\" in separate threads via RunSpace/PSJobs so you can read them almost at once, without any crashes but they can't be queried in one request.\r\nIt is not a flaw in PowerShell cmdlet only (all versions) but in perfmon API or the way how PowerShell/.net/C#/... queries these counters.\n\n<blockquote><img src=\"https://learn.microsoft.com/en-us/media/logos/logo-ms-social.png\" width=\"48\" align=\"right\"><div><strong><a href=\"https://learn.microsoft.com/en-us/windows-server/remote/remote-desktop-services/rds-rdsh-performance-counters\">Use performance counters to diagnose application responsiveness problems on Remote Desktop Session Hosts</a></strong></div><div>Is your app running slow on RDS? Learn about performance counters you can use to diagnose app performance problems on RDSH</div></blockquote>",
      "created_at": "2022-10-11T06:34:40Z",
      "updated_at": "2022-10-11T06:34:43Z"
    }
  ],
  "created_at": "2022-04-13T14:44:19Z",
  "labels": [
    "WG-Cmdlets",
    "Needs-Triage"
  ],
  "number": 17147,
  "state": "open",
  "title": "Get-Counter corrupts/disables PerfLib or returns invalid data",
  "updated_at": "2022-10-11T06:34:43Z"
}