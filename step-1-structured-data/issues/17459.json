{
  "_url": "https://github.com/PowerShell/PowerShell/issues/17459",
  "author": "jhoneill",
  "body": "### Prerequisites\r\n\r\n- [X] Write a descriptive title.\r\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- [X] Search the existing issues.\r\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\r\n\r\n### Steps to reproduce\r\n\r\nIn 7.2.4 and 7.3.0-Preview-4 I see the following for `get-help new-variable -Parameter scope`\r\n```\r\n-Scope <System.String>\r\n    Specifies the scope of the new variable. The acceptable values for this parameter are:\r\n\r\n    - `Global` - Variables created in the global scope are accessible everywhere in a PowerShell process. \r\n    - `Local` - The local scope refers to the current scope, this can be any scope depending on the context. \r\n    - `Script` - Variables created in the script scope are accessible only within the script file or module they are created in. \r\n    - `Private` - Variables created in the private scope cannot be accessed outside the scope they exist  in. \r\n```\r\n(Although the markdown bullet points are not processed correctly) \r\nAccording to this private **IS** a scope.  \r\n\r\nHowever, creating a variable with `-Scope Private` is not the same as `-Visibility Private` or `-Option Private`, and variables **can** be seen in other scopes \r\n```\r\nPS>  new-variable -Name one -Value \"111\" -Scope Private -Force\r\nPS>  $one\r\n111\r\nPS>  & {$one}  # NOT private\r\n111 \r\n\r\nPS>  new-variable -Name two -Value \"222\" -Visibility Private\r\nPS>  $two  # Private from ourselves \r\nPermissionDenied: Cannot access the variable '$two' because it is a private variable.\r\nPS>  & {$two} # but visible in the child scope\r\n222\r\n\r\nPS>  new-variable -Name three -Value \"333\" -Option Private\r\nPS>  $three\r\n333\r\nPS>  & {$three}   # Not visible in the child scope\r\n\r\nPS>\r\n```\r\n\r\nThis behaviour mirrors what `about_scope` says \r\n```\r\n  [!NOTE] PRIVATE is not a scope. It is an option that changes the  visibility of an item outside of the scope where the item is defined.\r\n```\r\n\r\n`Private` being an _option_, not a _scope_ and distinct from the _visibility_ setting, appears to be correct and the cmdlet help appears to be wrong.  \r\n\r\n\r\n### Expected behavior\r\n\r\n```console\r\nCmdlet help agrees with about and matches behaviour\r\n```\r\n\r\n\r\n### Actual behavior\r\n\r\n```console\r\nIt doesn't\r\n```\r\n\r\n\r\n### Error details\r\n\r\n```console\r\nn/a\r\n```\r\n\r\n\r\n### Environment data\r\n\r\n```powershell\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.3.0-preview.4\r\nPSEdition                      Core\r\nGitCommitId                    7.3.0-preview.4\r\nOS                             Microsoft Windows 10.0.22000\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u00d4\u00c7\u00aa}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\n\r\n### Visuals\r\n\r\n_No response_",
  "closed_at": null,
  "comments": [
    {
      "author": "StevenBucher98",
      "author_association": "COLLABORATOR",
      "body": "Thanks for spotting this @jhoneill! \r\n\r\n@sdwheeler `about_scope` is the better source of truth correct? and also where would we make this change to the `New-Variable` documentation?",
      "created_at": "2022-06-06T16:54:40Z",
      "updated_at": "2022-06-06T16:54:40Z"
    },
    {
      "author": "sdwheeler",
      "author_association": "COLLABORATOR",
      "body": "@jhoneill or @StevenBucher98 can one of you file an issue in the Docs repo?",
      "created_at": "2022-06-06T17:10:12Z",
      "updated_at": "2022-06-06T17:10:12Z"
    },
    {
      "author": "sdwheeler",
      "author_association": "COLLABORATOR",
      "body": "Note the behavior:\r\n\r\n```powershell\r\nPS> Get-Variable one, two, three | fl *\r\n\r\nName        : one\r\nDescription :\r\nValue       : 111\r\nVisibility  : Public\r\nModule      :\r\nModuleName  :\r\nOptions     : None\r\nAttributes  : {}\r\n\r\nGet-Variable: Cannot access the variable '$two' because it is a private variable.\r\nName        : three\r\nDescription :\r\nValue       : 333\r\nVisibility  : Public\r\nModule      :\r\nModuleName  :\r\nOptions     : Private\r\nAttributes  : {}\r\n\r\nPA> & {Get-Variable two | fl *}\r\n\r\nName        : two\r\nDescription :\r\nValue       : 222\r\nVisibility  : Private\r\nModule      :\r\nModuleName  :\r\nOptions     : None\r\nAttributes  : {}\r\n```",
      "created_at": "2022-06-06T17:31:06Z",
      "updated_at": "2022-06-06T17:36:38Z"
    },
    {
      "author": "sdwheeler",
      "author_association": "COLLABORATOR",
      "body": "So it seems that running `New-Variable varname -Scope Private` does nothing. Is this intentional code behavior?",
      "created_at": "2022-06-06T18:09:00Z",
      "updated_at": "2022-06-06T18:09:00Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "I don't think so. Interestingly creating a variable with an explicit scope modifier of `private` without the Set-Variable cmdlet behaves in a similar way to using `-Option Private` and not `-Scope Private` nor `-Visibility Private`.\r\n\r\n```powershell\r\n> $private:thing = 1\r\n> & { $thing }\r\n\r\n> $thing\r\n1\r\n> & { Get-Variable thing -Scope 1 }\r\n\r\nName                           Value\r\n----                           -----\r\nthing                          1\r\n```\r\n\r\nIn other words, it's private to the specific scope that created it, and normal variable discovery can't find it. But if you target the correct scope value explicitly, you can find it from any other scope.\r\n\r\nSo depending on which `Private` option you pick, it has a completely different meaning. I think it might be worth having the Language WG discuss this one and what the intended behaviour for each of these \"Private\" things is. In my opinion, there seems to be some design confusion here that needs straightened out.",
      "created_at": "2022-06-06T18:37:04Z",
      "updated_at": "2022-06-06T18:41:07Z"
    },
    {
      "author": "StevenBucher98",
      "author_association": "COLLABORATOR",
      "body": "Opened issue in Docs: https://github.com/MicrosoftDocs/PowerShell-Docs/issues/8908 ",
      "created_at": "2022-06-06T22:00:23Z",
      "updated_at": "2022-06-06T22:00:23Z"
    },
    {
      "author": "StevenBucher98",
      "author_association": "COLLABORATOR",
      "body": "> In other words, it's private to the specific scope that created it, and normal variable discovery can't find it. But if you target the correct scope value explicitly, you can find it from any other scope.\r\n\r\nSo would it make more sense to clarify that `Private` is limited its in discovery? Within the `Get-Help New-Variable` documentation. I'd imagine changing the name from Private to something else would not be recommended \ud83d\ude04  i.e somethink like:\r\n`    - Private - Variables created in the private scope can only be accessed if specifically targetted in different scopes and cannot normally be accessed outside the scope it was created.`\r\n\r\n\r\n",
      "created_at": "2022-06-06T22:15:01Z",
      "updated_at": "2022-06-06T22:15:01Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "There's still confusion between the Private option on Set-Variable, which behaves that way to the private scope itself, which is (currently) a valid option on New-Variable which seemingly does nothing. Despite `$private:` being a valid scope qualifier for normal variables which apparently sets the Private _option_ but does nothing in regards to scope.\r\n\r\nAnd then the Private -Visibility option which does something else entirely. It's all a bit of a tangled web here.",
      "created_at": "2022-06-06T22:18:52Z",
      "updated_at": "2022-06-06T22:18:52Z"
    },
    {
      "author": "jhoneill",
      "author_association": "NONE",
      "body": "> There's still confusion between the Private option on Set-Variable, which behaves that way to the private scope itself, which is (currently) a valid option on New-Variable which seemingly does nothing.\r\n\r\n\r\nAIUI - and what `about_scope`  seems to say  re private is  - although `$private:`  looks like a scope qualifier, it isn't..    `$Anything:Something`  seems to treat \"anything\" as a PS Drive _except for the special cases_ `Global`, `Script`, `Local` and `Private`. `$C:SomeName` gets the contents of a file with no extension in the current directory of C:  - if one exists. `$0:someName` returns nothing unless you create a drive \"0\" and the file exists in the current directory - it can't be used to access scope 0, 1 , 2... that needs to go through `*-Variable` .  Of the four special cases 3 are scopes and one applies a label. I guess it is a bit like `$env:` in some ways that's like a scope, but really it's a drive. \r\n\r\nAnd the \"Seemingly doing nothing\" is plain weird. \r\n\r\n```\r\n>  new-variable -Name one -Value \"222\" -scope Two\r\nNew-Variable: Cannot process argument because the value of parameter \"Scope\" is not valid. Valid values are \"Global\", \"Local\", or \"Script\",\r\n```\r\n\r\n`New-Variable` _accepts_ `private` in the scope parameter, but if you enter something random, it gives a list of valid scopes, which excludes `private`\r\n\r\n> And then the Private -Visibility option which does something else entirely. It's all a bit of a tangled web here.\r\n\r\nIndeed it is :-) \r\n",
      "created_at": "2022-06-07T14:32:21Z",
      "updated_at": "2022-06-07T14:32:21Z"
    },
    {
      "author": "JamesWTruher",
      "author_association": "MEMBER",
      "body": "@PowerShell/wg-powershell-engine \r\nwe definitely agree that the behaviors could be more completely described, and we believe that there may a couple of issues discovered during that process. Currently, we think the proper approach is to make sure the documentation is correct and then decide what steps we should take with regard to behavior.",
      "created_at": "2022-09-19T21:17:03Z",
      "updated_at": "2022-09-19T21:17:03Z"
    },
    {
      "author": "sdwheeler",
      "author_association": "COLLABORATOR",
      "body": "The docs were updated in https://github.com/MicrosoftDocs/PowerShell-Docs/pull/8926. Let me know what else needs to change in the docs.",
      "created_at": "2022-09-19T21:42:41Z",
      "updated_at": "2022-09-19T21:42:41Z"
    }
  ],
  "created_at": "2022-05-30T13:21:37Z",
  "labels": [
    "WG-Engine",
    "WG-Language",
    "Needs-Triage"
  ],
  "number": 17459,
  "state": "open",
  "title": "Documentation disagreement. Scopes. ",
  "updated_at": "2022-09-19T21:42:41Z"
}