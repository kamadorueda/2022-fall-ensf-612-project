{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11643",
  "author": "mikeTWC1984",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nThis PR replaces cert provider (windows only) with X509Store class to resolve certificate by name/thumbprint on CmsUtils.\r\n\r\n### PR Work items:\r\n- [x] ResolveFromSubjectName and ResolveFromThumbprint - remove cert: provider call and merge into single method ( both lookups can utilize X509Certificate2Collection.Find )\r\n- [x] Remove GetCertEKU (that uses native calls). Use X509Certificate2 Extensions property instead in CertHasOId method.\r\n- [x] LocalMachine/My store - Windows only\r\n- [x] replace `List<509Certificate2>`  with X509Certificate2Collection on related methods.\r\n- [x] Update tests\r\n- [x] test on Mac\r\n- [x] add wildcard for subjectname lookup\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [ ] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [x] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2020-02-06T23:38:18Z",
  "comments": [
    {
      "author": "msftclas",
      "author_association": "NONE",
      "body": "[![CLA assistant check](https://cla.opensource.microsoft.com/pull/badge/signed)](https://cla.opensource.microsoft.com/PowerShell/PowerShell?pullRequest=11643) <br/>All CLA requirements met.",
      "created_at": "2020-01-21T17:37:12Z",
      "updated_at": "2020-01-21T17:42:31Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@mikeTWC1984 We should export the cmdlets on Unix-s:\r\n- https://github.com/PowerShell/PowerShell/blob/bf85f3fbe10fbf09a23d5dff08901e56af99054d/src/Modules/Unix/Microsoft.PowerShell.Security/Microsoft.PowerShell.Security.psd1#L10\r\n- https://github.com/PowerShell/PowerShell/blob/master/test/powershell/engine/Basic/DefaultCommands.Tests.ps1\r\n\r\nAlso please review tests https://github.com/PowerShell/PowerShell/tree/master/test/powershell/Modules/Microsoft.PowerShell.Security\n\n<blockquote><img src=\"https://repository-images.githubusercontent.com/49609581/96590180-07d7-11ea-89b1-2f719dc4bb9c\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicon.ico\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/PowerShell/PowerShell\">PowerShell/PowerShell</a></strong></div><div>PowerShell for every system! Contribute to PowerShell/PowerShell development by creating an account on GitHub.</div></blockquote>\n<blockquote><img src=\"https://repository-images.githubusercontent.com/49609581/96590180-07d7-11ea-89b1-2f719dc4bb9c\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicon.ico\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/PowerShell/PowerShell\">PowerShell/PowerShell</a></strong></div><div>PowerShell for every system! Contribute to PowerShell/PowerShell development by creating an account on GitHub.</div></blockquote>",
      "created_at": "2020-01-22T03:49:40Z",
      "updated_at": "2020-01-22T03:49:43Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I added WIP until the PR is ready to review.",
      "created_at": "2020-01-23T17:13:18Z",
      "updated_at": "2020-01-23T17:13:18Z"
    },
    {
      "author": "mikeTWC1984",
      "author_association": "CONTRIBUTOR",
      "body": "OK. It's pretty much ready for review, but somehow Powershell-CI pester test is failing. I ran 3 tests today, all failed for linux, 2 for Mac and 1 for Windows. I also tried Start-PSPester locally  for my branch and Powershell's master and got ~30 errors. A the moment it's not quite clear what's wrong.  . Probably some temp issue, will keep experimenting. The build itself goes through, CMS commands seem to work, but I haven't done thorough testing yet. ",
      "created_at": "2020-01-23T20:53:10Z",
      "updated_at": "2020-01-23T20:53:10Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@mikeTWC1984 You should enable the cmdlets in DefaultCommands.Tests.ps1 too (See link above).",
      "created_at": "2020-01-24T05:16:19Z",
      "updated_at": "2020-01-24T05:16:19Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "This PR does not appear to conflict with #11590",
      "created_at": "2020-01-25T04:19:06Z",
      "updated_at": "2020-01-25T04:19:06Z"
    },
    {
      "author": "mikeTWC1984",
      "author_association": "CONTRIBUTOR",
      "body": "OK, this is pretty much done, besides test on MacOS fails. Is there any extra steps to include cmdlets on Mac? All these things seem to work on Mac  machines (cert gen, accessing cert store, cms encryption)",
      "created_at": "2020-02-02T01:39:42Z",
      "updated_at": "2020-02-02T01:40:25Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@mikeTWC1984 I see only one test failed on Mac. You could execute the test manually step by step to get understanding why it fail.",
      "created_at": "2020-02-02T08:13:13Z",
      "updated_at": "2020-02-02T08:13:13Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@mikeTWC1984 I'll schedule the security review once the test are passing.  The security review will happen offline.",
      "created_at": "2020-02-03T17:52:11Z",
      "updated_at": "2020-02-03T17:52:11Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@mikeTWC1984 Please always use the standard PR template.  I'm going to update your PR description with the standard template.",
      "created_at": "2020-02-03T20:11:01Z",
      "updated_at": "2020-02-03T20:11:01Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "Please file a doc issue in https://github.com/MicrosoftDocs/PowerShell-Docs/issues/new/choose to document the new behavior\n\n<blockquote><img src=\"https://github.githubassets.com/images/modules/open_graph/github-logo.png\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicon.ico\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com\">Build software better, together</a></strong></div><div>GitHub is where people build software. More than 40 million people use GitHub to discover, fork, and contribute to over 100 million projects.</div></blockquote>",
      "created_at": "2020-02-03T20:14:31Z",
      "updated_at": "2020-02-03T20:14:33Z"
    },
    {
      "author": "mikeTWC1984",
      "author_association": "CONTRIBUTOR",
      "body": "OK, tests finally pass on Mac. Turns out certs got added to the store automatically during creation (X509Store.add actually doesn't work ) . I'll work on the Doc today or tomorrow.",
      "created_at": "2020-02-04T05:45:16Z",
      "updated_at": "2020-02-04T05:45:16Z"
    },
    {
      "author": "mikeTWC1984",
      "author_association": "CONTRIBUTOR",
      "body": "Ok, applied all the latest changes. I was back and forth between using CertificateCollection.Find and   foreach loop to match SubjectName, and I'm finally sticking with foreach, so it's the same approach as original version had. I realized find will always do \"contains\" match, but I guess mostly user would need exact match.",
      "created_at": "2020-02-04T21:32:37Z",
      "updated_at": "2020-02-04T21:34:09Z"
    },
    {
      "author": "mikeTWC1984",
      "author_association": "CONTRIBUTOR",
      "body": "@TravisEz13  I think this is ready for security review. I also filed Documentation issue.",
      "created_at": "2020-02-06T16:26:33Z",
      "updated_at": "2020-02-06T16:26:33Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@mikeTWC1984 Yes, I've already schedule the review.  The reviews are Confidential and we have to decide how to communicate the results after the review.",
      "created_at": "2020-02-06T21:03:47Z",
      "updated_at": "2020-02-06T21:03:47Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@mikeTWC1984 Security review summary: we don't think the security footing of the cmdlet has changed.",
      "created_at": "2020-02-06T23:37:00Z",
      "updated_at": "2020-02-06T23:37:00Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@mikeTWC1984 Thanks for your contribution!",
      "created_at": "2020-02-07T02:58:13Z",
      "updated_at": "2020-02-07T02:58:13Z"
    },
    {
      "author": "mikeTWC1984",
      "author_association": "CONTRIBUTOR",
      "body": "Cool, thanks all. There are few enhancements we can add to those commands, I'll probably submit an issue or PR sometime soon. I guess it's also the time to update documentation, will work on that.",
      "created_at": "2020-02-07T16:00:11Z",
      "updated_at": "2020-02-07T16:00:11Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@mikeTWC1984 Open new issue(s) if there is a field for discussion.",
      "created_at": "2020-02-07T16:15:07Z",
      "updated_at": "2020-02-07T16:15:07Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.1.0-preview.1` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.1.0-preview.1)\n",
      "created_at": "2020-03-26T17:47:27Z",
      "updated_at": "2020-03-26T17:47:27Z"
    }
  ],
  "created_at": "2020-01-21T17:36:58Z",
  "number": 11643,
  "state": "closed",
  "title": "Update `CmsCommands` to use Store vs cert provider",
  "updated_at": "2020-03-26T17:47:27Z"
}