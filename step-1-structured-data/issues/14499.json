{
  "_url": "https://github.com/PowerShell/PowerShell/issues/14499",
  "author": "mklement0",
  "body": "\r\nNote that regular .NET attribute types such as `[System.ComponentModel.ReadOnlyAttribute]` are _not_ affected (that is,  `[System.ComponentModel.ReadOnly($true)]` works as shorthand for `    [System.ComponentModel.ReadOnlyAttribute($true)]`)\r\n\r\n\r\n\r\n## Steps to reproduce\r\n\r\n```powershell\r\nclass MarkedAttribute : System.Attribute { }\r\n\r\n# Note: iex (Invoke-Expression) is required, because [MarkedAttribute] must already be defined\r\n#           by the time [Person1] and [Person2] are parsed.\r\n@'\r\n  class Person1 {\r\n    [MarkedAttribute()]\r\n    [string]$Name\r\n  }\r\n'@, @'\r\n  class Person2 {\r\n    [Marked()]  # This should be equivalent to [MarkedAttribute()], but currently isn't.\r\n    [string]$Name\r\n  }\r\n'@ | % { { iex $_ } | Should -Not -Throw }\r\n```\r\n\r\n## Expected behavior\r\n\r\nBoth tests should succeed.\r\n\r\n## Actual behavior\r\n\r\nThe second test fails, because `[Marked]` is unexpectedly not recognized as shorthand for `[MarkedAttribute]`:\r\n\r\n```none\r\n... Cannot find the type for custom attribute 'Marked' ...\r\n```\r\n\r\n## Environment data\r\n\r\n```none\r\nPowerShell Core 7.2.0-preview.2\r\n```\r\n",
  "closed_at": null,
  "comments": [],
  "created_at": "2020-12-26T16:34:21Z",
  "number": 14499,
  "state": "open",
  "title": "Attributes implemented as PS custom classes are only recognized with the \"Attributes\" suffix",
  "updated_at": "2020-12-27T18:04:32Z"
}