{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7369",
  "author": "codeHorse87",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\n- Windows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nIf it is a bug report:\r\n- make sure you are able to repro it on the latest released version. \r\nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n- Fill out the following repro template:\r\n\r\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\r\n-->\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\n1. perform (Package Management) commands Get-PackageSource or Get-PackageProvider on PS Core \r\n2. perform the same commands on Windows PS v5.1\r\n\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```\r\nI'd expect both PS implementations using the same Package Management as being implemented in .NET, including access to the same PackageSource's or PackageProvider's. Which means in a powershell script I have to determine in the script of it's going to be executed in PS Core or the Windows PS. \r\nHaving the OS abstraction with PS Core having the abstraction of the execution environment to use the package management would make software management by PS much more effective.\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n```\r\nPS Core only provides access to the Package Provider PowerShellGet but provides not access to the msi, msu, or Programs package providers. As well extension on PackageProviders, or Sources are not taken into account in one or the other environment.\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.2\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.2\r\nOS                             Microsoft Windows 10.0.17134\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "PowerShell Core seems to be at the beginning of the road.",
      "created_at": "2018-07-26T11:03:09Z",
      "updated_at": "2018-07-26T11:03:09Z"
    }
  ],
  "created_at": "2018-07-26T09:36:42Z",
  "labels": [
    "Issue-Discussion"
  ],
  "number": 7369,
  "state": "open",
  "title": "PackageProvider system not in sync between Windows PS and PS Core",
  "updated_at": "2018-07-26T11:03:09Z"
}