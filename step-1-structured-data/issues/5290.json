{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5290",
  "author": "Jaykul",
  "body": "When a **File** exists, and you try to create a **Directory** using `New-Item -Force`, it neither errors nor creates the directory.  Note that the opposite works: if a _Directory_ exists and you try to create a _File_, it errors -- _as it should_.\r\n\r\n\r\nSteps to reproduce\r\n------------------\r\n```powershell\r\nNew-Item Folder -Type Directory -Force\r\nNew-Item Folder -Type File -Force\r\nNew-Item File -Type File -Force\r\nNew-Item File -Type Directory -Force\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\nThere should be two errors. Ideally, they should indicate that the item already exist but is the wrong type\r\n\r\n```none\r\nNew-Item : Cannot create a File with the same name as a Folder 'C:\\Users\\You\\Folder'\r\nNew-Item : Cannot create a Folder with the same name as a File 'C:\\Users\\You\\File'\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\nThere will only be an error for `-Type File` but not for `-Type Directory`, and the error won't be helpful:\r\n\r\n```none\r\nNew-Item : Access to the path 'C:\\Users\\You\\Folder' is denied.\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\nThis has been the behavior \"forever\" and still is, at least in beta 8:\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.0-beta.8\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.0-beta.8\r\nOS                             Microsoft Windows 10.0.17025\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```",
  "closed_at": null,
  "comments": [
    {
      "author": "kvprasoon",
      "author_association": "CONTRIBUTOR",
      "body": "I see something similar but not exactly the same in 6.1.0 preview.\r\nIt works with `-Type` and fails with out `-Type` for `Directory`\r\n\r\n![image](https://user-images.githubusercontent.com/12897753/38571194-56ec415c-3cdf-11e8-93d9-70b00c4be1bd.png)\r\n",
      "created_at": "2018-04-10T16:51:04Z",
      "updated_at": "2018-04-10T16:53:59Z"
    },
    {
      "author": "zhenggu",
      "author_association": "CONTRIBUTOR",
      "body": "Is there any API of dotnet that we can get the type (such as file, directory, softlink, hardlink, etc...) of file? If not, I think we can only use Directory.Exists and File.Exists to check this.",
      "created_at": "2018-09-01T14:49:00Z",
      "updated_at": "2018-09-01T14:51:42Z"
    },
    {
      "author": "Jaykul",
      "author_association": "CONTRIBUTOR",
      "body": "@kvprasoon it \"works\" because by default it creates a _File_ and the bug exists only when trying to create a _Directory_\r\n\r\n@zhenggu yes, `Directory.Exists(path)` and `File.Exists(path)` are really the only tools, as far as I know. That should be that's needed to fix the problem, anyway, \ud83d\ude09",
      "created_at": "2018-09-05T04:39:43Z",
      "updated_at": "2018-09-05T04:39:43Z"
    }
  ],
  "created_at": "2017-11-01T01:41:52Z",
  "number": 5290,
  "state": "open",
  "title": "New-Item -Type Directory -Force # doesn't error when it should",
  "updated_at": "2021-12-03T19:01:36Z"
}