{
  "_url": "https://github.com/PowerShell/PowerShell/issues/1346",
  "author": "daxian-dbw",
  "body": "## Steps to reproduce\n\nImport-Module AppxProvider\nImport-Module CimCmdlets\nImport-Module Microsoft.PowerShell.ODataUtils\nImport-Module Microsoft.WSMan.Management\n## Expected behavior\n\nModules published for PowerShell core should be able to be imported\n## Actual behavior\n\nImporting those 4 modules from the published 'Modules' folder fails\n\n```\n> Import-Module AppxProvider\nImport-Module : The module to process 'Microsoft.Windows.Appx.PackageManager.Commands', listed in field\n'ModuleToProcess/RootModule' of module manifest 'C:\\windows\\system32\\WindowsPowerShell\\v1.0\\Modules\\Appx\\Appx.psd1'\nwas not processed because no valid module was found in any module directory.\nAt line:1 char:1\n+ Import-Module AppxProvider\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : ResourceUnavailable: (Appx:String) [Import-Module], PSInvalidOperationException\n    + FullyQualifiedErrorId : Modules_ModuleFileNotFound,Microsoft.PowerShell.Commands.ImportModuleCommand\n\n> Import-Module Microsoft.PowerShell.ODataUtils\nGet-WmiObject : The term 'Get-WmiObject' is not recognized as the name of a cmdlet, function, script file, or operable\nprogram. Check the spelling of the name, or if a path was included, verify that the path is correct and try again.\nAt C:\\users\\dongbow\\downloads\\ops\\Modules\\Microsoft.PowerShell.ODataUtils\\Microsoft.PowerShell.ODataUtils.psm1:5\nchar:27\n+ $ProcessorArchitecture = (Get-WmiObject -query \"Select Architecture f ...\n+                           ~~~~~~~~~~~~~\n    + CategoryInfo          : ObjectNotFound: (Get-WmiObject:String) [], CommandNotFoundException\n    + FullyQualifiedErrorId : CommandNotFoundException\n\n> Import-Module .\\Modules\\CimCmdlets\nImport-Module : Could not load file or assembly\n'C:\\Users\\dongbow\\Downloads\\ops\\Modules\\CimCmdlets\\Microsoft.Management.Infrastructure.CimCmdlets.dll' or one of its\ndependencies. The system cannot find the file specified.\nAt line:1 char:1\n+ Import-Module .\\Modules\\CimCmdlets\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : InvalidOperation: (:) [Import-Module], FileNotFoundException\n    + FullyQualifiedErrorId : FormatXmlUpdateException,Microsoft.PowerShell.Commands.ImportModuleCommand\n\n> Import-Module .\\Modules\\Microsoft.WSMan.Management\nImport-Module : The module to process 'Microsoft.WSMan.Management.dll', listed in field 'NestedModules' of module\nmanifest 'C:\\Users\\dongbow\\Downloads\\ops\\Modules\\Microsoft.WSMan.Management\\Microsoft.WSMan.Management.psd1' was not\nprocessed because no valid module was found in any module directory.\nAt line:1 char:1\n+ Import-Module .\\Modules\\Microsoft.WSMan.Management\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : ResourceUnavailable: (Microsoft.WSMan.Management:String) [Import-Module], PSInvalidOpera\n   tionException\n    + FullyQualifiedErrorId : Modules_ModuleFileNotFound,Microsoft.PowerShell.Commands.ImportModuleCommand\n```\n## Environment data\n\n<!-- provide the output of $PSVersionTable -->\n\n``` powershell\n> $PSVersionTable\nName                           Value\n----                           -----\nPSRemotingProtocolVersion      2.3\nCLRVersion\nSerializationVersion           1.1.0.1\nPSVersion                      5.1.10032.0\nBuildVersion                   3.0.0.0\nWSManStackVersion              3.0\nPSEdition                      Core\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\nGitCommitId                    v0.6.0\n```\n",
  "closed_at": "2016-07-28T05:51:57Z",
  "comments": [
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "- [ ] AppxProvider \n- [ ] Microsoft.PowerShell.ODataUtils \n- [x] CimCmdlets and Microsoft.WSMan.Management #1317 \n- Hey @raghushantha, is AppxProvider supposed to work in PowerShell Core? I don't find it in NanoServer.\n- ODataUtils is not compatible with PowerShell Core. It needs to be refactored and tested before assuming it works in PowerShell Core. Before that, it should only be published for Windows PowerShell.\n- CimCmdlet and WSMan.Management will be fixed by finishing #1317 \n",
      "created_at": "2016-07-13T00:16:03Z",
      "updated_at": "2016-08-17T07:46:42Z"
    },
    {
      "author": "raghushantha",
      "author_association": "MEMBER",
      "body": "@daxian-dbw [AppxProvider](https://github.com/PowerShell/PowerShell/blob/master/src/Modules/Shared/AppxProvider/AppxProvider.psm1) is supported only on Nano. So yes - this must work on CorePS-Nano.\n\n@farehar Can you validate that AppxProvider works on Nano? Also, we need to rebrand this to WSAProvider - since on Nano the package type is WSA\n",
      "created_at": "2016-07-13T17:08:39Z",
      "updated_at": "2016-07-13T17:08:39Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@raghushantha AppxProvider is not an in-box module for NanoServer. Is it an optional module that already work in Nano powershell?\nBTW, do your team own the ODataUtils module? It's not compatible with CoreCLR PS, and thus need to be refactored to work in CoreCLR PS or moved to Full PS only module folder.\n",
      "created_at": "2016-07-13T17:22:59Z",
      "updated_at": "2016-07-13T17:22:59Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "> AppxProvider is supported only on Nano\n\n@raghushantha Does this mean it's not supported for PowerShell (_FullCLR or CoreCLR_) on full windows? If that's the case, then we probably should not publish it along with PowerShell.\ncc @vors \n",
      "created_at": "2016-07-13T17:31:49Z",
      "updated_at": "2016-08-17T07:47:44Z"
    },
    {
      "author": "farehar",
      "author_association": "NONE",
      "body": "I tested wsaprovider on nano yesterday and it works fine. but you need to get it from powershell gallery.\n\nfind-packageprovider wsaprovider | install-packageprovider\n\nwe should remove the code from powershell repo code based. it is already available @ https://github.com/PowerShell/WSAProvider\n",
      "created_at": "2016-07-13T17:49:58Z",
      "updated_at": "2016-08-17T07:48:07Z"
    },
    {
      "author": "raghushantha",
      "author_association": "MEMBER",
      "body": "@daxian-dbw On Nano - (Appx)WSAProvider is not in-box, but can be obtained from PowerShellGallery.\n`find-packageprovider WSAProvider`\n\nThe code for WSAProvider is opensourced [here](https://github.com/PowerShell/WSAProvider)\nAnd the ship vehicle is PowerShellGallery.\n\nSo I will take out the [AppxProvider](https://github.com/PowerShell/PowerShell/tree/master/src/Modules/Shared/AppxProvider) code from PowerShell repi- does not make sense to ship with PowerShell Core \n\nTo answer your question - WSAProvider will be applicable on Nano only (Inbox PS OR PowerShell Core from repo) - i.e CoreCLR only\n",
      "created_at": "2016-07-13T17:50:10Z",
      "updated_at": "2016-08-17T07:48:58Z"
    },
    {
      "author": "raghushantha",
      "author_association": "MEMBER",
      "body": "@SteveL-MSFT @vors own ODataUtils..\n",
      "created_at": "2016-07-13T18:11:21Z",
      "updated_at": "2016-07-13T18:11:21Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "We need to talk about this and few other cases offline.\nWe have WSAProvider and ODataUtils as a separate modules on github. \nAnd we support upgrade from PSGallery.\n\nOn the other hand, we have a desire to build a full package that we can build out of windows from here.\nIt could be that keeping this code in the PS/PS repo and removing the redundent repos is the right approach. Could be vice verse. We should find what's the right approach and avoid duplication.\n",
      "created_at": "2016-07-13T18:14:45Z",
      "updated_at": "2016-07-13T18:14:45Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "All things, except OdataUtils already excluded via #1477. For the remaining module I created #1548\n",
      "created_at": "2016-07-28T05:51:57Z",
      "updated_at": "2016-07-28T05:51:57Z"
    }
  ],
  "created_at": "2016-07-13T00:03:40Z",
  "labels": [
    "Area-Maintainers-Build",
    "Area-PackageManagement"
  ],
  "number": 1346,
  "state": "closed",
  "title": "Some modules published for PowerShell core cannot be imported",
  "updated_at": "2016-08-17T07:48:58Z"
}