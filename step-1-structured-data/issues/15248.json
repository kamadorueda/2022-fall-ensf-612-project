{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15248",
  "author": "mklement0",
  "body": "## Steps to reproduce\r\n\r\n```powershell\r\n# Switch to a temporary directory.\r\nPush-Location -ea Stop ($tmpDir = (New-Item -Type Directory -Force (Join-Path Temp:/ $PID)).FullName)\r\n\r\ntry {\r\n\r\n  # Create two directories with one file each in them.\r\n  $null = New-Item -Type Directory -force foo1, foo2\r\n  $null = New-Item -force foo1\\t.txt, foo2\\t.txt\r\n\r\n  # Remove the first one with WITHOUT a trailing \"\\\"\r\n  { Remove-Item .\\foo1 -Recurse -ErrorAction Stop } | Should -Not -Throw\r\n\r\n  # Remove the second one with WITH a trailing \"\\\"\r\n  # This is also what you'd get with tab-completion.\r\n  { Remove-Item .\\foo2\\ -Recurse -ErrorAction Stop } | Should -Not -Throw\r\n\r\n} finally {\r\n  # Clean up.\r\n  Pop-Location; Remove-Item $tmpDir -Recurse\r\n}\r\n```\r\n\r\n## Expected behavior\r\n\r\nBoth tests should succeed: whether the target directory is specified with a trailing path separator or not should not make a difference.\r\n\r\n## Actual behavior\r\n\r\nOn Windows, removal fails when the target path ends in `\\`:\r\n\r\n```none\r\nCannot remove item C:\\Users\\jdoe\\AppData\\Local\\Temp\\8656\\foo2\\: The directory is not empty.\r\n```\r\n\r\nNote:\r\n* The problem only occurs if the target dir. is _non-empty_.\r\n* It seems to have been introduced in v7.2.0-preview.5\r\n\r\n## Environment data\r\n\r\n```none\r\nPowerShell Core v7.2.0-preview.5 on Microsoft Windows 10 Pro (64-bit; Version 20H2, OS Build: 19042.928)\r\n```\r\n",
  "closed_at": "2021-04-27T19:31:13Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> Remove-Item .\\foo\\\r\n\r\nI'd expect follow should works - `Remove-Item .\\foo\\ -Recursive`.",
      "created_at": "2021-04-16T16:49:01Z",
      "updated_at": "2021-04-16T16:49:01Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Sorry, @iSazonov: `-Recurse` is indeed required, I just mistakenly omitted it from the test, which I've now updated. As you'll see, the test still fails.",
      "created_at": "2021-04-16T16:53:14Z",
      "updated_at": "2021-04-17T15:05:42Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I manually create the tree in `c:\\tmp` and Remove-Item works as expected without an error.",
      "created_at": "2021-04-16T17:15:41Z",
      "updated_at": "2021-04-16T17:15:41Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Interesting - what happens when you run my test?\r\nFor me, `Remove-Item .\\foo -Recurse` works just fine, whereas `Remove-Item .\\foo\\ -Recurse`  fails - note the trailing backlash - actually also if the directory is empty and `-Recurse` is omitted.",
      "created_at": "2021-04-16T17:29:03Z",
      "updated_at": "2021-04-17T15:05:59Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "No error too.\r\n```powershell\r\nPS C:\\tmp> Push-Location -ea Stop ($tmpDir = (New-Item -Type Directory -Force (Join-Path Temp:/ $PID)).FullName)\r\nPS C:\\Users\\1\\AppData\\Local\\Temp\\3424>  New-Item -Type Directory -force foo\r\n\r\n    Directory: C:\\Users\\1\\AppData\\Local\\Temp\\3424\r\n\r\nMode                 LastWriteTime         Length Name\r\n----                 -------------         ------ ----\r\nd----          16.04.2021    22:30                foo\r\n\r\nPS C:\\Users\\1\\AppData\\Local\\Temp\\3424> Remove-Item .\\foo\\ -Recurse -ErrorAction Stop\r\nPS C:\\Users\\1\\AppData\\Local\\Temp\\3424> Pop-Location; Remove-Item $tmpDir -Recurse\r\nPS C:\\tmp>\r\n```",
      "created_at": "2021-04-16T17:34:38Z",
      "updated_at": "2021-04-16T17:36:19Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Maybe you already have a locked file in C:\\Users\\jdoe\\AppData\\Local\\Temp\\8656\\foo\\ ?",
      "created_at": "2021-04-16T17:37:36Z",
      "updated_at": "2021-04-16T17:37:36Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Are you using preview **5** yet? It only seems to happen there.\r\n\r\nI've refined the test in the initial post, and the problem is connected to _non-empty_ directories (which therefore requires `-Recurse`), after all.\r\n\r\nIf locking were the problem, the test code wouldn't be able to remove the enclosing temp. directory - but it is.\r\n\r\n",
      "created_at": "2021-04-16T17:53:06Z",
      "updated_at": "2021-04-17T15:06:16Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I wonder how our CI tests are passed. ",
      "created_at": "2021-04-16T17:58:44Z",
      "updated_at": "2021-04-16T17:58:44Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "So you're now seeing the problem too?\r\n\r\n> I wonder how our CI tests are passed.\r\n\r\nWithout having looked at them: Perhaps the particular combination at hand - non-empty target dir., trailing `\\`, `-Recurse` -isn't being tested.\r\n\r\n",
      "created_at": "2021-04-16T18:04:45Z",
      "updated_at": "2021-04-16T18:04:45Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "If you're seeing the problem too, I suggest we hide all of our comments here, as the initial post has been updated to (hopefully) tell the full story.",
      "created_at": "2021-04-16T20:55:58Z",
      "updated_at": "2021-04-17T15:06:31Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "It is a regression after #14902 (again symlinks \ud83d\ude04).",
      "created_at": "2021-04-17T12:51:57Z",
      "updated_at": "2021-04-17T12:51:57Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for digging. \r\nI've hidden most of my previous comments.",
      "created_at": "2021-04-17T15:06:59Z",
      "updated_at": "2021-04-17T15:06:59Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:This issue was addressed in #15260, which has now been successfully released as `v7.2.0-preview.6`.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.2.0-preview.6)\n",
      "created_at": "2021-05-27T17:32:23Z",
      "updated_at": "2021-05-27T17:32:23Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:This issue was addressed in #15260, which has now been successfully released as `v7.2.0-preview.7`.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.2.0-preview.7)\n",
      "created_at": "2021-06-17T16:59:00Z",
      "updated_at": "2021-06-17T16:59:00Z"
    }
  ],
  "created_at": "2021-04-16T14:33:51Z",
  "labels": [
    "OS-Windows",
    "WG-Cmdlets-Core",
    "WG-Engine-Providers",
    "Needs-Triage"
  ],
  "number": 15248,
  "state": "closed",
  "title": "On Windows, Remove-Item unexpectedly fails if the target directory path happens to end in a backslash",
  "updated_at": "2021-06-17T16:59:00Z"
}