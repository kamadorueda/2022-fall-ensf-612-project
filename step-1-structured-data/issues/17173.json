{
  "_url": "https://github.com/PowerShell/PowerShell/issues/17173",
  "author": "OnorioCatenacci",
  "body": "### Prerequisites\n\n- [X] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\n\n### Steps to reproduce\n\nIf I attempt to start choco.exe (Chocolatey NuGet) with a Start-Process I get ANSI escape codes displayed.  However starting it directly doesn't give me a problem.\r\n\r\n\r\nTo see what I mean try the following from within pwsh on Ubuntu\r\n\r\n1. `Start-Process mono /opt/chocolatey/choco.exe`\r\n2. I get this: `PS /home/onorio_developer> ;28R`\r\n3. Then I Ctrl+C and I get the expected Chocolatey prompt.  \r\n4. If I hit Ctrl+C again I get the same `;28R` again \r\n\r\nWhereas if I run this:\r\n`mono /opt/chocolatey/choco.exe`\r\nI get the expected Chocolatey prompt with no random ANSI escape sequences.\r\n\r\n\n\n### Expected behavior\n\n```console\nShould show chocolatey help message and exit\r\n\r\n(See screenshot)\n```\n\n\n### Actual behavior\n\n```console\nOutputs partial ANSI Escape sequence before and after showing chocolatey help message.\n```\n\n\n### Error details\n\n```console\nNothing is returned by Get-Error\n```\n\n\n### Environment data\n\n```powershell\n$PSVersionTable:\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.2\r\nPSEdition                      Core\r\nGitCommitId                    7.2.2\r\nOS                             Linux 5.14.0-1033-oem #36-Ubuntu SMP Mon Apr 4 15:15:49 UTC 2022\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\nMono:\r\nMono JIT compiler version 6.12.0.122 (tarball Mon Feb 22 17:33:28 UTC 2021)\r\nCopyright (C) 2002-2014 Novell, Inc, Xamarin Inc and Contributors. www.mono-project.com\r\n\tTLS:           __thread\r\n\tSIGSEGV:       altstack\r\n\tNotifications: epoll\r\n\tArchitecture:  amd64\r\n\tDisabled:      none\r\n\tMisc:          softdebug \r\n\tInterpreter:   yes\r\n\tLLVM:          yes(610)\r\n\tSuspend:       hybrid\r\n\tGC:            sgen (concurrent by default)\r\n\r\nChocolatey:\r\nChocolatey v0.12.1-155-g2f5b02d8\n```\n\n\n### Visuals\n\nError behavior:\r\n![Screenshot from 2022-04-21 19-26-55](https://user-images.githubusercontent.com/153365/164567158-0d87c84e-963c-465a-b7f3-e265c103221a.png)\r\n\r\nExpected behavior:\r\n![Screenshot from 2022-04-21 19-27-40](https://user-images.githubusercontent.com/153365/164567180-e30c7c37-5c45-4a0c-ac14-9ea38ef90c43.png)\r\n\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "jborean93",
      "author_association": "COLLABORATOR",
      "body": "I remember having problems with using Start-Process on non-Windows as the sub process inherits the tty of pwsh automatically and when it writes output it appears in the same console. There\u2019s even a small reference to it on the Start-Process docs https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.management/start-process?view=powershell-7.2#example-8-create-a-detached-process-on-linux\r\n\r\n> On non-Windows platforms, the newly started process is attached to the shell that launched\r\n\r\nI don\u2019t know enough about processes on Linux to know off what should be done about this but a potential workaround is to use `-RedirectStandardOutput /dev/null` (and the stderr parameter).\r\n\n\n<blockquote><img src=\"https://docs.microsoft.com/media/logos/logo-powershell-social.png\" width=\"48\" align=\"right\"><div><strong><a href=\"https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.management/start-process\">Start-Process (Microsoft.PowerShell.Management) - PowerShell</a></strong></div><div>The Start-Process cmdlet starts one or more processes on the local computer. By default, Start-Process creates a new process that inherits all the environment variables that are defined in the current process. To specify the program that runs in the process, enter an executable file or script file, or a file that can be opened by using a program on the computer. If you specify a non-executable file, Start-Process starts the program that is associated with the file, similar to the Invoke-Item cmdlet. You can use the parameters of Start-Process to specify options, such as loading a user profile, starting the process in a new window, or using alternate credentials. </div></blockquote>",
      "created_at": "2022-04-23T00:22:41Z",
      "updated_at": "2022-04-23T00:22:43Z"
    },
    {
      "author": "OnorioCatenacci",
      "author_association": "NONE",
      "body": "I don't think it's a high-priority issue regardless since there's a simple work-around. I just wanted to make sure that if others found it they'd be aware of the work-around for it.  ",
      "created_at": "2022-04-25T14:34:00Z",
      "updated_at": "2022-04-25T14:34:00Z"
    }
  ],
  "created_at": "2022-04-21T23:31:30Z",
  "number": 17173,
  "state": "open",
  "title": "Start-Process Outputs ANSI Escape Sequences",
  "updated_at": "2022-04-25T14:34:00Z"
}