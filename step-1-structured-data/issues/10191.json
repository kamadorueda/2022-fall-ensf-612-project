{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10191",
  "author": "TravisEz13",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n\r\n-->\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\nGet-Module -ListAvailable -Name microsoft.* | \r\n    Select-Object -Property @{l='Module';e={$_.Name}} | \r\n    Get-Command\r\n```\r\n\r\n# Expected behavior\r\n\r\n```none\r\n> Get-Command -Module (Get-Module -ListAvailable -Name microsoft.* | Select-Object -ExpandProperty name)       \r\n\r\nCommandType     Name                                               Version    Source\r\n-----------     ----                                               -------    ------\r\nFunction        Compress-Archive                                   1.2.3.0    Microsoft.PowerShell.Archive\r\nFunction        Expand-Archive                                     1.2.3.0    Microsoft.PowerShell.Archive\r\nCmdlet          Add-Content                                        6.1.0.0    Microsoft.PowerShell.Management\r\nCmdlet          Add-Member                                         6.1.0.0    Microsoft.PowerShell.Utility\r\nCmdlet          Add-Type                                           6.1.0.0    Microsoft.PowerShell.Utility\r\nCmdlet          Clear-Content                                      6.1.0.0    Microsoft.PowerShell.Management\r\nCmdlet          Clear-Item                                         6.1.0.0    Microsoft.PowerShell.Management\r\nCmdlet          Clear-ItemProperty                                 6.1.0.0    Microsoft.PowerShell.Management\r\nCmdlet          Clear-Variable                                     6.1.0.0    Microsoft.PowerShell.Utility\r\nCmdlet          Compare-Object                                     6.1.0.0    Microsoft.PowerShell.Utility\r\n\r\n```\r\n\r\n# Actual behavior\r\n\r\n```none\r\nGet-Command : The term 'Microsoft.PowerShell.Archive' is not recognized as the name of a cmdlet, function, script file, or operable program.\r\nCheck the spelling of the name, or if a path was included, verify that the path is correct and try again.\r\nAt line:1 char:47\r\n+ Get-Module -ListAvailable -Name microsoft.* | Get-Command\r\n+                                               ~~~~~~~~~~~\r\n+ CategoryInfo          : ObjectNotFound: (Microsoft.PowerShell.Archive:String) [Get-Command], CommandNotFoundException\r\n+ FullyQualifiedErrorId : CommandNotFoundException,Microsoft.PowerShell.Commands.GetCommandCommand\r\n \r\nGet-Command : The term 'Microsoft.PowerShell.Host' is not recognized as the name of a cmdlet, function, script file, or operable program.\r\nCheck the spelling of the name, or if a path was included, verify that the path is correct and try again.\r\nAt line:1 char:47\r\n+ Get-Module -ListAvailable -Name microsoft.* | Get-Command\r\n+                                               ~~~~~~~~~~~\r\n+ CategoryInfo          : ObjectNotFound: (Microsoft.PowerShell.Host:String) [Get-Command], CommandNotFoundException\r\n+ FullyQualifiedErrorId : CommandNotFoundException,Microsoft.PowerShell.Commands.GetCommandCommand\r\n \r\n\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-preview.2\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-preview.2\r\nOS                             Darwin 18.6.0 Darwin Kernel Version 18.6.0: Thu Apr 25 23:16:27 PDT 2019; root:xnu-4903.261.4~2/RELEASE_X86_64\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n# Addition Information\r\n\r\n```\r\n get-help -parameter Module get-command                                                                       \r\n\r\n-Module <string[]>\r\n    \r\n    Required?                    false\r\n    Position?                    Named\r\n    Accept pipeline input?       true (ByPropertyName)\r\n    Parameter set name           (All)\r\n    Aliases                      PSSnapin\r\n    Dynamic?                     false\r\n```",
  "closed_at": "2019-07-23T18:00:16Z",
  "comments": [
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "verified this is the same in 6.2",
      "created_at": "2019-07-20T21:01:03Z",
      "updated_at": "2019-07-20T21:01:03Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "If I recall correctly, this is an issue that's been raised before. Essentially, the pipeline binder preferentially binds objects ByValue before it ever looks for ByPropertyName even when it sometimes doesn't make sense / to the \"wrong\" or \"less sensible\" parameter or set -- didn't @KirkMunro raise an issue like that for the breakpoint cmdlets recently?",
      "created_at": "2019-07-21T20:45:09Z",
      "updated_at": "2019-07-21T20:45:37Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "Yes, #10188, but that issue was about parameter binding prioritizing default parameter sets over being smart about what is piped into the command. This seems similar, but I'm out and about so I can't check right now.",
      "created_at": "2019-07-21T21:33:58Z",
      "updated_at": "2019-07-21T21:33:58Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "Just following up, this is very similar to #10188, but it's not exactly the same in my opinion. Here's why:\r\n\r\n* The default parameter set in `Get-Command` is `CmdletSet`.\r\n* The `Name` parameter in `Get-Command` accepts pipeline input by value and by property name, and belongs to the `AllCommandSet` parameter set (i.e. not the default one).\r\n* The `Module` parameter in `Get-Command` accepts pipeline input by property name and is in all parameter sets.\r\n\r\nWhen you invoke `@{Module = 'Microsoft.PowerShell.Utility'} | Get-Command` (a pithy equivalent of the example used in the OP), you're passing in a PSObject with only a `Module` property on it. Since `Module` is a parameter that accepts pipeline input by value on any parameter set, logic seems to indicate that PowerShell should bind it to that parameter, but it does not. Instead, I think the logic goes more like this in this particular case:\r\n\r\n- since the parameter being piped into does not have any parameters in the invocation that can uniquely tie it to a specific parameter set, look at the pipeline input by itself and see if it can do something with the default parameter set\r\n- while looking at the default parameter set, since the command accepts pipeline input by value into a string parameter, it just converts the input into string and doesn't look any further (this is the logic that I believe is flawed in this case)\r\n\r\nThe end result is that the incoming object is converted into a string and bound to `Name`, which is the wrong thing to do. Parameter binding with pipeline input really needs to use a best match algorithm that considers all possibilities and matches to the best non-ambiguous one.\r\n\r\nRegardless, there is a risk of a breaking change here as well if any of this behavior is changed, whether the current implementation is illogical or not.\r\n",
      "created_at": "2019-07-22T17:15:27Z",
      "updated_at": "2019-07-22T17:17:19Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as duplicate and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2019-07-23T18:00:15Z",
      "updated_at": "2019-07-23T18:00:15Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as duplicate and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2019-07-23T19:00:14Z",
      "updated_at": "2019-07-23T19:00:14Z"
    }
  ],
  "created_at": "2019-07-20T21:00:26Z",
  "number": 10191,
  "state": "closed",
  "title": "Piping a module property to Get-Command which allows -Module ByProperytName doesn\u2019t work",
  "updated_at": "2019-07-23T19:00:15Z"
}