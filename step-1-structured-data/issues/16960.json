{
  "_url": "https://github.com/PowerShell/PowerShell/issues/16960",
  "author": "DJackman123",
  "body": "### Prerequisites\n\n- [X] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\n\n### Steps to reproduce\n\nThe [reference docs for formatting files](https://docs.microsoft.com/en-us/powershell/scripting/developer/format/frame-element-for-customitem-for-controls-for-configuration-format?view=powershell-7.2) say that the Frame element inside of CustomItem can contain elements to specify indenting that will happen to the formatted text: LeftIndent, RightIndent, FirstLineIndent, and/or FirstLineHanging.  However, none of these elements actually do any indenting to the output.\r\nFrom what I can tell, Windows PowerShell 5.1 has the same problem.\r\n\r\nThe following is an example formatting ps1xml file and script that demonstrates the problem:\r\n\r\nFormatBug.ps1xml:\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<Configuration>\r\n  <Controls>\r\n    <Control>\r\n      <Name>LongMessageInfo-Grouping</Name>\r\n      <CustomControl>\r\n        <CustomEntries>\r\n          <CustomEntry>\r\n            <CustomItem>\r\n              <Frame>\r\n                <LeftIndent>10</LeftIndent>\r\n                <RightIndent>10</RightIndent>\r\n                <FirstLineHanging>8</FirstLineHanging>\r\n                <!-- <FirstLineIndent>3</FirstLineIndent> -->\r\n                <CustomItem>\r\n                  <NewLine />\r\n                  <Text>Start Group: </Text>\r\n                  <ExpressionBinding>\r\n                    <!-- <PropertyName>Start</PropertyName> -->\r\n                    <ScriptBlock>\"[$($_.Start)] $((@($_.Message) * $_.RepeatCount) -join ' ')\"</ScriptBlock>\r\n                  </ExpressionBinding>\r\n                </CustomItem>\r\n              </Frame>\r\n            </CustomItem>\r\n          </CustomEntry>\r\n        </CustomEntries>\r\n      </CustomControl>\r\n    </Control>\r\n  </Controls>\r\n  <ViewDefinitions>\r\n    <View>\r\n      <Name>LongMessageInfo</Name>\r\n      <ViewSelectedBy>\r\n        <TypeName>LongMessageInfo</TypeName>\r\n      </ViewSelectedBy>\r\n      <GroupBy>\r\n        <PropertyName>Start</PropertyName>\r\n        <CustomControlName>LongMessageInfo-Grouping</CustomControlName>\r\n      </GroupBy>\r\n      <CustomControl>\r\n        <CustomEntries>\r\n          <CustomEntry>\r\n            <CustomItem>\r\n              <Frame>\r\n                <LeftIndent>3</LeftIndent>\r\n                <FirstLineHanging>4</FirstLineHanging>\r\n                <!-- <FirstLineIndent>2</FirstLineIndent> -->\r\n                <CustomItem>\r\n                  <ExpressionBinding>\r\n                    <ScriptBlock>\"$($_.Start) $((@($_.Message) * $_.RepeatCount) -join ' ')\"</ScriptBlock>\r\n                  </ExpressionBinding>\r\n                </CustomItem>\r\n              </Frame>\r\n            </CustomItem>\r\n          </CustomEntry>\r\n        </CustomEntries>\r\n      </CustomControl>\r\n    </View>\r\n  </ViewDefinitions>\r\n</Configuration>\r\n```\r\n\r\nFormatBug.ps1:\r\n```\r\nclass LongMessageInfo\r\n{\r\n    [string]$Start\r\n    [string]$Message\r\n    [int]$RepeatCount\r\n}\r\n\r\nUpdate-FormatData '.\\FormatBug.ps1xml'\r\n\r\n$longMessage = [LongMessageInfo]::new()\r\n$longMessage.Start = 'start'\r\n$longMessage.Message = 'This is a long message'\r\n$longMessage.RepeatCount = 30\r\n\r\nWrite-Output $longMessage\r\n```\n\n### Expected behavior\n\n```console\nOutput text is indented according to the formatting file (left, right, and first-line indents).\n```\n\n\n### Actual behavior\n\n```console\nOutput text has no indents at all.\n```\n\n\n### Error details\n\n_No response_\n\n### Environment data\n\n```powershell\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.1\r\nPSEdition                      Core\r\nGitCommitId                    7.2.1\r\nOS                             Microsoft Windows 10.0.22000\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\n```\n\n\n### Visuals\n\n_No response_",
  "closed_at": null,
  "comments": [
    {
      "author": "237dmitry",
      "author_association": "NONE",
      "body": "Try `-AppendPath` parameter.\r\n\r\n```console\r\nUse this parameter to add a file that formats a .NET object that is not referenced in the built-in formatting files.\r\n```",
      "created_at": "2022-03-05T17:33:31Z",
      "updated_at": "2022-03-05T17:33:31Z"
    },
    {
      "author": "DJackman123",
      "author_association": "NONE",
      "body": "> Try `-AppendPath` parameter.\r\n\r\n`-AppendPath` is the position 0 parameter.  So `Update-FormatData .\\FormatBug.ps1xml` is the same as `Update-FormatData -AppendPath .\\FormatBug.ps1xml`.  And, before you say anything, `-PrependPath` doesn't make any difference here, either.\r\n",
      "created_at": "2022-03-05T17:54:06Z",
      "updated_at": "2022-03-05T17:54:22Z"
    },
    {
      "author": "jhoneill",
      "author_association": "NONE",
      "body": "Working XML\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<Configuration>\r\n    <Controls>\r\n        <Control>\r\n            <Name>LongMessageInfo-Grouping</Name>\r\n            <CustomControl>\r\n                <CustomEntries>\r\n                    <CustomEntry>\r\n                        <CustomItem>\r\n                            <Frame>\r\n                                <LeftIndent>10</LeftIndent>\r\n                                <RightIndent>10</RightIndent>\r\n                                <FirstLineHanging>8</FirstLineHanging>\r\n                                <CustomItem>\r\n                                    <Text>Start group </Text>\r\n                                    <ExpressionBinding>\r\n                                        <ScriptBlock>\r\n                                            <ScriptBlock>\"[$($_.Start)] $((@($_.Message) * $_.RepeatCount) -join ' ')\"</ScriptBlock>\r\n                                        </ScriptBlock>\r\n                                    </ExpressionBinding>\r\n                                            <NewLine/>\r\n                                </CustomItem>\r\n                            </Frame>\r\n                        </CustomItem>\r\n                    </CustomEntry>\r\n                </CustomEntries>\r\n            </CustomControl>\r\n        </Control>\r\n    </Controls>\r\n    <ViewDefinitions>\r\n        <View>\r\n            <Name>LongMessageInfo</Name>\r\n            <ViewSelectedBy>\r\n            <TypeName>LongMessageInfo</TypeName>\r\n            </ViewSelectedBy>\r\n            <GroupBy>\r\n                <PropertyName>Start</PropertyName>\r\n                <CustomControlName>LongMessageInfo-Grouping</CustomControlName>\r\n            </GroupBy>\r\n            <CustomControl>\r\n                <CustomEntries>\r\n                    <CustomEntry>\r\n                        <CustomItem>\r\n                            <Frame>\r\n                                <LeftIndent>3</LeftIndent>\r\n                                <FirstLineHanging>4</FirstLineHanging>\r\n                                <!-- <FirstLineIndent>2</FirstLineIndent> -->\r\n                                <CustomItem>\r\n                                    <ExpressionBinding>\r\n                                        <ScriptBlock>\r\n                                            <ScriptBlock>\"$($_.Start) $((@($_.Message) * $_.RepeatCount) -join ' ')\"</ScriptBlock>\r\n                                        </ScriptBlock>\r\n                                    </ExpressionBinding>\r\n                                    <NewLine/>                    \r\n                                </CustomItem>\r\n                            </Frame>\r\n                        </CustomItem>\r\n                    </CustomEntry>\r\n                </CustomEntries>\r\n            </CustomControl>\r\n        </View>\r\n    </ViewDefinitions>\r\n</Configuration>\r\n```",
      "created_at": "2022-03-05T20:12:38Z",
      "updated_at": "2022-03-05T20:12:38Z"
    },
    {
      "author": "DJackman123",
      "author_association": "NONE",
      "body": "Thanks for providing this.  Based on this I played around with it a bit and determined that it only works when the ExpressionBinding is followed by a NewLine.  The docs say nothing about this.  But is it a doc bug or a bug in the implementation?  Should the NewLine really be required?  I didn't want my items to be separated by linefeeds--the whole point of the hanging indent was to avoid this.",
      "created_at": "2022-03-08T00:27:26Z",
      "updated_at": "2022-03-08T00:27:26Z"
    },
    {
      "author": "jhoneill",
      "author_association": "NONE",
      "body": "It _shouldn't_ require a newline, or any particular spacing provided the XML parses. I'll play some more when I get a chance and see if I can repro your findings.",
      "created_at": "2022-03-08T14:16:37Z",
      "updated_at": "2022-03-08T14:16:37Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2022-03-10T00:00:39Z",
      "updated_at": "2022-03-10T00:00:39Z"
    },
    {
      "author": "DJackman123",
      "author_association": "NONE",
      "body": "How do I re-open and un-answer this bug?  Based on the last statement this is still a bug.",
      "created_at": "2022-03-10T00:04:02Z",
      "updated_at": "2022-03-10T00:04:02Z"
    },
    {
      "author": "jhoneill",
      "author_association": "NONE",
      "body": "The <scriptblocks> in my sample were doubled up. although that does not seem to change anything. \r\nThis version removes them and the line break after expression binding\r\nthis works\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<Configuration>\r\n    <Controls><Control><Name>LongMessageInfo-Grouping</Name><CustomControl><CustomEntries><CustomEntry><CustomItem><Frame>\r\n            <LeftIndent>10</LeftIndent><RightIndent>10</RightIndent><FirstLineHanging>8</FirstLineHanging>\r\n            <CustomItem><Text>Start group</Text><ExpressionBinding><ScriptBlock>\"[$($_.Start)] $((@($_.Message + \"~\") * $_.RepeatCount) -join ' ')\"</ScriptBlock></ExpressionBinding><NewLine/></CustomItem>\r\n    </Frame></CustomItem></CustomEntry></CustomEntries></CustomControl></Control></Controls>\r\n    <ViewDefinitions><View><Name>LongMessageInfo</Name><ViewSelectedBy><TypeName>LongMessageInfo</TypeName></ViewSelectedBy>\r\n        <GroupBy><PropertyName>Start</PropertyName><CustomControlName>LongMessageInfo-Grouping</CustomControlName></GroupBy>\r\n        <CustomControl><CustomEntries><CustomEntry><CustomItem><Frame>\r\n            <LeftIndent>3</LeftIndent><FirstLineHanging>4</FirstLineHanging>\r\n            <!-- <FirstLineIndent>2</FirstLineIndent> -->\r\n            <CustomItem><ExpressionBinding><ScriptBlock>\"$($_.Start) $((@($_.Message+ \"#\") * $_.RepeatCount) -join ' ')\"</ScriptBlock></ExpressionBinding><NewLine/></CustomItem>\r\n        </Frame></CustomItem></CustomEntry></CustomEntries>        </CustomControl>\r\n    </View></ViewDefinitions>\r\n</Configuration>\r\n```\r\n\r\n(ignore the ~ and # being inserted they are so I can see the that code has been reloaded)\r\n\r\n```\r\n> Update-FormatData\r\n> Write-Output $longMessage\r\n\r\n\r\n          Start group[start] This is a long message~ This is a long message~ This is a long message~ This is a long message~ This is a long message~ This is a\r\n                  long message~ This is a long message~ This is a long message~ This is a long message~ This is a long message~ This is a long message~ This is\r\n                  a long message~ This is a long message~ This is a long message~ This is a long message~ This is a long message~ This is a long message~ This\r\n                  is a long message~ This is a long message~ This is a long message~ This is a long message~ This is a long message~ This is a long message~\r\n                  This is a long message~ This is a long message~ This is a long message~ This is a long message~ This is a long message~ This is a long\r\n                  message~ This is a long message~\r\n\r\n\r\n   start This is a long message# This is a long message# This is a long message# This is a long message# This is a long message# This is a long message# This is a long    \r\n       message# This is a long message# This is a long message# This is a long message# This is a long message# This is a long message# This is a long message# This is a  \r\n       long message# This is a long message# This is a long message# This is a long message# This is a long message# This is a long message# This is a long message# This  \r\n       is a long message# This is a long message# This is a long message# This is a long message# This is a long message# This is a long message# This is a long message#  \r\n       This is a long message# This is a long message# This is a long message#\r\n\r\n```\r\n\r\n\r\nEven this works :-) \r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<Configuration><Controls><Control><Name>LongMessageInfo-Grouping</Name><CustomControl><CustomEntries><CustomEntry><CustomItem><Frame><LeftIndent>10</LeftIndent><RightIndent>10</RightIndent><FirstLineHanging>8</FirstLineHanging><CustomItem><Text>Start group</Text><ExpressionBinding><ScriptBlock>\"[$($_.Start)] $((@($_.Message + \"~\") * $_.RepeatCount) -join ' ')\"</ScriptBlock></ExpressionBinding><NewLine/></CustomItem></Frame></CustomItem></CustomEntry></CustomEntries></CustomControl></Control></Controls><ViewDefinitions><View><Name>LongMessageInfo</Name><ViewSelectedBy><TypeName>LongMessageInfo</TypeName></ViewSelectedBy><GroupBy><PropertyName>Start</PropertyName><CustomControlName>LongMessageInfo-Grouping</CustomControlName></GroupBy><CustomControl><CustomEntries><CustomEntry><CustomItem><Frame><LeftIndent>3</LeftIndent><FirstLineHanging>4</FirstLineHanging><CustomItem><ExpressionBinding><ScriptBlock>\"$($_.Start) $((@($_.Message+ \"#\") * $_.RepeatCount) -join ' ')\"</ScriptBlock></ExpressionBinding><NewLine/></CustomItem></Frame></CustomItem></CustomEntry></CustomEntries></CustomControl></View></ViewDefinitions></Configuration>\r\n```",
      "created_at": "2022-03-26T10:36:31Z",
      "updated_at": "2022-03-26T10:37:15Z"
    },
    {
      "author": "DJackman123",
      "author_association": "NONE",
      "body": "I wasn't talking about whitespace in the XML.  I was talking about the `<NewLine/>` element in the XML.  Is the `<NewLine/>` element after the `<ExpressionBinding>` element required?  The docs don't say that it is, and I really don't want to have a blank line after each of the objects just so I can get the indentation to work.",
      "created_at": "2022-03-26T12:49:41Z",
      "updated_at": "2022-03-26T12:49:41Z"
    },
    {
      "author": "jhoneill",
      "author_association": "NONE",
      "body": "@DJackman123  Sorry that's a loud DOH ! from me.  I read it as a `Line feed` not as a `<Newline />` .\r\n I get the same behaviour, remove the newline and the indents don't work. \r\n\r\nI've written quite a few format files, but I don't use the <indent> tags. I did a search through all the Ps1xml files I have and the only indents in them a left, and the sampling I did showed everyone has a newline combined with it. I can't see why this would need to be so. It may be intentional but not properly documented or it may a long standing bug. \r\n",
      "created_at": "2022-03-26T19:55:39Z",
      "updated_at": "2022-03-26T19:56:10Z"
    }
  ],
  "created_at": "2022-03-05T15:13:02Z",
  "number": 16960,
  "state": "open",
  "title": "Indenting elements for formatting ps1xml files don't work",
  "updated_at": "2022-03-26T19:56:10Z"
}