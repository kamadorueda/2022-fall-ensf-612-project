{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9289",
  "author": "SteveL-MSFT",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nAdd support in packaging.psm1 to produce a .msix AppX package.  Update the docker image to use the new msix package type.  Update the associated yml files so AzDevOps performs the build.\r\n\r\n## PR Context\r\n\r\nEnable publishing PSCore6 to Microsoft Store\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission) Doc PR will be submitted once we build a signed msix\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n",
  "closed_at": "2019-04-16T00:07:16Z",
  "comments": [
    {
      "author": "wjk",
      "author_association": "NONE",
      "body": "We would probably want to add the following XML elements to the manifest:\r\n\r\n```xml\r\n<Properties>\r\n  <desktop6:RegistryWriteVirtualization>disabled</desktop6:RegistryWriteVirtualization>\r\n</Properties>\r\n<!-- other content... -->\r\n<Capabilities>\r\n  <rescap:Capability Name=\"unvirtualizedResources\" />\r\n</Capabilities>\r\n```\r\n\r\nThis will instruct Windows to allow the packaged copy of PowerShell to modify the system Registry directly. Without it, PowerShell's Registry manipulation features will not function properly (the changes will be visible only to PowerShell), vastly impairing the usefulness of the program.\r\n\r\nNote that users will need to be running 19H1 for this to work. The use of the desktop6 namespace should not impair loading of the package on downlevel versions of Windows 10 (assuming `IgnorableNamespaces` is used), but the capability might.",
      "created_at": "2019-04-04T23:45:55Z",
      "updated_at": "2019-04-04T23:45:55Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@wjk Thanks for that snippet!  That should resolve the issue I see with using the registry provider from the msix.  Will update the manifest.",
      "created_at": "2019-04-05T02:14:16Z",
      "updated_at": "2019-04-05T02:14:16Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@wjk With those additions, it doesn't fix some issues with the msix package in that `Move-Item`, `Copy-Item` and `Rename-Item` doesn't work with registry provider when elevated and against HKLM:.  `New-Item` and `Remove-Item` do work.  And all cmdlets seem to work against HKCU:.",
      "created_at": "2019-04-05T04:17:41Z",
      "updated_at": "2019-04-05T04:17:41Z"
    },
    {
      "author": "wjk",
      "author_association": "NONE",
      "body": "@SteveL-MSFT Unfortunately, I'm not running 19H1 yet, so I can\u2019t help debug your HKLM issue. It seems really weird that some of the registry cmdlets would work, but others don\u2019t. Do you see an error message, or do the changes simply silently fail?",
      "created_at": "2019-04-05T14:25:43Z",
      "updated_at": "2019-04-05T14:25:43Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@wjk Getting an `Access Denied` error when attempting a move, rename, or copy.  Here's the stacktace:\r\n\r\n```powershell\r\nPSMessageDetails      :\r\nException             : System.Security.SecurityException: Requested registry access is not allowed.\r\n                           at Microsoft.Win32.ThrowHelper.ThrowSecurityException(String msg)\r\n                           at Microsoft.Win32.RegistryKey.InternalOpenSubKeyCore(String name, Boolean writable,\r\n                        Boolean throwOnPermissionFailure)\r\n                           at Microsoft.PowerShell.Commands.RegistryWrapper.OpenSubKey(String name, Boolean writable)\r\n                           at Microsoft.PowerShell.Commands.RegistryProvider.GetRegkeyForPath(String path, Boolean\r\n                        writeAccess)\r\n                           at Microsoft.PowerShell.Commands.RegistryProvider.CopyRegistryKey(IRegistryWrapper key,\r\n                        String path, String destination, Boolean recurse, Boolean streamResult, Boolean\r\n                        streamFirstOnly)\r\n                           at Microsoft.PowerShell.Commands.RegistryProvider.CopyItem(String path, String destination,\r\n                        Boolean recurse)\r\nTargetObject          : HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\PowerShell\\3\\test\\test\r\nCategoryInfo          : PermissionDenied: (HKEY_LOCAL_MACHINE\\\\u2026erShell\\3\\test\\test:String) [Copy-Item],\r\n                        SecurityException\r\nFullyQualifiedErrorId : System.Security.SecurityException,Microsoft.PowerShell.Commands.CopyItemCommand\r\nErrorDetails          :\r\nInvocationInfo        : System.Management.Automation.InvocationInfo\r\nScriptStackTrace      : at <ScriptBlock>, <No file>: line 1\r\nPipelineIterationInfo : {0, 1}\r\n```\r\n",
      "created_at": "2019-04-05T16:24:48Z",
      "updated_at": "2019-04-05T16:24:48Z"
    },
    {
      "author": "PoshChan",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT, your last commit had 1 failures in `PowerShell-CI-macos`\r\nValidate 'Save-Help -DestinationPath for all PowerShell Core modules..Validate Save-Help for the 'Microsoft.PowerShell.Core' module\r\n```powershell\r\nExpected $null, but got 'Microsoft.PowerShell.Core_00000000-0000-0000-0000-000000000000_en-US_HelpContent.zip'.\r\nat <ScriptBlock>, /Users/vsts/agent/2.149.2/work/1/s/test/powershell/engine/Help/UpdatableHelpSystem.Tests.ps1: line 332\r\n332:     $expectedCompressedFile | Should -Be $compressedFile\r\n```\r\n",
      "created_at": "2019-04-15T20:34:42Z",
      "updated_at": "2019-04-15T20:34:42Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PoshChan please retry macos",
      "created_at": "2019-04-15T21:10:13Z",
      "updated_at": "2019-04-15T21:10:13Z"
    },
    {
      "author": "PoshChan",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT, successfully started retry of `PowerShell-CI-macOS`",
      "created_at": "2019-04-15T21:11:32Z",
      "updated_at": "2019-04-15T21:11:32Z"
    }
  ],
  "created_at": "2019-04-03T20:55:15Z",
  "number": 9289,
  "state": "closed",
  "title": "Enable building of msix package",
  "updated_at": "2020-03-10T21:02:08Z"
}