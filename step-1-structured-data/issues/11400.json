{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11400",
  "author": "Actionn",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 and PowerShell 7+ issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n\r\n-->\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\n\r\nInvoke-Command -ComputerName localhost -ScriptBlock {get-childitem C:\\}\r\n\r\n```\r\n\r\n# Expected behavior\r\n\r\n\r\nComes back with a list of items\r\n\r\n\r\n# Actual behavior\r\n\r\n\r\nComes back with a list of items, but the properties are all blank. I think it's something to do with the default properties not being selected like if you do it locally? For instance PSPath is Microsoft.Powershell.Core\\FileSystem::C:\\ ... You can actually do something like below and it will come back with data:\r\n\r\n\r\n```powershell\r\n\r\nInvoke-Command -ComputerName localhost -ScriptBlock {get-childitem C:\\ | select * | ft}\r\n\r\n```\r\n\r\nAnother thing I noticed - May have some baring on what's going on here:\r\n\r\n```powershell\r\nPS C:\\Users\\xx\\Desktop> invoke-Command -ComputerName localhost -ScriptBlock {$PSVersionTable}\r\n\r\nName                           Value\r\n----                           -----\r\nPSEdition                      Desktop\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nWSManStackVersion              3.0\r\nBuildVersion                   10.0.18362.145\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nCLRVersion                     4.0.30319.42000\r\nPSVersion                      5.1.18362.145\r\n\r\n```\r\n\r\nAnother Note - I don't have this issue with Powershell 6.2.3 on the same system.\r\n\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n\r\nPS C:\\Users\\xx\\Desktop> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-rc.1\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-rc.1\r\nOS                             Microsoft Windows 10.0.18363\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n\r\n```\r\n",
  "closed_at": "2021-09-15T22:38:32Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I can not repo with latest PowerShell 7.0 builds.",
      "created_at": "2020-01-31T12:28:57Z",
      "updated_at": "2020-01-31T12:28:57Z"
    },
    {
      "author": "mczerniawski",
      "author_association": "NONE",
      "body": "Hi\r\nI have the same. First though it's my build, but then checked on few other systems and all are same:\r\n1. Using PowerShell 7 on source host.\r\n2. Invoke-command to windows box with default Windows PowerShell 5.1\r\n3. Run Get-ChildItem or even New-Item results in 'blank' output:\r\n\r\n```powershell\r\nPS C:\\AdminTools> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0\r\nOS                             Microsoft Windows 10.0.14393\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\nPS C:\\AdminTools> Get-ChildItem C:\\AdminTools\\test\\\r\n\r\n\r\n    Directory: C:\\AdminTools\\test\r\n\r\nMode                 LastWriteTime         Length Name\r\n----                 -------------         ------ ----\r\n-a---          20.03.2020    13:25              0 test1.txt\r\n-a---          20.03.2020    13:25              0 test10.txt\r\n-a---          20.03.2020    13:25              0 test2.txt\r\n-a---          20.03.2020    13:25              0 test3.txt\r\n-a---          20.03.2020    13:25              0 test4.txt\r\n-a---          20.03.2020    13:25              0 test5.txt\r\n-a---          20.03.2020    13:25              0 test6.txt\r\n-a---          20.03.2020    13:25              0 test7.txt\r\n-a---          20.03.2020    13:25              0 test8.txt\r\n-a---          20.03.2020    13:25              0 test9.txt\r\n\r\nPS C:\\AdminTools> Invoke-Command -ComputerName OBJPLIT-SRV0 -ScriptBlock {$PSVersionTable}\r\n\r\nName                           Value\r\n----                           -----\r\nCLRVersion                     4.0.30319.42000\r\nPSRemotingProtocolVersion      2.3\r\nPSVersion                      5.1.14393.3471\r\nPSEdition                      Desktop\r\nWSManStackVersion              3.0\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nSerializationVersion           1.1.0.1\r\nBuildVersion                   10.0.14393.3471\r\n\r\nPS C:\\AdminTools> Invoke-Command objplit-srv0 -scriptblock{ 1..10 | % {New-Item -ItemType File -Name ('test{0}.txt' -f $_) -Path c:\\admintools\\test -force }}\r\n\r\n\r\n    Directory: C:\\admintools\\test\r\n\r\nMode                 LastWriteTime         Length Name                               PSComputerName\r\n----                 -------------         ------ ----                               --------------\r\n                                                                                     objplit-srv0\r\n                                                                                     objplit-srv0\r\n                                                                                     objplit-srv0\r\n                                                                                     objplit-srv0\r\n                                                                                     objplit-srv0\r\n                                                                                     objplit-srv0\r\n                                                                                     objplit-srv0\r\n                                                                                     objplit-srv0\r\n                                                                                     objplit-srv0\r\n                                                                                     objplit-srv0\r\n\r\nPS C:\\AdminTools> Invoke-Command objplit-srv0 -scriptblock{ Get-ChildItem C:\\AdminTools\\test\\}\r\n\r\n\r\n    Directory: C:\\AdminTools\\test\r\n\r\nMode                 LastWriteTime         Length Name                               PSComputerName\r\n----                 -------------         ------ ----                               --------------\r\n                                                                                     objplit-srv0\r\n                                                                                     objplit-srv0\r\n                                                                                     objplit-srv0\r\n                                                                                     objplit-srv0\r\n                                                                                     objplit-srv0\r\n                                                                                     objplit-srv0\r\n                                                                                     objplit-srv0\r\n                                                                                     objplit-srv0\r\n                                                                                     objplit-srv0\r\n                                                                                     objplit-srv0\r\n\r\nPS C:\\AdminTools> Invoke-Command objplit-srv0 -scriptblock{ Get-ChildItem C:\\AdminTools\\test\\ | Select-Object FullName}\r\n\r\nFullName                      PSComputerName RunspaceId\r\n--------                      -------------- ----------\r\nC:\\AdminTools\\test\\test1.txt  objplit-srv0   efe68438-d2e9-496f-9b1f-4cbe3184feaa\r\nC:\\AdminTools\\test\\test10.txt objplit-srv0   efe68438-d2e9-496f-9b1f-4cbe3184feaa\r\nC:\\AdminTools\\test\\test2.txt  objplit-srv0   efe68438-d2e9-496f-9b1f-4cbe3184feaa\r\nC:\\AdminTools\\test\\test3.txt  objplit-srv0   efe68438-d2e9-496f-9b1f-4cbe3184feaa\r\nC:\\AdminTools\\test\\test4.txt  objplit-srv0   efe68438-d2e9-496f-9b1f-4cbe3184feaa\r\nC:\\AdminTools\\test\\test5.txt  objplit-srv0   efe68438-d2e9-496f-9b1f-4cbe3184feaa\r\nC:\\AdminTools\\test\\test6.txt  objplit-srv0   efe68438-d2e9-496f-9b1f-4cbe3184feaa\r\nC:\\AdminTools\\test\\test7.txt  objplit-srv0   efe68438-d2e9-496f-9b1f-4cbe3184feaa\r\nC:\\AdminTools\\test\\test8.txt  objplit-srv0   efe68438-d2e9-496f-9b1f-4cbe3184feaa\r\nC:\\AdminTools\\test\\test9.txt  objplit-srv0   efe68438-d2e9-496f-9b1f-4cbe3184feaa\r\n\r\nPS C:\\AdminTools>\r\n```\r\n",
      "created_at": "2020-03-20T12:30:32Z",
      "updated_at": "2020-03-20T12:52:13Z"
    },
    {
      "author": "mczerniawski",
      "author_association": "NONE",
      "body": "But if I connect to PowerShell.7 remote endpoint, I get expected results:\r\n\r\n```powershell\r\nPS C:\\AdminTools> Invoke-Command -ComputerName objplit-srv0 -ConfigurationName 'PowerShell.7' -ScriptBlock {Get-ChildItem C:\\AdminTools\\test\\}\r\n\r\n\r\n    Directory: C:\\AdminTools\\test\r\n\r\nMode                 LastWriteTime         Length Name                               PSComputerName\r\n----                 -------------         ------ ----                               --------------\r\n-a---          20.03.2020    13:29              0 test1.txt                          objplit-srv0\r\n-a---          20.03.2020    13:29              0 test10.txt                         objplit-srv0\r\n-a---          20.03.2020    13:29              0 test2.txt                          objplit-srv0\r\n-a---          20.03.2020    13:29              0 test3.txt                          objplit-srv0\r\n-a---          20.03.2020    13:29              0 test4.txt                          objplit-srv0\r\n-a---          20.03.2020    13:29              0 test5.txt                          objplit-srv0\r\n-a---          20.03.2020    13:29              0 test6.txt                          objplit-srv0\r\n-a---          20.03.2020    13:29              0 test7.txt                          objplit-srv0\r\n-a---          20.03.2020    13:29              0 test8.txt                          objplit-srv0\r\n-a---          20.03.2020    13:29              0 test9.txt                          objplit-srv0\r\n\r\n```",
      "created_at": "2020-03-20T12:52:02Z",
      "updated_at": "2020-03-20T12:52:02Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@mczerniawski Windows PowerShell is frozen and the issue with Windows PowerShell endpoint will be never fixed.",
      "created_at": "2020-03-20T13:07:15Z",
      "updated_at": "2020-03-20T13:07:15Z"
    },
    {
      "author": "mczerniawski",
      "author_association": "NONE",
      "body": "Hm. \r\nSo there's nothing that can be done in PS7 that would fix this? \r\nIt can greatly impact with adoption on PS7. \r\nBecause of this not only to fully utilize benefits of PS7 I have to get it on all endpoints, but it becomes very... unpredictable in scanerios ManagementStation-PS7 -> EndpointServers (still PS5.1)\r\n",
      "created_at": "2020-03-20T14:46:53Z",
      "updated_at": "2020-03-20T14:46:53Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "/cc @PaulHigin it might be worth looking into whether we can somehow fix or override any formatters causing issues from the winPS endpoint?",
      "created_at": "2020-03-20T14:59:46Z",
      "updated_at": "2020-03-20T14:59:46Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@vexx32 We get well object. We changed Formatting system and how we add FileSystem provider properties.\r\nMaybe we could look Deserialized.System.IO.DirectoryInfo, Deserialized.System.IO.FileSystemInfo in Formatting system.",
      "created_at": "2020-03-20T15:25:42Z",
      "updated_at": "2020-03-20T15:26:54Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "Normally, we try to maintain down level compatibility for remoting and it looks like this is broken.  I think this should be looked into but I probably won't get to it until next week.",
      "created_at": "2020-03-20T16:49:11Z",
      "updated_at": "2020-03-20T16:49:11Z"
    },
    {
      "author": "doctordns",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov - can you point to the formatting mechanism now used? In Windows PowerShell this would have been simple - a single line or two of the XML file would have been needed to fix this in the old days. Where is the equivalent of the XML in PowerShell 7? ",
      "created_at": "2020-03-20T17:16:05Z",
      "updated_at": "2020-03-20T17:16:05Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@doctordns All Formatting system is the same. Only minor changes was made.\r\nI guess you ask about standard XML files like FileSystem_format.ps1xml. All such files was converted to C# code to speed up startup scenario (see  __*ps1xml.cs__ files).",
      "created_at": "2020-03-20T17:28:45Z",
      "updated_at": "2020-03-20T17:28:45Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2020-03-24T12:00:22Z",
      "updated_at": "2020-03-24T12:00:22Z"
    },
    {
      "author": "doctordns",
      "author_association": "COLLABORATOR",
      "body": "I must have missed something - but isn't this a bug?",
      "created_at": "2020-03-24T13:19:52Z",
      "updated_at": "2020-03-24T13:19:52Z"
    },
    {
      "author": "mczerniawski",
      "author_association": "NONE",
      "body": "I think so. And I'm curious why it's autoclosed:)",
      "created_at": "2020-03-24T13:28:03Z",
      "updated_at": "2020-03-24T13:28:03Z"
    },
    {
      "author": "illusive-man",
      "author_association": "NONE",
      "body": "Just wanted to remind about the issue. And in PowerShell 7.1.0-preview.7 no changes to described behavior (same as in #13412).",
      "created_at": "2020-09-10T12:32:14Z",
      "updated_at": "2020-09-10T12:32:14Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Related: #10759",
      "created_at": "2020-09-25T17:17:48Z",
      "updated_at": "2020-09-25T17:17:48Z"
    },
    {
      "author": "danielniccoli",
      "author_association": "NONE",
      "body": "Hope this gets solved soon.",
      "created_at": "2021-06-09T10:37:20Z",
      "updated_at": "2021-06-09T10:37:20Z"
    },
    {
      "author": "dkattan",
      "author_association": "NONE",
      "body": "Hey guys, \r\n\r\nI got to the bottom of this.\r\n\r\nPowerShell 7 is expecting DirectoryInfo objects to include NameString, LengthString, and LastWriteTimeString properties on the XML. Windows PowerShell does not include those properties when serializing, therefore they come in blank.\r\n\r\n![image](https://user-images.githubusercontent.com/1424395/132963489-0e0cf5fc-ec8c-400e-981a-938e50fca0b1.png)\r\n\r\nHow would you feel about modifying the following code to fall back to using the non-String name of the property?\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/dad7a34ee743c81dd96e742ed5516ac782388972/src/System.Management.Automation/FormatAndOutput/common/Utilities/Mshexpression.cs#L184-L185\r\n\r\nPerhaps something like \r\n```c#\r\nx = target.Members[_stringValue];\r\nif(x is null && _stringValue.EndsWith(\"String\"))\r\n{\r\n    var nonStringName = _stringValue.Replace(\"String\", String.Empty);\r\n    x = target.Members[nonStringName]?.Value.ToString();\r\n}\r\n```\r\n\r\n@rjmholt \r\n\r\nThe following code reproduces the problem in PowerShell 7\r\n```powershell\r\nFunction ConvertFrom-CliXml\r\n{\r\n    param($InputString)\r\n    [System.Management.Automation.PSSerializer]::Deserialize($InputString)\r\n}\r\n\r\n\r\n$xml = @'\r\n<Objs Version=\"1.1.0.1\" xmlns=\"http://schemas.microsoft.com/powershell/2004/04\">\r\n  <Obj RefId=\"0\">\r\n    <TN RefId=\"0\">\r\n      <T>System.IO.DirectoryInfo</T>\r\n      <T>System.IO.FileSystemInfo</T>\r\n      <T>System.MarshalByRefObject</T>\r\n      <T>System.Object</T>\r\n    </TN>\r\n    <ToString>.Azure</ToString>\r\n    <Props>\r\n      <S N=\"Name\">.Azure</S>\r\n      <S N=\"FullName\">C:\\Users\\DKattan\\.Azure</S>\r\n      <Obj N=\"Parent\" RefId=\"1\">\r\n        <TNRef RefId=\"0\" />\r\n        <ToString>DKattan</ToString>\r\n        <Props>\r\n          <S N=\"Name\">DKattan</S>\r\n          <S N=\"FullName\">C:\\Users\\DKattan</S>\r\n          <S N=\"Parent\">Users</S>\r\n          <B N=\"Exists\">true</B>\r\n          <S N=\"Root\">C:\\</S>\r\n          <S N=\"Extension\"></S>\r\n          <DT N=\"CreationTime\">2021-05-26T10:01:21.9908836-05:00</DT>\r\n          <DT N=\"CreationTimeUtc\">2021-05-26T15:01:21.9908836Z</DT>\r\n          <DT N=\"LastAccessTime\">2021-09-11T17:26:13.4822802-05:00</DT>\r\n          <DT N=\"LastAccessTimeUtc\">2021-09-11T22:26:13.4822802Z</DT>\r\n          <DT N=\"LastWriteTime\">2021-09-11T17:20:37.9533857-05:00</DT>\r\n          <DT N=\"LastWriteTimeUtc\">2021-09-11T22:20:37.9533857Z</DT>\r\n          <S N=\"Attributes\">Directory</S>\r\n        </Props>\r\n        <MS>\r\n          <S N=\"Mode\">d-----</S>\r\n          <S N=\"BaseName\">DKattan</S>\r\n          <Obj N=\"Target\" RefId=\"2\">\r\n            <TN RefId=\"1\">\r\n              <T>System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]</T>\r\n              <T>System.Object</T>\r\n            </TN>\r\n            <LST />\r\n          </Obj>\r\n          <Nil N=\"LinkType\" />\r\n        </MS>\r\n      </Obj>\r\n      <B N=\"Exists\">true</B>\r\n      <Obj N=\"Root\" RefId=\"3\">\r\n        <TNRef RefId=\"0\" />\r\n        <ToString>C:\\</ToString>\r\n        <Props>\r\n          <S N=\"Name\">C:\\</S>\r\n          <S N=\"FullName\">C:\\</S>\r\n          <Nil N=\"Parent\" />\r\n          <B N=\"Exists\">true</B>\r\n          <S N=\"Root\">C:\\</S>\r\n          <S N=\"Extension\"></S>\r\n          <DT N=\"CreationTime\">2019-12-07T03:03:44.4609777-06:00</DT>\r\n          <DT N=\"CreationTimeUtc\">2019-12-07T09:03:44.4609777Z</DT>\r\n          <DT N=\"LastAccessTime\">2021-09-11T17:26:13.4579316-05:00</DT>\r\n          <DT N=\"LastAccessTimeUtc\">2021-09-11T22:26:13.4579316Z</DT>\r\n          <DT N=\"LastWriteTime\">2021-09-03T20:16:37.4361298-05:00</DT>\r\n          <DT N=\"LastWriteTimeUtc\">2021-09-04T01:16:37.4361298Z</DT>\r\n          <S N=\"Attributes\">Hidden, System, Directory</S>\r\n        </Props>\r\n        <MS>\r\n          <S N=\"Mode\">d--hs-</S>\r\n          <S N=\"BaseName\">C:\\</S>\r\n          <Obj N=\"Target\" RefId=\"4\">\r\n            <TNRef RefId=\"1\" />\r\n            <LST />\r\n          </Obj>\r\n          <Nil N=\"LinkType\" />\r\n        </MS>\r\n      </Obj>\r\n      <S N=\"Extension\">.Azure</S>\r\n      <DT N=\"CreationTime\">2021-08-04T07:40:23.6192722-05:00</DT>\r\n      <DT N=\"CreationTimeUtc\">2021-08-04T12:40:23.6192722Z</DT>\r\n      <DT N=\"LastAccessTime\">2021-09-11T15:21:32.0672114-05:00</DT>\r\n      <DT N=\"LastAccessTimeUtc\">2021-09-11T20:21:32.0672114Z</DT>\r\n      <DT N=\"LastWriteTime\">2021-08-04T07:40:23.844276-05:00</DT>\r\n      <DT N=\"LastWriteTimeUtc\">2021-08-04T12:40:23.844276Z</DT>\r\n      <Obj N=\"Attributes\" RefId=\"5\">\r\n        <TN RefId=\"2\">\r\n          <T>System.IO.FileAttributes</T>\r\n          <T>System.Enum</T>\r\n          <T>System.ValueType</T>\r\n          <T>System.Object</T>\r\n        </TN>\r\n        <ToString>Directory</ToString>\r\n        <I32>16</I32>\r\n      </Obj>\r\n    </Props>\r\n    <MS>\r\n      <S N=\"PSPath\">Microsoft.PowerShell.Core\\FileSystem::C:\\Users\\DKattan\\.Azure</S>\r\n      <S N=\"PSParentPath\">Microsoft.PowerShell.Core\\FileSystem::C:\\Users\\DKattan</S>\r\n      <S N=\"PSChildName\">.Azure</S>\r\n      <Obj N=\"PSDrive\" RefId=\"6\">\r\n        <TN RefId=\"3\">\r\n          <T>System.Management.Automation.PSDriveInfo</T>\r\n          <T>System.Object</T>\r\n        </TN>\r\n        <ToString>C</ToString>\r\n        <Props>\r\n          <S N=\"CurrentLocation\">Users\\DKattan</S>\r\n          <S N=\"Name\">C</S>\r\n          <Obj N=\"Provider\" RefId=\"7\">\r\n            <TN RefId=\"4\">\r\n              <T>System.Management.Automation.ProviderInfo</T>\r\n              <T>System.Object</T>\r\n            </TN>\r\n            <ToString>Microsoft.PowerShell.Core\\FileSystem</ToString>\r\n            <Props>\r\n              <S N=\"ImplementingType\">Microsoft.PowerShell.Commands.FileSystemProvider</S>\r\n              <S N=\"HelpFile\">System.Management.Automation.dll-Help.xml</S>\r\n              <S N=\"Name\">FileSystem</S>\r\n              <S N=\"PSSnapIn\">Microsoft.PowerShell.Core</S>\r\n              <S N=\"ModuleName\">Microsoft.PowerShell.Core</S>\r\n              <Nil N=\"Module\" />\r\n              <S N=\"Description\"></S>\r\n              <S N=\"Capabilities\">Filter, ShouldProcess, Credentials</S>\r\n              <S N=\"Home\">C:\\Users\\DKattan</S>\r\n              <Obj N=\"Drives\" RefId=\"8\">\r\n                <TN RefId=\"5\">\r\n                  <T>System.Collections.ObjectModel.Collection`1[[System.Management.Automation.PSDriveInfo, System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35]]</T>\r\n                  <T>System.Object</T>\r\n                </TN>\r\n                <LST>\r\n                  <Ref RefId=\"6\" />\r\n                  <S>D</S>\r\n                  <S>E</S>\r\n                </LST>\r\n              </Obj>\r\n            </Props>\r\n          </Obj>\r\n          <S N=\"Root\">C:\\</S>\r\n          <S N=\"Description\"></S>\r\n          <Nil N=\"MaximumSize\" />\r\n          <Obj N=\"Credential\" RefId=\"9\">\r\n            <TN RefId=\"6\">\r\n              <T>System.Management.Automation.PSCredential</T>\r\n              <T>System.Object</T>\r\n            </TN>\r\n            <ToString>System.Management.Automation.PSCredential</ToString>\r\n            <Props>\r\n              <Nil N=\"UserName\" />\r\n              <Nil N=\"Password\" />\r\n            </Props>\r\n          </Obj>\r\n          <Nil N=\"DisplayRoot\" />\r\n        </Props>\r\n        <MS>\r\n          <U64 N=\"Used\">463848312832</U64>\r\n          <U64 N=\"Free\">35528298496</U64>\r\n        </MS>\r\n      </Obj>\r\n      <Ref N=\"PSProvider\" RefId=\"7\" />\r\n      <B N=\"PSIsContainer\">true</B>\r\n      <S N=\"Mode\">d-----</S>\r\n      <S N=\"BaseName\">.Azure</S>\r\n      <Obj N=\"Target\" RefId=\"10\">\r\n        <TNRef RefId=\"1\" />\r\n        <LST />\r\n      </Obj>\r\n      <Nil N=\"LinkType\" />\r\n    </MS>\r\n  </Obj>\r\n</Objs>\r\n'@\r\nConvertFrom-CliXml $xml\r\n\r\n```\r\n\r\n",
      "created_at": "2021-09-11T22:55:26Z",
      "updated_at": "2021-09-11T22:55:26Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> Perhaps something like\r\n> \r\n> ```cs\r\n> x = target.Members[_stringValue];\r\n> if(x is null && _stringValue.EndsWith(\"String\"))\r\n> {\r\n>     var nonStringName = _stringValue.Replace(\"String\", String.Empty);\r\n>     x = target.Members[nonStringName]?.Value.ToString();\r\n> }\r\n> ```\r\n\r\nWe could avoid allocations with switch expression:\r\n```c#\r\nvar propertyName =  _stringValue switch\r\n{\r\n    \"NameString\"               => \"Name\",\r\n    \"LengthString\"             => \"Length\",\r\n    \"LastWriteTimeString\" => \"LastWriteTime\",\r\n    _ => string.Empty\r\n}\r\n```",
      "created_at": "2021-09-13T04:39:21Z",
      "updated_at": "2021-09-13T04:39:21Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "@dkattan  Thanks for tracking this down!\r\nIt looks like this new property was added sometime in PowerShell 6 and the format view was updated to support it.\r\nAnd this breaks FileSystemInfo objects formatting from earlier versions of PowerShell over the remoting layer since the new property(s) are not supported.\r\n\r\nBut I don't think this is the right way to fix the problem.  Instead, I believe the FileSystem_format_ps1xml.cs file should be updated to fall back to the old properties if the new ones don't exist.",
      "created_at": "2021-09-13T17:17:53Z",
      "updated_at": "2021-09-13T17:17:53Z"
    },
    {
      "author": "dkattan",
      "author_association": "NONE",
      "body": "> @dkattan Thanks for tracking this down!\r\n> It looks like this new property was added sometime in PowerShell 6 and the format view was updated to support it.\r\n> And this breaks FileSystemInfo objects formatting from earlier versions of PowerShell over the remoting layer since the new property(s) are not supported.\r\n> \r\n> But I don't think this is the right way to fix the problem. Instead, I believe the FileSystem_format_ps1xml.cs file should be updated to fall back to the old properties if the new ones don't exist.\r\n\r\nThe best way to get the right answer is to post the wrong one lol. I agree upon further inspect that makes the most sense. Do we know why those new properties were added in the first place? Can we simply remove them?",
      "created_at": "2021-09-13T18:05:37Z",
      "updated_at": "2021-09-13T18:05:37Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "I believe these new properties were added to solve cross platform issues with date/time information.  We don't want to remove them and I don't think we need to.  It is the change in the FileSystem format file that caused the regression over remoting, and we can fix the problem there.",
      "created_at": "2021-09-13T18:22:04Z",
      "updated_at": "2021-09-13T18:22:04Z"
    },
    {
      "author": "dkattan",
      "author_association": "NONE",
      "body": "> I believe these new properties were added to solve cross platform issues with date/time information. We don't want to remove them and I don't think we need to. It is the change in the FileSystem format file that caused the regression over remoting, and we can fix the problem there.\r\n\r\nI'm not sure if this is for cross platform compatibility. Perhaps that was the original intent but this problem doesn't occur when formatted as a List. If you look in  FileSystem_format_ps1xml.cs you can clearly see that the List format still uses the original non -String names, and it works as expected in both scenarios.\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/55ccbb6803162965eead3a08aace37f11ea7630b/src/System.Management.Automation/FormatAndOutput/DefaultFormatters/FileSystem_format_ps1xml.cs#L95-L118\r\n\r\n\r\n\r\n",
      "created_at": "2021-09-14T12:39:58Z",
      "updated_at": "2021-09-14T12:39:58Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Dupe of https://github.com/PowerShell/PowerShell/issues/10759",
      "created_at": "2021-09-15T22:38:31Z",
      "updated_at": "2021-09-15T22:38:31Z"
    },
    {
      "author": "colinblaise",
      "author_association": "NONE",
      "body": "Seems like this issue lost some traction. \r\n\r\nCould this be the offending code that needs updating?\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/55ccbb6803162965eead3a08aace37f11ea7630b/src/System.Management.Automation/FormatAndOutput/DefaultFormatters/FileSystem_format_ps1xml.cs#L45-L92",
      "created_at": "2022-01-19T20:15:10Z",
      "updated_at": "2022-01-19T20:15:10Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@colinblaise You reference Unix code but the issue is only with connecting to Windows PowerShell endpoint from pwsh.",
      "created_at": "2022-01-20T04:47:07Z",
      "updated_at": "2022-01-20T04:47:07Z"
    },
    {
      "author": "dkattan",
      "author_association": "NONE",
      "body": "> @colinblaise You reference Unix code but the issue is only with connecting to Windows PowerShell endpoint from pwsh.\r\n\r\nYes, the problem is that at some point the table formatter in pwsh was changed to pull Name from NameString.\r\n\r\npwsh serializes Name into both Name and NameString.\r\n\r\nWindows PowerShell serializes Name into Name therefore the table formatter in pwsh doesn\u2019t have NameString.\r\n\r\nI truly believe the whole \u201cNameString\u201d concept was never fully baked and we can simply revert the table formatter for this object to read from Name just like the List formatter does.",
      "created_at": "2022-01-20T05:15:07Z",
      "updated_at": "2022-01-20T05:15:07Z"
    },
    {
      "author": "dkattan",
      "author_association": "NONE",
      "body": "I guess my point is, if NameString is such a big deal, why doesn\u2019t Format-List use it?",
      "created_at": "2022-01-20T05:17:09Z",
      "updated_at": "2022-01-20T05:17:09Z"
    }
  ],
  "created_at": "2019-12-18T20:00:23Z",
  "number": 11400,
  "state": "closed",
  "title": "Powershell 7: Get-ChildItem in Invoke-Command script block comes back with blank items",
  "updated_at": "2022-01-20T05:17:09Z"
}