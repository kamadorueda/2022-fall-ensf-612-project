{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10673",
  "author": "mklement0",
  "body": "Update: This proposal [has been approved](https://github.com/PowerShell/PowerShell/issues/10673#issuecomment-540229636) - the remaining work is summarized in [this comment](https://github.com/PowerShell/PowerShell/issues/10673#issuecomment-540349744).\r\n\r\n---\r\n\r\nIdeally, we'd have a _consistent_ experience across _all_ background-/thread-job related features, meaning that all of the following should exhibit the same behavior with respect to the current location that the script block being passed sees (by default: \r\n\r\n   * (a) `Start-Job`\r\n   * (b) `Start-ThreadJob`\r\n   * (c) postpositional `&`  to start a job (implicit `Start-Job`)\r\n   * (d) `ForEach-Object -Parallel`\r\n\r\nThe most sensible location to use is the _caller's_ current location, which (c) already uses and (d) will, once #10672 is merged.\r\n\r\n**The proposal is to make (a) and (b) behave like (c) and (d) for overall consistency and use of a sensible default**:\r\n\r\n(b) (`Start-ThreadJob`) was _meant_ to be modeled after `Start-Job`'s example, but currently isn't: it uses the - virtually unpredictable from a user's perspective - process-wide working directory; given that, it shouldn't be too late to change it - see https://github.com/PaulHigin/PSThreadJob/issues/46\r\n\r\n(a) (`Start-Job`) regrettably has always defaulted to `$HOME` (the filesystem provider's home location).\r\n \r\nThe question now is:\r\n\r\n**Can we consider `Start-Job`'s default-to-`$HOME` behavior a bug / something worth fixing as a  [Bucket 3: Unlikely Grey Area](https://github.com/PowerShell/PowerShell/blob/master/docs/dev-process/breaking-change-contract.md#bucket-3-unlikely-grey-area) change?**\r\n\r\nI'm certainly personally in favor of that, but I haven't looked into how likely it is that existing `Start-Job` code relies on `$HOME` to be the default directory.\r\n\r\n@iSazonov's take (from his comment at https://github.com/PowerShell/PowerShell/issues/10537#issuecomment-536199173):\r\n\r\n> I suggest to consider `Start-Job` case as _bug_.\r\nIf my work folder is `c:\\work` and I run a job which switched to `$home` that is `c:\\users\\isazonov` - the last place is the worst place where user would like to see a resulting file. We could guess that user would use relative path to `Documents` folder. But most likely when faced with this inconsistency, the user will use the exact path to the working directory (`c:\\work`), especially since the job is perceived as some kind of background process.\r\n",
  "closed_at": "2019-12-12T00:00:07Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "/cc @SteveL-MSFT Need PowerShell Committee conclusion.",
      "created_at": "2019-10-02T03:54:24Z",
      "updated_at": "2019-10-02T03:54:24Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee discussed this, we agree that each of these should standardize on using the current working directory as the working directory.  `Start-Job` is already inconsistent with itself in that Linux/macOS starts in user's home directory, but on Windows it starts in user's Documents folder.  We agree to accept a breaking change to always start in the filesystem current working directory where the cmdlet/operator is used for all of the scenarios.",
      "created_at": "2019-10-09T22:20:27Z",
      "updated_at": "2019-10-09T22:20:27Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@mklement0 Please update the issue description with current status - what is left to fix after last commits? May be add links to PRs.",
      "created_at": "2019-10-10T04:22:59Z",
      "updated_at": "2019-10-10T04:23:41Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov the background operator `&` already uses current working directory, [foreach-object -parallel](https://github.com/PowerShell/PowerShell/pull/10672) was fixed recently, start-threadjob has https://github.com/PaulHigin/PSThreadJob/issues/46 opened and @PaulHigin can make that fix and we can include that version in PS7.  I believe just `Start-Job` needs a fix.",
      "created_at": "2019-10-10T04:29:02Z",
      "updated_at": "2019-10-10T04:29:02Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT Yes. The issue has PowerShell Committee conclusion and I'd want to see all (problems and solutions) in the OP for clear history because it is a breaking change.",
      "created_at": "2019-10-10T04:36:33Z",
      "updated_at": "2019-10-10T04:36:33Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "I've updated the OP with a note at the top that points to the approval comment and to Steve's follow-up comment summarizing the remaining work needed.",
      "created_at": "2019-10-10T13:31:22Z",
      "updated_at": "2019-10-10T13:31:22Z"
    },
    {
      "author": "MathiasMagnus",
      "author_association": "NONE",
      "body": "I'd consider `ForEach-Object -Parallel` to be special in the sense that it's not a breaking change, since it's only a preview feature. This was the case I hit where my code was using old-school `ForEach-Object` and moving to the parallel version broke because executables were not found by the script. In this sense, not applying the caller's cwd _is_ the breaking part.",
      "created_at": "2019-10-23T08:55:08Z",
      "updated_at": "2019-10-23T08:55:08Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "@MathiasMagnus \r\nThis has already been fixed for ForEach-Object -Parallel (#10672)",
      "created_at": "2019-10-23T15:15:46Z",
      "updated_at": "2019-10-23T15:15:46Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@MathiasMagnus: Also note that it will be fixed for `Start-Job` and `Start-ThreadJob` as well (despite being technically breaking changes).\r\n",
      "created_at": "2019-10-23T15:33:52Z",
      "updated_at": "2019-10-23T15:33:52Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as fixed and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2019-12-12T00:00:06Z",
      "updated_at": "2019-12-12T00:00:06Z"
    }
  ],
  "created_at": "2019-10-01T21:20:38Z",
  "labels": [
    "Issue-Meta",
    "Resolution-Fixed",
    "Breaking-Change",
    "Committee-Reviewed"
  ],
  "number": 10673,
  "state": "closed",
  "title": "Make the current location for script blocks executing in background/thread jobs default to the caller's in all scenarios",
  "updated_at": "2019-12-12T00:00:08Z"
}