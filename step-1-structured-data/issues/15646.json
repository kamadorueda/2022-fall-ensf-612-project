{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15646",
  "author": "nickkimbrough",
  "body": "# PR Summary\r\nThis commit is related to #15474. It improves the performance of the\r\nAssignColumnWidths function in ColumnWidthManager.cs when very large\r\nmaximum widths are set. It accomplishes this by doing some math with\r\ndivision and remainders to figure out the amounts instead of incrementing\r\nby one each time.\r\n\r\nWhile it does not resolve the primary issue raised in #15474, the\r\nperformance increase should open the way for more work to be done.\r\n\r\nThe performance improvements with the refactor are as follows:\r\n\r\n|                    Method |       Mean |      Error |     StdDev |     Median | Ratio | RatioSD |\r\n|-------------------------- |-----------:|-----------:|-----------:|-----------:|------:|--------:|\r\n|            BeforeRefactor | 340.000 ns | 21.3756 ns | 59.5866 ns | 300.000 ns | 56.55 |    8.05 |\r\n|    RefactorWithAssignment |   5.980 ns |  0.1370 ns |  0.1144 ns |   5.992 ns |  1.00 |    0.00 |\r\n| RefactorWithoutAssignment |   5.021 ns |  0.0300 ns |  0.0266 ns |   5.023 ns |  0.84 |    0.02 |\r\n\r\n## PR Context\r\n\r\nI have opened this PR to assist with #15474 and help fix the performance\r\nissues that were pointed out there.\r\n\r\n## PR Checklist\r\n\r\n- [X] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [X] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [X] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [X] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [X] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [X] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and opened an issue in the relevant tool repository. This may include:\r\n        - [ ] Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode\r\n        (which runs in a different PS Host).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n",
  "closed_at": "2022-08-29T06:01:22Z",
  "comments": [
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT do we have existing testing for the formatting that we can rely on to catch a regression here? I don't see much [here](https://github.com/PowerShell/PowerShell/tree/master/test/powershell/engine/Formatting).",
      "created_at": "2021-06-24T19:30:11Z",
      "updated_at": "2021-06-24T19:30:11Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> It would be nice to add new tests to cover the code.\r\n\r\nI think we need follow conditions and  tests:\r\n1. Sum of all field lengths < Console width\r\n2. Last field is out of  Console width\r\n3. Two last fields is out of  Console width\r\n\r\nTest cases (f - fixed, v - non-fixed field):\r\n```\r\nf\r\nfff\r\nv\r\nfv\r\nvf\r\nfffv\r\nfffvv\r\nvvvfff\r\n```\r\n\r\nThere is only one test for AutoSize in Format-Table.Tests.ps1 :-(\r\n",
      "created_at": "2021-07-02T04:10:53Z",
      "updated_at": "2021-07-02T04:10:53Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2021-07-09T14:00:46Z",
      "updated_at": "2021-07-09T14:00:46Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@nickkimbrough Please look failed tests.",
      "created_at": "2021-07-12T09:21:35Z",
      "updated_at": "2021-07-12T09:21:35Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2021-07-19T14:00:45Z",
      "updated_at": "2021-07-19T14:00:45Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "/rebase",
      "created_at": "2021-07-29T04:22:33Z",
      "updated_at": "2021-07-29T04:22:33Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2021-08-05T14:00:50Z",
      "updated_at": "2021-08-05T14:00:50Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2021-11-10T02:00:46Z",
      "updated_at": "2021-11-10T02:00:46Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@nickkimbrough Please look failed tests.",
      "created_at": "2021-11-10T05:33:46Z",
      "updated_at": "2021-11-10T05:33:46Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2021-11-19T02:01:05Z",
      "updated_at": "2021-11-19T02:01:05Z"
    },
    {
      "author": "nickkimbrough",
      "author_association": "NONE",
      "body": "I have tried to reproduce these pipeline test failures locally and have not been able to. I tried building a Ubuntu 16.04 Docker container as that is what the [build documentation for linux](https://github.com/PowerShell/PowerShell/blob/master/docs/building/linux.md) says to use. When I run just that test, it passes, but others fail. I think there is an issue with my environment. Here is my Docker file:\r\n\r\n```Dockerfile\r\nFROM ubuntu:16.04\r\nRUN apt update\r\nRUN apt install -y git\r\nRUN apt install -y apt-transport-https\r\nRUN apt install -y sudo\r\nRUN apt install -y wget\r\nWORKDIR /usr/src\r\nADD \"https://api.github.com/repos/nickkimbrough/Powershell/git/refs\" skipcache\r\nRUN git clone https://github.com/nickkimbrough/PowerShell.git\r\nWORKDIR PowerShell/\r\nRUN git checkout nick-15474\r\nRUN ./tools/install-powershell.sh\r\n```\r\n\r\nIs there an example Docker file out there somewhere that would assist me with running the unit tests locally?",
      "created_at": "2021-11-28T17:44:18Z",
      "updated_at": "2021-11-28T17:44:18Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@nickkimbrough I guess `[console]::WindowWidth` is 0 in our CI environment. You could add a test Should to confirm the fact. If it is true we can skip the test if `[console]::WindowWidth == 0`.",
      "created_at": "2021-11-29T03:32:52Z",
      "updated_at": "2021-11-29T03:32:52Z"
    },
    {
      "author": "nickkimbrough",
      "author_association": "NONE",
      "body": "@iSazonov , that appears to have been the issue, thanks for the help there. I believe with that the tests are all passing and this PR is ready for the next step.",
      "created_at": "2021-11-29T05:19:48Z",
      "updated_at": "2021-11-29T05:19:48Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2021-12-07T02:00:43Z",
      "updated_at": "2021-12-07T02:00:43Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I believe it is useful PR.",
      "created_at": "2022-01-27T05:17:28Z",
      "updated_at": "2022-01-27T05:17:28Z"
    },
    {
      "author": "pull-request-quantifier[bot]",
      "author_association": "NONE",
      "body": "### ![](https://img.shields.io/static/v1?label=Quantified&message=Small&color=green)\r\n\r\nThis PR has `82` quantified lines of changes. In general, a change size of upto `200` lines is ideal for the best PR experience!\r\n\r\n------\r\n\r\n<details >\r\n    <summary display=\"inline\"> <strong>Quantification details</strong></summary>\r\n    <p />\r\n\r\n```\r\nLabel      : Small\r\nSize       : +73 -9\r\nPercentile : 32.8%\r\n\r\nTotal files changed: 2\r\n\r\nChange summary by file extension:\r\n.cs : +11 -9\r\n.ps1 : +62 -0\r\n```\r\n> Change counts above are quantified counts, based on the [PullRequestQuantifier customizations](https://github.com/microsoft/PullRequestQuantifier/blob/main/docs/prquantifier-yaml.md).\r\n    \r\n</details>\r\n\r\n\r\n<details>\r\n    <summary display=\"inline\"> <strong>Why proper sizing of changes matters</strong> </summary>\r\n    <p/>\r\n    <p/>\r\n\r\nOptimal pull request sizes drive a better predictable PR flow as they strike a\r\nbalance between between PR complexity and PR review overhead. PRs within the\r\noptimal size (typical small, or medium sized PRs) mean:\r\n\r\n- Fast and predictable releases to production:\r\n  - Optimal size changes are more likely to be reviewed faster with fewer\r\niterations.\r\n  - Similarity in low PR complexity drives similar review times.\r\n- Review quality is likely higher as complexity is lower:\r\n  - Bugs are more likely to be detected.\r\n  - Code inconsistencies are more likely to be detetcted.\r\n- Knowledge sharing is improved within the participants:\r\n  - Small portions can be assimilated better.\r\n- Better engineering practices are exercised:\r\n  - Solving big problems by dividing them in well contained, smaller problems.\r\n  - Exercising separation of concerns within the code changes.\r\n\r\n#### What can I do to optimize my changes\r\n\r\n- Use the PullRequestQuantifier to quantify your PR accurately\r\n  - Create a context profile for your repo using the [context generator](https://github.com/microsoft/PullRequestQuantifier/releases)\r\n  - Exclude files that are not necessary to be reviewed or do not increase the review complexity. Example: Autogenerated code, docs, project IDE setting files, binaries, etc. Check out the `Excluded` section from your `prquantifier.yaml` context profile. \r\n  - Understand your typical change complexity, drive towards the desired complexity by adjusting the label mapping in your `prquantifier.yaml` context profile.\r\n  - Only use the labels that matter to you, [see context specification](./docs/prquantifier-yaml.md) to customize your `prquantifier.yaml` context profile.\r\n- Change your engineering behaviors\r\n  - For PRs that fall outside of the desired spectrum, review the details and check if:\r\n    - Your PR could be split in smaller, self-contained PRs instead\r\n    - Your PR only solves one particular issue. (For example, don't refactor and code new features in the same PR).\r\n\r\n#### How to interpret the change counts in git diff output\r\n\r\n- One line was added: `+1 -0`\r\n- One line was deleted: `+0 -1`\r\n- One line was modified: `+1 -1` (git diff doesn't know about modified, it will\r\ninterpret that line like one addition plus one deletion)\r\n- Change percentiles: Change characteristics (addition, deletion, modification)\r\nof this PR in relation to all other PRs within the repository.\r\n\r\n</details>\r\n\r\n<p />\r\n\r\n------\r\n\r\nWas this comment helpful? <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoibmlja2tpbWJyb3VnaCIsIlJlcG9zaXRvcnlMaW5rIjoiaHR0cHM6Ly9naXRodWIuY29tL1Bvd2VyU2hlbGwvUG93ZXJTaGVsbCIsIlB1bGxSZXF1ZXN0TGluayI6Imh0dHBzOi8vZ2l0aHViLmNvbS9Qb3dlclNoZWxsL1Bvd2VyU2hlbGwvcHVsbC8xNTY0NiIsIkV2ZW50VHlwZSI6IlRodW1ic1VwIn0=&amp;anonymous=True\" target=\"_blank\" title=\"Thumbs up\"><strong>:thumbsup:</strong></a> <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoibmlja2tpbWJyb3VnaCIsIlJlcG9zaXRvcnlMaW5rIjoiaHR0cHM6Ly9naXRodWIuY29tL1Bvd2VyU2hlbGwvUG93ZXJTaGVsbCIsIlB1bGxSZXF1ZXN0TGluayI6Imh0dHBzOi8vZ2l0aHViLmNvbS9Qb3dlclNoZWxsL1Bvd2VyU2hlbGwvcHVsbC8xNTY0NiIsIkV2ZW50VHlwZSI6Ik5ldXRyYWwifQ==&amp;anonymous=True\" target=\"_blank\" title=\"Neutral\"><strong>&nbsp;:ok_hand:</strong></a> <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoibmlja2tpbWJyb3VnaCIsIlJlcG9zaXRvcnlMaW5rIjoiaHR0cHM6Ly9naXRodWIuY29tL1Bvd2VyU2hlbGwvUG93ZXJTaGVsbCIsIlB1bGxSZXF1ZXN0TGluayI6Imh0dHBzOi8vZ2l0aHViLmNvbS9Qb3dlclNoZWxsL1Bvd2VyU2hlbGwvcHVsbC8xNTY0NiIsIkV2ZW50VHlwZSI6IlRodW1ic0Rvd24ifQ==&amp;anonymous=True\" target=\"_blank\" title=\"Thumbs down\"><strong>&nbsp;:thumbsdown:</strong></a> (<a href=\"MAILTO:prquantifier@microsoft.com\" title=\"Mail to prquantifier@microsoft.com\">Email</a>)\r\n[Customize PullRequestQuantifier](https://github.com/PowerShell/PowerShell/blob/master/.github/prquantifier.yaml) for this repository.\r\n\r\n",
      "created_at": "2022-01-27T05:17:34Z",
      "updated_at": "2022-01-27T05:17:34Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2022-02-03T14:00:51Z",
      "updated_at": "2022-02-03T14:00:51Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as stale because it has been marked as requiring author feedback but has not had any activity for **15 days**. It will be closed if no further activity occurs **within 10 days of this comment**.",
      "created_at": "2022-08-18T20:01:17Z",
      "updated_at": "2022-08-18T20:01:17Z"
    }
  ],
  "created_at": "2021-06-23T05:12:34Z",
  "number": 15646,
  "state": "closed",
  "title": "AssignColumnWidths: Increase Performance With Large Max Widths",
  "updated_at": "2022-08-29T06:01:22Z"
}