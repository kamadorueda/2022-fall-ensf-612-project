{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15140",
  "author": "xtqqczze",
  "body": "# PR Summary\r\n\r\n<!-- Summarize your PR between here and the checklist. -->\r\n\r\n## PR Context\r\n\r\nhttps://docs.microsoft.com/dotnet/api/system.collections.generic.list-1.convertall\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [NA] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [NA] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [NA] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [NA] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [NA] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [NA] I have considered the user experience from a tooling perspective and opened an issue in the relevant tool repository. This may include:\r\n        - [NA] Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode\r\n        (which runs in a different PS Host).\r\n            - [NA] Issue filed: <!-- Number/link of that issue here -->\r\n        - [NA] Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n            - [NA] Issue filed: <!-- Number/link of that issue here -->\r\n        - [NA] Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n            - [NA] Issue filed: <!-- Number/link of that issue here -->\r\n        - [NA] Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n            - [NA] Issue filed: <!-- Number/link of that issue here -->\r\n",
  "closed_at": "2021-04-27T21:17:12Z",
  "comments": [
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "Do we have performance results before and after for this?\r\n\r\ncc @daxian-dbw ",
      "created_at": "2021-04-08T17:29:13Z",
      "updated_at": "2021-04-08T17:29:13Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "@TravisEz13 In general, there's not a large performance difference between the two approaches. \r\n\r\nUsing `ConvertAll` does avoid an IEnumerable allocation and means we can remove the `using System.Linq`.\r\n\r\n```csharp\r\n    private List<int> list = Enumerable.Repeat(10, 10).ToList();\r\n    public List<string> Linq()\r\n    {\r\n        return list.Select(t => t.ToString()).ToList();\r\n    }\r\n    public List<string> ConvertAll()\r\n    {\r\n        return list.ConvertAll(t => t.ToString());\r\n    }\r\n```\r\n\r\nhttps://gist.github.com/xtqqczze/22cfeb3eb34e4ca21f4af87adf4956a5\r\n\r\n```\r\n|   Method  |     Mean |   Error |   StdDev |  Gen 0 | Gen 1 | Gen 2 | Allocated | Code Size |\r\n|---------- |---------:|--------:|---------:|-------:|------:|------:|----------:|----------:|\r\n|      Linq | 352.1 ns | 8.89 ns | 25.93 ns | 0.1259 |     - |     - |     528 B |    1313 B |\r\n|ConvertAll | 295.1 ns | 9.09 ns | 26.66 ns | 0.1087 |     - |     - |     456 B |     353 B |\r\n```\n\n<blockquote><img src=\"https://github.githubassets.com/images/modules/gists/gist-og-image.png\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> Gist</div><div><strong><a href=\"https://gist.github.com/xtqqczze/22cfeb3eb34e4ca21f4af87adf4956a5\">ConvertAllBenchmark</a></strong></div><div>ConvertAllBenchmark. GitHub Gist: instantly share code, notes, and snippets.</div></blockquote>",
      "created_at": "2021-04-09T12:40:23Z",
      "updated_at": "2021-04-09T12:40:25Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "Format working group can you review the change?",
      "created_at": "2021-04-10T16:23:08Z",
      "updated_at": "2021-04-10T16:24:36Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I wonder why do you fix only one place? I found some more with `.Select(` pattern.",
      "created_at": "2021-04-16T13:25:14Z",
      "updated_at": "2021-04-16T13:25:14Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "> I wonder why do you fix only one place? I found some more with `.Select(` pattern.\r\n\r\nThe analyzer I used only found 1 instance of the pattern: `list.Select(d).ToList()`.\r\n\r\nAll the other locations seem to be `ienumerable.Select(d).ToList()`.",
      "created_at": "2021-04-16T13:55:47Z",
      "updated_at": "2021-04-16T13:55:47Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> The analyzer I used \r\n\r\nOk :-)",
      "created_at": "2021-04-16T15:49:05Z",
      "updated_at": "2021-04-16T15:49:05Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "> > The analyzer I used\r\n> \r\n\r\n[RCS1077](https://github.com/JosefPihrt/Roslynator/blob/master/docs/analyzers/RCS1077.md)",
      "created_at": "2021-04-16T16:32:32Z",
      "updated_at": "2021-04-16T16:32:32Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> > > The analyzer I used\r\n> \r\n> [RCS1077](https://github.com/JosefPihrt/Roslynator/blob/master/docs/analyzers/RCS1077.md)\r\n\r\nIt seems it does not cover array.",
      "created_at": "2021-04-16T16:37:58Z",
      "updated_at": "2021-04-16T16:37:58Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2021-04-24T02:00:09Z",
      "updated_at": "2021-04-24T02:00:09Z"
    },
    {
      "author": "anmenaga",
      "author_association": "CONTRIBUTOR",
      "body": "Maintainers reviewed and agreed to merge this.",
      "created_at": "2021-04-27T21:16:44Z",
      "updated_at": "2021-04-27T21:16:44Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.2.0-preview.6` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.2.0-preview.6)\n",
      "created_at": "2021-05-27T17:33:14Z",
      "updated_at": "2021-05-27T17:33:14Z"
    }
  ],
  "created_at": "2021-04-02T07:19:59Z",
  "number": 15140,
  "state": "closed",
  "title": "Use `List.ConvertAll` instead of LINQ",
  "updated_at": "2021-05-27T17:33:14Z"
}