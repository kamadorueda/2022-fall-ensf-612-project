{
  "_url": "https://github.com/PowerShell/PowerShell/issues/17199",
  "author": "mklement0",
  "body": "### Prerequisites\n\n- [X] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\n\n### Steps to reproduce\n\nPassing a bareword argument to a parameter that isn't type-constrained is parsed as a number if it looks like one.\r\n\r\nThe resulting value self-identifies _as a number_ and _mostly_ acts as such, but it is wrapped in an invisible `[psobject]` instance in which the original string representation is cached.\r\n\r\nIn the context of `-f`, this string representation surfaces unexpectedly, meaning that the value is unexpectedly not treated as a number:\r\n\r\n```powershell\r\n& { param($p) $p.GetType().FullName; '{0:N2}' -f $p } 0x1a\r\n```\r\n\n\n### Expected behavior\n\n```console\nSystem.Int32\r\n26.00\n```\n\n\n### Actual behavior\n\n```console\nSystem.Int32\r\n0x1a\n```\n\n\n### Error details\n\n_No response_\n\n### Environment data\n\n```powershell\nPowerShell Core 7.3.0-preview.3\n```\n\n\n### Visuals\n\n_No response_",
  "closed_at": "2022-04-30T09:00:43Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "WG-Engine discussed this today, and the consensus is that this is by design. It may be a little unintuitive that the value behaves like multiple types depending on how it's used, but this is necessary to avoid overcomplicating the command syntax and allowing bare strings that look like numbers to be entered, without losing their original representation if that is desirable.\r\n\r\nThe fix for this is to cast the value to the type you want to treat it as (for example `[int]` in this instance) either in the `param` block or immediately before using it.\r\n\r\nIf we were to remove this behaviour, there would be no way to get it back for the cases that _do_ find this desirable, so our conclusion was that it would be much riskier to change the behaviour than leave it as-is.",
      "created_at": "2022-04-28T21:38:23Z",
      "updated_at": "2022-04-28T21:38:23Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@vexx32, there is no need to remove the behavior as such, which is indeed generally useful; the only fix that is needed is to make `-f` not pay attention to the cached string representation and to instead use the type that the operand self-reports as.",
      "created_at": "2022-04-28T21:43:29Z",
      "updated_at": "2022-04-28T21:46:47Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as by-design and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2022-04-30T09:00:42Z",
      "updated_at": "2022-04-30T09:00:42Z"
    }
  ],
  "created_at": "2022-04-26T19:58:33Z",
  "labels": [
    "Resolution-By Design",
    "WG-Engine-ParameterBinder"
  ],
  "number": 17199,
  "state": "closed",
  "title": "A \"hybrid\" bareword command argument that is parsed as a number unexpectedly behaves like a string with -f (format operator)",
  "updated_at": "2022-04-30T09:00:43Z"
}