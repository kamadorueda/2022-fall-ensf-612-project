{
  "_url": "https://github.com/PowerShell/PowerShell/issues/16521",
  "author": "AaronLayton",
  "body": "### Prerequisites\r\n\r\n- [X] Write a descriptive title.\r\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- [X] Search the existing issues.\r\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\r\n\r\n### Steps to reproduce\r\n\r\nI have Windows Terminal 1.11.2921.0 installed and Powershell 7.2.0 installed.\r\nI have just done a fresh install of NodeJS 16.13.0 and then close all terminal windows.\r\n\r\nOpen up Powershell 7 (which is set as the default for Win Terminal and try\r\n`node -v` \r\n\r\nit says node is not installed even after I try and force a `refreshenv`\r\n\r\n### Expected behavior\r\n\r\n```console\r\nExpected output\r\n\r\n\r\nC:\\Users\\aaron>node -v\r\nv16.13.0\r\n```\r\n\r\n\r\n### Actual behavior\r\n\r\n```console\r\nnode -v\r\nnode: The term 'node' is not recognized as a name of a cmdlet, function, script file, or executable program.\r\nCheck the spelling of the name, or if a path was included, verify that the path is correct and try again.\r\n```\r\n\r\n\r\n### Error details\r\n\r\n_No response_\r\n\r\n### Environment data\r\n\r\n```powershell\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.0\r\nPSEdition                      Core\r\nGitCommitId                    7.2.0\r\nOS                             Microsoft Windows 10.0.22000\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\n\r\n### Visuals\r\n\r\n\r\nhttps://user-images.githubusercontent.com/694964/143571362-c5edef5b-569a-4b0c-b277-5c1395e0b015.mp4\r\n\r\n\r\n### Edit\r\n\r\nsee https://github.com/PowerShell/PowerShell/issues/16521#issuecomment-980323610 as I expect this may be a Windows Terminal issue\r\n\r\n**Asking here if there is a built in way to refresh the environment variables for the current session**",
  "closed_at": "2021-11-28T19:00:38Z",
  "comments": [
    {
      "author": "jborean93",
      "author_association": "COLLABORATOR",
      "body": "If refreshenv is a batch file it\u2019s going to spawn a new cmd process and refresh the env vars in that process. This works for cmd as it runs it in process and thus updates the env vars for cmd. This is not the same for powershell or pwsh as it\u2019s run in a separate process. You would need a powershell script that replicates refreshenv but in powershell itself.",
      "created_at": "2021-11-26T11:32:45Z",
      "updated_at": "2021-11-26T11:32:45Z"
    },
    {
      "author": "AaronLayton",
      "author_association": "NONE",
      "body": "Thanks for the fast response @jborean93 \r\n\r\nLooking into it `refreshenv` is a script that is installed with [Choco](https://chocolatey.org/). Your explanation sounds fine for the `refreshenv` script, but if I quit Terminal / Powershell, shouldn't it then be loading up the new Env anyway?",
      "created_at": "2021-11-26T11:37:01Z",
      "updated_at": "2021-11-26T11:37:14Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "You could open GUI for editing of environment variables and check if they was updated.",
      "created_at": "2021-11-26T16:50:01Z",
      "updated_at": "2021-11-26T16:50:01Z"
    },
    {
      "author": "AaronLayton",
      "author_association": "NONE",
      "body": "@iSazonov yup I can open the Windows GUI and check they have definitely updated.\r\n\r\nI have been playing around with this and I am loading up Powershell through Windows Terminal and I don't think that program is closing fully. If I manually end the Windows Terminal tasks and then re-open then I get the updated env variables.\r\n\r\nI am going to link the Windows Terminal Issue I created and update this description here to ask \"Is there a way to refresh the env variables in the current session\" and if not can we add one?\r\n\r\nhttps://github.com/microsoft/terminal/issues/11829",
      "created_at": "2021-11-26T19:15:33Z",
      "updated_at": "2021-11-26T19:15:33Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as external and has not had any activity for **1 day**. It has been be closed for housekeeping purposes.",
      "created_at": "2021-11-28T19:00:37Z",
      "updated_at": "2021-11-28T19:00:37Z"
    },
    {
      "author": "jborean93",
      "author_association": "COLLABORATOR",
      "body": "> \"Is there a way to refresh the env variables in the current session\" and if not can we add one?\r\n\r\nYes you can enumerate the registry keys that store the env vars and use `Set-Item \"env:\\$name\" $value` to set those updated env vars in the powershell process. Considering `refreshenv` isn't a builtin Windows thing I would doubt it would be something implemented by PowerShell itself but it can definitely be made by anyone and distributed through the PowerShell gallery.",
      "created_at": "2021-11-28T19:04:19Z",
      "updated_at": "2021-11-28T19:04:19Z"
    }
  ],
  "created_at": "2021-11-26T11:06:13Z",
  "labels": [
    "Issue-Question",
    "Resolution-External",
    "Needs-Triage"
  ],
  "number": 16521,
  "state": "closed",
  "title": "Environment vars not refreshing even after `refreshenv`",
  "updated_at": "2021-11-28T19:04:19Z"
}