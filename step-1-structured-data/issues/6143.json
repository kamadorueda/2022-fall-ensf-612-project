{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6143",
  "author": "anmenaga",
  "body": "`build.psm1` was recently updated to use '`Save-Module`' in `Restore-PSPester `#6112 \r\nSide effects of this update broke Docker package validation tests.\r\nSpecifically:\r\n1) Now `Restore-PSPester` requires` -Destination `directory to exist and throws error if it doesn't; Previously `Restore-PSPester` was creating it.\r\n![restorepester0](https://user-images.githubusercontent.com/11860095/36054648-7e13407e-0def-11e8-994a-677fe6e1d61c.png)\r\n\r\n2) Default `-Destination` directory is NOT based on `PSModulePath`, but rather on a `(Get-PSOptions -DefaultToNew).Output`, which is not helpful at all since it requires to provide full path to the module in case pwsh is run from an installed package as opposed to built from clone repo.\r\n![restorepester1](https://user-images.githubusercontent.com/11860095/36054653-81c861b8-0def-11e8-8dc5-576fd0a97bc7.png)\r\n\r\n",
  "closed_at": "2019-11-26T11:58:53Z",
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "We shouldn't rely on `Restore-PSPester` anymore sine we've updated the tests to be compatible with Pester 4.x.  We should probably have `Start-PSPester` install Pester from PSGallery if it's not installed.",
      "created_at": "2018-02-09T23:48:17Z",
      "updated_at": "2018-02-09T23:48:17Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I don't still test - Is this works for VS Code debugging? - there another output path is.",
      "created_at": "2018-02-10T12:16:33Z",
      "updated_at": "2018-02-10T12:16:33Z"
    }
  ],
  "created_at": "2018-02-09T23:17:30Z",
  "number": 6143,
  "state": "closed",
  "title": "Minor issues with Restore-PSPester",
  "updated_at": "2019-11-26T11:59:02Z"
}