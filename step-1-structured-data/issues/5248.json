{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5248",
  "author": "TravisEz13",
  "body": "<!--\r\n\r\nIf you are a PowerShell Team member, please make sure you choose the Reviewer(s) and Assignee for your PR.\r\nIf you are not from the PowerShell Team, you can leave the fields blank and the Maintainers will choose them for you. If you are familiar with the team, feel free to mention some Reviewers yourself.\r\n\r\nFor more information about the roles of Reviewer and Assignee, refer to [CONTRIBUTING.md](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md).\r\n\r\n-->\r\n",
  "closed_at": "2017-10-30T17:06:48Z",
  "comments": [
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "The change looks good, but can you explain a bit about the shallow cloning?",
      "created_at": "2017-10-26T23:38:42Z",
      "updated_at": "2017-10-26T23:38:42Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "Shallow cloning allows cloning only the last few commits not the entire history of the repo.  It's standard in travis-ci.  We set it to a 1000 in travis-ci to virtually have all the history.  I can update this to turn on shallow cloning in CI as well.  It should speed up the clone and reduce the size of he repo on the build machine.  But the repo size is very important in the release build where we are copying it all over the place.",
      "created_at": "2017-10-27T02:04:05Z",
      "updated_at": "2017-10-27T02:04:05Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "`git clone --depth 1 --shallow-submodules` sounds interesting and will save footprint for sure.\r\nHowever, I quickly tried the shallow clone and find `git describe --abbrev=60 --long` doesn't work. Here is what I did:\r\n1. git clone --depth 1 --shallow-submodules https://github.com/PowerShell/PowerShell.git\r\n2. cp .\\fix\\PowerShell\\ .\\ppp\\ -Recurse\r\n3. cd .\\ppp\\PowerShell\r\n4. sync tags as `Sync-PSTags` does\r\n5. run `git describe --abbrev=60 --long` or `git --git-dir=\"C:\\arena\\tmp\\ppp\\PowerShell\\.git\" describe --abbrev=60 --long`\r\n\r\nI got the following when running step 5:\r\n```\r\nfatal: No tags can describe '4df703616ae7f3fe2e11484702dbc84b89c21a52'.\r\nTry --always, or create some tags.\r\n```\r\nI verified that `git tag` does return all tags. Have you verified if this change would work?",
      "created_at": "2017-10-27T06:31:14Z",
      "updated_at": "2017-10-27T06:31:14Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "With VSTS, I can only build from branches out of the PowerShell repo (without setting up a new build.)  This change itself is safe enough.  The shallow clone change is the dangerous part.  It would be in the build definition and can be changed back easily.  Since VSTS doesn't give me the exact command they use to do a shallow clone.  I don't see any real way of testing it before it's merged.\r\n\r\nNote, this PR makes the release system work more like the CI system.  I think we should take this change, even if we don't enable shallow clone.",
      "created_at": "2017-10-27T17:31:33Z",
      "updated_at": "2017-10-27T17:32:47Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "> this PR makes the release system work more like the CI system.\r\n\r\nAs far as I understanding, currently we clone recursively and then copy the repository folder to the image during `docker build`. So the tags should already be available as the recursive clone would have got them.\r\nSo it seems to me if we don't enable the shallow clone, this change would become unnecessary.",
      "created_at": "2017-10-27T18:42:24Z",
      "updated_at": "2017-10-27T18:42:42Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@daxian-dbw  Are you still signed off? Is your last comment blocking?\r\n",
      "created_at": "2017-10-27T19:37:44Z",
      "updated_at": "2017-10-27T19:37:44Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@adityapatwardhan It's not a blocking comment. Just a thought that if the shallow clone doesn't work, maybe this change should be reverted \ud83d\ude04 ",
      "created_at": "2017-10-27T21:57:12Z",
      "updated_at": "2017-10-27T21:57:12Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "True, it might not be necessary, but I would like the scripts to be more similar to the workflow in CI.  The more the scripts have diverged the more likely a perceived small change in one is to cause them to behave differently.  Say, we add behavior that later steps depend on to sync-pstags.  It should still let me enable shallow cloning with depth 1000 (20% of our history) like in travis-ci.  The size reduction now is very small to none but will grow with time.\r\n",
      "created_at": "2017-10-28T17:59:09Z",
      "updated_at": "2017-10-28T17:59:09Z"
    }
  ],
  "created_at": "2017-10-26T21:57:31Z",
  "number": 5248,
  "state": "closed",
  "title": "Sync tags in release build so that shallow cloning can be enabled.",
  "updated_at": "2017-12-02T02:15:31Z"
}