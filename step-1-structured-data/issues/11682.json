{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11682",
  "author": "MaynardMiner",
  "body": "# Summary of the new feature/enhancement\r\n\r\nUsing $ENV variables in ``using module`` statement\r\n\r\n# Proposed technical implementation details (optional)\r\n\r\nMy interest is to see the ability for using an environment variable for the using module statement:\r\n\r\n``using module $env:MY_DIR\\build\\module.psm1``\r\n\r\nThe variables already exist prior to running powershell, and I imagine they have to be loaded prior to modules, so I would *assume* that such would be possible, but I am not sure how the back end works on this subject.",
  "closed_at": "2020-02-03T00:00:16Z",
  "comments": [
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "The problem with this is that `using module` is a parse time concept.  So that means:\r\n\r\n1. Allowing the path to be dynamic would increase the time to parse the document, which greatly slows down editors.  `using module` already makes parsing really slow, but it's worth mentioning\r\n1. The variable would be evaluated at parse time, not runtime.  That may not sound like a big deal in theory, but in practice it would feel *really* bad.  That's part of why so few people even know about dynamic keywords, as a parse time only concept they feel terrible.\r\n\r\n> The variables already exist prior to running powershell, and I imagine they have to be loaded prior to modules, so I would assume that such would be possible, but I am not sure how the back end works on this subject.\r\n\r\nThey might exist, but they're not constants.  They'll still be pulled on every request because you can change them at any point.\r\n\r\nAlso it's worth noting that you can use `using module .\\path\\relative\\to\\file.psm1` and the <kbd>.</kbd> will work like `$PSScriptRoot`. Everything else in PowerShell uses that to refer to the current working directory except `using` statements.",
      "created_at": "2020-01-26T13:36:58Z",
      "updated_at": "2020-01-26T13:36:58Z"
    },
    {
      "author": "Halkcyon",
      "author_association": "NONE",
      "body": "> <kbd>.</kbd> will work like `$PSScriptRoot`\r\n\r\nI didn't know that - not relative to `$PWD` like most other directory access?  Given that it would cause a rewrite in how the parser works, I'm not sure the feature request adds anything.",
      "created_at": "2020-01-27T14:51:07Z",
      "updated_at": "2020-01-27T14:51:07Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "> > . will work like `$PSScriptRoot`\r\n> \r\n> I didn't know that - not relative to `$PWD` like most other directory access?\r\n\r\nYup \ud83d\ude42, except when using forward slashes due to a bug (#7424), then it's relative.\r\n\r\nSuper confusing, but tbh I'm not sure what else they could have done.  Maybe treat `PSScriptRoot` and only `PSScriptRoot` as a constant, but \ud83e\udd37\u200d\u2642 that'd be confusing too.",
      "created_at": "2020-01-27T15:50:24Z",
      "updated_at": "2020-01-27T15:50:24Z"
    },
    {
      "author": "Halkcyon",
      "author_association": "NONE",
      "body": "> except when using forward slashes due to a bug (#7424), then it's relative\r\n\r\nI don't even know what to say.  I'm surprised that's not a higher priority bugfix for 7.0 GA.  To stay on-topic: I think you make good points for why this isn't feasible as it would make for a miserable authoring experience moving forward (although I've seen mixed adoption of the `using` statement in general due to knowing the nuances this deep)",
      "created_at": "2020-01-27T18:12:55Z",
      "updated_at": "2020-01-27T18:12:55Z"
    },
    {
      "author": "MaynardMiner",
      "author_association": "NONE",
      "body": "I understand.\r\n\r\nI've learned you can also use `..\\path` to get a parent, etc\r\n\r\nIts just when you are writing different runtime scripts, and importing modules often, especially in different points of the program, and potentially while being in different directories- It gets hard to keep track of it. It's more of a convenience suggestion, if it was possible.",
      "created_at": "2020-01-27T21:54:07Z",
      "updated_at": "2020-01-27T21:54:32Z"
    },
    {
      "author": "Halkcyon",
      "author_association": "NONE",
      "body": "@MaynardMiner If you need the dynamic behavior, I'd recommend sticking to `Import-Module` and importing your class definitions using `Invoke-Expression` to avoid the parse-time errors associated with PowerShell v5 classes.",
      "created_at": "2020-01-27T22:22:19Z",
      "updated_at": "2020-01-27T22:22:19Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2020-02-03T00:00:13Z",
      "updated_at": "2020-02-03T00:00:13Z"
    }
  ],
  "created_at": "2020-01-26T05:20:27Z",
  "labels": [
    "Issue-Question",
    "WG-Language",
    "Resolution-Answered"
  ],
  "number": 11682,
  "state": "closed",
  "title": "$ENV in using module",
  "updated_at": "2020-02-03T00:00:16Z"
}