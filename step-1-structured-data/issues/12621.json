{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12621",
  "author": "powercode",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\n`#nullable enable` in LanguagePrimitives.cs, MshObject.cs and MshMemberInfo.cs\r\n\r\nAnnotating with `?` and `!` to make the contract clear, and fixed a few issues, where `object.ToString` and `Type.Fullname`  are not guaranteed to return non-null strings.\r\n\r\n## PR Context\r\n\r\nTaking advantage of the C# 8 nullable reference types, for better clarity and less risk of null errors.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2020-06-22T06:00:08Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@powercode I really like it and I fully support it. But there's a problem. I started this process in #10693 without progress because MSFT team has no internal resources. \r\nThus, if we want to make a progress, we need a plan, approval of MSFT team and, most importantly, _several active participants_ for contributions and code reviews for some months.\r\n\r\nIf you are ready to participate, we can ask @vexx32 and some other developers who is interested in binary module development.\r\n\r\n\r\n\r\n\r\n",
      "created_at": "2020-05-12T04:56:29Z",
      "updated_at": "2020-05-12T04:56:29Z"
    },
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov I have used this feature for a while both in my personal and professional projects, and it is now beyond doubt something that makes me write better code. \r\n\r\nI tend to work on some feature I want, and refactor the relevant code to a good state before I start, so this was just a prequel to work on the parameter binder.\r\n\r\nI see the problem, but I think this is something that is so important for code quality that it may be wise to have it at a higher priority.\r\n\r\nIt is somewhat time consuming and hard to review these - you really have to understand the semantics of subsystem to be able to get it right.\r\n\r\nBut let's try to get @vexx32 on board :) \r\n\r\nHow can I be of help here?",
      "created_at": "2020-05-12T05:50:32Z",
      "updated_at": "2020-05-12T05:50:32Z"
    },
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "https://github.com/dotnet/coreclr/pull/23466 discussion around object.ToString being `string?`.\r\n\r\nOur `NullString.ToString` is such a case.\r\n",
      "created_at": "2020-05-12T05:51:35Z",
      "updated_at": "2020-05-12T05:51:35Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov @powercode from my perspective, the code has larger style issues in many areas anyway. I would tend to prefer these kinds of issues be fixed first (and in some cases cleaning up the code would make nullable annotations simpler to decide on), but I do agree the value of having nullable reference types enabled is a little higher since it is picked up by analysis tools more easily.\r\n\r\nI'm always in for some code cleanup. \ud83d\ude01 ",
      "created_at": "2020-05-12T13:07:23Z",
      "updated_at": "2020-05-12T13:07:23Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "@vexx32 nullability annotations is a lot more than style.  It significantly reduces accidental NREs in-project, and also when public API's are annotated it provides a way to tell if something can be null without having to look up documentation.",
      "created_at": "2020-05-12T13:10:35Z",
      "updated_at": "2020-05-12T13:12:44Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@powercode please have a look at merge conflict.",
      "created_at": "2020-05-14T17:16:28Z",
      "updated_at": "2020-05-14T17:16:28Z"
    },
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "rebased on master",
      "created_at": "2020-05-18T07:25:19Z",
      "updated_at": "2020-05-18T07:25:19Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMainainer, Please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2020-05-27T14:00:14Z",
      "updated_at": "2020-05-27T14:00:14Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as stale because it has been marked as requiring author feedback but has not had any activity for **15 days**. It will be closed if no further activity occurs **within 10 days of this comment**.",
      "created_at": "2020-06-11T23:00:13Z",
      "updated_at": "2020-06-11T23:00:13Z"
    }
  ],
  "created_at": "2020-05-11T16:54:57Z",
  "number": 12621,
  "state": "closed",
  "title": "Nullable enabled: LangaugePrimitives, PSObject,MshMemberInfo",
  "updated_at": "2020-06-22T06:00:08Z"
}