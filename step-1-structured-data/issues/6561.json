{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6561",
  "author": "gradinkov",
  "body": "Repro:\r\n\r\nUse clean install of Windows 7 SP1 (apparently both x86 and x64 are affected). Then run the following command in PS 6.0.2 ZIP version:\r\n\r\n~~~\r\nStart-Process \"ipconfig\" -ArgumentList \"/flushdns\" -Wait -NoNewWindow\r\n~~~\r\n\r\nResult:\r\n\r\n~~~\r\nStart-Process : Unable to load DLL 'api-ms-win-core-job-l2-1-0.dll': The specified module could not be found. (Exception from HRESULT: 0x8007007E)\r\nAt line:1 char:1\r\n+ Start-Process -FilePath \"C:\\7zip\\7za.exe\" -ArgumentList (\"x -oC:\\temp ...\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : NotSpecified: (:) [Start-Process], DllNotFoundException\r\n+ FullyQualifiedErrorId : System.DllNotFoundException,Microsoft.PowerShell.Commands.StartProcessCommand\r\n~~~\r\n\r\nPowerShell 6.0.2 x86 zip\r\nWindows 7 b7601 SP1 x86 (modern.ie VM)\r\n\r\nWorks perfectly fine on Win10 x64.\r\n\r\nAlso tried 6.1.0-preview1, behaves the same way.",
  "closed_at": "2019-09-03T21:25:18Z",
  "comments": [
    {
      "author": "gradinkov",
      "author_association": "NONE",
      "body": "Actually, way easier to repro:\r\n\r\n~~~\r\nStart-Process \"ipconfig\" -ArgumentList \"/flushdns\" -Wait -NoNewWindow\r\n~~~",
      "created_at": "2018-04-04T17:11:58Z",
      "updated_at": "2018-04-04T17:11:58Z"
    },
    {
      "author": "gradinkov",
      "author_association": "NONE",
      "body": "Same on 6.1.0-preview1 x86. The user that reported this problem to me uses x64 tho, so apparently this issue affects both arches.",
      "created_at": "2018-04-04T17:19:09Z",
      "updated_at": "2018-04-04T17:19:09Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@gradinkov Please replace first repo with simple second in the issue description.",
      "created_at": "2018-04-05T14:41:25Z",
      "updated_at": "2018-04-05T14:41:25Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@mirichmo Could you please comment the Issue?",
      "created_at": "2018-04-05T14:42:03Z",
      "updated_at": "2018-04-05T14:42:03Z"
    },
    {
      "author": "gradinkov",
      "author_association": "NONE",
      "body": "Sure thing, done!",
      "created_at": "2018-04-05T14:46:34Z",
      "updated_at": "2018-04-05T14:46:34Z"
    },
    {
      "author": "gradinkov",
      "author_association": "NONE",
      "body": "The funny thing is that the commands actually run afterwards, just throw this exception first.\r\n\r\nThis is a problem when you run multiple commands in try-catch (as you normally should), which interrupts the rest of the try blocks and thus messes up execution.\r\n\r\nTLDR if you run `start-process` in try-catch, anything that comes after start-process will be skipped.",
      "created_at": "2018-04-05T15:10:22Z",
      "updated_at": "2018-04-05T15:10:22Z"
    },
    {
      "author": "mirichmo",
      "author_association": "MEMBER",
      "body": "@adityapatwardhan It looks like PowerShell Core needs another API set for Win 7. Do you know if there is a way to scan for compliance (static analysis) rather than checking at runtime?",
      "created_at": "2018-04-05T20:38:00Z",
      "updated_at": "2018-04-19T00:10:15Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "The binary does not seem to be in the API set we use : `runtime.win7-x64.Microsoft.NETCore.Windows.ApiSets/1.0.1`. This needs further investigation.",
      "created_at": "2018-04-05T21:45:20Z",
      "updated_at": "2018-04-05T21:45:20Z"
    },
    {
      "author": "Arnavion",
      "author_association": "NONE",
      "body": "I hit this on 6.0.1 on win7 x64.\r\n\r\n```\r\n$ $Error[0].exception.stacktrace\r\n\r\n   at Microsoft.PowerShell.Commands.NativeMethods.CreateJobObject(IntPtr lpJobAttributes, String lpName)\r\n   at Microsoft.PowerShell.Commands.ProcessCollection..ctor()\r\n   at Microsoft.PowerShell.Commands.StartProcessCommand.BeginProcessing()\r\n   at System.Management.Automation.Cmdlet.DoBeginProcessing()\r\n   at System.Management.Automation.CommandProcessorBase.DoBegin()\r\n```",
      "created_at": "2018-05-03T06:41:53Z",
      "updated_at": "2018-05-03T06:41:53Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@Arnavion Please test with lates PowerShell Core build https://github.com/PowerShell/PowerShell#build-status-of-master-branches",
      "created_at": "2018-05-03T08:17:34Z",
      "updated_at": "2018-05-03T08:17:34Z"
    },
    {
      "author": "Arnavion",
      "author_association": "NONE",
      "body": "@iSazonov Same thing with current master `GitCommitId: v6.1.0-preview.2-26-g84344cbb32ec5e2479e00394951832794bf37244`\r\n\r\n```\r\nUnable to load DLL 'api-ms-win-core-job-l2-1-0.dll' or one of its dependencies: The specified module could not be found. (Exception from HRESULT: 0x8007007E)\r\n   at Microsoft.PowerShell.Commands.NativeMethods.CreateJobObject(IntPtr lpJobAttributes, String lpName)\r\n   at Microsoft.PowerShell.Commands.ProcessCollection..ctor() in C:\\Stuff\\Sources\\PowerShell\\src\\Microsoft.PowerShell.Commands.Management\\commands\\management\\Process.cs:line 2551\r\n   at Microsoft.PowerShell.Commands.StartProcessCommand.BeginProcessing() in C:\\Stuff\\Sources\\PowerShell\\src\\Microsoft.PowerShell.Commands.Management\\commands\\management\\Process.cs:line 2018\r\n   at System.Management.Automation.Cmdlet.DoBeginProcessing() in C:\\Stuff\\Sources\\PowerShell\\src\\System.Management.Automation\\engine\\cmdlet.cs:line 159\r\n   at System.Management.Automation.CommandProcessorBase.DoBegin() in C:\\Stuff\\Sources\\PowerShell\\src\\System.Management.Automation\\engine\\CommandProcessorBase.cs:line 499\r\n```",
      "created_at": "2018-05-03T08:43:35Z",
      "updated_at": "2018-05-03T08:43:35Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@Arnavion Thanks for confirmation!",
      "created_at": "2018-05-03T10:02:08Z",
      "updated_at": "2018-05-03T10:02:08Z"
    },
    {
      "author": "meekaah",
      "author_association": "NONE",
      "body": "any news? this is completely blocking us \ud83d\udc4e i still havent found a workaround\r\nwe're running windows server 2008 r2",
      "created_at": "2018-07-24T11:38:32Z",
      "updated_at": "2018-07-24T11:38:32Z"
    },
    {
      "author": "gradinkov",
      "author_association": "NONE",
      "body": "The fact that after almost 4 months this issue is still open indeed is puzzling. Win7 is officially supported, yet, PowerShell Core is completely broken on it. That means around HALF of your userbase. I'd recommend to either declare Win7 unsupported or fix this critical blocker.\r\n\r\nBut I can't just say to my users that \"yeah, your OS is theoretically supported, except in practice it won't work\". I can't say \"a fix is in the works\" either coz I haven't seen any _real_ activity on the matter.",
      "created_at": "2018-07-24T11:49:43Z",
      "updated_at": "2018-07-24T11:49:43Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Looking https://docs.microsoft.com/en-us/windows/desktop/api/winbase/nf-winbase-createjobobjecta\r\nI guess we could directly reference Kernel32.dll",
      "created_at": "2018-07-24T12:35:55Z",
      "updated_at": "2018-07-24T12:35:55Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "I found a workaround for the issue. \r\n\r\nThe issue is with `-Wait`. You can use `-PassThru` and wait for the process completion. Something like this:\r\n\r\n```PowerShell\r\n$process = Start-Process \"ipconfig\" -PassThru -NoNewWindow \r\nWait-UntilTrue -sb { $process.HasExited }\r\n```\r\n\r\nThe function `Wait-UntilTrue` is defined here:\r\nhttps://github.com/PowerShell/PowerShell/blob/master/test/tools/Modules/HelpersCommon/HelpersCommon.psm1#L3\r\n\r\n@gradinkov @meekaah @Arnavion \r\n\r\n\r\n",
      "created_at": "2018-07-28T16:20:29Z",
      "updated_at": "2018-07-28T16:22:19Z"
    },
    {
      "author": "meekaah",
      "author_association": "NONE",
      "body": "Wait-UntilTrue : The term 'Wait-UntilTrue' is not recognized as the name of a cmdlet, function, script file, or... :( how are you using it? are you adding something else? Oh did you have to add that module manually and load it for it to work?\r\n\r\nUPDATE: yeah i added the module manually and it does work as a workaround thanks a lot even if it is sort of a hack \ud83d\udc4d ",
      "created_at": "2018-08-03T08:15:41Z",
      "updated_at": "2018-08-03T08:48:44Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@meekaah The function is defined the link I posted above. \r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/ac8ac4f25b2c67c12db532b140ab1997267e371b/test/tools/Modules/HelpersCommon/HelpersCommon.psm1#L3-L24",
      "created_at": "2018-08-03T17:43:27Z",
      "updated_at": "2018-08-03T17:46:17Z"
    },
    {
      "author": "fdge",
      "author_association": "NONE",
      "body": "This error is slowing me down from moving From PowerShell to Core\r\nThis error happens on Server 2008 R2 but not on Windows 10 1709",
      "created_at": "2018-08-22T17:14:03Z",
      "updated_at": "2018-08-22T17:14:03Z"
    },
    {
      "author": "ajax16384",
      "author_association": "NONE",
      "body": "The issue happens only then Start-Process using -Wait argument.\r\nStart-Process creates ProcessCollection to monitor child processes which calls NativeMethods.CreateJobObject (https://github.com/PowerShell/PowerShell/blob/003a141f318fa1e79f7c19844298b3a6d33a5a76/src/Microsoft.PowerShell.Commands.Management/commands/management/Process.cs#L2585).\r\n\"CreateJobObject\" declared using pinvoke that points to \"api-ms-win-core-job-l2-1-0.dll\"(https://github.com/PowerShell/PowerShell/blob/003a141f318fa1e79f7c19844298b3a6d33a5a76/src/System.Management.Automation/utils/PInvokeDllNames.cs#L84).\r\nAccording to unofficial info this api set was introduced in Windows 8 ( https://www.geoffchappell.com/studies/windows/win32/apisetschema/history/sets62.htm ).\r\nFor some strange reason this api set dll did not included in PowerShell distribution, but many other non \"windows 7\" api set dll were included.\r\nSo to fix this bug \"api-ms-win-core-job-l2-1-0.dll\" should be added to redistribute api set files list (https://github.com/PowerShell/PowerShell/blob/003a141f318fa1e79f7c19844298b3a6d33a5a76/assets/files.wxs#L74)  (along with other api set mentioned in PInvokesDllNames)\r\n\r\nQuick dirty fix: droping api-ms-win-core-job-l2-1-0.dll from \"windows8/system32\" installation to window7/PowerShell/6/ folder will solve issue\r\n",
      "created_at": "2019-02-02T14:53:08Z",
      "updated_at": "2019-02-03T11:12:26Z"
    },
    {
      "author": "ferenczy",
      "author_association": "NONE",
      "body": "One and a half years ago and the issue is still present. Could you let us know what's the plan with this bug, please?\r\n\r\nWindows 7 Ultimate 64-bit\r\nPowerShell Core 6.2.2",
      "created_at": "2019-08-22T11:14:45Z",
      "updated_at": "2019-08-22T11:14:45Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:This issue was addressed in #10417, which has now been successfully released as `v7.0.0-preview.4`.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.0.0-preview.4)\n",
      "created_at": "2019-09-19T17:51:57Z",
      "updated_at": "2019-09-19T17:51:57Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:This issue was addressed in #10417, which has now been successfully released as `v6.2.4`.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v6.2.4)\n",
      "created_at": "2020-01-27T22:19:49Z",
      "updated_at": "2020-01-27T22:19:49Z"
    }
  ],
  "created_at": "2018-04-04T17:05:00Z",
  "labels": [
    "Issue-Bug",
    "OS-Windows",
    "Area-Maintainers-Build",
    "Resolution-Fixed"
  ],
  "number": 6561,
  "state": "closed",
  "title": "Start-Process: Unable to load DLL 'api-ms-win-core-job-12-1-0.dll'",
  "updated_at": "2020-01-27T22:19:49Z"
}