{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10002",
  "author": "msftrncs",
  "body": "related to #7569 and #9881 \r\n\r\n# Steps to reproduce\r\nAttempt to tab complete a share name on a UNC path via a partially resolved path that includes the provider notation.\r\n\r\n```powershell\r\nget-content Microsoft.PowerShell.Core\\FileSystem::\\\\rk-vs-fs1\\ # press tab to cycle through the shares on the server.\r\n```\r\n\r\n# Expected behavior\r\n\r\nI expected the same completions that I get with\r\n```powershell\r\nget-content \\\\rk-vs-fs1\\ # press tab to cycle through the shares on the server.\r\n```\r\n\r\n# Actual behavior\r\n\r\nNo completions occur\r\n\r\n# Analysis\r\n\r\nUpon researching leads on #9881, it was noticed that this issue would occur in this code:\r\nhttps://github.com/PowerShell/PowerShell/blob/981c990d747ae97f56a6c7474e5d2ef04bf237c5/src/System.Management.Automation/engine/CommandCompletion/CompletionCompleters.cs#L4119-L4142\r\nThis particular code does not attempt to resolve the path name first to eliminate the potential 'filesystem' provider notation, before checking for a UNC '\\\\server\\share' pattern.\r\n\r\nThe 'filesystem' provider notation does not affect any other part of the tab completion logic, only the share name completion.\r\n\r\nDo note, this code shown above appears to be responsible for #7569, as it fails to escape `$` or spaces in the share names (or any other characters that might be legal in the share name but have a special meaning to PowerShell if not escaped or correctly quoted). ",
  "closed_at": null,
  "comments": [],
  "created_at": "2019-06-25T17:25:34Z",
  "labels": [
    "Issue-Enhancement",
    "WG-Interactive-IntelliSense"
  ],
  "number": 10002,
  "state": "open",
  "title": "tab completion of a provider path notation UNC share name is not possible",
  "updated_at": "2019-06-26T06:48:16Z"
}