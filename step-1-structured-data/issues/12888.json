{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12888",
  "author": "vexx32",
  "body": "## Steps to reproduce\r\n\r\n```powershell\r\npwsh -noprofile\r\n& (Get-Command Write-Host) \"text\"\r\n```\r\n\r\n## Expected behavior\r\n\r\nThe text is written to host by calling the Write-Host cmdlet via the CommandInfo object (as it is working in Windows PowerShell, and I'm pretty sure older versions of pwsh as well).\r\n\r\n```none\r\ntext\r\n```\r\n\r\n## Actual behavior\r\n\r\n```none\r\nArgumentNullException: Value cannot be null. (Parameter 'key')\r\n```\r\n\r\nError details from `Get-Error -Last 1`:\r\n\r\n```none\r\nException             :\r\n    Type       : System.ArgumentNullException\r\n    Message    : Value cannot be null. (Parameter 'key')\r\n    ParamName  : key\r\n    TargetSite :\r\n        Name          : ThrowKeyNullException\r\n        DeclaringType : System.Collections.Concurrent.ConcurrentDictionary`2[TKey,TValue]\r\n        MemberType    : Method\r\n        Module        : System.Collections.Concurrent.dll\r\n    StackTrace :\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.ThrowKeyNullException()\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at System.Management.Automation.CommandProcessor.ConstructInstance(Type type)\r\n   at System.Management.Automation.CommandProcessor.Init(CmdletInfo cmdletInformation)\r\n    Source     : System.Collections.Concurrent\r\n    HResult    : -2147467261\r\nCategoryInfo          : NotSpecified: (:) [], ArgumentNullException\r\nFullyQualifiedErrorId : System.ArgumentNullException\r\nInvocationInfo        :\r\n    ScriptLineNumber : 1\r\n    OffsetInLine     : 1\r\n    HistoryId        : -1\r\n    Line             : & (gcm w*st) a\r\n    PositionMessage  : At line:1 char:1\r\n                       + & (gcm w*st) a\r\n                       + ~~~~~~~~~~~~~~\r\n    CommandOrigin    : Internal\r\nScriptStackTrace      : at <ScriptBlock>, <No file>: line 1\r\n```\r\n\r\n## Environment data\r\n\r\nReproduces both in a clean `7.0.1` install as well as the most recent preview release (7.1-preview3). Also reproduces under 7.3.0-preview4 and 7.2.4.\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.1\r\nPSEdition                      Core\r\nGitCommitId                    7.0.1\r\nOS                             Microsoft Windows 10.0.17763\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.0-preview.3\r\nPSEdition                      Core\r\nGitCommitId                    7.1.0-preview.3\r\nOS                             Darwin 19.4.0 Darwin Kernel Version 19.4.0: Wed Mar  4 22:28:40 PST 2020; root:xnu-6153\u2026\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.4\r\nPSEdition                      Core\r\nGitCommitId                    7.2.4\r\nOS                             Darwin 21.4.0 Darwin Kernel Version 21.4.0: Fri Mar 18 00:45:05 PDT 2022; root:xnu-8020.101\u2026\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "~~Code golf~~ script works in my PS 7.1-preview.3 instance\r\n\r\n```powershell\r\n> &(gcm w*st)'hi'\r\nhi\r\n```",
      "created_at": "2020-06-03T21:55:58Z",
      "updated_at": "2020-06-03T21:56:11Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Very strange. I'm seeing this in:\r\n\r\n- macOS Catalina\r\n- Windows 10 VM on said macOS machine\r\n- A completely separate laptop running win10.",
      "created_at": "2020-06-03T23:03:34Z",
      "updated_at": "2020-06-03T23:03:43Z"
    },
    {
      "author": "lukeb1961",
      "author_association": "NONE",
      "body": "PS C:\\Users\\LukeB> $PSversiontable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.1\r\nPSEdition                      Core\r\nGitCommitId                    7.0.1\r\nOS                             Microsoft Windows 10.0.19635\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\nPS C:\\Users\\LukeB> &(gcm w*st)'hi'\r\nArgumentNullException: Value cannot be null. (Parameter 'key')\r\nPS C:\\Users\\LukeB>\r\n\r\nPowerShell 7.1.0-preview.3\r\nCopyright (c) Microsoft Corporation.\r\n\r\nhttps://aka.ms/powershell\r\nType 'help' to get help.\r\n\r\nPS C:\\Users\\LukeB> $PSversiontable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.0-preview.3\r\nPSEdition                      Core\r\nGitCommitId                    7.1.0-preview.3\r\nOS                             Microsoft Windows 10.0.19635\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\nPS C:\\Users\\LukeB> &(gcm w*st)'hi'\r\nArgumentNullException: Value cannot be null. (Parameter 'key')\r\nPS C:\\Users\\LukeB>\r\n\n\n<blockquote><img src=\"https://docs.microsoft.com/en-us/media/logos/logo-ms-social.png\" width=\"48\" align=\"right\"><div><strong><a href=\"https://docs.microsoft.com/en-us/powershell/\">PowerShell Documentation - PowerShell</a></strong></div><div>Official product documentation for PowerShell</div></blockquote>",
      "created_at": "2020-06-04T06:42:16Z",
      "updated_at": "2020-06-04T06:42:19Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "https://github.com/PowerShell/PowerShell/blob/cd3ed77e8309f35c3049979c19d673b0cfa13815/src/System.Management.Automation/engine/CommandProcessor.cs#L712",
      "created_at": "2020-06-04T16:56:40Z",
      "updated_at": "2020-06-04T16:56:40Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Gotcha. So it's related to loading the assembly. \r\n\r\nIf you load pwsh (ideally with -noprofile to preclude write-host etc use on load) and then try the repro you'll get an error.\r\n\r\nUntil you actually call Write-Host directly (or I assume any other cmdlet defined in that same assembly) it will fail. As soon as one of the cmdlets in that module is called directly, it starts working again.\r\n\r\nSo it seems like there needs to be a check for if the module is loaded & to load it if need be.",
      "created_at": "2020-06-04T17:03:20Z",
      "updated_at": "2020-06-04T17:03:20Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "> Gotcha. So it's related to loading the assembly.\r\n\r\nAh!\r\n\r\n> So it seems like there needs to be a check for if the module is loaded & to load it if need be.\r\n\r\nAgreed",
      "created_at": "2020-06-04T17:04:35Z",
      "updated_at": "2020-06-04T17:04:35Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "I suspect this may have regressed when #10784 was added, since I seem to recall there having to be some workarounds made in that for similar things (retrieving proper commandinfo objects when the module has yet to be loaded).\r\n\r\nI suspect this code path simply isn't accounting for the possibility that a more complete CommandInfo object could be returned before the module is loaded.",
      "created_at": "2020-06-04T17:08:17Z",
      "updated_at": "2020-06-04T17:08:17Z"
    },
    {
      "author": "StevenBucher98",
      "author_association": "COLLABORATOR",
      "body": "Is this still an issue @vexx32 ? I cannot seem to reproduce it on PS 7.2.4",
      "created_at": "2022-06-06T21:42:46Z",
      "updated_at": "2022-06-06T21:42:46Z"
    },
    {
      "author": "lukeb1961",
      "author_association": "NONE",
      "body": "PowerShell 7.3.0-preview.4\r\nPS C:\\Users\\LukeB>  &(gcm w*st)'hi'\r\nArgumentNullException: Value cannot be null. (Parameter 'key')\r\nPS C:\\Users\\LukeB>\r\n## is that supposed to work? ",
      "created_at": "2022-06-07T08:30:25Z",
      "updated_at": "2022-06-07T08:33:16Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@StevenBucher98  I just checked 7.2.4 as well, still happening. I will note that if you're not running it in a fresh session with no profile loaded (in other words, test with `pwsh -noprofile` and run the test command as the first command in the new shell), there's a good chance you'll miss it, because profiles _tend_ to trigger autoloading of commands, and there's a good chance you've already loaded the assembly containing the Write-Host command.\r\n\r\nI'm pretty sure this is going to be the case for _any_ command that is provided by an assembly and not a PowerShell script that you try to invoke this way without triggering the module loading beforehand in some fashion. I think tab completion is even enough to trigger the module loading on its own, too?\r\n\r\nThat said, this is definitely still a bug and we should absolutely still fix it.",
      "created_at": "2022-06-07T12:21:46Z",
      "updated_at": "2022-06-07T12:24:22Z"
    }
  ],
  "created_at": "2020-06-03T20:58:41Z",
  "number": 12888,
  "state": "open",
  "title": "Invoking commands via CommandInfo objects fails in pwsh 7",
  "updated_at": "2022-06-07T12:37:58Z"
}