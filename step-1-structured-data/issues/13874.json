{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13874",
  "author": "xtqqczze",
  "body": "# PR Summary\r\n\r\n**Breaking change**: this change removes the implicit public constructor for `PowerShellAssemblyLoadContextInitializer`.\r\n\r\nFix [CA1822: Mark members as static](https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1822).\r\n\r\n**Justification**:\r\n* There appears to be no use case for creating an instance of `PowerShellAssemblyLoadContextInitializer`.\r\n* The class only contains one static method: `SetPowerShellAssemblyLoadContext`\r\n\r\n## PR Context\r\n\r\n* https://github.com/PowerShell/PowerShell/issues/2291\r\n* https://github.com/PowerShell/PowerShell/blob/master/docs/host-powershell/README.md#special-hosting-scenario-for-native-host\r\n* https://docs.microsoft.com/dotnet/api/system.management.automation.powershellassemblyloadcontextinitializer.setpowershellassemblyloadcontext\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [!] None\r\n    - **OR**\r\n    - [NA] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [NA] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [NA] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [NA] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [NA] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [NS] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2020-11-04T01:16:37Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> **Breaking change**: this change removes the public constructor for `PowerShellAssemblyLoadContextInitializer`.\r\n\r\n@xtqqczze I don't see the change.",
      "created_at": "2020-10-28T09:44:46Z",
      "updated_at": "2020-10-28T09:44:46Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "> > **Breaking change**: this change removes the public constructor for `PowerShellAssemblyLoadContextInitializer`.\r\n> \r\n> @xtqqczze I don't see the change.\r\n\r\nThe removed constructor is the _implicit_ parameterless constructor.\r\n\r\nSee https://docs.microsoft.com/dotnet/csharp/programming-guide/classes-and-structs/constructors#parameterless-constructors",
      "created_at": "2020-10-28T10:03:09Z",
      "updated_at": "2020-10-28T10:04:09Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "What is a benefit of the change?",
      "created_at": "2020-10-28T10:59:16Z",
      "updated_at": "2020-10-28T10:59:33Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "It is a fix for [CA1822: Mark members as static](https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1822).\r\n\r\nDocumentation categorizes this as a performance rule, but I would add it is also a possible correctness issue: we should not allow creation of an instance of `PowerShellAssemblyLoadContextInitializer` when there is no use case.",
      "created_at": "2020-10-28T14:25:07Z",
      "updated_at": "2020-10-28T14:25:07Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "> on the other hand, this is breaking/changing how this function should be called by PS hosts, which will cause unnecessary additional work to change hosting code.\r\n\r\nCorrect me if I'm wrong, but the only this could be breaking is if someone attempts to create an instance of `PowerShellAssemblyLoadContextInitializer`. This seems unlikely as usage examples in documentation treat it as if it were already a static class:\r\n\r\n> \"For such hosting scenarios, the native host needs to bootstrap by calling [`PowerShellAssemblyLoadContextInitializer.SetPowerShellAssemblyLoadContext`]\"\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/master/docs/host-powershell/README.md#special-hosting-scenario-for-native-host\r\n",
      "created_at": "2020-11-04T01:01:44Z",
      "updated_at": "2020-11-04T01:04:12Z"
    },
    {
      "author": "anmenaga",
      "author_association": "CONTRIBUTOR",
      "body": "Oh, sorry. For some reason I thought that it was an instance method. :) Please ignore my previous post.",
      "created_at": "2020-11-04T01:14:23Z",
      "updated_at": "2020-11-04T01:14:23Z"
    }
  ],
  "created_at": "2020-10-25T20:10:09Z",
  "number": 13874,
  "state": "closed",
  "title": "Mark PowerShellAssemblyLoadContextInitializer with static modifier",
  "updated_at": "2020-11-04T03:46:42Z"
}