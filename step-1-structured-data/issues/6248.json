{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6248",
  "author": "Ayanmullick",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\n- Windows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nIf it is a bug report:\r\n- make sure you are able to repro it on the latest released version. \r\nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://github.com/PowerShell/PowerShell/blob/master/docs/KNOWNISSUES.md).\r\n- Fill out the following repro template:\r\n\r\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\r\n-->\r\n\r\nSteps to reproduce\r\n------------------\r\nInstall Powershell on a RedHat 7.3 VM per documentation\r\nhttps://docs.microsoft.com/en-us/powershell/scripting/setup/Installing-PowerShell-Core-on-macOS-and-Linux?view=powershell-6#installation-via-package-repository-preferred---red-hat-enterprise-linux-rhel-7\r\n\r\n```Get-module -ListAvailable\r\n\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\nThis should list the below modules per this blog\r\nhttps://blogs.msdn.microsoft.com/powershell/2018/01/10/powershell-core-6-0-generally-available-ga-and-supported/\r\n\r\n1. CimCmdlets\r\n2. Microsoft.PowerShell.Archive\r\n3. Microsoft.PowerShell.Diagnostics\r\n4. Microsoft.PowerShell.Host\r\n5. Microsoft.PowerShell.Management\r\n6. Microsoft.PowerShell.Security\r\n7. Microsoft.PowerShell.Utility\r\n8. Microsoft.WSMan.Management\r\n9. PackageManagement\r\n10. PowerShellGet\r\n11. PSDesiredStateConfiguration\r\n12. PSDiagnostics\r\n13. PSReadLine\r\n\r\n```none\r\n\r\n```\r\n\r\nActual behavior\r\n---------------\r\nHowever the below modules are missing.\r\n\r\n1. CimCmdlets\r\n2. Microsoft.PowerShell.Diagnostics\r\n3. Microsoft.WSMan.Management\r\n4. PSDiagnostics\r\n```none\r\n\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.1\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.1\r\nOS                             Linux 3.10.0-514.28.1.el7.x86_64 #1 SMP Fri Jul 7 12:58:19 EDT 2017\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\n\r\nPlease document additional steps for the missing modules.",
  "closed_at": "2018-04-20T08:55:20Z",
  "comments": [
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "Unfortunately, these modules are only available on Windows due to reliance on Windows-specific APIs. \r\n\r\nCould you explain how you're trying to use them? Generally speaking, we haven't seen much demand for local usage of those cmdlets on non-Windows platforms. Even if you want to run them on a Windows box from a Mac or Linux client, that's enabled via PSRemoting. ",
      "created_at": "2018-02-28T18:43:58Z",
      "updated_at": "2018-02-28T18:43:58Z"
    },
    {
      "author": "Ayanmullick",
      "author_association": "NONE",
      "body": "My understanding is that OMI is the Linux-equivalent of CIM. I already installed Microsoft-OMI [```https://github.com/Microsoft/omi```]. I want to use something like this to DomainJoin my RedHat VM's\r\n\r\n```(Get-CimInstance -ClassName Win32_ComputerSystem).JoinDomainOrWorkgroup($Domain,$Credential.GetNetworkCredential().Password,$Credential.UserName,$null,3)```\r\n\r\nAnd, ```Enable-PsRemoting``` on them to manage the RedHat VM's from a windows machine",
      "created_at": "2018-02-28T19:17:09Z",
      "updated_at": "2018-02-28T21:15:23Z"
    },
    {
      "author": "Ayanmullick",
      "author_association": "NONE",
      "body": "No one assigned to this yet!",
      "created_at": "2018-04-18T20:03:10Z",
      "updated_at": "2018-04-18T20:03:10Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@Ayanmullick OMI is the Linux equivalent of WMI, but what you also need is the Linux equivalent implementations of CIM classes (so CIM_ComputerSystem would need to be implemented) and they would also need to implement Windows specific extensions to the CIM class (JoinDomainOrWorkgroup() method is specific to Windows and the Win32_ComputerSystem class and not part of the CIM standard).\r\n\r\nOMI and CIM class implementations are not part of PowerShell.  Your request will need to be given to either RedHat to implement or to [OpenPegasus](https://collaboration.opengroup.org/pegasus/pr/) which similar to OMI is an OSS implementation of a CIMOM (what WMI is).\r\n\r\nThere are no plans to port the CIM cmdlets to non-Windows.",
      "created_at": "2018-04-19T10:00:10Z",
      "updated_at": "2018-04-19T10:00:10Z"
    },
    {
      "author": "Ayanmullick",
      "author_association": "NONE",
      "body": "Azure Sphere OS?",
      "created_at": "2018-04-19T14:42:00Z",
      "updated_at": "2018-04-19T14:42:00Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@Ayanmullick for Azure Sphere OS, that team would need to do the work.  I would suggesting adding a comment to their [blog post](https://azure.microsoft.com/en-us/blog/introducing-microsoft-azure-sphere-secure-and-power-the-intelligent-edge/)",
      "created_at": "2018-04-19T14:53:16Z",
      "updated_at": "2018-04-19T14:53:16Z"
    },
    {
      "author": "Ayanmullick",
      "author_association": "NONE",
      "body": "Wish there was a way to reassign this issue.",
      "created_at": "2018-04-19T15:00:10Z",
      "updated_at": "2018-04-19T15:00:10Z"
    }
  ],
  "created_at": "2018-02-26T19:31:13Z",
  "number": 6248,
  "state": "closed",
  "title": "Multiple modules missing after Powershell 6.0.1 installation on Linux",
  "updated_at": "2018-04-20T08:55:20Z"
}