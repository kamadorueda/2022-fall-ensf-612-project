{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4114",
  "author": "daxian-dbw",
  "body": "Steps to reproduce\r\n------------------\r\nModule structure:\r\n```\r\nPS:81> tree.com F:\\tmp\\test /F\r\nF:\\TMP\\TEST\r\n    class.psm1\r\n    test.psd1\r\n    test.psm1\r\n```\r\nContent of `class.psm1`\r\n```\r\nclass Foo\r\n{\r\n    [string] $Name = \"Foo\"\r\n}\r\n```\r\nContent of `test.psm1`\r\n```\r\nusing module .\\class.psm1\r\n\r\nclass Bar{\r\n    [Foo] $foo = [Foo]::new()\r\n\r\n    [void] Print()\r\n    {\r\n        Write-Host ($this.foo.Name)\r\n    }\r\n}\r\n```\r\nContent of `test.psd1`\r\n```\r\n@{\r\nModuleVersion = '1.0'\r\nGUID = 'e812e452-6a43-4fe7-9738-375c2fbdd577'\r\nNestedModules = @(\"class.psm1\", \"test.psm1\")\r\nFunctionsToExport = @()\r\nCmdletsToExport = @()\r\nVariablesToExport = '*'\r\nAliasesToExport = @()\r\n}\r\n```\r\nContent of `run.ps1`\r\n```\r\nusing module F:\\tmp\\test\r\n[Bar]\r\n[Foo]\r\n```\r\nRun `run.ps1`\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```none\r\nBoth `[Bar]` and `[Foo]` should be resolved.\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n```none\r\nPS:90> .\\run.ps1\r\nUnable to find type [Foo].\r\nAt F:\\tmp\\test\\class.psm1:1 char:1\r\n+ class Foo\r\n+ ~~~~~~~~~\r\n    + CategoryInfo          : InvalidOperation: (class Foo\r\n{\r\n ...Name = \"Foo\"\r\n}:TypeDefinitionAst) [], RuntimeException\r\n    + FullyQualifiedErrorId : TypeNotFound\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.0-beta\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.0-beta.2-48-g598cebf7b2f0b5bb0b0add97c6393ccfaaa792f5-dirty\r\nOS                             Microsoft Windows 10.0.15063\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "jasonshave",
      "author_association": "NONE",
      "body": "is there a workaround at the moment?",
      "created_at": "2018-08-09T01:14:41Z",
      "updated_at": "2018-08-09T01:14:41Z"
    }
  ],
  "created_at": "2017-06-27T01:11:54Z",
  "number": 4114,
  "state": "open",
  "title": "If a module 'test' has multiple nested .psm1 modules that define powershell classes, then `using module test` can only load the classes defined in `test.psm1` but not other .psm1 files",
  "updated_at": "2018-08-09T01:14:41Z"
}