{
  "_url": "https://github.com/PowerShell/PowerShell/issues/17541",
  "author": "juvtib",
  "body": "## Background \r\n\r\nI want to list the processes on my system. \r\n\r\n``` PowerShell\r\nGet-Process \r\n\r\n NPM(K)    PM(M)      WS(M)     CPU(s)      Id  SI ProcessName\r\n ------    -----      -----     ------      --  -- -----------\r\n      0     0.00       3.75       0.00    1270 \u202669 (sd-pam)\r\n      0     0.00       9.84       1.25     962 962 accounts-daemon\r\n      0     0.00       0.00       0.00     117   0 acpi_thermal_pm\r\n...\r\n\r\n```\r\n\r\nFurther, I would like to sort the processes by parent. \r\n\r\nI'm on Linux. And I have a `Parent` property. I'm not sure if that is available on Windows. \r\n\r\n``` PowerShell\r\nGet-Process | Select-Object @{name='Parent'; expr={$_.Parent.Id}}, Id, Name | Sort-Object Parent, Id\r\n\r\nParent     Id Name\r\n------     -- ----\r\n       105455 Web Content\r\n1        2617 firefox\r\n1      135731 code --no-sandbox --force-user-env --unity-launch --enable-crashpad\r\n1284     1362 Thunar\r\n1370   127909 thunderbird\r\n1667     1688 pwsh\r\n1688    11884 vim\r\n\r\n```\r\n\r\n## Issue\r\n\r\nThe issue I noticed was that some of the Parent Process IDs (PPID) were missing. \r\n\r\nNote there are no IDs in the Parent column below. \r\n\r\n``` PowerShell\r\nGet-Process | Select-Object @{name='Parent'; expr={$_.Parent.Id}}, Id, Name | Sort-Object Parent, Id\r\n\r\nParent     Id Name\r\n------     -- ----\r\n            1 systemd\r\n            2 kthreadd\r\n          847 UVM global queue\r\n          848 UVM deferred release queue\r\n          849 UVM Tools Event Queue\r\n...\r\n       105455 Web Content\r\n       105458 Web Content\r\n...\r\n\r\n```\r\n\r\nIt is not clear to me if there is a bug with PowerShell, a bug with .NET, or something I don't understand. \r\n\r\nThe one-liner I'm issuing seems correct to me. \r\n\r\nBut I'm not getting a Parent Process ID for worker processes, which is the output I expect. \r\n\r\nI don't think there is a permission issue because I am the only user. And the native task manager shows the correct parent and child relationships for processes. \r\n\r\nThe affected processes are mostly Mozilla Firefox and Thunderbird workers. \r\n\r\n![Screenshot_2022-06-19_15-52-37](https://user-images.githubusercontent.com/51273929/174500476-0c74d7c8-8871-4298-8a5d-d72e2c89cdc4.png)\r\n\r\n## Environment \r\n\r\n``` text\r\n$PSVersionTable | Format-Table -Wrap\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.4\r\nPSEdition                      Core\r\nGitCommitId                    7.2.4\r\nOS                             Linux 5.18.5-1-MANJARO #1 SMP PREEMPT_DYNAMIC\r\n                               Thu Jun 16 12:28:47 UTC 2022\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n```\r\n\r\n",
  "closed_at": "2022-06-22T02:01:14Z",
  "comments": [
    {
      "author": "jborean93",
      "author_association": "COLLABORATOR",
      "body": "What version of PowerShell are you running on Windows. I still see the `Parent` property there. The `Parent` property is a code property added by PowerShell, I believe it was in 6 so it won't be present in Windows PowerShell (powershell.exe v5.1).\r\n\r\nKeep in mind Windows recycles their PIDs fairly aggressively so you could get some false links between a process another another one if the original parent has exited.",
      "created_at": "2022-06-19T21:57:32Z",
      "updated_at": "2022-06-19T21:59:51Z"
    },
    {
      "author": "juvtib",
      "author_association": "NONE",
      "body": "You appear to be referring to the property which is always available. \r\n\r\n``` PowerShell\r\nGet-Process | Get-Member | Where-Object { $_.Name -match \"parent\" } | Format-List           \r\n\r\nTypeName   : System.Diagnostics.Process\r\nName       : Parent\r\nMemberType : CodeProperty\r\nDefinition : System.Object Parent{get=GetParentProcess;}\r\n\r\n```\r\n\r\nI'm referring to the instances. No PPID value is shown using my calculated property. \r\n\r\nI do not use and do not have Windows. \r\n\r\n``` PowerShell\r\nGet-Process | \r\n  Select-Object @{name='PPID'; expr={$_.Parent.Id}}, Name | \r\n  Where-Object { $null -eq $_.PPID } | \r\n  Sort-Object PPID, Name \r\n\r\nPPID Name\r\n---- ----\r\n     Isolated Servic\r\n     Isolated Web Co\r\n     Isolated Web Co\r\n     Isolated Web Co\r\n     Isolated Web Co\r\n     Isolated Web Co\r\n     Isolated Web Co\r\n     Isolated Web Co\r\n     Isolated Web Co\r\n     kthreadd\r\n     Privileged Cont\r\n     Privileged Cont\r\n     Privileged Cont\r\n     Privileged Cont\r\n     Privileged Cont\r\n     RDD Process\r\n     RDD Process\r\n     Socket Process\r\n     Socket Process\r\n     Socket Process\r\n     Socket Process\r\n     Socket Process\r\n     systemd\r\n     UVM deferred release queue\r\n     UVM global queue\r\n     UVM Tools Event Queue\r\n     Web Content\r\n     Web Content\r\n     Web Content\r\n     Web Content\r\n     Web Content\r\n     Web Content\r\n     Web Content\r\n     Web Content\r\n     Web Content\r\n     Web Content\r\n     Web Content\r\n     Web Content\r\n     Web Content\r\n     Web Content\r\n     Web Content\r\n     Web Content\r\n\r\n```\r\n\r\n",
      "created_at": "2022-06-19T23:39:53Z",
      "updated_at": "2022-06-19T23:44:45Z"
    },
    {
      "author": "jborean93",
      "author_association": "COLLABORATOR",
      "body": "My apologies, I thought the issue was that the `Parent` property itself was missing on Windows but I see that is not what you were saying. Looking into the code PowerShell is essentially looking at `/proc/$pid/stat` as per https://github.com/PowerShell/PowerShell/blob/9f722ef95072fddd975b1b7b584bf11b2e857a69/src/System.Management.Automation/CoreCLR/CorePsPlatform.cs#L882-L905. The 4th column is the parent process id. Does the following work or does it error for you?\r\n\r\n```powershell\r\nFunction Get-ParentProcess {\r\n    [CmdletBinding()]\r\n    param (\r\n        [Parameter(Mandatory, ValueFromPipeline)]\r\n        [System.Diagnostics.Process[]]\r\n        $Process\r\n    )\r\n\r\n    process {\r\n        foreach ($proc in $Process) {\r\n            $stat = Get-Content -LiteralPath \"/proc/$($proc.Id)/stat\" -Raw\r\n            $ppid = $stat.Split(' ')[3]\r\n\r\n            Write-Verbose -Message \"PPID is $ppid\"\r\n            Get-Process -Id $ppid\r\n        }\r\n    }\r\n}\r\n\r\nGet-Process ... | Get-ParentProcess -Verbose\r\n```\r\n\r\nIf this fails for some reason it will at least indicate what the problem was unlike the `Parent` property which just silently ignores any exceptions.",
      "created_at": "2022-06-19T23:52:11Z",
      "updated_at": "2022-06-19T23:52:11Z"
    },
    {
      "author": "juvtib",
      "author_association": "NONE",
      "body": "\r\n``` PowerShell\r\nFunction Get-ParentProcess {\r\n    [CmdletBinding()]\r\n    param (\r\n        [Parameter(Mandatory, ValueFromPipeline)]\r\n        [System.Diagnostics.Process[]]\r\n        $Process\r\n    )\r\n\r\n    process {\r\n        foreach ($proc in $Process) {\r\n            $stat = Get-Content -LiteralPath \"/proc/$($proc.Id)/stat\" -Raw\r\n            $ppid = $stat.Split(' ')[3]\r\n\r\n            Write-Verbose -Message \"PPID is $ppid\"\r\n            Get-Process -Id $ppid\r\n        }\r\n    }\r\n}\r\n\r\nGet-Process -Id 105455 | Get-ParentProcess -Verbose\r\n\r\n\r\nVERBOSE: PPID is S\r\nGet-Process: \r\nLine |\r\n  15 |              Get-Process -Id $ppid\r\n     |                              ~~~~~\r\n     | Cannot bind parameter 'Id'. Cannot convert value \"S\" to type \"System.Int32\". Error: \"Input string was not in a correct format.\"\r\n\r\n```\r\n\r\n---\r\n\r\nAfter some digging, it appears the bug is splitting on space. \r\n\r\nMost of the affected processes contain spaces in their apparent names. \r\n\r\n``` csharp\r\nvar parts = stat.Split(' ', 5); \r\n\r\n```\r\n\r\n``` PowerShell\r\nGet-Process | \r\n  Where-Object { $null -eq $_.Parent.Id } | \r\n  ForEach-Object {\r\n     Get-Content -LiteralPath \"/proc/$($_.Id)/stat\" -Raw\r\n  } | \r\n  ForEach-Object {\r\n     $_.Substring(0,75)\r\n  }\r\n\r\n\r\n3177 (Isolated Web Co) S 2937 1284 1284 0 -1 4194560 172529 0 924 0 3529 12\r\n82263 (Isolated Web Co) S 82104 1284 1284 0 -1 4194560 9421304 0 84997387 0\r\n82450 (Isolated Web Co) S 82104 1284 1284 0 -1 4194560 187535 0 2112 0 3049\r\n83835 (Isolated Web Co) S 2617 1284 1284 0 -1 4194560 259935 0 8260 0 23795\r\n105212 (Isolated Web Co) S 82104 1284 1284 0 -1 4194560 21147 0 0 0 128 43 \r\n141300 (Isolated Web Co) S 3229 1284 1284 0 -1 4194560 25914 0 2791 0 771 3\r\n141355 (Isolated Web Co) S 3229 1284 1284 0 -1 4194560 9323 0 0 0 29 19 0 0\r\n185104 (Isolated Web Co) S 184933 1284 1284 0 -1 4194560 255626 0 10621 0 1\r\n201038 (Isolated Web Co) S 200795 1284 1284 0 -1 4194560 56720 0 173 0 493 \r\n201127 (Isolated Web Co) S 200795 1284 1284 0 -1 4194560 55610 0 151 0 392 \r\n201174 (Isolated Web Co) S 200795 1284 1284 0 -1 4194560 70349 0 77 0 441 9\r\n203995 (Isolated Web Co) S 200795 1284 1284 0 -1 4194560 38886 0 35 0 146 4\r\n204042 (Isolated Web Co) S 200795 1284 1284 0 -1 4194560 35830 0 75 0 362 1\r\n204434 (Isolated Web Co) S 200795 1284 1284 0 -1 4194560 15414 0 81 0 66 25\r\n205640 (Isolated Web Co) S 200795 1284 1284 0 -1 4194560 39121 0 29 0 148 3\r\n209752 (Isolated Web Co) S 2937 1284 1284 0 -1 4194560 62907 0 158 0 336 50\r\n209819 (Isolated Web Co) S 2937 1284 1284 0 -1 4194560 17616 0 385 0 97 23 \r\n2 (kthreadd) S 0 0 0 0 -1 2129984 0 0 0 0 0 22 0 0 20 0 1 0 22 0 0 18446744\r\n2714 (Privileged Cont) S 2617 1284 1284 0 -1 4194560 41170 0 6 0 294 157 0 \r\n3034 (Privileged Cont) S 2937 1284 1284 0 -1 4194560 6521 0 0 0 56 36 0 0 2\r\n3324 (Privileged Cont) S 3229 1284 1284 0 -1 4194560 13953 0 4 0 119 77 0 0\r\n82201 (Privileged Cont) S 82104 1284 1284 0 -1 4194560 14005 0 0 0 207 184 \r\n185046 (Privileged Cont) S 184933 1284 1284 0 -1 4194560 7142 0 0 0 32 19 0\r\n200891 (Privileged Cont) S 200795 1284 1284 0 -1 4194560 9790 0 0 0 47 24 0\r\n2930 (RDD Process) S 2617 1284 1284 0 -1 4194560 3913 0 1 0 18 16 0 0 20 0 \r\n82555 (RDD Process) S 82104 1284 1284 0 -1 4194560 9689 0 8690 0 681 581 0 \r\n2678 (Socket Process) S 2617 1284 1284 0 -1 4194560 3623 0 1 0 16 19 0 0 20\r\n2999 (Socket Process) S 2937 1284 1284 0 -1 4194560 3639 0 0 0 39 26 0 0 20\r\n3292 (Socket Process) S 3229 1284 1284 0 -1 4194560 3596 0 0 0 17 18 0 0 20\r\n82167 (Socket Process) S 82104 1284 1284 0 -1 4194560 3601 0 0 0 9 12 0 0 2\r\n184971 (Socket Process) S 184933 1284 1284 0 -1 4194560 3602 0 0 0 6 4 0 0 \r\n200858 (Socket Process) S 200795 1284 1284 0 -1 4194560 3604 0 0 0 6 3 0 0 \r\n1 (systemd) S 0 1 1 0 -1 4194560 32765 74580425 169 404020 140 169 2301895 \r\n848 (UVM deferred release queue) S 2 0 0 0 -1 2129984 0 0 0 0 0 0 0 0 20 0 \r\n847 (UVM global queue) S 2 0 0 0 -1 2129984 0 0 0 0 0 0 0 0 20 0 1 0 726 0 \r\n849 (UVM Tools Event Queue) S 2 0 0 0 -1 2129984 0 0 0 0 0 0 0 0 20 0 1 0 7\r\n105455 (Web Content) S 82104 1284 1284 0 -1 4194560 5027 0 0 0 20 16 0 0 20\r\n105458 (Web Content) S 82104 1284 1284 0 -1 4194560 5033 0 0 0 19 16 0 0 20\r\n128011 (Web Content) S 127909 1284 1284 0 -1 4194304 7705 0 0 0 49 21 0 0 2\r\n144932 (Web Content) S 3229 1284 1284 0 -1 4194560 4852 0 0 0 15 9 0 0 20 0\r\n158355 (Web Content) S 82104 1284 1284 0 -1 4194560 5026 0 0 0 13 11 0 0 20\r\n174293 (Web Content) S 3229 1284 1284 0 -1 4194560 4840 0 0 0 7 10 0 0 20 0\r\n174296 (Web Content) S 3229 1284 1284 0 -1 4194560 4838 0 0 0 11 6 0 0 20 0\r\n185323 (Web Content) S 184933 1284 1284 0 -1 4194560 4757 0 0 0 11 8 0 0 20\r\n185407 (Web Content) S 184933 1284 1284 0 -1 4194560 4754 0 0 0 11 7 0 0 20\r\n185556 (Web Content) S 184933 1284 1284 0 -1 4194560 4757 0 0 0 9 8 0 0 20 \r\n192103 (Web Content) S 2617 1284 1284 0 -1 4194560 4782 0 0 0 8 5 0 0 20 0 \r\n199060 (Web Content) S 2617 1284 1284 0 -1 4194560 4778 0 0 0 8 4 0 0 20 0 \r\n200119 (Web Content) S 2617 1284 1284 0 -1 4194560 4775 0 0 0 6 5 0 0 20 0 \r\n208265 (Web Content) S 200795 1284 1284 0 -1 4194560 4905 0 0 0 10 5 0 0 20\r\n208700 (Web Content) S 200795 1284 1284 0 -1 4194560 4917 0 0 0 8 6 0 0 20 \r\n209208 (Web Content) S 200795 1284 1284 0 -1 4194560 4896 0 0 0 8 5 0 0 20 \r\n209987 (Web Content) S 2937 1284 1284 0 -1 4194560 4683 0 0 0 7 3 0 0 20 0 \r\n210030 (Web Content) S 2937 1284 1284 0 -1 4194560 4689 0 0 0 6 4 0 0 20 0 \r\n210152 (Web Content) S 2937 1284 1284 0 -1 4194560 4611 0 0 0 5 1 0 0 20 0 \r\n\r\n```\r\n\r\nA minority of processes appear to spawn directly from process 0. And I am picking those up as `$null`s. \r\n\r\nI assume these child processes should have a parent object in their output so I could `$_.Parent.Id`. \r\n\r\n``` PowerShell\r\nGet-Process | \r\n  Where-Object { $null -eq $_.Parent.Id } | \r\n  ForEach-Object {\r\n     Get-Content -LiteralPath \"/proc/$($_.Id)/stat\" -Raw\r\n  } | \r\n  ForEach-Object {\r\n     $_.Substring(0,75)\r\n  } | \r\n  Select-String '\\(\\w+\\)'\r\n\r\n\r\n2 (kthreadd) S 0 0 0 0 -1 2129984 0 0 0 0 0 22 0 0 20 0 1 0 22 0 0 18446744\r\n1 (systemd) S 0 1 1 0 -1 4194560 32765 74619170 169 404034 141 169 2302207 \r\n\r\n```\r\n\r\n---\r\n\r\nI don't know C# or the `/proc/$($_.Id)/stat` format well. \r\n\r\nBut you need something that properly captures the second column. \r\n\r\nThen you can access the fourth column correctly. \r\n\r\nThis might also affect macOS. \r\n\r\n``` PowerShell\r\nGet-Process | \r\n  Where-Object { $null -eq $_.Parent.Id } | \r\n  ForEach-Object {\r\n     Get-Content -LiteralPath \"/proc/$($_.Id)/stat\" -Raw\r\n  } | \r\n  ForEach-Object {\r\n     ($_.Substring(0,75)) -match '^(\\d+) (\\(.+\\)) (\\w) (\\d+)' | Out-Null\r\n     $matches[4]\r\n  } | \r\n  Select-Object -First 5\r\n\r\n\r\n2937\r\n82104\r\n82104\r\n2617\r\n82104\r\n\r\n```\r\n\r\nMike\r\n\r\n",
      "created_at": "2022-06-20T02:09:27Z",
      "updated_at": "2022-06-20T02:09:27Z"
    },
    {
      "author": "jborean93",
      "author_association": "COLLABORATOR",
      "body": "> After some digging, it appears the bug is splitting on space.\r\n\r\nThat does seem to be the case, the docs for `/proc/[pid]/stat` can be found at https://man7.org/linux/man-pages/man5/proc.5.html with the 2nd column stating\r\n\r\n> The filename of the executable, in parentheses. Strings longer than TASK_COMM_LEN (16) characters (including the terminating null byte) are silently truncated.  This is visible whether or not the executable is swapped out.\r\n\r\nLooking into [fs/proc/array.c](https://github.com/torvalds/linux/blob/master/fs/proc/array.c) I can see https://github.com/torvalds/linux/blob/a111daf0c53ae91e71fd2bfe7497862d14132e3e/fs/proc/array.c#L567-L572 which indicates it's a simple value wrapped in `(...)` limited to 64 characters (not 16). I think you are right though and the logic in PowerShell needs to be better than to split by space. We could try and beef up the matching with regex but there's no way to guarantee the 2nd column record doesn't contain `(` or `)` itself like `2 (testing (123) name) S 0 0 0 ...` making it quite difficult to parse properly. What might be a better method is to read `/proc/[pid/status` and find the line starting with `PPid: \\d+`\r\n\r\n```powershell\r\nGet-Content /proc/$pid/status | Select-String -Pattern 'PPid:\\s+\\d+'\r\n```\r\n\r\nThis is helpful because each line is a new record and the labels clearly indicate what the value is for. The label also does not appear to be localized so this should be fine across languages https://github.com/torvalds/linux/blob/a111daf0c53ae91e71fd2bfe7497862d14132e3e/fs/proc/array.c#L183.\r\n\r\n> This might also affect macOS.\r\n\r\nmacOS uses a different method to get the ppid, there's a system call that seems to be available, or at least accessible through libpsl-native as per https://github.com/PowerShell/PowerShell/blob/9f722ef95072fddd975b1b7b584bf11b2e857a69/src/System.Management.Automation/CoreCLR/CorePsPlatform.cs#L441-L444.\r\n\r\nEdit: Just for reference sake this is the `GetPPid` call implemented in libpsl-native https://github.com/PowerShell/PowerShell-Native/blob/677c086f20209f70ecad379ec48de2562f1db668/src/libpsl-native/src/getppid.cpp#L27-L48.\r\n\r\n<blockquote><div><strong><a href=\"https://man7.org/linux/man-pages/man5/proc.5.html\">proc(5) - Linux manual page</a></strong></div></blockquote>\r\n<blockquote><img src=\"https://opengraph.githubassets.com/ec57dbb23d68a95e7a638ff0ede836fb7cad8792e8d06fef5a852dde2e5e6926/torvalds/linux\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/torvalds/linux\">linux/array.c at a111daf0c53ae91e71fd2bfe7497862d14132e3e \u00b7 torvalds/linux</a></strong></div><div>Linux kernel source tree. Contribute to torvalds/linux development by creating an account on GitHub.</div></blockquote>\r\n<blockquote><img src=\"https://opengraph.githubassets.com/ec57dbb23d68a95e7a638ff0ede836fb7cad8792e8d06fef5a852dde2e5e6926/torvalds/linux\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/torvalds/linux\">linux/array.c at a111daf0c53ae91e71fd2bfe7497862d14132e3e \u00b7 torvalds/linux</a></strong></div><div>Linux kernel source tree. Contribute to torvalds/linux development by creating an account on GitHub.</div></blockquote>",
      "created_at": "2022-06-20T02:56:51Z",
      "updated_at": "2022-06-20T03:16:13Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Dup #12908 (PR #12925)",
      "created_at": "2022-06-20T03:40:16Z",
      "updated_at": "2022-06-20T03:40:16Z"
    },
    {
      "author": "jborean93",
      "author_association": "COLLABORATOR",
      "body": "I've created an alternative solution to #12925, hopefully one of the 2 can move forward https://github.com/PowerShell/PowerShell/pull/17545.",
      "created_at": "2022-06-20T21:31:28Z",
      "updated_at": "2022-06-20T21:31:28Z"
    },
    {
      "author": "juvtib",
      "author_association": "NONE",
      "body": "Thanks for taking a look at this. \r\n\r\nI'm sorry I didn't see the duplicate issue earlier. The connection was not obvious to me until after your comments. \r\n\r\nHopefully, one of the patches will be accepted. \r\n\r\nMike\r\n",
      "created_at": "2022-06-21T00:11:03Z",
      "updated_at": "2022-06-21T00:11:03Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as duplicate and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2022-06-22T02:01:13Z",
      "updated_at": "2022-06-22T02:01:13Z"
    }
  ],
  "created_at": "2022-06-19T21:39:24Z",
  "labels": [
    "Resolution-Duplicate",
    "Resolution-Fixed",
    "Needs-Triage"
  ],
  "number": 17541,
  "state": "closed",
  "title": "Parent Process Object is Missing",
  "updated_at": "2022-09-29T04:43:49Z"
}