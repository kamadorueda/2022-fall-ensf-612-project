{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10379",
  "author": "johnykes",
  "body": "Hi!\r\nI have a recently created C# win forms application using .Net Framework 4.7.2.\r\nWhen I try to install Powershell NuGet I get the following error \r\n\"Package 'PowerShell 6.2.2' has a package type 'DotnetTool' that is not supported by project 'myProject'.\"\r\n\r\nNothing added to this project yet (no other NuGets, libraries, etc...)",
  "closed_at": "2019-08-20T12:09:15Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "PowerShell 6.2.2 isn't supported under .NET Framework -- it's built, tested, and runs on .NET Core 2.x; you cannot use PowerShell versions 6.x and above with .NET Framework, to my understanding. \ud83d\ude42 ",
      "created_at": "2019-08-19T12:19:10Z",
      "updated_at": "2019-08-19T12:19:10Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "@johnykes the package you're linking to is the [PowerShell dotnet global tool](https://devblogs.microsoft.com/powershell/introducing-powershell-as-net-global-tool/), which isn't designed for use in projects -- it's a global tool for the `dotnet` CLI (unfortunately they require a NuGet package like this to consume).\r\n\r\nIf you're targeting only Windows PowerShell (version 5.1) you might be looking for https://www.nuget.org/packages/Microsoft.PowerShell.5.ReferenceAssemblies/.\r\n\r\nIf you're building a module or something else to be loaded/run from PowerShell, then you might want to target https://www.nuget.org/packages/PowerShellStandard.Library/ for compatibility with both PowerShell 5.1 and PowerShell 7. You'll need to retarget your application to .NET Standard 2.0 (`netstandard2.0`).\r\n\r\nIf you're building an application that hosts PowerShell and want it to be compatible with both Windows PowerShell 5.1 and PowerShell 7, you'll want something like this in your csproj:\r\n\r\n```csproj\r\n<PropertyGroup>\r\n    <!-- all the other stuff needed -->\r\n    <TargetFrameworks>net472;netcoreapp3.0</TargetFrameworks>\r\n</PropertyGroup>\r\n\r\n<PropertyGroup Condition=\"'$(TargetFramework)' == 'net472'\">\r\n    <PackageReference Include=\"Microsoft.PowerShell.5.ReferenceAssemblies\" Version=\"1.1.0\" />\r\n</PropertyGroup>\r\n\r\n<PropertyGroup Condition=\"'$(TargetFramework)' == 'netcoreapp3.0'\">\r\n    <PackageReference Include=\"Microsoft.PowerShell.SDK\" Version=\"7.0.0-preview.2\" />\r\n</PropertyGroup>\r\n```\r\n\r\nThat will then allow conditional compilation in the code:\r\n\r\n```csharp\r\n#if NET472\r\n    // Windows PowerShell code\r\n#else\r\n    // PowerShell 7 code\r\n#endif\r\n```\r\n\r\nIn that scenario, because you have two targets, you would produce two sets of binaries.\r\n\r\nNote that because you are writing a WinForms application, it won't work in PowerShell 6.x, only PowerShell 7+.",
      "created_at": "2019-08-19T22:50:32Z",
      "updated_at": "2019-08-19T23:03:00Z"
    },
    {
      "author": "johnykes",
      "author_association": "NONE",
      "body": "I have another project c# win forms application using .NET Framework 4.6.1 and NuGet \"PowerShell\" by Nasim\r\n![image](https://user-images.githubusercontent.com/48965850/63345150-c3be1c80-c35a-11e9-8612-d689cfa39152.png)\r\nI can't find anymore this NuGet (by Nasim)\r\nI tried your solutions but I can't use these NuGets in the same way, like below:\r\n\r\n//Create a powershell terminal\r\nPowerShell.RunPowerShell PS = new PowerShell.RunPowerShell();\r\n\r\n//Set powershell script\r\n string psCommand = \"$s = New-PSSession -ComputerName \" + server... blah blah\r\n\r\n //Run powershell script\r\nstring output = PS.InvokePS(psCommand);",
      "created_at": "2019-08-20T11:57:40Z",
      "updated_at": "2019-08-20T12:00:40Z"
    },
    {
      "author": "johnykes",
      "author_association": "NONE",
      "body": "But using https://www.nuget.org/packages/Microsoft.PowerShell.5.ReferenceAssemblies/\r\nI can use powershell like in the stackoverflow example\r\nhttps://stackoverflow.com/questions/19601043/how-do-i-run-powershell-command-in-windows-form-application\r\n\r\nThanks!\n\n<blockquote><img src=\"https://secure.gravatar.com/avatar/cfba7016de8e12d5b3017130f75ef8ed\" width=\"48\" align=\"right\"><div><strong><a href=\"https://www.nuget.org/packages/Microsoft.PowerShell.5.ReferenceAssemblies/\">Microsoft.PowerShell.5.ReferenceAssemblies 1.1.0</a></strong></div><div>Contains the SDK reference assemblies for PowerShell version 5</div></blockquote>\n<blockquote><img src=\"https://cdn.sstatic.net/Sites/stackoverflow/img/apple-touch-icon@2.png?v=73d79a89bded\" width=\"48\" align=\"right\"><div>Stack Overflow</div><div><strong><a href=\"https://stackoverflow.com/questions/19601043/how-do-i-run-powershell-command-in-windows-form-application\">How do I Run PowerShell command in windows form application?</a></strong></div><div>I am currently trying to implement the below ps command  in my c# forms app.\n\nIm using Quest Powershell cmdlet \n\n    Add-PSSnapin -Name Quest.ActiveRoles.ADManagement\n    get-qadmemberof -identity ...</div></blockquote>",
      "created_at": "2019-08-20T12:09:12Z",
      "updated_at": "2019-08-20T12:09:14Z"
    }
  ],
  "created_at": "2019-08-19T11:50:14Z",
  "number": 10379,
  "state": "closed",
  "title": "Package 'PowerShell 6.2.2' has a package type 'DotnetTool' that is not supported by project 'myProject'.",
  "updated_at": "2019-08-20T12:09:15Z"
}