{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5766",
  "author": "kvprasoon",
  "body": "Steps to reproduce\r\n------------------\r\n\r\n```\r\nSplit-Path -Path $PSHOME -LeafBase\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```\r\nPS> Split-Path -Path $PSHOME -LeafBase\r\n\r\nPS> 6.0.0-rc.2 #as this is a folder\r\n\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n```\r\nPS> 6.0.0-rc\r\n# .2 got trimmed assuming it as an extension\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n\r\n\r\n```\r\n#Windows\r\nName                           Value                                                                                                                                    \r\n----                           -----                                                                                                                                    \r\nPSVersion                      6.0.0-rc.2                                                                                                                               \r\nPSEdition                      Core                                                                                                                                     \r\nGitCommitId                    v6.0.0-rc.2                                                                                                                              \r\nOS                             Microsoft Windows 10.0.17063                                                                                                             \r\nPlatform                       Win32NT                                                                                                                                  \r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}                                                                                                                  \r\nPSRemotingProtocolVersion      2.3                                                                                                                                      \r\nSerializationVersion           1.1.0.1                                                                                                                                  \r\nWSManStackVersion              3.0                                                                                                                                      \r\n\r\n\r\n#Reproducible in Ubuntu as well\r\n```\r\n",
  "closed_at": "2018-01-03T13:40:52Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "What is \"6.0.0-rc.2\" - file name or folder name? How can we detect the difference?",
      "created_at": "2018-01-01T07:28:30Z",
      "updated_at": "2018-01-01T07:28:30Z"
    },
    {
      "author": "FireInWinter",
      "author_association": "NONE",
      "body": "Split-Path is basically just doing string operations, it doesn't determine if the Path exists.  So you could do something like\r\n```\r\nSplit-Path -Path '/asdf/asdf.foo' -LeafBase\r\nasdf\r\n```\r\nAnd it won't give you an error that it doesn't exist.  So for your example, $PSHOME, you know it is a directory, but Split-Path doesn't.  To get what you want, you could do something like:\r\n```\r\n(Get-Item -Path $PSHOME).BaseName\r\n6.0.0-rc.2\r\n```\r\nBut that works because the object returned from Get-Item in this case is an IO.DirectoryInfo object.  If the item doesn't exist, you'll have to worry about handling the resulting error.",
      "created_at": "2018-01-03T00:46:16Z",
      "updated_at": "2018-01-03T00:46:16Z"
    },
    {
      "author": "kvprasoon",
      "author_association": "CONTRIBUTOR",
      "body": "@FireInWinter , How about in a script where a variable can be a directory path or a file path, and the intention will be to use `Split-Path` as those are not present at the time of execution or the result is being updated in a database or so down the line.\r\n  ",
      "created_at": "2018-01-03T03:28:22Z",
      "updated_at": "2018-01-03T03:29:03Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@kvprasoon if the item does not yet exist, there is no way to know that a string is a file or a directory other than by intentions. If you call `Split-Path -LeafBase -Path c:\\path\\foo.bar` you are implying that this path is intended to be a file and you are looking for the base of the file name. `Split-Path` is not clairvoyant and cannot divine the future of this path. ",
      "created_at": "2018-01-03T09:29:24Z",
      "updated_at": "2018-01-03T09:29:24Z"
    },
    {
      "author": "kvprasoon",
      "author_association": "CONTRIBUTOR",
      "body": "@markekraus , Yes I agree to your statement. But I believe this is a valid use case and the script logic can go wrong if there is such directories consumed by `Split-Path`",
      "created_at": "2018-01-03T10:46:44Z",
      "updated_at": "2018-01-03T10:46:44Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@kvprasoon I don't understand. If the path doesn't exist, use `split-path`, if it does, use the data returned by `get-item`. There is simply no way to just see the future and know that a string that contains data that is ambiguous for a file or a folder and divine the future of that string as a real world item. If you tell `split-path` the string is a file path by supplying `-LeafBase` it assumes *you* know that path is file and not a directory. If you don't want an invalid leaf base for that, then don't supply it a string that will be used for a directory. It cannot guess what your intentions are for that string. It should not be used to validate a path, that's not its purpose. \r\n  ",
      "created_at": "2018-01-03T11:12:20Z",
      "updated_at": "2018-01-03T11:12:39Z"
    },
    {
      "author": "kvprasoon",
      "author_association": "CONTRIBUTOR",
      "body": "@markekraus  - I understand that the `Split-Path` cmdlet will not(or should not) have any idea on the path's existence. But I raised the concern to notify the error I got.",
      "created_at": "2018-01-03T13:28:02Z",
      "updated_at": "2018-01-03T13:28:02Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "In this case I believe its `by design` and not really an error.",
      "created_at": "2018-01-03T13:29:51Z",
      "updated_at": "2018-01-03T13:29:51Z"
    },
    {
      "author": "kvprasoon",
      "author_association": "CONTRIBUTOR",
      "body": "Closing the issue #5766 assuming the `Split-Path` cmdlet consumer will use it with `-LeafeBase` parameter only if the consumer is damn sure on the target path will be of a file.",
      "created_at": "2018-01-03T13:40:52Z",
      "updated_at": "2018-01-03T13:40:52Z"
    }
  ],
  "created_at": "2017-12-31T14:49:58Z",
  "labels": [
    "Issue-Discussion",
    "Resolution-Answered",
    "WG-Engine-Providers"
  ],
  "number": 5766,
  "state": "closed",
  "title": "Wrong output for Split-Path -LeafBase against a path contains .(dot) in last directory the name",
  "updated_at": "2018-01-03T14:57:46Z"
}