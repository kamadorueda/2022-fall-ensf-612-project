{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4770",
  "author": "RickFlist",
  "body": "This #Requires statement does not throw an error when the only available version is v2.0. I have verified syntax is correct by fudging the GUID; it throws an error on import.\r\n\r\n#Requires -Modules @{ModuleName=\"Hyper-V\";ModuleVersion=\"1.1.0.0\";GUID=\"af4bddd0-8583-4ff2-84b2-a33f5c8de8a7\"}\r\n\r\nI want it to error if this is the only version on the system, but the above requires statement works if Hyper-V Module 2.0 is installed\r\n\r\n09/07 10:28:38 -|- [ADMIN] -|- History: 33\r\nCWD: D:\\Source\\MAX-CPUB-LAB\\Modules\\>\r\nPS>(Get-Module Hyper-V) | Select *\r\n\r\nName                        : Hyper-V\r\nPath                        : C:\\windows\\Microsoft.Net\\assembly\\GAC_MSIL\\Microsoft.HyperV.PowerShell.Cmdlets\\v4.0_10.0.0.0__31bf3856ad364e35\\Microsoft.HyperV.PowerShell.Cmdlets.dll\r\nImplementingAssembly        : Microsoft.HyperV.PowerShell.Cmdlets, Version=10.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\r\nGuid                        : af4bddd0-8583-4ff2-84b2-a33f5c8de8a7\r\nHelpInfoUri                 : https://go.microsoft.com/fwlink/?linkid=390775\r\nModuleBase                  : C:\\windows\\system32\\WindowsPowerShell\\v1.0\\Modules\\Hyper-V\\2.0.0.0\r\nVersion                     : 2.0.0.0\r\nModuleType                  : Binary\r\nExportedCmdlets             : {[Add-VMAssignableDevice, Add-VMAssignableDevice], [Add-VMDvdDrive, Add-VMDvdDrive], [Add-VMFibreChannelHba, Add-VMFibreChannelHba], [Add-VMGpuPartitionAdapter, Add-VMGpuPartitionAdapter]...}\r\nExportedCommands            : {[Add-VMAssignableDevice, Add-VMAssignableDevice], [Add-VMDvdDrive, Add-VMDvdDrive], [Add-VMFibreChannelHba, Add-VMFibreChannelHba], [Add-VMGpuPartitionAdapter, Add-VMGpuPartitionAdapter]...}\r\nRootModule                  : Microsoft.HyperV.PowerShell.Cmdlets.dll\r\nExportedFormatFiles         : {C:\\windows\\system32\\WindowsPowerShell\\v1.0\\Modules\\Hyper-V\\2.0.0.0\\Hyper-V.Format.ps1xml}\r\nExportedTypeFiles           : {C:\\windows\\system32\\WindowsPowerShell\\v1.0\\Modules\\Hyper-V\\2.0.0.0\\Hyper-V.Types.ps1xml}\r\n\r\n\r\nSteps to reproduce\r\n------------------\r\nAdd this line to the top of a .psm1 file\r\n\r\n```powershell\r\n#Requires -Modules @{ModuleName=\"Hyper-V\";ModuleVersion=\"1.1.0.0\";GUID=\"af4bddd0-8583-4ff2-84b2-a33f5c8de8a7\"}\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\nAn error similar to the following is thrown\r\n```powershell\r\nipmo : The script 'CP-LocalVirtualMachines.psm1' cannot be run because the following modules that are specified by the \"#requires\" statements of the script are missing: Hyper-V.\r\nAt line:1 char:1\r\n+ ipmo .\\CP-LocalVirtualMachines -Force\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : ResourceUnavailable: (CP-LocalVirtualMachines.psm1:String) [Import-Module], ScriptRequiresException\r\n    + FullyQualifiedErrorId : ScriptRequiresMissingModules,Microsoft.PowerShell.Commands.ImportModuleCommand\r\n```\r\n\r\nActual behavior\r\n---------------\r\nNo error is thrown; no information indicating an error\r\n```none\r\n\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\nPS>$PSVersionTable.GetEnumerator() | ForEach-Object { Write-Host ('{0,-26}: {1}' -f $PSItem.Key,($PSItem.Value -join \", \" ) ) } | Out-String\r\nPSVersion                 : 5.1.15063.502\r\nPSEdition                 : Desktop\r\nPSCompatibleVersions      : 1.0, 2.0, 3.0, 4.0, 5.0, 5.1.15063.502\r\nBuildVersion              : 10.0.15063.502\r\nCLRVersion                : 4.0.30319.42000\r\nWSManStackVersion         : 3.0\r\nPSRemotingProtocolVersion : 2.3\r\nSerializationVersion      : 1.1.0.1\r\n\r\n```\r\n",
  "closed_at": "2017-09-07T18:46:47Z",
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I believe this is intended.  Since the Hyper-V module retains the same guid, PowerShell will treat the version as minimal version and if an exact version isn't found, it'll load the latest version.  If you want to error out, you'll have to do it as a runtime check.",
      "created_at": "2017-09-07T18:46:47Z",
      "updated_at": "2017-09-07T18:46:47Z"
    },
    {
      "author": "RickFlist",
      "author_association": "NONE",
      "body": "When I see the word \"require\" is says to me \"I require ONLY this version\". I'm not sure who says \"I REQUIRE chemotherapy but aspirin is OK because it is in the Pfizer bottle\". Either way the documentation should either document the non-intuitive function of the feature or the feature should be changed.",
      "created_at": "2017-09-08T14:55:05Z",
      "updated_at": "2017-09-08T14:55:05Z"
    }
  ],
  "created_at": "2017-09-07T18:14:08Z",
  "number": 4770,
  "state": "closed",
  "title": "#Requires Statement Not Honoring Version",
  "updated_at": "2017-09-08T14:55:05Z"
}