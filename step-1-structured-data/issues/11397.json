{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11397",
  "author": "iSazonov",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nBefore the change we used Newtonsoft Json.NET `JObject.Parse()` method to validate Json. The method is not best choice to validate Json because it doesn't parse valid primitives.\r\n\r\nAs result we:\r\n- migrate the cmdlet to new Core API - System.Text.Json. JsonDocument.Parse()\r\n- change old tests to follow JSON standard (use double quotes as delimiters instead of single quotes)\r\n- add new tests\r\n- enable nullable reference types to follow best practice\r\n\r\nFormally it is a breaking change because Newtonsoft Json.NET `JObject.Parse()` accepted single quote delimiters.\r\n\r\n## PR Context\r\n\r\nFix #11384\r\n\r\nNeed review #5797\r\n\r\n.Net docs https://docs.microsoft.com/en-us/dotnet/standard/serialization/system-text-json-migrate-from-newtonsoft-how-to\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [ ] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [ ] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2022-04-16T19:12:37Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@mklement0 @jochenvanwylick @thedavecarroll @vexx32  The PR was moved to .Net Runtime 5.0 Preview1. Please play with compiled artifacts and feedback.",
      "created_at": "2020-03-29T07:20:17Z",
      "updated_at": "2020-03-29T07:20:17Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMainainer, Please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2020-05-27T02:02:14Z",
      "updated_at": "2020-05-27T02:02:14Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Rebase to resolve merge conflicts.",
      "created_at": "2020-06-11T11:32:25Z",
      "updated_at": "2020-06-11T11:32:41Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMainainer, Please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2020-06-18T14:00:28Z",
      "updated_at": "2020-06-18T14:00:28Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Rebased to move 5.0 RC2.",
      "created_at": "2020-10-23T10:34:21Z",
      "updated_at": "2020-10-23T10:34:21Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2020-11-03T14:00:07Z",
      "updated_at": "2020-11-03T14:00:07Z"
    },
    {
      "author": "hilari0n",
      "author_association": "NONE",
      "body": "Doesn't this change actually cause a performance drop as it causes the validated JSON to be parsed twice in `ProcessRecord`?\r\nI.e. it's parsed first time explicitly, using `JsonDocument.Parse(Json)` (System.Text.Json parser), and then when `_jschema.Validate(Json)` is called (from NJsonSchema.JsonSchema, which internally parses it - I'm not sure, if it uses System.Text.Json parser or the Newtonsoft.Json parser).",
      "created_at": "2021-02-16T22:27:15Z",
      "updated_at": "2021-02-16T22:27:15Z"
    }
  ],
  "created_at": "2019-12-18T17:47:52Z",
  "number": 11397,
  "state": "closed",
  "title": "Migrate Test-Json to System.Text.Json API",
  "updated_at": "2022-04-16T19:12:40Z"
}