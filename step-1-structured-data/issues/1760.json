{
  "_url": "https://github.com/PowerShell/PowerShell/issues/1760",
  "author": "SteveL-MSFT",
  "body": "``` powershell\nclass TestHost : System.Management.Automation.Host.PSHost\n{\n    [String]$myName = \"MyHost\"\n    [Version]$myVersion = [Version]\"1.0.0.0\"\n    [Guid]$myInstanceId = [guid]::NewGuid()\n    [System.Globalization.CultureInfo]$myCurrentCulture = \"en-us\"\n    [System.Globalization.CultureInfo]$myCurrentUICulture = \"en-us\"\n    [System.Management.Automation.Host.PSHostUserInterface]$myUI = $null\n    [bool]$IsInteractive\n    [void]SetShouldExit([int]$exitCode) { }\n    [void]EnterNestedPrompt(){ throw \"Unsupported\" }\n    [void]ExitNestedPrompt(){ throw \"Unsupported\" }\n    [void]NotifyBeginApplication() { }\n    [void]NotifyEndApplication() { }\n    [string]get_Name() { return $this.myName; write-host \"MyName\" }\n    [version]get_Version() { return $this.myVersion }\n    [System.Globalization.CultureInfo]get_CurrentCulture() { return $this.myCurrentCulture }\n    [System.Globalization.CultureInfo]get_CurrentUICulture() { return $this.myCurrentUICulture }\n    [System.Management.Automation.Host.PSHostUserInterface]get_UI() { return $this.myUI }\n    [guid]get_InstanceId() { return $this.myInstanceId }\n    TestHost() {\n    }\n    TestHost([bool]$isInteractive) {\n        $this.IsInteractive = $isInteractive\n    }\n}\n\n$q = [TestHost]::New()\n$q | fl # has Name: MyHost entry\n$q.Name # doesn't output anything\n```\n\nExpected: $q.Name and Name in ($q | fl) has the same value\n",
  "closed_at": null,
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "TFS:7200201\n",
      "created_at": "2016-09-29T20:22:37Z",
      "updated_at": "2016-09-29T20:22:37Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "This issue doesn't repro on PS Core 6.0.2 and PS Core built from the latest master branch. See below.\r\nI think we can close this issue, but it would be better to add a test using the repro, so as to make sure it doesn't regress.\r\n\r\n```powershell\r\n[C:\\Program Files\\PowerShell\\6.0.2]\r\nPS:1> class TestHost : System.Management.Automation.Host.PSHost\r\n>> {\r\n>>     [String]$myName = \"MyHost\"\r\n>>     [Version]$myVersion = [Version]\"1.0.0.0\"\r\n>>     [Guid]$myInstanceId = [guid]::NewGuid()\r\n>>     [System.Globalization.CultureInfo]$myCurrentCulture = \"en-us\"\r\n>>     [System.Globalization.CultureInfo]$myCurrentUICulture = \"en-us\"\r\n>>     [System.Management.Automation.Host.PSHostUserInterface]$myUI = $null\r\n>>     [bool]$IsInteractive\r\n>>     [void]SetShouldExit([int]$exitCode) { }\r\n>>     [void]EnterNestedPrompt(){ throw \"Unsupported\" }\r\n>>     [void]ExitNestedPrompt(){ throw \"Unsupported\" }\r\n>>     [void]NotifyBeginApplication() { }\r\n>>     [void]NotifyEndApplication() { }\r\n>>     [string]get_Name() { return $this.myName; write-host \"MyName\" }\r\n>>     [version]get_Version() { return $this.myVersion }\r\n>>     [System.Globalization.CultureInfo]get_CurrentCulture() { return $this.myCurrentCulture }\r\n>>     [System.Globalization.CultureInfo]get_CurrentUICulture() { return $this.myCurrentUICulture }\r\n>>     [System.Management.Automation.Host.PSHostUserInterface]get_UI() { return $this.myUI }\r\n>>     [guid]get_InstanceId() { return $this.myInstanceId }\r\n>>     TestHost() {\r\n>>     }\r\n>>     TestHost([bool]$isInteractive) {\r\n>>         $this.IsInteractive = $isInteractive\r\n>>     }\r\n>> }\r\n[C:\\Program Files\\PowerShell\\6.0.2]\r\nPS:2> $q = [TestHost]::New()\r\n[C:\\Program Files\\PowerShell\\6.0.2]\r\nPS:3> $q | fl\r\n\r\n\r\nmyName             : MyHost\r\nmyVersion          : 1.0.0.0\r\nmyInstanceId       : 22963d78-f817-4ab9-b0c4-281430e51698\r\nmyCurrentCulture   : en-US\r\nmyCurrentUICulture : en-US\r\nmyUI               :\r\nIsInteractive      : False\r\nName               : MyHost\r\nVersion            : 1.0.0.0\r\nInstanceId         : 22963d78-f817-4ab9-b0c4-281430e51698\r\nUI                 :\r\nCurrentCulture     : en-US\r\nCurrentUICulture   : en-US\r\nPrivateData        :\r\nDebuggerEnabled    : False\r\n\r\n[C:\\Program Files\\PowerShell\\6.0.2]\r\nPS:4> $q.Name\r\nMyHost\r\n```",
      "created_at": "2018-04-26T06:27:10Z",
      "updated_at": "2018-04-26T06:27:10Z"
    }
  ],
  "created_at": "2016-08-12T19:44:56Z",
  "labels": [
    "WG-Quality-Test",
    "WG-Language"
  ],
  "number": 1760,
  "state": "open",
  "title": "Inheritance from class with abstract property is inconsistent",
  "updated_at": "2018-06-21T21:16:00Z"
}