{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13998",
  "author": "mklement0",
  "body": "Force-adding an ETS instance property to a .NET type that already has a property with the given name normally _overrides_ the type-native property. That is, the ETS member then shadows the native property.\r\n\r\nUnexpectedly - and this bug also exists in Windows PowerShell - `ConvertTo-Json` does not respect this during serialization and ignores the overriding ETS property.\r\n\r\n## Steps to reproduce\r\n\r\n```powershell\r\n# Override the type-native 'Height' property.\r\n$size = [System.Drawing.Size]::new(1,1) | Add-member -force -PassThru Height OVERRIDDEN\r\n\r\n# Make sure the overridden property is in effect.\r\n$size.Height, ($size | ConvertTo-Json | ConvertFrom-Json).Height | Should -Be OVERRIDDEN, OVERRIDDEN\r\n```\r\n\r\n## Expected behavior\r\n\r\nThe test should succeed.\r\n\r\n## Actual behavior\r\n\r\nThe test fails, because `ConvertTo-Json` unexpectedly ignores the overriding ETS property and reports the type-native property value; note how direct property access _did_ respect the ETS property:\r\n\r\n```none\r\nExpected @('OVERRIDDEN', 'OVERRIDDEN'), but got @('OVERRIDDEN', 1).\r\n```\r\n\r\n## Environment data\r\n\r\n```none\r\nPowerShell Core 7.1.0-rc.2\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I'd said it is a bug otherwise it would be a breaking change.",
      "created_at": "2020-11-08T05:36:55Z",
      "updated_at": "2020-11-08T05:36:55Z"
    }
  ],
  "created_at": "2020-11-06T15:00:15Z",
  "labels": [
    "Issue-Question",
    "WG-Cmdlets-Utility"
  ],
  "number": 13998,
  "state": "open",
  "title": "ConvertTo-Json ignores ETS instance properties that shadow type-native properties",
  "updated_at": "2020-11-08T05:36:55Z"
}