{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5587",
  "author": "bigboy-pdb-spam",
  "body": "Steps to reproduce\r\n------------------\r\n\r\n```powershell\r\nAdd-Type -LiteralPath \"C:\\Windows\\Microsoft.NET\\assembly\\GAC_MSIL\\System.Windows.Forms\\v4.0_4.0.0.0__b77a5c561934e089\\System.Windows.Forms.dll\"\r\n$form1 = New-Object System.Windows.Forms.Form\r\n$form1.Text = \"Primal Form\"\r\n$form1.StartPosition = 4\r\n$form1.ClientSize = \"284,262\"\r\n$form1.ShowDialog()\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\nDialog appears\r\n\r\nActual behavior\r\n---------------\r\n\r\nGenerates error and crashes PowerShell.\r\n\r\nThe error is as follows:\r\n```none\r\nNew-Object : Exception calling \".ctor\" with \"0\" argument(s): \"Could not load type 'System.Drawing.Drawing2D.InterpolationMode' from assembly 'System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.\"\r\nAt C:\\Users\\Jen\\Desktop\\newform.ps1:2 char:10\r\n+ $form1 = New-Object System.Windows.Forms.Form\r\n+          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : InvalidOperation: (:) [New-Object], MethodInvocationException\r\n+ FullyQualifiedErrorId : ConstructorInvokedThrowException,Microsoft.PowerShell.Commands.NewObjectCommand\r\n```\r\n\r\nTo get the error message, I saved the script as \"newform.ps1\" and ran it using:\r\n```powershell\r\n.\\newform.ps1 2>&1 > error.txt\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value                                                                                    \r\n----                           -----                                                                                    \r\nPSVersion                      6.0.0-rc                                                                                 \r\nPSEdition                      Core                                                                                     \r\nGitCommitId                    v6.0.0-rc                                                                                \r\nOS                             Microsoft Windows 10.0.16299                                                             \r\nPlatform                       Win32NT                                                                                  \r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}                                                                  \r\nPSRemotingProtocolVersion      2.3                                                                                      \r\nSerializationVersion           1.1.0.1                                                                                  \r\nWSManStackVersion              3.0                                                                                      \r\n```\r\n\r\nAdditional data\r\n----------------\r\n\r\nThis code worked with the version of PowerShell installed in Windows 10:\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value                                                                                   \r\n----                           -----                                                                                   \r\nPSVersion                      5.1.16299.64                                                                            \r\nPSEdition                      Desktop                                                                                 \r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}                                                                 \r\nBuildVersion                   10.0.16299.64                                                                           \r\nCLRVersion                     4.0.30319.42000                                                                         \r\nWSManStackVersion              3.0                                                                                     \r\nPSRemotingProtocolVersion      2.3                                                                                     \r\nSerializationVersion           1.1.0.1                                                                                 \r\n```\r\nAlso, I extracted the assemblies in both PowerShell versions, after importing **System.Windows.Forms**, using:\r\n```powershell\r\n[System.AppDomain]::CurrentDomain.GetAssemblies() | ConvertTo-Csv > assemblies.csv\r\n```\r\n\r\nWhen I compared them, both included **System.Windows.Forms** and **System.Drawing**.",
  "closed_at": "2017-11-30T10:28:07Z",
  "comments": [
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "`System.Windows.Forms.Form` is not compatible with Core CLR. It is a Full CLR  only assembly. Not all Full CLR assemblies work in .NET Core. This one especially because it has OS dependencies. CoreFX is intended to be cross-platform. This kind of functionality wouldn't work on a raspberry pi.\r\n\r\n",
      "created_at": "2017-11-30T10:27:24Z",
      "updated_at": "2017-11-30T10:27:24Z"
    },
    {
      "author": "vkvikaskmr",
      "author_association": "NONE",
      "body": "So, what is the alternative if we want to use forms in our modules?",
      "created_at": "2018-02-06T09:21:44Z",
      "updated_at": "2018-02-06T09:21:44Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "You should use Windows PowerShell until .Net Core port `System.Windows.Forms`.",
      "created_at": "2018-02-06T10:40:36Z",
      "updated_at": "2018-02-06T10:40:36Z"
    },
    {
      "author": "vkvikaskmr",
      "author_association": "NONE",
      "body": "thanks @iSazonov ",
      "created_at": "2018-02-06T10:44:08Z",
      "updated_at": "2018-02-06T10:44:08Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov as far as I have seen, there are no plans to port `System.Windows.Forms` to .NET Core. Have you seen otherwise?",
      "created_at": "2018-02-06T12:24:17Z",
      "updated_at": "2018-02-06T12:24:17Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@markekraus Today there are no such plans. But MSFT follows community feedbacks. I have no doubt that there will be a time when MSFT will have to offer a solution.",
      "created_at": "2018-02-07T03:05:14Z",
      "updated_at": "2018-02-07T03:05:14Z"
    }
  ],
  "created_at": "2017-11-30T05:56:38Z",
  "number": 5587,
  "state": "closed",
  "title": "Cannot Create Dialog After Importing Windows.Forms DLL",
  "updated_at": "2018-02-07T03:05:14Z"
}