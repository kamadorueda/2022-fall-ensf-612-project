{
  "_url": "https://github.com/PowerShell/PowerShell/issues/17197",
  "author": "Fragmachine",
  "body": "### Prerequisites\r\n\r\n- [X] Write a descriptive title.\r\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- [X] Search the existing issues.\r\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\r\n\r\n### Steps to reproduce\r\n\r\nCalling e.g. 'Remove-Item' on a path longer than MAX_PATH will result in the following error,\r\n`Remove-Item: The system cannot find the path specified.`\r\nThis works as expected in the PowerShell 5.1 version. \r\nSpecifically, the `longPathAware` setting is missing from the manifest. Doing a simple Hex find in the executable reveals this while being there in the older PowerShell version.\r\n\r\nSuggested fix is to add the following to the manifest (from [Microsoft](https://docs.microsoft.com/en-us/windows/win32/fileio/maximum-file-path-limitation?tabs=cmd)):\r\n`\r\n<application xmlns=\"urn:schemas-microsoft-com:asm.v3\">\r\n    <windowsSettings xmlns:ws2=\"http://schemas.microsoft.com/SMI/2016/WindowsSettings\">\r\n        <ws2:longPathAware>true</ws2:longPathAware>\r\n    </windowsSettings>\r\n</application>\r\n`\r\n\r\n\r\n### Expected behavior\r\n\r\n```console\r\nPS> Remove-Item <SOME_MAX_PATH_EXCEEDING_PATH>\r\nPS>\r\n```\r\n\r\n\r\n### Actual behavior\r\n\r\n```console\r\nPS> Remove-Item <SOME_MAX_PATH_EXCEEDING_PATH>\r\nRemove-Item: The system cannot find the path specified.\r\n```\r\n\r\n\r\n### Error details\r\n\r\n```console\r\nPS> get-error\r\n\r\nException             :\r\n    Type            : System.ComponentModel.Win32Exception\r\n    NativeErrorCode : 3\r\n    ErrorCode       : -2147467259\r\n    TargetSite      :\r\n        Name          : IsReparsePointLikeSymlink\r\n        DeclaringType : Microsoft.PowerShell.Commands.InternalSymbolicLinkLinkCodeMethods\r\n        MemberType    : Method\r\n        Module        : System.Management.Automation.dll\r\n    Message         : The system cannot find the path specified.\r\n    Source          : System.Management.Automation\r\n    HResult         : -2147467259\r\n    StackTrace      :\r\n   at Microsoft.PowerShell.Commands.InternalSymbolicLinkLinkCodeMethods.IsReparsePointLikeSymlink(FileSystemInfo fileInfo)\r\n   at Microsoft.PowerShell.Commands.RemoveItemCommand.ProcessRecord()\r\n   at System.Management.Automation.CommandProcessor.ProcessRecord()\r\nCategoryInfo          : NotSpecified: (:) [Remove-Item], Win32Exception\r\nFullyQualifiedErrorId : System.ComponentModel.Win32Exception,Microsoft.PowerShell.Commands.RemoveItemCommand\r\nInvocationInfo        :\r\n    MyCommand        : Remove-Item\r\n    ScriptLineNumber : 1\r\n    OffsetInLine     : 1\r\n    HistoryId        : 43\r\n    Line             : Remove-Item -Recurse -Force -ErrorAction Ignore -Path '<SOME_MAX_PATH_EXCEEDING_PATH>'\r\n    PositionMessage  : At line:1 char:1\r\n                       + Remove-Item -Recurse -Force -ErrorAction Ignore -Path '<SOME_MAX_PATH_EXCEEDING_PATH> \u2026\r\n                       + ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    InvocationName   : Remove-Item\r\n    CommandOrigin    : Internal\r\nScriptStackTrace      : at <ScriptBlock>, <No file>: line 1\r\n```\r\n\r\n\r\n### Environment data\r\n\r\n```powershell\r\nPS $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.2\r\nPSEdition                      Core\r\nGitCommitId                    7.2.2\r\nOS                             Microsoft Windows 10.0.19044\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\n\r\n### Visuals\r\n\r\n_No response_",
  "closed_at": "2022-04-27T13:01:59Z",
  "comments": [
    {
      "author": "Fragmachine",
      "author_association": "NONE",
      "body": "I noticed that issue wasn't there anymore when syncing and building the latest on github. Turns out I hit an edge case when the path was exactly at 260 characters that was [fixed a few months ago](https://github.com/PowerShell/PowerShell/commit/7bb8fa16abdbfb6d2610402491860c1feff9154e) but has yet to reach a release. Could it perhaps be part of a hotfix? ",
      "created_at": "2022-04-26T13:39:31Z",
      "updated_at": "2022-04-26T13:39:31Z"
    },
    {
      "author": "Fragmachine",
      "author_association": "NONE",
      "body": "From [this](https://github.com/PowerShell/PowerShell/issues/10805#issuecomment-579516971) answer from MS a manifest update shouldn't be needed for .NET Core apps.",
      "created_at": "2022-04-26T14:03:33Z",
      "updated_at": "2022-04-26T14:03:33Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Please add more exact repro steps.",
      "created_at": "2022-04-27T05:08:50Z",
      "updated_at": "2022-04-27T05:08:50Z"
    },
    {
      "author": "Fragmachine",
      "author_association": "NONE",
      "body": "In the current release paths that are exactly 260 characters can't be removed with Remove-Item, e.g.\r\n\r\n```\r\nPS> \"c:\\$(@('aaaaaaaaaa')*23 -join '\\')\\aaaa\" | %{mkdir $_} | %{Remove-Item $_.FullName}\r\nRemove-Item: The system cannot find the path specified.\r\n```\r\nAdd/remove one character from the path and it works,\r\n\r\n```\r\nPS> \"c:\\$(@('aaaaaaaaaa')*23 -join '\\')\\aaaaa\" | %{mkdir $_} | %{Remove-Item $_.FullName}\r\nPS>\r\n```\r\n\r\nAs already stated, this has been fixed in the developer line but a hotfix would be nice.",
      "created_at": "2022-04-27T09:31:59Z",
      "updated_at": "2022-04-27T09:31:59Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "The fix you mentioned is for edge case. Root fix for long path support was added early and presents in 7.2 version.",
      "created_at": "2022-04-27T12:42:10Z",
      "updated_at": "2022-04-27T12:42:10Z"
    },
    {
      "author": "Fragmachine",
      "author_association": "NONE",
      "body": "Yes, I hit an edge case as already explained. So this bug can be closed since I didn't realize it at the time. Should I create a new request for the edge case fix to go into a hotfix or is there a new release on the horizon which has the fix included?",
      "created_at": "2022-04-27T12:49:06Z",
      "updated_at": "2022-04-27T12:49:06Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Policy is to backport only critical and security fixes. So you have to wait next release or use preview version (they are stable too).",
      "created_at": "2022-04-27T12:53:30Z",
      "updated_at": "2022-04-27T12:53:30Z"
    },
    {
      "author": "Fragmachine",
      "author_association": "NONE",
      "body": "Thanks for the information, time to close :-) ",
      "created_at": "2022-04-27T13:01:59Z",
      "updated_at": "2022-04-27T13:01:59Z"
    }
  ],
  "created_at": "2022-04-26T09:03:43Z",
  "number": 17197,
  "state": "closed",
  "title": "Windows Long Paths isn't enabled.",
  "updated_at": "2022-04-27T13:02:01Z"
}