{
  "_url": "https://github.com/PowerShell/PowerShell/issues/14347",
  "author": "mklement0",
  "body": "## Summary of the new feature/enhancement\r\n\r\nNote: This is relevant primarily _on Windows_; initially proposed by @jborean93 [here](https://github.com/PowerShell/PowerShell/issues/1995#issuecomment-739552829).\r\n\r\n* Sometimes, whole command lines are stored in configuration data.\r\n\r\n  * A notable example are the `UninstallString` registry values (for uninstalling an application, in the subkeys of `HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall`); the `ImagePath` entries for Windows service definitions are another.\r\n\r\n* These command lines represent a call to a _single_ executable _with arguments_ and do _not_ involve a shell.\r\n  * Conversely, invoking them via  a shell (e.g., by using `Invoke-Expression`) can _break_ such a command if it contains unprotected metacharacters such as `&` (applies to both `cmd.exe` and PowerShell) and, in PowerShell,  also `@`, and `{` (not an exhaustive list), and embedded `\"` chars. escaped as  `\\\"`).\r\n\r\nIt would be convenient if `Start-Process` offered a way to execute such command lines directly, without the need to parse them into executable path and arguments string, via a new `-CommandLine` parameter:\r\n\r\n```powershell\r\n# WISHFUL THINKING\r\n$cmdLine = 'echoArgs.exe a&b \"Nat \\\"King\\\" Cole\"'\r\nStart-Process -CommandLine $cmdLine -NoNewWindow -Wait\r\n```\r\nThis would be the equivalent of (note how the executable path and the arguments must currently be passed separately):\r\n\r\n```powershell\r\nStart-Process -FilePath echoArgs.exe -Args 'a&b \"Nat \\\"King\\\" Cole\"' -NoNewWindow -Wait\r\n```\r\n\r\n## Proposed technical implementation details (optional)\r\n\r\nAdd a `-CommandLine` parameter to `Start-Process` - as an alternative to specifying `-FilePath` and `-ArgumentList` separately - that accepts the entire command line - executable + arguments - as a single string.\r\n\r\nSince `Start-Process` (ultimately) uses the `ShellExecute` WinAPI function by default, the command line must be split into executable and arguments string (depending on the parameters given, it situationally uses the `CreateProcess` function, where this splitting isn't necessary).\r\n\r\nThis splitting can be achieved with the C# equivalent of the following, which covers all cases: unquoted (of necessity space-less) executable paths and double-quoted executable paths:\r\n\r\n```powershell\r\n$exe, $argsString = $commandLine.Trim() -split '^([^\" ]+|\".+?\")' -ne ''\r\n```\r\n\r\n\r\n",
  "closed_at": null,
  "comments": [],
  "created_at": "2020-12-07T19:42:36Z",
  "number": 14347,
  "state": "open",
  "title": "Make Start-Process support execution of full, no-shell command lines (on Windows)",
  "updated_at": "2020-12-08T13:00:44Z"
}