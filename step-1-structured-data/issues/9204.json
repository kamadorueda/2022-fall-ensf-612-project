{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9204",
  "author": "mklement0",
  "body": "Affects both:\r\n\r\n* true scope modifiers such as `$global:`\r\n* namespace variable notation such as `$function:`\r\n\r\n# Steps to reproduce\r\n\r\nPrerequisites:\r\n* enable remoting on the calling machine\r\n* run as admin.\r\n\r\n```powershell\r\n# Define a variable and function, both named 'foo'.\r\nfunction foo { 'func' }; $global:foo = 'var'\r\n# Try to access these definitions remotely via $using\r\nInvoke-Command -ComputerName . { $using:foo; $using:global:foo; $using:function:foo }\r\n```\r\n\r\n# Expected behavior\r\n\r\n```none\r\nvar\r\nvar\r\n 'func' \r\n```\r\n\r\n# Actual behavior\r\n\r\n```none\r\nvar\r\n```\r\n\r\nThat is, `$using:global:foo` and `$using:function:foo` quietly evaluated to `$null`. \r\n\r\n# Environment data\r\n\r\n```none\r\nPowerShell Core 6.2.0-rc.1\r\nWindows PowerShell v5.1 \r\n```\r\n",
  "closed_at": "2021-10-06T17:43:57Z",
  "comments": [
    {
      "author": "msftrncs",
      "author_association": "CONTRIBUTOR",
      "body": "In the example:\r\n\r\n```PowerShell\r\nInvoke-Command -ComputerName . { $using:foo; $using:global:foo; $using:function:foo }\r\n```\r\nappears like this via PR # 156 in PowerShell/EditorSyntax:\r\n![image](https://user-images.githubusercontent.com/26179051/56317824-5176ca80-6123-11e9-8283-7bc791f1da97.png)\r\n\r\nThe scope can only be the first thing before the `:`, and after that, `:` is a valid variable character.  In this case, `using` is the scope.\r\n",
      "created_at": "2019-04-17T20:17:36Z",
      "updated_at": "2019-04-17T20:19:13Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks, @msftrncs, but `:` chars. aren't  _directly_ usable in variable names proper:\r\n\r\n```powershell\r\nPS> ${foo:bar} = 'hi'\r\nCannot find drive. A drive with the name 'foo' does not exist.\r\n```\r\n\r\nWhile you _can_ use them if you _always_ use namespace variable notation, that is obviously impractical:\r\n\r\n```powershell\r\nPS> ${variable:foo:bar} = 'hi'; ${variable:foo:bar}\r\nhi  # OK, but only via reference to drive variable:\r\n```\r\n\r\nA much more sensible behavior would therefore be to support scope modifiers / drive references even after `$using:`, as attempted in the OP.\r\n\r\nWhile technically a breaking change, it strikes me as a clear-cut case of a [bucket 3](https://github.com/PowerShell/PowerShell/blob/master/docs/dev-process/breaking-change-contract.md#bucket-3-unlikely-grey-area) change.\r\n",
      "created_at": "2019-04-17T20:46:19Z",
      "updated_at": "2019-04-18T03:16:12Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Mmm. `:` isn't usually a valid variable character. Actually setting that variable in any reasonable way would be literally impossible, as it'd resolve to the proper expected item instead of the variable name containing the bunk character..\r\n\r\nStill a bug, in my opinion.",
      "created_at": "2019-04-17T20:46:48Z",
      "updated_at": "2019-04-17T20:46:48Z"
    },
    {
      "author": "msftrncs",
      "author_association": "CONTRIBUTOR",
      "body": "See https://github.com/PowerShell/EditorSyntax/issues/49#issuecomment-391017240, while the first `:` separates the drive or scope from the variable name, all other `:` are accepted as variable name (as long as they are not doubled, because then that's a static accessor).",
      "created_at": "2019-04-18T02:58:59Z",
      "updated_at": "2019-04-18T02:58:59Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:This issue was addressed in #16113, which has now been successfully released as `v7.3.0-preview.1`.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.3.0-preview.1)\n",
      "created_at": "2021-12-16T19:58:48Z",
      "updated_at": "2021-12-16T19:58:48Z"
    }
  ],
  "created_at": "2019-03-22T19:46:55Z",
  "number": 9204,
  "state": "closed",
  "title": "The $using: scope for remoting quietly accepts scope modifiers, but resolves to $null",
  "updated_at": "2021-12-16T19:58:48Z"
}