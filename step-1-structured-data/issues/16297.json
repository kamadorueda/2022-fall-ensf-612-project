{
  "_url": "https://github.com/PowerShell/PowerShell/issues/16297",
  "author": "daxian-dbw",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nSupersede #16265\r\n\r\nThe .NET team has confirmed that ALL .NET 6 runtime assemblies should be R2R images. See https://github.com/dotnet/runtime/issues/60779 for details.\r\nDuring my verification, I found some runtime assemblies that are not R2R images, but it turns out that is by design because those assemblies as pure fa\u00e7ade assemblies. See https://github.com/dotnet/runtime/issues/60782 for details.\r\n\r\nI have also verified that `<PublishReadyToRun>true</PublishReadyToRun>` actually crossgen'ed all the package assemblies pwsh depends on, including all that in the [$commonAssembliesForAddType](https://github.com/PowerShell/PowerShell/blob/e5d27d139c59a94931bf7767b7e17a4b3bc65d00/build.psm1#L2499-L2523) array today. The following is the pdb generated for those crossgen'ed assemblies.\r\n\r\n```\r\nInputObject                                           SideIndicator\r\n-----------                                           -------------\r\nMarkdig.Signed.ni.pdb                                 =>\r\nMicrosoft.ApplicationInsights.ni.pdb                  =>\r\nMicrosoft.CodeAnalysis.CSharp.ni.pdb                  =>\r\nMicrosoft.CodeAnalysis.ni.pdb                         =>\r\nMicrosoft.Extensions.ObjectPool.ni.pdb                =>\r\nMicrosoft.Management.Infrastructure.CimCmdlets.ni.pdb =>\r\nMicrosoft.Management.Infrastructure.Native.ni.pdb     =>\r\nMicrosoft.Management.Infrastructure.ni.pdb            =>\r\nMicrosoft.PowerShell.Commands.Diagnostics.ni.pdb      =>\r\nMicrosoft.PowerShell.Commands.Management.ni.pdb       =>\r\nMicrosoft.PowerShell.Commands.Utility.ni.pdb          =>\r\nMicrosoft.PowerShell.ConsoleHost.ni.pdb               =>\r\nMicrosoft.PowerShell.CoreCLR.Eventing.ni.pdb          =>\r\nMicrosoft.PowerShell.GraphicalHost.ni.pdb             =>\r\nMicrosoft.PowerShell.MarkdownRender.ni.pdb            =>\r\nMicrosoft.PowerShell.Security.ni.pdb                  =>\r\nMicrosoft.WSMan.Management.ni.pdb                     =>\r\nMicrosoft.WSMan.Runtime.ni.pdb                        =>\r\nNamotion.Reflection.ni.pdb                            =>\r\nNewtonsoft.Json.ni.pdb                                =>\r\nNJsonSchema.ni.pdb                                    =>\r\npwsh.ni.pdb                                           =>\r\nSystem.ComponentModel.Composition.ni.pdb              =>\r\nSystem.ComponentModel.Composition.Registration.ni.pdb =>\r\nSystem.Data.Odbc.ni.pdb                               =>\r\nSystem.Data.OleDb.ni.pdb                              =>\r\nSystem.Data.SqlClient.ni.pdb                          =>\r\nSystem.DirectoryServices.AccountManagement.ni.pdb     =>\r\nSystem.DirectoryServices.Protocols.ni.pdb             =>\r\nSystem.IO.Ports.ni.pdb                                =>\r\nSystem.Management.Automation.ni.pdb                   =>\r\nSystem.Management.ni.pdb                              =>\r\nSystem.Net.Http.WinHttpHandler.ni.pdb                 =>\r\nSystem.Private.ServiceModel.ni.pdb                    =>\r\nSystem.Reflection.Context.ni.pdb                      =>\r\nSystem.Runtime.Caching.ni.pdb                         =>\r\nSystem.ServiceModel.Syndication.ni.pdb                =>\r\nSystem.ServiceProcess.ServiceController.ni.pdb        =>\r\nSystem.Speech.ni.pdb                                  =>\r\n```\r\n\r\nGiven all above, we should just remove the `Start-CrossGen` code, and also remove the `-CrossGen` switch parameter from `Start-PSBuild`, because we have `<PublishReadyToRun Condition=\" '$(Configuration)' != 'Debug' \">true</PublishReadyToRun>` in `PowerShell.Common.props` file, so unless explicitly disabling R2R (for `fxdependent*` and `minSize` packages), our build will generate R2R images for release builds.\r\n\r\nAlso add `<PublishReadyToRunEmitSymbols>true</PublishReadyToRunEmitSymbols>` to generate the native symbols for the R2R images when publishing R2R, because [profiler needs the symbols generated by `<PublishReadyToRunEmitSymbols>` to examine the R2R files](https://docs.microsoft.com/en-us/dotnet/core/deploying/ready-to-run#symbol-generation-for-use-with-profilers). However, those symbols are only useful for profiling the startup scenario of PowerShell because PowerShell enables tiered compilation which will overwrite the R2R code.\r\n\r\n## PR Context\r\n\r\n<!-- Provide a little reasoning as to why this Pull Request helps and why you have opened it. -->\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.",
  "closed_at": "2021-10-27T18:42:38Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> However, those symbols are only useful for profiling the startup scenario of PowerShell because PowerShell enables tiered compilation which will overwrite the R2R code.\r\n\r\nFor profiling other scenarios users can set [.Net environment variable](https://docs.microsoft.com/en-us/dotnet/core/run-time-config/compilation) DOTNET_TieredCompilation = 0 ",
      "created_at": "2021-10-23T09:31:52Z",
      "updated_at": "2021-10-23T09:31:52Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Could you please see search results https://github.com/PowerShell/PowerShell/search?l=PowerShell&q=Crossgen I see more files with `crossgen` word.",
      "created_at": "2021-10-23T09:45:15Z",
      "updated_at": "2021-10-23T09:45:15Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@daxian-dbw Can we do a quick startup perf check before and after the change?",
      "created_at": "2021-10-27T20:11:01Z",
      "updated_at": "2021-10-27T20:11:01Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "OK, will do so.",
      "created_at": "2021-10-27T22:43:30Z",
      "updated_at": "2021-10-27T22:43:30Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "I don't see a noticeable difference on both Windows and Linux with or without this change.\r\n- on my Windows machine, they are both in the range of 580 - 620 ms  (sometimes slower than 620ms, and sometimes faster than 580ms)\r\n- on my WSL v2 with Ubuntu 18.04, they are both in the range of 660 - 700 ms (sometimes slower than 700ms, and sometimes faster than 660ms)\r\n",
      "created_at": "2021-10-30T00:20:04Z",
      "updated_at": "2021-10-30T00:20:04Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.2.0` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.2.0)\n",
      "created_at": "2021-11-08T16:10:40Z",
      "updated_at": "2021-11-08T16:10:40Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.3.0-preview.1` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.3.0-preview.1)\n",
      "created_at": "2021-12-16T19:53:54Z",
      "updated_at": "2021-12-16T19:53:54Z"
    }
  ],
  "created_at": "2021-10-22T23:09:25Z",
  "number": 16297,
  "state": "closed",
  "title": "Clean up crossgen related build scripts also generate native symbols for R2R images",
  "updated_at": "2021-12-16T19:53:54Z"
}