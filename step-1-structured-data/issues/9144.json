{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9144",
  "author": "s-shamesmuhametov-parc",
  "body": "# Steps to reproduce\r\n\r\n```powershell\r\nGet-Item test.txt -Stream *\r\n```\r\n\r\n# Expected behavior\r\n\r\n```none\r\nSuccess result info.\r\n```\r\n\r\n# Actual behavior\r\n\r\n```none\r\nGet-Item : Unable to load DLL 'api-ms-win-core-file-l1-2-2.dll' or one of its dependencies: \u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043c\u043e\u0434\u0443\u043b\u044c. (Exception from HRESULT: 0x8007007E)\r\n```\r\n\r\n$error[0] | fl * -force\r\n```none\r\nPSMessageDetails      :\r\nException             : System.DllNotFoundException: Unable to load DLL 'api-ms-win-core-file-l1-2-2.dll' or one of its dependencies: \u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043c\u043e\u0434\u0443\u043b\u044c. (Exception from HRESULT: 0x8007007E)\r\n                           at System.Management.Automation.Internal.AlternateDataStreamUtilities.NativeMethods.FindFirstStreamW(String lpFileName, StreamInfoLevels InfoLevel, AlternateStreamNativeData lpFindStreamData, UInt32 dwFlags)\r\n                           at System.Management.Automation.Internal.AlternateDataStreamUtilities.GetStreams(String path)\r\n                           at Microsoft.PowerShell.Commands.FileSystemProvider.GetItem(String path)\r\n                           at System.Management.Automation.SessionStateInternal.GetItemPrivate(CmdletProvider providerInstance, String path, CmdletProviderContext context)\r\nTargetObject          :\r\nCategoryInfo          : NotSpecified: (:) [Get-Item], DllNotFoundException\r\nFullyQualifiedErrorId : System.DllNotFoundException,Microsoft.PowerShell.Commands.GetItemCommand\r\nErrorDetails          :\r\nInvocationInfo        : System.Management.Automation.InvocationInfo\r\nScriptStackTrace      : at <ScriptBlock>, <No file>: line 1\r\nPipelineIterationInfo : {}\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\nOS:  Windows 8.1 x64 (6.3.9600)\r\n $PSVersionTable\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.1.3\r\nPSEdition                      Core\r\nGitCommitId                    6.1.3\r\nOS                             Microsoft Windows 6.3.9600\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2019-10-04T00:37:05Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT @adityapatwardhan We could fix this in the same way as #10417.",
      "created_at": "2019-09-29T11:37:43Z",
      "updated_at": "2019-09-29T11:37:43Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov yeah, that might be ok",
      "created_at": "2019-09-29T15:05:43Z",
      "updated_at": "2019-09-29T15:05:43Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:This issue was addressed in #10680, which has now been successfully released as `v7.0.0-preview.5`.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.0.0-preview.5)\n",
      "created_at": "2019-10-23T19:07:35Z",
      "updated_at": "2019-10-23T19:07:35Z"
    },
    {
      "author": "eabase",
      "author_association": "NONE",
      "body": "@SteveL-MSFT \r\nIs there a work around for those of us who doesn't have (or are able to run) pwsh 7+?",
      "created_at": "2020-12-21T23:52:52Z",
      "updated_at": "2020-12-21T23:52:52Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@eabase If it is so important for you, you could fork and make custom 6+ build.",
      "created_at": "2020-12-22T03:20:04Z",
      "updated_at": "2020-12-22T03:20:04Z"
    },
    {
      "author": "eabase",
      "author_association": "NONE",
      "body": "> \r\n@iSazonov \r\n\r\n> If it is so important for you, you could fork and make custom 6+ build.\r\n\r\nSorry Ilya, I don't quite have the dev skills to make custom PWSH builds to fix things that should already work. However, the MS docs is referring to be able to use this, so surely there must be a simple way to work around this. The question is where that DLL is supposed to be, and why it's not there in the first place. Since the others are there. There are several similarly named DLLs...so what make this one so different? \r\n",
      "created_at": "2020-12-22T04:44:58Z",
      "updated_at": "2020-12-22T04:44:58Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@eabase I don't experience in the area but I think a root of the issue is that we are targeting Win7 in build but the dll is for Windows 8 or Windows 10. Numbers is the dll name indicate this difference.",
      "created_at": "2020-12-22T16:42:20Z",
      "updated_at": "2020-12-22T16:42:20Z"
    },
    {
      "author": "eabase",
      "author_association": "NONE",
      "body": "@iSazonov \r\n\r\n> .I think a root of the issue is that we are targeting Win7 in build but the dll is for Windows 8 or Windows 10. Numbers is the dll name indicate this difference.\r\n\r\nNot sure I completely understand. Are you saying that you're targeting W7 and therefore the W8,W10 DLL's are not being built? \r\n(I'm on W81 for all practical purposes here.)",
      "created_at": "2020-12-22T17:39:48Z",
      "updated_at": "2020-12-22T17:39:48Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Yes, we use Win7-x64 target for compiling PowerShell release version.",
      "created_at": "2020-12-22T17:46:24Z",
      "updated_at": "2020-12-22T17:46:39Z"
    },
    {
      "author": "eabase",
      "author_association": "NONE",
      "body": "1. Does that mean that it's missing also for W10?\r\n2. Can we copy a DLL from another Windows version (or somewhere else)? \r\n3. Can you provide a DLL I can test with? (or where I can find it?)\r\n",
      "created_at": "2020-12-22T18:56:11Z",
      "updated_at": "2020-12-22T18:56:11Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "1. Since we compile with Win7-x64 the dll is absent on all versions.\r\n2. You can, no fix is planned in the repo.\r\n3. The dll should in umbrella lib but I found two reference\r\nhttps://docs.microsoft.com/en-us/windows/win32/apiindex/windows-umbrella-libraries\r\nhttps://docs.microsoft.com/en-us/uwp/win32-and-com/win32-apis\r\n\r\nAlso you could find apisets dlls in c:\\windows\\system32\\downlevel. The dll should be only on old Windows 10 version (10.0.10586)\r\nhttps://docs.microsoft.com/en-us/uwp/win32-and-com/win32-apis\n\n<blockquote><img src=\"https://docs.microsoft.com/en-us/media/logos/logo-ms-social.png\" width=\"48\" align=\"right\"><div><strong><a href=\"https://docs.microsoft.com/en-us/windows/win32/apiindex/windows-umbrella-libraries\">Windows umbrella libraries - Win32 apps</a></strong></div><div>An umbrella library is a single static-link library that exports a subset of Win32 APIs. For example, an umbrella lib named OneCore.lib provides the exports for the subset of Win32 APIs that are common to all Windows\u00a010 devices.</div></blockquote>\n<blockquote><img src=\"https://docs.microsoft.com/en-us/media/logos/logo-ms-social.png\" width=\"48\" align=\"right\"><div><strong><a href=\"https://docs.microsoft.com/en-us/uwp/win32-and-com/win32-apis\">APIs present on all Windows\u00a010 devices (grouped by module) - Windows UWP applications</a></strong></div><div>This topic lists the Win32 APIs that are part of the Universal Windows Platform (UWP) and that are implemented by all Windows\u00a010 devices.</div></blockquote>",
      "created_at": "2020-12-23T03:39:35Z",
      "updated_at": "2020-12-23T03:39:37Z"
    }
  ],
  "created_at": "2019-03-15T06:52:31Z",
  "number": 9144,
  "state": "closed",
  "title": " Get-Item with stream:  Unable to load DLL 'api-ms-win-core-file-l1-2-2.dll'",
  "updated_at": "2020-12-23T03:39:37Z"
}