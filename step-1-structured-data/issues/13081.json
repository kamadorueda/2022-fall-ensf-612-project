{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13081",
  "author": "carlossanlop",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 and PowerShell 7+ issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6).\r\n\r\n-->\r\n\r\nThis issue is very similar to https://github.com/PowerShell/PowerShell/issues/11774, which was closed back in February. It was reported for PS x86 installed in an x64 OS.\r\n\r\n## Steps to reproduce\r\n\r\n1. I have an ARM64 laptop.\r\n2. I first tried installing the experimental Arm64 PowerShell version but I found some problems, so I installed the x86 version (7 preview 4).\r\n3. I tried running \"ssh\", which is located in `C:\\Windows\\System32\\OpenSSH\\ssh.exe`, but I get the same error as in the other issue:\r\n4. I tried using `Get-Item`, which didn't work when looking inside System32, but it worked by looking inside `SysNative`.\r\n5. The $Env:PATH variable contains the location of OpenSSH.\r\n6. Uninstalling and reinstalling OpenSSH with `Add-WindowsCapability` does nothing to fix the problem.\r\n\r\nI am unsure why the other issue was closed, since it was not fixed. This is a bad problem and it probably affects any other executable living inside System32 when the OS architecture is different to the PS architecture.\r\n\r\n```powershell\r\nPS C:\\Windows\\System32> ssh\r\n\r\nssh : The term 'ssh' is not recognized as the name of a cmdlet, function, script file, or operable program.\r\nCheck the spelling of the name, or if a path was included, verify that the path is correct and try again.\r\nAt line:1 char:1\r\n+ ssh\r\n+ ~~~\r\n+ CategoryInfo          : ObjectNotFound: (ssh:String) [], CommandNotFoundException\r\n+ FullyQualifiedErrorId : CommandNotFoundException\r\n\r\nPS C:\\Windows\\System32> Get-Item -Force C:\\Windows\\System32\\OpenSSH\\ssh.exe\r\n\r\nGet-Item : Cannot find path 'C:\\Windows\\System32\\OpenSSH\\ssh.exe' because it does not exist.\r\nAt line:1 char:1\r\n+ Get-Item -Force C:\\Windows\\System32\\OpenSSH\\ssh.exe\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : ObjectNotFound: (C:\\Windows\\System32\\OpenSSH\\ssh.exe:String) [Get-Item], ItemNotFoundException\r\n+ FullyQualifiedErrorId : PathNotFound,Microsoft.PowerShell.Commands.GetItemCommand\r\n\r\nPS C:\\Windows\\System32> Get-Item -Force C:\\Windows\\SysNative\\OpenSSH\\ssh.exe\r\n\r\n    Directory: C:\\Windows\\SysNative\\OpenSSH\r\n\r\nMode                 LastWriteTime         Length Name\r\n----                 -------------         ------ ----\r\n-a---          2019-03-19  1:49 AM         937984 ssh.exe\r\n```\r\n\r\n\r\n\r\n## Expected behavior\r\n\r\nssh should work if its path is in `$Env:Path` and the executable exists.\r\n\r\n## Actual behavior\r\n\r\nssh is not found.\r\n\r\n## Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-preview.4\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-preview.4\r\nOS                             Microsoft Windows 10.0.18363\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n```\r\n",
  "closed_at": "2020-07-09T00:00:12Z",
  "comments": [
    {
      "author": "DHowett",
      "author_association": "NONE",
      "body": "x86 powershell will be impacted by windows system directory redirection when run on ARM. Unfortunately, the PATH environment variable cannot be made aware of this. You can work around the issue by explicitly adding `c:\\windows\\sysnative\\openssh` to PATH.\r\n\r\nThe new entry will only work for x86 applications, and the old entry will only work for native ARM64 applications.",
      "created_at": "2020-07-02T07:41:17Z",
      "updated_at": "2020-07-02T07:41:17Z"
    },
    {
      "author": "carlossanlop",
      "author_association": "NONE",
      "body": "Isn't this a similar problem to what Windows had to deal with back when x64 became a thing and there were two folders \"Program Files\" and \"Program Files (x86)\"? At first there was a lot of trouble getting those two folders to work without user's interaction. Now we don't even think about it.\r\n\r\nThe user should not have to deal with this either.",
      "created_at": "2020-07-02T20:26:19Z",
      "updated_at": "2020-07-02T20:26:19Z"
    },
    {
      "author": "DHowett",
      "author_association": "NONE",
      "body": "If the user chooses to install and run cross-architecture binaries, they may be expected to suffer some cross-architecture woes :smile:",
      "created_at": "2020-07-02T20:46:28Z",
      "updated_at": "2020-07-02T20:46:28Z"
    },
    {
      "author": "carlossanlop",
      "author_association": "NONE",
      "body": "> If the user chooses to install and run cross-architecture binaries, they may be expected to suffer some cross-architecture woes\r\n\r\nI don't think this is an acceptable answer.\r\nYou don't get such woes if you install an x86 version of PS in an x64 Windows.\r\nPowerShell for Arm is currently advertised as experimental, so the only option left for the user is to install the x86 version, the expected fallback. This works well with any other apps. PowerShell has been, so far, the only app not able to get it right.",
      "created_at": "2020-07-05T18:39:14Z",
      "updated_at": "2020-07-05T18:50:34Z"
    },
    {
      "author": "DHowett",
      "author_association": "NONE",
      "body": "> You don't get such woes if you install an x86 version of PS in an x64 Windows.\n\nYou absolutely do, and you encounter the same issues if you run x86 CMD or x86 Yori or any other shell that respects PATH on x64 Windows. This is a problem that is unique to neither ARM _nor_ PowerShell.",
      "created_at": "2020-07-05T18:56:04Z",
      "updated_at": "2020-07-05T18:56:04Z"
    },
    {
      "author": "carlossanlop",
      "author_association": "NONE",
      "body": "The path problem does not happen between x86 and x64, so it should be fixed for arm too, since the manual workaround works.\r\nSo this issue is labeled as question. Should it be marked as something else so it gets a fix?",
      "created_at": "2020-07-06T17:32:18Z",
      "updated_at": "2020-07-06T17:32:18Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "If a fix is needed there, it would need to be made in .NET itself, wouldn't it? \ud83e\udd14 ",
      "created_at": "2020-07-06T17:50:59Z",
      "updated_at": "2020-07-06T17:50:59Z"
    },
    {
      "author": "DHowett",
      "author_association": "NONE",
      "body": "![image](https://user-images.githubusercontent.com/189190/86629197-e6135580-bf7f-11ea-979b-ef28e9c9a72e.png)\r\n\r\nIt definitely does happen between x64 and x86.",
      "created_at": "2020-07-06T18:57:57Z",
      "updated_at": "2020-07-06T18:57:57Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2020-07-09T00:00:10Z",
      "updated_at": "2020-07-09T00:00:10Z"
    },
    {
      "author": "carlossanlop",
      "author_association": "NONE",
      "body": "@DHowett  you ran PowerShell 1.0. I am reporting this issue for PowerShell Core specifically.\r\n\r\nWhy does the user have to edit their path? PowerShell should do it.\r\n\r\nThe issue got automatically closed after just one day of no response (I was OOF). The threshold should be a bit larger than that.\r\n\r\nCan someone please reopen this issue? I don't think there is a satisfactory resolution.",
      "created_at": "2020-07-09T01:17:40Z",
      "updated_at": "2020-07-09T01:17:40Z"
    },
    {
      "author": "DHowett",
      "author_association": "NONE",
      "body": "Since you won't accept representative samples, here's the most recent preview, most recent stable, most recent stable 6.x, and earliest public preview of powershell core, plus another 32-bit shell, plus CMD for windows.\r\n\r\n## powershell 7.1.0 preview 4 32-bit\r\n\r\n![image](https://user-images.githubusercontent.com/189190/86987013-e2cbc580-c149-11ea-82ef-c56bedd762d4.png)\r\n\r\n## 7.0.2 32-bit\r\n\r\n![image](https://user-images.githubusercontent.com/189190/86987038-f119e180-c149-11ea-8c15-88fc036c4369.png)\r\n\r\n## 6.2.6 32-bit\r\n\r\n![image](https://user-images.githubusercontent.com/189190/86987057-fe36d080-c149-11ea-98d8-92ebee24b234.png)\r\n\r\n## 6.0.0 alpha 13 32-bit\r\n\r\n![image](https://user-images.githubusercontent.com/189190/86987096-1d356280-c14a-11ea-9d6c-5b57fbef03e7.png)\r\n\r\n## Git 32-bit bash\r\n\r\n![image](https://user-images.githubusercontent.com/189190/86987206-5372e200-c14a-11ea-8861-c6dda548d0c2.png)\r\n\r\n## CMD (32-bit)\r\n\r\n![image](https://user-images.githubusercontent.com/189190/86986982-cdef3200-c149-11ea-8ca1-02be2ea091fa.png)\r\n\r\nI assure you, powershell has never done the path translation you're asserting that it has. I'm not saying it shouldn't, I'm just saying that it never has.\r\n\r\nEdit: I re-read my own message as combative, and I'm sorry about that. I do think that there's something we can do to improve powershell here, but it's going to take a little bit of spec and design work. I can't speak for the team, but I expect that there are challenges in automatically expanding each system path entry _when redirection is enabled_ without breaking the \"run processes of the same bitness by default\" behavior.",
      "created_at": "2020-07-09T01:40:36Z",
      "updated_at": "2020-07-09T01:49:03Z"
    }
  ],
  "created_at": "2020-07-02T03:31:29Z",
  "number": 13081,
  "state": "closed",
  "title": "In ARM computer, with PS x86 installed, cannot find ssh.exe even though it's installed and found in $Env:PATH",
  "updated_at": "2020-07-09T01:49:03Z"
}