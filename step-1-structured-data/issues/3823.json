{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3823",
  "author": "Francisco-Gamino",
  "body": "<!--\r\n\r\nIf you are a PowerShell Team member, please make sure you choose the Reviewer(s) and Assignee for your PR.\r\nIf you are not from the PowerShell Team, you can leave the fields blank and the Maintainers will choose them for you. If you are familiar with the team, feel free to mention some Reviewers yourself.\r\n\r\nFor more information about the roles of Reviewer and Assignee, refer to CONTRIBUTING.md.\r\n\r\n-->\r\nAddressing issue #3284: ConvertFrom-JSON fails to parse syntactically-correct JSON array\r\n\r\nFor PowerShell on CoreCLR, we use Json.Net. However, this deserialzer does not throw an exception if an invalid array is passed, so we need to add extra logic to handle this. An invalid array can occurred when the user reads a file via get-content as a collection of PSObjects. E.g.,\r\n\r\n``` powershell\r\n# test.json has the following content:\r\nPS D:\\> Get-Content .\\test.json\r\n[\r\n    1,\r\n    2\r\n]\r\n\r\n# The output of Get-Content is a collection of Object[]\r\nPS D:\\> (Get-Content .\\test.json).GetType()\r\n\r\nIsPublic IsSerial Name                                     BaseType\r\n-------- -------- ----                                     --------\r\nTrue     True     Object[]                                 System.Array\r\n\r\n# When we pipe the output of Get-Content to ConvertFrom-Json, the logic in the cmdlet\r\n# sends the first object to be deserialized, and if an Argument exception \r\n# is thrown, then it sends the whole collection of objects as one single Json content. \r\n# For CoreCLR PowerShell, we use Json.Net which does not throw an error when an \r\n# invalid array is deserialize, so this PR addresses this issue. \r\n\r\n# Here is the output of ConvertFrom-Json after this code change:\r\nPS D:\\> Get-Content .\\test.json | ConvertFrom-Json\r\n1\r\n2\r\n\r\n```\r\nAdded tests for the following:\r\n  - Deserialize a Json array of strings (in multiple lines) \r\n  - Deserialize a Json array of PSObjects (in multiple lines)\r\n",
  "closed_at": "2017-05-25T20:00:51Z",
  "comments": [
    {
      "author": "JamesWTruher",
      "author_association": "MEMBER",
      "body": "tests are much cleaner now - LGTM",
      "created_at": "2017-05-19T20:19:41Z",
      "updated_at": "2017-05-19T20:19:41Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@JamesWTruher can you mark your review as Approved?",
      "created_at": "2017-05-19T20:37:27Z",
      "updated_at": "2017-05-19T20:37:27Z"
    },
    {
      "author": "Francisco-Gamino",
      "author_association": "CONTRIBUTOR",
      "body": "@PowerShell/powershell-maintainers : This is ready to be merged, please let me know if you need anything else. Thanks.",
      "created_at": "2017-05-19T21:49:42Z",
      "updated_at": "2017-05-19T21:49:42Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@Francisco-Gamino One more question -- why do you have to remove all white spaces before calling `JArray.Parse`? Won't it be enough to just trim the leading and trailing white spaces?",
      "created_at": "2017-05-19T22:34:02Z",
      "updated_at": "2017-05-19T22:34:02Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "Please update the title and description based on the instructions in [Contributing - Pull Request Submission](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request-submission)\r\n\r\n- [ ] Remove the issues number from the title and into the description (it's already in the description, so, just remove it from the title.)\r\n- [ ] Update the title to use \"the present tense and imperative mood\" to describe the change, not the issue you are fixing.",
      "created_at": "2017-05-19T22:34:51Z",
      "updated_at": "2017-05-25T15:44:30Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Chatted with @Francisco-Gamino offline, and it turns out the `JsonException` thrown by `JArray.Parse` will be captured and re-thrown as an `ArgumentException`, and then the enclosing code will capture the `ArgumentException` and assume that it's caused by partial input and hen keep accumulating pipeline input. Francisco will add more comments to explain this process.",
      "created_at": "2017-05-19T23:52:22Z",
      "updated_at": "2017-05-19T23:52:22Z"
    },
    {
      "author": "Francisco-Gamino",
      "author_association": "CONTRIBUTOR",
      "body": "@lzybkr: Thank you Jason for your suggestion. Using regular expressions makes the code much simpler. \r\n@lzybkr, @daxian-dbw, and @TravisEz13 : Could you please take another look?",
      "created_at": "2017-05-24T20:25:05Z",
      "updated_at": "2017-05-24T20:25:05Z"
    }
  ],
  "created_at": "2017-05-19T16:24:21Z",
  "number": 3823,
  "state": "closed",
  "title": "Make ConvertFrom-Json deserialize an array of objects with multiple lines.",
  "updated_at": "2017-05-26T00:40:02Z"
}