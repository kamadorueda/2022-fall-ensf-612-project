{
  "_url": "https://github.com/PowerShell/PowerShell/issues/2770",
  "author": "eamodio",
  "body": "<!--\r\n\r\nIf it is a bug report:\r\n- make sure you are able to repro it on the latest released version. \r\nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\r\n- Search the existing issues.\r\n- Refer to the [FAQ](../docs/FAQ.md).\r\n- Refer to the [known issues](../docs/KNOWNISSUES.md).\r\n- Fill out the following repro template\r\n\r\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\r\n-->\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n1. Have a custom prompt with a new line:\r\n  ```\r\n~/foo\r\n> |\r\n  ```\r\n1. All looks fine, but as soon as you start to type, the `>` will start being replaced by the line above (assuming you typed q):\r\n  ```\r\n~/foo\r\n~/q\r\n  ```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n  ```\r\n~/foo\r\n> q\r\n  ```\r\n\r\n\r\nActual behavior\r\n---------------\r\n\r\n  ```\r\n~/foo\r\n~/q\r\n  ```\r\n\r\n\r\nEnvironment data\r\n----------------\r\n\r\nmacOS Sierra `10.12.1 (16B2555)`\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value                                               \r\n----                           -----                                               \r\nPSVersion                      6.0.0-alpha                                         \r\nPSEdition                      Core                                                \r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}                             \r\nBuildVersion                   3.0.0.0                                             \r\nGitCommitId                    v6.0.0-alpha.13                                     \r\nCLRVersion                                                                         \r\nWSManStackVersion              3.0                                                 \r\nPSRemotingProtocolVersion      2.3                                                 \r\nSerializationVersion           1.1.0.1   \r\n```\r\n",
  "closed_at": "2016-11-29T18:06:30Z",
  "comments": [
    {
      "author": "alongchamps",
      "author_association": "NONE",
      "body": "I'm having a similar issue, with a custom prompt() function and Write-Output $outputStr -NoNewLine. It's similar enough, so I decided to comment here.\r\n\r\n## Expected Behavior\r\n`(0) /Users/aaron # <insert command here>`\r\n\r\n## Actual Behavior\r\n`PS>               <insert command here>`\r\n\r\n## Steps to reproduce\r\nPowershell profile with this prompt:\r\n\r\n    function prompt() {\r\n        $outputStr = '('\r\n        $outputStr += $(Get-History).Count\r\n        $outputStr += ') '\r\n     \r\n        $outputStr += $(Get-Location)\r\n        $outputStr += ' # '\r\n\r\n        write-output $outputStr -NoNewLine\r\n\r\n       return ' '\r\n    }\r\n\r\nAnd then type a command.\r\n\r\n## More Info\r\nThe prompt is getting replaced with PS> and enough spaces to put the cursor back in the right spot. \r\n\r\n## Versions\r\n    Name                           Value                                                                                   \r\n    ----                           -----                                                                                   \r\n    PSVersion                      6.0.0-alpha                                                                             \r\n    PSEdition                      Core                                                                                    \r\n    PSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}                                                                 \r\n    BuildVersion                   3.0.0.0                                                                                 \r\n    GitCommitId                    v6.0.0-alpha.13                                                                         \r\n    CLRVersion                                                                                                             \r\n    WSManStackVersion              3.0                                                                                     \r\n    PSRemotingProtocolVersion      2.3                                                                                     \r\n    SerializationVersion           1.1.0.1  \r\n\r\nAlso observed on v6.0.0-alpha.12.\r\n\r\nOS X 10.11.6 (15G1108)",
      "created_at": "2016-11-27T23:57:49Z",
      "updated_at": "2016-11-27T23:58:12Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "@astla42 I think you have an error in your prompt function.  `Write-Output` does not take a `-NoNewline` parameter.  You probably meant to use `Write-Host`.  However, you can simplify your prompt to:\r\n```powershell\r\nfunction prompt {\r\n    \"($((Get-History).Count)) $(Get-Location) # \"\r\n}\r\n```\r\nFolks use `Write-Host` to get `colored text` in their prompt e.g.:\r\n```powershell\r\nfunction prompt {\r\n    Write-Host \"($((Get-History).Count)) \" -NoNewline\r\n    Write-Host \"$(Get-Location)\" -ForegroundColor Cyan -NoNewline\r\n    Write-Host \" # \" -NoNewline\r\n    ' '\r\n}\r\n```",
      "created_at": "2016-11-28T00:10:23Z",
      "updated_at": "2016-11-28T00:11:11Z"
    },
    {
      "author": "alongchamps",
      "author_association": "NONE",
      "body": "Yep, seems like I was doing that part wrong. The NoNewLine was leftover from other testing with my profile on Windows, which has more detail (such as connected vCenters, from PowerCLI) and colors for more readability. I was also testing between write-host and write-output, which is where that came from.",
      "created_at": "2016-11-28T00:27:27Z",
      "updated_at": "2016-11-28T00:27:27Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "@eamodio - this looks like https://github.com/lzybkr/PSReadLine/issues/468\r\nIf you're using `Write-Host`, I'll just close this as a duplicate.",
      "created_at": "2016-11-28T23:19:08Z",
      "updated_at": "2016-11-28T23:19:08Z"
    },
    {
      "author": "eamodio",
      "author_association": "NONE",
      "body": "@lzybkr Sorry but I forgot I had avoided Write-Host and just have the following:\r\n```ps\r\nfunction global:prompt {\r\n    $realLASTEXITCODE = $LASTEXITCODE\r\n    $p = Write-VcsStatus\r\n    $global:LASTEXITCODE = $realLASTEXITCODE\r\n\r\n    $path = $pwd.ProviderPath -replace $Env:HOME, \"~\"\r\n    if ($GitPromptSettings.PromptOnNewLine) {\r\n        return \"$path$p`n> \"\r\n    }\r\n    else {\r\n        return \"$path$p> \"\r\n    }\r\n}\r\n```",
      "created_at": "2016-11-29T18:38:51Z",
      "updated_at": "2016-11-29T18:38:51Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "The original issue should be fixed by https://github.com/PowerShell/PowerShell/pull/3867.\r\nPlease note that escape sequences are not supported by PSReadline on Unix (see the \"`Additional Info`\" section of the PR description body).",
      "created_at": "2017-05-26T19:18:22Z",
      "updated_at": "2017-05-26T19:18:22Z"
    }
  ],
  "created_at": "2016-11-23T14:53:30Z",
  "labels": [
    "Resolution-Duplicate",
    "WG-Interactive-PSReadLine"
  ],
  "number": 2770,
  "state": "closed",
  "title": "Custom prompt with newline on macOS gets corrupted on entry",
  "updated_at": "2017-05-26T19:18:22Z"
}