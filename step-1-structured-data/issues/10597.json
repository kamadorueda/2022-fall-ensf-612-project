{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10597",
  "author": "mklement0",
  "body": "Related: #6589\r\n\r\n`Microsoft.PowerShell.Commands.WebSslProtocol` is a wrapper for `enum` type `System.Net.SecurityProtocolType`, which means that the wrapped type's enumeration values must be kept in sync with the wrapper's.\r\n\r\nCurrently, the two diverge:\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\n[System.Net.SecurityProtocolType] 'Tls13' | Should -Be Tls13\r\n[Microsoft.PowerShell.Commands.WebSslProtocol]  'Tls13' | Should -Be Tls13\r\n```\r\n\r\n# Expected behavior\r\n\r\nThe tests should succeed.\r\n\r\n# Actual behavior\r\n\r\nThe 2nd test fails: \r\n\r\n```\r\nUnable to match the identifier name Tls13 to a valid enumerator nam\r\n```\r\n\r\n# Environment data\r\n\r\n```none\r\nPowerShell Core 7.0.0-preview.3\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@markekraus Do we still need the WebSslProtocol?",
      "created_at": "2019-09-22T16:38:20Z",
      "updated_at": "2019-09-22T16:38:20Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "https://github.com/PowerShell/PowerShell/blob/461a95cee403f4b608102fe9b721b1941ba2bdbe/src/Microsoft.PowerShell.Commands.Utility/commands/utility/WebCmdlet/Common/WebRequestPSCmdlet.Common.cs#L55-L56\r\n\r\n/cc @SteveL-MSFT It is public but do we really need this? It seems we could add new overload with SslProtocols and add Obsolete attribute to old `public virtual WebSslProtocol SslProtocol`.",
      "created_at": "2020-01-30T14:36:17Z",
      "updated_at": "2020-01-30T14:36:57Z"
    }
  ],
  "created_at": "2019-09-22T14:19:27Z",
  "number": 10597,
  "state": "open",
  "title": "[Microsoft.PowerShell.Commands.WebSslProtocol] doesn't expose the Tls13 enum value (Invoke-WebRequest, Invoke-RestMethod)",
  "updated_at": "2021-01-15T14:39:47Z"
}