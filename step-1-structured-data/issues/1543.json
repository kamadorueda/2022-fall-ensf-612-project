{
  "_url": "https://github.com/PowerShell/PowerShell/issues/1543",
  "author": "vors",
  "body": "<!--\n\nIf it is a bug report:\n- make sure you are able to repro it on the latest released version. \nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\n- Search the existing issues.\n- Refer to the [FAQ](../docs/FAQ.md).\n- Refer to the [known issues](../docs/KNOWNISSUES.md).\n- Fill out the following repro template\n\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\n-->\n## Steps to reproduce\n\n```\nStart-Process -NoNewWindow powershell\n```\n## Expected behavior\n\nRun process in a new window\n## Actual behavior\n\nRun process in the same window, but UX is broken\n\n```\nPS /Users/vors> Start-Process -NoNewWindow powershell                                                                                        \nPS /Users/vors> 14;1Rl                                                                                                                       \n14pyright (C) 2016 Microsoft Corporation. All rights reserved.\n1Rl : The term '1Rl' is not recognized as the name of a cmdlet, function, script file, or operable program. Check the spelling of the name, \nor if a path was included, verify that the path is correct and try again.\nAt line:1 char:4\n+ 14;1Rl\n+    ~~~\n    + CategoryInfo          : ObjectNotFound: (1Rl:String) [], CommandNotFoundException\n    + FullyQualifiedErrorId : CommandNotFoundException\n\nPS /Users/vors>                 ^Dlssaad  \n```\n## Environment data\n\nRepros on OS X, Linux and Windows\n\n<!-- provide the output of $PSVersionTable -->\n\n``` powershell\n> $PSVersionTable\n\nName                           Value                                                                                                        \n----                           -----                                                                                                        \nPSVersion                      5.1.10032.0                                                                                                  \nPSEdition                      PowerShellCore                                                                                               \nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}                                                                                      \nBuildVersion                   3.0.0.0                                                                                                      \nGitCommitId                    v6.0.0-alpha.7                                                                                               \nCLRVersion                                                                                                                                  \nWSManStackVersion              3.0                                                                                                          \nPSRemotingProtocolVersion      2.3                                                                                                          \nSerializationVersion           1.1.0.1  \n```\n",
  "closed_at": null,
  "comments": [
    {
      "author": "0xfeeddeadbeef",
      "author_association": "CONTRIBUTOR",
      "body": "@vors Expected behavior is not quite correct. According to `Get-Help Start-Process`:\r\n```\r\n-NoNewWindow [<SwitchParameter>]\r\n    Start the new process in the current console window. By default Windows PowerShell opens a new window.\r\n```\r\nit should start in the **current** console window.\r\n\r\nHowever, UX being broken is still true, - it seems that both parent and child powershell.exe processes are competing for user input. This is my attempt to type `$PSVersionTable`:\r\n```\r\nPS C:\\Users\\Giorgi.Chakhidze> Start-Process -NoNewWindow powershell.exe\r\nPS C:\\Users\\Giorgi.Chakhidze> $SesoTal\r\nCopyright (C) 2016 Microsoft Corporation. All rights reserved.\r\n\r\nPS C:\\Users\\Giorgi.Chakhidze>\r\n$ PVrinbe\r\n```",
      "created_at": "2017-04-13T12:37:19Z",
      "updated_at": "2017-04-13T12:37:19Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "Yeah, can confirm this is still broken. ",
      "created_at": "2017-05-23T19:42:21Z",
      "updated_at": "2017-05-23T19:42:21Z"
    },
    {
      "author": "florinciubotariu",
      "author_association": "NONE",
      "body": "Can confirm it is still reproducible.",
      "created_at": "2017-08-02T13:24:41Z",
      "updated_at": "2017-08-02T13:24:41Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Definitely broken, but It is worth noting that `Start-Process -NoNewWindow powershell` doesn't make much sense, given that it amounts to running an _interactive_ shell _asynchronously_ in the current terminal (which results in _two_ shells competing for input, as @0xfeeddeadbeef's experience suggests).\r\n\r\nAdding `-Wait` - `Start-Process -Wait -NoNewWindow powershell` - works properly, but there's no good reason to use it, given that just invoking `powershell` directly is not only simpler (it implicitly runs synchronously in the current terminal), but is also properly integrated with the current session's input/output streams, unlike a `Start-Process` call.\r\n\r\n`-NoNewWindow` is really only useful in very limited circumstances:\r\n  * for console applications  (GUI applications open their own (non-console) window anyway)\r\n  * that produce no output / whose output is redirected via `-RedirectStandardOutput` / `-RedirectStandardError`\r\n\r\nIt is a poor substitute for using a _job_ to launch a console application in the background, which gives you much better control.\r\n\r\nUnless I'm missing other use cases for `-NoNewWindow`, it may be a candidate for deprecation.\r\n\r\n ",
      "created_at": "2017-08-07T20:29:51Z",
      "updated_at": "2017-08-07T21:52:04Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "True, counting the number of negatives is hard :D\r\nIf I recall correctly, the reason I opened the issue is the there is mismatch in behavior and on core powershell it's implicit `NoNewWindow`.",
      "created_at": "2017-08-07T22:09:39Z",
      "updated_at": "2017-08-07T22:09:39Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@vors: It may be time to decide the fate / behavior of `Start-Process` on Unix platforms: please see #4521.",
      "created_at": "2017-08-07T22:18:44Z",
      "updated_at": "2017-08-07T22:18:44Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "How about making `NoNewWindow` a no-op on unix?",
      "created_at": "2018-02-20T05:11:17Z",
      "updated_at": "2018-02-20T05:11:17Z"
    },
    {
      "author": "zwcloud",
      "author_association": "NONE",
      "body": "Any update on this? @SteveL-MSFT ",
      "created_at": "2018-11-15T04:16:15Z",
      "updated_at": "2018-11-15T04:16:15Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee reviewed this, when using `start-process -nonewwindow pwsh`, it should behave the same as just typing `pwsh`.  This should just be a bug.  Same if using `bash` instead of `pwsh`",
      "created_at": "2018-12-05T23:22:15Z",
      "updated_at": "2018-12-05T23:22:36Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT, can you please clarify?\r\n\r\nGiven that `Start-Process` is _asynchronous_ by default, why should `Start-Process -NoNewWindow pwsh` (_asynchronous_ -> battle for keyboard) behave the same as just `pwsh` (_synchronous_ -> OK, child shell)?\r\n\r\nAre you saying that exceptions should be built into `Start-Process`?\r\n",
      "created_at": "2018-12-06T02:17:57Z",
      "updated_at": "2018-12-06T02:17:57Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@mklement0 great question.  `start-process -nonewwindow foo` is effectively synchronous as I don't believe there is a single use case where the intent is to have a process started async that fights for the console.  So the specific behavior is only if `-NoNewWindow` is used to behave as though you executed `foo` without using `start-process`.",
      "created_at": "2018-12-06T02:36:44Z",
      "updated_at": "2018-12-06T02:36:44Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT: \r\n\r\n`start-process -nonewwindow foo` can be useful as a lightweight _asynchronous_ way to call _launch-and-forget-it_ processes that are known (designed to) _neither solicit stdin input nor to produce terminal output_, which, on Linux, includes GUI apps whose CLIs are blocking, such as `gedit`.\r\n\r\nOf course, on Unix you can just omit `-NoNewWindow` in that case, given that it's not supported and that running in the same terminal is the invariable default.\r\n\r\nOn a general note, remember that verb `Start` implies _asynchronous_ operation (even though `Start-Sleep` didn't get the memo).\r\n",
      "created_at": "2018-12-06T02:42:00Z",
      "updated_at": "2018-12-06T02:47:06Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "I think it would make sense to have `-NoNewWindow` be a separate parameter set to `-Wait`. In every case I've seen for `-NoNewWindow` it doesn't make any sense, as you say, to have it async, so it should just behave as `-NoNewWindow -Wait` does currently without the extra parameter, and have `-Wait` simply be an option when you're _not_ using `-NoNewWindow`. \ud83d\ude04 ",
      "created_at": "2018-12-06T03:42:29Z",
      "updated_at": "2018-12-06T03:42:29Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "There is _no_ reason to involve `Start-Process` at all if you want to run a _console/terminal-based_ application _synchronously_: not only is _direct_ invocation simpler, only the latter guarantees that the invoked program's output streams are connected to PowerShell's.\r\n\r\n`Start-Process` is asynchronous by default; that's what the standard verb in its name implies, and I don't think there should be any exceptions, _especially not for use cases that make no sense to begin with_.\r\n\r\n`-NoNewWindow` in effect _is_ a no-op on Unix-like platforms, and it makes sense to document it as such.\r\n\r\nYes, that means that someone can shoot themselves in the foot with something like `Start-Process [-NoNewWindow] bash` on Unix, but to me that's still preferable to special-casing behavior.\r\nSensible use cases for `Start-Process` on Unix are very limited compared to Windows; I've tried to [summarize them here](https://github.com/PowerShell/PowerShell-Docs/issues/3013#issue-369844072) - integration into the docs is pending.\r\n",
      "created_at": "2018-12-06T04:04:49Z",
      "updated_at": "2018-12-06T04:04:49Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@mklement0 I agree that `Start` implies async and also agree that `-NoNewWindow` doesn't make sense on Unix-like platforms.  However, it doesn't make sense to continue to allow users to get into this situation.  However, I don't see this as a priority to fix as I don't believe it affects a large number of users and I expect they'll learn quickly not to use it again after the first time.",
      "created_at": "2018-12-19T01:36:58Z",
      "updated_at": "2018-12-19T01:36:58Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT:\r\n\r\n> I expect they'll learn quickly not to use it again after the first time.\r\n\r\nYes, which is why I think the problem can be dealt with by simply providing proper guidance in the `Start-Process` help topic (_update_: see https://github.com/MicrosoftDocs/PowerShell-Docs/issues/3013):\r\n\r\n* By stating  in the `Description` section that `-NoNewWindow` is _invariably implied_ on Unix-like platforms.\r\n\r\n* By stating in the description of parameter `-NoNewWindow`:\r\n\r\n  * that (possibly implied) `-NoNewWindow` is only relevant to _console/terminal_-based applications and generally only makes sense in very limited circumstances (to put it differently: _typically_, there's _no_ need to use `Start-Process` to invoke console/terminal-based programs):\r\n\r\n      * Launch-it-and-forget-it _console/terminal_-based commands known not to produce output / expect interactive input (if the target program is _not_ console/terminal-based, there's no reason to use `-NoNewWindow` to begin with),\r\n\r\n    * _Console/terminal_-based commands that require _running with a pristine environment_ with `-UseNewEnvironment`; if such commands happen to produce output / require interactive input, then `-Wait` must used, too. (On Windows, if the process with a pristine environment should run in a new window anyway, there's obviously no need for `-NoNewWindow`.)\r\n\r\n  * that not also including `-Wait` for console/terminal-based application will cause them  to send output asynchronously / compete for interactive input with the calling session.\r\n\r\n",
      "created_at": "2018-12-19T03:07:18Z",
      "updated_at": "2020-07-05T15:16:44Z"
    },
    {
      "author": "red8888",
      "author_association": "NONE",
      "body": "when using `-NoNewWindow` I get this error: `This command cannot be run due to the error: %1 is not a valid Win32 application.`",
      "created_at": "2020-06-19T23:11:55Z",
      "updated_at": "2020-06-19T23:11:55Z"
    },
    {
      "author": "BouwenMA",
      "author_association": "NONE",
      "body": "I've come across issues with this today wondering why my Start-Process with -NoNewWindow parameter was seeming to hang until I pressed enter...   \r\n\r\nAs @mklement0  stated above, I agree that the help topic should be updated.  After spending a bit of time with several searches and articles trying to figure out the problem, I finally came across this issue...   Noting that one should use \"-Wait\", or altering the behavior of -NoNewWindow to implicitly wait, would seem to be very helpful.  Had it been in the contents of the Start-Process help, I would've known immediately...\r\n\r\nFor my use case, I've been using Start-Process for running PSExec with various parameters, as I cycle through pushing updates to many servers.  But for simplicy, the behavior I'm seeing can be reproduced on all PowerShell versions 5-7.1 I've tried so far like this:\r\n\r\n    Start-Process -FilePath IPConfig -NoNewWindow\r\n\r\nThe output will be shown, with the cursor just sitting at the bottom flashing, and only bring back the prompt after I hit enter or up arrow...   As long as I append \"-Wait\" it behaves as desired...\r\n\r\n\r\n\r\n",
      "created_at": "2020-07-02T18:06:45Z",
      "updated_at": "2020-07-02T18:06:45Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks, @BouwenMA.\r\n\r\nNote the pending issue requesting updating of the docs (it's been open since December 2018): https://github.com/MicrosoftDocs/PowerShell-Docs/issues/3013 - if you're up for it, you could try to submit a PR yourself.\r\n\r\nAlso - in case `ipconfig.exe` wasn't just a random example - remember that there's generally no good reason to use `Start-Process` with _console_ applications such as `ipconfig.exe` (or `psexec`), as explained [above](https://github.com/PowerShell/PowerShell/issues/1543#issuecomment-444741315) and as also covered in the linked issue.",
      "created_at": "2020-07-02T18:19:00Z",
      "updated_at": "2020-07-02T18:19:00Z"
    },
    {
      "author": "doctordns",
      "author_association": "COLLABORATOR",
      "body": "Trying this in 7.2.1 - the UX is still broken. ",
      "created_at": "2022-02-15T15:08:04Z",
      "updated_at": "2022-02-15T15:08:04Z"
    }
  ],
  "created_at": "2016-07-27T19:24:23Z",
  "labels": [
    "Issue-Bug",
    "OS-macOS",
    "OS-Windows",
    "OS-Linux",
    "WG-Interactive-Console",
    "WG-Cmdlets",
    "Up-for-Grabs",
    "Committee-Reviewed"
  ],
  "number": 1543,
  "state": "open",
  "title": "Start-Process -NoNewWindow broken in core edition",
  "updated_at": "2022-02-15T15:08:04Z"
}