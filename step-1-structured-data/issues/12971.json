{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12971",
  "author": "mklement0",
  "body": "`(Get-Location).ProviderPath` _generally_ consistently reports the underlying native filesystem path as follows:\r\n\r\n* If the native path is a _root_ directory, it is - of necessity - reported with a trailing `\\` (Windows) or `/` (Unix)\r\n\r\n* Otherwise, the path reported does _not_ end in a separator.\r\n\r\nThere is one _exception_, however, and it makes testing `.ProviderPath` somewhat unpredictable: \r\nIf the target location is the root of a _custom PS drive_, `.ProviderPath` invariably reports the underlying native path _with_ a separator.\r\n\r\n## Steps to reproduce\r\n\r\n```powershell\r\n# Define a custom H: drive whose root is $HOME.\r\n$null = New-PSDrive H FileSystem $HOME\r\n\r\n# Change to the root of the new drive, which is now effectively the \r\n# same as $HOME, though from PowerShell's perspective the path is H:\\\r\nSet-Location H:\\\r\n\r\n# !! -> $false, because .ProviderPath effectively reports \"$HOME\\\" / \"$HOME/\",\r\n# !! not just $HOME\r\n(Get-Location).ProviderPath | Should -BeExactly $HOME\r\n```\r\n\r\n## Expected behavior\r\n\r\nThe test should pass.\r\n\r\n## Actual behavior\r\n\r\nThe test fails; e.g. with the following on macOS:\r\n\r\n```none\r\n... Strings differ at index 15. \r\nExpected: '/Users/jdoe' But was:  '/Users/jdoe/'\r\n```\r\n\r\n## Environment data\r\n\r\n```none\r\nPowerShell Core 7.1.0-preview.3\r\n```\r\n",
  "closed_at": null,
  "comments": [],
  "created_at": "2020-06-16T14:47:54Z",
  "number": 12971,
  "state": "open",
  "title": "PathInfo.ProviderPath unexpectedly reports path with trailing separator for root directories of custom PS drives",
  "updated_at": "2020-06-17T12:17:11Z"
}