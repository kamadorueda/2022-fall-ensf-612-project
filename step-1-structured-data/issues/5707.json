{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5707",
  "author": "matt-richardson",
  "body": "\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\ngit clone https://github.com/OctopusDeploy/OctopusDSC.git\r\ncd OctopusDSC\r\ngit checkout ce3f797347bec9c0366c33c9b6c3f3e6ddeef6f3\r\ncd OctopusDSC/Examples\r\nInvoke-ScriptAnalyzer -Path ./cOctopusSeqLogger.ps1 \r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\nNormal script analysis \r\n\r\nActual behavior\r\n---------------\r\n\r\n```none\r\nPS /Users/me/OctopusDSC> Invoke-ScriptAnalyzer ./OctopusDSC/Examples/cOctopusSeqLogger.ps1                                                                                       \r\nInvoke-ScriptAnalyzer : Parse error in file /Users/me/OctopusDSC/OctopusDSC/Examples/cOctopusSeqLogger.ps1:  System.DllNotFoundException: Unable to load DLL 'libmi.so': The specified module or one of its dependencies could not be found.\r\n (Exception from HRESULT: 0x8007007E)\r\n   at Microsoft.Management.Infrastructure.Native.NativeMethods.MI_Application_InitializeV1(UInt32 flags, String applicationID, IndirectPtr extendedError, DirectPtr application)\r\n   at Microsoft.Management.Infrastructure.Native.MI_Application.Initialize(String applicationId, MI_Instance& extendedError, MI_Application& application)\r\n   at Microsoft.Management.Infrastructure.Internal.CimApplication.GetApplicationHandle()\r\n   at System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Lazy`1.CreateValue()\r\n   at Microsoft.Management.Infrastructure.Internal.CimApplication.get_Handle()\r\n   at Microsoft.Management.Infrastructure.Serialization.CimMofDeserializer..ctor()\r\n   at Microsoft.Management.Infrastructure.Serialization.CimMofDeserializer.Create()\r\n   at Microsoft.PowerShell.DesiredStateConfiguration.CimDSCParser..ctor(OnClassNeeded onClassNeeded)\r\n   at Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.ImportClasses(String path, Tuple`2 moduleInfo, Collection`1 errors)\r\n   at Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.Initialize(Collection`1 errors, List`1 modulePathList)\r\n   at Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.LoadDefaultCimKeywords(Dictionary`2 functionsToDefine, Collection`1 errors, List`1 modulePathList, Boolean cacheResourcesFromMultipleModuleVersions)\r\n   at Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.LoadDefaultCimKeywords(Collection`1 errors)\r\n   at System.Management.Automation.Language.Parser.ConfigurationStatementRule(IEnumerable`1 customAttributes, Token configurationToken) at line 7 column 15.\r\nAt line:1 char:1\r\n+ Invoke-ScriptAnalyzer ./OctopusDSC/Examples/cOctopusSeqLogger.ps1\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : ParserError: (ParserError:String) [Invoke-ScriptAnalyzer], ParseException\r\n+ FullyQualifiedErrorId : Parse error in file /Users/me/OctopusDSC/OctopusDSC/Examples/cOctopusSeqLogger.ps1:  System.DllNotFoundException: Unable to load DLL 'libmi.so': The specified module or one of its dependencies could not be found.\r\n (Exception from HRESULT: 0x8007007E)\r\n   at Microsoft.Management.Infrastructure.Native.NativeMethods.MI_Application_InitializeV1(UInt32 flags, String applicationID, IndirectPtr extendedError, DirectPtr application)\r\n   at Microsoft.Management.Infrastructure.Native.MI_Application.Initialize(String applicationId, MI_Instance& extendedError, MI_Application& application)\r\n   at Microsoft.Management.Infrastructure.Internal.CimApplication.GetApplicationHandle()\r\n   at System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Lazy`1.CreateValue()\r\n   at Microsoft.Management.Infrastructure.Internal.CimApplication.get_Handle()\r\n   at Microsoft.Management.Infrastructure.Serialization.CimMofDeserializer..ctor()\r\n   at Microsoft.Management.Infrastructure.Serialization.CimMofDeserializer.Create()\r\n   at Microsoft.PowerShell.DesiredStateConfiguration.CimDSCParser..ctor(OnClassNeeded onClassNeeded)\r\n   at Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.ImportClasses(String path, Tuple`2 moduleInfo, Collection`1 errors)\r\n   at Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.Initialize(Collection`1 errors, List`1 modulePathList)\r\n   at Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.LoadDefaultCimKeywords(Dictionary`2 functionsToDefine, Collection`1 errors, List`1 modulePathList, Boolean cacheResourcesFromMultipleModuleVersions)\r\n   at Microsoft.PowerShell.DesiredStateConfiguration.Internal.DscClassCache.LoadDefaultCimKeywords(Collection`1 errors)\r\n   at System.Management.Automation.Language.Parser.ConfigurationStatementRule(IEnumerable`1 customAttributes, Token configurationToken) at line 7 column 15.,Microsoft.Windows.PowerShell.ScriptAnalyzer.Commands.InvokeScriptAnalyzerCommand\r\n \r\nInvoke-ScriptAnalyzer : Parse error in file /Users/me/OctopusDSC/OctopusDSC/Examples/cOctopusSeqLogger.ps1:  Unexpected token '{' in expression or statement at line 8 column 1.\r\nAt line:1 char:1\r\n+ Invoke-ScriptAnalyzer ./OctopusDSC/Examples/cOctopusSeqLogger.ps1\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : ParserError: (UnexpectedToken:String) [Invoke-ScriptAnalyzer], ParseException\r\n+ FullyQualifiedErrorId : Parse error in file /Users/me/OctopusDSC/OctopusDSC/Examples/cOctopusSeqLogger.ps1:  Unexpected token '{' in expression or statement at line 8 column 1.,Microsoft.Windows.PowerShell.ScriptAnalyzer.Commands.InvokeScriptAnalyzerCommand\r\n \r\nInvoke-ScriptAnalyzer : Parse error in file /Users/me/OctopusDSC/OctopusDSC/Examples/cOctopusSeqLogger.ps1:  Unexpected token '}' in expression or statement at line 22 column 1.\r\nAt line:1 char:1\r\n+ Invoke-ScriptAnalyzer ./OctopusDSC/Examples/cOctopusSeqLogger.ps1\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : ParserError: (UnexpectedToken:String) [Invoke-ScriptAnalyzer], ParseException\r\n+ FullyQualifiedErrorId : Parse error in file /Users/me/OctopusDSC/OctopusDSC/Examples/cOctopusSeqLogger.ps1:  Unexpected token '}' in expression or statement at line 22 column 1.,Microsoft.Windows.PowerShell.ScriptAnalyzer.Commands.InvokeScriptAnalyzerCommand\r\n \r\n\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\n \r\nName                           Value                                                                                                                                                           \r\n----                           -----                                                                                                                                                           \r\nPSVersion                      6.0.0-rc.2                                                                                                                                                      \r\nPSEdition                      Core                                                                                                                                                            \r\nGitCommitId                    v6.0.0-rc.2                                                                                                                                                     \r\nOS                             Darwin 17.3.0 Darwin Kernel Version 17.3.0: Thu Nov  9 18:09:22 PST 2017; root:xnu-4570.31.3~1/RELEASE_X86_64                                                   \r\nPlatform                       Unix                                                                                                                                                            \r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}                                                                                                                                         \r\nPSRemotingProtocolVersion      2.3                                                                                                                                                             \r\nSerializationVersion           1.1.0.1                                                                                                                                                         \r\nWSManStackVersion              3.0  \r\n```\r\n",
  "closed_at": "2021-01-15T05:10:29Z",
  "comments": [
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "@matt-richardson This issue should be opened in the [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) repo.",
      "created_at": "2017-12-18T07:27:54Z",
      "updated_at": "2017-12-18T07:30:07Z"
    },
    {
      "author": "matt-richardson",
      "author_association": "NONE",
      "body": "It appears to be an underlying issue, rather than related to PSScriptAnalyzer. Most likely an issue loading DSC. (I was short cutting the process of logging it over there and then getting told it should be logged over here.)",
      "created_at": "2017-12-18T07:33:10Z",
      "updated_at": "2017-12-18T07:33:10Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "libmi is not supported.",
      "created_at": "2021-01-15T05:10:29Z",
      "updated_at": "2021-01-15T05:10:56Z"
    },
    {
      "author": "matt-richardson",
      "author_association": "NONE",
      "body": "Wow. 3 years of waiting, and then I get 4 words. \r\nYou ask for detailed information when someone files an issue, but then you close without any kind of response.\r\n\r\nI dont want to use libmi. I want to use PSScriptAnalyzer on a DSC configuration file on macOS. ",
      "created_at": "2021-01-15T05:32:11Z",
      "updated_at": "2021-01-15T05:32:11Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@matt-richardson It is old history and a plan is to exclude all dependencies on libmi.  MSFT team has started new cross platform DSC support project. See summary of the PR #13399. You could take part in related discussions.",
      "created_at": "2021-01-15T09:45:34Z",
      "updated_at": "2021-01-15T09:46:39Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "@matt-richardson Last year, I improved PSScriptAnalyzer to be able to analyze DSC dependencies on non-Windows Unix systems as well when using the `-SaveDscDependency` switch of `Invoke-ScriptAnalyzer` in PR https://github.com/PowerShell/PSScriptAnalyzer/pull/1246, which was first released in PSScriptAnalyzer 1.18.1. Can you please try again with the latest version of PScriptAnalyzer by running `Install-Module PSScriptAnalyzer -Force` and restarting the shell in case PSScriptAnalyzer was already loaded before installing the newer version.",
      "created_at": "2021-01-15T22:47:12Z",
      "updated_at": "2021-01-15T22:50:14Z"
    }
  ],
  "created_at": "2017-12-18T04:27:56Z",
  "labels": [
    "Issue-Question",
    "Resolution-Answered",
    "Area-DSC"
  ],
  "number": 5707,
  "state": "closed",
  "title": "PSScriptAnalyzer fails on DSC configuration file on macOS - Unable to load DLL 'libmi.so'",
  "updated_at": "2021-01-15T22:50:14Z"
}