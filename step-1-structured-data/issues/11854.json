{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11854",
  "author": "DanielFrei64",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 and PowerShell 7+ issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n\r\n-->\r\n\r\n# Steps to reproduce\r\nThe following script\r\n```powershell\r\n$i = 1\r\nif ($i -eq 1) {\r\n    Write-Output \"i equals 1\"\r\n}\r\nelse {\r\n    Write-Output \"i does not equal 1\"\r\n}\r\n```\r\nfails with the error:\r\n\r\n```none\r\nelse: The term 'else' is not recognized as the name of a cmdlet, function, script file, or operable program.\r\nCheck the spelling of the name, or if a path was included, verify that the path is correct and try again.\r\n```\r\nhowever, simply moving \"else\" up one line along side the } makes the script work\r\n\r\n```powershell\r\n$i = 1\r\nif ($i -eq 1) {\r\n    Write-Output \"i equals 1\"\r\n} else {\r\n    Write-Output \"i does not equal 1\"\r\n}\r\n```\r\n# Expected behavior\r\n\r\n```none\r\n\"else\" should be allowed to be on a new line and not error\r\n```\r\n\r\n# Actual behavior\r\n\r\n```none\r\nelse: The term 'else' is not recognized as the name of a cmdlet, function, script file, or operable program.\r\nCheck the spelling of the name, or if a path was included, verify that the path is correct and try again.\r\n```\r\n\r\n# Environment data\r\nTested out on multiple systems\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-rc.2\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-rc.2\r\nOS                             Microsoft Windows 10.0.18362\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\nThis looks like this might be similar to #9499, however, my results are different than his. He specifies it works on Windows, in my case, and a few other Windows systems it does not. ",
  "closed_at": "2020-02-17T11:00:17Z",
  "comments": [
    {
      "author": "jhoneill",
      "author_association": "NONE",
      "body": "This is pasting into the PowerShell console? Or in a .PS1 file ? ",
      "created_at": "2020-02-14T17:37:24Z",
      "updated_at": "2020-02-14T17:37:24Z"
    },
    {
      "author": "DanielFrei64",
      "author_association": "NONE",
      "body": "It works fine when running as a ps1 but if pasting it into the console or opening it up in vscode and running the section manually it will error",
      "created_at": "2020-02-14T18:42:14Z",
      "updated_at": "2020-02-14T18:42:14Z"
    },
    {
      "author": "jhoneill",
      "author_association": "NONE",
      "body": "It's a general problem because the parser sees the } belonging to IF as the end of a statement. \r\nThis is something Psreadline is _meant to _ handle , can you double check what version of psreadline you have.  ",
      "created_at": "2020-02-14T19:35:45Z",
      "updated_at": "2020-02-14T19:35:45Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "This is a long-standing PSReadLine issue: https://github.com/PowerShell/PSReadLine/issues/579\r\n\r\nIn short: Unix terminals in general and the Windows console when you right-click (as opposed to using <kbd>Ctrl-V</kbd>) paste the text by _simulated typing_, which PSReadLine is unaware of and therefore stops once a statement is complete.\r\nThe planned workaround is to use the timing of the keystrokes received to _guess_ when typing is being simulated.\r\n\r\nIn VSCode, if you use the PowerShell extension's `Run Selection` command to run a block of lines, you should _not_ experience the problem, however.\r\n\r\n (By contrast, the PowerShell Integrated Console running in VSCode's integrated terminal doesn't use PSReadLine (yet?) at all, and  behaves even less helpfully by submitting _each line_ pasted as its own command.)\r\n",
      "created_at": "2020-02-14T19:54:15Z",
      "updated_at": "2020-02-14T21:32:23Z"
    },
    {
      "author": "DanFrei64",
      "author_association": "NONE",
      "body": "So I\u2019m my case, I am using vscode and the powershell extension \u201crun selection\u201d command and I am experiencing this behavior, you are correct that the integrated terminal is not experiencing this same issue. At least in my couple of test cases.  ",
      "created_at": "2020-02-14T21:13:16Z",
      "updated_at": "2020-02-14T21:13:16Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@DanFrei64 is that in the PowerShell or powershell-preview extensions? The latter I think may have additional handling that improves that scenario...",
      "created_at": "2020-02-14T21:15:43Z",
      "updated_at": "2020-02-14T21:15:43Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@DanFrei64, I was trying to say that the integrated terminal behaves even less helpfully by submitting _each line_ pasted as its own command.\r\n\r\nI don't think any pasting is involved when you use `>PowerShell: Run Selection` (<kbd>F8</kbd>), so I see no problems, neither on Windows nor on macOS (VSCode 1.42.1, PowerShell extension 2020.1.0)\r\n\r\nNote that there's also the non-PowerShell-specific `>Terminal: Run Selected Text in Active Terminal` command, which again behaves like the integrated terminal: each line is submitted as its own command.\r\n",
      "created_at": "2020-02-14T21:34:58Z",
      "updated_at": "2020-02-14T21:34:58Z"
    },
    {
      "author": "DanielFrei64",
      "author_association": "NONE",
      "body": "To answer another question from above, I was running PSReadline 2.0.0 rc2. I just updated to PSReadline 2.0.0 released a couple of days ago but it is still happening. \r\n\r\nI did try the Powershell Preview extension, as well as the \"Terminal: Run Selected Text in Active Terminal\" command, but it still resulted in the error. \r\n\r\nWe recently went through all of our powershell shell scripts and autoformatted them based on the PSScriptAnalyzer, which defaults it to putting the else on the next line. And now of course I'm looking at going move to pscore and thus my issue, so I appreciate the help. Also worth noting, this happens on pscore6 as well but if I'm understanding correctly, this is more an issue with psreadline than pscore. ",
      "created_at": "2020-02-14T21:56:57Z",
      "updated_at": "2020-02-14T21:56:57Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "To be clear: the `>Terminal: Run Selected Text in Active Terminal` command _shouldn't be expected to work_ - by design, it submits each line one by one.\r\n\r\nAre you really seeing the problem when you use `>PowerShell: Run Selection` (<kbd>F8</kbd>)?\r\n\r\n>  if I'm understanding correctly, this is more an issue with psreadline than pscore.\r\n\r\nYes, though it would be more accurate to say that the problem stems from how terminal programs perform pasting (simulated typing), and that a nontrivial, yet-to-be-implemented workaround is possible in PSReadLine.\r\n\r\n",
      "created_at": "2020-02-14T22:03:04Z",
      "updated_at": "2020-02-14T23:43:48Z"
    },
    {
      "author": "DanielFrei64",
      "author_association": "NONE",
      "body": "@mklement0 Yes. pwsh terminal, >PowerShell: Run Selection (F8) I receive the error",
      "created_at": "2020-02-15T02:51:38Z",
      "updated_at": "2020-02-15T02:51:38Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@DanFrei64, If the integrated terminal just happens to be running `pwsh` _as a regular shell_, that would explain the problem.\r\n\r\nWhat you _should_ be running is the _PowerShell Integrated Console_, which is a special PowerShell instance that comes with the VSCode PowerShell extension, which integrates with the editor to provide linting, debugging, ...\r\nOnly if the integrated terminal shows \r\n![image](https://user-images.githubusercontent.com/588825/74581383-eed99f80-4f7c-11ea-9b09-c9a79cae2367.png) in the top right corner are you truly running the PowerShell Integrated Console, and only then will `>PowerShell: Run Selection` (<kbd>F8</kbd>) work as expected.\r\n",
      "created_at": "2020-02-15T03:55:55Z",
      "updated_at": "2020-02-15T03:56:13Z"
    },
    {
      "author": "jhoneill",
      "author_association": "NONE",
      "body": "@mklement0  makes an important point with the non-integrated shell text is just typed not fed as a block.  Just for the record, I took this code \r\n```\r\nif ($true) {\"boo\"}\r\nelse {\"hoo\"}\r\n```\r\nand tried copy/paste and F8 in most of the permutations - results below\r\n```\r\nPaste\r\nWindows PowerShell 5.1 ISE (no PsReadLine )                                     line continues\r\nWindows PowerShell 5.1 or PowerShell 7 RC2 / std or terminal with PsReadLine    line continues\r\nWindows PowerShell 5.1 or PowerShell 7 RC2 / std or terminal without PsReadLine line breaks\r\nVSCode with PowerShell 7 RC2 shell OR Integrated console and PSreadline         line breaks\r\nF8 in Edit window\r\nWindows PowerShell 5.1 ISE                                                      line continues\r\nVSCode with Integrated console                                                  line continues \r\nVSCode with shell                                                               line continues  \r\n```",
      "created_at": "2020-02-15T21:35:50Z",
      "updated_at": "2020-02-15T21:35:50Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "We have many discussion about this https://github.com/PowerShell/PowerShell/issues?utf8=%E2%9C%93&q=is%3Aissue+continuation",
      "created_at": "2020-02-16T08:10:47Z",
      "updated_at": "2020-02-16T08:10:47Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as duplicate and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2020-02-17T11:00:12Z",
      "updated_at": "2020-02-17T11:00:12Z"
    }
  ],
  "created_at": "2020-02-14T16:49:17Z",
  "number": 11854,
  "state": "closed",
  "title": "else statement does not work on new line",
  "updated_at": "2020-02-17T11:00:17Z"
}