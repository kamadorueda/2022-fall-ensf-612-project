{
  "_url": "https://github.com/PowerShell/PowerShell/issues/18510",
  "author": "szymonos",
  "body": "### Prerequisites\r\n\r\n- [X] Write a descriptive title.\r\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- [X] Search the existing issues.\r\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\r\n\r\n### Steps to reproduce\r\n\r\nCreate /tmp/test.ps1 script with shebang using the below code:\r\n```\r\n#!/usr/bin/pwsh\r\n$true\r\n```\r\nSet the executable bit with `chmod +x /tmp/test.ps1` command and run the script from **bash** shell on WSL/Linux with PowerShell v7.3.0 installed.\r\n\r\n### Expected behavior\r\n\r\n```console\r\n$ /tmp/test.ps1\r\nTrue\r\n```\r\n\r\n\r\n### Actual behavior\r\n\r\n```console\r\n$ /tmp/test.ps1\r\nThe application to execute does not exist: '/tmp/pwsh.dll'.\r\n```\r\n\r\n\r\n### Error details\r\n\r\n_No response_\r\n\r\n### Environment data\r\n\r\n```powershell\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.3.0\r\nPSEdition                      Core\r\nGitCommitId                    7.3.0\r\nOS                             Linux 5.15.68.1-microsoft-standard-WSL2 #1 SMP Mon Sep 19 19:14:52 UTC 2022\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\n\r\n### Visuals\r\n\r\n_No response_",
  "closed_at": null,
  "comments": [
    {
      "author": "szymonos",
      "author_association": "NONE",
      "body": "So I've tried to copy pwsh.dll to script path, and got the error:\r\n```\r\nYou must install .NET to run this application.\r\n\r\nApp: /opt/microsoft/powershell/7/pwsh\r\nArchitecture: x64\r\nApp host version: 7.0.0\r\n.NET location: Not found\r\n```\r\n\r\nAfter installing dotnet 7.0.0\r\n```\r\nA fatal error was encountered. The library 'libhostpolicy.so' required to execute the application was not found in '/home/user/.dotnet'.\r\nFailed to run as a self-contained app.\r\n  - The application was run as a self-contained app because '/<script_path>/pwsh.runtimeconfig.json' was not found.\r\n  - If this should be a framework-dependent app, add the '/<script_path>/pwsh.runtimeconfig.json' file and specify the appropriate framework.\r\n```\r\nafter copying 'libhostpolicy.so' from /opt/microsoft/powershell/7 to '/home/user/.dotnet' another error:\r\n```\r\nCould not resolve CoreCLR path. For more details, enable tracing by setting COREHOST_TRACE environment variable to 1\r\n```",
      "created_at": "2022-11-09T22:07:57Z",
      "updated_at": "2022-11-09T22:07:57Z"
    },
    {
      "author": "237dmitry",
      "author_association": "NONE",
      "body": "Create a symbolic link to pwsh.dll in the directory that is in $PATH",
      "created_at": "2022-11-09T22:56:01Z",
      "updated_at": "2022-11-09T22:56:01Z"
    },
    {
      "author": "szymonos",
      "author_association": "NONE",
      "body": "> Create a symbolic link to pwsh.dll in the directory that is in $PATH\r\n\r\nI've crated symlink with `ln -s /opt/microsoft/powershell/7/pwsh.dll /usr/bin/pwsh.dll` command, but it didn't help. Throws the same error:\r\n\r\n```\r\nThe application to execute does not exist: '/tmp/pwsh.dll'.\r\n```\r\n\r\nAdding `/opt/microsoft/powershell/7` to $PATH doesn't help either.",
      "created_at": "2022-11-10T05:12:08Z",
      "updated_at": "2022-11-10T08:00:43Z"
    },
    {
      "author": "szymonos",
      "author_association": "NONE",
      "body": "> Check if pwsh is executable. In 7.3.0 I did `chmod +x pwsh`\r\n\r\nCome on, how would pwsh work otherwise? Everything is working fine, when I'm using PowerShell directly, it's just the shebang behavior, when running the script from non-pwsh shell, that is broken.\r\n\r\nYes, it is executable, I'm installing it using rpm/deb packages (depending on distro) which are not affected by the bug in tgz package.\r\n\r\nIt is really easy to replicate, Are you telling me, that it does work for you?\r\n\r\nI've tested it on multiple freshly installed distros (on WSL): fedoraremix, Ubuntu, Debian, Opensuse-Tumbleweed, and also my bare metal Fedora Linux installation, and the behavior is exactly the same everywhere.\r\nI've also checked the same script on existing WSL distributions still on PowerShell v7.2.7 and the shebang was working fine, and only after updating to v7.3.0 it stopped.\r\n\r\n",
      "created_at": "2022-11-10T07:31:12Z",
      "updated_at": "2022-11-10T08:01:29Z"
    },
    {
      "author": "237dmitry",
      "author_association": "NONE",
      "body": "> Come on, how would pwsh work otherwise?\r\n\r\nI deleted the post almost immediately, but you managed to read it. )) I was misled that in [powershell-7.3.0-linux-x64.tar.gz](https://github.com/PowerShell/PowerShell/releases/download/v7.3.0/powershell-7.3.0-linux-x64.tar.gz) pwsh is not executable.\r\n\r\nIn my environment shebang scripts work. `#!/usr/bin/pwsh -noprofile`",
      "created_at": "2022-11-10T08:25:56Z",
      "updated_at": "2022-11-10T08:37:55Z"
    },
    {
      "author": "TechnoRolo",
      "author_association": "NONE",
      "body": "We have exactly the same issue after an automatic upgrade yesterday from 7.2.7 to 7.3 in LINUX redhat - All PowerShell scripts stopped working with the \"The application to execute does not exist: '/XXX/pwsh.dll'.  where XXX is the location of the PS script .\r\n\r\nEverything looks as it did on 7.2.7 as far as I can see, it's just not interpreting the shebang anymore.  Enter pwsh and run the script and it works fine.",
      "created_at": "2022-11-10T10:06:58Z",
      "updated_at": "2022-11-10T10:07:22Z"
    },
    {
      "author": "szymonos",
      "author_association": "NONE",
      "body": "> > Come on, how would pwsh work otherwise?\n> \n> I deleted the post almost immediately, but you managed to read it. )) I was misled that in [powershell-7.3.0-linux-x64.tar.gz](https://github.com/PowerShell/PowerShell/releases/download/v7.3.0/powershell-7.3.0-linux-x64.tar.gz) pwsh is not executable.\n> \n> In my environment shebang scripts work. `#!/usr/bin/pwsh -noprofile`\n\nAre sure you're calling script from bash? Hard to believe, I've tested it on ~10 separate environments and result is always the same.",
      "created_at": "2022-11-10T11:01:09Z",
      "updated_at": "2022-11-10T11:01:09Z"
    },
    {
      "author": "237dmitry",
      "author_association": "NONE",
      "body": "> Are sure you're calling script from bash?\r\n\r\n![1](https://user-images.githubusercontent.com/78153320/201096102-1bc637a6-a088-46aa-bf56-8fc87c60606d.png)\r\n",
      "created_at": "2022-11-10T12:52:04Z",
      "updated_at": "2022-11-10T12:52:04Z"
    },
    {
      "author": "proutek",
      "author_association": "NONE",
      "body": "Same here on Ubuntu after upgrade. The script does not start using Shebang and reports missing pwsh.dll\r\nIt works when I start it with pwsh script.ps1",
      "created_at": "2022-11-10T12:53:50Z",
      "updated_at": "2022-11-10T12:55:18Z"
    },
    {
      "author": "rflor",
      "author_association": "NONE",
      "body": "Ubuntu 20.04 and Ubuntu 22.04, after upgrading to 7.3.0 via apt same error.\r\nFound a workaround:\r\n#!/usr/bin/env pwsh  as shebang \r\n\r\nIt's a common (ab)use of the env utility, it decouples the scripts from path prefix.\r\n",
      "created_at": "2022-11-10T14:20:15Z",
      "updated_at": "2022-11-10T14:20:15Z"
    },
    {
      "author": "TechnoRolo",
      "author_association": "NONE",
      "body": "> Ubuntu 20.04 and Ubuntu 22.04, after upgrading to 7.3.0 via apt same error. Found a workaround: #!/usr/bin/env pwsh as shebang\r\n> \r\n> It's a common (ab)use of the env utility, it decouples the scripts from path prefix.\r\n\r\nThanks you, this worked for me on Red Hat.  Just a pain to have to update all the PS scripts :(",
      "created_at": "2022-11-10T14:54:01Z",
      "updated_at": "2022-11-10T14:54:01Z"
    },
    {
      "author": "dmitriyse",
      "author_association": "NONE",
      "body": "This bug has been introduced long time ago somewhere in 7.3.0 preview.\r\n\r\nThe alternative workaround is to overwrite the startup file `/opt/microsoft/powershell/7/pwsh` from 7.2.7 version.",
      "created_at": "2022-11-11T03:16:02Z",
      "updated_at": "2022-11-11T03:16:02Z"
    },
    {
      "author": "dmitriyse",
      "author_association": "NONE",
      "body": "Common! This issue requires not a triage, it requires 7.3.1 fix right now.\r\nFew days after this ticket will be full of hate to PS.",
      "created_at": "2022-11-11T03:28:05Z",
      "updated_at": "2022-11-11T03:28:05Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Not to add to the pain, but, historically speaking, shebang-line support has received little attention, as the list of open bugs shows: https://github.com/PowerShell/PowerShell/issues?q=is%3Aissue+in%3Atitle+shebang+is%3Aopen\r\n\n\n<blockquote><img src=\"https://repository-images.githubusercontent.com/49609581/aad0ad80-cdec-11ea-8248-a37bc0571bfd\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/PowerShell/PowerShell\">Issues \u00b7 PowerShell/PowerShell</a></strong></div><div>PowerShell for every system! Contribute to PowerShell/PowerShell development by creating an account on GitHub.</div></blockquote>",
      "created_at": "2022-11-11T03:56:32Z",
      "updated_at": "2022-11-11T03:56:34Z"
    },
    {
      "author": "szymonos",
      "author_association": "NONE",
      "body": "> \r\n\r\nJust to give full solution, to call it with `-NoProfile` parameter, you need to add `-S/--split-string` parameter to env.\r\nWorking shebang would look like this:\r\n\r\n```sh\r\n#!/usr/bin/env -S pwsh -NoProfile\r\n```",
      "created_at": "2022-11-13T14:38:14Z",
      "updated_at": "2022-11-13T14:38:14Z"
    },
    {
      "author": "rhubarb-geek-nz",
      "author_association": "NONE",
      "body": "> Found a workaround: #!/usr/bin/env pwsh as shebang\r\n\r\nI recommend this approach for portable scripts, for example on macOS `pwsh` is `/usr/local/bin/pwsh` and the `#!/usr/bin/env` solution works with the path.\r\n",
      "created_at": "2022-11-13T21:35:42Z",
      "updated_at": "2022-11-13T21:35:42Z"
    }
  ],
  "created_at": "2022-11-09T21:57:30Z",
  "labels": [
    "Needs-Triage"
  ],
  "number": 18510,
  "state": "open",
  "title": "The application to execute does not exist : '/<script_path>/pwsh.dll'. When running script with shebang from bash with PS v7.3.0 installed",
  "updated_at": "2022-11-13T21:35:42Z"
}