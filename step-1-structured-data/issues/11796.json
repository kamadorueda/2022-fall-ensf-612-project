{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11796",
  "author": "TylerLeonhardt",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 and PowerShell 7+ issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n\r\n-->\r\n\r\n# Steps to reproduce\r\n\r\n1. Install 7.0.0-rc.**1** and vscode\r\n1. Set the following vscode setting: `\"terminal.integrated.shell.windows\": \"C:\\\\Program Files\\\\PowerShell\\\\7-preview\\\\pwsh.exe\",`\r\n1. hit `ctrl`+\\` (tilda) to open the terminal pane and verify via `$PSVersionTable` that PowerShell Preview is started (rc.1)\r\n1. Run the MSI for 7.0.0-rc.2\r\n1. when prompted, attempt to close the actively running pwsh processes\r\n\r\n# Expected behavior\r\n\r\nThe pwsh process in VS Code closes and the MSI continues to install rc.2 and succeeds.\r\n\r\n# Actual behavior\r\n\r\n![image](https://user-images.githubusercontent.com/2644648/73989574-1a181b00-48fb-11ea-8f4c-0101f158109c.png)\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\n$PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-rc.1\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-rc.1\r\nOS                             Microsoft Windows 10.0.18363\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\nAlso CC'ing @Tyriar in case he has any ideas..,\r\n\r\nI want to be clear: *This has nothing to do with the PowerShell extension*. That said, it does affect the Install PowerShell feature in the VS Code which downloads the MSI and runs it. We clean up the PowerShell Integrated Console before executing the MSI but we don't clean up other pwsh processes on the machine and I think that the MSI should be the one to handle that.",
  "closed_at": null,
  "comments": [
    {
      "author": "Tyriar",
      "author_association": "NONE",
      "body": "The problem is the MSI can't close the the pwsh processes? By hang do you mean the MSI app crashes?",
      "created_at": "2020-02-07T15:50:51Z",
      "updated_at": "2020-02-07T15:50:51Z"
    },
    {
      "author": "TylerLeonhardt",
      "author_association": "MEMBER",
      "body": "The behavior seems to be different in a couple places...\r\n\r\nIf I hit \"OK\" in the dialog above, it takes me to:\r\n\r\n![image](https://user-images.githubusercontent.com/2644648/74179180-ca369e00-4bf1-11ea-813e-eee82e31b87f.png)\r\n\r\nwhich I hit \"OK\" which takes me to the same screen shot above...\r\n\r\nAfter I hit OK on that, the installation seems to give up on trying to close the pwsh process in VS Code and it just completes the installation as if I had selected \"Do not close applications\".\r\n\r\n... I think another time I was doing this, it was taking too long so I hit \"Cancel\" in the main Installation window and that seemed to have caused the whole MSI app to hang.",
      "created_at": "2020-02-10T18:43:17Z",
      "updated_at": "2020-02-10T18:43:17Z"
    },
    {
      "author": "TylerLeonhardt",
      "author_association": "MEMBER",
      "body": "I think the takeaway for you @Tyriar is that I don't know why the MSI can't close the pwsh inside of VS Code but it probably should be allowed to if possible.",
      "created_at": "2020-02-10T18:44:13Z",
      "updated_at": "2020-02-10T18:44:13Z"
    },
    {
      "author": "Tyriar",
      "author_association": "NONE",
      "body": "@TylerLeonhardt that gist is about this right? Can you link it?",
      "created_at": "2020-02-21T17:44:47Z",
      "updated_at": "2020-02-21T17:44:47Z"
    },
    {
      "author": "TylerLeonhardt",
      "author_association": "MEMBER",
      "body": "It's related for sure. Here's the gist: https://gist.github.com/TylerLeonhardt/7deb5f39877a48ebb41a2f9b208cce65\n\n<blockquote><img src=\"https://github.githubassets.com/images/modules/gists/gist-og-image.png\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicon.ico\" height=\"14\"> Gist</div><div><strong><a href=\"https://gist.github.com/TylerLeonhardt/7deb5f39877a48ebb41a2f9b208cce65\">Works by running `node repro.js` but doesn't work in a VS Code extension</a></strong></div><div>Works by running `node repro.js` but doesn't work in a VS Code extension - repro.js</div></blockquote>",
      "created_at": "2020-02-21T20:33:58Z",
      "updated_at": "2020-02-21T20:34:00Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "What do we track here if external app can not terminate a process (pwsh)?",
      "created_at": "2021-01-15T19:37:39Z",
      "updated_at": "2021-01-15T19:37:39Z"
    }
  ],
  "created_at": "2020-02-07T00:13:09Z",
  "number": 11796,
  "state": "open",
  "title": "MSI hangs trying to close pwsh process in VS Code",
  "updated_at": "2021-01-15T19:37:39Z"
}