{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15096",
  "author": "MatejKafka",
  "body": "## Steps to reproduce\r\n\r\nscript.ps1:\r\n```powershell\r\necho $PSCommandPath\r\necho $PSScriptRoot\r\n```\r\n\r\nRun this in terminal:\r\n```powershell\r\nStart-Job -FilePath .\\script.ps1 | Receive-Job -Wait\r\n```\r\n\r\n## Expected behavior\r\n\r\n```none\r\n<path-to-script.ps1>\r\n<path-to-scrpt.ps1-dir>\r\n```\r\n\r\n## Actual behavior\r\n\r\n```none\r\n\r\n\r\n```\r\n(2 empty lines)\r\n## Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nPSVersion                      7.2.0-preview.3\r\nPSEdition                      Core\r\nGitCommitId                    7.2.0-preview.3\r\nOS                             Microsoft Windows 10.0.19042\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2021-03-28T12:00:08Z",
  "comments": [
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "The explanation for the current behavior (which is definitely debatable) is implied by this line [from the docs](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/start-job):\r\n\r\n> When you use this parameter, PowerShell converts the contents of the specified script file to a script block and runs the script block as a background job.\r\n\r\nThat is, the background job doesn't execute the script _file_ given, but _its contents_, as a script block - and such a script block has no information about where it ultimately came from.\r\n\r\nWhile this behavior makes perfect sense in the context of _remoting_ (with `Invoke-Command -ComputerName $someComputer -FilePath ...`), it arguably makes better sense to let a background job - which by definition runs on  the _same machine_ and can therefore access the specified _file_  - execute the script _file_ directly, so as not to lose invocation context.\r\n\r\n",
      "created_at": "2021-03-24T21:58:46Z",
      "updated_at": "2021-03-24T22:03:05Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2021-03-28T12:00:07Z",
      "updated_at": "2021-03-28T12:00:07Z"
    },
    {
      "author": "MatejKafka",
      "author_association": "NONE",
      "body": "Don't think this should be closed, as the issue is not really resolved. @iSazonov ",
      "created_at": "2021-03-28T12:04:43Z",
      "updated_at": "2021-03-28T12:04:43Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "The issue is not blocked and anyone can continue to discuss. \r\nThis is a behavior \"by-design\" and it needs huge reason to change it. This kind of anonymity can be beneficial or even security-related.\r\n",
      "created_at": "2021-03-28T12:42:04Z",
      "updated_at": "2021-03-28T12:42:04Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "I don't think security concerns are in the picture here, and my _guess_ is that this was done more for the convenience of sharing an implementation with / behavioral symmetry with `Invoke-Command -FilePath`\r\n\r\nThat said, @MatejKafka, the problem is easily worked around by using a script block instead:\r\n\r\n```powershell\r\nStart-Job { .\\script.ps1 } | Receive-Job -Wait\r\n```\r\n\r\nNote that in Windows PowerShell this won't necessarily work, because background jobs there don't inherit the caller's location, but in PowerShell Core that isn't a problem anymore.",
      "created_at": "2021-03-28T15:27:04Z",
      "updated_at": "2021-03-28T15:27:04Z"
    }
  ],
  "created_at": "2021-03-24T17:02:43Z",
  "number": 15096,
  "state": "closed",
  "title": "`$PSScriptRoot` and `$PSCommandPath` are not populated with `Start-Job -FilePath <filepath>`",
  "updated_at": "2021-03-28T15:27:05Z"
}