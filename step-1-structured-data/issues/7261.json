{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7261",
  "author": "mklement0",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\n- Windows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nIf it is a bug report:\r\n- make sure you are able to repro it on the latest released version. \r\nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n- Fill out the following repro template:\r\n\r\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\r\n-->\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\n    # Accessing a nonexistent property on a collection of *custom objects*\r\n    # returns a $null for each element, i.e.: @( $null, $null ) in this case:\r\n    ([pscustomobject] @{foo=1}, [pscustomobject] @{foo=2}).Bogus.GetType().Name\r\n\r\n    # By contrast, *other types* seem to evaluate to a $null *scalar*,\r\n    # as evidenced by the .GetType() call failing:\r\n    ($PSVersionTable, $PSVersionTable).Bogus.GetType().Name\r\n\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```none\r\nObject[]\r\nObject[]\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n```none\r\nObject[]\r\nYou cannot call a method on a null-valued expression.\r\n```\r\n\r\nArguably, it is the behavior with custom objects (returning an _array_ of `$null` values) that is consistent with member enumeration: whatever the result of accessing the specified property on the collection element returns is collected in an array.\r\n\r\nOn the flip side, the fact that a 2+-element array of `$null`s is truthy may be surprising\r\n(e.g., `[bool] ($null, $null)` yields `$True`).\r\n\r\n\r\nEnvironment data\r\n----------------\r\n\r\n```powershell\r\nPowerShell Core v6.1.0-preview.3\r\n```\r\n",
  "closed_at": null,
  "comments": [],
  "created_at": "2018-07-11T02:11:53Z",
  "number": 7261,
  "state": "open",
  "title": "Member enumeration with a nonexistent property works differently with custom objects than with other types",
  "updated_at": "2018-07-12T12:09:48Z"
}