{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9386",
  "author": "fMichaleczek",
  "body": "NugetPackage have sometimes 2 distincts dll for Windows/Unix plateform.\r\nIt's not possible to determine which OS is running from a PowerShell module manifest file.\r\nThis issue should be resolved in  early PS 7.0 cycle because Net.Core 3.0 will add more scenarios with cross plateforms.\r\n\r\n# Steps to reproduce\r\n\r\nAdd a condition with variable IsWindows into the property RequiredAssemblies inside a PowerShell module manifest file.\r\n\r\n```powershell\r\nRequiredAssemblies =  @(\r\n    if ( $IsWindows ) { \r\n        '.\\bin\\LibName\\runtimes\\win\\lib\\netstandard2.0\\LibName.dll' \r\n    }\r\n    else { \r\n       '.\\bin\\LibName\\runtimes\\unix\\lib\\netstandard2.0\\LibName.dll' \r\n    }\r\n)\r\n```\r\n\r\n# Expected behavior\r\n\r\nPowerShell module manifest file is loaded.\r\n\r\n# Actual behavior\r\n\r\nPowerShell Error  \r\n```none\r\nimport-module : The module manifest 'ModuleName.psd1' could not be processed because it is not a valid PowerShell module manifest file. Remove the elements that are not permitted: At ModuleName.psd1:50 char:10\r\n+     if ( $IsWindows ) {\r\n+          ~~~~~~~~~~\r\nA variable that cannot be referenced in restricted language mode or a Data section is being referenced. Variables that can be referenced include the following: $PSCulture, $PSUICulture, $true, $false, $null, $PSScriptRoot, $PSEdition, $EnabledExperimentalFeatures.\r\n```\r\n\r\n# Environment data\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.2.0\r\nPSEdition                      Core\r\nGitCommitId                    6.2.0\r\nOS                             Microsoft Windows 10.0.17134\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2019-04-17T05:15:19Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Interesting idea... I hit a similar issue when trying to use SkiaSharp. I ended up solving the issue in a PSM1: https://github.com/vexx32/PSWordCloud/blob/master/Module/PSWordCloud.psm1",
      "created_at": "2019-04-17T03:50:51Z",
      "updated_at": "2019-04-17T03:50:51Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@fmichaleczek Thanks for your suggestion.\r\n It is dup #5541 Please discuss/vote there to add in 7.0 milestone.",
      "created_at": "2019-04-17T05:15:19Z",
      "updated_at": "2019-04-17T05:16:06Z"
    }
  ],
  "created_at": "2019-04-17T03:07:23Z",
  "labels": [
    "Resolution-Duplicate",
    "Issue-Question"
  ],
  "number": 9386,
  "state": "closed",
  "title": "Allow automatic variable Is* inside PowerShell module manifest file",
  "updated_at": "2019-04-17T05:16:06Z"
}