{
  "_url": "https://github.com/PowerShell/PowerShell/issues/8789",
  "author": "powercode",
  "body": "Adding a new table view, `childrenWithHardlink`, that has the same behavior as `children` view had before this PR.\r\n\r\nThe `children` view now uses the modified `ModeWithoutHardlink` property that doesn't check for hardlinks when setting the `l` letter of `Mode` column. \r\n\r\nThe `Mode` property keeps it's existing behavior, so this change should not be breaking.\r\n\r\n\r\n\r\n## PR Summary\r\n\r\nhttps://github.com/PowerShell/PowerShell/issues/8051\r\n\r\nSignificant speedup for default filesystem output\r\n```PowerShell\r\n$files = gci -Recurse c:\\windows -ea:0\r\n$files | ft | out-null\r\n$files | ft -view childrenWithHardlink  | out-null\r\n```\r\nview | time | speedup\r\n-- | -- | --\r\nchildrenWithHardlink | 3m22s | 1x\r\n children | 7.6s | 26x\r\n\r\n## Formatting result\r\n\r\n### Output before\r\n```output\r\nPS> gci\r\n\r\n    Directory: D:\\repos\\PowerShell\\symlinks\r\n\r\n\r\nMode                LastWriteTime         Length Name\r\n----                -------------         ------ ----\r\nd-----       2019-02-03     15:37                dir\r\nd----l       2019-02-03     15:38                symdir\r\nd----l       2019-02-03     15:39                symsubdir\r\n-a----       2019-02-03     15:38              3 file\r\n-a---l       2019-02-03     15:37              3 hardlink\r\n-a---l       2019-02-03     15:38              0 symfile1\r\n```\r\n### Output after\r\n```output\r\nPS> gci\r\n\r\n    Directory: D:\\repos\\PowerShell\\symlinks\r\n\r\nMode                LastWriteTime         Length Name\r\n----                -------------         ------ ----\r\nd----         2019-02-03    15:37                dir\r\nl----         2019-02-03    15:38                symdir -> D:\\repos\\PowerShell\\symlinks\\dir\r\nl----         2019-02-03    15:39                symsubdir -> D:\\repos\\PowerShell\\symlinks\\dir\\subdir\\\r\n-a---         2019-02-03    15:38              3 file\r\n-a---         2019-02-03    15:37              3 hardlink\r\nla---         2019-02-03    15:38              0 symfile1 -> D:\\repos\\PowerShell\\file\r\n\r\nPS> gci | ft -view childrenWithHardlink\r\n\r\n    Directory: D:\\repos\\PowerShell\\symlinks\r\n\r\nMode                LastWriteTime         Length Name\r\n----                -------------         ------ ----\r\nd----         2019-02-03    15:37                dir\r\nl----         2019-02-03    15:38                symdir -> D:\\repos\\PowerShell\\symlinks\\dir\r\nl----         2019-02-03    15:39                symsubdir -> D:\\repos\\PowerShell\\symlinks\\dir\\subdir\\\r\n-a---         2019-02-03    15:38              3 file\r\nla---         2019-02-03    15:37              3 hardlink\r\nla---         2019-02-03    15:38              0 symfile1 -> D:\\repos\\PowerShell\\file\r\n```\r\nproduces the old output.\r\n## PR Context  \r\n\r\n<!-- Provide a little reasoning as to why this Pull Request helps and why you have opened it. -->\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.  \r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**  \r\n    - [x] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [x] Issue filed: https://github.com/MicrosoftDocs/PowerShell-Docs/issues/3665\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n        - [ ] [Add `[feature]` to your commit messages if the change is significant or affects feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\r\n",
  "closed_at": "2019-03-12T22:49:17Z",
  "comments": [
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@powercode The change looks good in general. Could you also put a before and after of how the output of `Get-ChildItem` looks like for future reference in the PR description.",
      "created_at": "2019-01-30T17:39:42Z",
      "updated_at": "2019-01-30T17:39:42Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@powercode Could also have a look at the CodeFactor issue, some on them are about documentation and formating. Would be nice to get those fixed.",
      "created_at": "2019-01-30T17:51:42Z",
      "updated_at": "2019-01-30T17:51:42Z"
    },
    {
      "author": "JamesWTruher",
      "author_association": "MEMBER",
      "body": "\r\nsymlinks will still appear in the default view, right?\r\nj",
      "created_at": "2019-01-30T23:11:47Z",
      "updated_at": "2019-01-30T23:11:47Z"
    },
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "@JamesWTruher Yes, symlinks appear as an `l`. ",
      "created_at": "2019-01-30T23:36:32Z",
      "updated_at": "2019-01-31T08:21:49Z"
    },
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "The build errors seem unrelated to my change. Is there a way to trigger a build without a new commit?",
      "created_at": "2019-01-31T08:24:49Z",
      "updated_at": "2019-01-31T08:24:49Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@powercode Restarted the CI.",
      "created_at": "2019-01-31T17:53:26Z",
      "updated_at": "2019-01-31T17:53:26Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@powercode Please respond to the committee recommendation about re-using the `d` field for links instead of adding one at the end.",
      "created_at": "2019-01-31T22:57:21Z",
      "updated_at": "2019-01-31T22:57:21Z"
    },
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "@adityapatwardhan I'm on it :)\r\n\r\nIs this what we want, or should I skip the Link resolution?\r\n\r\n```output\r\n    Directory: D:\\repos\\PowerShell\\symlinktest\r\n\r\nMode                LastWriteTime         Length Name\r\n----                -------------         ------ ----\r\nd----         2019-02-01    00:22                dir\r\nl----         2019-02-01    00:23                symdir -> D:\\repos\\PowerShell\\symlinktest\\dir\\subdir\\\r\n-a---         2019-02-01    00:20              3 file\r\n\r\n    Directory: D:\\repos\\PowerShell\\symlinktest\\dir\r\n\r\nMode                LastWriteTime         Length Name\r\n----                -------------         ------ ----\r\nd----         2019-02-01    00:22                subdir\r\n-a---         2019-02-01    00:22              3 subfile\r\nla---         2019-02-01    00:21              0 symfile1 -> D:\\repos\\PowerShell\\symlinktest\\file\r\n```",
      "created_at": "2019-01-31T23:25:28Z",
      "updated_at": "2019-01-31T23:29:03Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@powercode yes, that's perfect!",
      "created_at": "2019-01-31T23:45:34Z",
      "updated_at": "2019-01-31T23:45:46Z"
    },
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT I'm playing now with moving AddScriptBlockColumn into hidden code properties. Seems to be a bit faster to.\r\n\r\nAny reason not to do that? The Name string needed it to get to the internal methods for Link management.",
      "created_at": "2019-01-31T23:48:15Z",
      "updated_at": "2019-01-31T23:48:15Z"
    },
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "A bit of feature creep here :) Feel free to pick the commits you want!",
      "created_at": "2019-02-01T00:34:25Z",
      "updated_at": "2019-02-01T00:34:25Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@powercode Please have a look at the test failure",
      "created_at": "2019-02-01T01:45:40Z",
      "updated_at": "2019-02-01T01:45:40Z"
    },
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "I consider the remaining CodeFactor issues to be noise, and the CI static analysis seem to complain about spelling in MD files.",
      "created_at": "2019-02-01T23:50:58Z",
      "updated_at": "2019-02-01T23:50:58Z"
    },
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "This is what the default view and the `childrenWithHardlink`  view looks like:\r\n\r\n```output\r\nPS> gci\r\n    Directory: D:\\repos\\PowerShell\\symlinks\r\n\r\nMode                LastWriteTime         Length Name\r\n----                -------------         ------ ----\r\nd----         2019-02-03    15:37                dir\r\nl----         2019-02-03    15:38                symdir -> D:\\repos\\PowerShell\\symlinks\\dir\r\nl----         2019-02-03    15:39                symsubdir -> D:\\repos\\PowerShell\\symlinks\\dir\\subdir\\\r\n-a---         2019-02-03    15:38              3 file\r\n-a---         2019-02-03    15:37              3 hardlink\r\nla---         2019-02-03    15:38              0 symfile1 -> D:\\repos\\PowerShell\\file\r\n```\r\n```output\r\nPS> gci | ft -view childrenWithHardlink\r\n\r\n    Directory: D:\\repos\\PowerShell\\symlinks\r\n\r\nMode                LastWriteTime         Length Name\r\n----                -------------         ------ ----\r\nd----         2019-02-03    15:37                dir\r\nl----         2019-02-03    15:38                symdir -> D:\\repos\\PowerShell\\symlinks\\dir\r\nl----         2019-02-03    15:39                symsubdir -> D:\\repos\\PowerShell\\symlinks\\dir\\subdir\\\r\n-a---         2019-02-03    15:38              3 file\r\nla---         2019-02-03    15:37              3 hardlink\r\nla---         2019-02-03    15:38              0 symfile1 -> D:\\repos\\PowerShell\\file\r\n```\r\n",
      "created_at": "2019-02-03T15:54:49Z",
      "updated_at": "2019-02-03T15:54:49Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@SteveL-MSFT Can you update your review?\r\n@iSazonov are your comments blocking?",
      "created_at": "2019-02-04T22:42:40Z",
      "updated_at": "2019-02-04T22:42:40Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@adityapatwardhan My metering shows 38% perf win in the local method. But we can not block and merge \"as is\" then I would push new PR.",
      "created_at": "2019-02-05T03:20:17Z",
      "updated_at": "2019-02-05T03:20:17Z"
    },
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "I pushed another commit that removes the discussed string allocations in 95+% of the cases. At the expense of clarity ;)",
      "created_at": "2019-02-05T08:16:58Z",
      "updated_at": "2019-02-05T08:16:58Z"
    },
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "The CI failure on windows seems like  infrastructure related - not caused by me.",
      "created_at": "2019-02-05T08:55:57Z",
      "updated_at": "2019-02-05T08:55:57Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@powercode Thanks for great contribution! \r\nI restarted CI-Windows.",
      "created_at": "2019-02-05T14:03:26Z",
      "updated_at": "2019-02-05T14:03:26Z"
    },
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "Sure\r\n",
      "created_at": "2019-02-05T21:08:26Z",
      "updated_at": "2019-02-05T21:08:26Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I wonder why xUnit tests? Pester will be more apropriate and simple for support.",
      "created_at": "2019-02-06T03:52:44Z",
      "updated_at": "2019-02-06T03:52:44Z"
    },
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT \r\nI found a bug in the `PowerShellPolicyFixture` in test_PSConfiguration.cs, where there is a line\r\n```csharp\r\nTranscription = new Transcription() { \r\n  EnableInvocationHeader = true, \r\n  EnableTranscripting = true, \r\n  OutputDirectory = \"c:\\tmp\" \r\n},\r\n```\r\n\r\nThis caused the OutputDirectory to be set to \"c:\\<tab>mp\\\", causing intermittent failures, depending on if some other tests had set up transcription correctly before.\r\n\r\nI'm fixing this, so that my tests passes :)",
      "created_at": "2019-02-06T12:43:09Z",
      "updated_at": "2019-02-06T12:43:09Z"
    },
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov Why would they be easier to support? Having a solution with build/debug/test in an integrated IDE is much more productive, at least for me. I can see the value with Pester when testing end to end scenarios, but the xUnit tests are much nicer when developing or debugging.",
      "created_at": "2019-02-06T12:47:57Z",
      "updated_at": "2019-02-06T12:47:57Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> Why would they be easier to support?\r\n\r\nWe have some Pester tests for formatting and the split would add a complicity. I created an Issue for adding xUnit tests but for _public API signatures_ to ensure that binary module developers don't get regressions. Formatting is not a contract and we don't need strict control.",
      "created_at": "2019-02-06T13:08:18Z",
      "updated_at": "2019-02-06T13:11:37Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@powercode Can you also open an issue in [PowerShell-Docs](https://github.com/MicrosoftDocs/PowerShell-Docs) repo as per the template?",
      "created_at": "2019-02-06T21:09:41Z",
      "updated_at": "2019-02-06T21:09:41Z"
    },
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "@adityapatwardhan Docs issue filed, and PR description updated.",
      "created_at": "2019-02-06T23:38:20Z",
      "updated_at": "2019-02-06T23:38:20Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT @adityapatwardhan We have a lot of format tests on PowerShell. Adding _xUnit_ format tests to creates confusion. Now it is not at all clear where to look for necessary tests, and even less where to place new ones in follow PRs.",
      "created_at": "2019-02-07T12:58:07Z",
      "updated_at": "2019-02-07T12:58:07Z"
    },
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "On my end, I'd like more xUnit tests. Much quicker when developing, checked by the compiler, with access to internals, runs quicker, and often has higher fidelity. \r\n\r\nThe possibility to directedly debug a test in the IDE is also really useful. ",
      "created_at": "2019-02-07T15:41:45Z",
      "updated_at": "2019-02-07T15:43:02Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@powercode I agree that more xUnit tests is generally good. Can these tests be done in Pester?\r\n\r\nAccording to the [testing guidline](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#xunit), we prefer Pester tests over xUnit. xUnit is recommended to be used when expressing the test in Pester is very obtuse and if you are testing an API. ",
      "created_at": "2019-02-07T18:59:12Z",
      "updated_at": "2019-02-07T18:59:12Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "We have #8400 to summarize xUnit gaps. Feel free to feedback there.",
      "created_at": "2019-02-08T04:48:41Z",
      "updated_at": "2019-03-18T12:41:15Z"
    },
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "@adityapatwardhan Is the aspect of the dev experience not relevant?\r\n\r\nBecause this is what make the big difference to me:\r\n![image](https://user-images.githubusercontent.com/3505151/52493820-b4506080-2bcc-11e9-86ab-b7ed5f4938ac.png)\r\n",
      "created_at": "2019-02-08T17:11:11Z",
      "updated_at": "2019-02-08T17:11:11Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@powercode \t\r\nI think we would prefer to improve the dev experience for Pester.\r\n\r\nThere are two purposes of use Pester where ever we can:\r\n\r\n1. Consistency\r\n1. Pester is written in PowerShell so we would like the majority of our tests written there to increase our coverage\r\n\r\nThis VS extension gives a similar experience for pester tests (although many of our tests make assumptions that won't work with it)\r\nhttps://marketplace.visualstudio.com/items?itemName=AdamRDriscoll.PowerShellToolsforVisualStudio2017-18561\r\n",
      "created_at": "2019-02-11T22:42:45Z",
      "updated_at": "2019-02-11T22:42:45Z"
    },
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "@TravisEz13 That's the thing - since they tests are written in PowerShell, they exercise a lot of code that is not under test. To me, that is _not_ a good thing. Not to mention refactorings etc.\r\n\r\nOh, well - there I was, all happy that we had XUnit tests...",
      "created_at": "2019-02-11T23:01:25Z",
      "updated_at": "2019-02-11T23:01:25Z"
    },
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "So, what happens here?",
      "created_at": "2019-02-26T23:52:04Z",
      "updated_at": "2019-02-26T23:52:04Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@powercode We really appreciate the work you have done. This PR is immensely important for PowerShell in regards to performance. \r\n\r\nAfter discussing this with @PowerShell/powershell-maintainers, we decided we will be contributing to this PR to convert the xUnit tests to Pester and then merge this.",
      "created_at": "2019-02-27T00:41:59Z",
      "updated_at": "2019-02-27T00:41:59Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@powercode I have pushed changes to convert the new xUnit tests to Pester. I also rebased to master to resolve some merge conflicts. Please have a look if I have missed something. And thank you for your patience.",
      "created_at": "2019-03-12T01:04:21Z",
      "updated_at": "2019-03-12T01:04:21Z"
    },
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "I adressed @daxian-dbw's feedback. \r\nThe other changes LGTM.",
      "created_at": "2019-03-12T07:10:41Z",
      "updated_at": "2019-03-12T07:10:41Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@daxian-dbw Can you update your review?",
      "created_at": "2019-03-12T17:40:38Z",
      "updated_at": "2019-03-12T17:40:38Z"
    },
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw You won the race!\r\nWith several seconds :)",
      "created_at": "2019-03-12T22:24:42Z",
      "updated_at": "2019-03-12T22:24:42Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@powercode Thanks for your contribution and patience!",
      "created_at": "2019-03-12T22:50:22Z",
      "updated_at": "2019-03-12T22:50:22Z"
    },
    {
      "author": "lukeb1961",
      "author_association": "NONE",
      "body": "How will a normal person using Powershell, know that these FT views exist?",
      "created_at": "2020-01-12T23:04:40Z",
      "updated_at": "2020-01-12T23:04:40Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@lukeb1961 Please open a feature request (for tab completion) and/or doc isuue.",
      "created_at": "2020-01-13T03:07:30Z",
      "updated_at": "2020-01-13T03:07:30Z"
    }
  ],
  "created_at": "2019-01-30T00:33:13Z",
  "number": 8789,
  "state": "closed",
  "title": "Removing Hardlink from Mode property in default file system format",
  "updated_at": "2020-01-13T03:07:30Z"
}