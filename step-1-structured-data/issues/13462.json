{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13462",
  "author": "LAltinell",
  "body": "Trouble when trying to Tokenize a script containing a Switch-statement with a Default case in Powershell 7.1.0-preview.5. This works as expected in Powershell 7.0.3 (stable). If one does comment-out the default case, it works as expected. This has been reproduced on more than one computer.\r\n\r\n## Steps to reproduce\r\nCreate a file containing a simple function that has a switch-statement with a default case (see below). Save that file. Then try to tokenize that file (also see below) from a console running Powershell 7.1.0-preview.5.\r\n\r\n```powershell\r\n# Save this as a file called 'TEST.ps1'\r\nFunction Test {\r\n    Param (\r\n        $String\r\n    )\r\n\r\n    Switch ($String) {\r\n        \"test\" {\r\n            \"sfdsf\"\r\n        }\r\n\r\n        \"test2\" {\r\n            \"sfdsf\"\r\n        }\r\n\r\n        default {\r\n            \"sdfsdf\"\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n```powershell\r\n# From a Powershell 7.1.0-preview.5 prompt execute the following:\r\n$scripts = Get-ChildItem -Path \"C:\\__TEMP\\TEST.ps1\"\r\n\r\nForeach ($file in $scripts) {\r\n    $contents = Get-Content -Path $file.fullname -ErrorAction Stop\r\n    $errors = $null\r\n    $null = [System.Management.Automation.PSParser]::Tokenize($contents, [ref]$errors)\r\n    $errors.Count -eq 0\r\n}\r\n```\r\n\r\n## Expected behavior\r\n\r\n```none\r\nTrue\r\n```\r\n\r\n## Actual behavior\r\n\r\n```powershell\r\nMethodInvocationException:\r\nLine |\r\n   4 |      $null = [System.Management.Automation.PSParser]::Tokenize($conten \u2026\r\n     |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n     | Exception calling \"Tokenize\" with \"2\" argument(s): \"Index was outside the bounds of the array.\"\r\nTrue\r\n```\r\n\r\n## Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.0-preview.5\r\nPSEdition                      Core\r\nGitCommitId                    7.1.0-preview.5\r\nOS                             Microsoft Windows 10.0.19041\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u00d4\u00c7\u00aa}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n```\r\n",
  "closed_at": "2020-10-14T18:02:55Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "PSParser is legacy and I'm not sure it's actually supported in a meaningful way.\r\n\r\nInstead, you can use:\r\n\r\n```ps1\r\n$tokens = $parseErrors = $null\r\n$ast = [System.Management.Automation.Language.Parser]::ParseInput($script, [ref]$tokens, [ref]$parseErrors)\r\n```\r\n\r\nMy guess is the PSParser code path was probably broken with #10487 cc @SteveL-MSFT @rjmholt not sure PSParser is really supported / what would need to be done to \"fix\" it following that change, or whether it's worth looking into as there are fully functional and supported alternatives available.",
      "created_at": "2020-08-17T11:24:02Z",
      "updated_at": "2020-08-17T11:24:02Z"
    },
    {
      "author": "LAltinell",
      "author_association": "NONE",
      "body": "Thank you for your prompt reply!\r\n\r\nPerfect, that works for me. Hopefully this will help someone else as well. ",
      "created_at": "2020-08-17T12:01:07Z",
      "updated_at": "2020-08-17T12:01:07Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "This sounds like something we should still fix though -- the `PSParser` API needs to be maintained for broad module compatibility",
      "created_at": "2020-08-17T18:26:08Z",
      "updated_at": "2020-08-17T18:26:08Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "Full stack trace:\r\n\r\n```\r\n\r\nException             :\r\n    Type           : System.Management.Automation.MethodInvocationException\r\n    ErrorRecord    :\r\n        Exception             :\r\n            Type    : System.Management.Automation.ParentContainsErrorRecordException\r\n            Message : Exception calling \"Tokenize\" with \"2\" argument(s): \"Index was outside the\r\nbounds of the array.\"\r\n            HResult : -2146233087\r\n        CategoryInfo          : NotSpecified: (:) [], ParentContainsErrorRecordException\r\n        FullyQualifiedErrorId : IndexOutOfRangeException\r\n        InvocationInfo        :\r\n            ScriptLineNumber : 1\r\n            OffsetInLine     : 1\r\n            HistoryId        : -1\r\n            Line             : [System.Management.Automation.PSParser]::Tokenize($s, [ref]$errs)\r\n            PositionMessage  : At line:1 char:1\r\n                               + [System.Management.Automation.PSParser]::Tokenize($s, [ref]$errs)\r\n                               + ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n            CommandOrigin    : Internal\r\n        ScriptStackTrace      : at <ScriptBlock>, <No file>: line 1\r\n    TargetSite     :\r\n        Name          : ConvertToMethodInvocationException\r\n        DeclaringType : System.Management.Automation.ExceptionHandlingOps,\r\nSystem.Management.Automation, Version=7.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\r\n        MemberType    : Method\r\n        Module        : System.Management.Automation.dll\r\n    StackTrace     :\r\n   at System.Management.Automation.ExceptionHandlingOps.ConvertToMethodInvocationException(Exception\r\nexception, Type typeToThrow, String methodName, Int32 numArgs, MemberInfo memberInfo)\r\n   at CallSite.Target(Closure , CallSite , Type , Object , PSReference )\r\n   at System.Dynamic.UpdateDelegates.UpdateAndExecute3[T0,T1,T2,TRet](CallSite site, T0 arg0, T1\r\narg1, T2 arg2)\r\n   at System.Management.Automation.Interpreter.DynamicInstruction`4.Run(InterpretedFrame frame)\r\n   at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.Run(InterpretedFrame\r\nframe)\r\n    Message        : Exception calling \"Tokenize\" with \"2\" argument(s): \"Index was outside the\r\nbounds of the array.\"\r\n    Data           : System.Collections.ListDictionaryInternal\r\n    InnerException :\r\n        Type       : System.IndexOutOfRangeException\r\n        TargetSite :\r\n            Name          : GetPSTokenType\r\n            DeclaringType : System.Management.Automation.PSToken\r\n            MemberType    : Method\r\n            Module        : System.Management.Automation.dll\r\n        StackTrace :\r\n   at System.Management.Automation.PSToken.GetPSTokenType(Token token)\r\n   at System.Management.Automation.PSToken..ctor(Token token)\r\n   at System.Management.Automation.PSParser.get_Tokens()\r\n   at System.Management.Automation.PSParser.Tokenize(String script, Collection`1& errors)\r\n   at CallSite.Target(Closure , CallSite , Type , Object , PSReference )\r\n        Message    : Index was outside the bounds of the array.\r\n        Source     : System.Management.Automation\r\n        HResult    : -2146233080\r\n    Source         : System.Management.Automation\r\n    HResult        : -2146233087\r\nCategoryInfo          : NotSpecified: (:) [], MethodInvocationException\r\nFullyQualifiedErrorId : IndexOutOfRangeException\r\nInvocationInfo        :\r\n    ScriptLineNumber : 1\r\n    OffsetInLine     : 1\r\n    HistoryId        : -1\r\n    Line             : [System.Management.Automation.PSParser]::Tokenize($s, [ref]$errs)\r\n    PositionMessage  : At line:1 char:1\r\n                       + [System.Management.Automation.PSParser]::Tokenize($s, [ref]$errs)\r\n                       + ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    CommandOrigin    : Internal\r\nScriptStackTrace      : at <ScriptBlock>, <No file>: line 1\r\n```",
      "created_at": "2020-08-18T17:02:39Z",
      "updated_at": "2020-08-18T17:02:39Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "The problem is that this mapping hasn't been maintained:\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/4b9b0788ed28ea6d463ce857d1ed81bd4a977a59/src/System.Management.Automation/engine/lang/interface/PSToken.cs#L110-L307\r\n\r\nThat's ostensibly easy to fix, but:\r\n\r\n- We need testing for it\r\n- We need to work out what else might be missing. I notice for example that `base` doesn't seem to be in there\r\n- There may be tokens that we could return but we can't for compatibility reasons -- something I'm not sure how to handle (haven't thought about this properly). For example, how should a caller built to handle PS v3 code deal with the `class` keyword?",
      "created_at": "2020-08-18T17:21:06Z",
      "updated_at": "2020-08-18T17:22:13Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "/cc @daxian-dbw ",
      "created_at": "2020-08-18T17:22:26Z",
      "updated_at": "2020-08-18T17:22:26Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@rjmholt Is this specific regression caused by https://github.com/PowerShell/PowerShell/pull/10487?",
      "created_at": "2020-08-18T18:07:17Z",
      "updated_at": "2020-08-18T18:07:17Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "> @rjmholt Is this specific regression caused by #10487?\r\n\r\nI believe so",
      "created_at": "2020-08-18T18:08:08Z",
      "updated_at": "2020-08-18T18:08:08Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "`base` seems to be working fine:\r\n```\r\nPS:162> $es = $null; [System.Management.Automation.PSParser]::Tokenize(\"class foo { foo() : base() }\", [ref]$es)\r\n...\r\nContent     : base\r\nType        : Unknown\r\nStart       : 20\r\nLength      : 4\r\nStartLine   : 1\r\nStartColumn : 21\r\nEndLine     : 1\r\nEndColumn   : 25\r\n...\r\n```\r\n[Update] I took a look at the code, and the keyword `base` works just by accident.\r\n",
      "created_at": "2020-08-18T18:13:33Z",
      "updated_at": "2020-08-18T18:52:52Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "> Type        : Unknown\r\n\r\nThat looks like this:\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/4b9b0788ed28ea6d463ce857d1ed81bd4a977a59/src/System.Management.Automation/engine/lang/interface/PSToken.cs#L306",
      "created_at": "2020-08-18T18:46:16Z",
      "updated_at": "2020-08-18T18:46:16Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Yeah. Let's first fix this regression by simply updating `s_tokenKindMapping`. And also open a new issue to discuss how to deal with `PSParser` in the long term to keep it up-to-date.",
      "created_at": "2020-08-18T18:56:13Z",
      "updated_at": "2020-08-18T18:56:13Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:This issue was addressed in #13779, which has now been successfully released as `v7.1.0-rc.2`.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.1.0-rc.2)\n",
      "created_at": "2020-10-21T19:08:41Z",
      "updated_at": "2020-10-21T19:08:41Z"
    }
  ],
  "created_at": "2020-08-17T11:13:17Z",
  "number": 13462,
  "state": "closed",
  "title": "PSParser Tokenize with Switch Default fails",
  "updated_at": "2021-03-02T23:06:23Z"
}