{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12809",
  "author": "cpmcgrath",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 and PowerShell 7+ issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6).\r\n\r\n-->\r\nWhen working with local drives I can enter \\\\\\\\ in a path and powershell understands that I really just meant 1:\r\n```powershell\r\nset-location c:\\windows\\\\system32\r\n$pwd -eq \"c:\\windows\\system32\"\r\n```\r\nThis is the same as Powershell 5. However, Powershell 5 also allowed this behaviour with network paths while powershell 7 doesn't.\r\n\r\nWhy is this useful? well, it just lets us be a bit lazy with string concat - \r\n```powershell\r\n#easy to write, easy to read\r\ncd \"$base\\foo\\bar\"\r\n#hard to write, hard to read\r\ncd (Join-Path $base \"foo\\bar\")\r\n```\r\nEven if you don't agree with this behaviour, I think at the very least the operation should just fail instead of taking you to the path up to where the \\\\ is.\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\nset-location \\\\localhost\\c$\\windows\\\\system32\r\n```\r\n\r\n# Expected behavior\r\n\r\n```none\r\n$pwd -eq \"\\\\localhost\\c$\\windows\\system32\"\r\n```\r\n\r\n# Actual behavior\r\n\r\n```none\r\n$pwd -eq \"\\\\localhost\\c$\\windows\"\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.1\r\nPSEdition                      Core\r\nGitCommitId                    7.0.1\r\nOS                             Microsoft Windows 10.0.18363\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2021-01-16T15:25:24Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "This works well in both PowerShell. You should run with elevated permissions.",
      "created_at": "2021-01-16T15:25:24Z",
      "updated_at": "2021-01-16T15:25:24Z"
    }
  ],
  "created_at": "2020-05-27T05:31:35Z",
  "labels": [
    "Issue-Question",
    "Resolution-Answered",
    "WG-Cmdlets-Management"
  ],
  "number": 12809,
  "state": "closed",
  "title": "Set-Location unexpected behaviour with \\\\ on network paths",
  "updated_at": "2021-01-16T15:25:32Z"
}