{
  "_url": "https://github.com/PowerShell/PowerShell/issues/16477",
  "author": "rkitover",
  "body": "### Prerequisites\r\n\r\n- [X] Write a descriptive title.\r\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- [X] Search the existing issues.\r\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\r\n\r\n### Steps to reproduce\r\n\r\n```powershell\r\ngci -r -n /windows/*.dll\r\n```\r\n\r\n### Expected behavior\r\n\r\nI would expect that do the same thing as\r\n\r\n```powershell\r\ngci -r /windows/*.dll\r\n```\r\n,\r\nbut only give me the file names.\r\n\r\n### Actual behavior\r\n\r\nOnly the files at the location are listed, and not any locations below that path.\r\n\r\n### Error details\r\n\r\n_No response_\r\n\r\n### Environment data\r\n\r\n```powershell\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.0\r\nPSEdition                      Core\r\nGitCommitId                    7.2.0\r\nOS                             Microsoft Windows 10.0.22499\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\n\r\n### Visuals\r\n\r\n_No response_",
  "closed_at": "2021-11-30T20:00:40Z",
  "comments": [
    {
      "author": "jborean93",
      "author_association": "COLLABORATOR",
      "body": "The way this is working is that you are calling `Get-ChildItem -Path /windows/*.dll -Recurse` and it will first enumerate the \"children\" of files matching your wildcard, i.e. `*.dll` in that directory. Each of these objects will be files with nothing to recurse into. What you want to do is\r\n\r\n```powershell\r\nGet-ChildItem -Path /windows -Include *.dll -Name -Recurse\r\n````\r\n\r\nThe `-Include` option is also part of an example to get some more information https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.management/get-childitem?view=powershell-7.2#example-4--get-child-items-using-the-include-parameter. ~Technically `-Filter` will be more efficient for Windows file systems but it doesn't work well with `-Recurse` so I wouldn't recommend it here.~\r\n\r\nEdit: `-Filter` does work here, not sure what I was testing at the time.",
      "created_at": "2021-11-16T19:15:25Z",
      "updated_at": "2021-11-16T21:26:46Z"
    },
    {
      "author": "rkitover",
      "author_association": "CONTRIBUTOR",
      "body": "Thank you for the explanation, so I can shorten this to:\r\n\r\n```powershell\r\ngci -r -n /windows -i *.dll\r\n```\r\n\r\nwhich is not terrible.\r\n\r\nThis also works consistently without `-n`, which is good.\r\n\r\nThis serves the purposes of the document I'm working on, however, I still believe that the behavior I described is not consistent from the perspective of the user.\r\n\r\nBy the way, and not related to this issue, my document is here:\r\n\r\nhttps://github.com/rkitover/windows-dev-guide\r\n\r\nand I would appreciate any feedback from you guys.\n\n<blockquote><img src=\"https://opengraph.githubassets.com/e71a6771ca978c3d28b68f983ba03f056ce2caa12ed0b443f79c6bfe2628e8cc/rkitover/windows-dev-guide\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/rkitover/windows-dev-guide\">GitHub - rkitover/windows-dev-guide: Native Windows Development Environment Setup Guide for Linux Users.</a></strong></div><div>Native Windows Development Environment Setup Guide for Linux Users. - GitHub - rkitover/windows-dev-guide: Native Windows Development Environment Setup Guide for Linux Users.</div></blockquote>",
      "created_at": "2021-11-16T20:24:31Z",
      "updated_at": "2021-11-16T20:24:33Z"
    },
    {
      "author": "MartinGC94",
      "author_association": "CONTRIBUTOR",
      "body": "> Technically `-Filter` will be more efficient for Windows file systems but it doesn't work well with `-Recurse` so I wouldn't recommend it here.\r\n\r\nI've never had any issues with this. Do you have any examples where it wouldn't work?",
      "created_at": "2021-11-16T21:14:44Z",
      "updated_at": "2021-11-16T21:14:44Z"
    },
    {
      "author": "jborean93",
      "author_association": "COLLABORATOR",
      "body": "I'm not sure what I was testing but it does indeed work, edited my comment.",
      "created_at": "2021-11-16T21:25:53Z",
      "updated_at": "2021-11-16T21:27:02Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> Technically -Filter will be more efficient for Windows file systems\r\n\r\nToday no but we could improve this if FileSystem provider improvements  will be approved for next milestone.",
      "created_at": "2021-11-17T03:20:06Z",
      "updated_at": "2021-11-17T03:20:06Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Dup #9014",
      "created_at": "2021-11-29T17:27:05Z",
      "updated_at": "2021-11-29T17:27:05Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as duplicate and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2021-11-30T20:00:40Z",
      "updated_at": "2021-11-30T20:00:40Z"
    }
  ],
  "created_at": "2021-11-16T14:02:59Z",
  "labels": [
    "Resolution-Duplicate",
    "Issue-Question",
    "WG-Cmdlets-Management",
    "Needs-Triage",
    "Area-FileSystem-Provider"
  ],
  "number": 16477,
  "state": "closed",
  "title": "Get-ChildItem -Recurse -Name /path/glob.* does not recurse",
  "updated_at": "2021-11-30T20:00:40Z"
}