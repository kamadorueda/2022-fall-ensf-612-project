{
  "_url": "https://github.com/PowerShell/PowerShell/issues/8314",
  "author": "tdaniely",
  "body": "# Summary of the new feature/enhancement\r\n\r\nSupport using \"sockaddr_un\" (AF_UNIX sockets) with Invoke-RestMethod.\r\n\r\n# Proposed technical implementation details\r\n\r\nExample usage:\r\n`Invoke-RestMethod sockaddr_un://var/run/docker.sock/containers/json\r\n\r\nAs far as I understand the socket layer should behave the same so no big changes in the code, except adding the scheme and address family option. I don't think this should affect Powershell code.\r\nSystem.Uri will need to support new scheme, which obviously means changes in framework & core.",
  "closed_at": null,
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "If CoreFx supports this, we can support it.  Until then, I don't think it makes sense to specialize it into the cmdlet.",
      "created_at": "2018-11-19T18:17:21Z",
      "updated_at": "2018-11-19T18:17:21Z"
    },
    {
      "author": "tdaniely",
      "author_association": "NONE",
      "body": "Actually I'm not sure if the dotnet people will go for this. The protocol is still HTTP. That the transport is different doesn't really matter.\r\n\r\nWith curl you do it like this:\r\n`curl -XGET --unix-socket /var/run/docker.sock http://localhost/containers/json`\r\n\r\nSo maybe the answer isn't core support. Probably warrants some design discussion.",
      "created_at": "2018-11-19T19:48:50Z",
      "updated_at": "2018-11-19T19:48:50Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "It is not standard scheme and it is absent on Windows so I think we can close the issue.",
      "created_at": "2018-11-20T14:21:06Z",
      "updated_at": "2018-11-20T14:21:06Z"
    }
  ],
  "created_at": "2018-11-19T17:46:50Z",
  "number": 8314,
  "state": "open",
  "title": "Support using sockaddr_un scheme with Invoke-RestMethod.",
  "updated_at": "2018-11-20T14:21:07Z"
}