{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15607",
  "author": "rjmholt",
  "body": "It looks like a PSVersionTable test is failing in CI, possibly because of a change to the version of System.Management.Automation.dll:\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/945a23234170bd5ebdace8b6d10b82754354f68f/test/powershell/Host/PSVersionTable.Tests.ps1#L6-L24",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "All works well locally.\r\nI build with ci.psm module as our CIs do\r\n```powershell\r\nImport-Module .\\tools\\ci.psm1\r\nInvoke-CIBuild\r\n```\r\n and get\r\n![image](https://user-images.githubusercontent.com/22290914/122599768-49f73700-d088-11eb-9c7e-e78ed8ed7025.png)\r\n\r\nIt says something was changed in last release process.",
      "created_at": "2021-06-18T17:56:54Z",
      "updated_at": "2021-06-18T17:57:28Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "> All works well locally.\r\n\r\nYeah I just noticed this.\r\n\r\nSo where's the 8 coming from?",
      "created_at": "2021-06-18T18:03:15Z",
      "updated_at": "2021-06-18T18:03:15Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I built from master and get \r\n![image](https://user-images.githubusercontent.com/22290914/122603096-4ca85b00-d08d-11eb-8af4-b5a91856d3eb.png)\r\n\r\nPrevious build was from my PR branch. So the issue is only in my PR. :-( \r\n\r\n\r\n",
      "created_at": "2021-06-18T18:33:54Z",
      "updated_at": "2021-06-18T18:40:23Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> So where's the 8 coming from?\r\n\r\nFrom ci.psm:\r\n```powershell\r\nfunction Get-ReleaseTag\r\n{\r\n    $metaDataPath = Join-Path -Path $PSScriptRoot -ChildPath 'metadata.json'\r\n    $metaData = Get-Content $metaDataPath | ConvertFrom-Json\r\n    $releaseTag = $metadata.NextReleaseTag\r\n    if($env:BUILD_BUILID)\r\n    {\r\n        $releaseTag = $releaseTag.split('.')[0..2] -join '.'\r\n        $releaseTag = $releaseTag + '.' + $env:BUILD_BUILID\r\n    }\r\n    return $releaseTag\r\n}\r\n```\r\nNextReleaseTag is v7.2.0-preview.8\"",
      "created_at": "2021-06-18T18:44:42Z",
      "updated_at": "2021-06-18T18:44:42Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": ">     if($env:BUILD_BUILID)\r\n\r\nOh, I wonder how this works currently and tests are passed if the env name should be BUILD_BUIL**D**ID. Came from #8822.\r\n\r\n/cc @TravisEz13 @adityapatwardhan ",
      "created_at": "2021-06-25T07:18:01Z",
      "updated_at": "2021-06-25T07:18:28Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "It turned out that ci.psm1 always assigns it directly to dotnet and the code under `if($env:BUILD_BUILID)` is dead code.\r\n",
      "created_at": "2021-06-25T09:46:50Z",
      "updated_at": "2021-06-25T09:46:50Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@TravisEz13 @adityapatwardhan Friendly ping.\r\n\r\nThis blocks #15603",
      "created_at": "2021-11-10T05:58:00Z",
      "updated_at": "2021-11-10T06:00:52Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "I don't see a clear action item expressed.",
      "created_at": "2021-11-10T18:42:10Z",
      "updated_at": "2021-11-10T18:42:10Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@TravisEz13 I don't understand your comment.\r\n\r\nI guess `function Get-ReleaseTag` is broken and must be fixed. I don't know how since it is exclusively internal MSFT process. I'd want to get a fix commit so that #15603 passes the test.",
      "created_at": "2021-11-11T03:29:57Z",
      "updated_at": "2021-11-11T03:29:57Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I compared builds local, CI and release and _I am at a loss._\r\n\r\nWe always put Product version including GitCommitId on all files in all builds. It is right.\r\nBut we lost GitCommitId in banner and PSVersionTable in non-local builds! Did it happen by accident?\r\n\r\nWhen we discussed adding a GitCommitId to the PSVersionTable, we found it important to inform users what the last commit was for this build. And we lost it. _It should be in the Release build_ and CI builds too.\r\n(To be clear I expect short PSVersion in banner (like `PowerShell 7.2.0`) and full version with GitCommitId in PSVersionTable.GitCommitId (like `7.2.0-preview.10-166-g40837dd860e1bb69dd8238ff5e5ae360a7637c13`).\r\n\r\nPerhaps this is a consequence of how the release process is going.\r\n_This definitely violates generally accepted rules of open source projects._\r\nOur Git Tags are broken. They seem to indicate the beginning of the next milestone, but they are not due to that we are backporting commits. The only way to do it right is to have _release branches in the repository_.\r\n\r\nThere is a related problem here. No community can release a version similar MSFT since nobody knows which commits were backported (specially in patches) and no public release branches exist - it breaks the open source nature of the project.\r\nMSFT can have non-public release process but MSFT must keep release branches public with right git tags.\r\n\r\n/cc @SteveL-MSFT @TravisEz13 @adityapatwardhan for review.\r\n.\r\n\r\nUpdate: How could I build 7.2.1 with _security fix_ for an community distribution?\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
      "created_at": "2021-12-03T09:38:46Z",
      "updated_at": "2021-12-16T03:55:18Z"
    }
  ],
  "created_at": "2021-06-18T17:37:41Z",
  "number": 15607,
  "state": "open",
  "title": "PSVersionInfo test failing due to SMA version",
  "updated_at": "2021-12-16T03:55:18Z"
}