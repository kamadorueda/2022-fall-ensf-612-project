{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10144",
  "author": "TylerLeonhardt",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nThis adds an enumeration of different downstream PowerShell tooling projects that can be impacted by changes in PowerShell itself.\r\n\r\n## PR Context\r\n\r\nAs we receive/send more and more PRs that add/change the language of PowerShell, it\u2019s important to point out the increased risk of breaking downstream dependencies.\r\n\r\nHere are a few examples of when required tooling changes were needed, without naming any parties (it\u2019s no one individual\u2019s fault), and how tooling is affected:\r\n* Adding \u201cfuzzy suggestions on error\u201d to the PowerShell ConsoleHost, won\u2019t display in the PowerShell Integrated Console for VSCode because it\u2019s a different PowerShell Host.\r\n* Change in implementation of Write-Host to \u201cnot be evil\u201d yet there\u2019s still a PSScriptAnalyzer rule saying don\u2019t use it\r\n* Adding `&&` and `||` operators adds new syntax that is not reflected in EditorSyntax\r\n\r\nIt\u2019s clear that we could do a better job of showing folks what will be impacted by certain changes.\r\n\r\nMore now than ever, we should look at new additions to PowerShell from an end-to-end perspective all the way from implementing, to testing, docs, _and_ tooling.\r\n\r\nThis is the first step to gaining awareness - adding to the PR template.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n",
  "closed_at": "2019-07-16T19:20:50Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I do not understand what actions need to be taken.\r\n\r\nAlso only a few projects are listed here, but there are actually many more.\r\nI believe that these projects should themselves track changes in the engine at the preview stage and write feedback.\r\n\r\nWe have a document about breaking changes. They must be approved by PowerShell Committee before merging.\r\nWhat to do with other products? Whose approval should we get? Or should we enhance out breaking change document? Add new tests? Add new CIs?\r\n",
      "created_at": "2019-07-15T05:10:54Z",
      "updated_at": "2019-07-15T05:10:54Z"
    },
    {
      "author": "TylerLeonhardt",
      "author_association": "MEMBER",
      "body": "> Also only a few projects are listed here, but there are actually many more.\r\n\r\nI\u2019ve listed out projects that the PowerShell team officially owns. What other projects are you referring to? At the end of the day, these were examples (not exhaustive list) of things folks need to be thinking of when they make changes.\r\n\r\n> I believe that these projects should themselves track changes in the engine at the preview stage and write feedback.\r\n\r\nThis _sounds_ good, in a world where resources are steady for these projects. Unfortunately, that\u2019s not the case. In a lot of these projects, resources (aka people) flow in and out and changes in PowerShell that need to also be applied to tooling can be easily missed (see examples in PR description).\r\n\r\nThat\u2019s what this PR is for. To bring tooling into the light to enumerate concerns that could exist in these other projects owned by the PowerShell team and at least start the discussion/awareness in the event that active parties are not watching.\r\n\r\nThere\u2019s no expectation at this time that tooling needs to be updated _with the PR to PowerShell_ but down the road, *PowerShell team members* may move to a model like this where you own a feature end to end:\r\n\r\n* PR in PowerShell\r\n* PR in PowerShell docs\r\n* PR in needed tooling\r\n\r\nThis is because pretty much all tooling is now under @SteveL-MSFT - vscode extension, PSSA, even PowerShellGet now. (I didn\u2019t think PowerShellGet was worth mentioning here as it\u2019s mostly API calls, and will be more abstracted out if/when PSGet 3 comes around).\r\n",
      "created_at": "2019-07-15T16:24:47Z",
      "updated_at": "2019-07-15T16:24:47Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "If the additions is for MSFT _only_ I have no questions but please add [MSFT only] tags to new cases to inform community. Otherwise it looks unfriendly to other community projects.\r\n\r\n>  changes in PowerShell that need to also be applied to tooling can be easily missed (see examples in PR description).\r\n\r\n- why non-breaking changes in PowerShell break the projects? Bad PowerShell API? Gaps in PowerShell tests?\r\n- until MSFT team adds (optional) CIs for them here we will miss something in the projects.",
      "created_at": "2019-07-16T03:41:26Z",
      "updated_at": "2019-07-16T03:41:26Z"
    },
    {
      "author": "TylerLeonhardt",
      "author_association": "MEMBER",
      "body": "> If the additions is for MSFT only I have no questions but please add [MSFT only] tags to new cases to inform community.\r\n\r\nThis doesn\u2019t just apply to MSFT only. This applies to _everyone_. Again, I\u2019m not asking for implementation, I\u2019m asking for enumeration. And if the user is unsure, they can leave it blank or say they `don't believe tooling will be impacted`.\r\n\r\n> why non-breaking changes in PowerShell break the projects? Bad PowerShell API? Gaps in PowerShell tests?\r\n> until MSFT team adds (optional) CIs for them here we will miss something in the projects.\r\n\r\nIt\u2019s all by design stuff. Again, look at the examples in the PR. If you make changes to the ConsoleHost, then _by-design_ it will not show up in PowerShell Editor Services host. If you add a new language feature, of course it won\u2019t show up in `EditorSyntax` (which is a TextMate grammar).\r\n\r\nThis is not for the sake of PowerShell/PowerShell. This is for the PowerShell ecosystem and it\u2019s something that people should think about if they send a PR to this project.\r\n\r\nAnd once again, this is not asking for implementation. It\u2019s just to get folks to think about other repos that can be affected (directly or not) via changes in this repo.",
      "created_at": "2019-07-16T15:09:17Z",
      "updated_at": "2019-07-16T15:09:17Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.0.0-preview.3` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.0.0-preview.3)\n",
      "created_at": "2019-08-20T22:35:36Z",
      "updated_at": "2019-08-20T22:35:36Z"
    }
  ],
  "created_at": "2019-07-12T18:34:30Z",
  "number": 10144,
  "state": "closed",
  "title": "Add tooling section to PR template",
  "updated_at": "2019-08-20T22:35:36Z"
}