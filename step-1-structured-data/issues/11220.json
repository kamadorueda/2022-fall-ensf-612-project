{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11220",
  "author": "bergmeister",
  "body": "# Summary of the new feature/enhancement\r\n\r\nWith the many updates of the .Net Core SDK (either previews or patches), I accumulate a lot of SDKs on my local machine and I also changing laptops more often now. With Visual Studio Online I would have one environment that I could use when I switch laptops and also not pollute my machine with SDKs and have VS-Code extensions (like the C++ one) that I usually don't use but make my VS-Code editor heavier.\r\n\r\n# Proposed technical implementation details (optional)\r\n\r\nThe following should just work in the out of box VS-Code version of [Visual Studio Online](https://online.visualstudio.com), and I am surprised it does not work and not sure why, especially since we already have a `.devcontainer` folder.\r\n\r\n```pwsh\r\nStart-PSBootstrap # works\r\nStart-PSBuild     # fails on 'dotnet restore'\r\n```\r\n\r\nAlthough VSO should use the `.devcontainer` folder for the Docker image, it seems it does not do it because otherwise `Start-PSBootstrap` would not be necessary... I submited a bug report to VSO here: https://github.com/MicrosoftDocs/vsonline/issues/229",
  "closed_at": null,
  "comments": [
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "After some feedback, it is a known issue that VSO does not respect the Dockerfile yet. Tracking issue is here:\r\nhttps://github.com/MicrosoftDocs/vsonline/issues/15",
      "created_at": "2019-11-30T22:26:42Z",
      "updated_at": "2019-11-30T22:26:42Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "What can we do in the repo?",
      "created_at": "2019-12-01T16:51:22Z",
      "updated_at": "2019-12-01T16:51:22Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "Nothing for now. Theoretically it should just work once they support the Dockerfile because it will use the same .devcontainer setup.\r\nBut given that after a manual Start-PSBootstrap, the build was failing on dotnet restore, indicates that there might be something else left to be fixed",
      "created_at": "2019-12-01T17:32:45Z",
      "updated_at": "2019-12-01T17:32:45Z"
    },
    {
      "author": "JustinGrote",
      "author_association": "CONTRIBUTOR",
      "body": "@bergmeister I know this is an old issue and a lot has changed. I am currently working to improve the devcontainer so that it is fully compatible and optimized for VSCode, Github Codespaces, and (hopefully) GitPod. My initial (very unoptimized) PR is [here](https://github.com/PowerShell/PowerShell/pull/17680), you can go to my PR, click \"start codespaces\" if you're in the beta or open the branch in a devcontainer on vscode, and after initial setup you should just be able to hit ctrl-shift-b (`Run Default Build Task`) and get a working build with no other setup required.\r\n\r\n\r\nWould you consider that a satisfaction of your issue? ",
      "created_at": "2022-07-14T14:14:30Z",
      "updated_at": "2022-07-14T14:15:04Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "@JustinGrote The original issue was from the early days of VSO where one couldn't specify a custom Docker image for the online version. They started supporting that later and I contributed the first working version for both VS-Code and VS) in #10114\r\nI kept updating them initially but their shape has changed into a not so desirable direction for external contributors quite a bit since. I don't know why but the base image was changed from `dotnet/sdk` to `powershell/test-deps` for example. I'd agree as well that we should bring back a working version of it for external contributors that just want quick building/testing.",
      "created_at": "2022-07-14T15:51:08Z",
      "updated_at": "2022-07-14T15:51:08Z"
    },
    {
      "author": "JustinGrote",
      "author_association": "CONTRIBUTOR",
      "body": "The new version I'm working on uses the official devcontainer ubuntu image and then uses the Start-PSBootstrap to layer in the SDK. It's the most efficient way to do it and will support codespaces prebuilds. I'll have more detail in the PR after I post my revamp.",
      "created_at": "2022-07-14T17:25:45Z",
      "updated_at": "2022-07-14T17:26:01Z"
    }
  ],
  "created_at": "2019-11-30T10:02:45Z",
  "labels": [
    "Issue-Enhancement",
    "Area-Maintainers-Build"
  ],
  "number": 11220,
  "state": "open",
  "title": "Feature Request: Being able to build PowerShell in VS-Code environment of Visual Studio Online",
  "updated_at": "2022-07-14T17:26:01Z"
}