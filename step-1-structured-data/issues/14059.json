{
  "_url": "https://github.com/PowerShell/PowerShell/issues/14059",
  "author": "user8446",
  "body": "#Steps to reproduce\r\n1. Install v7.1 from the Microsoft Store\r\n\r\n## Expected behavior\r\n1. Installed v7.0 should upgrade to 7.1.\r\n2. 'pwsh' should bring up 7.1 but the environment variable isn't updated. It brings up the installed 7.0. However, 'pwsh.exe' brings up v7.1.\r\n3. VS code also doesn't recognize the update\r\n\r\n## Actual behavior\r\nSee above\r\n\r\n```\r\n\r\n## Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.0\r\nPSEdition                      Core\r\nGitCommitId                    7.1.0\r\nOS                             Microsoft Windows 10.0.19042\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n```\r\n",
  "closed_at": "2020-11-14T17:16:17Z",
  "comments": [
    {
      "author": "fMichaleczek",
      "author_association": "NONE",
      "body": "@user8446\r\n> Installed v7.0 should upgrade to 7.1.\r\n\r\nMSIX vs MSI (Windows Store VS Control Panel ) : https://www.advancedinstaller.com/msix-limitations.html\r\nI would say by design ? \r\n\r\n> 'pwsh' should bring up 7.1 but the environment variable isn't updated. It brings up the installed 7.0. However, 'pwsh.exe' brings up v7.1.\r\n- On my setup, I install first the 7.1 msi then the 7.1 Store.\r\n- In the Windows Terminal, it detects PowerShell as the Store Version and PowerShell 7.1 as the MSI version\r\n- My where.exe : \r\n```\r\nC:\\Users\\X>where.exe pwsh\r\nC:\\Program Files\\PowerShell\\7\\pwsh.exe\r\nC:\\Users\\X\\AppData\\Local\\Microsoft\\WindowsApps\\pwsh.exe\r\n```\r\n\r\nMaybe better to continue to the MSIX thread https://github.com/PowerShell/PowerShell/issues/10894\r\n\r\n> My VS code doesn't find the store version\r\n\r\n- The same on my steup\r\n- MSIX is not tested see end of the issue. Maybe better to continue to this thread https://github.com/PowerShell/vscode-powershell/issues/2147 \r\n\r\n- My Workaround \r\n```\r\n    \"powershell.powerShellAdditionalExePaths\": [\r\n        {\r\n            \"exePath\": \"C:\\\\Users\\\\Flavien\\\\AppData\\\\Local\\\\Microsoft\\\\WindowsApps\\\\pwsh.exe\",\r\n            \"versionName\": \"PowerShell Store\"\r\n        }\r\n    ],\r\n    \"terminal.integrated.shell.windows\": \"C:\\\\Users\\\\Flavien\\\\AppData\\\\Local\\\\Microsoft\\\\WindowsApps\\\\pwsh.exe\",\r\n    \"powershell.powerShellDefaultVersion\": \"PowerShell Store\"\r\n```\r\n\r\nI would say duplicate thread, you should close it and continue on each subthreads.\n\n<blockquote><img src=\"http://www.advancedinstaller.com/img/msix-limitations/limitations.png\" width=\"48\" align=\"right\"><div><strong><a href=\"https://www.advancedinstaller.com/msix-limitations.html\">MSI vs MSIX: Practical Side-by-Side Comparison</a></strong></div><div>Side-by-side comparation of MSI and MSIX packages</div></blockquote>",
      "created_at": "2020-11-12T23:43:01Z",
      "updated_at": "2020-11-12T23:43:03Z"
    },
    {
      "author": "user8446",
      "author_association": "NONE",
      "body": "Thank you for the information. I don't know enough about msix vs msi even after reading that if msix can't do an in-place upgrade of existing apps or if just wasn't written when it was packaged up. Maybe someone on the team can give some insight.\r\nI'm not sure if [#10894](https://github.com/PowerShell/PowerShell/issues/10894) applies as that was for a preview and now we are talking about a release so we actually want the PATH variable.\r\nThank you for the VS Code workaround!",
      "created_at": "2020-11-13T01:47:05Z",
      "updated_at": "2020-11-13T01:48:58Z"
    },
    {
      "author": "fMichaleczek",
      "author_association": "NONE",
      "body": "@user8446 The main covered scenario is a new install with only the msix version, everything different need to be configured manually. No bugs, only additionnals config and a need fof a better autodetect  configuration in tools. But nothing related to PowerShell Core.\r\n\r\nMost of limitations are in the Windows Sdk, so outside this repository. It's actively developed right now, Windows Teams has open an insiders feed. And the powershell team works on the subject. People will found this issue as a workaround. Close this one and ask the others teams in charge of tooling. They need testers too.",
      "created_at": "2020-11-14T13:09:46Z",
      "updated_at": "2020-11-14T13:10:28Z"
    },
    {
      "author": "kilasuit",
      "author_association": "COLLABORATOR",
      "body": "> Installed v7.0 should upgrade to 7.1.\r\n\r\n@user8446  - The PowerShell version in the store prior to 7.1.0 was actually PowerShell Preview & not the Stable version - so this wouldn't have actually been possible. \r\nI will admit that I had been expecting the same on the release day & was in and out of the Store checking for updates ( I blame the lack of coffee for not putting the difference of preview/stable as why it wouldn't auto install)\r\n\r\n\r\n> VS code also doesn't recognize the update\r\n\r\nI can't say that I'm seeing this & must be a localised issue with your install of vscode if you click the following (bottom right)\r\n![image](https://user-images.githubusercontent.com/6355225/99148539-167ea500-2680-11eb-89e0-f6673e7bb5a6.png)\r\n\r\nDo you get this show\r\n\r\nCode insiders \r\n![image](https://user-images.githubusercontent.com/6355225/99148456-9eb07a80-267f-11eb-8b9a-f23ce36f7362.png)\r\n\r\n\r\nCode (note this is the same as insiders above)\r\n\r\n![image](https://user-images.githubusercontent.com/6355225/99148464-abcd6980-267f-11eb-8ac6-2eb02a568649.png)\r\n",
      "created_at": "2020-11-14T13:48:53Z",
      "updated_at": "2020-11-14T13:48:53Z"
    },
    {
      "author": "user8446",
      "author_association": "NONE",
      "body": "Hi @kilasuit - sorry I didn't leave enough info. I wasn't on the MS Store preview, I was on an MSI installed v7.0. I had hoped that the MS Store/MSIX installer would have detected that and do an upgrade.\r\n\r\nI ended up updating the MSI installed version through VS Code (1 click upgrade) so I actually have both now.\r\n\r\nI'll close and post for the Windows Teams per the comment above\r\n",
      "created_at": "2020-11-14T17:16:17Z",
      "updated_at": "2020-11-14T17:16:17Z"
    },
    {
      "author": "kilasuit",
      "author_association": "COLLABORATOR",
      "body": "Ah yes that's not actually possible as they are different installation methods",
      "created_at": "2020-11-14T17:38:10Z",
      "updated_at": "2020-11-14T17:38:10Z"
    },
    {
      "author": "juvtib",
      "author_association": "NONE",
      "body": "user8446 wrote: \r\n> [I]f msix can't do an in-place upgrade of existing apps or if just wasn't written when it was packaged up. Maybe someone on the team can give some insight.\r\n\r\nuser8446 wrote: \r\n> I was on an MSI installed v7.0. I had hoped that the MS Store/MSIX installer would have detected that and do an upgrade.\r\n> \r\n> I ended up updating the MSI installed version through VS Code (1 click upgrade) so I actually have both now.\r\n\r\nkilasuit wrote: \r\n> Ah yes [upgrading a MSI with MSIX is] not actually possible as they are different installation methods\r\n\r\nFor clarity, the Store app (MSIX) cannot upgrade previous versions of PowerShell (MSI). You're making the reasonable assumption that PowerShell 7.1 will upgrade and replace 7.0. But MSI and MSIX don't talk to each other. This is by design. They are two different silos. This also explains why it is possible to have two, side-by-side installations of 7.1: MSI (Web/VSCode) and MSIX (Microsoft Store). Without realizing it, you've crossed a technology border in going from PowerShell 7.0 (MSI) to 7.1 (MSIX). \r\n\r\nIf your intent is to standardize on the Store version, the proper way would be to uninstall the MSI versions and to get PowerShell only from the store. Because Settings might not differentiate between MSI and MSIX, I recommend uninstalling all PowerShell 6.0+ versions and then installing from the Store. This will make it easier to get back on track. \r\n\r\nAnother point of confusion might be that regardless of which PowerShell 6.0+ version you're using, PowerShell 5.1 will always be installed. The technical reason for this is 5.1 has cmdlets and compatibility not present in PowerShell 6.0+. PowerShell 5.1 is 'Windows&nbsp;PowerShell'. And PowerShell 6.0+ is 'cross-platform&nbsp;PowerShell'. \r\n",
      "created_at": "2020-11-15T11:54:14Z",
      "updated_at": "2020-11-15T11:54:14Z"
    },
    {
      "author": "user8446",
      "author_association": "NONE",
      "body": "Thank you, I wasn't aware that the MSIX pkg was not configurable to install over the MSI installed one.\r\nThe whole goal here was to have one more program on 'package management' that you don't have to mess with like on linux.",
      "created_at": "2020-11-15T17:29:25Z",
      "updated_at": "2020-11-15T17:29:25Z"
    },
    {
      "author": "juvtib",
      "author_association": "NONE",
      "body": "As you found out, there are two options. \r\n\r\nYou can rely on the update check when you launch VSCode. That will update the MSI. There should also be a reminder when you launch PowerShell. \r\n\r\n![A reminder to upgrade PowerShell shows on launch.](https://i.imgur.com/UGh4IU0.png)\r\n\r\nOr the package from the Store should [automatically update](https://www.thewindowsclub.com/microsoft-store-apps-not-updating-automatically-in-windows-10). ",
      "created_at": "2020-11-16T14:11:00Z",
      "updated_at": "2020-11-16T14:11:00Z"
    }
  ],
  "created_at": "2020-11-12T16:23:55Z",
  "labels": [
    "Issue-Question",
    "Area-Maintainers-Build"
  ],
  "number": 14059,
  "state": "closed",
  "title": "7.1 installed from the Microsoft Store bugs",
  "updated_at": "2020-11-16T14:11:00Z"
}