{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7718",
  "author": "chucklu",
  "body": "Hi,\r\n     I  have no idea about how to use Start-ResGen command.\r\n     I find the source code in [build.psm1](https://github.com/PowerShell/PowerShell/blob/master/build.psm1#L2128)\r\n     It seems you are using \"dotnet run\" with the [C# ResGen project ](https://github.com/PowerShell/PowerShell/tree/master/src/ResGen)\r\n\r\n  When I check the source code of C# project, I find some comments in main function.\r\n```C#\r\n     // We are assuming resgen is run with 'dotnet run pathToResxFile.resx'.\r\n```\r\n  I  have tried to pass a file name to the \"Start-ResGen\" command,but it did not work for both txt and resx.\r\n      \r\n```powershell\r\n> Start-ResGen .\\test.txt\r\nStart-ResGen : A positional parameter cannot be found that accepts argument '.\\test.txt'.\r\nAt line:1 char:1\r\n+ Start-ResGen .\\test.txt\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : InvalidArgument: (:) [Start-ResGen], ParameterBindingException\r\n+ FullyQualifiedErrorId : PositionalParameterNotFound,Start-ResGen\r\n\r\n> Start-ResGen .\\test.resx\r\nStart-ResGen : A positional parameter cannot be found that accepts argument '.\\test.resx'.\r\nAt line:1 char:1\r\n+ Start-ResGen .\\test.resx\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : InvalidArgument: (:) [Start-ResGen], ParameterBindingException\r\n+ FullyQualifiedErrorId : PositionalParameterNotFound,Start-ResGen\r\n```\r\n     \r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.1.0-rc.1\r\nPSEdition                      Core\r\nGitCommitId                    6.1.0-rc.1\r\nOS                             Microsoft Windows 10.0.16299\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2018-09-06T10:09:05Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@chucklu The function is used intenally in build process to convert *.resx files to *.cs files. See \"resources\" folders in the repo.\r\nYou do not need to run it explicitly. Please read our docs about build process.\r\nAll you need to do is run\r\n```\r\nStart-PSBuild -Clean\r\n```\r\nThe script clean up your local repo, run TypeGen, ResGen and then build PowerShell in debug mode.\r\n\r\nWe use our ResGen because .Net Core doesn't still port the feature.",
      "created_at": "2018-09-06T06:18:51Z",
      "updated_at": "2018-09-06T06:18:51Z"
    },
    {
      "author": "chucklu",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov  got it, thanks for your explanation in https://github.com/PowerShell/PowerShell/issues/7716",
      "created_at": "2018-09-06T10:09:05Z",
      "updated_at": "2018-09-06T10:09:05Z"
    }
  ],
  "created_at": "2018-09-06T05:52:47Z",
  "number": 7718,
  "state": "closed",
  "title": "Start-ResGen did not work",
  "updated_at": "2018-09-06T10:09:05Z"
}