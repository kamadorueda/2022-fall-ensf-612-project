{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13221",
  "author": "SeeminglyScience",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 and PowerShell 7+ issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6).\r\n\r\n-->\r\n\r\n## Steps to reproduce\r\n\r\n```powershell\r\n'test'.Substring(1) = 'something'\r\n```\r\n\r\n## Expected behavior\r\n\r\n```none\r\nAt line:1 char:1\r\n+ 'test'.Substring(1) = 'something'\r\n+ ~~~~~~~~~~~~~~~~~~~\r\nThe assignment expression is not valid. The input to an assignment operator must be an object that is able to accept assignments, such as\r\na variable or a property.\r\n    + CategoryInfo          : ParserError: (:) [], ParentContainsErrorRecordException\r\n    + FullyQualifiedErrorId : InvalidLeftHandSide\r\n```\r\n\r\n## Actual behavior\r\n\r\nNothing, it works like if the LHS was `$null`.\r\n\r\n## Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.0-preview.5\r\nPSEdition                      Core\r\nGitCommitId                    7.1.0-preview.5\r\nOS                             Microsoft Windows 10.0.18362\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\n---\r\n\r\nTbh I don't really want this fixed because it frees me up to maybe implement some ref return stuff in PSLambda.  That's not really a valid reason though, so reporting anyway.\r\n\r\n---\r\n\r\nMy guess is this is because `MemberExpressionAst` implements `ISupportsAssignment`, but just doesn't check if it happens to be an `InvokeMemberExpressionAst` instance.\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "As I recall, this is intentional support for assignment to byref return values which, while not common, are used in some important VBA scenarios.",
      "created_at": "2020-07-20T18:23:56Z",
      "updated_at": "2020-07-20T18:23:56Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@lzybkr can you give an example of how that would look? I'm having trouble picturing what that would be useful for \ud83d\ude02 ",
      "created_at": "2020-07-20T18:50:42Z",
      "updated_at": "2020-07-20T18:50:42Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "Oh right like `$excelWorkSheet.Cells.Item(1, 1) = 'text'`. So then I guess the question is should it throw if the com binder isn't used?\r\n\r\nOr should support just be added to the CLR binder?  As long as the invocation is on the LHS and not saved it should be doable.",
      "created_at": "2020-07-20T18:51:06Z",
      "updated_at": "2020-07-20T18:51:06Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "This kind of brings up a bigger discussion that might be better off in a new issue but:\r\n\r\n1. Should CLR ref return members be allowed on the LHS of an expression\r\n1. Should CLR ref return members return the referenced value itself when used outside the LHS of an assignment\r\n\r\nThough the above questions are made a bit more complicated by the fact that there's very limited support for them in the `SLE.Expression` API.",
      "created_at": "2020-07-20T19:04:32Z",
      "updated_at": "2020-07-20T19:04:32Z"
    }
  ],
  "created_at": "2020-07-20T17:41:42Z",
  "number": 13221,
  "state": "open",
  "title": "Assignment with method invocation the LHS doesn't throw",
  "updated_at": "2020-08-04T18:22:01Z"
}