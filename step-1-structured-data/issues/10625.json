{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10625",
  "author": "jboeshart",
  "body": "# Summary of the new feature/enhancement\r\n\r\nPasswords are hard. When we prompt for passwords, especially for complex passwords, it's important to ensure that we know what we are entering. When using `Get-Credential` interactively from the command line, you currently only get one opportunity to type in your password. It's easy to fat finger a complex password. If you fat finger a complex password, then use it somewhere, you can make that resource inaccessible. We should enable a confirmation of the password when using this cmdlet interactively.\r\n\r\n# Proposed technical implementation details\r\n\r\nConsider adding a `-ConfirmPassword` parameter that confirms two password strings entered at the command line are correct. If correct, proceed with saving the credential. If incorrect, re-prompt the user for matching strings. Something like this:\r\n\r\n**Successful entry**\r\n```\r\nPS C:\\> Get-Credential -credential user1 -ConfirmPassword\r\n\r\nPowerShell credential request\r\nEnter your credentials.\r\nPassword for user user1: ************\r\nConfirm password for user user1: ************\r\n\r\nUserName                     Password\r\n--------                     --------\r\nuser1    System.Security.SecureString\r\n```\r\n\r\n**Unsuccessful entry**\r\n```\r\nPS C:\\> Get-Credential -credential user1 -ConfirmPassword\r\n\r\nPowerShell credential request\r\nEnter your credentials.\r\nPassword for user user1: *****\r\nConfirm password for user user1: ************\r\n\r\nPasswords do not match.\r\nEnter your credentials.\r\nPassword for user user1: ************\r\nConfirm password for user user1: ************\r\n\r\nUserName                     Password\r\n--------                     --------\r\nuser1    System.Security.SecureString\r\n```",
  "closed_at": null,
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "`-Confirm` would conflict with the common parameter used for ShouldProcess. \r\n\r\nI'd suggest something like `-ConfirmPassword`",
      "created_at": "2019-09-25T19:28:45Z",
      "updated_at": "2019-09-25T19:28:45Z"
    },
    {
      "author": "jboeshart",
      "author_association": "NONE",
      "body": "Good idea @vexx32, I updated the description to reflect that.",
      "created_at": "2019-09-25T19:44:23Z",
      "updated_at": "2019-09-25T19:44:23Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "How would it know how to verify the credential? I realize that the request is probably for Active Directory credentials but a credential object can be used for anything.\r\n\r\nI think it would make more sense to break this functionality out into a specific command, something like `Test-ADCredential` or a completely separate `Get-ADCredential` that wraps `Get-Credential`.",
      "created_at": "2019-09-26T15:17:10Z",
      "updated_at": "2019-09-26T15:17:10Z"
    },
    {
      "author": "jboeshart",
      "author_association": "NONE",
      "body": "It's not a verification of the credential itself. It's a confirmation that the password you entered twice matches. This would be similar to many web site credential creation procedures that are commonly seen, as well as the `passwd` command on Linux. \r\n\r\n```\r\n[root@vm1~]# passwd user1\r\nChanging password for user user1.\r\nNew UNIX password:\r\nRetype new UNIX password:\r\npasswd: all authentication tokens updated successfully.\r\n```",
      "created_at": "2019-09-26T15:39:06Z",
      "updated_at": "2019-09-26T15:39:06Z"
    },
    {
      "author": "jboeshart",
      "author_association": "NONE",
      "body": "That said, I think having an easy way to validate an AD credential could be valuable as well @SeeminglyScience, but that's outside the scope of this particular enhancement request.",
      "created_at": "2019-09-26T15:41:33Z",
      "updated_at": "2019-09-26T15:41:33Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "> It's not a verification of the credential itself. It's a confirmation that the password you entered twice matches.\r\n\r\nAhhh yes, I misunderstood \ud83d\ude42  that makes much more sense \ud83d\udc4d ",
      "created_at": "2019-09-26T16:53:49Z",
      "updated_at": "2019-09-26T16:53:49Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Does anyone want to implement this? It looks like easy and very useful enhancement. Ask if you need help to start.\r\n",
      "created_at": "2019-09-26T17:00:04Z",
      "updated_at": "2019-09-26T17:00:45Z"
    },
    {
      "author": "jboeshart",
      "author_association": "NONE",
      "body": "I wouldn't mind giving this a shot myself, but this would be my first contribution so I'd likely need some hand-holding. I'd guess that the logic would be implemented here:\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/74517923cfa26244662ccbe995e7f88fe06c1f02/src/Microsoft.PowerShell.Security/security/CredentialCommands.cs#L93\r\n\r\nNot entirely sure how to handle the UI elements, or adding a parameter to the cmdlet. ",
      "created_at": "2019-09-26T17:07:25Z",
      "updated_at": "2019-09-26T17:07:25Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@jboeshart Parameters is defined above in the code with Parameter attribute.\r\nUse debugger to get better understanding how the code works.",
      "created_at": "2019-09-26T17:12:20Z",
      "updated_at": "2019-09-26T17:12:20Z"
    },
    {
      "author": "jboeshart",
      "author_association": "NONE",
      "body": "Gotcha, let me hack away at it and see if I can get something workable here. Are contributors also responsible for creating/updating tests too? Just want to make sure I included everything that's necessary.",
      "created_at": "2019-09-26T17:18:06Z",
      "updated_at": "2019-09-26T17:18:06Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Search `public override PSCredential PromptForCredential` in\r\nhttps://github.com/PowerShell/PowerShell/blob/1be3f4cc0e465ae11ad8e59e9060f5a59e4762eb/src/Microsoft.PowerShell.Security/security/CredentialCommands.cs \r\n\r\nYes, you should update tests in https://github.com/PowerShell/PowerShell/blob/acb52b3d9c92e347ea529242e8ab25a09ea31222/test/powershell/Modules/Microsoft.PowerShell.Security/GetCredential.Tests.ps1\n\n<blockquote><img src=\"https://avatars0.githubusercontent.com/u/11524380?s=400&v=4\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicon.ico\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/PowerShell/PowerShell\">PowerShell/PowerShell</a></strong></div><div>PowerShell for every system! Contribute to PowerShell/PowerShell development by creating an account on GitHub.</div></blockquote>\n<blockquote><img src=\"https://avatars0.githubusercontent.com/u/11524380?s=400&v=4\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicon.ico\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/PowerShell/PowerShell\">PowerShell/PowerShell</a></strong></div><div>PowerShell for every system! Contribute to PowerShell/PowerShell development by creating an account on GitHub.</div></blockquote>",
      "created_at": "2019-09-26T17:24:04Z",
      "updated_at": "2019-09-26T17:24:06Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Tests can be tricky. We use special test host (created in the test file with `$th = New-TestHost`). I guess you will have to update it too. See help module in test\\tools\\Modules\\HelpersHostCS\\ ",
      "created_at": "2019-09-26T17:28:51Z",
      "updated_at": "2019-09-26T17:28:51Z"
    },
    {
      "author": "jboeshart",
      "author_association": "NONE",
      "body": "Ok, I've logged #10692 with my updates to make this work. Need to work on tests, but I wanted to get some feedback on the changes that I've made. \r\n\r\nI'd also like some clarity on if the code to compare the secure strings is acceptable. This is a bit sensitive, since you can't directly compare secure strings. The code is based on guidance from the following links. I think this is probably ok, since we're just comparing strings, and the only way they would be exposed is if you were actively debugging the code as you were entering the password. That said, I'd like to have someone with a little more experience in this area validate this is ok.\r\n\r\nhttps://stackoverflow.com/questions/4502676/c-sharp-compare-two-securestrings-for-equality\r\nhttps://www.sjoerdlangkemper.nl/2017/11/08/comparing-securestrings-in-dotnet/\r\n\r\n\n\n<blockquote><img src=\"https://cdn.sstatic.net/Sites/stackoverflow/img/apple-touch-icon@2.png?v=73d79a89bded\" width=\"48\" align=\"right\"><div>Stack Overflow</div><div><strong><a href=\"https://stackoverflow.com/questions/4502676/c-sharp-compare-two-securestrings-for-equality\">C# - compare two SecureStrings for equality</a></strong></div><div>I have a WPF application with two PasswordBoxes, one for the password and another for the password to be entered a second time for confirmation purposes.  I was wanting to use PasswordBox.SecurePas...</div></blockquote>\n<blockquote><img src=\"https://www.sjoerdlangkemper.nl/images/ph-compare-240.jpg\" width=\"48\" align=\"right\"><div>Sjoerd Langkemper</div><div><strong><a href=\"https://www.sjoerdlangkemper.nl/2017/11/08/comparing-securestrings-in-dotnet/\">Comparing secure strings in .NET</a></strong></div><div>In .NET, the SecureString class protects data in memory. The contents of a SecureString object are not accessible as a normal string and that makes it hard to work with it. This post describes some secure ways to compare two SecureString objects.</div></blockquote>",
      "created_at": "2019-10-03T04:04:40Z",
      "updated_at": "2019-10-03T04:04:42Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "`-ConfirmPassword` does still intersect with `-Confirm` common parameter.\r\nI suggest `-ReEnterPassword`.",
      "created_at": "2020-03-29T06:03:24Z",
      "updated_at": "2020-03-29T06:03:24Z"
    },
    {
      "author": "Shriram0908",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov I would like to try and fix this issue. This is my first fix and so I may need little help with the process",
      "created_at": "2020-05-24T04:55:49Z",
      "updated_at": "2020-05-24T04:55:49Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@Shriram0908 Feel free to ask.",
      "created_at": "2020-05-24T05:05:21Z",
      "updated_at": "2020-05-24T05:05:21Z"
    },
    {
      "author": "Shriram0908",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov I see \"Expected \u2014 Waiting for status to be reported\" on the PR. What does it mean and should I do something from my side",
      "created_at": "2020-05-24T10:01:56Z",
      "updated_at": "2020-05-24T10:01:56Z"
    },
    {
      "author": "Shriram0908",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov Can we re-open this issue and How shall we implement this feature ?",
      "created_at": "2020-08-12T16:08:30Z",
      "updated_at": "2020-08-12T16:08:30Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@Shriram0908 You need to review related discussions like https://github.com/PowerShell/PowerShell/issues/13346#issuecomment-668322559 \r\nI think @rjmholt could help you too.",
      "created_at": "2020-08-12T16:59:20Z",
      "updated_at": "2020-08-12T16:59:20Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "We just need to come up with a better way to re-prompt a password. There are a few possibilities:\r\n\r\n1. We have a new non-abstract method on PSHostUserInterface that re-prompts\r\n2. We use a configuration specific to the ConsoleHostUserInterface to allow it to re-prompt, without affecting other hosts that may also choose to implement it\r\n3. We decide that re-prompt is above the PSHostUserInterface's level and simply call the relevant prompt method multiple times\r\n\r\n(1) provides the most re-use, but is hardest to get right. One way is to provide a new method that re-prompts, itself calling one of the abstract methods, but meaning that commands not targeting PS 7.1 won't be able to re-prompt. Because commands need to call the overridden abstract method directly, we're quite constrained in our options.\r\n\r\n(2) is essentially a bad implementation of (1), so is probably not the right way to go.\r\n\r\n(3) is another possibility, which means we're more free to implement what we like, but means that other hosts (particularly the PowerShell extension for VSCode) won't get this improvement.",
      "created_at": "2020-08-12T17:29:58Z",
      "updated_at": "2020-08-12T17:29:58Z"
    },
    {
      "author": "RathiJ",
      "author_association": "NONE",
      "body": "I am new and first time contributor,  can i try ?",
      "created_at": "2020-08-31T05:48:15Z",
      "updated_at": "2020-08-31T05:48:15Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@RathiJ Yes. Please read the issue history because we had a compatibility problems with \"right\" implementation.",
      "created_at": "2020-08-31T06:27:12Z",
      "updated_at": "2020-08-31T06:27:12Z"
    },
    {
      "author": "RathiJ",
      "author_association": "NONE",
      "body": "@iSazonov  ,  Thank you , can you please assign this bug for me?, I read threads above , got some history of it.  I am working on it. Thanks again. ",
      "created_at": "2020-09-06T23:29:05Z",
      "updated_at": "2020-09-06T23:29:05Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@RathiJ GitHub does not allow explicitly assign an issue for non-members but feel free to work on the issue.",
      "created_at": "2020-09-07T03:15:25Z",
      "updated_at": "2020-09-07T03:15:25Z"
    },
    {
      "author": "RathiJ",
      "author_association": "NONE",
      "body": "sure , thank you \r\n",
      "created_at": "2020-09-08T05:10:58Z",
      "updated_at": "2020-09-08T05:10:58Z"
    }
  ],
  "created_at": "2019-09-25T19:25:21Z",
  "number": 10625,
  "state": "open",
  "title": "Get-Credential password confirmation",
  "updated_at": "2021-06-07T20:42:41Z"
}