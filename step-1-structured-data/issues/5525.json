{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5525",
  "author": "zhenggu",
  "body": "## PR Summary\r\n\r\nFixes #5517 \r\n\r\nIn the previous version, if one service has dependency services, it cannot be stopped by \"Set-Service -Stop\", this PR fixes this issue.\r\n\r\nAnd also add the Parameter \"-Force\" to Set-Service, when it is enabled, the function will stop it's dependent services, and then stop the target's service itself. \r\n\r\nWithout the parameter \"-Force\" it will raise a exception, if the service has running dependent services.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` to the beginning of the title and remove the prefix when the PR is ready.\r\n- **User-facing changes**\r\n    - [x] User-facing [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [x] Issue filed - Issue link: https://github.com/PowerShell/PowerShell-Docs/pull/2858\r\n- **Testing - New and feature**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n        - [ ] [Add `[feature]` if the change is significant or affects feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\r\n<!--\r\n\r\nIf you are a PowerShell Team member, please make sure you choose the Reviewer(s) and Assignee for your PR.\r\nIf you are not from the PowerShell Team, you can leave the fields blank and the Maintainers will choose them for you. If you are familiar with the team, feel free to mention some Reviewers yourself.\r\n\r\nFor more information about the roles of Reviewer and Assignee, refer to [CONTRIBUTING.md](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md).\r\n\r\n-->\r\n\r\n<!-- Reviewable:start -->\r\n---\r\nThis change is\u2002[<img src=\"https://reviewable.io/review_button.svg\" height=\"34\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/powershell/powershell/5525)\r\n<!-- Reviewable:end -->\r\n",
  "closed_at": "2018-08-28T18:03:13Z",
  "comments": [
    {
      "author": "msftclas",
      "author_association": "NONE",
      "body": "[![CLA assistant check](https://cla.opensource.microsoft.com/pull/badge/signed)](https://cla.opensource.microsoft.com/PowerShell/PowerShell?pullRequest=5525) <br/>All CLA requirements met.",
      "created_at": "2017-11-22T08:23:34Z",
      "updated_at": "2017-11-22T08:25:26Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "I'm curious if this is even the right direction. Doesn't `Stop-Service -Force` do this already? Shouldn't `Set-Service` _only_ support a a very basic stop? The `-Status` on `Set-Service` is redundant to `stop-service` which _should be_ the de facto way to stop services. ",
      "created_at": "2017-11-22T13:38:13Z",
      "updated_at": "2017-11-22T13:38:13Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "We have a similar question in #5471",
      "created_at": "2017-11-22T18:21:29Z",
      "updated_at": "2017-11-22T18:21:29Z"
    },
    {
      "author": "zhenggu",
      "author_association": "CONTRIBUTOR",
      "body": "I think it is necessary to remove the ServicesDependedOn check for it will block the normal function. and for parameter \"Force\", we can discuss it in other thread, if the parameter may be not acceptable.",
      "created_at": "2017-11-23T01:16:05Z",
      "updated_at": "2017-11-23T01:16:05Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT Could you please review the PR with #5471 on PowerShell committee?",
      "created_at": "2017-11-23T04:05:42Z",
      "updated_at": "2017-11-23T04:05:42Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Yes, `Set-Service -Status` duplicates `Start-Service` / `Resume-Service` / `Stop-Service` / `Suspend-Service` functionality, but:\r\n\r\n* it is a one-stop solution with more of a _desired-state_ feel.\r\n* it offers functionality that `Start-Service` doesn't have: if the target service's startup mode is currently `Disabled`, `Start-Service` invariably fails. By contrast, you can use `Set-Service -StartupType Manual -State Running` in such a case, for instance.\r\n\r\nOn the flip side, it currently doesn't support `-Force` in order to stop a service that have _dependents_ - which I think should be fixed too.\r\n\r\nAs for the issue at hand:\r\n\r\nPreventing a service from stopping because _it_ depends on other services - as opposed  to having _other services_ depend on it (having _dependents_) - is an arbitrary and nonsensical restriction.\r\n\r\nI presume it was introduced based on a misconception and should therefore be removed, which will make `-Status Stopped` work as expected, as long as the target service doesn't have dependents.\r\n\r\n@iSazonov: How is #5471 related to this?",
      "created_at": "2017-11-23T16:09:54Z",
      "updated_at": "2017-11-23T16:10:25Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@mklement0 Thanks for useful comments!\r\n> How is #5471 Start-Process: add parameter 'ExitTimeout' related to this?\r\n\r\nDesign review needed.",
      "created_at": "2017-11-23T17:16:30Z",
      "updated_at": "2017-11-23T17:16:30Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@mklement0 \r\n\r\n> it is a one-stop solution with more of a desired-state feel.\r\n\r\nYea, but stopping a service is NOT setting a service. We have specific verbs for that kind of action. if there is a current bug in how it operates, that should be fixed, but adding `-force` for `set-` to only affect the `stop` is ridiculous. We have the `stop` verb, use it for advanced stop functionality. If you can get away with basic stop on `set`, so be it, that's what `stop` is for. If I could go back in time I would say the `set` verb should not have had this functionality to begin with. if it did, then the `stop` verb should not have been included.\r\n\r\nOn your second point about `start-service`, I will say that `set` is _also_ not `start` and including it originally is silly, IMO. The correction there is to add a `-force` to `start` if it is not already there that enables the service if it is not disabled and starts any services it depends on. \r\n\r\nI'm just trying to keep things simple here and it seems like this PR is going in the wrong direction from simple. There is nothing wrong with doing something like `set-service @params -PassThru | stop-service` or `set-service @params -PassThru | start-service`. That keeps to the _do one thing_ philosophy. increasing complexity in a command to do another thing when there is another command that does that one thing is an odd design choice. (setting aside any perceived convenience in doing so). ",
      "created_at": "2017-11-23T17:54:20Z",
      "updated_at": "2017-11-23T17:54:20Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "I don't why it was decided to provide duplicate functionality in `Set-Service`, but given that it was:\r\n\r\n* fixing the bug is a must, as we agree.\r\n\r\n* however, _not_ duplicating _all_ the functionality seems silly, if adding `-Force` is all that it takes, especially given that, as demonstrated, in other aspects it can do _more_ than one of its counterparts.  \r\n(On a side note: status value `suspended` should probably be added as an alias for `paused`).\r\n\r\nAdding a `-Force` switch to `Start-Service` is _not_ a solution, because there is no sensible default for the _startup type_ that invariably has to change in that case - unless you add `-StartupType` to `Start-Service` too, but that would then duplicate what `Set-Service` already does.\r\n\r\nYes, you can argue that the `-Status` parameter should never have been implemented, but, looking at the bigger picture, the `Set` verb has always had desired-state aspects in certain cmdlets, resulting in duplication as well; two examples:\r\n\r\n* You can use `Set-Variable` without ever having to touch `New-Variable` - the variable is created on demand.\r\n\r\n* You can use `Set-Content` to create a file on demand, without needing to use `New-Item`.\r\n\r\nAnd, finally, another aspect in which `Set-Service -Status` provides extra (again, desired-state) functionality is that `-Status Running` either _starts_ or _resumes_ (continues) a service, as appropriate, whereas applying `Start-Service` to a suspended (paused) service results in an error.\r\n\r\n\r\n\r\n",
      "created_at": "2017-11-23T19:21:40Z",
      "updated_at": "2017-11-23T19:21:40Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "> however, not duplicating all the functionality seems silly,\r\n\r\nNo, it doesn't at all. `Set-` is for setting, `Stop-`  is for stopping. if the ability to stop on `set-` goes beyond anything basic, you should use `stop-`. The ability to stop on `set-` is a convenience that arguably should not be there (and I'm not advocating for its removal, for clarity).\r\n\r\nTell me, absent `-Status Stopped`, what purposed does `-Force` have? If I see `-Force` on `Set-Service` is expect it to allow me to force service settings. In this case, the only thing force is good for is stopping the service. We already  have `Stop-Service -Force` for that. For desired state, you are not likely going to be forcing the service to stop.  Again, this adds complexity and redundancy, and I'm arguing for simplicity.\r\n\r\nEdit: as a compromise, if everyone really thinks that having `set-` force stop a service is not as crazy as I think it is, how about `-Status StoppedForced` or something instead of `-Force` switch that only works for a specific single value on a single parameter?\r\n\r\n> Adding a -Force switch to Start-Service is not a solution, because there is no sensible default for the startup type that invariably has to change in that case \r\n\r\nI disagree, setting it to manual, when you are \"manually\" forcing the service to start certainly serves as a sensible setting. But this is a discussion for another time, lets not continue it in this thread.",
      "created_at": "2017-11-23T20:30:38Z",
      "updated_at": "2017-11-23T20:35:49Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov committee is on taking time off this week for Thanksgiving (US holiday), will resume next week",
      "created_at": "2017-11-23T21:14:26Z",
      "updated_at": "2017-11-23T21:14:26Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee reviewed this.  Given that `-Status Stopped` is already there, it would make sense to support `-Force` for `Set-Service`",
      "created_at": "2018-01-04T00:02:26Z",
      "updated_at": "2018-01-04T00:02:26Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@zhenggu  Please add tests at : https://github.com/PowerShell/PowerShell/blob/master/test/powershell/Modules/Microsoft.PowerShell.Management/Set-Service.Tests.ps1",
      "created_at": "2018-02-01T19:02:08Z",
      "updated_at": "2018-02-01T19:02:08Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT I would like the comittee to reconsider the approval of `-Force` for this PR. RE: https://github.com/PowerShell/PowerShell/pull/6113#discussion_r167348028 and a few other discussions we have had here. The `-Force` in this PR not only applies to a single parameter, it also only applies to a single option for that parameter. I still believe including a `ForceStopped` or `StoppedForced` option for `-Status` is the better design choice and that we should avoid `-Force` abuse.",
      "created_at": "2018-02-09T22:59:41Z",
      "updated_at": "2018-02-09T23:00:16Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee reviewed this.  The only applicable parameter to `-Force` is `-Status` (when value is `Stopped`) and there's no applicability to other parameters for this cmdlet.  The usage is consistent with other cmdlets like `Stop-Service`, so committee continues to recommend using `-Force` for this case.",
      "created_at": "2018-02-21T23:36:55Z",
      "updated_at": "2018-02-21T23:36:55Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@zhenggu Thanks for your contribution. Please add the PR submission template and update the appropriate fields. https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission",
      "created_at": "2018-02-22T19:52:20Z",
      "updated_at": "2018-02-22T19:52:20Z"
    },
    {
      "author": "stale[bot]",
      "author_association": "NONE",
      "body": "This PR has been automatically marked as stale because it has not had activity in the last 30 days. It will be closed if no further activity occurs within 10 days. Thank you for your contributions.\n",
      "created_at": "2018-03-24T20:47:45Z",
      "updated_at": "2018-03-24T20:47:45Z"
    },
    {
      "author": "stale[bot]",
      "author_association": "NONE",
      "body": "This PR has be automatically close because it is stale. If you wish to continue working on the PR, please first update the PR, then reopen it.\nThanks again for your contribution.\nCommunity members are welcome to grab these works.\n",
      "created_at": "2018-04-03T22:18:59Z",
      "updated_at": "2018-04-03T22:18:59Z"
    },
    {
      "author": "zhenggu",
      "author_association": "CONTRIBUTOR",
      "body": "I want to reopen this PR, but how can I do it?",
      "created_at": "2018-07-02T14:04:47Z",
      "updated_at": "2018-07-02T14:06:36Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@zhenggu The PR is reopened. Thanks!",
      "created_at": "2018-07-02T14:37:30Z",
      "updated_at": "2018-07-02T14:37:30Z"
    },
    {
      "author": "zhenggu",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks @iSazonov ",
      "created_at": "2018-07-02T14:42:25Z",
      "updated_at": "2018-07-02T14:42:25Z"
    },
    {
      "author": "zhenggu",
      "author_association": "CONTRIBUTOR",
      "body": "any idea about CodeFactor issues? Seems no issue is caused by my code.",
      "created_at": "2018-07-02T15:01:22Z",
      "updated_at": "2018-07-02T15:01:22Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@zhenggu You must fix style issues in new code and changed code but you shouldn't fix all CodeFactor issues.",
      "created_at": "2018-07-02T15:11:36Z",
      "updated_at": "2018-07-02T15:11:48Z"
    },
    {
      "author": "zhenggu",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov got it, I will take care of this",
      "created_at": "2018-07-02T15:14:59Z",
      "updated_at": "2018-07-02T15:14:59Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I don't see style errors in your code.",
      "created_at": "2018-07-02T15:18:46Z",
      "updated_at": "2018-07-02T15:18:46Z"
    },
    {
      "author": "zhenggu",
      "author_association": "CONTRIBUTOR",
      "body": "one question, There are many test cases uses pwsh.exe as the the binary file of the service in Set-Service.Tests.ps1, but actually we cannot run pwsh.exe as a service for it will not response any thing to the OS. As in this way, can I implement a new service by powershell to test the stop case, or I can just use wuauserv in #5517 as the service.",
      "created_at": "2018-07-03T10:52:53Z",
      "updated_at": "2018-07-03T10:52:53Z"
    },
    {
      "author": "zhenggu",
      "author_association": "CONTRIBUTOR",
      "body": "I have added one test case to check -Status Stopped can run normally to stop wuauserv.",
      "created_at": "2018-07-03T11:52:38Z",
      "updated_at": "2018-07-03T11:52:38Z"
    },
    {
      "author": "zhenggu",
      "author_association": "CONTRIBUTOR",
      "body": "Hi @iSazonov, can you please help to review again.",
      "created_at": "2018-07-03T13:40:29Z",
      "updated_at": "2018-07-03T13:40:29Z"
    },
    {
      "author": "zhenggu",
      "author_association": "CONTRIBUTOR",
      "body": "It will be difficult to add test cases -Force parameter, for I cannot find two services which has dependency relationship, and I can stop them both without any impact to the test windows server. Any suggestion?",
      "created_at": "2018-07-04T01:01:28Z",
      "updated_at": "2018-07-04T01:01:28Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "We could create simple custom services for the test.",
      "created_at": "2018-07-06T03:44:53Z",
      "updated_at": "2018-07-06T03:44:53Z"
    },
    {
      "author": "zhenggu",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov So can I put my custom service into test\\powershell\\Modules\\Microsoft.PowerShell.Management\\assets? And is there any variable which points to the source code base directory in the test case?",
      "created_at": "2018-07-06T05:42:37Z",
      "updated_at": "2018-07-06T05:45:40Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I guess it will be binary test module in `/test/tools/`. I can look WebListener as a sample.",
      "created_at": "2018-07-06T07:46:22Z",
      "updated_at": "2018-07-06T07:46:22Z"
    },
    {
      "author": "zhenggu",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov Thanks very much",
      "created_at": "2018-07-06T07:48:53Z",
      "updated_at": "2018-07-06T07:48:53Z"
    },
    {
      "author": "zhenggu",
      "author_association": "CONTRIBUTOR",
      "body": "Have added one TestService written in C, but still don't know how to let the whole project call this CMakeFile.txt. And if it is called, will it be built in the same directory as pwsh? Please help to confirm them, and then I can continue. Thanks",
      "created_at": "2018-07-07T07:07:51Z",
      "updated_at": "2018-07-07T07:07:51Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@adityapatwardhan @JamesWTruher Could you please help? Perhaps there is more simple way to create test windows services to test *-Service cmdlets.",
      "created_at": "2018-07-07T19:29:53Z",
      "updated_at": "2018-07-07T19:29:53Z"
    },
    {
      "author": "zhenggu",
      "author_association": "CONTRIBUTOR",
      "body": "For I don't find a way to add a custom service, remove force flag and do the bug fix first.",
      "created_at": "2018-07-20T02:34:28Z",
      "updated_at": "2018-07-20T02:34:28Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@zhenggu You could look https://www.c-sharpcorner.com/UploadFile/naresh.avari/develop-and-install-a-windows-service-in-C-Sharp/",
      "created_at": "2018-07-20T03:38:01Z",
      "updated_at": "2018-07-20T03:38:01Z"
    },
    {
      "author": "zhenggu",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks @iSazonov for your always support.",
      "created_at": "2018-07-20T14:40:44Z",
      "updated_at": "2018-07-20T14:40:44Z"
    },
    {
      "author": "zhenggu",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov there is one interesting thing that when I try your way, System.ServiceProcess.ServiceBase is only provided by .net framework, not .net core, according: http://dotnet.github.io/dotnet-web/api/System.ServiceProcess.html, it seems there is one RP of dotnet to add this: https://github.com/dotnet/corefx/pull/22920, but it is in minestone 2.1.0, and we are still using 2.0.0 according the build document.",
      "created_at": "2018-07-20T15:39:10Z",
      "updated_at": "2018-07-20T15:57:28Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "\n\n\n\n___\n*[test/powershell/Modules/Microsoft.PowerShell.Management/Set-Service.Tests.ps1, line 339 at r4](https://reviewable.io/reviews/powershell/powershell/5525#-LH_-He4I8g9HrQL5aD_-r4-339:-LHtLs069CnpE2ecDup9:bjsymdu) ([raw file](https://github.com/powershell/powershell/blob/f1e071f695ced8272b3238fffb493c3c59f3ab16/test/powershell/Modules/Microsoft.PowerShell.Management/Set-Service.Tests.ps1#L339)):*\n<details><summary><i>Previously, zhenggu wrote\u2026</i></summary><blockquote>\n\nThanks @iSazonov I will modify it.\n</blockquote></details>\n\nI don't think spooler always exists.  Can we add a check if it exists ahead of time and skip the test if it doesn'?\n\n\n<!-- Sent from Reviewable.io -->\n",
      "created_at": "2018-07-20T20:24:04Z",
      "updated_at": "2018-07-20T20:24:04Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "\n\n\n\n___\n*[test/powershell/Modules/Microsoft.PowerShell.Management/Set-Service.Tests.ps1, line 339 at r4](https://reviewable.io/reviews/powershell/powershell/5525#-LH_-He4I8g9HrQL5aD_-r4-339:-LHtMm00CMZZL5JrIva3:bhplow5) ([raw file](https://github.com/powershell/powershell/blob/f1e071f695ced8272b3238fffb493c3c59f3ab16/test/powershell/Modules/Microsoft.PowerShell.Management/Set-Service.Tests.ps1#L339)):*\n<details><summary><i>Previously, TravisEz13 (Travis Plunk) wrote\u2026</i></summary><blockquote>\n\nI don't think spooler always exists.  Can we add a check if it exists ahead of time and skip the test if it doesn'?\n</blockquote></details>\n\nI verified.  I believe this is the minimal set of services:\n```\nStatus   Name               DisplayName\n------   ----               -----------\nRunning  cexecsvc           Container Execution Agent\nRunning  CryptSvc           Cryptographic Services\nRunning  DcomLaunch         DCOM Server Process Launcher\nRunning  Dhcp               DHCP Client\nRunning  DiagTrack          Connected User Experiences and Tele...\nRunning  Dnscache           DNS Client\nRunning  EventLog           Windows Event Log\nStopped  KeyIso             CNG Key Isolation\nStopped  LanmanServer       Server\nRunning  LanmanWorkstation  Workstation\nStopped  lmhosts            TCP/IP NetBIOS Helper\nStopped  mpssvc             Windows Defender Firewall\nStopped  Netlogon           Netlogon\nStopped  NetSetupSvc        Network Setup Service\nRunning  nsi                Network Store Interface Service\nStopped  Power              Power\nRunning  ProfSvc            User Profile Service\nRunning  RpcEptMapper       RPC Endpoint Mapper\nRunning  RpcSs              Remote Procedure Call (RPC)\nRunning  SamSs              Security Accounts Manager\nRunning  Schedule           Task Scheduler\nStopped  seclogon           Secondary Logon\nRunning  SystemEventsBroker System Events Broker\nRunning  TimeBrokerSvc      Time Broker\nStopped  TrustedInstaller   TrustedInstaller\nRunning  UserManager        User Manager\nStopped  VaultSvc           Credential Manager\nStopped  WerSvc             Windows Error Reporting Service\nStopped  WinHttpAutoProx... WinHTTP Web Proxy Auto-Discovery Se...\nStopped  wisvc              Windows Insider Service\n```\n\n\n<!-- Sent from Reviewable.io -->\n",
      "created_at": "2018-07-20T20:26:57Z",
      "updated_at": "2018-07-20T20:26:57Z"
    },
    {
      "author": "zhenggu",
      "author_association": "CONTRIBUTOR",
      "body": "\n\n\n\n___\n*[test/powershell/Modules/Microsoft.PowerShell.Management/Set-Service.Tests.ps1, line 339 at r4](https://reviewable.io/reviews/powershell/powershell/5525#-LH_-He4I8g9HrQL5aD_-r4-339:-LHuP_F023Sv6VE-aUmT:bdsbdpm) ([raw file](https://github.com/powershell/powershell/blob/f1e071f695ced8272b3238fffb493c3c59f3ab16/test/powershell/Modules/Microsoft.PowerShell.Management/Set-Service.Tests.ps1#L339)):*\n<details><summary><i>Previously, TravisEz13 (Travis Plunk) wrote\u2026</i></summary><blockquote>\n\nI verified.  I believe this is the minimal set of services:\n```\nStatus   Name               DisplayName\n------   ----               -----------\nRunning  cexecsvc           Container Execution Agent\nRunning  CryptSvc           Cryptographic Services\nRunning  DcomLaunch         DCOM Server Process Launcher\nRunning  Dhcp               DHCP Client\nRunning  DiagTrack          Connected User Experiences and Tele...\nRunning  Dnscache           DNS Client\nRunning  EventLog           Windows Event Log\nStopped  KeyIso             CNG Key Isolation\nStopped  LanmanServer       Server\nRunning  LanmanWorkstation  Workstation\nStopped  lmhosts            TCP/IP NetBIOS Helper\nStopped  mpssvc             Windows Defender Firewall\nStopped  Netlogon           Netlogon\nStopped  NetSetupSvc        Network Setup Service\nRunning  nsi                Network Store Interface Service\nStopped  Power              Power\nRunning  ProfSvc            User Profile Service\nRunning  RpcEptMapper       RPC Endpoint Mapper\nRunning  RpcSs              Remote Procedure Call (RPC)\nRunning  SamSs              Security Accounts Manager\nRunning  Schedule           Task Scheduler\nStopped  seclogon           Secondary Logon\nRunning  SystemEventsBroker System Events Broker\nRunning  TimeBrokerSvc      Time Broker\nStopped  TrustedInstaller   TrustedInstaller\nRunning  UserManager        User Manager\nStopped  VaultSvc           Credential Manager\nStopped  WerSvc             Windows Error Reporting Service\nStopped  WinHttpAutoProx... WinHTTP Web Proxy Auto-Discovery Se...\nStopped  wisvc              Windows Insider Service\n```\n</blockquote></details>\n\nhave added a pre check of spooler for that.\n\n\n<!-- Sent from Reviewable.io -->\n",
      "created_at": "2018-07-21T01:20:43Z",
      "updated_at": "2018-07-21T01:20:43Z"
    },
    {
      "author": "zhenggu",
      "author_association": "CONTRIBUTOR",
      "body": "\n\n\n\n___\n*[test/powershell/Modules/Microsoft.PowerShell.Management/Set-Service.Tests.ps1, line 339 at r4](https://reviewable.io/reviews/powershell/powershell/5525#-LH_-He4I8g9HrQL5aD_-r4-339:-LHuQBF47l7Xxg8hBaVe:b-896fix) ([raw file](https://github.com/powershell/powershell/blob/f1e071f695ced8272b3238fffb493c3c59f3ab16/test/powershell/Modules/Microsoft.PowerShell.Management/Set-Service.Tests.ps1#L339)):*\n<details><summary><i>Previously, zhenggu wrote\u2026</i></summary><blockquote>\n\nhave added a pre check of spooler for that.\n</blockquote></details>\n\nDone.\n\n\n<!-- Sent from Reviewable.io -->\n",
      "created_at": "2018-07-21T01:20:53Z",
      "updated_at": "2018-07-21T01:20:53Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> there is one interesting thing that when I try your way, System.ServiceProcess.ServiceBase is only provided by .net framework, not .net core, \r\n\r\nThe API is in WCP https://blogs.msdn.microsoft.com/dotnet/2017/11/16/announcing-the-windows-compatibility-pack-for-net-core/ . We use WCP in PowerShell Core and I think we can use it in test module too.",
      "created_at": "2018-07-23T05:12:36Z",
      "updated_at": "2018-07-23T05:12:36Z"
    },
    {
      "author": "zhenggu",
      "author_association": "CONTRIBUTOR",
      "body": "any other thing can I do for this PR?",
      "created_at": "2018-07-31T11:28:06Z",
      "updated_at": "2018-07-31T11:28:06Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@TravisEz13 can you continue your review?",
      "created_at": "2018-07-31T21:37:11Z",
      "updated_at": "2018-07-31T21:37:11Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "\n\n\n\n___\n*[test/powershell/Modules/Microsoft.PowerShell.Management/Set-Service.Tests.ps1, line 358 at r12](https://reviewable.io/reviews/powershell/powershell/5525#-LJGZCwB0vC9VMkxlDvx:-LJGZCwB0vC9VMkxlDvy:byiu53u) ([raw file](https://github.com/powershell/powershell/blob/b31d813af3a8397d3c7e143eabf6d6e4894cc5e2/test/powershell/Modules/Microsoft.PowerShell.Management/Set-Service.Tests.ps1#L358)):*\n> ```PowerShell\n>         (Get-Service $testservicename2).Status | Should -BeExactly \"Stopped\"\n> \n>         # stop a service with running dependent service\n> ```\n\nIt seems that this should be a separate it statement\nand `Set-Service -Status Running $testservicename2 | Should -Not -Throw` should be part of a `BeforeEach`\n\n\n<!-- Sent from Reviewable.io -->\n",
      "created_at": "2018-08-06T23:28:24Z",
      "updated_at": "2018-08-06T23:28:24Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "\n\n\n\n___\n*[test/powershell/Modules/Microsoft.PowerShell.Management/Set-Service.Tests.ps1, line 367 at r12](https://reviewable.io/reviews/powershell/powershell/5525#-LJGZeRZ0bVYrTH-fN6E:-LJGZeR_CuU0b8ReYIES:bfzgfve) ([raw file](https://github.com/powershell/powershell/blob/b31d813af3a8397d3c7e143eabf6d6e4894cc5e2/test/powershell/Modules/Microsoft.PowerShell.Management/Set-Service.Tests.ps1#L367)):*\n> ```PowerShell\n>         (Get-Service $testservicename2).Status | Should -BeExactly \"Running\"\n> \n>         # stop a service with running dependent service by -Force\n> ```\n\nThis looks like a separate `it` as well, maybe a separate `context` because it may have a different `BeforeEach`\n\n\n<!-- Sent from Reviewable.io -->\n",
      "created_at": "2018-08-06T23:30:14Z",
      "updated_at": "2018-08-06T23:30:14Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "\n\n\n\n___\n*[test/tools/TestService/Program.cs, line 1 at r12](https://reviewable.io/reviews/powershell/powershell/5525#-LJGZwHSEqQwrCzQkkY2:-LJGZwHSEqQwrCzQkkY3:bfu1bim) ([raw file](https://github.com/powershell/powershell/blob/b31d813af3a8397d3c7e143eabf6d6e4894cc5e2/test/tools/TestService/Program.cs#L1)):*\n> ```Smalltalk\n> using System.ServiceProcess;\n> ```\n\nmissing copyright headers\n\n\n<!-- Sent from Reviewable.io -->\n",
      "created_at": "2018-08-06T23:30:31Z",
      "updated_at": "2018-08-06T23:30:31Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "\n\n\n\n___\n*[test/tools/TestService/Service1.cs, line 1 at r12](https://reviewable.io/reviews/powershell/powershell/5525#-LJG_0o7CBWx3pl3xu5R:-LJG_0o7CBWx3pl3xu5S:bfu1bim) ([raw file](https://github.com/powershell/powershell/blob/b31d813af3a8397d3c7e143eabf6d6e4894cc5e2/test/tools/TestService/Service1.cs#L1)):*\n> ```Smalltalk\n> using System.ServiceProcess;\n> ```\n\nmissing copyright headers\n\n\n<!-- Sent from Reviewable.io -->\n",
      "created_at": "2018-08-06T23:30:54Z",
      "updated_at": "2018-08-06T23:30:54Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "\n\n\n\n___\n*[test/tools/TestService/Service1.Designer.cs, line 1 at r12](https://reviewable.io/reviews/powershell/powershell/5525#-LJG_5vm9NohwjlVOtYv:-LJG_5vm9NohwjlVOtYw:bfu1bim) ([raw file](https://github.com/powershell/powershell/blob/b31d813af3a8397d3c7e143eabf6d6e4894cc5e2/test/tools/TestService/Service1.Designer.cs#L1)):*\n> ```Smalltalk\n> namespace TestService\n> ```\n\nmissing copyright headers\n\n\n<!-- Sent from Reviewable.io -->\n",
      "created_at": "2018-08-06T23:31:15Z",
      "updated_at": "2018-08-06T23:31:15Z"
    },
    {
      "author": "zhenggu",
      "author_association": "CONTRIBUTOR",
      "body": "@TravisEz13 Please help to review again. Thanks.",
      "created_at": "2018-08-07T07:31:42Z",
      "updated_at": "2018-08-07T07:31:42Z"
    },
    {
      "author": "zhenggu",
      "author_association": "CONTRIBUTOR",
      "body": "Does this PR need another review?",
      "created_at": "2018-08-16T01:25:10Z",
      "updated_at": "2018-08-16T02:36:55Z"
    },
    {
      "author": "anmenaga",
      "author_association": "CONTRIBUTOR",
      "body": "@adityapatwardhan This looks ready for merge.",
      "created_at": "2018-08-21T20:14:43Z",
      "updated_at": "2018-08-21T20:14:43Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@zhenggu Thanks for your contribution. Please add the PR submission template and update the appropriate fields. https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission\r\n\r\nThe template is here: https://github.com/PowerShell/PowerShell/blob/master/.github/PULL_REQUEST_TEMPLATE.md",
      "created_at": "2018-08-22T21:50:14Z",
      "updated_at": "2018-08-22T21:50:14Z"
    },
    {
      "author": "zhenggu",
      "author_association": "CONTRIBUTOR",
      "body": "@adityapatwardhan for this PR adds a \"-Force\" parameter for Set-Service, but I am not sure should I modify https://github.com/PowerShell/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Management/Set-Service.md before this PR merged or it should be changed after it this PR is merged?",
      "created_at": "2018-08-22T23:40:32Z",
      "updated_at": "2018-08-22T23:42:34Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@zhenggu Please open an issue or PR in PowerShell-Docs repo and add the link here.",
      "created_at": "2018-08-23T03:36:36Z",
      "updated_at": "2018-08-23T03:36:36Z"
    },
    {
      "author": "zhenggu",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov Thanks, will add it",
      "created_at": "2018-08-24T02:16:55Z",
      "updated_at": "2018-08-24T02:17:11Z"
    },
    {
      "author": "zhenggu",
      "author_association": "CONTRIBUTOR",
      "body": "@adityapatwardhan have added the document, and all the actions are ready, please help to review.",
      "created_at": "2018-08-27T12:55:27Z",
      "updated_at": "2018-08-27T12:55:27Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@zhenggu  The tests are classified as `Feature` so I pushed an empty commit with `[Feature]` to run all tests. If all tests pass, I will go ahead and merge.",
      "created_at": "2018-08-27T17:33:30Z",
      "updated_at": "2018-08-27T17:33:54Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@zhenggu Please have a look at the failures and for the next commit have `[Feature]` in your commit message to ensure all tests are executed. See [this](https://github.com/PowerShell/PowerShell/blob/56e50ce63279d11ffb0f391fce40091c53a9adbb/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr) for more details.",
      "created_at": "2018-08-27T19:28:13Z",
      "updated_at": "2018-08-27T19:28:13Z"
    },
    {
      "author": "zhenggu",
      "author_association": "CONTRIBUTOR",
      "body": "@adityapatwardhan, all test cases passed, please help to merge.",
      "created_at": "2018-08-28T05:20:47Z",
      "updated_at": "2018-08-28T05:20:47Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@zhenggu Thank you for your contribution!",
      "created_at": "2018-08-28T18:03:35Z",
      "updated_at": "2018-08-28T18:03:35Z"
    },
    {
      "author": "zhenggu",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks everyone's help to my first PR",
      "created_at": "2018-08-28T22:47:36Z",
      "updated_at": "2018-08-28T22:49:30Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@zhenggu Thanks for your contribution and patience! I hope you will continue.",
      "created_at": "2018-08-29T06:10:52Z",
      "updated_at": "2018-08-29T06:10:52Z"
    }
  ],
  "created_at": "2017-11-22T08:23:26Z",
  "number": 5525,
  "state": "closed",
  "title": "Fix Set-Service -Status Stopped runs failed on the service with dependencies ",
  "updated_at": "2018-08-29T06:10:52Z"
}