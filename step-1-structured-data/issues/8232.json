{
  "_url": "https://github.com/PowerShell/PowerShell/issues/8232",
  "author": "SteveL-MSFT",
  "body": "## PR Summary\r\n\r\nThere a some differences in support of named pipes for Windows and non-Windows.  Named pipes on Unix have a 104 character path limit.  On macOS, the `$env:TMPDIR` (on my system) is already 49 characters; corefx adds 12 more.  Since AppDomainName isn't really used, changed it from `DefaultAppDomain` to `None` to shorten the name.  Need to keep it since Windows PowerShell expects it.  Changed `starttime` part of pipe name to 8 hex characters which is to provide uniqueness to the pipe name.\r\n\r\nFix https://github.com/PowerShell/PowerShell/issues/5110\r\nPossibly also fix 6435, but need verification. https://github.com/PowerShell/PowerShell/issues/6435\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` to the beginning of the title and remove the prefix when the PR is ready.\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [ ] User-facing [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed - Issue link:\r\n- **Testing - New and feature**\r\n    - [ ] Not Applicable or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n        - [ ] [Add `[feature]` if the change is significant or affects feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\r\n",
  "closed_at": "2018-11-15T20:50:05Z",
  "comments": [
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT \r\n\r\nRegarding the server named pipe dispose, this is done in WindowsPowerShell via the CLR AppDomain unload event, which is not supported on CORECLR.  However, you can use the AppDomain.CurrentDomain.ProcessExit event that we use for AMSI un-initializing.  Unfortunately, these CLR events are not reliable, but they are better than nothing.\r\n\r\nThe start time added to the filename is intended to make the named pipe instance unique, to prevent a DOS or man-in-the-middle attack.  We will want to keep something like this, even if it means using something shorter.",
      "created_at": "2018-11-12T18:01:58Z",
      "updated_at": "2018-11-12T18:01:58Z"
    },
    {
      "author": "TylerLeonhardt",
      "author_association": "MEMBER",
      "body": "I love when a PR has more deletions than insertions yet more functionality ",
      "created_at": "2018-11-12T19:15:03Z",
      "updated_at": "2018-11-12T19:15:15Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "As for the domain name, do we really need it for the pipe name? Is multiple domain is going to be supported in .NET Core 3.0?\r\n\r\nI have no problem keeping it for now until we get an accurate answer for the app domain support.",
      "created_at": "2018-11-13T22:58:21Z",
      "updated_at": "2018-11-13T22:58:21Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@daxian-dbw best I can tell, AppDomains are deprecated in .Net Core and not in the roadmap I can see for 3.0.  So it may be fine to remove it for non-Windows.  We'll have to keep it for Windows so that Windows PowerShell and PowerShell Core interop still works however.",
      "created_at": "2018-11-13T23:21:02Z",
      "updated_at": "2018-11-13T23:21:02Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "Yes, I have proposed dropping the Domain name.  If it gets supported again in dotNet Core then we can add it back.",
      "created_at": "2018-11-13T23:27:02Z",
      "updated_at": "2018-11-13T23:27:02Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "To retain interoperability between Windows PowerShell and keep the code similar between Windows and non-Windows, I'll shorten the DefaultAppDomainName to 'none' but will keep it in the pipe name.",
      "created_at": "2018-11-14T02:13:28Z",
      "updated_at": "2018-11-14T02:13:28Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT I forgot about maintaining compatibility with Windows PowerShell.  We definitely need to ensure we can still list/parse/connect to those hosts.",
      "created_at": "2018-11-14T19:29:51Z",
      "updated_at": "2018-11-14T19:29:51Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Ugh, with the changes I've made since, I can't connect to/from Windows PowerShell and PowerShell Core.  Debugging.",
      "created_at": "2018-11-14T20:57:09Z",
      "updated_at": "2018-11-14T20:57:09Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Looks like DefaultAppDomain is necessary on Windows as there is a check for that string and the starttime needs to stay as filetime integers on Windows to support interop between Windows PowerShell and PowerShell Core.  I believe everything else is addressed.  @PaulHigin  can you take another look?",
      "created_at": "2018-11-14T21:05:50Z",
      "updated_at": "2018-11-14T21:05:50Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT  Yeah, for Windows we need to keep the DomainName to be able to connect to WindowsPowerShell host, and that means keeping the default domain name for Windows platform pipe names.",
      "created_at": "2018-11-14T22:09:39Z",
      "updated_at": "2018-11-14T22:09:39Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PaulHigin yes, the recent commit has the same DefaultAppDomainName and starttime format on Windows and I verified manually it works from and to Windows PowerShell",
      "created_at": "2018-11-14T22:12:02Z",
      "updated_at": "2018-11-14T22:12:02Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PaulHigin good suggestion.  Let me add a test for Windows PowerShell interop.",
      "created_at": "2018-11-15T01:32:49Z",
      "updated_at": "2018-11-15T01:32:49Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@SteveL-MSFT, there are tests about `Enter-PSHostProcess` failing in AppVeyor, can you please take a look?",
      "created_at": "2018-11-15T20:17:02Z",
      "updated_at": "2018-11-15T20:17:02Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@daxian-dbw it appears to be a problem with redirected input with PSReadLine and only on AppVeyor.  We're moving off AppVeyor (eventually), so I think we can ignore this otherwise we'll have to special case this by perhaps removing PSReadLine for this test",
      "created_at": "2018-11-15T20:30:44Z",
      "updated_at": "2018-11-15T20:30:44Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Given @SteveL-MSFT's clarification on the AppVeyor test failure, I'm merging this PR.",
      "created_at": "2018-11-15T20:33:40Z",
      "updated_at": "2018-11-15T20:33:40Z"
    }
  ],
  "created_at": "2018-11-11T22:19:44Z",
  "number": 8232,
  "state": "closed",
  "title": "Support `Get-PSHostProcessInfo` and `Enter-PSHostProcess` on non-Windows",
  "updated_at": "2020-03-10T21:02:02Z"
}