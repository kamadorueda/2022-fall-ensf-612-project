{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7116",
  "author": "tlindsay42",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\n- Windows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nIf it is a bug report:\r\n- make sure you are able to repro it on the latest released version. \r\nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n- Fill out the following repro template:\r\n\r\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\r\n-->\r\n\r\nSteps to reproduce\r\n------------------\r\nFrom @mklement0's great update in  https://github.com/PowerShell/PowerShell/issues/7107#issuecomment-398414775\r\n> Applying `.ToString()` directly always yields the empty string:\r\n> ```powershell\r\n> PS> '' -eq (Get-Help Get-ChildItem).ToString()\r\n> True\r\n> ```\r\n>\r\n> By contrast, implicit stringification - which happens inside \"...\" and when piping to a string-binding cmdlet such as Select-Object - produces the equivalent of .psobject.ToString();\r\n>\r\n> ```powershell\r\n> PS> (Get-Help Get-ChildItem).psobject.ToString()\r\n> @{alertSet=@{alert=System.Management.Automation.PSObject[]}; inputTypes=@{inputType=@{type=@{name=System.String}; description=System.Management.Automation.PSObject[]}}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; details=@{verb=Get; noun=ChildItem; description=System.Management.Automation.PSObject[]; name=Get-ChildItem}; parameters=@{parameter=System.Management.Automation.PSObject[]}; examples=@{example=System.Management.Automation.PSObject[]}; returnValues=@{returnValue=System.Management.Automation.PSObject[]}; syntax=@{syntaxItem=System.Management.Automation.PSObject[]}; description=System.Management.Automation.PSObject[]; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; xmlns:MSHelp=http://msdn.microsoft.com/mshelp; Name=Get-ChildItem; Category=Cmdlet; Synopsis=Gets the items and child items in one or more specified locations.; Component=; Role=; Functionality=; PSSnapIn=; ModuleName=Microsoft.PowerShell.Management}\r\n> ```\r\n>\r\n> In fact, this behavior is tied to type `[pscustomobject]`, which is what `Get-Help` outputs: #6163 asks for `.ToString()` and `.psobject.ToString()` to be the same, though in the specific case of Get-Help output you could argue that the ETS should be used to provide a `.ToString()` method that renders the help text (an implicit Out-String).\r\n\r\nExpected behavior\r\n-----------------\r\n`( Get-Help -Name $cmdletName ).ToString()` should return the help content in a `[string]` object.\r\n\r\nActual behavior\r\n---------------\r\n`( Get-Help -Name $cmdletName ).ToString()` returns a `$null` string (eg: `''`).\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\nPS C:\\> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.1.0-preview.3\r\nPSEdition                      Core\r\nGitCommitId                    v6.1.0-preview.3\r\nOS                             Microsoft Windows 10.0.14393\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\nPS C:\\> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.2\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.2\r\nOS                             Microsoft Windows 10.0.14393\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\nReferences:\r\n* #7107 \r\n* #6163",
  "closed_at": null,
  "comments": [
    {
      "author": "BrucePay",
      "author_association": "COLLABORATOR",
      "body": "The `.ToString()` on `PSCustomObject` explicitly returns an empty string which is pretty much useless.  Having `PSCustomObject.ToString()` do what `PSObject.ToString()` does makes sense. Note - this is a breaking change as there is a slim possibility that people might use `.ToString() -eq ''` to detect `PSCustomObject`.\r\n\r\nFor help objects specifically, which are \"typeless\" `PSCustomObjects`, `Get-Help` could add a script method to each instance it emits along the lines of\r\n```powershell\r\nAdd-Member -Force -InputObject $h ScriptMethod ToString {$this | Out-String }\r\n```\r\nso that `.ToString()` would render the help object as a formatted string.",
      "created_at": "2018-06-19T23:29:29Z",
      "updated_at": "2018-06-19T23:29:29Z"
    }
  ],
  "created_at": "2018-06-19T17:56:29Z",
  "labels": [
    "Issue-Enhancement",
    "WG-Interactive-HelpSystem"
  ],
  "number": 7116,
  "state": "open",
  "title": "Unexpected stringification behavior of Get-Help output",
  "updated_at": "2018-06-19T23:29:41Z"
}