{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15330",
  "author": "AjKundnani",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 and PowerShell 7+ issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6).\r\n\r\n-->\r\n\r\n## Steps to reproduce\r\n\r\n```powershell\r\nGet-PackageProvider\r\nGet-PSRepository\r\n```\r\n\r\n## Expected behavior\r\n\r\n```\r\nName                     Version          DynamicOptions\r\n----                     -------          --------------\r\nNuGet                    3.0.0.1          Destination, ExcludeVersion, Scope, SkipDependencies, Headers, FilterOnTag, Contains, AllowPrereleaseVersions, ConfigFile, SkipValidate\r\nPowerShellGet            2.2.5.0          PackageManagementProvider, Type, Scope, AllowClobber, SkipPublisherCheck, InstallUpdate, NoPathUpdate, AllowPrereleaseVersions, Filter, Tag, Includes, DscR\r\n\r\nName                      InstallationPolicy   SourceLocation\r\n----                      ------------------   --------------\r\nPSGallery                 Untrusted            https://www.powershellgallery.com/api/v2\r\n```\r\n\r\n## Actual behavior\r\n\r\n```\r\nGet-PackageProvider: Unhandled Exception - Message:'The type initializer for 'Microsoft.PackageManagement.Internal.Utility.Extensions.FilesystemExtensions' threw an exception.' Name\r\n:'TypeInitializationException' Stack Trace:'   at Microsoft.PackageManagement.Internal.Utility.Extensions.FilesystemExtensions.MakeSafeFileName(String input)\r\n   at Microsoft.PackageManagement.Internal.Utility.Plugin.DynamicType.DefineDynamicType(Type interfaceType)\r\n   at Microsoft.PackageManagement.Internal.Utility.Plugin.DynamicType..ctor(Type interfaceType, OrderedDictionary`2 methods, List`2 delegates, List`1 stubs)\r\n   at Microsoft.PackageManagement.Internal.Utility.Plugin.DynamicType.<>c__DisplayClass9_0.<Create>b__3()\r\n   at Microsoft.PackageManagement.Internal.Utility.Extensions.DictionaryExtensions.GetOrAdd[TKey,TValue](IDictionary`2 dictionary, TKey key, Func`1 valueFunction)\r\n   at Microsoft.PackageManagement.Internal.Utility.Plugin.DynamicType.Create(Type tInterface, OrderedDictionary`2 instanceMethods, List`2 delegateMethods, List`1 stubMethods, List`2\r\nusedInstances)\r\n   at Microsoft.PackageManagement.Internal.Utility.Plugin.DynamicInterface.CreateProxy(Type tInterface, Object[] instances)\r\n   at Microsoft.PackageManagement.Internal.Utility.Plugin.DynamicInterface.DynamicCast(Type tInterface, Object[] instances)\r\n   at Microsoft.PackageManagement.Internal.Utility.Plugin.DynamicInterface.DynamicCast[TInterface](Object[] instances)\r\n   at Microsoft.PackageManagement.Internal.Utility.Plugin.DynamicInterfaceExtensions.As[TInterface](Object instance)\r\n   at Microsoft.PowerShell.PackageManagement.Cmdlets.CmdletBase.get_PackageManagementHost()\r\n   at Microsoft.PowerShell.PackageManagement.Cmdlets.CmdletBase.SelectProviders(String[] names)\r\n   at Microsoft.PowerShell.PackageManagement.Cmdlets.GetPackageProvider.ProcessRecordAsync()\r\n   at Microsoft.PowerShell.PackageManagement.Cmdlets.AsyncCmdlet.<>c__DisplayClass83_0.<AsyncRun>b__0()'\r\n\r\nDEBUG: 00:00:00.0000001 Calling ImportPackageProvider. providerName = 'PowerShellGet', requiredVersion='', minimumVersion = '', maximumVersion=''\r\nDEBUG: 00:00:00.0001182 Calling ImportPackageProviderViaName. providerName = 'PowerShellGet', requiredVersion='', minimumVersion = '', maximumVersion=''\r\nVERBOSE: PowerShell meta provider initialization failed.\r\nVERBOSE: No match was found for the specified search criteria and provider name 'PowerShellGet'. Try 'Get-PackageProvider -ListAvailable' to see if the provider exists on the system\r\n.\r\nGet-PackageSource: /opt/microsoft/powershell/7/Modules/PowerShellGet/PSModule.psm1:9539\r\nLine |\r\n9539 |  \u2026 ckageSources = PackageManagement\\Get-PackageSource @PSBoundParameters\r\n     |                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n     | Unable to find module providers (PowerShellGet).\r\n\r\n```\r\n\r\n## Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.3\r\nPSEdition                      Core\r\nGitCommitId                    7.1.3\r\nOS                             Linux 5.4.0-1046-azure #48-Ubuntu SMP Tue Apr 1\u2026\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\n## Network Connectivity to powershellgallery.com\r\nI am able to connect https://www.powershellgallery.com/api/v2 successfully, proxy is bypassed for this connection, on same network PowerShell 7.1.3 works fine with Ubuntu 18.04 distribution\r\n\r\n```\r\n*   Trying 168.61.186.235:443...\r\n* TCP_NODELAY set\r\n* Connected to www.powershellgallery.com (168.61.186.235) port 443 (#0)\r\n* ALPN, offering h2\r\n* ALPN, offering http/1.1\r\n* successfully set certificate verify locations:\r\n```",
  "closed_at": "2021-05-05T00:00:08Z",
  "comments": [
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "[Here](https://github.com/OneGet/oneget/blob/08ae6e82df2230a601ed09191b26712b213afbc5/src/Microsoft.PackageManagement/Utility/Extensions/FilesystemExtensions.cs#L252)'s where your stack trace points to.\n\nHowever, given the type of exception, I'm guessing the actual issue lies with [this method](https://github.com/OneGet/oneget/blob/08ae6e82df2230a601ed09191b26712b213afbc5/src/Microsoft.PackageManagement/Utility/Extensions/FilesystemExtensions.cs#L121).\n\nWe'd probably get a better stack trace if we could call that method directly. All we need to do is use some reflection to get the type. I can provide code in a bit.",
      "created_at": "2021-04-30T13:09:29Z",
      "updated_at": "2021-04-30T13:09:29Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "```powershell\r\n# Ensure the PackageManagement module is loaded so we have the assembly loaded\r\nImport-Module PackageManagement\r\n\r\n# Get the needed internal type\r\n$type = [Microsoft.PackageManagement.Internal.Utility.Versions.FourPartVersion].Assembly.GetType('Microsoft.PackageManagement.Internal.Utility.Extensions.FilesystemExtensions')\r\n\r\n# Now call the method\r\n$type::ResetTempFolder()\r\n\r\n# If there's an error, use this to display it fully\r\nGet-Error\r\n```",
      "created_at": "2021-04-30T14:24:50Z",
      "updated_at": "2021-04-30T14:24:50Z"
    },
    {
      "author": "AjKundnani",
      "author_association": "NONE",
      "body": "> ```powershell\r\n> # Ensure the PackageManagement module is loaded so we have the assembly loaded\r\n> Import-Module PackageManagement\r\n> \r\n> # Get the needed internal type\r\n> $type = [Microsoft.PackageManagement.Internal.Utility.Versions.FourPartVersion].Assembly.GetType('Microsoft.PackageManagement.Internal.Utility.Extensions.FilesystemExtensions')\r\n> \r\n> # Now call the method\r\n> $type::ResetTempFolder()\r\n> \r\n> # If there's an error, use this to display it fully\r\n> Get-Error\r\n> ```\r\n\r\nThanks Rob\r\n\r\n### PSHome\r\n/opt/microsoft/powershell/7\r\n\r\n### Error for $type::ResetTempFolder()\r\n```\r\nMethodInvocationException: Exception calling \"ResetTempFolder\" with \"0\" argument(s): \"The type initializer for 'Microsoft.PackageManagement.Internal.Utility.Extensions.FilesystemExt\r\nensions' threw an exception.\"\r\n```\r\n\r\n### Output for Get-Error\r\n```\r\nException             :\r\n    Type           : System.Management.Automation.MethodInvocationException\r\n    ErrorRecord    :\r\n        Exception             :\r\n            Type    : System.Management.Automation.ParentContainsError\r\nRecordException\r\n            Message : Exception calling \"ResetTempFolder\" with \"0\" arg\r\nument(s): \"The type initializer for 'Microsoft.PackageManagement.Internal.Utili\r\nty.Extensions.FilesystemExtensions' threw an exception.\"\r\n            HResult : -2146233087\r\n        CategoryInfo          : NotSpecified: (:) [], ParentContainsEr\r\nrorRecordException\r\n        FullyQualifiedErrorId : TypeInitializationException\r\n        InvocationInfo        :\r\n            ScriptLineNumber : 1\r\n            OffsetInLine     : 1\r\n            HistoryId        : -1\r\n            Line             : $type::ResetTempFolder()\r\n            PositionMessage  : At line:1 char:1\r\n                               + $type::ResetTempFolder()\r\n                               + ~~~~~~~~~~~~~~~~~~~~~~~~\r\n            CommandOrigin    : Internal\r\n        ScriptStackTrace      : at <ScriptBlock>, <No file>: line 1\r\n    TargetSite     :\r\n        Name          : ConvertToMethodInvocationException\r\n        DeclaringType : System.Management.Automation.ExceptionHandling\r\nOps, System.Management.Automation, Version=7.1.3.0, Culture=neutral, PublicKeyT\r\noken=31bf3856ad364e35\r\n        MemberType    : Method\r\n        Module        : System.Management.Automation.dll\r\n    StackTrace     :\r\n   at System.Management.Automation.ExceptionHandlingOps.ConvertToMethodInvocati\r\nonException(Exception exception, Type typeToThrow, String methodName, Int32 num\r\nArgs, MemberInfo memberInfo) in /PowerShell/src/System.Management.Automation/en\r\ngine/runtime/Operations/MiscOps.cs:line 2068\r\n   at CallSite.Target(Closure , CallSite , Object )\r\n  at System.Dynamic.UpdateDelegates.UpdateAndExecute1[T0,TRet](CallSite site,\r\nT0 arg0)\r\n   at System.Management.Automation.Interpreter.DynamicInstruction`2.Run(Interpr\r\netedFrame frame) in /PowerShell/src/System.Management.Automation/engine/interpr\r\neter/DynamicInstructions.Generated.cs:line 141\r\n   at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.\r\nRun(InterpretedFrame frame) in /PowerShell/src/System.Management.Automation/eng\r\nine/interpreter/ControlFlowInstructions.cs:line 358\r\n    Message        : Exception calling \"ResetTempFolder\" with \"0\" argu\r\nment(s): \"The type initializer for 'Microsoft.PackageManagement.Internal.Utilit\r\ny.Extensions.FilesystemExtensions' threw an exception.\"\r\n    Data           : System.Collections.ListDictionaryInternal\r\n    InnerException :\r\n        Type           : System.TypeInitializationException\r\n        TypeName       : Microsoft.PackageManagement.Internal.Utility.\r\nExtensions.FilesystemExtensions\r\n        TargetSite     :\r\n            Name          : ResetTempFolder\r\n            DeclaringType : Microsoft.PackageManagement.Internal.Utili\r\nty.Extensions.FilesystemExtensions, Microsoft.PackageManagement, Version=3.0.0.\r\n1, Culture=neutral, PublicKeyToken=31bf3856ad364e35\r\n            MemberType    : Method\r\n            Module        : Microsoft.PackageManagement.dll\r\n        StackTrace     :\r\n   at Microsoft.PackageManagement.Internal.Utility.Extensions.FilesystemExtensi\r\nons.ResetTempFolder()\r\n   at CallSite.Target(Closure , CallSite , Object )\r\n        Message        : The type initializer for 'Microsoft.PackageMa\r\nnagement.Internal.Utility.Extensions.FilesystemExtensions' threw an exception.\r\n        InnerException :\r\n            Type           : System.UnauthorizedAccessException\r\n            TargetSite     :\r\n                Name          : CreateDirectoryHandle\r\n                DeclaringType : System.IO.Enumeration.FileSystemEnumer\r\nator`1[TResult]\r\n                MemberType    : Method\r\n                Module        : System.IO.FileSystem.dll\r\n            StackTrace     :\r\n   at System.IO.Enumeration.FileSystemEnumerator`1.CreateDirectoryHandle(String\r\npath, Boolean ignoreNotFound)\r\n   at System.IO.Enumeration.FileSystemEnumerator`1.Init()\r\n   at System.IO.Enumeration.FileSystemEnumerator`1..ctor(String directory, Bool\r\nean isNormalized, EnumerationOptions options)\r\n   at System.IO.Enumeration.FileSystemEnumerable`1..ctor(String directory, Find\r\nTransform transform, EnumerationOptions options, Boolean isNormalized)\r\n   at System.IO.Enumeration.FileSystemEnumerableFactory.UserDirectories(String\r\ndirectory, String expression, EnumerationOptions options)\r\n   at System.IO.Directory.InternalEnumeratePaths(String path, String searchPatt\r\nern, SearchTarget searchTarget, EnumerationOptions options)\r\n   at System.IO.Directory.EnumerateDirectories(String path)\r\n   at Microsoft.PackageManagement.Internal.Utility.Extensions.FilesystemExtensi\r\nons.ResetTempFolder()\r\n   at Microsoft.PackageManagement.Internal.Utility.Extensions.FilesystemExtensi\r\nons..cctor()\r\n            Message        : Access to the path '/tmp/Microsoft.Packag\r\neManagement' is denied.\r\n            InnerException :\r\n                Type    : System.IO.IOException\r\n                Message : Permission denied\r\n                HResult : 13\r\n            Source         : System.IO.FileSystem\r\n            HResult        : -2147024891\r\n        Source         : Microsoft.PackageManagement\r\n        HResult        : -2146233036\r\n    Source         : System.Management.Automation\r\n    HResult        : -2146233087\r\nCategoryInfo          : NotSpecified: (:) [], MethodInvocationException\r\nFullyQualifiedErrorId : TypeInitializationException\r\nInvocationInfo        :\r\n    ScriptLineNumber : 1\r\n    OffsetInLine     : 1\r\n    HistoryId        : -1\r\n    Line             : $type::ResetTempFolder()\r\n    PositionMessage  : At line:1 char:1\r\n                       + $type::ResetTempFolder()\r\n                       + ~~~~~~~~~~~~~~~~~~~~~~~~\r\n    CommandOrigin    : Internal\r\nScriptStackTrace      : at <ScriptBlock>, <No file>: line 1\r\n```",
      "created_at": "2021-04-30T14:48:23Z",
      "updated_at": "2021-04-30T14:48:23Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "> ```\r\n>  Message        : Access to the path '/tmp/Microsoft.PackageManagement' is denied.\r\n>  InnerException :\r\n>     Type    : System.IO.IOException\r\n>      Message : Permission denied\r\n>      HResult : 13\r\n>  Source         : System.IO.FileSystem\r\n>  HResult        : -2147024891\r\n> ```\r\n\r\nAh looks like it might be a permissions issue on `/tmp/Microsoft.PackageManagement`",
      "created_at": "2021-04-30T14:50:31Z",
      "updated_at": "2021-04-30T14:56:31Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "Just for fuller context in case anyone hits issues here:\r\n\r\n- Modules were initially installed as root by an agent on the system\r\n- Later, commands were run by a non-root user and the permissions on `/tmp/Microsoft.PackageManagement` didn't allow for reading\r\n- This was solved with `chmod o+r /tmp/Microsoft.PackageManagement` (or a similar addition of permissions on the directory for other users)\r\n- An issue remains with modules installed to the `AllUsers` directory only being available to `root`",
      "created_at": "2021-04-30T15:19:17Z",
      "updated_at": "2021-04-30T15:19:17Z"
    },
    {
      "author": "AjKundnani",
      "author_association": "NONE",
      "body": "> Just for fuller context in case anyone hits issues here:\r\n> \r\n> * Modules were initially installed as root by an agent on the system\r\n> * Later, commands were run by a non-root user and the permissions on `/tmp/Microsoft.PackageManagement` didn't allow for reading\r\n> * This was solved with `chmod o+r /tmp/Microsoft.PackageManagement` (or a similar addition of permissions on the directory for other users)\r\n> * An issue remains with modules installed to the `AllUsers` directory only being available to `root`\r\n\r\nThanks Rob:\r\n\r\n- `umask` = `0027` (For both Ubuntu 18.04 and Ubuntu 20.04)\r\n- Permissions on `/tmp/Microsoft.PackageManagement` is `1750` (For Ubuntu 20.04) and `1755` (For Ubuntu 18.04) sharing same umask.\r\n- Permsisions on `/usr/local/share/powershell/` is `0750` (For Ubuntu 20.04) and `0755` (For Ubuntu 18.04) sharing same umask.\r\n- Both Ubuntu 18.04 & 20.04 are initiated using **Cloud Init Extension** with same code. However former allows to run modules for all users, latter after modifying permission to match Ubuntu 18.04 permissions works fine.\r\n- Command used to install module in CloudInit = `Install-Module Az -Scope AllUsers -Confirm:$false -Force`",
      "created_at": "2021-04-30T15:30:56Z",
      "updated_at": "2021-04-30T15:39:27Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "Trying to install a module to `AllUsers` as `root` on a fresh 20.04 VM gave me permissions of `755` on a newly installed module there (and the module directory itself), so this may be something idiosyncratic to CloudInit.",
      "created_at": "2021-04-30T15:44:03Z",
      "updated_at": "2021-04-30T15:44:03Z"
    },
    {
      "author": "JamesWTruher",
      "author_association": "MEMBER",
      "body": "yah - umask of 027 is removing access for other which is definitely going to be a problem if the user isn't in the appropriate group.\r\n",
      "created_at": "2021-04-30T16:41:55Z",
      "updated_at": "2021-04-30T16:41:55Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@rjmholt It looks the problem is resolved, so I marked `Resolution-Answered`. Feel free to change the label if there is remaining issues to be looked into.",
      "created_at": "2021-05-03T19:18:39Z",
      "updated_at": "2021-05-03T19:18:39Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2021-05-05T00:00:08Z",
      "updated_at": "2021-05-05T00:00:08Z"
    }
  ],
  "created_at": "2021-04-30T10:56:36Z",
  "labels": [
    "Resolution-Answered"
  ],
  "number": 15330,
  "state": "closed",
  "title": "PackageProvider and PSRepository Broken - Ubuntu 20.04",
  "updated_at": "2021-05-05T00:00:08Z"
}