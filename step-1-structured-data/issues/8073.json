{
  "_url": "https://github.com/PowerShell/PowerShell/issues/8073",
  "author": "adityapatwardhan",
  "body": "## PR Summary\r\n\r\nWhen a binary module has the module assembly in GAC, we load the assembly from GAC before trying to load it from module base path. \r\n\r\nThis change attempts to load it from module base path before looking up in GAC.\r\n\r\n## PR Checklist\r\n\r\n- [X] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [X] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [ ] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [X] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` to the beginning of the title and remove the prefix when the PR is ready.\r\n- **User-facing changes**\r\n    - [X] Not Applicable\r\n    - **OR**\r\n    - [ ] User-facing [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed - Issue link:\r\n- **Testing - New and feature**\r\n    - [ ] Not Applicable or can only be tested interactively\r\n    - **OR**\r\n    - [X] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n        - [X] [Add `[feature]` if the change is significant or affects feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\r\n",
  "closed_at": "2018-11-05T18:41:54Z",
  "comments": [
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@SteveL-MSFT  I guess this would technically be a breaking change if someone had a assembly with the same name in the module base folder and are relying on loading it from GAC instead. But, I believe that should be a very rare occurance. Your thoughts?",
      "created_at": "2018-10-18T22:51:58Z",
      "updated_at": "2018-10-18T22:51:58Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@adityapatwardhan I can't imagine a scenario where a module author has an assembly in their module base folder but expects the assembly from the GAC to be loaded",
      "created_at": "2018-10-18T23:50:19Z",
      "updated_at": "2018-10-18T23:50:19Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "Technically it's breaking, let's document it as breaking, but I don't think this needs committee review",
      "created_at": "2018-10-19T00:05:56Z",
      "updated_at": "2018-10-19T00:05:56Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@daxian-dbw Please have another look.",
      "created_at": "2018-10-24T21:07:05Z",
      "updated_at": "2018-10-24T21:07:05Z"
    },
    {
      "author": "anmenaga",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT @adityapatwardhan Here is example scenario: servicing a multi-version module.\r\nLet's say there is a widely-used module that over time released several versions.\r\nThen someone discovers a security bug in .NET that requires a client-side code fix from module authors.\r\nIt's a lot easier to put a fixed DLL into GAC than try to update DLL in all module version folders.\r\n\r\n@adityapatwardhan is there an issue for this PR? did somebody complain?\r\n",
      "created_at": "2018-10-25T21:06:30Z",
      "updated_at": "2018-10-25T21:06:30Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@anmenaga the real world scenario is that we have Windows partners that also ship their modules on PSGallery.  The PSGallery version that the user explicitly installed may be newer than the one that is inbox.  Currently, importing the module loads the older assembly in the GAC which doesn't match the updated module.",
      "created_at": "2018-10-26T00:37:55Z",
      "updated_at": "2018-10-26T00:37:55Z"
    },
    {
      "author": "anmenaga",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT That's a valid scenario.\r\nThough ideally, I think, the load order should be configurable. Is it something that can be placed in a config file?",
      "created_at": "2018-10-29T21:33:13Z",
      "updated_at": "2018-10-29T21:33:13Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@anmenaga The updated one in the GAC may not be compatible with modules that were tested against a specific version.  I think this is the tradeoff of app-local versions of assemblies.  At this time, I don't think we should solve this problem universally.",
      "created_at": "2018-10-29T22:01:04Z",
      "updated_at": "2018-10-29T22:01:04Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@TravisEz13 Assigning this to you as I would like to get this in the next release. ",
      "created_at": "2018-11-05T17:53:30Z",
      "updated_at": "2018-11-05T17:53:30Z"
    }
  ],
  "created_at": "2018-10-18T22:49:59Z",
  "number": 8073,
  "state": "closed",
  "title": "Load assembly from module base path before trying to load from GAC",
  "updated_at": "2019-01-08T18:55:45Z"
}