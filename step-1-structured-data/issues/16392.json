{
  "_url": "https://github.com/PowerShell/PowerShell/issues/16392",
  "author": "mklement0",
  "body": "### Prerequisites\r\n\r\n- [X] Write a descriptive title.\r\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- [X] Search the existing issues.\r\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\r\n\r\n### Steps to reproduce\r\n\r\nIn practice, `catch [System.Management.Automation.RuntimeException] { ... }` seems to behave the same as an _unqualified_ `catch` block.\r\n\r\nThat is, it catches _any_ exception - even those _not_ derived from `System.Management.Automation.RuntimeException`\r\n\r\n```powershell\r\ntry { throw ([System.ArgumentException] 'foo') }\r\ncatch [System.Management.Automation.RuntimeException] { 'What are you doing here? ' }\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe exception thrown should surface as a script-terminating error, because its type isn't derived from `System.Management.Automation.RuntimeException`, so the `catch` block should not be entered.\r\n\r\n\r\n### Actual behavior\r\n\r\n`'What are you doing here?'` is output, because the `catch` block was unexpectedly entered.\r\n\r\n\r\n### Error details\r\n\r\n_No response_\r\n\r\n### Environment data\r\n\r\n```powershell\r\nPowerShell Core 7.2.0-rc.1\r\n```\r\n\r\n\r\n### Visuals\r\n\r\n_No response_",
  "closed_at": "2021-11-13T09:00:40Z",
  "comments": [
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "The Engine WG discussed this issue today.\r\n\r\nWe think this behavior is an implementation detail that should be documented -- all exceptions are wrapped by `RuntimeException` within powershell, and thus `catch [RuntimeException] { ... }` will catch everything.\r\nWe also recommend a PSSA rule to caution against using `RuntimeException` as a `catch` clause type.",
      "created_at": "2021-11-12T00:05:58Z",
      "updated_at": "2021-11-12T00:05:58Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "The doc issue: https://github.com/MicrosoftDocs/PowerShell-Docs/issues/8340\r\nThe PSSA issue: https://github.com/PowerShell/PSScriptAnalyzer/issues/1744",
      "created_at": "2021-11-12T00:37:08Z",
      "updated_at": "2021-11-12T00:37:08Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as by-design and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2021-11-13T09:00:39Z",
      "updated_at": "2021-11-13T09:00:39Z"
    }
  ],
  "created_at": "2021-11-07T19:55:58Z",
  "labels": [
    "Issue-Question",
    "WG-Engine",
    "Resolution-By Design"
  ],
  "number": 16392,
  "state": "closed",
  "title": "A `catch` block in a try / catch statement qualified with type `System.Management.Automation.RuntimeException` traps *any* exception",
  "updated_at": "2021-11-13T09:00:40Z"
}