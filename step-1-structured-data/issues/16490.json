{
  "_url": "https://github.com/PowerShell/PowerShell/issues/16490",
  "author": "hammy3502",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nThis PR addresses issue #13366 , adding the ability for users to access a `ResolvedTarget` property on file and folder items, which returns a string representation of a path, depending on the type of file/folder:\r\n\r\n* If the file/folder is not a symbolic link, `ResolvedTarget` will return a string referring to itself.\r\n* If the file/folder is a symbolic link that points to a file/folder that currently exists, `ResolvedTarget` will return a string referring to the file/folder that the symbolic link points to.\r\n* If the file/folder is a symbolic link that points to a file that does not exist, `ResolvedTarget` returns a string referring to the broken destination.\r\n<!-- Summarize your PR between here and the checklist. -->\r\n\r\n## PR Context\r\n\r\nThis PR mainly addresses the problems described in #13366 , mainly that there is no easy way to resolve the path of a file if said file has a chance of being a symbolic link (and as a result, points to a different file in the end). This PR addresses this with the `ResolvedTarget` property, which points to \"the actual file\" whether the file being referenced is a symbolic link or not.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [x] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [x] Issue filed: https://github.com/MicrosoftDocs/PowerShell-Docs/issues/8505\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and opened an issue in the relevant tool repository. This may include:\r\n        - [ ] Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode\r\n        (which runs in a different PS Host).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n",
  "closed_at": "2022-01-21T04:23:12Z",
  "comments": [
    {
      "author": "microsoft-cla-retired[bot]",
      "author_association": "NONE",
      "body": "[![CLA assistant check](https://cla.opensource.microsoft.com/pull/badge/signed)](https://cla.opensource.microsoft.com/PowerShell/PowerShell?pullRequest=16490) <br/>All CLA requirements met.",
      "created_at": "2021-11-19T01:28:23Z",
      "updated_at": "2021-11-19T01:31:31Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2021-11-26T02:00:42Z",
      "updated_at": "2021-11-26T02:00:42Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@hammy3502 Please look test fails.\r\n\r\n@mklement0 Could you please review? Is this addressed a behavior you requested?",
      "created_at": "2021-11-26T06:03:31Z",
      "updated_at": "2021-11-26T06:03:31Z"
    },
    {
      "author": "hammy3502",
      "author_association": "CONTRIBUTOR",
      "body": "My apologies for the unit tests! The PR should be good to go now. The one failing unit test here looks to be from upstream from when I last rebased, rather than this PR. \r\n\r\nEDIT: Looks like the unit tests have all passed; the PR should be good to go!",
      "created_at": "2021-12-02T14:45:47Z",
      "updated_at": "2021-12-08T19:07:45Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "/azp restart PowerShell-CI-macos",
      "created_at": "2021-12-02T16:16:55Z",
      "updated_at": "2021-12-02T16:16:55Z"
    },
    {
      "author": "azure-pipelines[bot]",
      "author_association": "NONE",
      "body": "<samp>\nCommand 'restart' is not supported by Azure Pipelines.<br>\r\n<br>\r\n<b>Supported commands</b><br>\r\n<ul type=\"none\"><li><b>help:</b></li><ul type=\"none\"><li>Get descriptions, examples and documentation about supported commands</li><li><b>Example: </b>help \"command_name\"</li></ul><li><b>list:</b></li><ul type=\"none\"><li>List all pipelines for this repository using a comment.</li><li><b>Example: </b>\"list\"</li></ul><li><b>run:</b></li><ul type=\"none\"><li>Run all pipelines or specific pipelines for this repository using a comment. Use this command by itself to trigger all related pipelines, or specify specific pipelines to run.</li><li><b>Example: </b>\"run\" or \"run pipeline_name, pipeline_name, pipeline_name\"</li></ul><li><b>where:</b></li><ul type=\"none\"><li>Report back the Azure DevOps orgs that are related to this repository and org</li><li><b>Example: </b>\"where\"</li></ul></ul><br>\r\nSee <a href=\"https://go.microsoft.com/fwlink/?linkid=2056279\">additional documentation.</a>\n</samp>",
      "created_at": "2021-12-02T16:17:00Z",
      "updated_at": "2021-12-02T16:18:40Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "/azp run PowerShell-CI-macos",
      "created_at": "2021-12-02T16:18:22Z",
      "updated_at": "2021-12-02T16:18:53Z"
    },
    {
      "author": "azure-pipelines[bot]",
      "author_association": "NONE",
      "body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>",
      "created_at": "2021-12-02T16:18:34Z",
      "updated_at": "2021-12-02T16:18:34Z"
    },
    {
      "author": "hammy3502",
      "author_association": "CONTRIBUTOR",
      "body": "It looks like the failed tests are from outside the scope of this PR, so we should still be good to merge. For clarification, all of the tests passed before 9c1b43f, which just removed an empty newline.\r\n\r\nEDIT: Looks like the failing unit tests were re-ran, and are good to go now!",
      "created_at": "2021-12-11T17:04:34Z",
      "updated_at": "2021-12-12T23:27:58Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee We need the committee to review the issue and PR on 2 behaviors of the proposed `ResolvedTarget` property:\r\n1. when the file or directory is not a symlink / reparse point, whether it should report its own full path, or return `null`. See https://github.com/PowerShell/PowerShell/pull/16490#discussion_r769134270 for the discussion.\r\n2. whether the parameter type of the proposed property to be `FileSystemInfo` or `string`. see https://github.com/PowerShell/PowerShell/pull/16490#discussion_r769138284 for the discussion.",
      "created_at": "2021-12-15T18:40:41Z",
      "updated_at": "2022-01-04T00:23:49Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as stale because it has been marked as requiring author feedback but has not had any activity for **15 days**. It will be closed if no further activity occurs **within 10 days of this comment**.",
      "created_at": "2021-12-30T20:00:40Z",
      "updated_at": "2021-12-30T20:00:40Z"
    },
    {
      "author": "hammy3502",
      "author_association": "CONTRIBUTOR",
      "body": "Apologies for the slow response! I'll do my best to have the changes back within a couple days! ",
      "created_at": "2021-12-31T17:04:13Z",
      "updated_at": "2021-12-31T17:04:13Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@hammy3502 Thanks for your reply. I responded to your comments, and let's wait on the committee to decide the return type.",
      "created_at": "2022-01-04T00:24:54Z",
      "updated_at": "2022-01-04T00:24:54Z"
    },
    {
      "author": "hammy3502",
      "author_association": "CONTRIBUTOR",
      "body": "@daxian-dbw Thank you so much! I handled the two threads you responded to, and I'll be eagerly awaiting a response from the committee! :)",
      "created_at": "2022-01-04T03:49:21Z",
      "updated_at": "2022-01-04T03:49:21Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee reviewed this:\r\n\r\n1. We agreed that `.ResolvedTarget` should always have a value that is the full path regardless if the item is a link.  Users should rely on `.Attributes` to determine if an item is a link or not.  By having this property always have a value, users won't need to check if it's `$null` and can also make it easier to format without conditionals.\r\n\r\n2. We also agreed that for consistency and also it's easy to convert the string path to a FileSystemInfo object and most users may not want to incur the additional memory to allocate that object, it makes sense for `.ResolvedTarget` to be a string.\r\n",
      "created_at": "2022-01-05T23:30:38Z",
      "updated_at": "2022-01-05T23:30:38Z"
    },
    {
      "author": "hammy3502",
      "author_association": "CONTRIBUTOR",
      "body": "All of the changes should be resolved now! :)",
      "created_at": "2022-01-16T23:51:36Z",
      "updated_at": "2022-01-16T23:51:36Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@hammy3502 Please rebase to fix CI-Static.",
      "created_at": "2022-01-19T06:20:56Z",
      "updated_at": "2022-01-19T06:23:16Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "/rebase",
      "created_at": "2022-01-19T06:22:06Z",
      "updated_at": "2022-01-19T06:22:06Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@hammy3502 Please update the PR description to reflect new logic is implemented and open new issue in Documentation repository https://github.com/MicrosoftDocs/PowerShell-Docs.\n\n<blockquote><img src=\"https://repository-images.githubusercontent.com/44411511/850abe80-7ca6-11e9-886f-a1b13b275ae0\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/MicrosoftDocs/PowerShell-Docs\">GitHub - MicrosoftDocs/PowerShell-Docs: The official PowerShell documentation sources</a></strong></div><div>The official PowerShell documentation sources. Contribute to MicrosoftDocs/PowerShell-Docs development by creating an account on GitHub.</div></blockquote>",
      "created_at": "2022-01-19T06:31:47Z",
      "updated_at": "2022-01-19T06:31:49Z"
    },
    {
      "author": "hammy3502",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov I've updated the PR description, however I can't seem to find a page to propose any needed documentation changes (there doesn't appear to be any pages for `FileInfo`/`DirectoryInfo` that I could find). Are there any pages you'd recommend be updated so I can open an issue? Thank you so much!",
      "created_at": "2022-01-19T14:49:59Z",
      "updated_at": "2022-01-19T14:49:59Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> I've updated the PR description\r\n\r\nI don't see all cases covered in https://github.com/PowerShell/PowerShell/pull/16490#discussion_r782800772\r\n\r\n> I can't seem to find a page to propose any needed documentation changes\r\n\r\nSince it is new addition I think it should be documented. If PowerShell documentation hasn't appropriate pages you can new doc issue as \"idea\" in doc repo.",
      "created_at": "2022-01-19T17:35:43Z",
      "updated_at": "2022-01-19T17:35:43Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw How could we re-run `Update cgmanifest CI`?",
      "created_at": "2022-01-19T17:36:20Z",
      "updated_at": "2022-01-19T17:36:20Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "~I have no idea. I guess it's stuck for some reason, and we may have to close the PR and then re-open.~\r\nI just tried re-running the job in the `Actions` tab. Will see if that helps.\r\nhttps://github.com/PowerShell/PowerShell/actions/runs/1714599480",
      "created_at": "2022-01-19T17:45:55Z",
      "updated_at": "2022-01-19T17:49:21Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw Thanks!\r\n\r\nThis cgmanifest is reminiscent of the Files.wxs story. At first we had to update it manually every time. After that exhausted everyone, the update became automatic. \ud83d\ude04 I hope to see auto update soon!",
      "created_at": "2022-01-19T17:54:24Z",
      "updated_at": "2022-01-19T17:54:24Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw The action was finished but not reported again. \ud83d\ude1f ",
      "created_at": "2022-01-19T18:11:28Z",
      "updated_at": "2022-01-19T18:11:28Z"
    },
    {
      "author": "pull-request-quantifier[bot]",
      "author_association": "NONE",
      "body": "### ![](https://img.shields.io/static/v1?label=Quantified&message=Small&color=green)\r\n\r\nThis PR has `62` quantified lines of changes. In general, a change size of upto `200` lines is ideal for the best PR experience!\r\n\r\n------\r\n\r\n<details >\r\n    <summary display=\"inline\"> <strong>Quantification details</strong></summary>\r\n    <p />\r\n\r\n```\r\nLabel      : Small\r\nSize       : +61 -1\r\nPercentile : 24.8%\r\n\r\nTotal files changed: 4\r\n\r\nChange summary by file extension:\r\n.cs : +25 -0\r\n.ps1 : +36 -1\r\n```\r\n> Change counts above are quantified counts, based on the [PullRequestQuantifier customizations](https://github.com/microsoft/PullRequestQuantifier/blob/main/docs/prquantifier-yaml.md).\r\n    \r\n</details>\r\n\r\n\r\n<details>\r\n    <summary display=\"inline\"> <strong>Why proper sizing of changes matters</strong> </summary>\r\n    <p/>\r\n    <p/>\r\n\r\nOptimal pull request sizes drive a better predictable PR flow as they strike a\r\nbalance between between PR complexity and PR review overhead. PRs within the\r\noptimal size (typical small, or medium sized PRs) mean:\r\n\r\n- Fast and predictable releases to production:\r\n  - Optimal size changes are more likely to be reviewed faster with fewer\r\niterations.\r\n  - Similarity in low PR complexity drives similar review times.\r\n- Review quality is likely higher as complexity is lower:\r\n  - Bugs are more likely to be detected.\r\n  - Code inconsistencies are more likely to be detetcted.\r\n- Knowledge sharing is improved within the participants:\r\n  - Small portions can be assimilated better.\r\n- Better engineering practices are exercised:\r\n  - Solving big problems by dividing them in well contained, smaller problems.\r\n  - Exercising separation of concerns within the code changes.\r\n\r\n#### What can I do to optimize my changes\r\n\r\n- Use the PullRequestQuantifier to quantify your PR accurately\r\n  - Create a context profile for your repo using the [context generator](https://github.com/microsoft/PullRequestQuantifier/releases)\r\n  - Exclude files that are not necessary to be reviewed or do not increase the review complexity. Example: Autogenerated code, docs, project IDE setting files, binaries, etc. Check out the `Excluded` section from your `prquantifier.yaml` context profile. \r\n  - Understand your typical change complexity, drive towards the desired complexity by adjusting the label mapping in your `prquantifier.yaml` context profile.\r\n  - Only use the labels that matter to you, [see context specification](./docs/prquantifier-yaml.md) to customize your `prquantifier.yaml` context profile.\r\n- Change your engineering behaviors\r\n  - For PRs that fall outside of the desired spectrum, review the details and check if:\r\n    - Your PR could be split in smaller, self-contained PRs instead\r\n    - Your PR only solves one particular issue. (For example, don't refactor and code new features in the same PR).\r\n\r\n#### How to interpret the change counts in git diff output\r\n\r\n- One line was added: `+1 -0`\r\n- One line was deleted: `+0 -1`\r\n- One line was modified: `+1 -1` (git diff doesn't know about modified, it will\r\ninterpret that line like one addition plus one deletion)\r\n- Change percentiles: Change characteristics (addition, deletion, modification)\r\nof this PR in relation to all other PRs within the repository.\r\n\r\n</details>\r\n\r\n<p />\r\n\r\n------\r\n\r\nWas this comment helpful? <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoiaGFtbXkzNTAyIiwiUmVwb3NpdG9yeUxpbmsiOiJodHRwczovL2dpdGh1Yi5jb20vUG93ZXJTaGVsbC9Qb3dlclNoZWxsIiwiUHVsbFJlcXVlc3RMaW5rIjoiaHR0cHM6Ly9naXRodWIuY29tL1Bvd2VyU2hlbGwvUG93ZXJTaGVsbC9wdWxsLzE2NDkwIiwiRXZlbnRUeXBlIjoiVGh1bWJzVXAifQ==&amp;anonymous=True\" target=\"_blank\" title=\"Thumbs up\"><strong>:thumbsup:</strong></a> <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoiaGFtbXkzNTAyIiwiUmVwb3NpdG9yeUxpbmsiOiJodHRwczovL2dpdGh1Yi5jb20vUG93ZXJTaGVsbC9Qb3dlclNoZWxsIiwiUHVsbFJlcXVlc3RMaW5rIjoiaHR0cHM6Ly9naXRodWIuY29tL1Bvd2VyU2hlbGwvUG93ZXJTaGVsbC9wdWxsLzE2NDkwIiwiRXZlbnRUeXBlIjoiTmV1dHJhbCJ9&amp;anonymous=True\" target=\"_blank\" title=\"Neutral\"><strong>&nbsp;:ok_hand:</strong></a> <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoiaGFtbXkzNTAyIiwiUmVwb3NpdG9yeUxpbmsiOiJodHRwczovL2dpdGh1Yi5jb20vUG93ZXJTaGVsbC9Qb3dlclNoZWxsIiwiUHVsbFJlcXVlc3RMaW5rIjoiaHR0cHM6Ly9naXRodWIuY29tL1Bvd2VyU2hlbGwvUG93ZXJTaGVsbC9wdWxsLzE2NDkwIiwiRXZlbnRUeXBlIjoiVGh1bWJzRG93biJ9&amp;anonymous=True\" target=\"_blank\" title=\"Thumbs down\"><strong>&nbsp;:thumbsdown:</strong></a> (<a href=\"MAILTO:prquantifier@microsoft.com\" title=\"Mail to prquantifier@microsoft.com\">Email</a>)\r\n[Customize PullRequestQuantifier](https://github.com/PowerShell/PowerShell/blob/master/.github/prquantifier.yaml) for this repository.\r\n\r\n",
      "created_at": "2022-01-19T18:49:05Z",
      "updated_at": "2022-01-19T18:49:05Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Adding the ability for users to access a ResolvedTarget property on file and folder items, which returns a string representation of a path, depending on the type of file/folder:\r\n\r\n- If the file/folder is not a symbolic link, ResolvedTarget will return a string referring to itself.\r\n- If the file/folder is a symbolic link that points to a file/folder that currently exists, ResolvedTarget will return a string referring to the file/folder that the symbolic link points to.\r\n- If the file/folder is a symbolic link that points to a file that does not exist, ResolvedTarget returns a string referring to the broken destination.",
      "created_at": "2022-01-20T03:55:25Z",
      "updated_at": "2022-01-20T03:55:25Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@hammy3502 Thanks for your contribution! Please open doc issue.",
      "created_at": "2022-01-20T03:56:08Z",
      "updated_at": "2022-01-20T03:56:08Z"
    },
    {
      "author": "hammy3502",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov The docs issue has been opened!",
      "created_at": "2022-01-20T15:38:16Z",
      "updated_at": "2022-01-20T15:38:16Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@hammy3502 Thanks for your contribution!",
      "created_at": "2022-01-21T04:23:27Z",
      "updated_at": "2022-01-21T04:23:27Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.3.0-preview.2` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.3.0-preview.2)\n",
      "created_at": "2022-02-24T23:33:49Z",
      "updated_at": "2022-02-24T23:33:49Z"
    }
  ],
  "created_at": "2021-11-19T01:28:11Z",
  "number": 16490,
  "state": "closed",
  "title": "Adds a .ResolvedTarget Property to File-System Items to Reflect a Symlink's Target as FileSystemInfo",
  "updated_at": "2022-02-24T23:33:49Z"
}