{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4958",
  "author": "SteveL-MSFT",
  "body": "`PowerShell -v` behavior updated to align with other tools like git, curl, and bash where args after `-v` are silently ignored.\r\n\r\nBuilt-in help updated to reflect changes we've made to the console host in PSCore6 removing unsupported parameters.\r\n\r\nDoc update aligned with these changes (and general cleanup of parameters we don't support in PSCore6) https://github.com/PowerShell/PowerShell-Docs/pull/1707\r\n<!--\r\n\r\nIf you are a PowerShell Team member, please make sure you choose the Reviewer(s) and Assignee for your PR.\r\nIf you are not from the PowerShell Team, you can leave the fields blank and the Maintainers will choose them for you. If you are familiar with the team, feel free to mention some Reviewers yourself.\r\n\r\nFor more information about the roles of Reviewer and Assignee, refer to [CONTRIBUTING.md](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md).\r\n\r\n-->\r\n",
  "closed_at": "2017-10-01T03:39:19Z",
  "comments": [
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "The same test didn't fail in AppVeyor. In AppVeyor, the failed test is `Version should write an error if a value is present`, see https://ci.appveyor.com/project/PowerShell/powershell/build/6.0.0-beta.7-5642#L384\r\n\r\nOn Travis, a different test failed: `Version should ignore other parameters`. See https://travis-ci.org/PowerShell/PowerShell/jobs/281514325#L1461\r\n\r\nSo probably we shouldn't just remove that test.",
      "created_at": "2017-09-30T00:54:08Z",
      "updated_at": "2017-09-30T00:54:08Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "We still need to remove this test as the change is to return an error if there's anything after `-version` whereas previously we silently ignored it.  I think the current behavior is correct.",
      "created_at": "2017-09-30T01:05:01Z",
      "updated_at": "2017-09-30T01:05:01Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Need to fix the other test and also make a change to the `-v` handling.  I should have caught this in the code review.  Apologies.",
      "created_at": "2017-09-30T01:26:34Z",
      "updated_at": "2017-09-30T01:26:34Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov if you're fine with the changes, can you merge so we can unblock other PRs?  If you have specific concerns with the expected behavior, I think we can continue that discussion in a new issue.  Thanks!",
      "created_at": "2017-09-30T21:31:52Z",
      "updated_at": "2017-09-30T21:31:52Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "One concern is that we show full help in case of an error.\r\nIt's very annoying in interactive session if I typo - I'm forced to scroll back to see error message and lost my history before eyes. I'd prefer to see an error message and shot hint \"Use powershell -? or -h to get more help\" .",
      "created_at": "2017-10-01T03:45:34Z",
      "updated_at": "2017-10-01T03:45:34Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov you referring to existing behavior and not something I introduced, correct?",
      "created_at": "2017-10-01T03:53:18Z",
      "updated_at": "2017-10-01T03:53:18Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Yes, I wanted to say that we need more review and cleanups in the file. I see:\r\n1. #if !CORE\r\n2. _ShowHelp=true\r\n3. maybe formattings",
      "created_at": "2017-10-01T04:35:24Z",
      "updated_at": "2017-10-01T04:35:24Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov can submit a new PR?  the `#if CORECLR` I was going to take care of as part of https://github.com/PowerShell/PowerShell/issues/4953",
      "created_at": "2017-10-01T05:00:35Z",
      "updated_at": "2017-10-01T05:00:35Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I'll try to review on next week.",
      "created_at": "2017-10-01T09:14:22Z",
      "updated_at": "2017-10-01T09:14:22Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT Please clarify. In #4834 we decided to write an error to inform users about changing -Version behavior. In the PR we remove the error. Should we write in #4834 that we reject the request now?\r\n\r\nUpdate after review.\r\n1. I see that we show the full command line help in some cases but not if parameter is wrong. Should we show the help in all cases? It seems `bash` do so.\r\n2. By default we assume a file name passed. If the file don't found we write an error (`bash` do so too) - to write the help is not trivial but desired fix (`bash` don't show a help) - is it?\r\n3. I suggest reformat the help in Bash style:\r\n- sort parameter list in alphabetical order.\r\n- replace long header on `powershell[.exe] [options]`\r\n4. Maybe add examples in end of the help.",
      "created_at": "2017-10-02T06:11:36Z",
      "updated_at": "2017-10-02T09:14:46Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov added comment and closed https://github.com/PowerShell/PowerShell/issues/4834\r\n\r\n1. we should be consistent and, in general, use existing norms like `bash`\r\n2. we should not output help either\r\n3. agree with the proposed changes\r\n4. absolutely!\r\n\r\n",
      "created_at": "2017-10-02T19:16:29Z",
      "updated_at": "2017-10-02T19:16:29Z"
    }
  ],
  "created_at": "2017-09-30T00:39:41Z",
  "number": 4958,
  "state": "closed",
  "title": "fix `powershell -version` and help",
  "updated_at": "2017-10-02T19:16:29Z"
}