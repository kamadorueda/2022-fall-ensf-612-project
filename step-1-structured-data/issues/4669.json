{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4669",
  "author": "Windicus",
  "body": "I want to collect data via a webpage using ASP.NET Core 2.0, and on save/create, call PowerShell to go complete the work, and update the site that the work is complete.\r\n\r\nIn full ASP.NET you could easily target .NET 2.0, call system.management.automation and use runspaces. I understand there is now a different load method to access PowerShell for ASP.NET CORE 2.0. However I've been unable to find a way to add Microsoft.PowerShell.SDK to my project.\r\n\r\nI found https://powershell.myget.org/feed/powershell-core/package/nuget/Microsoft.PowerShell.SDK/6.0.0-beta.6 but using that site for Install-Package fails on both beta5 and 6 due to missing files. Assuming this is even how you would add integration into VS2017. A regular search of GitHub Packages reveals no links at all.\r\n\r\nAm I doing something wrong, can you even do this with ASP.NET Core 2.0, or is there an actual issue here with the repositories?\r\n\r\n\r\nPM> Install-Package Microsoft.PowerShell.SDK -Version 6.0.0-beta.6 -Source https://powershell.myget.org/F/powershell-core/api/v3/index.json\r\nRestoring packages for C:\\Users\\dbreeze\\Documents\\Visual Studio 2017\\Projects\\DNSFrontEnd\\DNSFrontEnd\\DNSFrontEnd.csproj...\r\n  GET https://api.nuget.org/v3-flatcontainer/microsoft.powershell.security/index.json\r\n  GET https://api.nuget.org/v3-flatcontainer/microsoft.powershell.commands.utility/index.json\r\n  GET https://api.nuget.org/v3-flatcontainer/microsoft.powershell.commands.management/index.json\r\n  GET https://api.nuget.org/v3-flatcontainer/system.management.automation/index.json\r\n  GET https://api.nuget.org/v3-flatcontainer/microsoft.powershell.consolehost/index.json\r\n  NotFound https://api.nuget.org/v3-flatcontainer/microsoft.powershell.security/index.json 151ms\r\n  NotFound https://api.nuget.org/v3-flatcontainer/microsoft.powershell.commands.utility/index.json 163ms\r\n  NotFound https://api.nuget.org/v3-flatcontainer/microsoft.powershell.commands.management/index.json 245ms\r\n  OK https://api.nuget.org/v3-flatcontainer/system.management.automation/index.json 335ms\r\n  NotFound https://api.nuget.org/v3-flatcontainer/microsoft.powershell.consolehost/index.json 459ms\r\nMicrosoft.PowerShell.SDK 6.0.0-beta.6 depends on System.Management.Automation (>= 6.0.0-beta.6) but System.Management.Automation 6.0.0-beta.6 was not found. An approximate best match of System.Management.Automation 6.1.7601.17514 was resolved.\r\nInstall-Package : Unable to find package Microsoft.PowerShell.Security. No packages exist with this id in source(s): Microsoft Visual Studio Offline Packages, nuget.org, Package source\r\nAt line:1 char:1\r\n+ Install-Package Microsoft.PowerShell.SDK -Version 6.0.0-beta.6 -Sourc ...\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : NotSpecified: (:) [Install-Package], Exception\r\n    + FullyQualifiedErrorId : NuGetCmdletUnhandledException,NuGet.PackageManagement.PowerShellCmdlets.InstallPackageCommand\r\n \r\nInstall-Package : Unable to find package Microsoft.PowerShell.Commands.Utility. No packages exist with this id in source(s): Microsoft Visual Studio Offline Packages, nuget.org, Package source\r\nAt line:1 char:1\r\n+ Install-Package Microsoft.PowerShell.SDK -Version 6.0.0-beta.6 -Sourc ...\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : NotSpecified: (:) [Install-Package], Exception\r\n    + FullyQualifiedErrorId : NuGetCmdletUnhandledException,NuGet.PackageManagement.PowerShellCmdlets.InstallPackageCommand\r\n \r\nInstall-Package : Unable to find package Microsoft.PowerShell.Commands.Management. No packages exist with this id in source(s): Microsoft Visual Studio Offline Packages, nuget.org, Package source\r\nAt line:1 char:1\r\n+ Install-Package Microsoft.PowerShell.SDK -Version 6.0.0-beta.6 -Sourc ...\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : NotSpecified: (:) [Install-Package], Exception\r\n    + FullyQualifiedErrorId : NuGetCmdletUnhandledException,NuGet.PackageManagement.PowerShellCmdlets.InstallPackageCommand\r\n \r\nInstall-Package : Unable to find package Microsoft.PowerShell.ConsoleHost. No packages exist with this id in source(s): Microsoft Visual Studio Offline Packages, nuget.org, Package source\r\nAt line:1 char:1\r\n+ Install-Package Microsoft.PowerShell.SDK -Version 6.0.0-beta.6 -Sourc ...\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : NotSpecified: (:) [Install-Package], Exception\r\n    + FullyQualifiedErrorId : NuGetCmdletUnhandledException,NuGet.PackageManagement.PowerShellCmdlets.InstallPackageCommand\r\n \r\nInstall-Package : Package restore failed. Rolling back package changes for 'DNSFrontEnd'.\r\nAt line:1 char:1\r\n+ Install-Package Microsoft.PowerShell.SDK -Version 6.0.0-beta.6 -Sourc ...\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : NotSpecified: (:) [Install-Package], Exception\r\n    + FullyQualifiedErrorId : NuGetCmdletUnhandledException,NuGet.PackageManagement.PowerShellCmdlets.InstallPackageCommand\r\n \r\n\r\n",
  "closed_at": "2018-08-15T15:35:26Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Please see [docs](https://github.com/PowerShell/PowerShell/tree/master/docs/host-powershell)",
      "created_at": "2017-08-25T16:03:47Z",
      "updated_at": "2017-08-25T16:03:47Z"
    },
    {
      "author": "MrAntix",
      "author_association": "NONE",
      "body": "I can't get it to work either, looked at the docs\r\nany chance we can get a hand?\r\n\r\nI tried the example project, but the packages its using don't seem to exist any more\r\n\r\nwhen I use the latest ones\r\n```\r\n<PackageReference Include=\"Microsoft.PowerShell.Commands.Diagnostics\" Version=\"6.0.1\" />\r\n    <PackageReference Include=\"Microsoft.PowerShell.Commands.Management\" Version=\"6.0.1\" />\r\n    <PackageReference Include=\"Microsoft.PowerShell.Commands.Utility\" Version=\"6.0.1\" />\r\n```\r\n\r\nI get a \"cannot load Microsoft.Powershell\" exception\r\n\r\nMay we get an update on the example?",
      "created_at": "2018-01-31T15:03:45Z",
      "updated_at": "2018-01-31T16:24:22Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw Could you please comment? Seems our documentation needs updating. Maybe after #3417?",
      "created_at": "2018-02-01T04:52:05Z",
      "updated_at": "2018-02-01T04:52:05Z"
    },
    {
      "author": "hassejansson",
      "author_association": "NONE",
      "body": "I have recently managed to run PS in my asp.net core 2.x app. I had to reference another nuget feed for this though: \r\n\r\nhttps://powershell.myget.org/F/powershell-core/api/v3/index.json \r\n\r\nAnd installed:\r\nMicrosoft.PowerShell.Commands.Diagnostics 6.0.1\r\nMicrosoft.PowerShell.SDK 6.0.1\r\nMicrosoft.WSMan.Management 6.0.1\r\n\r\n\r\n\r\n\r\n\r\n",
      "created_at": "2018-02-13T14:07:17Z",
      "updated_at": "2018-02-13T14:07:17Z"
    },
    {
      "author": "MrAntix",
      "author_association": "NONE",
      "body": "not working for me\r\n- new core console app v 2.1.100-preview-007363\r\n- nuget as above added the same packages \r\n\r\n![image](https://user-images.githubusercontent.com/873305/36333477-025ddd56-136f-11e8-9500-2ab995c8a097.png)\r\n\r\nhttps://github.com/MrAntix/DotNetCore2.PSTest",
      "created_at": "2018-02-16T23:17:15Z",
      "updated_at": "2018-02-16T23:19:49Z"
    },
    {
      "author": "MrAntix",
      "author_association": "NONE",
      "body": "@hassejansson sorry, skim read, of course they are different packages than I had\r\n\r\nwith the three you mention the app works fine\r\n```\r\nMicrosoft.PowerShell.Commands.Diagnostics 6.0.1\r\nMicrosoft.PowerShell.SDK 6.0.1\r\nMicrosoft.WSMan.Management 6.0.1\r\n```\r\n\r\nMany thanks\r\n",
      "created_at": "2018-02-21T10:30:02Z",
      "updated_at": "2018-02-21T10:30:02Z"
    },
    {
      "author": "affieuk",
      "author_association": "NONE",
      "body": "The docs reference PowerShell 6, is it possible to host Windows PowerShell in .net core 2.0?",
      "created_at": "2018-03-01T17:44:32Z",
      "updated_at": "2018-03-01T17:44:32Z"
    },
    {
      "author": "Jaykul",
      "author_association": "CONTRIBUTOR",
      "body": "No, you won't be able to get Windows PowerShell (5.x) to load in .NET Core -- it's a fat .NET 4x project.\r\n\r\nOn the original post note, I can confirm that the new 6.0.1.1 SDK works (at least on Windows and Linux). \r\n\r\n## Can we get that published to NuGet now?",
      "created_at": "2018-03-08T06:41:40Z",
      "updated_at": "2018-03-08T06:41:40Z"
    },
    {
      "author": "zfilipov",
      "author_association": "NONE",
      "body": "Hi Folks, I appreciate the work that has gone into PowerShell Core, it has been very useful for our project! The 6.0.1.1 NuGet packages work as described for our .NET Core 2.0 project.\r\n\r\nJust wondering: is there any particular reason as to why this is being hosted on MyGet? Our development team is having proxy issues when having MyGet and our internally-hosted NuGet repository added in Visual Studio.\r\n\r\nIf this official package was in NuGet it would definitely simplify restoring NuGet packages.",
      "created_at": "2018-04-06T11:47:24Z",
      "updated_at": "2018-04-06T11:49:00Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "/cc @SteveL-MSFT Could you please comment?",
      "created_at": "2018-04-06T12:32:46Z",
      "updated_at": "2018-04-06T12:32:46Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Nightlies should be published to MyGet.  Nupkgs intended for public consumption should be published to Nuget.  cc @adityapatwardhan ",
      "created_at": "2018-04-09T00:24:10Z",
      "updated_at": "2018-04-09T00:24:10Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "The NuGet packages will be posted on nuget.org by the end of this week.",
      "created_at": "2018-04-09T16:23:56Z",
      "updated_at": "2018-04-09T16:23:56Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "What about implementation of \"Nightlies should be published to MyGet\"?",
      "created_at": "2018-04-09T18:04:30Z",
      "updated_at": "2018-04-09T18:04:30Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "Currently we do not produce nightly builds for the hosting SDK. ",
      "created_at": "2018-04-09T18:36:21Z",
      "updated_at": "2018-04-09T18:36:21Z"
    },
    {
      "author": "el7lme",
      "author_association": "NONE",
      "body": "any updates regarding NuGet packages on nuget.org?",
      "created_at": "2018-04-14T07:20:46Z",
      "updated_at": "2018-04-14T07:20:46Z"
    },
    {
      "author": "ImageQC",
      "author_association": "NONE",
      "body": "I've been struggling with this too. The 6.1.0-preview.1 release works fine in a simple .NET Core 2.0 console app, but when this package is added to an Azure Function (.NET Standard 2.0, Class lib) it throws an exception:\r\n\r\n\"Could not load file or assembly 'System.Management.Automation, Version=6.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'. The system cannot find the file specified.\".\r\n\r\nI added the 6.1.0-preview.1 package in the same way for both and both are running on the same PC. By the way, I run my Azure Fn using VS2017 debugger and invoke it by posting msg to EventGrid which accesses my local host via Ngrok. The same happens if I publish / run on Azure.\r\n\r\nWhat's going on? I understood that packages were meant to avoid this sort of problem, so suspect that there is something wrong with the MyGet package.\r\n\r\nThe sooner we can get a stable version released on Nuget, the better.\r\n\r\n\r\n\r\n",
      "created_at": "2018-04-23T05:52:19Z",
      "updated_at": "2018-04-23T05:52:19Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@ImageQC can you share your csproj file. \r\n@el7lme Still working on the packages. Sorry for the delay.",
      "created_at": "2018-04-23T17:20:42Z",
      "updated_at": "2018-04-23T17:20:42Z"
    },
    {
      "author": "ImageQC",
      "author_association": "NONE",
      "body": "Here is my csproj file as requested. These are the packages as published to Azure which cause the error message to appear in the log - see previous post:\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netstandard2.0</TargetFramework>\r\n    <AzureFunctionsVersion>v2</AzureFunctionsVersion>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.Azure.WebJobs\" Version=\"3.0.0-beta5\" />\r\n    <PackageReference Include=\"Microsoft.Azure.WebJobs.Extensions\" Version=\"3.0.0-beta5\" />\r\n    <PackageReference Include=\"Microsoft.Azure.WebJobs.Extensions.EventGrid\" Version=\"2.0.0-beta1\" />\r\n    <PackageReference Include=\"Microsoft.NET.Sdk.Functions\" Version=\"1.0.13\" />\r\n    <PackageReference Include=\"Microsoft.PowerShell.SDK\" Version=\"6.1.0-preview.1\" />\r\n    <PackageReference Include=\"System.Data.SqlClient\" Version=\"4.4.0-preview1-25305-02\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <None Update=\"host.json\">\r\n      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>\r\n    </None>\r\n    <None Update=\"local.settings.json\">\r\n      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>\r\n      <CopyToPublishDirectory>Never</CopyToPublishDirectory>\r\n    </None>\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nNote 1: I am using System.Data.SqlClient 4.4.0-preview1-25305-02 instead of 4.4.3 to avoid errors at runtime.",
      "created_at": "2018-04-24T03:25:21Z",
      "updated_at": "2018-07-20T22:14:40Z"
    },
    {
      "author": "ImageQC",
      "author_association": "NONE",
      "body": "any idea of timescale for fixing this? I need to run Powershell from an Azure function, ideally using C#. This would seem to be a common requirement so I'm surprised isn't not working. However, thanks for your help.\r\n",
      "created_at": "2018-04-29T13:45:46Z",
      "updated_at": "2018-04-29T13:45:46Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@el7lme I am actively working on releasing the packages on nuget.org. It should just be a few more days. Sorry for the delay.\r\n\r\n@ImageQC  I will try to repro this in an Azure function to investigate this further. Thanks for your patience.",
      "created_at": "2018-04-30T19:24:43Z",
      "updated_at": "2018-04-30T19:24:43Z"
    },
    {
      "author": "ImageQC",
      "author_association": "NONE",
      "body": "please consider me as your first beta tester ;-) Many thanks Will",
      "created_at": "2018-05-01T13:52:31Z",
      "updated_at": "2018-05-01T13:52:31Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": " First Beta Tester rank is assigned only after 1000th feedback :-)",
      "created_at": "2018-05-01T14:46:19Z",
      "updated_at": "2018-05-01T14:46:19Z"
    },
    {
      "author": "ImageQC",
      "author_association": "NONE",
      "body": "iSazonov might well be right - I will need to ask 1000 times before this software is released ;-)\r\n\r\nSeriously, how's it going Adityapwardhan? It would be great to get a timescale. In the meantime I shall have to implement as a WebJob. ",
      "created_at": "2018-05-11T08:31:21Z",
      "updated_at": "2018-05-11T08:31:21Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@ImageQC I believe Azure is high priority but I don't know about the timescale. You could have a conversation with @SteveL-MSFT and @joeyaiello about your project.",
      "created_at": "2018-05-11T10:02:10Z",
      "updated_at": "2018-05-11T10:02:10Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "Still working through a few issues. Unfortunately I do not have a timeline yet.",
      "created_at": "2018-05-11T16:31:41Z",
      "updated_at": "2018-05-11T16:31:41Z"
    },
    {
      "author": "Mattacks",
      "author_association": "NONE",
      "body": "@adityapatwardhan \r\nHi\r\nWe too have a requirement on the package being available from NuGet.org in order to be able to use in in our products.\r\nMatt",
      "created_at": "2018-05-15T16:17:53Z",
      "updated_at": "2018-05-15T16:17:53Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@Mattacks I understand your concerns and am working towards getting it published soon. Thank you for your patience.",
      "created_at": "2018-05-15T16:57:08Z",
      "updated_at": "2018-05-15T16:57:08Z"
    },
    {
      "author": "ImageQC",
      "author_association": "NONE",
      "body": "- **9th April \"The NuGet packages will be posted on nuget.org by the end of this week.\"**\r\n\r\n- **26 May - still no Powershell package released on NuGet (pre-release or otherwise) and even the MyGet package (6.1.0-preview.1) doesn't work with a Azure Function (.NET Standard 2.0, Class lib).**\r\n\r\nClearly there is a significant problem here. I suspect it relates to package dependencies which are quite fluid in the pre-release space. Is it that Microsoft are in the middle to sorting out this problem (not before time) so release of the Powershell package is being held-up until this work is done? If this is the case, it would be good to get some idea of timescales - a month, three months, next year? \r\n\r\nIt is surprising that ASP.NET Core 2.0 was released almost a year ago, but still Powershell integration isn't fully supported. Therefore instead of using the new cool Azure Function Apps, I'm forced to use a WebJob running on .NET Framework. I'm not happy.\r\n",
      "created_at": "2018-05-26T02:33:51Z",
      "updated_at": "2018-05-26T02:35:24Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@ImageQC Sorry for the delay. We are hitting some unforeseen issues. I am working on resolving those. A best estimate timeline for releasing on NuGet.org is before end of June. ",
      "created_at": "2018-05-29T17:14:24Z",
      "updated_at": "2018-05-29T17:14:24Z"
    },
    {
      "author": "neel015",
      "author_association": "NONE",
      "body": "Its almost the end of June. Can we get this on Nuget Pleasee ...",
      "created_at": "2018-06-29T07:41:10Z",
      "updated_at": "2018-06-29T07:41:10Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "This is still work in progress. We have to release nuget packages for all the dependencies as well on nuget.org. This is what is taking time to complete. The work is happening in https://github.com/PowerShell/powershell-native for building and releasing native dependencies for all supported platforms. Thank you for your patience. ",
      "created_at": "2018-07-02T17:17:14Z",
      "updated_at": "2018-07-02T17:17:14Z"
    },
    {
      "author": "wuy3",
      "author_association": "NONE",
      "body": "Eagerly awaiting release of this Nuget package as well. We are working with projects targeted to .NET Standard 2.0 and want to use powershell invokes in C# (using System.Management.Automation)",
      "created_at": "2018-07-12T20:50:29Z",
      "updated_at": "2018-07-12T20:50:29Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@adityapatwardhan with recent Preview.4 re-publish this should be fixed?",
      "created_at": "2018-08-02T17:17:00Z",
      "updated_at": "2018-08-02T17:17:00Z"
    },
    {
      "author": "j3vans",
      "author_association": "NONE",
      "body": "Can we assume this won't be supported this year? [Is this ](https://github.com/PowerShell/PowerShell/tree/master/docs/host-powershell)currently the only supported way to host powershell core?",
      "created_at": "2018-08-07T17:06:26Z",
      "updated_at": "2018-08-07T17:06:26Z"
    },
    {
      "author": "mi-hol",
      "author_association": "NONE",
      "body": "is this issue related to the [PowerShell Standard Library: Build single module that works across Windows PowerShell and PowerShell Core](https://blogs.msdn.microsoft.com/powershell/2018/08/06/powershell-standard-library-build-single-module-that-works-across-windows-powershell-and-powershell-core/) announcement ?",
      "created_at": "2018-08-12T11:39:27Z",
      "updated_at": "2018-08-12T11:39:27Z"
    },
    {
      "author": "Jaykul",
      "author_association": "CONTRIBUTOR",
      "body": "@mi-hol no. Building modules and _hosting_ PowerShell are two different problems.",
      "created_at": "2018-08-13T17:57:36Z",
      "updated_at": "2018-08-13T17:57:36Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "This is still being worked on.  I'd hesitate to provide any ETA that we may end up missing.",
      "created_at": "2018-08-14T00:04:29Z",
      "updated_at": "2018-08-14T00:04:29Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "`Microsoft.PowerShell.SDK` and related packages were release for version 6.0.4 today morning on [nuget.org](https://www.nuget.org/packages/Microsoft.PowerShell.SDK)\r\n\r\nPlease give them a try and let me know if you see any issues.",
      "created_at": "2018-08-14T16:50:34Z",
      "updated_at": "2018-08-14T16:50:34Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@ImageQC Can you give a try for release on nuget.org for version 6.0.4. Thanks for your patience.",
      "created_at": "2018-08-14T16:59:42Z",
      "updated_at": "2018-08-14T16:59:42Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "This should be resolved, please comment on this issue if it's not addressed or open new specific issues for new problems.",
      "created_at": "2018-08-15T15:35:26Z",
      "updated_at": "2018-08-15T15:35:26Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@RogerDodger123 Please open new Issue with your question, repo steps, versions. Have you the project or example project on GitHub to share for review?",
      "created_at": "2018-09-04T09:38:14Z",
      "updated_at": "2018-09-04T09:38:14Z"
    },
    {
      "author": "sonphnt",
      "author_association": "NONE",
      "body": "@SteveL-MSFT  Can .Net Core 2.1 Console app with package Microsoft.Powershell.SDK 6.1.1 installed run on a Windows without Powershell Core 6.1?\r\n\r\nI am writing a .Net core 2.1 console to execute some powershell files, but will be using Windows Powershell and I am getting $env:PSModulePath not the same.\r\n\r\n$env:PSModulePath in Windows Powershell ISE returns correct path to my modules at c:\\programfiles\\windowspowershell\r\n\r\nBut trying to call $env:PSModulePath in C# app, it will return different value with module location at c:\\programfiles\\powershell (without prefix windows). That is why I could not run PS files due to error \"Could not find any module directory\"\r\n\r\nThanks\r\n\r\n",
      "created_at": "2018-12-14T14:01:12Z",
      "updated_at": "2018-12-14T14:03:04Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@sonphnt PowerShell Core 6 has different PSModulePath than Windows PowerShell (which enables them to run side by side).  If you need the same paths as ISE (aka Windows PowerShell), you should use https://www.nuget.org/packages/Microsoft.PowerShell.5.ReferenceAssemblies/ which will use the runtime assemblies on the machine.",
      "created_at": "2018-12-18T19:30:58Z",
      "updated_at": "2018-12-18T19:30:58Z"
    },
    {
      "author": "sonphnt",
      "author_association": "NONE",
      "body": "@SteveL-MSFT  Hi, we just need to install that nuget package and done?. Any cumbersome configuration (with C# code) with that package?",
      "created_at": "2019-01-02T11:29:17Z",
      "updated_at": "2019-01-02T11:29:17Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@sonphnt it depends on what you are trying to do, but if you reference that nupkg it should just work with Windows PowerShell 5",
      "created_at": "2019-01-05T14:09:36Z",
      "updated_at": "2019-01-05T14:09:36Z"
    },
    {
      "author": "sonphnt",
      "author_association": "NONE",
      "body": "@SteveL-MSFT  What I am doing is to develop a .net core 2.1 console app and run as Windows Service. I will deploy it to a fresh Windows Server 2016 (WindowsPowershell v5) without installing anything. And hope It will work but I am not sure this is possible?\r\n\r\nhttps://www.nuget.org/packages/Microsoft.PowerShell.5.ReferenceAssemblies/ is not compatible with .net core 2.1",
      "created_at": "2019-01-11T14:12:35Z",
      "updated_at": "2019-01-11T14:16:43Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@sonphnt if you are using .net core 2.1, you must use [Microsoft.PowerShell.SDK](https://www.nuget.org/packages/Microsoft.PowerShell.SDK)",
      "created_at": "2019-01-11T17:16:18Z",
      "updated_at": "2019-01-11T17:16:18Z"
    },
    {
      "author": "sonphnt",
      "author_association": "NONE",
      "body": "@SteveL-MSFT Thanks. With .Net core 2.1, I install this nuget https://www.nuget.org/packages/Microsoft.PowerShell.SDK\r\n\r\nThen Do I need to install this ?\r\nhttps://github.com/PowerShell/PowerShell/releases/download/v6.1.1/PowerShell-6.1.1-win-x64.msi\r\n\r\n",
      "created_at": "2019-01-15T11:49:06Z",
      "updated_at": "2019-01-15T11:49:06Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@sonphnt those are two independent things.  If you are writing a C# project, you would use the Microsoft.PowerShell.SDK nuget pkg to run PowerShell within your app.  The GitHub release is so you can use PowerShell as your console.",
      "created_at": "2019-01-18T04:45:15Z",
      "updated_at": "2019-01-18T04:45:15Z"
    },
    {
      "author": "xycui",
      "author_association": "NONE",
      "body": "> @sonphnt those are two independent things. If you are writing a C# project, you would use the Microsoft.PowerShell.SDK nuget pkg to run PowerShell within your app. The GitHub release is so you can use PowerShell as your console.\r\n\r\nWhat if I am using Net Framework as the target in the new csproj format. Do you have the experience which I have mentioned in issue #8698 ",
      "created_at": "2019-01-21T09:58:33Z",
      "updated_at": "2019-01-21T09:58:33Z"
    },
    {
      "author": "antonGritsenko",
      "author_association": "NONE",
      "body": " @SteveL-MSFT, @joeyaiello I have same problem as @ImageQC with Azure Functions. Here is my project (just a new empty Azure Function in VS 2019 with Microsoft.PowerShell.SDK added):\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n    <AzureFunctionsVersion>v2</AzureFunctionsVersion>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.NET.Sdk.Functions\" Version=\"1.0.29\" />\r\n    <PackageReference Include=\"Microsoft.PowerShell.SDK\" Version=\"6.2.2\" />\r\n    <PackageReference Include=\"Newtonsoft.Json\" Version=\"12.0.2\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <None Update=\"host.json\">\r\n      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>\r\n    </None>\r\n    <None Update=\"local.settings.json\">\r\n      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>\r\n      <CopyToPublishDirectory>Never</CopyToPublishDirectory>\r\n    </None>\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nWhen try to build I got this:\r\n\r\n\r\n> d:\\.nuget\\microsoft.net.sdk.functions\\1.0.29\\build\\netstandard1.0\\Microsoft.NET.Sdk.Functions.Build.targets(41,5): error : System.IO.FileNotFoundException: Could not load file or assembly 'System.Management.Automation, Version=6.2.2.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'. The system cannot find the file specified.\r\n> d:\\.nuget\\microsoft.net.sdk.functions\\1.0.29\\build\\netstandard1.0\\Microsoft.NET.Sdk.Functions.Build.targets(41,5): error : File name: 'System.Management.Automation, Version=6.2.2.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'\r\n> d:\\.nuget\\microsoft.net.sdk.functions\\1.0.29\\build\\netstandard1.0\\Microsoft.NET.Sdk.Functions.Build.targets(41,5): error :    at System.Reflection.RuntimeAssembly.GetExportedTypes(RuntimeAssembly assembly, ObjectHandleOnStack retTypes)\r\n> d:\\.nuget\\microsoft.net.sdk.functions\\1.0.29\\build\\netstandard1.0\\Microsoft.NET.Sdk.Functions.Build.targets(41,5): error :    at System.Reflection.RuntimeAssembly.GetExportedTypes()\r\n> d:\\.nuget\\microsoft.net.sdk.functions\\1.0.29\\build\\netstandard1.0\\Microsoft.NET.Sdk.Functions.Build.targets(41,5): error :    at MakeFunctionJson.FunctionJsonConverter.TryGenerateFunctionJsons()\r\n> d:\\.nuget\\microsoft.net.sdk.functions\\1.0.29\\build\\netstandard1.0\\Microsoft.NET.Sdk.Functions.Build.targets(41,5): error :    at MakeFunctionJson.FunctionJsonConverter.TryRun()\r\n\r\nDoes Azure Functions still not supported for PSH SDK?",
      "created_at": "2019-09-12T17:14:46Z",
      "updated_at": "2019-09-12T17:19:00Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@anirudhgarg can someone on your team look into this?",
      "created_at": "2019-09-16T16:11:16Z",
      "updated_at": "2019-09-16T16:11:16Z"
    }
  ],
  "created_at": "2017-08-25T13:13:17Z",
  "labels": [
    "Issue-Question",
    "Resolution-Fixed"
  ],
  "number": 4669,
  "state": "closed",
  "title": "How to add PowerShell to an ASP.Net Core 2.0 project?",
  "updated_at": "2019-09-16T16:11:16Z"
}