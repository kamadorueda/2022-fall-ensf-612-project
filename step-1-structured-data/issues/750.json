{
  "_url": "https://github.com/PowerShell/PowerShell/issues/750",
  "author": "andschwa",
  "body": "Requires PowerShell/psl-monad#44. Due to the difference in assembly layouts between the old and new build systems, some re-architecturing had to be done. This reverts the prior work-around and integrates the necessary fix in a more correct way.\n## Remove IsNullOrEmpty requirement of basePaths\n\nNot every host must send a list of base paths. The cross-platform host,\nbuilt with .NET Core's `corehost`, has every dependent assembly in the\nTrusted Platform Assemblies list, and so does not have any path to give\nthe AssemblyLoadContext. However, due to coupling, the initialization\nfunction must still be called so that the type catalog gets initialized.\n## Disable PsSnapIn strong name assertion\n\nThe (sort of deprecated) PsSnapIn system has an assertion that the\nloaded assemblies' strong names include the processor architecture.\nHowever, assemblies built with .NET CLI do not include this in their\nstrong name, so we need to ignore the check. The better solution would\nbe to change the strong name contained in the PsSnapIn, but that's\nnowhere to be found. The best solution would be to actually deprecate\nthe PsSnapIn system.\n## Load via Assembly.Load with fallback to Path\n\nThis brings back the original code in the AssemblyLoadContext that\nattempts to load assemblies from their absolute path. We want this in\norder to not change Core PowerShell's behavior on Windows when built\noutside of .NET CLI. However, when published as a .NET Core app, all the\nassemblies are in the Trusted Platform Assemblies list, and so must be\nloaded via `Assembly.Load` instead of the path. Loading a TPA from an\nabsolute path is designed to fail.\n\n<!-- Reviewable:start -->\n\n---\n\nThis change is [<img src=\"https://reviewable.io/review_button.svg\" height=\"35\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/powershell/powershell/750)\n\n<!-- Reviewable:end -->\n",
  "closed_at": "2016-03-29T22:19:25Z",
  "comments": [
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Reviewed 2 of 2 files at r1.\nReview status: all files reviewed at latest revision, all discussions resolved.\n\n---\n\n_Comments from the [review on Reviewable.io](https://reviewable.io:443/reviews/powershell/powershell/750)_\n\n<!-- Sent from Reviewable.io -->\n",
      "created_at": "2016-03-29T22:18:59Z",
      "updated_at": "2016-03-29T22:18:59Z"
    }
  ],
  "created_at": "2016-03-29T21:41:52Z",
  "number": 750,
  "state": "closed",
  "title": "Fix the AssemblyLoadContext and Trusted Platform Assemblies problem",
  "updated_at": "2016-03-29T22:19:29Z"
}