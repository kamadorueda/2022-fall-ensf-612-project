{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5558",
  "author": "beatcracker",
  "body": "When using elastic syntax and passing both short and full parameter names, PowerShell will try to execute parameter validation on short name parameter value, even if the fully matched parameter is additionally specified. This produces misleading error message.\r\n\r\nThis also happens when splatting with hashtable that contains key that is partially matches one of the function parameters.\r\n\r\n**Bonus question:** Should fully specified argument have higher precedence that those that are specified via elastic syntax/hashtable splatting? Array splatting doesn't exhibit this issue and always uses fully specified parameter.\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\nfunction Test-ValidateNotNull {\r\n    Param (\r\n        [ValidateNotNull()]\r\n        $SomeParam\r\n    )\r\n}\r\n\r\nTest-ValidateNotNull -Some $null -SomeParam 'SomeParam'\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```none\r\nTest-ValidateNotNull : Cannot bind parameter because parameter 'SomeParam' is specified more than once. To provide multiple values to parameters that can accept \r\nmultiple values, use the array syntax. For example, \"-parameter value1,value2,value3\".\r\nAt C:\\POC\\ElasticSplat.ps1:22 char:29\r\n+ Test-ValidateNotNull @Splat -SomeParam 'SomeParam'\r\n+                             ~~~~~~~~~~\r\n    + CategoryInfo          : InvalidArgument: (:) [Test-ValidateNotNull], ParameterBindingException\r\n    + FullyQualifiedErrorId : ParameterAlreadyBound,Test-ValidateNotNull\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n```none\r\nTest-ValidateNotNull : Cannot validate argument on parameter 'SomeParam'. The argument is null. Provide a valid value for the argument, and then try running the \r\ncommand again.\r\nAt C:\\POC\\ElasticSplat.ps1:22 char:22\r\n+ Test-ValidateNotNull @Splat -SomeParam 'SomeParam'\r\n+                      ~~~~~~\r\n    + CategoryInfo          : InvalidData: (:) [Test-ValidateNotNull], ParameterBindingValidationException\r\n    + FullyQualifiedErrorId : ParameterArgumentValidationError,Test-ValidateNotNull\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n```powershell\r\n> $PSVersionTable\r\n\r\nName                           Value                                                                                                                             \r\n----                           -----                                                                                                                             \r\nPSVersion                      5.1.14409.1012                                                                                                                    \r\nPSEdition                      Desktop                                                                                                                           \r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}                                                                                                           \r\nBuildVersion                   10.0.14409.1012                                                                                                                   \r\nCLRVersion                     4.0.30319.42000                                                                                                                   \r\nWSManStackVersion              3.0                                                                                                                               \r\nPSRemotingProtocolVersion      2.3                                                                                                                               \r\nSerializationVersion           1.1.0.1    \r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Repros in PowerShell Core v6.0.0-rc. (Note that if an issue surfaces in Windows PowerShell _only_, Windows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell) would be the right place to report it.)",
      "created_at": "2017-11-28T03:56:56Z",
      "updated_at": "2017-11-28T03:56:56Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "This seems acceptable to me. If you fix the `$null`, you get the error message you want.\r\n\r\nThe parameter binder is a complex beast, but this processing is currently simple - parameters are processed in the order they are specified. Changing that for a slight improvement to an error message doesn't seem worth it.",
      "created_at": "2017-11-28T15:51:34Z",
      "updated_at": "2017-11-28T15:51:34Z"
    },
    {
      "author": "beatcracker",
      "author_association": "CONTRIBUTOR",
      "body": "> If you fix the $null, you get the error message you want.\r\n\r\nSure, just it's not always obvious like in the example. I've first encountered this issue when splatting with hashtable which contained partially matching key. Resulting error message got me sidetracked.\r\n\r\n> The parameter binder is a complex beast\r\n\r\nI'm aware of this, so I'm not pushing to make it more complex.\r\n\r\n>  parameters are processed in the order they are specified. \r\n\r\nThis produces correct error message even with splatting\r\n\r\n```posh\r\nTest-ValidateNotNull -SomeParam 'SomeParam' @Splat\r\n```\r\n\r\nwhich more then enough for me. Thanks!\r\n\r\nMaybe parameter binding order should be documented somewhere? There's nothing about in the \r\n[About Parameters](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_parameters)/[About Functions Advanced Parameters](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_functions_advanced_parameters) docs.",
      "created_at": "2017-11-28T16:19:55Z",
      "updated_at": "2017-11-28T16:19:55Z"
    }
  ],
  "created_at": "2017-11-28T00:02:36Z",
  "labels": [
    "WG-Engine",
    "Issue-Discussion"
  ],
  "number": 5558,
  "state": "open",
  "title": "Using elastic syntax should not execute parameter validation if parameter binding is ambiguous",
  "updated_at": "2017-11-28T16:19:56Z"
}