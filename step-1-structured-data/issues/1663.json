{
  "_url": "https://github.com/PowerShell/PowerShell/issues/1663",
  "author": "andschwa",
  "body": "Note: filing from emailed bug report.\n## Steps to reproduce\n\n``` powershell\n> Write-Host \"\"\n```\n## Expected behavior\n\nBlank line, no failure.\n## Actual behavior\n\nGiven a bad host where the hostname is unavailable:\n\n```\nwrite-host : Unix.NonWindowsHostName error: 67\nAt /Users/wlam/.config/powershell/Microsoft.PowerShell_profile.ps1:45 char:1\n+ write-host \"\"\n+ ~~~~~~~~~~~~~\n    + CategoryInfo          : NotSpecified: (:) [Write-Host], InvalidOperationException\n    + FullyQualifiedErrorId : System.InvalidOperationException,Microsoft.PowerShell.Commands.WriteHostCommand\n\nMessage=Unix.NonWindowsHostName error: 67;\nData=System.Collections.ListDictionaryInternal;\nInnerException=;\nStackTrace=  \n  at System.Management.Automation.Platform.NonWindowsGetHostName() in /Users/andrew/src/PowerShell/src/System.Management.Automation/CoreCLR/CorePsPlatform.cs:line 347\n  at System.Management.Automation.PsUtils.GetHostName() in /Users/andrew/src/PowerShell/src/System.Management.Automation/utils/PsUtils.cs:line 595\n  at System.Management.Automation.InformationRecord..ctor(Object messageData, String source) in /Users/andrew/src/PowerShell/src/System.Management.Automation/engine/InformationRecord.cs:line 50\n  at System.Management.Automation.Cmdlet.WriteInformation(Object messageData, String[] tags) in /Users/andrew/src/PowerShell/src/System.Management.Automation/engine/cmdlet.cs:line 700\n  at Microsoft.PowerShell.Commands.WriteHostCommand.ProcessRecord() in /Users/andrew/src/PowerShell/src/Microsoft.PowerShell.Commands.Utility/commands/utility/WriteConsoleCmdlet.cs:line 174\n  at System.Management.Automation.Cmdlet.DoProcessRecord() in /Users/andrew/src/PowerShell/src/System.Management.Automation/engine/cmdlet.cs:line 185\n  at System.Management.Automation.CommandProcessor.ProcessRecord() in /Users/andrew/src/PowerShell/src/System.Management.Automation/engine/CommandProcessor.cs:line 342;\nHelpLink=;\nSource=System.Management.Automation;\nHResult=-2146233079\n```\n## Environment data\n\nWas not provided.\n## Proposed Resolution\n\nMake NonWindowsHostName never fail. This means catching any errors or empty results and returning a valid (but incorrect) result so that PowerShell doesn't crash.\n\n/cc @joeyaiello \n",
  "closed_at": "2016-08-08T18:10:53Z",
  "comments": [
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "We do need to do something about the debug files.\n\nI'll start producing builds from a folder under my root drive, so this becomes `/powershell/src/etc.`\n",
      "created_at": "2016-08-05T17:58:31Z",
      "updated_at": "2016-08-05T17:58:31Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Huh. Easy fix. For some unknown reason we were purposefully throwing.\n",
      "created_at": "2016-08-05T18:09:44Z",
      "updated_at": "2016-08-05T18:09:44Z"
    }
  ],
  "created_at": "2016-08-05T17:57:27Z",
  "number": 1663,
  "state": "closed",
  "title": "NonWindowsHostName not guarded",
  "updated_at": "2016-08-08T18:10:58Z"
}