{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10750",
  "author": "KirkMunro",
  "body": "# Summary of the new feature/enhancement\r\n\r\nAs a PowerShell scripter who uses named custom types often\r\nI want to be able to use the `-is` and `-isnot` operators to determine if something is of a custom type\r\nso that I can always check for types the same way in PowerShell.\r\n\r\n# Proposed technical implementation details (optional)\r\n\r\nThe issue here is simple: if you create a custom, named type, and you want to check if an object is that custom, named type, you need to perform that check differently than how you check for any other type.\r\n\r\nFor example, consider this:\r\n\r\n```powershell\r\n$o = [pscustomobject]@{\r\n    PSTypeName = 'Dr.Seuss'\r\n    OneFish = 'Two fishes'\r\n    RedFish = 'Blue fishes'\r\n}\r\nfunction Test-DrSeuss {\r\n    [CmdletBinding()]\r\n    param(\r\n        [Parameter(Mandatory, ValueFromPipeline)]\r\n        [PSTypeName('Dr.Seuss')]\r\n        $InputObject\r\n    )\r\n    process {\r\n        'Horton heard you!'\r\n    }\r\n}\r\n$o | Test-DrSeuss\r\n$o -is [PSTypeName('Dr.Seuss')]\r\n```\r\n\r\nWhen you hit enter on the last line, the PowerShell parser will be waiting for more input because it recognizes `[PSTypeName('Dr.Seuss')]` as an attribute, and it's looking for either a string or a type name.\r\n\r\nI would like to change this so that I can use `-is` (and `Should -BeOfType` in Pester, which uses `-is` internally) to check if an object is a custom object with a specific type name.\r\n\r\nThe workaround is to check the object's `PSTypeNames` property to see if it contains the type name, but since we can identify types on property input in cmdlets using the PSTypeName attribute, it would be more consistent if we could do the same with the `-is` and `-isnot` operators.\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "Related: https://github.com/pester/Pester/issues/1315.",
      "created_at": "2019-10-09T20:58:53Z",
      "updated_at": "2019-10-09T20:58:53Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Hmm. Honestly, I think we should be able to just do this with `-is 'Dr.Seuss'`; complicating the parsing by introducing the attribute doesn't feel like something we should need to do?\r\n\r\nThat would mean Pester may need to adjust how it does `-BeOfType` to accommodate it in the same way, but I don't think we should have an overly complex syntax for it either way.",
      "created_at": "2019-10-09T21:22:10Z",
      "updated_at": "2019-10-09T21:22:10Z"
    },
    {
      "author": "fflaten",
      "author_association": "CONTRIBUTOR",
      "body": "3 years later, status?\n\nString vs attribute? Both? String is cleaner, but no way to identify type name from real class (use cases?)? Also inconsistency with parameter-attribute.\n\nAccepted extension for `-is` by WG and/or team and just waiting for PR?",
      "created_at": "2022-08-09T10:44:05Z",
      "updated_at": "2022-08-09T10:44:05Z"
    }
  ],
  "created_at": "2019-10-09T20:58:04Z",
  "number": 10750,
  "state": "open",
  "title": "Allow custom type names (e.g. `[PSTypeName('Custom.Type.Name')]`) to be used on the right-hand side of the `-is` and `-isnot` operators",
  "updated_at": "2022-08-22T21:01:35Z"
}