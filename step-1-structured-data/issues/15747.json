{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15747",
  "author": "superbonaci",
  "body": "### Prerequisites\n\n- [X] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\n\n### Steps to reproduce\n\nI'm trying to run [this FOR script](https://superuser.com/questions/823959/how-to-view-all-the-symbolic-links-junction-points-hard-links-in-a-folder-using/1138469#1138469) which works in `cmd.exe`:\r\n````\r\nFOR /F \"Tokens=*\" %A IN ('DIR /al /b /s G:\\') DO @( for /F \"Tokens=2,4 delims=<[]>\" %B IN ('DIR /al \"%~A\"? ^| FIND /I \" %~nA \" ^| FIND /I \"<\" ^| FIND /I \">\" ') DO @( ECHO.%~B: \"%~A\" \u2192 \"%~C\" ) )\r\n````\n\n### Expected behavior\n\n```console\nPrint all links\n```\n\n\n### Actual behavior\n\n```console\nError:\r\n`\r\nParserError:\r\nLine |\r\n   1 |  FOR /F \"Tokens=*\" %A IN ('DIR /al /b /s G:\\') DO @( for /F \"Tokens=2, \u2026\r\n     |     ~\r\n     | Missing opening '(' after keyword 'for'.\r\n````\n```\n\n\n### Error details\n\n_No response_\n\n### Environment data\n\n```powershell\n`\r\n$PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.3\r\nPSEdition                      Core\r\nGitCommitId                    7.1.3\r\nOS                             Microsoft Windows 10.0.19043\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n````\n```\n\n\n### Visuals\n\n_No response_",
  "closed_at": "2021-07-09T09:31:33Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "`for` is not a native application, it's an internal command used by Command Prompt. So yes, you cannot use it without using Command Prompt.\r\n\r\nPowerShell does not follow the language nor internal functions of Command Prompt, it has its own syntax and grammar that needs to be followed, just like any other programming language.\r\n\r\nTry `Get-Help about_for` for instructions on using PowerShell's `for` statement.",
      "created_at": "2021-07-09T03:34:41Z",
      "updated_at": "2021-07-09T03:34:55Z"
    },
    {
      "author": "superbonaci",
      "author_association": "NONE",
      "body": "So could you reformulate that command for powershell?",
      "created_at": "2021-07-09T04:42:37Z",
      "updated_at": "2021-07-09T04:42:37Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "If you're looking for reparse points, try:\r\n```poweshell\r\nGet-ChildItem G:\\ | Where-Object Attributes -match ReparsePoint\r\n```\r\nIf you need to search recursively, add the `-Recurse` parameter to `Get-ChildItem`.",
      "created_at": "2021-07-09T04:54:32Z",
      "updated_at": "2021-07-09T04:55:48Z"
    },
    {
      "author": "superbonaci",
      "author_association": "NONE",
      "body": "> \r\n> \r\n> If you're looking for reparse points, try:\r\n> \r\n> ```\r\n> Get-ChildItem G:\\ | Where-Object Attributes -match ReparsePoint\r\n> ```\r\n> \r\n> If you need to search recursively, add the `-Recurse` parameter to `Get-ChildItem`.\r\n\r\nIt works, but it adds too much metadata when searching recursively:\r\n````\r\n    Directory: G:\\folder\r\n\r\nMode                 LastWriteTime         Length Name\r\n----                 -------------         ------ ----\r\nl----           4/26/2020  2:27 AM                pics -> D:\\share\\doc\\html\\use\r\n````\r\n\r\nHow to get this result?:\r\n````\r\nG:\\folder\\pics -> D:\\share\\doc\\html\\use\r\nG:\\xx -> C:\\doc\\yy\r\n...\r\n````",
      "created_at": "2021-07-09T05:01:29Z",
      "updated_at": "2021-07-09T05:04:18Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "```powershell\r\nGet-ChildItem G:\\ | Where-Object Attributes -match ReparsePoint | Format-Table FullName,Target\r\n```",
      "created_at": "2021-07-09T05:15:37Z",
      "updated_at": "2021-07-09T05:15:37Z"
    },
    {
      "author": "superbonaci",
      "author_association": "NONE",
      "body": "> Get-ChildItem G:\\ | Where-Object Attributes -match ReparsePoint | Format-Table FullName,Target\r\n\r\nThat's more like it, however it does not display the full path, just abbreviations:\r\n````\r\nPS C:\\> Get-ChildItem -Recurse C:\\ | Where-Object Attributes -match ReparsePoint | Format-Table FullName,Target\r\n\r\nFullName                                 Target\r\n--------                                 ------\r\nC:\\Program Files\\Common Files\\Oracle\\Ja\u2026 C:\\Pr\u2026\r\n````",
      "created_at": "2021-07-09T06:25:04Z",
      "updated_at": "2021-07-09T06:25:04Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Get-ChildItem -Recurse C:\\ | Where-Object Attributes -match ReparsePoint | Format-Table FullName,Target -AutoSize\r\nor\r\nGet-ChildItem -Recurse C:\\ | Where-Object Attributes -match ReparsePoint | Format-List FullName,Target",
      "created_at": "2021-07-09T07:29:23Z",
      "updated_at": "2021-07-09T07:29:23Z"
    },
    {
      "author": "superbonaci",
      "author_association": "NONE",
      "body": "@iSazonov perfect just what needed.",
      "created_at": "2021-07-09T09:31:33Z",
      "updated_at": "2021-07-09T09:31:33Z"
    }
  ],
  "created_at": "2021-07-09T03:15:07Z",
  "number": 15747,
  "state": "closed",
  "title": "Can't use FOR from cmd.exe",
  "updated_at": "2021-07-09T09:31:33Z"
}