{
  "_url": "https://github.com/PowerShell/PowerShell/issues/1888",
  "author": "ghost",
  "body": "<!--\n\nIf it is a bug report:\n- make sure you are able to repro it on the latest released version. \nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\n- Search the existing issues.\n- Refer to the [FAQ](../docs/FAQ.md).\n- Refer to the [known issues](../docs/KNOWNISSUES.md).\n- Fill out the following repro template\n\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\n-->\n## Steps to reproduce\n\nType any command and then press Home key on keyboard.\n## Expected behavior\n\nCursor should go to the beginning of the line.\n## Actual behavior\n\n~ character is created.\n## Environment data\n\n<!-- provide the output of $PSVersionTable -->\n\n``` powershell\n> $PSVersionTable\nName                           Value\n----                           -----\nPSVersion                      6.0.0-alpha\nPSEdition                      Core\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\nBuildVersion                   3.0.0.0\nGitCommitId                    v6.0.0-alpha.9\nCLRVersion\nWSManStackVersion              3.0\nPSRemotingProtocolVersion      2.3\nSerializationVersion           1.1.0.1\n\n```\n",
  "closed_at": "2016-08-19T16:20:17Z",
  "comments": [
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "This is likely a problem with your `TERM` setting and how `Console.ReadKey()` works (which has bleeding-edge support for Linux!).\n\nIf you can track it down, please feel free to file bugs with https://github.com/dotnet/corefx. I _think_ that .NET Core's implementation is technically correct, meaning that I don't think it handles `TERM` settings being incorrect but close, and it should probably try to \"do what I mean\" when it receives a `HOME` code for a termcap entry differing from the user's `TERM`.\n",
      "created_at": "2016-08-18T17:45:10Z",
      "updated_at": "2016-08-18T17:45:10Z"
    },
    {
      "author": "ealexjordan",
      "author_association": "CONTRIBUTOR",
      "body": "Agree with @andschwa. This was observed awhile ago in issue https://github.com/PowerShell/PowerShell/issues/421. Perhaps we should reopen that issue? \n",
      "created_at": "2016-08-18T18:22:17Z",
      "updated_at": "2016-08-18T18:22:17Z"
    },
    {
      "author": "ghost",
      "author_association": "NONE",
      "body": "I'm using Bash on Windows to SSH into an Ubuntu box in Azure (where PowerShell is installed).  Expected behavior is happening from the bash shell before launching the powershell command.\n\nWhat TERM setting should be adjusted to resolve this?\n",
      "created_at": "2016-08-18T18:45:53Z",
      "updated_at": "2016-08-18T18:45:53Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "What TERM to use is entirely up to your terminal emulator (your Windows console), we'd have to dig into the WSL docs to determine that. If I had to hazard an absolute guess, maybe vt100?\n",
      "created_at": "2016-08-18T19:46:21Z",
      "updated_at": "2016-08-18T19:46:21Z"
    },
    {
      "author": "ghost",
      "author_association": "NONE",
      "body": "Sorry, I was wrong - I'm using Putty to get into the Ubuntu VM on Azure.  On the machine where PowerShell is installed I have xterm seems to be used (echo $TERM results in xterm).\n\nI'm outside my area of expertise here but if it were a TERM issue wouldn't the same behavior happen on both the native bash shell and in PowerShell?  That is not the case - before launching powershell I'm able to use the Home and End keys as expected however when I'm in powershell both just display ~ character.\n",
      "created_at": "2016-08-18T19:52:05Z",
      "updated_at": "2016-08-18T19:52:05Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Bash uses GNU Readline, which is far more mature than .NET Core's Console.ReadKey().\n\nFor PuTTY, I recommend https://sanctum.geek.nz/arabesque/putty-configuration/\n",
      "created_at": "2016-08-18T19:59:48Z",
      "updated_at": "2016-08-18T19:59:48Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "(Bash on Windows is now very confusing terminology!)\n",
      "created_at": "2016-08-18T20:00:34Z",
      "updated_at": "2016-08-18T20:00:34Z"
    },
    {
      "author": "ghost",
      "author_association": "NONE",
      "body": "When using Putty to connect to the Ubuntu box I'm getting this (note the ~~ characters after get-date, created by pressing Home and End buttons respectively):\n\n> ored@ubuntu:~$ echo $TERM\n> xterm\n> ored@ubuntu:~$ powershell\n> PowerShell\n> Copyright (C) 2016 Microsoft Corporation. All rights reserved.\n> \n> PS /home/ored> get-date**~~**\n\nWhen I use Bash on Windows to SSH into the box I'm getting a different behavior (note the HF characters after get-date, created by pressing Home and End buttons respectively):  \n\n> ored@ubuntu:~$ echo $TERM\n> xterm-256color\n> ored@ubuntu:~$ powershell\n> PowerShell\n> Copyright (C) 2016 Microsoft Corporation. All rights reserved.\n> \n> PS /home/ored> get-date**HF**\n",
      "created_at": "2016-08-18T20:01:16Z",
      "updated_at": "2016-08-18T20:01:16Z"
    },
    {
      "author": "ghost",
      "author_association": "NONE",
      "body": "Putting 'putty-256color' into my Terminal-type string setting (per your link) in Putty did make Home and End work now within powershell on my remote host as expected.\n",
      "created_at": "2016-08-18T20:10:56Z",
      "updated_at": "2016-08-18T20:10:56Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Awesome, I'm glad that worked out.\n",
      "created_at": "2016-08-19T16:20:16Z",
      "updated_at": "2016-08-19T16:20:16Z"
    },
    {
      "author": "mzhboy",
      "author_association": "NONE",
      "body": "I'm using xshell and I change the `Terminal Type` to ~~`putty-256color`~~ `screen.xterm-256color` / `tmux-256color` / `screen-256color`  to solve this problem\r\nor you can edit .bashrc \r\nadd `[[ $TERM == \"xterm\" ]] && [[ -f /usr/lib/terminfo/s/screen.xterm-256color ]] && export TERM=screen.xterm-256color`",
      "created_at": "2019-03-08T11:27:01Z",
      "updated_at": "2022-04-01T04:38:12Z"
    },
    {
      "author": "verdelyi",
      "author_association": "NONE",
      "body": "`export TERM=putty-256color` works for me in the following scenario:\r\n1. Start PowerShell Core 6 on Windows client\r\n2. SSH into Ubuntu (bash opens)\r\n3. Start PowerShell Core 6 on Ubuntu\r\n...meaning no actual Putty involved. Other TERM options seem to fail.",
      "created_at": "2019-11-29T10:17:26Z",
      "updated_at": "2019-11-29T10:17:26Z"
    }
  ],
  "created_at": "2016-08-18T17:33:52Z",
  "labels": [],
  "number": 1888,
  "state": "closed",
  "title": "Home key is not taking me to beginning of the line",
  "updated_at": "2022-04-01T04:38:12Z"
}