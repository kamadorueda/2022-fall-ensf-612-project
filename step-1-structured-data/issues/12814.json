{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12814",
  "author": "atanasa",
  "body": "# Steps to reproduce\r\n\r\nI cannot reproduce it consistently so far.\r\nLooking at the process through a debugger, it looks like:\r\n1. Create a cmdlet that calls into System.Management.Automation.Cmdlet.WriteProgress\r\n2. Use ssh to start a pwsh process and call the cmdlet on OS X\r\n\r\nProbably calling Write-Progress should do it as well, but I haven't been able to reproduce it with it.\r\n\r\nMy full process stack is:\r\n- pwsh running the cmdlets\r\n- pwsh\r\n- sudo\r\n- expect\r\n- sshd\r\n--- network ---\r\n- .Net ssh client using ssh.net running on Windows 10\r\n\r\n# Expected behavior\r\n\r\nExecution finishes.\r\n\r\n# Actual behavior\r\n\r\nSometimes the PowerShell process hangs.\r\n\r\n# Environment data\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0\r\nOS                             Darwin 17.3.0 Darwin Kernel Version 17.3.0: Thu Nov 30 16:32:47 PST 2017; root:xnu-4570.37.11~1/RELEASE_X86_64\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\nI used lldb to get some information about the state of the process. I have a process hanging on Ubuntu as well, but I am still not able to debug it to verify that this is the same issue, but it has a high probability.\r\n\r\nHere is a stack trace of the thread where the cmdlet runs:\r\n\r\n```none\r\n(lldb) clrstack -p\r\nOS Thread Id: 0x135fd7 (13)\r\n        Child SP               IP Call Site\r\n000070000B77E830 00007fff53b8641a [InlinedCallFrame: 000070000b77e830] Interop+Sys.ReadStdin(Byte*, Int32)\r\n000070000B77E830 0000000119fdad92 [InlinedCallFrame: 000070000b77e830] Interop+Sys.ReadStdin(Byte*, Int32)\r\n000070000B77E820 0000000119FDAD92 ILStubClass.IL_STUB_PInvoke(Byte*, Int32)\r\n    PARAMETERS:\r\n        <no data>\r\n        <no data>\r\n\r\n000070000B77E8F0 000000011A0C8C99 System.ConsolePal.TryGetCursorPosition(Int32 ByRef, Int32 ByRef, Boolean) [/_/src/System.Console/src/System/ConsolePal.Unix.cs @ 521]\r\n    PARAMETERS:\r\n        left (0x000070000B77EA20) = 0x000070000b77eba0\r\n        top (0x000070000B77EA18) = 0x000070000b77eb98\r\n        reinitializeForRead (0x000070000B77EB54) = 0x0000000000000000\r\n\r\n000070000B77EB90 000000011A0C6647 System.Console.get_CursorTop() [/_/src/System.Console/src/System/Console.cs @ 277]\r\n\r\n000070000B77EBB0 00000001168A2CF4 Microsoft.PowerShell.ConsoleHostRawUserInterface.get_CursorPosition()\r\n    PARAMETERS:\r\n        this (0x000070000B77EBC8) = 0x00000001877aa240\r\n\r\n000070000B77EBE0 00000001168B2F42 Microsoft.PowerShell.ProgressPane.Show()\r\n    PARAMETERS:\r\n        this (0x000070000B77ED00) = 0x000000018b04dca8\r\n\r\n000070000B77ED20 00000001168B365C Microsoft.PowerShell.ProgressPane.Show(Microsoft.PowerShell.PendingProgress)\r\n    PARAMETERS:\r\n        this (0x000070000B77EDD0) = 0x000000018b04dca8\r\n        pendingProgress (0x000070000B77EDC8) = 0x000000018b04dbd8\r\n\r\n000070000B77EDF0 00000001168A9124 Microsoft.PowerShell.ConsoleHostUserInterface.HandleIncomingProgressRecord(Int64, System.Management.Automation.ProgressRecord)\r\n    PARAMETERS:\r\n        this (0x000070000B77EE40) = 0x00000001877a8f10\r\n        sourceId (0x000070000B77EE38) = 0x0000000000000001\r\n        record (0x000070000B77EE30) = 0x000000018b04dab8\r\n\r\n000070000B77EE60 00000001168A6986 Microsoft.PowerShell.ConsoleHostUserInterface.WriteProgress(Int64, System.Management.Automation.ProgressRecord)\r\n    PARAMETERS:\r\n        this (0x000070000B77EF10) = 0x00000001877a8f10\r\n        sourceId (0x000070000B77EF08) = 0x0000000000000001\r\n        record (0x000070000B77EF00) = 0x000000018b04dab8\r\n\r\n000070000B77EF30 0000000117A0094B System.Management.Automation.Internal.Host.InternalHostUserInterface.WriteProgress(Int64, System.Management.Automation.ProgressRecord)\r\n    PARAMETERS:\r\n        this (0x000070000B77EF58) = 0x00000001877d2028\r\n        sourceId (0x000070000B77EF50) = 0x0000000000000001\r\n        record (0x000070000B77EF48) = 0x000000018b04dab8\r\n\r\n000070000B77EF70 000000011756AA7A System.Management.Automation.MshCommandRuntime.WriteProgress(Int64, System.Management.Automation.ProgressRecord, Boolean)\r\n    PARAMETERS:\r\n        this (0x000070000B77F078) = 0x000000018b033d20\r\n        sourceId (0x000070000B77F070) = 0x0000000000000001\r\n        progressRecord (0x000070000B77F068) = 0x000000018b04dab8\r\n        overrideInquire (0x000070000B77F064) = 0x0000000000000000\r\n\r\n000070000B77F0A0 000000011756A795 System.Management.Automation.MshCommandRuntime.WriteProgress(System.Management.Automation.ProgressRecord, Boolean)\r\n    PARAMETERS:\r\n        this (0x000070000B77F0C8) = 0x000000018b033d20\r\n        progressRecord (0x000070000B77F0C0) = 0x000000018b04dab8\r\n        overrideInquire (0x000070000B77F0BC) = 0x0000000000000000\r\n\r\n000070000B77F0E0 000000011756A6E3 System.Management.Automation.MshCommandRuntime.WriteProgress(System.Management.Automation.ProgressRecord)\r\n    PARAMETERS:\r\n        this (0x000070000B77F0E8) = 0x000000018b033d20\r\n        progressRecord (0x000070000B77F0E0) = 0x000000018b04dab8\r\n\r\n000070000B77F100 000000011741E3B4 System.Management.Automation.Cmdlet.WriteProgress(System.Management.Automation.ProgressRecord)\r\n    PARAMETERS:\r\n        this (0x000070000B77F140) = 0x000000018b02d030\r\n        progressRecord (0x000070000B77F138) = 0x000000018b04dab8\r\n\r\n000070000B77F160 000000011F3936EE VMware.VimAutomation.Sdk.Util10Ps.BaseCmdlet.BaseCmdlet.ProgressCallback(VMware.VimAutomation.Sdk.Types.V1.Task, System.Object, Boolean)\r\n    PARAMETERS:\r\n        this (0x000070000B77F1E8) = 0x000000018b02d030\r\n        task (0x000070000B77F1E0) = 0x000000018b0ea6d0\r\n        result (0x000070000B77F1D8) = 0x0000000000000000\r\n        writeResultToScreen (0x000070000B77F1D4) = 0x0000000000000000\r\n\r\n000070000B77F210 000000011F37A85B VMware.VimAutomation.Sdk.Util10Ps.BaseCmdlet.BaseCmdlet.EndProcessingErrorHandled()\r\n    PARAMETERS:\r\n        this (0x000070000B77F2E0) = 0x000000018b02d030\r\n\r\n000070000B77F300 000000011F37A520 VMware.VimAutomation.ViCore.Util10Ps.BaseCmdlet.BaseCmdlet.EndProcessingErrorHandled()\r\n    PARAMETERS:\r\n        this (0x000070000B77F318) = 0x000000018b02d030\r\n\r\n000070000B77F330 000000011F35ABA7 VMware.VimAutomation.Sdk.Util10Ps.BaseCmdlet.ErrorCallbackCmdletBase.EndProcessing()\r\n    PARAMETERS:\r\n        this (0x000070000B77F3A0) = 0x000000018b02d030\r\n\r\n000070000B77F3C0 000000011741D902 System.Management.Automation.Cmdlet.DoEndProcessing()\r\n    PARAMETERS:\r\n        this (0x000070000B77F3C8) = 0x000000018b02d030\r\n\r\n000070000B77F3E0 000000011749F334 System.Management.Automation.CommandProcessorBase.Complete()\r\n    PARAMETERS:\r\n        this (0x000070000B77F430) = 0x000000018b02c8f0\r\n\r\n000070000B77F450 000000011749F527 System.Management.Automation.CommandProcessorBase.DoComplete()\r\n    PARAMETERS:\r\n        this (0x000070000B77F4E0) = 0x000000018b02c8f0\r\n\r\n000070000B77F500 00000001179E4A16 System.Management.Automation.Internal.PipelineProcessor.DoCompleteCore(System.Management.Automation.CommandProcessorBase)\r\n    PARAMETERS:\r\n        this (0x000070000B77F650) = 0x000000018b02c818\r\n        commandRequestingUpstreamCommandsToStop (0x000070000B77F648) = 0x0000000000000000\r\n\r\n000070000B77F670 00000001179E44A2 System.Management.Automation.Internal.PipelineProcessor.SynchronousExecuteEnumerate(System.Object)\r\n    PARAMETERS:\r\n        this (0x000070000B77F810) = 0x000000018b02c818\r\n        input (0x000070000B77F808) = 0x00000001877d4528\r\n\r\n000070000B77F830 000000011763D389 System.Management.Automation.PipelineOps.InvokePipeline(System.Object, Boolean, System.Management.Automation.CommandParameterInternal[][], System.Management.Automation.Language.CommandBaseAst[], System.Management.Automation.CommandRedirection[][], System.Management.Automation.Language.FunctionContext)\r\n    PARAMETERS:\r\n        input (0x000070000B77F9F8) = 0x00000001877d4528\r\n        ignoreInput (0x000070000B77F9F4) = 0x0000000000000001\r\n        pipeElements (0x000070000B77F9E8) = 0x000000018b02c7f0\r\n        pipeElementAsts (0x000070000B77F9E0) = 0x0000000188c9d760\r\n        commandRedirections (0x000070000B77F9D8) = 0x0000000000000000\r\n        funcContext (0x000070000B77F9D0) = 0x0000000188cae7a0\r\n<truncated>\r\n```\r\n\r\nI've attached the stack traces of the other threads and the full stack of this thread if you need it: \r\n[pwsh stack trace.txt](https://github.com/PowerShell/PowerShell/files/4682667/pwsh.stack.trace.txt)\r\n\r\nIf you need more debug information, I might be able to extract more data from the process.\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "What is a client you use?",
      "created_at": "2020-06-01T17:17:01Z",
      "updated_at": "2020-06-01T17:17:01Z"
    },
    {
      "author": "atanasa",
      "author_association": "NONE",
      "body": "The client is a .net console application that buffers the output of the command. It does not sends to the console the output until the command completes. It does not expect the command to prompt and wait for input as the script that is being executed does not require input.",
      "created_at": "2020-06-02T11:26:48Z",
      "updated_at": "2020-06-02T11:26:48Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Are you using a custom PowerShell host?",
      "created_at": "2020-06-02T12:49:41Z",
      "updated_at": "2020-06-02T12:49:41Z"
    },
    {
      "author": "atanasa",
      "author_association": "NONE",
      "body": "The host on the remote machine is pwsh. On the local machine the client is called from PowerShell 5.1 job.",
      "created_at": "2020-06-02T13:15:17Z",
      "updated_at": "2020-06-02T13:15:17Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Okay, so you have a PowerShell 5.1 background job (which already doesn't support progress, not even properly sure how that will behave actually come to think of it) which is remoting to a pwsh client, and that pwsh client is hanging when it calls WriteProgress().\r\n\r\nThat's quite a lot of variables, but let's see about the low-hanging fruit. Can you test the behaviour here if you run the PowerShell 5.1 session interactively rather than as a background job? And if at all possible I'd also ask that you test with pwsh 7 (as a background job, and interactively) on the local machine as well, just to rule out a few extra variables here. \ud83d\ude42 ",
      "created_at": "2020-06-02T13:18:40Z",
      "updated_at": "2020-06-02T13:18:56Z"
    },
    {
      "author": "atanasa",
      "author_association": "NONE",
      "body": "The flow is:\r\nPowerShell 5.1 job > custom ssh console exe > network (ssh) > sshd > expect > sudo > pwsh > pwsh\r\nI will try with cutting the flow to only the last two process as I think we have encountered the issue before using only that.\r\nIt does not reproduce always so it might take some time.\r\n",
      "created_at": "2020-06-03T11:42:18Z",
      "updated_at": "2020-06-03T11:42:18Z"
    }
  ],
  "created_at": "2020-05-27T12:23:24Z",
  "labels": [
    "Issue-Question",
    "OS-macOS",
    "WG-Interactive-Console",
    "WG-Remoting"
  ],
  "number": 12814,
  "state": "open",
  "title": "PowerShell hangs at Cmdlet.WriteProgress on OS X",
  "updated_at": "2021-01-16T15:27:06Z"
}