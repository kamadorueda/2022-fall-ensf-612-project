{
  "_url": "https://github.com/PowerShell/PowerShell/issues/8741",
  "author": "adityapatwardhan",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->  \r\n\r\n## PR Summary\r\n\r\nMany types were already visible publicly either as attributes or as OutputType. This change marks them as public.\r\n\r\n- `ValidateVariableNameAttribute`  - is used by a public property `CommonParameters.ErrorVariable`\r\n- `ArgumentToVersionTransformationAttribute` - is used by a public property `SetStrictModeCommand.Version`\r\n- `ValidateVersionAttribute` - is used by a public property `SetStrictModeCommand.Version`\r\n- `EnumSingleTypeConverter` and `EnumMultipleTypeConverter ` - classes had public methods\r\n- `ArgumentToModuleTransformationAttribute` - used by `Save-Help` command for `Module` parameter.\r\n- `ArgumentToEncodingTransformationAttribute` - used by multiple cmdlets for `Encoding` parameter.\r\n\r\nAlso, changed the output type of `Start-Job` from `PSRemotingJob` to `Job`\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.  \r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**  \r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n        - [ ] [Add `[feature]` to your commit messages if the change is significant or affects feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\r\n",
  "closed_at": "2019-03-09T20:16:35Z",
  "comments": [
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "What is the motivation for making these types public?  For example, I believe `PSRemotingJob` was meant for internal implementation and only its base class `Job` was meant for public use.",
      "created_at": "2019-01-25T17:17:55Z",
      "updated_at": "2019-01-25T17:17:55Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "I'm not totally sure I understand the motivation - maybe an upcoming change in the CLR?\r\n\r\nI haven't reviewed the changes closely, but after a quick glance, if a CLR change forces these types to be public, I'd move them to an `Internal` namespace to make it clear they are implementation details, and probably add an `Obsolete` attribute to discourage/disallow their use in other assemblies.",
      "created_at": "2019-01-25T20:53:23Z",
      "updated_at": "2019-01-25T20:53:23Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@lzybkr - We are planning to use [GenAPI](https://github.com/dotnet/buildtools) to build reference assemblies. These types are not found when compiling the generated `.cs` file, as they are marked as internal. I believe all of them should be marked as public, hence the change.",
      "created_at": "2019-01-25T21:55:27Z",
      "updated_at": "2019-01-25T21:55:27Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "I see. I'm assuming that custom attributes are always included in the reference assembly just in case a build tool like the C# compiler needs to see the attribute to generate correct code or check for errors.\r\n\r\nI'm not aware of any build tool that needs to see PowerShell's attributes, so I would expect careful thought before blindly making these types public.\r\n\r\nMany of the names are not good public apis - they maybe sound too general, e.g.\r\n* `ArgumentToVersionTransformationAttribute` is quite specific and special w.r.t. PowerShell versions\r\n* `ValidateVariableName` is missing the `Attribute` suffix and validates in a very specific way that is not as general as the name suggests.\r\n* `ArgumentToModuleTransformationAttribute` sounds promising and useful, yet it's only used in one place in PowerShell - so maybe it's not really that useful.\r\n\r\nI wonder if `EnumMultipleTypeConverter` needs to be applied as an attribute at all - it's applied on types that are also `Flags`, so it's sort of ambiguous - should the conversion produce a single value or multiple values. If that could be removed, then maybe you can avoid exposing the `Enum*TypeConverter` types.\r\n",
      "created_at": "2019-01-26T00:37:53Z",
      "updated_at": "2019-01-26T00:37:53Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "> EnumSingleTypeConverter and EnumMultipleTypeConverter - classes had public methods\r\n\r\nHaving public methods doesn't seem to be a strong argument to make them public. We have other internal types with `public` modifier applied to its methods or properties. These 2 types are not attributes, so how are they exposed by `GenApi`?",
      "created_at": "2019-01-26T11:16:27Z",
      "updated_at": "2019-01-26T11:16:27Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "If GenAPI doesn't work because the types is visible externally it is GenAPI problem and it would be fixed in GenAPI. Or we could create a workaround on PowerShell to resolve the problem.",
      "created_at": "2019-01-26T12:55:24Z",
      "updated_at": "2019-01-26T12:55:24Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "I will shortly add a gist of the `.cs` file generated by `GenAPI`.",
      "created_at": "2019-01-28T19:06:59Z",
      "updated_at": "2019-01-28T19:06:59Z"
    },
    {
      "author": "stale[bot]",
      "author_association": "NONE",
      "body": "This PR has been automatically marked as stale because it has not had activity in the last 30 days. It will be closed if no further activity occurs within 10 days.\nThank you for your contributions.\nCommunity members are welcome to grab these works.\n",
      "created_at": "2019-02-27T19:18:54Z",
      "updated_at": "2019-02-27T19:18:54Z"
    },
    {
      "author": "stale[bot]",
      "author_association": "NONE",
      "body": "This PR has been automatically closed because it is stale. If you wish to continue working on the PR, please first update the PR, then reopen it.\nThanks again for your contribution.\nCommunity members are welcome to grab these works.\n",
      "created_at": "2019-03-09T20:16:34Z",
      "updated_at": "2019-03-09T20:16:34Z"
    }
  ],
  "created_at": "2019-01-24T22:27:13Z",
  "number": 8741,
  "state": "closed",
  "title": "Make various types public as they were already visible externally",
  "updated_at": "2019-03-09T20:16:35Z"
}