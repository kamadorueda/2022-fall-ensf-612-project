{
  "_url": "https://github.com/PowerShell/PowerShell/issues/743",
  "author": "andschwa",
  "body": "# Improvement\n\nSpecifically this enables us to leverage `dotnet-resgen` to auto-generate the `resx` files into `resources` files for the default culture, which are then compiled into the respective assemblies.\n\n@vors Since `.resources` no longer need to be compiled on Windows and added to `windows-build`, #732 should be updated to map the `.resx` files into the superproject as well.\n\nRequires PowerShell/psl-windows-build#10.\n# Caveat\n\nThis requires a change to the C# bindings. The Windows build system takes `file.resx` and compiles `file.resources`, but CLI prepends the assembly name, thus compiling `SMA.file.resources`. So the resource manager in the generated bindings must be adjusted to look for `SMA.file` instead of `file`.\n\nNote that C# bindings cannot yet be auto-generated; so if they need to be updated, the above must be changed again. This is still blocked on #395 / dotnet/cli#819. However, the C# bindings need to be updated only if strings are added/removed, not when their content changes.\n# Localization\n\n@vors I've discovered that given localized resources of the form `file.en-US.resx`, `dotnet-resgen` will create a satellite assembly and publish it to `en-US/SMA.resources.dll`, so #666 will not be a technical problem.\n\n/cc @SteveL-MSFT @BrucePay @dantraMSFT\n\n<!-- Reviewable:start -->\n\n---\n\nThis change is [<img src=\"https://reviewable.io/review_button.svg\" height=\"35\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/powershell/powershell/743)\n\n<!-- Reviewable:end -->\n",
  "closed_at": "2016-03-28T18:27:40Z",
  "comments": [
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "@vors I'm going to need some help making this work with the FullCLR build. There is a problem with the FullCLR build where some other assembly is still attempting to reference `Logging.resources` instead of\n`System.Management.Automation.Logging.resources`, but I can't figure out which assembly is doing so. This is causing the build to fail because the host fails to initialize.\n",
      "created_at": "2016-03-27T01:50:42Z",
      "updated_at": "2016-03-27T01:50:42Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "ok, lets take a look on Tuesday\n",
      "created_at": "2016-03-27T05:51:35Z",
      "updated_at": "2016-03-27T05:51:35Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Here it is:\n\n```\nC:\\Users\\anschwa\\src\\PowerShell [andschwa/wip-culture \u2261 +0 ~2 -0 !]> Start-DevPSGitHub -binDir $pwd\\binFull -NoNewWindow\n -ArgumentList '-command', '[System.Globalization.CultureInfo]::CurrentUICulture'\nCould not find any resources appropriate for the specified culture or the neutral culture.  Make sure \"Logging.resources\n\" was correctly embedded or linked into assembly \"System.Management.Automation\" at compile time, or that all the satelli\nte assemblies required are loadable and fully signed.\nCould not find any resources appropriate for the specified culture or the neutral culture.  Make sure \"Logging.resources\n\" was correctly embedded or linked into assembly \"System.Management.Automation\" at compile time, or that all the satelli\nte assemblies required are loadable and fully signed.\nCould not find any resources appropriate for the specified culture or the neutral culture.  Make sure \"Logging.resources\n\" was correctly embedded or linked into assembly \"System.Management.Automation\" at compile time, or that all the satelli\nte assemblies required are loadable and fully signed.\nCould not find any resources appropriate for the specified culture or the neutral culture.  Make sure \"Logging.resources\n\" was correctly embedded or linked into assembly \"System.Management.Automation\" at compile time, or that all the satelli\nte assemblies required are loadable and fully signed.\nCould not find any resources appropriate for the specified culture or the neutral culture.  Make sure \"Logging.resources\n\" was correctly embedded or linked into assembly \"System.Management.Automation\" at compile time, or that all the satelli\nte assemblies required are loadable and fully signed.\nCould not find any resources appropriate for the specified culture or the neutral culture.  Make sure \"Logging.resources\n\" was correctly embedded or linked into assembly \"System.Management.Automation\" at compile time, or that all the satelli\nte assemblies required are loadable and fully signed.\nThe shell cannot be started. A failure occurred during initialization:\nCould not find any resources appropriate for the specified culture or the neutral culture.  Make sure \"Logging.resources\n\" was correctly embedded or linked into assembly \"System.Management.Automation\" at compile time, or that all the satelli\nte assemblies required are loadable and fully signed.\n```\n\nThis error would make sense if SMA's resource C# bindings had not been fixed. However, as evidenced from Core and Linux working, SMA indeed is fine.\n\nSo what, outside of our code, would be using SMA's resource bindings directly?\n",
      "created_at": "2016-03-28T17:16:08Z",
      "updated_at": "2016-03-28T17:16:08Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Found it. The `EventLog` code uses a `ResourceManager` directly and manually tried to load the resources file (rather than through the C# bindings), so a use there had to be updated too.\n\nThis now requires PowerShell/psl-monad#42 too.\n",
      "created_at": "2016-03-28T17:58:06Z",
      "updated_at": "2016-03-28T17:58:06Z"
    }
  ],
  "created_at": "2016-03-26T22:48:52Z",
  "number": 743,
  "state": "closed",
  "title": "Use dotnet-resgen to compile resx files",
  "updated_at": "2016-03-28T18:27:45Z"
}