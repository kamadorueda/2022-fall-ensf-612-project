{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5257",
  "author": "dddugan",
  "body": "Steps to reproduce\r\n------------------\r\n\r\n```pwsh\r\n$uri_base = 'https://MYDEVORG.okta.com'\r\n$apikey = 'MYAPIKEY'\r\n$uri = $uri_base + '/api/v1/users/?filter=status eq \"STAGED\"&limit=200'\r\n$method = 'GET'\r\n$headers = @{'Accept'='application/json';'Content-Type'='application/json';'Authorization'=\"SSWS $apikey\"}\r\n\r\nPS /> $json = Invoke-RestMethod -Uri $uri -Method $method -Headers $headers -FollowRelLink\r\nPS /> $json.Count\r\n200\r\nPS /> $webreq= Invoke-WebRequest -Uri $uri -Method $method -Headers $headers\r\nPS /> $webreq.RelationLink\r\n\r\nKey  Value\r\n---  -----\r\nself https://MYDEVORG.okta.com/api/v1/users?limit=200&filter=status+eq+%22STAGED%22\r\n\r\n\r\nPS /> $webreq.Headers.Link\r\n<https://MYDEVORG.okta.com/api/v1/users?limit=200&filter=status+eq+%22STAGED%22>; rel=\"self\"\r\n<https://MYDEVORG.okta.com/api/v1/users?after=OKTAUSERID&limit=200&filter=status+eq+%22STAGED%22>; rel=\"next\"\r\nPS />\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\nInvoke-RestMethod should follow the next rel link and return additional results.\r\nInvoke-WebRequest RelationLink dictionary should contain both \"self\" and \"next\".\r\n\r\nActual behavior\r\n---------------\r\n\r\nOnly the first value from $webreq.Headers.Link is parsed into RelationLink.\r\n\r\nEnvironment data\r\n----------------\r\n\r\n```\r\nlsb_release -a\r\nNo LSB modules are available.\r\nDistributor ID: Ubuntu\r\nDescription:    Ubuntu 16.04.3 LTS\r\nRelease:        16.04\r\nCodename:       xenial\r\n```\r\n\r\n```pwsh\r\n> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.0-beta.9\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.0-beta.9\r\nOS                             Linux 4.4.0-43-Microsoft #1-Microsoft Wed Dec 31 14:42:53 PST 2014\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\nReferences\r\n----------------\r\n\r\nRelated commit: https://github.com/PowerShell/PowerShell/commit/40446c80a705f71260a9258ebc6477982789e82e\r\nRelated RFC: https://github.com/PowerShell/PowerShell-RFC/blob/master/2-Draft-Accepted/RFC0021-Link-header-based-pagination-for-WebCmdlets.md",
  "closed_at": "2017-11-01T21:06:31Z",
  "comments": [
    {
      "author": "dddugan",
      "author_association": "NONE",
      "body": "May be due to WebRequestPSCmdlet.CoreClr.cs ParseLinkHeader function using .FirstOrDefault() in the foreach? Also appears that IWR Headers.Link is a comma-separated string on Windows PowerShell, but an array of strings on PowerShell Core.",
      "created_at": "2017-10-27T16:28:01Z",
      "updated_at": "2017-10-27T16:28:01Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@dddugan can you post the the header section of the RawContent property of the result using Invoke-WebRequest?  Feel free to scrub the data, but I'd like to see the format of the returned headers specifically the Link header.",
      "created_at": "2017-10-28T01:24:59Z",
      "updated_at": "2017-10-28T01:24:59Z"
    },
    {
      "author": "dddugan",
      "author_association": "NONE",
      "body": "There seem to be multiple headers for the multiple values. From my reading of the RFC a single Link: header should support multiple links. I don't see that it's prohibited to do multiple Link: headers instead, but no mention. So maybe I've run into a case where the vendor is doing something unexpected...\r\n```\r\nHTTP/1.1 200 OK\r\nDate: Fri, 27 Oct 2017 14:50:47 GMT\r\nServer: nginx\r\nPublic-Key-Pins-Report-Only: pin-sha256=\"abcdzZxQVvQpKo3AgYRaT7X2bDO/kj3ACwmxfdT2zt8=\"; pin-sha256=\"abcdcUgk2mvY/RFSGeSwBRkI+rZ6/dxe/DuQfBT/vnQ=\"; pin-sha256=\"abcdIEvDEWn+EThf3qjR7/bQSWaS2ZSLqolhnO6iyJI=\"; pin-sha256=\"abcdCLCCvqnk89gWibYT0JO6fNQ8cCit7GGoiVTjCOg=\"; max-age=60; report-uri=\"https://okta.report-uri.io/r/default/hpkp/reportOnly\"\r\nVary: Accept-Encoding\r\nX-Okta-Request-Id: ABCDx63U6bS-Mj9BfeJtBgAACIA\r\nP3P: CP=\"HONK\"\r\nX-Rate-Limit-Limit: 600\r\nX-Rate-Limit-Remaining: 596\r\nX-Rate-Limit-Reset: 1509115864\r\nCache-Control: no-store, no-cache\r\nPragma: no-cache\r\nLink: <https://MYDEVORG.okta.com/api/v1/users?limit=200&filter=status+eq+%22STAGED%22>; rel=\"self\"\r\nLink: <https://MYDEVORG.okta.com/api/v1/users?after=OKTAID&limit=200&filter=status+eq+%22STAGED%22>; rel=\"next\"\r\nStrict-Transport-Security: max-age=315360000\r\nSet-Cookie: sid=\"\"; Expires=Thu, 01-Jan-1970 00:00:10 GMT; Path=/\r\nSet-Cookie: JSESSIONID=00ABCD87967C1854E80C4BB1245B549E; Path=/\r\nTransfer-Encoding: chunked\r\nContent-Type: application/json; charset=UTF-8\r\nExpires: 0\r\n```",
      "created_at": "2017-10-28T03:31:33Z",
      "updated_at": "2017-10-28T03:35:04Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "My reading of the [RFC](https://tools.ietf.org/html/rfc2616#section-4.2) particularly:\r\n\r\n```none\r\n   Multiple message-header fields with the same field-name MAY be\r\n   present in a message if and only if the entire field-value for that\r\n   header field is defined as a comma-separated list [i.e., #(values)].\r\n```\r\n\r\nIs that multiple headers with the same name MUST be comma separated.  So having two Link: headers that aren't a comma separated list seems to not be conforming.  ",
      "created_at": "2017-10-28T06:09:55Z",
      "updated_at": "2017-10-28T06:09:55Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT that RFC is so poorly worded, What it means is that the following two must be equvilent:\r\n\r\n```none\r\nX-Header: Value1\r\nX-Header: Value2\r\n```\r\n\r\n```none\r\nX-Header: Value1, Value2\r\n```\r\n\r\nThat means that you cannot do \r\n```none\r\nX-Header: Value1, Value2\r\nX-Header: Value3\r\n````\r\n\r\ninstead, ` Value1, Value2` becomes a single value and not 2 separate values. This allows for multiple headers to support commas as a character where as a single header, commas are always a value separator with no escape character. \r\n\r\nIn Full CLR they mash these all together for you. In CoreFX they treat multiple headers as separate elements in the header collection. \r\n\r\nThe solution is to implement something like what is in #4494 in `ParseLinkHeader()`. Since I'm familiar with it, I'll take this one. but it should be High Priority.",
      "created_at": "2017-10-28T14:22:49Z",
      "updated_at": "2017-10-28T14:24:04Z"
    },
    {
      "author": "dddugan",
      "author_association": "NONE",
      "body": "Thanks, friends! Appreciate the quick response. Looking forward to testing the fix.",
      "created_at": "2017-10-29T04:05:44Z",
      "updated_at": "2017-10-29T04:05:44Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@dddugan If you want to validate it now you can build from the MultipleRelLinkFix branch on my repo: https://github.com/markekraus/PowerShell/tree/MultipleRelLinkFix \r\n\r\nOn windows you can use the MSI or zip  produced by AppVeyor  https://ci.appveyor.com/project/PowerShell/powershell/build/6.0.0-beta.9-6425/artifacts\r\n\r\n",
      "created_at": "2017-10-29T09:38:26Z",
      "updated_at": "2017-10-29T09:38:43Z"
    }
  ],
  "created_at": "2017-10-27T15:34:16Z",
  "labels": [
    "Resolution-Fixed",
    "WG-Cmdlets-Utility"
  ],
  "number": 5257,
  "state": "closed",
  "title": "Link header pagination only parsing first rel",
  "updated_at": "2017-11-02T03:02:55Z"
}