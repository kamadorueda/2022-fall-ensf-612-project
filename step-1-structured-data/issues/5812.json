{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5812",
  "author": "bergmeister",
  "body": "## PR Summary\r\n\r\nFix bug #5597: x86/x64 installer are uninstalling each other when installing either of them:\r\n\r\n-Make x86 installer to be installed as a x86 component (-arch argument to candle.exe, which sets the `sys.BUILDARCH` variable)\r\n-Make the UpgradeCode unique per platform\r\n\r\nReplace `var.ProductTargetArchitecture` variable with sys.BUILDARCH use to have only 1 variable for the architecture\r\nAdditionally, the architecture was appended to the package name to be able to distinguish the installations.\r\n\r\nWindows installer PRs usually got reviewed by @SteveL-MSFT in the past.\r\n\r\n## PR Checklist\r\n\r\nNote: Please mark anything not applicable to this PR `NA`.\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - [x] Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] User facing [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission) : Not sure? Package name now includes architecture...\r\n    - [x] Issue filed - Issue link: https://github.com/PowerShell/PowerShell/issues/5597\r\n- [ ] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [ ] NA [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n    - [] NA [Add `[feature]` if the change is significant or affectes feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` to the beginning of the title and remove the prefix when the PR is ready.\r\n\r\n  ",
  "closed_at": "2018-01-08T20:32:39Z",
  "comments": [
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT @joeyaiello I am not sure if this bug was ever triaged but it seems quite severe to me and would cause problems in the future when trying to upgrade install the x86 version in 6.1 if this fix does not go into 6.0. On the other hand, I can understand that this is last minute (maybe building only the x86 installer using this fix would mitigate the risk?)...",
      "created_at": "2018-01-07T19:33:38Z",
      "updated_at": "2018-01-07T19:33:38Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Should Explorer menu be fixed too?",
      "created_at": "2018-01-07T19:37:20Z",
      "updated_at": "2018-01-07T19:37:20Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov : The explorer context menu goes into 6.1 (I already asked this question, the answer by @SteveL-MSFT is [here](https://github.com/PowerShell/PowerShell/pull/5774#issuecomment-355353375)).  @SteveL-MSFT said [here](https://github.com/PowerShell/PowerShell/pull/5792#issuecomment-355709921) that it is not clear whether the current behaviour is right or wrong and therefore we should wait for feedback. If the current behaviour is bothering you please open an issue so that it can be tracked and discussed further.\r\n  ",
      "created_at": "2018-01-07T19:50:23Z",
      "updated_at": "2018-01-07T19:52:35Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@bergmeister My request was that in the previous PR we added the menu and in this PR we add a second PowerShell version - what version will be called from this menu? I suppose that if we want this menu, then in this PR you have to add the menu for both versions.",
      "created_at": "2018-01-08T08:58:24Z",
      "updated_at": "2018-01-08T08:58:24Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov I see, you have a fair point that I did not consider the case of installing both x64 and x86 for the context menu.\r\nBut this bug fix itself has nothing to do with the context menu since it should have always worked to install both versions, hence the question to steve if this fix is needed for the release branch as well. At the moment the PR targets fixing the installer problem so that it is also easily possible to merge it into the release branch if needed/required. I shall open a 2nd WIP PR for the architecture specific context menu to separate the issues.\r\n  ",
      "created_at": "2018-01-08T12:53:40Z",
      "updated_at": "2018-01-08T12:55:13Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I think the number of users using both x86 and x64 are very minimal.  Giving that where we are with 6.0.0, I think we should document this (Known Issues @joeyaiello) and fix it for 6.1.0.",
      "created_at": "2018-01-08T19:07:31Z",
      "updated_at": "2018-01-08T19:07:31Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "I think we need to take this for GA to ensure that we can create servicing packages correctly without creating a complicated servicing wrapper.",
      "created_at": "2018-01-08T19:14:30Z",
      "updated_at": "2018-01-08T19:14:30Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I talked to @TravisEz13 offline, agree that servicing would be an issue so we should take this for GA.",
      "created_at": "2018-01-08T19:16:46Z",
      "updated_at": "2018-01-08T19:16:46Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "filed:  #5821\r\n  ",
      "created_at": "2018-01-08T19:18:53Z",
      "updated_at": "2018-01-08T19:19:25Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "OK. I will prepare now a separate PR that targets the release branch to check for merge problems beforehand.",
      "created_at": "2018-01-08T19:24:27Z",
      "updated_at": "2018-01-08T19:24:27Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@bergmeister I will take care of any merge conflicts with the release branch.  Just get it working on this branch.  I've finished my review.  It looks good otherwise.",
      "created_at": "2018-01-08T19:42:44Z",
      "updated_at": "2018-01-08T19:42:44Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "OK. Whatever you prefer then.",
      "created_at": "2018-01-08T19:43:35Z",
      "updated_at": "2018-01-08T19:43:35Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "Can you get the comment added in the next few hours?",
      "created_at": "2018-01-08T19:44:20Z",
      "updated_at": "2018-01-08T19:44:20Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@bergmeister Thanks",
      "created_at": "2018-01-08T20:04:09Z",
      "updated_at": "2018-01-08T20:04:09Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "No worries, my pleasure. I am glad I found it by coincidence (I guess the bug must have been in there since day one). I think the next time we have to ensure that issues get triaged better because if the impact was understood better from the reported issue then it would not have been so much last minute.\r\nI have done some local testing if this PR got merged into the 6.0.0. branch and it seems fine as well.",
      "created_at": "2018-01-08T20:08:17Z",
      "updated_at": "2018-01-08T20:20:25Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "I did some analysis and it showed that the bug about the upgrade code being constant and the `-arch` parameter being hardcoded to `x64` was already present in the first commit [here](https://github.com/PowerShell/PowerShell/commit/8f1a5194c563a3a74e7b92181c87b9e33803c4b4) that added the WiX file and the MSI build script...",
      "created_at": "2018-01-08T21:32:27Z",
      "updated_at": "2018-01-08T21:32:27Z"
    }
  ],
  "created_at": "2018-01-07T19:27:31Z",
  "number": 5812,
  "state": "closed",
  "title": "Fix x86 installer bug: it gets installed as an x64 component and has the same UpgradeCode as the x64 installer leading to an uninstallation of an x64 installation (and vice versa)",
  "updated_at": "2018-01-08T21:32:27Z"
}