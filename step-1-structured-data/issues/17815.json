{
  "_url": "https://github.com/PowerShell/PowerShell/issues/17815",
  "author": "charltonstanley",
  "body": "### Prerequisites\r\n\r\n- [X] Write a descriptive title.\r\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- [X] Search the existing issues.\r\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\r\n\r\n### Steps to reproduce\r\n\r\n1. create a file in the current directory with a list of newline delimited strings. Here is what mine looks like:\r\n```powershell\r\nPS> cat ./testfile\r\na\r\nb\r\nc\r\ne\r\nf\r\ng\r\nPS>\r\n```\r\n2. Get the contents of the file and use `select-string` to filter out the letter `d`.\r\n```powershell\r\nPS> Get-Content $file | Select-String -Pattern 'd' -NoEmphasis -NotMatch -Raw\r\na\r\nb\r\nc\r\ne\r\nf\r\ng\r\nPS>\r\n```\r\n3. Pipe the output to `out-file` to overwrite the same `$file` with the filtered output.\r\n```powershell\r\nPS> Get-Content $file | Select-String -Pattern 'd' -NoEmphasis -Raw -NotMatch | out-file -Path $file \r\nPS>\r\n```\r\n4. Get the contents of the file.\r\n```powershell\r\nPS> Get-Content $file\r\n```\r\n\r\n### Expected behavior\r\n\r\n```powershell\r\nPS> Get-Content $file\r\na\r\nb\r\nc\r\ne\r\nf\r\ng\r\nPS>\r\n```\r\n\r\n\r\n### Actual behavior\r\n\r\n```powershell\r\nPS> Get-Content $file\r\nPS>\r\n```\r\n\r\n\r\n### Error details\r\n\r\nNo error was returned.\r\n\r\n\r\n### Environment data\r\n\r\nThe bug is experienced on both `7.3.0-preview.6` and `7.2.5`.\r\n\r\n```powershell\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.3.0-preview.6\r\nPSEdition                      Core\r\nGitCommitId                    7.3.0-preview.6\r\nOS                             Linux 5.14.0-1045-oem #51-Ubuntu SMP Mon Jul 4 06:41:22 UTC 2022\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.5\r\nPSEdition                      Core\r\nGitCommitId                    7.2.5\r\nOS                             Linux 5.14.0-1045-oem #51-Ubuntu SMP Mon Jul 4 06:41:22 UTC 2022\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\n\r\n### Visuals\r\n\r\n_No response_",
  "closed_at": "2022-08-02T16:11:36Z",
  "comments": [
    {
      "author": "237dmitry",
      "author_association": "NONE",
      "body": "```\r\n(Get-Content $file) | Select-String -Pattern 'd' -NoEmphasis -Raw -NotMatch | out-file -Path $file \r\n```",
      "created_at": "2022-08-01T23:24:01Z",
      "updated_at": "2022-08-01T23:24:01Z"
    },
    {
      "author": "charltonstanley",
      "author_association": "CONTRIBUTOR",
      "body": "@237dmitry Interesting. That did work, although I'm rather confused as to why.\r\nUsing your answer, I also found that if I first store the output of `Get-Content $file` in a variable, and substitute the variable for the `Get-Content $file` portion of the command, that works as well. So is it really a problem with `Get-Content` instead of with `Select-String`?",
      "created_at": "2022-08-02T02:30:32Z",
      "updated_at": "2022-08-02T02:30:32Z"
    },
    {
      "author": "237dmitry",
      "author_association": "NONE",
      "body": "When transferring data from a file through a pipeline, the file is open for reading and writing at the same time. Therefore, it is overwritten before it is fully read. You must first read the file, and then transfer its contents through the pipeline.\r\n\r\nPS. The question is very very old, I think from the birth of Monad (the ancestor of powershell).",
      "created_at": "2022-08-02T06:47:04Z",
      "updated_at": "2022-08-02T07:01:45Z"
    },
    {
      "author": "jhoneill",
      "author_association": "NONE",
      "body": "> When transferring data from a file through a pipeline, the file is open for reading and writing at the same time. Therefore, it is overwritten before it is fully read. You must first read the file, and then transfer its contents through the pipeline.\r\n> \r\n> PS. The question is very very old, I think from the birth of Monad (the ancestor of powershell).\r\n\r\nWith the pipeline we have begin process and end steps for each command , \r\nBegin  \r\n- `Get-Content` opens the file for read. \r\n- `Select-String` initializes any regex processor  it needs\r\n- `Out-File` opens the file for write and reset its contents\r\nProcess\r\n- `Get-Content` until we reach the end of the file read a line and output it WOAH! it's an empty file - move to the end block and close the file \r\nEnd \r\n- `Out-File` sees the other steps ending and closes the file too.  \r\n \r\n\r\nPutting () round the `Get` means that value is obtained before the Begin step of the `out` runs \r\n\r\nIf have written things so all the file reads happen in the begin stage AND the reset/re-write part happens in the end block to side step the problem, but I don't of any cmdlets which do that\r\n",
      "created_at": "2022-08-02T12:05:00Z",
      "updated_at": "2022-08-02T12:05:00Z"
    },
    {
      "author": "charltonstanley",
      "author_association": "CONTRIBUTOR",
      "body": "Thank you all for the explanations. It's still surprising to me, but if this is normal/expected behavior then it's obviously not a bug.  It's strange...I have been writing scripts for years; have never bumped into this chicken/egg scenario before. Just when you think you know it all... :smile: \r\n\r\nThanks again!",
      "created_at": "2022-08-02T16:11:36Z",
      "updated_at": "2022-08-02T16:11:36Z"
    }
  ],
  "created_at": "2022-08-01T22:40:37Z",
  "labels": [
    "Issue-Question",
    "Resolution-Answered",
    "WG-Cmdlets-Utility"
  ],
  "number": 17815,
  "state": "closed",
  "title": "`out-file` overwrites existing file with empty file when taking piped input from `select-string`",
  "updated_at": "2022-08-02T16:11:42Z"
}