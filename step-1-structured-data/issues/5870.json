{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5870",
  "author": "Jaykul",
  "body": "We've suggested this before in the context of the discussion of the infamous curl alias, and in that context it was not done (although I don't remember why), so let me suggest it again now:\r\n\r\n### ALL built-in aliases should be removed from the shell.\r\n\r\n1. A module should be created called \"CoreAliases\" which recreates all the aliases which are left in PowerShell Core when it's run on Linux or Mac OS.\r\n2. Another module should be created called \"CoreWindowsAliases\" which builds on top of CoreAliases but adds `ls` and the other aliases that are currently missing on Linux and Mac OS, but not on Windows.\r\n3. A third module should be created called \"WindowsPowerShellAliases\" which further builds on the first two to put back all of the Windows PowerShell aliases for which the commands are present in Core.\r\n4. All three modules should ship in the installer (like PSReadline), so they're *always* present.\r\n\r\nThen we can stop changing aliases one at a time, and never have another discussion about them. \r\n\r\nIf people want the aliases, they just import the appropriate module for their situation. If they don't, they do nothing.",
  "closed_at": "2018-12-06T00:02:09Z",
  "comments": [
    {
      "author": "Jaykul",
      "author_association": "CONTRIBUTOR",
      "body": "It's been very frustrating each time I type `ls` or `cd` in a console and the wrong thing happens. \r\n\r\nNow at the eve of GA, yet another alias has been removed: `sc`\r\n\r\nIt's time to put an end to the madness, and just clean the slate so this can't ever happen again.",
      "created_at": "2018-01-11T19:32:18Z",
      "updated_at": "2018-01-11T19:32:18Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@Jaykul Thanks for the short and clear thought. I totally agree that the time has come and we have to complete this story that lasts two years.\r\n\r\nRelated #214 #3610 \r\n\r\nBased on previous discussions we know that some users want all the Windows aliases, some ones only part, some ones do not want them at all. We have also come to the conclusion that aliases only make sense in an interactive session and should (must) be excluded from scripts.\r\n\r\nSo I see a simple solution that we can implement in steps:\r\nStep 1. Create compatibility modules (I suggest use `Compatibility-` name prefix for them):\r\n- The first only aliases without conflicts (current list which we use now) (`Compatibility-Aliases-DefaultSet`)\r\n- The second includes all aliases from previous module and curently excluded Windows PowerShell aliases (`Compatibility-Aliases-ShortWindowsSet`).\r\n- The third includes all Windows PowerShell aliases (`Compatibility-Aliases-FullWindowsSet`). \r\n\r\nStep 2. Import these modules only in the interactive session. We could add a new setting `InteractiveOnly = $true` to a module manifest. This feature will be useful for all compatibility modules and PSReadline. (Related #3956)\r\n\r\nStep 3. Enable an user to choose which compatibility module to download or not to download at all using a configuration file (we already have `powershell.config.json`) and GPO. Until we implement the option users can load selected compatibility module using their profile file.\r\n\r\nStep 4. Add an option to disable/enable aliases in scripts - enhance strict mode (run time) or/and `using language aliases allow=$false` statement (parse time). Add global option (to a configuration file  `powershell.config.json` and GPO) to enable/disable aliases in scripts.",
      "created_at": "2018-01-12T13:39:18Z",
      "updated_at": "2018-01-14T10:09:47Z"
    },
    {
      "author": "Jaykul",
      "author_association": "CONTRIBUTOR",
      "body": "You're making this **way** too complicated.\r\n\r\nThere's no need for any functionality to be added in order to remove the default aliases -- even a setting to say which module to import would be overkill when we have profile scripts.\r\n\r\nI'm not trying to get the alias _feature_ removed. I use aliases, and I want to keep using them. I don't want to loose the ability to change the name of commands.\r\n\r\nI just want to clean out the defaults and give _existing users_ an easy way to load the aliases they're used to. In an ideal world, I want to do all of that without breaking anything more, although obviously we'll need users to add the `Import-Module` line to their profile. \r\n\r\nThe main point is to ensure we never _again_ break people's experience by such a silly trivial change as removing a built-in alias.\r\n\r\nP.S. I honestly don't think you can get a new setting added to module manifests. We still don't have a setting to indicate the supported **Edition** or **Operating System**, nevermind something as meta as whether the author thinks the module should be used interactively. ",
      "created_at": "2018-01-14T03:22:55Z",
      "updated_at": "2018-01-14T03:35:17Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Yes, it is long way. We have a lot of discussions aliases. As we have saw, any partial solution raises new issues, problems and discussions. We need to generalize all these discussions and create a common roadmap. I suggest such roadmap. The first step closes this Issue. The next steps close other problems - we should implement all operations - add, delete, modify, update, allow, disallow - in interactive session, in scripts, in remote access.",
      "created_at": "2018-01-14T10:46:11Z",
      "updated_at": "2018-01-14T10:46:11Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I get this from Windows Insider mail:\r\n>Windows Command line Toolchain includes bsdtar (tar) and curl. These two popular command line tools from the Unix shell are now available in Windows and Windows Server. bsdtar provides handy extraction/creation of compressed files and curl offers data transfer capabilities so you can download files from a remote location. (Build 17063)\r\n\r\nWe removed `curl` alias in a timely manner! :-)\r\n\r\n@SteveL-MSFT  I think it's one more argument that it's time to cut this Gordian knot.",
      "created_at": "2018-01-19T06:30:25Z",
      "updated_at": "2018-01-19T06:30:25Z"
    },
    {
      "author": "dragonwolf83",
      "author_association": "NONE",
      "body": "I think it might be good to have a symbol to put in front of an alias to invoke using it. That adds one character for typing an alias and allows for keeping some sane defaults. Since we are going for breaking, might as well make it a useful breaking change.\r\n\r\nTo be honest, the only aliases I care about are the `*-Object` aliases. I wonder if they are the most commonly used since I tend to see `Select -Property` rather than `Select-Object -Property`. ",
      "created_at": "2018-01-20T01:47:05Z",
      "updated_at": "2018-01-20T01:47:05Z"
    },
    {
      "author": "Jaykul",
      "author_association": "CONTRIBUTOR",
      "body": "Well, removing `curl` in PowerShell 5.1 would have been a lot more timely, considering \ud83d\ude09 \r\n\r\nI definitely agree that Select, Where, and ForEach are the most common aliases that get left in scripts -- because they're basically more readable than the full commands \ud83d\ude15 \r\n\r\nBut I have to repeat, again, I don't want to break anything. I'm trying to **_stop_ breaking things**, by moving the aliases into modules where nobody will have any excuse to change them anymore.",
      "created_at": "2018-01-20T05:55:44Z",
      "updated_at": "2018-01-20T05:58:11Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee reviewed this.  We agree that users should easily customize their environment in regards to aliases.  We ask that an RFC be authored capturing all the details of the proposed modules to understand the trade-offs and implications.  RFC should include alternate considerations instead of a module: script, part of powershell.config.json, etc... Note that if the aliases are exported as part of a module, then auto-module loading will automatically find them so not clear if that is the desired behavior.",
      "created_at": "2018-04-25T23:01:00Z",
      "updated_at": "2018-04-25T23:01:00Z"
    },
    {
      "author": "DanielSSilva",
      "author_association": "CONTRIBUTOR",
      "body": "My two cents - While doing some research about alias, I've found some more commands that are native on Unix and are being \"mapped\" as alias, such as\r\n```\r\ncd \r\nclear\r\necho\r\nkill\r\npwd\r\ntype\r\n```",
      "created_at": "2018-05-21T21:24:41Z",
      "updated_at": "2018-05-21T21:24:41Z"
    },
    {
      "author": "pauby",
      "author_association": "NONE",
      "body": "> We ask that an RFC be authored\r\n\r\nHas this been picked up as yet?",
      "created_at": "2018-05-22T09:54:34Z",
      "updated_at": "2018-05-22T09:54:34Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I hope to do it in the coming days.",
      "created_at": "2018-05-22T11:03:00Z",
      "updated_at": "2018-05-22T11:03:00Z"
    },
    {
      "author": "pauby",
      "author_association": "NONE",
      "body": "@iSazonov That's fantastic. If you need help in any areas let me know and I will do what I can.",
      "created_at": "2018-05-22T11:22:44Z",
      "updated_at": "2018-05-22T11:22:44Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@pauby Done.",
      "created_at": "2018-06-06T08:51:00Z",
      "updated_at": "2018-06-06T08:51:00Z"
    },
    {
      "author": "kjacobsen",
      "author_association": "NONE",
      "body": "Has any testing been performed to determine the impact of removing the ```cd``` alias? There is a feeling in my gut that we might introduce significant issues to interactive sessions. Its just a gut feeling, so could be totally wrong and would be happy to be wrong.",
      "created_at": "2018-06-09T13:06:38Z",
      "updated_at": "2018-06-09T13:06:38Z"
    },
    {
      "author": "kjacobsen",
      "author_association": "NONE",
      "body": "Next thought. What about the ```help``` alias. How many new starters to PowerShell, myself included, started by just typing ```help``` and starting there?",
      "created_at": "2018-06-09T13:22:25Z",
      "updated_at": "2018-06-09T13:22:25Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@kjacobsen `help` is a function not alias.\r\n\r\nThe plan is to create tools for flexible aliases management without changing the current behavior. This will allow users to choose a convenient way to work. A separate question is about the default settings -  that would be PowerShell Committee's decision.",
      "created_at": "2018-06-09T15:21:34Z",
      "updated_at": "2018-06-09T15:21:34Z"
    },
    {
      "author": "kilasuit",
      "author_association": "COLLABORATOR",
      "body": "@kjacobsen - technically @Jaykul is asking for a built in way of managing alias versioning and allowing you the user to maintain which aliases you want by giving you the ability to control this in your own scripts/modules/profiles\r\n\r\n @iSazonov - by moving them to modules the \"Default\" becomes less and less relevant in my view, at least to the power users, however getting it right for the general user is something that I do agree needs to be thought of properly.",
      "created_at": "2018-06-09T18:25:15Z",
      "updated_at": "2018-06-09T18:25:15Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Some default values will always be present. :-)",
      "created_at": "2018-06-10T18:36:36Z",
      "updated_at": "2018-06-10T18:36:36Z"
    },
    {
      "author": "ExE-Boss",
      "author_association": "NONE",
      "body": "Well, the `curl` and `wget` aliases have been permanently removed in PR #5268 and [Windows\u00a010 now ships with `curl.exe`](https://blogs.technet.microsoft.com/virtualization/2017/12/19/tar-and-curl-come-to-windows/). \u270c\ufe0f\ud83c\udffb&#x2060;\ud83d\ude04&#x2060;\u270c\ufe0f\ud83c\udffb",
      "created_at": "2018-08-24T23:12:23Z",
      "updated_at": "2018-12-06T08:52:07Z"
    },
    {
      "author": "Jaykul",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT I assume this is being closed for inaction / failure to create a follow-up RFC?",
      "created_at": "2018-12-06T03:56:13Z",
      "updated_at": "2018-12-06T03:56:13Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I wonder too.",
      "created_at": "2018-12-06T07:17:09Z",
      "updated_at": "2018-12-06T07:17:09Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@Jaykul further discussion should be in a RFC, since there have been no additional comments here it doesn't seem necessary to keep this issue open.  We've been trying to be more digilent on closing issues so we know which ones are actually still active.",
      "created_at": "2018-12-06T22:29:24Z",
      "updated_at": "2018-12-06T22:29:24Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I set `Resolution-External` implying that the discussion should be in the RFC.",
      "created_at": "2018-12-07T05:29:09Z",
      "updated_at": "2018-12-07T05:29:09Z"
    }
  ],
  "created_at": "2018-01-11T19:31:03Z",
  "number": 5870,
  "state": "closed",
  "title": "Please remove **all** built-in aliases and put them in a module",
  "updated_at": "2018-12-07T05:29:09Z"
}