{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11646",
  "author": "mklement0",
  "body": "Related: #6291, #6292\r\n\r\nWhen you call external programs, a comma (`,`) by design does _not_ act as the array constructor; e.g., `/bin/echo 1,2` (on Unix) passes `1,2` verbatim to the `echo` utility.\r\n\r\nThis behavior is broken, if the token containing the `,` happens to start with `-` (a hyphen), i.e. if it looks like a parameter:\r\n\r\n```powershell\r\n# !! BREAKS with a parser error.\r\n/bin/echo -foo=1,2\r\n```\r\n\r\nSuch arguments do occur in real life, such as with `msdeploy.exe` - see [this Stack Overflow question](https://stackoverflow.com/q/59826215/45375), for instance.\r\n\r\n\r\n# Steps to reproduce\r\n\r\nRun the following on a Unix-like platform:\r\n\r\n```powershell\r\n/bin/echo -foo=1,2\r\n```\r\n\r\n# Expected behavior\r\n\r\n`-foo=1,2` should print to the terminal.\r\n\r\n# Actual behavior\r\n\r\nThe following parser error occurs:\r\n\r\n```none\r\nParserError:\r\nLine |\r\n   1 |  /bin/echo -foo=1,2\r\n     |                  ~\r\n     | Missing argument in parameter list.\r\n```\r\n\r\n# Environment data\r\n\r\n```none\r\nPowerShell Core 7.0.0-rc.2\r\n```\r\n",
  "closed_at": null,
  "comments": [],
  "created_at": "2020-01-21T18:53:21Z",
  "number": 11646,
  "state": "open",
  "title": "Parameter parsing/passing: with external programs, a hyphen at the start of an argument causes an unquoted  \",\" (comma) to break the call",
  "updated_at": "2020-01-22T11:07:53Z"
}