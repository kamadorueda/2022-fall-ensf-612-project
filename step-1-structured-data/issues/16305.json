{
  "_url": "https://github.com/PowerShell/PowerShell/issues/16305",
  "author": "tom-programming",
  "body": "### Prerequisites\n\n- [x] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\n\n### Steps to reproduce\n\nI can't initialize long strings. I try to initialize a string like that\r\n\r\n```\r\n$a = \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa...........................................................................................................aaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"\r\n```\r\n\r\nIt should be noted that\r\n1. `$a = \"aaa\"` works as expected\r\n2. The exact pattern of making it generate an error is not straightforward. It is related to the number of characters but it can accept more characters if they are from a different type. There is no \"magic number\" which limits the number of characters. It is, however, consistent. Trying many times with the same string gives the same result (accepted/error)\n\n### Expected behavior\n\n```console\nAn initialized string with the name a\n```\n\n\n### Actual behavior\n\n```console\nParentContainsErrorRecordException: An error occurred while creating the pipeline.\r\n```\n```\n\n\n### Error details\n\n```console\nType           : System.Management.Automation.RuntimeException\r\nErrorRecord    :\r\n    Exception             :\r\n        Type    : System.Management.Automation.ParentContainsErrorRecordException\r\n        Message : An error occurred while creating the pipeline.\r\n        HResult : -2146233087\r\n    CategoryInfo          : NotSpecified: (:) [], ParentContainsErrorRecordException\r\n    FullyQualifiedErrorId : RuntimeException\r\nTargetSite     :\r\n    Name          : Invoke\r\n    DeclaringType : System.Management.Automation.Runspaces.PipelineBase, System.Management.Automation,\r\nVersion=7.1.5.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\r\n    MemberType    : Method\r\n    Module        : System.Management.Automation.dll\r\nStackTrace     :\r\n   at System.Management.Automation.Runspaces.PipelineBase.Invoke(IEnumerable input)\r\n   at System.Management.Automation.Runspaces.Pipeline.Invoke()\r\n   at Microsoft.PowerShell.Executor.ExecuteCommandHelper(Pipeline tempPipeline, Exception& exceptionThrown,\r\nExecutionOptions options)\r\nMessage        : An error occurred while creating the pipeline.\r\nInnerException :\r\n    Type       : System.Runtime.InteropServices.SEHException\r\n    ErrorCode  : -2147467259\r\n    TargetSite :\r\n        Name          : AmsiScanBuffer\r\n        DeclaringType : System.Management.Automation.AmsiUtils+AmsiNativeMethods, System.Management.Automation,\r\nVersion=7.1.5.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\r\n        MemberType    : Method\r\n        Module        : System.Management.Automation.dll\r\n    StackTrace :\r\n   at System.Management.Automation.AmsiUtils.AmsiNativeMethods.AmsiScanBuffer(IntPtr amsiContext, IntPtr buffer,\r\nUInt32 length, String contentName, IntPtr amsiSession, AMSI_RESULT& result)\r\n   at System.Management.Automation.AmsiUtils.WinScanContent(String content, String sourceMetadata, Boolean warmUp)\r\n   at System.Management.Automation.CompiledScriptBlockData.PerformSecurityChecks()\r\n   at System.Management.Automation.CompiledScriptBlockData.ReallyCompile(Boolean optimize)\r\n   at System.Management.Automation.CompiledScriptBlockData.CompileUnoptimized()\r\n   at System.Management.Automation.CompiledScriptBlockData.Compile(Boolean optimized)\r\n   at System.Management.Automation.DlrScriptCommandProcessor.Init()\r\n   at System.Management.Automation.DlrScriptCommandProcessor..ctor(ScriptBlock scriptBlock, ExecutionContext context,\r\nBoolean useNewScope, CommandOrigin origin, SessionStateInternal sessionState, Object dollarUnderbar)\r\n   at System.Management.Automation.Runspaces.Command.CreateCommandProcessor(ExecutionContext executionContext, Boolean\r\naddToHistory, CommandOrigin origin)\r\n   at System.Management.Automation.Runspaces.LocalPipeline.CreatePipelineProcessor()\r\n    Message    : External component has thrown an exception.\r\n    Source     : System.Management.Automation\r\n    HResult    : -2147467259\r\nSource         : System.Management.Automation\r\nHResult        : -2146233087\n```\n\n\n### Environment data\n\n```powershell\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.5\r\nPSEdition                      Core\r\nGitCommitId                    7.1.5\r\nOS                             Microsoft Windows 10.0.18363\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\n```\n\n\n### Visuals\n\n_No response_",
  "closed_at": "2021-10-27T10:26:32Z",
  "comments": [
    {
      "author": "dwtaber",
      "author_association": "CONTRIBUTOR",
      "body": "Roughly how long of a string does it take to produce this error?  I tried `$a = \"aaa...\"` as in your example, and I was able to create a string over 13 million characters long without errors.",
      "created_at": "2021-10-26T13:35:43Z",
      "updated_at": "2021-10-26T13:35:43Z"
    },
    {
      "author": "tom-programming",
      "author_association": "NONE",
      "body": "> Roughly how long of a string does it take to produce this error? I tried `$a = \"aaa...\"` as in your example, and I was able to create a string over 13 million characters long without errors.\r\n\r\nRoughly hundreds of characters. I get the error on the verbatim string I posted here.\r\n\r\nNB: An important detail: the command itself seems to be part of the problem. If I call the variable \"$aa\" I have one less character in the literal available before I get an error. ",
      "created_at": "2021-10-26T13:38:48Z",
      "updated_at": "2021-10-26T13:40:21Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "I can't repro this on 7.1.5. Where this is erroring for you is in the AntiMalware Scan Interface which is ... odd. Seems like AMSI is choking on the string somehow.  I will note that my version of Windows is newer than yours `10.0.19043`.",
      "created_at": "2021-10-26T15:11:30Z",
      "updated_at": "2021-10-26T15:11:46Z"
    },
    {
      "author": "tom-programming",
      "author_association": "NONE",
      "body": "I checked and it's my configuration. Apparently something involving antivirus software",
      "created_at": "2021-10-27T10:26:32Z",
      "updated_at": "2021-10-27T10:26:32Z"
    },
    {
      "author": "Issue-dealer",
      "author_association": "NONE",
      "body": "@tom-programming  How did you fix this issue? Even I am also facing same error for long string. ",
      "created_at": "2022-05-28T17:21:49Z",
      "updated_at": "2022-05-31T10:14:29Z"
    }
  ],
  "created_at": "2021-10-26T10:04:43Z",
  "labels": [
    "Issue-Question",
    "Resolution-Answered",
    "WG-Security"
  ],
  "number": 16305,
  "state": "closed",
  "title": "I receive an error on long strings",
  "updated_at": "2022-05-31T10:14:29Z"
}