{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12617",
  "author": "thlac",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\nChanges CimCmdlets-modude to use AliasAttribute and removed CimCmdletModuleInitialize.cs as its only function was to set the aliases\r\n<!-- Summarize your PR between here and the checklist. -->\r\n\r\n## PR Context\r\nShould fix #11988\r\n<!-- Provide a little reasoning as to why this Pull Request helps and why you have opened it. -->\r\n\r\n## PR Checklist\r\n\r\n- [X] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [X] None\r\n- **User-facing changes**\r\n    - [X] Not Applicable\r\n- **Testing - New and feature**\r\n    - [X] N/A or can only be tested interactively\r\n- **Tooling**\r\n    - [X] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.",
  "closed_at": "2020-05-22T19:56:48Z",
  "comments": [
    {
      "author": "msftclas",
      "author_association": "NONE",
      "body": "[![CLA assistant check](https://cla.opensource.microsoft.com/pull/badge/signed)](https://cla.opensource.microsoft.com/PowerShell/PowerShell?pullRequest=12617) <br/>All CLA requirements met.",
      "created_at": "2020-05-10T16:22:50Z",
      "updated_at": "2020-05-10T16:27:55Z"
    },
    {
      "author": "thlac",
      "author_association": "CONTRIBUTOR",
      "body": "I saw that and thought that test was only for aliases defined in InitialSessionState.cs, but looking at it again it also says it only checks default loaded modules, the CimCmdlets module is not automatically loaded by default.\r\n\r\nNot sure if I am misunderstanding anything, but the aliases looked to be default, because it was set during the module load, so it's technically the equivalent of the user doing `Set-Alias -Name \"gcim\" -Value \"Get-CimInstance\"` when the module loads.",
      "created_at": "2020-05-11T07:32:14Z",
      "updated_at": "2020-05-11T07:37:18Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "We have a list of modules in the test and explicitly load the modules.",
      "created_at": "2020-05-11T08:04:03Z",
      "updated_at": "2020-05-11T08:04:03Z"
    },
    {
      "author": "thlac",
      "author_association": "CONTRIBUTOR",
      "body": "Okay, thanks, just wanted to make sure. I've added tests for them now :)",
      "created_at": "2020-05-11T09:36:53Z",
      "updated_at": "2020-05-11T09:36:53Z"
    },
    {
      "author": "thlac",
      "author_association": "CONTRIBUTOR",
      "body": "That test doesn't fail locally here",
      "created_at": "2020-05-11T10:05:04Z",
      "updated_at": "2020-05-11T10:05:12Z"
    },
    {
      "author": "anmenaga",
      "author_association": "CONTRIBUTOR",
      "body": "@daxian-dbw @SteveL-MSFT Please check this PR. Do you have any theories why alias initialization for `CimCmdlets` module was previously done through manually calling `Set-Alias`? I guess there should be a reason for it looking strange like that...",
      "created_at": "2020-05-12T18:31:01Z",
      "updated_at": "2020-05-12T18:31:01Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "> @daxian-dbw @SteveL-MSFT Please check this PR. Do you have any theories why alias initialization for `CimCmdlets` module was previously done through manually calling `Set-Alias`? I guess there should be a reason for it looking strange like that...\r\n\r\nSo in PSv2, the `AliasAttribute` was decorated with `AttributeUsage(AttributeTargets.Property | AttributeTargets.Field)` so it wasn't yet able to be applied to classes.  In PSv3 (I think), `AttributeTargets.Class` was added.  Although the CIM cmdlets were added in the same version, my **guess** is that the additional attribute target was added later in development (or the folks working on CIM just weren't aware of it). If y'all found someone who remembers then feel free to ignore my theory \ud83d\ude42 \r\n\r\n",
      "created_at": "2020-05-21T16:16:13Z",
      "updated_at": "2020-05-21T16:17:08Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@thlac Thanks for your contribution!",
      "created_at": "2020-05-23T13:05:50Z",
      "updated_at": "2020-05-23T13:05:50Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.1.0-preview.4` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.1.0-preview.4)\n",
      "created_at": "2020-06-25T19:06:32Z",
      "updated_at": "2020-06-25T19:06:32Z"
    }
  ],
  "created_at": "2020-05-10T16:22:38Z",
  "number": 12617,
  "state": "closed",
  "title": "Change CimCmdlets to use AliasAttribute",
  "updated_at": "2020-06-25T19:06:32Z"
}