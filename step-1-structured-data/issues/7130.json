{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7130",
  "author": "reaching-for-libra",
  "body": "\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\nAt the powershell prompt, hold the shift key and type the spacebar\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```none\r\nAdd space, advance cursor\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n```none\r\nNo action taken\r\n```\r\n\r\nEnvironment data\r\n----------------\r\nRunning on Windows 7. pwsh.exe started with -noprofile switch\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.1.0-preview.3\r\nPSEdition                      Core\r\nGitCommitId                    v6.1.0-preview.3\r\nOS                             Microsoft Windows 6.1.7601 S\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0, 5.0, 5.1.10032.0, 6.1.0-preview.3}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n\r\n```\r\n",
  "closed_at": "2018-10-10T15:55:52Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I can not repo.",
      "created_at": "2018-06-22T11:24:11Z",
      "updated_at": "2018-06-22T11:24:11Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "I believe this is a PSReadLine issue and the proposed fix is [here](https://github.com/lzybkr/PSReadLine/pull/711).",
      "created_at": "2018-06-23T15:37:21Z",
      "updated_at": "2018-06-23T15:37:21Z"
    },
    {
      "author": "webash",
      "author_association": "NONE",
      "body": "This didn't used to be an issue; why has it been introduced as one? How did this regression pass testing? Surely nobody releases shift to type a space when they've just (and will again) use it!",
      "created_at": "2018-10-10T10:54:59Z",
      "updated_at": "2018-10-10T10:54:59Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "This is fixed in [2.0.0-beta3](https://www.powershellgallery.com/packages/PSReadLine/2.0.0-beta3).\r\n\r\n@webash - if you're interested in improving the [existing regression tests](https://github.com/lzybkr/PSReadLine/tree/master/test) (which do have excellent branch coverage already, but can't really be exhaustive), feel free to contribute.",
      "created_at": "2018-10-10T15:55:52Z",
      "updated_at": "2018-10-10T15:55:52Z"
    },
    {
      "author": "JamesHarrisonBaggs",
      "author_association": "NONE",
      "body": "Thanks all! I can confirm that the following resolved the issue for me:\r\n\r\n1. Open PowerShell as admin\r\n2. Run install-module -name powershellget -force\r\n3. Restart PowerShell (as admin)\r\n4. Run install-module -name psreadline -allowprerelease -force\r\n5. Restart PowerShell again",
      "created_at": "2019-01-02T16:37:39Z",
      "updated_at": "2019-01-02T16:37:39Z"
    },
    {
      "author": "mcdonamw",
      "author_association": "NONE",
      "body": "It's near the end of 2019.   I just had to perform the same steps above on my 1903 build.  Is this ever going to make its way into the base Windows/Powershell image or are users supposed to run this -prerelease fix?",
      "created_at": "2019-10-09T18:24:09Z",
      "updated_at": "2019-10-09T18:24:09Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@mcdonamw In the days MSFT team hard works on PSReadline (see PSReadline repo). I hope we get new release soon with high quality. Please feedback in PSReadline repo if you see any issues.",
      "created_at": "2019-10-10T03:39:51Z",
      "updated_at": "2019-10-10T03:39:51Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "We have ported targeted fixes in PSRL to Windows PowerShell.  Plan is to check in PSRL 2.0.0 final to Windows PowerShell but we're only at beta5 right now.",
      "created_at": "2019-10-10T03:49:55Z",
      "updated_at": "2019-10-10T03:49:55Z"
    },
    {
      "author": "webash",
      "author_association": "NONE",
      "body": "What does that mean for getting into standard Windows builds? Will it eventually be included in a Windows build or a Windows Update?",
      "created_at": "2019-10-23T19:34:08Z",
      "updated_at": "2019-10-23T19:34:08Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Current version in Windows is Beta2. Latest version is Beta6. I think we will get a new version with CU sometime later.",
      "created_at": "2019-10-24T03:24:22Z",
      "updated_at": "2019-10-24T03:24:22Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "We don't plan to ship via Windows Update.  You can always install latest from PSGallery.  Once PSRL2 reaches GA (targeting Nov), then we'll check that into the next version of Windows.",
      "created_at": "2019-10-24T20:54:34Z",
      "updated_at": "2019-10-24T20:54:34Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT No updates for Enterprise versions too? Current PRRL is broken and doesn't work with Russian chars.",
      "created_at": "2019-10-25T03:00:35Z",
      "updated_at": "2019-10-25T03:02:14Z"
    },
    {
      "author": "benallred",
      "author_association": "NONE",
      "body": "Adding the following to my profile fixes this problem for me.\r\n\r\n```\r\nSet-PSReadLineKeyHandler Shift+Spacebar -ScriptBlock { [Microsoft.PowerShell.PSConsoleReadLine]::Insert(\" \") }\r\n```",
      "created_at": "2019-12-29T05:31:47Z",
      "updated_at": "2019-12-29T05:31:47Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@benallred if I recall correctly this issue was resolved in PSReadLine itself as well; if you update to the latest prerelease of that module, the additional key handler shouldn't be necessary. \ud83d\ude42 \r\n\r\nGood to have the interim fix for folx who can't update the module yet though, so thanks!",
      "created_at": "2019-12-29T08:17:22Z",
      "updated_at": "2019-12-29T08:17:22Z"
    },
    {
      "author": "benallred",
      "author_association": "NONE",
      "body": "Yes, I saw that. In this case I felt more comfortable with a key handler than a prerelease version. This was the first thread on this subject I found that helped me know I wasn't crazy when my spacebar stopped working so I thought I'd share what I discovered.",
      "created_at": "2019-12-29T19:52:45Z",
      "updated_at": "2019-12-29T19:52:45Z"
    },
    {
      "author": "vrtsds",
      "author_association": "NONE",
      "body": "`ModuleType Version    Name                                ExportedCommands`\r\n`---------- -------    ----                                ----------------`\r\n`Script     2.0.0      PSReadline                          {Get-PSReadLineKeyHandler, Get-PSReadLineOption, Remove-PSReadLineKeyHandler, Set-PSReadLineKeyHandler...}`\r\n\r\nShift+Space still doesn't do anything.",
      "created_at": "2020-07-24T23:43:56Z",
      "updated_at": "2020-07-24T23:44:54Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "You still need to update PSReadline as I mentioned, and it's possible whatever terminal you're using is also intercepting it, which PowerShell can't do anything about if that's the case.",
      "created_at": "2020-07-25T01:47:08Z",
      "updated_at": "2020-07-25T01:47:08Z"
    },
    {
      "author": "thw0rted",
      "author_association": "NONE",
      "body": "Hi, it's the middle of 2020 and this is still happening on the built-in Powershell in a fully updated Windows Home box. That's *bananas*.  Do I need a separate ticket to get this fixed in, y'know, the Powershell that every user already has?",
      "created_at": "2020-07-29T13:06:13Z",
      "updated_at": "2020-07-29T13:06:13Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "The builtin version of PowerShell on Windows 10 is locked to 5.1.\r\n\r\nThere are no further fixes being pushed via that route, with the sole exception of absolutely critical security-related issues. You can file UserVoice / Windows Feedback items to ask after that kind of thing, but it's not managed from this repository at all, and from what I've heard small items like this aren't really on the table for being backported to windows 10.\r\n\r\nAs I mentioned, you can try upgrading the PSReadLine module on affected boxes as that has seemed to be the main source of the problem, but as far as I'm aware there's no intention to change the preinstalled versions of modules - both PSReadLine and Pester have been version 2 and 3.x respectively for years now on the in-box install, and both modules have a _lot_ of changes (Pester is up to version 5.x in public release) that are not being propagated back to the in-box installations; you need to upgrade those modules explicitly.",
      "created_at": "2020-07-29T15:38:01Z",
      "updated_at": "2020-07-29T15:38:44Z"
    },
    {
      "author": "bbseal",
      "author_association": "NONE",
      "body": "Windows 10 is the current (and supposedly last) version of Windows, so it seems odd to say that a known issue will never be fixed and that a component that it uses will never be updated.",
      "created_at": "2020-07-29T16:00:57Z",
      "updated_at": "2020-07-29T16:00:57Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Have you tried updating the PSReadLine version at all?",
      "created_at": "2020-07-29T16:13:55Z",
      "updated_at": "2020-07-29T16:13:55Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I unload PSReadline module because even the latest version does not work well with Russian characters :-)\r\nAnd I'd prefer to get new version from WU. :-)",
      "created_at": "2020-07-29T16:57:13Z",
      "updated_at": "2020-07-29T16:57:13Z"
    },
    {
      "author": "thw0rted",
      "author_association": "NONE",
      "body": "I just want to make sure it's clear that \"update this component manually\" is not actually a fix for a lot of users. I spend a lot of my time on boxes where a) I don't have admin permissions and b) the network does not reach out to the real internet.  There should be a path to fixing this in *some* release of Powershell, eventually, and if there are \"no plans\" to pack in new versions of Powershell with new Windows releases / updates, *ever*, that needs to be advertised loudly anywhere that users are being advised to use it.  Why would I bother learning Powershell if it's stagnant?",
      "created_at": "2020-07-29T18:28:57Z",
      "updated_at": "2020-07-29T18:28:57Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "PowerShell isn't stagnant. The _default_ installation of PowerShell on Windows is, though.",
      "created_at": "2020-07-29T18:34:15Z",
      "updated_at": "2020-07-29T18:34:15Z"
    },
    {
      "author": "vrtsds",
      "author_association": "NONE",
      "body": "That's an interesting philosophical approach. Allow me to offer another one: for most purposes, the only real version of PowerShell is the version people _have_. If _that_ isn't being updated, then PowerShell is stagnant.\r\n\r\nAnyway, I'm a little puzzled why I'm supposed to upgrade past version 2.0.0 of the module for a bug that was reportedly fixed in a beta release over a year prior to that? I don't want to make a configuration change like this to my system unless I understand _exactly_ why I'm doing it.",
      "created_at": "2020-07-30T02:25:21Z",
      "updated_at": "2020-07-30T02:25:21Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "The version preinstalled on Windows 10 systems _is_ a beta version. Couldn't tell you which exactly (you'll need to inspect the module's PrivateData field for that information, Windows PowerShell won't tell you it's a pre-release version).\r\n\r\nYou can be philosophical all you want. That's the present reality, whether or not it's one we like.",
      "created_at": "2020-07-30T02:45:34Z",
      "updated_at": "2020-07-30T02:46:19Z"
    },
    {
      "author": "vrtsds",
      "author_association": "NONE",
      "body": "I'm not sure if I can describe how stunned I am right now.\r\n\r\nSo, Windows 10 having a stagnant PowerShell library by default, okay. That's not _great,_ but it's, y'know, a _normal_ amount of not great. I can at least understand why they might decide to do that.\r\n\r\nBut to find out some of these modules they aren't updating are _beta_ versions? Combined with the equally stunning news that PowerShell's UI doesn't _tell_ you when you've got a beta module?\r\n\r\nI mean, at that point, the fact that one of these preserved-in-amber betas has a known and fixed bug that gaslights users into thinking they're bad at typing, well, that's just icing.\r\n\r\nAnyway, updating the module fixed it. The `-prerelease` parameter isn't needed anymore, of course.",
      "created_at": "2020-07-30T03:13:31Z",
      "updated_at": "2020-07-30T03:13:31Z"
    },
    {
      "author": "thw0rted",
      "author_association": "NONE",
      "body": "Oh Lord, I just realized that we're now having the Python 2.7 / 3.0 conversation.  Welp, I wasn't expecting this when I woke up today.",
      "created_at": "2020-07-30T07:28:57Z",
      "updated_at": "2020-07-30T07:28:57Z"
    },
    {
      "author": "bbseal",
      "author_association": "NONE",
      "body": "Hang on, according to Steve Lee, they do want to replace 5.1:  https://devblogs.microsoft.com/powershell/the-next-release-of-powershell-powershell-7/\r\n\r\nAnd then they're planning on merging .NET Core and .NET into .NET 5:  https://visualstudiomagazine.com/articles/2019/05/06/net-5.aspx\r\n\r\nSo it sounds like once they get all this stuff on the same footing, we should be on a path to sanity.",
      "created_at": "2020-07-30T11:41:18Z",
      "updated_at": "2020-07-30T11:41:18Z"
    }
  ],
  "created_at": "2018-06-21T13:35:46Z",
  "number": 7130,
  "state": "closed",
  "title": "Shift+Spacebar does not add a space in console",
  "updated_at": "2020-07-30T11:41:18Z"
}