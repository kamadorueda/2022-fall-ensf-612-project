{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13783",
  "author": "Danl2620",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 and PowerShell 7+ issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6).\r\n\r\n-->\r\n\r\n## Steps to reproduce\r\n\r\n```powershell\r\n\r\n$DLLPaths = @(\r\n    \"<nuget-path>/packages/microsoft.extensions.configuration/3.1.7/lib/netstandard2.0/Microsoft.Extensions.Configuration.dll\"\r\n)\r\n\r\ntry\r\n{\r\n    $DLLPaths | ForEach-Object { Add-Type -Path $_ }\r\n}\r\ncatch\r\n{\r\n    $_.Exception.LoaderExceptions | ForEach-Object {\r\n        Write-Error $_.Message\r\n    }\r\n}\r\n\r\n[Microsoft.Extensions.Configuration.ConfigurationBuilder] | Get-Member \r\n\r\n```\r\n\r\n## Expected behavior\r\n\r\n```none\r\n\r\nThe script will show the members of the `ConfigurationBuilder` class type.\r\n\r\n```\r\n\r\n## Actual behavior\r\n\r\n```none\r\nInvalidOperation: <myscript>:<linenumber>:1\r\nLine |\r\n  23 |  [Microsoft.Extensions.Configuration.ConfigurationBuilder] | Get-Membe \u2026\r\n     |  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n     | Unable to find type [Microsoft.Extensions.Configuration.ConfigurationBuilder].\r\n\r\n```\r\n\r\n## Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\n\r\n> $PSVersionTable\r\n\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.3\r\nPSEdition                      Core\r\nGitCommitId                    7.0.3\r\nOS                             Darwin 19.6.0 Darwin Kernel Version 19.6.0: Thu Jun 18 20:49:00 PDT 2020; root:xnu-6153.141.1~1/RELEASE_X86_64\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n```\r\n",
  "closed_at": "2020-10-17T00:00:05Z",
  "comments": [
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "You need to load it's dependencies as well.  It won't show type load errors on assembly load because reference resolution is delayed until first reference. Any easy way to force it is to use `Import-Module` instead, or just add the `-PassThru` parameter which will try to enumerate types.  The latter gives you:\r\n\r\n```raw\r\nAdd-Type: Unable to load one or more of the requested types.\r\nCould not load file or assembly 'Microsoft.Extensions.Configuration.Abstractions, Version=3.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60'. The system cannot find the file specified.\r\nCould not load file or assembly 'Microsoft.Extensions.Configuration.Abstractions, Version=3.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60'. The system cannot find the file specified.\r\nCould not load file or assembly 'Microsoft.Extensions.Configuration.Abstractions, Version=3.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60'. The system cannot find the file specified.\r\nCould not load file or assembly 'Microsoft.Extensions.Configuration.Abstractions, Version=3.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60'. The system cannot find the file specified.\r\nCould not load file or assembly 'Microsoft.Extensions.Primitives, Version=3.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60'. The system cannot find the file specified.\r\nCould not load file or assembly 'Microsoft.Extensions.Configuration.Abstractions, Version=3.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60'. The system cannot find the file specified.\r\nCould not load file or assembly 'Microsoft.Extensions.Configuration.Abstractions, Version=3.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60'. The system cannot find the file specified.\r\nCould not load file or assembly 'Microsoft.Extensions.Configuration.Abstractions, Version=3.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60'. The system cannot find the file specified.\r\nCould not load file or assembly 'Microsoft.Extensions.Configuration.Abstractions, Version=3.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60'. The system cannot find the file specified.\r\nCould not load file or assembly 'Microsoft.Extensions.Configuration.Abstractions, Version=3.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60'. The system cannot find the file specified.\r\nCould not load file or assembly 'Microsoft.Extensions.Configuration.Abstractions, Version=3.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60'. The system cannot find the file specified.\r\n```",
      "created_at": "2020-10-15T03:09:57Z",
      "updated_at": "2020-10-15T03:09:57Z"
    },
    {
      "author": "Danl2620",
      "author_association": "NONE",
      "body": "Ok, that makes sense. Is there a way to generate the correctly ordered list of assemblies to support my desired assembly `Microsoft.Extensions.Configuration.Ini`?  I know paket will generate load scripts for this purpose -- but only does so for C# and F#.",
      "created_at": "2020-10-15T19:36:17Z",
      "updated_at": "2020-10-15T19:36:17Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "@Danl2620 Honestly I'd do something like this:\r\n\r\n```powershell\r\nmd ScratchProject\r\ncd ScratchProject\r\ndotnet new classlib\r\ndotnet add package Whatever\r\ndotnet publish\r\n```\r\n\r\nThen go look at what the build process copied in `bin/Debug/netstandard2.0(or w/e target framework)/publish/*.dll`.",
      "created_at": "2020-10-15T19:46:21Z",
      "updated_at": "2020-10-15T19:46:21Z"
    },
    {
      "author": "Danl2620",
      "author_association": "NONE",
      "body": "Yeah, that's what I'm pondering. Is it true that the assemblies must be imported in the correct order?",
      "created_at": "2020-10-15T22:24:42Z",
      "updated_at": "2020-10-15T22:24:42Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "@Danl2620 nah you shouldn't need to",
      "created_at": "2020-10-15T22:46:33Z",
      "updated_at": "2020-10-15T22:46:33Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2020-10-17T00:00:04Z",
      "updated_at": "2020-10-17T00:00:04Z"
    }
  ],
  "created_at": "2020-10-14T19:25:27Z",
  "number": 13783,
  "state": "closed",
  "title": "Unable to add and use an assembly in PowerShell script",
  "updated_at": "2020-10-17T00:00:05Z"
}