{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10675",
  "author": "SteveL-MSFT",
  "body": "# Summary of the new feature/enhancement\r\n\r\nOn Windows, the `~` is only understood by PowerShell.  So if you try: `notepad ~\\foo.txt`, it complains it can't find the file path.  On Windows and non-Windows PSDrives have no meaning outside of PowerShell, so you can't do something like `pico temp:/temp.txt` with expectation that you're creating a file in the temp drive.\r\n\r\n# Proposed technical implementation details (optional)\r\n\r\nThe problem is determining if the file path should be resolved or if it's a literal string being passed to the native command.  In most cases, it would seem that resolving the path would be fine.  Literal strings can have quotes around them making it explicit.",
  "closed_at": "2020-04-27T21:14:58Z",
  "comments": [
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Resolving PSDrive-based paths to native filesystem paths on all platforms sounds like a nice enhancement.\r\n\r\nYes, on Unix quoting is already being used to distinguish between a (potential) filesystem path to be `~`-resolved _and globbed_ (unquoted) and a literal argument (quoted), a nod to POSIX-like shells.\r\n\r\nHowever, the automatic globbing is probably not a good idea on Windows, where it is up to the target command to expand globs (wildcard expressions).\r\n\r\nSo that gives us the following - is that what you had in mind?\r\n\r\n* All platforms:\r\n  * Expand _unquoted_ (token-initial) `~` (as before, only if followed by an unquoted path separator or nothing at all)\r\n       * As an aside: Currently, this feature isn't fully compatible with the POSIX-like shell feature it emulates: see   #11386\r\n\r\n  * Convert an _unquoted_ path that starts with a PS-only drive spec to a native filesystem path (if it's a _filesystem_ PS drive).\r\n\r\n* Unix-like platforms only:\r\n\r\n  * Perform globbing (expansion to individual filename arguments based on wildcard patterns) on _unquoted_ paths.\r\n\r\n\r\n\r\n\r\n",
      "created_at": "2019-10-02T15:28:47Z",
      "updated_at": "2019-12-17T20:43:19Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:This issue was addressed in #12386, which has now been successfully released as `v7.1.0-preview.3`.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.1.0-preview.3)\n",
      "created_at": "2020-05-19T18:10:09Z",
      "updated_at": "2020-05-19T18:10:09Z"
    }
  ],
  "created_at": "2019-10-01T21:38:17Z",
  "number": 10675,
  "state": "closed",
  "title": "Resolve file paths before passing to native commands",
  "updated_at": "2020-05-19T18:10:10Z"
}