{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15971",
  "author": "catthehacker",
  "body": "### Prerequisites\n\n- [X] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\n\n### Steps to reproduce\n\n```powershell\r\nNew-ItemProperty -Path Registry::HKEY_CURRENT_USER\\SOFTWARE -Name PSPath -PropertyType String -Value C:\\\r\nGet-ItemProperty -Path Registry::HKEY_CURRENT_USER\\SOFTWARE -Name PSPath | select-object -ExpandProperty PSPath\r\n```\n\n### Expected behavior\n\n```console\nC:\\\n```\n\n\n### Actual behavior\n\n```console\nMicrosoft.PowerShell.Core\\Registry::HKEY_CURRENT_USER\\SOFTWARE\n```\n\n\n### Error details\n\n_No response_\n\n### Environment data\n\n```powershell\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.0-preview.8\r\nPSEdition                      Core\r\nGitCommitId                    7.2.0-preview.8\r\nOS                             Microsoft Windows 10.0.21390\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\n```\n\n\n### Visuals\n\n_No response_",
  "closed_at": null,
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "\ud83e\udd14 I'd imagine the same happens for added PS* properties in other providers too. Not sure if there's a workaround for this kind of case.",
      "created_at": "2021-08-22T01:06:46Z",
      "updated_at": "2021-08-22T01:06:46Z"
    },
    {
      "author": "catthehacker",
      "author_association": "NONE",
      "body": "It will definitely happen everywhere where `PS*` properties are mixed with raw kv maps.\r\n\r\nAnd as always, best workaround is to use .NET directly ;)\r\n```powershell\r\n\u276f\u276f\u276f [Microsoft.Win32.Registry]::CurrentUser.OpenSubKey('Software').GetValue('PSPath')\r\nC:\\\r\n```",
      "created_at": "2021-08-22T01:15:27Z",
      "updated_at": "2021-08-22T01:22:42Z"
    },
    {
      "author": "jborean93",
      "author_association": "COLLABORATOR",
      "body": "You can use the provider to open the key but then use .NET to get the property/name as well to simplify things\r\n\r\n```powershell\r\n(Get-Item HKCU:\\SOFTWARE).GetValue('PSPath')\r\n```",
      "created_at": "2021-08-22T03:25:53Z",
      "updated_at": "2021-08-22T03:25:53Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2022-05-18T00:00:48Z",
      "updated_at": "2022-05-18T00:00:48Z"
    },
    {
      "author": "catthehacker",
      "author_association": "NONE",
      "body": "@SydneyhSmith this is not answered nor solved.",
      "created_at": "2022-05-18T01:13:09Z",
      "updated_at": "2022-05-18T01:13:09Z"
    }
  ],
  "created_at": "2021-08-22T01:03:21Z",
  "labels": [
    "Needs-Triage",
    "Area-FileSystem-Provider"
  ],
  "number": 15971,
  "state": "open",
  "title": "`PS*` properties overshadow properties of the same name in registry",
  "updated_at": "2022-05-18T15:03:12Z"
}