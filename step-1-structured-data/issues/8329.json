{
  "_url": "https://github.com/PowerShell/PowerShell/issues/8329",
  "author": "IISResetMe",
  "body": "## PR Summary\r\nFix #8028 \r\n\r\nThis change adds support for specifiying the underlying type for an enum:\r\n\r\n```powershell\r\nenum MyEnum : long \r\n{\r\n  A = 0x0FFFFFFFFFFFFFFF\r\n  B\r\n}\r\n# or\r\nenum MyByte : byte \r\n{\r\n  A = 0x01\r\n  B = 0x02\r\n  C = 0x03\r\n  D\r\n}\r\n```\r\n\r\nTODO:\r\n - [x] re-introduce range validation (fixed in f417453b99636bdb1fd10b25d3ea554304d72315)\r\n   - [x] ~~currently breaks on negative value literals~~ (fixed in 19b277054a16139678b64f277e5dd95530638add)\r\n - [x] better parsing errors for invalid underlying types (fixed in fc5a608f3483941f82d1a817cbde1eead3c18a77)\r\n - [x] ~~value assignment is currently broken from non-int types~~ (fixed in f58eba81d585a74cdef8e22807e9f39710e406ea)\r\n - [x] negative parsing tests\r\n\r\n<!-- summarize your PR between here and the checklist -->\r\n\r\n## PR Checklist\r\n\r\n- [X] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [X] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [X] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` to the beginning of the title and remove the prefix when the PR is ready.\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [X] User-facing [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed - Issue link:\r\n- **Testing - New and feature**\r\n    - [ ] Not Applicable or can only be tested interactively\r\n    - **OR**\r\n    - [X] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n        - [ ] [Add `[feature]` if the change is significant or affects feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\r\n",
  "closed_at": "2019-01-17T22:22:11Z",
  "comments": [
    {
      "author": "IISResetMe",
      "author_association": "COLLABORATOR",
      "body": "I believe that addresses all issues related to the type constraint.\r\n\r\nThe only open question is regarding the change in behavior to value assignment when `[Flags()]` is specified. Since this breaks current behavior and has a bunch of quirky behaviors atm, I'll remove it from this PR and push it separately",
      "created_at": "2018-11-27T19:29:04Z",
      "updated_at": "2018-11-27T19:29:04Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@IISResetMe for future reference when you look at adding that `[Flags()]` stuff back in, I think you could probably safely use bit shifts rather than `*= 2` \ud83d\ude09 ",
      "created_at": "2018-11-27T19:40:33Z",
      "updated_at": "2018-11-27T19:40:33Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "Can we get committee review for the new syntax?",
      "created_at": "2018-11-30T19:09:02Z",
      "updated_at": "2018-11-30T19:09:02Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee reviewed this and is fine with the syntax",
      "created_at": "2018-12-05T23:47:50Z",
      "updated_at": "2018-12-05T23:47:50Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@TravisEz13 Please update your review.",
      "created_at": "2018-12-06T21:15:00Z",
      "updated_at": "2018-12-06T21:15:00Z"
    },
    {
      "author": "stale[bot]",
      "author_association": "NONE",
      "body": "This PR has been automatically marked as stale because it has not had activity in the last 30 days. It will be closed if no further activity occurs within 10 days.\nThank you for your contributions.\nCommunity members are welcome to grab these works.\n",
      "created_at": "2019-01-10T19:09:54Z",
      "updated_at": "2019-01-10T19:09:54Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@TravisEz13 @IISResetMe apart from the merge conflict, was there anything else pending here? \ud83d\udc96 ",
      "created_at": "2019-01-10T19:43:17Z",
      "updated_at": "2019-01-10T19:43:17Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@vexx32 \tMy comments have not been addressed. https://github.com/PowerShell/PowerShell/pull/8329#pullrequestreview-180404781",
      "created_at": "2019-01-11T01:14:25Z",
      "updated_at": "2019-01-11T01:14:25Z"
    },
    {
      "author": "IISResetMe",
      "author_association": "COLLABORATOR",
      "body": "@TravisEz13 I believe the last two commits address your open comments :) ",
      "created_at": "2019-01-12T23:23:21Z",
      "updated_at": "2019-01-12T23:23:21Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@IISResetMe Please resolve merge conflicts.",
      "created_at": "2019-01-13T10:33:17Z",
      "updated_at": "2019-01-13T10:33:17Z"
    },
    {
      "author": "IISResetMe",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov done!",
      "created_at": "2019-01-13T11:50:51Z",
      "updated_at": "2019-01-13T11:50:51Z"
    },
    {
      "author": "IISResetMe",
      "author_association": "COLLABORATOR",
      "body": "[The Codacy issue currently failing](https://app.codacy.com/app/slee/PowerShell/file/28451399091/issues/source?bid=10638692&fileBranchId=10639194#l1172) is not really relevant.\r\n\r\nWhile the compiler can't prove it, that path is unreachable since `case TypeCode.Int32` will always be chosen if `typeConstraintAst == null`",
      "created_at": "2019-01-13T12:03:37Z",
      "updated_at": "2019-01-13T12:03:37Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Yes, I see. I see that Codacy has many false-positives.",
      "created_at": "2019-01-13T17:28:48Z",
      "updated_at": "2019-01-13T17:28:48Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@IISResetMe Thanks for your contribution!",
      "created_at": "2019-01-18T04:15:38Z",
      "updated_at": "2019-01-18T04:15:38Z"
    }
  ],
  "created_at": "2018-11-21T20:16:37Z",
  "number": 8329,
  "state": "closed",
  "title": "Allow user-specified underlying type for enums",
  "updated_at": "2019-01-18T04:15:38Z"
}