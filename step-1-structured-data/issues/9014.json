{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9014",
  "author": "rainersigwald",
  "body": "# Steps to reproduce\r\n\r\n```powershell\r\nGet-ChildItem -Path *.txt -Recurse -Force -Name\r\n```\r\n\r\nIn a folder with for example\r\n\r\n```none\r\nS:\\play\\dir-demo> tree /f\r\nFolder PATH listing for volume Source\r\nVolume serial number is E68B-B87E\r\nS:.\r\n\u2502   File.txt\r\n\u2502\r\n\u251c\u2500\u2500\u2500sub1\r\n\u2502   \u2502   File.txt\r\n\u2502   \u2502\r\n\u2502   \u251c\u2500\u2500\u2500subsub1\r\n\u2502   \u2502       File.txt\r\n\u2502   \u2502\r\n\u2502   \u2514\u2500\u2500\u2500subsub2\r\n\u2502           File.txt\r\n\u2502\r\n\u251c\u2500\u2500\u2500sub2\r\n\u2502       File.txt\r\n\u2502\r\n\u2514\u2500\u2500\u2500sub3\r\n        File.txt\r\n```\r\n\r\n# Expected behavior\r\n\r\nRelative paths to all text files found in subdirectories of the current directory.\r\n\r\n# Actual behavior\r\n\r\n```none\r\nS:\\play\\dir-demo> Get-ChildItem -Path *.txt -Recurse -Force -Name\r\nFile.txt\r\n```\r\n\r\n# Environment data\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.1.3\r\nPSEdition                      Core\r\nGitCommitId                    6.1.3\r\nOS                             Microsoft Windows 10.0.17763\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\n(also reproduces on inbox `5.1.17763.316`)",
  "closed_at": null,
  "comments": [
    {
      "author": "mithrandir",
      "author_association": "NONE",
      "body": "You can remove `-path *.txt`\r\n\r\n```\r\nPS C:\\Users\\mithrandir\\Documents\\test> gci -r -name\r\nsub1\r\nsub2\r\nsub3\r\nFile.txt\r\nsub1\\File.txt\r\nsub2\\File.txt\r\nsub3\\File.txt\r\nPS C:\\Users\\mithrandir\\Documents\\test> gci -r -name -path *.txt\r\nFile.txt\r\n```",
      "created_at": "2019-02-28T19:33:49Z",
      "updated_at": "2019-02-28T19:33:49Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "`-Name` should be able to use with `-Path` since they are not mutually exclusive.  The problem appears to be [here](https://github.com/PowerShell/PowerShell/blob/master/src/System.Management.Automation/engine/SessionStateContainer.cs#L2396).  Basically, when `-Name` is used, what's happening is that if the result is a directory, it will recurse into the results of matching with `-Path`.  So maybe the fix here is in documentation.  To get the behavior you want:\r\n\r\n```powershell\r\nGet-ChildItem -Recurse -Force -Name -Include *.txt\r\n```\r\n\r\nIf you want to specify a starting path to recurse:\r\n\r\n```powershell\r\nGet-ChildItem -Recurse -Force -Name -Include *.txt -Path c:\\users\\slee\r\n```\r\n\r\n",
      "created_at": "2019-02-28T19:55:17Z",
      "updated_at": "2019-02-28T19:55:17Z"
    },
    {
      "author": "rainersigwald",
      "author_association": "NONE",
      "body": "What would change in the documentation?\r\n\r\nMy understanding was that this\r\n\r\n> ### Example 3: Get child items in the current directory and subdirectories\r\n> \r\n> This example displays **.txt** files that are located in the current directory and its\r\n> subdirectories.\r\n> \r\n> ```\r\n> PS> Get-ChildItem -Path C:\\Test\\*.txt -Recurse -Force\r\n> ...\r\n> ```\r\n>\r\n> The `Get-ChildItem` cmdlet uses the **Path** parameter to specify `C:\\Test\\*.txt`. **Path** uses the\r\n> asterisk (`*`) wildcard to specify all files with the file name extension **.txt**. The **Recurse**\r\n> parameter searches the **Path** directory its subdirectories, as shown in the **Directory:**\r\n> headings. The **Force** parameter displays hidden files such as **hiddenfile.txt** that have a mode\r\n> of **h**.\r\n> \r\n\r\ncombined with\r\n\r\n> ### -Path\r\n> \r\n> Specifies a path to one or more locations. Wildcards are accepted. The default location is the\r\n> current directory (`.`).\r\n\r\nimplied that the pattern could be specified as the `-Path` parameter and would be recursed. I'm not sure I see a straightforward way to correct that (but maybe I'm just missing it).",
      "created_at": "2019-02-28T20:03:48Z",
      "updated_at": "2019-02-28T20:24:49Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I think the description of `-Name` in the documentation would be changed to reflect the current coded behavior which is when `-Name` is specified, the results of `-Path` filter is used for recursion.  If you use a filter like `-Path *.txt` and there isn't a folder ending in `.txt`, no recursion will occur.",
      "created_at": "2019-02-28T21:22:50Z",
      "updated_at": "2019-02-28T21:22:50Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT:\r\n\r\n> So maybe the fix here is in documentation.\r\n\r\nI don't think that's the right fix for the baffling inconsistency  of the following two commands _not_ targeting the same set of files:\r\n\r\n```powershell\r\n# Finds *.txt files on all levels of the subtree.\r\nGet-ChildItem -Path *.txt -Recurse \r\n\r\n# !! Finds *.txt files only as immediate children\r\nGet-ChildItem -Path *.txt -Recurse -Name\r\n```\r\n\r\nClearly, the intent of `-Name` is to only modify the _type_ of the objects output - (relative) path strings instead of filesystem-info objects.\r\nThat it changes _what filesystem items are targeted_ should be considered a bug.\r\n\r\n\r\n",
      "created_at": "2019-03-03T19:29:41Z",
      "updated_at": "2019-03-03T19:29:41Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@mklement0, I agree that the current behavior is not correct, however, the question is whether it meets our breaking change bar",
      "created_at": "2019-03-11T17:56:21Z",
      "updated_at": "2019-03-11T17:56:21Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Understood, but given that the current behavior is both obscure and unhelpful, it's hard to imagine that anyone actually relies on it, which makes fixing this a [Bucket 3: Unlikely Grey Area](https://github.com/PowerShell/PowerShell/blob/master/docs/dev-process/breaking-change-contract.md#bucket-3-unlikely-grey-area) change.",
      "created_at": "2019-03-11T18:05:52Z",
      "updated_at": "2019-03-11T18:05:52Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "P.S.: It looks like `-Name` deserves more scrutiny:\r\n\r\n* #9119\r\n\r\n* #9120\r\n\r\n* #9122\r\n\r\n* #9126",
      "created_at": "2019-03-11T23:01:31Z",
      "updated_at": "2019-03-12T20:39:09Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee reviewed this, we don't believe this is a Bucket 3 item as it's likely users are relying on this in simple cases where they did not encounter the counter behavior.  We agree that `-Name` should not change the behavior of `Get-ChildItem -Recurse -Path *.txt` outside of the output.  However, due to the risks of the change, we propose that we should update the documentation to reflect the current behavior and pend any code change to a future FileSystemProvider v2 where `-Name` may not even be needed.  If users want the expected behavior, use the pipeline.\r\n\r\nRelated https://github.com/PowerShell/PowerShell/issues/5785",
      "created_at": "2019-03-13T22:50:46Z",
      "updated_at": "2019-03-13T22:51:31Z"
    }
  ],
  "created_at": "2019-02-28T19:16:24Z",
  "labels": [
    "Issue-Question",
    "Committee-Reviewed",
    "WG-Cmdlets-Management",
    "Area-FileSystem-Provider"
  ],
  "number": 9014,
  "state": "open",
  "title": "Get-ChildItem -Recurse with -Name does not recurse",
  "updated_at": "2021-11-29T17:28:18Z"
}