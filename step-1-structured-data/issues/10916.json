{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10916",
  "author": "SteveL-MSFT",
  "body": "# Summary of the new feature/enhancement\r\n\r\nWhen we deserialize an object, we should include additional data on the endpoint from which the object originated.  When a method is called from this object, PowerShell should attempt to invoke it at the endpoint and return the deserialized result.  Although this will work for remoting if the connection is live, the primary use case is with local IPC from pwsh to powershell.exe.  Of course, if the remoting endpoint (or powershell.exe in this case) is not available, an appropriate error message should be returned.\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Does PSRP support this?",
      "created_at": "2019-10-28T05:42:51Z",
      "updated_at": "2019-10-28T05:42:51Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov we can store a sufficient info about the pssession used and try to reuse that.",
      "created_at": "2019-10-28T15:27:22Z",
      "updated_at": "2019-10-28T15:27:22Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I'd said that it make sense only in _real_ session like\r\n```powershell\r\n$session.processvarableinthesession.Kill()\r\n```",
      "created_at": "2019-10-28T17:34:39Z",
      "updated_at": "2019-10-28T17:34:39Z"
    }
  ],
  "created_at": "2019-10-27T18:54:12Z",
  "number": 10916,
  "state": "open",
  "title": "Enable calling methods on deserialized objects (when possible)",
  "updated_at": "2020-08-20T18:51:47Z"
}