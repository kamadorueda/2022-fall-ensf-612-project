{
  "_url": "https://github.com/PowerShell/PowerShell/issues/18251",
  "author": "Revnixcad",
  "body": "### Prerequisites\n\n- [X] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\n\n### Steps to reproduce\n\nusing the [SymbolicLink Example](https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.management/new-item?view=powershell-7.2#example-7-create-a-symbolic-link-to-a-file-or-folder)  i assumed it would work for Junction as well.\r\n\r\n1. create folder `frontend\\foo`\r\n2. create folder `backend`\r\n3. within the folder `backend` run the following command: \r\n```Powershell \r\nNew-Item -ItemType Junction -Path foo -Target \"..\\frontend\\foo\"\r\n``` \r\nwith Windows Terminal 1.15.2713.0 on Windows 11 Pro 21H2 and PowerShell 7.2.6\n\n### Expected behavior\n\n```console\nfunctioning symlink to relative path `..\\frontend\\foo`\n```\n\n\n### Actual behavior\n\n```console\nGetting error `New-Item: Could not find item ..\\frontend\\foo.`\n```\n\n\n### Error details\n\n_No response_\n\n### Environment data\n\n```powershell\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.6\r\nPSEdition                      Core\r\nGitCommitId                    7.2.6\r\nOS                             Microsoft Windows 10.0.22000\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\n```\n\n\n### Visuals\n\n_No response_",
  "closed_at": null,
  "comments": [
    {
      "author": "237dmitry",
      "author_association": "NONE",
      "body": "This is by design. According help topic you have to run this command in admin's console or with developers mode is on. But the error message should not be misleading.\r\n",
      "created_at": "2022-10-10T20:36:34Z",
      "updated_at": "2022-10-10T21:29:16Z"
    },
    {
      "author": "Revnixcad",
      "author_association": "NONE",
      "body": "I'm running terminal in admin mode.",
      "created_at": "2022-10-11T05:02:46Z",
      "updated_at": "2022-10-11T05:02:46Z"
    },
    {
      "author": "237dmitry",
      "author_association": "NONE",
      "body": "> I'm running terminal in admin mode.\r\n\r\nThen I do not know. The junction 'foo' created without error",
      "created_at": "2022-10-11T05:13:55Z",
      "updated_at": "2022-10-11T05:15:22Z"
    },
    {
      "author": "jborean93",
      "author_association": "COLLABORATOR",
      "body": "While pwsh could resolve the junction point for you the actual junction cannot be a relative path, it must be absolute on the junction itself. This means you can do `New-Item -ItemType Junction -Path foo -Target (Get-Item ..\\frontend\\foo).FullName` to create it from a relative path but keep in mind the junction won't actually have the relative path itself.\r\n\r\nI believe symbolic links can have relative paths but I'm unsure if `New-Item` can actually create them that way.",
      "created_at": "2022-10-11T18:59:36Z",
      "updated_at": "2022-10-11T18:59:36Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Cmdlets WG is queued to discuss this",
      "created_at": "2022-10-13T14:16:49Z",
      "updated_at": "2022-10-13T14:16:49Z"
    },
    {
      "author": "jhoneill",
      "author_association": "NONE",
      "body": "> Cmdlets WG is queued to discuss this\r\n\r\nTo pre-empt what I'll say in the WG. \r\n1. There is a long standing thing that `Resolve-path` won't resolve a non-existent path (and scripts rely on this to resolve an test in one). `test-path ..\\..\\foo -IsValid` returns true but `resolve-path ..\\..\\foo ` gives a \"doesn't exist\" error. It would be good if we could expand a relative path without resorting to `$ExecutionContext.SessionState.Path.GetUnresolvedProviderPathFromPSPath(\"..\\..\\foo\")` \r\n\r\n2. `New-Item` should probably resolve the path in this case.  As general rule for all software, if the user's intent is unambiguous, but is in a format which the API doesn't accept, it _should_ be the job of software, not the user to change the format. Exceptions to this are allowed (it's a _should_ not a _must_), but I don't think this is one of those. Not resolving just looks like an omission. ",
      "created_at": "2022-10-14T08:50:22Z",
      "updated_at": "2022-10-14T08:50:22Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I agree that there doesn't seem to be any ambiguity on the user's intent.  However, the user does need to understand what will happen (in that the junction will resolve to an absolute path whereas a symlink will stay relative).",
      "created_at": "2022-10-17T16:19:56Z",
      "updated_at": "2022-10-17T16:19:56Z"
    },
    {
      "author": "jhoneill",
      "author_association": "NONE",
      "body": "Agree right back :-) I _think_ the link is returned and shows what is linked to, so PowerShell shows the user what has been done. We need to either assume that use selects the correct link, or make the error for a junction better so it says \"Did you mean a relative link, or an absolute link to _resolved path_\" . I'm happy to assume that the user who specifies Junction and relative path, wants the junction and was lazy about how they wrote the destination. \r\n",
      "created_at": "2022-10-18T09:07:30Z",
      "updated_at": "2022-10-18T09:07:30Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/wg-powershell-cmdlets reviewed this and agreed that we should fix the error message to indicate that a Junction requires an absolute path and not transform it for the user.",
      "created_at": "2022-11-02T17:16:22Z",
      "updated_at": "2022-11-02T17:16:22Z"
    }
  ],
  "created_at": "2022-10-10T19:18:24Z",
  "number": 18251,
  "state": "open",
  "title": "New-Item -ItemType Junction can't create relative link",
  "updated_at": "2022-11-02T17:16:36Z"
}