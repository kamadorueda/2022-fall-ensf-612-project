{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7709",
  "author": "pldmgg",
  "body": "Same issue posted here since not sure if OpenSSH-Win64 or pwsh issue: https://github.com/PowerShell/Win32-OpenSSH/issues/1244\r\n\r\nIn this test scenario, zerotesting5.zero.lab (192.168.2.13) is the localhost and zerowin16sshb.zero.lab (192.168.2.53) is the Remote Host.\r\n\r\nRelevant info about both machines:\r\n\r\n- Both are running Windows 2016 Standard\r\n- Both have pwsh 6.1.0-rc1 (and ONLY pwsh 6.1.0-rc1) installed\r\n- Both are running OpenSSH-Win64 7.7.2.0 (ssh-agent and sshd services are Running)\r\n- Both have the following sshd_config: https://gist.github.com/pldmgg/73ef10856bed885ffcf1df4d11560d72\r\n\r\nFrom zerotesting5.zero.lab (localhost) in pwsh.exe, do the following:\r\n\r\n```powershell\r\n# This fails:\r\nNew-PSSession -HostName zerowin16sshb -UserName zero\\zeroadmin -KeyFilePath \"C:\\Users\\zeroadmin\\.ssh\\zeroadmin_090418-cert.pub\"\r\n\r\n# This fails:\r\nNew-PSSession -HostName zerowin16sshb -UserName zero\\zeroadmin -KeyFilePath \"C:\\Users\\zeroadmin\\.ssh\\zeroadmin_090418\"\r\n\r\n# This works:\r\nssh zeroadmin@zero@zerowin16sshb\r\n\r\n# This works:\r\nssh -o \"IdentitiesOnly=true\" -i \"C:\\Users\\zeroadmin\\.ssh\\zeroadmin_090418\" -i \"C:\\Users\\zeroadmin\\.ssh\\zeroadmin_090418-cert.pub\" zeroadmin@zero@zerowin16sshb\r\n\r\n# This works:\r\nssh -o \"IdentitiesOnly=true\" -i \"C:\\Users\\zeroadmin\\.ssh\\zeroadmin_090418\" zeroadmin@zero@zerowin16sshb\r\n```\r\n\r\nFor both of the `New-PSSession` failures above, the error message is as follows:\r\n\r\n```powershell\r\nNew-PSSession : [zerowin16sshb] There is an error processing data from the background process. Error reported: PowerShell 6.1.0-rc.1.\r\nAt line:1 char:1\r\n+ New-PSSession -HostName zerowin16sshb -UserName zero\\zeroadmin -KeyFi ...\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : OpenError: (System.Manageme....RemoteRunspace:RemoteRunspace) [New-PSSession], PSRemotingTransportException\r\n+ FullyQualifiedErrorId : 2102,PSSessionOpenFailed\r\n```\r\n\r\nFor both of the `New-PSSession` attempts, output of `sshd.exe -ddd` on zerowin16sshb is the following:\r\n\r\nhttps://gist.github.com/pldmgg/95fc0a364c201896646fac59957cfe79\r\n\r\n\r\nNot sure if this is an OpenSSH-Win64 issue or a pwsh.exe issue, but since the straight ssh commands work and `New-PSSession` doesn't, I'm leaning towards pwsh.exe. But I'm also thinking that it could be something like ssh.exe not telling pwsh.exe's `New-PSSession` that it's done whatever it's doing...",
  "closed_at": "2018-09-06T23:09:43Z",
  "comments": [
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "On the sshd_config, I normally got uncommented:\r\n\r\nPort 22\r\nPubkeyAuthentication yes\r\nPasswordAuthentication yes\r\n\r\nThen, the ssh_port_22 rule need to be in place in the firewall.\r\n\r\nAlso, when using Enter-PSSession -Hostname, I don't include the computer name with the username. \r\n\r\nHope this help in any way!\r\n:)\r\n\r\n",
      "created_at": "2018-09-05T15:46:11Z",
      "updated_at": "2018-09-05T15:46:11Z"
    },
    {
      "author": "pldmgg",
      "author_association": "NONE",
      "body": "Thanks @MaximoTrinidad !\r\n\r\nRegarding Port, PubkeyAuthentication, and PasswordAuthentication, my understanding is that those commented options are actually set by default, so the only reason I would uncomment them is if I wanted to change those default settings (i.e. Port other than 22, or 'no' for either of the other settings).\r\n\r\nRegarding firewall, I've turned them completely off for both machines.\r\n\r\nFor `Enter-PSSession`, do you mean that you don't include the Domain preceding the account name for the -UserName parameter?",
      "created_at": "2018-09-05T15:57:24Z",
      "updated_at": "2018-09-05T15:57:24Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "One thing! Turning off firewall, I think it won't work because ssh relays on using port 22 and that's what's makes it secure and established connections between ssh machines.  Remember, this is not winrm remoting, its a total different connection protocol.\r\n\r\nYes! Don't use domain name with the username, again the -hostname parameter uses SSH protocol. SSH port 22 need to be set in order to work.  At least is my understanding!\r\n\r\nI've been using Win32-OpenSSH for some time now and I know things keep changing. \r\n\r\n:)",
      "created_at": "2018-09-05T16:06:53Z",
      "updated_at": "2018-09-05T16:07:29Z"
    },
    {
      "author": "pldmgg",
      "author_association": "NONE",
      "body": "Ok...well, the ssh commands do work without issue, so I think this is more of an issue with pwsh and specifically the PSSession cmdlets...",
      "created_at": "2018-09-05T16:08:57Z",
      "updated_at": "2018-09-05T16:08:57Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "Well! Let see if someone can provide more insight on it.\r\nI normally use it with enter-pssession, and I haven't try it without having the SSHport22 rule in the firewall. \r\n\r\n:)",
      "created_at": "2018-09-05T19:11:26Z",
      "updated_at": "2018-09-05T19:11:26Z"
    },
    {
      "author": "thezim",
      "author_association": "CONTRIBUTOR",
      "body": "Try using -SSHTransport see \r\nhttps://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/new-pssession?view=powershell-6 for more help. ",
      "created_at": "2018-09-06T00:56:18Z",
      "updated_at": "2018-09-06T00:56:18Z"
    },
    {
      "author": "pldmgg",
      "author_association": "NONE",
      "body": "Tried -SSHTransport with the same result. Also tried -UserName with just the account name as opposed to Domain\\Account - same result.\r\n\r\nOne thing that did actually change behavior though (but did not ultimately solve the problem), was adding a REG_SZ String Value for `DefaultShell` with value `\"C:\\Program Files\\PowerShell\\pwsh.exe\"` to `HKLM:\\Software\\OpenSSH\\`.  (Note that, it didn't exist before). Adding this registry value (and subsequently restarting the sshd service) made the `New-PSSession` cmdlet prompt me for a password (which it shouldn't do because I'm using -KeyFilePath...but at least something happened). Unfortunately, authentication never succeeded eventhough the password for the Domain Admin account was correct and password auth is allowed in the sshd_config. Adding this registry value also caused the aforementioned ssh commands to prompt me for a password (which, again, shouldn't happen because I'm trying to do Public Cert Authentication) with the same result (i.e. authentication was never successful eventhough the password was correct).\r\n\r\nRemoving this registry value and restarting the sshd service got me back to the state mentioned in my original post - i.e. Public Cert Authentication works with ssh.exe, but does not work with the `*-PSSession` cmdlets.\r\n\r\nStill pretty stumped on this...\r\n\r\nBut after googling around for awhile, I've gotta just ask this general question:\r\n\r\nHas **anyone** gotten Public Certificate Authentication to work between two **Windows OSes** using pwsh.exe `*-PSSession` cmdlets? Everything I've seen online is between Windows and Linux (which I **do** have working)...",
      "created_at": "2018-09-06T12:44:34Z",
      "updated_at": "2018-09-06T13:41:13Z"
    },
    {
      "author": "pldmgg",
      "author_association": "NONE",
      "body": "More information on this...still not solved, but I've narrowed down the problem to the sshd Subsystem invocation of pwsh. Still not clear whether this is a pwsh.exe or OpenSSH-Win64 problem...\r\n\r\nThe `ForceCommand pwsh.exe -NoProfile` option in my original sshd_config concealed the fact that the \"successful\" ssh commands were NOT in fact using Subsystem to put me in a pwsh.exe session. Instead, logs indicate that sshd was...\r\n\r\n```\r\nStarting session: shell on windows-pty for zero\\\\zeroadmin from 192.168.2.13 port 50944 id 0\r\n```\r\n\r\n...and then immediately running the `ForceCommand` to put me in pwsh.exe. To clarify, what I **should** be seeing here is...\r\n\r\n```\r\nStarting session: subsystem 'powershell' for zero\\\\zeroadmin from 192.168.2.13 port 51060 id 0\r\n```\r\n\r\n...which is what I see when I run `New-PSSession`. (My updated sshd_config comments-out the `ForceCommand` option : https://gist.github.com/pldmgg/2850f834889fc430c08e3fd4e735c3e3)\r\n\r\nUnfortunately commenting out `ForceCommand` did not make it so that my ssh commands used `Starting session: subsystem...` - they were/are still showing `Starting session: shell`, and I did NOT end up in pwsh.exe (but Public Certificate Authentication worked).\r\n\r\nSo the first problem is figuring out why Subsystem is NOT being used with straight ssh commands, and it IS being used (and failing for some unknown reason) by the pwsh.exe `*-PSSession` cmdlets.\r\n\r\nUpdated sshd logs can be found here:\r\n\r\n1) SSHD_Results_New-PSSession_No_DefaultShell_In_Registry: https://gist.github.com/pldmgg/6cf1a2e1ca02ae540062222fc50bbb63\r\n\r\n2) SSHD_Results_SSHExe_No_DefaultShell_In_Registry:\r\nhttps://gist.github.com/pldmgg/3fa040a73ce6f83385dbc05acb96cf1a",
      "created_at": "2018-09-06T18:35:30Z",
      "updated_at": "2018-09-06T18:36:46Z"
    },
    {
      "author": "pldmgg",
      "author_association": "NONE",
      "body": "Adding more info from thread on Win32-OpenSSH: https://github.com/PowerShell/Win32-OpenSSH/issues/1244\r\n\r\nRight now, my requirement is to use Public Cert Auth and Subsystem sshd_config such that both ssh.exe and Enter-PSSession put me in a pwsh session on the remote host.\r\n\r\nSo far, I have not been able to accomplish this for both ssh.exe and `*-PSSession` cmdlets. The only scenarios that led to me being in a pwsh.exe session on a remote host (where both client and server machines are Windows OSes) are as follows:\r\n\r\nSCENARIO 1: \r\nWithout `DefaultShell` entry in the registry, with `ForceCommand pwsh.exe -NoProfile`  in sshd_config, with `Subsystem powershell C:/symlinks/pwsh.exe -sshs -NoLogo -NoProfile` in sshd_config.\r\n\r\n- The ssh commands in my original post place me in a pwsh.exe on the Remote Host (SUCCESS)\r\n- `*-PSSession` cmdlets on the client side fail for some unknown reason (FAILURE)\r\n- NOTE: Eventhough `Subsystem...` is active in sshd_config, it is not honored when using ssh.exe. It is honored when using the `*-PSSession` cmdlets.\r\n- IMPORTANT NOTE: I've just confirmed that using `ForceCommand pwsh.exe -sshs -NoLogo -NoProfile` as you suggested causes ssh.exe to hang on the client side - so `ForceCommand pwsh.exe -NoProfile` is the only thing that works for me in this scenario, and only with ssh.exe commands (`*-PSSession` cmdlets still fail in the same way)\r\n\r\nSCENARIO 2:\r\nWith `DefaultShell` entry in the registry of `C:/Program Files/Powershell/6-preview/pwsh.exe` without `ForceCommand` in sshd_config, with `Subsystem powershell C:/symlinks/pwsh.exe -sshs -NoLogo -NoProfile` in sshd_config.`\r\n\r\n- The ssh commands in my original post place me in a pwsh.exe on the Remote Host (SUCCESS)\r\n- `*-PSSession` cmdlets on the client side fail for some unknown reason (FAILURE)\r\n- NOTE: Eventhough `Subsystem...` is active in sshd_config, it is not honored when using ssh.exe. It is honored when using the `*-PSSession` cmdlets.\r\n\r\n***For every other permutation of these three configuration settings (`DefaultShell`, `ForceCommand`, `Subsystem`) :***\r\n\r\n- Attempting to connect interactively via the ssh commands outlined in my original post have either -\r\n1) Placed me in cmd.exe on the remote host\r\n2) Prevented me from connecting altogether\r\n3) Hung indefinitely\r\n\r\n- Attempting to connect via the `*-PSSession` cmdlets has never been successful under any circumstances",
      "created_at": "2018-09-06T19:46:10Z",
      "updated_at": "2018-09-06T19:57:23Z"
    },
    {
      "author": "pldmgg",
      "author_association": "NONE",
      "body": "Closing and reopening under a new issue because info here is too difficult to digest.",
      "created_at": "2018-09-06T23:09:43Z",
      "updated_at": "2018-09-06T23:09:43Z"
    }
  ],
  "created_at": "2018-09-05T15:28:19Z",
  "number": 7709,
  "state": "closed",
  "title": "Issue with pwsh 6.1.0-rc1 New-PSSession using SSH Key Auth",
  "updated_at": "2018-10-30T06:16:57Z"
}