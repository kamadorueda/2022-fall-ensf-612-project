{
  "_url": "https://github.com/PowerShell/PowerShell/issues/16151",
  "author": "mcx808",
  "body": "### Prerequisites\n\n- [X] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\n\n### Steps to reproduce\n\nI'm using iTerm2 on macOS 11.8 and pwsh 7.1.4\r\n\r\nI noticed an issue when I changed my iTerm default profile to run pwsh directly. Previously it would start zsh and issue the command pwsh, where my `$env:PATH` variable would match the `$PATH` variable of the zsh session that launched it.\r\n\r\nWhen launching pwsh directly, the default `$env:PATH` value is `/usr/local/microsoft/powershell/7:/usr/bin:/bin:/usr/sbin:/sbin` and does not include any of the values specified in `/etc/paths` and `/etc/paths.d/`. \r\n\r\nI created a small workaround for now and added to my profile:\r\n```\r\n# Fix $env:PATH to include system paths. First turn the variable into an array\r\n[System.Collections.ArrayList]$PATH = $env:PATH -split ':'\r\n# Append the system paths \r\n$PATH += (Get-Content /etc/paths)\r\n$PATH += (Get-ChildItem /etc/paths.d/ | ForEach-Object {Get-Content $_})\r\n#Set the viariable\r\n$env:PATH = ($PATH | Select-Object -Unique) -join ':' \r\n```\n\n### Expected behavior\n\n```console\n$env:PATH should include the system entries from /etc/paths and /etc/paths.d/*, just like zsh (and likely bash) do.\n```\n\n\n### Actual behavior\n\n```console\n$env:PATH = /usr/local/microsoft/powershell/7:/usr/bin:/bin:/usr/sbin:/sbin\n```\n\n\n### Error details\n\n_No response_\n\n### Environment data\n\n```powershell\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.4\r\nPSEdition                      Core\r\nGitCommitId                    7.1.4\r\nOS                             Darwin 20.6.0 Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:20 PDT 2021; root:xnu-7195.141.6~3/RELEASE_ARM64_T8101\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\n```\n\n\n### Visuals\n\n_No response_",
  "closed_at": "2021-10-01T10:25:20Z",
  "comments": [
    {
      "author": "JamesWTruher",
      "author_association": "MEMBER",
      "body": "@mcx808 \r\nWG: it's not clear in the issue how you're starting pwsh, but be sure to use -login when starting pwsh (or invoke with the tickbox for login shell).\r\nhere's an article that might help: \r\nhttps://stackoverflow.com/questions/1276703/how-to-make-zsh-run-as-a-login-shell-on-mac-os-x-in-iterm\r\n\r\n\r\n\r\n<blockquote><img src=\"https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded\" width=\"48\" align=\"right\"><div>Stack Overflow</div><div><strong><a href=\"https://stackoverflow.com/questions/1276703/how-to-make-zsh-run-as-a-login-shell-on-mac-os-x-in-iterm\">How to make zsh run as a login shell on Mac OS X (in iTerm)?</a></strong></div><div>When zsh is set as a login shell on Mac OS X, when it is started by iTerm, zsh doesn't consider that it's being run as a login shell, although it's started as \u2018-zsh\u2019 (\u2018-\u2019 is put as the first charac...</div></blockquote>",
      "created_at": "2021-09-30T23:36:22Z",
      "updated_at": "2021-09-30T23:36:55Z"
    },
    {
      "author": "mcx808",
      "author_association": "NONE",
      "body": "Hi @JamesWTruher, right you are.\r\n\r\nI was starting pwsh by setting the command `/usr/local/microsoft/powershell/7/pwsh` as my powershell profile in iTerm2, and adding the `-login` switch does then set my `$env:PATH` correctly.\r\n\r\nI'll add this screenshot of the correct setting for posterity:\r\n<img width=\"928\" alt=\"image\" src=\"https://user-images.githubusercontent.com/30801293/135605090-5c7cd201-66bd-4089-9456-26f93ea82753.png\">\r\n\r\n",
      "created_at": "2021-10-01T10:25:20Z",
      "updated_at": "2021-10-01T10:26:05Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "Just to add here:\r\n\r\n- The /etc/paths behaviour only occurs for login shells\r\n- pwsh supports this because it supports login shell behaviour by reusing zsh on macOS (it execs itself, so inherits all environment variables from zsh)\r\n- However, you must ensure that pwsh is started as a login shell\r\n- You can do this explicitly by passing `-l` as the first switch, or\r\n- If you configure it as a login shell with `chsh` and add it to /etc/shells, the OS will start it with a `-` in the process name and it will infer that it's a login shell",
      "created_at": "2021-10-01T15:40:27Z",
      "updated_at": "2021-10-01T15:41:26Z"
    }
  ],
  "created_at": "2021-09-24T14:22:42Z",
  "number": 16151,
  "state": "closed",
  "title": "$env:PATH does not pick up settings in /etc/paths at startup on macOS",
  "updated_at": "2021-10-01T15:41:26Z"
}