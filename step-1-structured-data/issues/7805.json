{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7805",
  "author": "thecliguy",
  "body": "I'm writing a script to be used on both Windows and GNU/Linux _(I'm currently using Ubuntu but intend to use the script on various distros)_.\r\n\r\nI would like to obtain the username of the account under which the script is running. Ideally I'd like to do so using a single technique that'll work irrespective of the operating system.\r\n\r\nUsing an environment variable seemed like the obvious choice but alas Windows uses `$env:USERNAME` and Ubuntu uses `$env:USER`. Furthermore, `$env:USER` is inadequate because it is not populated if the script is run as a cron job.\r\n\r\nAs a workaround I am using whoami, Windows has shipped with such a binary since Windows Vista and likewise Ubuntu (normally) ships with the GNU coreutils in which it is present. Whilst this satisfies the requirement of an OS agnostic means of obtaining username (at least for Windows and Ubuntu) it relies on the presence of a third party binary, a dependency I'd rather not have.\r\n\r\nIs there already an OS agnostic means of obtaining username using PowerShell? If not are there any plans to introduce such a thing - or has this already been discussed and dismissed?\r\n\r\nEnvironment data\r\n----------------\r\n\r\nUbuntu:\r\n```\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.1.0\r\nPSEdition                      Core\r\nGitCommitId                    6.1.0\r\nOS                             Linux 4.4.0-134-generic #160-Ubuntu SMP Wed Aug 15 14:58:00 UTC 2018\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\nWindows 10:\r\n```\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.1.0\r\nPSEdition                      Core\r\nGitCommitId                    6.1.0\r\nOS                             Microsoft Windows 10.0.17134\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```",
  "closed_at": "2018-09-19T07:29:55Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Seems the question is for CoreFX repo.",
      "created_at": "2018-09-18T05:51:21Z",
      "updated_at": "2018-09-18T05:51:21Z"
    },
    {
      "author": "thezim",
      "author_association": "CONTRIBUTOR",
      "body": "This is the only OS agnostic way I have found so far via CoreFX. Note that these are not bound to any environment variable which makes them agnostic. I pondered if PowerShell Core should have yet another $PS* variable for these, but additions to that space is difficult to get approved and the below is simply enough for my needs.\r\n\r\n```powershell\r\n[Environment]::UserName\r\n```\r\nAnd if you need the hostname.\r\n```powershell\r\n[Environment]::MachineName\r\n```",
      "created_at": "2018-09-18T12:46:53Z",
      "updated_at": "2018-09-18T12:46:53Z"
    },
    {
      "author": "thecliguy",
      "author_association": "NONE",
      "body": "@thezim Thanks for that, it looks promising. I will test your suggestion and let you know the outcome tomorrow.",
      "created_at": "2018-09-18T16:54:32Z",
      "updated_at": "2018-09-18T16:54:32Z"
    },
    {
      "author": "thecliguy",
      "author_association": "NONE",
      "body": "@thezim Thank you, I have tested your suggested method of `[Environment]::UserName` and it works perfectly for my requirements.\r\n\r\nI do wonder if PowerShell should have something more discoverable, but I will proceed to close the issue as this does fulfil the objective.\r\n\r\nThanks again.",
      "created_at": "2018-09-19T07:29:55Z",
      "updated_at": "2018-09-19T07:29:55Z"
    }
  ],
  "created_at": "2018-09-17T21:40:45Z",
  "number": 7805,
  "state": "closed",
  "title": "OS agnostic means of obtaining username",
  "updated_at": "2018-09-19T07:29:55Z"
}