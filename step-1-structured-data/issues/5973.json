{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5973",
  "author": "markekraus",
  "body": "#5759 changes were merged without any `[feature]` tags for full testing. Now nightly and PR builds are failing.\r\n\r\nAgain, I'm asking that we start running feature tests by default in PRs. Trying to determine what is and is not a feature affecting change is proving to be pointless. If you are concerned about quick README updates, add a README tag to bypass feature tests. Otherwise, they should be on by default, IMO.\r\n\r\nhttps://ci.appveyor.com/project/PowerShell/powershell-f975h\r\n\r\n```none\r\nTEST FAILURES\r\nDescription: Validate Update-Help for module 'PSReadLine'\r\nName:        Validate Update-Help from the Web for all PowerShell Core modules...Validate Update-Help for module 'PSReadLine'\r\nmessage:\r\nExpected: {1}\r\nBut was:  {0}\r\nstack-trace:\r\nat line: 157 in C:\\projects\\powershell-f975h\\test\\powershell\\engine\\Help\\UpdatableHelpSystem.Tests.ps1\r\n157:     $helpFilesInstalled.Count | Should Be $expectedHelpFiles.Count\r\nDescription: Validate Update-Help for module 'PSReadLine'\r\nName:        Validate Update-Help -SourcePath for all PowerShell Core modules...Validate Update-Help for module 'PSReadLine'\r\nmessage:\r\nExpected: {1}\r\nBut was:  {0}\r\nstack-trace:\r\nat line: 157 in C:\\projects\\powershell-f975h\\test\\powershell\\engine\\Help\\UpdatableHelpSystem.Tests.ps1\r\n157:     $helpFilesInstalled.Count | Should Be $expectedHelpFiles.Count\r\n```\r\n\r\nhttps://travis-ci.org/PowerShell/PowerShell/jobs/331386328\r\n\r\n```none\r\nTEST FAILURES\r\nDescription: Validate Update-Help from the Web for all PowerShell Core modules./\r\nName:        Validate Update-Help for module 'PSReadLine'\r\nmessage:\r\nExpected: {1}\r\nBut was:  {0}\r\nstack-trace:\r\nat line: 157 in /home/travis/build/PowerShell/PowerShell/test/powershell/engine/Help/UpdatableHelpSystem.Tests.ps1\r\n157:     $helpFilesInstalled.Count | Should Be $expectedHelpFiles.Count\r\nDescription: Validate Update-Help -SourcePath for all PowerShell Core modules./\r\nName:        Validate Update-Help for module 'PSReadLine'\r\nmessage:\r\nExpected: {1}\r\nBut was:  {0}\r\nstack-trace:\r\nat line: 157 in /home/travis/build/PowerShell/PowerShell/test/powershell/engine/Help/UpdatableHelpSystem.Tests.ps1\r\n157:     $helpFilesInstalled.Count | Should Be $expectedHelpFiles.Count\r\nDescription: ConsoleHost unit tests/Redirected standard input for 'interactive' use\r\nName:        Interactive redirected input: \r\nmessage:\r\nExpected string length 7 but was 125. Strings differ at index 0.\r\nExpected: {PS> 1+1}\r\nBut was:  {An error has occurred that was not properly handled. Additional information is shown below. The PowerShell process will exit.}\r\n-----------^\r\nstack-trace:\r\nat line: 352 in /home/travis/build/PowerShell/PowerShell/test/powershell/Host/ConsoleHost.Tests.ps1\r\n352:             $process.StandardOutput.ReadLine() | Should Be \"PS> 1+1\"\r\nDescription: ConsoleHost unit tests/Redirected standard input for 'interactive' use\r\nName:        Interactive redirected input:  -IntERactive\r\nmessage:\r\nExpected string length 7 but was 125. Strings differ at index 0.\r\nExpected: {PS> 1+1}\r\nBut was:  {An error has occurred that was not properly handled. Additional information is shown below. The PowerShell process will exit.}\r\n-----------^\r\nstack-trace:\r\nat line: 352 in /home/travis/build/PowerShell/PowerShell/test/powershell/Host/ConsoleHost.Tests.ps1\r\n352:             $process.StandardOutput.ReadLine() | Should Be \"PS> 1+1\"\r\nDescription: ConsoleHost unit tests/Redirected standard input for 'interactive' use\r\nName:        Interactive redirected input:  -i\r\nmessage:\r\nExpected string length 7 but was 125. Strings differ at index 0.\r\nExpected: {PS> 1+1}\r\nBut was:  {An error has occurred that was not properly handled. Additional information is shown below. The PowerShell process will exit.}\r\n-----------^\r\nstack-trace:\r\nat line: 352 in /home/travis/build/PowerShell/PowerShell/test/powershell/Host/ConsoleHost.Tests.ps1\r\n352:             $process.StandardOutput.ReadLine() | Should Be \"PS> 1+1\"\r\nDescription: ConsoleHost unit tests/Redirected standard input for 'interactive' use\r\nName:        Interactive redirected input w/ initial command\r\nmessage:\r\nExpected string length 7 but was 4. Strings differ at index 4.\r\nExpected: {PS> 1+1}\r\nBut was:  {PS> }\r\n---------------^\r\nstack-trace:\r\nat line: 372 in /home/travis/build/PowerShell/PowerShell/test/powershell/Host/ConsoleHost.Tests.ps1\r\n372:             $process.StandardOutput.ReadLine() | Should Be \"PS> 1+1\"\r\nDescription: ConsoleHost unit tests/Redirected standard input for 'interactive' use\r\nName:        Redirected input explicit prompting (-File -)\r\nmessage:\r\nExpected string length 7 but was 125. Strings differ at index 0.\r\nExpected: {PS> 1+1}\r\nBut was:  {An error has occurred that was not properly handled. Additional information is shown below. The PowerShell process will exit.}\r\n-----------^\r\nstack-trace:\r\nat line: 388 in /home/travis/build/PowerShell/PowerShell/test/powershell/Host/ConsoleHost.Tests.ps1\r\n388:             $process.StandardOutput.ReadLine() | Should Be \"PS> 1+1\"\r\nDescription: ConsoleHost unit tests/Redirected standard input for 'interactive' use\r\nName:        Redirected input no prompting (-Command -)\r\nmessage:\r\nExpected string length 1 but was 0. Strings differ at index 0.\r\nExpected: {2}\r\nBut was:  {}\r\n-----------^\r\nstack-trace:\r\nat line: 399 in /home/travis/build/PowerShell/PowerShell/test/powershell/Host/ConsoleHost.Tests.ps1\r\n399:             $process.StandardOutput.ReadLine() | Should Be \"2\"\r\nDescription: ConsoleHost unit tests/Redirected standard input for 'interactive' use\r\nName:        Redirected input w/ nested prompt\r\nmessage:\r\nExpected string length 29 but was 4. Strings differ at index 4.\r\nExpected: {PS> $host.EnterNestedPrompt()}\r\nBut was:  {PS> }\r\n---------------^\r\nstack-trace:\r\nat line: 432 in /home/travis/build/PowerShell/PowerShell/test/powershell/Host/ConsoleHost.Tests.ps1\r\n432:             $process.StandardOutput.ReadLine() | Should Be \"PS> `$host.EnterNestedPrompt()\"\r\n```\r\n\r\nhttps://travis-ci.org/PowerShell/PowerShell/jobs/331386331\r\n\r\n```none\r\nTEST FAILURES\r\nDescription: Validate Update-Help from the Web for all PowerShell Core modules./\r\nName:        Validate Update-Help for module 'PSReadLine'\r\nmessage:\r\nExpected: {1}\r\nBut was:  {0}\r\nstack-trace:\r\nat line: 157 in /Users/travis/build/PowerShell/PowerShell/test/powershell/engine/Help/UpdatableHelpSystem.Tests.ps1\r\n157:     $helpFilesInstalled.Count | Should Be $expectedHelpFiles.Count\r\nDescription: Validate Update-Help -SourcePath for all PowerShell Core modules./\r\nName:        Validate Update-Help for module 'PSReadLine'\r\nmessage:\r\nExpected: {1}\r\nBut was:  {0}\r\nstack-trace:\r\nat line: 157 in /Users/travis/build/PowerShell/PowerShell/test/powershell/engine/Help/UpdatableHelpSystem.Tests.ps1\r\n157:     $helpFilesInstalled.Count | Should Be $expectedHelpFiles.Count\r\nDescription: ConsoleHost unit tests/Redirected standard input for 'interactive' use\r\nName:        Interactive redirected input: \r\nmessage:\r\nExpected string length 7 but was 125. Strings differ at index 0.\r\nExpected: {PS> 1+1}\r\nBut was:  {An error has occurred that was not properly handled. Additional information is shown below. The PowerShell process will exit.}\r\n-----------^\r\nstack-trace:\r\nat line: 352 in /Users/travis/build/PowerShell/PowerShell/test/powershell/Host/ConsoleHost.Tests.ps1\r\n352:             $process.StandardOutput.ReadLine() | Should Be \"PS> 1+1\"\r\nDescription: ConsoleHost unit tests/Redirected standard input for 'interactive' use\r\nName:        Interactive redirected input:  -IntERactive\r\nmessage:\r\nExpected string length 7 but was 125. Strings differ at index 0.\r\nExpected: {PS> 1+1}\r\nBut was:  {An error has occurred that was not properly handled. Additional information is shown below. The PowerShell process will exit.}\r\n-----------^\r\nstack-trace:\r\nat line: 352 in /Users/travis/build/PowerShell/PowerShell/test/powershell/Host/ConsoleHost.Tests.ps1\r\n352:             $process.StandardOutput.ReadLine() | Should Be \"PS> 1+1\"\r\nDescription: ConsoleHost unit tests/Redirected standard input for 'interactive' use\r\nName:        Interactive redirected input:  -i\r\nmessage:\r\nExpected string length 7 but was 125. Strings differ at index 0.\r\nExpected: {PS> 1+1}\r\nBut was:  {An error has occurred that was not properly handled. Additional information is shown below. The PowerShell process will exit.}\r\n-----------^\r\nstack-trace:\r\nat line: 352 in /Users/travis/build/PowerShell/PowerShell/test/powershell/Host/ConsoleHost.Tests.ps1\r\n352:             $process.StandardOutput.ReadLine() | Should Be \"PS> 1+1\"\r\nDescription: ConsoleHost unit tests/Redirected standard input for 'interactive' use\r\nName:        Interactive redirected input w/ initial command\r\nmessage:\r\nExpected string length 7 but was 4. Strings differ at index 4.\r\nExpected: {PS> 1+1}\r\nBut was:  {PS> }\r\n---------------^\r\nstack-trace:\r\nat line: 372 in /Users/travis/build/PowerShell/PowerShell/test/powershell/Host/ConsoleHost.Tests.ps1\r\n372:             $process.StandardOutput.ReadLine() | Should Be \"PS> 1+1\"\r\nDescription: ConsoleHost unit tests/Redirected standard input for 'interactive' use\r\nName:        Redirected input explicit prompting (-File -)\r\nmessage:\r\nExpected string length 7 but was 125. Strings differ at index 0.\r\nExpected: {PS> 1+1}\r\nBut was:  {An error has occurred that was not properly handled. Additional information is shown below. The PowerShell process will exit.}\r\n-----------^\r\nstack-trace:\r\nat line: 388 in /Users/travis/build/PowerShell/PowerShell/test/powershell/Host/ConsoleHost.Tests.ps1\r\n388:             $process.StandardOutput.ReadLine() | Should Be \"PS> 1+1\"\r\nDescription: ConsoleHost unit tests/Redirected standard input for 'interactive' use\r\nName:        Redirected input no prompting (-Command -)\r\nmessage:\r\nExpected string length 1 but was 0. Strings differ at index 0.\r\nExpected: {2}\r\nBut was:  {}\r\n-----------^\r\nstack-trace:\r\nat line: 399 in /Users/travis/build/PowerShell/PowerShell/test/powershell/Host/ConsoleHost.Tests.ps1\r\n399:             $process.StandardOutput.ReadLine() | Should Be \"2\"\r\nDescription: ConsoleHost unit tests/Redirected standard input for 'interactive' use\r\nName:        Redirected input w/ nested prompt\r\nmessage:\r\nExpected string length 29 but was 4. Strings differ at index 4.\r\nExpected: {PS> $host.EnterNestedPrompt()}\r\nBut was:  {PS> }\r\n---------------^\r\nstack-trace:\r\nat line: 432 in /Users/travis/build/PowerShell/PowerShell/test/powershell/Host/ConsoleHost.Tests.ps1\r\n```\r\n\r\nPR build failures: \r\n* https://travis-ci.org/PowerShell/PowerShell/jobs/331469515#L4276\r\n* https://travis-ci.org/PowerShell/PowerShell/jobs/331469516#L3427",
  "closed_at": "2018-01-23T00:09:35Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I don't see it as a problem. The idea of using `Feature` test is to make the build go fast.\r\nI would prefer our daily tests to have better coverage.",
      "created_at": "2018-01-21T17:35:34Z",
      "updated_at": "2018-01-21T17:35:34Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "You don't see it as a problem that so much time is wasted when a feature affecting change is merged without feature tests passing? \r\n\r\nIt is a tremendous waste of time. I don't want fast builds. I want things merged without other things breaking and the way we do that is with thorough testing.  We should absolutely switch around this project to do quick builds as the exception, not the rule. \r\n\r\nThe alternative is to have the maintainers be more diligent about this and triple check that a PR is feature affecting and has passed feature tests with the most recent commit. But that has proven a bad strategy as we continually have stuff merged that breaks feature tests (whether it's actually a regression or a test issue requires time an resources to figure out). \r\n\r\nIf our average turnaround for PRs was in the realm of hours, I might agree that fast tests make sense... but they aren't. Most PRs span days if not weeks. We introduced CI changes to stop existing tests when a new push is made (rolling builds) so multiple commits in a short period have no affect. \r\n\r\nI'm pretty annoyed that I get work delayed and pushed back because someone merged a test breaking change. It's not the odd occurrence.. it happens way too often. Most of my changes require feature tests so I'm stuck with PRs that can't merge due to failures that shouldn't be there in the first place. \r\n\r\nIf the maintainers can't stay on top of this, then we absolutely should switch to feature tests as the rule and bypass as an option.",
      "created_at": "2018-01-21T17:49:08Z",
      "updated_at": "2018-01-21T17:49:08Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I believe that the main problem is that MSFT allocates too little resources to this project. Therefore quality suffers, we're too slow.",
      "created_at": "2018-01-21T19:00:18Z",
      "updated_at": "2018-01-21T19:00:18Z"
    },
    {
      "author": "Jaykul",
      "author_association": "CONTRIBUTOR",
      "body": "This seems to fall into the old agile maxim: \"slow down to go fast\"\r\n\r\nIt doesn't matter how fast your CI build is, if it's not testing the right things.\r\n\r\nI mean, in this case, skipping tests in the non-feature build makes that slightly faster -- but dramatically slows down feature changes, because on the occasions where those builds fail due to unrelated changes, the authors have to struggle to track down the real source of the problem...",
      "created_at": "2018-01-21T23:41:59Z",
      "updated_at": "2018-01-21T23:41:59Z"
    }
  ],
  "created_at": "2018-01-21T16:04:47Z",
  "labels": [
    "Area-Maintainers-Build",
    "Resolution-Fixed"
  ],
  "number": 5973,
  "state": "closed",
  "title": "Nightly Builds failing after #5759",
  "updated_at": "2018-01-23T03:07:58Z"
}