{
  "_url": "https://github.com/PowerShell/PowerShell/issues/1877",
  "author": "DHowett",
  "body": "<!--\n\nIf it is a bug report:\n- make sure you are able to repro it on the latest released version. \nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\n- Search the existing issues.\n- Refer to the [FAQ](../docs/FAQ.md).\n- Refer to the [known issues](../docs/KNOWNISSUES.md).\n- Fill out the following repro template\n\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\n-->\n## Steps to reproduce\n\nLaunch powershell. Type a command.\nObserve that the cursor flickers left and right, back and forth, for every character you type.\nThis may require a terminal with slower refresh.\n## Expected behavior\n\nThe input is only redrawn when it becomes necessary.\n## Actual behavior\n\nThe input is redrawn for every input character.\n\nI profiled this, and found that for the input (and output):\n\n```\nPS > powershell redraws a lot\n```\n\n... which is a paltry few bytes, we emit 52,501 bytes of ANSI escape sequences repositioning the cursor, drawing colours, repositioning the cursor some more, etc.\n## Environment data\n\n<!-- provide the output of $PSVersionTable -->\n\n``` powershell\nroot@f49460ec9455:/# powershell -c '$PSVersionTable'\n\nName                           Value\n----                           -----\nPSVersion                      6.0.0-alpha\nPSEdition                      Core\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\nBuildVersion                   3.0.0.0\nGitCommitId                    v6.0.0-alpha.9\nCLRVersion\nWSManStackVersion              3.0\nPSRemotingProtocolVersion      2.3\nSerializationVersion           1.1.0.1\n```\n",
  "closed_at": "2016-11-09T20:44:02Z",
  "comments": [
    {
      "author": "DHowett",
      "author_association": "NONE",
      "body": "Thought: perhaps this is to mimic the Windows console's support for drawing characters at any coordinates (_without cursor moves_)? It looks like we could be trying to do the same thing, but because it's being used to such a high degree we're emitting a veritable boatload of CSIs.\n\nIt's especially noticeable over remote links with nonzero latency.\n",
      "created_at": "2016-08-18T16:36:17Z",
      "updated_at": "2016-08-18T16:36:17Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "The current design exists to keep things simple - e.g. the color of text previously entered _might_ change after typing a character.  The current design also performs much better on Windows than the simple alternatives.\n\nAt any rate, thanks for the report, this is a known issue that we definitely plan on addressing.\n",
      "created_at": "2016-08-18T17:29:54Z",
      "updated_at": "2016-08-18T17:29:54Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "This issue was moved to lzybkr/PSReadLine#469\n",
      "created_at": "2016-11-09T20:44:02Z",
      "updated_at": "2016-11-09T20:44:02Z"
    },
    {
      "author": "masaeedu",
      "author_association": "NONE",
      "body": "@lzybkr Is there a workaround for this? Still seeing this in the latest container published on docker. I don't know if it's extra noticeable for me because my machine sucks, but it makes it very difficult to do any useful work.",
      "created_at": "2017-04-12T22:01:55Z",
      "updated_at": "2017-04-12T22:01:55Z"
    },
    {
      "author": "masaeedu",
      "author_association": "NONE",
      "body": "Nvm, just found it. For posterity:\r\n\r\n```powershell\r\nRemove-Module -Name PSReadline\r\n```\r\n\r\nEDIT: While this works, make sure you don't use the up or down keys after removing the module or the session will crash.",
      "created_at": "2017-04-12T22:03:39Z",
      "updated_at": "2017-04-12T22:16:38Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@masaeedu Thanks for your report! Please open Issue about the session crash.",
      "created_at": "2017-04-13T03:07:19Z",
      "updated_at": "2017-04-13T03:07:19Z"
    },
    {
      "author": "masaeedu",
      "author_association": "NONE",
      "body": "@iSazonov Is this another PSReadline bug or should I open it for this repo?",
      "created_at": "2017-04-13T03:12:15Z",
      "updated_at": "2017-04-13T03:12:15Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@masaeedu If the crash happens without PSReadline the Issue is for this repo.",
      "created_at": "2017-04-13T03:57:37Z",
      "updated_at": "2017-04-13T03:57:37Z"
    },
    {
      "author": "masaeedu",
      "author_association": "NONE",
      "body": "@iSazonov The crash happens specifically when you *remove* PSReadLine from a running session, and I suspect the issue is that PSReadLine takes over some hooks for navigating history that don't get reset to their original state when you unload the module. In other words PSReadLine probably isn't designed to be `Remove-Module`d, which is fine because removing it isn't a common use case.\r\n\r\nYou'd have to start up powershell without PSReadLine loaded at all to determine whether the problem is independent of PSReadLine, and I don't know how to do that.",
      "created_at": "2017-04-13T04:03:59Z",
      "updated_at": "2017-04-13T04:03:59Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@masaeedu I cannot repo this. So you can open Issue in this repo. Later we can move it in PSReadLine repo.",
      "created_at": "2017-04-13T04:58:22Z",
      "updated_at": "2017-04-13T04:58:22Z"
    }
  ],
  "created_at": "2016-08-18T16:23:40Z",
  "number": 1877,
  "state": "closed",
  "title": "Console Host redraws the current line after every character",
  "updated_at": "2017-04-13T04:58:23Z"
}