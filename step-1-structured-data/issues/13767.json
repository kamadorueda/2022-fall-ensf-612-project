{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13767",
  "author": "jaslawinMs",
  "body": "ConsoleHost_history.txt collects commands issued in the console. However, Powershell core truncates commands to 215 characters. \r\n\r\nThe classic power shell (not core) saves full command line, so it is a regression. \r\nI think that the previous version of PS core also saved more (but not sure about that and do not want to downgrade to verify).\r\n\r\n```\r\n$PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.3\r\nPSEdition                      Core\r\nGitCommitId                    7.0.3\r\nOS                             Microsoft Windows 10.0.19042\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0 ```",
  "closed_at": "2021-02-17T01:45:08Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "/cc @daxian-dbw Is it PSReadline related?",
      "created_at": "2020-10-10T16:57:44Z",
      "updated_at": "2020-10-10T16:57:44Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "I don't see the symptom. Can you provide a reproducible example?\r\n\r\nHere's an example of a command that works fine across sessions in 7.0.3 with PSReadLine 2.0.2; it outputs a 501-character string literal and reports its length:\r\n\r\n```powershell\r\n(write-output 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxy').length\r\n```\r\n\r\n",
      "created_at": "2020-10-11T21:50:22Z",
      "updated_at": "2020-10-11T21:51:25Z"
    },
    {
      "author": "jaslawinMs",
      "author_association": "NONE",
      "body": "I cannot confirm directly this 215 characters truncation now; I just see it is truncated in the history file.\r\nHowever I could provide this issue that is similar:\r\n\r\n```\r\n.\\product\\src\\Run-Test2.ps1 -TargetHost api.redacted.net -TestName ScaleGoals.jmx -DurationInSeconds $(3600*27) -WorkerCount 25 -JMeterProperties \"-GOveralGoalPercentage=100 -GSETUP_FILE=100-1k.json\" -pfxCertificatePath D:\\frome2e_smartspacese2ekeyvault-redacted-20200430.pfx -generateReportJMeterReport $false -collectLog $false\r\n```\r\n\r\nThis does not show up in the history file at all, however this\r\n```\r\n.\\product\\src\\Run-Test2.ps1 -TargetHost api.redacted.net -TestName ScaleGoals.jmx -DurationInSeconds $(3600*27) -WorkerCount 25 -JMeterProperties \"-GOveralGoalPercentage=100 -GSETUP_FILE=100-1k.json\" -pfxCertificatePath D:\\from.pfx -generateReportJMeterReport $false -collectLog $false\r\n```\r\nis saved in the history file. The only difference is how long is the path to pfx file.\r\n\r\nI did a few retries and only this change affects the the history update.\r\n\r\nIf I have repros of the truncation I will update the thread.\r\n",
      "created_at": "2020-10-14T16:59:55Z",
      "updated_at": "2020-10-14T16:59:55Z"
    },
    {
      "author": "jaslawinMs",
      "author_association": "NONE",
      "body": "I do not observe the issue anymore after new updates",
      "created_at": "2021-02-17T01:45:08Z",
      "updated_at": "2021-02-17T01:45:08Z"
    }
  ],
  "created_at": "2020-10-10T06:24:26Z",
  "number": 13767,
  "state": "closed",
  "title": "Truncated commands in ConsoleHost_history.txt",
  "updated_at": "2021-02-17T01:45:09Z"
}