{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6928",
  "author": "strawgate",
  "body": "Steps to reproduce\r\n------------------\r\n\r\n```powershell\r\n@{\"test\"=1}.containsKey(\"Test\")\r\nTrue\r\n\r\n(\"{\"\"test\"\":1}\" | convertfrom-json -AsHashtable).containsKey(\"Test\")\r\nFalse\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```none\r\nboth should return true and keys should not be case sensitive\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n```none\r\nkeys from convertfrom-json -ashashtable are case sensitive\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\nPSVersion                      6.1.0-preview.1\r\nPSEdition                      Core\r\nGitCommitId                    v6.1.0-preview.1\r\nOS                             Microsoft Windows 10.0.17666\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2018-05-24T09:09:30Z",
  "comments": [
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@strawgate Case sensitivity is `by design` to accommodate case sensitive key names:\r\n\r\n```json\r\n{\r\n  \"key1\": \"value1\",\r\n  \"KEY1\": \"value2\"\r\n}\r\n```\r\n\r\nThis is documented in `-AsHashtable` fdocumentation:\r\n\r\nhttps://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/convertfrom-json?view=powershell-6#optional-parameters\r\n\r\n> If the JSON contains a list with keys that only differ in casing. Without the switch, those keys would be seen as identical keys and therefore only the last one would get used.",
      "created_at": "2018-05-24T09:09:30Z",
      "updated_at": "2018-05-24T09:09:30Z"
    },
    {
      "author": "strawgate",
      "author_association": "CONTRIBUTOR",
      "body": "Case sensitive hashtables are not the norm elsewhere --\r\n\r\n`group-object -AsHashTable` does not produce case sensitive hashtables and neither does `@{}` with group-object being the reference for justifying the behavior and flag that was used.\r\n\r\nI guess i'll leave this as a fun warning to anyone else using this cmdlet\r\n\r\n```\r\n$test1 = @{\"Test\"=1} | convertto-json | convertfrom-json -ashashtable\r\n$test1.containsKey(\"test\") # False\r\n```\r\n\r\n```\r\n$test2 = @{\"Test\"=1}\r\n$test2.containskey(\"test\") # True\r\n```\r\n",
      "created_at": "2018-05-24T13:40:07Z",
      "updated_at": "2018-05-24T13:40:07Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "> Case sensitive hashtables are not the norm elsewhere\r\n\r\nYes, but `-AsHashTable`  on `convertfrom-json` was implemented specifically to address the issue of case sensitive key names among other issues. It's by design and documented as such.\r\n\r\nIt probably should have been implemented as case insensitive by default with an option for case sensitive.",
      "created_at": "2018-05-24T13:50:29Z",
      "updated_at": "2018-05-24T13:50:29Z"
    },
    {
      "author": "strawgate",
      "author_association": "CONTRIBUTOR",
      "body": "Referencing the original PR: https://github.com/PowerShell/PowerShell/pull/5043",
      "created_at": "2018-05-25T05:14:14Z",
      "updated_at": "2018-05-25T05:14:14Z"
    }
  ],
  "created_at": "2018-05-24T02:15:49Z",
  "number": 6928,
  "state": "closed",
  "title": "Hashtables resulting from ConvertFrom-JSON -AsHashtable have case sensitive keys",
  "updated_at": "2018-05-25T05:14:14Z"
}