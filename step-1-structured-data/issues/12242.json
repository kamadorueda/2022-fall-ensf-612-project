{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12242",
  "author": "iSazonov",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nBring back Microsoft.PowerShell.LocalAccounts module.\r\nReplace internal API with System.DirectoryServices.AccountManagement\r\nFix #2996\r\n\r\n## PR Context\r\n\r\n#4302\r\n\r\n## PR Checklist\r\n\r\n- [ ] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [ ] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [ ] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [ ] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [ ] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [ ] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2020-06-02T05:19:25Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "~~@SteveL-MSFT @daxian-dbw @TravisEz13  Could you help me? Currently I port to AccountManagement API most of the code and fix tests but FindByIdentity() method works extremely slow (up to _100x_(!)  slower than PrincipalSearcher). I replace the method with PrincipalSearcher to search by name but I have to use the method to search by SID. Could you please point me better way? (I guess original code can resolve domain and Azure SIDs ...)~~",
      "created_at": "2020-04-03T18:53:29Z",
      "updated_at": "2020-04-04T19:31:52Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "I don't think this work should be part of PowerShell itself.  The inbox module loads for me without issue.",
      "created_at": "2020-05-21T21:34:35Z",
      "updated_at": "2020-05-21T21:34:35Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Expectations are to get the module working on Unix.\r\nThe used API is potentially portable and provider based. A request to add PAM support is in .Net Runtime repository.",
      "created_at": "2020-05-22T04:45:45Z",
      "updated_at": "2020-05-22T04:45:45Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMainainer, Please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2020-05-29T14:00:16Z",
      "updated_at": "2020-05-29T14:00:16Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Request to port AccountManagement API to Linux https://github.com/dotnet/runtime/issues/37100",
      "created_at": "2020-05-29T17:30:52Z",
      "updated_at": "2020-05-29T17:30:52Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "Why should this not be introduced as a module outside PowerShell first, then when it's working, brought into PowerShell?",
      "created_at": "2020-05-29T18:03:09Z",
      "updated_at": "2020-05-29T18:03:09Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@TravisEz13 It is minor details. Main question is how MSFT team sees a future of the module. If as open source and ported today is best time to do this - while .Net 5.0 is under development we could move to the public API for PowerShell 7.1. Then in .Net 6.0 timeline we could get portable API for next PowerShell 7.2 LTS.\r\nIf MSFT team want to keep the module as Windows-only and deprecated I could work on new AcoountManagement module (I already pulled  example PR) with more modern design and features.",
      "created_at": "2020-05-31T06:23:40Z",
      "updated_at": "2020-05-31T06:23:40Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "The question was already answered, by the committee in a previous PR, that this should be a new module, published separately.  Then we can answer the question about bringing back into PowerShell.  That answer implies that the namespace should be separate.",
      "created_at": "2020-06-01T20:02:02Z",
      "updated_at": "2020-06-01T20:02:02Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "If MSFT team has clear understanding about future of LocalAccounts module I'd expect that MSFT team share this in new issue like:\r\n- LocalAccounts module is deprecated\r\n- new module should be designed\r\n- no concerns about backward compatibility\r\n- the new module should be community/personal, not Microsoft module\r\n- the new module should be published on PowerShellGet site, not in PowerShell/Module repository\r\n\r\nSince my intention was to increase backward compatibility and to simplify migration to PowerShell Core I close the PR because I have no plans to develop a personal module.",
      "created_at": "2020-06-02T05:14:53Z",
      "updated_at": "2020-06-02T05:14:53Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "The localaccounts module in windows continues to be supported, but otherwise, I think this is accurate.  Basically, I think this falls under point 2 of Joey's slide here:\r\n\r\n![image](https://user-images.githubusercontent.com/10873629/83555080-98a85200-a4c2-11ea-921f-18f324cfbc6d.png)\r\n",
      "created_at": "2020-06-02T18:18:01Z",
      "updated_at": "2020-06-02T18:18:01Z"
    }
  ],
  "created_at": "2020-04-01T20:33:14Z",
  "number": 12242,
  "state": "closed",
  "title": "Bring back Microsoft.PowerShell.LocalAccounts module",
  "updated_at": "2020-06-02T18:18:01Z"
}