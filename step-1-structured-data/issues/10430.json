{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10430",
  "author": "KirkMunro",
  "body": "# PR Summary\r\n\r\nThe intent of this PR is to allow objects that have a custom default `outOfBand` format to be displayed in other formats without requiring users to use `-Force`.\r\n\r\nThe `outOfBand` format flag is used to identify formatting that should be used when rendering objects in PowerShell, even if other objects are being rendered in a completely different format. For example, if you invoke a command that is returning objects that are rendered by default in a table format, and within that command you have data sent on non-standard output streams (verbose, warning, debug, or information messages, or errors), those objects are considered out of band, but their default format is used regardless.\r\n\r\nTo solve this problem and allow objects with default, explicit, `outOfBand` custom formats to be formatted in other ways when piping those objects to `Format-List`, `Format-Table`, etc. cmdlets without using the `-Force` parameter, PowerShell needs to have an extra conditional check: if the objects use an explicit `outOfBand` format, _and_ if those objects are being written in standard output (i.e. not in the verbose, debug, warning, error, information, or progress streams), then treat those objects as if they are not out of band.\r\n\r\n## PR Context\r\n\r\nFixes #10408.\r\n\r\n## PR Checklist\r\n\r\n- [X] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [X] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [X] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [X] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [X] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [X] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2020-05-03T18:00:09Z",
  "comments": [
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "This PR is ready for review. The Codacy errors will not be addressed in this PR because they are part of the Pester tests in which they are contained.",
      "created_at": "2019-09-10T17:21:17Z",
      "updated_at": "2019-09-10T17:21:41Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT This is another potential PR for preview 5. The changes are trivial, and the user experience improves significantly as a result.",
      "created_at": "2019-09-25T13:36:14Z",
      "updated_at": "2019-09-25T13:36:14Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT Since preview 5 is out the door, this is a potential PR for preview 6. The changes are trivial, and the user experience improves significantly as a result. All it needs is some review time.",
      "created_at": "2019-10-23T19:57:40Z",
      "updated_at": "2019-10-23T19:57:40Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov: When you mark some PRs as candidates for one of the previews, and not others, how do you make that call? For example, this PR. It removes one of the annoyances in PowerShell (users being forced to use `-Force` to get a certain format from `ErrorRecord`, `Exception`, and `ScriptBlock` instances), the changes are small/localized, and it includes automated tests, yet it seems to just sit idle, making me feel I need to campaign for it to be looked at. Why? What's the minimum bar for that tag?\r\n\r\n@SteveL-MSFT Time on preview 6 is running out, and PR reviews seem to have slowed down to being almost unnoticeable (72 open PRs). I understand prioritization challenges, but in some cases community members [can't even get an answer to a question](https://github.com/PowerShell/PowerShell/pull/10238#issuecomment-541165711) to move [something that you indicated would be a welcome PR from the community](https://github.com/PowerShell/PowerShell/issues/6702#issuecomment-515147136) forward. Do you have plans to put some resources on PR reviews for preview 6 to try and get some of that work included in PS 7?",
      "created_at": "2019-11-11T21:49:07Z",
      "updated_at": "2019-11-11T21:49:07Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@KirkMunro I am very sorry that this is happening. I really like this project, but I am limited in my capabilities (time and understanding). Huge backlog (over 70 PRs) says that MSFT team too. \r\nCurrent priority order is security, bugs, compatibility fixes, new kill features (like we get &&, ||), only then rest. So that many community PRs are in line for a long time. On the other hand, looking at the GitHub statistics, I wonder how much PRs we merge every month.\r\nI think 70 PRs are in backlog too many for the project and the red line is at ~30 PRs. I hope we can achieve this.\r\n\r\n\r\n",
      "created_at": "2019-11-12T05:10:21Z",
      "updated_at": "2019-11-12T05:10:21Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@JamesWTruher can you please review this?",
      "created_at": "2019-12-02T18:47:28Z",
      "updated_at": "2019-12-02T18:47:28Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@JamesWTruher can you elaborate? This would be the first time anything pursuant to formatting has ever demanded an experimental feature, and it would not break any existing use cases that I can see.",
      "created_at": "2020-03-23T23:01:14Z",
      "updated_at": "2020-03-23T23:01:14Z"
    },
    {
      "author": "JamesWTruher",
      "author_association": "MEMBER",
      "body": "i think this is pretty self-evident. For 15 years, folks have used `-force` to view these objects. This is a change to that behavior, and there may be issues not considered here. I want to protect our users from surprises like that.",
      "created_at": "2020-03-23T23:17:45Z",
      "updated_at": "2020-03-23T23:17:45Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "I don't follow. Where's the surprise? Does this _break_ `-Force`?",
      "created_at": "2020-03-23T23:32:20Z",
      "updated_at": "2020-03-23T23:32:20Z"
    },
    {
      "author": "JamesWTruher",
      "author_association": "MEMBER",
      "body": "yes, in a way it does break force. It is as if `-force` was used when it was not. Now there will be no difference between `-force` and it's absence",
      "created_at": "2020-03-24T01:09:09Z",
      "updated_at": "2020-03-24T01:09:09Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Sure. But, again, this is a formatting difference, and simply makes things like `$error | Format-List` to function without `-Force` where before the operation appeared to do nothing.\r\n\r\nI find it hard to believe anyone would depend on that behaviour... but I'm happy to be shown otherwise. \ud83d\ude42 \r\n\r\nAnd, to be clear... this doesn't _break_ `-Force` for those cmdlets. It just calls into question why it was ever needed in the first place. ^^",
      "created_at": "2020-03-24T01:45:53Z",
      "updated_at": "2020-03-24T01:46:52Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "It would be nice to see samples/screenshots of popular scenarios with output before and after the change.",
      "created_at": "2020-03-24T04:27:03Z",
      "updated_at": "2020-03-24T04:27:03Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as stale because it has been marked as requiring author feedback but has not had any activity for **30 days**. It will be closed if no further activity occurs **within 10 days of this comment**.",
      "created_at": "2020-04-23T13:00:12Z",
      "updated_at": "2020-04-23T13:00:12Z"
    }
  ],
  "created_at": "2019-08-23T01:44:06Z",
  "number": 10430,
  "state": "closed",
  "title": "Allow types that have a default `outOfBand` custom format to be displayed in other formats without `-Force`",
  "updated_at": "2020-05-03T18:00:09Z"
}