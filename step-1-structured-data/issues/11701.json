{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11701",
  "author": "iSazonov",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nNow OutFile parameter in Invoke-WebRequest and Invoke-RestMethod works like LiteralPath and does not process wildcards.\r\n\r\n\r\n## PR Context\r\n\r\nFix #3174 - approved by PowerShell Committee.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [ ] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [x] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [x] Issue filed: https://github.com/MicrosoftDocs/PowerShell-Docs/issues/5653\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [ ] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2020-05-20T22:17:03Z",
  "comments": [
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "I don't particularly like that the parameter name doesn't indicate the direction - `out`.  What if in the future, we want to implement file uploading (like curl's -F).  Then you are kind of boxed into a corner here because you've already used the parameters you typically would use for source paths (Path and LiteralPath).  ",
      "created_at": "2020-01-28T17:27:01Z",
      "updated_at": "2020-01-28T17:27:01Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> I don't particularly like that the parameter name doesn't indicate the direction - out. What if in the future, we want to implement file uploading (like curl's -F)\r\n\r\nThe change was approved as a compromise because we have RFC for web file operations cmdlet.\r\n\r\n/cc @mklement0 ",
      "created_at": "2020-01-29T03:41:41Z",
      "updated_at": "2020-01-29T03:41:41Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "Irrespective of the parameter \"future-proofing\" argument, if I'm looking at code and I see `Invoke-WebRequest -Path C:\\foo.txt -Uri http://foo.com/foo.txt`, it isn't clear that this is a download versus an upload. ",
      "created_at": "2020-01-29T05:37:01Z",
      "updated_at": "2020-01-29T05:37:01Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "I agree that retaining the `Out` prefix is desirable for conceptual clarity (even if `Invoke-WebRequest` / `Invoke-RestMethod` themselves will likely never see _upload_ parameters, due to the plan to cover upload/download functionality in separate  cmdlets, as proposed in https://github.com/PowerShell/PowerShell-RFC/pull/124 for downloading, for instance).\r\n\r\nTaking a step back:\r\n\r\n`-OutFile` should _never_ have accepted wildcard patterns (just as it wasn't appropriate in various other contexts: #4726, #9225, #4726).\r\n\r\nThe reason for the decision in #3174  was a backward-compatibility concern: conceivably, someone could have used `iwr .. -outfile hello*` an,  if there _happened to be_ exactly _one_ existing file that matches this pattern, `iwr` would have saved to it.\r\n\r\nIs this a real-world concern? It strikes me as a clear-cut [bucket 3](https://github.com/PowerShell/PowerShell/blob/master/docs/dev-process/breaking-change-contract.md#bucket-3-unlikely-grey-area) case.\r\n\r\nThumbing through GitHub code, I don't see instances of wildcard use, at least at first glance:\r\n\r\n* https://github.com/search?utf8=%E2%9C%93&q=invoke-webrequest+outfile+language%3APowerShell&type=Code&ref=advsearch&l=PowerShell&l=\r\n* https://github.com/search?utf8=%E2%9C%93&q=iwr+outfile+language%3APowerShell&type=Code&ref=advsearch&l=PowerShell&l=\r\n* https://github.com/search?utf8=%E2%9C%93&q=invoke-restmethod+outfile+language%3APowerShell&type=Code&ref=advsearch&l=PowerShell&l=\r\n* https://github.com/search?utf8=%E2%9C%93&q=irm+outfile+language%3APowerShell&type=Code&ref=advsearch&l=PowerShell&l=\r\n\r\nGiven that the workaround for the inability to use `[` and `]` as-is in the file name with `` `[ `` and `` `] `` [didn't work either](https://github.com/PowerShell/PowerShell/issues/3174#issuecomment-487155791), we probably don't need to worry about breaking workarounds either.\r\n\r\n---\r\n\r\nTherefore, we could:\r\n\r\n* simply change `-OutFile` to accept only literal paths going forward.\r\n\r\n* give it an alias of `-OutPath` in the context of the [green-lighted experimental feature](https://github.com/PowerShell/PowerShell/issues/11671#issuecomment-578904101) to allow specifying a _directory_ path only and have the output file placed there with the server-specified file name.\r\n\r\n",
      "created_at": "2020-01-29T13:34:13Z",
      "updated_at": "2020-01-29T13:35:01Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "/cc @SteveL-MSFT For PowerShell Committee - in #3174 a conclusion was https://github.com/PowerShell/PowerShell/issues/3174#issuecomment-348037706 rename OutFile to Path and add LiteralPath. Current @mklement0's request is review this again to leave OutFile parameter.",
      "created_at": "2020-01-29T14:09:14Z",
      "updated_at": "2020-01-29T14:09:14Z"
    },
    {
      "author": "JamesWTruher",
      "author_association": "MEMBER",
      "body": "@iSazonov is this still WIP? if not, please change the title.",
      "created_at": "2020-02-26T19:43:34Z",
      "updated_at": "2020-02-26T19:43:34Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee reviewed this again.  @iSazonov apologies on changing our decision on you, but we agree with the current proposal to have `-OutFile` simply act as though it was `-LiteralPath`.  We believe this does fit as a bucket 3 item as it's unlikely a user would use a wildcard with this cmdlet to overwrite an existing file where they would use tab completion to get the exact file name.",
      "created_at": "2020-02-26T23:21:31Z",
      "updated_at": "2020-02-26T23:21:31Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT @TravisEz13 The PR is ready to review. \r\nCI MacOs is temporary failed. ",
      "created_at": "2020-03-13T15:15:02Z",
      "updated_at": "2020-03-13T15:15:02Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@TravisEz13 @SteveL-MSFT Please review the PR.",
      "created_at": "2020-03-29T05:51:38Z",
      "updated_at": "2020-03-29T05:51:38Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.1.0-preview.4` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.1.0-preview.4)\n",
      "created_at": "2020-06-25T19:07:59Z",
      "updated_at": "2020-06-25T19:07:59Z"
    }
  ],
  "created_at": "2020-01-28T12:02:48Z",
  "number": 11701,
  "state": "closed",
  "title": "Make `-OutFile` param in web cmdlets to work like -LiteralPath",
  "updated_at": "2020-06-25T19:07:59Z"
}