{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11145",
  "author": "bagajjal",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n\r\n-->\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\ncd c:\\windows\\system32\\opensh\r\ncd c:\\windows\\\r\ncd - (First time it does right. It switches directory to c:\\windows\\system32\\openssh)\r\ncd - (From now on.. it's broken. It switches to c:\\)\r\n```\r\n\r\n# Expected behavior\r\nJust like Unix, cd - should only switch between last 2 directories.\r\nIn this case, second command \"cd -\" should switch back to  c:\\windows\r\n\r\n# Actual behavior\r\nSecond command \"cd -\" switch back to \"c:\\\".\r\nSubsequent \"cd -\" commands gives error message.\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\n\r\nPS C:\\> $psversiontable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.2.3\r\nPSEdition                      Core\r\nGitCommitId                    6.2.3\r\nOS                             Microsoft Windows 10.0.19013\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\nPS C:\\>\r\n```\r\n**Windows**\r\n![image](https://user-images.githubusercontent.com/23668037/69372303-4b674000-0c56-11ea-8fab-3f59778a0141.png)\r\n\r\n**Unix**\r\n![image](https://user-images.githubusercontent.com/23668037/69372320-58842f00-0c56-11ea-96f8-7fd8d03c7002.png)\r\n",
  "closed_at": "2019-11-26T09:52:46Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "I could be misremembering, but I think the documented behaviour for `cd -` in PowerShell is to go back to the previous directory... and further usages will actually go back through the history even further. I think you need to do `cd +` to step forward through the location stack. \r\n\r\nI think @rkeithhill was one of the folx that helped implement this feature, if I'm not totally out of it today; perhaps he can explain a little more clearly. \ud83d\ude0a ",
      "created_at": "2019-11-21T20:03:53Z",
      "updated_at": "2019-11-21T20:03:53Z"
    },
    {
      "author": "bagajjal",
      "author_association": "NONE",
      "body": "Why do we want to deviate from the UNIX behavior?\r\nIt helps UNIX users to easily adapt to Powershell if we maintain consistency with UNIX.\r\nWe can always add new features but we shouldn't deviate implementation between Windows and UNIX.\r\n",
      "created_at": "2019-11-21T20:07:50Z",
      "updated_at": "2019-11-21T20:07:50Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "I didn't implement this for PowerShell Core (but I did for the PSCX module).  But @vexx32 is correct that the PS impl of CD maintains a stack that you navigate backward and forward using `-` and `+`.",
      "created_at": "2019-11-21T21:01:53Z",
      "updated_at": "2019-11-21T21:01:53Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Ah, sorry, @rkeithhill. \ud83d\ude01 \r\n\r\nI couldn't recall who it was. Looks like it was https://github.com/PowerShell/PowerShell/pull/7206 by @bergmeister \ud83d\ude42 ",
      "created_at": "2019-11-21T21:05:58Z",
      "updated_at": "2019-11-21T21:05:58Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "Yes, I did the feature of cd - and cd + as there was nothing before.\r\nThe standard behaviour of bash is too simplistic as it was from the 80s when there was not much memory available and just works by storing the previous location in an environment variable.\r\nWhen I proposed the first draft of the implementation, I actually implemented exactly this and the PS team did not like it and the community encouraged me to implement a history stack similar to how the fish shell (a Unix shell) does cd + and cd -, hence why the current implementation can go back up to 25 location (I had to negotiate hard on getting that number high). Although it was more work, I love being able to back and forth in history more than just once, especially when I switch between different git repos.\r\nYou can follow the history and PR discussion in the 2 PRs #5051 and #7206 and related issue #2188\r\nThe best you could maybe do is to propose a setting but the PowerShell team generally does not like this idea very much due to the test coverage becoming complicated. I want to stress this a shell feature and nothing baked into Unix, so we make it only hard for Unix people using shells from the 80s and not modern shells. I know bash is still ubiquitous so take that statement with a pinch of salt \ud83d\ude0b\r\n\r\nOtherwise this is by design \ud83d\ude0e",
      "created_at": "2019-11-21T21:57:05Z",
      "updated_at": "2019-11-21T22:04:05Z"
    },
    {
      "author": "bagajjal",
      "author_association": "NONE",
      "body": "As a UNIX user, I didn't like the implementation. I would like to be inline with UNIX implementation.\r\nI am sure UNIX users (who are new to powershell) simply try \"cd -\" assuming it's supported and they don't know \"cd +\".. Even if you tell them, they don't like it.\r\n\r\nI would suggest to change this implementation.. You can still achieve the same feature of maintaining the history by adding something like \"cd - < number >\" (example, cd - 2) which will look at the stack and goes back to the desired directory.",
      "created_at": "2019-11-21T22:02:07Z",
      "updated_at": "2019-11-21T22:10:15Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "I've said it before, there is no such thing as an UNIX implementation. It is a shell implementation. Common Unix shells like `fish` have the exact same behaviour as PowerShell where `cd -` has a location history of the last 25 locations:\r\nhttps://fishshell.com/docs/2.4/commands.html\r\nOld shells like `bash` cannot improve their behaviour for legacy reasons. Therefore this is purely about educating users and the onus will always be on user's side to stay up to date, which is the nature of the IT industry (which is good as it as a way of moving forward)\n\n<blockquote><div><strong><a href=\"https://fishshell.com/docs/2.4/commands.html\">fish: Commands</a></strong></div></blockquote>",
      "created_at": "2019-11-27T11:59:26Z",
      "updated_at": "2019-11-27T11:59:29Z"
    }
  ],
  "created_at": "2019-11-21T19:59:31Z",
  "labels": [
    "Issue-Question",
    "Resolution-By Design"
  ],
  "number": 11145,
  "state": "closed",
  "title": "cd - (switch directories) doesn't work as expected.",
  "updated_at": "2019-11-27T11:59:29Z"
}