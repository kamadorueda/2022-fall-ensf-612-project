{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3590",
  "author": "pcgeek86",
  "body": "Steps to reproduce\r\n------------------\r\n\r\n```powershell\r\nSet-Content -Path mytestfile.txt -Value testing\r\nCompress-Archive -Path mytestfile.txt -Destination mytestzip.zip\r\nzipinfo mytestzip.zip\r\n```\r\n\r\n<details>\r\n <summary>Result of zipinfo command</summary>\r\n\r\n```\r\nArchive:  mytestzip.zip\r\nZip file size: 136 bytes, number of entries: 1\r\n?---------  2.0 unx        8 b- defN 17-Apr-18 12:23 mytestfile.txt\r\n1 file, 8 bytes uncompressed, 10 bytes compressed:  -25.0%\r\n```\r\n</details>\r\n\r\nExpected behavior\r\n-----------------\r\n\r\nPermissions of files are retained upon compression into ZIP format.\r\n\r\nActual behavior\r\n---------------\r\n\r\nPermissions are not preserved when files are compressed.\r\n\r\nEnvironment data\r\n----------------\r\n\r\n```powershell\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.0-alpha\r\nPSEdition                      Core\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nBuildVersion                   3.0.0.0\r\nGitCommitId                    v6.0.0-alpha.18\r\nCLRVersion\r\nWSManStackVersion              3.0\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\n```\r\n\r\n```\r\nPS /> uname -a\r\nDarwin 16.5.0 Darwin Kernel Version 16.5.0: Fri Mar  3 16:52:33 PST 2017; root:xnu-3789.51.2~3/RELEASE_X86_64 x86_64\r\n```\r\n\r\nCheers,\r\nTrevor Sullivan",
  "closed_at": "2017-04-18T21:16:19Z",
  "comments": [
    {
      "author": "pcgeek86",
      "author_association": "NONE",
      "body": "@SteveL-MSFT Please prioritize this appropriately. This is requiring me to resort to calling the native `zip` command, which is less preferable to using `Compress-Archive`. I'm not sure if this is an issue with .NET Core or PowerShell Core, but it's manifesting itself in PowerShell Core, so this is the logical place to start. \r\n\r\n@BrucePay @daviwil ",
      "created_at": "2017-04-18T19:30:24Z",
      "updated_at": "2017-04-18T19:30:24Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "Hum! What about when moving the compress file cross-platform? Or, when been attached to an email?\r\nIs it going to keep permission from a Linux to a Windows filesystem, or the way around?\r\n\r\nWhat's the catch? \r\n:)\r\n",
      "created_at": "2017-04-18T20:09:06Z",
      "updated_at": "2017-04-18T20:09:06Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@pcgeek86 please open this issue in the [Archive Module repo](https://github.com/PowerShell/Microsoft.PowerShell.Archive).  If the native zip cmd retains the permissions (presumably if uncompressed on Windows it throws it away?), then we can do something as long as the underlying .Net api we're using supports it",
      "created_at": "2017-04-18T21:16:19Z",
      "updated_at": "2017-04-18T21:16:19Z"
    },
    {
      "author": "pcgeek86",
      "author_association": "NONE",
      "body": "@SteveL-MSFT Yep, took care of it. See new ticket.",
      "created_at": "2017-04-19T15:32:56Z",
      "updated_at": "2017-04-19T15:32:56Z"
    }
  ],
  "created_at": "2017-04-18T19:25:53Z",
  "labels": [
    "Resolution-External"
  ],
  "number": 3590,
  "state": "closed",
  "title": "Compress-Archive is stripping UNIX file permissions",
  "updated_at": "2017-04-19T15:32:57Z"
}