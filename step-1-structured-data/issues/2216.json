{
  "_url": "https://github.com/PowerShell/PowerShell/issues/2216",
  "author": "jozefizso",
  "body": "Cmdlet `Test-ModuleManifest` does not reload the module information when I modify a manifest file and call the `Test-ModuleManifest` again on the same manifest file. Calling `Test-ModuleManifest` again returns cached `PSModuleInfo` instance.\n\nFirst reported by Dardenne Laurent at 7/13/2015 10:27:31 AM on MS Connect https://connect.microsoft.com/PowerShell/feedback/details/1541659/test-modulemanifest-the-psmoduleinfo-is-not-updated\n## Steps to reproduce\n\nCreate module manifest `module.psd1` with GUID **9dd7e9a4-8525-4fd1-aa13-3a063df4b264** and run `Test-ModuleManifest`.\n\n``` powershell\n> $Manifest = Test-ModuleManifest .\\module.psd1\n> $Manifest.Guid\n9dd7e9a4-8525-4fd1-aa13-3a063df4b264\n```\n\nChange the GUID in `module.psd1` manifest to new value (eg. **4714e36a-6e90-47e6-87a7-4637c60e9021**) and run `Test-ModuleManifest` again.\n\n``` powershell\n> $Manifest2 = Test-ModuleManifest .\\module.psd1\n> $Manifest2.Guid\n9dd7e9a4-8525-4fd1-aa13-3a063df4b264\n```\n## Expected behavior\n\n`Test-ModuleManifest` should reload module information and return actual changed module data.\n\n``` powershell\n> $Manifest2 = Test-ModuleManifest .\\module.psd1\n> $Manifest2.Guid\n4714e36a-6e90-47e6-87a7-4637c60e9021\n```\n## Actual behavior\n\n`Test-ModuleManifest` returns cached module information. This will not change for the active PS session.\n## Environment data\n\n<!-- provide the output of $PSVersionTable -->\n\n``` powershell\n> $PSVersionTable\n\nName                           Value\n----                           -----\nPSVersion                      5.1.14393.103\nPSEdition                      Desktop\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\nBuildVersion                   10.0.14393.103\nCLRVersion                     4.0.30319.42000\nWSManStackVersion              3.0\nPSRemotingProtocolVersion      2.3\nSerializationVersion           1.1.0.1\n```\n",
  "closed_at": "2017-05-25T18:07:59Z",
  "comments": [
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@jozefizso I couldn't reproduce this issue. Here is what I did:\n1 - create `module.psd1` using `New-ModuleManifest`\n\n```\nNew-ModuleManifest -Path module.psd1\n```\n\n2 - update the `GUID` property in module.psd1 to be **9dd7e9a4-8525-4fd1-aa13-3a063df4b264**, and save the file.\n3 - run `Test-ModuleManifest`\n\n```\n[F:\\temp]\nPS:15> $Manifest = Test-ModuleManifest .\\module.psd1\n[F:\\temp]\nPS:16> $Manifest.Guid\n\nGuid\n----\n9dd7e9a4-8525-4fd1-aa13-3a063df4b264\n```\n\n4 - update the `GUID` property in module.psd1 to be **4714e36a-6e90-47e6-87a7-4637c60e9021**, and save the file.\n5 - run `Test-ModuleManifest` again\n\n```\n[F:\\temp]\nPS:17> $Manifest2 = Test-ModuleManifest .\\module.psd1\n[F:\\temp]\nPS:18> $Manifest2.Guid\n\nGuid\n----\n4714e36a-6e90-47e6-87a7-4637c60e9021\n```\n\nI tried this in the following environments:\n\n```\nPS:19> $PSVersionTable\n\nName                           Value\n----                           -----\nPSVersion                      5.1.14393.1000\nPSEdition                      Desktop\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\nBuildVersion                   10.0.14393.1000\nCLRVersion                     4.0.30319.42000\nWSManStackVersion              3.0\nPSRemotingProtocolVersion      2.3\nSerializationVersion           1.1.0.1\n\n\nPS F:\\temp> $PSVersionTable\n\nName                           Value\n----                           -----\nPSEdition                      Core\nWSManStackVersion              3.0\nCLRVersion\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\nSerializationVersion           1.1.0.1\nBuildVersion                   3.0.0.0\nPSRemotingProtocolVersion      2.3\nPSVersion                      6.0.0-alpha\nGitCommitId                    v6.0.0-alpha.10-103-g13455204a46f688937369967d0b886598cf7c6e5\n```\n\nMaybe the reported issue has been fixed. Could you please double check with the latest powershell core to see if `Test-ModuleManifest` works as expected?\n",
      "created_at": "2016-10-04T17:51:46Z",
      "updated_at": "2016-10-04T17:51:46Z"
    },
    {
      "author": "LaurentDardenne",
      "author_association": "NONE",
      "body": "The bug is still present in the v5.0 \n\n``` Powershell\n$PSVersionTable\n\nName                           Value\n----                           -----\nPSVersion                      5.0.10586.117\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0, 5.0.10586.117}\nBuildVersion                   10.0.10586.117\nCLRVersion                     4.0.30319.42000\nWSManStackVersion              3.0\nPSRemotingProtocolVersion      2.3\nSerializationVersion           1.1.0.1\n```\n\nSee also : https://connect.microsoft.com/PowerShell/Feedback/Details/1541734\n",
      "created_at": "2016-10-05T11:15:26Z",
      "updated_at": "2016-10-05T11:15:26Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Hi @jozefizso and @LaurentDardenne, I cannot reproduce this issue in the latest powershell core and windows powershell 5.1, please see my comment above.\nCould you please try the latest powershell core and windows powershell 5.1 to see if the issue is still present?\n",
      "created_at": "2016-10-05T21:19:48Z",
      "updated_at": "2016-10-05T21:19:48Z"
    },
    {
      "author": "jozefizso",
      "author_association": "NONE",
      "body": "I have PowerShell version `5.1.14393.206` on my machine. I don't know how to update it.\n",
      "created_at": "2016-10-05T21:33:52Z",
      "updated_at": "2016-10-05T21:33:52Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@jozefizso then you can try on the latest powershell core and the windows powershell built from Github. See [here](https://github.com/PowerShell/PowerShell/blob/master/docs/building/windows-full.md) for instructions to build FullCLR powershell. After building FullCLR powershell, run `Start-DevPowerShell -FullCLR` to start the FullCLR powershell from your build.\n\nI tried on powershell-6.0.0-alpha.10-win10-x64 and the FullCLR powershell built from Github, and the reported issue doesn't reproduce.\n",
      "created_at": "2016-10-05T22:36:14Z",
      "updated_at": "2016-10-05T22:36:14Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@jozefizso Have you got a chance to try on the latest powershell core (e.g. alpha.11 release) or the FullCLR powershell built from GitHub?\nIt's possible that the issue has already been fixed in the open sourced powershell, but please let us know if you still find it repro.\n",
      "created_at": "2016-10-20T05:27:14Z",
      "updated_at": "2016-10-20T05:27:14Z"
    },
    {
      "author": "kilasuit",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw - I can repo this in Ps Version 5.1.14955.1000 - however not with GUID but with Referenced Assemblies and only after an error in the Manifest occurs - raised by @ctrbold\n\nIf you have an error in the manifest then you have to close the PowerShell session to run another test with out it seemingly spitting out the errors from the previous run.\n\nSimple repo - add a non-existent Referenced Assembly (just name not a path) to the psd1 and then run Test-ModuleManifest and it will error as it's expecting a path to the assembly which isn't really clear that it what it expects.\nAfter that remove or comment out the Referenced Assembly key and then re run Test-ModuleManifest and it will still error\n",
      "created_at": "2016-10-29T23:59:49Z",
      "updated_at": "2016-10-29T23:59:49Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@kilasuit do you mean `RequiredAssemblies` field in module manifest? I tried the repro you described, but I'm still not able to repro it.\n[test.ps1.txt](https://github.com/PowerShell/PowerShell/files/563031/test.ps1.txt)\nThe `test.ps1.txt` contains a pester test with the steps you described, but it always pass when running in the latest powershell core:\n\n``` powershell\nPS F:\\tmp> Invoke-Pester .\\test.ps1\n\nDescribing Test-ModuleManifest\n [+] Test-ModuleManifest twice 245ms\nTests completed in 245ms\nPassed: 1 Failed: 0 Skipped: 0 Pending: 0\n\nPS F:\\tmp> $PSVersionTable\n\nName                           Value\n----                           -----\nSerializationVersion           1.1.0.1\nPSVersion                      6.0.0-alpha\nBuildVersion                   3.0.0.0\nWSManStackVersion              3.0\nGitCommitId                    v6.0.0-alpha.11-54-g44eb20dc8f71d84f604c41f0f7e3a900d5e1ec59\nPSEdition                      Core\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\nCLRVersion\nPSRemotingProtocolVersion      2.3\n```\n\nCan you please come up with a similar test that can repro the issue?\n",
      "created_at": "2016-10-31T23:13:44Z",
      "updated_at": "2016-10-31T23:13:44Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "This does not repro on `6.0.0-beta.1`",
      "created_at": "2017-05-25T18:07:59Z",
      "updated_at": "2017-05-25T18:07:59Z"
    }
  ],
  "created_at": "2016-09-09T20:21:23Z",
  "number": 2216,
  "state": "closed",
  "title": "Test-ModuleManifest: the PSModuleInfo is not updated",
  "updated_at": "2017-05-25T18:07:59Z"
}