{
  "_url": "https://github.com/PowerShell/PowerShell/issues/962",
  "author": "dgrala",
  "body": "",
  "closed_at": "2016-05-18T18:24:53Z",
  "comments": [
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "@dgrala I rebased your branch onto `andschwa/package-management-files` after rebasing it onto `master`. This should now be up-to-date with the latest sources.\n",
      "created_at": "2016-05-06T20:31:38Z",
      "updated_at": "2016-05-06T20:31:38Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "I also amended your last commit so that it doesn't erroneously update the Pester module.\n",
      "created_at": "2016-05-06T20:40:33Z",
      "updated_at": "2016-05-06T20:40:33Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "~~And pulled in `Microsoft.PackageManagement/project.json` as it originally wasn't added in a separate commit from the Source Depot import.~~ <-- my bad rebase\n",
      "created_at": "2016-05-06T20:45:39Z",
      "updated_at": "2016-05-06T22:26:01Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Now unfortunately, I think .NET CLI's Windows builds just broke on us. Give me a minute.\n",
      "created_at": "2016-05-06T20:53:31Z",
      "updated_at": "2016-05-06T20:53:31Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "I pinned the version of .NET CLI in #963 and reported it upstream; it shouldn't have broken like that.\n",
      "created_at": "2016-05-06T21:03:35Z",
      "updated_at": "2016-05-06T21:03:35Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "I also need to fix up your `project.json` dependencies; there are a lot of extras.\n",
      "created_at": "2016-05-06T21:13:17Z",
      "updated_at": "2016-05-06T21:13:17Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "@dgrala The projects restore and and the code is here... but now the question is, what is the top-level PackageManagement project that the host should take a dependency on so that this gets built?\n",
      "created_at": "2016-05-06T21:36:46Z",
      "updated_at": "2016-05-06T21:36:46Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Closing with #991.\n",
      "created_at": "2016-05-18T18:24:53Z",
      "updated_at": "2016-05-18T18:24:53Z"
    }
  ],
  "created_at": "2016-05-06T19:26:55Z",
  "number": 962,
  "state": "closed",
  "title": "Resolves PackageManagement builds on FullCLR and CoreCLR",
  "updated_at": "2016-05-18T18:24:58Z"
}