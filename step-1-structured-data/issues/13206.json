{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13206",
  "author": "rjmholt",
  "body": "## Steps to reproduce\r\n\r\n```powershell\r\n> Start-DevPowerShell\r\n>> exit\r\n```\r\n\r\n## Expected behavior\r\n\r\n```none\r\n<exits quietly like a good shell>\r\n```\r\n\r\n## Actual behavior\r\n\r\n```none\r\n> exit\r\nPS C:\\Users\\Robert Holt\\Documents\\Dev\\Microsoft\\PowerShell> exit\r\nInvalidOperation: C:\\Users\\Robert Holt\\Documents\\Dev\\Microsoft\\PowerShell\\build.psm1:1973\r\nLine |\r\n1973 |          if ($ZapDisable) {\r\n     |              ~~~~~~~~~~~\r\n     | The variable '$ZapDisable' cannot be retrieved because it has not been set.\r\n\r\n```\r\n\r\n",
  "closed_at": "2020-08-25T21:21:34Z",
  "comments": [
    {
      "author": "jakekerr",
      "author_association": "CONTRIBUTOR",
      "body": "I would like to tackle this (seems pretty straightforward) but I am a first-timer so bear with me. What is considered standard when checking for variables that could be null in the powershell community? StrictMode is set to version 3.0 so it seems like checking for this variable in most cases would throw an error (since it is never initialized by Start-DevPowerShell). Should this if statement be removed? Or perhaps should should StrictMode be set to Off before this if statement?",
      "created_at": "2020-08-04T18:05:22Z",
      "updated_at": "2020-08-04T18:08:15Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Probably the if statement just needs to be swapped to `if (Get-Variable -Name ZapDisable -ValueOnly -ErrorAction SilentlyContinue) { ... }`\r\n\r\nIMO though strict mode is rarely useful and I'm not really sure why we have it enabled in the first place.",
      "created_at": "2020-08-04T18:10:32Z",
      "updated_at": "2020-08-04T18:10:46Z"
    },
    {
      "author": "jakekerr",
      "author_association": "CONTRIBUTOR",
      "body": "Thank you vexx. Idk what the etiquette is here since you basically wrote the solution. Should I make a change or would you like to do it?",
      "created_at": "2020-08-04T18:16:14Z",
      "updated_at": "2020-08-04T18:16:14Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "> Idk what the etiquette is here since you basically wrote the solution. Should I make a change or would you like to do it?\r\n\r\nI think @vexx32 is just trying to point you in the right direction. You already expressed the desire to open a PR for this (and there's more overhead in doing that), so I'd say you're free to proceed.",
      "created_at": "2020-08-04T18:19:53Z",
      "updated_at": "2020-08-04T18:19:53Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Yep, pretty much ^^\r\n\r\nAlso, while I'm _pretty_ sure that'll work just fine, there's always a chance more will be needed there, I haven't tested it. \ud83d\ude01 ",
      "created_at": "2020-08-04T18:26:33Z",
      "updated_at": "2020-08-04T18:26:33Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:This issue was addressed in #13350, which has now been successfully released as `v7.1.0-preview.7`.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.1.0-preview.7)\n",
      "created_at": "2020-09-08T22:50:16Z",
      "updated_at": "2020-09-08T22:50:16Z"
    }
  ],
  "created_at": "2020-07-17T19:41:20Z",
  "labels": [
    "Issue-Bug",
    "Area-Maintainers-Build",
    "Up-for-Grabs",
    "Resolution-Fixed",
    "First-Time-Issue"
  ],
  "number": 13206,
  "state": "closed",
  "title": "Start-DevPowerShell always throws an InvalidOperation error on exit",
  "updated_at": "2020-09-08T22:50:17Z"
}