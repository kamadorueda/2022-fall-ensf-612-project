{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3353",
  "author": "jeffbi",
  "body": "When given `-Role Client`, these cmdlets attempt to make use of the `IGroupPolicyObject` COM interface. `IGroupPolicyObject` requires that it be called from a Single Thread Apartment. STA is not supported in CoreCLR, so these cmdlets will fail when using the Client role.\r\n\r\nThis is the underlying cause of issue #2599.\r\n\r\nThe core folk have an [existing issue](https://github.com/dotnet/corefx/issues/522) for support of STA.\r\n\r\nSteps to reproduce\r\n------------------\r\n`Enable-WSManCredSSP -DelegateComputer ServerA.foo.xyz.com -Role Client -Force`\r\nor\r\n`Disable-WSManCredSSP -Role Client`\r\n\r\nExpected behavior\r\n-----------------\r\nPerform the operation without error.\r\n\r\nActual behavior\r\n---------------\r\nThrows `System.InvalidCastException` when trying to cast an object to `IGroupPolicyObject`.\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value\r\n----                           -----\r\nPSRemotingProtocolVersion      2.3\r\nGitCommitId                    v6.0.0-alpha.16-49-g97be759cc7bd33abbe220dd87...\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSEdition                      Core\r\nCLRVersion\r\nPSVersion                      6.0.0-alpha\r\nBuildVersion                   3.0.0.0\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2017-08-10T20:31:55Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Related #2969",
      "created_at": "2017-03-17T12:20:21Z",
      "updated_at": "2017-03-17T12:20:21Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "CoreFX issue https://github.com/dotnet/corefx/issues/522 milestone is 1.0.0-rtm so I set \"Waiting - NetStandard20\"",
      "created_at": "2017-03-18T18:22:45Z",
      "updated_at": "2017-03-18T18:22:45Z"
    },
    {
      "author": "karelz",
      "author_association": "NONE",
      "body": "@iSazonov what is exactly the expectation for .NET Standard 2.0? Are there any missing APIs? Or just missing capability of the runtime? -- in that case it would be more about .NET Core 2.0 than .NET Standard 2.0.\r\nEither way, I am not sure if we can make that happen in .NET Core 2.0 timeframe -- let's have that discussion in the new CoreFX issue. Is it something blocking PowerShell Core release? Is it something that PowerShell team (or community) is interested in contributing to CoreFX repo?",
      "created_at": "2017-03-31T02:52:50Z",
      "updated_at": "2017-03-31T02:52:50Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@karelz We have some Issues here about this (2 or even more). \r\n I believe @daxian-dbw can comment in depth. It seems @daxian-dbw already open such Issue in CoreFX repo.",
      "created_at": "2017-03-31T03:43:35Z",
      "updated_at": "2017-03-31T03:43:49Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "I didn't open a new issue in CoreFx repo on this topic. Currently we call `ShellExecuteEx` directly in MTA thread, it would have problems for some shell extensions that require COM, but it's fine for common uses, such as opening file exploere or a file based on its extension.\r\n\r\nHowever, this issue seems indicating that it's blocking our remoting scenario, @HemantMahawar and @joeyaiello, can you please weigh in and see if this will block PowerShell Core 6.0 RTM release?",
      "created_at": "2017-03-31T16:50:04Z",
      "updated_at": "2017-03-31T16:50:04Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "In General, Windows still widely uses the COM as well as Forms that require STA. If  .Net Core does not provide access to these subsystems, PowerShell will lose a lot of functionality. I would like to have Get-WmiObject.\r\nI do not dare to open the CoreFX Issue because I do not know these APIs deeply.",
      "created_at": "2017-04-02T12:18:39Z",
      "updated_at": "2017-04-02T12:18:39Z"
    },
    {
      "author": "alexandair",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov Why do you need Get-WmiObject? What about using Get-CimInstance instead?",
      "created_at": "2017-04-02T12:57:40Z",
      "updated_at": "2017-04-02T12:57:40Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@alexandair In this discussion, it is important that both cmdlets use COM.",
      "created_at": "2017-04-02T13:46:44Z",
      "updated_at": "2017-04-02T13:46:44Z"
    }
  ],
  "created_at": "2017-03-17T06:08:44Z",
  "labels": [
    "WG-Cmdlets",
    "Resolution-Fixed",
    "Waiting - DotNetCore"
  ],
  "number": 3353,
  "state": "closed",
  "title": "Single Thread Apartment required for Enable-WSManCredSSP and Disable-WSManCredSSP",
  "updated_at": "2017-08-11T04:11:43Z"
}