{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3584",
  "author": "mklement0",
  "body": "Steps to reproduce\r\n------------------\r\n\r\nDefine <kbd>Control</kbd> and <kbd>Alt</kbd>-key-based chords for doubling characters `'`, `\"`, and `(` when typed with <kbd>Control</kbd> or <kbd>Alt</kbd> held down:\r\n\r\n```powershell\r\nSet-PSReadlineKeyHandler -Chord \"Ctrl+'\" { [Microsoft.PowerShell.PSConsoleReadLine]::Insert(\"''\") }\r\nSet-PSReadlineKeyHandler -Chord 'Ctrl+\"' { [Microsoft.PowerShell.PSConsoleReadLine]::Insert('\"\"') }\r\nSet-PSReadlineKeyHandler -Chord 'Ctrl+(' { [Microsoft.PowerShell.PSConsoleReadLine]::Insert('()') }\r\nSet-PSReadlineKeyHandler -Chord \"Alt+'\" { [Microsoft.PowerShell.PSConsoleReadLine]::Insert(\"''\") }\r\nSet-PSReadlineKeyHandler -Chord 'Alt+\"' { [Microsoft.PowerShell.PSConsoleReadLine]::Insert('\"\"') }\r\nSet-PSReadlineKeyHandler -Chord 'Alt+(' { [Microsoft.PowerShell.PSConsoleReadLine]::Insert('()') }\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\nThe definitions should be accepted on all platforms and function as defined.\r\nE.g. <kbd>Ctrl+'</kbd> should result in `''`.\r\n\r\nActual behavior\r\n---------------\r\n\r\nOn Windows, the actual behavior matches the expected behavior.\r\n\r\nOn Unix platforms (verified on macOS 10.12.4 and Ubuntu 16.04 with the respective default terminal applications), the definitions fail with (repetitions of) the following error messages (note that omitting modifier keys `ctrl` and `alt` from the definitions would work fine):\r\n\r\n```\r\nSet-PSReadlineKeyHandler : Unrecognized key 'ctrl'. Please use a character literal or a well-known key name from the System.ConsoleKey enumeration.\r\nSet-PSReadlineKeyHandler : Unrecognized key 'alt'. Please use a character literal or a well-known key name from the System.ConsoleKey enumeration.\r\n```\r\n\r\nThe error messages suggest that `ctrl` / `alt` are not recognized as _modifier keys_ in this case.\r\n\r\nNote that something like `Ctrl+A` _does_ work, however; the problem appears to be the specific characters (`'`, `\"`, `(`) that the modifiers are paired with.\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\nPowerShell Core v6.0.0-alpha (v6.0.0-alpha.18) on Microsoft Windows 10 Pro (64-bit; v10.0.14393)\r\nPowerShell Core v6.0.0-alpha (v6.0.0-alpha.18) on Darwin Kernel Version 16.5.0: Fri Mar  3 16:52:33 PST 2017; root:xnu-3789.51.2~3/RELEASE_X86_64\r\nPowerShell Core v6.0.0-alpha (v6.0.0-alpha.18) on Darwin Kernel Version 16.5.0: Fri Mar  3 16:52:33 PST 2017; root:xnu-3789.51.2~3/RELEASE_X86_64\r\n```\r\n",
  "closed_at": "2017-04-17T21:17:29Z",
  "comments": [
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "This issue was moved to lzybkr/PSReadLine#529",
      "created_at": "2017-04-17T21:17:28Z",
      "updated_at": "2017-04-17T21:17:28Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "Tracking this in the PSReadline project. ",
      "created_at": "2017-04-17T21:17:40Z",
      "updated_at": "2017-04-17T21:17:40Z"
    },
    {
      "author": "axbender",
      "author_association": "NONE",
      "body": "Using PowerShell 6.0 and PSReadline 2.0, the following binding fails for me in Windows 7:\r\n\r\nSet-PSReadlineKeyHandler -Chord \"Ctrl+.\" ...\r\n\r\nThis might be a problem with PowerShell 6.0 as the AltGr key mappings for the German keyboard don't work, e.g. AltGr+8 wouldn't result in \"[\"...\r\n\r\nBeing new to PS6, is this expected/worked on?\r\n\r\nBtw., is there a way to specifiy e.g. [ConsoleKey]::OemPeriod in the chord?, and, what is the -Key parameter which is not described but \"exampled\" in the help page?",
      "created_at": "2018-01-20T14:23:45Z",
      "updated_at": "2018-01-20T14:23:45Z"
    }
  ],
  "created_at": "2017-04-17T19:44:00Z",
  "labels": [
    "WG-Interactive-PSReadLine",
    "Resolution-External"
  ],
  "number": 3584,
  "state": "closed",
  "title": "Set-PSReadlineKeyHandler fails with certain key chords on Unix",
  "updated_at": "2018-01-20T14:23:54Z"
}