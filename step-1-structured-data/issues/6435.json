{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6435",
  "author": "corretge",
  "body": "Sometimes, When I try to execute a remote command in a PowerShell Session from PowerShell in Linux, I get this error:\r\n\r\nInvoke-Command : Windows Principal functionality is not supported on this platform.\r\n\r\nFrom PowerShell in Mac works fine, but with PowerShell in Linux doesn't.\r\n\r\n\r\nSteps to reproduce\r\n------------------\r\nWe are connected to a Linux powershell session though a PowerShell session in a system with sshd Subsystem powershell /usr/bin/pwsh -sshs -NoLogo -NoProfile.\r\nOnce into the system, we want to execute a command to another Linux powershell session \r\n```\r\n$pss = New-PSSession -Hostname x.x.x.x -Username xxx -Port xx -KeyFilePath ~/.ssh/xxx\r\nInvoke-Command $pss { $PSVersionTable }\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```\r\nName                           Value\r\n----                           -----\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nWSManStackVersion              3.0\r\nSerializationVersion           1.1.0.1\r\nPlatform                       Unix\r\nOS                             Linux 3.10.0-693.5.2.el7.x86_64 #1 SMP Fri Oct 20 20:32:50 UTC 2017\r\nPSVersion                      6.0.1\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.1\r\n\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n```\r\nInvoke-Command : Windows Principal functionality is not supported on this platform.\r\nAt line:1 char:1\r\n+ Invoke-Command $pss { $PSVersionTable }\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : NotSpecified: (:) [Invoke-Command], PlatformNotSupportedException\r\n+ FullyQualifiedErrorId : System.PlatformNotSupportedException,Microsoft.PowerShell.Commands.InvokeCommandCommand\r\n\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.2\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.2\r\nOS                             Linux 3.10.0-693.21.1.el7.x86_64 #1 SMP Wed Mar 7 19:03:37 UTC 2018\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\nBut if I execute Enter-PSSession I get an error, and then Invoke-Command runs like a charm.\r\n<img width=\"972\" alt=\"powershell linux issues\" src=\"https://user-images.githubusercontent.com/228097/37652234-28f1f9c2-2c3b-11e8-9f59-10f5c66e70e9.png\">\r\n\r\nIf we connect to the linux machine though ssh with bash, and execute */usr/bin/pwsh* Invoke-Command works at first attempt.",
  "closed_at": "2019-04-03T22:14:59Z",
  "comments": [
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "This looks like a weird double hop issue.  I'll try to repro when I get some time.",
      "created_at": "2018-03-22T17:03:39Z",
      "updated_at": "2018-03-22T17:03:39Z"
    },
    {
      "author": "flxflx",
      "author_association": "NONE",
      "body": "I am getting the same error for the following line of code when I am on WSL or connected remotely to a Linux box over ssh.\r\n\r\n`$nodes | foreach-object { start-job -ScriptBlock $function:createRemoteNode -ArgumentList ($_, ($nodeId++) + $constArgs)} | receive-job -Wait -AutoRemoveJob`",
      "created_at": "2018-07-19T10:48:10Z",
      "updated_at": "2018-07-19T10:48:10Z"
    },
    {
      "author": "neel015",
      "author_association": "NONE",
      "body": "Facing the same error when trying to run invoke-command using Powershell core 6.1 with [Microsoft.Powershell.SDK](https://www.nuget.org/packages/Microsoft.PowerShell.SDK/6.1.0-rc.1) dlls.\r\nWorking on a linux ubuntu 16.04, I am able to run the command from powershelll core directly. However, when I try to run the same script from C#, I am getting the same error message.\r\n\r\n```\r\n$TargetSession = New-PSSession -HostName $TargetComputerName -UserName $Username -KeyFilePath $KeyFilePath\r\n\r\nInvoke-Command -Session $TargetSession -ScriptBlock {\r\n get-process\r\n}\r\n```\r\n",
      "created_at": "2018-09-13T09:53:03Z",
      "updated_at": "2018-09-13T10:24:15Z"
    },
    {
      "author": "JustinGrote",
      "author_association": "CONTRIBUTOR",
      "body": "This happens to me when doing SSH remoting from a Linux system to a Windows system via SSH if the commands are wrapped in jobs. Doesn't seem to matter if it's a process job or a runspace job.\r\n\r\nWorks perfectly fine from Posh 6.1 on Windows to Windows via SSH\r\n\r\n### Normal SSH Session (works)\r\n```powershell\r\nPS /tmp> $s = new-pssession -SSHTransport -HostName _REDACTED_ -KeyFilePath /tmp/tmpblvmbP.tmp -UserName _REDACTED_ -Verbose;sleep 1;icm -session $s -scriptblock {echo \"test\"}\r\ntest\r\n```\r\n\r\n### Inside Process via Start-Job (fails)\r\n```\r\nPS /tmp> start-job {$s = new-pssession -SSHTransport -HostName 172.30.2.89 -KeyFilePath /tmp/tmpblvmbP.tmp -UserName sa-awsmodelingstatus -Verbose;sleep 3;icm -session $s -scriptblock {echo \"test\"}} | receive-job -wait -AutoRemoveJob\r\nWindows Principal functionality is not supported on this platform.\r\n+ CategoryInfo          : NotSpecified: (:) [Invoke-Command], PlatformNotSupport                           edException\r\n+ FullyQualifiedErrorId : System.PlatformNotSupportedException,Microsoft.PowerSh                           ell.Commands.InvokeCommandCommand\r\n+ PSComputerName        : localhost\r\n```\r\n\r\n### Inside Runspace via Start-Threadjob (fails)\r\n```\r\nPS /tmp> start-threadjob {$s = new-pssession -SSHTransport -HostName _REDACTED_ -KeyFilePath /tmp/tmpblvmbP.tmp -UserName _REDACTED_-Verbose;sleep 1;icm -session $s -scriptblock {echo \"test\"}} | Receive-job -wait -AutoRemoveJob\r\nicm : Windows Principal functionality is not supported on this platform.\r\nAt line:1 char:136\r\n+ ... ingstatus -Verbose;sleep 3;icm -session $s -scriptblock {echo \"test\"}\r\n+                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : NotSpecified: (:) [Invoke-Command], PlatformNotSupportedException\r\n+ FullyQualifiedErrorId : System.PlatformNotSupportedException,Microsoft.PowerShell.Commands.InvokeCommandCommand\r\n```\r\n\r\n\r\n@SteveL-MSFT does your PR #8232 address this?\r\nEDIT: Just tested on 6.2.0-preview3 with #8232 included. It does not \ud83d\udc4e ",
      "created_at": "2019-01-03T16:28:29Z",
      "updated_at": "2019-01-03T17:11:09Z"
    },
    {
      "author": "JustinGrote",
      "author_association": "CONTRIBUTOR",
      "body": "Tried doing it with -SSHConnection and ran into #8589. SSH Remoting still feels pretty half-baked unfortunately...",
      "created_at": "2019-01-03T17:33:58Z",
      "updated_at": "2019-01-03T17:33:58Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "@JustinGrote Unfortunately I am still unable to repro this error.  But the error indicates that there is still some Windows code lurking in Linux code paths.  I recently found and fixed a number of similar issues pertaining to Windows impersonation flow.  The problem was found during remote debugging but it is possible it is related to your problem (#8451).  However, the fix won't be available until the next release (I think Feb), unless you want to build your own version to test with.  Also, if you can include the error stack trace, it may pinpoint the offending code path.",
      "created_at": "2019-01-05T00:03:03Z",
      "updated_at": "2019-01-05T00:03:03Z"
    },
    {
      "author": "danports",
      "author_association": "NONE",
      "body": "I am working on a similar scenario as @neel015 and also ran into this issue on 6.1.3. Here's a stack trace @PaulHigin:\r\n\r\n```\r\nSystem.PlatformNotSupportedException: Windows Principal functionality is not supported on this platform.\r\n   at System.Security.Principal.WindowsIdentity.GetCurrent()\r\n   at System.Management.Automation.RemoteDebugger.CheckForValidateState()\r\n   at System.Management.Automation.RemoteDebugger.set_UnhandledBreakpointMode(UnhandledBreakpointProcessingMode value)\r\n   at Microsoft.PowerShell.Commands.ExecutionCmdletHelper.ConfigureRunspaceDebugging(Runspace runspace)\r\n   at Microsoft.PowerShell.Commands.ExecutionCmdletHelperRunspace.StartOperation()\r\n   at System.Management.Automation.Remoting.ThrottleManager.StartOneOperationFromQueue()\r\n   at System.Management.Automation.Remoting.ThrottleManager.StartOperationsFromQueue()\r\n   at System.Management.Automation.Remoting.ThrottleManager.SubmitOperations(List`1 operations)\r\n   at System.Management.Automation.PSInvokeExpressionSyncJob.StartOperations(List`1 operations)\r\n   at Microsoft.PowerShell.Commands.InvokeCommandCommand.CreateAndRunSyncJob()\r\n   at Microsoft.PowerShell.Commands.InvokeCommandCommand.ProcessRecord()\r\n   at System.Management.Automation.Cmdlet.DoProcessRecord()\r\n   at System.Management.Automation.CommandProcessor.ProcessRecord() at at <ScriptBlock>, <No file>: line 6\r\n```",
      "created_at": "2019-03-27T20:06:37Z",
      "updated_at": "2019-03-27T20:06:37Z"
    },
    {
      "author": "danports",
      "author_association": "NONE",
      "body": "@neel015 I was able to bypass the problematic code by calling `RunspaceFactory.CreateRunspace(new WSManConnectionInfo {...})` to create a remote runspace rather than using `New-PSSession` and `Invoke-Command`, which feels cleaner anyhow.",
      "created_at": "2019-03-27T20:48:10Z",
      "updated_at": "2019-03-27T20:48:10Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@danports Thanks for the stack trace!  With that, I see that @PaulHigin made a change in https://github.com/PowerShell/PowerShell/pull/8451 that would have fixed this issue.  That change would only be in PSCore6.2.  Can you try 6.2-RC1 and see if you're original problem repros?",
      "created_at": "2019-03-27T20:59:56Z",
      "updated_at": "2019-03-27T20:59:56Z"
    }
  ],
  "created_at": "2018-03-20T11:35:28Z",
  "labels": [
    "Issue-Bug",
    "Resolution-Fixed"
  ],
  "number": 6435,
  "state": "closed",
  "title": "Invoke-Command : Windows Principal functionality is not supported on this platform.",
  "updated_at": "2019-04-03T22:14:59Z"
}