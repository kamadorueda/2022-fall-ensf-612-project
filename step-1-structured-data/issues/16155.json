{
  "_url": "https://github.com/PowerShell/PowerShell/issues/16155",
  "author": "chadbaldwin",
  "body": "### Prerequisites\r\n\r\n- [X] Write a descriptive title.\r\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- [X] Search the existing issues.\r\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- [x] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\r\n\r\n### Steps to reproduce\r\n\r\nSample function:\r\n\r\n```powershell\r\nfunction Invoke-AddOne {\r\n    param (\r\n        [Parameter(ValueFromPipeline)]\r\n        [string[]]$Number\r\n    )\r\n\r\n    Process {\r\n        $testValue = $_ + 1\r\n        $testValue\r\n    }\r\n}\r\n```\r\n\r\nRun each command to recreate error:\r\n\r\n```powershell\r\n1,2,3 | Invoke-AddOne -PV test # does not throw error\r\n1,2,3 | Invoke-AddOne -PV testValue # does throw error\r\n```\r\n\r\nIf this is a matter of me writing an improper example, please let me know. I see the error mentions the use of `Remove-Variable`, but I've never heard of any recommendations to use `Remove-Variable` for custom written functions. If this the case and I just need to add `Remove-Variable` to my functions, then my apologies.\r\n\r\n### Expected behavior\r\n\r\nWhen the function is called while supplying a `-PipelineVariable` value, it should work as normal, storing the pipeline value within the variable name to be used downstream in the pipeline.\r\n\r\n```console\r\nPS> 1,2,3 | Invoke-AddOne -PV test | % { $test }\r\n2\r\n3\r\n4\r\n```\r\nDoes not return any errors\r\n\r\n### Actual behavior\r\n\r\nWhen a variable name that is used in the definition of the function is supplied as a `-PipelineVariable` variable name, it throws an error.\r\n\r\n```console\r\nPS> 1,2,3 | Invoke-AddOne -PV testValue | % { $testValue }\r\nInvoke-AddOne: Cannot remove variable testValue because the variable has been optimized and is not removable. Try using the Remove-Variable cmdlet (without any aliases), or dot-sourcing the command that you are using to remove the variable.\r\n```\r\n\r\n\r\n### Error details\r\n\r\n```console\r\nPS> Get-Error\r\n\r\nException             :\r\n    Type        : System.Management.Automation.SessionStateUnauthorizedAccessException\r\n    ErrorRecord :\r\n        Exception             :\r\n            Type    : System.Management.Automation.ParentContainsErrorRecordException\r\n            Message : Cannot remove variable testValue because the variable has been optimized and is not removable. Try using the Remove-Variable cmdlet (without any aliases), or dot-sourcing the command that you are using to remove the variable.\r\n            HResult : -2146233087\r\n        TargetObject          : testValue\r\n        CategoryInfo          : WriteError: (testValue:String) [], ParentContainsErrorRecordException\r\n        FullyQualifiedErrorId : VariableNotRemovableRare\r\n    ItemName    : testValue\r\n    TargetSite  :\r\n        Name          : RemoveVariable\r\n        DeclaringType : System.Management.Automation.SessionStateScope, System.Management.Automation, Version=7.2.0.9, Culture=neutral, PublicKeyToken=31bf3856ad364e35\r\n        MemberType    : Method\r\n        Module        : System.Management.Automation.dll\r\n    Message     : Cannot remove variable testValue because the variable has been optimized and is not removable. Try using the Remove-Variable cmdlet (without any aliases), or dot-sourcing the command that you are using to remove the variable.\r\n    Source      : System.Management.Automation\r\n    HResult     : -2146233087\r\n    StackTrace  :\r\n   at System.Management.Automation.SessionStateScope.RemoveVariable(String name, Boolean force) in System.Management.Automation.dll:token 0x6003bdf+0x46\r\n   at System.Management.Automation.SessionStateInternal.RemoveVariable(String name, Boolean force) in System.Management.Automation.dll:token 0x6003b9d+0x2a\r\n   at System.Management.Automation.PSScriptCmdlet.RunClause(Action`1 clause, Object dollarUnderbar, Object inputToProcess) in System.Management.Automation.dll:token 0x600368b+0x125\r\n   at System.Management.Automation.PSScriptCmdlet.DoProcessRecord() in System.Management.Automation.dll:token 0x6003687+0x3b\r\n   at System.Management.Automation.CommandProcessor.ProcessRecord() in System.Management.Automation.dll:token 0x6002100+0x1ae\r\nTargetObject          : testValue\r\nCategoryInfo          : WriteError: (testValue:String) [Invoke-AddOne], SessionStateUnauthorizedAccessException\r\nFullyQualifiedErrorId : VariableNotRemovableRare,Invoke-AddOne\r\nInvocationInfo        :\r\n    MyCommand        : Invoke-AddOne\r\n    ScriptLineNumber : 1\r\n    OffsetInLine     : 9\r\n    HistoryId        : 10\r\n    Line             : 1,2,3 | Invoke-AddOne -PV testValue | % { $testValue }\r\n    PositionMessage  : At line:1 char:9\r\n                       + 1,2,3 | Invoke-AddOne -PV testValue | % { $testValue }\r\n                       +         ~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    InvocationName   : Invoke-AddOne\r\n    CommandOrigin    : Internal\r\nScriptStackTrace      : at <ScriptBlock>, <No file>: line 1\r\n```\r\n\r\n### Environment data\r\n\r\n```console\r\nPS> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.0-preview.9\r\nPSEdition                      Core\r\nGitCommitId                    7.2.0-preview.9\r\nOS                             Microsoft Windows 10.0.22000\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\n\r\n### Visuals\r\n\r\n_No response_",
  "closed_at": "2021-10-07T17:26:21Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "/cc @daxian-dbw looks like there's still a case or two this error can crop up. Haven't seen this one before though.\r\n\r\nThanks for reporting it @chadbaldwin!",
      "created_at": "2021-09-25T23:19:01Z",
      "updated_at": "2021-09-25T23:19:01Z"
    },
    {
      "author": "JamesWTruher",
      "author_association": "MEMBER",
      "body": "WG: We are supposing that there's an attempt to remove the variable in an inappropriate scope (we think it's trying to be removed from the function scope but aren't sure). We agree that this is surprising, and needs further investigation and fixing.\r\n",
      "created_at": "2021-09-30T23:40:17Z",
      "updated_at": "2021-09-30T23:40:17Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:This issue was addressed in #16199, which has now been successfully released as `v7.3.0-preview.1`.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.3.0-preview.1)\n",
      "created_at": "2021-12-16T19:58:54Z",
      "updated_at": "2021-12-16T19:58:54Z"
    }
  ],
  "created_at": "2021-09-25T23:15:34Z",
  "number": 16155,
  "state": "closed",
  "title": "PipelineVariable throws error if variable name used exists in function definition",
  "updated_at": "2021-12-16T19:58:54Z"
}