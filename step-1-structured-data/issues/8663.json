{
  "_url": "https://github.com/PowerShell/PowerShell/issues/8663",
  "author": "doctordns",
  "body": "So we have another update of PowerShell core. Excellent that - but to do the update I need to go to GitHub.  This is fine but is more work than it should be for most IT Pros. In my case, I just want the latest version on my workstation. While GitHub is a wonderful place, for a lot of more traditional IT Pros who are not into DevOps - it's overhead to what should be a simple process.\r\n\r\nToday, we just use **Update-Help** to get the latest help content. It just works. So can we get an **Update-PowerShell** that just works?\r\n\r\nAnd how about an installation mode for updates that does not destroy Taskbar pinned shortcuts?",
  "closed_at": "2022-04-30T12:00:41Z",
  "comments": [
    {
      "author": "kvprasoon",
      "author_association": "CONTRIBUTOR",
      "body": "@doctordns This was discussed earlier [here](https://github.com/PowerShell/PowerShell/issues/6080)\r\n\r\nThere are few scripts in PowerShell scripts to do this in PowerShell gallery. [PSReleaseTools]( https://www.powershellgallery.com/packages/PSReleaseTools/0.7.0) is one of the best one.",
      "created_at": "2019-01-17T06:58:30Z",
      "updated_at": "2019-01-17T06:58:30Z"
    },
    {
      "author": "kilasuit",
      "author_association": "COLLABORATOR",
      "body": "I've asked for a long time for the PowerShell team to take ownership of the Chocolatey package as in #2708\r\n\r\nMy reasoning for this is that Chocolatey can be combined with SCCM so it gives the largest possible surface for implementations of self updating manners ",
      "created_at": "2019-01-17T11:52:43Z",
      "updated_at": "2019-01-17T11:52:43Z"
    },
    {
      "author": "doctordns",
      "author_association": "COLLABORATOR",
      "body": "Thank you for the comment @kilasuit.\r\n\r\nYes, I know that you can do just about anything in PowerShell. I could certainly write a function or download the Chocolately package.  My point is that it could be an easy fix for the PowerShell team and a reflection that the release cadence of PowerShell is now very different from Windows PowerShell (which is, of course, a good thing in and of it self). \r\n\r\nThe IT Pro, for whom PowerShell is just a tool, needs a very simple way to keep up to date. This could include:\r\n1. Automatically ship the updated versions of PWSH to the relevant repos (Linux/Mac/Windows). And convincing the in-box update mechanisms to download updates as a package in the 'normal' way (i.e. on Windows, ship optionally by Windows Update, on Ubuntu enable apt-get) so that IT pros get updates just like other updates. And if you can't enable Windows Update to take the updates, at least put it out onto the PS Gallery\r\n2. Ship an in-box **Update-PowerShell** cmdlet that updates 'this' version of Pwsh with the latest version if one exists. Of course, for completness, let it have a **-Version** parameter to allow me to choose if I need to, and PLEASE: a **-NoSideBySide** switch which would allow the installer to install into the existing folder so as to not invalidate pinned taskbar shortcuts (I, and I am sure others find having to have to re-create shortcuts after each update a sub-optimal experience). And maybe making side x side vs overwrite an installation option in the Installation GUI?\r\n3. Finally, during the initial PWSH installation, offer to create a scheduled task or cron job that checked for and updated that version of PWSH. \r\n\r\nAs I have said, we have **Update-Help** which is a nice way to get updates - if they exist.  I'd like to make updating PowerShell as easy. When I set up a new box, or sit down to do some work on my main workstation, I just run Update-Help to update the version of Pwsh should I there be one. I just want to simplify the tasks involved with taking more regular updates to Pwsh.",
      "created_at": "2019-01-17T13:06:55Z",
      "updated_at": "2019-01-17T13:06:55Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "I would expect to see Windows Update to take care of the PowerShell Core update process down-the-line.  The product is getting very stable.  So, why not just let the update handle it!\r\n\r\nIt the Linux side, all updates are working Great!!\r\n\r\nBTW, I agree on not destroying the shortcuts in the Windows task bar.\r\n\r\n:)",
      "created_at": "2019-01-17T13:55:57Z",
      "updated_at": "2019-01-17T13:55:57Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I think a root problem here is standardization of servicing model (in RFC). If PowerShell Core was installed from a package then the updater should use the same channel otherwise it will destroy the previous installation.\r\nI believe that we are still far from standardization here.\r\nWe could design a version manifest and publish it like Office 365 does where enumerate all current versions with indication package type, platform, arch and repository. This will allow customers integrate PowerShel Core servicing into their systems.\r\nPerhaps @joeyaiello and @SteveL-MSFT could add more. ",
      "created_at": "2019-01-17T17:13:14Z",
      "updated_at": "2019-01-17T17:13:14Z"
    },
    {
      "author": "kilasuit",
      "author_association": "COLLABORATOR",
      "body": "Some further comments \r\n\r\n> My point is that it could be an easy fix for the PowerShell team\r\n\r\nYou'd think if it was an easy fix it would have happened by now - but the reality is that it's not easy & currently the easiest method would, on windows, be Chocolatey at this current time\r\n\r\n> The IT Pro, for whom PowerShell is just a tool, needs a very simple way to keep up to date. \r\nAgain for packages this is Chocolatey which is the windows equivalent version of the *nix package managers\r\n\r\nOr perhaps as was recently asked the Windows store if it could be made available there #7730 as that would just auto update seemlessly and not be tied into Windows Update\r\n\r\n> Ship an in-box Update-PowerShell  \r\nI strongly disagree with this as this ties the PowerShell team to maintaining a solution that could change in future, that and I disagree that this should even be considered for the above 2 reasons so far\r\n\r\n> Finally, during the initial PWSH installation, offer to create a scheduled task or cron job that checked for and updated that version of PWSH.\r\nScheduled task / cron job may be feasible but again ties the team into something to be supported down the line that could very well end up changing drastically anyway as time goes by - this is something however that you could investigate yourself and add as a simple additonal task after install\r\n\r\n> I would expect to see Windows Update to take care of the PowerShell Core update process down-the-line.\r\n\r\nI know that @joeyaiello has hinted about whether this could happen or not, however that's seemingly still completely undecided although there is this long standing issue #6118 and some part of that may require PowerShell Core to be shipped in box with later Windows 10 installs before it could be feasible. That being said other Microsoft products have for a long time been able to tie into the Windows Update system, but IIRC other Products like Visual Studio and VS Code do not get updates this way, so there's not a unified way\r\n\r\n> It the Linux side, all updates are working Great!!\r\nWell that's because Linux have had package management sorted for years. Windows has had SCCM for packages in enterprises but this doesn't help organisations that have not implemented SCCM or may never intend to.\r\n\r\nAll in all this issue really boils down to what Microsoft are doing about Package Management in Windows, just as much as it does about updating PowerShell going forward and I am 100% that this is not something that @joeyaiello & @SteveL-MSFT and the team want to invest effort into this if there are possibly bigger changes coming around the corner, which would be the right decision even if it does mean that there is not a simple solution in the mean time.\r\n\r\nI mean they already have the basics for Package Management in the OneGet Repository https://github.com/OneGet/oneget/ (a semi related team to the PowerShell team) as this is the is the underlying tech for PowerShellGet and already has some Package Management Support built in via Nuget Feeds anyway as well as MSI, MSU, Programs and experimental Chocolatey support.\r\n\r\nI have searched all issues for any other similar issues to those already mentioned in this issue and also found the following #7864 #5477 that are also linked to the updating of PowerShell Core.\r\n\r\n",
      "created_at": "2019-01-22T05:08:16Z",
      "updated_at": "2019-01-22T05:08:16Z"
    },
    {
      "author": "Bartolomeus-649",
      "author_association": "NONE",
      "body": "As long as we are talking about updating, patching, security patches, hotfixes and such, then they should obviously be delivered via Windows Update, because that's the way Windows and Microsoft has done it for decades, and it is the method that \"just works\" for everyone from end users to IT pros managing thousands of machines in an enterprise environment.\r\n\r\nOn Linux, Mac and so on, the same updates should obviously be delivered in the way which updates are delivered for that particular OS/device.\r\n\r\nDon't go invent something new when we have an infrastructure that's in place which \"just works\". An infrastructure used by all systems dealing with installations, patching, updating and so on, like for example SCCM.\r\nHave you talked to the SCCM guys?  They are experts on how to get updating and patching to work in the real world...it's basically all they do, every day and al the time.\r\n\r\nK.I.S.S.!\r\n\r\n",
      "created_at": "2019-05-12T11:27:16Z",
      "updated_at": "2019-05-12T11:27:16Z"
    },
    {
      "author": "ExE-Boss",
      "author_association": "NONE",
      "body": "See also https://github.com/PowerShell/PowerShell/issues/6118, which is&nbsp;about adding automatic update support to&nbsp;the&nbsp;MSI&nbsp;installer.",
      "created_at": "2019-05-12T11:33:34Z",
      "updated_at": "2019-05-12T11:33:34Z"
    },
    {
      "author": "kilasuit",
      "author_association": "COLLABORATOR",
      "body": "See also #9827 where Windows Store install has been asked for again",
      "created_at": "2019-06-21T15:51:27Z",
      "updated_at": "2019-06-21T15:51:27Z"
    },
    {
      "author": "kkbruce",
      "author_association": "NONE",
      "body": "Today get 7.0.1 update notification, then open VS Code (with PowerShell extension) then get auto download and setup function. :-p",
      "created_at": "2020-05-15T05:52:49Z",
      "updated_at": "2020-05-15T05:52:49Z"
    },
    {
      "author": "jemiller0",
      "author_association": "NONE",
      "body": "OK, so, now 7.0.2 is out. And again, when opening a PowerShell window, you get the following nag screen.\r\n\r\n```\r\nPowerShell 7.0.1\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\n\r\nhttps://aka.ms/powershell\r\nType 'help' to get help.\r\n\r\n   A new PowerShell stable release is available: v7.0.2\r\n   Upgrade now, or check out the release page at:\r\n     https://aka.ms/PowerShell-Release?tag=v7.0.2\r\n\r\nPS C:\\Windows\\System32>\r\n```\r\n\r\nYou really need an Upgrade command. It is ridiculous to have to download the update from Github and have scroll through a giant list of different releases from different platforms. One shouldn't have to rely on third-party scripts either. It should be built-in functionality.\r\n\r\nThis is kind of like .NET Core, where every time you install a new version, you get another copy. Then, Microsoft figured out it wasn't good for users that have 9 million different copies of .NET Core on there system and they changed it where it now removes minor versions.\r\n\r\nIs PowerShell Core going to replace Windows PowerShell at some point? Microsoft is doing the same confusing business with this that they did with .NET Framework/.NET Core. In other words, a total disaster.\r\n\r\nAlso, speaking of Update-Help could someone at Microsoft fix that so it actually works. For years, on multiple different computers I have always had the problem where that command fails. I don't understand what is so difficult about this. It should just be a matter of downloading some files. If after years and years you can't get something basic like that working, something is wrong.\r\n\r\nI would just assume Microsoft eliminate Windows Update in general and just switch to apt. Again, not sure why this stuff works so much better in the Linux world.",
      "created_at": "2020-06-12T16:49:26Z",
      "updated_at": "2020-06-12T16:49:26Z"
    },
    {
      "author": "jemiller0",
      "author_association": "NONE",
      "body": "Case in point:\r\n```\r\nPS C:\\Windows\\System32> Update-Help                                                                                     Update-Help: Failed to update Help for the module(s) 'ConfigDefender, PSDesiredStateConfiguration, ThreadJob, WindowsUpdateProvider' with UI culture(s) {en-US} : One or more errors occurred. (Response status code does not indicate success: 404 (The specified blob does not exist.).).\r\nEnglish-US help content is available and can be installed using: Update-Help -UICulture en-US.\r\nPS C:\\Windows\\System32>\r\n```\r\n",
      "created_at": "2020-06-12T16:53:17Z",
      "updated_at": "2020-06-12T16:53:17Z"
    },
    {
      "author": "fluffynuts",
      "author_association": "NONE",
      "body": "@jemiller0 this is one of the reasons I've been using `scoop` for pwsh from day 1. Turns out there's a lot of other useful things in there. Perhaps one day winget will allow third-party repos and I'll consider that, but for now, `scoop` is the best I've tried (better than chocolatey)",
      "created_at": "2020-06-17T09:04:37Z",
      "updated_at": "2020-06-17T09:04:37Z"
    },
    {
      "author": "jemiller0",
      "author_association": "NONE",
      "body": "One thing worth noting about Powershell 7.0.2: I'm pretty sure the reason it was released is because there was a security vulnerability in it. A good reason to have it updated by Windows Update automatically. Of course .NET Core isn't handled either, which also had a vulnerability. That is kind of the whole reason there was a system-wide install of .NET Framework. So, you only had to patch one install (or a few of different versions). .NET Core does away with that. As a developer, if you aren't careful, you end up with tens of versions of .NET Core on your system (though I think Microsoft tries to uninstall old minor versions now by default).",
      "created_at": "2020-06-17T11:53:32Z",
      "updated_at": "2020-06-17T11:53:32Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I think it is not real to do something for 7.0 but for next 7.1 version PowerShell MSFT team could sync with .Net team - I guess they are thinking about distribution of security updates for self-contained applications too because a popularity of .Net Core is growing.\r\n",
      "created_at": "2020-06-17T12:08:37Z",
      "updated_at": "2020-06-17T12:08:37Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "So, since PowerShell 7.0.0 (released 3/4/2020) .NET Core 3.1.2.\r\n\r\nPowerShell 7.0.1 (released 5/14/2020) needs \"Microsoft Windows Desktop Runtime 3.1.3 (x64)\" components for our products to work.\r\n\r\nThen, the recent release of PowerShell 7.0.2 (released 6/11/2020), needs \"Microsoft Windows Desktop Runtime 3.1.5 (x64)\" which breaks out products again.\r\n\r\nThis is impacting in our effort to keep improving our products as our customers are suffering from these GA updates.\r\n\r\nIs there going to be monthly GA updates?\r\n\r\n:)\r\n\r\n",
      "created_at": "2020-06-17T21:46:28Z",
      "updated_at": "2020-06-17T21:46:28Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "@jemiller0 I totally get where you're coming from, but you have to understand that there are significant IT workflows already in place for Windows admins to keep software updated and their environments compliant. To that end, we're still working very hard in the 7.1 timeframe to integrate with the Microsoft Download Catalog so that we're integrated with SCCM, WSUS, and Microsoft Update workflows. \r\n\r\nThat being said, you should also check out [winget](https://github.com/Microsoft/winget-cli). We already have a package there, and it works very much like `apt`. Eventually, we expect for `winget` to be more tightly integrated with the aforementioned IT workflows, but today it already works great as an interactive package install/update tool. \r\n\r\nSimilarly, you can use [.NET Global Tools](https://devblogs.microsoft.com/powershell/introducing-powershell-as-net-global-tool/) to keep PowerShell up-to-date if you're already keeping a .NET Core SDK up-to-date on your box. \r\n\r\n@MaximoTrinidad I'm still not totally understanding that issue, as 3.1.3 and 3.1.5 should be backwards/forwards compatible....would you mind filing another issue? ",
      "created_at": "2020-06-22T19:55:34Z",
      "updated_at": "2020-06-22T19:55:34Z"
    },
    {
      "author": "doctordns",
      "author_association": "COLLABORATOR",
      "body": "> I would expect to see Windows Update to take care of the PowerShell Core update process down-the-line. The product is getting very stable. So, why not just let the update handle it!\r\n> \r\n> It the Linux side, all updates are working Great!!\r\n> \r\n> BTW, I agree on not destroying the shortcuts in the Windows task bar.\r\n> \r\n> :)\r\n\r\nTotally agree Windows Update is a great answer for the Windows Platform. But the legal issues over minor things like support are likely to be major barriers in the short term. I am certain Microsoft's legal team can find a long term resolution that would allow Windows Update to be used. But Max, you and I have been around long enough to know the challenge here. :-)  If there is any way we can do to support @joeyaiello over this??\r\n\r\nAs I said earlier, I'd like an Update-PowerShell command built into PowerShell 7. If that command can be made more cross-platform so much the better (but given the nature of Linux that is probably harder than it would be for Windows). We have Update-Help. Yes I agree there are, as is so typical in the PowerShell world, many ways to do this and I have my own hand crafted solutions. \r\n\r\nI come back to the point that warnings should be easily actionable - just telling me I should update is less useful than giving me a simple solution (ie run UPdate-PowerShell).\r\n\r\nAnd as for WInget - I am loath to use any tool that does not honour the sacred vow. Winget is just a powertoy for developers - call me when it's a serious IT Pro and Enterprise Management tool. ",
      "created_at": "2020-07-10T09:45:10Z",
      "updated_at": "2020-07-10T09:45:10Z"
    },
    {
      "author": "tolgabalci",
      "author_association": "NONE",
      "body": "I don't think which command / package-manager does the actual updating matters, but there should be something included in the default PowerShell install that updates to at least the latest minor version.  It should also support the switches mentioned by @doctordns.\r\n\r\nIt should not have to be something like Winget that the user would then have to install yet another tool so that they can install the PowerShell update.  \r\n\r\nIf we are going to have a nagger reminder to update, the reminder should give you the built-in command to run to update and get rid of the nag.",
      "created_at": "2020-07-21T15:26:21Z",
      "updated_at": "2020-07-21T15:26:21Z"
    },
    {
      "author": "BrandonBoone",
      "author_association": "NONE",
      "body": "At a minimum, it would be nice if the upgrade notification made it clear that there is no built-in \"Upgrade\" feature and you have to go to the GitHub release page. \r\n\r\n> A new PowerShell stable release is available: v7.0.3\r\n   Upgrade now, or check out the release page at:\r\n     https://aka.ms/PowerShell-Release?tag=v7.0.3\r\n\r\nI saw this message thinking I should run some command and went searching for how to do this (that's how I found this issue). IMO, the \", or\" makes this confusing. \r\n\r\n>Upgrade now by going to https://aka.ms/PowerShell-Release?tag=v7.0.3\r\n\r\nor something similar would remove/reduce the confusion. \r\n",
      "created_at": "2020-08-04T17:45:02Z",
      "updated_at": "2020-08-04T17:45:32Z"
    },
    {
      "author": "smjltd",
      "author_association": "NONE",
      "body": "use this work around mean while \r\n`iex \"& { $(irm https://aka.ms/install-powershell.ps1) } -UseMSI\"`\r\n\r\nhttps://www.thomasmaurer.ch/2019/07/how-to-install-and-update-powershell-7/\r\n\n\n<blockquote><img src=\"https://www.thomasmaurer.ch/wp-content/uploads/2019/06/PowerShell-7-Installer.jpg\" width=\"48\" align=\"right\"><div><img src=\"https://www.thomasmaurer.ch/wp-content/uploads/2018/06/cropped-icon1024-192x192.png\" height=\"14\"> Thomas Maurer</div><div><strong><a href=\"https://www.thomasmaurer.ch/2019/07/how-to-install-and-update-powershell-7/\">How to Install and Update PowerShell 7 - Thomas Maurer</a></strong></div><div>This blog post covers how you can simply install or update PowerShell 7 with a single command line One-liner. Check it out right now!</div></blockquote>",
      "created_at": "2020-08-16T06:42:15Z",
      "updated_at": "2020-08-16T06:42:17Z"
    },
    {
      "author": "krokofant",
      "author_association": "NONE",
      "body": "Having an autoinstaller that keeps the old settings would be nice. Now the _right click to open_ feature is disabled via upgrades from choco. Using the install-powershell.ps1 seems a bit easier by specifying the option for each install/upgrade:\r\n```\r\niex \"& { $(irm https://aka.ms/install-powershell.ps1) } -UseMSI -AddExplorerContextMenu -Quiet\"\r\n```",
      "created_at": "2020-09-26T13:53:18Z",
      "updated_at": "2020-09-26T13:53:18Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@krokofant Please open new issue with repro steps.",
      "created_at": "2020-09-27T18:20:53Z",
      "updated_at": "2020-09-27T18:20:53Z"
    },
    {
      "author": "Yaron-Jack",
      "author_association": "NONE",
      "body": "I saw this at a different website and It helped me-Cheers!\r\n\r\n Update-Help -ErrorAction SilentlyContinue\r\n\r\n",
      "created_at": "2020-10-01T08:12:41Z",
      "updated_at": "2020-10-01T08:12:41Z"
    },
    {
      "author": "lauxjpn",
      "author_association": "NONE",
      "body": "Hmm, getting the following message in PowerShell:\r\n\r\n```\r\nA new PowerShell stable release is available: v7.1.1\r\n   Upgrade now, or check out the release page at:\r\n     https://aka.ms/PowerShell-Release?tag=v7.1.1\r\n```\r\n\r\nHowever, executing `iex \"& { $(irm https://aka.ms/install-powershell.ps1) } -UseMSI\"` still tries to install `7.1.0`:\r\n\r\n```\r\nVERBOSE: About to download package from 'https://github.com/PowerShell/PowerShell/releases/download/v7.1.0/PowerShell-7.1.0-win-x64.msi'\r\n```\r\n\r\nA simple `Update-PowerShell` command that reliably works is long overdue.",
      "created_at": "2021-01-15T09:18:23Z",
      "updated_at": "2021-01-15T09:18:23Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@lauxjpn Please open new issue for your report.",
      "created_at": "2021-01-15T09:39:58Z",
      "updated_at": "2021-01-15T09:39:58Z"
    },
    {
      "author": "doctordns",
      "author_association": "COLLABORATOR",
      "body": "I think that the issue seen by @lauxjpn is a timing one. I saw similar issues in the past. I can duplicate the issue but can wait a day or two. \r\n\r\nThe joys of release management.\r\n\r\nTo assist, I have s short script that gets the GitHub metadata: \r\n\r\n```powershell\r\nFunction Get-PWSH7ReleaseInformation {\r\n# Get details of overall PowerShell 7 information\r\n  $FR = 'https://raw.githubusercontent.com/' +\r\n  'PowerShell/PowerShell/master/tools/metadata.json'\r\n  $MetaFullRelease   = Invoke-RestMethod $FR\r\n# Get details of latest preview\r\n  $MetaPreview       = Invoke-RestMethod 'https://aka.ms/pwsh-buildinfo-Preview'\r\n# Get details of the latest daily build\r\n  $MetadataDaily     = Invoke-RestMethod 'https://aka.ms/pwsh-buildinfo-daily'\r\n\r\n# Display  this information\r\n  'PowerShell 7 Status:'\r\n  $MetaFullRelease\r\n  'Preview information:'\r\n  $MetaPreview\r\n  'Daily Build information'\r\n  $MetadataDaily\r\n}\r\nGet-PWSH7ReleaseInformation\r\n```\r\n\r\nIf I run this script today, I see this:\r\n```console\r\nPS C:\\foo> .\\get-PWSH7Info.ps1\r\nPowerShell 7 Status:\r\n\r\nStableReleaseTag    : v7.1.0\r\nPreviewReleaseTag   : v7.2.0-preview.2\r\nServicingReleaseTag : v7.0.3\r\nReleaseTag          : v7.1.0\r\nLTSReleaseTag       : {v7.0.3}\r\nNextReleaseTag      : v7.2.0-preview.3\r\nLTSRelease          : False\r\n\r\nPreview information:\r\nReleaseDate : 2020-12-15T21:33:47Z\r\nBlobName    : v7-2-0-preview-2\r\nReleaseTag  : v7.2.0-preview.2\r\n\r\nDaily Build information\r\nReleaseDate : 15/01/2021 01:39:33\r\nBlobName    : v7-2-0-daily-20210115\r\nReleaseTag  : v7.2.0-daily.20210115\r\n```\r\nMy advice: be patient grasshopper.",
      "created_at": "2021-01-15T11:28:32Z",
      "updated_at": "2021-01-15T11:32:55Z"
    },
    {
      "author": "lauxjpn",
      "author_association": "NONE",
      "body": "> My advice: be patient grasshopper.\r\n\r\nNo, when the PowerShell notifies you of an available update, then all the ways to update PowerShell to the latest release need to already work.\r\n\r\n> I saw similar issues in the past.\r\n\r\nIn that case, this issue needs to be fixed, verified with tests and automated, so that it will not happen again in the future.",
      "created_at": "2021-01-17T03:01:27Z",
      "updated_at": "2021-01-17T03:01:27Z"
    },
    {
      "author": "iamwwc",
      "author_association": "NONE",
      "body": "How to disable annoying  `A new PowerShell stable release is available: v7.1.1 Upgrade now` showing again and again  when I open terminal. I don't want to be forced to update :(",
      "created_at": "2021-01-22T15:11:01Z",
      "updated_at": "2021-01-22T15:11:01Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@iamwwc You can set environment variable POWERSHELL_UPDATECHECK=LTS (or =Off).",
      "created_at": "2021-01-22T17:32:47Z",
      "updated_at": "2021-01-22T17:32:47Z"
    },
    {
      "author": "markolbert",
      "author_association": "NONE",
      "body": "> use this work around mean while\r\n> `iex \"& { $(irm https://aka.ms/install-powershell.ps1) } -UseMSI\"`\r\n> \r\n> https://www.thomasmaurer.ch/2019/07/how-to-install-and-update-powershell-7/\r\n> \r\n> > <img alt=\"\" width=\"48\" src=\"https://camo.githubusercontent.com/d3fa05c3ff3a62dccb2aa225378811991253b48431d26397080e6ddf71188a96/68747470733a2f2f7777772e74686f6d61736d61757265722e63682f77702d636f6e74656e742f75706c6f6164732f323031392f30362f506f7765725368656c6c2d372d496e7374616c6c65722e6a7067\"><img alt=\"\" height=\"14\" src=\"https://camo.githubusercontent.com/8747248f3c915a7be5e1d9abb6add46a66cd0d06e0cdea81a2980e647aba96b6/68747470733a2f2f7777772e74686f6d61736d61757265722e63682f77702d636f6e74656e742f75706c6f6164732f323031382f30362f63726f707065642d69636f6e313032342d313932783139322e706e67\"> Thomas Maurer**[How to Install and Update PowerShell 7 - Thomas Maurer](https://www.thomasmaurer.ch/2019/07/how-to-install-and-update-powershell-7/)**This blog post covers how you can simply install or update PowerShell 7 with a single command line One-liner. Check it out right now!\r\n\r\nJust did this -- twice -- and it doesn't work. Or rather, it completes with no errors...but I still get the helpful prompt \"there's a new version\" the next time I open a Terminal window. Even after rebooting.\n\n<blockquote><img src=\"https://www.thomasmaurer.ch/wp-content/uploads/2019/06/PowerShell-7-Installer.jpg\" width=\"48\" align=\"right\"><div><img src=\"https://www.thomasmaurer.ch/wp-content/uploads/2018/06/cropped-icon1024-192x192.png\" height=\"14\"> Thomas Maurer</div><div><strong><a href=\"https://www.thomasmaurer.ch/2019/07/how-to-install-and-update-powershell-7/\">How to Install and Update PowerShell 7 - Thomas Maurer</a></strong></div><div>This blog post covers how you can simply install or update PowerShell 7 with a single command line One-liner. Check it out right now!</div></blockquote>",
      "created_at": "2021-02-12T15:52:41Z",
      "updated_at": "2021-02-12T15:52:43Z"
    },
    {
      "author": "jdhitsolutions",
      "author_association": "COLLABORATOR",
      "body": "I would never expect Microsoft to include such a command natively. What I would _expect_, and what I believe is already happening, is that updates be available through update services, SCCM, the Microsoft Store, and third-party repositories. There are locations where I am expecting enterprise-level admins are already managing software deployments. For all other use cases, I don't see a problem with existing community modules like PSReleaseTools or even tools like winget. We never had an update command in Windows PowerShell. We got new versions with new operating system releases, **and** they were available as downloads. I don't see why PowerShell 7.x needs to be any different.\r\n\r\nBut...all of these backend pieces need to be in place before the nag prompt appears. In fact, I'd like the nag prompt to be delayed for at least a week after the backend pieces have been deployed.",
      "created_at": "2021-06-14T17:39:37Z",
      "updated_at": "2021-06-14T17:39:37Z"
    },
    {
      "author": "Viajaz",
      "author_association": "NONE",
      "body": "https://devblogs.microsoft.com/powershell/preview-updating-powershell-7-2-with-microsoft-update/ (June 16th, 2021)\r\n\r\n> But with Microsoft Update, you\u2019ll get the latest PowerShell 7 updates directly in your traditional Windows Update (WU) management flow, whether that\u2019s with Windows Update for Business, WSUS, SCCM, or the interactive WU dialog in Settings. With today\u2019s announcement, you\u2019ll soon be able to try this new update process for yourself on the latest PowerShell 7.2 previews.\r\n\r\nhttps://github.com/PowerShell/PowerShell/discussions/15510\r\n\r\n<blockquote><img src=\"https://devblogs.microsoft.com/powershell/wp-content/uploads/sites/30/2018/09/Powershell_256.png\" width=\"48\" align=\"right\"><div><img src=\"https://devblogs.microsoft.com/powershell/wp-content/uploads/sites/30/2019/02/Powershell_2561.png\" height=\"14\"> PowerShell Team</div><div><strong><a href=\"https://devblogs.microsoft.com/powershell/?p=19055\">Preview updating PowerShell 7.2 with Microsoft Update</a></strong></div><div>Updating PowerShell 7 with Microsoft Update Today, we\u2019re happy to announce that we\u2019re taking the first steps to making PowerShell 7 easier than ever to update on Windows 10 and Server. In the past, Windows users were notified in their console that a new version of PowerShell 7 is available,</div></blockquote>",
      "created_at": "2021-09-08T04:06:03Z",
      "updated_at": "2021-09-08T04:07:15Z"
    },
    {
      "author": "Luk164",
      "author_association": "NONE",
      "body": "Did you try using winget? I use `winget upgrade pwsh` and it works pretty well\r\nEdit: I see I am not first to suggest this, oh well...",
      "created_at": "2021-10-17T19:35:19Z",
      "updated_at": "2021-10-17T19:35:58Z"
    },
    {
      "author": "XMuli",
      "author_association": "NONE",
      "body": "> @iamwwc You can set environment variable POWERSHELL_UPDATECHECK=LTS (or =Off).\r\n\r\n![image](https://user-images.githubusercontent.com/33887845/165432300-50167d47-45a3-42a3-83e9-1e08544e015b.png)\r\n\r\nToday it suddenly prompted me\r\nBut this answer helped me. I simply want either an easy upgrade or no prompt to upgrade for now.\r\nOf course, if I had a free moment, I would want an easy command to automatically upgrade to \"LTS/stable release\"",
      "created_at": "2022-04-27T03:12:36Z",
      "updated_at": "2022-04-27T03:12:36Z"
    },
    {
      "author": "kilasuit",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT / @TravisEz13  I think with the fact that we now have the update process in place via MU and the required Registry Keys that this could be seen as closed as resolved?",
      "created_at": "2022-04-27T10:48:29Z",
      "updated_at": "2022-04-27T10:48:29Z"
    },
    {
      "author": "doctordns",
      "author_association": "COLLABORATOR",
      "body": "I kind of disagree. \r\n\r\n1. There is still no `Update-PowerShell` command to make the update simple. The IT Pro needs to go to github (as noted in the issue(.\r\n2. MU takes a MONTH before it kicks in.  Why does an IT Pro want to sit for a month being nagged each time they open a console?  \r\n\r\nThis is not really simple enough. We can do better.\r\n\r\n",
      "created_at": "2022-04-27T14:11:32Z",
      "updated_at": "2022-04-27T14:11:32Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "While there is no **cmdlet** to update PowerShell, most modern versions of Windows 10 (and all versions of Windows 11) come with `winget`.  So upgrading an MSI or store-based installation of PowerShell is easy using `winget`:\r\n```\r\nwinget upgrade Microsoft.PowerShell\r\n```",
      "created_at": "2022-04-27T15:56:06Z",
      "updated_at": "2022-04-27T15:56:06Z"
    },
    {
      "author": "fluffynuts",
      "author_association": "NONE",
      "body": "`scoop` can also work here - both have their gotchas, eg https://github.com/microsoft/winget-cli/issues/2123 and scoop breaking on updating pwsh even if all pwsh sessions are killed because it uses pwsh to do all the things :|",
      "created_at": "2022-04-27T20:58:50Z",
      "updated_at": "2022-04-27T20:58:50Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "Marking as answered per [this comment](https://github.com/PowerShell/PowerShell/issues/8663#issuecomment-1110855209)",
      "created_at": "2022-04-29T00:37:11Z",
      "updated_at": "2022-04-29T00:37:11Z"
    },
    {
      "author": "BrandonBoone",
      "author_association": "NONE",
      "body": "I still stand by my [original comment](https://github.com/PowerShell/PowerShell/issues/8663#issuecomment-668734793).\r\n\r\nThe prompt is still completely misleading. \r\n\r\nHow would I \"Upgrade now\"? What is the command? What is the process to do this right now? If this isn't on the roadmap, then at least change the prompt to send the user to the releases page **only** and call it a day.\r\n",
      "created_at": "2022-04-29T03:08:24Z",
      "updated_at": "2022-04-29T03:09:15Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2022-04-30T12:00:41Z",
      "updated_at": "2022-04-30T12:00:41Z"
    },
    {
      "author": "kilasuit",
      "author_association": "COLLABORATOR",
      "body": "@doctordns \r\n1) should never happen because there is no need for a cmdlet to do this when a proper IT Pro would be making use of MU to update their tooling.\r\n2) MU update time can & should be decreased, however that isn't an issue that can be resolved in this repository and will need other teams to make it happen.",
      "created_at": "2022-05-03T05:01:38Z",
      "updated_at": "2022-05-03T05:01:38Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@kilasuit \r\n> MU update time can & should be decreased\r\n\r\nThe only way we (PowerShell) can decrease the time in MU is to build the update and delay the updates for 1-4 weeks.  If we want faster times, we need to work with Windows to get the store version of PowerShell in parity with a traditionally installed PowerShell.  Those conversations are happening.\r\n\r\n@BrandonBoone  Please open another issue about the language/function of the update prompt.\r\n\r\n",
      "created_at": "2022-05-03T19:04:22Z",
      "updated_at": "2022-05-03T19:04:22Z"
    }
  ],
  "created_at": "2019-01-16T18:08:32Z",
  "number": 8663,
  "state": "closed",
  "title": "Updating PowerShell Core should be simpler",
  "updated_at": "2022-05-03T19:04:22Z"
}