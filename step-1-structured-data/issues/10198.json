{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10198",
  "author": "msftrncs",
  "body": "Continuing my investigation of tab completion quoting/escaping failures:\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\n$a = @{ '3hello' = 'a'}\r\n\r\n$a.<TAB> # select `3hello` property from list, then execute.\r\n```\r\n\r\n# Expected behavior\r\n\r\nthe finished completion to be:\r\n```PowerShell\r\n$a.'3hello'\r\n```\r\n\r\n# Actual behavior\r\n\r\n```none\r\n$a.3hello\r\n```\r\nWhich causes an error 'missing property name'.\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.2.2\r\nPSEdition                      Core\r\nGitCommitId                    6.2.2\r\nOS                             Microsoft Windows 10.0.18941\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n# Additionally\r\n\r\nTab completion after `$a.'` switches to file name completion.\r\n\r\nThe code that handles this appears to be at:\r\nhttps://github.com/PowerShell/PowerShell/blob/48c7e112db8f0506a74555c83ecb8bec509b6597/src/System.Management.Automation/engine/CommandCompletion/CompletionCompleters.cs#L6586-L6591\r\n\r\nThe field `s_charactersRequiringQuotes` is used mostly for variable name checks, but is also inadequate for that purpose (see #10006), but fails here because it doesn't handle the condition of numeric digits in the first character require quoting.\r\nhttps://github.com/PowerShell/PowerShell/blob/48c7e112db8f0506a74555c83ecb8bec509b6597/src/System.Management.Automation/engine/CommandCompletion/CompletionCompleters.cs#L4565-L4567\r\n\r\nIn PowerShell code, I would use REGEX: `^[\\p{L}_][\\w]*$`.  If this regex fails on a non-empty name, the property name must be quoted.  However there is probably a quicker method in C# using the `[CharExtensions]` class using `IsIdentifierStart()` (first character) and `IsIdentifierFollow()` (subsequent characters), and quote the property if the response is FALSE.\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "msftrncs",
      "author_association": "CONTRIBUTOR",
      "body": "I have a start to a PR for this issue.  I've created a new member of `CodeGeneration` to check for and quote member names when they need it.",
      "created_at": "2019-07-22T02:51:22Z",
      "updated_at": "2019-07-22T02:51:22Z"
    }
  ],
  "created_at": "2019-07-21T22:53:11Z",
  "labels": [
    "Issue-Question",
    "WG-Engine"
  ],
  "number": 10198,
  "state": "open",
  "title": "Member tab completion fails to quote member names not directly acceptable",
  "updated_at": "2019-07-22T10:57:17Z"
}