{
  "_url": "https://github.com/PowerShell/PowerShell/issues/14638",
  "author": "mklement0",
  "body": "<sup>Note: Originally submitted as a suggestion, now reclassified as as bug and rewritten accordingly.</sup>\r\n\r\nDue to a presumed oversight, input objects to `Out-String -Stream` that happen to be _multi-line_ strings are _not_ split into individual lines, even though doing so is the purpose of the `-Stream` switch - see [this Stack Overflow answer](https://stackoverflow.com/a/65764914/45375) for background information.\r\n\r\n\r\n## Steps to reproduce\r\n\r\n```powershell\r\n# Pass a single 3-line string, whose lines should be emitted individually.\r\n\"a`nb`nc\" | Out-String -Stream | Should -Be a, b, c\r\n```\r\n\r\nNote: As with `Get-Content`, CR, CRLF, and LF newlines should be recognized interchangeably.\r\n\r\n## Expected behavior\r\n\r\n\r\nThe test should succeed.\r\n\r\n## Actual behavior\r\n\r\n\r\nThe test fails:\r\n\r\n```none\r\nExpected @('a', 'b', 'c'), but got 'a b c'\r\n```\r\n\r\nThat is, the multi-line input string is passed through as-is (Pester converts it to a single-line representation for the sake of a concise error message).\r\n\r\n## Environment data\r\n\r\n```none\r\nPowerShell Core 7.2.0-preview.2\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "[From docs for Stream parameter](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/out-string?view=powershell-7.1):\r\n> Indicates that the cmdlet sends _a separate string for each line of an input object_. By default, the strings for each object are accumulated and sent as a single string.\r\n\r\nIt seems the request follows the docs, yes?",
      "created_at": "2021-01-20T09:10:19Z",
      "updated_at": "2021-01-20T09:10:19Z"
    },
    {
      "author": "iRon7",
      "author_association": "NONE",
      "body": "If this request is accepted, I think it should split lines on a common newline definition: e.g. `'\\r?\\n'` (and not on `[Environment]::NewLine`) as  the data might be interchanged between operating systems as suggested in the related StackOverflow question.",
      "created_at": "2021-01-20T10:44:40Z",
      "updated_at": "2021-01-20T10:44:40Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov, yes, implementing the proposal would make the behavior consistent with the current documentation, though, prompted by @iRon7, a change to the `Out-String` help topic is pending to note the _actual_ current behavior.\r\n\r\n@iRon7, good point - I've updated the OP accordingly.\r\n\r\n",
      "created_at": "2021-01-20T15:16:49Z",
      "updated_at": "2021-01-20T15:17:04Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I would say that this is a _bug_. In this case, we could fix it quickly.",
      "created_at": "2021-01-20T15:29:12Z",
      "updated_at": "2021-01-20T15:29:12Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Good point, @iSazonov - can you please relabel the issue?",
      "created_at": "2021-01-20T15:35:38Z",
      "updated_at": "2021-01-20T15:35:38Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "It seems that this behavior is consistent with Windows PowerShell so the docs should be updated to reflect the current behavior otherwise it's a breaking change.  `-Stream` appears to simply output a string for each input object.  A string input object that contains newlines is still a single object.  ",
      "created_at": "2021-01-20T21:38:53Z",
      "updated_at": "2021-01-20T21:38:53Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT\r\n\r\n> `-Stream` appears to simply output a string for each input object\r\n\r\nIt doesn't, and it shouldn't  (and, conceptually, it cannot) - please see https://github.com/MicrosoftDocs/PowerShell-Docs/issues/7153#issuecomment-763800157",
      "created_at": "2021-01-20T21:41:14Z",
      "updated_at": "2021-01-20T22:17:26Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> It seems that this behavior is consistent with Windows PowerShell\r\n\r\nWindows PowerShell was always very conservative - minor issues was never fixed. I think it was justified. As a result, users are often unpleasantly surprised and use workarounds. If you look at how many similar problems @mklement0  found, it becomes clear how often users are forced to do this.\r\nI strongly vote to fix such issues in 7.3 (skip for next 7.2 LTS) so that users get more clean PowerShell language in 7.4 LTS (I hope it will already replace Windows PowerShell :-) )\r\n",
      "created_at": "2021-01-21T04:19:52Z",
      "updated_at": "2021-01-21T04:19:52Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks, @iSazonov. \r\n\r\nYes, the behavior is consistent with Windows PowerShell, but all that means is that the bug is present there too.\r\nWhile there is buggy / questionable legacy behavior that users indeed either (a) have _taken advantage_ of or (b) have employed workarounds for that _a fix would break_, neither applies in this case:\r\n\r\n* The bug results in unequivocally unhelpful behavior. \r\n* Existing workarounds would _not_ break if we fix this (the workaround is to apply line-splitting manually, which would simple be a (then-unneeded) no-op).\r\n\r\nTherefore, I think a fix for 7.2 is perfectly appropriate.\r\n\r\nTo save others having to follow the link in my previous comment about the intent behind and current behavior of `-Stream`:\r\n\r\n* `Out-String` by default emits a single multi-line string that is the formatted string representation of all of its input, as you would see it in the console, including a trailing newline (which arguably shouldn't be added, but that's a separate discussion - see https://github.com/PowerShell/PowerShell/issues/14444).\r\n\r\n* If you add `-Stream`, the lines of this string are output one by one - except if multi-line strings happen to be among the input objects, which are _not_ split into their lines (they are output as is); this is the bug at hand.\r\n\r\nThat is, even the lines that make up the formatting-system's string representation of a _single_ object are output _individually_; e.g.:\r\n\r\n```powershell\r\n# Use Out-String -Stream and enclose all resulting lines in [...]\r\nPS> Get-Item / | Out-String -Stream | ForEach-Object { \"[$($_.TrimEnd())]\" }\r\n[]\r\n[]\r\n[    Directory:]\r\n[]\r\n[]\r\n[Mode                 LastWriteTime         Length Name]\r\n[----                 -------------         ------ ----]\r\n[d--hs-         1/21/2021   9:40 AM                C:\\]\r\n[]\r\n[]\r\n```\r\n\r\n\r\n\r\n",
      "created_at": "2021-01-21T15:14:40Z",
      "updated_at": "2021-01-21T15:14:40Z"
    }
  ],
  "created_at": "2021-01-20T02:53:04Z",
  "number": 14638,
  "state": "open",
  "title": "`Out-String -Stream` unexpectedly does not split multi-line input strings into individual lines too",
  "updated_at": "2021-07-15T18:58:28Z"
}