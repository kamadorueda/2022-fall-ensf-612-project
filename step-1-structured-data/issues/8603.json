{
  "_url": "https://github.com/PowerShell/PowerShell/issues/8603",
  "author": "SteveL-MSFT",
  "body": "## PR Summary\r\n\r\nBased on @PowerShell/powershell-committee decision, standardizing on `[Console]::Clear()` on all platforms and removing `clear` alias on non-Windows.\r\n\r\nFix https://github.com/PowerShell/PowerShell/issues/8554\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` to the beginning of the title and remove the prefix when the PR is ready.\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] User-facing [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed - Issue link:\r\n- **Testing - New and feature**\r\n    - [ ] Not Applicable or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n        - [ ] [Add `[feature]` if the change is significant or affects feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\r\n",
  "closed_at": "2019-01-08T17:38:57Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> removing clear alias on non-Windows\r\n\r\n@SteveL-MSFT Please reword the PR description. We are not \"removing on non-Windows\" but \"restoring on Windows\".",
      "created_at": "2019-01-08T06:43:09Z",
      "updated_at": "2019-01-08T06:43:09Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT, while we're at it, perhaps we can make the function an advanced one so that it doesn't quietly accept and ignore arbitrary arguments (even though none of the common parameters make sense).\r\n\r\nE.g, the following is currently quietly accepted:\r\n\r\n```powershell\r\nClear-Host -NoSuchParam\r\n```\r\n",
      "created_at": "2019-01-08T10:26:30Z",
      "updated_at": "2019-01-08T10:26:30Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@mklement0 What benefits we get?",
      "created_at": "2019-01-08T13:30:08Z",
      "updated_at": "2019-01-08T13:30:08Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov:\r\n\r\nThe benefit is an abstract, general one, for consistency and predictability:\r\n\r\nDon't make any command accept parameters that it is not designed to accept; in particular, don't make it _quietly ignore_ such parameters.\r\n",
      "created_at": "2019-01-08T13:36:22Z",
      "updated_at": "2019-01-08T13:36:41Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "In general I would think it best practice for any \"official\" functions be thoroughly implemented, as @mklement0 says. It sets a bad example if we go around including low-quality code in official distributions, and it goes against years of best practices to widely distribute a function that quietly ignores arbitrary parameters.",
      "created_at": "2019-01-08T13:38:59Z",
      "updated_at": "2019-01-08T13:38:59Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov not sure what you mean by \"restoring on Windows\" since prior to this PR, the `clear` alias is on Windows, Linux, and macOS.  This PR retains `clear` alias on Windows and removes it from Linux and macOS.\r\n\r\n@mklement0 personally, I think we can consider extending `Clear-Host` to have a `-IncludeScrollbackBuffer` type of switch, but that changing it to an advanced function is outside the scope of this PR.  I would suggest opening a new issue.  If we go that route, I would suggest having it as an actual C# cmdlet which can be extended.",
      "created_at": "2019-01-08T17:23:08Z",
      "updated_at": "2019-01-08T17:23:08Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT Sorry, I lost the context.",
      "created_at": "2019-01-08T17:37:45Z",
      "updated_at": "2019-01-08T17:37:45Z"
    }
  ],
  "created_at": "2019-01-07T21:57:36Z",
  "number": 8603,
  "state": "closed",
  "title": "Update `Clear-Host` to simply call `[Console]::Clear()` on all platforms and remove `clear` alias on Unix systems",
  "updated_at": "2019-01-08T20:01:46Z"
}