{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11825",
  "author": "ThomasNieto",
  "body": "`Export-FormatData` only exports first view if the `InstanceId` is set to a blank `guid`. I am manually creating `ExtendedTypeDefinition` objects in order to export to `*.format.ps1xml`. I was able to workaround the issue by exporting the object to clixml and set a random `guid` and it exported successfully.\r\n\r\n![image](https://user-images.githubusercontent.com/38873752/74205994-34296480-4c3f-11ea-9046-c9fa9c1ecf5f.png)\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\nDescribe 'Export-FormatData' {\r\n    It 'Should be able to export multiple views' {\r\n        $listControl = [System.Management.Automation.ListControl]::Create().StartEntry().AddItemProperty('test').AddItemProperty('test2').EndEntry().EndList()\r\n        $tableControl = [System.Management.Automation.TableControl]::Create().StartRowDefinition().AddPropertyColumn('test').AddPropertyColumn('test2').EndRowDefinition().EndTable()\r\n\r\n        $listView = [System.Management.Automation.FormatViewDefinition]::new('Default', $listControl)\r\n        $tableView = [System.Management.Automation.FormatViewDefinition]::new('Default', $tableControl)\r\n\r\n        $list = New-Object System.Collections.Generic.List[System.Management.Automation.FormatViewDefinition]\r\n        $list.Add($listView)\r\n        $list.Add($tableView)\r\n\r\n        $typeDef = [System.Management.Automation.ExtendedTypeDefinition]::new('TestTypeName', $list)\r\n        $typeDef | Export-FormatData -Path C:\\temp\\test.format.ps1xml\r\n        [xml]$xml = Get-Content C:\\temp\\test.format.ps1xml\r\n        @($xml.Configuration.ViewDefinitions.View).Count | Should -BeGreaterThan 1\r\n    }\r\n}\r\n```\r\n\r\n# Expected behavior\r\n\r\nTest should pass\r\n\r\n# Actual behavior\r\n\r\n```none\r\nDescribing Export-FormatData\r\n    [-] Should be able to export multiple views 29ms\r\n      at <ScriptBlock>, C:\\Temp\\format.tests.ps1: line 16\r\n      16:         @($xml.Configuration.ViewDefinitions.View).Count | Should -BeGreaterThan 1\r\n      Expected the actual value to be greater than 1, but got 1.\r\n```\r\n\r\n# Environment data\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-rc.2\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-rc.2\r\nOS                             Microsoft Windows 10.0.18363\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2020-02-20T14:57:27Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "What `*.format.ps1xm` contain empty GUIDs? Custom? In the case we should add the check at load time.",
      "created_at": "2020-02-11T09:38:30Z",
      "updated_at": "2020-02-11T09:38:30Z"
    },
    {
      "author": "ThomasNieto",
      "author_association": "CONTRIBUTOR",
      "body": "The `*.format.ps1xml` files do not contain a reference to InstanceId. `[FormatViewDefinition]` has a hidden read-only property `InstanceId` of type `System.Guid` and if you manually create a `[FormatViewDefinition]` object, `InstanceId` set to all zeros. I don't think that is necessarily a bad thing but `Export-FormatData` uses that property. If `InstanceId` is set to all zeros it doesn't properly export all formats.\r\n\r\n```powershell\r\nPS C:\\> $listControl = [System.Management.Automation.ListControl]::Create().StartEntry().AddItemProperty('test').AddItemProperty('test2').EndEntry().EndList()\r\n>> $tableControl = [System.Management.Automation.TableControl]::Create().StartRowDefinition().AddPropertyColumn('test').AddPropertyColumn('test2').EndRowDefinition().EndTable()\r\n>>\r\n>> $listView = [System.Management.Automation.FormatViewDefinition]::new('Default', $listControl)\r\n>> $tableView = [System.Management.Automation.FormatViewDefinition]::new('Default', $tableControl)\r\n>>\r\n>> $listView.InstanceId\r\n>> $tableView.InstanceId\r\n\r\nGuid\r\n----\r\n00000000-0000-0000-0000-000000000000\r\n00000000-0000-0000-0000-000000000000\r\n````\r\nI think it has something to do with this section of code.\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/35c7b7842e7e206f8a6ccc2ab7077a49ad9e7fa6/src/System.Management.Automation/FormatAndOutput/common/FormatXMLWriter.cs#L81-L93\r\n",
      "created_at": "2020-02-11T15:41:13Z",
      "updated_at": "2020-02-11T15:41:13Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "FormatViewDefinition doesn't initialize InstanceId in the code path. I don't know why.",
      "created_at": "2020-02-11T17:44:00Z",
      "updated_at": "2020-02-11T17:44:00Z"
    },
    {
      "author": "ThomasNieto",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov this is the code section you're talking about correct? The public constructor never initializes `InstanceId`. There is an internal constructor that sets `InstanceId`. I wonder if there would be an issue setting `InstanceId` to a new guid in the public constructor.\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/35c7b7842e7e206f8a6ccc2ab7077a49ad9e7fa6/src/System.Management.Automation/FormatAndOutput/common/DisplayDatabase/displayDescriptionData.cs#L683-L700\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/35c7b7842e7e206f8a6ccc2ab7077a49ad9e7fa6/src/System.Management.Automation/engine/serialization.cs#L7571-L7578",
      "created_at": "2020-02-11T19:16:52Z",
      "updated_at": "2020-02-11T19:16:52Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> The public constructor never initializes InstanceId. \r\n\r\nThis looks like a bug because internal cache uses InstanceId as key.\r\n/cc @SteveL-MSFT Could you please comment?",
      "created_at": "2020-02-12T06:46:50Z",
      "updated_at": "2020-02-12T06:46:50Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I'm not familiar with this specific aspect of the code.  However, looking at the comments in the code, it seems that InstanceId is expected to be unique to differentiate views with the same name.  So it seems that generating a guid where one isn't provided is the right thing to do.",
      "created_at": "2020-02-19T22:41:45Z",
      "updated_at": "2020-02-19T22:41:45Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:This issue was addressed in #11896, which has now been successfully released as `v7.1.0-preview.1`.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.1.0-preview.1)\n",
      "created_at": "2020-03-26T17:47:48Z",
      "updated_at": "2020-03-26T17:47:48Z"
    }
  ],
  "created_at": "2020-02-11T01:55:26Z",
  "labels": [
    "Issue-Bug",
    "WG-Cmdlets-Utility"
  ],
  "number": 11825,
  "state": "closed",
  "title": "Export-FormatData only exports first view",
  "updated_at": "2020-03-26T17:47:48Z"
}