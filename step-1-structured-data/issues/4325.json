{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4325",
  "author": "darrenstarr",
  "body": "<!--\r\n\r\nIf it is a bug report:\r\n- make sure you are able to repro it on the latest released version. \r\nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\r\n- Search the existing issues.\r\n- Refer to the [FAQ](../docs/FAQ.md).\r\n- Refer to the [known issues](../docs/KNOWNISSUES.md).\r\n- Fill out the following repro template\r\n\r\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\r\n-->\r\n\r\nSteps to reproduce\r\n------------------\r\nThis bug is documented in detail at [my Github cMultipleClassResourcesTest](https://github.com/darrenstarr/cMultipleClassResourcesTest)\r\n\r\n```powershell\r\nCould not find the generate schema file C:\\WINDOWS\\system32\\config\\systemprofile\\AppData\\Local\\dsc\\cTestResource1.1.0.cTestResource1.schema.mof\r\nCould not find the generate schema file C:\\WINDOWS\\system32\\config\\systemprofile\\AppData\\Local\\dsc\\cTestResource2.1.0.cTestResource2.schema.mof\r\n```\r\n\r\nThere are multiple issues that may be attached to this. But this morning it was working before I played with the local configuration manager to force reloading of modules.\r\n\r\nIf I manually alter the file names from cMultipleClassResourcesTest.1.0.cTestResource1.schema.mof and cMultipleClassResourcesTest.1.0.cTestResource2.schema.mof to the expected file names, there resources run as expected.\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```\r\nThe file names that are created when generating the schema mofs should match the file names used when referencing the mofs\r\n\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n```\r\nThe schema mof filenames are produced using the DSC resource module name but the file names referenced when executing the configuration mof references the resource name, not the module name\r\n\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\nName                           Value                                                                                                                                                                                                                    \r\n----                           -----                                                                                                                                                                                                                    \r\nPSVersion                      5.1.14393.1480                                                                                                                                                                                                           \r\nPSEdition                      Desktop                                                                                                                                                                                                                  \r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}                                                                                                                                                                                                  \r\nBuildVersion                   10.0.14393.1480                                                                                                                                                                                                          \r\nCLRVersion                     4.0.30319.42000                                                                                                                                                                                                          \r\nWSManStackVersion              3.0                                                                                                                                                                                                                      \r\nPSRemotingProtocolVersion      2.3                                                                                                                                                                                                                      \r\nSerializationVersion           1.1.0.1                                                                                                                                                                                                                  \r\n\r\n```\r\n",
  "closed_at": "2017-07-24T05:23:23Z",
  "comments": [
    {
      "author": "darrenstarr",
      "author_association": "NONE",
      "body": "I have checked in the solution. Nesting class modules just does not work. So, I've changed all the PSM1 files to PS1, removed all per resource PSD1 files and it seems to work for now.\r\n\r\nThis would not be a problem if there was a functional means of including Powershell classes like C does with #include",
      "created_at": "2017-07-24T05:23:23Z",
      "updated_at": "2017-07-24T05:23:23Z"
    }
  ],
  "created_at": "2017-07-23T21:05:44Z",
  "labels": [],
  "number": 4325,
  "state": "closed",
  "title": "DSC Resource schema mofs generated for class based resources named wrong?",
  "updated_at": "2017-07-24T05:23:23Z"
}