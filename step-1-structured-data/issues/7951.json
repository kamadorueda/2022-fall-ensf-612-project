{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7951",
  "author": "iSazonov",
  "body": "## PR Summary\r\n\r\n- Add IncludeCommandLine parameter in Get-Process cmdlet.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` to the beginning of the title and remove the prefix when the PR is ready.\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [x] User-facing [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed - Issue link:\r\n- **Testing - New and feature**\r\n    - [ ] Not Applicable or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n        - [ ] [Add `[feature]` if the change is significant or affects feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\r\n",
  "closed_at": "2018-10-11T12:31:13Z",
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov on both Linux and macOS, you can execute: `ps -p <pid> -o command=` and the stdout is the command line",
      "created_at": "2018-10-05T16:22:57Z",
      "updated_at": "2018-10-05T16:22:57Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@SteveL-MSFT @iSazonov  Why would we move to a universal (for linux) way into a way that requires `ps` to be installed?",
      "created_at": "2018-10-05T20:13:28Z",
      "updated_at": "2018-10-05T20:14:24Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I'm fine with keeping the procfs path for Linux if there are differences in `ps` implementations where we can't rely on.  On macOS, I'm not aware of another way to do this other than pinvoking some native apis.  Since processes are lightweight on Unix-based systems, it should be fine calling out to `ps`.  ",
      "created_at": "2018-10-05T20:39:49Z",
      "updated_at": "2018-10-05T20:39:49Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I haven't MacOs to debug parsing `ps` :-( PInvoke in the case looks complex on MacOs too.",
      "created_at": "2018-10-08T12:35:10Z",
      "updated_at": "2018-10-08T12:35:10Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov the stdout of the `ps` command I provided above should be exactly the same as on Ubuntu which is you just get the command line of that process.  I wouldn't try to go down the pinvoke route as it would be complex and seems unnecessary as processes are light-weight on Unix systems.",
      "created_at": "2018-10-08T17:13:52Z",
      "updated_at": "2018-10-08T17:13:52Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@iSazonov, from macOS\r\n```\r\n> pwsh -nologo\r\n> ps -p $pid -o command=\r\n/usr/local/microsoft/powershell/6/pwsh -nologo\r\n```\r\n\r\nstarting from bash\r\n```\r\nbash-3.2$ pwsh -nologo\r\n> ps -p $pid -o command=\r\npwsh -nologo\r\n```",
      "created_at": "2018-10-08T21:33:59Z",
      "updated_at": "2018-10-08T21:37:00Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT @TravisEz13 Thanks for help!\r\n\r\nCI Appveyor temporary failed.",
      "created_at": "2018-10-09T11:06:15Z",
      "updated_at": "2018-10-09T11:06:15Z"
    },
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "I think this should be a property on the Process object.\r\n\r\nAnd that is should be implemented like ParentProcess. Ideally, it should be done in .net core.\r\nhttps://github.com/dotnet/corefx/issues/20252\r\n\r\nJust so we don't paint ourselfs into a corner here. I also want the feature for sure.",
      "created_at": "2018-10-10T07:39:39Z",
      "updated_at": "2018-10-10T07:39:39Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Yes, it should be in CoreFX. I saw that the CoreFX issue was assigned to 'Future' and I decided the we can implement this in the repo until we get the enhancement in CoreFX.",
      "created_at": "2018-10-10T09:28:39Z",
      "updated_at": "2018-10-10T09:28:39Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Agree that ideally this should be in corefx, however I don't see when they would get around to it unless someone from the community contributes the code.  So if @iSazonov is willing to do it, he could refactor this and submit as PR to corefx (ParentProcess is very useful, but could be a separate PR).  ",
      "created_at": "2018-10-10T21:42:52Z",
      "updated_at": "2018-10-10T21:42:52Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee reviewed this and agree that the properties should be added in corefx instead of in PowerShell",
      "created_at": "2018-10-10T22:57:49Z",
      "updated_at": "2018-10-10T22:57:49Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I guess it will take too much of my time.",
      "created_at": "2018-10-11T12:31:13Z",
      "updated_at": "2018-10-11T12:31:13Z"
    },
    {
      "author": "thezim",
      "author_association": "CONTRIBUTOR",
      "body": "I did some digging a found that natively on macOS we will need to use `syctl`. This looks pretty straight forward. Source for `ps` on macOS is [here](https://opensource.apple.com/source/adv_cmds/adv_cmds-172/ps/print.c.auto.html) for command line info. Should be able to get a modified version `getproclline` in to libpsl-native. Once we have that we could move forward with eventually getting the code in corefx too.",
      "created_at": "2018-10-11T19:23:42Z",
      "updated_at": "2018-10-11T19:23:42Z"
    }
  ],
  "created_at": "2018-10-05T14:39:48Z",
  "number": 7951,
  "state": "closed",
  "title": "Add IncludeCommandLine parameter in Get-Process cmdlet",
  "updated_at": "2020-05-15T13:14:15Z"
}