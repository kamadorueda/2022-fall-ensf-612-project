{
  "_url": "https://github.com/PowerShell/PowerShell/issues/2973",
  "author": "mirichmo",
  "body": "\u2026 but one was not thrown.\r\n\r\nFixes #2971 ",
  "closed_at": "2017-01-11T23:28:57Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "\ud83d\ude15 I have many cons:\r\n1. I am a newbie here but even I understand w/o docs that means the `No exception!` template here.\r\n2. I am not able to remember and type without making mistakes this new template. (I guess two weeks later you will not be able to remember it too)\r\n3. A lot more tests require fixes. You find and fix only the smaller part of the tests. I found about 60 files. (I searched by `throw \"` pattern). There are interesting templates:\r\n -1. `Throw \"Previous statement unexpectedly succeeded...\"`\r\n -2. `throw \"Execution should not have reached here\"` \r\n -3. `throw \"Command did not throw exception\"`\r\n -4. `throw \"expect Import-PSSession to throw\"`\r\n -5.\r\n```powershell\r\n    try {\r\n        & $sb\r\n        throw \"Expected FullyQualifiedErrorId: $expectedFqeid\"\r\n    }\r\n    catch {\r\n        $_.FullyQualifiedErrorId | Should Be $expectedFqeid\r\n    }\r\n```\r\nIt seems the latter is most accurate but somewhat redundant and complex.\r\nI would prefer `No exception!` or at worst `Previous command should be throw!`",
      "created_at": "2017-01-07T06:55:01Z",
      "updated_at": "2017-01-07T06:55:01Z"
    },
    {
      "author": "mirichmo",
      "author_association": "MEMBER",
      "body": "@lzybkr Any comments?",
      "created_at": "2017-01-09T17:16:09Z",
      "updated_at": "2017-01-09T17:16:09Z"
    },
    {
      "author": "mirichmo",
      "author_association": "MEMBER",
      "body": "@iSazonov - @lzybkr and I want a message that is more descriptive and self-documenting for the example. I don't expect the exact message to be reproduced in every test (although it would be nice). As long as the message clearly describes the scenario in the test failure log, then that should be sufficient. As you point out, there are different ways of applying the pattern and scrict adherence to that specific message may not always make sense (as shown in your example 5).",
      "created_at": "2017-01-11T01:55:24Z",
      "updated_at": "2017-01-11T01:55:24Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@mirichmo  I'm trying to look at things from the other side. Sometimes this is useful. :-)\r\nIf the team has already found a more appropriate message, then I have no objections.\r\nPlease clarify the file list in the PR is exhaustive? There is a 'copy-paste' problem when someone can take as a template a bad file. It would be good to fix all the files that were found by  throw \"  pattern. Even example 5 seems can be aligned with the template. (If you are busy and I can do it).",
      "created_at": "2017-01-11T08:16:53Z",
      "updated_at": "2017-01-11T08:16:53Z"
    },
    {
      "author": "mirichmo",
      "author_association": "MEMBER",
      "body": "I am closing this PR after discussing it with @JamesWTruher. The point of \"No Message!\" is that it is a terse statement that is self-descriptive and reads well when observed in the Pester results. A more descriptive error message will not add value to the Pester output.\r\n\r\n@iSazonov You are welcome to go back and update the rest of the tests to conform to the \"No Message!\" string if you want to. However, your time and effort could be better spent addressing other issues or adding new features in the code base.",
      "created_at": "2017-01-11T23:28:57Z",
      "updated_at": "2017-01-11T23:28:57Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@mirichmo It seems I am somewhat perfectionist. :-) The thought about \"No message!\" inconsistance is already sitting in my head. If I'll have free time, I'll try to fix these tests. (I think this will save a lot of reviewer's time in future, because people won't copy-past bad files.)",
      "created_at": "2017-01-12T06:01:14Z",
      "updated_at": "2017-01-12T06:01:14Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "I'd prefer a helper function with a nice name like `AssertUnreached` or something like that - then it's easy to fix in one place.\r\n\r\nOther ways we could improve this - fix Pester, or introduce a \"better\" helper, maybe it would look something like:\r\n\r\n```powershell\r\n{ Do-Something -ea Stop } | Should Throw { $_.FullyQualifiedErrorId | Should Be Blah }\r\n```\r\n\r\nAnd if we don't change Pester, it can still look similar\r\n\r\n```powershell\r\n{ Do-Something -ea Stop } | PSShouldThrow { $_.FullyQualifiedErrorId | Should Be Blah }\r\n```\r\n\r\nThe point here is - it still looks like `Should Throw` which is widely understood, but you pass a script block to do the validation on the exception object.",
      "created_at": "2017-01-12T18:27:27Z",
      "updated_at": "2017-01-12T18:27:27Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@lzybkr  I open Issue https://github.com/pester/Pester/issues/673 And nohwnd  suggested that what you are talking about. Also nohwnd  said that Paster 4 contains 'Should throw' improvements and will be released soon.\r\nNeed a conclusion from PG whether we now have to do something or we will wait Pester 4.",
      "created_at": "2017-01-13T04:39:46Z",
      "updated_at": "2017-01-13T04:39:46Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "If the new version is portable to .Net Core and Linux, then it would be good to pick it up.",
      "created_at": "2017-01-13T15:32:15Z",
      "updated_at": "2017-01-13T15:32:15Z"
    }
  ],
  "created_at": "2017-01-07T02:16:09Z",
  "number": 2973,
  "state": "closed",
  "title": "Fixing NoException! message in tests where an exception was expected,\u2026",
  "updated_at": "2017-01-13T15:32:15Z"
}