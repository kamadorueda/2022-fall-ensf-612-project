{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15835",
  "author": "AtleVa",
  "body": "### Prerequisites\n\n- [X] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\n\n### Steps to reproduce\n\n[int64[]]$testarray=(10,20,40,50)\r\n$testarray.indexof(20)\r\n\n\n### Expected behavior\n\n```console\nReturn position of indexed value. (1)\n```\n\n\n### Actual behavior\n\n```console\nThe returned position returned is always -1\n```\n\n\n### Error details\n\n_No response_\n\n### Environment data\n\n```powershell\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.3\r\nPSEdition                      Core\r\nGitCommitId                    7.1.3\r\nOS                             Microsoft Windows 10.0.22000\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\n```\n\n\n### Visuals\n\n_No response_",
  "closed_at": "2021-07-30T00:00:43Z",
  "comments": [
    {
      "author": "Northman-de",
      "author_association": "NONE",
      "body": "This works:  `$testarray.indexof([int64]20)`\r\nYou have to cast as int64, otherwise it's interpreted as int32.\r\n` (20).Gettype()`",
      "created_at": "2021-07-28T08:37:24Z",
      "updated_at": "2021-07-28T08:37:24Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "You can also use the `L` suffix to write int64 literals; `$testArray.IndexOf(20L)`\r\n\r\nIndexOf() I believe has `object` as the parameter type, so it won't auto-cast to `long`/`int64`.",
      "created_at": "2021-07-28T11:58:28Z",
      "updated_at": "2021-07-28T11:58:49Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "```powershell\r\n$testarray.indexof\r\n\r\nOverloadDefinitions\r\n-------------------\r\nint IList.IndexOf(System.Object value)\r\n```",
      "created_at": "2021-07-28T18:26:20Z",
      "updated_at": "2021-07-28T18:26:20Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2021-07-30T00:00:41Z",
      "updated_at": "2021-07-30T00:00:41Z"
    }
  ],
  "created_at": "2021-07-28T08:22:55Z",
  "labels": [
    "Issue-Question",
    "Resolution-Answered",
    "Needs-Triage"
  ],
  "number": 15835,
  "state": "closed",
  "title": ".indexof() is not working for an array of int64",
  "updated_at": "2021-07-30T00:00:43Z"
}