{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9888",
  "author": "bergmeister",
  "body": "# PR Summary\r\n\r\nUpgrade .Net Core 3 SDK from `preview5` to `preview6` and keep Nuget package `Microsoft.AspNetCore.Mvc.NewtonsoftJson` used for testing in sync with it\r\n\r\nThis required fixing the namespace ambiguity between `System.Management.Automation.AllowNullAttribute` and `System.Diagnostics.CodeAnalysis.AllowNullAttribute`\r\n\r\nPlease review the added files to the installer, do we want to ship all WPF localisations? Maybe yes for now but later it might be a good option to just include en-us and offer a cmdlet to download the other ones?\r\n\r\nFixes #9780 because it updates the `System.Management` NuGet package version from .Net 2.1 to 3.0-preview6\r\n\r\nUpdating also the 2 NuGet packages `System.ServiceProcess.ServiceController` and its dependency of `Microsoft.Windows.Compatibility` would've broken 2 tests and the reason for their failure seems to be unclear (i.e. whether it is a problem of PowerShell itself that is now being exposed or a regression in the `System.ServiceProcess.ServiceController`  NuGet package), therefore their update is deferred.\r\n\r\n## PR Context\r\n\r\nhttps://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-preview-6\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [ ] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n",
  "closed_at": "2019-07-09T21:35:09Z",
  "comments": [
    {
      "author": "PoshChan",
      "author_association": "COLLABORATOR",
      "body": "@bergmeister, your last commit had 4 failures in `PowerShell-CI-windows`\r\nTestCustomPipeNameCreationTooLongOnNonWindows\r\n```powershell\r\nAssert.True() Failure\r\nExpected: True\r\nActual:   False\r\n   at PSTests.Parallel.NamedPipeTests.TestCustomPipeNameCreationTooLongOnNonWindows() in D:\\a\\1\\s\\test\\xUnit\\csharp\\test_NamedPipe.cs:line 46\r\n```\r\nTestCimInstanceProperty\r\n```powershell\r\nSystem.NotSupportedException : Specified method is not supported.\r\n   at System.Management.Automation.Internal.PSDataCollectionReader`2.Read(Int32 count) in D:\\a\\1\\s\\src\\System.Management.Automation\\utils\\ObjectReader.cs:line 520\r\n   at System.Management.Automation.Runspaces.PipelineBase.Invoke(IEnumerable input) in D:\\a\\1\\s\\src\\System.Management.Automation\\engine\\hostifaces\\pipelinebase.cs:line 416\r\n   at System.Management.Automation.Runspaces.Pipeline.Invoke() in D:\\a\\1\\s\\src\\System.Management.Automation\\engine\\hostifaces\\Pipeline.cs:line 531\r\n   at System.Management.Automation.PowerShell.Worker.ConstructPipelineAndDoWork(Runspace rs, Boolean performSyncInvoke) in D:\\a\\1\\s\\src\\System.Management.Automation\\engine\\hostifaces\\PowerShell.cs:line 5619\r\n   at System.Management.Automation.PowerShell.Worker.CreateRunspaceIfNeededAndDoWork(Runspace rsToUse, Boolean isSync) in D:\\a\\1\\s\\src\\System.Management.Automation\\engine\\hostifaces\\PowerShell.cs:line 5466\r\n   at System.Management.Automation.PowerShell.CoreInvokeHelper[TInput,TOutput](PSDataCollection`1 input, PSDataCollection`1 output, PSInvocationSettings settings) in D:\\a\\1\\s\\src\\System.Management.Automation\\engine\\hostifaces\\PowerShell.cs:line 4588\r\n   at System.Management.Automation.PowerShell.CoreInvoke[TInput,TOutput](PSDataCollection`1 input, PSDataCollection`1 output, PSInvocationSettings settings) in D:\\a\\1\\s\\src\\System.Management.Automation\\engine\\hostifaces\\PowerShell.cs:line 4783\r\n   at System.Management.Automation.PowerShell.Invoke(IEnumerable input, PSInvocationSettings settings) in D:\\a\\1\\s\\src\\System.Management.Automation\\engine\\hostifaces\\PowerShell.cs:line 2426\r\n   at System.Management.Automation.PowerShell.Invoke() in D:\\a\\1\\s\\src\\System.Management.Automation\\engine\\hostifaces\\PowerShell.cs:line 2296\r\n   at PSTests.Parallel.PSObjectTests.TestCimInstanceProperty() in D:\\a\\1\\s\\test\\xUnit\\csharp\\test_PSObject.cs:line 120\r\n```\r\nTestRunspaceWithPowerShellAndInitialSessionState\r\n```powershell\r\nSystem.NotSupportedException : Specified method is not supported.\r\n   at System.Management.Automation.Internal.PSDataCollectionReader`2.Read(Int32 count) in D:\\a\\1\\s\\src\\System.Management.Automation\\utils\\ObjectReader.cs:line 520\r\n   at System.Management.Automation.Runspaces.PipelineBase.Invoke(IEnumerable input) in D:\\a\\1\\s\\src\\System.Management.Automation\\engine\\hostifaces\\pipelinebase.cs:line 416\r\n   at System.Management.Automation.Runspaces.Pipeline.Invoke() in D:\\a\\1\\s\\src\\System.Management.Automation\\engine\\hostifaces\\Pipeline.cs:line 531\r\n   at System.Management.Automation.PowerShell.Worker.ConstructPipelineAndDoWork(Runspace rs, Boolean performSyncInvoke) in D:\\a\\1\\s\\src\\System.Management.Automation\\engine\\hostifaces\\PowerShell.cs:line 5619\r\n   at System.Management.Automation.PowerShell.Worker.CreateRunspaceIfNeededAndDoWork(Runspace rsToUse, Boolean isSync) in D:\\a\\1\\s\\src\\System.Management.Automation\\engine\\hostifaces\\PowerShell.cs:line 5466\r\n   at System.Management.Automation.PowerShell.CoreInvokeHelper[TInput,TOutput](PSDataCollection`1 input, PSDataCollection`1 output, PSInvocationSettings settings) in D:\\a\\1\\s\\src\\System.Management.Automation\\engine\\hostifaces\\PowerShell.cs:line 4588\r\n   at System.Management.Automation.PowerShell.CoreInvoke[TInput,TOutput](PSDataCollection`1 input, PSDataCollection`1 output, PSInvocationSettings settings) in D:\\a\\1\\s\\src\\System.Management.Automation\\engine\\hostifaces\\PowerShell.cs:line 4783\r\n   at System.Management.Automation.PowerShell.Invoke(IEnumerable input, PSInvocationSettings settings) in D:\\a\\1\\s\\src\\System.Management.Automation\\engine\\hostifaces\\PowerShell.cs:line 2426\r\n   at PSTests.Sequential.RunspaceTests.TestRunspaceWithPowerShellAndInitialSessionState() in D:\\a\\1\\s\\test\\xUnit\\csharp\\test_Runspace.cs:line 86\r\n```\r\nTestRunspaceWithPowerShell\r\n```powershell\r\nSystem.NotSupportedException : Specified method is not supported.\r\n   at System.Management.Automation.Internal.PSDataCollectionReader`2.Read(Int32 count) in D:\\a\\1\\s\\src\\System.Management.Automation\\utils\\ObjectReader.cs:line 520\r\n   at System.Management.Automation.Runspaces.PipelineBase.Invoke(IEnumerable input) in D:\\a\\1\\s\\src\\System.Management.Automation\\engine\\hostifaces\\pipelinebase.cs:line 416\r\n   at System.Management.Automation.Runspaces.Pipeline.Invoke() in D:\\a\\1\\s\\src\\System.Management.Automation\\engine\\hostifaces\\Pipeline.cs:line 531\r\n   at System.Management.Automation.PowerShell.Worker.ConstructPipelineAndDoWork(Runspace rs, Boolean performSyncInvoke) in D:\\a\\1\\s\\src\\System.Management.Automation\\engine\\hostifaces\\PowerShell.cs:line 5619\r\n   at System.Management.Automation.PowerShell.Worker.CreateRunspaceIfNeededAndDoWork(Runspace rsToUse, Boolean isSync) in D:\\a\\1\\s\\src\\System.Management.Automation\\engine\\hostifaces\\PowerShell.cs:line 5466\r\n   at System.Management.Automation.PowerShell.CoreInvokeHelper[TInput,TOutput](PSDataCollection`1 input, PSDataCollection`1 output, PSInvocationSettings settings) in D:\\a\\1\\s\\src\\System.Management.Automation\\engine\\hostifaces\\PowerShell.cs:line 4588\r\n   at System.Management.Automation.PowerShell.CoreInvoke[TInput,TOutput](PSDataCollection`1 input, PSDataCollection`1 output, PSInvocationSettings settings) in D:\\a\\1\\s\\src\\System.Management.Automation\\engine\\hostifaces\\PowerShell.cs:line 4783\r\n   at System.Management.Automation.PowerShell.Invoke(IEnumerable input, PSInvocationSettings settings) in D:\\a\\1\\s\\src\\System.Management.Automation\\engine\\hostifaces\\PowerShell.cs:line 2426\r\n   at PSTests.Sequential.RunspaceTests.TestRunspaceWithPowerShell() in D:\\a\\1\\s\\test\\xUnit\\csharp\\test_Runspace.cs:line 55\r\n```\r\n",
      "created_at": "2019-06-13T17:30:18Z",
      "updated_at": "2019-06-17T03:16:44Z"
    },
    {
      "author": "PoshChan",
      "author_association": "COLLABORATOR",
      "body": "@bergmeister, your last commit had 3 failures in `PowerShell-CI-windows`\r\nTestCimInstanceProperty\r\n```powershell\r\nSystem.NotSupportedException : Specified method is not supported.\r\n   at System.Management.Automation.Internal.PSDataCollectionReader`2.Read(Int32 count) in D:\\a\\1\\s\\src\\System.Management.Automation\\utils\\ObjectReader.cs:line 520\r\n   at System.Management.Automation.Runspaces.PipelineBase.Invoke(IEnumerable input) in D:\\a\\1\\s\\src\\System.Management.Automation\\engine\\hostifaces\\pipelinebase.cs:line 416\r\n   at System.Management.Automation.Runspaces.Pipeline.Invoke() in D:\\a\\1\\s\\src\\System.Management.Automation\\engine\\hostifaces\\Pipeline.cs:line 531\r\n   at System.Management.Automation.PowerShell.Worker.ConstructPipelineAndDoWork(Runspace rs, Boolean performSyncInvoke) in D:\\a\\1\\s\\src\\System.Management.Automation\\engine\\hostifaces\\PowerShell.cs:line 5619\r\n   at System.Management.Automation.PowerShell.Worker.CreateRunspaceIfNeededAndDoWork(Runspace rsToUse, Boolean isSync) in D:\\a\\1\\s\\src\\System.Management.Automation\\engine\\hostifaces\\PowerShell.cs:line 5466\r\n   at System.Management.Automation.PowerShell.CoreInvokeHelper[TInput,TOutput](PSDataCollection`1 input, PSDataCollection`1 output, PSInvocationSettings settings) in D:\\a\\1\\s\\src\\System.Management.Automation\\engine\\hostifaces\\PowerShell.cs:line 4588\r\n   at System.Management.Automation.PowerShell.CoreInvoke[TInput,TOutput](PSDataCollection`1 input, PSDataCollection`1 output, PSInvocationSettings settings) in D:\\a\\1\\s\\src\\System.Management.Automation\\engine\\hostifaces\\PowerShell.cs:line 4783\r\n   at System.Management.Automation.PowerShell.Invoke(IEnumerable input, PSInvocationSettings settings) in D:\\a\\1\\s\\src\\System.Management.Automation\\engine\\hostifaces\\PowerShell.cs:line 2426\r\n   at System.Management.Automation.PowerShell.Invoke() in D:\\a\\1\\s\\src\\System.Management.Automation\\engine\\hostifaces\\PowerShell.cs:line 2296\r\n   at PSTests.Parallel.PSObjectTests.TestCimInstanceProperty() in D:\\a\\1\\s\\test\\xUnit\\csharp\\test_PSObject.cs:line 120\r\n```\r\nTestRunspaceWithPowerShellAndInitialSessionState\r\n```powershell\r\nSystem.NotSupportedException : Specified method is not supported.\r\n   at System.Management.Automation.Internal.PSDataCollectionReader`2.Read(Int32 count) in D:\\a\\1\\s\\src\\System.Management.Automation\\utils\\ObjectReader.cs:line 520\r\n   at System.Management.Automation.Runspaces.PipelineBase.Invoke(IEnumerable input) in D:\\a\\1\\s\\src\\System.Management.Automation\\engine\\hostifaces\\pipelinebase.cs:line 416\r\n   at System.Management.Automation.Runspaces.Pipeline.Invoke() in D:\\a\\1\\s\\src\\System.Management.Automation\\engine\\hostifaces\\Pipeline.cs:line 531\r\n   at System.Management.Automation.PowerShell.Worker.ConstructPipelineAndDoWork(Runspace rs, Boolean performSyncInvoke) in D:\\a\\1\\s\\src\\System.Management.Automation\\engine\\hostifaces\\PowerShell.cs:line 5619\r\n   at System.Management.Automation.PowerShell.Worker.CreateRunspaceIfNeededAndDoWork(Runspace rsToUse, Boolean isSync) in D:\\a\\1\\s\\src\\System.Management.Automation\\engine\\hostifaces\\PowerShell.cs:line 5466\r\n   at System.Management.Automation.PowerShell.CoreInvokeHelper[TInput,TOutput](PSDataCollection`1 input, PSDataCollection`1 output, PSInvocationSettings settings) in D:\\a\\1\\s\\src\\System.Management.Automation\\engine\\hostifaces\\PowerShell.cs:line 4588\r\n   at System.Management.Automation.PowerShell.CoreInvoke[TInput,TOutput](PSDataCollection`1 input, PSDataCollection`1 output, PSInvocationSettings settings) in D:\\a\\1\\s\\src\\System.Management.Automation\\engine\\hostifaces\\PowerShell.cs:line 4783\r\n   at System.Management.Automation.PowerShell.Invoke(IEnumerable input, PSInvocationSettings settings) in D:\\a\\1\\s\\src\\System.Management.Automation\\engine\\hostifaces\\PowerShell.cs:line 2426\r\n   at PSTests.Sequential.RunspaceTests.TestRunspaceWithPowerShellAndInitialSessionState() in D:\\a\\1\\s\\test\\xUnit\\csharp\\test_Runspace.cs:line 86\r\n```\r\nTestRunspaceWithPowerShell\r\n```powershell\r\nSystem.NotSupportedException : Specified method is not supported.\r\n   at System.Management.Automation.Internal.PSDataCollectionReader`2.Read(Int32 count) in D:\\a\\1\\s\\src\\System.Management.Automation\\utils\\ObjectReader.cs:line 520\r\n   at System.Management.Automation.Runspaces.PipelineBase.Invoke(IEnumerable input) in D:\\a\\1\\s\\src\\System.Management.Automation\\engine\\hostifaces\\pipelinebase.cs:line 416\r\n   at System.Management.Automation.Runspaces.Pipeline.Invoke() in D:\\a\\1\\s\\src\\System.Management.Automation\\engine\\hostifaces\\Pipeline.cs:line 531\r\n   at System.Management.Automation.PowerShell.Worker.ConstructPipelineAndDoWork(Runspace rs, Boolean performSyncInvoke) in D:\\a\\1\\s\\src\\System.Management.Automation\\engine\\hostifaces\\PowerShell.cs:line 5619\r\n   at System.Management.Automation.PowerShell.Worker.CreateRunspaceIfNeededAndDoWork(Runspace rsToUse, Boolean isSync) in D:\\a\\1\\s\\src\\System.Management.Automation\\engine\\hostifaces\\PowerShell.cs:line 5466\r\n   at System.Management.Automation.PowerShell.CoreInvokeHelper[TInput,TOutput](PSDataCollection`1 input, PSDataCollection`1 output, PSInvocationSettings settings) in D:\\a\\1\\s\\src\\System.Management.Automation\\engine\\hostifaces\\PowerShell.cs:line 4588\r\n   at System.Management.Automation.PowerShell.CoreInvoke[TInput,TOutput](PSDataCollection`1 input, PSDataCollection`1 output, PSInvocationSettings settings) in D:\\a\\1\\s\\src\\System.Management.Automation\\engine\\hostifaces\\PowerShell.cs:line 4783\r\n   at System.Management.Automation.PowerShell.Invoke(IEnumerable input, PSInvocationSettings settings) in D:\\a\\1\\s\\src\\System.Management.Automation\\engine\\hostifaces\\PowerShell.cs:line 2426\r\n   at PSTests.Sequential.RunspaceTests.TestRunspaceWithPowerShell() in D:\\a\\1\\s\\test\\xUnit\\csharp\\test_Runspace.cs:line 55\r\n```\r\n",
      "created_at": "2019-06-13T17:49:20Z",
      "updated_at": "2019-06-17T03:13:31Z"
    },
    {
      "author": "PoshChan",
      "author_association": "COLLABORATOR",
      "body": "@bergmeister, your last commit had 436 failures in `PowerShell-CI-macos`\r\n(These are 5 of the failures)\r\n\r\nInitialSessionState capacity.function capacity in initial session state should not be limited\r\n```powershell\r\nException calling \"Invoke\" with \"0\" argument(s): \"Specified method is not supported.\"\r\nat <ScriptBlock>, /Users/vsts/agent/2.152.1/work/1/s/test/powershell/engine/Api/InitialSessionState.Tests.ps1: line 31\r\n31:         $ps.AddCommand('f4999').Invoke() | Should -Be \"fn f4999\"\r\n\r\n```\r\nInitialSessionState capacity.alias capacity in initial session state should not be limited\r\n```powershell\r\nException calling \"Invoke\" with \"0\" argument(s): \"Specified method is not supported.\"\r\nat <ScriptBlock>, /Users/vsts/agent/2.152.1/work/1/s/test/powershell/engine/Api/InitialSessionState.Tests.ps1: line 36\r\n36:         $ps.AddCommand('a4999').Invoke() | Should -Be \"fn f4999\"\r\n\r\n```\r\nInitialSessionState capacity.variable capacity in initial session state should not be limited\r\n```powershell\r\nException calling \"Invoke\" with \"0\" argument(s): \"Specified method is not supported.\"\r\nat <ScriptBlock>, /Users/vsts/agent/2.152.1/work/1/s/test/powershell/engine/Api/InitialSessionState.Tests.ps1: line 41\r\n41:         $ps.AddScript('$v4999').Invoke() | Should -Be \"var v4999\"\r\n\r\n```\r\nInitialSessionState capacity.function capacity should not be limited after runspace is opened\r\n```powershell\r\nException calling \"Invoke\" with \"0\" argument(s): \"Specified method is not supported.\"\r\nat <ScriptBlock>, /Users/vsts/agent/2.152.1/work/1/s/test/powershell/engine/Api/InitialSessionState.Tests.ps1: line 46\r\n46:         $ps.AddScript('function f5000 { \"in f5000\" } f5000').Invoke() | Should -Be \"in f5000\"\r\n\r\n```\r\nInitialSessionState capacity.variable capacity should not be limited after runspace is opened\r\n```powershell\r\nException calling \"Invoke\" with \"0\" argument(s): \"Specified method is not supported.\"\r\nat <ScriptBlock>, /Users/vsts/agent/2.152.1/work/1/s/test/powershell/engine/Api/InitialSessionState.Tests.ps1: line 51\r\n51:         $ps.AddScript('$v5000 = \"var v5000\"; $v5000').Invoke() | Should -Be \"var v5000\"\r\n\r\n```\r\n",
      "created_at": "2019-06-13T18:11:52Z",
      "updated_at": "2019-06-17T03:13:18Z"
    },
    {
      "author": "PoshChan",
      "author_association": "COLLABORATOR",
      "body": "@bergmeister, your last commit had 443 failures in `PowerShell-CI-linux`\r\n(These are 5 of the failures)\r\n\r\nInitialSessionState capacity.function capacity in initial session state should not be limited\r\n```powershell\r\nException calling \"Invoke\" with \"0\" argument(s): \"Specified method is not supported.\"\r\nat <ScriptBlock>, /home/vsts/work/1/s/test/powershell/engine/Api/InitialSessionState.Tests.ps1: line 31\r\n31:         $ps.AddCommand('f4999').Invoke() | Should -Be \"fn f4999\"\r\n\r\n```\r\nInitialSessionState capacity.alias capacity in initial session state should not be limited\r\n```powershell\r\nException calling \"Invoke\" with \"0\" argument(s): \"Specified method is not supported.\"\r\nat <ScriptBlock>, /home/vsts/work/1/s/test/powershell/engine/Api/InitialSessionState.Tests.ps1: line 36\r\n36:         $ps.AddCommand('a4999').Invoke() | Should -Be \"fn f4999\"\r\n\r\n```\r\nInitialSessionState capacity.variable capacity in initial session state should not be limited\r\n```powershell\r\nException calling \"Invoke\" with \"0\" argument(s): \"Specified method is not supported.\"\r\nat <ScriptBlock>, /home/vsts/work/1/s/test/powershell/engine/Api/InitialSessionState.Tests.ps1: line 41\r\n41:         $ps.AddScript('$v4999').Invoke() | Should -Be \"var v4999\"\r\n\r\n```\r\nInitialSessionState capacity.function capacity should not be limited after runspace is opened\r\n```powershell\r\nException calling \"Invoke\" with \"0\" argument(s): \"Specified method is not supported.\"\r\nat <ScriptBlock>, /home/vsts/work/1/s/test/powershell/engine/Api/InitialSessionState.Tests.ps1: line 46\r\n46:         $ps.AddScript('function f5000 { \"in f5000\" } f5000').Invoke() | Should -Be \"in f5000\"\r\n\r\n```\r\nInitialSessionState capacity.variable capacity should not be limited after runspace is opened\r\n```powershell\r\nException calling \"Invoke\" with \"0\" argument(s): \"Specified method is not supported.\"\r\nat <ScriptBlock>, /home/vsts/work/1/s/test/powershell/engine/Api/InitialSessionState.Tests.ps1: line 51\r\n51:         $ps.AddScript('$v5000 = \"var v5000\"; $v5000').Invoke() | Should -Be \"var v5000\"\r\n\r\n```\r\n",
      "created_at": "2019-06-13T18:46:32Z",
      "updated_at": "2019-06-17T03:13:07Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "~@SteveL-MSFT It seems `preview6` of .Net Core 3 has bad regressions on non-Windows systems~\r\nUPDATE, it was accidental change of mine that caused that, sorry",
      "created_at": "2019-06-13T18:47:23Z",
      "updated_at": "2019-06-24T21:27:46Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@bergmeister can you look in the inner exceptions to see what method it's referring to that is not supported?",
      "created_at": "2019-06-13T22:15:16Z",
      "updated_at": "2019-06-13T22:15:16Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "Yes, but only tomorrow.",
      "created_at": "2019-06-13T22:23:27Z",
      "updated_at": "2019-06-13T22:23:27Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT The failures were due to one line that I accidentally changed/commited.\r\nApart from `Download Artifacts` having a general issue in Azure DevOps at the moment, the Windows tests passed. On Linux, Mac there is only 1 failure in the `Pester No Sudo - CI` test suite:\r\n```\r\nValidate start of console host.No new assemblies are loaded\r\n\r\nExpected exactly $null, but got @(@{InputObject=System.Security.Cryptography.Primitives.dll; SideIndicator=<=}, @{InputObject=System.Security.Principal.dll; SideIndicator=<=}).\r\n\r\nat <ScriptBlock>, /home/vsts/work/1/s/test/powershell/Host/Startup.Tests.ps1: line 123\r\n123:         $diffs | Should -BeExactly $null\r\n```\r\nThe log says that `System.Security.Cryptography.Primitives.dll` and `System.Security.Principal.dll` are not loaded (but expected to be) ",
      "created_at": "2019-06-14T10:24:11Z",
      "updated_at": "2019-06-14T10:30:30Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@bergmeister I believe you can update the startup tests to not expect those to be loaded.  Perhaps .NET did some refactoring that doesn't require those to be loaded during our startup usage.",
      "created_at": "2019-06-14T16:51:03Z",
      "updated_at": "2019-06-14T16:51:03Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "All tests pass now.\r\nPlease review the added files to the installer, do we want to ship all WPF localisations? Maybe yes for now but later it might be a good option to just include en-us and offer a cmdlet to download the other ones?",
      "created_at": "2019-06-15T11:49:49Z",
      "updated_at": "2019-06-15T11:50:56Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "If MSFT team plans to include PowerShell 7.0 in Windows distribution the localization story becomes important. I think for preview we can put all in one package.\r\n\r\n@bergmeister Thanks for the PR continue. Have you plans to update package versions to latest?",
      "created_at": "2019-06-15T16:22:30Z",
      "updated_at": "2019-06-15T16:22:30Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "Yes, but as my comment [here](https://github.com/PowerShell/PowerShell/pull/9888#discussion_r294045413) there are [2 test failures ](https://christophbergmeister.visualstudio.com/PowerShell/_build/results?buildId=896&view=ms.vss-test-web.build-test-results-tab) on Windows only if I updated the NuGet packages\r\nUPDATE:\r\nI found the NuGet packages that contains the breaking change that causes the 2 test failures:\r\n` System.ServiceProcess.ServiceController`. Therefore we could update all NuGet packages except this one and `Microsoft.Windows.Compatibility` (because it depends on `System.ServiceProcess.ServiceController`). Should I also update the packages in `tools\\packages\\....` (that I think are used to create the NuGet packages for SMA, etc.)? Should the update of possible NuGet packages be in this PR or in a follow up PR (that I'd base it on this PR?)? The build of this PR is green at the moment so if review passed, we could merge this already in. cc @SteveL-MSFT ",
      "created_at": "2019-06-15T17:14:13Z",
      "updated_at": "2019-06-22T06:59:23Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@bergmeister You can continue in the PR if you want. Maintainers can add new commits as we did in past.\r\n\r\n> 2 test failures: System.ServiceProcess.ServiceController\r\n\r\nPull it in last commit and we will investigate.\r\n\r\n> Should I also update the packages in tools\\packages\\\r\n\r\nWe could try. /cc @TravisEz13 ",
      "created_at": "2019-06-17T03:25:44Z",
      "updated_at": "2019-06-17T03:30:08Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@PoshChan please retry macOS",
      "created_at": "2019-06-19T16:55:51Z",
      "updated_at": "2019-06-19T16:55:51Z"
    },
    {
      "author": "PoshChan",
      "author_association": "COLLABORATOR",
      "body": "@adityapatwardhan, successfully started retry of `PowerShell-CI-macOS`",
      "created_at": "2019-06-19T16:56:11Z",
      "updated_at": "2019-06-19T16:56:11Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@bergmeister can you rebase off master and fix the conflict?  The macOS failure should be something that has already been fixed",
      "created_at": "2019-06-22T01:10:52Z",
      "updated_at": "2019-06-22T01:10:52Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT Done (the conflict could be auto-resolved, `git` was just confused due to the NJsonSchema update being one line below).\r\nThe 2 known Windows failures have come back, that are due to the update of `System.ServiceProcess.ServiceController` (and `Microsoft.Windows.Compatibility`, which depends on it).  Please refer to the comment [here](https://github.com/PowerShell/PowerShell/pull/9888#discussion_r294177540) about some preliminary investigation",
      "created_at": "2019-06-22T07:01:21Z",
      "updated_at": "2019-06-22T07:01:33Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@SteveL-MSFT Can you look at this?",
      "created_at": "2019-07-01T17:33:29Z",
      "updated_at": "2019-07-01T17:33:29Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@bergmeister if updating to newer versions of those assemblies is the cause of the failure, can we go back to an older one that works with Preview6?",
      "created_at": "2019-07-01T21:46:41Z",
      "updated_at": "2019-07-01T21:46:41Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT  Yes, we could just revert  b518c73a79b94942679da54d0385c6abd20ad60a for a green build if you want to merge some working bits early, which means that only the 2 NuGet packages `System.ServiceProcess.ServiceController` and its dependency of `Microsoft.Windows.Compatibility` would be excluded from the update for now and create a tracking issue for them.",
      "created_at": "2019-07-01T21:49:23Z",
      "updated_at": "2019-07-01T21:51:49Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT See my comment above https://github.com/PowerShell/PowerShell/pull/9888#discussion_r297610694",
      "created_at": "2019-07-02T03:02:43Z",
      "updated_at": "2019-07-02T03:02:43Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT I reverted  b518c73a79b94942679da54d0385c6abd20ad60a for a green build so that we can merge this in earlier and suggest to add a tracking issue for updating the 2 NuGet packages `System.ServiceProcess.ServiceController` and its dependency of `Microsoft.Windows.Compatibility`later  as they break 2 tests and the reason for their failure seems to be unclear (i.e. whether it is a problem of PowerShell itself that is now being exposed or a regression in the `System.ServiceProcess.ServiceController`  NuGet package)",
      "created_at": "2019-07-02T20:59:04Z",
      "updated_at": "2019-07-02T20:59:33Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Should we report the problem with System.ServiceProcess.ServiceController to Core team?",
      "created_at": "2019-07-03T03:25:01Z",
      "updated_at": "2019-07-03T03:25:01Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "> Should we report the problem with System.ServiceProcess.ServiceController to Core team?\r\n\r\nYes we should report to the .NET team. Can we get a simple repro of the issue?",
      "created_at": "2019-07-05T18:30:02Z",
      "updated_at": "2019-07-05T18:30:02Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "@daxian-dbw I applied the suggestion about the using statements from your comment [here](https://github.com/PowerShell/PowerShell/pull/9888#discussion_r299693943).\r\nI m note sure if a repro is easy in terms of the usage of the APIs of the NuGet package, I cannot say if this is a bug in the NuGet package itself or something in PowerShell itself that only know starts to surface somehow. I'd appreciate it if you investigate this or we can open a tracking issue in order to get this merged before `7.0-preview2`",
      "created_at": "2019-07-05T19:27:42Z",
      "updated_at": "2019-07-05T19:45:35Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@bergmeister Yes, please open a tracking issue with the information you have got. Thanks!",
      "created_at": "2019-07-05T21:11:37Z",
      "updated_at": "2019-07-05T21:11:37Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@daxian-dbw yes, ok with removing the outdated attributes",
      "created_at": "2019-07-05T21:35:01Z",
      "updated_at": "2019-07-05T21:35:01Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "@daxian-dbw I opened issue #10067 to track the problem with the Nuget package. I will now resolve the merge conflict again. After this PR is merged, I plan to open a PR to demonstrate the failure so that the change is much smaller and we can focus on it and try experiments.",
      "created_at": "2019-07-05T22:42:43Z",
      "updated_at": "2019-07-05T22:42:43Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.0.0-preview.2` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.0.0-preview.2)\n",
      "created_at": "2019-07-17T20:54:51Z",
      "updated_at": "2019-07-17T20:54:51Z"
    }
  ],
  "created_at": "2019-06-13T16:59:04Z",
  "number": 9888,
  "state": "closed",
  "title": "Upgrade .Net Core 3 SDK from preview5 to preview6 and related out of band Nuget packages from 2.1 to 3.0-preview6",
  "updated_at": "2019-07-17T20:54:51Z"
}