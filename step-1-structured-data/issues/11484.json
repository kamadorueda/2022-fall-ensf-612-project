{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11484",
  "author": "Shridharfly",
  "body": "I have written a function to get authentication token. I have used `New-PSDrive` because `PathTooLongException` was thrown. `Write-Host $adal, (Test-Path $adal)` returns `True` while testing if path exists. But throws exception in `LoadFrom()`. Could someone help me get rid of the error?\r\n\r\nCode:\r\n\r\n    function GetAuthToken {\r\n        try{\r\n            Write-Host \"GetAuthToken-Start\"\r\n            If (!(Test-Path CustomDrive:)){\r\n                $adalPath = Get-Module -Name \"AzureRM.Profile\" -ListAvailable -All | Select -First 1 | Select -ExpandProperty ModuleBase\r\n                New-PSDrive -Name \"CustomDrive\" -PSProvider filesystem -Root $adalPath\r\n                Write-Host \"Created CustomDrive.\"\r\n            }\r\n            \r\n            $adal = \"CustomDrive:\\Microsoft.IdentityModel.Clients.ActiveDirectory.dll\"\r\n            $adalforms = \"CustomDrive:\\Microsoft.IdentityModel.Clients.ActiveDirectory.WindowsForms.dll\"\r\n                \r\n            Write-Host $adal, (Test-Path $adal) #Test-Path returns True\r\n            Write-Host $adalforms, (Test-Path $adalforms)\r\n            \r\n            Write-Host \"Loading required DLLs...\"\r\n            [System.Reflection.Assembly]::LoadFrom($adal) | Out-Null #This line throws exception\r\n            [System.Reflection.Assembly]::LoadFrom($adalforms) | Out-Null\r\n            Write-Host \"Loaded required DLLs successfully.\"\r\n    \r\n            Write-Host \"Trying to acquire token...\"\r\n            $authContext = New-Object \"Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext\" -ArgumentList $authorityUri\r\n            $authResult = $authContext.AcquireToken($resourceUri, $clientId, $redirectUri, \"Always\") \r\n            Write-Host \"Acquired token successfully.\"\r\n    \r\n            Write-Host $authResult\r\n            Write-Host \"GetAuthToken-End\"\r\n            return $authResult\r\n        }\r\n        catch{\r\n            Write-Error -Message $_.Exception\r\n            throw $_.Exception\r\n        }\r\n        finally{\r\n            Remove-PSDrive -Name \"CustomDrive\"\r\n            Write-Host \"Removed CustomDrive.\"\r\n        }\r\n    }\r\n\r\nException:\r\n\r\n    GetAuthToken : System.Management.Automation.MethodInvocationException: Exception calling \"LoadFrom\" with \"1\" argument(s): \"Invalid directory on \r\n    URL.\" ---> System.ArgumentException: Invalid directory on URL.\r\n       at System.Security.Util.DirectoryString.CreateSeparatedString(String directory)\r\n       at System.Security.Util.URLString.ParseFileURL(String url)\r\n       at System.Security.Util.URLString.GetFileName()\r\n       at System.Reflection.RuntimeAssembly.InternalLoadAssemblyName(AssemblyName assemblyRef, Evidence assemblySecurity, RuntimeAssembly \r\n    reqAssembly, StackCrawlMark& stackMark, IntPtr pPrivHostBinder, Boolean throwOnFileNotFound, Boolean forIntrospection, Boolean \r\n    suppressSecurityChecks)\r\n       at System.Reflection.RuntimeAssembly.InternalLoadFrom(String assemblyFile, Evidence securityEvidence, Byte[] hashValue, AssemblyHashAlgorithm \r\n    hashAlgorithm, Boolean forIntrospection, Boolean suppressSecurityChecks, StackCrawlMark& stackMark)\r\n       at System.Reflection.Assembly.LoadFrom(String assemblyFile)\r\n       at CallSite.Target(Closure , CallSite , Type , Object )\r\n       --- End of inner exception stack trace ---\r\n       at System.Management.Automation.ExceptionHandlingOps.CheckActionPreference(FunctionContext funcContext, Exception exception)\r\n       at System.Management.Automation.Interpreter.ActionCallInstruction`2.Run(InterpretedFrame frame)\r\n       at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.Run(InterpretedFrame frame)\r\n       at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.Run(InterpretedFrame frame)\r\n\r\n",
  "closed_at": "2020-01-04T15:09:30Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": ">  [System.Reflection.Assembly]::LoadFrom($adal) | Out-Null #This line throws exception\r\n\r\nPerhaps `Add-Type -Path $adal` will works for you.",
      "created_at": "2020-01-04T08:06:03Z",
      "updated_at": "2020-01-04T08:06:03Z"
    },
    {
      "author": "Shridharfly",
      "author_association": "NONE",
      "body": "Worked with `Add-Type`\r\n\r\nhttps://stackoverflow.com/questions/59583133/invalid-directory-on-url-while-trying-to-use-path-created-using-new-psdrive-in?noredirect=1#comment105341319_59583133\n\n<blockquote><img src=\"https://cdn.sstatic.net/Sites/stackoverflow/img/apple-touch-icon@2.png?v=73d79a89bded\" width=\"48\" align=\"right\"><div>Stack Overflow</div><div><strong><a href=\"https://stackoverflow.com/questions/59583133/invalid-directory-on-url-while-trying-to-use-path-created-using-new-psdrive-in?noredirect=1\">\"Invalid directory on URL\" while trying to use path created using New-PSDrive in Powershell</a></strong></div><div>I have written a function to get authentication token. I have used New-PSDrive because PathTooLongException was thrown. Write-Host $adal, (Test-Path $adal) returns True while testing if path exists...</div></blockquote>",
      "created_at": "2020-01-04T15:09:30Z",
      "updated_at": "2020-01-04T15:09:32Z"
    }
  ],
  "created_at": "2020-01-03T20:21:48Z",
  "number": 11484,
  "state": "closed",
  "title": "\"Invalid directory on URL\" while trying to use path created using New-PSDrive in Powershell",
  "updated_at": "2020-01-04T17:25:12Z"
}