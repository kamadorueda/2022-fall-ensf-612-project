{
  "_url": "https://github.com/PowerShell/PowerShell/issues/17624",
  "author": "Kralizek",
  "body": "### Prerequisites\r\n\r\n- [X] Write a descriptive title.\r\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- [X] Search the existing issues.\r\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\r\n\r\n### Steps to reproduce\r\n\r\nIn my build script I have a step that spawns a docker container based on the powershell:latest image that fails with the error in the title.\r\n\r\nHere is the command executed on the build server\r\n\r\n```bash\r\ndocker run --rm -e AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY -e COMMIT_SHA1=$CIRCLE_SHA1 --network project_default mcr.microsoft.com/powershell pwsh -command '\r\n  Install-Module -Name AWS.Tools.Installer -Force\r\n  Install-AWSToolsModule AWS.Tools.S3 -Force -CleanUp\r\n  Invoke-WebRequest -Uri http://entrypoint-api/docs/v1.0/schema.json -OutFile /tmp/schema.json\r\n  Write-S3Object -File /tmp/schema.json -BucketName \"some_bucket\" -Key \"some_key/$env:COMMIT_SHA1.json\" -AccessKey $env:AWS_ACCESS_KEY_ID -SecretKey $env:AWS_SECRET_ACCESS_KEY\r\n'\r\n```\r\n\r\nThe command has worked without any issue until few days ago. Then we started getting the error specified above: \"Failed to create CoreCLR, HRESULT: 0x80070008\"\r\n\r\n```\r\nUnable to find image 'mcr.microsoft.com/powershell:latest' locally\r\nlatest: Pulling from powershell\r\n\r\n018f9d1d: Pulling fs layer \r\nDigest: sha256:844fb73db69ed0bbe82d159d4ba50aea06ef4d42bda766c52f2928683f5c8d09\r\nStatus: Downloaded newer image for mcr.microsoft.com/powershell:latest\r\nFailed to create CoreCLR, HRESULT: 0x80070008\r\n\r\nExited with code exit status 137\r\nCircleCI received exit code 137\r\n```\r\n\r\nAfter some testing, I noticed that the issue is only happening when using `latest` which is pointing at `ubuntu-22.04`.\r\n\r\nIf I use `7.2.0-debian-10`, `7.2-debian-10`, `7.2-alpine-3.14`, `alpine-3.14`, `ubuntu-22.04` it works without any problem.\r\n\r\nIn issue #13166 it was suggested to set `COMPlus_EnableDiagnostics` to `0`. This didn't help.\r\n\r\n### Expected behavior\r\n\r\n```console\r\nBeing able to run a container with latest image of powershell.\r\n```\r\n\r\n\r\n### Actual behavior\r\n\r\n```console\r\nContainer can't start\r\n```\r\n\r\n\r\n### Error details\r\n\r\n```console\r\nUnable to find image 'mcr.microsoft.com/powershell:latest' locally\r\nlatest: Pulling from powershell\r\n\r\n018f9d1d: Pulling fs layer \r\nDigest: sha256:844fb73db69ed0bbe82d159d4ba50aea06ef4d42bda766c52f2928683f5c8d09\r\nStatus: Downloaded newer image for mcr.microsoft.com/powershell:latest\r\nFailed to create CoreCLR, HRESULT: 0x80070008\r\n\r\nExited with code exit status 137\r\nCircleCI received exit code 137\r\n```\r\n\r\n\r\n### Environment data\r\nDon't have it.\r\n\r\n\r\n\r\n### Visuals\r\n\r\n_No response_",
  "closed_at": "2022-08-13T12:01:19Z",
  "comments": [
    {
      "author": "FelixSFD",
      "author_association": "NONE",
      "body": "The tag `ubuntu-22.04` doesn't work for me either. (no surprise given that `latest` points to the same version)\r\n\r\n```\r\nStatus: Downloaded newer image for mcr.microsoft.com/powershell:ubuntu-22.04\r\nmcr.microsoft.com/powershell:ubuntu-22.04\r\nFailed to create CoreCLR, HRESULT: 0x80070008\r\nProcess exited with code 137\r\n```",
      "created_at": "2022-07-07T07:12:07Z",
      "updated_at": "2022-07-07T07:12:07Z"
    },
    {
      "author": "StevenBucher98",
      "author_association": "COLLABORATOR",
      "body": "@TravisEz13 or @anamnavi was there any recent changes to the latest published docker containers that would have caused this issue? ",
      "created_at": "2022-07-11T16:12:02Z",
      "updated_at": "2022-07-11T16:12:02Z"
    },
    {
      "author": "anamnavi",
      "author_association": "MEMBER",
      "body": "@Kralizek @FelixSFD What version of powershell are you using? I'll look into replicating this my side and resolving soon!",
      "created_at": "2022-07-11T16:18:14Z",
      "updated_at": "2022-07-11T16:21:42Z"
    },
    {
      "author": "Kralizek",
      "author_association": "NONE",
      "body": "@anamnavi the faulty command is launched in  a `mcr.microsoft.com/powershell` container.\n\nBasically it's a step of a job in a CircleCI build. The job uses `mcr.microsoft.com/powershell` as executor and itself spawns another container based off the same image.\n\nIn our tests we didn't need to change the outer container but just the one we were using to execute those commands.",
      "created_at": "2022-07-11T16:55:51Z",
      "updated_at": "2022-07-11T16:55:51Z"
    },
    {
      "author": "anamnavi",
      "author_association": "MEMBER",
      "body": "@Kralizek thanks for sharing this info. The error code indicates that there's a memory issue. To try and find out what that issue is can you run this command in the container in CircleCI and share output:\r\n\r\n`/bin/sh -c 'grep hierarchical_memory_limit /sys/fs/cgroup/memory/memory.stat'`\r\n\r\nWe've not been able to repro the error or message with the command line you've shared, if you can share that it would help us repro. We tried with the image hash that you shared in the repro. \r\n\r\nThanks",
      "created_at": "2022-07-11T20:04:14Z",
      "updated_at": "2022-07-11T20:04:14Z"
    },
    {
      "author": "uecasm",
      "author_association": "NONE",
      "body": "I'm not the OP, but I'm hitting the same issue (with a simpler script, but the same container).  My host is a relatively ancient Debian box running docker 19.03.  The host does have ~3GB free RAM and running that command on the host just reports a max long value, as does running it inside the container.\r\n\r\nRunning the full powershell command on a Windows 10 host runs without issues, so it does seem to be something host-specific.  Using a different powershell container also works on my ancient host.",
      "created_at": "2022-07-12T05:19:43Z",
      "updated_at": "2022-07-12T05:19:43Z"
    },
    {
      "author": "Kralizek",
      "author_association": "NONE",
      "body": "@anamnavi Here is what I got in the host container\r\n\r\n```bash\r\n# I make sure the issue still exists\r\nroot@d1e24fe67e4c:~/project# docker run --rm mcr.microsoft.com/powershell\r\nFailed to create CoreCLR, HRESULT: 0x80070008\r\n\r\n# I start all the services\r\nroot@d1e24fe67e4c:~/project# docker-compose up -d\r\n[...]\r\nroot@d1e24fe67e4c:~/project# /bin/sh -c 'grep hierarchical_memory_limit /sys/fs/cgroup/memory/memory.stat'\r\nhierarchical_memory_limit 4320133120\r\n\r\n# I kill all the services\r\nroot@d1e24fe67e4c:~/project# docker-compose down\r\n[...]\r\nroot@d1e24fe67e4c:~/project# /bin/sh -c 'grep hierarchical_memory_limit /sys/fs/cgroup/memory/memory.stat'\r\nhierarchical_memory_limit 4320133120\r\n```",
      "created_at": "2022-07-13T08:49:17Z",
      "updated_at": "2022-07-14T08:54:38Z"
    },
    {
      "author": "anamnavi",
      "author_association": "MEMBER",
      "body": "@Kralizek, Could you please run the container with the COREHOST_TRACE variable set to 1 to enable tracing from .NET Core side, like so:\r\n```\r\ndocker run --rm -e COREHOST_TRACE=1 mcr.microsoft.com/powershell@sha256:844fb73db69ed0bbe82d159d4ba50aea06ef4d42bda766c52f2928683f5c8d09 pwsh -command ' \r\nInstall-Module -Name AWS.Tools.Installer -Force\r\nInstall-AWSToolsModule AWS.Tools.S3 -Force -CleanUp\r\n'\r\n```",
      "created_at": "2022-07-18T18:15:17Z",
      "updated_at": "2022-07-18T18:15:17Z"
    },
    {
      "author": "Kralizek",
      "author_association": "NONE",
      "body": "@anamnavi \r\n\r\nHere it is \r\n\r\n[log.txt](https://github.com/PowerShell/PowerShell/files/9134664/log.txt)\r\n",
      "created_at": "2022-07-18T19:10:12Z",
      "updated_at": "2022-07-18T19:10:12Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "The log shows a failure loading `/opt/microsoft/powershell/7-lts/libcoreclr.so` which is the CoreCLR itself. ",
      "created_at": "2022-08-11T21:30:22Z",
      "updated_at": "2022-08-11T21:30:22Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@Kralizek Digging into the error `HRESULT: 0x80070008` points to an issue with a syscall being blocked due to `SECCOMP` in an container environment. For example, https://github.com/dotnet/runtime/issues/1634 shows that this error happened when .NET called `sched_setaffinity` to set thread's CPU affinity mask in a Snap confined environment that didn't have the `process-control` interface.\r\n\r\nYou will want to read this article: https://www.linuxserver.io/blog/anatomy-of-an-issue, which points out a similar problem (also on the ubuntu-22.04 image) due to using old versions of Docker engine. Their resolution may be helpful to you: https://docs.linuxserver.io/faq#jammy.",
      "created_at": "2022-08-11T22:27:01Z",
      "updated_at": "2022-08-12T00:02:54Z"
    },
    {
      "author": "Kralizek",
      "author_association": "NONE",
      "body": "@daxian-dbw thanks for the reply. Do you have an idea why older images and images based off different distributions like alpine don't suffer of the same problem? ",
      "created_at": "2022-08-11T22:44:16Z",
      "updated_at": "2022-08-11T22:44:16Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "I'm not sure, but article I referenced to has the following that may be an explanation:\r\n> The problem is that if a new syscall gets introduced but Docker doesn't have it included in the profile then your containers can't use it and if, as in this case, the syscall replaces an older one, new distros using it will break previously functional containers.\r\n\r\nDoes either of the resolutions suggested at https://docs.linuxserver.io/faq#jammy work for you?\r\n",
      "created_at": "2022-08-11T23:06:07Z",
      "updated_at": "2022-08-11T23:06:20Z"
    },
    {
      "author": "Kralizek",
      "author_association": "NONE",
      "body": "@daxian-dbw I'll try when I get back to work. Currently on vacation ",
      "created_at": "2022-08-12T07:12:34Z",
      "updated_at": "2022-08-12T07:12:34Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2022-08-13T12:01:18Z",
      "updated_at": "2022-08-13T12:01:18Z"
    }
  ],
  "created_at": "2022-07-04T13:05:44Z",
  "labels": [
    "Issue-Question",
    "WG-DevEx-Portability",
    "Resolution-Answered"
  ],
  "number": 17624,
  "state": "closed",
  "title": "\"Failed to create CoreCLR, HRESULT: 0x80070008\" when using *latest*",
  "updated_at": "2022-08-15T17:15:16Z"
}