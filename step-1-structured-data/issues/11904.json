{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11904",
  "author": "SeeminglyScience",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 and PowerShell 7+ issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n\r\n-->\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\nusing namespace Windows.Devices.Enumeration\r\nusing namespace Windows.Foundation\r\n\r\n$null = [Windows.Devices.Enumeration.DeviceInformation, Windows.Devices.Enumeration, ContentType = WindowsRuntime]\r\n$asyncResult = [DeviceInformation]::FindAllAsync()\r\n$asyncResult -is [IAsyncOperation[DeviceInformationCollection]]\r\n# $true\r\n\r\n[IAsyncOperation[DeviceInformationCollection]]$asyncResult\r\n```\r\n\r\n# Expected behavior\r\n\r\nThe same object is returned without any differences.\r\n\r\n```none\r\nSystem.__ComObject\r\n```\r\n\r\n# Actual behavior\r\n\r\n```none\r\nInvalidArgument:\r\nLine |\r\n   9 |  [IAsyncOperation[DeviceInformationCollection]]$asyncResult\r\n     |  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n     | Cannot convert the \"System.__ComObject\" value of type \"System.__ComObject\" to type \"Windows.Foundation.IAsyncOperation`1[Windows.Devices.Enumeration.DeviceInformationCollection]\".\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-rc.2\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-rc.2\r\nOS                             Microsoft Windows 10.0.18362\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u0393\u00c7\u00aa}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\n# Notes\r\n\r\nThis happens mainly because the method that returns the object is typed as an interface and there isn't really a concrete implementation in the same way that there would be for non-COM objects.\r\n\r\nIf this worked it would be very useful due to the method binders behavior of selecting an overload based on explicit casting.  Fixing this would enable the use of methods like this without the mountains of reflection it currently requires.\r\n\r\nFor example, fixing this (possibly also conversions in the method binder) would enable this:\r\n\r\n```powershell\r\n$devices = [WindowsRuntimeSystemExtensions]::AsTask(\r\n    [IAsyncOperation[DeviceInformationCollection]]$asyncResult).\r\n    GetAwaiter().GetResult()\r\n```\r\n\r\nAlso related: #9816\r\n\r\n<details>\r\n\r\n<summary>Full Get-Error output (click to expand)</summary>\r\n\r\n```raw\r\nException             :\r\n    Type           : System.Management.Automation.RuntimeException\r\n    ErrorRecord    :\r\n        Exception             :\r\n            Type    : System.Management.Automation.ParentContainsErrorRecordException\r\n            Message : Cannot convert the \"System.__ComObject\" value of type \"System.__ComObject\" to type \"Windows.Foundation.IAsyncOperation`1[Windows.Devices.Enumeration.DeviceInformationCollection]\".\r\n            HResult : -2146233087\r\n        CategoryInfo          : InvalidArgument: (:) [], ParentContainsErrorRecordException\r\n        FullyQualifiedErrorId : ConvertToFinalInvalidCastException\r\n        InvocationInfo        :\r\n            ScriptLineNumber : 9\r\n            OffsetInLine     : 1\r\n            HistoryId        : -1\r\n            Line             : [IAsyncOperation[DeviceInformationCollection]]$asyncResult\r\n\r\n            PositionMessage  : At line:9 char:1\r\n                               + [IAsyncOperation[DeviceInformationCollection]]$asyncResult\r\n                               + ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n            CommandOrigin    : Internal\r\n        ScriptStackTrace      : at <ScriptBlock>, <No file>: line 9\r\n    Message        : Cannot convert the \"System.__ComObject\" value of type \"System.__ComObject\" to type \"Windows.Foundation.IAsyncOperation`1[Windows.Devices.Enumeration.DeviceInformationCollection]\".\r\n    InnerException :\r\n        Type        : System.Management.Automation.PSInvalidCastException\r\n        ErrorRecord :\r\n            Exception             :\r\n                Type    : System.Management.Automation.ParentContainsErrorRecordException\r\n                Message : Cannot convert the \"System.__ComObject\" value of type \"System.__ComObject\" to type \"Windows.Foundation.IAsyncOperation`1[Windows.Devices.Enumeration.DeviceInformationCollection]\".\r\n                HResult : -2146233087\r\n            CategoryInfo          : InvalidArgument: (:) [], ParentContainsErrorRecordException\r\n            FullyQualifiedErrorId : ConvertToFinalInvalidCastException\r\n            InvocationInfo        :\r\n                ScriptLineNumber : 9\r\n                OffsetInLine     : 1\r\n                HistoryId        : -1\r\n                Line             : [IAsyncOperation[DeviceInformationCollection]]$asyncResult\r\n\r\n                PositionMessage  : At line:9 char:1\r\n                                   + [IAsyncOperation[DeviceInformationCollection]]$asyncResult\r\n                                   + ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n                CommandOrigin    : Internal\r\n            ScriptStackTrace      : at <ScriptBlock>, <No file>: line 9\r\n        TargetSite  :\r\n            Name          : ThrowInvalidCastException\r\n            DeclaringType : System.Management.Automation.LanguagePrimitives\r\n            MemberType    : Method\r\n            Module        : System.Management.Automation.dll\r\n        StackTrace  :\r\n   at System.Management.Automation.LanguagePrimitives.ThrowInvalidCastException(Object valueToConvert, Type resultType)\r\n   at System.Management.Automation.LanguagePrimitives.ConvertNoConversion(Object valueToConvert, Type resultType, Boolean recurse, PSObject originalValueToConvert, IFormatProvider formatProvider, TypeTable backupTable)\r\n   at CallSite.Target(Closure , CallSite , Object )\r\n   at System.Dynamic.UpdateDelegates.UpdateAndExecute1[T0,TRet](CallSite site, T0 arg0)\r\n   at System.Management.Automation.Interpreter.DynamicInstruction`2.Run(InterpretedFrame frame)\r\n   at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.Run(InterpretedFrame frame)\r\n        Message     : Cannot convert the \"System.__ComObject\" value of type \"System.__ComObject\" to type \"Windows.Foundation.IAsyncOperation`1[Windows.Devices.Enumeration.DeviceInformationCollection]\".\r\n        Data        : System.Collections.ListDictionaryInternal\r\n        Source      : System.Management.Automation\r\n        HResult     : -2147467262\r\n    HResult        : -2146233087\r\nCategoryInfo          : InvalidArgument: (:) [], RuntimeException\r\nFullyQualifiedErrorId : ConvertToFinalInvalidCastException\r\nInvocationInfo        :\r\n    ScriptLineNumber : 9\r\n    OffsetInLine     : 1\r\n    HistoryId        : -1\r\n    Line             : [IAsyncOperation[DeviceInformationCollection]]$asyncResult\r\n\r\n    PositionMessage  : At line:9 char:1\r\n                       + [IAsyncOperation[DeviceInformationCollection]]$asyncResult\r\n                       + ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    CommandOrigin    : Internal\r\nScriptStackTrace      : at <ScriptBlock>, <No file>: line 9\r\n```\r\n\r\n</details>",
  "closed_at": null,
  "comments": [
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "This would also help with scenarios where a COM object implements multiple interfaces but `IDispatch` only reports the members of the \"main\" interface.\r\n\r\nSee [this StackOverflow](https://stackoverflow.com/q/63501159/1930135) for a real world example.  PowerShell's method binder lets you specify explicit interface implementations by casting the expression e.g. `([IList[string]]$obj).Add($item)`.  Assuming this logic will apply to COM objects, this would be a potentially easy way to enable utilizing COM interfaces like `Process2`.\r\n\r\ncc @daxian-dbw ",
      "created_at": "2020-08-26T02:13:15Z",
      "updated_at": "2020-08-26T02:14:06Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@SeeminglyScience Give that .NET 5 doesn't consume Windows metadata files anymore, the line `[Windows.Devices.Enumeration.DeviceInformation, ... , ContentType = WindowsRuntime]` doesn't work in 7.1-preview. Can you please maybe provide a new repro without involving the a WinRT object?",
      "created_at": "2020-08-27T21:49:59Z",
      "updated_at": "2020-08-27T21:49:59Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw Yeah it'll take me a minute though.  I don't use built in COM objects much so I don't know one off the top of my head, in the mean time the SO above has a non-winrt example.\r\n\r\nIf anyone happens to know a default COM object that implements `IUnknown` but not `IDispatch`, drop it here please \u2764\ufe0f ",
      "created_at": "2020-08-31T13:04:02Z",
      "updated_at": "2020-08-31T13:04:02Z"
    }
  ],
  "created_at": "2020-02-20T15:55:33Z",
  "labels": [
    "Issue-Enhancement"
  ],
  "number": 11904,
  "state": "open",
  "title": "Casting to a COM interface fails but `-is` returns `$true`",
  "updated_at": "2020-08-31T13:04:02Z"
}