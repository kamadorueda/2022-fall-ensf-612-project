{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9784",
  "author": "ThomasNieto",
  "body": "# Summary of the new feature/enhancement\r\n\r\nThere are cases when a module only works on a specific operating systems. Today module authors can tag a module in `PSGallery` stating which OS is supported. However, there is no enforcement from PowerShell itself to prevent a user from importing an incompatible module.\r\n\r\nThis request also goes along with #3751 to add support for `#requires -OS`.\r\n\r\nPowerShell 7 would be the best time to release this functionality.\r\n\r\n# Proposed technical implementation details (optional)\r\n\r\nAdd `CompatibleOS` field in the PSD1 with valid values of `Windows`, `MacOS`, and `Linux`. Then `Import-Module` can be updated use that field to prevent importing an incompatible module.\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "BrucePay",
      "author_association": "COLLABORATOR",
      "body": "Hi @tnieto88, Do you think just specifying Window/Linux/Mac is enough or do you see a need for more detail? What about OS version? For example, the new Windows \"terminal\" requires the latest update (1903 IIRC.) And then there are all the different Linux distros. The tricky bit of course is getting that detailed information since \"uname -a\" doesn't return the distro name or version.\r\n\r\n(On a related note; on Windows there is already the CompatiblePSEditions field for Desktop and Core that is (now) enforced). ",
      "created_at": "2019-05-31T19:17:41Z",
      "updated_at": "2019-05-31T19:17:41Z"
    },
    {
      "author": "ThomasNieto",
      "author_association": "CONTRIBUTOR",
      "body": "Hello @BrucePay, I think the current level of detail is fine. The values align with the automatic variables and with [RFC#35](https://github.com/PowerShell/PowerShell-RFC/pull/122/files). As for OS version I personally haven't had a need yet to specify a minimum version.",
      "created_at": "2019-05-31T19:42:23Z",
      "updated_at": "2019-05-31T19:42:23Z"
    },
    {
      "author": "kilasuit",
      "author_association": "COLLABORATOR",
      "body": "This to me feels like there needs to be an addition to the properties available in the psd1 that accompanies a module that add's at least simple OS values. However this needs to be done with caution as it likely will break down compatibility again like CompatiblePSEditions did",
      "created_at": "2019-06-02T15:47:06Z",
      "updated_at": "2019-06-02T15:47:06Z"
    },
    {
      "author": "ThomasNieto",
      "author_association": "CONTRIBUTOR",
      "body": "I agree adding a new PSD1 field that prevents importing on earlier versions is not ideal and would hurt adoption. Since PowerShellGet is getting rewritten with PS7 I mentioned in [PowerShell/PowerShell-RFC#185](https://github.com/PowerShell/PowerShell-RFC/pull/185/files/237f4c4b379480660ca317c230c5775610827296#r289590558) that may be good to move the built-in module (`*-Module`) commands to PowerShellGet. This would allow older PS versions to make use of enhancements and import any new PSD1 fields.\r\n\r\n> When this change is made, built-in `*-Module` commands should be updated to support `semver` as well as `[System.Version]` (for backwards compatibility). If the built-in commands are updated that brings up a question about how will older versions of PowerShell handle that. There are issues with the current paradigm of trying to force semver into a system that doesn't support it. We get issues like [PowerShell/PowerShellGet#324](https://github.com/PowerShell/PowerShellGet/issues/324) and [PowerShell/PowerShellGet#204](https://github.com/PowerShell/PowerShellGet/issues/204).\r\n> \r\n> What will be the minimum PS version supported for `PowerShellGet` v3? If it's less than PS 7 then it may be worth breaking out the built-in `*-Module` commands from PowerShell into `PowerShellGet` to add support for semver in older PS versions.",
      "created_at": "2019-06-03T02:14:52Z",
      "updated_at": "2019-06-03T02:14:52Z"
    }
  ],
  "created_at": "2019-05-31T18:34:05Z",
  "number": 9784,
  "state": "open",
  "title": "Feature Request: Import-Module validate compatible operating systems",
  "updated_at": "2019-06-03T02:14:52Z"
}