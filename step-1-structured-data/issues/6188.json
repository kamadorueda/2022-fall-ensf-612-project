{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6188",
  "author": "thezim",
  "body": "This also affects Get-Help -Online on the specific cmdlets.\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\nGet-Command -CommandType Cmdlet | Where-Object { [string]::IsNullOrEmpty($_.helpuri) } | ft Name, HelpUri\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\nHelpUris are returned.\r\n\r\nActual behavior\r\n---------------\r\n\r\n```none\r\nName                     HelpUri\r\n----                     -------\r\nConvertFrom-SecureString\r\nConvertTo-SecureString\r\nGet-Credential\r\nGet-ExecutionPolicy\r\nGet-PfxCertificate\r\nRemove-Alias\r\nSet-ExecutionPolicy\r\nStart-Transcript\r\nStop-Transcript\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n```powershell\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.1\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.1\r\nOS                             Darwin 17.4.0 Darwin Kernel Version 17.4.0: Sun Dec 17 09:19:54 PST 2017; root:xnu-4570.41.2~1/RE...\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2020-02-03T00:00:24Z",
  "comments": [
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "The issue is that _if a given cmdlet's module happens not to be imported at the time you run your command_, its `.HelpUri`, as reported by `Get-Command`, erroneously returns `''` (the empty string).\r\n\r\nYou can verify this by directly invoking a cmdlet in question - which implicitly forces importing of its module - and then running your command again:\r\n\r\n```powershell\r\nConvertFrom-SecureString -?  # forces import of underlying module 'Microsoft.PowerShell.Security'\r\n```\r\n\r\nNow, re-running your command should eliminate all cmdlets from module `Microsoft.PowerShell.Security` from your list (meaning that their `.HelpUri` property now contains the expected value), which in your case should only leave:\r\n\r\n```powershell\r\nRemove-Alias       # from module Microsoft.PowerShell.Utility\r\nStart-Transcript   # from module Microsoft.PowerShell.Host\r\nStop-Transcript    # ditto\r\n```\r\n\r\nIf you agree with this diagnosis, please update the issue's title and original post accordingly.",
      "created_at": "2018-02-18T23:42:44Z",
      "updated_at": "2018-02-18T23:43:27Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2020-02-03T00:00:23Z",
      "updated_at": "2020-02-03T00:00:23Z"
    }
  ],
  "created_at": "2018-02-18T21:59:25Z",
  "labels": [
    "Issue-Question",
    "Resolution-Answered",
    "WG-Cmdlets-Core"
  ],
  "number": 6188,
  "state": "closed",
  "title": "Get-Command does not return HelpUri for all cmdlets.",
  "updated_at": "2020-02-03T00:00:24Z"
}