{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3320",
  "author": "MiaRomero",
  "body": "Addressing issue https://github.com/PowerShell/PowerShell/issues/2730 'Rewrite Format-Hex in C#'\r\n\r\n-  [Documentation](https://msdn.microsoft.com/en-us/powershell/reference/5.1/microsoft.powershell.utility/format-hex) for Format-Hex states both the Path and LiteralPath parameters accept string arrays, though this functionality was not actually present for the cmdlet.  This has been corrected so both parameters can accept and process an array of strings.  If an invalid path is included in the array, a non-terminating 'FileNotFound' error will be thrown, but the remaining valid paths will be processed and output as usual.\r\n\r\n-  After a discussion with @Francisco-Gamino and @joeyaiello, it was decided to make the Raw parameter No-op.  Going forward all of the output will be displayed with a true representation of numbers that includes all of the bytes for its type (what the Raw parameter was formally doing).  For example, [Int32]170 passed to Format-Hex would have previously displayed only \"AA\".  Now it will display \"AA 00 00 00\".\r\n\r\n- Updated the InputObject parameter to accept an Int32[], in addition to all previously accepted types.\r\n\r\n- The way Format-Hex processes and displays input from the pipeline has been corrected.  Previously, the output for numbers in an array or range would be combined into one as seen below:\r\n```\r\n  PS D:\\GitHub\\PowerShell> 1,2 | fhx\r\n\r\n\r\n           Path:\r\n\r\n           00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F\r\n\r\n  00000000   01 02                                            ..\r\n```\r\n\r\n Now each number will be displayed as its own input object:\r\n```\r\n  PS D:\\GitHub\\PowerShell> 1,2 |fhx\r\n\r\n\r\n           00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F\r\n\r\n  00000000   01 00 00 00                                      ....\r\n\r\n\r\n           00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F\r\n\r\n  00000000   02 00 00 00                                      ....\r\n```\r\n\r\n- Added a new error that states Format-Hex only supports FileSystem Provider Paths.  Previously an error was thrown, but was not specific about the problem (and was displaying the wrong path).\r\n```\r\nfhx : The given path 'Cert:\\CurrentUser\\My\\' is not supported. This command only supports the FileSystem Provider paths.\r\nAt line:1 char:1\r\n+ fhx -path Cert:\\CurrentUser\\My\\\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : InvalidArgument: (Cert:\\CurrentUser\\My\\:String) [Format-Hex], ArgumentException\r\n    + FullyQualifiedErrorId : FormatHexOnlySupportsFileSystemPaths,Microsoft.PowerShell.Commands.FormatHex\r\n```\r\n\r\n- Cleaned up how we are exposing the Format-Hex error messages.  Removed from UtilityCommon.cs and are being accessed through UtilityCommonStrings.resx instead.\r\n\r\n- Updated and added tests for this cmdlet to validate newly implemented functionality and to be more comprehensive for original functionality.",
  "closed_at": "2017-03-21T16:00:44Z",
  "comments": [
    {
      "author": "msftclas",
      "author_association": "NONE",
      "body": "\r\n@__MiaRomero__,\nThanks for your contribution.\nTo ensure that the project team has proper rights to use your work, please complete the Contribution License Agreement at https://cla.microsoft.com.\n\nIt will cover your contributions to all Microsoft-managed open source projects.\n_Thanks,\nMicrosoft Pull Request Bot_",
      "created_at": "2017-03-13T19:30:07Z",
      "updated_at": "2017-03-13T19:30:07Z"
    },
    {
      "author": "Francisco-Gamino",
      "author_association": "CONTRIBUTOR",
      "body": "@SandeepSutari, @mirichmo, @daxian-dbw, @joeyaiello: Could you please take a look? Thanks.",
      "created_at": "2017-03-13T19:31:49Z",
      "updated_at": "2017-03-13T19:31:49Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@MiaRomero Do you use the same e-mail for GitHub and CLA sign?",
      "created_at": "2017-03-14T04:07:42Z",
      "updated_at": "2017-03-14T04:07:42Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Add `Breaking-Change` because `-Raw` removed.",
      "created_at": "2017-03-14T04:09:13Z",
      "updated_at": "2017-03-14T04:09:13Z"
    },
    {
      "author": "msftclas",
      "author_association": "NONE",
      "body": "__@MiaRomero__, thanks for signing the contribution license agreement. We will now validate the agreement and then the pull request.\r\n<br />_Thanks, Microsoft Pull Request Bot_",
      "created_at": "2017-03-14T16:19:23Z",
      "updated_at": "2017-03-14T16:19:23Z"
    },
    {
      "author": "MiaRomero",
      "author_association": "MEMBER",
      "body": "Hi @SandeepSutari, @Francisco-Gamino, @SteveL-MSFT, @iSazonov, and @JamesWTruher,\r\nThank you for your feedback.  I have addressed your comments - would you please take another look?\r\nThanks,\r\nMaria ",
      "created_at": "2017-03-15T20:22:25Z",
      "updated_at": "2017-03-15T20:25:20Z"
    },
    {
      "author": "Francisco-Gamino",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov, @joeyaiello: I am removing \"Breaking-Change\" label as the -Raw parameter is still present (is a No-op). ",
      "created_at": "2017-03-15T20:27:06Z",
      "updated_at": "2017-03-15T20:27:38Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "@Francisco-Gamino - Even with the noop `-Raw` parameter - there is a change in behavior we need to document - so please keep the Breaking Change label.",
      "created_at": "2017-03-15T20:47:15Z",
      "updated_at": "2017-03-15T20:47:15Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "It looks like we are using little-endian, since all windows version are little-endian. But since we are going cross-plat, maybe considering supporting big-endian as well? Or maybe at least document that we use little-endian by default?",
      "created_at": "2017-03-15T20:55:27Z",
      "updated_at": "2017-03-15T20:55:27Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "@daxian-dbw - I don't think we want to get in the business of dealing with endian-ness in this cmdlet.\r\n\r\nI think of it as more of a memory dumping tool, and it shouldn't necessarily interpret what it's dumping (even though we could).",
      "created_at": "2017-03-15T20:59:57Z",
      "updated_at": "2017-03-15T20:59:57Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee reviewed this and agreed on:\r\n- for numbers, we should prefix with 0 to retain width\r\n- change to formatting (due to storing in property) is a breaking change that just needs to be documented\r\n- if array is passed in, then each element in the array is a separate output object\r\n- FileInfo retains current behavior (special cased to format the content)",
      "created_at": "2017-03-15T23:36:43Z",
      "updated_at": "2017-03-15T23:36:43Z"
    },
    {
      "author": "MiaRomero",
      "author_association": "MEMBER",
      "body": "Thank you everyone for your feedback.  @lzybkr can you please merge when you have a chance?  My internship is over so if there are any questions/concerns please address them to @Francisco-Gamino.  Thanks!",
      "created_at": "2017-03-21T05:12:26Z",
      "updated_at": "2017-03-21T05:12:26Z"
    },
    {
      "author": "Francisco-Gamino",
      "author_association": "CONTRIBUTOR",
      "body": "It was great working with you @MiaRomero, thank you!",
      "created_at": "2017-03-21T05:19:33Z",
      "updated_at": "2017-03-21T05:19:33Z"
    },
    {
      "author": "Francisco-Gamino",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks @lzybkr! I will take care of #3382.",
      "created_at": "2017-03-21T19:46:03Z",
      "updated_at": "2017-03-21T19:46:03Z"
    }
  ],
  "created_at": "2017-03-13T19:30:03Z",
  "number": 3320,
  "state": "closed",
  "title": "Implement Format-Hex in C#",
  "updated_at": "2017-03-21T19:46:03Z"
}