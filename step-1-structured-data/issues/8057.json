{
  "_url": "https://github.com/PowerShell/PowerShell/issues/8057",
  "author": "KirkMunro",
  "body": "## PR Summary\r\n\r\nWhen invoking multiple PowerShell commands one at a time from an assembly that does not have PowerShell loaded by default, developers should create a runspace first via `RunspaceFactory.Create` inside of a using statement, and then for each command they want to invoke, create a PowerShell instance via `PowerShelll.Create` from within another using statement, and then after that set the runspace for the PowerShell instance to the runspace they created from the RunspaceFactory. This is cumbersome and unintuitive, and really should be simplified to make it easier to use and understand.\r\n\r\nThis PR adds a new `PowerShell.Create` method overload that accepts a Runspace object so that it is easier for developers to follow this model in their code.\r\n\r\n## PR Checklist\r\n\r\n- [X] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [X] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [X] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` to the beginning of the title and remove the prefix when the PR is ready.\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [X] User-facing [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [X] Issue filed - Issue link: https://github.com/PowerShell/PowerShell-Docs/issues/3131\r\n- **Testing - New and feature**\r\n    - [ ] Not Applicable or can only be tested interactively\r\n    - **OR**\r\n    - [X] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n        - [ ] [Add `[feature]` if the change is significant or affects feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\r\n",
  "closed_at": "2019-01-07T19:04:43Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@KirkMunro It would be great if you would link two gists with samples before and after the change to demo benefits.\r\n",
      "created_at": "2018-10-17T07:02:21Z",
      "updated_at": "2018-12-16T08:53:08Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov Good idea: https://gist.github.com/KirkMunro/9288214d59a89b965974852eb985eff5.",
      "created_at": "2018-10-17T11:22:20Z",
      "updated_at": "2018-10-17T11:22:20Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@KirkMunro I believe this can be done using the overload for `IntialSessionState`. Which in effect creates a runspace and opens it. Am I missing something?\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/4e5e3900f646449e91a30434dc4f5576329d82b2/src/System.Management.Automation/engine/hostifaces/PowerShell.cs#L853-L861\r\n\r\n\r\n\r\n",
      "created_at": "2018-10-18T19:00:02Z",
      "updated_at": "2018-10-18T19:00:02Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "@adityapatwardhan That only works for one invocation. A single PowerShell instance. The PR allows you to create your runspace and initialize it with the initialSessionState, and then easily use it over, and over, for as many PowerShell instances as you need, keeping each instance in the same runspace that is initialized only once.",
      "created_at": "2018-10-18T19:33:49Z",
      "updated_at": "2018-10-18T19:33:49Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee is ok with this change to have an overloaded api rather than requiring setting runspace on the property",
      "created_at": "2018-10-24T22:39:51Z",
      "updated_at": "2018-10-25T19:33:33Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "FYI, I'm on vacation this week and through the weekend, so I'll catch up on all of this when I am back at home.",
      "created_at": "2018-10-27T00:22:54Z",
      "updated_at": "2018-10-27T00:22:54Z"
    },
    {
      "author": "stale[bot]",
      "author_association": "NONE",
      "body": "This PR has been automatically marked as stale because it has not had activity in the last 30 days. It will be closed if no further activity occurs within 10 days.\nThank you for your contributions.\nCommunity members are welcome to grab these works.\n",
      "created_at": "2018-12-15T21:17:17Z",
      "updated_at": "2018-12-15T21:17:17Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT What's the hold up on this one? Is it simply outstanding code reviews?",
      "created_at": "2018-12-17T15:44:32Z",
      "updated_at": "2018-12-17T15:44:32Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@KirkMunro Yes, please address the code review feedback.  Otherwise, it's good to go.",
      "created_at": "2018-12-20T04:45:23Z",
      "updated_at": "2018-12-20T04:45:23Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT Unless I'm missing something there are no outstanding code review changes to make. See the discussion between Paul, Ilya and I.",
      "created_at": "2018-12-20T17:49:22Z",
      "updated_at": "2018-12-20T17:49:22Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@KirkMunro you are correct.  Unfortunately we're a bit understaffed right now due to the holidays.  I expect this to be merged after the new year.\r\n\r\n@adityapatwardhan should review your changes and approve",
      "created_at": "2018-12-20T18:51:58Z",
      "updated_at": "2018-12-20T18:51:58Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@daxian-dbw Could you update your review please?",
      "created_at": "2019-01-07T17:59:01Z",
      "updated_at": "2019-01-07T17:59:01Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@daxian-dbw I merged the change. I thought it was assigned to me.",
      "created_at": "2019-01-07T19:05:30Z",
      "updated_at": "2019-01-07T19:05:30Z"
    }
  ],
  "created_at": "2018-10-17T02:36:38Z",
  "number": 8057,
  "state": "closed",
  "title": "Add S.M.A.PowerShell.Create method overload with Runspace argument",
  "updated_at": "2019-01-07T21:40:51Z"
}