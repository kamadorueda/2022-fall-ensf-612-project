{
  "_url": "https://github.com/PowerShell/PowerShell/issues/16153",
  "author": "mklement0",
  "body": "### Prerequisites\r\n\r\n- [X] Write a descriptive title.\r\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- [X] Search the existing issues.\r\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\r\n\r\n### Steps to reproduce\r\n\r\nNote: \r\n* This issue has _partly_ been reported before, in the context of #3727, but it's worth creating a focused report.\r\n* The problem affects `-Exclude` too, but use of `-Exclude` with _file_ filters is treacherous and not meaningfully supported.\r\n\r\nWhen you combine `Remove-Item -Recurse` with either `-Include` or `-Filter`, only those items _inside_ the target directory subtree that match the pattern(s) are removed, as intended.\r\n\r\nHowever, if you invoke such a command with `.` as the input path, i.e. from _inside_ the target directory, the command fails, as an attempt is seemingly made to delete the directory _itself_:\r\n\r\n```powershell\r\n# Switch to a temporary directory.\r\nPush-Location -ea Stop ($tmpDir = (New-Item -Type Directory -Force (Join-Path Temp:/ $PID)).FullName)\r\n\r\ntry {\r\n\r\n$null = New-Item -Force 1.txt, sub/2.txt\r\n\r\nRemove-Item . -Recurse -Filter *.txt\r\n\r\n$null = New-Item -Force 1.txt, sub/2.txt\r\n\r\nRemove-Item . -Recurse -Include *.txt\r\n\r\n} finally {\r\n  # Clean up.\r\n  Pop-Location; Remove-Item $tmpDir -Recurse\r\n}\r\n```\r\n\r\n### Expected behavior\r\n\r\nBoth `Remove-Item` calls should succeed and delete all `*.txt` files from the current dir's subtree.\r\n\r\n\r\n### Actual behavior\r\n\r\nBoth commands fail.\r\n\r\n\r\n### Error details\r\n\r\n```none\r\nCannot remove the item at '<full-path-of-current-dir>' because it is in use.\r\n```\r\n\r\n\r\n### Environment data\r\n\r\n```powershell\r\nPowerShell Core 7.2.0-preview.9\r\n```\r\n\r\nThe problem also affects Windows PowerShell.\r\n\r\n### Visuals\r\n\r\n_No response_",
  "closed_at": null,
  "comments": [
    {
      "author": "237dmitry",
      "author_association": "NONE",
      "body": "> Both commands fail.\r\n\r\n```\r\nRemove-Item -Path .\\* -Filter *.txt -Recurse -Force -ErrorAction SilentlyContinue\r\nRemove-Item -Path .\\* -Include *.txt -Recurse\r\n``` \r\nSuccess for both commands. Try input path `.\\*`\r\n7.1.4",
      "created_at": "2021-09-24T22:51:21Z",
      "updated_at": "2021-09-24T22:51:21Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@237dmitry, yes, that is a viable _workaround_ (`*` will do) - but it shouldn't be necessary, and that's what this issue is about.",
      "created_at": "2021-09-24T22:53:45Z",
      "updated_at": "2021-09-24T22:56:02Z"
    }
  ],
  "created_at": "2021-09-24T21:29:50Z",
  "labels": [
    "Issue-Bug",
    "WG-Cmdlets-Management",
    "Needs-Triage",
    "Area-FileSystem-Provider"
  ],
  "number": 16153,
  "state": "open",
  "title": "Remove-Item -Recurse with an -Include or -Filter argument mistakenly tries to remove the directory itself",
  "updated_at": "2021-12-01T07:13:32Z"
}