{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13871",
  "author": "xtqqczze",
  "body": "https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1067\r\n",
  "closed_at": "2021-08-05T23:32:33Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> Should an override be provided for `GetHashCode()` too?\r\n\r\nIt is not clear if we force the rule why does it not complain?",
      "created_at": "2020-10-29T12:39:11Z",
      "updated_at": "2020-10-29T12:39:11Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "> > Should an override be provided for `GetHashCode()` too?\r\n> \r\n> It is not clear if we force the rule why does it not complain?\r\n\r\nWe might expect to see [compiler warning (level 3) CS0659](https://docs.microsoft.com/dotnet/csharp/misc/cs0659) if the override for `GetHashCode` is missing. It appears we have [level 5 warnings](https://docs.microsoft.com/dotnet/csharp/language-reference/compiler-options/warn-compiler-option) enabled.",
      "created_at": "2020-10-29T14:44:51Z",
      "updated_at": "2020-10-29T14:44:51Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "> > Should an override be provided for `GetHashCode()` too?\r\n> \r\n> It is not clear if we force the rule why does it not complain?\r\n\r\nThe method already exists: \ud83d\ude1b\r\n`public override int GetHashCode()`",
      "created_at": "2020-10-29T14:51:08Z",
      "updated_at": "2020-10-29T14:51:08Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2020-11-06T02:00:15Z",
      "updated_at": "2020-11-06T02:00:15Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I am not sure it is a breaking change.",
      "created_at": "2020-11-21T15:20:30Z",
      "updated_at": "2020-11-21T15:20:30Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "> I am not sure it is a breaking change.\r\n\r\nAccording to .NET compatibility guidelines, probably not:\r\n> ALLOWED: Adding or removing an override\r\n\r\nhttps://docs.microsoft.com/dotnet/core/compatibility/#members\n\n<blockquote><img src=\"https://docs.microsoft.com/en-us/media/logos/logo-ms-social.png\" width=\"48\" align=\"right\"><div><strong><a href=\"https://docs.microsoft.com/en-us/dotnet/core/compatibility/\">Types of breaking changes - .NET Core</a></strong></div><div>Learn how .NET Core attempts to maintain compatibility for developers across .NET versions, and what kind of change is considered a breaking change.</div></blockquote>",
      "created_at": "2020-11-22T08:54:55Z",
      "updated_at": "2020-11-22T08:54:57Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2020-11-29T14:00:10Z",
      "updated_at": "2020-11-29T14:00:10Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Ask PowerShell Committee about adding new public API.",
      "created_at": "2021-06-28T03:22:28Z",
      "updated_at": "2021-06-28T03:22:28Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee reviewed this, we are ok taking the new public API, but a test needs to be added and we believe the current implementation may not be correct",
      "created_at": "2021-06-30T22:39:33Z",
      "updated_at": "2021-06-30T22:39:33Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@xtqqczze Please add some xUnit tests as Committee ask.",
      "created_at": "2021-07-01T03:36:16Z",
      "updated_at": "2021-07-01T03:36:35Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov I do not know even where to begin with adding these tests :(",
      "created_at": "2021-07-01T16:22:20Z",
      "updated_at": "2021-07-01T16:22:20Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@xtqqczze xUnit tests are in test\\xUnit\\csharp folder. (You could look similar tests for Equals() in .Net Runtime repo.)",
      "created_at": "2021-07-01T19:10:19Z",
      "updated_at": "2021-07-01T19:11:24Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2021-07-09T02:00:42Z",
      "updated_at": "2021-07-09T02:00:42Z"
    }
  ],
  "created_at": "2020-10-25T15:58:15Z",
  "number": 13871,
  "state": "closed",
  "title": "Enable `CA1067`: Override `Object.Equals(object)` when implementing `IEquatable<T>`",
  "updated_at": "2021-08-05T23:32:39Z"
}