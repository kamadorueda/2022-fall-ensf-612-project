{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10390",
  "author": "KirkMunro",
  "body": "# PR Summary\r\n\r\nI went looking for code related to providers, and found it surprisingly difficult to find without using an appropriate search term. All PowerShell provider-related code was under a folder called namespaces. I can only guess that \"namespaces\" was the original name for what eventually became \"providers\".\r\n\r\nAt any rate, to set up `System.Management.Automation.csproj` for easier discovery of provider-related code, I renamed the \"namespaces\" folder as \"providers\". There are no code changes, just the renaming of a folder and some corresponding changes in `System.Management.Automation.csproj` so that it works the same way with the folder renamed.\r\n\r\n## PR Context\r\n\r\nThis is just some project cleanup to make it easier to find provider-related code in the `System.Management.Automation` project.\r\n\r\n## PR Checklist\r\n\r\n- [X] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [X] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [X] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [X] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [X] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [X] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2019-08-22T14:20:32Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Will it keep git history?\r\n",
      "created_at": "2019-08-21T05:50:23Z",
      "updated_at": "2019-08-21T05:50:23Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "Great question @iSazonov, I had assumed so, but hadn't looked into that.\r\n\r\nBasing on what I read online, you can still see history beyond a file rename by using `git log --follow` with individual files. It also seems that GitHub does not support that in their platform yet.",
      "created_at": "2019-08-21T13:38:03Z",
      "updated_at": "2019-08-21T13:38:03Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": ">  It also seems that GitHub does not support that in their platform yet.\r\n\r\nI saw this a day before :-( So I'd prefer to postpone the cosmetic fix. \r\nReally we have a lot of places where we could move/rename folders and files. But modern IDEs support source references very well and it is not problem to walk through code without debug and find a place of interest ignoring real folder and files names at all.\r\nI never thought about it, but in fact I almost never open files directly - file search and the omnisharp  plugin are the most convenient and fast way for me.",
      "created_at": "2019-08-22T04:48:56Z",
      "updated_at": "2019-08-22T04:48:56Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "I don't feel renames of folders are merely cosmetic, because they aid in discovery, and when working in tools like Visual Studio I'll still use the solution tree and browse to specific parts of the code I'm working with, and `namespaces` is clearly the wrong folder name here.\r\n\r\nThat said, I agree that since GitHub does not support file history through renames, this should be postponed until such a time that they do.",
      "created_at": "2019-08-22T14:20:32Z",
      "updated_at": "2019-08-22T14:20:32Z"
    }
  ],
  "created_at": "2019-08-20T14:51:32Z",
  "number": 10390,
  "state": "closed",
  "title": "Rename \"namespaces\" folder as \"providers\"",
  "updated_at": "2019-08-22T14:20:32Z"
}