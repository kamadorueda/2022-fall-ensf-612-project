{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6002",
  "author": "limartin",
  "body": "\r\n\r\nSteps to reproduce\r\n------------------\r\nThis same code, works in Powershell in Windows, where in Linux doesn't.\r\n\r\n```powershell\r\n$contentType = \"octet-stream\"\r\n$headers = @{\"foo\"=\"bar\"}\r\nInvoke-RestMethod -method post \"http://foo/bar\" -Headers $headers -ContentType $contentType -infile $chunkFile\r\n\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```Successfully upload the content of chunkFile\r\n\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n```Invoke-RestMethod says:\r\nThe format of value 'octet-stream' is invalid. However, it does allows: \"application/octect-stream\"\r\n\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\n$PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.0\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.0\r\nOS                             Linux 3.10.0-514.21.1.el7.x86_64 #1 SMP Thu May 25 17:04:51 UTC 2017\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n\r\n```\r\n",
  "closed_at": "2018-02-22T19:15:06Z",
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "As far as I can tell, a mimetype consists of a type/subtype.  Seems like we have 3 options here:\r\n\r\n- keep current behavior and just pass through which may be confusing to users transitioning from Windows PS to PS Core\r\n- error/warning if type is not specified\r\n- if no type specified, automatically prefix with \"application/\" (not sure how safe/dangerous it would be to do this)\r\n\r\ncc @markekraus ",
      "created_at": "2018-01-24T00:58:09Z",
      "updated_at": "2018-01-24T00:58:09Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "Strict header validation is now default in PS core. This applies to any RFC defined header supplied to `-Headers` or `-ContentType`. One can bypass strict header validation with the `-SkipHeaderValidation` parameter. \r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/master/docs/BREAKINGCHANGES.md#changes-to-web-cmdlets\r\n\r\nMore info https://get-powershellblog.blogspot.com/2017/11/powershell-core-web-cmdlets-in-depth.html#L08",
      "created_at": "2018-01-24T01:14:16Z",
      "updated_at": "2018-01-24T01:14:16Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "Actually... there seems to be some odd behavior here. -SkipHeaderValidation doesn't seem to work when `-InFile` is used. This is a bug. I'll have to look into it.",
      "created_at": "2018-01-24T01:45:30Z",
      "updated_at": "2018-01-24T01:45:30Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "After investigating, `-SkipHeaderValidation` is not being applied at all to `-ContentType`. I should have a PR to fix this tomorrow or later today. I have the fix code, just need to write tests.",
      "created_at": "2018-01-24T11:10:48Z",
      "updated_at": "2018-01-24T11:10:48Z"
    }
  ],
  "created_at": "2018-01-24T00:49:07Z",
  "labels": [
    "Issue-Bug",
    "Resolution-Fixed",
    "WG-Cmdlets-Utility"
  ],
  "number": 6002,
  "state": "closed",
  "title": "Inconsistent behavior from Invoke-RestMethod from Windows Powershell to Powershell Core",
  "updated_at": "2018-03-24T17:56:09Z"
}