{
  "_url": "https://github.com/PowerShell/PowerShell/issues/14868",
  "author": "LeeHolmes",
  "body": "Format-Hex does not properly filtering non-printable characters:\r\n\r\n````\r\nFormat-Hex $pshome\\pwsh.exe -Count 120\r\n````\r\n\r\n![image](https://user-images.githubusercontent.com/11475352/108606800-2b4e9100-7371-11eb-9e63-4d68152eeaa7.png)\r\n\r\nThe industry standard is that dots represent everything that is non-printable, including null-bytes. The use of the Unicode non-printable character is a neat idea, but diverging from the industry standard just makes it look like a bug. Also, using spaces for null bytes (rather than a dot) makes it very difficult to visually match up which character corresponds to which hex offset, where in a traditional hex format you can count characters.\r\n\r\nIf the goal was to make it more clear which were the \"real\" character vs. artifacts we add because the character is non-printable, using a dark grey dot (w/ ANSI) might be cool:\r\n\r\n![image](https://user-images.githubusercontent.com/11475352/108607227-fabc2680-7373-11eb-9092-220b4a0234d6.png)\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "+100  Using dot for non-printable chars makes it so much easier to \"scan\" the right column for ASCII chars.",
      "created_at": "2021-02-20T20:09:16Z",
      "updated_at": "2021-02-20T23:17:09Z"
    }
  ],
  "created_at": "2021-02-20T20:05:57Z",
  "number": 14868,
  "state": "open",
  "title": "Format-Hex does not properly filter non-printable characters",
  "updated_at": "2021-02-22T19:01:20Z"
}