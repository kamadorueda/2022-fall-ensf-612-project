{
  "_url": "https://github.com/PowerShell/PowerShell/issues/2334",
  "author": "vors",
  "body": "<!--\n\nIf it is a bug report:\n- make sure you are able to repro it on the latest released version. \nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\n- Search the existing issues.\n- Refer to the [FAQ](../docs/FAQ.md).\n- Refer to the [known issues](../docs/KNOWNISSUES.md).\n- Fill out the following repro template\n\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\n-->\n## Steps to reproduce\n\n``` powershell\nStart-Transcript -Path foo.txt -Force\n$rs = [system.management.automation.runspaces.runspacefactory]::CreateRunspace()\n$rs.open()\n$ps = [System.Management.Automation.PowerShell]::Create()\n$ps.Runspace = $rs\n$ps.Dispose()\n\"Before Dispose\"\n$rs.Dispose()\n\"After Dispose\"\nStop-Transcript\n```\n## Expected behavior\n\nNo errors, the whole transcript (including \"After Dispose\") should be in the `foo.txt` file\n## Actual behavior\n\n```\nStop-Transcript : An error occurred stopping transcription: The host is not currently transcribing.\nAt line:1 char:1\n+ Stop-Transcript\n+ ~~~~~~~~~~~~~~~\n    + CategoryInfo          : InvalidOperation: (:) [Stop-Transcript], PSInvalidOperationException\n    + FullyQualifiedErrorId : InvalidOperation,Microsoft.PowerShell.Commands.StopTranscriptCommand\n```\n\n\"After Dispose\" is not in the `foo.txt` file\n## Environment data\n\n<!-- provide the output of $PSVersionTable -->\n\nWindows.\n\n``` powershell\n> $PSVersionTable\nName                           Value\n----                           -----\nPSEdition                      Core\nPSVersion                      6.0.0-alpha\nCLRVersion\nGitCommitId                    v6.0.0-alpha.10\nWSManStackVersion              3.0\nBuildVersion                   3.0.0.0\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\nPSRemotingProtocolVersion      2.3\nSerializationVersion           1.1.0.1\n```\n\n Also verfied in inbox\n\n```\nName                           Value\n----                           -----\nPSVersion                      5.1.14393.187\nPSEdition                      Desktop\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\nBuildVersion                   10.0.14393.187\nCLRVersion                     4.0.30319.42000\nWSManStackVersion              3.0\nPSRemotingProtocolVersion      2.3\nSerializationVersion           1.1.0.1\n```\n\ncc @adityapatwardhan @LeeHolmes @PaulHigin \n",
  "closed_at": "2017-06-14T17:13:49Z",
  "comments": [
    {
      "author": "Fitzroy87",
      "author_association": "NONE",
      "body": "@vors - does this issue account for the undesired behaviour documented in this uservoice post? https://windowsserver.uservoice.com/forums/301869-powershell/suggestions/14745750-ps-5-0-bug-transcript-stops-after-restarting-a-re\n\nI posted that bug on uservoice sometime ago. I have since had to edit all my scripts to include a wrapper around restart-computer in order to start a prematurely terminated transcript upon completion of restarting a remote computer. Most frustrating as this behaviour was not exhibited prior to WMF 5.0.\n",
      "created_at": "2016-10-10T12:50:13Z",
      "updated_at": "2016-10-10T12:57:15Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "@Fitzroy87 my wild guess is yes. These two are likely related.\n",
      "created_at": "2016-10-10T17:01:26Z",
      "updated_at": "2016-10-10T17:01:26Z"
    },
    {
      "author": "Fitzroy87",
      "author_association": "NONE",
      "body": "@vors Thank you. Apologies for polluting the discussion with a novice question - but in order for me to test the fix should I use WMF 5.1 or a 6.0 alpha build?\n",
      "created_at": "2016-10-10T17:47:12Z",
      "updated_at": "2016-10-10T17:47:12Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "@Fitzroy87 the issue is still open, which mean that it's still present in the `master` branch.\n",
      "created_at": "2016-11-20T07:19:04Z",
      "updated_at": "2016-11-20T07:19:04Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@chunqingchen I'm assigning this to you since you're already touching the transcription code",
      "created_at": "2017-05-18T23:37:50Z",
      "updated_at": "2017-05-18T23:37:50Z"
    },
    {
      "author": "chunqingchen",
      "author_association": "CONTRIBUTOR",
      "body": "This issue has been resolved fixed and verified",
      "created_at": "2017-06-14T17:13:49Z",
      "updated_at": "2017-06-14T17:13:49Z"
    },
    {
      "author": "potatoqualitee",
      "author_association": "NONE",
      "body": "Is this only going to be fixed in PS6?\r\n\r\n![image](https://user-images.githubusercontent.com/8278033/49687291-33f47d00-fb01-11e8-9117-22afb893dbee.png)\r\n\r\n![image](https://user-images.githubusercontent.com/8278033/49687316-86359e00-fb01-11e8-8d86-933e06bd9d00.png)\r\n\r\nIs there anything we can do locally to fix it? Perhaps some override?",
      "created_at": "2018-12-08T14:54:51Z",
      "updated_at": "2018-12-08T14:54:51Z"
    },
    {
      "author": "potatoqualitee",
      "author_association": "NONE",
      "body": "omg uh, i have no idea how i unassigned anyone \ud83d\ude10 sorry @chunqingchen !",
      "created_at": "2018-12-08T16:00:16Z",
      "updated_at": "2018-12-08T16:00:16Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "No issues experience with PowerShell Core GA v6.1.1 or Preview version 6.2.0-preview.2.\r\n\r\n![pwsh01_transcript_01_2018-12-08_11-19-24](https://user-images.githubusercontent.com/19892435/49688140-7e630300-fadb-11e8-83ba-179fd93f6e28.jpg)\r\n![pwsh01_transcript_02_2018-12-08_11-19-24](https://user-images.githubusercontent.com/19892435/49688142-8327b700-fadb-11e8-8911-eed2aab6cf3c.jpg)\r\n\r\nIt's only in Windows PowerShell 5.1 and it won't be fix as all changes are been done for PowerShell Core moving forward.\r\n\r\n![pwsh01_transcript_03_2018-12-08_11-19-24](https://user-images.githubusercontent.com/19892435/49688170-05b07680-fadc-11e8-8d3b-81c205f61b28.jpg)\r\n\r\n\r\n",
      "created_at": "2018-12-08T16:26:25Z",
      "updated_at": "2018-12-08T16:26:25Z"
    },
    {
      "author": "potatoqualitee",
      "author_association": "NONE",
      "body": "I saw it was fixed in 6, just hoping it could mayyyybe get fixed in the version that most of our people use \ud83e\udd1e",
      "created_at": "2018-12-08T23:32:32Z",
      "updated_at": "2018-12-08T23:32:32Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "From what I've been told there's going to be basically no more fixes backported to PS5.1, I'm afraid.\r\n\r\nYour best bet is to submit a request on the uservoice site for Windows PowerShell, but from what I've heard there are no guarantees anything more will be done with Windows PowerShell. \ud83d\ude41 ",
      "created_at": "2018-12-08T23:52:49Z",
      "updated_at": "2018-12-08T23:52:49Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "@vexx32 \r\n\r\nYes! There's no guarantees, but it helps identify bugs for PowerShell Core.\r\n\r\nBugs found in Windows PowerShell are been fix in PowerShell Core, as Windows PowerShell is complete. Microsoft was clear on this statement that they stop doing work in Windows PowerShell. So, 5.1 is the last version.\r\n\r\nSo, if there's any bug found in Windows PowerShell, it should repro in Core so it can be fix moving forward.\r\n\r\nI have to say, now is a good time to truly test PowerShell Core, alongside Windows PowerShell, to help cleaning up what's missing.  As, down the road, PowerShell Core will substitute Windows PowerShell. \r\n:)",
      "created_at": "2018-12-11T16:59:58Z",
      "updated_at": "2018-12-11T16:59:58Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Indeed, no argument there, but as has already been mentioned, this particular issue seems to have been fixed for Core already. \ud83d\ude04 \r\n",
      "created_at": "2018-12-11T17:04:46Z",
      "updated_at": "2018-12-11T17:04:46Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Since this specific issue is security related, we did make a fix in Windows PowerShell 5.1, but it'll only be available in newest Win10 builds.",
      "created_at": "2018-12-18T20:33:22Z",
      "updated_at": "2018-12-18T20:33:22Z"
    },
    {
      "author": "alexandair",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT Could you define the \"newest Win10 build\"?\r\nI have `PSVersion: 5.1.17763.134` and `winver` returns `Version 1809 (OS Build 17763.194)`.\r\n\r\nThe issue is still present.\r\n\r\nPS Could someone explain to me `.134` in PSVersion and `.194` in winver's output? Shouldn't that be the same number?",
      "created_at": "2018-12-19T01:24:35Z",
      "updated_at": "2018-12-19T01:24:35Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "The last two digits in the version are updated automatically by the build system.  You should just consider it magic and not rely on it.  \"Newest\" here specifically means I believe the fix was checked in late last week so unless whenever that builds goes out to the Insider flights.  Without going into details, it's complicated how a fix we make in our working branch in Windows ends up into a flighted build.  It can take weeks.",
      "created_at": "2018-12-19T01:39:51Z",
      "updated_at": "2018-12-19T01:39:51Z"
    },
    {
      "author": "alexandair",
      "author_association": "CONTRIBUTOR",
      "body": "I hope PowerShell team is aware how very confusing all this is. And, if it's confusing to someone who is involved as much as I am, I don't understand how regular PowerShell users can keep track on all this. \r\nVersion numbers that are not actually representing builds, inconsistent version numbers... If something is fixed in the insider build, that's not actually fixed for the most users. Majority of users care about the production-ready builds, and insider builds are not ready for a production. 1809 build showed us that even that one wasn't ready for a couple of months. :(  ",
      "created_at": "2018-12-19T02:02:29Z",
      "updated_at": "2018-12-19T02:02:29Z"
    },
    {
      "author": "potatoqualitee",
      "author_association": "NONE",
      "body": "That is good news, thank you @SteveL-MSFT! I will let people know.",
      "created_at": "2018-12-19T15:15:50Z",
      "updated_at": "2018-12-19T15:15:50Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "@alexandair Yes, this is unfortunately a confusing process.  The fix was ported to a low level internal branch on 12/12 last week, and as @SteveL-MSFT mentioned, will propagate to a vNext flighting branch in a few weeks.\r\n\r\nI doubt the fix would meet the bar for back porting to servicing branches (i.e., a patch), especially since the change in behavior can be viewed as a breaking change.",
      "created_at": "2018-12-19T16:55:04Z",
      "updated_at": "2018-12-19T16:55:04Z"
    },
    {
      "author": "thecliguy",
      "author_association": "NONE",
      "body": "@paulhigin How is fixing it a breaking change when in fact the introduction of this issue was a breaking change for scripts written against all versions of Powershell prior to 5.0 (which is when it was first introduced)?\r\n\r\nThe particular effect of this issue that I'm referring to is documented here (a UserVoice issue I raised in 2016): https://windowsserver.uservoice.com/forums/301869-powershell/suggestions/14745750-ps-5-0-bug-transcript-stops-after-restarting-a-re",
      "created_at": "2018-12-19T17:59:59Z",
      "updated_at": "2018-12-19T18:01:26Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "@thecliguy Good point.  But the new behavior is not exactly the same as before, although I believe it is now correct.  Probably unlikely, but I worry about possible regressions when patching to live systems.",
      "created_at": "2018-12-19T18:27:00Z",
      "updated_at": "2018-12-19T18:27:00Z"
    },
    {
      "author": "HammadKamran",
      "author_association": "NONE",
      "body": "Hi, the issue seems to have poped back up. \r\n![image](https://user-images.githubusercontent.com/49006960/82059886-89519800-96be-11ea-9ecc-f08612aed86e.png)\r\n![image](https://user-images.githubusercontent.com/49006960/82060001-a8502a00-96be-11ea-8a13-2b8aca0a9601.png)\r\n",
      "created_at": "2020-05-15T14:14:24Z",
      "updated_at": "2020-05-15T14:14:24Z"
    }
  ],
  "created_at": "2016-09-21T21:12:18Z",
  "number": 2334,
  "state": "closed",
  "title": "Transcription for the host stops, when ANY runspace in the host get closed",
  "updated_at": "2020-05-15T14:14:25Z"
}