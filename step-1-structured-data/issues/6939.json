{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6939",
  "author": "daxian-dbw",
  "body": "## PR Summary\r\n\r\nFix #6886 \r\nOur configuration definition 'Linux' caused our Linux build to be unoptimized, and we didn't realize until recently. This was fixed in #6853, which makes our Linux build adopts the same configuration settings as on Windows -- debug and release.\r\n\r\n`Start-PSBuild -Clean` on Linux starts to use the debug configuration by default, which reveals another issue on Linux build -- we use a cache in `InitialSessionState` to initialize cmdlets from S.M.A.dll in order to speed up powershell startup and items in cache drifts from actual cmdlet types available in S.M.A.dll in Unix platforms.\r\n\r\nThis is because there are some cmdlets not supported on Unix, which are if/def'ed out in the cache code, but they are still compiled in S.M.A.dll on Unix. We have some code that only runs in debug configuration to check if the cache is in sync with the real status of S.M.A.dll, but we never got to run in debug configuration because of the 'Linux' configuration we used before.\r\n\r\nThis PR skips compiling the non-supported cmdlets in S.M.A.dll, to keep the cache in InitialSessionState in sync with the actually available cmdlet types in System.Management.Automation.dll.\r\n\r\n## Change Details\r\n\r\n**Note that** some of the cmdlet source files contain codes that are used in other places outside the cmdlet. Those codes are moved out to `PSRemotingCmdlet.cs`, a more general place where base classes and helper classes for remoting command are located. The following type/methods are moved:\r\n1. Class `QueryRunspaces` and enum `SessionFilterState` from `ConnectPSSession.cs`\r\n2. Class `PSSessionOption` and enum `ProxyAccessType` from `NewPSSessionOptionCommand.cs`\r\n3. Methods `CheckIfPowerShellVersionIsInstalled` and `CheckPSVersion` from `CustomShellCommands.cs` to class `RemotingCommandUtils` in `PSRemotingCmdlet.cs`\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [ ] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` to the beginning of the title and remove the prefix when the PR is ready.\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [x] User-facing [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [x] Issue filed - Issue link:\r\n- **Testing - New and feature**\r\n    - [ ] Not Applicable or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n        - [x] [Add `[feature]` if the change is significant or affects feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\r\n",
  "closed_at": "2018-06-06T03:08:50Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Can we close #1998?",
      "created_at": "2018-05-26T19:44:03Z",
      "updated_at": "2018-05-26T19:44:03Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw Please fix CI Appveyor issues.",
      "created_at": "2018-06-02T09:58:58Z",
      "updated_at": "2018-06-02T09:58:58Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@iSazonov Will fix the build today.",
      "created_at": "2018-06-05T18:01:30Z",
      "updated_at": "2018-06-05T18:01:30Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@iSazonov I had to rebase the branch to build. The new changes are only in the second commit.",
      "created_at": "2018-06-05T21:08:06Z",
      "updated_at": "2018-06-05T21:08:06Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "Class QueryRunspaces and enum SessionFilterState from ConnectPSSession.cs\r\n\r\nQueryRunspaces is only used for session disconnect, which is only supported on Windows.  PSRemotingCmdlets.cs is a heavily loaded file to support many remoting cmdlet base classes.  Moving QueryRunspaces there just makes it more bloated and confusing in my opinion.\r\nI feel that QueryRunspaces should be put into a separate utils file that can be skipped for Linux.\r\nYou should also #ifdef out its use in the Get-PSSession parameter set since it is not supported on Linux.",
      "created_at": "2018-06-05T22:25:11Z",
      "updated_at": "2018-06-05T22:25:11Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "`QueryRunspaces` is used in `Connect-PSSession`/`Receive-PSSession`/`Get-PSSession` and it's also directly used by the abstract class `PSRunspaceCmdlet` from `PSRemotingCmdlet.cs`, that's why I thought it probably fit in the `\"Helper Classes\"` region in `PSRemotingCmdlet.cs`.\r\n\r\nI'm happy to move `QueryRunspaces` and `SessionFilterState` to a separate file, but we cannot skip compiling that file yet until all uses are properly diabled (if/def'ed out) for Unix platform. That work is out scope for this PR, as this PR is for fixing the crashing debug build on Unix platforms.\r\n\r\nI opened the issue #7008 to track the work to properly disable all code related to session connection/disconnection for the Unix build.",
      "created_at": "2018-06-05T23:58:30Z",
      "updated_at": "2018-06-05T23:58:30Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "I'll give this a try on my Ubuntu machine later just to check everything",
      "created_at": "2018-06-06T00:34:23Z",
      "updated_at": "2018-06-06T00:34:42Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@rjmholt Congratulations on your first review! :-)",
      "created_at": "2018-06-06T03:05:23Z",
      "updated_at": "2018-06-06T03:05:23Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "Tests all pass (except for 4 known problems) on Ubuntu 16.04 in Debug configuration. No assertion failures",
      "created_at": "2018-06-06T16:50:38Z",
      "updated_at": "2018-06-06T16:52:49Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@rjmholt Thank you!",
      "created_at": "2018-06-09T00:24:48Z",
      "updated_at": "2018-06-09T00:24:48Z"
    }
  ],
  "created_at": "2018-05-25T20:27:06Z",
  "number": 6939,
  "state": "closed",
  "title": "Skip compiling the non-supported cmdlets in System.Management.Automation.dll",
  "updated_at": "2018-06-09T00:24:48Z"
}