{
  "_url": "https://github.com/PowerShell/PowerShell/issues/746",
  "author": "andschwa",
  "body": "Until dotnet/cli#819 is resolved, we cannot regenerate the C# bindings for the resources. While the resources themselves are automatically regenerated thanks to #743, if a string is added or removed, the C# bindings will still need to be manually updated.\n",
  "closed_at": "2016-06-15T18:11:11Z",
  "comments": [
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "Keep me honest, I need to get more context on this one. \n",
      "created_at": "2016-04-14T21:53:32Z",
      "updated_at": "2016-04-14T21:53:32Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "@joeyaiello The context is that PowerShell depends on the ability to auto-generate strongly typed C# classes used for accessing resource strings, and the `dotnet-resgen` tool does not yet support it. It is a major blocker for moving the Windows PowerShell teams to PowerShell repo.\n",
      "created_at": "2016-04-27T19:11:24Z",
      "updated_at": "2016-08-18T00:02:18Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "@vors while `dotnet-resgen` isn't doing this for us, we've successfully worked around it, without the hacky submodule trick. So let's keep this closed?\n",
      "created_at": "2016-06-15T18:28:22Z",
      "updated_at": "2016-06-15T18:28:22Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "@andschwa yes, we have enough open issues :P\n",
      "created_at": "2016-06-15T18:36:19Z",
      "updated_at": "2016-06-15T18:36:19Z"
    }
  ],
  "created_at": "2016-03-28T18:51:14Z",
  "labels": [
    "Area-Maintainers-Build",
    "Porting"
  ],
  "number": 746,
  "state": "closed",
  "title": "Remove C# bindings from windows-build submodule",
  "updated_at": "2016-08-18T00:02:18Z"
}