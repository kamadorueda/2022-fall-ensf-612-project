{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13156",
  "author": "hdformat",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 and PowerShell 7+ issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6).\r\n\r\n-->\r\n\r\n## Steps to reproduce\r\n\r\n1. create a directory which has name starts with bracket (eg. \"[1]powershell\")\r\n2. try rename using `mv` or `Move-Item` the directory\r\n\r\n## Expected behavior\r\n\r\n```powershell\r\nPS sandbox \u276f mkdir \"[1]powershell\"\r\n\r\n\r\n    Directory: C:\\Users\\hdformat\\dev\\sandbox\r\n\r\nMode                 LastWriteTime         Length Name\r\n----                 -------------         ------ ----\r\nd----        2020-07-11 \uc624\ud6c4 10:50                [1]powershell\r\n\r\nPS sandbox \u276f Move-Item \"[1]powershell\" \"[1]PowerShell\"\r\n\r\nPS sandbox \u276f ls\r\n\r\n\r\n    Directory: C:\\Users\\hdformat\\dev\\sandbox\r\n\r\nMode                 LastWriteTime         Length Name\r\n----                 -------------         ------ ----\r\nd----        2020-07-11 \uc624\ud6c4 10:50                [1]PowerShell\r\n\r\nPS sandbox \u276f\r\n```\r\n\r\n## Actual behavior\r\n\r\n```powershell\r\nPS sandbox \u276f mkdir \"[1]powershell\"\r\n\r\n\r\n    Directory: C:\\Users\\hdformat\\dev\\sandbox\r\n\r\nMode                 LastWriteTime         Length Name\r\n----                 -------------         ------ ----\r\nd----        2020-07-11 \uc624\ud6c4 10:50                [1]powershell\r\n\r\nPS sandbox \u276f Move-Item \"[1]powershell\" \"[1]PowerShell\"\r\n\r\nPS sandbox \u276f ls\r\n\r\n\r\n    Directory: C:\\Users\\hdformat\\dev\\sandbox\r\n\r\nMode                 LastWriteTime         Length Name\r\n----                 -------------         ------ ----\r\nd----        2020-07-11 \uc624\ud6c4 10:50                [1]powershell\r\n\r\nPS sandbox \u276f\r\n```\r\n\r\n\r\n## Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\nPS sandbox \u276f $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.2\r\nPSEdition                      Core\r\nGitCommitId                    7.0.2\r\nOS                             Microsoft Windows 10.0.19041\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\nPS sandbox> get-module\r\n\r\nModuleType Version    PreRelease Name                                ExportedCommands\r\n---------- -------    ---------- ----                                ----------------\r\nManifest   7.0.0.0               Microsoft.PowerShell.Management     {Add-Content, Clear-Content, Clear-Item, Clear-It\u2026\r\nManifest   7.0.0.0               Microsoft.PowerShell.Utility        {Add-Member, Add-Type, Clear-Variable, Compare-Ob\u2026\r\nScript     2.0.412               oh-my-posh                          {Get-ComputerName, Get-FormattedRootLocation, Get\u2026\r\nScript     0.7.3                 posh-git                            {Add-PoshGitToProfile, Add-SshKey, Enable-GitColo\u2026\r\nScript     2.0.0                 PSReadLine                          {Get-PSReadLineKeyHandler, Get-PSReadLineOption, \u2026\r\n```\r\n",
  "closed_at": "2020-07-14T00:00:13Z",
  "comments": [
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Since you're passing the source path _positionally_, it binds to the `-Path` parameter, which interprets it as a _wildcard expression_ (glob).\r\n\r\nAs such, it would match a file literally named `1powershell` (or case variations therefore) but not one named `[1]powershell`.\r\n\r\nIf there's no `1powershell` file, which is probably the case for you, the call is an effective no-op (no moving / renaming occurs).\r\n\r\nThe correct approach is to use the `-LiteralPath` parameter:\r\n\r\n```powershell\r\nMove-Item -LiteralPath \"[1]powershell\" \"[1]PowerShell\"\r\n```\r\n\r\nAs an aside: Note that PowerShell has a dedicated `Rename-Item` cmdlet, which makes it easier to rename items in place, irrespective of their location.",
      "created_at": "2020-07-12T13:04:32Z",
      "updated_at": "2020-07-12T13:04:32Z"
    },
    {
      "author": "hdformat",
      "author_association": "NONE",
      "body": "@mklement0 Thanks for the explanation,\r\nI didn't know about the `-LiteralPath` option. However, it feels awkward to have to use widely used file system commands differently in PowerShell, not only mv(Move-Item) but cd (change directory)\r\n\r\n```powerhsell\r\nPS sandbox \u276f mkdir [1]powershell\r\n\r\n    Directory: C:\\Users\\hdformat\\dev\\sandbox\r\n\r\nMode                 LastWriteTime         Length Name\r\n----                 -------------         ------ ----\r\nd----        2020-07-13  \uc624\uc804 3:03                [1]powershell\r\n\r\nhdformat at hdformat-pc \ud83d\udc0d ~\\venv                                                                       [30 ms][03:03]\r\nPS sandbox \u276f cd [1]powershell\r\nSet-Location: Cannot find path '[1]powershell' because it does not exist.\r\n\r\n\u2a2f hdformat at hdformat-pc \ud83d\udc0d ~\\venv                                                                     [68 ms][03:03]\r\nPS sandbox \u276f cd \"[1]powershell\"\r\nSet-Location: Cannot find path '[1]powershell' because it does not exist.\r\n\r\n\u2a2f hdformat at hdformat-pc \ud83d\udc0d ~\\venv                                                                     [29 ms][03:03]\r\nPS sandbox \u276f cd -LiteralPath \"[1]powershell\"\r\nhdformat at hdformat-pc \ud83d\udc0d ~\\venv                                                                        [7 ms][03:03]\r\nPS [1]powershell \u276f\r\n```",
      "created_at": "2020-07-12T18:13:29Z",
      "updated_at": "2020-07-12T18:13:29Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "I agree that it's awkward, but this behavior can't be changed without introducing new syntax.\r\n\r\nWhile POSIX-like shells use unquoted vs. quoted to distinguish between wildcards (globs) and literals (`*` vs, `'*'`, for instance,  PowerShell has no such distinction - `get-item *`  is the same as `get-item '*'` - which both bind to the `-Path` parameter.\r\n\r\nGiven that filenames with `*` and `?` are very rare, the problem is usually restricted to `[` and `]`.\r\n\r\nTo ease the pain, you can use `-lp` in lieu of `-LiteralPath`.\r\n\r\n```powershell\r\ncd -lp [1]powershell\r\n````\r\n\r\nAlternatively, you can `` ` ``-escape `[` and `]`, but there's a syntax pitfall: if the argument is _unquoted_ or inside `\"...\"` (these two forms are in essence equivalent, you need _2_ `` ` `` instances (because `` `  `` also acts as the escape character in double-quoted strings); inside `'...'` (a verbatim string), a single `` ` `` is sufficient.\r\n\r\n```powershell\r\n# The following commands are equivalent\r\ncd ``[1``]powershell\r\ncd \"``[1``]powershell\"\r\n\r\ncd '`[1`]powershell'\r\n````\r\n\r\n\r\n",
      "created_at": "2020-07-12T18:42:55Z",
      "updated_at": "2020-07-12T18:42:55Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "To be clear: this issue is a long-standing pain point and solutions have been discussed in various issues here; for instance, I've indeed proposed a new syntax here: https://github.com/PowerShell/PowerShell/issues/9308#issuecomment-491023897",
      "created_at": "2020-07-12T18:56:41Z",
      "updated_at": "2020-07-12T18:56:41Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2020-07-14T00:00:11Z",
      "updated_at": "2020-07-14T00:00:11Z"
    }
  ],
  "created_at": "2020-07-11T14:03:48Z",
  "labels": [
    "Issue-Question",
    "Resolution-Answered"
  ],
  "number": 13156,
  "state": "closed",
  "title": "Move-Item ignores directories which have name startwith bracket",
  "updated_at": "2020-07-14T00:00:13Z"
}