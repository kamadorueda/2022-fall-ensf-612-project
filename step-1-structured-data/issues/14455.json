{
  "_url": "https://github.com/PowerShell/PowerShell/issues/14455",
  "author": "brwilkinson",
  "body": "Currently you can pass in a variable to a remote session using the following syntax\r\n\r\n$using:variableName\r\n\r\n```powershell\r\nparam (\r\n    [pscredential]$cred\r\n)\r\n$path = 'd:\\repos'\r\nInvoke-Command -CN server123 -ScriptBlock {\r\n\r\n    Invoke-Command -CN server456 -Cred $Using:cred -ArgumentList @($using:Path) -ScriptBlock {\r\n        Get-ChildItem -Path $args[0]\r\n    }\r\n\r\n}\r\n```\r\n\r\nHowever once you go into the nested session, you have to fall back to using the -ArgumentList array to get to a third hop.\r\n\r\nThen also in the nested remote scriptblock, fall back to referencing the input via the $Args array.\r\n\r\nIdeally it would be nice if the $using was supported as below.\r\n\r\n```powershell\r\nparam (\r\n    [pscredential]$cred\r\n)\r\n$path = 'd:\\repos'\r\nInvoke-Command -CN server123 -ScriptBlock {\r\n\r\n    $nestedpath = $using:path\r\n    Invoke-Command -CN server456 -Cred $Using:cred -ScriptBlock {\r\n        Get-ChildItem -Path $using:nestedpath\r\n    }\r\n\r\n}\r\n```\r\n\r\nI cannot see too much of an advantage of making up a new nested Scope Using format/syntax to directly access a variable two (2) levels up directly without re-assigning it in the middle scope E.g. $using:2:path   However I think it would be nice if $using:var did work.",
  "closed_at": null,
  "comments": [],
  "created_at": "2020-12-18T09:11:45Z",
  "labels": [
    "Issue-Question",
    "WG-Remoting"
  ],
  "number": 14455,
  "state": "open",
  "title": "Support $using:var in nested ps remote sessions",
  "updated_at": "2020-12-19T07:17:37Z"
}