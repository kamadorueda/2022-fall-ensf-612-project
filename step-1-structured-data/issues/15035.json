{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15035",
  "author": "TravisEz13",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nMove bypass execution policy check after AppLocker Deny check\r\n\r\n## PR Context\r\n\r\nThis only affects a corner case where you only have Deny rules.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and opened an issue in the relevant tool repository. This may include:\r\n        - [ ] Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode\r\n        (which runs in a different PS Host).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n",
  "closed_at": "2021-03-22T18:25:02Z",
  "comments": [
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "@PaulHigin can you refresh your review?",
      "created_at": "2021-03-16T20:45:10Z",
      "updated_at": "2021-03-16T20:45:10Z"
    },
    {
      "author": "strawgate",
      "author_association": "CONTRIBUTOR",
      "body": "This seems like it would be a breaking change.... this change appears to make it so you cannot use `-executionpolicy bypass` to run a script in an applocker environment that is denying script execution",
      "created_at": "2021-03-27T03:42:58Z",
      "updated_at": "2021-03-27T03:43:38Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> This seems like it would be a breaking change\r\n\r\nIt is _a bug fix_ - no one can disable the lock set by a system administrator.",
      "created_at": "2021-03-27T05:23:56Z",
      "updated_at": "2021-03-27T05:23:56Z"
    },
    {
      "author": "strawgate",
      "author_association": "CONTRIBUTOR",
      "body": "Does this being a bugfix effect whether it's a breaking change?\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/master/docs/dev-process/breaking-change-contract.md\r\n\r\n> It doesn't matter if the existing behavior is \"wrong\", we still need to think through the implications. PowerShell has been in broad use for over 10 years so we be must be extremely sensitive to breaking existing users and scripts.\r\n\r\nThis would seem to me to be a bucket 2/3 change which previously has required a breaking change conversation even when related to bug fixes: https://github.com/PowerShell/PowerShell/pull/12766#issuecomment-634924693",
      "created_at": "2021-03-27T14:54:51Z",
      "updated_at": "2021-03-27T14:57:19Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@strawgate Any bug fix could be considered as a breaking change :-)\r\n\r\nThis is a security related bug fix - such things are never discussed publicly (it is Microsoft policy).",
      "created_at": "2021-03-27T17:01:25Z",
      "updated_at": "2021-03-27T17:01:58Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@strawgate I've marked the issue a breaking change.  As @iSazonov has said, AppLocker is considered the security feature with the stronger promise here.  Execution policy was never intended as a bypass.\r\n\r\nSee our security policy:  https://github.com/PowerShell/PowerShell/security/policy\r\n> Security issues are treated very seriously and will, by default, takes precedence over other considerations including usability, performance, etc... Best effort will be used to mitigate side effects of a security change, but PowerShell must be secure by default.\r\n\r\nFYI, this scenario was is even a corner case of AppLocker, where you only have Deny rules and constrained language mode is not used to enforce the policy.\r\n",
      "created_at": "2021-03-27T18:01:49Z",
      "updated_at": "2021-03-27T18:07:33Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.2.0-preview.5` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.2.0-preview.5)\n",
      "created_at": "2021-04-14T23:59:56Z",
      "updated_at": "2021-04-14T23:59:56Z"
    }
  ],
  "created_at": "2021-03-15T22:50:59Z",
  "number": 15035,
  "state": "closed",
  "title": "Move bypass execution policy check after AppLocker Deny check",
  "updated_at": "2021-04-15T05:38:49Z"
}