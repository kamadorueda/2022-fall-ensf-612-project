{
  "_url": "https://github.com/PowerShell/PowerShell/issues/1812",
  "author": "jpsnover",
  "body": "## Steps to reproduce\n\n$a,$b = gps\n$a.pstypenames\n## Expected behavior\n\nSystem.Diagnostic.Process\nSystem.Object\n## Actual behavior\n\nSystem.Diagnostic.Process#HandleCount\nSystem.Diagnostic.Process\nSystem.Object\n## Environment data\n\n<!-- provide the output of $PSVersionTable -->\n\n``` powershell\njps> $a,$b = get-process                                                                                                              \njps> $a.pstypenames                                                                                                                   \nSystem.Diagnostics.Process#HandleCount\nSystem.Diagnostics.Process\nSystem.Object\njps> $PSVersionTable                                                                                                                  \n\nName                           Value                                                                                                 \n----                           -----                                                                                                 \nPSVersion                      6.0.0-alpha                                                                                           \nPSEdition                      Core                                                                                                  \nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}                                                                               \nBuildVersion                   3.0.0.0                                                                                               \nGitCommitId                    v6.0.0-alpha.8                                                                                        \nCLRVersion                                                                                                                           \nWSManStackVersion              3.0                                                                                                   \nPSRemotingProtocolVersion      2.3                                                                                                   \nSerializationVersion           1.1.0.1        \n\n```\n",
  "closed_at": "2017-01-26T22:44:29Z",
  "comments": [
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "This is... an excellent question. I couldn't find `HandleCount` referenced anywhere but as fields in internal sources in .NET Core.\n\n/cc @daxian-dbw \n",
      "created_at": "2016-08-17T22:48:18Z",
      "updated_at": "2016-08-17T22:48:18Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "I remember it was because in remoting scenario the type definition on the client side expects the 'HandleCount' property when deserializing a Process object, and it will fail with exception when that property is not available. The noteproperty was added just to make sure all existing powershell client can work well in this case during remoting.\n\n/cc @Francisco-Gamino \n",
      "created_at": "2016-08-17T23:09:09Z",
      "updated_at": "2016-08-17T23:09:09Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Making a change may break existing remoting scenarios particularly between WindowsPowerShell and PowerShell Core.  Does not impact the functionality.  Recommend no change.\n",
      "created_at": "2016-09-29T20:40:28Z",
      "updated_at": "2016-09-29T20:40:28Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I caught the Issue when writing Pester tests:\n\n``` powershell\nGet-Process | Export-Csv -Path $testfile -Force\n\n#TYPE System.Diagnostics.Process#HandleCount\n\"HandleCount\",\"Name\",\"SI\",\"Handles\",\"VM\",\"WS\",\"PM\",\"NPM\",\"Path\",\"Company\",\"CPU\",\"FileVersion\",\"ProductVersion\",\"Description\",\"Product\",\"__NounName\",\"SafeHandle\",\"BasePriority\",\"ExitCode\",\"HasExited\",\"ExitTime\",\"Id\",\"MachineName\",\"MaxWorkingSet\",\"MinWorkingSet\",\"Modules\",\"NonpagedSystemMemorySize64\",\"PagedMemorySize64\",\"PagedSystemMemorySize64\",\"PeakPagedMemorySize64\",\"PeakWorkingSet64\",\"PeakVirtualMemorySize64\",\"PriorityBoostEnabled\",\"PriorityClass\",\"PrivateMemorySize64\",\"ProcessName\",\"ProcessorAffinity\",\"SessionId\",\"StartInfo\",\"Threads\",\"VirtualMemorySize64\",\"EnableRaisingEvents\",\"StandardInput\",\"StandardOutput\",\"StandardError\",\"WorkingSet64\",\"MainModule\",\"PrivilegedProcessorTime\",\"StartTime\",\"TotalProcessorTime\",\"UserProcessorTime\"\n\"0\",\"ApplicationFrameHost\",\"3\",\"0\",\"2199252946944\",\"20496384\",\"12066816\",\"17936\",\"C:\\Windows\\system32\\ApplicationFrameHost.exe\",,\"0.28125\",,,,,\"Process\",\"Microsoft.Win32.SafeHandles.SafeProcessHandle\",\"8\",,\"False\",,\"5776\",\".\",\"1413120\",\"204800\",\"System.Diagnostics.ProcessModuleCollection\",\"17936\",\"12066816\",\"328544\",\"13901824\",\"27131904\",\"2199287431168\",\"True\",\"Normal\",\"12066816\",\"ApplicationFrameHost\",\"15\",\"3\",,\"System.Diagnostics.ProcessThreadCollection\",\"2199252946944\",\"False\",,,,\"20496384\",\"System.Diagnostics.ProcessModule (ApplicationFrameHost.exe)\",\"00:00:00.1562500\",\"10/17/2016 6:13:36 AM\",\"00:00:00.2812500\",\"00:00:00.1250000\"\n```\n\nI believe that this is not exactly what is expected.\n",
      "created_at": "2016-10-17T11:18:07Z",
      "updated_at": "2016-10-17T11:18:07Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw and @SteveL-MSFT Could you please comment on this?\n",
      "created_at": "2016-10-19T04:46:02Z",
      "updated_at": "2016-10-19T04:49:51Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@iSazonov The `HandleCount` was kept there just to make sure when running `$p = Invoke-Command -Session $sn { Get-Process -Id $pid }` on a down-level powershell client targeting a powershell core on server side, it doesn't throw exception on the down-level powershell client.\n\nObject like `System.Diagnostics.Process` is deserialized to `Deserialized.System.Diagnostics.Process` when transferring from server to client. Type `Deserialized.System.Diagnostics.Process` is defined in `types.ps1xml`, and if you inspect the definition, you will see the property `HandleCount` is present, and it's expected when powershell deserializes the `Process` object. The missing of such property will cause an exception to be thrown on the client side.\n\nWe certainly can change `types.ps1xml` and powershell core to make it not expect the `HandleCount` property when deserializing `Process` objects from server. However, that won't help the existing down-level powershell instances out there, and we still want the down-level PS client to be able to remote to powershell core without problems. That's why we kept the `HandleCount` property, even though it's meaningless in CoreCLR.\n",
      "created_at": "2016-10-20T00:50:04Z",
      "updated_at": "2016-10-20T00:50:04Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw Thanks for the _great_ in-depth explanation. This clearly. But my question is easier. My question is specifically about Export-Csv behavior.\nWhy do Export-Csv write \"Type#HandleCount\" in Powershell 6.0 while the _expected_ behavior is to write \"Type\"? I believe it is bug and regression.\n\nIn Powershell 5.0:\n\n``` powershell\n$a= Get-Process -ComputerName comp\n$a[0].psobject\n\nImmediateBaseObject : System.Diagnostics.Process (avagent)\nBaseObject          : System.Diagnostics.Process (avagent)\nTypeNames           : {System.Diagnostics.Process, System.ComponentModel.Component, System.MarshalByRefObject,\n                      System.Object}\n```\n\nIn Powershell 6.0:\n\n``` powershell\n$a= Get-Process -ComputerName comp\n$a[0].psobject\n\nImmediateBaseObject : System.Diagnostics.Process (ApplicationFrameHost)\nBaseObject          : System.Diagnostics.Process (ApplicationFrameHost)\nTypeNames           : {System.Diagnostics.Process#HandleCount, System.Diagnostics.Process, System.Object}\n```\n\nIn code Export-Csv get TypeNames[0]. Perhaps we need to take **BaseObject** ? Or remove #HandleCount from TypeNames[0]? Or take TypeNames[1] if TypeNames[0] contains \"#HandleCount\"?\n",
      "created_at": "2016-10-20T04:50:14Z",
      "updated_at": "2016-10-20T04:50:14Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "It seems somewhat useful to know the `HandleCount` property was synthesized and therefore not useful, e.g. we could change the display of `ProcessInfo` to not show the `HandleCount` property at all if the typename is `ProcessInfo#HandleInfo`.\n",
      "created_at": "2016-10-20T09:03:18Z",
      "updated_at": "2016-10-20T09:03:18Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@lzybkr If this will fix both (@jpsnover and my) issues, maybe should reopen the Issue?\n",
      "created_at": "2016-10-21T05:25:40Z",
      "updated_at": "2016-10-21T05:25:40Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "According to #2207 it is CoreCLR bug that is waiting for a fix.\n",
      "created_at": "2016-10-25T13:54:51Z",
      "updated_at": "2016-10-25T13:54:51Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Recommendation is to change the formatting to not show this as it's not useful to admin and the property is still available for compat reasons\n",
      "created_at": "2016-11-02T20:28:57Z",
      "updated_at": "2016-11-02T20:28:57Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Where should it be fixed?  Maybe here in [Process.cs](https://github.com/PowerShell/PowerShell/blob/309bf603f9aff9009dce7e725d42b2d4f99f58c9/src/Microsoft.PowerShell.Commands.Management/commands/management/Process.cs#L824)\n\n``` C#\n             // In CoreCLR, the System.Diagnostics.Process.HandleCount property does not exist. \n             // I am adding a note property HandleCount and temporarily setting it to zero. \n             // This issue will be fix for RTM and it is tracked by 5024994: Get-process does not populate the Handles field. \n             PSMemberInfo hasHandleCount = processAsPsobj.Properties[\"HandleCount\"]; \n             if (hasHandleCount == null) \n             { \n                 PSNoteProperty noteProperty = new PSNoteProperty(\"HandleCount\", 0); \n                 processAsPsobj.Properties.Add(noteProperty, true); \n                 processAsPsobj.TypeNames.Insert(0, \"System.Diagnostics.Process#HandleCount\"); \n             } \n```\n\nremove `processAsPsobj.TypeNames.Insert(0, \"System.Diagnostics.Process#HandleCount\");`\nI have not found using this in code anywhere.\n",
      "created_at": "2016-11-03T09:48:21Z",
      "updated_at": "2016-11-03T09:48:21Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov the suggestion is to change the formatter and keep the code for compat reasons.  this way it doesn't show up for the interactive user as it's not really useful anyways (IMHO), but still available on the object (on Windows for some dev scenarios).  while looking for the code, I already made a fix and will submit a PR\n",
      "created_at": "2016-11-03T16:04:51Z",
      "updated_at": "2016-11-03T16:04:51Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT Clear! Thanks!\n",
      "created_at": "2016-11-03T16:10:32Z",
      "updated_at": "2016-11-03T16:10:32Z"
    }
  ],
  "created_at": "2016-08-15T17:26:20Z",
  "labels": [
    "Issue-Bug",
    "WG-Cmdlets",
    "Resolution-Fixed"
  ],
  "number": 1812,
  "state": "closed",
  "title": "Why does System.Diagnostic.Process#HandleCount exist? ",
  "updated_at": "2017-01-26T22:44:29Z"
}