{
  "_url": "https://github.com/PowerShell/PowerShell/issues/8703",
  "author": "coin8086",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n\r\n-->\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\nTest-ModuleManifest xxx.psd1\r\n```\r\n\r\n# Expected behavior\r\n\r\n```none\r\nThe test gets passed.\r\n```\r\n\r\n# Actual behavior\r\n\r\n```none\r\nTest-ModuleManifest : The specified RequiredModules entry 'Az' in the module manifest 'xxx.psd1' is invalid. Try again after updating this entry with valid values.\r\nAt line:1 char:1\r\n+ Test-ModuleManifest xxx.psd1\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : ObjectNotFound: (xxx.psd1:String) [Test-ModuleManifest], DirectoryNotFoundException\r\n+ FullyQualifiedErrorId : Modules_InvalidRequiredModulesinModuleManifest,Microsoft.PowerShell.Commands.TestModuleManifestCommand\r\n\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.1.2\r\nPSEdition                      Core\r\nGitCommitId                    6.1.2\r\nOS                             Linux 4.15.0-1036-azure #38~16.04.1-Ubuntu SMP Fri Dec 7 03:21:52 UTC 2018\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\n# Emergency\r\nThis is effectively blocks a module that depends on `Az` - the Azure PowerShell module, because when `Publish-Module` the new module, `Test-ModuleManifest` is triggered and the failure blocks the publish, we're developing a new module on `Az` and plan to deliver it to customer in one week, but are stuck at this! ",
  "closed_at": "2019-01-22T22:50:47Z",
  "comments": [
    {
      "author": "coin8086",
      "author_association": "NONE",
      "body": "I've filed an issue for Azure/azure-powershell at https://github.com/Azure/azure-powershell/issues/8364 Maybe that's more appropriate. So close it for now.",
      "created_at": "2019-01-21T03:04:43Z",
      "updated_at": "2019-01-21T03:04:43Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@coin8086 for some context, the reason this happens is (to my knowledge) because `Az` is a reserved culture code, referring to `Cyrillic/Azerbaijan`. \r\n\r\nI believe the PowerShell team ended up having to add an explicit exception in the code so that the `Az` module would even be properly discovered for autoloading, if I recall the PR correctly.\r\n\r\nI agree with you; this is really something that shouldn't have happened in the first place; there's no reason the module name nor the module folder name needed to collide with a reserved culture code, and it should be fixed.\r\n\r\nThat said, given the outcome of the recent PR here on that matter, PowerShell may end up having to bend on that one as well, however inadvisable it might be.\r\n\r\n/cc @SteveL-MSFT as I think he was involved in the PR when that issue arose and may want to chime in here.",
      "created_at": "2019-01-21T03:20:23Z",
      "updated_at": "2019-01-21T03:20:36Z"
    },
    {
      "author": "coin8086",
      "author_association": "NONE",
      "body": "@vexx32 Thanks for your quick reply and input! I'm blocking on this and I believe this also blocks everyone who wants to deliver a module depending on `Az`. It would be great if PS Core could provide any help. Do you think it helps to keep the issue open on PS Core? Thanks anyway. @MiYanni",
      "created_at": "2019-01-21T04:05:03Z",
      "updated_at": "2019-01-21T04:05:03Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "I'm not sure how complex this particular problem would be to fix frem this side, but I'm sure Steve or one of the others would have a better idea there.\r\n\r\nIt'd be pretty trivial for the Azure module to just change the name and avoid the problem altogether, but I don't really know if that would cause a wider detrimental impact.",
      "created_at": "2019-01-21T04:17:48Z",
      "updated_at": "2019-01-21T04:17:48Z"
    },
    {
      "author": "coin8086",
      "author_association": "NONE",
      "body": "> I'm not sure how complex this particular problem would be to fix frem this side, but I'm sure Steve or one of the others would have a better idea there.\r\n> \r\n> It'd be pretty trivial for the Azure module to just change the name and avoid the problem altogether, but I don't really know if that would cause a wider detrimental impact.\r\n\r\nOK, thanks. I see it. I'm afraid renaming is not their choice, at least in the short time, since that has a lot impact on current document and client code, almost everywhere in Azure.\r\n\r\nMy last resort would be install `Az` manually and don't list it in dependency, however troublesome it is. Let's see if there's any better way. ",
      "created_at": "2019-01-21T05:02:54Z",
      "updated_at": "2019-01-21T05:02:54Z"
    },
    {
      "author": "coin8086",
      "author_association": "NONE",
      "body": "@SteveL-MSFT @daxian-dbw \r\nhttps://github.com/PowerShell/PowerShell/issues/8125\r\nThis seems a similar issue.",
      "created_at": "2019-01-21T05:11:11Z",
      "updated_at": "2019-01-21T05:11:11Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Yes, this is a dupe.",
      "created_at": "2019-01-22T22:50:47Z",
      "updated_at": "2019-01-22T22:50:47Z"
    },
    {
      "author": "coin8086",
      "author_association": "NONE",
      "body": "> Yes, this is a dupe.\r\n\r\nDup to #8125? Could I know the progress of it? When will you fix it, or do you have an estimated time? Thanks!",
      "created_at": "2019-01-23T09:14:13Z",
      "updated_at": "2019-01-23T09:14:13Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@coin8086  see https://github.com/PowerShell/PowerShell/pull/8777",
      "created_at": "2019-01-29T03:12:38Z",
      "updated_at": "2019-01-29T03:12:38Z"
    },
    {
      "author": "nexocentric",
      "author_association": "NONE",
      "body": "I'm currently dealing with issues on related to this bug. Regardless of where it is fixed, what would be a viable work around for someone running into this issue.\r\n\r\nI've searched quite a bit on the web and the threads related to this are right on the nose in terms of problems, but there are no solutions.\r\n\r\nIn my `psd1` file, if I specify `RequiredModules = @('Az')` I run into the issue.\r\n\r\nI do not want to specify each `Az` individual model as I am building against all of it and the expectation is that someone will have this installed locally.\r\n\r\nWhat options do I have to specify the required modules? Is there a wild card that I can specify that will separate it from the `Cyrillic/Azerbaijan` locale that it is hitting?\r\n\r\nMaybe even a alias for the `Az` modules that allows me to specify all of the `Az` modules.\r\n\r\nThanks for your help and support.",
      "created_at": "2022-03-29T20:19:45Z",
      "updated_at": "2022-03-29T20:24:16Z"
    }
  ],
  "created_at": "2019-01-21T02:40:08Z",
  "number": 8703,
  "state": "closed",
  "title": "Test-ModuleManifest fails if  RequiredModules in module manifest contains entry 'Az'",
  "updated_at": "2022-03-29T20:24:16Z"
}