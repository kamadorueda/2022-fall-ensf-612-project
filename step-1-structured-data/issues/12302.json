{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12302",
  "author": "Sarafian",
  "body": "# Summary of the new feature/enhancement\r\n\r\nEnhance the console output and as an extensions the transcriptions of the `Write-*` cmdlets to include extra information such as\r\n- Name of invoker\r\n- Type of invoker\r\n- Timestamp\r\n\r\nHere is an example\r\n\r\n| PowerShell normal output | PowerShell output with XWrite enabled  | PowerShell output with XWrite enabled full options |\r\n| ----------------------- | ------------------------------------- | -------------------------------------------------- |\r\n| ![PowerShell normal](https://raw.githubusercontent.com/Sarafian/XWrite/master/Images/PS-Normal.png)  | ![XWriteEnabled](https://raw.githubusercontent.com/Sarafian/XWrite/master/Images/XWrite-Enabled.png) | ![XWriteEnabled](https://raw.githubusercontent.com/Sarafian/XWrite/master/Images/XWrite-Enabled-Full.png) |\r\n\r\n1. In my opinion, developers should not be required to add all this information into their own code as it is not with other languages. The extra information are implicit and driven by the logging/tracing pipeline and this is missing. As a script developer, I shouldn't have to hardcode the name of the script or the formatting in general to help read a trace or transcription and understand what went wrong.\r\n1. Please add the option to redirect `Write-Progress` statements to the host or other levels of DEBUG, VERBOSE etc. Developers should not have to code two line of codes, one for optimal experience in interactive mode and one for tracing purposes.\r\n1. Please make it easier to toggle on/off full tracing. The variables are nice but it shouldn't require so many commands to enable DEBUG, VERBOSE and INFORMATION output.\r\n\r\nFor example lets consider this function\r\n```powershell\r\n# Sample function that uses Write-* commands without any changes\r\nfunction Test-MyXWrite\r\n{\r\n    param(\r\n    )\r\n\r\n    $message=@(\r\n        \"DebugPreference=$DebugPreference\"\r\n        \"VerbosePreference=$VerbosePreference\"\r\n        \"InformationPreference=$InformationPreference\"\r\n        \"WarningPreference=$WarningPreference\"\r\n    )\r\n    \r\n    $message|ForEach-Object {\r\n        Write-Host $_\r\n    }\r\n    \r\n    Write-Debug \"DebugPreference=$DebugPreference\"\r\n    Write-Verbose \"VerbosePreference=$VerbosePreference\"\r\n    Write-Information \"InformationPreference=$InformationPreference\"\r\n    Write-Warning \"WarningPreference=$WarningPreference\"\r\n}\r\n```\r\n\r\n`Enable-XWrite` would something I'm referring to configure/enhance the output and the `Set-XGlobalTrace` to toggle the all level tracing.\r\n\r\n```powershell\r\n# Enable XWrite advanced output enhancement\r\nEnable-XWrite -ForAll -Source -Date -Time\r\n\r\n# Enable full trace \r\nSet-XGlobalTrace -ForAll\r\n\r\n# Invoke test function to execute the Write-* commands\r\nTest-MyXWrite\r\n\r\n# Disable full trace. Rollback to original settings\r\nUndo-XGlobalTrace\r\n```\r\nand the output would be\r\n\r\n```text\r\nPS C:\\Users\\asara> Test-MyXWrite\r\nFunction: Test-MyXWrite: 20200412: 03:12:51.669: DebugPreference=Continue\r\nFunction: Test-MyXWrite: 20200412: 03:12:51.677: VerbosePreference=Continue\r\nFunction: Test-MyXWrite: 20200412: 03:12:51.687: InformationPreference=Continue\r\nFunction: Test-MyXWrite: 20200412: 03:12:51.695: WarningPreference=Continue\r\nDEBUG: My: Test-MyXWrite: 20200412: 03:12:51.702: DebugPreference=Continue\r\nVERBOSE: My: Test-MyXWrite: 20200412: 03:12:51.709: VerbosePreference=Continue\r\nMy: Test-MyXWrite: 20200412: 03:12:51.717: InformationPreference=Continue\r\nWARNING: My: Test-MyXWrite: 20200412: 03:12:51.724: WarningPreference=Continue\r\nDEBUG: parameterSetName=__AllParameterSets\r\n```\r\n\r\nFor the `Write-Progress` redirection this is an example\r\n\r\n```powershell\r\nEnable-XWriteProgress -UseHost\r\nWrite-Progress -Activity Sample -Status Redirected -PercentComplete 50\r\n```\r\nThen in the console this shows up extra to the UI\r\n```text\r\nWrite-Progress: Activity=Sample |Status=Redirected|PercentComplete=50\r\n```\r\nThis also means that if people don't like the UI they can just disable it but the redirection and the message would still happen which great for non-interactive modes and transcription. You quickly know where the script is like you were watching it run interactively.\r\n\r\n# Proposed technical implementation details (optional)\r\n\r\nI've already implemented a module for this and works great for me. [XWrite](https://www.powershellgallery.com/packages/XWrite). Please read more about this at the [project's space](https://github.com/Sarafian/XWrite/) or at this [blog post](https://sarafian.github.io/2020/04/11/xwrite-powershell-improved-logging-tracing.html). Let me know if you prefer a full copy of the post instead of linking.\r\n\r\nBut in my opinion **this is a workaround**. The module **showcases that it is possible to do this** as all the information is available to drive some sort of \"logging\" configuration but instead of a file, cmdlets can be used.\r\n\r\n",
  "closed_at": null,
  "comments": [],
  "created_at": "2020-04-12T13:10:22Z",
  "labels": [
    "Issue-Question",
    "WG-Engine"
  ],
  "number": 12302,
  "state": "open",
  "title": "Enhance PowerShell tracing and logging for the console and transcriptions",
  "updated_at": "2020-04-14T06:41:37Z"
}