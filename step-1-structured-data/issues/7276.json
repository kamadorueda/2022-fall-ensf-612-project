{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7276",
  "author": "BellaLi",
  "body": "Steps to reproduce\r\n------------------\r\n\r\n``` \r\nWrap New-PSSession in C#, build with .netstandard2.0 and pscore, run in Ubuntu 16.04.\r\n\r\npublic class NewExoPSSession : Cmdlet\r\n{\r\n    \u2026..\r\n    protected override void ProcessRecord()\r\n    {\r\n                var modifiedConnectionUriBuilder = new UriBuilder(ConnectionUri);\r\n                NameValueCollection queryParameters = \u2026\u2026.;\r\n                modifiedConnectionUriBuilder.Query = queryParameters.ToString();\r\n\r\n                PowerShell powershell = PowerShell.Create(RunspaceMode.CurrentRunspace);\r\n                PSCommand command = new PSCommand();\r\n\r\n                command.AddCommand(\"New-PSSession\");\r\n                command.AddParameter(\"AllowRedirection\", true);\r\n                command.AddParameter(\"Authentication\", \"Basic\");\r\n                command.AddParameter(\"ConfigurationName\", \"Microsoft.Exchange\");\r\n                command.AddParameter(\"ConnectionUri\", modifiedConnectionUriBuilder.ToString());\r\n                command.AddParameter(\"Credential\", basicAuthCredentials);\r\n\r\n                if (psSessionOption != null)\r\n                {\r\n                    command.AddParameter(\"SessionOption\", psSessionOption);\r\n                }\r\n\r\n                powershell.Commands = command;\r\n                psSessions = powershell.Invoke();\r\n\r\n                if (powershell.HadErrors)\r\n                {\r\n                    if (powershell.Streams != null && powershell.Streams.Error != null &&\r\n                        powershell.Streams.Error.Count > 0)\r\n                    {\r\n                        throw powershell.Streams.Error[0].Exception;\r\n                    }\r\n                    else\r\n                    {\r\n                        throw new RuntimeException(NewExoPSSession.GetPowerShellError(powershell));\r\n                    }\r\n                }\r\n    }\r\n}\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```\r\nCalling New-ExoPSSession should succeed in creating a remote pssession.\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n```\r\nNew-ExoPSSession : Connecting to remote server outlook.office365.com failed with the following error message : UNKNOWN ERROR: The WS-Management service cannot process the request because the XML is invalid.  For more information, see the about_Remote_Troubleshooting Help topic.\r\n\r\n> $e.Exception.ToString()\r\nSystem.Management.Automation.Remoting.PSRemotingTransportException: Connecting to remote server outlook.office365.com failed with the following error message : UNKNOWN ERROR: The WS-Management service cannot process the request because the XML is invalid.  For more information, see the about_Remote_Troubleshooting Help topic.\r\n   at Microsoft.Exchange.Management.ExoPowershellSnapin.NewExoPSSession.ProcessRecord() in C:\\git\\migration\\exchange\\PSModuleCore\\ExoPowerShellModule\\NewExoPSSession.cs:line 300\r\n   at System.Management.Automation.Cmdlet.DoProcessRecord()\r\n   at System.Management.Automation.CommandProcessor.ProcessRecord()\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```> $PSVersionTable\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.1.0-preview.2\r\nPSEdition                      Core\r\nGitCommitId                    v6.1.0-preview.2\r\nOS                             Linux 4.15.0-1014-azure #14~16.04.1-Ubuntu SMP Thu Jun 14 15:42:55 UTC 2018\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2018-07-19T23:30:02Z",
  "comments": [
    {
      "author": "BellaLi",
      "author_association": "NONE",
      "body": "I found the root cause.\r\n\r\nConnectionUri, used UriBuilder to build the query parameters. It turns out to be sth like:\r\nHTTPS://outlook.office365.com:443/PowerShell-LiveId?BasicAuthToOAuthConversion=true&email=blabla@microsoft.com;PSVersion=6.1.0\r\n\r\nThe URI format, works fine on Windows because '&' will be automatically replaced by \"&amp;amp;\".\r\nHowever, on Linux, it won't. As '&' has special meaning in xml, it'll be treated as invalid xml in request.\r\n\r\n\r\nThe fix for me is to change below:\r\nuriBuilder.Query = queryParameters.ToString();\r\nto:\r\nuriBuilder.Query = queryParameters.ToString().Replace(\"&\", \"&amp;amp;\");\r\n\r\nWinRM on Linux might want to handle this issue, so it won't bug many people!",
      "created_at": "2018-07-19T22:37:01Z",
      "updated_at": "2018-07-19T22:37:37Z"
    },
    {
      "author": "dantraMSFT",
      "author_association": "CONTRIBUTOR",
      "body": "@BellaLi I've created issue https://github.com/Microsoft/omi/issues/550 in the Microsoft/OMI which is where this logic resides.",
      "created_at": "2018-07-19T23:30:02Z",
      "updated_at": "2018-07-19T23:30:02Z"
    }
  ],
  "created_at": "2018-07-12T00:04:42Z",
  "number": 7276,
  "state": "closed",
  "title": "[Ubuntu][New-PSSession] WS-Management service cannot process the request because the XML is invalid.",
  "updated_at": "2018-07-24T05:40:44Z"
}