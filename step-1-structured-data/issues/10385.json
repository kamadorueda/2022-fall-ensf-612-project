{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10385",
  "author": "daxian-dbw",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nSkip auto-loading PSReadLine on Windows if the [NVDA screen reader](https://www.nvaccess.org/download/) is active.\r\nThe default rendering and formatting on Windows works with NVDA properly.\r\n\r\n## PR Context\r\n\r\nThere is an accessibility issue with PowerShell Core:\r\n> NVDA does not read the text (except first alphabet) whatever we type in the editor but when we delete it by using backspace, it reads all the characters.\r\n\r\nPSReadLine moves the cursor a lot when rendering the text, and when a user is editing a multi-line text on screen, it has to re-render all text below the editing position because the rest of the text may need to move forward or backward depending on the editing. So as of today, the PSReadLine is not very friendly to the accessibility aspect of the user experience.\r\nWhen it comes to `PSReadLine 3.0`, we will design with the accessibility aspect in mind from the very beginning.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [x] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: https://github.com/MicrosoftDocs/PowerShell-Docs/issues/4659\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2019-08-23T04:09:35Z",
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Seems like we could call SystemParametersInfo() with SPI_SETSCREENREADER to true to emulate a screen reader as a test case",
      "created_at": "2019-08-20T05:02:07Z",
      "updated_at": "2019-08-20T05:02:07Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Sounds doable. I will try adding a test.",
      "created_at": "2019-08-20T17:09:36Z",
      "updated_at": "2019-08-20T17:09:36Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Test added based on `SPI_SETSCREENREADER`.",
      "created_at": "2019-08-20T20:17:36Z",
      "updated_at": "2019-08-20T20:17:36Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.0.0-preview.4` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.0.0-preview.4)\n",
      "created_at": "2019-09-19T17:51:48Z",
      "updated_at": "2019-09-19T17:51:48Z"
    }
  ],
  "created_at": "2019-08-20T00:01:55Z",
  "number": 10385,
  "state": "closed",
  "title": "Skip auto-loading PSReadLine on Windows if the NVDA screen reader is active",
  "updated_at": "2019-09-19T17:51:48Z"
}