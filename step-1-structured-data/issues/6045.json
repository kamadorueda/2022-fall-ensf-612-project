{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6045",
  "author": "vors",
  "body": "Context https://github.com/vors/jupyter-powershell/issues/9 .\r\n\r\nI'm trying to implement a powershell REPL on top of powershell host.\r\nTo achive it, I'm running `pwsh -noprofile -File -` and write the input into the stdin pipe.\r\nProblem: there is no way to get out information about incomplete input.\r\nI.e. when I just send `(` and follow it up with many new lines, I will getting just more `>> ` prompts.\r\n\r\nI don't know is it solvable and even if it is, does it worth to do it. I'm filling this issue for completeness and cross-linking from the jupyter kernel.\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\n'(\\n\\n\\n' | pwsh -File - -noprofile\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```none\r\n>>                                                                                                                                     \r\nAt line:1 char:2\r\n+ (\r\n+  ~\r\nAn expression was expected after '('.\r\nAt line:1 char:2\r\n+ (\r\n+  ~\r\nMissing closing ')' in expression.\r\n+ CategoryInfo          : ParserError: (:) [], ParentContainsErrorRecordException\r\n+ FullyQualifiedErrorId : ExpectedExpression\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n```none\r\n>> \r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value                                                                                                  \r\n----                           -----                                                                                                  \r\nPSVersion                      6.0.0                                                                                                  \r\nPSEdition                      Core                                                                                                   \r\nGitCommitId                    v6.0.0                                                                                                 \r\nOS                             Darwin 17.3.0 Darwin Kernel Version 17.3.0: Thu Nov  9 18:09:22 PST 2017; root:xnu-4570.31.3~1/RELEA...\r\nPlatform                       Unix                                                                                                   \r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}                                                                                \r\nPSRemotingProtocolVersion      2.3                                                                                                    \r\nSerializationVersion           1.1.0.1                                                                                                \r\nWSManStackVersion              3.0  \r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "One of the problems we have with PSEditorServices is that @daviwil had to implement a Host instead of being able to rely on the existing ConsoleHost.  It seems that if we can define a simple api that just communicates to pwsh via stdin/stdout that could solve both problems. cc @tylerl0706 \r\n\r\nI guess we can just start with your scenario and expand as needed to support PSEditorServices.\r\n",
      "created_at": "2018-02-01T02:53:19Z",
      "updated_at": "2018-02-01T02:53:19Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Not sure if we have time to work on a proposal for this and should be RFC, so putting in 6.2 for now",
      "created_at": "2018-02-01T19:31:06Z",
      "updated_at": "2018-02-01T19:31:06Z"
    },
    {
      "author": "daviwil",
      "author_association": "CONTRIBUTOR",
      "body": "What's needed for PSES is much more involved than just an I/O channel for console experience, it requires a more complete set of integration points so that PSES can share access to the runspace that the ConsoleHost creates.  I'd like to take a crack at an RFC for it (or at least help with the authoring of one) at some point in the future when I can really investigate what's needed for it.\r\n\r\n@vors, isn't checking for `>>` enough to know that the input is incomplete?  Or is the problem that you need a way to report to the user the syntax that causes the incomplete expression?",
      "created_at": "2018-02-03T21:21:41Z",
      "updated_at": "2018-02-03T21:21:41Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "@daviwil correct, I put a detection for `>>`, but I need\r\na) the correct error message about incomplete input. Guessing would be hard because it could be `(` or `{` and so on.\r\nb) Some way to abort/complete the parsing. At the moment I'm asking the user to restart the kernel.",
      "created_at": "2018-02-03T21:35:40Z",
      "updated_at": "2018-02-03T21:35:40Z"
    }
  ],
  "created_at": "2018-01-27T06:42:19Z",
  "labels": [
    "WG-Engine",
    "Issue-Discussion"
  ],
  "number": 6045,
  "state": "open",
  "title": "pwsh host input redirection and incomplete input",
  "updated_at": "2018-06-21T21:00:11Z"
}