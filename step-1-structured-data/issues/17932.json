{
  "_url": "https://github.com/PowerShell/PowerShell/issues/17932",
  "author": "daxian-dbw",
  "body": "### Prerequisites\n\n- [X] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\n\n### Steps to reproduce\n\nThis is a report from internal customer:\r\nOn a machine with Applocker (WDAC) enforcement, PowerShell runs in `ConstainedLanguage` mode by default. Running `pwsh -file <ps1-file>` fails with the following error when the `ps1-file` is signed (trusted).\r\n\r\n![image](https://user-images.githubusercontent.com/127450/185546764-30f1147a-bacd-4f27-a477-4c0c99ab3239.png)\r\n![deleteme](https://user-images.githubusercontent.com/127450/185547003-fda74273-5be0-40d3-a6e3-b1f1d26dce15.png)\r\n\r\n---------------------\r\n\r\nThe problem is -- the user doesn't dot-source `CreateShortCut.ps1`, but just run it with `powershell -file`.\r\n\r\nThe root cause here is that `powershell.exe -f <ps1-file>` attempts to invoke the ps1 file without using a local scope, which is the same behavior as if it\u2019s dot-source invoked.\r\nIn `ConsoleHost.cs`, it creates a `Command` instance with `Command(filePath, isScript: false, useLocalScope: false)`.\r\n\r\nPowerShell core (pwsh) also does the same thing, and hence `pwsh -f <ps1-file>` will fail too in this case:\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/8d25b5ae6e2eb83a957eac823c27546a70c229a0/src/Microsoft.PowerShell.ConsoleHost/host/msh/ConsoleHost.cs#L1907-L1909\n\n### Expected behavior\n\n```console\n`powershell -f <ps1-file>` and `pwsh -f <ps1-file>` should run no matter `ps1-file` is signed (trusted) or not in the WDAC locked down environment.\n```\n\n\n### Actual behavior\n\n```console\n`powershell -f <ps1-file>` and `pwsh -f <ps1-file>` fail to run.\n```\n\n\n### Error details\n\n_No response_\n\n### Environment data\n\n```powershell\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.6\r\nPSEdition                      Core\r\nGitCommitId                    7.2.6\r\nOS                             Microsoft Windows 10.0.19044\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\n```\n\n\n### Visuals\n\n_No response_",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I see the file is on network share? Can the customer put the file locally and check?",
      "created_at": "2022-08-19T05:54:23Z",
      "updated_at": "2022-08-19T05:54:23Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "It works fine when the script is not signed (trusted). Quote the customer's words here:\r\n> If he makes script not trusted, he gets event that script not allowed to run in applocker log, but it works as expected.\r\n\r\nSo, it's likely not related to running from a network share.",
      "created_at": "2022-08-19T16:35:22Z",
      "updated_at": "2022-08-19T16:35:55Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "So as not to introduce a breaking change, I feel the best solution is to add a new command parameter, something like: `-FileNewScope`, which runs the file script in a new scope rather than the global scope as it does now.\r\n\r\nThis is not a security issue, so I am removing the @wg-security tag.",
      "created_at": "2022-08-22T16:48:55Z",
      "updated_at": "2022-08-22T16:48:55Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "Note that there is a workaround (using `-command '& c:\\filepath\\filename.ps1`), so I feel this is not super high priority.  ",
      "created_at": "2022-08-22T16:52:28Z",
      "updated_at": "2022-08-22T16:52:28Z"
    }
  ],
  "created_at": "2022-08-19T05:15:20Z",
  "number": 17932,
  "state": "open",
  "title": "`pwsh -f <ps1-file>` fails to run in system lockdown environment if the `ps1-file` is signed (trusted)",
  "updated_at": "2022-08-22T16:52:29Z"
}