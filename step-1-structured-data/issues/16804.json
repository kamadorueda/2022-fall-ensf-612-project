{
  "_url": "https://github.com/PowerShell/PowerShell/issues/16804",
  "author": "sba923",
  "body": "### Prerequisites\n\n- [X] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\n\n### Steps to reproduce\n\nConsider the data in\r\n[RADWIMPS.zip](https://github.com/PowerShell/PowerShell/files/7941251/RADWIMPS.zip)\r\n(note: this is copyrighted material I rip-ped from a CD I legally own; please don't redistribute).\r\n\r\nWhen this is found on a FAT32 drive, you cannot delete the file tree using `Remove-Item`:\r\n\r\n \r\n![image](https://user-images.githubusercontent.com/12860484/151152989-b154bb34-35ad-4bf5-833d-70e6a3bbcb6e.png)\r\n\r\nThis repro's both in 7.2.1 and 7.3.0-preview.1.\r\n\r\nCMD.EXE has no problem with the same data:\r\n\r\n![image](https://user-images.githubusercontent.com/12860484/151153132-b8f78be7-7915-4080-af56-778159ed52cf.png)\r\n\r\n\n\n### Expected behavior\n\n```console\n`Remove-Item` should remove the entire directory tree.\n```\n\n\n### Actual behavior\n\n```console\n`Remove-Item` fails with `Remove-Item: No mapping for the Unicode character exists in the target multi-byte code page.`\n```\n\n\n### Error details\n\n```console\nException             :\r\n    Type            : System.ComponentModel.Win32Exception\r\n    NativeErrorCode : 1113\r\n    ErrorCode       : -2147467259\r\n    TargetSite      :\r\n        Name          : IsReparsePointLikeSymlink\r\n        DeclaringType : Microsoft.PowerShell.Commands.InternalSymbolicLinkLinkCodeMethods\r\n        MemberType    : Method\r\n        Module        : System.Management.Automation.dll\r\n    Message         : No mapping for the Unicode character exists in the target multi-byte code page.\r\n    Source          : System.Management.Automation\r\n    HResult         : -2147467259\r\n    StackTrace      :\r\n   at\r\nMicrosoft.PowerShell.Commands.InternalSymbolicLinkLinkCodeMethods.IsReparsePointLikeSymlink(FileSystemInfo\r\nfileInfo)\r\n   at Microsoft.PowerShell.Commands.FileSystemProvider.RemoveDirectoryInfoItem(DirectoryInfo directory,\r\nBoolean recurse, Boolean force, Boolean rootOfRemoval)\r\n   at Microsoft.PowerShell.Commands.FileSystemProvider.RemoveDirectoryInfoItem(DirectoryInfo directory,\r\nBoolean recurse, Boolean force, Boolean rootOfRemoval)\r\n   at Microsoft.PowerShell.Commands.FileSystemProvider.RemoveItem(String path, Boolean recurse)\r\n   at System.Management.Automation.SessionStateInternal.RemoveItem(CmdletProvider providerInstance, String\r\npath, Boolean recurse, CmdletProviderContext context)\r\nCategoryInfo          : NotSpecified: (:) [Remove-Item], Win32Exception\r\nFullyQualifiedErrorId : System.ComponentModel.Win32Exception,Microsoft.PowerShell.Commands.RemoveItemCommand\r\nInvocationInfo        :\r\n    MyCommand        : Remove-Item\r\n    ScriptLineNumber : 1\r\n    OffsetInLine     : 1\r\n    HistoryId        : 78\r\n    Line             : Remove-Item -Recurse -Force -LiteralPath J:\\RADWIMPS -Verbose\r\n    PositionMessage  : At line:1 char:1\r\n                       + Remove-Item -Recurse -Force -LiteralPath J:\\RADWIMPS -Verbose\r\n                       + ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    InvocationName   : Remove-Item\r\n    CommandOrigin    : Internal\r\nScriptStackTrace      : at <ScriptBlock>, <No file>: line 1\n```\n\n\n### Environment data\n\n```powershell\nName                           Value\r\n----                           -----\r\nPSVersion                      7.3.0-preview.1\r\nPSEdition                      Core\r\nGitCommitId                    7.3.0-preview.1\r\nOS                             Microsoft Windows 10.0.19044\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\n```\n\n\n### Visuals\n\n_No response_",
  "closed_at": "2022-02-05T15:13:14Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Can you create and share more simple repro steps/script?",
      "created_at": "2022-01-26T15:35:12Z",
      "updated_at": "2022-01-26T15:35:12Z"
    },
    {
      "author": "sba923",
      "author_association": "CONTRIBUTOR",
      "body": "Well, I can.... but the current repro is quite simple: \r\n1. extract the zipfile to a folder on a FAT32 USB stick\r\n2. attempt to remove the folder using `Remove-Item -Recurse`\r\n\r\nI'll check whether I can replace step 1 with a piece of PowerShell, is that what you'd like?",
      "created_at": "2022-01-26T15:38:27Z",
      "updated_at": "2022-01-26T15:38:27Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> I'll check whether I can replace step 1 with a piece of PowerShell, is that what you'd like?\r\n\r\nIt would great! See the test as example https://github.com/daxian-dbw/PowerShell/blob/203cbccfc4512a1ad738d6c5114d4b2756db0ad7/test/powershell/Language/Scripting/NativeExecution/NativeCommandProcessor.Tests.ps1#L256\n\n<blockquote><img src=\"https://opengraph.githubassets.com/1fe14665c1750351258043ae80c3bc4c067d086e8d637e94149986ec8e3a2892/daxian-dbw/PowerShell\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/daxian-dbw/PowerShell\">PowerShell/NativeCommandProcessor.Tests.ps1 at 203cbccfc4512a1ad738d6c5114d4b2756db0ad7 \u00b7 daxian-dbw/PowerShell</a></strong></div><div>PowerShell for every system. Contribute to daxian-dbw/PowerShell development by creating an account on GitHub.</div></blockquote>",
      "created_at": "2022-01-26T15:58:53Z",
      "updated_at": "2022-01-26T15:58:56Z"
    },
    {
      "author": "sba923",
      "author_association": "CONTRIBUTOR",
      "body": "What about this?\r\n\r\n```powershell\r\n$parentfoldername = 'PS16804'\r\n$foldername = '\u5929\u6c17\u306e\u5b50'\r\n$filename = '01 - \u300c\u5929\u6c17\u306e\u5b50\u300d\u306e\u30c6\u30fc\u30de.mp3'\r\n\r\n$parentfolder_abspath = Join-Path -Path $PSScriptRoot -ChildPath $parentfoldername\r\n$folder_abspath = Join-Path -Path $PSScriptRoot -ChildPath (\"{0}\\{1}\" -f $parentfoldername, $foldername)\r\n\r\n# start from a clean slate\r\nif (Test-Path -LiteralPath $parentfolder_abspath)\r\n{\r\n    # use CMD since Remove-Item will not work\r\n    cmd /c \"rd /s /q $parentfolder_abspath\"\r\n}\r\n\r\nif (Test-Path -LiteralPath $parentfolder_abspath)\r\n{\r\n    Write-Host -ForegroundColor Red (\"Failed to remove '{0}'\" -f $parentfolder_abspath)\r\n    Exit(1)\r\n}\r\n\r\nNew-Item -Path $folder_abspath -ItemType Directory -Force | Out-Null\r\nif (!(Test-Path -LiteralPath $folder_abspath))\r\n{\r\n    Write-Host -ForegroundColor Red (\"Failed to create '{0}'\" -f $folder_abspath)\r\n    Exit(1)\r\n}\r\n\r\n$filepath_abs = Join-Path -Path $folder_abspath -ChildPath $filename\r\n\"\" | Out-File -LiteralPath $filepath_abs\r\n\r\nWrite-Host -ForegroundColor Yellow (\"Attempting to remove '{0}' using Remove-Item -Recurse -Force\" -f $parentfolder_abspath)\r\nRemove-Item -Force -Recurse -Verbose -LiteralPath $parentfolder_abspath\r\nif (Test-Path -LiteralPath $parentfolder_abspath)\r\n{\r\n    Write-Host -ForegroundColor Red (\"Failed to remove '{0}'\" -f $parentfolder_abspath)\r\n}\r\nelse {\r\n    Write-Host -ForegroundColor Green (\"Removal of '{0}' succeeded\" -f $parentfolder_abspath)\r\n}\r\n\r\nWrite-Host -ForegroundColor Yellow (\"Attempting to remove '{0}' using CMD /C RD /S /Q\" -f $parentfolder_abspath)\r\ncmd /c \"rd /s /q $parentfolder_abspath\"\r\nif (Test-Path -LiteralPath $parentfolder_abspath)\r\n{\r\n    Write-Host -ForegroundColor Red (\"Failed to remove '{0}'\" -f $parentfolder_abspath)\r\n}\r\nelse {\r\n    Write-Host -ForegroundColor Green (\"Removal of '{0}' succeeded\" -f $parentfolder_abspath)\r\n}\r\n```\r\n[PS16804.zip](https://github.com/PowerShell/PowerShell/files/7943166/PS16804.zip)\r\n\r\nHere's the output this gets me:\r\n![image](https://user-images.githubusercontent.com/12860484/151199417-34a47137-b1d0-4f2d-9b56-881383e85fdf.png)\r\n\r\n\r\n\r\n",
      "created_at": "2022-01-26T16:01:39Z",
      "updated_at": "2022-01-26T16:01:39Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@sba923 Thanks! Your script should run on FAT32 that's why I pointed to the test code that uses a virtual disk. Could you please add these steps in your script?",
      "created_at": "2022-01-26T17:37:28Z",
      "updated_at": "2022-01-26T17:37:28Z"
    },
    {
      "author": "kasini3000",
      "author_association": "NONE",
      "body": "Couldn't reproduce the problem, I'm guessing it's an ohmyposh problem.\r\ntest environment:\r\nchinese powershell v5.1 on win10 on fat32 , on exfat.\r\npowershell v7.3.preview1  on fat32 , on exfat.\r\npowershell v7.3.preview1 on win terimal on fat32 , on exfat usb drive.\r\n![QQ\u62fc\u97f3\u622a\u56fe20220127022711](https://user-images.githubusercontent.com/65390418/151224727-f6ee45a4-fb3e-42d0-94da-e4c774a59948.png)\r\n![QQ\u62fc\u97f3\u622a\u56fe20220127022946](https://user-images.githubusercontent.com/65390418/151224737-5f5d2e84-0e83-4261-b697-fa5b1b4f7d0c.png)\r\n![QQ\u62fc\u97f3\u622a\u56fe20220127023038](https://user-images.githubusercontent.com/65390418/151224741-fab57b79-a13c-4f54-988c-fb86adfa4e2a.png)\r\n",
      "created_at": "2022-01-26T18:31:40Z",
      "updated_at": "2022-01-26T18:34:27Z"
    },
    {
      "author": "sba923",
      "author_association": "CONTRIBUTOR",
      "body": "What about this?\r\n\r\n```powershell\r\n#requires -RunAsAdministrator\r\n\r\n$testdrive = 'c:\\tmp'\r\n\r\n# create a virtual FAT32 drive and mount it\r\n$vhdx = Join-Path -Path $TestDrive -ChildPath 'PS16804.vhdx'\r\n\r\nif (Test-Path -Path $vhdx) {\r\n    Remove-item -Path $vhdx -Force -Verbose\r\n}\r\n\r\nDismount-DiskImage -ImagePath $vhdx -ErrorAction SilentlyContinue\r\n\r\n$create_vhdx = Join-Path -Path $TestDrive -ChildPath 'create_vhdx.txt'\r\n\r\nSet-Content -Path $create_vhdx -Force -Value @\"\r\n    create vdisk file=\"$vhdx\" maximum=100 type=fixed\r\n    select vdisk file=\"$vhdx\"\r\n    attach vdisk\r\n    convert mbr\r\n    create partition primary\r\n    format fs=fat32\r\n    assign letter=\"T\"\r\n    detach vdisk\r\n\"@\r\n\r\ndiskpart.exe /s $create_vhdx\r\nMount-DiskImage -ImagePath $vhdx > $null\r\n\r\n$driveroot = 't:\\'\r\n\r\nif (Test-Path -LiteralPath $driveroot)\r\n{\r\n\r\n# repro the issue\r\n$parentfoldername = 'PS16804'\r\n$foldername = '\u5929\u6c17\u306e\u5b50'\r\n$filename = '01 - \u300c\u5929\u6c17\u306e\u5b50\u300d\u306e\u30c6\u30fc\u30de.mp3'\r\n\r\n$parentfolder_abspath = Join-Path -Path $driveroot -ChildPath $parentfoldername\r\n$folder_abspath = Join-Path -Path $driveroot -ChildPath (\"{0}\\{1}\" -f $parentfoldername, $foldername)\r\n\r\n# start from a clean slate\r\nif (Test-Path -LiteralPath $parentfolder_abspath)\r\n{\r\n    # use CMD since Remove-Item will not work\r\n    cmd /c \"rd /s /q $parentfolder_abspath\"\r\n}\r\n\r\nif (Test-Path -LiteralPath $parentfolder_abspath)\r\n{\r\n    Write-Host -ForegroundColor Red (\"Failed to remove '{0}'\" -f $parentfolder_abspath)\r\n    Exit(1)\r\n}\r\n\r\nNew-Item -Path $folder_abspath -ItemType Directory -Force | Out-Null\r\nif (!(Test-Path -LiteralPath $folder_abspath))\r\n{\r\n    Write-Host -ForegroundColor Red (\"Failed to create '{0}'\" -f $folder_abspath)\r\n    Exit(1)\r\n}\r\n\r\n$filepath_abs = Join-Path -Path $folder_abspath -ChildPath $filename\r\n\"\" | Out-File -LiteralPath $filepath_abs\r\n\r\nWrite-Host -ForegroundColor Yellow (\"Attempting to remove '{0}' using Remove-Item -Recurse -Force\" -f $parentfolder_abspath)\r\nRemove-Item -Force -Recurse -Verbose -LiteralPath $parentfolder_abspath\r\nif (Test-Path -LiteralPath $parentfolder_abspath)\r\n{\r\n    Write-Host -ForegroundColor Red (\"Failed to remove '{0}'\" -f $parentfolder_abspath)\r\n}\r\nelse {\r\n    Write-Host -ForegroundColor Green (\"Removal of '{0}' succeeded\" -f $parentfolder_abspath)\r\n}\r\n\r\nWrite-Host -ForegroundColor Yellow (\"Attempting to remove '{0}' using CMD /C RD /S /Q\" -f $parentfolder_abspath)\r\ncmd /c \"rd /s /q $parentfolder_abspath\"\r\nif (Test-Path -LiteralPath $parentfolder_abspath)\r\n{\r\n    Write-Host -ForegroundColor Red (\"Failed to remove '{0}'\" -f $parentfolder_abspath)\r\n}\r\nelse {\r\n    Write-Host -ForegroundColor Green (\"Removal of '{0}' succeeded\" -f $parentfolder_abspath)\r\n}\r\n}\r\nDismount-DiskImage -ImagePath $vhdx > $null\r\nRemove-item -Path $vhdx -Force\r\nRemove-item -Path $create_vhdx -Force\r\n\r\n\r\n```\r\n[PS16804.zip](https://github.com/PowerShell/PowerShell/files/7944146/PS16804.zip)\r\n\r\nOutput:\r\n\r\n![image](https://user-images.githubusercontent.com/12860484/151229024-f7b05918-d9fa-43ab-82d6-46f65307cd09.png)\r\n\r\n",
      "created_at": "2022-01-26T19:01:36Z",
      "updated_at": "2022-01-26T19:01:36Z"
    },
    {
      "author": "sba923",
      "author_association": "CONTRIBUTOR",
      "body": "BTW, I can't repro with Windows PowerShell 5.1:\r\n\r\n![image](https://user-images.githubusercontent.com/12860484/151230748-af0ec25f-4042-4ecc-bc76-acea2aa8a375.png)\r\n",
      "created_at": "2022-01-26T19:14:03Z",
      "updated_at": "2022-01-26T19:14:03Z"
    },
    {
      "author": "jborean93",
      "author_association": "COLLABORATOR",
      "body": "I'm curious if you can delete the files with `[System.IO.File]::Delete($filePath)`? If this works it sounds like .NET is able to handle this particular scenario and the problem stems from extra code that PowerShell adds.\r\n\r\nBased on the exception traceback it seems like the problem stems from [IsReparsePointLikeSymlink](https://github.com/PowerShell/PowerShell/blob/7dc4587014bfa22919c933607bf564f0ba53db2e/src/System.Management.Automation/namespaces/FileSystemProvider.cs#L8250) which AFAIK is not present in 5.1. It could be that the FindFirstFileEx set of Win32 functions that are called aren't handling the FAT32 limitations problems. I know that FAT32 filesystems encode their file names in the OEM codepage and aren't actually unicode so the error message points to problems relating to that.",
      "created_at": "2022-01-26T20:14:27Z",
      "updated_at": "2022-01-26T20:14:27Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "We could filter out based on 1113 native error code but I wonder why FindFirstFileEx return an error for FAT32 if no limitations are mentioned in docs - looks like OS bug. I guess perhaps the error code comes from p/invoke wrapper code and a bug is FindFirstFileExW return non-unicode string.",
      "created_at": "2022-01-27T06:14:18Z",
      "updated_at": "2022-01-27T06:14:18Z"
    },
    {
      "author": "kasini3000",
      "author_association": "NONE",
      "body": "I am coming. It sounds like copying these files out using powershell and then copying them back will solve the problem. If so, it should be an old version of the software that did not use the correct encoding, or bypassed the win encoding mechanism and wrote the file directory. \r\n\r\nI'm not good at these and can't help much more.",
      "created_at": "2022-01-27T06:25:58Z",
      "updated_at": "2022-01-27T06:25:58Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> It sounds like copying these files out using powershell and then copying them back will solve the problem.\r\n\r\n@kasini3000 Did you try on virtual disk like https://github.com/PowerShell/PowerShell/issues/16804#issuecomment-1022500443?",
      "created_at": "2022-01-27T06:47:27Z",
      "updated_at": "2022-01-27T06:47:27Z"
    },
    {
      "author": "sba923",
      "author_association": "CONTRIBUTOR",
      "body": "> I'm curious if you can delete the files with `[System.IO.File]::Delete($filePath)`\r\n\r\nThis works:\r\n\r\n```powershell\r\nWrite-Host -ForegroundColor Yellow (\"Attempting to remove '{0}' using [System.IO.File]::Delete()\" -f $filepath_abs)\r\n[System.IO.File]::Delete($filepath_abs)\r\nif (Test-Path -LiteralPath $filepath_abs)\r\n{\r\n    Write-Host -ForegroundColor Red (\"Failed to remove '{0}'\" -f $filepath_abs)    \r\n}\r\nelse {\r\n    Write-Host -ForegroundColor Green (\"Removal of '{0}' succeeded\" -f $filepath_abs)    \r\n}\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/12860484/151311459-698bc3a3-5ea9-472b-8be9-d4eaa4c325c8.png)\r\n\r\n\r\n",
      "created_at": "2022-01-27T07:29:25Z",
      "updated_at": "2022-01-27T07:29:25Z"
    },
    {
      "author": "kasini3000",
      "author_association": "NONE",
      "body": "@iSazonov : \r\nno , \r\n\r\n```\r\nWrite-Host -ForegroundColor Yellow (\"Attempting to remove '{0}' using Remove-Item -Recurse -Force\" -f $parentfolder_abspath)\r\nRemove-Item -Force -Recurse -Verbose -LiteralPath $parentfolder_abspath\r\n```\r\nTested in my picture up ps code\uff0cnormal.\r\n\r\n\r\nIn addition, I suggest that poster add the BOM header to his own script and run it again, there may be no problem.",
      "created_at": "2022-01-27T08:12:19Z",
      "updated_at": "2022-01-27T08:12:19Z"
    },
    {
      "author": "sba923",
      "author_association": "CONTRIBUTOR",
      "body": "> In addition, I suggest that poster add the BOM header to his own script and run it again, there may be no problem.\r\n\r\nAdding the BOM to the script unsurprisingly doesn't solve anything.\r\n\r\n",
      "created_at": "2022-01-27T08:18:55Z",
      "updated_at": "2022-01-27T08:18:55Z"
    },
    {
      "author": "sba923",
      "author_association": "CONTRIBUTOR",
      "body": "> We could filter out based on 1113 native error code but I wonder why `FindFirstFileEx` return an error for FAT32 if no limitations are mentioned in docs - looks like OS bug. I guess perhaps the error code comes from p/invoke wrapper code and a bug is `FindFirstFileExW` return non-unicode string.\r\n\r\nIs there anything I can do to help narrow this down?\r\n\r\n@iSazonov Are you able to repro with my latest virtual disk-based script?",
      "created_at": "2022-01-28T17:30:16Z",
      "updated_at": "2022-01-28T17:30:16Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Yes, I can. Thanks!",
      "created_at": "2022-01-28T17:54:36Z",
      "updated_at": "2022-01-28T17:54:36Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT found follow discussion https://groups.google.com/g/fastcopy-bb-eng/c/z6DJRzeGeL4/m/IEsaD7g6AgAJ?pli=1\r\n\r\nIn short, we could replace FindFirstFileExW with FindFirstFileW.\n\n<blockquote><div><strong><a href=\"https://groups.google.com/g/fastcopy-bb-eng/c/z6DJRzeGeL4/m/IEsaD7g6AgAJ?pli=1\">Error copying UNICODE Cyrillic  filenames</a></strong></div></blockquote>",
      "created_at": "2022-02-04T04:33:45Z",
      "updated_at": "2022-02-04T04:33:48Z"
    },
    {
      "author": "KalleOlaviNiemitalo",
      "author_association": "NONE",
      "body": "Does the failing FindFirstFileExW call have the particular file name in the `LPCWSTR lpFileName` argument, or is that only a directory path and a wildcard? I wonder if the error comes from the Win32 layer or from somewhere in FatQueryDirectory, perhaps [here](https://github.com/microsoft/Windows-driver-samples/blob/1fe4cc42bedfccb97a5b2cc169f9e5306d41d0de/filesys/fastfat/dirctrl.c#L574-L576); that does check for STATUS_UNMAPPABLE_CHARACTER though.",
      "created_at": "2022-02-04T06:47:54Z",
      "updated_at": "2022-02-04T06:47:54Z"
    },
    {
      "author": "sba923",
      "author_association": "CONTRIBUTOR",
      "body": "Note that the CMD workaround doesn't always work (here it's running on a Windows 11 box):\r\n\r\n<img width=\"656\" alt=\"image\" src=\"https://user-images.githubusercontent.com/12860484/153772162-95ca02d2-5119-4a9c-8df6-9ef8240269b3.png\">\r\n",
      "created_at": "2022-02-13T19:50:41Z",
      "updated_at": "2022-02-13T19:50:41Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:This issue was addressed in #16840, which has now been successfully released as `v7.3.0-preview.2`.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.3.0-preview.2)\n",
      "created_at": "2022-02-24T23:34:04Z",
      "updated_at": "2022-02-24T23:34:04Z"
    }
  ],
  "created_at": "2022-01-26T11:14:12Z",
  "labels": [
    "Resolution-Fixed",
    "WG-Cmdlets-Management",
    "Area-FileSystem-Provider"
  ],
  "number": 16804,
  "state": "closed",
  "title": "Remove-Item fails on FAT32 drive when encountering some Unicode characters",
  "updated_at": "2022-02-24T23:34:04Z"
}