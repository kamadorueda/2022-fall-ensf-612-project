{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13815",
  "author": "MatejKafka",
  "body": "## Summary of the new feature/enhancement\r\nCurrently, it is possible to download PowerShell Core as a .zip archive and unzip it to a custom directory and everything seems to work correctly even from non-standard path, so users could run `pwsh` as a portable package by putting it e.g. on a USB flash drive and just plugging it in whenever needed. \r\n\r\nHowever, the config directory (where profile and installed modules are stored; at `Documents/Powershell`) and cache directory (at `LocalAppData\\Microsoft\\PowerShell`) paths are currently hardcoded. It would be great if we could specify custom paths in `powershell.config.json` or another similar config file, ideally with support for paths relative to the `pwsh.exe` binary.\r\n\r\n## Proposed technical implementation details (optional)\r\nIt seems that both directories are configured here: https://github.com/PowerShell/PowerShell/blob/1a3721a574e00263f64101d5dbbe1a975e6c8087/src/System.Management.Automation/CoreCLR/CorePsPlatform.cs#L149\r\n\r\nAs far as I can tell, it should be enough to check if there are any paths configured in the config file and set them here (and ideally abort with an error if the paths do not exist). I don't have much experience with C#, but I can try writing a pull request if we agree on a solution.",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Our current intention is to exclude config file at all and use defaults because parsing a config file slows down startup scenario noticeably. \r\n\r\nAs for `Documents/Powershell`, you can set PSModulePath environment variable as needed at startup.\r\nAs for cache directory, we follow OS standards.\r\n\r\nWe had issues with Docker scenario and fixed them but portable scenario works well as-is.\r\nTo approve the enhancement we need to see _an important scenario that is blocked_.",
      "created_at": "2020-10-20T04:25:35Z",
      "updated_at": "2020-10-20T04:25:35Z"
    },
    {
      "author": "fMichaleczek",
      "author_association": "NONE",
      "body": "> a config file slows down startup scenario noticeable\r\n> As for `Documents/Powershell`, you can set PSModulePath environment variable\r\n> To approve the enhancement we need to see _an important scenario that is blocked_.\r\n\r\nPortable behavior on Windows is a kind of packaging that need a clean software and PowerShell is not. \u2639\ufe0f It's a shame for us. Portable community always exists and if they need an environment variable like PSModuleCachePath, we should create one. ",
      "created_at": "2020-10-20T08:45:37Z",
      "updated_at": "2020-10-20T08:45:50Z"
    },
    {
      "author": "MatejKafka",
      "author_association": "NONE",
      "body": "> We had issues with Docker scenario and fixed them but portable scenario works well as-is.\r\n> To approve the enhancement we need to see _an important scenario that is blocked_.\r\n\r\nFor me personally, I'm working on a package manager and packaging system for Windows that partially mirrors the macOS package structure (each app has its own directory, and all binaries, config, data, logs,... are stored in this directory). This allows me to reinstall my system and keep all my apps in the same state without needing to reinstall them.\r\n\r\nAnother useful scenario: I'm a sysadmin, and I carry an USB flash drive which contains utilities that I use for fixing and managing machines, including `pwsh`. This allows me to just connect the drive wherever needed and instantly, I have all my tools ready without installation and configuration.\r\n\r\nGiven how minor the requested change is, I personally feel it enables scenarios useful enough to be worth it.\r\n\r\nBtw, do you have any numbers for the startup slowdown caused by reading the config file? On my machine, bare pwsh without profile runs in about 350 ms - I find it hard to believe that this time is noticeably influenced by reading and parsing a single JSON file.",
      "created_at": "2020-10-20T15:34:55Z",
      "updated_at": "2020-10-20T15:45:15Z"
    },
    {
      "author": "MatejKafka",
      "author_association": "NONE",
      "body": "> Portable behavior on Windows is a kind of packaging that need a clean software and PowerShell is not. frowning_face It's a shame for us. Portable community always exists and if they need an environment variable like PSModuleCachePath, we should create one.\r\n\r\nI don't feel an extra environment variable is a good solution - for the portable scenario, it needs an extra launcher just to pass an environment variable, as we cannot modify global env on the target machine.",
      "created_at": "2020-10-20T15:36:58Z",
      "updated_at": "2020-10-20T15:36:58Z"
    },
    {
      "author": "fMichaleczek",
      "author_association": "NONE",
      "body": "@MatejKafka Yes, I know but I already  use environment variable to exclude TELEMETRY, so ...\r\n\r\nThere is already a PSModuleAnalysisCachePath environment variable, I personally disable the analysisCache on portable scenario and set, PSDisableModuleAnalysisCacheCleanup to 1. (the first launch frozen in the past to build the module cache, I idk it's still the same). The documentation doesn't explain if it's also cover the config file. \r\n[About PowerShell Config](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_powershell_config?view=powershell-7.1)\r\n\r\nI think both should be in the powershell.config.json",
      "created_at": "2020-10-20T16:16:27Z",
      "updated_at": "2020-10-20T16:16:27Z"
    },
    {
      "author": "dweddig01",
      "author_association": "NONE",
      "body": "> As for `Documents/Powershell`, you can set PSModulePath environment variable as needed at startup.\r\n\r\nUnfortunately, we are experiencing behavior where the PSModulePath we set, whether in Windows System Environment Variables or in the startup profile, gets the 'documents/powershell' added to the front of the variable. This happens everytime we use Install-Module or Update-Module. I am not sure why that happens. There should be logic that allows you to set that PSModulePath and not have it adjusted if it is set either at the system, or within the profile startup.",
      "created_at": "2020-12-04T14:25:19Z",
      "updated_at": "2020-12-04T14:25:19Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@dweddig01 Could you please open new issue and describe your business scenario? ",
      "created_at": "2020-12-04T17:55:58Z",
      "updated_at": "2020-12-04T17:55:58Z"
    }
  ],
  "created_at": "2020-10-19T23:07:34Z",
  "labels": [
    "Issue-Enhancement",
    "Area-SideBySide"
  ],
  "number": 13815,
  "state": "open",
  "title": "Allow specifying custom PowerShell config and cache directory instead of the hardcoded paths in `Platform`",
  "updated_at": "2020-12-04T17:55:58Z"
}