{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15876",
  "author": "iRon7",
  "body": "### Summary of the new feature / enhancement\r\n\r\nCurrently the only way to do multiple replacements in a string is to chain the [`-Replace`](https://docs.microsoft.com/powershell/module/microsoft.powershell.core/about/about_comparison_operators#replacement-operator) operator like:\r\n\r\n```PowerShell\r\n'hello world' -Replace 'h', 'H' -Replace ' ' -Replace 'w', 'W'\r\nHelloWorld\r\n```\r\nSee StackOver flow issues:\r\n* [How to replace multiple strings in a file using PowerShell](https://stackoverflow.com/q/3403217/1701026)\r\n* [Replacing pesky 'umlaut' | standard way does not work](https://stackoverflow.com/q/68636502/1701026)\r\n* [Replace many variable strings with one -replace expression](https://stackoverflow.com/q/28953516/1701026)\r\n* ...\r\n\r\nCurrently the `-Replace` Operator returns an error when more than 2 elements are supplied:\r\n\r\n```PowerShell\r\n'Hello World' -Replace 'a', 'b', 'c'\r\n```\r\n\r\n> `InvalidOperation: The -Replace operator allows only two elements to follow it, not 3.`\r\n\r\nBut I think there are no technical obstacles to support multiple **Regex**/**Substitution** pairs.\r\n\r\n\r\n### Proposed technical implementation details (optional)\r\n\r\n<details>\r\n  <summary>Prototype</summary>\r\n\r\n```PowerShell\r\nfunction Replace-String {\r\n    [CmdletBinding()][OutputType([string])] param(\r\n        [Parameter(Mandatory = $True, ValueFromPipeLine = $True)]$InputObject,\r\n        [Parameter(Mandatory = $True, Position = 0)][Array]$Pair,\r\n        [Alias('CaseSensitive')][switch]$MatchCase\r\n    )\r\n    for ($i = 0; $i -lt $Pair.get_Count()) {\r\n        if ($Pair[$i] -is [Array]) {\r\n            $InputObject = $InputObject |Replace-String -MatchCase:$MatchCase $Pair[$i++]\r\n        }\r\n        else {\r\n            $Regex = $Pair[$i++]\r\n            $Substitute = if ($i -lt $Pair.get_Count() -and $Pair[$i] -isnot [Array]) { $Pair[$i++] }\r\n            if ($MatchCase) { $InputObject = $InputObject -cReplace $Regex, $Substitute }\r\n            else            { $InputObject = $InputObject -iReplace $Regex, $Substitute }\r\n        }\r\n    }\r\n    $InputObject\r\n}; Set-Alias Replace Replace-String\r\n```\r\n</details>\r\n\r\nIn this prototype idea, you can supply the **Regex**/**Substitution** pairs as a flat array:\r\n\r\n```PowerShell\r\n$String = 'Das \u00dcben von Xylophon und Querfl\u00f6te ist zweckm\u00e4\u00dfig.'\r\n$String |Replace -MatchCase '\u00f6','oe', '\u00e4','ae', '\u00fc','ue', '\u00df','ss', '\u00d6','Oe', '\u00dc','Ue', '\u00c4','Ae'\r\nDas Ueben von Xylophon und Querfloete ist zweckmaessig.\r\n```\r\n\r\nOr  as **Regex**/**Substitution** pairs:\r\n<sub>(knowing that the elements normally should be of type `[String]`, `[Regex]` or `[ScriptBlock]`)</sub>\r\n\r\n```PowerShell\r\n$String = 'Das \u00dcben von Xylophon und Querfl\u00f6te ist zweckm\u00e4\u00dfig.'\r\n$String |Replace -MatchCase ('\u00f6','oe'), ('\u00e4','ae'), ('\u00fc','ue'), ('\u00df','ss'), ('\u00d6','Oe'), ('\u00dc','Ue'), ('\u00c4','Ae')\r\nDas Ueben von Xylophon und Querfloete ist zweckmaessig.\r\n```\r\n\r\n```PowerShell\r\n'hello world' |Replace ('h','H'), ' ', ('w','W')\r\nHelloWorld\r\n```\r\n\r\n```PowerShell\r\n'Name1234' |Replace ('\\d', '#'), ('\\w', '@')\r\n@@@@####\r\n```",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "It is unlikely that we can do any better than a simple Regex.Replace.",
      "created_at": "2021-08-05T13:15:49Z",
      "updated_at": "2021-08-05T13:15:49Z"
    }
  ],
  "created_at": "2021-08-05T10:54:41Z",
  "labels": [
    "Issue-Enhancement",
    "WG-Language",
    "Needs-Triage"
  ],
  "number": 15876,
  "state": "open",
  "title": "Make `-Replace` operator support multiple Regex/Substitution pairs. ",
  "updated_at": "2021-08-05T13:15:58Z"
}