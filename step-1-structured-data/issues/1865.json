{
  "_url": "https://github.com/PowerShell/PowerShell/issues/1865",
  "author": "DexterPOSH",
  "body": "## Steps to reproduce\n\nSwitch to Cert:/ Drive and run Get-ChildItem\n## Expected behavior\n\nPS Cert:/> get-childitem\n\nLocation   : CurrentUser\nStoreNames :\n\nLocation   : LocalMachine\nStoreNames :\n## Actual behavior\n\nPS Cert:/> get-childitem\nget-childitem : Cannot find path '/Cert:/' because it does not exist.\nAt line:1 char:1\n- get-childitem\n- ~~~~~~~~~~~~~\n  - CategoryInfo          : ObjectNotFound: (/Cert:/:String) [Get-ChildItem], ItemNotFoundException\n  - FullyQualifiedErrorId : PathNotFound,Microsoft.PowerShell.Commands.GetChildItemCommand\n## Environment data\n\n<!-- provide the output of $PSVersionTable -->\n\n``` powershell\n> $PSVersionTable\nName                           Value\n----                           -----\nPSVersion                      6.0.0-alpha\nPSEdition                      Core\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\nBuildVersion                   3.0.0.0\nGitCommitId                    v6.0.0-alpha.8\nCLRVersion\nWSManStackVersion              3.0\nPSRemotingProtocolVersion      2.3\nSerializationVersion           1.1.0.1\n\n```\n",
  "closed_at": null,
  "comments": [
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "What OS was this on?\n",
      "created_at": "2016-08-18T16:41:45Z",
      "updated_at": "2016-08-18T16:41:45Z"
    },
    {
      "author": "DexterPOSH",
      "author_association": "NONE",
      "body": "This was on an Ubuntu box.\n\n```\nvagrant@vagrant:/vagrant_data$ lsb_release -a\nNo LSB modules are available.\nDistributor ID: Ubuntu\nDescription:    Ubuntu 14.04.1 LTS\nRelease:        14.04\nCodename:       trusty\nvagrant@vagrant:/vagrant_dat\n```\n",
      "created_at": "2016-08-19T00:28:42Z",
      "updated_at": "2016-08-19T00:28:42Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "I don't think the Cert provider is currently supported on Ubuntu, but the drive probably shouldn't show up in that case.\n",
      "created_at": "2016-08-19T00:32:30Z",
      "updated_at": "2016-08-19T00:32:54Z"
    },
    {
      "author": "DexterPOSH",
      "author_association": "NONE",
      "body": "The Cert provider yields expected result in the below case on my Ubuntu host.\n\n```\nPS /vagrant_data> Get-ChildItem -path Cert:/\n\n\nLocation   : CurrentUser\nStoreNames :\n\nLocation   : LocalMachine\nStoreNames :\n\n```\n\nBut it fails when the Get-ChildItem is run from the PSDrive itself.\n",
      "created_at": "2016-08-19T05:42:50Z",
      "updated_at": "2016-08-19T05:42:50Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "The Certificate store is not currently supported on non-Windows platforms, and isn't in scope in the near future. ",
      "created_at": "2017-05-24T18:53:20Z",
      "updated_at": "2017-05-24T18:53:20Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@joeyaiello What would an x509 cert provider do on a Linux machine?\r\nWell, it could enumerate the certs in `/etc/ssl`, `/etc/pki/tls` , `/system/etc/security/cacerts`, but the semantics would need to be quite different than on windows to be useful.",
      "created_at": "2017-05-24T19:16:21Z",
      "updated_at": "2017-05-24T19:44:38Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "In researching supported and unsupported features in .NET core's Web Cmdlets I discovered that the certificate stores are working in .NET on both Linux and macOS. they can be directly manipulated via the .NET APIs through pwsh. On Linux, the current user my store gets created in `~/.dotnet/corefx/cryptography/x509stores/my`. on macOS it is using Apple's `Security.Framework` API.\r\n\r\nUsing the `ClientCert.pfx` in the `WebListener`, I can initialize the Linux `CurrentUser\\My` store like so:\r\n\r\n```powershell\r\n# Do some prep work\r\n$StoreName = [System.Security.Cryptography.X509Certificates.StoreName]\r\n$StoreLocation = [System.Security.Cryptography.X509Certificates.StoreLocation]\r\n$OpenFlags = [System.Security.Cryptography.X509Certificates.OpenFlags]\r\n$Store = [System.Security.Cryptography.X509Certificates.X509Store]::new(\r\n    $StoreName::My, $StoreLocation::CurrentUser)\r\n\r\n# Get a certificate\r\n$X509Certificate2 = [System.Security.Cryptography.X509Certificates.X509Certificate2]\r\n$CertPath = (Resolve-Path 'ClientCert.pfx').Path\r\n$Cert = $X509Certificate2::New($CertPath, 'password')\r\n\r\n# Open the store, Add the cert, Close the store.\r\n$Store.Open($OpenFlags::ReadWrite)\r\n$Store.Add($Cert)\r\n$Store.Close()\r\n```\r\n\r\nAfter doing that on Linux, I am able to use cert auth via thumbprint:\r\n\r\n```powershell\r\n$Thumbprint = '2DECF1348FF21B780F45D316A039B5EB4C6312F7'\r\n$Uri = 'https://prod.idrix.eu/secure/'\r\nInvoke-RestMethod -Uri $Uri -CertificateThumbprint $Thumbprint\r\n```\r\n\r\nCert auth doesn't work at all on macOS, but, I can still manipulate and search the  `CurrentUser\\My` store using the .NET APIs.\r\n\r\nI think this support should be readded for x-plat in 6.1.0.",
      "created_at": "2017-12-08T12:03:02Z",
      "updated_at": "2017-12-08T12:03:02Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Spent some time on this and the provider builds, but it doesn't work as it heavily relies on calling native Win32 apis to do anything.  There may be sufficient managed api support to remove the native calls, but it's a non-trivial amount of work.",
      "created_at": "2018-04-13T16:04:18Z",
      "updated_at": "2018-04-13T16:04:18Z"
    },
    {
      "author": "SidShetye",
      "author_association": "NONE",
      "body": "Related to *nix certificate activities, we need `Import-PfxCertificate`. Added as a ticket @ https://github.com/PowerShell/PowerShell/issues/7213",
      "created_at": "2018-06-30T07:53:01Z",
      "updated_at": "2018-06-30T07:53:01Z"
    },
    {
      "author": "andreesteve",
      "author_association": "NONE",
      "body": "@SteveL-MSFT - do you know if this feature is planed for a future release or just in the backlog for now? Thanks!",
      "created_at": "2019-07-21T06:19:43Z",
      "updated_at": "2019-07-21T06:19:43Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@andreesteve this feature is not currently in any active plan and is just in the backlog.  Since the provider currently relies on Win32 APIs and not .NET APIs, it's not a small work item.  A PR would be gladly accepted :)",
      "created_at": "2019-07-23T16:48:04Z",
      "updated_at": "2019-07-23T16:48:04Z"
    }
  ],
  "created_at": "2016-08-18T09:08:37Z",
  "labels": [
    "OS-macOS",
    "OS-Linux",
    "WG-Engine",
    "Up-for-Grabs",
    "WG-Engine-Providers"
  ],
  "number": 1865,
  "state": "open",
  "title": "Support the Cert:/ PSDrive on non-Windows platforms",
  "updated_at": "2021-08-26T03:36:47Z"
}