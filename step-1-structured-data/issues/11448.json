{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11448",
  "author": "iSazonov",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nAdd null check in OnOutputDataReceived() method.\r\n\r\n## PR Context\r\n\r\nFix #11445. The NRE comes from #11380.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [ ] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2020-01-10T00:08:10Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@PaulHigin Make sense to optimize  GetMessageGuid() method? Is it on hot path? I could exclude allocations (we don't use parsed GUID) and try-catch.",
      "created_at": "2020-01-06T18:48:46Z",
      "updated_at": "2020-01-06T18:48:46Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov \r\nMy first thought was to let later packet processing check for null/empty packet string. But that is an invalid PSRP packet and nothing can be done with it.  So now I am thinking we should do the null/empty check at `protected void HandleOutputDataReceived()` and simply return if `string` is null or empty.\r\n\r\nI don't believe there will be any noticeable perf impact, but it feels cleaner.\r\n\r\nTo summarize, I think we should move the null check from line 749 to line 773.\r\n\r\nDo you agree?",
      "created_at": "2020-01-06T19:00:44Z",
      "updated_at": "2020-01-06T19:00:44Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> invalid PSRP packet\r\n\r\nIf we silently drop the packet it seems we hide a bug. If I undenstand right the packet is created on server before the send code - and if we created a broken package this looks like a bug.\r\nAlthough the original design allow this. Actually, it worked like that before #11380 - we sent such a empty package. The PR brings back this behavior. _This is the best minimal change._\r\n If we do not want to send empty packets, then we should rather eliminate the reason for their appearance. This is much harder to do. I don\u2019t really know where this is going. If this is not critical, then perhaps we could stop on the current fix.\r\n\r\n",
      "created_at": "2020-01-06T19:38:37Z",
      "updated_at": "2020-01-06T19:38:37Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I added an optimization commit to avoid extra allocations. If you don't like it I will revert.",
      "created_at": "2020-01-06T19:50:53Z",
      "updated_at": "2020-01-06T19:50:53Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov \r\nPacket processing already detects malformed packets and emits a proper error.  But a null/empty data string indicates a problem in the transport, e.g., named pipe emitting a null packet because it closed or some reason.  In this case the code simply ignores the packet and is the correct thing to do.  I feel this check and return should be done in `HandleOutputDataReceived()` as I mentioned above.",
      "created_at": "2020-01-06T20:26:15Z",
      "updated_at": "2020-01-06T20:26:15Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@PaulHigin Thanks for help!",
      "created_at": "2020-01-10T03:36:11Z",
      "updated_at": "2020-01-10T03:36:11Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov Thanks for fixing this!",
      "created_at": "2020-01-10T16:12:04Z",
      "updated_at": "2020-01-10T16:12:04Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.0.0-rc.2` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.0.0-rc.2)\n",
      "created_at": "2020-01-16T23:38:52Z",
      "updated_at": "2020-01-16T23:38:52Z"
    }
  ],
  "created_at": "2019-12-28T16:55:44Z",
  "number": 11448,
  "state": "closed",
  "title": "Skip null data (fix NRE) in output data received handler",
  "updated_at": "2020-01-16T23:38:53Z"
}