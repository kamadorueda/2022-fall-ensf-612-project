{
  "_url": "https://github.com/PowerShell/PowerShell/issues/17390",
  "author": "SteveL-MSFT",
  "body": "### Summary of the new feature / enhancement\n\nThe limitations the OMI project not making/accepting changes needed for PowerShell as distros get updated makes it no longer valuable to users to ship the current WSMan support as only CentOS 7 is known to still work.  The fork of OMI used in the https://www.powershellgallery.com/packages/PSWSMan/2.3.0 module has much better support.\r\n\r\nRecommendation is to remove the client library that currently ships.  This means that for users who do not have PSWSMan installed, they should get an existing error that the WSMan client library was not found.  We would update the docs and perhaps mention using PSWSMan to get support if they still need it.\n\n### Proposed technical implementation details (optional)\n\n_No response_",
  "closed_at": null,
  "comments": [
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Do we have any tests that verifies WSMan remoting functionality? If so, are we going to remove those tests, or install `PSWSMan` to run those tests?",
      "created_at": "2022-05-19T22:19:11Z",
      "updated_at": "2022-05-19T22:19:11Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> This means that for users who do not have PSWSMan installed, they should get an existing error that the WSMan client library was not found. We would update the docs and perhaps mention using PSWSMan to get support if they still need it.\r\n\r\nPerhaps we could write more useful runtime error and recommend to install PSWSMan module.",
      "created_at": "2022-05-20T07:21:58Z",
      "updated_at": "2022-05-20T07:21:58Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee reviewed this, given the limited utility of the current OMI binaries on an old distro as newer distros have moved to newer versions of dependent libraries that aren't compatible with the OMI version we are using we have agreed to remove built-in WSMan support for non-Windows platforms.  We need a way to inform the user to go to some documentation on ps remoting (likely something like https://aka.ms/pswsmanremoting) to inform of the limitations and even suggest using PSWSMan as a workaround (or moving to SSH as a preferred solution).\r\n\r\n@PowerShell/wg-powershell-remoting please discuss on where in the code it would be best to inform the user to get a plugin that supports WSMan and how PowerShell can detect that appropriate plugin\r\n",
      "created_at": "2022-05-25T22:37:47Z",
      "updated_at": "2022-06-13T19:40:29Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT  WG-Remoting doesn't understand the comment.  Why would a user get a plugin?  Remoting plugins only affect WinRM connections, and the common user has no idea what it is or for.  I feel the only work that is necessary is to throw an appropriate error when a WinRM cmdlet/parameter set is invoked on non-Windows platforms that do not support WinRM remoting.  We can eventually include in the error message something that directs the user to a custom remote connection that does support non-Windows platform connection to WinRM endpoints, when one becomes available.",
      "created_at": "2022-06-06T20:01:26Z",
      "updated_at": "2022-06-06T20:01:26Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Here is the location of the current WSMan client library error https://github.com/PowerShell/PowerShell/search?q=WSManClientDllNotAvailable\n\n<blockquote><img src=\"https://repository-images.githubusercontent.com/49609581/aad0ad80-cdec-11ea-8248-a37bc0571bfd\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/PowerShell/PowerShell\">Search \u00b7 WSManClientDllNotAvailable \u00b7 PowerShell/PowerShell</a></strong></div><div>PowerShell for every system! Contribute to PowerShell/PowerShell development by creating an account on GitHub.</div></blockquote>",
      "created_at": "2022-06-13T19:34:49Z",
      "updated_at": "2022-06-13T19:34:51Z"
    }
  ],
  "created_at": "2022-05-19T18:32:58Z",
  "number": 17390,
  "state": "open",
  "title": "Remove WSMan support for non-Windows",
  "updated_at": "2022-06-13T19:40:29Z"
}