{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15984",
  "author": "henry-us",
  "body": "### Summary of the new feature / enhancement\n\nI have found some alternatives in the [discussion](https://github.com/PowerShell/PowerShell/issues/13004).\r\nBut, If I want to output an error message, which method should I use, I don't seem to have found an alternative in PowerShell.\r\n\r\n`out IList errors`\r\n\r\n```\r\npublic Collection Invoke(string script, IEnumerable input, out IList errors)\r\n{\r\n        if (_disposed == true)\r\n        {\r\n            throw PSTraceSource.NewObjectDisposedException(\"runspace\");\r\n        }\r\n        if (script == null)\r\n        {\r\n            throw PSTraceSource.NewArgumentNullException(\"script\");\r\n        }\r\n\r\n        Pipeline p = _runspace.CreatePipeline(script);\r\n        Collection<PSObject> output = p.Invoke(input);\r\n        // 2004/06/30-JonN was ReadAll() which was non-blocking\r\n        errors = p.Error.NonBlockingRead();\r\n        return output;\r\n}\r\n```\n\n### Proposed technical implementation details (optional)\n\n_No response_",
  "closed_at": "2021-08-25T08:47:13Z",
  "comments": [
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "How about:\r\n\r\n```csharp\r\nusing (var pwsh = PowerShell.Create())\r\n{\r\n    pwsh.AddScript(\"Write-Error 'Bad'\").Invoke();\r\n\r\n    PSDataCollection<ErrorRecord> errors = pwsh.Streams.Error;\r\n}\r\n```",
      "created_at": "2021-08-24T16:23:25Z",
      "updated_at": "2021-08-24T16:23:35Z"
    },
    {
      "author": "henry-us",
      "author_association": "NONE",
      "body": "> How about:\n> \n> ```csharp\n> using (var pwsh = PowerShell.Create())\n> {\n>     pwsh.AddScript(\"Write-Error 'Bad'\").Invoke();\n> \n>     PSDataCollection<ErrorRecord> errors = pwsh.Streams.Error;\n> }\n> ```\n\nThank you for your help. I'm not very familiar with the methods in Powershell. Is it possible to transmit error information to an object?\nJust like:\n```\nusing (var pwsh = PowerShell.Create())\n{\n    pwsh.AddScript(\"Write-Error 'Bad'\").Invoke();\n\n    PSDataCollection<ErrorRecord> errors = pwsh.Streams.Error;\n    test=pwsh.AddScript(\"Write-Error 'Bad'\").Invoke().xx(errors);\n    //or like this\n    //test=pwsh.AddScript(\"Write-Error 'Bad'\").Invoke().xx(out errors);\n}\n```",
      "created_at": "2021-08-24T17:43:09Z",
      "updated_at": "2021-08-24T17:45:45Z"
    },
    {
      "author": "jborean93",
      "author_association": "COLLABORATOR",
      "body": "Invoke will return the output stream, you need to access `Streams.Error` after you run the invoke to get the error stream (and other streams). See https://docs.microsoft.com/en-us/dotnet/api/system.management.automation.powershell.invoke?view=powershellsdk-7.0.0#System_Management_Automation_PowerShell_Invoke for details on `Invoke()` and https://docs.microsoft.com/en-us/dotnet/api/system.management.automation.powershell.streams?view=powershellsdk-7.0.0 for details of the `Streams` property.",
      "created_at": "2021-08-24T18:44:35Z",
      "updated_at": "2021-08-24T18:45:19Z"
    },
    {
      "author": "henry-us",
      "author_association": "NONE",
      "body": "> Invoke will return the output stream, you need to access `Streams.Error` after you run the invoke to get the error stream (and other streams). See https://docs.microsoft.com/en-us/dotnet/api/system.management.automation.powershell.invoke?view=powershellsdk-7.0.0#System_Management_Automation_PowerShell_Invoke for details on `Invoke()` and https://docs.microsoft.com/en-us/dotnet/api/system.management.automation.powershell.streams?view=powershellsdk-7.0.0 for details of the `Streams` property.\n\nOkay thanks Jordan, l've solved it now.\n\n<blockquote><img src=\"https://docs.microsoft.com/en-us/media/logos/logo-ms-social.png\" width=\"48\" align=\"right\"><div><strong><a href=\"https://docs.microsoft.com/en-us/dotnet/api/system.management.automation.powershell.invoke\">PowerShell.Invoke Method (System.Management.Automation)</a></strong></div><div>Invoke the Command synchronously and return the output PSObject collection. </div></blockquote>\n<blockquote><img src=\"https://docs.microsoft.com/en-us/media/logos/logo-ms-social.png\" width=\"48\" align=\"right\"><div><strong><a href=\"https://docs.microsoft.com/en-us/dotnet/api/system.management.automation.powershell.streams\">PowerShell.Streams Property (System.Management.Automation)</a></strong></div><div>Streams generated by PowerShell invocations </div></blockquote>",
      "created_at": "2021-08-25T08:45:24Z",
      "updated_at": "2021-08-25T08:45:26Z"
    }
  ],
  "created_at": "2021-08-24T05:34:07Z",
  "number": 15984,
  "state": "closed",
  "title": "RunspaceInvoke  is missing in Version7.4.1",
  "updated_at": "2021-08-25T08:47:13Z"
}