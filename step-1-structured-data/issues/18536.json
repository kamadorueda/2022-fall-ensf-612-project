{
  "_url": "https://github.com/PowerShell/PowerShell/issues/18536",
  "author": "CarloToso",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\nAdd 308 to possible redirect codes\r\nSmall cleanup of a nested if\r\n<!-- Summarize your PR between here and the checklist. -->\r\n\r\n## PR Context\r\n\r\n<!-- Provide a little reasoning as to why this Pull Request helps and why you have opened it. -->\r\n\r\n## PR Checklist\r\n\r\n- [ ] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [ ] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [ ] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [ ] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [ ] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/main/reference/7.3/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [ ] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and opened an issue in the relevant tool repository. This may include:\r\n        - [ ] Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode\r\n        (which runs in a different PS Host).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@CarloToso This change can be very sensitive. We need detailed description of the scenario(s) you are trying to fix.",
      "created_at": "2022-11-11T16:45:02Z",
      "updated_at": "2022-11-11T16:45:02Z"
    },
    {
      "author": "CarloToso",
      "author_association": "CONTRIBUTOR",
      "body": "The status codes 300,301,302,303,307,308 are redirect codes, and should have similar behaviour.\r\nBefore this PR when setting` -MaximumRedirection 0 -SkipHttpErrorCheck` in the WebCmdlets only 301 and 302 (`HttpStatusCode.Moved`, `HttpStatusCode.MovedPermanently` and `HttpStatusCode.Found`) threw this nonterminating error _The maximum redirection count has been exceeded. To increase the number of redirections allowed, supply a higher value to the -MaximumRedirection parameter._\r\nYou can check it with this code\r\n`300,301,302,303,307,308 | ForEach-Object {Invoke-WebRequest http://mockbin.org/redirect/$($_)?to=https://mockbin.org/status/200 -MaximumRedirection 0 -SkipHttpErrorCheck}`",
      "created_at": "2022-11-11T18:38:53Z",
      "updated_at": "2022-11-11T18:46:37Z"
    },
    {
      "author": "CarloToso",
      "author_association": "CONTRIBUTOR",
      "body": "Another option could be completely removing this non terminating error. So we have the same behaviour  for -MaximumRedirection >= 0",
      "created_at": "2022-11-11T20:00:40Z",
      "updated_at": "2022-11-11T20:00:40Z"
    },
    {
      "author": "pull-request-quantifier[bot]",
      "author_association": "NONE",
      "body": "### ![](https://img.shields.io/static/v1?label=Quantified&message=Extra%20Small&color=green)\r\n\r\nThis PR has `35` quantified lines of changes. In general, a change size of upto `200` lines is ideal for the best PR experience!\r\n\r\n------\r\n\r\n<details >\r\n    <summary display=\"inline\"> <strong>Quantification details</strong></summary>\r\n    <p />\r\n\r\n```\r\nLabel      : Extra Small\r\nSize       : +13 -22\r\nPercentile : 14%\r\n\r\nTotal files changed: 1\r\n\r\nChange summary by file extension:\r\n.cs : +13 -22\r\n```\r\n> Change counts above are quantified counts, based on the [PullRequestQuantifier customizations](https://github.com/microsoft/PullRequestQuantifier/blob/main/docs/prquantifier-yaml.md).\r\n    \r\n</details>\r\n\r\n\r\n<details>\r\n    <summary display=\"inline\"> <strong>Why proper sizing of changes matters</strong> </summary>\r\n    <p/>\r\n    <p/>\r\n\r\nOptimal pull request sizes drive a better predictable PR flow as they strike a\r\nbalance between between PR complexity and PR review overhead. PRs within the\r\noptimal size (typical small, or medium sized PRs) mean:\r\n\r\n- Fast and predictable releases to production:\r\n  - Optimal size changes are more likely to be reviewed faster with fewer\r\niterations.\r\n  - Similarity in low PR complexity drives similar review times.\r\n- Review quality is likely higher as complexity is lower:\r\n  - Bugs are more likely to be detected.\r\n  - Code inconsistencies are more likely to be detected.\r\n- Knowledge sharing is improved within the participants:\r\n  - Small portions can be assimilated better.\r\n- Better engineering practices are exercised:\r\n  - Solving big problems by dividing them in well contained, smaller problems.\r\n  - Exercising separation of concerns within the code changes.\r\n\r\n#### What can I do to optimize my changes\r\n\r\n- Use the PullRequestQuantifier to quantify your PR accurately\r\n  - Create a context profile for your repo using the [context generator](https://github.com/microsoft/PullRequestQuantifier/releases)\r\n  - Exclude files that are not necessary to be reviewed or do not increase the review complexity. Example: Autogenerated code, docs, project IDE setting files, binaries, etc. Check out the `Excluded` section from your `prquantifier.yaml` context profile. \r\n  - Understand your typical change complexity, drive towards the desired complexity by adjusting the label mapping in your `prquantifier.yaml` context profile.\r\n  - Only use the labels that matter to you, [see context specification](./docs/prquantifier-yaml.md) to customize your `prquantifier.yaml` context profile.\r\n- Change your engineering behaviors\r\n  - For PRs that fall outside of the desired spectrum, review the details and check if:\r\n    - Your PR could be split in smaller, self-contained PRs instead\r\n    - Your PR only solves one particular issue. (For example, don't refactor and code new features in the same PR).\r\n\r\n#### How to interpret the change counts in git diff output\r\n\r\n- One line was added: `+1 -0`\r\n- One line was deleted: `+0 -1`\r\n- One line was modified: `+1 -1` (git diff doesn't know about modified, it will\r\ninterpret that line like one addition plus one deletion)\r\n- Change percentiles: Change characteristics (addition, deletion, modification)\r\nof this PR in relation to all other PRs within the repository.\r\n\r\n</details>\r\n\r\n<p />\r\n\r\n------\r\n\r\nWas this comment helpful? <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoiQ2FybG9Ub3NvIiwiUmVwb3NpdG9yeUxpbmsiOiJodHRwczovL2dpdGh1Yi5jb20vUG93ZXJTaGVsbC9Qb3dlclNoZWxsIiwiUHVsbFJlcXVlc3RMaW5rIjoiaHR0cHM6Ly9naXRodWIuY29tL1Bvd2VyU2hlbGwvUG93ZXJTaGVsbC9wdWxsLzE4NTM2IiwiRXZlbnRUeXBlIjoiVGh1bWJzVXAifQ==&amp;anonymous=True\" target=\"_blank\" title=\"Thumbs up\"><strong>:thumbsup:</strong></a> <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoiQ2FybG9Ub3NvIiwiUmVwb3NpdG9yeUxpbmsiOiJodHRwczovL2dpdGh1Yi5jb20vUG93ZXJTaGVsbC9Qb3dlclNoZWxsIiwiUHVsbFJlcXVlc3RMaW5rIjoiaHR0cHM6Ly9naXRodWIuY29tL1Bvd2VyU2hlbGwvUG93ZXJTaGVsbC9wdWxsLzE4NTM2IiwiRXZlbnRUeXBlIjoiTmV1dHJhbCJ9&amp;anonymous=True\" target=\"_blank\" title=\"Neutral\"><strong>&nbsp;:ok_hand:</strong></a> <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoiQ2FybG9Ub3NvIiwiUmVwb3NpdG9yeUxpbmsiOiJodHRwczovL2dpdGh1Yi5jb20vUG93ZXJTaGVsbC9Qb3dlclNoZWxsIiwiUHVsbFJlcXVlc3RMaW5rIjoiaHR0cHM6Ly9naXRodWIuY29tL1Bvd2VyU2hlbGwvUG93ZXJTaGVsbC9wdWxsLzE4NTM2IiwiRXZlbnRUeXBlIjoiVGh1bWJzRG93biJ9&amp;anonymous=True\" target=\"_blank\" title=\"Thumbs down\"><strong>&nbsp;:thumbsdown:</strong></a> (<a href=\"MAILTO:prquantifier@microsoft.com\" title=\"Mail to prquantifier@microsoft.com\">Email</a>)\r\n[Customize PullRequestQuantifier](https://github.com/PowerShell/PowerShell/blob/master/.github/prquantifier.yaml) for this repository.\r\n\r\n",
      "created_at": "2022-11-11T21:29:25Z",
      "updated_at": "2022-11-11T21:29:25Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@CarloToso While I agree that 308 is redirect code and should be handled in some way I have a concern that the PR changes not one scenario but same ones.\r\n\r\nSupporting the HTTP client is a difficult task. We usually compare the behavior with wget. If you can create tests that work the same way for both clients, that would be convincing for reviewers.",
      "created_at": "2022-11-12T06:14:38Z",
      "updated_at": "2022-11-12T06:14:38Z"
    },
    {
      "author": "CarloToso",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov I wrote this small test to compare curl, wget and invoke-webrequest\r\n\r\n```ps1\r\nfor ($maxredirs = 0; $maxredirs -le 2; $maxredirs++)\r\n{\r\n\tWrite-Host \"MaximumRedirection == $maxredirs\" -BackgroundColor Red\r\n\tWrite-Host \"-------------------Invoke-WebRequest-------------------\"\r\n\t300,301,302,303,307,308 | ForEach-Object {Invoke-WebRequest \"http://mockbin.org/redirect/$($_)?to=https://mockbin.org/redirect/302?to=https://mockbin.org/status/200\" -Method HEAD -MaximumRedirection $maxredirs -SkipHttpErrorCheck}\r\n\tWrite-Host \"-------------------curl-------------------\"\r\n\t300,301,302,303,307,308 | ForEach-Object {$x = curl.exe -LI --no-progress-meter \"http://mockbin.org/redirect/$($_)?to=https://mockbin.org/redirect/302?to=https://mockbin.org/status/200\" --max-redirs $maxredirs; ($x -join\"`n\").split(\"`n`n\")[-1]}\r\n\tWrite-Host \"-------------------wget-------------------\"\r\n\t300,301,302,303,307,308 | ForEach-Object {$x = .\\wget.exe http://mockbin.org/redirect/$($_)?to=https://mockbin.org/redirect/302?to=https://mockbin.org/status/200 --max-redirect $maxredirs --spider --server-response 2>&1; ($x[0..($x.length-2)] -join\"`n\").split(\"Spider mode enabled. Check if remote file exists.\")[-1]}\r\n}\r\n```\r\nflags explained\r\n```\r\ncurl -> -I == HEAD, -L == follow redirect\r\nwget -> --spider == HEAD\r\n```\r\n\r\nIt looks like they have similar behaviours:\r\n\r\n`$maxredirs = 0`\r\nIwr ->error on 301 and 302 maximum redirections exceded\r\ncurl and wget -> always error maximum redirections exceded\r\n\r\n`$maxredirs = 1`\r\nIwr ->no error\r\ncurl and wget -> always error maximum redirections exceded\r\n\r\nI wasn't able to parse the maximum redirections exceded error correctly in wget, to visualize it use:\r\n ```\r\n.\\wget.exe http://mockbin.org/redirect/303?to=https://mockbin.org/redirect/302?to=https://mockbin.org/status/200 --max-redirect 0 --spider --server-response\r\n```\r\n\r\n~~I propose we remove the non terminating error (lines 1600-1614) from the webcmdlets, because it only appears for 2 status codes, and only for `-MaximumRedirection 0`~~\r\n\r\nMaybe it might be useful in some edge cases, if that is the case adding the other redirect codes would be the right thing to do\r\n",
      "created_at": "2022-11-12T15:39:44Z",
      "updated_at": "2022-11-12T15:58:35Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> @iSazonov I wrote this small test to compare curl, wget and invoke-webrequest\r\n\r\nThanks for your investigations! Can you share outputs (or screenshots)? For 308 particularly.\r\n",
      "created_at": "2022-11-12T17:26:59Z",
      "updated_at": "2022-11-12T17:26:59Z"
    },
    {
      "author": "CarloToso",
      "author_association": "CONTRIBUTOR",
      "body": "Invoke-WebRequest (`$maxredirs -> 0, 1, max`)\r\n![iwr0](https://user-images.githubusercontent.com/105941898/201487776-82391df9-4ffd-4ba3-8e9c-3416da755a47.png)\r\n![iwr1](https://user-images.githubusercontent.com/105941898/201487779-0de0e4bf-8616-4bbd-8e57-eb0a863dfbeb.png)\r\n![iwr2](https://user-images.githubusercontent.com/105941898/201487780-aefc2643-7014-4ca3-ab03-22e83b6de865.png)\r\n\r\nCurl (`$maxredirs -> 0, 1, max`)\r\n![curl0](https://user-images.githubusercontent.com/105941898/201487799-03e39f1d-0c24-4581-bdda-0c113be448b6.png)\r\n![curl1](https://user-images.githubusercontent.com/105941898/201487802-81f6c5e6-49ba-4e79-a689-0c6ee032ae25.png)\r\n![curl2](https://user-images.githubusercontent.com/105941898/201487808-65ebdb54-a48e-4dc9-81d0-5365741aaec9.png)\r\n\r\nWget (`$maxredirs -> 0, 1, max`)\r\n![wget0](https://user-images.githubusercontent.com/105941898/201487844-c1bf0080-dc47-46b1-8660-845579043fb0.png)\r\n(different code to display the redirections exceeded error)\r\n![wget1](https://user-images.githubusercontent.com/105941898/201487845-e76333d2-eaf7-4131-bc02-4a883de8ce5d.png)\r\n![wget2](https://user-images.githubusercontent.com/105941898/201487846-44fb77b7-3621-4801-9de4-18891144709d.png)\r\n\r\n\r\n\r\n",
      "created_at": "2022-11-12T17:54:43Z",
      "updated_at": "2022-11-12T17:55:59Z"
    }
  ],
  "created_at": "2022-11-11T12:11:17Z",
  "number": 18536,
  "state": "open",
  "title": "Webcmdlets small fix and cleanup redirects",
  "updated_at": "2022-11-12T17:55:59Z"
}