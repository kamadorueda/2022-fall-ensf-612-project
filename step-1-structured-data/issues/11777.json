{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11777",
  "author": "xtqqczze",
  "body": "# PR Summary\r\n\r\n* Add readonly modifier to internal static members.\r\n\r\n## PR Context\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2020-05-31T05:10:22Z",
  "comments": [
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "Why readonly instead of const?",
      "created_at": "2020-05-10T10:51:30Z",
      "updated_at": "2020-05-10T10:51:30Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "@powercode I considered a change to `const` would have uncertain benefit, and might be a risk, because all variables which consume const would then be hardcoded. \r\n\r\nIn theory since the fields are `internal` there should no danger in using `const`, but I was not confident there could be no issues.\r\n\r\nhttps://blogs.msdn.microsoft.com/armenk/2013/03/01/how-dangerous-can-be-public-const-while-upgrading-or-fixing-a-component/\n\n<blockquote><img src=\"https://msdnshared.blob.core.windows.net/media/MSDNBlogsFS/prod.evol.blogs.msdn.com/CommunityServer.Blogs.Components.WeblogFiles/00/00/01/56/46/4186.01-03-2013%2014-46-08.png\" width=\"48\" align=\"right\"><div>Armen Kirakosyan's blog</div><div><strong><a href=\"https://blogs.msdn.microsoft.com/armenk/2013/03/01/how-dangerous-can-be-public-const-while-upgrading-or-fixing-a-component/\">How dangerous can be \u201cpublic const\u201d while upgrading or fixing a component.</a></strong></div><div>During my investigation I have noticed a source of potential problem for product upgrade where dev team should fix a bug or upgrade a component and distribute it. So what will happen when during fix/upgrade process (I will call it upgrade) a value which was declared as public const was changed. For clear understanding we...</div></blockquote>",
      "created_at": "2020-05-11T00:29:47Z",
      "updated_at": "2020-05-11T00:29:50Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMainainer, Please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2020-05-27T02:01:50Z",
      "updated_at": "2020-05-27T02:01:50Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "rebased to resolve merge conflicts",
      "created_at": "2020-05-27T12:51:04Z",
      "updated_at": "2020-05-27T12:51:04Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov I have made amendments, can you review?\r\n",
      "created_at": "2020-05-27T15:15:12Z",
      "updated_at": "2020-05-27T15:15:12Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov force pushed to remove name changes, but now we have StyleCop rule violations, [SA1304NonPrivateReadonlyFieldsMustBeginWithUpperCaseLetter](https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1304.md)",
      "created_at": "2020-05-27T18:32:11Z",
      "updated_at": "2020-05-27T18:32:11Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "rebased to resolve merge conflicts",
      "created_at": "2020-05-29T15:39:09Z",
      "updated_at": "2020-05-29T15:39:09Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> force pushed to remove name changes, but now we have StyleCop rule violations, SA1304NonPrivateReadonlyFieldsMustBeginWithUpperCaseLetter\r\n\r\nOur code convention is :\r\n> Use _camelCase to name internal and private fields and use readonly where possible.\r\n\r\nSo we have a conflict with StyleCop rule. But we can not use the rule without changing our code convention.\r\n/cc @daxian-dbw for conclusion.",
      "created_at": "2020-05-29T16:41:00Z",
      "updated_at": "2020-05-29T16:41:00Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "> So we have a conflict with StyleCop rule. But we can not use the rule without changing our code convention.\r\n> /cc @daxian-dbw for conclusion.\r\n\r\n@iSazonov I have opened #12819 so we can make a general decision on the code convention.",
      "created_at": "2020-05-29T21:48:09Z",
      "updated_at": "2020-05-29T21:48:09Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov I am not sure why CodeFactor finds `NonPrivateReadonlyFieldsMustBeginWithUpperCaseLetter` issues as the rule is not enabled in `setting.stylecop` or the [default rule-set](https://github.com/codefactor-io/default-configs/blob/master/Settings.StyleCop).",
      "created_at": "2020-05-29T22:17:12Z",
      "updated_at": "2020-05-29T22:17:12Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@xtqqczze Perhaps it is CodeFactor effiect.",
      "created_at": "2020-05-31T05:03:54Z",
      "updated_at": "2020-05-31T05:03:54Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "<!--[AutoMerge]-->\nHello @iSazonov!\n\nBecause this pull request has the `AutoMerge` label, I will be glad to assist with helping to merge this pull request once all check-in policies pass.\n\n##### p.s. you can customize the way I help with merging this pull request, such as holding this pull request until a specific person approves. Simply @mention me (`@msftbot`) and give me an instruction to get started! Learn more [here](https://github.com/microsoft/fluentui/wiki/Advanced-auto-merge).",
      "created_at": "2020-05-31T05:10:08Z",
      "updated_at": "2020-05-31T05:10:08Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "> \r\n> \r\n> @xtqqczze Perhaps it is CodeFactor effiect.\r\n\r\n@iSazonov The rule is not present in the CodeFactor [default rule-set](https://github.com/codefactor-io/default-configs/blob/master/Settings.StyleCop).",
      "created_at": "2020-05-31T15:08:24Z",
      "updated_at": "2020-05-31T15:08:24Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov I have PR #12855 to disable `NonPrivateReadonlyFieldsMustBeginWithUpperCaseLetter ` in `Settings.StyleCop`.",
      "created_at": "2020-05-31T15:18:39Z",
      "updated_at": "2020-05-31T15:18:39Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.1.0-preview.4` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.1.0-preview.4)\n",
      "created_at": "2020-06-25T19:05:56Z",
      "updated_at": "2020-06-25T19:05:56Z"
    }
  ],
  "created_at": "2020-02-05T11:08:02Z",
  "number": 11777,
  "state": "closed",
  "title": "Add readonly modifier to internal static members",
  "updated_at": "2020-06-25T19:05:56Z"
}