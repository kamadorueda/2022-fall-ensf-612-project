{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9863",
  "author": "SeeminglyScience",
  "body": "As per https://github.com/dotnet/runtime/issues/29823, it is no longer reliable to directly check for `TypeConverterAttribute` as some types are now handled intrinsically within `TypeConverter`.\r\n\r\nThe following code needs to utilize `TypeDescriptor.GetConverter` instead:\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/65a3e467cc95059d16f58174335e6dd3a58c459b/src/System.Management.Automation/engine/LanguagePrimitives.cs#L1490-L1499\r\n\r\nRelated issues: #9815",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@SeeminglyScience Thanks for great investigations! Do you ready to pull PR?\r\n\r\nI found TypeConverterAttribute still in some places.",
      "created_at": "2019-06-11T10:28:47Z",
      "updated_at": "2019-06-11T10:28:47Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "> Do you ready to pull PR?\r\n\r\nNah you can mark this one up for grabs I think.  It should be a simple change but it will need some tests that I don't have the bandwidth for atm.",
      "created_at": "2019-06-11T10:53:49Z",
      "updated_at": "2019-06-11T10:53:49Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> It should be a simple change\r\n\r\nIt can be not trivial. The TypeConverterAttribute  is used in PSMemberViewTypes.\r\n\r\n@SteveL-MSFT It seems it is critical for 7.0.",
      "created_at": "2019-06-11T11:06:20Z",
      "updated_at": "2019-06-11T11:06:20Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov we'd need to test to be sure, but from the referenced .NET Core issue it seems .NET Core team are saying that we should not need to be checking directly for `TypeConverterAttribute`, and that the `TypeDescriptor.GetConverter` method(s) will check that as well as the various other methods of registering type converters.",
      "created_at": "2019-10-22T14:08:35Z",
      "updated_at": "2019-10-22T14:08:35Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "TypeConverterAttribute is not deprecated and we should keep current code. Also the attribute can be used in any custom code.\r\n\r\nI tried direct fix and it doesn't work. Need more investigations.",
      "created_at": "2019-10-22T14:46:19Z",
      "updated_at": "2019-10-22T14:47:14Z"
    },
    {
      "author": "jvierrajrv",
      "author_association": "NONE",
      "body": "To put it simple - the capability is required for PS 7 compatibility with WMF 5.1 and earlier code.  How it is implemented is unimportant but the TypeConverter is what seems to be used in Net 4.x and earlier.\r\n\r\nPowerShell has supported this since at least PS2.   There are products that are dependent on this capability through PowerShell syntax support for:\r\n\r\n**[System.Drawing.Point]'10,20'**\r\n",
      "created_at": "2019-10-22T14:50:50Z",
      "updated_at": "2019-10-22T14:51:38Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Now fix works. Will pull tomorrow with a test.",
      "created_at": "2019-10-22T15:33:14Z",
      "updated_at": "2019-10-22T15:33:14Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov given the changes that .NET made in .NET 5, has this been fixed in 7.1? If so, can you please close it as fixed?",
      "created_at": "2020-07-30T23:15:31Z",
      "updated_at": "2020-07-30T23:15:31Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@joeyaiello .Net team changed the implementation some times for last 1-2 years because they want to reduce cross assembly dependencies. I think we need re-check that all converters we want to have work in current version (I think they is near RC and .Net 5 has stable package design).",
      "created_at": "2020-08-01T17:44:25Z",
      "updated_at": "2020-08-01T17:44:25Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov , this seems to have been fixed by https://github.com/PowerShell/PowerShell/pull/12580?  ",
      "created_at": "2020-12-07T19:58:31Z",
      "updated_at": "2020-12-07T19:58:31Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": ".NET team recommended the method provided on TypeDescriptor for finding type converters... it doesn't look like that PR makes use of that?",
      "created_at": "2020-12-07T20:19:31Z",
      "updated_at": "2020-12-07T20:19:31Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I guess .Net now stable in the area - **our tests from #12580 works**. My main concern was that they (.Net team) can change something before .Net 5.0 release. \r\nBut they do not still close/fix all related issues so it is not clear can we benefit more from .Net and improve PowerShell engine itself.\r\n\r\nSince our tests are passed we could close the bug labeled issue as fixed and continue monitor silently.",
      "created_at": "2020-12-08T09:50:32Z",
      "updated_at": "2020-12-08T09:54:07Z"
    }
  ],
  "created_at": "2019-06-10T20:45:00Z",
  "number": 9863,
  "state": "open",
  "title": "Checking for TypeConverter's should use TypeDescriptor.GetConverter",
  "updated_at": "2020-12-08T09:54:07Z"
}