{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4871",
  "author": "SteveL-MSFT",
  "body": "Transcription was relying on reading the screen buffer to record output from native commands.\r\nThis resulted in an unhandled exception calling an unimplemented api on non-Windows.\r\nFix is to default to using redirected output if reading the screen buffer is not supported.\r\n\r\nFix https://github.com/PowerShell/PowerShell/issues/1920\r\n\r\n<!--\r\n\r\nIf you are a PowerShell Team member, please make sure you choose the Reviewer(s) and Assignee for your PR.\r\nIf you are not from the PowerShell Team, you can leave the fields blank and the Maintainers will choose them for you. If you are familiar with the team, feel free to mention some Reviewers yourself.\r\n\r\nFor more information about the roles of Reviewer and Assignee, refer to [CONTRIBUTING.md](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md).\r\n\r\n-->",
  "closed_at": "2017-09-29T00:15:38Z",
  "comments": [
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "> Fix is to default to using redirected output if reading the screen buffer is not supported.\r\n\r\n@SteveL-MSFT Could you please explain a little why redirecting the output/error would support transcribing in case that screen scraping is not supported? (just curious how it's done in that case)",
      "created_at": "2017-09-20T22:06:41Z",
      "updated_at": "2017-09-20T22:06:41Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@daxian-dbw from what I can tell in the code, anything that gets redirected gets transcribed anyways",
      "created_at": "2017-09-21T00:13:21Z",
      "updated_at": "2017-09-21T00:13:21Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@anmenaga Can you please take a look again?",
      "created_at": "2017-09-25T23:25:45Z",
      "updated_at": "2017-09-25T23:25:45Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@markekraus the test failures are indicating the WebListener didn't start within the timeout.  Is this something you're familiar with?",
      "created_at": "2017-09-26T19:45:57Z",
      "updated_at": "2017-09-26T19:45:57Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT News to me. I will take a look.",
      "created_at": "2017-09-26T19:54:07Z",
      "updated_at": "2017-09-26T19:54:07Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT This appears to be related to the change in this PR. It looks native execution inside a job is broken. WebListener runs `dotnet WebListener.dll` in a `Start-Job` block. From your PR I can manually run the WebListener outside of a job in PowerShell. But inside a job it fails. But it's not limited to WebListener:\r\n\r\n```poweshell\r\n$Job = Start-Job {cmd.exe /c echo \"test\" }\r\n$Job | Wait-Job | fl * -force\r\n\r\n$Job.ChildJobs[0].Output\r\n```\r\n\r\nexpected behavior (working in beta.7):\r\n```none\r\nState         : Completed\r\nHasMoreData   : True\r\nStatusMessage :\r\nLocation      : localhost\r\nCommand       : cmd.exe /c echo \"test\"\r\nJobStateInfo  : Completed\r\nFinished      : System.Threading.ManualResetEvent\r\nInstanceId    : 7d654dd9-ba42-48f0-be72-9e91863e7286\r\nId            : 1\r\nName          : Job1\r\nChildJobs     : {Job2}\r\nPSBeginTime   : 9/26/2017 3:41:02 PM\r\nPSEndTime     : 9/26/2017 3:41:02 PM\r\nPSJobTypeName : BackgroundJob\r\nOutput        : {}\r\nError         : {}\r\nProgress      : {}\r\nVerbose       : {}\r\nDebug         : {}\r\nWarning       : {}\r\nInformation   : {}\r\n\r\ntest\r\n```\r\n\r\nActual behavior:\r\n```none\r\nState         : Failed\r\nHasMoreData   : False\r\nStatusMessage :\r\nLocation      : localhost\r\nCommand       : cmd.exe /c echo \"test\"\r\nJobStateInfo  : Failed\r\nFinished      : System.Threading.ManualResetEvent\r\nInstanceId    : 58c30632-c4a1-41e3-b276-5aa9b24db3b0\r\nId            : 3\r\nName          : Job3\r\nChildJobs     : {Job4}\r\nPSBeginTime   : 9/26/2017 3:42:41 PM\r\nPSEndTime     : 9/26/2017 3:42:42 PM\r\nPSJobTypeName : BackgroundJob\r\nOutput        : {}\r\nError         : {}\r\nProgress      : {}\r\nVerbose       : {}\r\nDebug         : {}\r\nWarning       : {}\r\nInformation   : {}\r\n\r\n\r\n```",
      "created_at": "2017-09-26T20:46:30Z",
      "updated_at": "2017-09-26T20:56:51Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@markekraus thanks!  I'll take a look.\r\n\r\nThe problem is that when run as a job obviously there's no console, so some of the console calls even on Windows throws other exceptions (and it's not just the Host.HostException from the old code) when the code is checking if screen scraping is supported.  Added a test to test start-job with native command to cover this.\r\n\r\n@daxian-dbw @anmenaga can you take another look?",
      "created_at": "2017-09-26T20:50:16Z",
      "updated_at": "2017-09-26T23:29:58Z"
    }
  ],
  "created_at": "2017-09-20T04:26:52Z",
  "number": 4871,
  "state": "closed",
  "title": "Enable transcription of native commands on non-Windows",
  "updated_at": "2018-10-26T21:33:56Z"
}