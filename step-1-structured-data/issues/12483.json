{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12483",
  "author": "ArturGudiev",
  "body": "# Steps to reproduce\r\n\r\n```powershell\r\nmkdir Mydir\r\nRename-Item .\\Mydir\\ MyDir\r\n```\r\n\r\n# Expected behavior\r\ndirectory should be renamed\r\n\r\n# Actual behavior\r\n\r\n```none\r\nRename-Item: Source and destination path must be different.\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0\r\nOS                             Microsoft Windows 10.0.17134\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "jackdcasey",
      "author_association": "CONTRIBUTOR",
      "body": "Looked into this a bit, I reckon this is a limitation from the `DirectoryInfo.MoveTo()` method being used to rename the directories. \r\n\r\n```csharp\r\nif (ShouldProcess(resource, action))\r\n{\r\n    // Now move the file\r\n    dir.MoveTo(newPath);\r\n\r\n    result = dir;\r\n    WriteItemObject(result, result.FullName, isContainer);\r\n}\r\n```\r\nLooking over the [docs](https://docs.microsoft.com/en-us/dotnet/api/system.io.directoryinfo.moveto), this may be by design: \r\n```\r\nThe destination cannot be another disk volume or a directory with the identical name.\r\n```\r\n\r\nIn my testing, this works fine when changing a file instead of a directory: \r\n\r\n```\r\nPS > rename-item testfile.txt tEsTfIlE.tXt\r\nPS > \r\n```\r\nDoesn't look like `FileInfo.MoveTo()` has the same limitations",
      "created_at": "2020-04-25T05:55:41Z",
      "updated_at": "2020-04-25T06:01:00Z"
    },
    {
      "author": "ArturGudiev",
      "author_association": "NONE",
      "body": "@jackdcasey You mean it's ok ? It isn't a bug ?",
      "created_at": "2020-04-26T09:30:27Z",
      "updated_at": "2020-04-26T09:30:27Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "It's by design in terms of the API we're using to rename/move the directory. Note that we're using a `MoveTo()` API as there is no specific renaming API on either the [DirectoryInfo](https://docs.microsoft.com/en-us/dotnet/api/system.io.directoryinfo.moveto?view=netcore-3.1) class, nor the [Directory](https://docs.microsoft.com/en-us/dotnet/api/system.io.directory.move?view=netcore-3.1) static class.\r\n\r\nA workaround here may be to do a manual check to determine if the new path or name we're moving the item to is the same name as the original, and just differs by case. If this is the case, we can have a fallback method to move it to a temporary location before moving it back under the desired new name.",
      "created_at": "2020-04-26T14:00:34Z",
      "updated_at": "2020-04-26T14:00:34Z"
    },
    {
      "author": "ArturGudiev",
      "author_association": "NONE",
      "body": "But we have, for example, a mv command on Linux. There is also no special rename command there. And it works well with this case. ",
      "created_at": "2020-04-29T05:36:06Z",
      "updated_at": "2020-04-29T05:36:06Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Sure. But this behaviour likely arose from the .NET behaviour originally on Windows. Rather than diverge the API surface, the .NET team probably elected to keep the current behaviour as-is even on Linux, to prevent the case where the same code behaves entirely differently depending on OS.\r\n\r\nI don't know whether the underlying API could be improved on Windows as well, or if they could add a specific `Rename()` API for this kind of case; that question would be better directed at folks in the [dotnet/runtime](/dotnet/runtime) repository. \ud83d\ude42 ",
      "created_at": "2020-04-29T12:40:06Z",
      "updated_at": "2020-04-29T12:40:06Z"
    },
    {
      "author": "ArturGudiev",
      "author_association": "NONE",
      "body": "@vexx32 Ok. I got it. \r\n Thank you! \r\n",
      "created_at": "2020-04-29T14:09:20Z",
      "updated_at": "2020-04-29T14:09:20Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "I suggest reopening this issue:\r\n\r\n* The behavior is clearly a bug.\r\n\r\n* The underlying .NET bug - reported in https://github.com/dotnet/runtime/issues/30479 - has since been fixed.\r\n\r\n   * Unfortunately, it was only _partially_ fixed: only for `System.IO.Directory.Move()`, not also for `System.IO.DirectoryInfo.MoveTo()`\r\n     * See follow-up bug report at https://github.com/dotnet/runtime/issues/63287\r\n\r\n  * While PowerShel uses the still-broken `System.IO.DirectoryInfo.MoveTo()`, there is no strict need  to wait for the remaining bug to be fixed, given that `System.IO.Directory.Move()` could be used.\r\n\r\n\r\n\r\n",
      "created_at": "2022-01-03T14:03:53Z",
      "updated_at": "2022-01-03T14:03:53Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Related issue: \r\n\r\n* https://github.com/PowerShell/PowerShell/issues/14903",
      "created_at": "2022-01-03T14:06:49Z",
      "updated_at": "2022-01-03T14:06:49Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I see IO.Directory.Move() was fixed (for leaves) but not IO.DirectoryInfo.MoveTo().\r\nMain problem with .Net API is PowerShell has to work only with absolute paths (drive-rooted) (in FileSystem provider) because it uses Runspace CWD instead of OS (and .Net) CWD.",
      "created_at": "2022-01-03T18:27:01Z",
      "updated_at": "2022-01-03T18:28:48Z"
    }
  ],
  "created_at": "2020-04-24T21:06:06Z",
  "labels": [
    "Issue-Question"
  ],
  "number": 12483,
  "state": "open",
  "title": "Can't rename directory with the same name but different case ",
  "updated_at": "2022-01-03T18:28:48Z"
}