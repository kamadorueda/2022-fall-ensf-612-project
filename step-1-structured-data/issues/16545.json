{
  "_url": "https://github.com/PowerShell/PowerShell/issues/16545",
  "author": "Thomas-Yu",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\n<!-- Summarize your PR between here and the checklist. -->\r\n\r\nFix [#2692](https://github.com/PowerShell/PowerShell/issues/2692)\r\n\r\nAdd `-StrictMode` to `Invoke-Command` to allow specifying strict mode when invoking command locally.\r\nThe `-StrictMode` parameter sets the provided version to the process. Once the process completes, the `StrictMode` version is set back to what it was before the `Invoke-Command`.\r\n\r\nIt does not support asynchronous jobs on remote machines. Applying a `StrictMode` version for a remote session is not a trivial change. The `StrictMode` version would have to be communicated to the target so that it can be applied to the Runspace in the remote session.\r\n \r\nIn addition to the implementation, an `Invoke-Command` test file was created with `-StrictMode` tests.\r\n\r\n## PR Context\r\n\r\n<!-- Provide a little reasoning as to why this Pull Request helps and why you have opened it. -->\r\n\r\nThis pull request was opened in response to the \"Invoke-Command should support -StrictMode #2692\" issue. Now, Invoke-Command supports a `-StrictMode` parameter. \r\n`StrictMode` establishes and enforces coding rules in expressions, scripts, and script blocks. This can be useful for running scripts with basic best-practice coding rules. Even though this is not an implementation for async jobs, there are still many useful applications for `StrictMode` in local processes. \r\n\r\n## PR Checklist\r\n\r\n- [X] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [X] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [X] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [x] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [x] Issue filed: <!-- Number/link of that issue here --> https://github.com/MicrosoftDocs/PowerShell-Docs/issues/8459\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [X] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [X] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and opened an issue in the relevant tool repository. This may include:\r\n        - [ ] Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode\r\n        (which runs in a different PS Host).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n",
  "closed_at": "2022-01-12T19:17:03Z",
  "comments": [
    {
      "author": "microsoft-cla-retired[bot]",
      "author_association": "NONE",
      "body": "[![CLA assistant check](https://cla.opensource.microsoft.com/pull/badge/signed)](https://cla.opensource.microsoft.com/PowerShell/PowerShell?pullRequest=16545) <br/>All CLA requirements met.",
      "created_at": "2021-12-03T01:35:47Z",
      "updated_at": "2021-12-03T01:37:43Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2021-12-30T14:00:43Z",
      "updated_at": "2021-12-30T14:00:43Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "Also, I realized that since we are adding a new cmdlet parameter, `-StrictModeVersion`, this is a user facing change and documentation is needed.  @Thomas-Yu  can you please update this PR check list to include a new documentation issue for this new parameter?\r\n\r\nI had been assuming that a null value for this parameter would mean turning off strict mode in the remote session.  But another option is to provide a new parameter specifically to do this, `-StrictModeOff`.  We need to decide which way to go.  I'll refer this to the committee.",
      "created_at": "2022-01-03T23:59:38Z",
      "updated_at": "2022-01-03T23:59:38Z"
    },
    {
      "author": "Thomas-Yu",
      "author_association": "CONTRIBUTOR",
      "body": "> After thinking about this some more, I feel we should be consistent with the existing `Set-StrictMode` cmdlet and add a new `-StrictModeOff` switch parameter.\r\n> \r\n> @Thomas-Yu can you please add this? Also, since `version == '0.0'` is equivalent to `strict mode off` please go ahead and implement that for the off case. A null value is no longer valid for the strictmode version, so you can remove the `MyInvocation.BoundParameters.ContainsKey(nameof(StrictModeVersion)` checks and replace them with simple null value checks, as @daxian-dbw recommended.\r\n> \r\n> Thanks!\r\n\r\nShould i be adding the strictmodeoff parameter in this pr? It doesn't seem to have a purpose currently since the process resets the strictmode version to what it was prior to the process. -StrictModeVersion does not set the strictmodeversion permanently",
      "created_at": "2022-01-05T05:20:55Z",
      "updated_at": "2022-01-05T05:44:27Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "@Thomas-Yu  Yes, I think we need to add the new `StrictModeOff` parameter to this PR.  It covers the case where the current session is already in strict mode and Invoke-Command is used to run scriptblock with strict mode off.  Also it is consistent with the `Set-StrictMode` cmdlet.",
      "created_at": "2022-01-05T16:54:48Z",
      "updated_at": "2022-01-05T16:54:48Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "@Thomas-Yu  I discussed this with the PowerShell committee today, and the consensus is that ideally, we would just add a new `Off` value (along with the existing `Latest` value) to the StrictModeVersion parameter transformation attribute (`[ArgumentToPSVersionTransformation]`), and not add a  separate `-StrictModeOff` parameter.\r\n\r\nThis way strictmode can be turned off by simply:\r\n```powershell\r\nInvoke-Command -ScriptBlock { Write-Output $DoesNotExist } -ScriptModeVersion Off\r\n```\r\n\r\nCan you make this change?  Let me know if you have any questions.",
      "created_at": "2022-01-06T00:00:14Z",
      "updated_at": "2022-01-06T00:00:14Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Then how about change the parameter name to be `-StrictMode` instead of `-StrictModeVersion`?\r\nSo the use of it would look like: `Invoke-Command -ScriptBlock { .. } -ScriptMode latest` and `Invoke-Command -ScriptBlock { .. } -ScriptMode off`",
      "created_at": "2022-01-06T00:53:35Z",
      "updated_at": "2022-01-06T00:53:35Z"
    },
    {
      "author": "Thomas-Yu",
      "author_association": "CONTRIBUTOR",
      "body": "> @Thomas-Yu I discussed this with the PowerShell committee today, and the consensus is that ideally, we would just add a new `Off` value (along with the existing `Latest` value) to the StrictModeVersion parameter transformation attribute (`[ArgumentToPSVersionTransformation]`), and not add a separate `-StrictModeOff` parameter.\r\n> \r\n> This way strictmode can be turned off by simply:\r\n> \r\n> ```powershell\r\n> Invoke-Command -ScriptBlock { Write-Output $DoesNotExist } -ScriptModeVersion Off\r\n> ```\r\n> \r\n> Can you make this change? Let me know if you have any questions.\r\n\r\nWould allowing -StrictMode off essentially also allow -StrictMode 0.0?",
      "created_at": "2022-01-06T04:51:18Z",
      "updated_at": "2022-01-06T04:51:18Z"
    },
    {
      "author": "pull-request-quantifier[bot]",
      "author_association": "NONE",
      "body": "### ![](https://img.shields.io/static/v1?label=Quantified&message=Small&color=green)\r\n\r\nThis PR has `90` quantified lines of changes. In general, a change size of upto `200` lines is ideal for the best PR experience!\r\n\r\n------\r\n\r\n<details >\r\n    <summary display=\"inline\"> <strong>Quantification details</strong></summary>\r\n    <p />\r\n\r\n```\r\nLabel      : Small\r\nSize       : +78 -12\r\nPercentile : 36%\r\n\r\nTotal files changed: 3\r\n\r\nChange summary by file extension:\r\n.cs : +60 -12\r\n.ps1 : +18 -0\r\n```\r\n> Change counts above are quantified counts, based on the [PullRequestQuantifier customizations](https://github.com/microsoft/PullRequestQuantifier/blob/main/docs/prquantifier-yaml.md).\r\n    \r\n</details>\r\n\r\n\r\n<details>\r\n    <summary display=\"inline\"> <strong>Why proper sizing of changes matters</strong> </summary>\r\n    <p/>\r\n    <p/>\r\n\r\nOptimal pull request sizes drive a better predictable PR flow as they strike a\r\nbalance between between PR complexity and PR review overhead. PRs within the\r\noptimal size (typical small, or medium sized PRs) mean:\r\n\r\n- Fast and predictable releases to production:\r\n  - Optimal size changes are more likely to be reviewed faster with fewer\r\niterations.\r\n  - Similarity in low PR complexity drives similar review times.\r\n- Review quality is likely higher as complexity is lower:\r\n  - Bugs are more likely to be detected.\r\n  - Code inconsistencies are more likely to be detetcted.\r\n- Knowledge sharing is improved within the participants:\r\n  - Small portions can be assimilated better.\r\n- Better engineering practices are exercised:\r\n  - Solving big problems by dividing them in well contained, smaller problems.\r\n  - Exercising separation of concerns within the code changes.\r\n\r\n#### What can I do to optimize my changes\r\n\r\n- Use the PullRequestQuantifier to quantify your PR accurately\r\n  - Create a context profile for your repo using the [context generator](https://github.com/microsoft/PullRequestQuantifier/releases)\r\n  - Exclude files that are not necessary to be reviewed or do not increase the review complexity. Example: Autogenerated code, docs, project IDE setting files, binaries, etc. Check out the `Excluded` section from your `prquantifier.yaml` context profile. \r\n  - Understand your typical change complexity, drive towards the desired complexity by adjusting the label mapping in your `prquantifier.yaml` context profile.\r\n  - Only use the labels that matter to you, [see context specification](./docs/prquantifier-yaml.md) to customize your `prquantifier.yaml` context profile.\r\n- Change your engineering behaviors\r\n  - For PRs that fall outside of the desired spectrum, review the details and check if:\r\n    - Your PR could be split in smaller, self-contained PRs instead\r\n    - Your PR only solves one particular issue. (For example, don't refactor and code new features in the same PR).\r\n\r\n#### How to interpret the change counts in git diff output\r\n\r\n- One line was added: `+1 -0`\r\n- One line was deleted: `+0 -1`\r\n- One line was modified: `+1 -1` (git diff doesn't know about modified, it will\r\ninterpret that line like one addition plus one deletion)\r\n- Change percentiles: Change characteristics (addition, deletion, modification)\r\nof this PR in relation to all other PRs within the repository.\r\n\r\n</details>\r\n\r\n<p />\r\n\r\n------\r\n\r\nWas this comment helpful? <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoiVGhvbWFzLVl1IiwiUmVwb3NpdG9yeUxpbmsiOiJodHRwczovL2dpdGh1Yi5jb20vUG93ZXJTaGVsbC9Qb3dlclNoZWxsIiwiUHVsbFJlcXVlc3RMaW5rIjoiaHR0cHM6Ly9naXRodWIuY29tL1Bvd2VyU2hlbGwvUG93ZXJTaGVsbC9wdWxsLzE2NTQ1IiwiRXZlbnRUeXBlIjoiVGh1bWJzVXAifQ==&amp;anonymous=True\" target=\"_blank\" title=\"Thumbs up\"><strong>:thumbsup:</strong></a> <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoiVGhvbWFzLVl1IiwiUmVwb3NpdG9yeUxpbmsiOiJodHRwczovL2dpdGh1Yi5jb20vUG93ZXJTaGVsbC9Qb3dlclNoZWxsIiwiUHVsbFJlcXVlc3RMaW5rIjoiaHR0cHM6Ly9naXRodWIuY29tL1Bvd2VyU2hlbGwvUG93ZXJTaGVsbC9wdWxsLzE2NTQ1IiwiRXZlbnRUeXBlIjoiTmV1dHJhbCJ9&amp;anonymous=True\" target=\"_blank\" title=\"Neutral\"><strong>&nbsp;:ok_hand:</strong></a> <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoiVGhvbWFzLVl1IiwiUmVwb3NpdG9yeUxpbmsiOiJodHRwczovL2dpdGh1Yi5jb20vUG93ZXJTaGVsbC9Qb3dlclNoZWxsIiwiUHVsbFJlcXVlc3RMaW5rIjoiaHR0cHM6Ly9naXRodWIuY29tL1Bvd2VyU2hlbGwvUG93ZXJTaGVsbC9wdWxsLzE2NTQ1IiwiRXZlbnRUeXBlIjoiVGh1bWJzRG93biJ9&amp;anonymous=True\" target=\"_blank\" title=\"Thumbs down\"><strong>&nbsp;:thumbsdown:</strong></a> (<a href=\"MAILTO:prquantifier@microsoft.com\" title=\"Mail to prquantifier@microsoft.com\">Email</a>)\r\n[Customize PullRequestQuantifier](https://github.com/PowerShell/PowerShell/blob/master/.github/prquantifier.yaml) for this repository.\r\n\r\n",
      "created_at": "2022-01-12T03:00:31Z",
      "updated_at": "2022-01-12T03:00:31Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@PaulHigin, the issue https://github.com/PowerShell/PowerShell/issues/16736 has been opened by @Thomas-Yu per your ask. I will merge this PR once you approve it.",
      "created_at": "2022-01-12T18:28:11Z",
      "updated_at": "2022-01-12T18:28:11Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.3.0-preview.2` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.3.0-preview.2)\n",
      "created_at": "2022-02-24T23:33:31Z",
      "updated_at": "2022-02-24T23:33:31Z"
    }
  ],
  "created_at": "2021-12-03T01:35:35Z",
  "number": 16545,
  "state": "closed",
  "title": "Add `-StrictMode` to `Invoke-Command` to allow specifying strict mode when invoking command locally",
  "updated_at": "2022-02-24T23:33:31Z"
}