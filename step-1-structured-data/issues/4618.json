{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4618",
  "author": "vors",
  "body": "Trying to see can we fix #1371 earlier\r\nAccording to https://github.com/pester/Pester/issues/639#issuecomment-323405001 pester 4.0.6 has some limitations on linux and mac, but so does the https://github.com/PowerShell/psl-pester\r\n\r\nI did few local tests on mac and didn't encounter any problems so far, let see how CI will like this.",
  "closed_at": "2018-02-08T19:30:27Z",
  "comments": [
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "Travis failures are due to\r\n\r\n```\r\nThe log length has exceeded the limit of 4 MB (this usually means that the test suite is raising the same exception over and over).\r\nThe job has been terminated\r\n```\r\n\r\nDid pester 4 output to become more verbose?",
      "created_at": "2017-08-19T18:44:15Z",
      "updated_at": "2017-08-19T18:44:15Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I see dll not found error:\r\n```\r\n981Microsoft.PowerShell.Core\\Import-Module : The specified module '/home/travis/bu\r\n\r\n982ild/PowerShell/PowerShell/src/powershell-unix/bin/Linux/netcoreapp2.0/ubuntu.14\r\n\r\n983.04-x64/publish/Modules/Pester/4.0.6\\lib\\Gherkin.dll' was not loaded because \r\n\r\n984no valid module file was found in any module directory.\r\n\r\n985At /home/travis/build/PowerShell/PowerShell/src/powershell-unix/bin/Linux/netco\r\n\r\n986reapp2.0/ubuntu.14.04-x64/publish/Modules/Pester/4.0.6/Functions/Gherkin.ps1:2 \r\n\r\n987char:1\r\n\r\n```",
      "created_at": "2017-08-19T19:26:05Z",
      "updated_at": "2017-08-19T19:26:05Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Also \r\n```\r\n7786No output has been received in the last 10m0s, this potentially indicates a stalled build or something wrong with the build itself.\r\n```",
      "created_at": "2017-08-19T19:29:02Z",
      "updated_at": "2017-08-19T19:29:02Z"
    },
    {
      "author": "it-praktyk",
      "author_association": "CONTRIBUTOR",
      "body": "I work to achieve Pester compatibility with Linux, macOS and PSCore on Windows. The current status you can follow https://github.com/pester/Pester/issues/639.\r\n\r\nThe error with not loading is resolved in my development branch now.",
      "created_at": "2017-08-22T20:19:14Z",
      "updated_at": "2017-08-22T20:19:14Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "Thank you @it-praktyk !\r\nI just rebased the PR and I believe now it should be good to go with current Pester at 4.1.1",
      "created_at": "2017-12-12T07:51:32Z",
      "updated_at": "2017-12-12T07:51:32Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@vors, Pester 4.x introduced some breaking changes and our tests need to be updated before we can start relying on 4.x",
      "created_at": "2017-12-12T21:15:56Z",
      "updated_at": "2017-12-12T21:15:56Z"
    },
    {
      "author": "it-praktyk",
      "author_association": "CONTRIBUTOR",
      "body": "The migration process is described at Pester wiki [Migrating from Pester 3 to Pester 4](https://github.com/pester/Pester/wiki/Migrating-from-Pester-3-to-Pester-4).",
      "created_at": "2017-12-12T23:21:09Z",
      "updated_at": "2017-12-12T23:21:09Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@it-praktyk thanks, but we're aware of the work involved, just a matter of prioritization and doing it :)   Currently planned to be addressed after 6.0.0 release.",
      "created_at": "2017-12-13T00:16:49Z",
      "updated_at": "2017-12-13T00:16:49Z"
    },
    {
      "author": "it-praktyk",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT,  I just updated some of them - I'll open  PR to @vors's branch.",
      "created_at": "2017-12-13T00:19:04Z",
      "updated_at": "2017-12-13T00:19:04Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Can we close this because #5623 was merged?",
      "created_at": "2018-01-06T17:34:51Z",
      "updated_at": "2018-01-06T17:34:51Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov isn't this PR about using the PS gallery Pester vs psl-pester? We removed the sub module, but i believe this project still relies on psl-pester.",
      "created_at": "2018-01-06T18:47:34Z",
      "updated_at": "2018-01-06T18:47:34Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "#3002 I don't understand who really works on this @vors or @JamesWTruher ?",
      "created_at": "2018-01-06T19:06:12Z",
      "updated_at": "2018-01-06T19:06:12Z"
    },
    {
      "author": "it-praktyk",
      "author_association": "CONTRIBUTOR",
      "body": "@markekraus,\r\n> PS gallery Pester vs psl-pester\r\n\r\npsl-pester means Pester what is it currently bundled with PowerShell code?\r\n\r\nI think, because of [Pester since v. 4.1.0 is supported on PSCore 6.0](https://github.com/pester/Pester/releases/tag/4.1.0), bundling of other/older version with PowerShell is not necessary.",
      "created_at": "2018-01-06T19:59:33Z",
      "updated_at": "2018-01-06T19:59:33Z"
    },
    {
      "author": "it-praktyk",
      "author_association": "CONTRIBUTOR",
      "body": "OK, I answer myself - without editing my previous comment.\r\n\r\nI think that using official Pester is the better idea than using a fork of old code. Of course, some work needs to be done to update and verify tests.\r\n\r\nI prepared the pull request that resolves braking changes between Pester 3.x and 4.x https://github.com/vors/PowerShell/pull/1/commits/039194ddf0a83086ff4c2fdcc9778373a0b00330 .",
      "created_at": "2018-01-06T20:14:06Z",
      "updated_at": "2018-01-06T20:14:06Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "@it-praktyk awesome, thank you! I cherry-picked your changes to the branch head instead of merging it thru github, because it required one more rebase on master for `build.psm1` and I tried to make a clean history.\r\n\r\n> Can we close this because #5623 was merged?\r\n\r\nAs @markekraus said: this one is different and should remove dependency on the old and devirgent fork of pester (aka psl-pester).\r\n\r\n> #3002 I don't understand who really works on this @vors or @JamesWTruher ?\r\n\r\nNot sure, I would not say I working actively to move this forward. My hope was that it would be a simple change with a drop-in replacement. Hopefully @it-praktyk just fixed all the migration problems, we will see when CI finishes the build.\r\n\r\n",
      "created_at": "2018-01-08T07:49:34Z",
      "updated_at": "2018-01-08T07:49:34Z"
    },
    {
      "author": "it-praktyk",
      "author_association": "CONTRIBUTOR",
      "body": ">  Hopefully @it-praktyk just fixed all the migration problems, we will see when CI finishes the build.\r\nI've fixed tests for some - most obvious - breaking changes.\r\n\r\nNow, I'm in progress of local tests and after that, I'll publish some conclusion.\r\n\r\nThe first \"draft\" of them for a build of the current state of PowerShell made and tested on Ubuntu 16.04 in headless mode.\r\n\r\npsl-pester\r\nTests completed in 1538.69s\r\nPassed: 6038 Failed: 14 Skipped: 1211 Pending: 341\r\n\r\nPester 4.2.0-alpha3\r\nTests completed in 2487.44s\r\nFailed: 38, Pending: 341, Tests Passed: 6007, Skipped: 1211, Inconclusive: 0",
      "created_at": "2018-01-08T07:56:52Z",
      "updated_at": "2018-01-08T07:56:52Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "Failures are https://travis-ci.org/PowerShell/PowerShell/jobs/326257638#L3384\r\n\r\n```\r\n  Describing Import-Module should be case insensitive\r\n    [-] Import-Module can import a module using different casing using 'TESTMODULE/1.1' and manifest:True 112ms\r\n      Expected: {TESTMODULE}\r\n      But was:  {TestModule TESTMODULE}\r\n      195:         $m.Name | Should Be \"TESTMODULE\"\r\n      at Invoke-LegacyAssertion, /home/travis/build/PowerShell/PowerShell/src/powershell-unix/bin/Linux/netcoreapp2.0/linux-x64/publish/Modules/Pester/4.1.1/Functions/Assertions/Should.ps1: line 190\r\n      at <ScriptBlock>, /home/travis/build/PowerShell/PowerShell/test/powershell/Modules/Microsoft.PowerShell.Core/Import-Module.Tests.ps1: line 195\r\n    [-] Import-Module can import a module using different casing using 'TESTMODULE' and manifest:True 89ms\r\n      Expected: {TESTMODULE}\r\n      But was:  {TestModule TESTMODULE TESTMODULE}\r\n      195:         $m.Name | Should Be \"TESTMODULE\"\r\n      at Invoke-LegacyAssertion, /home/travis/build/PowerShell/PowerShell/src/powershell-unix/bin/Linux/netcoreapp2.0/linux-x64/publish/Modules/Pester/4.1.1/Functions/Assertions/Should.ps1: line 190\r\n      at <ScriptBlock>, /home/travis/build/PowerShell/PowerShell/test/powershell/Modules/Microsoft.PowerShell.Core/Import-Module.Tests.ps1: line 195\r\n    [-] Import-Module can import a module using different casing using 'TESTMODULE' and manifest:False 43ms\r\n      Expected: {TESTMODULE}\r\n      But was:  {TestModule TESTMODULE TESTMODULE}\r\n      195:         $m.Name | Should Be \"TESTMODULE\"\r\n      at Invoke-LegacyAssertion, /home/travis/build/PowerShell/PowerShell/src/powershell-unix/bin/Linux/netcoreapp2.0/linux-x64/publish/Modules/Pester/4.1.1/Functions/Assertions/Should.ps1: line 190\r\n      at <ScriptBlock>, /home/travis/build/PowerShell/PowerShell/test/powershell/Modules/Microsoft.PowerShell.Core/Import-Module.Tests.ps1: line 195\r\nExecuting script /home/travis/build/PowerShell/PowerShell/test/powershell/Modules/Microsoft.PowerShell.Core/Job.Tests.ps1\r\n  Describing Job Cmdlet Tests\r\n    Context Simple Jobs\r\n```",
      "created_at": "2018-01-08T08:13:20Z",
      "updated_at": "2018-01-08T08:13:20Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "Also on AppVeyor the produced log is sparse, looks like we loose information along the way:\r\n\r\n```\r\nExecuting script C:\\projects\\powershell\\test\\powershell\\engine\\Api\\TypeInference.Tests.ps1\r\n  Describing Type inference Tests\r\n+\r\n274ms\r\n+\r\n11ms\r\n+\r\n8ms\r\n+\r\n8ms\r\n+\r\n37ms\r\n+\r\n68ms\r\n+\r\n43ms\r\n+\r\n\r\n```\r\n\r\nI didn't see it in other projects that use Pester 4, so it's probably caused by some wrappers from `build.psm1` that run tests. https://ci.appveyor.com/project/PowerShell/powershell/build/v6.1.0-preview.7466",
      "created_at": "2018-01-08T08:18:29Z",
      "updated_at": "2018-01-08T08:18:29Z"
    },
    {
      "author": "it-praktyk",
      "author_association": "CONTRIBUTOR",
      "body": "I didn't analyze it yet deeply but [changes my for psl-pester](https://github.com/PowerShell/psl-pester/pull/9) can be related to your last comment.\r\n",
      "created_at": "2018-01-08T08:22:57Z",
      "updated_at": "2018-01-08T08:22:57Z"
    },
    {
      "author": "it-praktyk",
      "author_association": "CONTRIBUTOR",
      "body": "Summary of my tests on Ubuntu Linux 16.04.\r\n\r\nOS: Ubuntu 16.04 x64 - Vagrant [bento/ubuntu-16.04](https://app.vagrantup.com/bento/boxes/ubuntu-16.04) - v201801.02.0 - provider: vmware_workstation\r\n\r\n## bash\r\n```bash\r\nsudo su\r\ncurl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -\r\ncurl https://packages.microsoft.com/config/ubuntu/16.04/prod.list | sudo tee /etc/apt/sources.list.d/microsoft.list\r\napt-get update\r\napt-get install -y powershell\r\ncd /vagrant/\r\ngit clone https://github.com/PowerShell/PowerShell.git\r\ncd PowerShell/\r\ngit submodule init\r\ngit submodule update\r\npwsh\r\n```\r\n\r\n## pwsh\r\n```powershell\r\ncd /vagrant/PowerShell\r\nipmo ./build.psm1                                                                                                                                                                                            \r\nStart-PSBootstrap\r\nStart-PSBuild\r\nRestore-PSPester\r\nStart-PSPester -PassThru | Export-Clixml /vagrant/psl-pester-20180117a.xml\r\ncd ..                                                                                                                                                                                                        \r\ngit clone https://github.com/Pester/Pester.git\r\ncd /vagrant/PowerShell/src/powershell-unix/bin/Linux/netcoreapp2.0/linux-x64/publish/Modules/\r\nmv Pester psl-pester\r\nln -s /vagrant/Pester ./Pester\r\ncd /vagrant/PowerShell/                                                                                                                                                                                 \r\ngit remote add vors https://github.com/vors/PowerShell\r\ngit fetch vors                                                                                                                                                                                               \r\ngit log vors/replace-pester\r\ngit cherry-pick c75e2f3ac14e25fc27efa0f9f37ed285e16850b2\r\nStart-PSPester -PassThru | Export-Clixml /vagrant/pester-4.0.2-alpha3-20180117a.xml\r\n(Import-Clixml /vagrant/psl-pester-20180117a.xml).TestResult | Where { $_.Result -eq 'Failed'} | Out-File psl-pester-failed-20180117a.xml                                                                    \r\n(Import-Clixml /vagrant/pester-4.0.2-alpha3-20180117a.xml).TestResult | Where { $_.Result -eq 'Failed'} | Out-File pester-4.0.2-alpha3-failed-20180117a.xml   \r\n```\r\n\r\n[Files with results of failed tests were published as a gist](https://gist.github.com/it-praktyk/ed9fa27af80d31101c9cbf73b3361034).\r\n\r\nUnder execution of tests using Pester 4.2.0-alpha3 I observed that execution of tests stopped and wait for an interactive input.\r\n\r\n```powershell\r\nExecuting script /home/vagrant/PowerShell/test/powershell/Modules/Microsoft.PowerShell.Management/FileSystem.Tests.ps1\r\n\r\n<OUTPUT_PARTIALY_OMITTED>\r\n\r\nDescribing Handling of globbing patterns\r\n\r\nContext Handling of Unix [ab] globbing patterns in literal paths\r\n\r\ncmdlet AfterEach at command pipeline position 1\r\n\r\nSupply values for the following parameters:\r\n\r\nScriptblock:\r\n\r\n<ENTER_FROM_A_KEYBOARD>\r\n\r\n            [-] Error occurred in Context block 179.58s\r\n        PSInvalidCastException: Cannot convert the \"\" value of type \"System.String\" to type \"System.Management.Automation.ScriptBlock\".\r\n        ArgumentTransformationMetadataException: Cannot convert the \"\" value of type \"System.String\" to type \"System.Management.Automation.ScriptBlock\".\r\n        ParameterBindingArgumentTransformationException: Cannot process argument transformation on parameter 'Scriptblock'. Cannot convert the \"\" value of type \"System.String\" to type \"System.Management.Automation.ScriptBlock\".\r\n        at <ScriptBlock>, /home/vagrant/PowerShell/test/powershell/Modules/Microsoft.PowerShell.Management/FileSystem.Tests.ps1: line 381\r\n        at DescribeImpl, /home/vagrant/PowerShell/src/powershell-unix/bin/Linux/netcoreapp2.0/linux-x64/publish/Modules/Pester/Functions/Describe.ps1: line 161\r\n\r\n```",
      "created_at": "2018-01-17T07:49:38Z",
      "updated_at": "2018-01-18T13:18:27Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> cmdlet AfterEach at command pipeline position 1\r\n\r\nI think the reason is that the curly brace is moved to [the next line](https://github.com/PowerShell/PowerShell/blob/master/test/powershell/Modules/Microsoft.PowerShell.Management/FileSystem.Tests.ps1#L382)\r\n",
      "created_at": "2018-01-17T08:07:09Z",
      "updated_at": "2018-01-17T08:07:09Z"
    },
    {
      "author": "it-praktyk",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov, the very good suggestion.\r\n\r\nShould I prepare a pull request for this small update for the PowerShell/master branch or do you prefer to update this via the vors/replace-pester branch?",
      "created_at": "2018-01-17T18:26:09Z",
      "updated_at": "2018-01-17T18:26:09Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "@it-praktyk feel free to take over this work and open a new PR. You can cherry-pick the `build.psm1` changes from this one and continue working on the tests changes. Does that sound like a plan?",
      "created_at": "2018-01-17T18:52:27Z",
      "updated_at": "2018-01-17T18:52:27Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@it-praktyk It would be great if you took this job. (It seems @vors is very busy in other projects)",
      "created_at": "2018-01-18T05:38:17Z",
      "updated_at": "2018-01-18T05:38:17Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "There was a big change to build.psm1 which was just merged which will have to be resolved.",
      "created_at": "2018-01-20T02:16:23Z",
      "updated_at": "2018-01-20T02:16:23Z"
    },
    {
      "author": "it-praktyk",
      "author_association": "CONTRIBUTOR",
      "body": "@TravisEz13, thank you for heads-up. I just analyze what was changed.\r\n\r\n@vors, @iSazonov I'll try to continue work on this subject. I hope to share something valuable soon.",
      "created_at": "2018-01-20T09:48:49Z",
      "updated_at": "2018-01-20T09:48:49Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "This is fixed by https://github.com/PowerShell/PowerShell/pull/6064 ",
      "created_at": "2018-02-08T19:30:27Z",
      "updated_at": "2018-02-08T19:30:27Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "Awesome! I think `Restore-PSPester` and `Restore-GitModule` should be removed from `build.psm1`.",
      "created_at": "2018-02-09T00:49:44Z",
      "updated_at": "2018-02-09T00:49:44Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "Restore-PSPester is useful to get pester for testing.  We are still not shipping pester.",
      "created_at": "2018-02-09T18:43:01Z",
      "updated_at": "2018-02-09T18:43:01Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "Restore-GitModule was removed.",
      "created_at": "2018-02-09T18:43:18Z",
      "updated_at": "2018-02-09T18:43:18Z"
    }
  ],
  "created_at": "2017-08-19T07:17:52Z",
  "number": 4618,
  "state": "closed",
  "title": "Replace Pester submodule by download from the gallery",
  "updated_at": "2018-02-09T18:43:18Z"
}