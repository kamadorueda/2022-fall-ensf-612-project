{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11293",
  "author": "mklement0",
  "body": "# Summary of the new feature/enhancement\r\n\r\nBehind the scenes, background jobs use the remoting infrastructure, which means that `$PSSenderInfo` is populated in both cases, and `$Host.Name` contains `ServerRemoteHost`.\r\n\r\n**Currently, it isn't  always possible to detect when code is executing in a _background job_ vs. when it is running in a true _remoting session_ - but it should be possible to do so, reliably.**\r\n\r\n# Proposed technical implementation details (optional)\r\n\r\nCurrently, `$PSSenderInfo.ConnectionString` contains the fixed string `http://localhost` in background jobs, whereas in _WinRM_-based remoting sessions the URL contains the actual host name, port number, and client PowerShell version.\r\n\r\nHowever, in _SSH_-based remoting sessions, the same fixed string is currently used, which should be considered a bug  - see #11292\r\n\r\n**Once #11292 gets fixed, testing `$PSSenderInfo.ConnectionString -eq 'http://localhost'` _could_ serve as the test for detecting background jobs, but that is both obscure and technically incorrect** - though it could serve as a solution if there's a backward compatibility concern over changing the value for background jobs.\r\n\r\nSince there is no actual network connection involved in the case of background jobs (I presume), **I suggest simply setting `.ConnectionString` to `''`** (empty string).\r\n\r\n\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": ">  I suggest simply setting .ConnectionString to '' (empty string).\r\n\r\nAn explicit value (\"bgjob://\") would show our intentions better.",
      "created_at": "2019-12-09T17:24:38Z",
      "updated_at": "2019-12-09T17:24:38Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "What matters at the end of the day is that we have _some_ unambiguous value, so `bgjob://` is an option too, albeit a somewhat artificial one in that no such protocol exists.\r\n\r\nWhat appeals to me about the empty string is that you don't have to remember an arbitrary identifier, but I don't feel strongly about this.",
      "created_at": "2019-12-09T18:57:41Z",
      "updated_at": "2019-12-09T18:57:41Z"
    },
    {
      "author": "anmenaga",
      "author_association": "CONTRIBUTOR",
      "body": "What is an example of a scenario where the code needs to know if it is running in a background job or true remoting session?",
      "created_at": "2019-12-09T19:04:24Z",
      "updated_at": "2019-12-09T19:04:24Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "It came up in the context of #11270, where only true remoting contexts should fall back to legacy behavior in the absence of a `-PowerShellVersion 5.1` argument, not also background jobs (where client and server are by definition the same PowerShell version) - though in the end it turned out that the distinction wasn't necessary.\r\n\r\nWhile I have no specific other use cases, it is conceivable that code would want to adjust its behavior depending on whether it's being executed in a true remoting session and/or a background job.\r\nThere's no reason not to enable such self-awareness, given that the pieces are already in place.\r\n(And, as stated, the value `http://localhost` in `.ConnectionString` is misleading).\r\n",
      "created_at": "2019-12-09T19:10:52Z",
      "updated_at": "2019-12-09T19:10:52Z"
    }
  ],
  "created_at": "2019-12-08T19:27:03Z",
  "number": 11293,
  "state": "open",
  "title": "Allow code to detect when it is run inside a background job, as distinct from a remoting session",
  "updated_at": "2019-12-09T19:10:53Z"
}