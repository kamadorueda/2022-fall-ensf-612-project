{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11164",
  "author": "JustinGrote",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n\r\n-->\r\n\r\n# Steps to reproduce\r\nEnable WinCompat Experimental Feature\r\n```powershell\r\nPS> start-threadjob 'test'\r\nStart-ThreadJob: Invalid file path extension.  Extension should be .ps1.\r\nWARNING: Module PSScheduledJob is loaded in Windows PowerShell using WinPSCompatSession remoting session; please note that all input and output of commands from this module will be deserialized objects. If you want to load this module into PowerShell Core please use 'Import-Module -SkipEditionCheck' syntax.\r\n```\r\n\r\n# Notes\r\nStart-Threadjob doesn't try to load psscheduledjob if experimental feature is disabled.\r\n\r\n",
  "closed_at": "2019-11-26T18:43:36Z",
  "comments": [
    {
      "author": "anmenaga",
      "author_association": "CONTRIBUTOR",
      "body": "Yes, `PSScheduledJob` module is not-Core-compatible; and [currently starting any job attempts to load `PSScheduledJob` module and fails quietly](https://github.com/PowerShell/PowerShell/blob/2f672538b235db9dfd26cba75064f92e1e903fb4/src/System.Management.Automation/engine/CommandDiscovery.cs#L885). With WinCompat enabled, module is getting loaded and that generates the warning.\r\nIt is an interesting side discussion: why starting a job is supposed to autoload a module that user never wanted to load.\r\n\r\nAs mentioned in original post, experimental feature can be disabled to prevent this; also WinCompat RFC discusses more narrow 'wincompat module blacklist' mechanism, feel free to provide your opinion on this.\r\n",
      "created_at": "2019-11-22T21:05:39Z",
      "updated_at": "2019-11-22T21:05:39Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "This warning fires when calling `Get-Job` as well, and I think it is just as surprising.",
      "created_at": "2019-11-22T21:07:40Z",
      "updated_at": "2019-11-22T21:07:40Z"
    },
    {
      "author": "jazzdelightsme",
      "author_association": "CONTRIBUTOR",
      "body": "I just filed #11166, because this one looked specific to `Start-ThreadJob`/PSScheduledJob. But actually sounds like it's the same thing.\r\n\r\n(and I would expect `Start-Job` to just work with no warnings or twiddling of experimental features)",
      "created_at": "2019-11-22T21:12:06Z",
      "updated_at": "2019-11-22T21:12:06Z"
    },
    {
      "author": "anmenaga",
      "author_association": "CONTRIBUTOR",
      "body": "@lzybkr , right. `JobCmdletBase.BeginProcessing() -> CommandDiscovery.AutoloadModulesWithJobSourceAdapters`",
      "created_at": "2019-11-22T21:16:14Z",
      "updated_at": "2019-11-22T21:16:14Z"
    },
    {
      "author": "JustinGrote",
      "author_association": "CONTRIBUTOR",
      "body": "@anmenaga can you reference the 'original post' you referred to? Is that the RFC?\r\n\r\nI don't think it's reasonable once Wincompat goes GA that if I want to use Start-Threadjob natively in PS7 I have to add PSScheduledJob to a blacklist right off the bat, that's a huge usability issue, so either: \r\n\r\n- adjust the code to not try to autoload PSScheduledJob on PS Core (potentially breaking but best option)\r\n- add it to the blacklist by default (bad option, not very discoverable)\r\n- fix PSScheduledJob to be core compatible at least for Windows (doesn't need a xplat implementation)\r\n\r\n",
      "created_at": "2019-11-22T21:47:47Z",
      "updated_at": "2019-11-22T21:49:22Z"
    },
    {
      "author": "anmenaga",
      "author_association": "CONTRIBUTOR",
      "body": "@JustinGrote thank you for your feedback;\r\n\r\nI was referring to your original post :) where you mentioned the workaround `Start-Threadjob doesn't try to load psscheduledjob if experimental feature is disabled.`",
      "created_at": "2019-11-22T22:21:50Z",
      "updated_at": "2019-11-22T22:21:50Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "The current behavior to auto load modules with job source adapters is causing this side effect.  I agree that it's surprising as the user shouldn't be aware of this implementation detail.  Perhaps we should update the `AutoloadModulesWithJobSourceAdapters` to explicitly not use `PSWindowsPowerShellCompatibility` when loading modules.",
      "created_at": "2019-11-22T22:31:18Z",
      "updated_at": "2019-11-22T22:31:18Z"
    },
    {
      "author": "JoeSalmeri",
      "author_association": "NONE",
      "body": "@SteveL-MSFT \r\n\r\nI too was surprised by this behavior and am still a little confused by what is going on.\r\n\r\nIn my profile I create a function which runs whenever I exit PS.\r\n\r\nI created the function to detect if any jobs exist or if any PSSessions exist in the current session and to prompt to confirm the exit if either exists.\r\n\r\nI originally created the function because I only use SSH remoting which is not supported by Disconnect-PSSession (which only supports WSMan remoting) and wanted to be warned before those SSH PSSessions were lost and then later modified the function to also call Get-Job to check for any jobs run in the current session.\r\n\r\nAfter installing PS 7 preview 6, the first time I exited PS, my function ran and showed the WinPSCompatSession as existing.\r\n\r\nAt first I was not sure what commands I had executed which created that session but after some experimentation I found that it was created when my \"exit\" function ran the Get-Job command to check for any jobs created.\r\n\r\n\"Get-Command Get-Job\" shows that the Cmdlet version is 7.0.0.0 and the source of the command \r\nis Microsoft.PowerShell.Core so I am still somewhat unclear why compatibility mode would be needed?\r\n\r\nAre you saying this is a bug with the autoloading of modules or is compatibility mode really needed for \"jobs\"?\r\n\r\nAre there any plans for Disconnect-PSSession to support disconnecting a remote PSSession that uses SSH?\r\n\r\nOn my Linux machines, I always use the Screen program so that I can easily disconnect and reconnect to the remote SSH sessions and was hoping that Disconnect-PSSession would also provide similar functionality from PS.\r\n",
      "created_at": "2019-11-24T18:15:56Z",
      "updated_at": "2019-11-24T18:15:56Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:This issue was addressed in #11194, which has now been successfully released as `v7.0.0-rc.1`.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.0.0-rc.1)\n",
      "created_at": "2019-12-16T21:37:32Z",
      "updated_at": "2019-12-16T21:37:32Z"
    }
  ],
  "created_at": "2019-11-22T20:26:11Z",
  "labels": [
    "Issue-Bug",
    "WG-Engine",
    "Resolution-Fixed"
  ],
  "number": 11164,
  "state": "closed",
  "title": "[Preview6] [PSWindowsPowershellCompatibility] *-Job cmdlets load PSScheduledJob module in WinCompat",
  "updated_at": "2019-12-16T21:37:32Z"
}