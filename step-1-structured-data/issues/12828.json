{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12828",
  "author": "villesl",
  "body": "This seems to reproduce with all tested cmdlets. All that is needed is a non-existent property and evaluation against integer with two or more dots.\r\n\r\n<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 and PowerShell 7+ issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6).\r\n\r\n-->\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\n(Get-Date).Nanosecond -eq 1.1.1\r\n```\r\n\r\n# Expected behavior\r\n\r\n```none\r\nFalse\r\n```\r\n\r\n# Actual behavior\r\n\r\n```none\r\nTrue\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.1\r\nPSEdition                      Core\r\nGitCommitId                    7.0.1\r\nOS                             Microsoft Windows 10.0.18363\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n\r\n```\r\n",
  "closed_at": "2020-05-28T20:45:56Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "There's no such thing as \"an integer with two or more dots\". \r\n\r\n- `10` is an integer.\r\n- `10.1` is the `double` value `10.1`.\r\n- `10.1.1` targets the (nonexistent) property named `1` on the value `10.1`.\r\n\r\nThe comparison returns true because neither property exists, so both return `$null` values which are equal. If you try this operation in Strict Mode, both property accesses would result in an error.",
      "created_at": "2020-05-28T15:09:05Z",
      "updated_at": "2020-05-28T15:10:11Z"
    },
    {
      "author": "villesl",
      "author_association": "NONE",
      "body": "True, thanks for clarifying!",
      "created_at": "2020-05-28T20:45:56Z",
      "updated_at": "2020-05-28T20:45:56Z"
    }
  ],
  "created_at": "2020-05-28T14:13:05Z",
  "labels": [
    "Issue-Question",
    "Resolution-Answered"
  ],
  "number": 12828,
  "state": "closed",
  "title": "Evaluating non-existent property always returns true (with certain test values)",
  "updated_at": "2020-05-28T21:03:12Z"
}