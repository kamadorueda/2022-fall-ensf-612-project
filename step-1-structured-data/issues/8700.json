{
  "_url": "https://github.com/PowerShell/PowerShell/issues/8700",
  "author": "bergmeister",
  "body": "## PR Summary\r\n\r\nRelated: #8699\r\n\r\n## PR Context  \r\n\r\nBecause `PowerShellGet` does not support publishing/saving module on a per platform basis (see [this](https://github.com/PowerShell/PowerShellGet/issues/273) issue), PowerShell currently also ships the fullclr binaries of `PackageManagement`, which it does not need. Therefore removing it to minimise the package size, this saves 1.19 MB.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.  \r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**  \r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n        - [x] [Add `[feature]` to your commit messages if the change is significant or affects feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\r\n",
  "closed_at": "2019-01-22T20:55:23Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I guess that we break in-place upgrade (we will not remove the trash on file system) if removing the components.",
      "created_at": "2019-01-21T05:34:34Z",
      "updated_at": "2019-01-21T05:34:34Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Hmm, definitely need @TravisEz13's approval on this.",
      "created_at": "2019-01-21T20:20:59Z",
      "updated_at": "2019-01-21T20:20:59Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov Why would the MSI  upgrade not remove the old component? And even if it did not remove it, then there would still not be a problem since this folder is not needed/useful for PowerShell Core at all. In the related issue #8699, I also describe that the next version of `Packagemanagement` will ship with a `netstandard2.0` folder that replaces the current 2 folders `netcoreapp2.0` and `netstandard1.6`, so we will need to tackle this problem anyway.",
      "created_at": "2019-01-21T20:31:38Z",
      "updated_at": "2019-01-21T20:33:42Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "We already had a problem with the shortcut key in the registry so we should be careful here.\r\nAlso we should consider a patch update scenario.\r\n\r\n@SteveL-MSFT @TravisEz13 what do you think?",
      "created_at": "2019-01-22T03:24:56Z",
      "updated_at": "2019-01-22T03:26:30Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Seems fine to me.  Even if the existing assemblies don't get removed, it didn't make it worse.",
      "created_at": "2019-01-22T18:01:09Z",
      "updated_at": "2019-01-22T18:01:09Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "We should not consider a patch upgrade scenario during a preview.  This change should not be back ported to `6.1`, but it is fine to introduce during the preview process.",
      "created_at": "2019-01-22T20:53:15Z",
      "updated_at": "2019-01-22T20:53:15Z"
    }
  ],
  "created_at": "2019-01-19T20:25:52Z",
  "number": 8700,
  "state": "closed",
  "title": "Do not ship fullclr binaries of PackageManagement",
  "updated_at": "2022-09-12T17:35:01Z"
}