{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3488",
  "author": "iSazonov",
  "body": "Now we don't have a full set of encoding tests (only for [redirections](https://github.com/PowerShell/PowerShell/blob/master/test/powershell/Language/Parser/RedirectionOperator.Tests.ps1)). We need to create them during future [Encoding RFC](https://github.com/PowerShell/PowerShell-RFC/issues/71) implementation (?).\r\n\r\nIn #3467 (discussion Issue #3248) we fix Default/OEM encoding behavior PowerShell Core on Windows (as in Windows PowerShell) but don't add tests (waiting the RFC). The simplest test (from @mklement0) is:\r\n```PowerShell\r\n# Setup:\r\n# Create a no-BOM UTF-8 file with the following literal content:\r\n#   '\u00f6' \r\n# which, when executed as a PS script, should echo '\u00f6' back, IF the script\r\n# was correctly decoded from UTF-8 by PS.\r\n# UTF-8 bytes: 0x27 (single quote), 0xc3 0xb6 (encoding of '\u00f6', U+00F6), 0x27 (single quote)\r\n[byte[]] (0x27, 0xc3, 0xb6, 0x27) | Set-Content -Encoding Byte /tmp/$PID.ps1\r\n\r\n# Test: See if the '\u00f6' is echoed back correctly.\r\n#       Should return $True\r\n'\u00f6' -eq (& /tmp/$PID.ps1)\r\n```\r\n\r\nWe need test for:\r\n- [ ] File provider cmdlets\r\n- [ ] Utility (and other) cmdlets\r\n- [ ] Redirections\r\n- [ ] Console Host\r\n- [ ] Web cmdlets (Discussion Issue #3267)\r\n- [ ] PowerShell engine source file reading\r\n",
  "closed_at": "2021-08-25T04:06:01Z",
  "comments": [
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov: \r\n\r\nThe test snippet tests how _PowerShell itself_ reads source code that has no BOM, so can you please add that as a separate action item (check box) to the list of tests?\r\n(Perhaps that behavior is implied by the other tests, but I think it should still be a separate one.)\r\n\r\n(And, on a more quibbly note: Can you add the word \"character\" before \"encoding\" to the title, so that it's clear what kind of encoding is being referred to?)\r\n\r\nAnd here are the `Set-Content` / `Get-Content` test snippets with BOM-less UTF-8 encoding in effect:\r\n\r\n```PowerShell\r\n# Setup: *create* a  BOM-less UTF-8 file.\r\n'\u00f6' | set-content -nonewline /tmp/$pid.txt\r\n\r\n# Tests: Both should output $True\r\n\r\n# Compare the raw bytes of the new file to the UTF-8 encoding of '\u00f6' (0xc3 0xb6)\r\n# With the current alpha17, this would return $False, because Set-Content creates an\r\n# ISO-8859-1 file.\r\n$null -eq (Compare-Object (Get-Content -Encoding Byte -Raw /tmp/$pid.txt) (0xc3, 0xb6))\r\n\r\n# See if the BOM-less UTF-8 file is *read* correctly.\r\n'\u00f6' -eq (Get-Content -Raw /tmp/$pid.txt)\r\n```\r\n",
      "created_at": "2017-04-05T14:17:03Z",
      "updated_at": "2017-04-05T14:17:03Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "We have never used \"character\" before so it can confuse us even more. (?)",
      "created_at": "2017-04-05T14:36:59Z",
      "updated_at": "2017-04-05T14:36:59Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov: \r\n\r\nNot that it will matter much in this instance, but just for the record and for future instances where the distinction may matter:\r\n\r\nWe are discussing [character encodings](https://en.wikipedia.org/wiki/Character_encoding) here.\r\n\r\n[Encoding](https://en.wikipedia.org/wiki/Code) is a far more generic term, of which _character_ encoding is just one instance.\r\n\r\nGiven that the issues in this repo span all sorts of topics, giving sufficient context is preferable.\r\n\r\nP.S.: In light of the above, I would have preferred the title \"Default Character Encoding\" for the RFC.",
      "created_at": "2017-04-05T14:42:59Z",
      "updated_at": "2017-04-05T14:45:54Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@mklement0 In the code we use \"encoding\". So let us defer the question to the discretion of the mantainers.",
      "created_at": "2017-04-05T14:57:01Z",
      "updated_at": "2017-04-05T14:57:01Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov: \r\n\r\nSounds good.\r\n\r\nIt's perfectly understandable to shorten \"character encoding\" to \"encoding\" in a given, narrow context, where there's no risk of ambiguity.\r\n\r\nMy only point is that in a larger context the added specificity can be helpful - both for searching topics by keywords and for quick comprehension.\r\n",
      "created_at": "2017-04-05T15:01:53Z",
      "updated_at": "2017-04-05T15:01:53Z"
    }
  ],
  "created_at": "2017-04-05T14:03:02Z",
  "labels": [
    "Issue-Enhancement",
    "WG-Quality-Test"
  ],
  "number": 3488,
  "state": "closed",
  "title": "Need a full set of encoding tests",
  "updated_at": "2021-08-25T04:06:01Z"
}