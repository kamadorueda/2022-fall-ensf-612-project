{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6569",
  "author": "JeffGreenlee42",
  "body": "I have found previous bugs that have been filed on this..  #4014 all are marked as duplicate and then marked or merged into other bugs but then they are inexplicably closed!   Clearly, this get-help issue is NOT yet fixed!   \r\n\r\nNote,  I used \"about_ForEach-Parallel\"  as an example.  There are many other \"about\" topics that suffer the same issue.  Just run \"get-help about*\"   and try some!  It will not be long before you duplicate this error.  Clearly,  Powershell finds the documented source from several sources -  and it simply cannot take the step of displaying one of the documents.   (After searching for about topics online I was able to locate it through Web search engines! )   If there are duplicate documents with the same name,  the user should not have to take steps to ensure there is only one instance of them. \r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n> get-help about_ForEach-Parallel -Online\r\n\r\n\r\nExpected behavior\r\n-----------------\r\n\r\nI expect to see the the defined about topic.  (Note:  \"-online\" parameter is optional. Error Result is the same) \r\n\r\nActual behavior\r\n---------------\r\n\r\n```\r\nPS C:\\WINDOWS\\system32> Get-Help about_ForEach-Parallel -Online\r\n\r\nName                              Category  Module                    Synopsis                                         \r\n----                              --------  ------                    --------                                         \r\nabout_ForEach-Parallel            HelpFile                            Describes the ForEach -Parallel language const...\r\nabout_ForEach-Parallel            HelpFile                            Describes the ForEach -Parallel language const...\r\nGet-Help : Multiple Help topics were found. Use only one Help topic with the -Online option.\r\nAt line:1 char:1\r\n+ Get-Help about_ForEach-Parallel -Online\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : InvalidOperation: (:) [Get-Help], PSInvalidOperationException\r\n    + FullyQualifiedErrorId : InvalidOperation,Microsoft.PowerShell.Commands.GetHelpCommand\r\n```\r\n \r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n>  $PSVersionTable\r\n> Name                           Value                                                                                   \r\n> ----                           -----                                                                                   \r\n> PSVersion                      5.1.16299.251                                                                           \r\n> PSEdition                      Desktop                                                                                 \r\n> PSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}                                                                 \r\n> BuildVersion                   10.0.16299.251                                                                          \r\n> CLRVersion                     4.0.30319.42000                                                                         \r\n> WSManStackVersion              3.0                                                                                     \r\n> PSRemotingProtocolVersion      2.3                                                                                     \r\n> SerializationVersion           1.1.0.1      \r\n> \r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@JeffGreenlee42 Could you please test with latest PowerShell Core build?",
      "created_at": "2018-04-05T13:35:49Z",
      "updated_at": "2018-04-05T13:35:49Z"
    },
    {
      "author": "JeffGreenlee42",
      "author_association": "NONE",
      "body": " @iSazonov  Ok,  I installed Core Build 6.1.0-preview.1 .  I hope that is what you intended.   Upon testing I was not able to repro this issue.  (Note that I did not methodically test every *about* document.)   \r\n\r\nHowever, I'm not sure this proves the original problem has been addressed.   The reason I have doubts is that PS Core 6.1  comes with a much smaller set of \"about\" documents than the .NET Windows version of Powershell 5.1 .  In order to test this I would need to know which About topics that fail in PS5.1  are also legitimate topics in PSCore6.1\r\n ",
      "created_at": "2018-04-06T10:45:13Z",
      "updated_at": "2018-04-06T10:51:52Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@JeffGreenlee42 You can copy a full set of \"about\" files to PowerShell Core directory.\r\nAlso the repo is for PowerShell Core issues. I don't know whether the #4014 patch was ported to Windows PowerShell.",
      "created_at": "2018-04-06T12:24:58Z",
      "updated_at": "2018-04-06T12:25:20Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "You can simply do `Get-Help about_*` to find a list of about topics in the currently running powershell version.",
      "created_at": "2018-04-06T15:44:11Z",
      "updated_at": "2018-04-06T15:44:19Z"
    },
    {
      "author": "JeffGreenlee42",
      "author_association": "NONE",
      "body": "Yes,  I am aware of that.  That is what prompted my last comment.  Running that command in PSCore6.1  gets a VERY different (and much smaller)  list of about topics then running that command in PS5.1.  This is (ofcourse) expected.   There is a large set of .NET specific about topics that do not belong in the Core build.      My question is this:  Are there any About topics that fail (due to this bug)  in PS5.1  that are available in PSCore6.1?      \r\nI think its a reasonable expectation that one could run the EXACT same PS command in both versions to test whether the underlying issue is resolved. ",
      "created_at": "2018-04-06T19:34:24Z",
      "updated_at": "2018-04-06T19:36:42Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "So I used this to get a list of all duplicate help topics in my version of PowerShell 5.1 (after opening in administrative mode and calling `update-help`, naturally, for both versions of PS):\r\n```\r\nPS C:\\Windows\\System32> Get-Help about_* | group | where count -gt 1 | select -exp group | select -unique -exp Name\r\nabout_ActivityCommonParameters\r\nabout_Checkpoint-Workflow\r\nabout_ForEach-Parallel\r\nabout_InlineScript\r\nabout_Parallel\r\nabout_Scheduled_Jobs\r\nabout_Scheduled_Jobs_Advanced\r\nabout_Scheduled_Jobs_Basics\r\nabout_Scheduled_Jobs_Troubleshooting\r\nabout_Sequence\r\nabout_Suspend-Workflow\r\nabout_WorkflowCommonParameters\r\nabout_Workflows\r\n```\r\nChecking this against the help available in PS Core:\r\n```\r\nPS C:\\Program Files\\PowerShell\\6.0.1> get-help about_* | where{ $_.name -in $winPSTopics }\r\nPS C:\\Program Files\\PowerShell\\6.0.1>\r\n```\r\n(There was no output.)\r\n\r\nSo, the answer to your question is... nope! Not one of these duped topics is available in PS Core, at least as far as I can determine right here. :) \r\n\r\nInterestingly, during this little adventure I found this can actually be worked around by the savvy user (as long as the help is actually available in the console and isn't online-exclusive -- a few topics are, not sure if any are on this list) by doing the following:\r\n```\r\n get-help about_ForEach-Parallel | group | select -exp name\r\n```\r\nWhich, for some reason I cannot find, manages to pull the entire help contents, where no amount of `Select`ing on the usual objects you get will do so -- for some reason you have to `Group` them first, which pulls extra data into the `Name` property somehow?",
      "created_at": "2018-04-06T22:30:15Z",
      "updated_at": "2018-04-06T22:38:18Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Possible stop-gap solution -- have `Get-Help` automatically pass its list through `Group-Object` and return only unique entries?\r\n\r\nObviously it's not perfect, but it's one way of retaining the ability to see at least *one* of the duplicate topics. One is better than none. [*shrugs*]",
      "created_at": "2018-04-06T22:41:01Z",
      "updated_at": "2018-04-06T22:41:01Z"
    },
    {
      "author": "JeffGreenlee42",
      "author_association": "NONE",
      "body": "Nice! My question was rhetorical, but now it\u2019s answered! Thank you! I am\nglad to see the list of duplicate entries is not so large. Still, those are\nsome hefty about topics that are rendered unavailable to your average PS5.1\nuser! (Unless they search a the internet )\n\nI do wonder what led to the duplications in the first place. The \u201cstop-gap\u201d\nsolution would work....but I would think the ultimate solution should be\nwith update-help. That command should take steps to ensure that all\nget-help topic titles remain unique, should it not?\n\nActually, correct me if I'm wrong (please!)....but I think a user has the\ncapability to create help topics, for new modules and functions? What\nprevents a hapless user from creating get-help duplicates? I should think\nupdate-help would maintain the help topic collection.\nOn Fri, Apr 6, 2018 at 3:41 PM vexx32 <notifications@github.com> wrote:\n\n> Possible stop-gap solution -- have Get-Help automatically pass its list\n> through Group-Object and return only unique entries?\n>\n> Obviously it's not perfect, but it's one way of retaining the ability to\n> see at least *one* of the duplicate topics. One is better than none. [\n> *shrugs*]\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/PowerShell/PowerShell/issues/6569#issuecomment-379403291>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AVifXahdIMb6ya3lseCSCaLALFj6o2QOks5tl-8NgaJpZM4TH2TU>\n> .\n>\n",
      "created_at": "2018-04-06T23:33:39Z",
      "updated_at": "2018-04-06T23:33:39Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Yeah, there should either be a cmdlet that will scan for and prompt for removal of duplicates (or perhaps just keep the newest file?) at the user's choice... or Update-Help could do that also.\r\n\r\nOne other interesting thing I found was a list of `about_*` help topics that are not in Core that are in 5.1 and vice versa, which I thought might also be interesting, if not *directly* relevant ;)\r\n\r\nCore Topics that are not in PS 5.1:\r\n```\r\nPS C:\\WINDOWS\\system32> $CoreHelp | Where-Object {$_ -notin $WinPSHelp}\r\nabout_Enum\r\nabout_Logging\r\nabout_pwsh\r\nabout_simplified_syntax\r\nAbout_Using\r\n```\r\n\r\n5.1 Topics that are not in Core:\r\n```\r\nPS C:\\WINDOWS\\system32> $WinPSHelp | Where-Object {$_ -notin $CoreHelp}\r\nabout_ActivityCommonParameters\r\nabout_Checkpoint-Workflow\r\nabout_CimSession\r\nabout_DesiredStateConfiguration\r\nabout_Escape_Characters\r\nabout_Eventlogs\r\nabout_ForEach-Parallel\r\nabout_InlineScript\r\nabout_Parallel\r\nabout_Parsing_LocTest\r\nabout_PowerShell.exe\r\nabout_PowerShell_Ise.exe\r\nabout_PSSnapins\r\nabout_Scheduled_Jobs\r\nabout_Scheduled_Jobs_Advanced\r\nabout_Scheduled_Jobs_Basics\r\nabout_Scheduled_Jobs_Troubleshooting\r\nabout_Sequence\r\nabout_Suspend-Workflow\r\nabout_Transactions\r\nabout_Windows_PowerShell_5.0\r\nabout_Windows_PowerShell_ISE\r\nabout_Windows_RT\r\nabout_WMI\r\nabout_WMI_Cmdlets\r\nabout_WorkflowCommonParameters\r\nabout_Workflows\r\nabout_WQL\r\nabout_WS-Management_Cmdlets\r\nabout_BeforeEach_AfterEach\r\nabout_Mocking\r\nabout_Pester\r\nabout_should\r\nabout_TestDrive\r\nabout_Scheduled_Jobs\r\nabout_Scheduled_Jobs_Advanced\r\nabout_Scheduled_Jobs_Basics\r\nabout_Scheduled_Jobs_Troubleshooting\r\nabout_ActivityCommonParameters\r\nabout_Checkpoint-Workflow\r\nabout_ForEach-Parallel\r\nabout_InlineScript\r\nabout_Parallel\r\nabout_Sequence\r\nabout_Suspend-Workflow\r\nabout_WorkflowCommonParameters\r\nabout_Workflows\r\n```\r\n\r\nSome pretty big topics are completely missing from Core! Some are a given now that it's cross-platform and not Windows-specific, but there are still a few that I think ought to be there.",
      "created_at": "2018-04-06T23:57:38Z",
      "updated_at": "2018-04-06T23:58:12Z"
    },
    {
      "author": "JeffGreenlee42",
      "author_association": "NONE",
      "body": "Yes, I don't know enough to get a picture of the venn diagram between core\nand . Net versions.. I suppose there might be other issues that would make\na significant single document inappropriate and inaccurate for one of the\nother platforms. There are some that are just plain obvious. \"About_WMI\".\nFor example would seem to be a painfully obvious inappropriate topic in\nLinux or OSX.\ud83e\udd13. What I am not clear on is how well Core allows remote\noperations. If I were on a Mac or Linux machine and I wanted to perform a\nWMI operation on a remote Windows machine from a local PSCore shell or\nscript I would think \"about-WMI\". Would prove to be a rather handy resource\nto have access to!\nThen again, maybe PSCore to PS.Net WMI actions are not possible....I'll\nhave to try it out sometime.\n\nMy guess is that the architects of PSCore wish to customize some about\ntopics to make them more relevant and accurate...I am sure the about\nlibrary will be increasing in future builds.\nOn Fri, Apr 6, 2018 at 4:58 PM vexx32 <notifications@github.com> wrote:\n\n> Yeah, there should either be a cmdlet that will scan for and prompt for\n> removal of duplicates (or perhaps just keep the newest file?) at the user's\n> choice... or Update-Help could do that also.\n>\n> One other interesting thing I found was a list of help topics that are not\n> in Core that are in 5.1 and vice versa, which I thought might also be\n> interesting, if not *directly* relevant ;)\n>\n> Core Topics that are not in PS 5.1:\n>\n> PS C:\\WINDOWS\\system32> $CoreHelp | Where-Object {$_ -notin $WinPSHelp}\n> about_Enum\n> about_Logging\n> about_pwsh\n> about_simplified_syntax\n> About_Using\n>\n> 5.1 Topics that are not in Core:\n>\n> PS C:\\WINDOWS\\system32> $WinPSHelp | Where-Object {$_ -notin $CoreHelp}\n> about_ActivityCommonParameters\n> about_Checkpoint-Workflow\n> about_CimSession\n> about_\n>\n> DesiredStateConfiguration\n> about_Escape_Characters\n> about_Eventlogs\n> about_ForEach-Parallel\n> about_InlineScript\n> about_Parallel\n> about_Parsing_LocTest\n> about_PowerShell.exe\n> about_PowerShell_Ise.exe\n> about_PSSnapins\n> about_Scheduled_Jobs\n> about_Scheduled_Jobs_Advanced\n> about_Scheduled_Jobs_Basics\n> about_Scheduled_Jobs_Troubleshooting\n> about_Sequence\n> about_Suspend-Workflow\n> about_Transactions\n> about_Windows_PowerShell_5.0\n> about_Windows_PowerShell_ISE\n> about_Windows_RT\n> about_WMI\n> about_WMI_Cmdlets\n> about_WorkflowCommonParameters\n> about_Workflows\n> about_WQL\n> about_WS-Management_Cmdlets\n> about_BeforeEach_AfterEach\n> about_Mocking\n> about_Pester\n> about_should\n> about_TestDrive\n> about_Scheduled_Jobs\n> about_Scheduled_Jobs_Advanced\n> about_Scheduled_Jobs_Basics\n> about_Scheduled_Jobs_Troubleshooting\n> about_ActivityCommonParameters\n> about_Checkpoint-Workflow\n> about_ForEach-Parallel\n> about_InlineScript\n> about_Parallel\n> about_Sequence\n> about_Suspend-Workflow\n> about_WorkflowCommonParameters\n> about_Workflows\n>\n> Some pretty big topics are completely missing from Core! Some are a given\n> now that it's cross-platform and not Windows-specific, but there are still\n> a few that I think ought to be there.\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/PowerShell/PowerShell/issues/6569#issuecomment-379414332>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AVifXXTZ4ocKGrNfVcN-_2FigrI3Pdfhks5tmAETgaJpZM4TH2TU>\n> .\n>\n",
      "created_at": "2018-04-07T02:30:50Z",
      "updated_at": "2018-04-07T02:30:50Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "I believe the `*-CimInstance` and similar cmdlets should still function in place of the WMI ones -- they are meant to be the cross-platform replacements, after all! The primary differences are, I believe, the classes and methods available on Linux/Mac/Unix systems.\r\n\r\nBut yes, I think it's pretty clear on the topic of `Get-Help` that it should absolutely try to resolve duplicates. Just because there aren't any *currently* in PS Core doesn't mean we shouldn't attempt to catch the edge case and have an established method of dealing with it!",
      "created_at": "2018-04-07T02:45:40Z",
      "updated_at": "2018-04-07T02:45:40Z"
    }
  ],
  "created_at": "2018-04-05T04:42:31Z",
  "number": 6569,
  "state": "open",
  "title": "Duplicate get-help results:  Powershell does not resolve duplicates.",
  "updated_at": "2018-04-07T02:45:40Z"
}