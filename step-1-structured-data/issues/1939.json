{
  "_url": "https://github.com/PowerShell/PowerShell/issues/1939",
  "author": "kmosher",
  "body": "Manages /etc/shells with after-(un)install scripts for Centos and Ubuntu\nFixes #1913\n\nBuilt packages and tested installing and uninstalling on both Ubuntu and Centos environments. /usr/bin/powershell appeared and disappeared as expected.\n\nHaving this much shell squatting in the middle of build.psm1 feels maybe a little gross? I wasn't sure where else would be good to stash the templates. (./Assets seems like the next best choice?)\n",
  "closed_at": "2016-08-31T20:16:11Z",
  "comments": [
    {
      "author": "msftclas",
      "author_association": "NONE",
      "body": "Hi **@kmosher**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    <span>\n        In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla.microsoft.com.\n    </span>\n\nTTYL, MSBOT;\n",
      "created_at": "2016-08-19T06:08:30Z",
      "updated_at": "2016-08-19T06:08:30Z"
    },
    {
      "author": "msftclas",
      "author_association": "NONE",
      "body": "**@kmosher**, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR.\n<br />Thanks, MSBOT;\n",
      "created_at": "2016-08-19T06:15:16Z",
      "updated_at": "2016-08-19T06:15:16Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Can we verify that the Zsh and Fish packages do the same thing? If I remember my experience with Zsh correctly, since it's not a shell shipped with the OS, it purposefully does not add itself to /etc/shells (but I could be wrong).\n",
      "created_at": "2016-08-19T16:34:14Z",
      "updated_at": "2016-08-19T16:34:14Z"
    },
    {
      "author": "mmckinst",
      "author_association": "NONE",
      "body": "@andschwa They do:\n- http://pkgs.fedoraproject.org/cgit/rpms/zsh.git/tree/zsh.spec?id=b1af2d5ba4f03de471a210b418c5d90cbfc2f8ee#n124\n- http://pkgs.fedoraproject.org/cgit/rpms/fish.git/tree/fish.spec?id=9e29dafe9ce929181e263d12a35be2f61e2613b2#n77\n\n`%{_sysconfdir}` expands to `etc` and `%{_bindir}` expands to `/usr/bin/`\n\nOr if you have a CentOS box handy with zsh or fish already installed you can run `rpm -q --scripts zsh`\n",
      "created_at": "2016-08-19T18:38:34Z",
      "updated_at": "2016-08-19T18:38:34Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Perfect! Thanks. LGTM.\n",
      "created_at": "2016-08-19T18:56:50Z",
      "updated_at": "2016-08-19T18:56:50Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "I'd actually posit that if we do this, we should do it for all the packages we produce. (RPM, DEB, and PKG).\n\nOur behavior should be consistent.\n",
      "created_at": "2016-08-19T19:04:11Z",
      "updated_at": "2016-08-19T19:04:11Z"
    },
    {
      "author": "kmosher",
      "author_association": "CONTRIBUTOR",
      "body": "I wasn't immediately sure what the conventions on OS X were. The Homebrew recipes for fish and zsh don't touch /etc/shells and instead leave it as an exercise to the reader:\n\n```\n==> Caveats\nYou will need to add:\n  /usr/local/bin/fish\nto /etc/shells.\n\nThen run:\n  chsh -s /usr/local/bin/fish\nto make fish your default shell.\n```\n\nLooking further though, the separate PKG built by the fish project does do its own /etc/shells management: https://github.com/fish-shell/fish-shell/blob/a7012648fe64fe5e501a7439660684f93afcd60d/build_tools/osx_package_scripts/postinstall\n\nI'll get some scripts together for the PKG build.\n",
      "created_at": "2016-08-19T19:20:32Z",
      "updated_at": "2016-08-19T19:20:32Z"
    },
    {
      "author": "msftclas",
      "author_association": "NONE",
      "body": "Hi **@kmosher**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    <span>You've already signed the contribution license agreement. Thanks!</span>\n        <p>The agreement was validated by Microsoft and real humans are currently evaluating your PR.</p>\n\nTTYL, MSBOT;\n",
      "created_at": "2016-08-19T19:27:47Z",
      "updated_at": "2016-08-19T19:27:47Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Thanks @kmosher!\n",
      "created_at": "2016-08-19T21:29:19Z",
      "updated_at": "2016-08-19T21:29:19Z"
    },
    {
      "author": "kmosher",
      "author_association": "CONTRIBUTOR",
      "body": "Looking at the [fpm source](https://github.com/jordansissel/fpm/blob/5c31fdf20162c2f9c99f069d92b43a0849d6459d/lib/fpm/package/osxpkg.rb) and the [OS X package spec](http://s.sudre.free.fr/Stuff/Ivanhoe/FLAT.html), it doesn't appear that uninstall hooks are a feature of the pkg format, so it's unavoidable that the behavior on OS X will be slightly different.\n",
      "created_at": "2016-08-19T23:16:28Z",
      "updated_at": "2016-08-19T23:16:28Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "You're right. PKGs are notoriously bad. I'd drop PKG for a a brew formula in a heartbeat :wink:\n\nBecause it doesn't handle uninstallation, it is already a special case. What do you guys think, ignore PKG for /etc/shells to minimize uninstall headaches, or keep it consistent with the Linux packages?\n",
      "created_at": "2016-08-19T23:25:18Z",
      "updated_at": "2016-08-19T23:25:18Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@andschwa is this PR good to go, or are we waiting on the author?\n",
      "created_at": "2016-08-30T06:29:44Z",
      "updated_at": "2016-08-30T06:29:44Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Waiting on author. Only implemented for RPM, not DEB. PKG question is still open too.\n",
      "created_at": "2016-08-30T06:31:10Z",
      "updated_at": "2016-08-30T06:31:10Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "I labeled it... I don't know why it got relabeled @TravisEz13?\n",
      "created_at": "2016-08-30T06:31:48Z",
      "updated_at": "2016-08-30T06:31:48Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@andschwa My script removed the waiting tag based on the [abandoned PR rule](https://github.com/PowerShell/PowerShell/tree/master/docs/maintainers#abandoned-pull-requests), but it was seven days when I wrote the script.  I'll update it to 14.\n",
      "created_at": "2016-08-31T01:35:20Z",
      "updated_at": "2016-08-31T01:35:20Z"
    },
    {
      "author": "kmosher",
      "author_association": "CONTRIBUTOR",
      "body": "@andschwa Not sure why you're saying \"Only implemented for RPM, not DEB\". Current PR includes support for both RPM and DEB. PKG is the only odd-duck out.\n\nI did promise some PKG scripts, but then got busy and haven't had time to delve into the particulars of setting up an OS X build VM. I'm ambivalent on whether the PKG build should actually have a pre-install script, so I'll defer to project maintainers on that question.\n",
      "created_at": "2016-08-31T20:08:35Z",
      "updated_at": "2016-08-31T20:08:35Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "@kmosher sorry, had looked at it on too small of a screen. Re-reviewed on bigger screen.\n\nI think we should leave PKG unimplemented.\n\nLGTM.\n",
      "created_at": "2016-08-31T20:12:36Z",
      "updated_at": "2016-08-31T20:12:36Z"
    }
  ],
  "created_at": "2016-08-19T06:08:26Z",
  "number": 1939,
  "state": "closed",
  "title": "Add powershell to /etc/shells",
  "updated_at": "2016-08-31T20:16:12Z"
}