{
  "_url": "https://github.com/PowerShell/PowerShell/issues/16481",
  "author": "Fabaderheld",
  "body": "### Prerequisites\n\n- [X] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\n\n### Steps to reproduce\n\nSince upgrading to PS 7.2 `Invoke-RestMethod -Verbose` does not output the URL in the verbose message.\r\n\n\n### Expected behavior\n\n```console\nInvoke-RestMethod -Uri https://www.microsoft.com/ -Verbose | Out-Null\r\nVERBOSE: GET https://www.microsoft.com/ with 0-byte payload\n```\n\n\n### Actual behavior\n\n```console\nInvoke-RestMethod -Uri https://www.microsoft.com/ -Verbose | Out-Null\r\nVERBOSE: GET with 0-byte payload\n```\n\n\n### Error details\n\n_No response_\n\n### Environment data\n\n```powershell\n>> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.0\r\nPSEdition                      Core\r\nGitCommitId                    7.2.0\r\nOS                             Microsoft Windows 10.0.19042\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\n```\n\n\n### Visuals\n\n_No response_",
  "closed_at": "2021-12-01T00:00:40Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Any logging of URL is security dangerous because the url can contain an authentication key or something like.",
      "created_at": "2021-11-17T14:16:46Z",
      "updated_at": "2021-11-17T14:16:46Z"
    },
    {
      "author": "jhoneill",
      "author_association": "NONE",
      "body": "> Any logging of URL is security dangerous because the url can contain an authentication key or something like.\r\n\r\nSorry this deserves the kind of blunt Anglo-Saxon words which we refrain from using in the forums :-) \r\n\r\n1. \"Security\" is the catch-all excuse for \"We did something, don't argue\". Sorry, I'm going to argue\r\n2. Anything which puts authentication keys in the URL is - almost by definition - not secure\r\n3. Was there any background of people complaining about the possible breach? In other words was this done _in response to customer requests_  or was it just something which seemed to a dev some to be a _good idea at the time_? Because this dev-ocracy which doesn't check with people before merging some different behaviour into the code delivers  things that aren't well though through to customers. \r\n4. When the cmdlet doesn't write it , a proxy function can  https://gist.github.com/jhoneill/f8ddd4e4e0a25c22d77749166d6f14fe  it hasn't been made \"secure\", it has just means the way to see what the call is going is now confined to those who know a cmdlet called by an unqualified name can be intercepted (by design). If this were used maliciously it would capture headers and bodies where secure information tends to live. Net things are less secure. \r\nNet result: inconvenience and less security. \r\n\r\n<blockquote><img src=\"https://github.githubassets.com/images/modules/gists/gist-og-image.png\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> Gist</div><div><strong><a href=\"https://gist.github.com/jhoneill/f8ddd4e4e0a25c22d77749166d6f14fe\">Invoke-RestMethod.ps1</a></strong></div><div>GitHub Gist: instantly share code, notes, and snippets.</div></blockquote>",
      "created_at": "2021-11-18T09:27:05Z",
      "updated_at": "2021-11-18T09:29:00Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "WG-Security\r\nOriginal issue: https://github.com/PowerShell/PowerShell/issues/14417\r\n\r\nThis was determined to be a low severity information disclosure issue when writing the URI by default.  The original change was to never write the URI, but we could add a parameter to optionally write it.  @jhoneill please create a feature request for this.\r\n",
      "created_at": "2021-11-29T22:29:18Z",
      "updated_at": "2021-11-29T22:29:18Z"
    },
    {
      "author": "jhoneill",
      "author_association": "NONE",
      "body": "> WG-Security Original issue: #14417\r\n> \r\n> This was determined to be a low severity information disclosure issue when writing the URI by default. The original change was to never write the URI, but we could add a parameter to optionally write it. @jhoneill please create a feature request for this.\r\n\r\nThanks Paul. I've commented to #14417  - that asked for something **optional**  -verbose:false would do the job when you know you're creating an API with sensitive info in it, not to break things for REST developers ... all teams make good and bad decisions, the powershell team has plenty in the \"good column\", but this ain't one. The change wants undoing, when I see complaints I'll point people to that proxy function. \r\n",
      "created_at": "2021-11-29T23:33:31Z",
      "updated_at": "2021-11-29T23:33:31Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2021-12-01T00:00:39Z",
      "updated_at": "2021-12-01T00:00:39Z"
    }
  ],
  "created_at": "2021-11-17T12:47:06Z",
  "number": 16481,
  "state": "closed",
  "title": "Invoke-RestMethod -verbose does not show URL",
  "updated_at": "2021-12-01T00:00:40Z"
}