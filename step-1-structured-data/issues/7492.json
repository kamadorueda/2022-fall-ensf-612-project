{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7492",
  "author": "msftrncs",
  "body": "Steps to reproduce\r\n------------------\r\nHave a folder that has another folder, and that folder having a file.\r\n\\foo\r\n\\foo\\bar\r\n\\foo\\bar\\foo bar.txt\r\n\r\nTry to use the following to find the TXT file.\r\n```powershell\r\nget-childitem -file '\\foo\\*a*' -recurse\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\nan object returned that contains foo bar.txt\r\n\r\nThis is expected because -file should only restrict the output, not the input\r\n\r\nActual behavior\r\n---------------\r\nno object is instead returned\r\n\r\nIt appears that the input wildcard path is being filtered by -file before -recurse can occur.  If at least one file matches, then the recursion will occur.  So now create file \\foo\\bar.txt, and the expected behavior will occur, but also \\foo\\bar.txt also appears in the result object (it does match the wildcard).\r\n\r\nNow add \\foo\\foo and copy \\foo\\bar.txt to \\foo\\foo.  This location of the file will also be included, indicating that the wildcard in the path is only restricting the output, not the available folders in recursion.  Remove \\foo\\bar.txt and the problem returns of no output.\r\n\r\nI am considering this an issue as it relates to the fact that path input to Get-ChildItem could have been supplied by someone less familiar with PowerShell and Get-ChildItem, as they were provided the script, or the script simply provides a prompt.  It otherwise works fine if wildcards are not included in -path, but instead in -filter or -include.\r\n\r\nEnvironment data\r\n----------------\r\n\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.3\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.3\r\nOS                             Microsoft Windows 10.0.17134\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n```\r\n",
  "closed_at": "2021-11-30T20:00:43Z",
  "comments": [
    {
      "author": "msftrncs",
      "author_association": "CONTRIBUTOR",
      "body": "I ran in to this, because I was trying to get a listing of all files without an extension:\r\n`dir *. -file`\r\ndoesn't work.  CMD 'dir /a-d *.' recognizes this as get only files without extensions.  However I did catch it find a file '.sou', or other files and folders that start with a '.' and don't have any additional '.'s.\r\n`dir -file -filter *.` \r\ndoes work as did this:\r\n`dir .\\* -file -exclude *.*`\r\nif you just try:\r\n`dir *.`\r\nit works except it includes directories.",
      "created_at": "2018-08-10T00:14:58Z",
      "updated_at": "2018-08-10T00:14:58Z"
    },
    {
      "author": "jckenny",
      "author_association": "NONE",
      "body": "I think this is a related issue. The -File and -Exclude parameters don't work when used together.\r\n\r\nCount of files without any exclusions\r\n`PS C:\\Program Files\\PowerShell\\6.0.4> (Get-ChildItem).count`\r\n`389`\r\n\r\nCount of files when excluding pwsh.exe\r\n`PS C:\\Program Files\\PowerShell\\6.0.4> (Get-ChildItem -Exclude pwsh.exe).count`\r\n`388`\r\n\r\nCount of files when excluding pwsh.exe and only listing files\r\n`PS C:\\Program Files\\PowerShell\\6.0.4> (Get-ChildItem -Exclude pwsh.exe -file).count`\r\n`0`\r\n",
      "created_at": "2018-08-23T18:56:14Z",
      "updated_at": "2018-08-23T18:56:14Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Dup #9014",
      "created_at": "2021-11-29T17:41:02Z",
      "updated_at": "2021-11-29T17:41:02Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as duplicate and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2021-11-30T20:00:43Z",
      "updated_at": "2021-11-30T20:00:43Z"
    }
  ],
  "created_at": "2018-08-09T23:39:26Z",
  "number": 7492,
  "state": "closed",
  "title": "get-childitem with -recurse and -file won't recurse on wildcard match",
  "updated_at": "2021-11-30T20:00:43Z"
}