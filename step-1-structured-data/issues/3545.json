{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3545",
  "author": "0xfeeddeadbeef",
  "body": "Steps to reproduce\r\n------------------\r\nI dont know why would anyone do this, but here it goes: you cannot launch another `powershell.exe` using `Start-Process` cmdlet with `-UseNewEnvironment` switch.\r\n\r\nWindows PowerShell:\r\n```\r\nStart-Process -FilePath C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -NoNewWindow -UseNewEnvironment\r\n```\r\n\r\nPowerShell Core (Debug build):\r\n```\r\nStart-Process -FilePath .\\powershell.exe -NoNewWindow -UseNewEnvironment\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\nA new instance of powershell.exe console should start.\r\n\r\nActual behavior\r\n---------------\r\nWindows PowerShell outputs error and dies:\r\n```\r\nInternal Windows PowerShell error.  Loading managed Windows PowerShell failed with error 8009001d.\r\n```\r\n\r\nPowerShell Core (Debug build) outputs more errors + assert message and dies:\r\n```\r\nError resolving full path []\r\nError resolving full path []\r\nPowerShell\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nThe shell cannot be started. A failure occurred during initialization:\r\nASSERT: caller makes sure it's not null or empty\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value\r\n----                           -----\r\nPSVersion                      5.1.14409.1005\r\nPSEdition                      Desktop\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nBuildVersion                   10.0.14409.1005\r\nCLRVersion                     4.0.30319.42000\r\nWSManStackVersion              3.0\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\n\r\n> $PSVersionTable\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.0-alpha\r\nGitCommitId                    v6.0.0-alpha.18-9-g8d4db01a5d4b5dcd981ef216d3d7f24b484c7c60-dirty\r\nWSManStackVersion              3.0\r\nCLRVersion\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nBuildVersion                   3.0.0.0\r\nPSRemotingProtocolVersion      2.3\r\nPSEdition                      Core\r\nSerializationVersion           1.1.0.1\r\n```",
  "closed_at": "2020-04-18T00:19:14Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "It seems we have two problems.\r\n\r\n>Error resolving full path []\r\n>The shell cannot be started. A failure occurred during initialization:\r\nASSERT: caller makes sure it's not null or empty\r\n\r\nThe first, I fixed by restore \"ProgramFiles\" and \"ProgramFiles(X86)\"environment variables for subprocess.\r\nI don't understand how PowerShell use it in start time and perhaps my fix is not in right place.\r\n\r\nThe second problem is that new PowerShell process get wrong cursor position in the same console windows. I belive we should open new trackig Issue.",
      "created_at": "2017-04-17T14:29:20Z",
      "updated_at": "2017-04-17T14:29:20Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "What `-UseNewEnvironment` appears to be doing is to define _only_ the variables that are _explicitly_ defined, as displayed in System Properties (`sysdm.cpl`) (with user-level definitions taking precedence over system-level ones, as usual).\r\n\r\nHowever, **the _implicitly_ defined environment variables are missing**, among them the two @iSazonov mentions.\r\n\r\nAdditionally, `$env:USERNAME` contains `SYSTEM`, because it is explicitly defined as a system-level variable, but not at the user level (where it is normally implicitly defined to reflect the current user).\r\n\r\nList of missing, normally implicitly defined environment variables (I don't know what mechanism defines them by default):\r\n\r\n```none\r\nALLUSERSPROFILE\r\nAPPDATA\r\nCommonProgramFiles\r\nCommonProgramFiles(x86)\r\nCommonProgramW6432\r\nCOMPUTERNAME\r\nHOMEDRIVE\r\nHOMEPATH\r\nLOCALAPPDATA\r\nLOGONSERVER\r\nProgramData\r\nProgramFiles\r\nProgramFiles(x86)\r\nProgramW6432\r\nPUBLIC\r\nSESSIONNAME\r\nSystemDrive\r\nSystemRoot\r\nUSERDOMAIN\r\nUSERDOMAIN_ROAMINGPROFILE\r\nUSERPROFILE\r\n```\r\n\r\n@iSazonov:\r\n\r\n> The second problem is that new PowerShell process get wrong cursor position in the same console windows. I belive we should open new trackig Issue.\r\n\r\nI think that's an artifact of using `-NoNewWindow` without `-Wait`, which makes the output appear asynchronously.\r\n\r\n(Normally, if you wanted to run a console app synchronously in the _same_ window you wouldn't use `Start-Process` at all; my guess is that @0xfeeddeadbeef only included `-NoNewWindow` so that the error message would show; without it, you'd just see a new window opening and closing right away.)",
      "created_at": "2017-08-07T15:41:01Z",
      "updated_at": "2017-08-07T15:41:01Z"
    },
    {
      "author": "GeeLaw",
      "author_association": "NONE",
      "body": "On Windows, you should use `CreateEnvironmentBlock` function to create a complete block of environment variables for a specified user.",
      "created_at": "2018-06-18T16:00:37Z",
      "updated_at": "2018-06-18T16:00:37Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:This issue was addressed in #10830, which has now been successfully released as `v7.1.0-preview.2`.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.1.0-preview.2)\n",
      "created_at": "2020-04-23T18:03:56Z",
      "updated_at": "2020-04-23T18:03:56Z"
    }
  ],
  "created_at": "2017-04-12T19:58:47Z",
  "number": 3545,
  "state": "closed",
  "title": "Start-Process fails to launch new powershell.exe instance with -UseNewEnvironment switch",
  "updated_at": "2020-04-23T18:03:57Z"
}