{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9880",
  "author": "PrzemyslawKlys",
  "body": "Issue Description\r\n=====\r\n\r\nI am experiencing a problem with... Dynamic Parameters within a script block. Following gif shows the problem. \r\n\r\n![Problem-VSCodeDynamicParameters](https://user-images.githubusercontent.com/15063294/59164194-264c9e00-8b0a-11e9-9916-4096e1ee8f1e.gif)\r\n\r\nI am actually not quite sure on the behavior but it seems that DynamicParameters are not expanded when using inside ScriptBlock. It's missing 3 dynamic parameters that I have defined. Outside of scriptblock, it works fine.\r\n\r\nThis is how the function looks like:\r\n\r\n```powershell\r\nfunction New-HTMLTab {\r\n    [CmdLetBinding(DefaultParameterSetName = 'FontAwesomeBrands')]\r\n    param(\r\n        [parameter(ParameterSetName = \"FontAwesomeBrands\")]\r\n        [parameter(ParameterSetName = \"FontAwesomeRegular\")]\r\n        [parameter(ParameterSetName = \"FontAwesomeSolid\")]\r\n        [Parameter(Mandatory = $false, Position = 0)][ValidateNotNull()][ScriptBlock] $HtmlData = $(Throw \"No curly brace?)\"),\r\n        [parameter(ParameterSetName = \"FontAwesomeBrands\")]\r\n        [parameter(ParameterSetName = \"FontAwesomeRegular\")]\r\n        [parameter(ParameterSetName = \"FontAwesomeSolid\")]\r\n        [alias('TabHeading')][Parameter(Mandatory = $false, Position = 1)][String]$Heading,\r\n        [parameter(ParameterSetName = \"FontAwesomeBrands\")]\r\n        [parameter(ParameterSetName = \"FontAwesomeRegular\")]\r\n        [parameter(ParameterSetName = \"FontAwesomeSolid\")]\r\n        [alias('TabName')][string] $Name\r\n    )\r\n    DynamicParam {\r\n        $ParameterSetBrands = New-Object System.Management.Automation.ParameterAttribute\r\n        $ParameterSetBrands.Mandatory = $false\r\n        $ParameterSetBrands.ParameterSetName = 'FontAwesomeBrands'\r\n\r\n        $ParameterSetRegular = New-Object System.Management.Automation.ParameterAttribute\r\n        $ParameterSetRegular.Mandatory = $false\r\n        $ParameterSetRegular.ParameterSetName = 'FontAwesomeRegular'\r\n\r\n        $ParameterSetSolid = New-Object System.Management.Automation.ParameterAttribute\r\n        $ParameterSetSolid.Mandatory = $false\r\n        $ParameterSetSolid.ParameterSetName = 'FontAwesomeSolid'\r\n\r\n\r\n        $IconsBrands = New-Object  System.Collections.ObjectModel.Collection[System.Attribute]\r\n        $IconsBrands.Add($ParameterSetBrands)\r\n        $IconsBrands.Add((New-Object System.Management.Automation.ValidateSetAttribute($Script:FontAwesomeBrands)))\r\n        $IconsBrandsRuntime = New-Object System.Management.Automation.RuntimeDefinedParameter('IconBrands', [string], $IconsBrands)\r\n        #$IconsBrandsRuntime.Value = 'safari'\r\n\r\n        $IconsRegular = New-Object  System.Collections.ObjectModel.Collection[System.Attribute]\r\n        $IconsRegular.Add($ParameterSetRegular)\r\n        $IconsRegular.Add((New-Object System.Management.Automation.ValidateSetAttribute($Script:FontAwesomeRegular)))\r\n        $IconsRegularRuntime = New-Object System.Management.Automation.RuntimeDefinedParameter('IconRegular', [string], $IconsRegular)\r\n\r\n        $IconsSolid = New-Object  System.Collections.ObjectModel.Collection[System.Attribute]\r\n        $IconsSolid.Add($ParameterSetSolid)\r\n        $IconsSolid.Add((New-Object System.Management.Automation.ValidateSetAttribute($Script:FontAwesomeSolid)))\r\n        $IconsSolidRuntime = New-Object System.Management.Automation.RuntimeDefinedParameter('IconSolid', [string], $IconsSolid)\r\n\r\n        # Finalization\r\n        $RuntimeParamDic = New-Object System.Management.Automation.RuntimeDefinedParameterDictionary\r\n        $RuntimeParamDic.Add('IconBrands', $IconsBrandsRuntime)\r\n        $RuntimeParamDic.Add('IconRegular', $IconsRegularRuntime)\r\n        $RuntimeParamDic.Add('IconSolid', $IconsSolidRuntime)\r\n        return $RuntimeParamDic\r\n    } \r\n    End {\r\n\r\n    }\r\n\r\n}\r\n```\r\n\r\nAttached Logs\r\n=====\r\n\r\nFollow the instructions in the [README](https://github.com/PowerShell/vscode-powershell%23reporting-problems) about\r\ncapturing and sending logs.\r\n\r\n[1560113331-d265095b-ac02-467c-8c8b-912394121ba51560113328300.zip](https://github.com/PowerShell/vscode-powershell/files/3269960/1560113331-d265095b-ac02-467c-8c8b-912394121ba51560113328300.zip)\r\n\r\nEnvironment Information\r\n=====\r\n\r\nVisual Studio Code\r\n-----\r\n\r\n| Name | Version |\r\n| --- | --- |\r\n| Operating System | Windows_NT x64 10.0.18362 |\r\n| VSCode | 1.35.0|\r\n| PowerShell Extension Version | 2019.5.0 |\r\n\r\nPowerShell Information\r\n-----\r\n\r\n|Name|Value|\r\n|---|---|\r\n|PSVersion|5.1.18362.113|\r\n|PSEdition|Desktop|\r\n|PSCompatibleVersions|1.0 2.0 3.0 4.0 5.0 5.1.18362.113|\r\n|BuildVersion|10.0.18362.113|\r\n|CLRVersion|4.0.30319.42000|\r\n|WSManStackVersion|3.0|\r\n|PSRemotingProtocolVersion|2.3|\r\n|SerializationVersion|1.1.0.1|\r\n\r\n\r\n\r\nVisual Studio Code Extensions\r\n-----\r\n\r\n<details><summary>Visual Studio Code Extensions(Click to Expand)</summary>\r\n\r\n\r\n|Extension|Author|Version|\r\n|---|---|---|\r\n|beautify|HookyQR|1.5.0|\r\n|bracket-pair-colorizer-2|CoenraadS|0.0.28|\r\n|code-settings-sync|Shan|3.2.9|\r\n|githistory|donjayamanne|0.4.6|\r\n|gitlens|eamodio|9.8.1|\r\n|markdown-all-in-one|yzhang|2.3.1|\r\n|markdown-preview-enhanced|shd101wyy|0.4.1|\r\n|material-icon-theme|PKief|3.8.0|\r\n|polacode|pnp|0.3.2|\r\n|powershell|ms-vscode|2019.5.0|\r\n|project-manager|alefragnani|10.5.2|\r\n|rainbow-csv|mechatroner|1.1.1|\r\n|theme-monokai-pro-vscode|monokai|1.1.13|\r\n|vscode-pull-request-github|GitHub|0.8.0|\r\n|vscode-wakatime|WakaTime|2.1.2|\r\n|xml|DotJoshJohnson|2.5.0|",
  "closed_at": null,
  "comments": [
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "@PrzemyslawKlys I tried reproducing this on my Mac and it gave me the dynamic parameters inside the scriptblock.\r\n\r\nHave you tried reproducing this in the PowerShell console on your machine?\r\n\r\nWe get our completions from PowerShell, so it might be a Windows PowerShell bug.",
      "created_at": "2019-06-12T21:07:44Z",
      "updated_at": "2019-06-12T21:07:44Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "<img width=\"804\" alt=\"Screen Shot 2019-06-12 at 14 08 14\" src=\"https://user-images.githubusercontent.com/7009879/59386452-8f573000-8d1b-11e9-8b33-ce2ee6de6cc0.png\">\r\n",
      "created_at": "2019-06-12T21:08:36Z",
      "updated_at": "2019-06-12T21:08:36Z"
    },
    {
      "author": "PrzemyslawKlys",
      "author_association": "NONE",
      "body": "You need to open another script block to reproduce it.\r\n\r\n```powershell\r\nfunction New-HTMLTab11 {\r\n    [CmdLetBinding(DefaultParameterSetName = 'FontAwesomeBrands')]\r\n    param(\r\n        [parameter(ParameterSetName = \"FontAwesomeBrands\")]\r\n        [parameter(ParameterSetName = \"FontAwesomeRegular\")]\r\n        [parameter(ParameterSetName = \"FontAwesomeSolid\")]\r\n        [Parameter(Mandatory = $false, Position = 0)][ValidateNotNull()][ScriptBlock] $HtmlData = $(Throw \"No curly brace?)\"),\r\n        [parameter(ParameterSetName = \"FontAwesomeBrands\")]\r\n        [parameter(ParameterSetName = \"FontAwesomeRegular\")]\r\n        [parameter(ParameterSetName = \"FontAwesomeSolid\")]\r\n        [alias('TabHeading')][Parameter(Mandatory = $false, Position = 1)][String]$Heading,\r\n        [parameter(ParameterSetName = \"FontAwesomeBrands\")]\r\n        [parameter(ParameterSetName = \"FontAwesomeRegular\")]\r\n        [parameter(ParameterSetName = \"FontAwesomeSolid\")]\r\n        [alias('TabName')][string] $Name\r\n    )\r\n    DynamicParam {\r\n        $ParameterSetBrands = New-Object System.Management.Automation.ParameterAttribute\r\n        $ParameterSetBrands.Mandatory = $false\r\n        $ParameterSetBrands.ParameterSetName = 'FontAwesomeBrands'\r\n\r\n        $ParameterSetRegular = New-Object System.Management.Automation.ParameterAttribute\r\n        $ParameterSetRegular.Mandatory = $false\r\n        $ParameterSetRegular.ParameterSetName = 'FontAwesomeRegular'\r\n\r\n        $ParameterSetSolid = New-Object System.Management.Automation.ParameterAttribute\r\n        $ParameterSetSolid.Mandatory = $false\r\n        $ParameterSetSolid.ParameterSetName = 'FontAwesomeSolid'\r\n\r\n\r\n        $IconsBrands = New-Object  System.Collections.ObjectModel.Collection[System.Attribute]\r\n        $IconsBrands.Add($ParameterSetBrands)\r\n        $IconsBrands.Add((New-Object System.Management.Automation.ValidateSetAttribute($Script:FontAwesomeBrands)))\r\n        $IconsBrandsRuntime = New-Object System.Management.Automation.RuntimeDefinedParameter('IconBrands', [string], $IconsBrands)\r\n        #$IconsBrandsRuntime.Value = 'safari'\r\n\r\n        $IconsRegular = New-Object  System.Collections.ObjectModel.Collection[System.Attribute]\r\n        $IconsRegular.Add($ParameterSetRegular)\r\n        $IconsRegular.Add((New-Object System.Management.Automation.ValidateSetAttribute($Script:FontAwesomeRegular)))\r\n        $IconsRegularRuntime = New-Object System.Management.Automation.RuntimeDefinedParameter('IconRegular', [string], $IconsRegular)\r\n\r\n        $IconsSolid = New-Object  System.Collections.ObjectModel.Collection[System.Attribute]\r\n        $IconsSolid.Add($ParameterSetSolid)\r\n        $IconsSolid.Add((New-Object System.Management.Automation.ValidateSetAttribute($Script:FontAwesomeSolid)))\r\n        $IconsSolidRuntime = New-Object System.Management.Automation.RuntimeDefinedParameter('IconSolid', [string], $IconsSolid)\r\n\r\n        # Finalization\r\n        $RuntimeParamDic = New-Object System.Management.Automation.RuntimeDefinedParameterDictionary\r\n        $RuntimeParamDic.Add('IconBrands', $IconsBrandsRuntime)\r\n        $RuntimeParamDic.Add('IconRegular', $IconsRegularRuntime)\r\n        $RuntimeParamDic.Add('IconSolid', $IconsSolidRuntime)\r\n        return $RuntimeParamDic\r\n    }\r\n    End {\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction New-Test {\r\n    param(\r\n        [ScriptBlock] $Test,\r\n        [string] $TitleText\r\n    )\r\n}\r\n\r\n\r\nNew-Test -TitleText 'test' {\r\n    New-HTMLTab11 {\r\n\r\n    }\r\n}\r\n```\r\n\r\nUntil you open `New-HTMLTab11` it works.. when you add { } it stops doing that. I can reproduce it on 6.2 in VSCode. Haven't tried in Console as I never edited anything in there.",
      "created_at": "2019-06-12T21:13:19Z",
      "updated_at": "2019-06-12T21:15:57Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "Does this happen in the ordinary PowerShell console? This looks like it's probably a bug in PowerShell's [completer code](https://github.com/PowerShell/PowerShell/blob/master/src/System.Management.Automation/engine/CommandCompletion/CompletionCompleters.cs).\r\n\r\nThere's not much we can do about it in the PowerShell extension, but it's worth trying in PowerShell 7 and if it's not fixed we should open a bug on PowerShell.",
      "created_at": "2019-06-12T21:16:08Z",
      "updated_at": "2019-06-12T21:16:08Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "> I can reproduce it on 6.2 in VSCode\r\n\r\nAh probably still a bug in PowerShell then",
      "created_at": "2019-06-12T21:16:43Z",
      "updated_at": "2019-06-12T21:16:43Z"
    },
    {
      "author": "PrzemyslawKlys",
      "author_association": "NONE",
      "body": "It's like ScriptBlock within a ScritpBlock is blocking it. Until I open brackets for New-HTMLTab11 autocomplete works fine. You can test above code on Mac. ",
      "created_at": "2019-06-12T21:18:11Z",
      "updated_at": "2019-06-12T21:18:11Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "Just to clarify I don't think it's the parent script block, but instead the script block to the right that is throwing off tab completion. `New-HTMLTab -<tab>` works, `New-HTMLTab -<tab> {}` does not.  The psuedo parameter binding that completion uses to determine available parameters may not take dynamic parameters into account when there's a positional argument.\r\n\r\nThe easiest workaround for now is to just add a <kbd>#</kbd> before the <kbd>{</kbd> and then remove it after completion.",
      "created_at": "2019-06-13T11:43:07Z",
      "updated_at": "2019-06-13T11:43:07Z"
    },
    {
      "author": "PrzemyslawKlys",
      "author_association": "NONE",
      "body": "I've actually removed dynamic parameters for my case because of this. It's not a priority for me now although having 1400 strings in ValidateSet doesnt' look pretty :-) But hoping for a fix for future releases.",
      "created_at": "2019-06-13T11:50:23Z",
      "updated_at": "2019-06-13T11:50:23Z"
    }
  ],
  "created_at": "2019-06-09T21:03:28Z",
  "number": 9880,
  "state": "open",
  "title": "No completions for dynamic parameters on command in scriptblock",
  "updated_at": "2019-06-13T11:50:23Z"
}