{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4623",
  "author": "secabstraction",
  "body": "<!--\r\n\r\nIf it is a bug report:\r\n- make sure you are able to repro it on the latest released version. \r\nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\r\n- Search the existing issues.\r\n- Refer to the [FAQ](../docs/FAQ.md).\r\n- Refer to the [known issues](../docs/KNOWNISSUES.md).\r\n- Fill out the following repro template\r\n\r\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\r\n-->\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\nInvoke-RestMethod -ErrorAction SilentlyContinue -ErrorVariable RestError -Uri http://nowhere\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```none\r\nError suppressed for custom error handling. RestError variable is created and error inserted into collection.\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n```none\r\nError thrown in current runspace and passed to RestError\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value                                                                                                                   \r\n----                           -----                                                                                                                   \r\nPSVersion                      6.0.0-beta                                                                                                              \r\nPSEdition                      Core                                                                                                                    \r\nGitCommitId                    v6.0.0-beta.5                                                                                                           \r\nOS                             Darwin 16.7.0 Darwin Kernel Version 16.7.0: Thu Jun 15 17:36:27 PDT 2017; root:xnu-3789.70.16~2/RELEASE_X86_64          \r\nPlatform                       Unix                                                                                                                    \r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}                                                                                                 \r\nPSRemotingProtocolVersion      2.3                                                                                                                     \r\nSerializationVersion           1.1.0.1                                                                                                                 \r\nWSManStackVersion              3.0                                \r\n```\r\n",
  "closed_at": "2017-08-21T04:53:03Z",
  "comments": [
    {
      "author": "secabstraction",
      "author_association": "NONE",
      "body": "I repro'd this on OS X as I'm working on cross-platform support for a project using PowerShell, but this same behavior also occurs on Windows 10, PowerShell v5.1.",
      "created_at": "2017-08-20T16:18:22Z",
      "updated_at": "2017-08-20T16:18:22Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "The error you're provoking is a statement-_terminating_ one, whereas the common `-ErrorAction` parameter only applies to _non-terminating_ errors.\r\n\r\nTo catch a _terminating_ error, you must use either a `try` / `catch` or a `trap` statement.\r\n\r\nThis dichotomy between non-terminating and terminating errors has always existed, but was never explained well; see [Our Error Handling, Ourselves - time to fully understand and properly document PowerShell's error handling](https://github.com/PowerShell/PowerShell-Docs/issues/1583).",
      "created_at": "2017-08-20T19:52:14Z",
      "updated_at": "2017-08-20T19:52:14Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "P.S: What you're looking for is:\r\n\r\n```powershell\r\n$RestError = $null\r\nTry {\r\n  Invoke-RestMethod -Uri http://nowhere\r\n} Catch {\r\n  $RestError = $_\r\n}\r\n```",
      "created_at": "2017-08-20T19:58:47Z",
      "updated_at": "2017-08-20T19:58:47Z"
    },
    {
      "author": "secabstraction",
      "author_association": "NONE",
      "body": "Thanks. I remember now that I've come across this before, but was clearly blanking on the terminating errors piece.",
      "created_at": "2017-08-21T04:53:03Z",
      "updated_at": "2017-08-21T04:53:03Z"
    }
  ],
  "created_at": "2017-08-20T16:16:46Z",
  "labels": [
    "Resolution-Answered",
    "WG-Cmdlets-Utility"
  ],
  "number": 4623,
  "state": "closed",
  "title": "Invoke-RestMethod does not respect error action preference.",
  "updated_at": "2017-08-22T15:41:53Z"
}