{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5326",
  "author": "bergmeister",
  "body": "When `IDynamicParameters.GetDynamicParameters()` gets called via tab completion, the parameters of the cmdlet are not fully parsed, i.e. if a user specifies e.g. `Parameter1`via commandline as `-Parameter1 'myparameter'` using either single or double quotes, then the quotes are still present in the C# string. This does not happen at the point of execution. Is there a better workaround to replacing the quotes by calling some other internal method instead? Is this an issue with the `TabExpansion2` method or `PSReadLine` or something else?\r\n\r\nSteps to reproduce\r\n------------------\r\nFirst Compile the following in a classic .Net library project and then import the dll into PowerShell using `Import-Module`\r\n```c#\r\nusing System;\r\nusing System.Management.Automation;\r\n\r\nnamespace ClassLibrary1\r\n{\r\n    [Cmdlet(\"Test\", \"TabCompletion\")]\r\n    public class TestCmdlet : Cmdlet, IDynamicParameters\r\n    {\r\n        [Parameter(Mandatory = true)]\r\n        public string Parameter1 { get; set; }\r\n\r\n        public object GetDynamicParameters()\r\n        {\r\n            if (!string.IsNullOrEmpty(Parameter1))\r\n            {\r\n                if (Parameter1.StartsWith(\"\\\"\") || Parameter1.StartsWith(\"\\'\"))\r\n                {\r\n                    throw new Exception(\"Bug: PowerShell has not fully parsed already given input parameter and left the quotes from the command line input\");\r\n                }\r\n            }\r\n            // Here would be some logic to return a dynamic parameter based on the input of non-dynamic parameters\r\n            return null;\r\n        }\r\n\r\n        protected override void ProcessRecord()\r\n        {\r\n            WriteObject(Parameter1);\r\n        }\r\n    }\r\n}\r\n```\r\n```powershell\r\nImport-Module $pathToCompiledDll\r\n# Attach VS debugger to powershell process\r\nTest-TabCompletion -Parameter1 \"test\" # do not execute this line but  press 'tab' to invoke tab completion\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n`Parameter1` should have the value `test` (as observed in the VS debugger since `GetDynamicParameters` suppress any raised exceptions)\r\n\r\nActual behavior\r\n---------------\r\n`Parameter1` has the value `\"test\"`\r\n\r\nNotes: Similarly, single quotes remain as well. If one would have used an interpolated string like `\"test$number\"`, then one would get the value `\"test$number\"`, whereas `\"test$($number)\"`\r\n would at least give `\"test1\"`\r\nThis bug also occurs in Windows PowerShell 5.1\r\n\r\nEnvironment data\r\n----------------\r\n\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.0-beta.8\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.0-beta.8\r\nOS                             Microsoft Windows 6.3.9600\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```",
  "closed_at": "2022-07-18T22:32:07Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Related or dup #5093 ",
      "created_at": "2017-11-03T12:07:41Z",
      "updated_at": "2017-11-03T12:07:41Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "@daxian-dbw That's the issue that I was talking about with you at psconf after your talk in case you are interested.",
      "created_at": "2018-04-18T07:52:38Z",
      "updated_at": "2018-04-18T07:52:38Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:This issue was addressed in #17661, which has now been successfully released as `v7.3.0-preview.7`.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.3.0-preview.7)\n",
      "created_at": "2022-08-11T23:59:50Z",
      "updated_at": "2022-08-11T23:59:50Z"
    }
  ],
  "created_at": "2017-11-03T11:18:19Z",
  "number": 5326,
  "state": "closed",
  "title": "Parameters not fully parsed when IDynamicParameters.GetDynamicParameters() is called by tab completion",
  "updated_at": "2022-08-11T23:59:50Z"
}