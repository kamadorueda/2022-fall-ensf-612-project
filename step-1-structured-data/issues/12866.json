{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12866",
  "author": "daxian-dbw",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\n- Update Linux daily build to run tests in a single agent\r\n- Collect CLR traces in Windows daily build\r\n   - Download the CAP utility package from https://pscoretestdata.blob.core.windows.net/dotnet-cap/windows.zip\r\n   - Start trace collection before test run\r\n   - Stop trace collection after test run\r\n\r\nBuild using `linux-daily.yml`: https://dev.azure.com/powershell/PowerShell/_build/results?buildId=54399&view=results\r\nBuild using `windows-daily.yml`: https://dev.azure.com/powershell/PowerShell/_build/results?buildId=54125&view=results\r\n\r\nTrace collection in Linux daily build is not included in this PR. I got some issues installing `perfcollect` in the CI environment.\r\nI will submit a separate PR after resolving the issues.\r\n\r\n## Background\r\n\r\nThis is to implement CLR Customer Assistance Program (CAP):\r\n\r\n> The CLR CAP was created with two goals in mind: proactively help partner teams resolve CLR related issues and help the our team gain better insights into how the CLR is performing on first party services. The CLR CAP is 100% based on the collection and analysis of events in CLR (ETW in Windows for .NET Frameworks and EventPipe technology for .NET Core runtime).\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2020-06-02T18:33:28Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> Collect CLR traces in Windows daily build\r\n\r\nCan you share more information about this?",
      "created_at": "2020-06-02T04:33:19Z",
      "updated_at": "2020-06-02T04:33:19Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@iSazonov CLR Customer Assistance Program (CAP):\r\n> The CLR CAP was created with two goals in mind: proactively help partner teams resolve CLR related issues and help the our team gain better insights into how the CLR is performing on first party services. The CLR CAP is 100% based on the collection and analysis of events in CLR (ETW in Windows for .NET Frameworks and EventPipe technology for .NET Core runtime).",
      "created_at": "2020-06-02T06:21:15Z",
      "updated_at": "2020-06-02T06:21:15Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.1.0-preview.4` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.1.0-preview.4)\n",
      "created_at": "2020-06-25T19:03:50Z",
      "updated_at": "2020-06-25T19:03:50Z"
    }
  ],
  "created_at": "2020-06-02T00:30:05Z",
  "number": 12866,
  "state": "closed",
  "title": "Update Linux daily CI to run in a single agent & collect traces",
  "updated_at": "2020-06-25T19:03:50Z"
}