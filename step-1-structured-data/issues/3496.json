{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3496",
  "author": "davidrea-MS",
  "body": "<!--\r\n\r\nIf it is a bug report:\r\n- make sure you are able to repro it on the latest released version. \r\nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\r\n- Search the existing issues.\r\n- Refer to the [FAQ](../docs/FAQ.md).\r\n- Refer to the [known issues](../docs/KNOWNISSUES.md).\r\n- Fill out the following repro template\r\n\r\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\r\n-->\r\n\r\nSteps to reproduce\r\n------------------\r\n```([System.Text.Encoding][System.Text.Encoding]::Unicode).GetMaxByteCount(1)```\r\n\r\nExpected behavior\r\n-----------------\r\nThe value ```4``` should be returned.\r\n\r\nActual behavior\r\n---------------\r\n```\r\nException calling \"GetMaxByteCount\" with \"1\" argument(s): \"Bad IL format.\"\r\nAt line:1 char:1\r\n+ ([System.Text.Encoding][System.Text.Encoding]::Unicode).GetMaxByteCou ...\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : NotSpecified: (:) [], MethodInvocationException\r\n    + FullyQualifiedErrorId : BadImageFormatException\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\n\r\nName                           Value                                                                                                                                                                                                \r\n----                           -----                                                                                                                                                                                                \r\nPSVersion                      5.1.14393.953                                                                                                                                                                                        \r\nPSEdition                      Desktop                                                                                                                                                                                              \r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}                                                                                                                                                                              \r\nBuildVersion                   10.0.14393.953                                                                                                                                                                                       \r\nCLRVersion                     4.0.30319.42000                                                                                                                                                                                      \r\nWSManStackVersion              3.0                                                                                                                                                                                                  \r\nPSRemotingProtocolVersion      2.3                                                                                                                                                                                                  \r\nSerializationVersion           1.1.0.1   \r\n```\r\n\r\nOther Information\r\n---------------\r\n\r\nThis appears to occur whenever an overridden abstract method is called on an object cast to its abstract base type.\r\n```\r\nAdd-Type -TypeDefinition @\"\r\npublic abstract class Foo\r\n{\r\n    public abstract int GetAbstractValue();\r\n\r\n    public virtual int GetVirtualValue()\r\n    {\r\n        return 1;\r\n    }\r\n\r\n    public int GetValue()\r\n    {\r\n        return 1;\r\n    }\r\n}\r\n\r\npublic class Bar : Foo\r\n{\r\n    public override int GetAbstractValue()\r\n    {\r\n        return 1;\r\n    }\r\n\r\n    public override int GetVirtualValue()\r\n    {\r\n        return 1;\r\n    }\r\n}\r\n\r\npublic static class Test\r\n{\r\n    public static int CSharp()\r\n    {\r\n        Bar bar = new Bar();\r\n        return ((Foo)bar).GetAbstractValue();\r\n    }\r\n}\r\n\"@\r\n\r\n$bar = New-Object Bar\r\n\r\n# correctly returns value\r\n$bar.GetAbstractValue()\r\n\r\n# throws BadImageFormatException\r\n([Foo]$bar).GetAbstractValue()\r\n\r\n# works in equivalent C# code\r\n[Test]::CSharp() \r\n```\r\n\r\nInterestingly if I run the above in a new ISE window, it works the first time, but fails on subsequent executions.\r\n",
  "closed_at": null,
  "comments": [],
  "created_at": "2017-04-06T16:27:53Z",
  "number": 3496,
  "state": "open",
  "title": "BadImageFormatException calling abstract method when cast to base type",
  "updated_at": "2017-04-06T23:18:00Z"
}