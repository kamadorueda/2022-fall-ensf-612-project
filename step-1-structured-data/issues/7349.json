{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7349",
  "author": "mklement0",
  "body": "[Obsoleted by #9582.]\r\n\r\nBased on the discussion in https://github.com/PowerShell/PowerShell/issues/5503, the assumption is that `Remove-Module` operates at the _session-state_ level, which implies that calling it from any scope should unload the module _and remove its imports_ from _all_ scopes in the session.\r\n\r\nHowever, it seems that if a module is imported both in a given scope and then also _locally_ in a _child_ scope, calling `Remove-Module` _from that child scope_ doesn't remove the imports from the calling scope. It does appear to _unload_ the module, however.\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\n'function f1{\"[f1]\"} '> t1.psm1  # create sample module with 1 export: function \"f1\"\r\n\r\nImport-Module ./t1.psm1  # import it into the current scope domain's root scope\r\n\r\n\"[$((Get-Module t1).Name)]\"  # verify that Get-Module sees it.\r\n\r\n# Also import the module *locally* into a *child* scope, and call\r\n# Remove-Module from the same scope.\r\n& { Import-Module -Scope Local ./t1.psm1; Remove-Module t1 }\r\n\r\n# Call the exported function - if Remove-Module operates at the *session-state* level,\r\n# the function should no longer exist.\r\nf1  \r\n\r\n# Test if Get-Module still sees the module, which it shouldn't after Remove-Module.\r\n\"[$((gmo t1).Name)]\"  \r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```none\r\n[t1]\r\nf1 : The term 'f1' is not recognized as the name of a cmdlet, function, script file, or operable program.\r\n...\r\n[]\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n```none\r\n[t1]\r\n[f1]\r\n[]\r\n```\r\n\r\n* unexpected: the `f1` function was _not_ removed from the parent scope and still works.\r\n\r\n*  expected: `Get-Module` no longer sees the module.\r\n\r\nThis suggest that while the module may have been _unloaded_, its _imports_ weren't removed from the ancestral scopes.\r\n\r\nNote that if you remove `-Scope Local` from the `Import-Module` call, things work as expected.\r\nBy contrast, adding `-Scope Local` to the _outer_ scope's `Import-Module` call makes no difference.\r\n\r\nEnvironment data\r\n----------------\r\n\r\n```powershell\r\nPowerShell Core v6.1.0-preview.3 on macOS 10.13.6\r\nPowerShell Core v6.1.0-preview.3 on Ubuntu 16.04.4 LTS\r\nPowerShell Core v6.1.0-preview.3 on Microsoft Windows 10 Pro (64-bit; Version 1803, OS Build: 17134.165)\r\n\\Windows PowerShell v5.1.17134.165 on Microsoft Windows 10 Pro (64-bit; Version 1803, OS Build: 17134.165)\r\n```\r\n",
  "closed_at": "2019-05-12T18:29:48Z",
  "comments": [
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "See  #9582 for a reframing of this issue.\r\n",
      "created_at": "2019-05-12T18:29:48Z",
      "updated_at": "2019-05-12T18:29:48Z"
    }
  ],
  "created_at": "2018-07-24T19:42:19Z",
  "number": 7349,
  "state": "closed",
  "title": "Calling Remove-Module from an Import-Module -Scope local scope doesn't remove imports from ancestral scopes",
  "updated_at": "2019-05-12T18:29:48Z"
}