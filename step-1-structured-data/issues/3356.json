{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3356",
  "author": "iSazonov",
  "body": "[x] - After update to \"C# for Visual Studio Code 1.8.0\" debugging don't work.\r\n> The system cannot find the file specified\r\n\r\n[x] - IntelliSense don't work in VS Code after migrating to MSBuild (json -> csproj).\r\n",
  "closed_at": "2017-09-22T07:59:02Z",
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Still working for me with C# plugin 1.8.0 and VSCode 1.10.2 on Ubuntu16.  You may need to follow-up with https://github.com/OmniSharp/omnisharp-vscode",
      "created_at": "2017-03-17T16:30:22Z",
      "updated_at": "2017-03-17T16:30:22Z"
    },
    {
      "author": "ealexjordan",
      "author_association": "CONTRIBUTOR",
      "body": "I've been seeing something similar to this as well: https://github.com/OmniSharp/omnisharp-vscode/issues/1272. I have much better luck launching PowerShell from code than attaching to a process, I can get it to work occasionally. Hopefully this is fixed soon with OmniSharp.",
      "created_at": "2017-03-17T18:32:06Z",
      "updated_at": "2017-03-17T18:32:06Z"
    },
    {
      "author": "pcgeek86",
      "author_association": "NONE",
      "body": "I just attempted to reproduce on Mac OS X Sierra, with VSCode 1.10.2, and am unable to reproduce the reported behavior successfully.\r\n\r\nPerhaps there's a cache folder somewhere that's affecting you? Can you use Sysinternals tools to see which file is being accessed?\r\n\r\nCheers,\r\nTrevor Sullivan",
      "created_at": "2017-03-17T20:27:21Z",
      "updated_at": "2017-03-17T20:27:21Z"
    },
    {
      "author": "jeffbi",
      "author_association": "CONTRIBUTOR",
      "body": "I'm seeing this on Windows in VS Code 1.10.2 with C# add-in 1.8.0.\r\n\r\nI am able to start PowerShell by hand then attach, but I cannot start PS from VS Code.",
      "created_at": "2017-03-17T22:30:59Z",
      "updated_at": "2017-03-17T22:30:59Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "CC @daviwil ",
      "created_at": "2017-03-17T22:43:16Z",
      "updated_at": "2017-03-17T22:43:16Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I already thought that I only work on Windows \ud83d\ude04 @jeffbi \u270c\ufe0f ",
      "created_at": "2017-03-18T10:10:29Z",
      "updated_at": "2017-03-18T10:10:29Z"
    },
    {
      "author": "gregg-miskelly",
      "author_association": "NONE",
      "body": "Work around: Add `.exe` to the end of `program` in .vscode/launch.json:\r\n\r\n```\r\n...\r\n            \"program\": \"${workspaceRoot}/debug/powershell.exe\",\r\n...\r\n```\r\n",
      "created_at": "2017-03-21T00:32:24Z",
      "updated_at": "2017-03-21T00:32:24Z"
    },
    {
      "author": "jeffbi",
      "author_association": "CONTRIBUTOR",
      "body": "Outstanding. Worked for me. Thank you.",
      "created_at": "2017-03-21T01:54:11Z",
      "updated_at": "2017-03-21T01:54:11Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "From https://github.com/OmniSharp/omnisharp-vscode/issues/1335\r\n> This will be fixed in 1.9.",
      "created_at": "2017-03-21T17:24:18Z",
      "updated_at": "2017-03-21T17:24:18Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@jeffbi  After migration to MSBuild  the IntelliSense in VS Code stopped working because now there are no `json` files. Could you solve this?",
      "created_at": "2017-03-28T10:18:56Z",
      "updated_at": "2017-03-28T10:18:56Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov known limitation with .csproj and vscode https://github.com/OmniSharp/omnisharp-vscode/issues/1156",
      "created_at": "2017-03-28T17:59:30Z",
      "updated_at": "2017-03-28T17:59:30Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Yes, thanks! I download SLN file from @powercode - it is work well. But we need fix.",
      "created_at": "2017-03-28T18:16:05Z",
      "updated_at": "2017-03-28T18:16:05Z"
    },
    {
      "author": "gregg-miskelly",
      "author_association": "NONE",
      "body": "I have posted a new release of the C# extension that includes the fix. \r\n\r\nTo try it -- use the use the [Installing Beta Releases](https://github.com/OmniSharp/omnisharp-vscode/wiki/Installing-Beta-Releases) instructions to install [v1.9.0-beta2](https://github.com/OmniSharp/omnisharp-vscode/releases/tag/v1.9.0-beta2).",
      "created_at": "2017-03-28T18:38:09Z",
      "updated_at": "2017-03-28T18:38:09Z"
    },
    {
      "author": "jeffbi",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov I'm not quite sure what you're asking me for. I can confirm that Intellisense in VS Code is no longer working.",
      "created_at": "2017-03-28T22:15:55Z",
      "updated_at": "2017-03-28T22:15:55Z"
    },
    {
      "author": "jeffbi",
      "author_association": "CONTRIBUTOR",
      "body": "Well, it worked once. Now I'm unable to build in VS Code at all. I consistently get this:\r\n```\r\nVERBOSE: Using configuration 'Debug'\r\nVERBOSE: Top project directory is \r\nC:\\Users\\jeffbi\\Clients\\Microsoft\\GitHub\\PowerShell\\src\\powershell-win-core\r\nVERBOSE: Using framework 'netcoreapp1.1'\r\nVERBOSE: Using runtime 'win10-x64'\r\nRun dotnet restore\r\nwarn : The folder 'C:\\Users\\jeffbi\\Clients\\Microsoft\\GitHub\\PowerShell\\src\\powershell-win-core' does not contain a project to restore.\r\nwarn : The folder 'C:\\Users\\jeffbi\\Clients\\Microsoft\\GitHub\\PowerShell\\src\\TypeCatalogGen' does not contain a project to restore.\r\nwarn : The folder 'C:\\Users\\jeffbi\\Clients\\Microsoft\\GitHub\\PowerShell\\src\\ResGen' does not contain a project to restore.\r\nwarn : The folder 'C:\\Users\\jeffbi\\Clients\\Microsoft\\GitHub\\PowerShell\\test\\csharp' does not contain a project to restore.\r\nwarn : The folder 'C:\\Users\\jeffbi\\Clients\\Microsoft\\GitHub\\PowerShell\\test\\PSReadLine' does not contain a project to restore.\r\nwarn : The folder 'C:\\Users\\jeffbi\\Clients\\Microsoft\\GitHub\\PowerShell\\test\\tools\\CreateChildProcess' does not contain a project to restore.\r\nwarn : The folder 'C:\\Users\\jeffbi\\Clients\\Microsoft\\GitHub\\PowerShell\\test\\tools\\EchoArgs' does not contain a project to restore.\r\nRun ResGen (generating C# bindings for resx files)\r\nThe current project is not valid because of the following errors:\r\nC:\\Users\\jeffbi\\Clients\\Microsoft\\GitHub\\PowerShell\\src\\ResGen(1,0): error DOTNET1017: Project file does not exist 'C:\\Users\\jeffbi\\Clients\\Microsoft\\GitHub\\PowerShell\\src\\ResGen\\project.json'.\r\nExecution of { dotnet run } failed with exit code 1\r\nAt C:\\Users\\jeffbi\\Clients\\Microsoft\\GitHub\\PowerShell\\build.psm1:2359 char:13\r\n+             throw \"Execution of {$sb} failed with exit code $LASTEXIT ...\r\n+             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : OperationStopped: (Execution of { ...ith exit co \r\n   de 1:String) [], RuntimeException\r\n    + FullyQualifiedErrorId : Execution of { dotnet run } failed with exit cod \r\n   e 1\r\n ```\r\nI get this both with the current C# extension and with the beta @gregg-miskelly referred to.\r\n \r\nI've tried several things including killing off and re-cloning all my local repositories, to no avail.\r\n\r\nBuilding inside PowerShell with `Start-PSBuild` works fine.\r\n\r\nI'm also able to build in VS Code in Linux, still using the 1.8.0 version of the C# plugin.",
      "created_at": "2017-03-29T00:26:53Z",
      "updated_at": "2017-03-29T00:26:53Z"
    },
    {
      "author": "gregg-miskelly",
      "author_association": "NONE",
      "body": "@jeffbi this doesn't have anything to do with VS Code or the C# extension. All VS Code does is kick off command line build script. My fix was just about fixing launch to work without the '.exe' suffix in `program`.\r\n\r\nAt any rate -- I could be wrong, but it sounds like you might have a post-preview-2 .NET CLI installed, and, at least when I briefly played with the PowerShell repo, it was still using project.json based projects. If so - those two things will not play well together. The real fix would be to update the PowerShell repo to .csproj. The hack is to fix the powershell build scripts so that instead of running `dotnet build` (for example) instead run `dotnet <path-to-preview2-dotnet.dll> build`. You are also supposed to be able to lay down a global.json to make this work, but I never had any luck with that. But maybe the .NET CLI folks fixed that before RTW.",
      "created_at": "2017-03-29T00:56:12Z",
      "updated_at": "2017-03-29T00:57:08Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@gregg-miskelly we've converted PowerShell repo to .csproj from project.json files.  I've also noticed that I can build from start-psbuild which calls dotnet directly while in vscode it errors out.  I would suggest uninstalling all dotnet and rerunning start-psbootstrap to get the appropriate version installed",
      "created_at": "2017-03-29T01:00:13Z",
      "updated_at": "2017-03-29T01:00:13Z"
    },
    {
      "author": "jeffbi",
      "author_association": "CONTRIBUTOR",
      "body": "Got rid of dotnet and reran start-psbootstrap. All seems to be working now.\r\n\r\nI'm using the 1.9.0-beta2 version of the C# extension, and debugging is working well also.\r\n\r\nThanks to both of you.",
      "created_at": "2017-03-29T06:07:56Z",
      "updated_at": "2017-03-29T06:07:56Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@jeffbi You can use sln file from @powercode #3400 to revive IntelliSense in VS Code.",
      "created_at": "2017-03-29T06:17:19Z",
      "updated_at": "2017-03-29T06:17:19Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "We really need sln file in repo root folder to get IntelliSense work properly.",
      "created_at": "2017-04-15T10:11:35Z",
      "updated_at": "2017-04-15T10:11:35Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov submit SLN as PR?",
      "created_at": "2017-04-15T14:45:45Z",
      "updated_at": "2017-04-15T14:45:45Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Yes.",
      "created_at": "2017-04-15T19:35:26Z",
      "updated_at": "2017-04-15T19:35:26Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "VS 2017 sln was added in PR #4748 ",
      "created_at": "2017-09-22T07:59:02Z",
      "updated_at": "2017-09-22T07:59:22Z"
    }
  ],
  "created_at": "2017-03-17T13:09:01Z",
  "labels": [
    "Issue-Question",
    "Resolution-Fixed",
    "Resolution-External"
  ],
  "number": 3356,
  "state": "closed",
  "title": "Debugging and IntelliSense in VS Code don't work",
  "updated_at": "2017-09-22T07:59:45Z"
}