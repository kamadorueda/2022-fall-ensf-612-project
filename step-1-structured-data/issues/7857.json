{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7857",
  "author": "iSazonov",
  "body": "@lzybkr Could you please share more information about [PSMore](https://github.com/lzybkr/PSMore/) status?\r\n\r\n- Can now we integrate the code in PowerShell Core? Step-By-Step or as experimental feature?\r\n- What benefits we expect?\r\n   - Less resource consumption? Less memory allocations? Less CPU consumption?\r\n   - More fast startup?\r\n   - More convenient use for users?\r\n   - Empowerment?",
  "closed_at": "2021-08-25T04:08:05Z",
  "comments": [
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "Status - no progress since the last commit.\r\n\r\nThe initial idea is basically a console version of `Out-GridView` combined with `less`, then I let myself get sidetracked into the formatting subsystem.\r\n\r\nSo for I have a prototype of a new way of specifying formatting that:\r\n* uses no xml (so faster startup/module loading)\r\n* uses attributes, so can be specified inline with the type to be formatted\r\n* or can, via proxy, specify formatting on another type\r\n* use code gen with dynamic sites so it's extremely fast\r\n\r\nWhat I probably need the most to continue is some external motivation and some dedicated time. I have other projects I've started - a PowerShell profiler and a PowerShell script formatter, so clearly I have a problem starting projects but not finding time to move them along.\r\n\r\nOne thought I had on external motivation was to start a charity fundraiser - I'd commit to a project if the charity gets funded. I haven't worked out the charity or the funding target though.",
      "created_at": "2018-09-25T15:54:05Z",
      "updated_at": "2018-09-25T15:54:05Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Thanks! I can not help with  external motivation but I could help with the progress of these projects.\r\n\r\n- for PSMore we could continue in the PowerShell repo step by step replacing existing code.\r\n- for PowerShell script formatter we could start adding Trivia like [Roslyn](https://github.com/dotnet/roslyn/wiki/Roslyn-Overview#syntax-trivia). Maybe RFC is right start.\r\n- for PowerShell profiler I don't know what we can do to help the project, perhaps add an API to measure script blocks that can be useful for performance dev test too. /cc @daxian-dbw \r\n",
      "created_at": "2018-10-01T15:28:52Z",
      "updated_at": "2018-10-01T15:28:52Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "Trivia might make a formatter simpler to implement, but it isn't necessary. The full trivia can be synthesized from the tokens and ast. I have implemented what I think is critical to the formatter - a tree comparer so you can check the formatting won't change the semantics.\r\n\r\nAs for formatting - I'm not keen on the step by step replacement which is why I started a standalone project. At some point it will make sense to replace existing code, but that's a tricky work that isn't much fun - I speak from experience. Rewarding when it's done, but it takes motivation.\r\n\r\nAnd profiling - I should talk with @daxian-dbw - he might be interested to pick it up.",
      "created_at": "2018-10-01T16:46:36Z",
      "updated_at": "2018-10-01T16:46:36Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@lzybkr I'd love to pick up the profiler work. Will sync with you offline on it.",
      "created_at": "2018-10-01T17:06:11Z",
      "updated_at": "2018-10-01T17:06:11Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> Trivia might make a formatter simpler to implement\r\n\r\nI think this is enough to do it. In addition, it will not only simplify but also add more features and flexibility. \r\nIf @SteveL-MSFT approves I could start RFC for trivia.\r\n\r\n> As for formatting - I'm not keen on the step by step replacement which is why I started a standalone project. \r\n\r\nDo you want to keep this project as personal or maybe make it public like PowerShell/NextEFS?\r\n\r\n> And profiling \r\n\r\nThe same question - will the project MSFT internal or public like PowerShell/Profiler?\r\n\r\n",
      "created_at": "2018-10-02T05:45:44Z",
      "updated_at": "2018-10-02T05:45:44Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "> I think this is enough to do it. In addition, it will not only simplify but also add more features and flexibility.\r\n> If @SteveL-MSFT approves I could start RFC for trivia.\r\n\r\nRetrofitting trivia would be, well, very non-trivial, both from a design point of view and a performance point of view. If we are talking about a new standalone parser based on the current parser, then I'd have fewer concerns, but I'm not convinced of the benefits.\r\n\r\n> Do you want to keep this project as personal or maybe make it public like PowerShell/NextEFS?\r\n\r\nWe'll see how it goes, eventually it probably makes sense to pull into the core.\r\n\r\n> The same question - will the project MSFT internal or public like PowerShell/Profiler?\r\n\r\nParts of profiling require changes to PowerShell Core, other parts can be external tools (no reason for MSFT internal) that might not even need any PowerShell dependencies. I pushed my wip [here](https://github.com/lzybkr/PowerShell/commit/c463b61bdcb131ae1ffd2b96f85029f09eaa371d) - the instrumentation is probably complete for in-process profiling, but there's plenty of remaining work - analyzing the profile data and support for out-of-process profiling.",
      "created_at": "2018-10-02T06:23:42Z",
      "updated_at": "2018-10-02T06:23:42Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov I don't see any reason not to author a RFC for trivia support",
      "created_at": "2018-10-03T00:24:07Z",
      "updated_at": "2018-10-03T00:24:07Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Related comment from Jason \r\nhttps://github.com/PowerShell/PowerShell/issues/4347#issuecomment-434561158",
      "created_at": "2018-11-11T11:32:14Z",
      "updated_at": "2018-11-11T11:32:14Z"
    }
  ],
  "created_at": "2018-09-25T04:21:59Z",
  "labels": [
    "Issue-Question"
  ],
  "number": 7857,
  "state": "closed",
  "title": "PSMore",
  "updated_at": "2021-08-25T04:08:05Z"
}