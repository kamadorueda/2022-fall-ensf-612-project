{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9456",
  "author": "SteveL-MSFT",
  "body": "# Summary of the new feature/enhancement\r\n\r\nPowerShell as a Daemon/NTService would help with several things:\r\n\r\n  - Startup time will be improved as the console host doesn't need to initialize a runspace as it exists within the Daemon\r\n  - We need some sort of hosting of PowerShell for JEA scenarios which are currently handled by WinRM but is not cross platform and only supports WS-Man and not SSH based remoting\r\n  - Support headless management scenarios where you just want an endpoint to execute a script\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Some MSFT teams already have something like (Exchange server and others).",
      "created_at": "2019-04-25T03:26:08Z",
      "updated_at": "2019-04-25T03:26:08Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Exchange (unless they did something different since) was using IIS Hosted PowerShell (rather than WinRM).",
      "created_at": "2019-04-27T01:42:47Z",
      "updated_at": "2019-04-27T01:42:47Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Exchange continues using IIS Hosted PowerShell. I think SharePoint and Skype/Team too. We could think about single-on-system hosted solution and share with all applications.",
      "created_at": "2019-04-27T05:23:09Z",
      "updated_at": "2019-04-27T05:23:09Z"
    },
    {
      "author": "JasonFossen",
      "author_association": "NONE",
      "body": "Any additional information like this about the future of JEA is good, especially since there was no mention of JEA in the PowerShell 7 roadmap post on May 30th.  Thank You",
      "created_at": "2019-06-05T15:10:12Z",
      "updated_at": "2019-06-05T15:10:12Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@JasonFossen to be clear, PowerShell Core 6 already supports JEA, but only on Windows via WS-MAN.  Is your interest in JEA for non-Windows (or on Windows via SSH)?  This is a big work item that is currently not in plan for PS7.0.  Perhaps 7.1.",
      "created_at": "2019-06-06T07:58:36Z",
      "updated_at": "2019-06-06T07:58:36Z"
    },
    {
      "author": "JasonFossen",
      "author_association": "NONE",
      "body": "@SteveL-MSFT  Yes, thank you, I should have been more specific: JEA over SSH to both Windows and Linux, and also further integration with Windows Admin Center (WAC).  I have difficulty selling PowerShell to Linux people who are already using bash and Python, but SSH+JEA+WAC for both Windows and Linux on-prem targets, preferably with some pre-configured starter JEA endpoint definitions that could be pushed out through WAC itself, would be very nice.  They immediately \"get\" the idea when shown a diagram of Browser -> TLS -> WAC gateway -> SSH -> Linux/Windows Targets, since this is similar to what they already do for other products, but the key selling point for PowerShell would be the JEA command restrictions enforced on the targets themselves, not in WAC, using analogies from restricted bash, sudo, setuid, seccomp, etc.",
      "created_at": "2019-06-06T10:15:04Z",
      "updated_at": "2019-06-06T10:16:01Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Perhaps this is a reason to port WS-MAN more quickly.",
      "created_at": "2019-06-06T13:43:50Z",
      "updated_at": "2019-06-06T13:44:03Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I've already started a discussion with WAC team on not requiring WMF and instead use PSCore6 if available as a pre-req.  Once they do that, I can see about having them use SSH if available.",
      "created_at": "2019-06-06T14:27:29Z",
      "updated_at": "2019-06-06T14:27:29Z"
    }
  ],
  "created_at": "2019-04-24T16:39:15Z",
  "labels": [
    "Issue-Enhancement"
  ],
  "number": 9456,
  "state": "open",
  "title": "PowerShell Daemon/NTService",
  "updated_at": "2019-06-06T14:27:29Z"
}