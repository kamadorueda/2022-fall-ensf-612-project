{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12015",
  "author": "simonsabin",
  "body": "Currently the `install-module` cmdlet install modules to a path that might not be in the list of paths in $env:PSModulePath and thus can't be imported by `import-module`\r\n\r\n# Options\r\n\r\nPotential options. \r\nHave `import-module` have a SourceScope property that matches the Scope property of install-module and therefore looks in the same place. \r\n\r\nHave a cmdlet to return the default install directory and be able to pass that to import-module\r\n\r\nThis is attempting to solve the issue where $env:psmodulepath doesn't include the default directory for installing modules. Its very hard to \r\n* understand why import-module doesn't find the module\r\n* What has set psmodulepath such that import-module doesn't work\r\n* Change import-module to make it find the module you've installed.\r\n\r\nRelated to https://github.com/PowerShell/PowerShell/issues/12001\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "Related to https://github.com/PowerShell/PowerShell/issues/11223",
      "created_at": "2020-03-05T00:04:56Z",
      "updated_at": "2020-03-05T00:04:56Z"
    }
  ],
  "created_at": "2020-03-04T22:29:52Z",
  "number": 12015,
  "state": "open",
  "title": "Provide a means to get the default module path to ensure installed modules can be imported",
  "updated_at": "2020-03-05T05:58:22Z"
}