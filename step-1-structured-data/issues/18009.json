{
  "_url": "https://github.com/PowerShell/PowerShell/issues/18009",
  "author": "gregsdennis",
  "body": "### Summary of the new feature / enhancement\n\nHello!  I'm on the JSON Schema specification team, and I was wondering what drafts are currently supported.  I can see by and example in [the docs](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/test-json?view=powershell-7.2&WT.mc_id=DT-MVP-5004831) that draft 7 is supported, but this is now several years old, and two newer versions have been released.\r\n\r\nHappy to help if needed!\n\n### Proposed technical implementation details (optional)\n\n_No response_",
  "closed_at": null,
  "comments": [
    {
      "author": "gregsdennis",
      "author_association": "NONE",
      "body": "It also looks like you're using NJsonSchema (backed by Newtonsoft) to support this.  If there's any interest in using System.Text.Json, I'd like to offer my validator [JsonSchema.Net](https://www.nuget.org/packages/JsonSchema.Net) as an alternative.  It already supports all the latest drafts and I regularly update it.",
      "created_at": "2022-09-01T23:04:52Z",
      "updated_at": "2022-09-01T23:04:52Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> If there's any interest in using System.Text.Json\r\n\r\nNo doubt we would like to migrate to this new API all Json cmdlets in the repository.\r\n\r\nIf you want you can pull PR to update Test-Json cmdlet. We have some issues opened for Test-Json and if they were fixed, that would be great.",
      "created_at": "2022-09-02T07:12:12Z",
      "updated_at": "2022-09-02T07:12:12Z"
    },
    {
      "author": "gregsdennis",
      "author_association": "NONE",
      "body": "Is there a label for this cmdlet that I can use to search for the issues? I couldn't see one, but there are over 100 labels, so...",
      "created_at": "2022-09-02T08:03:15Z",
      "updated_at": "2022-09-02T08:03:15Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Only search\r\nhttps://github.com/PowerShell/PowerShell/issues?q=is%3Aissue+is%3Aopen+%22Test-Json%22+label%3AWG-Cmdlets-Utility\n\n<blockquote><img src=\"https://repository-images.githubusercontent.com/49609581/aad0ad80-cdec-11ea-8248-a37bc0571bfd\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/PowerShell/PowerShell\">Issues \u00b7 PowerShell/PowerShell</a></strong></div><div>PowerShell for every system! Contribute to PowerShell/PowerShell development by creating an account on GitHub.</div></blockquote>",
      "created_at": "2022-09-02T13:08:22Z",
      "updated_at": "2022-09-02T13:08:24Z"
    },
    {
      "author": "dkaszews",
      "author_association": "CONTRIBUTOR",
      "body": "Migrating to a different provider just because it currently has more up to date features seems like fools errand - a lot of effort, and later may turn out that yet another one (including our original one) is now updated faster.\r\n\r\nIt's better to ask our current provider to support newer versions of the schema, and once they do we can just bump the library version. If they are open source, you can open a PR yourself. ",
      "created_at": "2022-09-02T16:38:32Z",
      "updated_at": "2022-09-02T16:38:32Z"
    },
    {
      "author": "dkaszews",
      "author_association": "CONTRIBUTOR",
      "body": "> Only search https://github.com/PowerShell/PowerShell/issues?q=is%3Aissue+is%3Aopen+%22Test-Json%22+label%3AWG-Cmdlets-Utility\r\n> \r\n> > <img alt=\"\" width=\"48\" src=\"https://repository-images.githubusercontent.com/49609581/aad0ad80-cdec-11ea-8248-a37bc0571bfd\"><img alt=\"\" height=\"14\" src=\"https://camo.githubusercontent.com/b6a12909f1e31185a69a73d59208c507a992236d3230f9fc18e85058ae3d19e7/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f66617669636f6e732f66617669636f6e2e737667\"> GitHub**[Issues \u00b7 PowerShell/PowerShell](https://github.com/PowerShell/PowerShell)**PowerShell for every system! Contribute to PowerShell/PowerShell development by creating an account on GitHub.\r\n\r\nHint: adding \"in:title\" to search usually yields much better results. \n\n<blockquote><img src=\"https://repository-images.githubusercontent.com/49609581/aad0ad80-cdec-11ea-8248-a37bc0571bfd\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/PowerShell/PowerShell\">Issues \u00b7 PowerShell/PowerShell</a></strong></div><div>PowerShell for every system! Contribute to PowerShell/PowerShell development by creating an account on GitHub.</div></blockquote>",
      "created_at": "2022-09-02T16:40:30Z",
      "updated_at": "2022-09-02T16:40:33Z"
    },
    {
      "author": "gregsdennis",
      "author_association": "NONE",
      "body": "@dkaszews I am proposing to use my own validator, and I'm fine with doing the work to move over.\n\nI'm also a member of the JSON Schema core team (as a co-author of the spec), and I'm employed specifically to work with tooling providers, like PowerShell.\n\nI keep my implementation up to date, and I actively develop new features (on an unpublished branch) as we're adding them to the next version of the spec as a platform for viability.  As a result of all of this, my implementation has been the first to publish new JSON Schema features for the past two iterations (at least).\n\nI've had conversations with the owner of NJsonSchema, and while there is an effort to move over, it's been quite slow. I believe my last contact with them was almost a year ago, with no progress for the library in that direction during that time.",
      "created_at": "2022-09-02T19:58:31Z",
      "updated_at": "2022-09-02T19:58:31Z"
    },
    {
      "author": "dkaszews",
      "author_association": "CONTRIBUTOR",
      "body": "@gregsdennis If you're member of the JSON Schema team and provide reference implementations then that is completely different case \ud83d\ude42",
      "created_at": "2022-09-03T05:43:07Z",
      "updated_at": "2022-09-03T05:43:07Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@dkaszews Key here is that NJsonSchema backed by Newtonsoft and JsonSchema.Net is on System.Text.Json - modern implementation (NJsonSchema is frozen project - no new feature, only bug fixes). It is right way for PowerSHell to migrate from NewtonSoft to System.Text.Json.",
      "created_at": "2022-09-03T18:23:30Z",
      "updated_at": "2022-09-03T18:23:30Z"
    },
    {
      "author": "dkaszews",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov Thanks for explanation, I was not aware of this. From what I saw, `Test-Json` can be easily migrated as it pretty much just forwards strings or filenames for JSON and its schema. Other cmdlets might be more difficult, but `Test-Json` is the only one that uses JSON schema and returns just true or false, so I see no downside in swapping to a better provider immediately.",
      "created_at": "2022-09-03T18:27:52Z",
      "updated_at": "2022-09-03T18:27:52Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> Other cmdlets might be more difficult\r\n\r\nYes, I pulled two PR (for Test-Json and ConvertTo-Json) but closed them recently (no progress in review). It is impossible to migrate without breaking changes. But the migration is inevitable at some point.",
      "created_at": "2022-09-03T18:47:55Z",
      "updated_at": "2022-09-03T18:47:55Z"
    }
  ],
  "created_at": "2022-09-01T23:00:18Z",
  "number": 18009,
  "state": "open",
  "title": "Supporting later versions of JSON Schema",
  "updated_at": "2022-09-21T03:35:42Z"
}