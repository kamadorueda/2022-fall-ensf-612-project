{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15428",
  "author": "blacklightpy",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 and PowerShell 7+ issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6).\r\n\r\n-->\r\n\r\n## Steps to reproduce\r\n\r\nType\r\n```\r\nGet-WindowsCapability -Online | ? Name -like 'OpenSSH*'\r\n```\r\n\r\n## Expected behavior\r\n\r\n```\r\nWindows PowerShell\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nInstall the latest PowerShell for new features and improvements! https://aka.ms/PSWindows\r\n\r\nPS C:\\Users\\Administrator> Get-WindowsCapability -Online | ? Name -like 'OpenSSH*'\r\n\r\n\r\nName  : OpenSSH.Client~~~~0.0.1.0\r\nState : Installed\r\n\r\nName  : OpenSSH.Server~~~~0.0.1.0\r\nState : NotPresent\r\n```\r\n\r\n## Actual behavior\r\n\r\n```\r\nPowerShell 7.2.0-preview.5\r\nCopyright (c) Microsoft Corporation.\r\n\r\nhttps://aka.ms/powershell\r\nType 'help' to get help.\r\n\r\nPS C:\\openssh> Get-WindowsCapability -Online | ? Name -like 'OpenSSH*'\r\nGet-WindowsCapability: Class not registered\r\n```\r\n\r\n## Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\nPowershell 5.1 (working)\r\n\r\n```\r\nPS C:\\Users\\Administrator> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      5.1.21376.1\r\nPSEdition                      Desktop\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nBuildVersion                   10.0.21376.1\r\nCLRVersion                     4.0.30319.42000\r\nWSManStackVersion              3.0\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\n```\r\n\r\nPowershell 7 (installed from Store)\r\n```\r\nPS C:\\openssh> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.0-preview.5\r\nPSEdition                      Core\r\nGitCommitId                    7.2.0-preview.5\r\nOS                             Microsoft Windows 10.0.21376\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n## Additional Notes\r\n\r\nReferenced in Powershell/WindowsCompatibility#87\r\nI wasn't sure if it was the right place to report this issue, so I'm reporting here.",
  "closed_at": "2021-05-29T19:00:07Z",
  "comments": [
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "I am not able to reproduce this issue\r\n![image](https://user-images.githubusercontent.com/10873629/119909839-b60fd080-bf0a-11eb-91bf-052976c34f8d.png)\r\nIt looks like you are running an insider build of Windows.  The problem may be there.",
      "created_at": "2021-05-27T23:45:19Z",
      "updated_at": "2021-05-27T23:45:19Z"
    },
    {
      "author": "blacklightpy",
      "author_association": "NONE",
      "body": "Yes, I was on build 21376, and I'm not on 21390 and it is still there.\r\n\r\nAlso, apparently it seems to recognize the command when I'm running without elevation.\r\n\r\n```\r\nPS C:\\Users\\Blacklight> Get-WindowsCapability -Online | ? Name -like 'OpenSSH*'\r\nGet-WindowsCapability: The requested operation requires elevation.\r\n```\r\nBut this is different to the output on Powershell 5.1\r\n```\r\nPS C:\\Users\\Blacklight> Get-WindowsCapability -Online | ? Name -like 'OpenSSH*'\r\nGet-WindowsCapability : The requested operation requires elevation.\r\nAt line:1 char:1\r\n+ Get-WindowsCapability -Online | ? Name -like 'OpenSSH*'\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : NotSpecified: (:) [Get-WindowsCapability], COMException\r\n    + FullyQualifiedErrorId : Microsoft.Dism.Commands.GetWindowsCapabilityCommand\r\n```\r\n\r\nIt's like Powershell 7 recognizes the cmdlet itself that it requires elevation, but doesn't know it's function.\r\nI thought that was worth adding.",
      "created_at": "2021-05-28T17:51:30Z",
      "updated_at": "2021-05-28T17:51:30Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as external and has not had any activity for **1 day**. It has been be closed for housekeeping purposes.",
      "created_at": "2021-05-29T19:00:06Z",
      "updated_at": "2021-05-29T19:00:06Z"
    },
    {
      "author": "dr-kristau",
      "author_association": "NONE",
      "body": "> It's like Powershell 7 recognizes the cmdlet itself that it requires elevation, but doesn't know it's function.\r\nI thought that was worth adding.\r\n\r\nI can reproduce exactly the same issue using the following version:\r\n\r\n![Screenshot from 2021-10-20 13-55-56](https://user-images.githubusercontent.com/32355001/138088225-592b5864-5f35-47ca-be71-57711b01d43e.png)\r\n\r\nWhen I run without Administrator privileges I obtain this:\r\n\r\n![Screenshot from 2021-10-20 13-58-23](https://user-images.githubusercontent.com/32355001/138088549-844ff0e9-cb64-422a-9dc8-2b8decfb17fd.png)\r\n\r\nAnd with Administrator privileges I obtain this:\r\n\r\n![Screenshot from 2021-10-20 14-01-05](https://user-images.githubusercontent.com/32355001/138088813-5027141d-e9d4-4ec7-b52e-20b1f97a00c7.png)\r\n\r\nWorth mentioning that if I use Windows PowerShell:\r\n\r\n![Screenshot from 2021-10-20 14-08-47](https://user-images.githubusercontent.com/32355001/138089930-822f89eb-5226-413e-9023-f7ba468622ce.png)\r\n\r\nI can run the command successfully, although only with Administrator privileges:\r\n\r\n![Screenshot from 2021-10-20 14-09-10](https://user-images.githubusercontent.com/32355001/138089997-c2fcec20-1bd9-4d5e-a8d6-0db3ca1d9046.png)\r\n",
      "created_at": "2021-10-20T12:01:35Z",
      "updated_at": "2021-10-20T12:10:29Z"
    },
    {
      "author": "davetapley",
      "author_association": "NONE",
      "body": "@TravisEz13 I was able to repro this in a Windows 10 Pro VM on Azure (after installing Powershell 7):\r\n\r\n(I was following [this guide](https://docs.microsoft.com/en-us/windows-server/administration/openssh/openssh_install_firstuse)).\r\n\r\n<img width=\"654\" alt=\"Screen Shot 2021-11-23 at 1 16 00 PM\" src=\"https://user-images.githubusercontent.com/48232/143097257-cddc77f3-9270-4318-80a7-fc2909ba85a0.png\">\r\n\r\n<img width=\"728\" alt=\"Screen Shot 2021-11-23 at 1 19 12 PM\" src=\"https://user-images.githubusercontent.com/48232/143097710-304fe1eb-5c65-4185-8252-34e387ae83ac.png\">\r\n",
      "created_at": "2021-11-23T22:37:06Z",
      "updated_at": "2021-11-23T22:37:06Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "This works well for me. Can you check on fresh Windows 10?",
      "created_at": "2021-11-24T03:14:31Z",
      "updated_at": "2021-11-24T03:14:31Z"
    },
    {
      "author": "blacklightpy",
      "author_association": "NONE",
      "body": "> This works well for me. Can you check on fresh Windows 10?\r\n\r\nI can't right now because I have a lot of apps required for work",
      "created_at": "2021-11-24T07:03:56Z",
      "updated_at": "2021-11-24T07:03:56Z"
    },
    {
      "author": "francogp",
      "author_association": "NONE",
      "body": "If I run the command on OLD powershell, it works\r\n![image](https://user-images.githubusercontent.com/2739706/152975331-6175d625-2eb7-4e64-89eb-1fda3480642b.png)\r\n\r\nBut If I use the new powershell, it fails\r\n![image](https://user-images.githubusercontent.com/2739706/152975433-216825b8-114d-4891-a874-05a2f64b00fb.png)\r\n\r\n",
      "created_at": "2022-02-08T11:08:51Z",
      "updated_at": "2022-02-08T11:08:51Z"
    },
    {
      "author": "jgwinner",
      "author_association": "NONE",
      "body": "I can duplicate this issue on Windows 11 and just updated last night. It's quite irritating as I can't get VS Code SSH setup for a critical work issue. I was able to get SSH loaded by going through the control panel though.\r\n\r\nIt takes QUITE a long time as well. More details:\r\n\r\n```\r\n> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.1\r\nPSEdition                      Core\r\nGitCommitId                    7.2.1\r\nOS                             Microsoft Windows 10.0.22557\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\n---------\r\n```\r\n$PSVersionTable.Values\r\nCore\r\nMicrosoft Windows 10.0.22557\r\n\r\nMajor  Minor  Build  Revision\r\n-----  -----  -----  --------\r\n1      1      0      1\r\n1      0      -1     -1\r\n2      0      -1     -1\r\n3      0      -1     -1\r\n4      0      -1     -1\r\n5      0      -1     -1\r\n5      1      10032  0\r\n6      0      0      -1\r\n6      1      0      -1\r\n6      2      0      -1\r\n7      0      0      -1\r\n7      1      0      -1\r\n7      2      1      -1\r\n\r\nMajor           : 7\r\nMinor           : 2\r\nPatch           : 1\r\nPreReleaseLabel :\r\nBuildLabel      :\r\n\r\nWin32NT\r\n2      3      -1     -1\r\n7.2.1\r\n3      0      -1     -1\r\n```",
      "created_at": "2022-02-23T18:42:58Z",
      "updated_at": "2022-02-23T18:56:53Z"
    },
    {
      "author": "doctordns",
      "author_association": "COLLABORATOR",
      "body": "Running latest Insiders Win 11 build (22557) and it works as expected:\r\n```powershell\r\nPS C:\\Foo> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.1\r\nPSEdition                      Core\r\nGitCommitId                    7.2.1\r\nOS                             Microsoft Windows 10.0.22557\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0, 5.0, 5.1.10032.0, 6.0.0, 6.1.0, 6.2.0, 7.0.0, 7.1.0, 7.2.1}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\nPS C:\\Foo> Get-WindowsCapability -Online | ? Name -like 'OpenSSH*'\r\n\r\nName  : OpenSSH.Client~~~~0.0.1.0\r\nState : Installed\r\n\r\nName  : OpenSSH.Server~~~~0.0.1.0\r\nState : NotPresent\r\n```",
      "created_at": "2022-02-24T14:39:35Z",
      "updated_at": "2022-02-24T14:39:35Z"
    },
    {
      "author": "jgwinner",
      "author_association": "NONE",
      "body": "Why is this closed? It's still a bug.\r\n",
      "created_at": "2022-02-25T22:47:55Z",
      "updated_at": "2022-02-25T22:47:55Z"
    },
    {
      "author": "jgwinner",
      "author_association": "NONE",
      "body": "@doctordns Interesting, as near as I can tell our versions were identical. I don't use PS that much (I use JPSoft's TCC), so maybe there's something you've installed that I didn't - that Get-WindowsCapability doesn't check for but relies on.",
      "created_at": "2022-02-26T02:27:15Z",
      "updated_at": "2022-02-26T02:27:15Z"
    },
    {
      "author": "Nytrona",
      "author_association": "NONE",
      "body": "I am able to reproduce with PowerShell installed using the msixbundle, but not installed using the MSI (the service error can safely be ignored as a result of running in Windows Sandbox).\r\n<img width=\"1527\" alt=\"image\" src=\"https://user-images.githubusercontent.com/100308708/180006662-6cf22a4c-6cc0-4aec-aa8f-3c455e35a0b7.png\">\r\n<img width=\"1527\" alt=\"image\" src=\"https://user-images.githubusercontent.com/100308708/180007165-d2e8bcff-df57-4a14-9814-688bfd4f01bd.png\">\r\n",
      "created_at": "2022-07-20T14:27:53Z",
      "updated_at": "2022-07-20T14:27:53Z"
    },
    {
      "author": "doctordns",
      "author_association": "COLLABORATOR",
      "body": "The DISM module is a Windows PowerShell module, NOT a PowerShell 7 module. \r\n\r\nI see this:\r\n```powershell\r\n\r\nPS C:\\Foo> Get-WindowsCapability -Online | ft\r\n\r\nName                                                                State\r\n----                                                                -----\r\nAccessibility.Braille~~~~0.0.1.0                               NotPresent\r\nAnalog.Holographic.Desktop~~~~0.0.1.0                          NotPresent\r\nApp.StepsRecorder~~~~0.0.1.0                                    Installed\r\nApp.WirelessDisplay.Connect~~~~0.0.1.0                         NotPresent\r\nBrowser.InternetExplorer~~~~0.0.11.0                            Installed\r\nDirectX.Configuration.Database~~~~0.0.1.0                      NotPresent\r\n```\r\n",
      "created_at": "2022-07-20T14:46:58Z",
      "updated_at": "2022-07-20T14:46:58Z"
    },
    {
      "author": "jgwinner",
      "author_association": "NONE",
      "body": "I see this, running in an elevated prompt:\r\n\r\n```\r\nPowerShell 7.2.5\r\nCopyright (c) Microsoft Corporation.\r\n\r\nhttps://aka.ms/powershell\r\nType 'help' to get help.\r\n\r\nPS C:\\Windows\\System32> Get-WindowsCapability -Online | ft\r\nGet-WindowsCapability: Class not registered\r\n\r\nPS C:\\Windows\\System32>\r\n```",
      "created_at": "2022-07-20T19:21:21Z",
      "updated_at": "2022-07-20T19:21:21Z"
    },
    {
      "author": "jgwinner",
      "author_association": "NONE",
      "body": "It's really simple. You should be able to install PowerShell 7, on a new machine, and it should work. If it doesn't, either it's not installing enough 'stuff' or the error message needs to indicate what does need to be installed. Empty stubs do no one any good.\r\n\r\nMy bets on a bad install program.\r\n\r\n```\r\nPS C:\\Windows\\System32> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.5\r\nPSEdition                      Core\r\nGitCommitId                    7.2.5\r\nOS                             Microsoft Windows 10.0.25158\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\nPS C:\\Windows\\System32>\r\n```",
      "created_at": "2022-07-20T19:24:48Z",
      "updated_at": "2022-07-20T19:24:48Z"
    },
    {
      "author": "doctordns",
      "author_association": "COLLABORATOR",
      "body": "That sounds like a borked Windows. Class not registered means that something is missing from your windows installation.  The DISM cmdlets are shipped with Windows and the installation should properly register any classes needed. \r\n\r\nOne suggestion is an upgrade-install. Use the ISO of your current windows version and use it \"upgrade\" your existing installation. this should re-register the class. Or just do a fresh install and move on.\r\n\r\n",
      "created_at": "2022-07-21T10:01:45Z",
      "updated_at": "2022-07-21T10:01:45Z"
    },
    {
      "author": "jgwinner",
      "author_association": "NONE",
      "body": "My windows is not borked. It _was_ a fresh install. \r\n\r\nIt works fine for everything else.\r\n\r\nYOUR windows looks like it's been upgraded over the years - you probably installed something a long time ago, that a fresh install doesn't install.\r\n\r\nI installed OpenSSH another way, and everything is fine - and most other PowerShell things work fine. \r\n\r\nHave YOU tried a fresh install on a new box? ",
      "created_at": "2022-07-21T16:13:45Z",
      "updated_at": "2022-07-21T16:13:45Z"
    },
    {
      "author": "WebTiger89",
      "author_association": "NONE",
      "body": "Shit still happens with Powershell 7.2.6 installed as Appx package, same for 7.3.0-preview.8\r\n\r\n![image](https://user-images.githubusercontent.com/26472588/193426205-abe41aec-c87d-4adc-b7e4-86eb6decbacf.png)\r\n\r\nPowershell 5.1 works:\r\n![image](https://user-images.githubusercontent.com/26472588/193426174-1eca1778-7d87-4644-9ee5-2ca39691d55f.png)\r\n\r\nWhat also works is the msi Version of Powershell 7:\r\n![image](https://user-images.githubusercontent.com/26472588/193427177-4832c69b-6fa7-4ad6-ba64-cd4faab2b08f.png)\r\n",
      "created_at": "2022-10-01T19:41:23Z",
      "updated_at": "2022-10-01T20:29:04Z"
    },
    {
      "author": "ModelsRUs",
      "author_association": "NONE",
      "body": "I don't know why this issue is closed. I'm experiencing the same thing.\r\nWindows 11 Pro.\r\nRunning PowerShell 7.3.0. Results identical in multiple shells: PowerShell, Terminal, or VS Code.\r\nStatement: Get-WindowsDriver -online -all\r\n\r\n> with Admn rights,  returns \"Class not registered\".\r\n> without Admin rights:, returns \"The requested operation requires elevation\"\r\n\r\n> running the same under PowerShell ISE ( 5.1.22000.832 ) as Administrator, I get output as expected.\r\n\r\nUpdate:\r\nAfter another (more careful) read of this thread, I uninstalled PowerShell. Then, instead of re-installing from the Windows Store, I downloaded / installed the [PowerShell-7.3.0-win-x64.msi] package directly from https://github.com/PowerShell/PowerShell/releases/tag/v7.3.0.  The issue now seems to be resolved.",
      "created_at": "2022-11-12T03:49:22Z",
      "updated_at": "2022-11-12T04:37:19Z"
    },
    {
      "author": "doctordns",
      "author_association": "COLLABORATOR",
      "body": "The reason the issue is closed (here) is that this is not a PowerShell issue. The module is/was a Windows PowerShell module. It appears in later versis of Windows, the module works fine (assumein elevation). This is not an issue we can fix. ",
      "created_at": "2022-11-12T15:27:17Z",
      "updated_at": "2022-11-12T15:27:17Z"
    }
  ],
  "created_at": "2021-05-20T03:11:20Z",
  "labels": [
    "Issue-Bug",
    "OS-Windows",
    "Resolution-External"
  ],
  "number": 15428,
  "state": "closed",
  "title": "DISM cmdlets not working in Powershell 7",
  "updated_at": "2022-11-12T15:27:17Z"
}