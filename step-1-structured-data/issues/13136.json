{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13136",
  "author": "mklement0",
  "body": "Note: \r\n\r\n* This is technically a breaking change, but one that to me falls into [Bucket 3: Unlikely Grey Area](https://github.com/PowerShell/PowerShell/blob/master/docs/dev-process/breaking-change-contract.md#bucket-3-unlikely-grey-area).\r\n\r\n* We've recently made an analogous change to `Invoke-WebRequest` / `Invoke-RestMethod`, which now sensibly interpret their `-OutFile` argument invariably as a _literal_ path - see #11701\r\n\r\n  * Similar fixes are pending in other contexts: #4726, #9225, #4726.\r\n\r\n## Summary of the new feature/enhancement\r\n\r\nWhen you create a symlink or reparse point, you want to target a _specific, literal_ target path - you're not looking for this path to determined via _wildcard-pattern matching_, which, however, is what currently happens: a `-Target` (`-Value`) argument is (invariably) interpreted as a wildcard pattern. What makes the behavior even less useful is that the pattern must resolve to _exactly one_ path.\r\n\r\n* Interpreting the `-Target` (`-Value`) argument as a wildcard expression means that meant-to-be-literal paths such as `[a].txt` would mistakenly target `a.txt`, if present, for instance.\r\n\r\n* Also, as a potentially unwanted side effect, if the `-Target` (`-Value`) _is_ determined via wildcard resolution, a relative input path (pattern) is invariably resolved to a _full_ path.\r\n\r\n**The sensible behavior is to _always_ treat the `-Target` (`-Value`) argument  as a _literal_ path** (and to preserve its relative-vs.-full path status, as specified).\r\n\r\n---\r\n\r\nOnce the change is implemented, the following tests - which currently fail - should succeed:\r\n\r\n```powershell\r\n$null = New-Item 'file1', 'file[1]'\r\n\r\n$targetRelative = 'file[1]'\r\n$targetAbsolute = Join-Path $pwd.providerpath 'file[1]'\r\n\r\n(New-Item -Type SymbolicLink fileL -Target $targetRelative).Target | Should -Be $targetRelative\r\n(New-Item -Force -Type SymbolicLink fileL -Target $targetAbsolute).Target | Should -Be $targetAbsolute\r\n```\r\n\r\nThe tests currently fail, because `file[1]` is interpreted as a wildcard pattern that happens to match `file1`.\r\n\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee agrees that `-Target` should have always have been a literal path and this is a bucket 3 breaking change",
      "created_at": "2020-07-15T22:48:21Z",
      "updated_at": "2020-07-15T22:48:31Z"
    },
    {
      "author": "JamesWTruher",
      "author_association": "MEMBER",
      "body": "could you add a couple of actual examples please?",
      "created_at": "2020-07-15T22:55:01Z",
      "updated_at": "2020-07-15T22:55:01Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@mklement0 Please update title and description to follow \"always\".",
      "created_at": "2020-07-16T05:40:56Z",
      "updated_at": "2020-07-16T05:40:56Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov, done.\r\n@JamesWTruher, I've added Pester tests to the bottom of the OP.",
      "created_at": "2020-07-16T08:27:13Z",
      "updated_at": "2020-07-16T08:27:13Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@mklement0 Are you ready to pull the fix? I'd review...",
      "created_at": "2020-07-16T11:11:16Z",
      "updated_at": "2020-07-16T11:11:16Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov, given that you're already familiar with that area of the code, how about we swap these roles? \ud83d\ude01",
      "created_at": "2020-07-16T13:50:18Z",
      "updated_at": "2020-07-16T13:50:18Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@mklement0 In the case we can not merge :-( without MSFT team but they are busy.",
      "created_at": "2020-07-16T15:03:30Z",
      "updated_at": "2020-07-16T15:03:30Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Since I'm not familiar with the procedures: Are you saying that if you create the PR yourself, you cannot also merge it, but if I create it, you could? Wouldn't that mean that #13082 is also blocked until a maintainer has time to review and merge?\r\n",
      "created_at": "2020-07-16T15:08:10Z",
      "updated_at": "2020-07-16T15:08:10Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Yes, I can not merge my commit without anybody approve it. (It is good policy.) So I ask community members to pull PRs so that I can review and merge a community contribution if it is simple and well covered by tests without waiting MSFT experts.",
      "created_at": "2020-07-16T15:20:23Z",
      "updated_at": "2020-07-16T15:20:23Z"
    },
    {
      "author": "huoyaoyuan",
      "author_association": "NONE",
      "body": "@iSazonov What's the status of this now? It's blocking people again and again.",
      "created_at": "2022-01-21T19:12:51Z",
      "updated_at": "2022-01-21T19:12:51Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@huoyaoyuan We haven't enough contributors and code reviewers in the project.",
      "created_at": "2022-01-22T07:06:32Z",
      "updated_at": "2022-01-22T07:06:32Z"
    }
  ],
  "created_at": "2020-07-08T18:27:30Z",
  "number": 13136,
  "state": "open",
  "title": "New-Item: When creating symbolic links (symlinks) / reparse points, the -Target path should always be treated as a *literal* path",
  "updated_at": "2022-01-22T07:06:32Z"
}