{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4348",
  "author": "mklement0",
  "body": "<sup>Related: #1759</sup>\r\n\r\nThe `Ignore` error-action value is meant to be used only with the `-ErrorAction` _common parameter_, not with the `$ErrorActionPreference` _preference variable_.\r\n\r\nAn explicit check to prevent the latter was clearly implemented (as evidenced by error message `The value Ignore is not supported for an ActionPreference variable. The provided value should be used only as a \r\nvalue for a preference parameter, and has been replaced by the default value.`), but it doesn't / doesn't properly take effect.\r\n\r\n* On the **command line**, `$ErrorActionPreference = 'Ignore'` is **accepted _at first_**. When the next error occurs, it is the error message about the invalid `$ErrorActionPreference` value that surfaces instead of the actual error's, and _only at that point_ is `$ErrorActionPreference` **reset to `Continue`**.\r\n\r\n* In a **script**, `$ErrorActionPreference = 'Ignore'` is **accepted _and_ takes effect**. A contributing factor is that **preference variables in child scopes are not type-constrained,** so I presume that no validation takes place at assignment time - see #3483\r\n\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n* On the command line:\r\n\r\n```powershell\r\n# On the command line: set to invalid value, reflect it, then trigger an error, then reflect it again.\r\n> $ErrorActionPreference = 'Ignore'; $ErrorActionPreference; 1 / 0; $ErrorActionPreference\r\n```\r\n\r\n* In a script (place code in a `*.ps1` file):\r\n\r\n```powershell\r\n$ErrorActionPreference = 'Ignore'; $ErrorActionPreference; 1/0; $ErrorActionPreference\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n* Both on the command line and in a script:\r\n\r\n```none\r\nThe value Ignore is not supported for an ActionPreference variable. The provided value should be used only as a \r\nvalue for a preference parameter, and has been replaced by the default value.\r\n...\r\nContinue\r\nAttempted to divide by zero.\r\n...\r\nContinue\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n* On the command line:\r\n\r\n```none\r\nIgnore\r\n$ErrorActionPreference = 'Ignore'; $ErrorActionPreference; 1 / 0: The value Ignore is not supported for an ActionPreference variable. The provided value should be used \r\nonly as a value for a preference parameter, and has been replaced by the default value. For more information, see the Help topic, \"about_Preference_Variables.\"\r\n    + CategoryInfo          : NotSpecified: (:) [], NotSupportedException\r\n    + FullyQualifiedErrorId : System.NotSupportedException\r\nContinue\r\n```\r\n\r\nThe value was accepted at first and retained until the next error occurred. The next error's message is mistakenly replaced with the invalid-$ErrorActionPreference-value error message, and the value is reset to `Continue` at that point.\r\n\r\n* In a script:\r\n\r\n```none\r\nIgnore\r\nIgnore\r\n```\r\n\r\nThe value was accepted, stayed in effect, and suppressed the statement-terminating error.\r\n\r\nEnvironment data\r\n----------------\r\n\r\n```powershell\r\nPowerShell Core v6.0.0-beta.4 on macOS 10.12.5\r\nPowerShell Core v6.0.0-beta.4 on Ubuntu 16.04.2 LTS\r\nPowerShell Core v6.0.0-beta.4 on Microsoft Windows 10 Pro (64-bit; v10.0.15063)\r\nWindows PowerShell v5.1.15063.413 on Microsoft Windows 10 Pro (64-bit; v10.0.15063)\r\n```\r\n",
  "closed_at": "2019-09-25T19:43:21Z",
  "comments": [
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "Related to this, this issue drives me crazy:\r\n\r\n```PowerShell\r\nfunction Test-EAPreference {\r\n    [CmdletBinding()]\r\n    param()\r\n    1/0\r\n}\r\n\r\nTest-EAPreference -ErrorAction Ignore\r\n```\r\n\r\nThe results of this command are as follows:\r\n\r\n```none\r\nTest-EAPreference : The value Ignore is not supported for an ActionPreference variable. The provided value should be used only as a value for a preference parameter, and has been replaced by the default value. For more information, see the Help topic, \"about_Preference_Variables.\"\r\nAt line:1 char:1\r\n+ Test-EAPreference -ErrorAction Ignore\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : NotSpecified: (:) [Test-EAPreference], NotSupportedException\r\n+ FullyQualifiedErrorId : System.NotSupportedException,Test-EAPreference\r\n```\r\n\r\nAccording to docs, that's a bug, correct? Because technically the function is setting `ErrorActionPreference`, but from an end user's perspective, they're just using Ignore with `-ErrorAction` which should work just fine. I felt it was worth mentioning with this bug because this is a scenario where the prevention logic is being too strict, causing a bug.",
      "created_at": "2019-04-16T01:27:12Z",
      "updated_at": "2019-04-16T01:27:49Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Indeed, @KirkMunro. What you're describing is the subject of  #1759, which also shows workarounds.",
      "created_at": "2019-04-16T01:30:56Z",
      "updated_at": "2019-04-16T01:30:56Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "Just to highlight it here as well for visibility, the best solution to this issue seems to be:\r\n\r\n1. Remove all logic that tries to prevent any action preference variable from being used as is when it has a value of `Ignore`.\r\n1. Add a new PSScriptAnalyzer rule that flags the direct assignment of any action preference variable to Ignore (via the equals operator or `Set-Variable`) as red, with appropriate documentation for that rule explaining why that's dangerous and what should be done instead.\r\n\r\nAlso shared [over here](https://github.com/PowerShell/PowerShell/issues/1759#issuecomment-484529598).",
      "created_at": "2019-04-18T16:37:11Z",
      "updated_at": "2019-04-18T16:37:11Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "There's more to this. The fact that it works in a script is simply because the logic internally was written incorrectly, only preventing `$ErrorActionPreference` from having a value of `[System.Management.Automation.ActionPreference]::Ignore` (e.g. an enumerated value). Having a value that is of type string (which is what happens whenever you create a locally scoped `$ErrorActionPreference` value -- it doesn't have to be in a script at all) allows `Ignore` to work just fine. You can also delete the top level `$ErrorActionPreference` variable, which is strongly typed as an `ActionPreference`, and then recreate it as a string and again it works.\r\n\r\nFor example:\r\n\r\n```PowerShell\r\nRemove-Variable -Name ErrorActionPreference\r\n[string]$ErrorActionPreference = 'Ignore'\r\nfunction Test-Ignore {\r\n    [CmdletBinding()]\r\n    param()\r\n    Get-Process -Id 12345678\r\n}\r\nTest-Ignore # Ignores the error because it uses the ErrorActionPreference variable of type string\r\nTest-Ignore -ErrorAction Ignore # Raises the error about using Ignore because internally it creates a strongly typed ErrorActionPreference variable of type ActionPreference, sets the value as Ignore, and then when an error comes up that would otherwise be ignored, generates the `NotSupportedException`.\r\n```\r\n\r\nThat, combined with the example below, demonstrates how terrible a job PowerShell is doing in this case, when really this is a linting problem, not something that the parser/compiler/interpreter should care about at all.\r\n\r\n```PowerShell\r\nfunction Test-Ignore2 {\r\n    [CmdletBinding()]\r\n    param()\r\n    'No errors to see here, move along'\r\n}\r\nTest-Ignore2 -ErrorAction Ignore # I can use this for functions some of the time, as long as they don't have errors to ignore? *sigh*\r\n```\r\n\r\n@SteveL-MSFT: Here's one for a committee meeting. Please give the green light to just remove the nonsensical code blocking Ignore from `$ErrorActionPreference` (but only some of the time, as this illustrates), in favor of a PSSA rule to warn folks who don't know better instead.",
      "created_at": "2019-04-27T00:25:40Z",
      "updated_at": "2019-04-27T00:26:13Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "To add an additional thought for the committee: `ActionPreference.Suspend` is not supported in PowerShell Core (it's only used for workflows), and today it just adds confusion to the code with checks to ensure that value isn't used where there doesn't need to be any (plus some of those checks suffer the same issues identified for `ActionPreference.Ignore`, since they use the same logic). Do we need to keep `ActionPreference.Suspend` around at this point or can we just chuck it and the half-dozen checks related to it?",
      "created_at": "2019-04-27T00:59:58Z",
      "updated_at": "2019-04-27T00:59:58Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "Sorry for the ignorance here (and mostly this is a note to myself for a Committee discussion later today), but why is setting EAP to Ignore dangerous? ",
      "created_at": "2019-05-08T21:03:20Z",
      "updated_at": "2019-05-08T21:03:20Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Mainly because it effectively disables all possibility to handle non-terminating errors if you're not aware it's been set. For example, say you don't quite understand the gravity of it, and you set it in your profile.\r\n\r\nMany commands will now simply cease to provide output, with no apparent reason as to why. No errors are generated or stored in $error, nothing is displayed. It's possible that for some poorly-designed commands or functions that this could be actually harmful, but in my mind it would mostly hurt the user experience for those less familiar with the language. \r\n\r\nThat said, it probably isn't that huge of a concern, really. ",
      "created_at": "2019-05-08T21:29:56Z",
      "updated_at": "2019-05-08T21:29:56Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee reviewed this and agrees that the check for `Ignore` should be removed and allow the user to set what they want.  Separately, we should have a PSScriptAnalyzer rule to detect and recommend against setting EAP.",
      "created_at": "2019-05-08T22:23:13Z",
      "updated_at": "2019-05-08T22:23:13Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT What about [the question about `ActionPreference.Suspend`](#issuecomment-487241334)? What was the decision there?",
      "created_at": "2019-05-09T00:38:05Z",
      "updated_at": "2019-05-09T00:38:45Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@KirkMunro sorry we missed that.  Can you open a new issue on that and cc me to mark for @PowerShell/powershell-committee review?  Thanks.",
      "created_at": "2019-05-09T01:01:45Z",
      "updated_at": "2019-05-09T01:01:45Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "FYI, I already included a fix for this as part of PR #8205.",
      "created_at": "2019-05-09T16:37:43Z",
      "updated_at": "2019-05-09T16:37:43Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "The fix for this was to allow `ActionPreference.Ignore` to be assigned to any action preference variable, which allows it to be used in functions as well. This fix was merged and included in PowerShell 7 preview 4. I believe this issue can be closed.",
      "created_at": "2019-09-25T15:51:37Z",
      "updated_at": "2019-09-25T15:51:37Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "/cc @iSazonov \ud83d\ude42 ",
      "created_at": "2019-09-25T15:54:17Z",
      "updated_at": "2019-09-25T15:54:17Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Fixed by #10317",
      "created_at": "2019-09-25T19:43:21Z",
      "updated_at": "2019-09-25T19:43:21Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@KirkMunro Thanks for fixing this!",
      "created_at": "2019-09-26T04:52:31Z",
      "updated_at": "2019-09-26T04:52:31Z"
    }
  ],
  "created_at": "2017-07-26T16:15:06Z",
  "labels": [
    "Issue-Bug",
    "WG-Engine",
    "Resolution-Fixed",
    "Committee-Reviewed"
  ],
  "number": 4348,
  "state": "closed",
  "title": "Preventing setting 'Ignore' as the $ErrorActionPreference value is poorly enforced on the command line, and not at all in scripts",
  "updated_at": "2019-09-26T04:52:31Z"
}