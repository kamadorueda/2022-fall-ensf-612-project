{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5438",
  "author": "pcgeek86",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\n- Windows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nIf it is a bug report:\r\n- make sure you are able to repro it on the latest released version. \r\nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://github.com/PowerShell/PowerShell/blob/master/docs/KNOWNISSUES.md).\r\n- Fill out the following repro template:\r\n\r\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\r\n-->\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\nPS /Users/tsulli> cat $profile\r\n$env:PATH += ';/usr/local/bin'\r\nSet-PSReadlineOption -EditMode Windows\r\nPS /Users/tsulli> Get-Command -Name brew\r\nGet-Command : The term 'brew' is not recognized as the name of a cmdlet, function, script file, or operable program.\r\nCheck the spelling of the name, or if a path was included, verify that the path is correct and try again.\r\nAt line:1 char:1\r\n+ Get-Command -Name brew\r\n+ ~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : ObjectNotFound: (brew:String) [Get-Command], CommandNotFoundException\r\n    + FullyQualifiedErrorId : CommandNotFoundException,Microsoft.PowerShell.Commands.GetCommandCommand\r\n\r\nPS /Users/tsulli> Test-Path -Path /usr/local/bin/brew\r\nTrue\r\nPS /Users/tsulli> /usr/local/bin/brew\r\nExample usage:\r\n  brew search [TEXT|/REGEX/]\r\n  brew (info|home|options) [FORMULA...]\r\n  brew install FORMULA...\r\n  brew update\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```none\r\nPowerShell should search paths in $env:PATH for executable files.\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n```none\r\nPowerShell doesn't seem to be honoring the $env:PATH environment variable, when modified on startup via the PowerShell profile script.\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\nPS /Users/tsulli> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.0-beta.9\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.0-beta.9\r\nOS                             Darwin 16.7.0 Darwin Kernel Version 16.7.0: Wed Oct  4 00:17:00 PDT 2017; root:xnu-3789.71.6~1/RELEASE_X86_64\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\nCheers,\r\nTrevor Sullivan",
  "closed_at": "2017-11-14T19:52:40Z",
  "comments": [
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@pcgeek86 I cannot reproduce this. \r\n\r\nI did notice one thing:  You are using `';/usr/local/bin'`, the path separator on macOS is `:`. I'm not sure if that was a transpose issue or not.\r\n\r\nThis is what i tested with in my profile:\r\n\r\n```powershell\r\n$env:PATH += [System.IO.Path]::PathSeparator + '/testy'\r\n```\r\n\r\nI already have `/usr/local/bin` in my path. So I created `/testy/testy` and `chmod 755`-ed it. The launched pwsh:\r\n\r\n```powershell\r\n$env:PATH\r\nGet-Command testy\r\n```\r\n\r\n```none\r\n/usr/local/microsoft/powershell/6.0.0-beta.9:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/no/lo/existo:/testy\r\nCommandType     Name                                               Version    Source\r\n-----------     ----                                               -------    ------\r\nApplication     testy                                              0.0.0.0    /testy/testy\r\n\r\n```",
      "created_at": "2017-11-14T00:47:01Z",
      "updated_at": "2017-11-14T00:47:01Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "If only we had a handy built-in var like `$PSPathSep`, folks could more easily avoid such errors.  Now where have I seen such a proposal?  Oh, I know #5340 :-)",
      "created_at": "2017-11-14T00:54:11Z",
      "updated_at": "2017-11-14T00:54:11Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@rkeithhill I had you in mind the whole time I was testing this... I think you meant `$PS:PathSeparator` \ud83d\ude09 ",
      "created_at": "2017-11-14T01:03:43Z",
      "updated_at": "2017-11-14T01:03:43Z"
    },
    {
      "author": "thezim",
      "author_association": "CONTRIBUTOR",
      "body": "@pcgeek86 also look at #5423. @abock has a good solution too which would pull in `/usr/local/bin` in a bashish the way.",
      "created_at": "2017-11-14T03:12:29Z",
      "updated_at": "2017-11-14T03:12:29Z"
    },
    {
      "author": "pcgeek86",
      "author_association": "NONE",
      "body": "Oh.... haha. I see that I've made a mistake in the path separator. Thanks for calling that out @markekraus. I'm used to the Windows platform using the `;` separator instead.",
      "created_at": "2017-11-14T19:44:25Z",
      "updated_at": "2017-11-14T19:44:25Z"
    }
  ],
  "created_at": "2017-11-13T23:51:39Z",
  "labels": [
    "Issue-Question",
    "Resolution-Answered"
  ],
  "number": 5438,
  "state": "closed",
  "title": "PowerShell not honoring $env:PATH environment variable",
  "updated_at": "2017-11-17T05:09:43Z"
}