{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12228",
  "author": "PsychoData",
  "body": "# Add parameters to enable you to pass default filters to Out-GridView windows for when they are first shown. \r\n\r\nFor example, if I was writing a process to look for processes of some sort, and I wanted to show a simple GUI to say which process to kill. \r\n\r\nI could show them a list of all processes, but it would be a nice feature if I could show them just a list of processes under their username/login session, predefined as a Criteria Filter\r\n\r\n<!-- \r\nA clear and concise description of what the problem is that the new feature would solve.\r\nTry formulating it in user story style (if applicable):\r\n'As a user I want X so that Y.' with X being the being the action and Y being the value of the action.\r\n-->\r\n\r\n# Proposed technical implementation details (optional)\r\n\r\nWith the current/old way I could filter it before I push it to Out-GridView, but if they wanted to find a process from another user, it wouldn't work or would have to be handled more completely in code. \r\n\r\nThe result would let you filter further, but not go backwards. \r\n![image](https://user-images.githubusercontent.com/3719116/77948778-ebcc1180-7293-11ea-8b4f-43ac566c6c5f.png)\r\n\r\nWhere, if there was an option to pre-fill the form, we could show it to the user with Quick Search predefined like this\r\n![image](https://user-images.githubusercontent.com/3719116/77948940-2df55300-7294-11ea-82bb-d4afff65ee55.png)\r\n\r\nor, even better, pre-define the Criteria directly so that they could still easily use the quick search\r\n![image](https://user-images.githubusercontent.com/3719116/77949078-5c732e00-7294-11ea-8766-ea0d58a40d74.png)\r\n\r\nIf we could add a -DefaultFilter and/or -Criteria option, that might be sufficient. \r\nPerhaps it could even support the same FilterScript as Where-Object? \r\nIf there was a way we could just pass `Get-Process -IncludeUsername | Out-GridView -FilterScript {$_.Username -like \"*Administrator\"} ` and it predefined the Criteria from that, ending up looking like my final screenshot, I think that would be my Ideal implementation\r\n\r\n<!-- \r\nA clear and concise description of what you want to happen.\r\nConsider providing an example PowerShell experience with expected result.\r\n-->\r\n",
  "closed_at": "2020-03-31T05:45:47Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@PsychoData The cmdlet was added to PowerShell Core only for backward compatibility. The code is frozen in the repo. \r\nAll new work will be in https://github.com/PowerShell/GraphicalTools repo. Please move your proposal and discuss there. See new Out-ConsoleGridView cmdlet.\r\n\r\n<blockquote><img src=\"https://avatars0.githubusercontent.com/u/11524380?s=400&v=4\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/PowerShell/GraphicalTools\">PowerShell/GraphicalTools</a></strong></div><div>A module that mixes PowerShell and GUIs! - built on Avalonia and gui.cs - PowerShell/GraphicalTools</div></blockquote>",
      "created_at": "2020-03-31T05:45:46Z",
      "updated_at": "2020-03-31T05:46:41Z"
    },
    {
      "author": "PsychoData",
      "author_association": "NONE",
      "body": "New issue created there, thanks https://github.com/PowerShell/GraphicalTools/issues/78",
      "created_at": "2020-03-31T13:28:03Z",
      "updated_at": "2020-04-01T05:10:19Z"
    }
  ],
  "created_at": "2020-03-30T18:51:38Z",
  "number": 12228,
  "state": "closed",
  "title": "Feature Request - Out-GridView, define/pass \"default\" filters through Parameters",
  "updated_at": "2020-04-01T05:10:19Z"
}