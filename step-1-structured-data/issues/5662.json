{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5662",
  "author": "markekraus",
  "body": "## PR Summary\r\n\r\nReference #5610\r\n\r\n* Merges partial classes in the WebCmdlets\\Common folder\r\n* Sorts the `using` statements\r\n* Sorts class elements according to StyleCop guidance https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1201.md\r\n* Sorts within the same elements by access type according to StyleCop guidance https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1202.md\r\n* Sorts elements of the same type and access alphabetically.\r\n* Order of cmdlet public properties and parameters was untouched to preserve their order in PowerShell\r\n* Proper inheritance was added to `InvokeRestMethodCommand`.\r\n* Some new regions were created where it makes sense\r\n* Formatting and comments of code blocks was purposefully maintained. These will be handled in a separate cleanup action.\r\n* No logic was modified\r\n\r\n## PR Checklist\r\n\r\nNote: Please mark anything not applicable to this PR `NA`.\r\n\r\n- [X] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - [x] Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- NA User facing [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - NA Issue filed - Issue link:\r\n- [x] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- NA [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n    - [x] [Add `[feature]` if the change is significant or affectes feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` to the beginning of the title and remove the prefix when the PR is ready.\r\n",
  "closed_at": "2017-12-19T22:50:39Z",
  "comments": [
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "1. If you have enabled styleCop, can you enable https://www.codefactor.io on your branch so I can see that your changes improve the style?\r\n1. Such a large amount of code was changed, I have to take your word that no logic was changed.  Can we break this up into smaller PRs to get this done?   The following are ideas on how to break it up:\r\n    - Perhaps merge the partial classes without sorting ( should be easy to review )\r\n    - Sort using statements (should be easy to review)\r\n    - Sort various element attempting to keep under a line limit (I would complete at least one file.)  The link [@iSazonov](https://smartbear.com/learn/code-review/best-practices-for-peer-code-review/) suggested says 400.\r\n    - Sometimes between coworkers, we use commits for breaking up reviews\r\n\r\n\r\n",
      "created_at": "2017-12-19T19:56:47Z",
      "updated_at": "2017-12-19T19:56:47Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@TravisEz13 I actually haven't enabled stylecop. I tried but couldn't get it to work. I believe it would apply to the entire utility assembly which would make it very hard to track down just the web cmdlet code issues. This was all somewhat beyond me. So I resorted to sorting the code manually and using the stylecop rules as guidance. We can't use them all as, for example, our contributor guidelines say to group the private backing fields with public properties. that will make it hard to see what private field  and private-before-public sorting issues are actually issues.\r\n\r\nI can break it up, yes. I tried breaking up a large change into the multiple commits in a single PR before, but @iSazonov didn't like that. I don't care how the work is broken up, but I could use some guidance, clarity, and consistency. I can be told one thing in a PR/issue, follow that to the letter in a new PR, and then have reviewers telling me to redo it a different way. This pattern has repeated several times and results in a lot of wasted time for all involved.\r\n\r\nSo, should I break this out into separate PRs? Or should I do multiple commits in a single PR or should I group a few commits in a few PRs? Should I move the files first? start with the partial class merges? ",
      "created_at": "2017-12-19T20:28:00Z",
      "updated_at": "2017-12-19T20:28:00Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@markekraus Can you point me to the previous PR with the objection from @iSazonov ?\r\n",
      "created_at": "2017-12-19T21:39:53Z",
      "updated_at": "2017-12-19T21:39:53Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "https://github.com/PowerShell/PowerShell/pull/5518#issuecomment-346425873",
      "created_at": "2017-12-19T21:44:08Z",
      "updated_at": "2017-12-19T21:44:08Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "I think we should try to take an incremental approach.  One of the reasons to enable codefactor.io on your branch (maybe we should enable it after 6.0.0 is released) is to show that the PR was an overall improvement (did not introduce more issues than in removed,) not to say that you have to fix every issue.   \r\n\r\nI reviewed this link (https://smartbear.com/learn/code-review/best-practices-for-peer-code-review/) further and I agree with the line limit and the reason behind it.  I spend an hour reviewing this PR and completed a few hundred lines.\r\n\r\nIs there a reason that we cannot do a simple merge of the partial classes without any sorting (perhaps you could sort the using statements?)  This seems like a good starting point.",
      "created_at": "2017-12-19T22:03:38Z",
      "updated_at": "2017-12-19T22:03:38Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "Right now the pieces of the partial classes are in the same file. What constitutes a simple merge in this case? do I just move that code so it's in the same class brackets at the end of the class? \r\n\r\nOne reason why I was merging and sorting at the same time is that the classes are so out of alignment it's hard to even chose a logical place to move the partial code into. I can move the code directly in the end of the larger class, but then that code is all unsorted and that's sort of how it is now, only its in its own partial class block. If i try to move it with similar element types, I might have 2 to 3 places to chose from. If i try to move it to where it _should_ be it will be out of place because the code around it is not where it should be.",
      "created_at": "2017-12-19T22:16:19Z",
      "updated_at": "2017-12-19T22:16:19Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "Another approach would be to focus on a limited number of classes to keep under the line limit.  I see one file that is over the line limit by itself.  I'd say try this approach with the smaller files and we can proceed from there.  @daxian-dbw @adityapatwardhan We should update the guidelines, but there should not be a requirement that a certain change is completed in a single PR unless splitting the change would have a negative effect on the project.",
      "created_at": "2017-12-19T22:40:41Z",
      "updated_at": "2017-12-19T22:40:41Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "Ok. I'm going to close this PR so I can keep the branch for reference. I turned on codefactor.io, but I'm not real happy with the full read/write access it requires. I will work on smaller chunks per PR.",
      "created_at": "2017-12-19T22:50:32Z",
      "updated_at": "2017-12-19T22:50:32Z"
    }
  ],
  "created_at": "2017-12-09T14:31:38Z",
  "number": 5662,
  "state": "closed",
  "title": "Sort and Merge Classes in WebCmdlets\\Common",
  "updated_at": "2018-01-19T18:59:49Z"
}