{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4440",
  "author": "SteveL-MSFT",
  "body": "<!--\r\n\r\nIf it is a bug report:\r\n- make sure you are able to repro it on the latest released version. \r\nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\r\n- Search the existing issues.\r\n- Refer to the [FAQ](../docs/FAQ.md).\r\n- Refer to the [known issues](../docs/KNOWNISSUES.md).\r\n- Fill out the following repro template\r\n\r\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\r\n-->\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```bash\r\n# start in bash\r\necho \"hello\" > z\\\"test\\\".txt\r\npowershell\r\ncat z<tab>\r\n# powershell does tab complete it, but it's wrong without the embedded quotes\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```none\r\nhello\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n```none\r\nno such file or directory\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\nName                           Value                                                                                  \r\n----                           -----                                                                                  \r\nPSVersion                      6.0.0-beta                                                                             \r\nPSEdition                      Core                                                                                   \r\nGitCommitId                    v6.0.0-beta.4                                                                          \r\nOS                             Linux 4.10.0-28-generic #32~16.04.2-Ubuntu SMP Thu Jul 20 10:19:48 UTC 2017            \r\nPlatform                       Unix                                                                                   \r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}                                                                \r\nPSRemotingProtocolVersion      2.3                                                                                    \r\nSerializationVersion           1.1.0.1                                                                                \r\nWSManStackVersion              3.0      \r\n\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Note that even the correct-for-PowerShell quoting - ` 'z\"test\".txt'` - wouldn't work in this case, because you're invoking an _external utility_, which on Unix is still broken:\r\n\r\n```powershell\r\n# PowerShell-internally: OK\r\n> Get-Content 'z\"test\".txt'\r\nhello\r\n```\r\n\r\n```powershell\r\n# Calling external utility: broken - note how the embedded \" are stripped.\r\n# From *Bash*, this would work just fine.\r\n> cat 'z\"test\".txt'\r\ncat: ztest.txt: No such file or directory\r\n```\r\n\r\nOn Unix, there should be no need for a different quoting style, given that the arguments - after processing by PowerShell - should be passed _as-is_, as an _array of literals_ containing _no syntactical elements_  - this is what Bash does (any POSIX-like shell).\r\n\r\nWith how things currently work, the least painful way to make the command work is with the following quoting style (presumably relying on the C runtime to strip away the  - _unnecessary_ for `cat` - `\\` instances):\r\n\r\n```powershell\r\n> cat 'z\\\"test\\\".txt'\r\nhello\r\n```\r\n\r\nAgain, note that in _Bash_ `cat 'z\"test\".txt'` would work just fine, and that, conversely, `'z\\\"test\\\".txt'` breaks when you invoke _cmdlets_.",
      "created_at": "2017-08-01T21:16:13Z",
      "updated_at": "2017-08-01T21:23:43Z"
    }
  ],
  "created_at": "2017-07-31T23:58:29Z",
  "labels": [
    "WG-Engine-Providers"
  ],
  "number": 4440,
  "state": "open",
  "title": "FileSystem provider does not work with filenames that contain quotes",
  "updated_at": "2017-08-01T21:23:43Z"
}