{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9137",
  "author": "vexx32",
  "body": "# Summary of the new feature/enhancement\r\n\r\nI sometimes want / need to convert dictionaries into simpler hashtables, or want to construct a strongly-typed dictionary from a hashtable. This is currently very annoying to do.\r\n\r\nI would love to be able to do something like this:\r\n\r\n```powershell\r\n$Hashtable = @{ Ducks = 10; Horses = 1 }\r\n\r\n$Dictionary = [System.Collections.Generic.Dictionary[string, int]]$Hashtable\r\n```\r\n\r\nThis currently errors out:\r\n```\r\nCannot create object of type \"System.Collections.Generic.Dictionary`2[System.String,System.Int32]\".\r\nThe Ducks property was not found for the System.Collections.Generic.Dictionary`2[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Int32, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]] object.\r\nThe available property is:\r\n[Comparer <System.Collections.Generic.IEqualityComparer`1[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]>] , \r\n[Count <System.Int32>] , \r\n[Keys <System.Collections.Generic.Dictionary`2+KeyCollection[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Int32, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]>] ,\r\n[Values <System.Collections.Generic.Dictionary`2+ValueCollection[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Int32, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]>] ,\r\n[IsReadOnly <System.Boolean>] , \r\n[IsFixedSize <System.Boolean>] , \r\n[SyncRoot <System.Object>] ,\r\n[IsSynchronized <System.Boolean>]\r\nAt line:1 char:1\r\n+ $Dictionary = [System.Collections.Generic.Dictionary[string, int]]$Ha ...\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : InvalidArgument: (:) [], RuntimeException\r\n+ FullyQualifiedErrorId : ObjectCreationError\r\n```\r\n\r\n# Proposed technical implementation details (optional)\r\n\r\nAs you can see from the errors, the default conversion path currently for hashtable -> _any_ .NET object (as far as I can see at the moment) basically just attempts to build a new object of the specified type, assuming the hashtable key/value pairs are property names and values to be applied to the new object.\r\n\r\nThis simply doesn't make any real sense for most things that implement `IDictionary`, as you _probably_ just want to convert the object between dictionary types.\r\n\r\nWe could probably just add some conversion paths into LanguagePrimitives, I think? There would be some failing cases (where key/value types don't match up and can't be converted into the requested type for generic and strongly-typed dictionaries, etc.)\r\n",
  "closed_at": null,
  "comments": [],
  "created_at": "2019-03-14T16:10:50Z",
  "labels": [
    "Issue-Enhancement"
  ],
  "number": 9137,
  "state": "open",
  "title": "Feature Request: Provide Conversion Paths for Hashtables to/from other IDictionary objects",
  "updated_at": "2019-03-14T16:12:31Z"
}