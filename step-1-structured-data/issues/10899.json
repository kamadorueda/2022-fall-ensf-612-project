{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10899",
  "author": "SteveL-MSFT",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nAdd back GraphicalHost assembly code to enable Out-GridView, Show-Command, and Get-Help -ShowWindow on Windows only.\r\n\r\nSome of the original code was changed for updated copyright and some style issues.  Because of a difference in the Windows build system vs dotnet msbuild on embedding resources, had to change resgen to work with what XAML expects.  I would focus the code review on source code that was already in this repo that had to be changed to make this work.  The original WPF code is largely unchanged except where needed to get it to compile.\r\n\r\nNo automated tests so I did some manual validation for all three commands.\r\n\r\nIn the future, we'll probably want to split this out as a separate module, but currently part of the code is in SMA.dll and the rest is in GraphicalHost.dll.  Removing the SMA.dll code is not trivial as we need to expose new public APIs for the module in how the cmdlet talks to the WPF window.  Also the cmdlet is part of Utility module which is a breaking change in itself.\r\n\r\nNote the source folder is the namespace name as resgen uses that to produce the path to the resources and the code expects that path.\r\n\r\n## PR Context\r\n\r\nFix https://github.com/PowerShell/PowerShell/issues/10599\r\nFix https://github.com/PowerShell/PowerShell/issues/9778\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [x] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [x] Issue filed: https://github.com/MicrosoftDocs/PowerShell-Docs/issues/5002\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2019-11-01T17:05:33Z",
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Marking it WIP as I work through the Codacy and Codefactor issues",
      "created_at": "2019-10-26T01:51:46Z",
      "updated_at": "2019-10-26T01:51:46Z"
    },
    {
      "author": "Jaykul",
      "author_association": "CONTRIBUTOR",
      "body": "I still think this should be an external module \ud83d\ude1e ",
      "created_at": "2019-10-26T12:49:47Z",
      "updated_at": "2019-10-26T12:49:47Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@Jaykul did you read the PR description above?",
      "created_at": "2019-10-26T15:45:29Z",
      "updated_at": "2019-10-26T15:45:29Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov did you have a script to fix all the documentation issues previously?  also making the using directives alphabetical. ",
      "created_at": "2019-10-26T16:36:46Z",
      "updated_at": "2019-10-26T16:37:26Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PoshChan please retry linux",
      "created_at": "2019-10-26T16:52:59Z",
      "updated_at": "2019-10-26T16:52:59Z"
    },
    {
      "author": "PoshChan",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT, successfully started retry of `PowerShell-CI-Linux`",
      "created_at": "2019-10-26T16:53:31Z",
      "updated_at": "2019-10-26T16:53:31Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> @iSazonov did you have a script to fix all the documentation issues previously? also making the using directives alphabetical.\r\n\r\nFor second https://github.com/PowerShell/PowerShell/pull/9490\r\n\r\nFixing doc issues was done manually. I can do this in follow PR.",
      "created_at": "2019-10-26T16:58:05Z",
      "updated_at": "2019-10-26T16:58:05Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov Seems like some of the doc rules can be scriptable, let me give it a shot since there's so many.  Thanks for the `using` script.",
      "created_at": "2019-10-26T17:00:12Z",
      "updated_at": "2019-10-26T17:00:12Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "For doc issues I used many Regex queries in VS Code and Notepad++. ",
      "created_at": "2019-10-26T17:01:42Z",
      "updated_at": "2019-10-26T17:01:42Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> I would focus the code review on source code that was already in this repo that had to be changed to make this work. The original WPF code is largely unchanged except where needed to get it to compile.\r\n\r\nMaybe add original code in first PR and then add new commits in follow PRs? It is simplify code review.",
      "created_at": "2019-10-26T17:33:13Z",
      "updated_at": "2019-10-26T17:33:13Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov I'm ok deferring the code cleanup.  However, it's a large amount of code.  I'd rather focus this effort on the changes to files outside of the graphicalhost code base since that code base is from Windows PowerShell and has been working for some time.  I don't want to invest in improving GraphicalHost, this is purely a parity with Windows PowerShell effort.  I'd rather invest in a cross platform version of the tools over time.",
      "created_at": "2019-10-26T17:42:25Z",
      "updated_at": "2019-10-26T17:42:25Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@sdwheeler does Show-Command also need a new fwlink?",
      "created_at": "2019-10-29T02:47:28Z",
      "updated_at": "2019-10-29T02:47:28Z"
    },
    {
      "author": "sdwheeler",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT Show-Command https://go.microsoft.com/fwlink/?linkid=2109589\n\n<blockquote><img src=\"https://docs.microsoft.com/en-us/media/logos/logo-ms-social.png\" width=\"48\" align=\"right\"><div><strong><a href=\"https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/show-command\">Show-Command (Microsoft.PowerShell.Utility)</a></strong></div><div>The Show-Command cmdlet lets you create a Windows PowerShell command in a command window. You can use the features of the command window to run the command or have it return the command to you. Show-Command is a very useful teaching and learning tool. Show-Command works on all command types, including cmdlets, functions, workflows and CIM commands. Without parameters, Show-Command displays a command window that lists all available commands in all installed modules. To find the commands in a module, select the module from the Modules drop-down list. To select a command, click the command name. To use the command window, select a command, either by using the Name or by clicking the command name in the Commands list. Each parameter set is displayed on a separate tab. Asterisks indicate the mandatory parameters. To enter values for a parameter, type the value in the text box or select the value from the drop-down box. To add a switch parameter, click to select the parameter check box. When you're ready, you can click Copy to copy the command that you've created to the clipboard or click Run to run the command. You can also use the PassThru parameter to return the command to the host program, such as the Windows PowerShell console. To cancel the command selection and return to the view that displays all commands, press Ctrl and click the selected command. In the Windows PowerShell Integrated Scripting Environment (ISE), a variation of the Show-Command window is displayed by default. For information about using this command window, see the Windows PowerShell ISE Help topics. This cmdlet was introduced in Windows PowerShell 3.0. </div></blockquote>",
      "created_at": "2019-10-29T03:31:04Z",
      "updated_at": "2019-10-29T03:31:07Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@SteveL-MSFT please resolve merge conflict.\r\n\r\nAlso, open a PR in the PowerShell-Native repo to add the new assembly in the trusted assemblies list:\r\n\r\nhttps://github.com/PowerShell/PowerShell-Native/blob/d4acbd519d1c77e07abc894db42853055ef65f55/src/powershell-native/nativemsh/pwrshcommon/pwrshcommon.cpp#L684-L686\n\n<blockquote><img src=\"https://avatars0.githubusercontent.com/u/11524380?s=400&v=4\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicon.ico\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/PowerShell/PowerShell-Native\">PowerShell/PowerShell-Native</a></strong></div><div>Contribute to PowerShell/PowerShell-Native development by creating an account on GitHub.</div></blockquote>",
      "created_at": "2019-10-30T21:18:50Z",
      "updated_at": "2019-10-30T21:18:53Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@adityapatwardhan does it make sense to add it to trusted assemblies since it can't be used remotely?",
      "created_at": "2019-10-31T19:05:09Z",
      "updated_at": "2019-10-31T19:05:34Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@SteveL-MSFT merging this PR. I can confirm with @PaulHigin if the change in trusted assemblies must be made. It does not block this PR.",
      "created_at": "2019-11-01T17:04:56Z",
      "updated_at": "2019-11-01T17:04:56Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.0.0-preview.6` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.0.0-preview.6)\n",
      "created_at": "2019-11-21T22:34:51Z",
      "updated_at": "2019-11-21T22:34:51Z"
    },
    {
      "author": "RichardSiddaway",
      "author_association": "NONE",
      "body": "Get-Help -ShowWindow only shows the first paragraph of text for each parameter. This is a bug from Windows PowerShell that seems to have been carried over",
      "created_at": "2019-11-22T11:56:16Z",
      "updated_at": "2019-11-22T11:56:16Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@RichardSiddaway No plans exist to fix the old code. All new graphical cmdlets will be in https://github.com/PowerShell/GraphicalTools Also MSFT team has a plan to rewrite Help module.\n\n<blockquote><img src=\"https://avatars0.githubusercontent.com/u/11524380?s=400&v=4\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicon.ico\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/PowerShell/GraphicalTools\">PowerShell/GraphicalTools</a></strong></div><div>A module that mixes PowerShell and GUIs! - built on Avalonia - PowerShell/GraphicalTools</div></blockquote>",
      "created_at": "2019-11-22T12:08:54Z",
      "updated_at": "2019-11-22T12:08:56Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@RichardSiddaway, @iSazonov is correct, this is simply a straight port with no plans to invest in these tools.  They are added for parity with Windows PowerShell. ",
      "created_at": "2019-11-22T17:50:40Z",
      "updated_at": "2019-11-22T17:50:40Z"
    },
    {
      "author": "RichardSiddaway",
      "author_association": "NONE",
      "body": "That's a shame that a long standing bug has been allowed to propagate into v7",
      "created_at": "2019-11-22T18:19:38Z",
      "updated_at": "2019-11-22T18:19:38Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@RichardSiddaway We are not happy too. I hope there are people who will port the cmdlets. Welcome to these projects.",
      "created_at": "2019-11-22T19:16:34Z",
      "updated_at": "2019-11-22T19:16:34Z"
    },
    {
      "author": "yecril71pl",
      "author_association": "CONTRIBUTOR",
      "body": "https://github.com/PowerShell/GraphicalTools/issues/29",
      "created_at": "2020-07-13T22:31:21Z",
      "updated_at": "2020-07-13T22:31:21Z"
    }
  ],
  "created_at": "2019-10-25T22:44:19Z",
  "number": 10899,
  "state": "closed",
  "title": "Add GraphicalHost assembly to enable Out-GridView, Show-Command, and Get-Help -ShowWindow",
  "updated_at": "2020-07-13T22:31:21Z"
}