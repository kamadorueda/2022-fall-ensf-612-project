{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12141",
  "author": "mklement0",
  "body": "Closely related: #13423\r\n\r\n# Summary of the new feature/enhancement\r\n\r\nFollowing the model of the `-Raw` switch that was added to `Select-String` (see #7713) in order to return just the matching _strings_, without the wrapper object with metadata, it would be both convenient and more efficient to be able to have `Measure-Object` return _just_ the measurement of interest; e.g.:\r\n\r\n```powershell\r\n# WISHFUL THINKING\r\n\r\nPS> 3, 7, 2 | Measure-Object -Maximum -Raw\r\n7  # max. returned directly, as a single number rather than \r\n   # as part of a [GenericObjectMeasureInfo] instance\r\n\r\n# -Count, which implies -Raw, would return just the count.\r\nPS> 3, 7, 2 | Measure-Object -Count\r\n3\r\n```\r\n\r\n# Proposed technical implementation details (optional)\r\n\r\nImplement a `-Raw` switch that makes `Measure-Object` return a single number that is the requested measurement only.\r\n\r\n`-Raw` must be mutually exclusive with `-AllStats` and must cause a syntax error if _more than one_ of the specific measurements are requested (`-Sum`, `-Maximum`, ...)\r\n\r\nAdditionally, a new `-Count` switch would imply `-Raw` and output the count only.\r\n\r\nWith respect to the (now variable) return type, improvements on the always-`[double]` properties of the default output type, [`Microsoft.PowerShell.Commands.GenericObjectMeasureInfo`](https://docs.microsoft.com/en-US/dotnet/api/Microsoft.PowerShell.Commands.GenericObjectMeasureInfo) (except for `-Minimum` and `-Maximum`), could be implemented:\r\n\r\n* Note: The output-type logic for `-Minimum` and `-Maximum` is currently broken for numeric types  - see #13422; the input type of the min/max value identified should always be _preserved as-is_ on output, and this behavior therefore applies here too.\r\n\r\n* For the inherently non-integral `-Average` and `-StandardDeviation` measurements, `[double]` is an appropriate default, but with (at least one) `[decimal]` input `[decimal]` should also be used on output.\r\n\r\n* For the `-Sum` and `-Count` measurements, integer-only input should should also output an integral type, with  _automatic type widening_, analogous to the widening (type promotion) that happens in PowerShell's number-literal parsing (`[int]` ->`[long]` -> `[decimal]`, and possibly even to `[bigint]` rather than the `[double]` that is the widest type for number literals. \r\n  * For `-Count`, numbers beyond `[int]` are unlikely to occur in practice, except perhaps if opt-in enumeration of array-valued properties is implemented via the proposed `-Recurse` switch - see #7244.\r\n\r\nAnalogous type-widening is proposed for the whole, multi-statistics output object in #13423, via an `-AsAutoNumber` switch.\r\n",
  "closed_at": null,
  "comments": [],
  "created_at": "2020-03-17T11:27:36Z",
  "labels": [
    "Issue-Enhancement"
  ],
  "number": 12141,
  "state": "open",
  "title": "Add a  switch to Measure-Object to make it return the requested measurement only, as a single number / value",
  "updated_at": "2020-08-12T21:15:36Z"
}