{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13995",
  "author": "xtqqczze",
  "body": "https://github.com/PowerShell/PowerShell/blob/a16f3eb20462b49423a77b37207ec15743e23f9b/src/System.Management.Automation/engine/remoting/common/RemoteSessionHyperVSocket.cs#L45-L57\r\n\r\nWhy is the setter for `ServiceId` assigning to `_vmId`? It is unclear whether this is intended behaviour or not.",
  "closed_at": "2021-07-07T11:52:37Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "/cc @PaulHigin ",
      "created_at": "2020-11-06T04:16:40Z",
      "updated_at": "2020-11-06T04:16:40Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "It comes from Windows PowerShell. If it is not bug we need to add a comment in the code.\r\n\r\nIt seems was @SteveL-MSFT who communicated with Hyper-V team in last time.",
      "created_at": "2020-11-06T11:00:29Z",
      "updated_at": "2020-11-06T11:00:29Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "@PaulHigin @SteveL-MSFT Can someone look at this please.",
      "created_at": "2021-06-27T19:44:49Z",
      "updated_at": "2021-06-27T19:44:49Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "This looks like a typo bug to me.  The only effect appears to be that VmId and ServiceId values are not unique.  Since this class can be serialized I have to assume the information may be persisted, and fixing the typo may cause a breaking change.",
      "created_at": "2021-06-29T18:10:07Z",
      "updated_at": "2021-06-29T18:10:07Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Given how this property setter works, I don't think it's possible for `ServiceId` to be deserialised correctly currently... Currently the effect would appear to be that the underlying data for `ServiceId` will always and only ever be the default value, unless you manually set the backing field. Any attempt to set the value by the property will simply set the VM ID instead.",
      "created_at": "2021-06-29T18:14:42Z",
      "updated_at": "2021-06-29T18:14:42Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "The `Equals()` method on this class is only comparing `ServiceId` values via the `VmId` field which is overwritten with the `ServiceId` value.  The `ServiceId` field appears to always contain `Guid.Empty`.  So if if two `HyperVSocketEndPoint` objects have the same `ServiceId` but different `VmId` values they will compare the same.  Probably not a good situation.",
      "created_at": "2021-06-30T06:35:57Z",
      "updated_at": "2021-06-30T06:35:57Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "This is obviously wrong, and I feel we should take the fix.  There may be a small possibility of regression but I feel it is minimal and worth taking the fix.  I ran this by the committee and they felt the same.",
      "created_at": "2021-06-30T22:56:00Z",
      "updated_at": "2021-06-30T22:56:00Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Putting it up for grabs for now, as it seems a simple enough change for community folks to take on if they would like.",
      "created_at": "2021-06-30T23:43:26Z",
      "updated_at": "2021-06-30T23:43:26Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:This issue was addressed in #15704, which has now been successfully released as `v7.2.0-preview.8`.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.2.0-preview.8)\n",
      "created_at": "2021-07-22T21:41:28Z",
      "updated_at": "2021-07-22T21:41:28Z"
    }
  ],
  "created_at": "2020-11-06T04:00:57Z",
  "number": 13995,
  "state": "closed",
  "title": "Property setter assigning to field in HyperVSocketEndPoint",
  "updated_at": "2021-07-22T21:41:28Z"
}