{
  "_url": "https://github.com/PowerShell/PowerShell/issues/14903",
  "author": "mklement0",
  "body": "Having attempts to rename an existing file or directory to its existing name - i.e., in effect not renaming it at all - be a _quiet no-op_ is helpful in delay-bind script block-based `Rename-Item` calls where the script block happens to output the _existing_ name, as a result of a `-replace` operation not matching, for instance.\r\n\r\nWhile with _files_ this scenario indeed results in a quiet no-op, with _directories_ a non-terminating error is unexpectedly reported.\r\n\r\nNote: In case-_insensitive_ file-systems (by default: Windows, macOS), it is (commendably) currently already possible to rename a _file_ to a _case variation_ of itself (e.g., renaming `file.txt` to `File.txt`); analogously, this should work for _directories_ too (it currently results in the same behavior described below) - see #12483\r\n\r\n## Steps to reproduce\r\n\r\n```powershell\r\nPush-Location -ErrorAction Stop ($tmpDir = New-Item -Force -Type Directory (Join-Path temp: $PID))\r\n\r\n# Create two sample files...\r\nRemove-Item * -Recurse\r\n$null = New-Item -Force foo, bar\r\n# ...and two sample directories.\r\n$null = New-Item -Force -Type Directory food, bard\r\n\r\n# Try to rename the files, with only one file name actually getting changed - this WORKS.\r\n{ Get-ChildItem -File | Rename-Item -ErrorAction Stop -NewName { $_.Name -replace 'o', '@' } } | Should -Not -Throw\r\n\r\n# Ditto for the directories - this FAILS.\r\n{ Get-ChildItem -Directory | Rename-Item -ErrorAction Stop -NewName { $_.Name -replace 'o', '@' } } | Should -Not -Throw\r\n\r\nPop-Location\r\nRemove-Item $tmpDir -Recurse\r\n```\r\n\r\n## Expected behavior\r\n\r\nBoth tests should succeed: the items for which their existing name is returned by the `-NewName` script block should be quietly ignored.\r\n\r\nThat is, `foo` and `food` should be renamed to `f@@` and `f@@d`, respectively, and `bar` and `bard` should be left alone.\r\n\r\n## Actual behavior\r\n\r\nThe second test - for directories - fails:\r\n\r\n```none\r\nExpected no exception to be thrown, but an exception \r\n\"Source and destination path must be different.\"\r\n was thrown\r\n```\r\n\r\nThat is, the attempt to rename directory `bard` to its existing name caused an error.\r\n\r\n## Environment data\r\n\r\n```none\r\nPowerShell Core 7.2.0-preview.3\r\n```\r\n",
  "closed_at": null,
  "comments": [],
  "created_at": "2021-02-25T16:40:19Z",
  "number": 14903,
  "state": "open",
  "title": "Rename-Item: Renaming a file-system item to its existing name is a quiet no-op with files, but fails with directories",
  "updated_at": "2022-01-03T14:07:40Z"
}