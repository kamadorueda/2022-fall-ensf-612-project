{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13666",
  "author": "hubuk",
  "body": "## Steps to reproduce\r\n\r\nCreate a script file `test.ps1` with the following content:\r\n```powershell\r\nusing namespace System.Management.Automation\r\n\r\n<#\r\n.SYNOPSIS\r\nA simple script for problem reproduction.\r\n#>\r\nParam ($SampleParam)\r\n```\r\n\r\nExecute following command:\r\n```powershell\r\n> Get-Help .\\test.ps1\r\n```\r\n\r\n## Expected behavior\r\n\r\n```none\r\nGet-Help .\\test.ps1\r\n\r\nNAME\r\n    ...\\test.ps1\r\n\r\nSYNOPSIS\r\n    A simple script for problem reproduction.\r\n\r\n\r\nSYNTAX\r\n    ...\\test.ps1 [[-SampleParam] <Object>] [<CommonParameters>]\r\n\r\n\r\nDESCRIPTION\r\n\r\n\r\nRELATED LINKS\r\n\r\nREMARKS\r\n    To see the examples, type: \"Get-Help ...\\test.ps1 -Examples\"\r\n    For more information, type: \"Get-Help ...\\test.ps1 -Detailed\"\r\n    For technical information, type: \"Get-Help ...\\test.ps1 -Full\"\r\n```\r\n\r\n## Actual behavior\r\n\r\n```none\r\n> Get-Help .\\test.ps1\r\ntest.ps1 [[-SampleParam] <Object>]\r\n```\r\n\r\n## Environment data\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.0-preview.7\r\nPSEdition                      Core\r\nGitCommitId                    7.1.0-preview.7-10-g3effa204103460c996a8612aa70718fdf924047d\r\nOS                             Microsoft Windows 10.0.18363\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2020-09-22T13:18:58Z",
  "comments": [
    {
      "author": "hubuk",
      "author_association": "CONTRIBUTOR",
      "body": "PR pending.",
      "created_at": "2020-09-20T22:04:06Z",
      "updated_at": "2020-09-20T22:04:06Z"
    },
    {
      "author": "jhoneill",
      "author_association": "NONE",
      "body": "Comment based help must be the first or last thing in the file or in the block for a function, so it comes before the using statement \r\n\r\n```Powershell\r\n<#\r\n.SYNOPSIS\r\nA simple script for problem reproduction.\r\n#>\r\nusing namespace System.Management.Automation\r\nParam ($SampleParam)\r\n[enum]::GetNames([actionPreference])\r\n```\r\nWorks. \r\n```Powershell\r\nfunction test-this {\r\n[alias(\"Test\")]\r\n<#\r\n.SYNOPSIS\r\nA simple script for problem reproduction.\r\n#>\r\nParam ($SampleParam)\r\n}\r\n```\r\nGives no help\r\n```Powershell\r\nfunction test-this {\r\n<#\r\n.SYNOPSIS\r\nA simple script for problem reproduction.\r\n#>\r\n[alias(\"Test\")]\r\nParam ($SampleParam)\r\n}\r\n```\r\nWorks. \r\n\r\nI would be careful with a change like this which will enable some behavior in new versions but neither works nor errors/warns in old ones. \r\nIt seems logical to say those things should be allowed in any order.  However when someone takes a script with an order which works in 7.1 and tries to run it on an earlier version they will go crazy trying to figure out why it doesn't work in Windows PowerShell or in something with PowerShell 7.0.2 embedded  (like .NET interactive) . \r\n\r\nThe rules that `using` can be preceded by comments, and comment based help must be first or last have been there since the features were introduced. ",
      "created_at": "2020-09-22T12:17:48Z",
      "updated_at": "2020-09-22T12:19:04Z"
    },
    {
      "author": "hubuk",
      "author_association": "CONTRIBUTOR",
      "body": "@jhoneill You are completely right. I got an impression that putting using directives after script documentation is a syntax error. It might be long long time ago when the VSCode tools were not stable enough. Now it works just fine. Thanks for the guidance.\r\nClosing issue and PR.",
      "created_at": "2020-09-22T13:18:58Z",
      "updated_at": "2020-09-22T13:18:58Z"
    },
    {
      "author": "doctordns",
      "author_association": "COLLABORATOR",
      "body": "I wish that Help was more intelligent - and gave an error when it fails rather than no output.",
      "created_at": "2020-09-22T13:30:33Z",
      "updated_at": "2020-09-22T13:30:33Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Help is mainly parsing comments there; it doesn't see comments where it expects to, so it gives you back the standard result when no CBH is available, just a syntax diagram and some metadata.\r\n\r\nIt's difficult / impossible for it to distinguish without taking potentially quite a bit of additional time to examine every comment in the file to determine if it _might_ have been intended to be CBH. \r\n\r\nThe most I'd expect to see is maybe a small comment noting \"no comment based help or external help files for this script/function could be found\" in the resulting help output.",
      "created_at": "2020-09-22T15:20:51Z",
      "updated_at": "2020-09-22T15:20:51Z"
    },
    {
      "author": "doctordns",
      "author_association": "COLLABORATOR",
      "body": "I know what it's doing!  But if I make a tiny mistake (eg I type a key wronglyl) it just silently fails with no clue where the error is. I just can't always see the error without a few hints\r\n\r\nCan Get-Help's comment parser do something to say where it stopped recognising the block comment?? And to avoid issues, Could **-Debug** to at least show how far in parsing the text it got? \r\n\r\n",
      "created_at": "2020-09-22T18:08:57Z",
      "updated_at": "2020-09-22T18:08:57Z"
    }
  ],
  "created_at": "2020-09-20T21:40:44Z",
  "number": 13666,
  "state": "closed",
  "title": "Get-Help does not work for script files containing using statements.",
  "updated_at": "2020-09-22T18:08:57Z"
}