{
  "_url": "https://github.com/PowerShell/PowerShell/issues/2240",
  "author": "jeffbi",
  "body": "Port these cmdlets to CoreCLR:\r\n- [x] ConvertTo-Html\r\n- [x] Send-MailMessage\r\n- [ ] New-WebServiceProxy\r\n\r\nTwo of these are mentioned in #2123 \r\n",
  "closed_at": "2018-08-29T10:24:09Z",
  "comments": [
    {
      "author": "thezim",
      "author_association": "CONTRIBUTOR",
      "body": "Is Send-MailMessage waiting on [corefx](https://github.com/dotnet/corefx/issues/1006)?\n",
      "created_at": "2016-09-13T21:41:51Z",
      "updated_at": "2016-09-13T21:41:51Z"
    },
    {
      "author": "zippy1981",
      "author_association": "NONE",
      "body": "New-WebServiceProxy would be great. \n",
      "created_at": "2016-10-05T17:20:55Z",
      "updated_at": "2016-10-05T17:20:55Z"
    },
    {
      "author": "jonathanmedd",
      "author_association": "NONE",
      "body": "+1 on the missing New-WebServiceProxy",
      "created_at": "2017-03-04T11:31:36Z",
      "updated_at": "2017-03-04T11:31:36Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "`New-WebServiceProxy` depends on System.Web.Services.dll which isn't part of corefx",
      "created_at": "2017-08-14T12:19:11Z",
      "updated_at": "2017-08-14T12:19:11Z"
    },
    {
      "author": "Glober777",
      "author_association": "NONE",
      "body": "I have a lot of scripts depending on New-WebServiceProxy so can't easily migrate them over to PowerShell 6",
      "created_at": "2018-05-14T11:54:43Z",
      "updated_at": "2018-05-14T11:54:43Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@Glober777 I looked into making something work for this. We can make something that works similar in PowerShell core, but it would not be backwards compatible in any way. The newer APIs for web services in .NET Framework and .NET Core behave differently than the deprecated `System.Web.Services` API. The reality is that `New-WebServiceProxy` will likely never be ported to PowerShell core, but, a new cmdlet may be created to work with SOAP and WSDL. ",
      "created_at": "2018-05-14T13:45:01Z",
      "updated_at": "2018-05-14T13:45:01Z"
    },
    {
      "author": "jonathanmedd",
      "author_association": "NONE",
      "body": "@markekraus That would be great if a new cmdlet became available at some point. My [Brickset module](https://github.com/jonathanmedd/BricksetModule) is based around New-WebServiceProxy and I would like to update it to support PowerShell Core.",
      "created_at": "2018-05-14T13:57:33Z",
      "updated_at": "2018-05-14T14:59:03Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@jonathanmedd For clarity, by \"we\" I mean Microsoft and the Community. SOAP is not something I personally have any need for, so this is very very low on my priority stack and not on on any of my roadmaps. So, I'm really wanting someone who actually needs the commands to lead the charge on this one. You game?",
      "created_at": "2018-05-14T14:20:54Z",
      "updated_at": "2018-05-14T14:20:54Z"
    },
    {
      "author": "jonathanmedd",
      "author_association": "NONE",
      "body": "@markekraus totally understood, wasn't intentional to convey any expectation that you were personally going to deal with it ;-) Potentially I could be, would need to give it some thought. I guess I would need to learn C# first, although this might be an impetus that finally got me there.....",
      "created_at": "2018-05-14T14:54:29Z",
      "updated_at": "2018-05-14T14:54:29Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> I guess I would need to learn C# first\r\n\r\nFirst we need RFC for the new cmdlet. You could design the cmdlet if you have an expirience in web services. This will be a big step in solving this Issue.",
      "created_at": "2018-05-14T15:16:19Z",
      "updated_at": "2018-05-14T15:16:19Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Because System.Web.Services is deprecated we must consider New-WebServiceProxy cmdlet as deprecated too.\r\nAnyone who is interested in the new web service cmdlet based on SOAP/WSDL should create new RFC.\r\nAlso anyone can use the New-WebServiceProxy cmdlet by means of [Windows PowerShell Compatibility module](https://github.com/PowerShell/WindowsCompatibility).\r\n\r\nSo we have nothing to track here and I close the Issue.\r\n",
      "created_at": "2018-08-29T10:24:09Z",
      "updated_at": "2018-08-29T10:24:09Z"
    },
    {
      "author": "Sarafian",
      "author_association": "NONE",
      "body": "> @jonathanmedd For clarity, by \"we\" I mean Microsoft and the Community. SOAP is not something I personally have any need for, so this is very very low on my priority stack and not on any of my roadmaps. So, I'm really wanting someone who actually needs the commands to lead the charge on this one. You game?\r\n\r\nI'm sorry but this statement is not very accurate. SOAP is also not my favourite but there are lots of companies with established products still using SOAP. The entire travelling industry is SOAP based. For example, [amadeus.com[(https://amadeus.com) API which is used by at airlines, trains, fairies etc is all SOAP based. There are almost 1/4 comments complaining about the lack of SOAP support in [Introducing .NET 5](https://devblogs.microsoft.com/dotnet/introducing-net-5/). \r\n\r\nOverall, with the current situation, we can't do any serious SOAP automation on PowerShell 6. With the roadmap for PowerShell 7 that was recently announced, it seems that this will be possible again but in reality, this will be only for Windows. However .NET Core 3 is presented, it is, in essence, a very fancy abstraction of the operating system and doesn't solve the shortcomings in the APIs of .NET Core and therefore PowerShell 7.\r\n\r\nUnless I'm mistaken, Azure Functions over PowerShell supports only PowerShell 6. \r\n\r\nI believe that the .net and PowerShell teams need to have a discussion about this topic. I really understand what the technology drivers are and I'm all against SOAP but the reality is that it exists on big proportions with no alternatives and that only 10years ago Microsoft was pushing very hard for WCF and developers followed. It is not well communicated why the `System.ServiceModel` assembly is not ported natively into the core API. Just dismissing SOAP doesn't sound like a good explanation to me, especially given our reality.",
      "created_at": "2019-05-31T07:22:20Z",
      "updated_at": "2019-05-31T07:22:20Z"
    },
    {
      "author": "quonic",
      "author_association": "NONE",
      "body": "> I believe that the .net and PowerShell teams need to have a discussion about this topic. I really understand what the technology drivers are and I'm all against SOAP but the reality is that it exists on big proportions with no alternatives and that only 10years ago Microsoft was pushing very hard for WCF and developers followed. It is not well communicated why the `System.ServiceModel` assembly is not ported natively into the core API. Just dismissing SOAP doesn't sound like a good explanation to me, especially given our reality.\r\n\r\nI've switched to Python because I can't talk to SOAP API's with Powershell on Linux. I love Powershell, but I can't use it at work for SOAP related automation's. I'm not a good enough programmer to replicate what New-WebServiceProxy does. I wish I was, then I would do it myself.",
      "created_at": "2019-05-31T08:25:49Z",
      "updated_at": "2019-05-31T08:25:49Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": ".Net Core 3.0 will have WCF client API and MSFT PowerShell team will seems return back some code back for better compatibility with Windows PowerShell. I am not sure about System.Web.Services and New-WebServiceProxy. Perhaps it could be in compatibility module.\r\n\r\n/cc @SteveL-MSFT ",
      "created_at": "2019-05-31T09:21:01Z",
      "updated_at": "2019-05-31T09:21:01Z"
    },
    {
      "author": "Sarafian",
      "author_association": "NONE",
      "body": "As long as it can execute on all operating systems it should be fine. Unfortunately, the messaging, e.g. desktop ui apps on .net core 3, is so misleading with regards to actual API support from .net core\r\n\r\n",
      "created_at": "2019-06-02T08:49:44Z",
      "updated_at": "2019-06-02T08:49:44Z"
    },
    {
      "author": "Sarafian",
      "author_association": "NONE",
      "body": "@quonic the problem with soap is that it is build upon many different WS* standards and that creates a big gap between understanding, knowing and using. WCF was a massive effort by Microsoft to abstract it away and though successful it was too late. Those WS* defined many aspects of https that we take for granted when using rest. \r\n\r\nI just want to say that the effort requires so much knowledge of the standards that it would had been difficult to implement by one person. This why those assemblies were so useful. I suspect that the crypto elements within the system.servicemodel assembly were the tricky part and a simple code port was not feasible. Still it is a pity given the investment and faith into WCF.",
      "created_at": "2019-06-02T09:01:08Z",
      "updated_at": "2019-06-02T09:01:08Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "For those interested in SOAP support, please open a new issue to discuss.  ",
      "created_at": "2019-06-05T08:21:47Z",
      "updated_at": "2019-06-05T08:21:47Z"
    },
    {
      "author": "Sarafian",
      "author_association": "NONE",
      "body": "> For those interested in SOAP support, please open a new issue to discuss.\r\n\r\nOn PowerShell or .NET core? What is you preference? ",
      "created_at": "2019-06-05T18:35:45Z",
      "updated_at": "2019-06-05T18:35:45Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@Sarafian In the PowerShell repo. Please add motivation and use-cases.",
      "created_at": "2019-06-06T03:58:06Z",
      "updated_at": "2019-06-06T03:58:06Z"
    },
    {
      "author": "Sarafian",
      "author_association": "NONE",
      "body": "> @Sarafian In the PowerShell repo. Please add motivation and use-cases.\r\n\r\nGH-9838",
      "created_at": "2019-06-06T07:00:13Z",
      "updated_at": "2019-06-06T07:00:13Z"
    }
  ],
  "created_at": "2016-09-12T21:24:43Z",
  "labels": [
    "Porting",
    "Up-for-Grabs",
    "Resolution-Fixed",
    "WG-Cmdlets-Utility"
  ],
  "number": 2240,
  "state": "closed",
  "title": "Port Web Cmdlets to CoreCLR",
  "updated_at": "2019-06-06T07:00:13Z"
}