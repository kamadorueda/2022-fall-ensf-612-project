{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11814",
  "author": "p0W3RH311",
  "body": "### \r\n### steps to reproduce\r\n```\r\n\r\nimport-module ./foobar.psm1\r\n\r\nget-foobar\r\n# hello\r\n\r\nset-module -name foobar -RemoveFunction get-foobar,set-foobar -AddCode {\r\n  $a='hello foobar'\r\n  function show-foobar {\r\n     $a\r\n  }\r\n}\r\n\r\nget-foobar\r\n# ERROR\r\n\r\nshow-foobar\r\n#hello foobar\r\n```\r\n\r\nits possible to do this with\r\n\r\n```\r\n. $module {\r\n # code\r\n}\r\n```\r\n\r\nbut it more powershell way to create cmdlet",
  "closed_at": "2020-02-10T12:00:15Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "I don't think we should encourage users to be modifying modules in-session.\r\n\r\nIt's useful for debugging on occasion, but I have't seen anywhere near enough compelling use cases to make it a standard cmdlet.",
      "created_at": "2020-02-08T18:16:01Z",
      "updated_at": "2020-02-08T18:16:01Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Updated module a developer can load with Force parameter. In general modules can have complex session state dependencies and changing module code/variables can destroy the session. If we think about binary modules it is absolutely impossible to change anything.",
      "created_at": "2020-02-09T11:06:39Z",
      "updated_at": "2020-02-09T11:06:39Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2020-02-10T12:00:13Z",
      "updated_at": "2020-02-10T12:00:13Z"
    }
  ],
  "created_at": "2020-02-08T18:08:10Z",
  "labels": [
    "Issue-Question",
    "WG-Engine",
    "Resolution-Answered"
  ],
  "number": 11814,
  "state": "closed",
  "title": "add new cmdlet set-module to modify code in module on the fly",
  "updated_at": "2020-02-10T12:00:15Z"
}