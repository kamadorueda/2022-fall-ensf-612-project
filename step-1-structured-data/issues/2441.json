{
  "_url": "https://github.com/PowerShell/PowerShell/issues/2441",
  "author": "andschwa",
  "body": "This removes a bunch of incorrect code which attempted to map Linux `errno` to Windows error codes. With .NET Core 1.0.0, this is _unncesssary_. They've implemented `new Win32Exception(Marshal.GetLastWin32Error())` to work _correctly_ on Linux, despite the odd name. `Marshal.GetLastWin32Error()` retrieves `errno`, and the constructor of `Win32Exception` calls `strerror_r` to get the associated POSIX error message.\n\nIn the process, I also refactored and simplified a fair bit of the native library calls to remove the need for extra abstraction functions.\n\nI added a `GetErrorCategory()` native function that maps an `errno` to a _PowerShell_ `ErrorCategory` on a best effort basis; this is primarily so that the existing error handling in the file-system provider can be reused, resulting in _much better_ error messages (where native code is used, like with symlinks).\n\nCurrently, when `New-Item -ItemType` fails because the user doesn't have permissions, the error looks like this:\n\n```\n> mkdir /tmp/inaccessible\n> chmod a-wrx /tmp/inaccessible\n> New-Item -ItemType SymbolicLink -Path /tmp/inaccessible/link -Target .\nNew-Item : Input/output error \nAt line:1 char:1\n+ New-Item -ItemType SymbolicLink -Path /tmp/inaccessible/link -Target  ...\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : NotSpecified: (:) [New-Item], Win32Exception\n    + FullyQualifiedErrorId : System.ComponentModel.Win32Exception,Microsoft.PowerShell.Commands.NewItemCommand\n```\n\nWith these changes, it looks like this:\n\n```\n> New-Item : Administrator privilege required for this operation.\nAt line:1 char:1\n+ New-Item -ItemType SymbolicLink -Path /tmp/inaccessible/link -Target  ...\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : PermissionDenied: (/home/andrew/src/PowerShell:String) [New-Item], UnauthorizedAccessException\n    + FullyQualifiedErrorId : NewItemSymbolicLinkElevationRequired,Microsoft.PowerShell.Commands.NewItemCommand\n```\n\nCurrently, when `Set-Date` fails because the user doesn't have permissions, the error looks like this:\n\n```\n> Set-Date (Get-Date)\nSet-Date : Unix.NonWindowsSetDate error: 5\nAt line:1 char:1\n+ Set-Date (Get-Date)\n+ ~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : NotSpecified: (:) [Set-Date], InvalidOperationException\n    + FullyQualifiedErrorId : System.InvalidOperationException,Microsoft.PowerShell.Commands.SetDateCommand\n```\n\nNote the absolutely useless message \"Unix.NonWindowsSetDate error: 5\".\n\nWith these changes, it looks like this:\n\n```\n> Set-Date (Get-Date)\nSet-Date : Operation not permitted\nAt line:1 char:1\n+ Set-Date (Get-Date)\n+ ~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : NotSpecified: (:) [Set-Date], Win32Exception\n    + FullyQualifiedErrorId : System.ComponentModel.Win32Exception,Microsoft.PowerShell.Commands.SetDateCommand\n```\n\nWhere \"Operation not permitted\" was the POSIX error message for the errno set by `settimeofday` in the native library.\n\nFor comparison, it looks like this on Windows:\n\n```\nPS C:\\Users\\andschwa> Set-Date (Get-Date)\nSet-Date : A required privilege is not held by the client\nAt line:1 char:1\n+ Set-Date (Get-Date)\n+ ~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : NotSpecified: (:) [Set-Date], Win32Exception\n    + FullyQualifiedErrorId : System.ComponentModel.Win32Exception,Microsoft.PowerShell.Commands.SetDateCommand\n```\n\nWhere `A required privilege is not held by the client` was returned by Windows.\n\nAlso, while the changes I made in f21e1230f4306424585f8e90681128dce1cb8883 I reverted in 1f8d40354fd559168701bf25a78bca4ebba05af4, I wish to keep them in the history as the addition of a `configure` script to the CMake system for the library was non-trivial, and will likely prove useful again.\n\nI'm sure I've not caught every use of the native library where error handling can be improved, but these were the most glaring problems.\n",
  "closed_at": "2016-10-17T18:13:31Z",
  "comments": [
    {
      "author": "msftclas",
      "author_association": "NONE",
      "body": "Hi **@andschwa**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    <p>\n        It looks like you're a Microsoft contributor (Andy Schwartzmeyer). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    </p>\n\nTTYL, MSBOT;\n",
      "created_at": "2016-10-06T22:47:45Z",
      "updated_at": "2016-10-06T22:47:45Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "@vors For the `InformationRecord.NativeThreadId` the test addition in `Write-Information Cmdlet` context passed on both platforms (it pretty much just asserts it wasn't 0, which it was before).\n",
      "created_at": "2016-10-10T21:40:48Z",
      "updated_at": "2016-10-10T21:40:48Z"
    },
    {
      "author": "mirichmo",
      "author_association": "MEMBER",
      "body": "@mirichmo take a look\n",
      "created_at": "2016-10-13T20:19:36Z",
      "updated_at": "2016-10-13T20:19:36Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "@vors tests added.\n",
      "created_at": "2016-10-14T22:43:38Z",
      "updated_at": "2016-10-14T22:43:38Z"
    }
  ],
  "created_at": "2016-10-06T22:47:42Z",
  "number": 2441,
  "state": "closed",
  "title": "Fix error handling of libpsl-native",
  "updated_at": "2016-10-17T18:13:31Z"
}