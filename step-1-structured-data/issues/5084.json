{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5084",
  "author": "Qowy",
  "body": " ASP.NET core 2.0 app.\r\n\r\n.csproj:\r\n```\r\n    <PackageReference Include=\"Microsoft.AspNetCore.All\" Version=\"2.0.0\" />\r\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore.Tools\" Version=\"2.0.0\" PrivateAssets=\"All\" />\r\n    <PackageReference Include=\"Microsoft.PowerShell.Commands.Diagnostics\" Version=\"6.0.0-beta.8\" />\r\n    <PackageReference Include=\"Microsoft.PowerShell.SDK\" Version=\"6.0.0-beta.8\" />\r\n    <PackageReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Design\" Version=\"2.0.0\" PrivateAssets=\"All\" />\r\n    <PackageReference Include=\"Microsoft.WSMan.Management\" Version=\"6.0.0-beta.8\" />\r\n```\r\n\r\ncontroller code:\r\n```\r\n    using (PowerShell ps = PowerShell.Create())\r\n            {\r\n                var result = ps.AddScript(@\"New-Item -Path 'C:\\Programming\\' -Type Directory -Name TestFolder\").Invoke();\r\n            }\r\n```\r\n\r\nResults in an exeption:\r\n\r\n> System.Management.Automation.RuntimeException: The following errors occurred when updating the assembly list for the runspace: \r\n> Could not load file or assembly 'C:\\Programming\\Intranet\\Intranet\\Microsoft.PowerShell.Commands'. The system cannot find the file specified.\r\n> Could not load file or assembly 'C:\\Programming\\Intranet\\Intranet\\Microsoft.PowerShell'. The system cannot find the file specified.\r\n> Could not load file or assembly 'C:\\Programming\\Intranet\\Intranet\\Microsoft.PowerShell.Commands'. The system cannot find the file specified.\r\n> Could not load file or assembly 'C:\\Programming\\Intranet\\Intranet\\Microsoft.PowerShell.Commands'. The system cannot find the file specified.\r\n> Could not load file or assembly 'C:\\Programming\\Intranet\\Intranet\\Microsoft.PowerShell'. The system cannot find the file specified.\r\n> Could not load file or assembly 'C:\\Programming\\Intranet\\Intranet\\Microsoft.WSMan'. The system cannot find the file specified..\r\n> \r\n>    at System.Management.Automation.ExecutionContext.UpdateAssemblyCache()\r\n> \r\n>    at System.Management.Automation.Runspaces.RunspaceConfigurationEntryCollection`1.Update(Boolean force)\r\n> \r\n>    at System.Management.Automation.Runspaces.RunspaceConfiguration.Bind(ExecutionContext executionContext)\r\n> \r\n>    at System.Management.Automation.AutomationEngine..ctor(PSHost hostInterface, RunspaceConfiguration runspaceConfiguration, InitialSessionState iss)\r\n> \r\n>    at System.Management.Automation.Runspaces.LocalRunspace.DoOpenHelper()\r\n> \r\n>    at System.Management.Automation.Runspaces.LocalRunspace.OpenHelper(Boolean syncCall)\r\n> \r\n>    at System.Management.Automation.Runspaces.RunspaceBase.CoreOpen(Boolean syncCall)\r\n> \r\n>    at System.Management.Automation.Runspaces.RunspaceBase.Open()\r\n> \r\n>    at System.Management.Automation.PowerShell.Worker.CreateRunspaceIfNeededAndDoWork(Runspace rsToUse, Boolean isSync)\r\n> \r\n>    at System.Management.Automation.PowerShell.CoreInvokeHelper[TInput,TOutput](PSDataCollection`1 input, PSDataCollection`1 output, PSInvocationSettings settings)\r\n> \r\n>    at System.Management.Automation.PowerShell.CoreInvoke[TInput,TOutput](PSDataCollection`1 input, PSDataCollection`1 output, PSInvocationSettings settings)\r\n> \r\n>    at System.Management.Automation.PowerShell.CoreInvoke[TOutput](IEnumerable input, PSDataCollection`1 output, PSInvocationSettings settings)\r\n> \r\n>    at System.Management.Automation.PowerShell.Invoke(IEnumerable input, PSInvocationSettings settings)\r\n> \r\n>    at System.Management.Automation.PowerShell.Invoke()\r\n> \r\n>    at Intranet.Controllers.PowershellController.Test() in C:\\Programming\\Intranet\\Intranet\\Controllers\\PowershellController.cs:line 30\r\n> \r\n> \r\n",
  "closed_at": "2017-11-10T00:59:29Z",
  "comments": [
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "I can repro this, but I'm not exactly strong on the hosted app side.\r\n\r\n@daxian-dbw ?",
      "created_at": "2017-10-11T13:13:15Z",
      "updated_at": "2017-10-11T13:18:51Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Our docs https://github.com/PowerShell/PowerShell/tree/master/docs/host-powershell",
      "created_at": "2017-10-11T13:24:55Z",
      "updated_at": "2017-10-11T14:47:08Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov I can repro this with the `sample-dotnet2.0-powershell.beta.3` by just changing `beta.3` to `beta.8` in the `MyApp.csproj`. Does not repro with `beta.7`.",
      "created_at": "2017-10-11T13:58:19Z",
      "updated_at": "2017-10-11T13:58:19Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "If it's a regression, it's my only thought that we need a CI test or we should manually test this before we release the new Beta version.",
      "created_at": "2017-10-11T14:53:39Z",
      "updated_at": "2017-10-11T14:53:39Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I remember only one related PR in last time #4196 - @markekraus if you have time you can revert locally the change and test.",
      "created_at": "2017-10-11T14:56:53Z",
      "updated_at": "2017-10-11T14:56:53Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@markekraus Sorry that I cannot reproduce the issue by following the instructions at https://github.com/PowerShell/PowerShell/tree/master/docs/host-powershell#net-core-sample-application\r\n\r\nCan you please point me what I might be missing?\r\n\r\nThis is what I did:\r\n```powershell\r\n[E:\\PowerShell\\docs\\host-powershell\\sample-dotnet2.0-powershell.beta.3\\MyApp]\r\nPS:12> cat .\\MyApp.csproj\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n    <AssemblyName>MyApp</AssemblyName>\r\n    <OutputType>Exe</OutputType>\r\n    <RuntimeIdentifiers>win10-x64</RuntimeIdentifiers>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.PowerShell.SDK\" Version=\"6.0.0-beta.8\" />\r\n    <PackageReference Include=\"Microsoft.PowerShell.Commands.Diagnostics\" Version=\"6.0.0-beta.8\" />\r\n    <PackageReference Include=\"Microsoft.WSMan.Management\" Version=\"6.0.0-beta.8\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n[E:\\PowerShell\\docs\\host-powershell\\sample-dotnet2.0-powershell.beta.3\\MyApp]\r\nPS:13>\r\n[E:\\PowerShell\\docs\\host-powershell\\sample-dotnet2.0-powershell.beta.3\\MyApp]\r\nPS:13> dotnet restore\r\n  Restoring packages for E:\\PowerShell\\docs\\host-powershell\\sample-dotnet2.0-powershell.beta.3\\MyApp\\MyApp.csproj...\r\n  Generating MSBuild file E:\\PowerShell\\docs\\host-powershell\\sample-dotnet2.0-powershell.beta.3\\MyApp\\obj\\MyApp.csproj.nuget.g.props.\r\n  Generating MSBuild file E:\\PowerShell\\docs\\host-powershell\\sample-dotnet2.0-powershell.beta.3\\MyApp\\obj\\MyApp.csproj.nuget.g.targets.\r\n  Restore completed in 1.32 sec for E:\\PowerShell\\docs\\host-powershell\\sample-dotnet2.0-powershell.beta.3\\MyApp\\MyApp.csproj.\r\n[E:\\PowerShell\\docs\\host-powershell\\sample-dotnet2.0-powershell.beta.3\\MyApp]\r\nPS:14> dotnet publish -c release -r win10-x64\r\nMicrosoft (R) Build Engine version 15.3.409.57025 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  MyApp -> E:\\PowerShell\\docs\\host-powershell\\sample-dotnet2.0-powershell.beta.3\\MyApp\\bin\\release\\netcoreapp2.0\\win10-x64\\MyApp.dll\r\n  MyApp -> E:\\PowerShell\\docs\\host-powershell\\sample-dotnet2.0-powershell.beta.3\\MyApp\\bin\\release\\netcoreapp2.0\\win10-x64\\publish\\\r\n[E:\\PowerShell\\docs\\host-powershell\\sample-dotnet2.0-powershell.beta.3\\MyApp]\r\nPS:15>\r\n[E:\\PowerShell\\docs\\host-powershell\\sample-dotnet2.0-powershell.beta.3\\MyApp]\r\nPS:15> .\\bin\\release\\netcoreapp2.0\\win10-x64\\publish\\MyApp.exe\r\n\r\nEvaluating 'Get-Command Write-Output' in PS Core Runspace\r\n\r\nWrite-Output\r\n\r\nEvaluating '([S.M.A.ActionPreference], [S.M.A.AliasAttribute]).FullName' in PS Core Runspace\r\n\r\nSystem.Management.Automation.ActionPreference\r\nSystem.Management.Automation.AliasAttribute\r\n[E:\\PowerShell\\docs\\host-powershell\\sample-dotnet2.0-powershell.beta.3\\MyApp]\r\nPS:16>\r\n```",
      "created_at": "2017-10-11T19:30:32Z",
      "updated_at": "2017-10-11T19:30:32Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@daxian-dbw That's exactly what I did. The difference may be that I have never don't the hosted app before so I was downloading the sdk nuget for the first time. did you test this in a fresh environment?",
      "created_at": "2017-10-11T19:50:51Z",
      "updated_at": "2017-10-11T19:50:51Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "I think I can repro it now. `MyApp.exe` from the `publish` folder works fine (i.e. `.\\bin\\release\\netcoreapp2.0\\win10-x64\\publish\\MyApp.exe`), but the one from `win10-x64` is having problem (i.e. `.\\bin\\release\\netcoreapp2.0\\win10-x64\\MyApp.exe`).\r\nI'm looking into it.",
      "created_at": "2017-10-11T19:59:24Z",
      "updated_at": "2017-10-11T19:59:40Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@daxian-dbw fails with `dotnet run` too.",
      "created_at": "2017-10-11T20:00:21Z",
      "updated_at": "2017-10-11T20:00:21Z"
    },
    {
      "author": "Qowy",
      "author_association": "NONE",
      "body": "Thank you all for your efforts in fixing this. I just wanted to repeat I did not use a .Net core project (although we see it has been reproduced there), but a ASP.NET core one instead. \r\n\r\nJust in case somebody also wants to try and reproduce it there (or check a potential fix).",
      "created_at": "2017-10-11T21:10:51Z",
      "updated_at": "2017-10-11T21:10:51Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Yeah, `dotnet run` is essentially running the exe from `win10-x64` folder. ",
      "created_at": "2017-10-11T21:27:36Z",
      "updated_at": "2017-10-11T21:27:36Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@Qowy I originally reproduced it in an fresh MVC project. It has the same issues as the more basic MyApp. We are using the MyApp as a baseline to rule out project specific issues. In theory, if this is fixed for the MyApp, it should also work for ASP.NET Core apps.\r\n\r\n@daxian-dbw thanks!!",
      "created_at": "2017-10-11T22:44:31Z",
      "updated_at": "2017-10-11T22:44:31Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Just confirmed that @iSazonov was right, this is a regression caused by #4196 -- the passed in `filename` is just a filename without extension, so `Assembly.LoadFrom` fails.\r\nThis regression could be fixed by #4942 because that PR will change `powershell.Invoke()` to not depend on `RunspaceConfiguration`. However, I think we need to revisit the change of #4196 to make it more reliable.\r\n\r\n/cc @SteveL-MSFT ",
      "created_at": "2017-10-12T01:15:57Z",
      "updated_at": "2017-10-12T01:15:57Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I've seen the same long ago for powershell.exe - from the  publish  folder it works fine but from  win7-x64  it is having problem (no with Beta.8). Also locally I can not get tests with Add-Type passed - ref error - path not found. I guess it can related.",
      "created_at": "2017-10-12T03:14:06Z",
      "updated_at": "2017-10-12T04:54:54Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I reopened https://github.com/PowerShell/PowerShell/issues/3325",
      "created_at": "2017-10-12T04:45:12Z",
      "updated_at": "2017-10-12T04:45:12Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@iSazonov Prior to adopting .NET Core 2.0, PowerShell needs to spin up a separate AssemblyLoadContext to handle assembly loading by itself, and the assembly probing path it uses is the base folder of S.M.A.dll. So at that time, it's by design that the hosting application needs to be built with `dotnet publish` and run from the publish folder, where all dependent assemblies are placed.\r\n\r\nAfter adopting .NET Core 2.0, powershell uses the default CLR loader and there is no need for a separate load context. So it's OK to run the hosting application from outside the publish folder, or with `dotnet run`.\r\n\r\nAs for `Add-Type`, we can possibly solve the problem if we are able to package the `ref` folder into the nuget package as content files.",
      "created_at": "2017-10-12T05:03:22Z",
      "updated_at": "2017-10-12T05:04:05Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw Thanks!",
      "created_at": "2017-10-12T05:20:18Z",
      "updated_at": "2017-10-12T05:20:18Z"
    },
    {
      "author": "chunqingchen",
      "author_association": "CONTRIBUTOR",
      "body": "I have verified that this bug is not related to #4196  and therefore not fixed by  #4942  #4196.\r\nAlthough the behavior is very similar, but regardless the change of #4196, it repros anyway. I can take a look.",
      "created_at": "2017-11-03T06:20:42Z",
      "updated_at": "2017-11-03T06:20:42Z"
    },
    {
      "author": "chunqingchen",
      "author_association": "CONTRIBUTOR",
      "body": "After talked with dongbo and verified the issue with further steps, the fix actually works.\r\n\r\nThe keypoint is building nuget package with the code change as local package and reference to the local package instead of going online (of course, the code change won't affect the online package, beta.8 in this case).\r\n\r\nHere is a repro step:\r\n1. Generate the nuget package locally with the code change:\r\n$VersionSuffix = (\"v6.0.0-beta.9\" -split '-')[-1]\r\nPublish-NuGetFeed -VersionSuffix $VersionSuffix\r\n\r\n2. edit the nuget config file include the local package:\r\ngo to ..\\PowerShell\\docs\\host-powershell\\sample-dotnet2.0-powershell.beta.3\r\nadd following config to NuGet.config\r\n    <add key=\"local-feed\" value=\"C:\\Github\\powershellfull\\p2\\PowerShell\\nuget-artifacts\" />\r\nwhere C:\\Github\\powershellfull\\p2\\PowerShell\\nuget-artifacts is folder where previous neget package generates.\r\n\r\n3. go to ..\\sample-dotnet2.0-powershell.beta.3\\MyApp\r\ndotnet restore\r\ndotnet run\r\n\r\nThe exception is gone.\r\n",
      "created_at": "2017-11-04T01:17:48Z",
      "updated_at": "2017-11-04T01:17:58Z"
    }
  ],
  "created_at": "2017-10-11T12:27:36Z",
  "labels": [
    "Issue-Question",
    "Resolution-Fixed"
  ],
  "number": 5084,
  "state": "closed",
  "title": "Hosted PS core in ASP.Net core The system cannot find the file specified",
  "updated_at": "2017-11-10T03:40:16Z"
}