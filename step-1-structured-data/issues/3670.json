{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3670",
  "author": "anmenaga",
  "body": "This happened during the night build on Linux, resulting in a failed test run:\r\n\r\n> No output has been received in the last 10m0s, this potentially indicates a stalled build or something wrong with the build itself.\r\n> The build has been terminated\r\n\r\nCan manually repro on `GitCommitId: v6.0.0-alpha.18` and `GitCommitId: v6.0.0-alpha.18-36-ga2268ab3ecb6c1addffbedba0606aa6c95809dd4-dirty`.\r\n\r\nIt feels like there is some sort of race - sometimes hang happens, sometimes - not.\r\nUsually it happens within first 10 iterations of the test file.\r\nThere might be a product bug behind this.\r\n\r\nSteps to reproduce\r\n------------------\r\n`1..50 | %{Invoke-Pester ./test/powershell/Language/Classes/scripting.Classes.inheritance.tests.ps1} `\r\n\r\nExpected behavior\r\n-----------------\r\n100% pass\r\n\r\nActual behavior\r\n---------------\r\nPS hangs.\r\n\r\nExample 1:\r\n![ss1](https://cloud.githubusercontent.com/assets/11860095/25588692/36a3cd56-2e5e-11e7-97ed-3d6fb5f59b68.png)\r\n\r\nExample 2:\r\n![ss2](https://cloud.githubusercontent.com/assets/11860095/25588693/36a9ba86-2e5e-11e7-8f28-4f464047e4ec.png)\r\n\r\n\r\nEnvironment data\r\n----------------\r\n```\r\nName                           Value                                           \r\n----                           -----                                           \r\nPSVersion                      6.0.0-alpha                                     \r\nPSEdition                      Core                                            \r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}                         \r\nBuildVersion                   3.0.0.0                                         \r\nGitCommitId                    v6.0.0-alpha.18                                 \r\nCLRVersion                                                                     \r\nWSManStackVersion              3.0                                             \r\nPSRemotingProtocolVersion      2.3                                             \r\nSerializationVersion           1.1.0.1   \r\n```\r\n```\r\nuname -a\r\nLinux anmenaga-d1 3.16.0-4-amd64 #1 SMP Debian 3.16.39-1+deb8u2 (2017-03-07) x86_64 GNU/Linux\r\n```\r\n```\r\nPS /home> Get-Content /etc/os-release -Raw                                                                  \r\nPRETTY_NAME=\"Debian GNU/Linux 8 (jessie)\"\r\nNAME=\"Debian GNU/Linux\"\r\nVERSION_ID=\"8\"\r\nVERSION=\"8 (jessie)\"\r\nID=debian\r\nHOME_URL=\"http://www.debian.org/\"\r\nSUPPORT_URL=\"http://www.debian.org/support\"\r\nBUG_REPORT_URL=\"https://bugs.debian.org/\"\r\n```",
  "closed_at": "2017-12-20T06:06:16Z",
  "comments": [
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "It could be because of this https://github.com/dotnet/coreclr/issues/9745.\r\nWorkaround for another hung test here:  https://github.com/PowerShell/PowerShell/pull/3191 ",
      "created_at": "2017-05-01T18:35:11Z",
      "updated_at": "2017-05-01T18:35:11Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "dotnet/coreclr#9745 milstone was changed to \"Future\" \ud83d\ude15 @daxian-dbw Isn't this a problem for the PowerShell 6.0 RTM release?",
      "created_at": "2017-05-02T12:26:06Z",
      "updated_at": "2017-05-02T12:26:06Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@iSazonov thanks for pointing out, I didn't know they moved it to future. I think it will be a potential problem to powershell RTM since our release will be crossgen'ed. \r\ncc/ @SteveL-MSFT @joeyaiello ",
      "created_at": "2017-05-02T17:24:38Z",
      "updated_at": "2017-05-02T17:24:38Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@SteveL-MSFT @joeyaiello what is the rough time for powershell RTM? Are we following the same schedule of .NET Core 2.0 RTM? Either way, we need to talk to CoreCLR team to make sure the corssgen bug gets fixed before we go RTM.",
      "created_at": "2017-05-02T17:29:39Z",
      "updated_at": "2017-05-02T17:29:39Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT  What is a conclusion here? Do we need a fix before RTM?",
      "created_at": "2017-10-08T09:30:21Z",
      "updated_at": "2017-10-08T09:30:21Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I'll see if coreclr can fix this for 2.0.0 servicing, otherwise, it'll be a documented `Known Issues` item",
      "created_at": "2017-10-08T17:29:32Z",
      "updated_at": "2017-10-08T17:29:32Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "dotnet/coreclr#9745 has been fixed in .NET Core 2.0.4. PowerShell has moved to 2.0.4. We removed all workaround on our side and the hang doesn't happen again.",
      "created_at": "2017-12-20T06:06:16Z",
      "updated_at": "2017-12-20T06:06:16Z"
    }
  ],
  "created_at": "2017-05-01T18:12:24Z",
  "number": 3670,
  "state": "closed",
  "title": "Hang in Scripting.Classes.Inheritance.Tests.ps1",
  "updated_at": "2018-02-08T07:40:02Z"
}