{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5233",
  "author": "Jaykul",
  "body": "Import-Module is importing multiple versions of modules.\r\n\r\nNOTE: I first noticed this because I have installed the *pre-release* version of PSReadline, and upon running `pwsh -noprofile` I found that I had **both** 1.2 and 2.0 versions of PSReadline pre-imported.\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\n# First install any two versions of a module. \r\n# If you already have a module with two versions present, you can use that\r\nInstall-Module Configuration -RequiredVersion 1.0.2\r\nInstall-Module Configuration -RequiredVersion 1.1.1\r\n\r\n# Import an older version\r\nImport-Module Configuration -RequiredVersion 1.0.2\r\n\r\n# Now just import without specifying a version\r\n# In PowerShell 5.1 this will do roughly nothing, since a version is already imported\r\nImport-Module Configuration\r\n\r\nGet-Module Configuration\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n1. There should be no errors\r\n2. I should have **one** Configuration module loaded: version `1.0.2`\r\n\r\nActual behavior\r\n---------------\r\n\r\n#### Every module import causes an error.\r\n```none\r\n> Import-Module Configuration -RequiredVersion 1.0.2\r\nipmo : The specified module 'Configuration' with version '1.0.2' was not loaded because no valid module file was found in any module directory.\r\n\r\n> Import-Module Configuration\r\nipmo : The specified module 'Configuration' was not loaded because no valid module file was found in any module directory.\r\n```\r\n\r\n#### Additionally, both versions of the module are imported\r\n\r\n```none\r\nModuleType Version    Name\r\n---------- -------    ----\r\nScript     1.1.1      Configuration\r\nScript     1.0.2      COnfiguration\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.0-beta.9\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.0-beta.9\r\nOS                             Microsoft Windows 10.0.15063\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n```\r\n",
  "closed_at": "2017-10-25T23:28:12Z",
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I just tried this in Windows PowerShell 5.1 and it still loads the latest version even if an older version is loaded.\r\n\r\n```powershell\r\nmkdir ~\\test\\Modules\\test\\1.1 -force\r\nmkdir ~\\test\\Modules\\test\\2.0 -force\r\nNew-ModuleManifest -Path ~\\test\\Modules\\test\\1.1\\test.psd1 -moduleversion 1.1\r\nNew-ModuleManifest -Path ~\\test\\Modules\\test\\2.0\\test.psd1 -moduleversion 2.0\r\n$env:PSModulePath += \";~\\test\\Modules\"\r\nipmo test -requiredversion 1.1\r\ngmo test # shows 1.1\r\nipmo test\r\ngmo # shows 1.1 and 2.0\r\n```",
      "created_at": "2017-10-25T21:20:22Z",
      "updated_at": "2017-10-25T21:20:22Z"
    },
    {
      "author": "Jaykul",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT is right, loading the latest version is not a change. The problem therefore, is just:\r\n\r\n1. I'm getting an error with every import (#5232)\r\n2. You're importing both PSReadLine versions",
      "created_at": "2017-10-25T23:09:13Z",
      "updated_at": "2017-10-25T23:09:13Z"
    }
  ],
  "created_at": "2017-10-25T17:59:18Z",
  "labels": [
    "WG-Engine",
    "Resolution-Answered"
  ],
  "number": 5233,
  "state": "closed",
  "title": "Major Module Loading Problems in beta 9 (part deux)",
  "updated_at": "2017-10-25T23:28:12Z"
}