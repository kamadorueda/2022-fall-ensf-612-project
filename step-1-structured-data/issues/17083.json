{
  "_url": "https://github.com/PowerShell/PowerShell/issues/17083",
  "author": "aksssdf",
  "body": "### Prerequisites\n\n- [X] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\n\n### Steps to reproduce\n\nI am experiencing a Problem when using  Where-Object to filter objects.\r\n1.When **only 1** object matched, Where-Object returns **abnormally**. \r\nFinaList.Count is 2 instead of 1. And FinaList[0] is ('xxx') instead of ('xxx','bbb').\r\n_Code\uff1a_\r\n$OutPutList = [System.Collections.ArrayList]::new()\r\n$OutPutList.Add(@('xxx','bbb')) | Out-Null\r\n$OutPutList.Add(@('mmm','bbb')) | Out-Null\r\n$OutPutList.Add(@('myy','bbb')) | Out-Null\r\n$FinaList = $OutPutList | Where-Object {$_[0] -like \"x*\"}\r\n$FinaList.Count \r\n$FinaList[0]\r\n_Output\uff1a_\r\n![image](https://user-images.githubusercontent.com/102647035/160763063-c48f84af-7b3e-4f34-b891-8e2dc2f8466a.png)\r\n\r\n2.When **2** objects matched, Where-Object returns **correctly**.\r\nFinaList.Count is 2. And FinaList[0] is ('mmm','bbb').\r\n_Code\uff1a_\r\n$OutPutList = [System.Collections.ArrayList]::new()\r\n$OutPutList.Add(@('xxx','bbb')) | Out-Null\r\n$OutPutList.Add(@('mmm','bbb')) | Out-Null\r\n$OutPutList.Add(@('myy','bbb')) | Out-Null\r\n$FinaList = $OutPutList | Where-Object {$_[0] -like \"m*\"}\r\n$FinaList.Count \r\n$FinaList[0]\r\n_Output\uff1a_\r\n![image](https://user-images.githubusercontent.com/102647035/160763734-db69989c-8517-4424-acc5-d955bbc0b072.png)\r\n\n\n### Expected behavior\n\n```console\n$OutPutList = [System.Collections.ArrayList]::new()\r\n$OutPutList.Add(@('xxx','bbb')) | Out-Null\r\n$OutPutList.Add(@('mmm','bbb')) | Out-Null\r\n$OutPutList.Add(@('myy','bbb')) | Out-Null\r\n$FinaList = $OutPutList | Where-Object {$_[0] -like \"x*\"}\r\n$FinaList.Count \r\n$FinaList[0]\r\nOutput\uff1a\r\n1\r\nxxx\r\nbbb\n```\n\n\n### Actual behavior\n\n```console\n$OutPutList = [System.Collections.ArrayList]::new()\r\n$OutPutList.Add(@('xxx','bbb')) | Out-Null\r\n$OutPutList.Add(@('mmm','bbb')) | Out-Null\r\n$OutPutList.Add(@('myy','bbb')) | Out-Null\r\n$FinaList = $OutPutList | Where-Object {$_[0] -like \"x*\"}\r\n$FinaList.Count \r\n$FinaList[0]\r\nOutput\uff1a\r\n2\r\nxxx\n```\n\n\n### Error details\n\n_No response_\n\n### Environment data\n\n```powershell\n$PSVersionTable\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.2\r\nPSEdition                      Core\r\nGitCommitId                    7.2.2\r\nOS                             Microsoft Windows 10.0.22000\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\n```\n\n\n### Visuals\n\n_No response_",
  "closed_at": "2022-04-01T00:00:39Z",
  "comments": [
    {
      "author": "jborean93",
      "author_association": "COLLABORATOR",
      "body": "If I understand it correctly this is because Where-Object is outputting objects that match. When there is only one object you get that actual object back rather than a single array of 1 object. If you get multiple matches you get multiple objects back which is encapsulated inside an array. To always ensure you have an array back, whether it be empty or a single entry, wrap your pipeline inside `@()`, e.g.\r\n\r\n```ps\r\n$obj = @(1..3 | Where-Object { $_ -eq 2 })\r\n```\r\n\r\nBy putting it inside the array subexpression it will ensure that the output is always an array. Even if you have multiple matches it will be those matches as array elements rather than an array in an array.",
      "created_at": "2022-03-30T07:38:28Z",
      "updated_at": "2022-03-30T07:38:28Z"
    },
    {
      "author": "aksssdf",
      "author_association": "NONE",
      "body": "thanks @jborean93 Seem to have correct output after adding @ ()\r\n\r\n> $OutPutList = [System.Collections.ArrayList]::new()\r\n> $OutPutList.Add(@('xxx','bbb')) | Out-Null\r\n>$OutPutList.Add(@('mmm','bbb')) | Out-Null\r\n>$OutPutList.Add(@('myy','bbb')) | Out-Null\r\n>$FinaList = @($OutPutList | Where-Object {$_[0] -like \"x*\"})\r\n >$FinaList.Count\r\n1\r\n> $FinaList[0]\r\nxxx\r\nbbb",
      "created_at": "2022-03-30T08:01:46Z",
      "updated_at": "2022-03-30T08:01:46Z"
    },
    {
      "author": "jhoneill",
      "author_association": "NONE",
      "body": "> If I understand it correctly this is because Where-Object is outputting objects that match. When there is only one object you get that actual object back rather than a single array of 1 object. If you get multiple matches you get multiple objects back which is encapsulated inside an array. \r\n\r\n**Yes.** When ` Where-Object` was asked to select from arrays, the OP either got one array in` $finalList` - meaning count told him the number of members in that single array,  or `$finallist` was an array of arrays so count told him how many arrays it held.     \r\n\r\n> By putting it inside the array subexpression it will ensure that the output is always an array. Even if you have multiple matches it will be those matches as array elements rather than an array in an array.\r\n\r\n**Yes** another is to add the result to an empty array. \r\n\r\n",
      "created_at": "2022-03-30T09:18:48Z",
      "updated_at": "2022-03-30T09:19:36Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2022-04-01T00:00:38Z",
      "updated_at": "2022-04-01T00:00:38Z"
    }
  ],
  "created_at": "2022-03-30T06:25:37Z",
  "number": 17083,
  "state": "closed",
  "title": " Where-Object returns abnormally when only 1 object matched",
  "updated_at": "2022-04-01T00:00:39Z"
}