{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10689",
  "author": "daxian-dbw",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nRFC: https://github.com/PowerShell/PowerShell-RFC/pull/162\r\nSupport notification on `pwsh` startup when a new release is available\r\n\r\n- Preview `pwsh` will check both new preview and stable releases. It prints notification message at startup time as long as the latest preview version or stable version is higher than the current version.\r\n- Stable `pwsh` will check new stable releases only. It prints notification message at startup time if the latest stable version is higher than the current version.\r\n- Update check and notification will only happen for interactive sessions, and it can be suppressed by both the `-NoLogo` flag and an environment variable `POWERSHELL_UPDATECHECK_OPTOUT`.\r\n- Update check is done by a task that is delayed for 3 seconds after `pwsh` starts, so it has minimum impact to the startup time.\r\n\r\nFor detailed implementation design, please look at the RFC.\r\n\r\n## Notification Message\r\n\r\nFor stable version `pwsh`:\r\n```none\r\nC:\\Users\\user>e:\\6.2.1\\pwsh.exe -noprofile\r\nPowerShell 6.2.1\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\n\r\nhttps://aka.ms/powershell\r\nType 'help' to get help.\r\n\r\n!! A new PowerShell stable release is available: v6.2.3 !!\r\nUpgrade now, or check out the release page at:\r\nhttps://github.com/PowerShell/PowerShell/releases/tag/v6.2.3\r\n\r\nPS C:\\Users\\user>\r\n```\r\n\r\nFor preview version `pwsh`:\r\n```none\r\nC:\\Users\\user>e:\\preview\\pwsh.exe -noprofile\r\nPowerShell 6.2.0-preview.3\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\n\r\nhttps://aka.ms/powershell\r\nType 'help' to get help.\r\n\r\n!! A new PowerShell preview release is available: v7.0.0-preview.4 !!\r\nUpgrade now, or check out the release page at:\r\nhttps://github.com/PowerShell/PowerShell/releases/tag/v7.0.0-preview.4\r\n\r\nPS C:\\Users\\user>\r\n```\r\n\r\n## Startup Perf Measurement on my dev machines\r\n\r\n### Windows\r\nWhen no new release is available, namely on the latest preview/stable `pwsh` where notification will not be printed, the update notification change adds about `4ms` to the startup time of an interactive session.\r\n- `2ms` spent on starting the update-check task\r\n- `2ms` spent on the notification printing logic\r\n\r\nWhen a new release is available, namely on an old preview/stable `pwsh` where a notification message will be printed, the update notification change adds about `6ms` to the startup time of an interactive session.\r\n- `2ms` spent on starting the update-check task\r\n- `4ms` spent on the notification printing logic\r\n\r\nAs a reference, `Measure-Command { F:\\pscore70.preview4\\pwsh.exe -noprofile -c exit }` takes about `400ms` on average on my Windows dev machine.\r\n\r\n### Linux (Ubuntu 16.04)\r\nWhen no new release is available, namely on the latest preview/stable `pwsh` where notification will not be printed, the update notification change adds about `6ms` to the startup time of an interactive session.\r\n- `3ms` spent on starting the update-check task\r\n- `3ms` spent on the notification printing logic\r\n\r\nWhen a new release is available, namely on an old preview/stable `pwsh` where a notification message will be printed, the update notification change adds about `9ms` to the startup time of an interactive session.\r\n- `3ms` spent on starting the update-check task\r\n- `6ms` spent on the notification printing logic\r\n\r\nAs a reference, `Measure-Command { pwsh-preview -noprofile -c exit }` takes about `445ms` on average on my Linux dev machine.\r\n\r\n### macOS (10.14.6)\r\nWhen no new release is available, namely on the latest preview/stable `pwsh` where notification will not be printed, the update notification change adds about `4ms` to the startup time of an interactive session.\r\n- `2ms` spent on starting the update-check task\r\n- `2ms` spent on the notification printing logic\r\n\r\nWhen a new release is available, namely on an old preview/stable `pwsh` where a notification message will be printed, the update notification change adds about `5ms` to the startup time of an interactive session.\r\n- `2ms` spent on starting the update-check task\r\n- `3ms` spent on the notification printing logic\r\n\r\nAs a reference, `Measure-Command { pwsh-preview -noprofile -c exit }` takes about `316ms` on average on my macOS dev machine.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [x] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [x] Experimental feature name(s): `PSUpdatesNotification`\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [x] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [x] Issue filed: https://github.com/MicrosoftDocs/PowerShell-Docs/issues/4881\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2019-10-08T22:53:15Z",
  "comments": [
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@rjmholt Thanks for the review and feedback! I addressed them all. Also, I decided to use `using declaration` in `QueryNewReleaseAsync` to make it less nested.\r\nCan you please take another look?",
      "created_at": "2019-10-03T19:18:45Z",
      "updated_at": "2019-10-03T19:18:56Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@joeyaiello Could you please take a look at the current notification message in the PR description? I decided to not print it in color as it's (1) over striking (annoying) (2) not accessibility friendly.",
      "created_at": "2019-10-03T19:53:28Z",
      "updated_at": "2019-10-03T19:53:28Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Rebased to resolve a conflict in experimental feature declaration.",
      "created_at": "2019-10-07T20:55:39Z",
      "updated_at": "2019-10-07T20:55:39Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "No tests was added.",
      "created_at": "2019-10-09T03:03:11Z",
      "updated_at": "2019-10-09T03:03:11Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@iSazonov I don't know how to add a test for it. It seems manually testable only -- only interactive session will trigger update-check and notification-printing.",
      "created_at": "2019-10-09T17:10:31Z",
      "updated_at": "2019-10-09T17:10:31Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "We could use HttpListener helper module to emulate server responses, HelpersHostCS to get host output, and test hook to force update check. Although I'm not sure it is worth the effort. Maybe after it ceases to be experimental.",
      "created_at": "2019-10-09T17:33:00Z",
      "updated_at": "2019-10-09T17:33:00Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "@daxian-dbw \r\nIt does not seem to be aware of the daily build though.\r\n![image](https://user-images.githubusercontent.com/9250262/66679228-a6744300-ec65-11e9-9427-b30c8af14c02.png)\r\nA bit of a late feedback: All the exclamation marks make it look very non-standard and not so professional. Generally, I'd recommend to not use any exclamation marks at all as this is a purely informative message (after the first time the user might be very well aware of it). It would be great if it did some maths around the support time whether the current version is still in support or not.",
      "created_at": "2019-10-11T19:29:55Z",
      "updated_at": "2019-10-11T19:31:03Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@bergmeister I'm going to do an update to the message.  Let me look at some examples from other software.",
      "created_at": "2019-10-11T19:46:42Z",
      "updated_at": "2019-10-11T19:46:42Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@bergmeister This is an experimental feature and feedbacks is not a late. And we were more worried about the code than about the look. :-)\r\n",
      "created_at": "2019-10-11T19:47:01Z",
      "updated_at": "2019-10-11T19:47:01Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> Upgrade now\r\n\r\nNot clear how.",
      "created_at": "2019-10-11T19:48:14Z",
      "updated_at": "2019-10-11T19:48:14Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@bergmeister Thanks for the feedback! I was expecting @joeyaiello to [take a look at the message](https://github.com/PowerShell/PowerShell/pull/10689#issuecomment-538101820) but he was busy and didn't get to it.\r\nAs @iSazonov said, this PR is more about implementation, and the message will be updated based on feedback.",
      "created_at": "2019-10-11T21:50:07Z",
      "updated_at": "2019-10-11T21:50:07Z"
    }
  ],
  "created_at": "2019-10-03T01:11:39Z",
  "number": 10689,
  "state": "closed",
  "title": "Support notification on `pwsh` startup when a new release is available",
  "updated_at": "2019-10-11T21:50:07Z"
}