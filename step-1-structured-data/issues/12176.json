{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12176",
  "author": "mklement0",
  "body": "Seemingly, the `dotnet` CLI preempts argument passing to PowerShell in the case of the `-l` / `-login` PowerShell CLI switch.\r\n\r\nOther parameters appear not to be affected (haven't tested methodically).\r\n\r\n# Steps to reproduce\r\n\r\nWith the .NET Core SDK installed, run the following:\r\n\r\n```powershell\r\n# Install PowerShell as a .NET global tool (skip if already installed).\r\ndotnet tool install powershell -g\r\n\r\n& { ~/.dotnet/tools/pwsh -l -c Get-Date >$null; $LASTEXITCODE } | Should -Be 0\r\n```\r\n\r\n# Expected behavior\r\n\r\nThe test should pass.\r\n\r\n# Actual behavior\r\n\r\nThe test fails, because the exit code is `1` due to the failure to invoke `pswh`.\r\n\r\nIf you run without the `| Should ...`, you'll see that the `dotnet` CLI complains about an unknown option and then prints its usage information:\r\n\r\n```none\r\nUnknown option: -l\r\nUnknown option: -c\r\n.NET Core SDK (3.1.200)\r\nUsage: dotnet [runtime-options] [path-to-application] [arguments]\r\n...\r\n```\r\n\r\n# Environment data\r\n\r\n```none\r\nPowerShell Core 7.0.0\r\n```\r\n",
  "closed_at": null,
  "comments": [],
  "created_at": "2020-03-22T19:05:03Z",
  "labels": [
    "Issue-Bug",
    "Area-Maintainers-Build"
  ],
  "number": 12176,
  "state": "open",
  "title": "PowerShell installed as a .NET global tool doesn't support the -l / -login switch",
  "updated_at": "2020-03-26T13:04:09Z"
}