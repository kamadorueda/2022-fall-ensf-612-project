{
  "_url": "https://github.com/PowerShell/PowerShell/issues/2544",
  "author": "iSazonov",
  "body": "<!--\n\nIf it is a bug report:\n- make sure you are able to repro it on the latest released version. \nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\n- Search the existing issues.\n- Refer to the [FAQ](../docs/FAQ.md).\n- Refer to the [known issues](../docs/KNOWNISSUES.md).\n- Fill out the following repro template\n\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\n-->\n\nReported via [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell/suggestions/13741089-get-service-name-parameter-allows-null-value) (in comments)\n\n(Related #2540 )\n## Steps to reproduce\n1. Get-Alias -Name $null\n2. Get-Alias -Name \"\"\n## Expected behavior\n\nParameterBinding exception saying the value is null or empty\n## Actual behavior\n1. Returns all aliases\n2. Return `Get-Alias -Name \"\"\n   Get-Alias : This command cannot find a matching alias because an alias with the name '' does not exist.`\n## Environment data\n\n<!-- provide the output of $PSVersionTable -->\n\n``` powershell\n> $PSVersionTable\nName                           Value\n----                           -----\nPSVersion                      5.0.10240.17113\nWSManStackVersion              3.0\nSerializationVersion           1.1.0.1\nCLRVersion                     4.0.30319.42000\nBuildVersion                   10.0.10011.16384\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\nPSRemotingProtocolVersion      2.3\n```\n",
  "closed_at": "2016-11-12T00:59:58Z",
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "This is not a regression and I can repro with PS2.0.  If we change this, it would be a breaking change.  There's probably a number of cmdlets that assume that $null means that parameter wasn't passed and acts accordingly which I agree is wrong.\n",
      "created_at": "2016-10-27T16:13:45Z",
      "updated_at": "2016-10-27T16:13:45Z"
    },
    {
      "author": "HemantMahawar",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT Are you proposing that we don't fix this issue (as well as #2540) or fix it as \"potential breaking change\" or something else?\n",
      "created_at": "2016-10-27T20:40:08Z",
      "updated_at": "2016-10-27T20:40:08Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@HemantMahawar before I can make proposal, I would like to know what other cmdlets have this behavior to understand the extent of the breaking change if we decide to change the behavior.  seems like this should be easy to script\n",
      "created_at": "2016-10-27T20:52:41Z",
      "updated_at": "2016-10-27T20:52:41Z"
    },
    {
      "author": "HemantMahawar",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT \nI wrote a [quick script](https://gist.github.com/HemantMahawar/c21b628a85ccc58e2c3c78e89db3207a) to find this data on PS 5.1 machine for Get-\\* cmdlets.\n\n# Cmdlets that do the right thing\n\n## Get-Acl\n\nPath                           True  \n\n## Get-Command\n\nName                           True  \n\n## Get-ControlPanelItem\n\nName                           True  \n\n## Get-HotFix\n\nId                             True  \n\n## Get-FormatData\n\nTypeName                       True  \n\n## Get-ItemPropertyValue\n\nPath                           True  \n\n## Get-Member\n\nName                           True  \n\n## Get-Module\n\nName                           True  \n\n## Get-Process\n\nName                           True  \n\n## Get-PSDrive\n\nName                           True  \n\n## Get-PSHostProcessInfo\n\nName                           True  \n\n## Get-TypeData\n\nTypeName                       True  \n\n## Provider cmdlets that should not be changed\n\n## Get-ChildItem\n\nPath                          False \nFilter                         False \n\n## Get-ItemProperty\n\nName                           False \n\n# Cmdlets that I am not sure about\n\n## Get-Credential\n\nUserName                       False \n\n## Get-Help (fixing this would be a breaking change for interactive scenario only)\n\nName                           False \n\n# Cmdlets that have room for improvement\n\n## Get-Alias\n\nName                           False \n\n## Get-ComputerInfo\n\nProperty                       False \n\n## Get-Event\n\nSourceIdentifier               False \n\n## Get-EventSubscriber\n\nSourceIdentifier               False \n\n## Get-PSBreakpoint\n\nScript                         False \n\n## Get-PSProvider\n\nPSProvider                     False \n\n## Get-PSSessionConfiguration\n\nName                           False \n\n## Get-PSSnapin\n\nName                           False \n\n## Get-Runspace\n\nName                           False \n\n## Get-RunspaceDebug\n\nRunspaceName                 False \nProcessName                    True\nAppDomainName             True  \n\n## Get-Service\n\nName                           False \n\n## Get-TimeZone\n\nName                           False \n\n## Get-TraceSource\n\nName                           False \n\n## Get-Variable (Does only ValidateNotNull)\n\nName                           False \n\n## Get-WmiObject\n\nClass                          False \nProperty                       False \n",
      "created_at": "2016-10-27T23:45:14Z",
      "updated_at": "2016-10-27T23:45:14Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@HemantMahawar thanks for taking the time to script this.  Are you saying we shouldn't change the provider cmdlets because passing $null explicitly is a valid case (maybe registry provider?)?  As for the other ones, doing a quick look over them, I don't see a real scenario where you would pass in $null as the parameter value and expect it to return all results rather than it being a mistake on my part to not have defined the value being passed in.  Seems like we either fix all of them or none.  I don't think I would be selective here unless $null is a legitimate value.\n",
      "created_at": "2016-10-28T00:37:47Z",
      "updated_at": "2016-10-28T00:37:47Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "My _subjective_ assessment:\n- Low - the likelihood of a deliberate transfer of _empty_ values directly or from a pipeline is very small and/or cmdlet is used relatively rarely.\n- Middle -  cmdlet is used relatively often and submisson of empty values possible.\n- High - breaking - cmdlet should not be fixed.\n\nMy greatest concerns relate to `Get-ChildItem` and `Get-ItemProperty`.  We could use the script template from @daxian-dbw [AnalyzeSelectObject.ps1  ](https://gist.github.com/daxian-dbw/07847ff5ef6da2c100e8b22bd94f0feb) to assess their.\n\n(I attached the file with the table source so you can edit it [cmdlet_table.txt](https://github.com/PowerShell/PowerShell/files/558428/cmdlet_table.txt) )\n\n| Cmdlet | Param | Need Fix | Break Level |\n| --- | --- | --- | --- |\n| Get-Alias | Name | Yes | Low |\n| Get-ChildItem | Path | Yes | Middle |\n| Get-ChildItem | Filter | Yes | Middle |\n| Get-Credential | UserName | Yes | Low |\n| Get-Event | SourceIdentifier | Yes | Low |\n| Get-EventSubscriber | SourceIdentifier | Yes | Low |\n| Get-Help | Name | Yes | Low |\n| Get-ItemProperty | Name | Yes | Middle |\n| Get-PSBreakpoint | Script | Yes | Low |\n| Get-PSProvider | PSProvider | Yes | Low |\n| Get-PSSessionConfiguration | Name | Yes | Low |\n| Get-PSSnapin | Name | Yes | Low |\n| Get-Runspace | Name | ? | ? |\n| Get-RunspaceDebug | RunspaceName | ? | ? |\n| Get-Service | Name | Yes | Low |\n| Get-TraceSource | Name | ? | ? |\n| Get-Variable | Name | Yes | Low |\n| Get-WmiObject | Class | Yes | Low |\n| Get-WmiObject | Property | Yes | Low |\n",
      "created_at": "2016-10-28T13:21:09Z",
      "updated_at": "2016-10-28T13:21:09Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "#2545 is one specific case, this one covers the broader discussion, keeping it open for committee to review\n",
      "created_at": "2016-11-01T00:21:57Z",
      "updated_at": "2016-11-01T00:21:57Z"
    },
    {
      "author": "HemantMahawar",
      "author_association": "CONTRIBUTOR",
      "body": "@PowerShell/powershell-committee agreed that we should leave the provider cmdlets as is, due to high chance of breaking changes and fix the other cmdlets.\n@SteveL-MSFT  to open a meta-issue for all the remaining cmdlets (subjected to above statement) and then close this issue.\n",
      "created_at": "2016-11-11T23:46:26Z",
      "updated_at": "2016-11-11T23:46:26Z"
    }
  ],
  "created_at": "2016-10-27T10:51:47Z",
  "number": 2544,
  "state": "closed",
  "title": "Get-Alias Name parameter allows Null value",
  "updated_at": "2016-11-12T01:00:06Z"
}