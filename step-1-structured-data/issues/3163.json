{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3163",
  "author": "mklement0",
  "body": "[Superseded by #5579]\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\n'' | Select-Object @{ n='prop'; e={ 1, 2 } } | ConvertTo-Json\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```\r\n{\r\n    \"prop\":  [\r\n                 1,\r\n                 2\r\n             ]\r\n}\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n_Update_: This symptom no longer happens in PowerShell _Core_ due to [this fix](https://github.com/PowerShell/PowerShell/pull/3231), but it can still be observed in _Windows PowerShell_; the symptom illustrates that the `Select-Object` way of creating the array-valued property differs from the seemingly equivalent `[pscustomobject] @{ .... }`  way, which is both unexpected and could cause problems in other contexts.\r\n\r\n```\r\n{\r\n    \"prop\":  {\r\n                 \"value\":  [\r\n                               1,\r\n                               2\r\n                           ],\r\n                 \"Count\":  2\r\n             }\r\n}\r\n```\r\n\r\nNote that what _should_ be an equivalent command:\r\n\r\n    [pscustomobject] @{ prop = 1, 2 } | ConvertTo-Json    \r\n\r\n _does_ produce the expected output.\r\n\r\nAn unexpected difference in the resulting array-valued property can also be observed via `Get-Member`:\r\n\r\n    (Get-Member prop -InputObject (New-Object pscustomobject |Select-Object @{ n='prop'; e={  1, 2  } })).Definition\r\n\r\nyields\r\n\r\n    System.Object[] prop=1 2    \r\n\r\nwhereas \r\n\r\n    (Get-Member prop -InputObject ([pscustomobject] @{ prop = 1, 2 })).Definition\r\n\r\nyields\r\n\r\n    Object[] prop=System.Object[]\r\n\r\nFor more information and a workaround, see http://stackoverflow.com/a/38212718/45375\r\n\r\nEnvironment data\r\n----------------\r\n\r\n```powershell\r\nPowerShell v6.0.0-alpha (v6.0.0-alpha.15) on Darwin Kernel Version 16.4.0: Thu Dec 22 22:53:21 PST 2016; root:xnu-3789.41.3~3/RELEASE_X86_64\r\nPowerShell v5.1.14393.693 on Microsoft Windows 10 Pro (64-bit; v10.0.14393)\r\n```\r\n",
  "closed_at": "2017-11-29T21:50:28Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw Taking into account the experience of last time we corrected `Select-Object` cmdlet I guess it most likely a breaking change.",
      "created_at": "2017-02-17T15:43:15Z",
      "updated_at": "2017-02-17T15:43:15Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@mklement0 Could you please add comment why you close the Issue.",
      "created_at": "2017-11-30T10:06:37Z",
      "updated_at": "2017-11-30T10:06:37Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov: Thanks for the reminder, but I'd already put \"[Superseded by #5579]\" at the top of the original post. #5579 describes the issue in more general terms.",
      "created_at": "2017-11-30T11:12:30Z",
      "updated_at": "2017-11-30T11:12:30Z"
    }
  ],
  "created_at": "2017-02-16T17:22:59Z",
  "labels": [
    "WG-Cmdlets"
  ],
  "number": 3163,
  "state": "closed",
  "title": "Unexpected behavior of array-valued calculated properties added to a custom object with Select-Object",
  "updated_at": "2017-11-30T11:12:30Z"
}