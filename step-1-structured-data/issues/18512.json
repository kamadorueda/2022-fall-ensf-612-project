{
  "_url": "https://github.com/PowerShell/PowerShell/issues/18512",
  "author": "MartinGC94",
  "body": "### Prerequisites\n\n- [X] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\n\n### Steps to reproduce\n\nDontShow is set on individual parameter attributes, allowing you to define it for one parameterset but not another like this:\r\n\r\n```\r\nfunction Verb-Noun\r\n{\r\n    Param\r\n    (\r\n        [Parameter(ParameterSetName = \"ParamSet1\")]\r\n        [switch]\r\n        $ParamSet1,\r\n\r\n        [Parameter(ParameterSetName = \"ParamSet2\")]\r\n        [switch]\r\n        $ParamSet2,\r\n\r\n        [Parameter(ParameterSetName = \"ParamSet1\")]\r\n        [Parameter(ParameterSetName = \"ParamSet2\", DontShow)]\r\n        [string]\r\n        $HiddenParam\r\n    )\r\n}\r\n```\r\nBut even though it's only set for `ParamSet2` it remains hidden in `ParamSet1`. See: `TabExpansion2 'Verb-Noun -ParamSet1 -' | Select-Object -ExpandProperty CompletionMatches`\n\n### Expected behavior\n\n```console\nTab completion should take the resolved parameter set into account when deciding whether to hide or show parameters with the DontShow attribute set.\n```\n\n\n### Actual behavior\n\n```console\nDontShow always hides the parameter, regardless of the resolved parameter set by the pseudobinding.\n```\n\n\n### Error details\n\n_No response_\n\n### Environment data\n\n```powershell\nName                           Value\r\n----                           -----\r\nPSVersion                      7.3.0\r\nPSEdition                      Core\r\nGitCommitId                    7.3.0\r\nOS                             Microsoft Windows 10.0.19045\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\n```\n\n\n### Visuals\n\n_No response_",
  "closed_at": null,
  "comments": [
    {
      "author": "ThomasNieto",
      "author_association": "CONTRIBUTOR",
      "body": "What is the use case for doing it this way? Can't you just have that parameter in just the required parameter set? ",
      "created_at": "2022-11-10T05:56:01Z",
      "updated_at": "2022-11-10T05:56:01Z"
    },
    {
      "author": "MartinGC94",
      "author_association": "CONTRIBUTOR",
      "body": "One use case could be deprecating parameters in a parameter set. For example, `Write-Progress` currently forces you to specify an `Activity`, even when it shouldn't be needed. If you update it to have a new parameter set for scenarios where it's not needed you can keep the `Activity` as a hidden optional parameter for backwards compatibility with the original parameterset.",
      "created_at": "2022-11-10T15:19:43Z",
      "updated_at": "2022-11-10T15:19:43Z"
    }
  ],
  "created_at": "2022-11-09T22:14:37Z",
  "number": 18512,
  "state": "open",
  "title": "DontShow affects all parametersets",
  "updated_at": "2022-11-10T15:19:43Z"
}