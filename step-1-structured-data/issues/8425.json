{
  "_url": "https://github.com/PowerShell/PowerShell/issues/8425",
  "author": "daxian-dbw",
  "body": "## PR Summary\r\n\r\nRemove unneeded catch/throw from 'mkdir' and 'oss' functions.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [ ] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` to the beginning of the title and remove the prefix when the PR is ready.\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] User-facing [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed - Issue link:\r\n- **Testing - New and feature**\r\n    - [x] Not Applicable or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n        - [ ] [Add `[feature]` if the change is significant or affects feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\r\n",
  "closed_at": "2018-12-10T04:53:32Z",
  "comments": [
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "@daxian-dbw - sorry to have just noticed this - the seemingly unnecessary `try/catch` statements did serve a useful purpose at one point. I recall hating adding them, but IIRC, it improved error reporting in some useful way. Sorry, but I don't remember more than that though.",
      "created_at": "2019-02-26T18:51:19Z",
      "updated_at": "2019-02-26T18:51:19Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Does it update ScriptStackTrace in errorrecord?",
      "created_at": "2019-02-26T19:46:43Z",
      "updated_at": "2019-02-26T19:46:43Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@lzybkr Thanks for bringing up that context. Looks like those try/catch were added only for functions that uses `SteppablePipeline`. Might it be related to errors thrown from within the steppable pipeline? I will play with it a bit to see if I can find out why.",
      "created_at": "2019-03-01T06:39:29Z",
      "updated_at": "2019-03-01T06:39:29Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "The \"better error reporting\" might be related to `PowerShell.AddScript(...).Invoke()` doesn't throw on terminating error or exception, but instead keep the errors in the error stream.\r\nHere is one example of that:\r\n```\r\n$ps = [powershell]::create()\r\n$ps.AddScript(@'\r\n try {\r\n     Get-Process -Invalid 42\r\n } catch {\r\n     throw\r\n }\r\n'@)\r\n## try/catch/throw is needed for the exception to be thrown from $ps.invoke()\r\n$ps.Invoke()\r\n```\r\n\r\nBut it doesn't seem to be the exact reason for the try/catch/throw in the original `mkdir` and `oss`.\r\nThe following throws the exception even without the try/catch/throw in `mkdir`:\r\n```\r\n$ps = [powershell]::create()\r\n$ps.AddScript(\"mkdir -Path blahhfe:\\jkfjkjakfklajlkf -ea stop\") > $null\r\n$ps.Invoke()\r\n```",
      "created_at": "2019-03-02T03:56:03Z",
      "updated_at": "2019-03-02T03:56:03Z"
    }
  ],
  "created_at": "2018-12-07T23:30:22Z",
  "number": 8425,
  "state": "closed",
  "title": "Remove unneeded catch/throw from 'mkdir' and 'oss' functions",
  "updated_at": "2019-03-02T03:56:03Z"
}