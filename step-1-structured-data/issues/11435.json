{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11435",
  "author": "iSazonov",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nUse LanguagePrimitives.TryConvertTo() as last resort to string conversion.\r\n\r\n## PR Context\r\n\r\nPlaying with AccountManagement module I catch an error where properties with disposed object reference present.\r\n```powershell\r\nPS C:\\Windows\\System32> $e.psobject.properties\r\n\r\nGetterScript    : & { Set-StrictMode -Version 1; $this.Exception.InnerException.PSMessageDetails }\r\nSetterScript    :\r\nMemberType      : ScriptProperty\r\nIsSettable      : False\r\nIsGettable      : True\r\nValue           :\r\nTypeNameOfValue : System.Object\r\nName            : PSMessageDetails\r\nIsInstance      : False\r\n\r\nMemberType      : Property\r\nValue           : System.Management.Automation.MethodInvocationException: Exception calling \"ToString\" with \"0\"\r\n                  argument(s): \"Can\ufffdt delete an already deleted object\"\r\n                   ---> System.InvalidOperationException: Can\ufffdt delete an already deleted object\r\n                     at System.DirectoryServices.AccountManagement.Principal.CheckDisposedOrDeleted()\r\n                     at System.DirectoryServices.AccountManagement.Principal.HandleGet[T](T& currentValue, String\r\n                  name, LoadState& state)\r\n                     at System.DirectoryServices.AccountManagement.Principal.get_Name()\r\n                     at System.DirectoryServices.AccountManagement.Principal.ToString()\r\n                     at CallSite.Target(Closure , CallSite , Object )\r\n                     --- End of inner exception stack trace ---\r\n                     at System.Management.Automation.ExceptionHandlingOps.ConvertToMethodInvocationException(Exception\r\n                  exception, Type typeToThrow, String methodName, Int32 numArgs, MemberInfo memberInfo) in C:\\Users\\sie\r\n                  \\Documents\\GitHub\\iSazonov\\PowerShell\\src\\System.Management.Automation\\engine\\runtime\\Operations\\Misc\r\n                  Ops.cs:line 2062\r\n                     at CallSite.Target(Closure , CallSite , Object )\r\n                     at System.Dynamic.UpdateDelegates.UpdateAndExecute1[T0,TRet](CallSite site, T0 arg0)\r\n                     at CallSite.Target(Closure , CallSite , Object )\r\n                     at System.Management.Automation.Interpreter.DynamicInstruction`2.Run(InterpretedFrame frame) in C:\r\n                  \\Users\\sie\\Documents\\GitHub\\iSazonov\\PowerShell\\src\\System.Management.Automation\\engine\\interpreter\\D\r\n                  ynamicInstructions.Generated.cs:line 141\r\n                     at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.Run(InterpretedFrame\r\n                  frame) in C:\\Users\\sie\\Documents\\GitHub\\iSazonov\\PowerShell\\src\\System.Management.Automation\\engine\\i\r\n                  nterpreter\\ControlFlowInstructions.cs:line 357\r\nIsSettable      : False\r\nIsGettable      : True\r\nTypeNameOfValue : System.Exception\r\nName            : Exception\r\nIsInstance      : True\r\n\r\nMemberType      : Property\r\nValue           :\r\nIsSettable      : False\r\nIsGettable      : True\r\nTypeNameOfValue : System.Object\r\nName            : TargetObject\r\nIsInstance      : True\r\n\r\n```\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [ ] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [ ] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2020-01-14T03:33:18Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> Possible to add a test? Seems like we can create an ErrorRecord that hits this code path?\r\n\r\n@SteveL-MSFT I did not find how to do it :-(\r\n",
      "created_at": "2020-01-03T15:57:56Z",
      "updated_at": "2020-01-03T15:57:56Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov seems like line 802 would have already covered this?  Can you show how it looks before and after this change with your error?",
      "created_at": "2020-01-07T20:19:48Z",
      "updated_at": "2020-01-07T20:19:48Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@iSazonov Can you provide a repro with your module?",
      "created_at": "2020-01-09T21:30:29Z",
      "updated_at": "2020-01-09T21:30:29Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "My fix is not right.\r\n\r\n> $value = $prop.Value.ToString().Trim()\r\n\r\nThe line throws if ToString() throws ($prop.Value has a reference on an object with property with disposed object in my case)\r\n\r\nI will update the PR.",
      "created_at": "2020-01-10T15:39:47Z",
      "updated_at": "2020-01-10T16:13:12Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Tried to simulate the original issue of a disposed object, but couldn't find a way to do it.",
      "created_at": "2020-01-13T21:56:18Z",
      "updated_at": "2020-01-13T21:56:18Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> Tried to simulate the original issue of a disposed object, but couldn't find a way to do it.\r\n\r\nI too. I could port a code from AccountManagement module but I think it is not correct behavior for ToString() to throw and I will report the issue to Core team.",
      "created_at": "2020-01-14T03:32:44Z",
      "updated_at": "2020-01-14T03:32:44Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.0.0-rc.2` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.0.0-rc.2)\n",
      "created_at": "2020-01-16T23:38:34Z",
      "updated_at": "2020-01-16T23:38:34Z"
    }
  ],
  "created_at": "2019-12-26T04:43:36Z",
  "number": 11435,
  "state": "closed",
  "title": "Fix NRE in ConsiceView",
  "updated_at": "2020-01-16T23:38:35Z"
}