{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6845",
  "author": "MaximoTrinidad",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\n- Windows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nIf it is a bug report:\r\n- make sure you are able to repro it on the latest released version. \r\nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://github.com/PowerShell/PowerShell/blob/master/docs/KNOWNISSUES.md).\r\n- Fill out the following repro template:\r\n\r\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\r\n-->\r\nAny reason why the $env:PROCESSOR_ARCHITECTURE was left out?  I think is useful.\r\nThis is missing in both Linux and MacOS PSCore6.\r\n\r\nSteps to reproduce\r\n------------------\r\nExecute the following command in either Linux or MacOS PSCore and the variable is missing.\r\n```powershell\r\ndir env:\r\n\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\nThis variable $env:PROCESSOR_ARCHITECTURE to exist\r\n```none\r\n\r\n```\r\n\r\nActual behavior\r\n---------------\r\nNo provided in non-Windows OS.\r\n```none\r\n\r\n```\r\n\r\nEnvironment data\r\n----------------\r\nCentOS:\r\n```\r\nPS /home/maxt> cat /etc/os-release                                                                                                  \r\nNAME=\"CentOS Linux\"\r\nVERSION=\"7 (Core)\"\r\nID=\"centos\"\r\nID_LIKE=\"rhel fedora\"\r\nVERSION_ID=\"7\"\r\nPRETTY_NAME=\"CentOS Linux 7 (Core)\"\r\nANSI_COLOR=\"0;31\"\r\nCPE_NAME=\"cpe:/o:centos:centos:7\"\r\nHOME_URL=\"https://www.centos.org/\"\r\nBUG_REPORT_URL=\"https://bugs.centos.org/\"\r\n\r\nCENTOS_MANTISBT_PROJECT=\"CentOS-7\"\r\nCENTOS_MANTISBT_PROJECT_VERSION=\"7\"\r\nREDHAT_SUPPORT_PRODUCT=\"centos\"\r\nREDHAT_SUPPORT_PRODUCT_VERSION=\"7\"\r\n\r\n```\r\nMacOS:\r\n```\r\nMaximos-Mac:~ maxt$ sw_vers\r\nProductName:\tMac OS X\r\nProductVersion:\t10.13.4\r\nBuildVersion:\t17E199\r\n```\r\n<!-- provide the output of $PSVersionTable -->\r\n```powershell\r\n#CentOS\r\nPS /home/maxt> $PSVersionTable                                                                                                      \r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.1.0-preview.2\r\nPSEdition                      Core\r\nGitCommitId                    v6.1.0-preview.2\r\nOS                             Linux 3.10.0-693.21.1.el7.x86_64 #1 SMP Wed Mar 7 19:03:37 UTC 2018\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n```\r\n#MacOS\r\nPS /Users/maxt> $PSVersionTable                                                                                         \r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.1.0-preview.2\r\nPSEdition                      Core\r\nGitCommitId                    v6.1.0-preview.2\r\nOS                             Darwin 17.5.0 Darwin Kernel Version 17.5.0: Mon Mar  5 22:24:32 PST 2018; root:xnu-45...\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2018-05-09T13:41:23Z",
  "comments": [
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "I believe that, being an environment variable, PowerShell does not control the existence of that setting. It's the host OS that sets `PROCESSOR_ARCHITECTURE` in the environment, and there's been a general preference for PowerShell not to set new environment variables (especially since this potentially breaks things).\r\n\r\nTo be clear, go into `cmd.exe` on Windows and type `echo %PROCESSOR_ARCHITECTURE%` and you should see the value. Go into `bash` on UNIX and type `echo $PROCESSOR_ARCHITECTURE` and you won't get anything by default. PowerShell aims to do the same on each respective platform.",
      "created_at": "2018-05-08T22:32:14Z",
      "updated_at": "2018-05-08T22:32:14Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "Just for the sake of completeness, on UNIX you should be able to use `uname -m` (I think `$PSVersionTable` uses this for `OS`). I think there might have been some discussion about PowerShell having an internal variable to track processor architecture too.",
      "created_at": "2018-05-08T22:34:04Z",
      "updated_at": "2018-05-08T22:34:04Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "Thanks everyone!!\r\n:)",
      "created_at": "2018-05-09T14:48:51Z",
      "updated_at": "2018-05-09T14:48:51Z"
    }
  ],
  "created_at": "2018-05-08T22:15:55Z",
  "number": 6845,
  "state": "closed",
  "title": "PSCore6 - $env:PROCESSOR_ARCHITECTURE variable missing cross-plaform.",
  "updated_at": "2018-05-09T14:48:52Z"
}