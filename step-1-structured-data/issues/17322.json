{
  "_url": "https://github.com/PowerShell/PowerShell/issues/17322",
  "author": "DesertBear",
  "body": "### Prerequisites\n\n- [X] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\n\n### Steps to reproduce\n\nWhen sending hashtable output to a text file, the file shows 32;1m in the output.  I suspect this issue is caused due to the colour highlighting of \u201cName\u201d and \u201cValue\u201d in the console.  See screenshot further down this post.\r\n\r\n**Example script:**\r\n```\r\n\r\n# Hashtable\r\n$Hashtable = @{\r\n    \"Folders\" = 2\r\n    \"Files\"   = 6\r\n}\r\n\r\n# Output\r\n$OutputPath = \"$env:UserProfile\\Desktop\\Hashtable.txt\"\r\n\r\n$Hashtable | Tee-Object -FilePath $OutputPath\r\n\r\nInvoke-Item $OutputPath\r\n\r\n```\n\n### Expected behavior\n\n```console\nName                           Value\r\n----                           -----\r\nFolders                        2\r\nFiles                          6\n```\n\n\n### Actual behavior\n\n```console\n\u001b[32;1mName                           Value\u001b[0m\r\n\u001b[32;1m----                           -----\u001b[0m\r\nFolders                        2\r\nFiles                          6\n```\n\n\n### Error details\n\n_No response_\n\n### Environment data\n\n```powershell\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.3\r\nPSEdition                      Core\r\nGitCommitId                    7.2.3\r\nOS                             Microsoft Windows 10.0.19044\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\n```\n\n\n### Visuals\n\n**Screenshot:**\r\n![Screenshot A](https://user-images.githubusercontent.com/27423064/168052981-987e6256-95ff-4951-8ed0-56189bebeca7.png)\r\n\r\n\r\n",
  "closed_at": "2022-05-14T04:00:41Z",
  "comments": [
    {
      "author": "robinmalik",
      "author_association": "NONE",
      "body": "Short: I suspect this can be resolved by setting: `$PSStyle.OutputRendering = Host` or `PlainText` (or use PowerShell 5.1), but I'm not sure if that's the approach we're required to take or whether it's a temporary workaround. I came here to raise this as an issue and just 10 minutes earlier, this case had been raised, so chipping in here. \r\n\r\nI'm hitting the problem in PowerShell 7.2.3 when simply piping command line results to `| clip` and wanting to paste these into Teams chats, notepad, etc. E.g.\r\n\r\n```\r\n\u001b[32;1mActiveDirectoryUserName : \u001b[0mDOMAIN\\user\r\n\u001b[32;1mApplicationType         : \u001b[0mDesktop\r\n\u001b[32;1mCreateTime              : \u001b[0m12/05/2022 10:50:43\r\n```",
      "created_at": "2022-05-12T11:01:18Z",
      "updated_at": "2022-05-12T11:01:18Z"
    },
    {
      "author": "DesertBear",
      "author_association": "NONE",
      "body": "Looking at the below post, it appears that the change was due to a security issue, so changing it to `Host` is probably not ideal.  I'm not sure whether the change was meant to be temporary or not.\r\n\r\nhttps://github.com/PowerShell/Announcements/issues/28\r\n\r\n",
      "created_at": "2022-05-12T11:52:30Z",
      "updated_at": "2022-05-12T11:52:47Z"
    },
    {
      "author": "jhoneill",
      "author_association": "NONE",
      "body": "There are multiple issues for this. It is meant to be fixed with #16811 but that doesn't seem to have been merged into an currently released version - or if it has the change has been made, the change back to host as default hasn't   \r\n@DesertBear  - it's logged as a vulnerability so a mitigation was put in place - but as I understand it,  it needed the user to run something which would output a carefully crafted ANSI sequence, so the it was hard to exploit and nothing has been observed trying to exploit it, so changing one's setting to plaintext or host is low-risk. Ansi-corrupted output was not meant to be the default forever\r\n\r\n @daxian-dbw  / @SteveL-MSFT  I must have bored you both nearly to death on this - sorry - but is there a definitive position on (a) when the new \"safe\" regex from #16811 will go into the shipping version - if it hasn't already and (b) when the default for outputRendering will change back to host ? \r\n\r\n\r\n ",
      "created_at": "2022-05-12T16:57:01Z",
      "updated_at": "2022-05-12T16:57:01Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "> (a) when the new \"safe\" regex from https://github.com/PowerShell/PowerShell/pull/16811 will go into the shipping version - if it hasn't already and\r\n\r\nThat PR is marked as `Backport-7.2-consider`, and that means we will consider back porting it to 7.2.x, but it may be rejected.\r\n\r\n> (b) when the default for outputRendering will change back to host?\r\n\r\nIt's already changed back to host in PowerShell 7.3 previews, and it will keep that way in 7.3 unless a vulnerability is detected with the new ANSI regex.",
      "created_at": "2022-05-12T17:12:30Z",
      "updated_at": "2022-05-12T17:12:30Z"
    },
    {
      "author": "jhoneill",
      "author_association": "NONE",
      "body": "Time to start using 7.3 preview then :-) ",
      "created_at": "2022-05-12T19:22:47Z",
      "updated_at": "2022-05-12T19:22:47Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as fixed and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2022-05-14T04:00:41Z",
      "updated_at": "2022-05-14T04:00:41Z"
    }
  ],
  "created_at": "2022-05-12T10:45:04Z",
  "labels": [
    "Resolution-Fixed",
    "Needs-Triage"
  ],
  "number": 17322,
  "state": "closed",
  "title": "PowerShell Output to Text File Shows 32;1m",
  "updated_at": "2022-05-14T04:00:41Z"
}