{
  "_url": "https://github.com/PowerShell/PowerShell/issues/2510",
  "author": "daxian-dbw",
  "body": "The following failure happens in OS X CIs for several time in different RPs.\n\n```\nDescribing XmlCommand DRT basic functionality Tests\n [!] Import with CliXml directive should work 56ms\n [!] Import with Rehydration should work 6ms\n [-] Error occurred in test script '/Users/travis/build/PowerShell/PowerShell/test/powershell/Modules/PowerShellGet/PowerShellGet.Tests.ps1' 2.76s\n  The specified Uri 'https://dtlgalleryint.cloudapp.net/' for parameter 'SourceLocation' is an invalid Web Uri. Please ensure that it meets the Web Uri requirements.\n  at ThrowError, /Users/travis/build/PowerShell/PowerShell/src/powershell-unix/bin/Linux/netcoreapp1.0/osx.10.11-x64/Modules/PowerShellGet/PSModule.psm1: line 14627\n```\n",
  "closed_at": "2016-11-02T21:25:46Z",
  "comments": [
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "It boils down to this error\n\n```\nPS /Users/vors/dev/PowerShell> $handler = New-Object System.Net.Http.HttpClientHandler                                                       New-Object : Exception calling \".ctor\" with \"0\" argument(s): \"The type initializer for 'System.Net.Http.CurlHandler' threw an exception.\"    \nAt line:1 char:12\n+ $handler = New-Object System.Net.Http.HttpClientHandler\n+            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : InvalidOperation: (:) [New-Object], MethodInvocationException\n    + FullyQualifiedErrorId : ConstructorInvokedThrowException,Microsoft.PowerShell.Commands.NewObjectCommand\n```\n\nWhich is internally\n\n```\nPS /Users/vors/dev/PowerShell> $error[0].Exception.InnerException.InnerException.InnerException.InnerException.InnerException.StackTrace        at Interop.CryptoInitializer.EnsureOpenSslInitialized()                                                                                   \n   at Interop.CryptoInitializer..cctor()\nPS /Users/vors/dev/PowerShell> $error[0].Exception.InnerException.InnerException.InnerException.InnerException.InnerException                \nUnable to load DLL 'System.Security.Cryptography.Native.OpenSsl': The specified module could not be found.\n (Exception from HRESULT: 0x8007007E)\n\n```\n\nI don't see it on alpha.11 release, but I see it on the build from master.\n\n@andschwa any ideas?\n",
      "created_at": "2016-10-25T01:38:49Z",
      "updated_at": "2016-10-25T01:38:49Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "I opened a corefx issue https://github.com/dotnet/corefx/issues/12983\n",
      "created_at": "2016-10-25T04:24:55Z",
      "updated_at": "2016-10-25T04:24:55Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Sure looks like the crypto library isn't getting patched. .NET may have updated the rpath finally but the 1.0.0 expected (incorrectly) for OpenSSL to be symlinked into the system, which our build module is supposed to fix.\n",
      "created_at": "2016-10-25T04:37:51Z",
      "updated_at": "2016-10-25T04:37:51Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "I did more experiments, looks like our patching aproach stop working after upgrade to \"4.3.0-preview1-24530-04\" for \"System.Net.Http\". Waiting to hear back from dotnet folks.\n",
      "created_at": "2016-10-26T23:02:03Z",
      "updated_at": "2016-10-26T23:02:43Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "I definitely believe that!\n",
      "created_at": "2016-10-26T23:05:31Z",
      "updated_at": "2016-10-26T23:05:31Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "I would love to know when .NET will stop shipping libraries with a disallowed setup requirement.\n",
      "created_at": "2016-10-26T23:06:04Z",
      "updated_at": "2016-10-26T23:06:04Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "Looks like they updated instructions http://stackoverflow.com/questions/38670295/brew-refusing-to-link-openssl\n\nNow it's \n\n```\nbrew update\nbrew install openssl\nln -s /usr/local/opt/openssl/lib/libcrypto.1.0.0.dylib /usr/local/lib/\nln -s /usr/local/opt/openssl/lib/libssl.1.0.0.dylib /usr/local/lib/\n```\n\nThat doesn't look more promising\n",
      "created_at": "2016-10-26T23:11:14Z",
      "updated_at": "2016-10-26T23:11:14Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Yeah that's asking users to manually create a security hole that the home brew team purposefully closed.\n",
      "created_at": "2016-10-26T23:12:38Z",
      "updated_at": "2016-10-26T23:12:38Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Our solution is to fix .NET's libraries because they are legitimately broken.\n",
      "created_at": "2016-10-26T23:13:49Z",
      "updated_at": "2016-10-26T23:13:49Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "But it stopped to work now. So should we consider roll back to 4.1.0?\n",
      "created_at": "2016-10-26T23:16:30Z",
      "updated_at": "2016-10-26T23:16:30Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "We should investigate why the patch is failing.\n",
      "created_at": "2016-10-26T23:18:18Z",
      "updated_at": "2016-10-26T23:18:18Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "Umh. I don't know how patching works. Want to take this other?\n",
      "created_at": "2016-10-26T23:19:00Z",
      "updated_at": "2016-10-26T23:19:10Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "Verified that it works with un-secure symlink.\n",
      "created_at": "2016-10-26T23:23:54Z",
      "updated_at": "2016-10-26T23:23:54Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "The patch is the application of the install_name_tool. It's just updating the rpath of the libraries to search for OpenSSL in the correct location.\n",
      "created_at": "2016-10-26T23:24:32Z",
      "updated_at": "2016-10-26T23:24:32Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Would this be a blocker for our alpha.12 release?\nThe discussion in [#12983](https://github.com/dotnet/corefx/issues/12983) suggests using symlink, so shall we update our documentation?\n",
      "created_at": "2016-11-01T20:30:54Z",
      "updated_at": "2016-11-01T20:30:54Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "The name of dylib changed from `System.Security.Cryptography.Native.dylib` to `System.Security.Cryptography.Native.OpenSsl.dylib`. There is also `System.Security.Cryptography.Native.Apple.dylib`.\nWorking on the fix.\n",
      "created_at": "2016-11-02T20:39:42Z",
      "updated_at": "2016-11-02T20:39:42Z"
    }
  ],
  "created_at": "2016-10-20T05:05:27Z",
  "labels": [
    "Blocked",
    "OS-macOS",
    "WG-Quality-Test",
    "Resolution-Fixed"
  ],
  "number": 2510,
  "state": "closed",
  "title": "Test script 'PowerShellGet.Tests.ps1' fails in OS X CI",
  "updated_at": "2017-03-15T06:33:34Z"
}