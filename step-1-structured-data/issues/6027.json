{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6027",
  "author": "TravisEz13",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\n- Windows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nIf it is a bug report:\r\n- make sure you are able to repro it on the latest released version. \r\nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://github.com/PowerShell/PowerShell/blob/master/docs/KNOWNISSUES.md).\r\n- Fill out the following repro template:\r\n\r\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\r\n-->\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\nchsh -s /usr/local/bin/pwsh\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\npwsh should become your shell\r\n\r\nActual behavior\r\n---------------\r\n\r\n```\r\nchsh: /usr/local/bin/pwsh: non-standard shell\r\n```\r\nbash stays your shell because pwsh is not registered as a shell\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value                                           \r\n----                           -----                                           \r\nPSVersion                      6.0.0                                           \r\nPSEdition                      Core                                            \r\nGitCommitId                    v6.0.1                                          \r\nOS                             Darwin 17.3.0 Darwin Kernel Version 17.3.0: T...\r\nPlatform                       Unix                                            \r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}                         \r\nPSRemotingProtocolVersion      2.3                                             \r\nSerializationVersion           1.1.0.1                                         \r\nWSManStackVersion              3.0                                             \r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@mklement0 Correct me if I'm wrong, but, don't we have to avoid using `pwsh` as a login shell for various reasons?",
      "created_at": "2018-01-25T20:55:37Z",
      "updated_at": "2018-01-25T20:55:44Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "I've found at least one on mac... the environment doesn't get loaded properly...",
      "created_at": "2018-01-25T21:39:34Z",
      "updated_at": "2018-01-25T21:39:34Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "#975",
      "created_at": "2018-01-25T22:19:41Z",
      "updated_at": "2018-01-25T22:19:41Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@TravisEz13: \r\n\r\nIf you use `sudo chsh -s ...`, you'll change the shell for the _root_ user; please use just\r\n`chsh -s /usr/local/bin/pwsh`.\r\n\r\nFor ad-hoc use, here's an idempotent command for adding `pwsh` to the list of permissible default shells:\r\n\r\n```sh\r\ngrep -x /usr/local/bin/pwsh /etc/shells || sudo sh -c 'echo /usr/local/bin/pwsh >> /etc/shells'\r\n```\r\n\r\n@markekraus: I'll address the other issues soon.",
      "created_at": "2018-01-25T23:03:49Z",
      "updated_at": "2018-01-26T01:31:43Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "In general, using `pwsh` as one's default shell works fine on macOS (I've only tested superficially), _except_ - and that's a big except - for the fact that it doesn't process `/etc/profile`, where important system-wide initializations happen.\r\n\r\nThe previously discussed issue is that **`/etc/profile` cannot be read directly by PowerShell**, because it is **coded for POSIX-compliant shells** (`sh`; as an aside, note that the language constructs therefore permitted in that file are only a _subset_ of what `bash` supports).\r\n\r\nOn **macOS** specifically, the only important thing that `/etc/profile` does (at least by default) is to add important entries to `$env:PATH` \r\n\r\nFortunately, that is done via an _external utility_, `/usr/libexec/path_helper`, which you can also call from PS; e.g., by placing the following in your `$PROFILE` file (note the need for extra measures, given that `$PROFILE` is sourced for _every_ PowerShell instance by default):\r\n\r\n```powershell\r\n  if ($IsMacOS -and $env:PATH -notmatch '\\b/usr/local/bin\\b') { # prevent repeated replacement of $env:PATH\r\n    & { # Use a child scope, so that helper function setenv() doesn't linger.\r\n      function setenv ($variable, $value) { [Environment]::SetEnvironmentVariable($variable, $value)  }\r\n      # `/usr/libexec/path_helper -c` conveniently outputs something like 'setenv PATH \"/usr/local/bin:...\"',\r\n      # which we can pass to Invoke-Expression, which then calls our transient `setenv()` function.\r\n      Invoke-Expression (/usr/libexec/path_helper -c)  \r\n    }\r\n  }\r\n```\r\n\r\n----\r\n\r\nAlso, **_GUI apps_ on macOS do NOT rely on `/etc/profile`; the latter's importance seems limited to _shells_**.\r\n\r\nOn Linux distros, ~~this **can get trickier **, where **the entire system _may_ depend on initializations performed in `/etc/profile`** (I have not delved into this), and where important `$env:PATH` additions are _not_ conveniently obtainable from a single utility call.~~ Most likely not a problem, after all - see link below.\r\n\r\nComment https://github.com/PowerShell/PowerShell/issues/975#issuecomment-331049792 from the (lengthy) linked issue tries to summarize the problem.\r\n\r\n\r\n\r\n\r\n",
      "created_at": "2018-01-25T23:45:50Z",
      "updated_at": "2019-01-22T16:12:17Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "I updated the issue with more details on the actual case and removed `sudo` from the repro as @markekraus  suggested.  \r\n\r\nI think I agree with @mklement0  that the shell is mostly usable and I would like to easily be able to switch after I install.  Even more so, now that I have the utility that @mklement0 suggested.",
      "created_at": "2018-01-26T02:32:02Z",
      "updated_at": "2018-01-26T02:32:02Z"
    }
  ],
  "created_at": "2018-01-25T20:53:56Z",
  "number": 6027,
  "state": "open",
  "title": "/usr/local/bin/pwsh should be registered as a shell in /etc/shells on mac as it is on linux",
  "updated_at": "2019-01-22T16:12:17Z"
}