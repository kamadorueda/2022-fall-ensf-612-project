{
  "_url": "https://github.com/PowerShell/PowerShell/issues/8545",
  "author": "paylocity-sflanders",
  "body": "<!--- Verify first that your issue is not already reported on GitHub -->\r\n<!--- Also test if the latest release and devel branch are affected too -->\r\n<!--- Complete *all* sections as described, this form is processed automatically -->\r\n\r\n##### SUMMARY\r\n\r\nI'm reposting this here based on comments my other ticket with ansible and powershell.  \r\n\r\nhttps://github.com/ansible/ansible/issues/48881\r\nhttps://github.com/ansible/ansible/issues/50352\r\n\r\nEssentially pwsh is outputting a console escape character sequence \\u001b[?1h\\u001b=, which is causing issues.   Can this be disabled?   Also it appear that if you try to run powershell over ssh it just hangs.  Example.\r\n\r\n```\r\nssh -o ServerAliveInterval=30 root@somemachine pwsh -noni -f /tmp/hang.ps1\r\n```\r\n\r\nif i run that command directly on the machine i have no issues\r\n------------------------------------------\r\n\r\nOriginal info\r\n\r\n\r\nWe have some powershell functionality that runs fine when directly used on a linux machine or running through ansible using localhost.  If using ssh it will break with 'shared conneciton to XXX closed'.   This appears to happen with 'script' or when using a custom library.  It works fine with 'shell'.   I've included a sample project to simplify\r\n\r\nSteps to install powershell\r\n```\r\ncurl https://packages.microsoft.com/config/rhel/7/prod.repo | tee /etc/yum.repos.d/microsoft.repo;\r\nyum install -y powershell-6.0.2-1.rhel.7\r\nln /usr/bin/pwsh /usr/bin/powershell\r\n```\r\n\r\nIs support for powershell limited to localhost?\r\n\r\n##### ISSUE TYPE\r\n- Bug Report\r\n\r\n##### COMPONENT NAME\r\nscript module and custom library written in powershell\r\n\r\n##### ANSIBLE VERSION\r\n```\r\nansible 2.7.2\r\n  config file = /etc/ansible/ansible.cfg\r\n  configured module search path = [u'/root/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules']\r\n  ansible python module location = /usr/lib/python2.7/site-packages/ansible\r\n  executable location = /usr/bin/ansible\r\n  python version = 2.7.5 (default, Jul 13 2018, 13:06:57) [GCC 4.8.5 20150623 (Red Hat 4.8.5-28)]\r\n```\r\n\r\n##### CONFIGURATION\r\n```\r\nACTION_WARNINGS(default) = True\r\nAGNOSTIC_BECOME_PROMPT(default) = False\r\nALLOW_WORLD_READABLE_TMPFILES(default) = False\r\nANSIBLE_COW_PATH(default) = None\r\nANSIBLE_COW_SELECTION(default) = default\r\nANSIBLE_COW_WHITELIST(default) = ['bud-frogs', 'bunny', 'cheese', 'daemon', 'default', 'dragon', 'elephant-in-snake', 'elephant', 'eyes', 'hellokitty', 'kitty', 'luke-koala', 'meow', 'milk', 'moofasa', 'moose', 'ren', 's\r\nANSIBLE_FORCE_COLOR(default) = False\r\nANSIBLE_NOCOLOR(default) = False\r\nANSIBLE_NOCOWS(default) = False\r\nANSIBLE_PIPELINING(default) = False\r\nANSIBLE_SSH_ARGS(default) = -C -o ControlMaster=auto -o ControlPersist=60s\r\nANSIBLE_SSH_CONTROL_PATH(default) = None\r\nANSIBLE_SSH_CONTROL_PATH_DIR(default) = ~/.ansible/cp\r\nANSIBLE_SSH_EXECUTABLE(default) = ssh\r\nANSIBLE_SSH_RETRIES(default) = 0\r\nANY_ERRORS_FATAL(default) = False\r\nBECOME_ALLOW_SAME_USER(default) = False\r\nCACHE_PLUGIN(default) = memory\r\nCACHE_PLUGIN_CONNECTION(default) = None\r\nCACHE_PLUGIN_PREFIX(default) = ansible_facts\r\nCACHE_PLUGIN_TIMEOUT(default) = 86400\r\nCOLOR_CHANGED(default) = yellow\r\nCOLOR_CONSOLE_PROMPT(default) = white\r\nCOLOR_DEBUG(default) = dark gray\r\nCOLOR_DEPRECATE(default) = purple\r\nCOLOR_DIFF_ADD(default) = green\r\nCOLOR_DIFF_LINES(default) = cyan\r\nCOLOR_DIFF_REMOVE(default) = red\r\nCOLOR_ERROR(default) = red\r\nCOLOR_HIGHLIGHT(default) = white\r\nCOLOR_OK(default) = green\r\nCOLOR_SKIP(default) = cyan\r\nCOLOR_UNREACHABLE(default) = bright red\r\nCOLOR_VERBOSE(default) = blue\r\nCOLOR_WARN(default) = bright purple\r\nCOMMAND_WARNINGS(default) = True\r\nDEFAULT_ACTION_PLUGIN_PATH(default) = [u'/root/.ansible/plugins/action', u'/usr/share/ansible/plugins/action']\r\nDEFAULT_ALLOW_UNSAFE_LOOKUPS(default) = False\r\nDEFAULT_ASK_PASS(default) = False\r\nDEFAULT_ASK_SUDO_PASS(default) = False\r\nDEFAULT_ASK_SU_PASS(default) = False\r\nDEFAULT_ASK_VAULT_PASS(default) = False\r\nDEFAULT_BECOME(default) = False\r\nDEFAULT_BECOME_ASK_PASS(default) = False\r\nDEFAULT_BECOME_EXE(default) = None\r\nDEFAULT_BECOME_FLAGS(default) =\r\nDEFAULT_BECOME_METHOD(default) = sudo\r\nDEFAULT_BECOME_USER(default) = root\r\nDEFAULT_CACHE_PLUGIN_PATH(default) = [u'/root/.ansible/plugins/cache', u'/usr/share/ansible/plugins/cache']\r\nDEFAULT_CALLABLE_WHITELIST(default) = []\r\nDEFAULT_CALLBACK_PLUGIN_PATH(default) = [u'/root/.ansible/plugins/callback', u'/usr/share/ansible/plugins/callback']\r\nDEFAULT_CALLBACK_WHITELIST(default) = []\r\nDEFAULT_CLICONF_PLUGIN_PATH(default) = [u'/root/.ansible/plugins/cliconf', u'/usr/share/ansible/plugins/cliconf']\r\nDEFAULT_CONNECTION_PLUGIN_PATH(default) = [u'/root/.ansible/plugins/connection', u'/usr/share/ansible/plugins/connection']\r\nDEFAULT_DEBUG(default) = False\r\nDEFAULT_EXECUTABLE(default) = /bin/sh\r\nDEFAULT_FACT_PATH(default) = None\r\nDEFAULT_FILTER_PLUGIN_PATH(default) = [u'/root/.ansible/plugins/filter', u'/usr/share/ansible/plugins/filter']\r\nDEFAULT_FORCE_HANDLERS(default) = False\r\nDEFAULT_FORKS(default) = 5\r\nDEFAULT_GATHERING(default) = implicit\r\nDEFAULT_GATHER_SUBSET(default) = ['all']\r\nDEFAULT_GATHER_TIMEOUT(default) = 10\r\nDEFAULT_HANDLER_INCLUDES_STATIC(default) = False\r\nDEFAULT_HASH_BEHAVIOUR(default) = replace\r\nDEFAULT_HOST_LIST(default) = [u'/etc/ansible/hosts']\r\nDEFAULT_HTTPAPI_PLUGIN_PATH(default) = [u'/root/.ansible/plugins/httpapi', u'/usr/share/ansible/plugins/httpapi']\r\nDEFAULT_INTERNAL_POLL_INTERVAL(default) = 0.001\r\nDEFAULT_INVENTORY_PLUGIN_PATH(default) = [u'/root/.ansible/plugins/inventory', u'/usr/share/ansible/plugins/inventory']\r\nDEFAULT_JINJA2_EXTENSIONS(default) = []\r\nDEFAULT_JINJA2_NATIVE(default) = False\r\nDEFAULT_KEEP_REMOTE_FILES(default) = False\r\nDEFAULT_LIBVIRT_LXC_NOSECLABEL(default) = False\r\nDEFAULT_LOAD_CALLBACK_PLUGINS(default) = False\r\nDEFAULT_LOCAL_TMP(default) = /root/.ansible/tmp/ansible-local-5734FhRyVY\r\nDEFAULT_LOG_FILTER(default) = []\r\nDEFAULT_LOG_PATH(default) = None\r\nDEFAULT_LOOKUP_PLUGIN_PATH(default) = [u'/root/.ansible/plugins/lookup', u'/usr/share/ansible/plugins/lookup']\r\nDEFAULT_MANAGED_STR(default) = Ansible managed\r\nDEFAULT_MODULE_ARGS(default) =\r\nDEFAULT_MODULE_COMPRESSION(default) = ZIP_DEFLATED\r\nDEFAULT_MODULE_LANG(default) = {{ CONTROLLER_LANG }}\r\nDEFAULT_MODULE_NAME(default) = command\r\nDEFAULT_MODULE_PATH(default) = [u'/root/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules']\r\nDEFAULT_MODULE_SET_LOCALE(default) = False\r\nDEFAULT_MODULE_UTILS_PATH(default) = [u'/root/.ansible/plugins/module_utils', u'/usr/share/ansible/plugins/module_utils']\r\nDEFAULT_NETCONF_PLUGIN_PATH(default) = [u'/root/.ansible/plugins/netconf', u'/usr/share/ansible/plugins/netconf']\r\nDEFAULT_NO_LOG(default) = False\r\nDEFAULT_NO_TARGET_SYSLOG(default) = False\r\nDEFAULT_NULL_REPRESENTATION(default) = None\r\nDEFAULT_POLL_INTERVAL(default) = 15\r\nDEFAULT_PRIVATE_KEY_FILE(default) = None\r\nDEFAULT_PRIVATE_ROLE_VARS(default) = False\r\nDEFAULT_REMOTE_PORT(default) = None\r\nDEFAULT_REMOTE_USER(default) = None\r\nDEFAULT_ROLES_PATH(default) = [u'/root/.ansible/roles', u'/usr/share/ansible/roles', u'/etc/ansible/roles']\r\nDEFAULT_SCP_IF_SSH(default) = smart\r\nDEFAULT_SELINUX_SPECIAL_FS(default) = ['fuse', 'nfs', 'vboxsf', 'ramfs', '9p']\r\nDEFAULT_SFTP_BATCH_MODE(default) = True\r\nDEFAULT_SQUASH_ACTIONS(default) = ['apk', 'apt', 'dnf', 'homebrew', 'openbsd_pkg', 'pacman', 'pip', 'pkgng', 'yum', 'zypper']\r\nDEFAULT_SSH_TRANSFER_METHOD(default) = None\r\nDEFAULT_STDOUT_CALLBACK(default) = default\r\nDEFAULT_STRATEGY(default) = linear\r\nDEFAULT_STRATEGY_PLUGIN_PATH(default) = [u'/root/.ansible/plugins/strategy', u'/usr/share/ansible/plugins/strategy']\r\nDEFAULT_SU(default) = False\r\nDEFAULT_SUDO(default) = False\r\nDEFAULT_SUDO_EXE(default) = sudo\r\nDEFAULT_SUDO_FLAGS(default) = -H -S -n\r\nDEFAULT_SUDO_USER(default) = None\r\nDEFAULT_SU_EXE(default) = su\r\nDEFAULT_SU_FLAGS(default) =\r\nDEFAULT_SU_USER(default) = None\r\nDEFAULT_SYSLOG_FACILITY(default) = LOG_USER\r\nDEFAULT_TASK_INCLUDES_STATIC(default) = False\r\nDEFAULT_TERMINAL_PLUGIN_PATH(default) = [u'/root/.ansible/plugins/terminal', u'/usr/share/ansible/plugins/terminal']\r\nDEFAULT_TEST_PLUGIN_PATH(default) = [u'/root/.ansible/plugins/test', u'/usr/share/ansible/plugins/test']\r\nDEFAULT_TIMEOUT(default) = 10\r\nDEFAULT_TRANSPORT(default) = smart\r\nDEFAULT_UNDEFINED_VAR_BEHAVIOR(default) = True\r\nDEFAULT_VARS_PLUGIN_PATH(default) = [u'/root/.ansible/plugins/vars', u'/usr/share/ansible/plugins/vars']\r\nDEFAULT_VAULT_ENCRYPT_IDENTITY(default) = None\r\nDEFAULT_VAULT_IDENTITY(default) = default\r\nDEFAULT_VAULT_IDENTITY_LIST(default) = []\r\nDEFAULT_VAULT_ID_MATCH(default) = False\r\nDEFAULT_VAULT_PASSWORD_FILE(default) = None\r\nDEFAULT_VERBOSITY(default) = 0\r\nDEPRECATION_WARNINGS(default) = True\r\nDIFF_ALWAYS(default) = False\r\nDIFF_CONTEXT(default) = 3\r\nDISPLAY_ARGS_TO_STDOUT(default) = False\r\nDISPLAY_SKIPPED_HOSTS(default) = True\r\nENABLE_TASK_DEBUGGER(default) = False\r\nERROR_ON_MISSING_HANDLER(default) = True\r\nGALAXY_IGNORE_CERTS(default) = False\r\nGALAXY_ROLE_SKELETON(default) = None\r\nGALAXY_ROLE_SKELETON_IGNORE(default) = ['^.git$', '^.*/.git_keep$']\r\nGALAXY_SERVER(default) = https://galaxy.ansible.com\r\nGALAXY_TOKEN(default) = None\r\nHOST_KEY_CHECKING(default) = True\r\nINJECT_FACTS_AS_VARS(default) = True\r\nINVALID_TASK_ATTRIBUTE_FAILED(default) = True\r\nINVENTORY_ANY_UNPARSED_IS_FAILED(default) = False\r\nINVENTORY_ENABLED(default) = ['host_list', 'script', 'yaml', 'ini', 'auto']\r\nINVENTORY_EXPORT(default) = False\r\nINVENTORY_IGNORE_EXTS(default) = {{(BLACKLIST_EXTS + ( '~', '.orig', '.ini', '.cfg', '.retry'))}}\r\nINVENTORY_IGNORE_PATTERNS(default) = []\r\nINVENTORY_UNPARSED_IS_FAILED(default) = False\r\nLOCALHOST_WARNING(default) = True\r\nMAX_FILE_SIZE_FOR_DIFF(default) = 104448\r\nNETCONF_SSH_CONFIG(default) = None\r\nNETWORK_GROUP_MODULES(default) = ['eos', 'nxos', 'ios', 'iosxr', 'junos', 'enos', 'ce', 'vyos', 'sros', 'dellos9', 'dellos10', 'dellos6', 'asa', 'aruba', 'aireos', 'bigip', 'ironware', 'onyx', 'netconf']\r\nPARAMIKO_HOST_KEY_AUTO_ADD(default) = False\r\nPARAMIKO_LOOK_FOR_KEYS(default) = True\r\nPERSISTENT_COMMAND_TIMEOUT(default) = 10\r\nPERSISTENT_CONNECT_RETRY_TIMEOUT(default) = 15\r\nPERSISTENT_CONNECT_TIMEOUT(default) = 30\r\nPERSISTENT_CONTROL_PATH_DIR(default) = /root/.ansible/pc\r\nPLAYBOOK_VARS_ROOT(default) = top\r\nPLUGIN_FILTERS_CFG(default) = None\r\nRETRY_FILES_ENABLED(default) = True\r\nRETRY_FILES_SAVE_PATH(default) = None\r\nSHOW_CUSTOM_STATS(default) = False\r\nSTRING_TYPE_FILTERS(default) = ['string', 'to_json', 'to_nice_json', 'to_yaml', 'ppretty', 'json']\r\nSYSTEM_WARNINGS(default) = True\r\nTAGS_RUN(default) = []\r\nTAGS_SKIP(default) = []\r\nTASK_DEBUGGER_IGNORE_ERRORS(default) = True\r\nUSE_PERSISTENT_CONNECTIONS(default) = False\r\nVARIABLE_PRECEDENCE(default) = ['all_inventory', 'groups_inventory', 'all_plugins_inventory', 'all_plugins_play', 'groups_plugins_inventory', 'groups_plugins_play']\r\nYAML_FILENAME_EXTENSIONS(default) = ['.yml', '.yaml', '.json']\r\n```\r\n\r\n##### OS / ENVIRONMENT\r\nCentosOS 7\r\n\r\n##### STEPS TO REPRODUCE\r\n```yaml\r\n# update all.yml 'ansible_password' to valid password\r\nansible-playbook -i somemachine, testme.yml -vvvvv\r\n\r\n# this command will work without issue when running against localhost\r\nansible-playbook testme_localhost.yml -vvvvv\r\n```\r\n\r\n##### EXPECTED RESULTS\r\nEverything should be coming back green\r\n\r\n##### ACTUAL RESULTS\r\n```\r\n{\r\n    \"changed\": false,\r\n    \"module_stderr\": \"OpenSSH_7.4p1, OpenSSL 1.0.2k-fips  26 Jan 2017\\r\\ndebug1: Reading configuration data /etc/ssh/ssh_config\\r\\ndebug1: /etc/ssh/ssh_config line 58: Applying options for *\\r\\ndebug1: auto-mux: Trying existing master\\r\\ndebug2: fd 3 setting O_NONBLOCK\\r\\ndebug2: mux_client_hello_exchange: master version 4\\r\\ndebug3: mux_client_forwards: request forwardings: 0 local, 0 remote\\r\\ndebug3: mux_client_request_session: entering\\r\\ndebug3: mux_client_request_alive: entering\\r\\ndebug3: mux_client_request_alive: done pid = 4996\\r\\ndebug3: mux_client_request_session: session request sent\\r\\ndebug1: mux_client_request_session: master session id: 2\\r\\ndebug3: mux_client_read_packet: read header failed: Broken pipe\\r\\ndebug2: Received exit status from master 0\\r\\nShared connection to electrumrediscache01.electrum.local closed.\\r\\n\",\r\n    \"module_stdout\": \"\\u001b[?1h\\u001b={\\\"changed\\\":false,\\\"state\\\":\\\"present\\\"}\\r\\n\",\r\n    \"msg\": \"MODULE FAILURE\\nSee stdout/stderr for the exact error\",\r\n    \"rc\": 0\r\n}\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> yum install -y powershell-6.0.2-1.rhel.7\r\n\r\nYou could use more high version 6.1.",
      "created_at": "2018-12-28T03:31:18Z",
      "updated_at": "2018-12-28T03:31:18Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "The ssh example on top doesn't repro for me with 6.2-preview.3 from macOS to Ubuntu 18.04",
      "created_at": "2018-12-28T04:03:11Z",
      "updated_at": "2018-12-28T04:03:11Z"
    },
    {
      "author": "paylocity-sflanders",
      "author_association": "NONE",
      "body": "I  tested the problem on version 6.1.1 and 6.2.0 Preview as well with same result.   here is a test script that will demonstrate it.  its basically a generated file from ansible at runtime.   it works fine on windows and linux when running locally, but hangs if called from ssh to the same linux.\r\n\r\nwindows\r\n**works** - powershell C:\\temp\\hang.ps1\r\n**works** - powershell -NonInteractive -File C:\\temp\\hang.ps1\r\n\r\nlinux (CentOS Linux release 7.5.1804 (Core), Powershell 6.1.1, Powershell 6.2.0 Preview 3)\r\n**works** - pwsh /tmp/hang.ps1\r\n**works** - pwsh -noni -f /tmp/hang.ps1\r\n**works** - pwsh-preview /tmp/hang.ps1\r\n**works** - pwsh-preview -noni -f /tmp/hang.ps1\r\n\r\nremote linux (CentOS Linux release 7.5.1804 (Core), Powershell 6.1.1, Powershell 6.2.0 Preview 3)\r\n**hangs** - ssh -v -o ServerAliveInterval=30 root@machine pwsh /tmp/hang.ps1\r\n**hangs** - ssh -v -o ServerAliveInterval=30 root@machine pwsh -noni -f /tmp/hang.ps1\r\n**hangs** - ssh -v -o ServerAliveInterval=30 root@machine pwsh-preview /tmp/hang.ps1\r\n**hangs** - ssh -v -o ServerAliveInterval=30 root@machine pwsh-preview -noni -f /tmp/hang.ps1\r\n\r\n[hang.zip](https://github.com/PowerShell/PowerShell/files/2715051/hang.zip)\r\n\r\n",
      "created_at": "2018-12-28T14:59:01Z",
      "updated_at": "2018-12-28T15:25:54Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@paylocity-sflanders able to repro this with your script.  Workaround is to use `-c` instead of `-f`.  Still investigating why it's hanging.",
      "created_at": "2018-12-29T04:54:24Z",
      "updated_at": "2018-12-29T04:54:24Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Also, the `\\u001b[?1h\\u001b=` escape sequence is coming from .NET Core, not PowerShell so no way to suppress it.  It enables application mode for cursor keys.  If that is truly causing the problem, then you could try setting TERM to something that doesn't support it.",
      "created_at": "2018-12-29T09:02:32Z",
      "updated_at": "2018-12-29T09:02:32Z"
    },
    {
      "author": "paylocity-sflanders",
      "author_association": "NONE",
      "body": "@SteveL-MSFT i think i worked around that escape sequence issue using a tty option, but then hit the hang.   when i originally posted it i wasn't sure if it was causing the hang or not, but seems its another issue that you are investigating",
      "created_at": "2018-12-29T16:30:04Z",
      "updated_at": "2018-12-29T16:30:04Z"
    },
    {
      "author": "paylocity-sflanders",
      "author_association": "NONE",
      "body": "@SteveL-MSFT i did a quick test by modifying ansible core python code that runs powershell to include that -c.   it seems to fix the hang issue.   You'll see i referenced this problem in a ticket with them as well \"powershell shebang ignored for modules\".",
      "created_at": "2018-12-29T23:37:28Z",
      "updated_at": "2018-12-29T23:37:28Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I'm able to repro the hang by simply using redirected input/output (which is basically what ssh does).  ",
      "created_at": "2018-12-30T13:44:56Z",
      "updated_at": "2018-12-30T13:44:56Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I think I understand why it hangs, but not sure how to fix yet.  Looking at the threads in the hanging situation, it hangs when:\r\n\r\n1. Input is redirected\r\n2. The script has a Process block\r\n3. During execution, when the engine sees the script has a process block, it expects input from the pipeline.  It seems that when there is redirected input, the engine is [waiting](https://github.com/PowerShell/PowerShell/blob/7207db6360d1527238975526e299d7bacde0d9d8/src/System.Management.Automation/utils/ObjectStream.cs#L832) on input that never arrives.\r\n\r\nThe other workaround is to not have the `process` block since your sample hang script doesn't actually process anything from the pipeline.  You can just move the code to the `begin` block or perhaps just remove the `begin`, `process`, `end` blocks since it's not really being used as a cmdlet processing pipeline input (at least as the current sample script).\r\n\r\ncc @lzybkr @BrucePay if they have any ideas on how to fix this.  This only repros if the script is executed as a file and not as a command.",
      "created_at": "2018-12-30T14:07:55Z",
      "updated_at": "2018-12-30T14:09:34Z"
    },
    {
      "author": "paylocity-sflanders",
      "author_association": "NONE",
      "body": "Unfortunately the code i sent is generated by the ansible runtime, so i don't control that really.   Its building a wrapper around our ansible powershell library code that includes all the content representing the custom powershell modules, etc.   Obviously if i could override the shebang (which isn't possible without modify their code) we'd have a possible clean workaround.   It is interesting that the -c approach doesn't suffer the same issue.   i would say long term needing to remove the process blocks would be problematic since folks use those when coding pipe friendly functions.   Also i can't remember what limitations using the -c and other options do to how powershell executes things and interprets exit codes.   i seem to remember on the windows side having to deal with that in some teamcity stuff that was running powershell and needing properly handle setting exit codes so it detected failures properly",
      "created_at": "2018-12-31T00:10:06Z",
      "updated_at": "2018-12-31T00:11:23Z"
    },
    {
      "author": "paylocity-sflanders",
      "author_association": "NONE",
      "body": "I may have found another workaround without modify ansible code.  If i add the \"TERM: dumb\" option without the tty option on my task that produced that sample file, which ends up looking like the following in the ssh command, seems to eliminate that hang\r\n\r\n````\r\nTERM=dumb pwsh /root/.ansible/tmp/ansible-tmp-1546264703.25-35318627759711/AnsiballZ_some_library_powershell.ps1\r\n````\r\n\r\nbut for regular scripts with parameters on them like\r\n\r\n````\r\nTERM=dumb pwsh /root/.ansible/tmp/ansible-tmp-1546265522.87-188166698306613/some_script.ps1 -Computer hi\r\nor\r\nTERM=dumb pwsh -c /root/.ansible/tmp/ansible-tmp-1546265522.87-188166698306613/some_script.ps1 -Computer hi\r\n\r\n\r\n# contents\r\n[CmdletBinding()]\r\nparam (\r\n    [Parameter(Mandatory=$false)]\r\n    [string[]] $Computer\r\n)\r\n\r\nWrite-Output $Computer\r\n````\r\nit still does that \"Shared connection closed\".  Interesting enough if i use the tty option it goes away, which simply removes the the -tt option on the ssh call.\r\n\r\n",
      "created_at": "2018-12-31T14:00:37Z",
      "updated_at": "2018-12-31T14:54:04Z"
    },
    {
      "author": "jborean93",
      "author_association": "COLLABORATOR",
      "body": "Just thought I should chime in here, we currently do support PSCore on a POSIX host just without support for our PowerShell module_utils  that are present for Windows execution. I've created a brief guide on how to create a module, or execute a script through PSCore over SSH at https://github.com/ansible/ansible/issues/48881#issuecomment-440481672 and have also documented the `TERM=dumb` example to ensure the console escape codes aren't omitted.",
      "created_at": "2019-01-01T21:14:14Z",
      "updated_at": "2019-01-01T21:14:14Z"
    }
  ],
  "created_at": "2018-12-26T23:53:41Z",
  "number": 8545,
  "state": "open",
  "title": "running powershell from linux over ssh produces 'Shared connection to somemachine closed",
  "updated_at": "2019-01-01T21:14:14Z"
}