{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9126",
  "author": "mklement0",
  "body": "PowerShell Core (unlike Windows PowerShell) by default is supposed to _not_ follow symlinks (symbolic links) to directories during recursive traversal with `Get-ChildItem -Recurse` (you can opt in with `-FollowSymlink`).\r\n\r\nWhile this generally works, using the `-Name` or `-Include` / `-Exclude` switches unexpectedly causes symlinks to be followed even without the `-FollowSymlink` switch.\r\n\r\nNote: On _Windows_, the tests currently fail categorically, due to an unrelated bug: #9127\r\n\r\n# Steps to reproduce (on Unix)\r\n\r\nRun the following Pester tests:\r\n\r\n```powershell\r\nDescribe \"Get-ChildItem: symlink-following tests\" {\r\n  BeforeAll {\r\n    Push-Location TestDrive:/\r\n    # Create a directory with 2 files in it. \r\n    $null = New-Item -Type Directory someDir\r\n    1..2 | % { $_ > \"someDir/$_.txt\" }\r\n    # Create a symlink to that directory, as a sibling.\r\n    New-Item -Type SymbolicLink someDirLink -Target someDir\r\n  }\r\n  AfterAll {\r\n    Pop-Location\r\n  }\r\n  \r\n  It \"Get-ChildItem -Recurse doesn't follow dir. symlinks.\" {\r\n    (Get-ChildItem -File -Recurse).Count | Should -Be 2\r\n  }\r\n\r\n  It \"Get-ChildItem -Recurse -Path with a wildcard doesn't follow dir. symlinks.\" {\r\n    (Get-ChildItem -File -Recurse -Path *).Count | Should -Be 2\r\n  }\r\n\r\n  It \"Get-ChildItem -Recurse -Name doesn't follow dir. symlinks.\" {\r\n    (Get-ChildItem -File -Recurse -Name).Count | Should -Be 2\r\n  }\r\n\r\n  It \"Get-ChildItem -Recurse -Include doesn't follow dir. symlinks.\" {\r\n    (Get-ChildItem -File -Recurse -Include *).Count | Should -Be 2\r\n  }\r\n\r\n  It \"Get-ChildItem -Recurse -Exclude doesn't follow dir. symlinks.\" {\r\n    (Get-ChildItem -File -Recurse -Exclude nosuch).Count | Should -Be 2\r\n  }\r\n  \r\n}\r\n```\r\n\r\n# Expected behavior\r\n\r\nAll tests should pass.\r\n\r\n# Actual behavior\r\n\r\nThe last 3 tests fail.\r\n\r\n# Environment data\r\n\r\n```none\r\nPowerShell Core 6.2.0-rc.1\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "ChrSchultz",
      "author_association": "NONE",
      "body": "on Windows all tests fails, \r\n`Describing Get-ChildItem: symlink-following tests`\r\n    `[-] Get-ChildItem -Recurse doesn't follow dir. symlinks. 6ms\r\n      Expected 2, but got 3.`\r\n      `15:     (Get-ChildItem -File -Recurse).Count | Should -Be 2`\r\n      `at <ScriptBlock>, C:\\Users\\ic-sc\\test.ps1: line 15`\r\n    `[-] Get-ChildItem -Recurse -Path with a wildcard doesn't follow dir. symlinks. 5ms\r\n      Expected 2, but got 3.`\r\n      `19:     (Get-ChildItem -File -Recurse -Path *).Count | Should -Be 2\r\n      at <ScriptBlock>, C:\\Users\\ic-sc\\test.ps1: line 19`\r\n   ` [-] Get-ChildItem -Recurse -Name doesn't follow dir. symlinks. 7ms\r\n      Expected 2, but got 3.`\r\n   `   23:     (Get-ChildItem -File -Recurse -Name).Count | Should -Be 2\r\n      at <ScriptBlock>, C:\\Users\\ic-sc\\test.ps1: line 23`\r\n    `[-] Get-ChildItem -Recurse -Include doesn't follow dir. symlinks. 7ms\r\n      Expected 2, but got 3.`\r\n      `27:     (Get-ChildItem -File -Recurse -Include *).Count | Should -Be 2\r\n      at <ScriptBlock>, C:\\Users\\ic-sc\\test.ps1: line 27`\r\n    `[-] Get-ChildItem -Recurse -Exclude doesn't follow dir. symlinks. 8ms\r\n      Expected 2, but got 3.`\r\n      `31:     (Get-ChildItem -File -Recurse -Exclude nosuch).Count | Should -Be 2\r\n      at <ScriptBlock>, C:\\Users\\ic-sc\\test.ps1: line 31`\r\n`Tests completed in 146ms`\r\n`Tests Passed: 0, Failed: 5, Skipped: 0, Pending: 0, Inconclusive: 0`",
      "created_at": "2019-03-13T17:05:56Z",
      "updated_at": "2019-03-13T17:10:30Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@ChrSchultz: That is due to an _unrelated bug_, reported in #9127 - I've added this info to the OP.",
      "created_at": "2019-03-13T17:11:21Z",
      "updated_at": "2019-03-13T17:12:53Z"
    },
    {
      "author": "Bertaz",
      "author_association": "NONE",
      "body": "By changing #L4 `New-Item -Type SymbolicLink someDirLink -Target someDir` into `New-Item -Type SymbolicLink someDirLink -Target .\\someDir` the tests can ignore the unrelated bug.\r\nThat bug is specifically caused by #15161, which was closed as duplicate of the more comprehensive issue #15235. (#9127 is closed as fixed, but was only partially fixed)\r\n\r\nResult:\r\n```\r\nDescribing Get-ChildItem: symlink-following tests\r\n  [+] Get-ChildItem -Recurse doesn't follow dir. symlinks. 5ms (4ms|2ms)\r\n  [+] Get-ChildItem -Recurse -Path with a wildcard doesn't follow dir. symlinks. 5ms (4ms|1ms)\r\n  [-] Get-ChildItem -Recurse -Name doesn't follow dir. symlinks. 7ms (7ms|1ms)\r\n   Expected 2, but got 4.\r\n   at (Get-ChildItem -File -Recurse -Name).Count | Should -Be 2, C:\\pester\\symFollow.Tests.ps1:23\r\n   at <ScriptBlock>, C:\\pester\\symFollow.Tests.ps1:23\r\n  [-] Get-ChildItem -Recurse -Include doesn't follow dir. symlinks. 8ms (8ms|1ms)\r\n   Expected 2, but got 4.\r\n   at (Get-ChildItem -File -Recurse -Include *).Count | Should -Be 2, C:\\pester\\symFollow.Tests.ps1:27\r\n   at <ScriptBlock>, C:\\pester\\symFollow.Tests.ps1:27\r\n  [-] Get-ChildItem -Recurse -Exclude doesn't follow dir. symlinks. 10ms (10ms|1ms)\r\n   Expected 2, but got 4.\r\n   at (Get-ChildItem -File -Recurse -Exclude nosuch).Count | Should -Be 2, C:\\pester\\symFollow.Tests.ps1:31\r\n   at <ScriptBlock>, C:\\pester\\symFollow.Tests.ps1:31\r\nTests completed in 116ms\r\nTests Passed: 2, Failed: 3, Skipped: 0 NotRun: 0\r\n```",
      "created_at": "2022-10-09T01:41:50Z",
      "updated_at": "2022-10-09T01:41:50Z"
    }
  ],
  "created_at": "2019-03-12T20:37:52Z",
  "labels": [
    "Issue-Bug",
    "WG-Cmdlets-Management",
    "WG-Engine-Providers",
    "Area-FileSystem-Provider"
  ],
  "number": 9126,
  "state": "open",
  "title": "Get-ChildItem -Name and Get-ChildItem -Include / -Exclude unexpectedly follow symlinks with -Recurse",
  "updated_at": "2022-10-09T01:41:51Z"
}