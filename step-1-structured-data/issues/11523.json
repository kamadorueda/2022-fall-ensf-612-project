{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11523",
  "author": "p0W3RH311",
  "body": "compare-object and get-unique is awsome but its more easy to add method like union and difference in array\r\n### step to reproduce\r\n\r\n```\r\nPS> $a = 1, 1, 2, 3\r\nPS> $b = 3, 4\r\n\r\nPS> $a.union($b) \r\n1\r\n2\r\n3\r\n4\r\n\r\nPS> $a.difference($b)\r\n1\r\n1\r\n2\r\n```\r\n",
  "closed_at": "2020-04-15T16:40:08Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Why should it be in the engine?\r\nYou can use ETS to add these methods if needed.",
      "created_at": "2020-01-09T07:29:13Z",
      "updated_at": "2020-01-09T07:29:13Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "There are types with Union and difference methods already in .net core if you need this. Hashset comes to mind, though it has the innate restriction that it can only hold unique values.\r\n\r\nThere are others as well; have a look through the System.Collections and System.Collections.Generic namespace. ",
      "created_at": "2020-01-09T12:28:33Z",
      "updated_at": "2020-01-09T12:28:33Z"
    },
    {
      "author": "bpayette",
      "author_association": "CONTRIBUTOR",
      "body": "```powershell\r\nfunction union ($one, $two)\r\n{\r\n    [System.Linq.Enumerable]::union(\r\n        [System.Collections.Generic.IEnumerable[object]] $one,\r\n        [System.Collections.Generic.IEnumerable[object]] $two\r\n    )\r\n}\r\n\r\nPS[2] (2) > union (1,2,3,4,5) (4,5,6,7)\r\n1\r\n2\r\n3\r\n4\r\n5\r\n6\r\n7\r\n```",
      "created_at": "2020-01-09T19:10:14Z",
      "updated_at": "2020-01-09T19:10:14Z"
    }
  ],
  "created_at": "2020-01-08T18:03:09Z",
  "number": 11523,
  "state": "closed",
  "title": "add new member to array \"union\" and \"difference\"",
  "updated_at": "2020-04-15T16:59:35Z"
}