{
  "_url": "https://github.com/PowerShell/PowerShell/issues/18541",
  "author": "CarloToso",
  "body": "### Summary of the new feature / enhancement\r\n\r\nI was working on the WebCmdlets trying to understand how to fix issue #2896 and it seems that lines 1380-1406 in WebRequestPSCmdlet.Common.cs are never used\r\n\r\n```cs\r\n                if (keepAuthorization && IsRedirectCode(response.StatusCode) && response.Headers.Location != null)\r\n                {\r\n                    _cancelToken.Cancel();\r\n                    _cancelToken = null;\r\n\r\n                    // if explicit count was provided, reduce it for this redirection.\r\n                    if (WebSession.MaximumRedirection > 0)\r\n                    {\r\n                        WebSession.MaximumRedirection--;\r\n                    }\r\n                    // For selected redirects that used POST, GET must be used with the\r\n                    // redirected Location.\r\n                    // Since GET is the default; POST only occurs when -Method POST is used.\r\n                    if (Method == WebRequestMethod.Post && IsRedirectToGet(response.StatusCode))\r\n                    {\r\n                        // See https://msdn.microsoft.com/library/system.net.httpstatuscode(v=vs.110).aspx\r\n                        Method = WebRequestMethod.Get;\r\n                    }\r\n\r\n                    currentUri = new Uri(request.RequestUri, response.Headers.Location);\r\n                    // Continue to handle redirection\r\n                    using (client = GetHttpClient(handleRedirect: true))\r\n                    using (HttpRequestMessage redirectRequest = GetRequest(currentUri))\r\n                    {\r\n                        response = GetResponse(client, redirectRequest, keepAuthorization);\r\n                    }\r\n                }\r\n```\r\n\r\nAll the redirects are resolved in line 1378\r\n\r\n``` cs\r\nresponse = client.SendAsync(req, HttpCompletionOption.ResponseHeadersRead, _cancelToken.Token).GetAwaiter().GetResult();\r\n```\r\n\r\n### Proposed technical implementation details (optional)\r\n\r\nI think lines 1380-1406 could be repurposed to follow HTTP redirects from HTTPS. Unfortunately I encountered some issues with the `-MaximumRedirection` flag. \r\nCan someone test if those lines are actually never used?\r\nDoes someone know how to check how many redirects are resolved in line 1378?\r\n\r\nSample code that follows HTTPS->HTTP redirects but can't stop at `-MaximumRedirection` flag\r\n```cs\r\n          if (WebSession.MaximumRedirection > 0 && IsRedirectCode(response.StatusCode) && response.Headers.Location != null)\r\n                {\r\n                    _cancelToken.Cancel();\r\n                    _cancelToken = null;\r\n\r\n                    // if explicit count was provided, reduce it for this redirection.\r\n                    if (WebSession.MaximumRedirection > 0)\r\n                    {\r\n                        WebSession.MaximumRedirection--;\r\n                    }\r\n                    // For selected redirects that used POST, GET must be used with the\r\n                    // redirected Location.\r\n                    // Since GET is the default; POST only occurs when -Method POST is used.\r\n                    if (Method == WebRequestMethod.Post && IsRedirectToGet(response.StatusCode))\r\n                    {\r\n                        // See https://msdn.microsoft.com/library/system.net.httpstatuscode(v=vs.110).aspx\r\n                        Method = WebRequestMethod.Get;\r\n                    }\r\n\r\n                    currentUri = new Uri(request.RequestUri, response.Headers.Location);\r\n                    // Continue to handle redirection\r\n                    using (client = GetHttpClient(handleRedirect: true))\r\n                    using (HttpRequestMessage redirectRequest = GetRequest(currentUri))\r\n                    {\r\n                        response = GetResponse(client, redirectRequest, keepAuthorization);\r\n                    }\r\n                }\r\n```",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I guess it works only if there are PreserveAuthorizationOnRedirect and Authorization header.\r\n\r\nIt is very old code and it was ported ~6 years ago. I believe we could do things easier with modern HttpClient but it is not trivial. We could compare with wget but in any case we should have internal tests.",
      "created_at": "2022-11-12T06:02:37Z",
      "updated_at": "2022-11-12T06:02:37Z"
    }
  ],
  "created_at": "2022-11-12T03:32:21Z",
  "number": 18541,
  "state": "open",
  "title": "Apparently unused code WebRequestPSCmdlet.Common.cs",
  "updated_at": "2022-11-12T06:02:37Z"
}