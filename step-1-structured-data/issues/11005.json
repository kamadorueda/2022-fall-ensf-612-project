{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11005",
  "author": "anmenaga",
  "body": "[Function `Test-WinRMQuickConfigNeeded`](https://github.com/PowerShell/PowerShell/blob/master/src/System.Management.Automation/engine/remoting/commands/CustomShellCommands.cs#L4011) is used in `Enable-PSRemoting` to detect if `Set-WSManQuickConfig` needs to be run or not.\r\nCurrently on PS Core it always returns `$True` because [`Get-Command Get-NetFirewallRule` check](https://github.com/PowerShell/PowerShell/blob/master/src/System.Management.Automation/engine/remoting/commands/CustomShellCommands.cs#L4038) fails because `Get-NetFirewallRule` cmdlet, found using command discovery process, is located in Non-PS-Core-Compartible module `NetSecurity`:\r\n```\r\nPS E:\\> Import-Module NetSecurity\r\nImport-Module: Module 'C:\\windows\\system32\\WindowsPowerShell\\v1.0\\Modules\\NetSecurity\\NetSecurity.psd1' does not support current PowerShell edition 'Core'. Its supported editions are 'Desktop'. Use 'Import-Module -SkipEditionCheck' to ignore the compatibility of this module.\r\n```\r\nAlso, if if the code is changed so that the firewall rule is found as enabled, then  `Test-WinRMQuickConfigNeeded` returns `False` and `Set-WSManQuickConfig` is Not run, then `New-PSSession` fails with `PSRemotingTransportException`, so apparently `Test-WinRMQuickConfigNeeded` does not check all the things that `Set-WSManQuickConfig` is doing.\r\n\r\n\r\n# Steps to reproduce\r\n\r\n1) for `Test-WinRMQuickConfigNeeded` always returns `$True`: run debugging session with a breakpoint on [start of function `Enable-PSSessionConfiguration`](https://github.com/PowerShell/PowerShell/blob/master/src/System.Management.Automation/engine/remoting/commands/CustomShellCommands.cs#L4111).\r\n2) for `Test-WinRMQuickConfigNeeded` out-of-sync with `Set-WSManQuickConfig`:\r\n   * make sure all checks in `Test-WinRMQuickConfigNeeded` are satisfied;\r\n   * change `Test-WinRMQuickConfigNeeded` to return `False`\r\n   * call `Enable-PSRemoting -SkipNetworkProfileCheck`\r\n   * try connecting to the endpoint using `New-PSSession`\r\n\r\n# Expected behavior\r\n\r\n1) At least in 1 scenario `Test-WinRMQuickConfigNeeded` returns `False`\r\n2) PS Session should be created successfully\r\n\r\n# Actual behavior\r\n\r\n1) `Test-WinRMQuickConfigNeeded` always returns `True`\r\n2) `New-PSSession` fails with `PSRemotingTransportException`\r\n\r\n# Environment data\r\n\r\n```\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-preview.5\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-preview.5\r\nOS                             Microsoft Windows 10.0.14393\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Fix:\r\n```powershell\r\nGet-CimInstance -ClassName MSFT_NetFirewallRule -Namespace \"root/standardcimv2\" -Filter \"InstanceID like 'WINRM-HTTP-In-TCP'\"\r\n```",
      "created_at": "2019-11-07T06:10:30Z",
      "updated_at": "2019-11-07T06:10:30Z"
    }
  ],
  "created_at": "2019-11-07T00:04:25Z",
  "number": 11005,
  "state": "open",
  "title": "Function Test-WinRMQuickConfigNeeded needs to be updated",
  "updated_at": "2019-11-07T06:10:50Z"
}