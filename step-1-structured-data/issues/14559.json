{
  "_url": "https://github.com/PowerShell/PowerShell/issues/14559",
  "author": "RG255",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 and PowerShell 7+ issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6).\r\n\r\n-->\r\n\r\n## Steps to reproduce\r\n\r\n```powershell\r\n$Global:Error.Clear()\r\n# This line will produce an error which is expected for this example:\r\nGet-Service -Name 'Unknown'\r\n$Global:Error | Select-Object -Property *\r\n# This Try Catch construct will try to process that error but the Type cannot be found!\r\nTry\r\n{Get-Service -Name 'Unknown' -ErrorAction Stop}\r\n# This line tries to handle the service unknown error but cannot find the type\r\nCatch [NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.GetServiceCommand]\r\n{'Service cannot be found'}\r\nCatch\r\n{'Some other error occurred'}\r\n```\r\n\r\n## Expected behavior\r\n\r\n```\r\nThe catch statement to work as intended\r\n\r\n```\r\n\r\n## Actual behavior\r\n\r\n```\r\nIt fails to find the type and a separate error is produced\r\nGet-Service: S:\\pny-processed\\PowerShellScripts\\Test\\GetServiceTryCatchTypeError.ps1:3\r\nLine |\r\n   3 |  Get-Service -Name 'Unknown'\r\n     |  ~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n     | Cannot find any service with service name 'Unknown'.\r\n\r\n\r\nPSMessageDetails      :\r\nException             : Microsoft.PowerShell.Commands.ServiceCommandException: Cannot find any service with service\r\n                        name 'Unknown'.\r\nTargetObject          : Unknown\r\nCategoryInfo          : ObjectNotFound: (Unknown:String) [Get-Service], ServiceCommandException\r\nFullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.GetServiceCommand\r\nErrorDetails          :\r\nInvocationInfo        : System.Management.Automation.InvocationInfo\r\nScriptStackTrace      : at <ScriptBlock>, S:\\pny-processed\\PowerShellScripts\\Test\\GetServiceTryCatchTypeError.ps1:\r\n                        line 3\r\n                        at <ScriptBlock>, <No file>: line 1\r\nPipelineIterationInfo : {0, 1}\r\n\r\nInvalidOperation: S:\\pny-processed\\PowerShellScripts\\Test\\GetServiceTryCatchTypeError.ps1:9\r\nLine |\r\n   9 |  Catch [NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.GetSe \u2026\r\n     |        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n     | Unable to find type [NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.GetServiceCommand].\r\n\r\n\r\n```\r\n\r\n## Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```Name                           Value\r\n----                           -----\r\nPSVersion                      7.1.0\r\nPSEdition                      Core\r\nGitCommitId                    7.1.0\r\nOS                             Microsoft Windows 10.0.19042\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n```\r\n",
  "closed_at": "2021-01-08T13:47:14Z",
  "comments": [
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "The operand for `catch` clauses must be a _type_ (class), more specifically one that derives from `System.Exception`.\r\n\r\nIn your case you must use `[Microsoft.PowerShell.Commands.ServiceCommandException]`.\r\n\r\nYou can find that name as follows:\r\n\r\n```powershell\r\nGet-Service -ErrorAction SilentlyContinue nosuch; $Error[0].Exception.GetType().FullName\r\n```\r\n\r\nYou can also easily verify whether a type literal (`[...]`) refers to an existing (loaded). NET type simply by executing it by itself; this tells you that your type literal isn't valid:\r\n\r\n```powershell\r\nPS> [NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.GetServiceCommand]\r\nInvalidOperation: Unable to find type [NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.GetServiceCommand].\r\n```\r\n\r\n",
      "created_at": "2021-01-07T17:14:41Z",
      "updated_at": "2021-01-07T17:14:52Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "P.S.: It's unfortunate that the issue-template offers \"My bug report\" as the default title, but it's always better to create a custom title that summarizes the issue being reported.",
      "created_at": "2021-01-07T17:16:20Z",
      "updated_at": "2021-01-07T17:16:39Z"
    },
    {
      "author": "RG255",
      "author_association": "NONE",
      "body": "Thanks for your reply apologies regarding the title - my bad\r\n\r\nThe answer you supplied obviously worked - Thanks\r\n\r\nThe question remains how do I get from the reported error:\r\n\r\nFullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.GetServiceCommand\r\n\r\nto your solution:\r\n\r\n[Microsoft.PowerShell.Commands.ServiceCommandException]\r\n\r\nIs taking the last part of the category info:\r\nCategoryInfo          : ObjectNotFound: (Unknown:String) [Get-Service], ServiceCommandException\r\nand replacing the last item in the exception message along with removing the bit from the start to the comma going to work every time.\r\n\r\nEach time I have used the construct in the past I have found the FullyQualifiedErrorId  works. I am guessing that that is not a reliable source of such information, it would be helpful if there was a standard - I have not found that so far. Any pointers?\r\n\r\n\r\n\r\n\r\n",
      "created_at": "2021-01-07T17:47:20Z",
      "updated_at": "2021-01-07T17:47:20Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "You're welcome; no worries re title; I'm hoping the default title will be removed from the templates soon, so that it'll be more obvious that a custom title should be specified.\r\n\r\nAs stated, `catch` expects an _exception type_ as the operand, and the specific type can be determined via the `.Exception` property of the [`System.Management.Automation.ErrorRecord`](https://docs.microsoft.com/en-US/dotnet/api/System.Management.Automation.ErrorRecord) instances that represent PowerShell errors:\r\n\r\n```powershell\r\n# Provoke the error of interest.\r\nGet-Service -ErrorAction SilentlyContinue nosuch; \r\n# Examine the .Exception property of the most recent error record  to get the exception's full type name.\r\n$Error[0].Exception.GetType().FullName\r\n```\r\n\r\nThe above outputs `Microsoft.PowerShell.Commands.ServiceCommandException`.",
      "created_at": "2021-01-07T18:46:40Z",
      "updated_at": "2021-01-07T18:46:40Z"
    },
    {
      "author": "RG255",
      "author_association": "NONE",
      "body": "@mklement0 Thanks for that - All resolved now.",
      "created_at": "2021-01-08T13:47:14Z",
      "updated_at": "2021-01-08T13:47:14Z"
    }
  ],
  "created_at": "2021-01-07T15:13:48Z",
  "number": 14559,
  "state": "closed",
  "title": "My bug report",
  "updated_at": "2021-01-08T13:47:15Z"
}