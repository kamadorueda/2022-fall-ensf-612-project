{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7543",
  "author": "DarwinJS",
  "body": "At least one scenario for this is building a customizations only package that resides in a corporate private respository, but wants to pull the package that installs the software on either [a] a public repo (danger acknowledged), [b] a in-house cached feed of a public repository or [c] another internal repo URL.\r\n\r\nIn this scenario multiple profiles of settings for the same app would be separate packages.\r\n\r\nThis type of structure is more likely given that parameter passing in package managers and especially among dependencies, is unhandled. (as a software customization mechanism).\r\n\r\nKeep in mind some CD approaches uses a repo URL per environment - and you simply pull all packages from that feed for \"dev\" another feed for \"stage\" and another for \"prod\".  Keeping the separation of config from these software feeds can be helpful.\r\n\r\nSorry for the throwback, but the advantages are not unlike MST transforms sourcing MSI packages - including multiple configuration packge dependencies.",
  "closed_at": null,
  "comments": [],
  "created_at": "2018-08-16T17:21:23Z",
  "labels": [],
  "number": 7543,
  "state": "open",
  "title": "Trusted Repository URL Traversal for Dependency Resolution",
  "updated_at": "2018-08-17T17:05:37Z"
}