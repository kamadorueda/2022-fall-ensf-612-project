{
  "_url": "https://github.com/PowerShell/PowerShell/issues/8805",
  "author": "SteveL-MSFT",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->  \r\n\r\n## PR Summary\r\n\r\nMake the suggestion on a CommandNotFoundException an ExperimentalFeature.\r\n\r\n## PR Context  \r\n\r\nThe current design of suggestions is closely tied to the host (ConsoleHost in this case).  The ConsoleHost checks if there was anything from the last command and initiates an evaluation of suggestions.  The evaluation of suggestions checks if the last command failed by looking at `$?`.  If so, then it applies each suggestion.  In the case of CommandNotFound, this is based on looking at the ErrorRecord at `$Error[0]` which is one problem with the suggestion framework as it only looks at the most recent error.  If found, it applies this new suggestion and it outputs the possible commands.  The problem is if a script is run in the command line (or part of a pipeline), and the ErrorAction is SilentlyContinue, the error still shows up in `$Error` so the suggestion applies, but because you don't see the non-terminating error message, you have no context of how the suggestion applies.\r\n\r\nA proper fix is much more complicated as it requires redesigning the suggestion framework:\r\n\r\n- Currently, suggestions are initiated by the host (consolehost in this case) and should be part of the ErrorRecord so that it works correctly remotely and in other hosts\r\n- ErrorRecord has a member called RecommendedAction that should contain the suggestion\r\n- The code to invoke getting suggestions needs to be moved out of consolehost and closer to where the ErrorRecord is created\r\n- Formatter for ErrorRecord needs to be updated to show the RecommendedAction member\r\n- Suggestions should be in its own stream or Information stream rather than written directly to the host\r\n\r\nTemporary resolution to https://github.com/PowerShell/PowerShell/issues/8793\r\n\r\nNo test added/modified as suggestions are currently written directly to the host.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.  \r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**  \r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n        - [ ] [Add `[feature]` to your commit messages if the change is significant or affects feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\r\n",
  "closed_at": "2019-02-06T21:59:15Z",
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@anmenaga I believe we can merge this",
      "created_at": "2019-02-06T21:48:52Z",
      "updated_at": "2019-02-06T21:48:52Z"
    }
  ],
  "created_at": "2019-01-31T22:58:22Z",
  "number": 8805,
  "state": "closed",
  "title": "Move CommandNotFoundException suggestion to an experimental feature",
  "updated_at": "2019-02-07T01:00:54Z"
}