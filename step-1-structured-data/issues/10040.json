{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10040",
  "author": "mikemaccana",
  "body": "# Summary of the new feature/enhancement\r\n\r\nParticularly on Windows, users frequently need to find the process that's stopping them from writing or modifying a file or directory\r\n\r\n## Is this a popular need?\r\n\r\nYes. [See this stackoverflow post](https://stackoverflow.com/questions/958123/powershell-script-to-check-an-application-thats-locking-a-file) \r\n\r\n## What do people do now?\r\n\r\n[Microsoft distributes `handle.exe`, a `cmd` based tool from Systernals](https://docs.microsoft.com/en-us/sysinternals/downloads/handle). Various community hacks also exist. Unix users scrape output from `fuser`.\r\n\r\n## Proposed technical implementation details (optional)\r\n\r\nNothing specific, just to be able to target a file or directory and have a bunch of process objects as output like `get-process`.\r\n\r\nIt would also be good to update [Microsoft's handle page](https://docs.microsoft.com/en-us/sysinternals/downloads/handle) to point to a PS release that includes the functionality.",
  "closed_at": "2019-07-04T00:00:13Z",
  "comments": [
    {
      "author": "DHowett",
      "author_association": "NONE",
      "body": "Nothing in `handle` screams \"cmd-based\" to me... it doesn't look like it's based on cmd's code, or batch files, or anything else that cmd is.",
      "created_at": "2019-07-02T05:06:17Z",
      "updated_at": "2019-07-02T05:06:17Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@mikemaccana Users can run handle.exe / Unix fuser from PowerShell - why do we need the feature being a cmdlet?",
      "created_at": "2019-07-02T08:14:33Z",
      "updated_at": "2019-07-02T08:14:33Z"
    },
    {
      "author": "mikemaccana",
      "author_association": "NONE",
      "body": "@dhowett handle outputs text, not powershell objects. You'll find various user-made non-trivial handle.exe powershell wrappers to fix that and other issues in the Stack Overflow thread linked above. Here's [one from TechNet](https://gallery.technet.microsoft.com/Tools-to-find-and-close-6f1b9175)\r\n\r\nAdditionally (just in case this was also missed), a handle-like tool should be there out of the box - trying to discover processes locking files is a common need - rather than requiring users to download and install a separate utility. ",
      "created_at": "2019-07-02T08:18:54Z",
      "updated_at": "2019-07-02T09:39:19Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@mikemaccana The cmdlet must be portable. If you know what is underlying APIs on all supported platforms we could use please pull a RFC with your proposal in PowerShell-RFC repo.",
      "created_at": "2019-07-02T08:29:29Z",
      "updated_at": "2019-07-02T08:30:08Z"
    },
    {
      "author": "mikemaccana",
      "author_association": "NONE",
      "body": "@iSazonov Understood re: portability. Alas I'm not a C# (or any CLR language) developer, just a PS user (and node / python person) so I don't have the skills to implement this myself. ",
      "created_at": "2019-07-02T09:23:17Z",
      "updated_at": "2019-07-02T09:23:17Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2019-07-04T00:00:12Z",
      "updated_at": "2019-07-04T00:00:12Z"
    },
    {
      "author": "mikemaccana",
      "author_association": "NONE",
      "body": "@iSazonov  This is not a question and has not been answered. Can you please reopen?",
      "created_at": "2019-07-05T13:08:36Z",
      "updated_at": "2019-07-05T13:08:36Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@mikemaccana Your suggestion is not rejected. We have nothing to track here. If somebody want to discuss this in depth he/she should write RFC.",
      "created_at": "2019-07-08T06:30:43Z",
      "updated_at": "2019-07-08T06:30:43Z"
    },
    {
      "author": "mikemaccana",
      "author_association": "NONE",
      "body": "> Your suggestion is not rejected. \r\n\r\nOK\r\n\r\n> We have nothing to track here. \r\n\r\nThen why do you have nothing to track? ",
      "created_at": "2019-07-08T11:07:28Z",
      "updated_at": "2019-07-08T11:07:28Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Because it should be addressed in RFC repo.",
      "created_at": "2019-07-08T11:46:33Z",
      "updated_at": "2019-07-08T11:46:33Z"
    },
    {
      "author": "mikemaccana",
      "author_association": "NONE",
      "body": "@iSazonov As mentioned, I'm not a .net developer. You've mentioned an RFC should only be raised if I do know what the underlying APIs on all supported platforms are, so given this restriction I can't open one. What do you want me to do?",
      "created_at": "2019-07-08T13:14:15Z",
      "updated_at": "2019-07-08T13:14:15Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@mikemaccana To implement a new feature in the repo, we need to get a lot of votes from the community. Your request is open for voting and discussion. Also, anyone can post an RFC to move forward.\r\nYou could share this in community resources you use (forums, chats, twitter, ...) to get community support.\r\n\r\n>  given this restriction I can't open one\r\n\r\nWe haven't such restriction. You could pull the RFC. But main question will be how implement this. PowerShell Core is based on .Net Core and I don't see an API which supports this. So we will have to implement workarounds in the repo that is a huge work and will be approved by PowerShell Committee  only if they will see a wide approval from community.",
      "created_at": "2019-07-09T05:03:57Z",
      "updated_at": "2019-07-09T05:03:57Z"
    }
  ],
  "created_at": "2019-07-01T13:02:18Z",
  "labels": [
    "Issue-Question",
    "WG-Cmdlets",
    "Resolution-Answered"
  ],
  "number": 10040,
  "state": "closed",
  "title": "PS should include a tool like Microsoft's handle.exe / Unix fuser ",
  "updated_at": "2019-07-09T05:03:58Z"
}