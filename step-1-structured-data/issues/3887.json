{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3887",
  "author": "daxian-dbw",
  "body": "Fix #3648\r\n\r\nSummary\r\n----------\r\nA workaround has been made in .NET Core to allow accept any certificate: https://github.com/dotnet/corefx/issues/19709\r\nTo enable `-SkipCertificateCheck` in web cmdlets, we need to move to the latest .NET Core, and also use `HttpClientHandler.DangerousAcceptAnyServerCertificateValidator` as the callback delegate.\r\n\r\nNew Issues\r\n------------\r\nThere are 2 problems with the latest .NET Core:\r\n1. Behavior change in `FileSystemInfo.Attribute` causes 2 tests to fail on Unix platforms. https://github.com/dotnet/corefx/issues/20456 was filed to track the behavior change. These 2 tests are currently marked as `-Pending` for now.\r\n2. VSCode C# extension doesn't support .NET Core `2.0.0-preview2-*` SDK. When using `2.0.0-preview2` packages and dotnet-cli, you will get a `MissingMethodException` opening the project in VSCode (see below). This is tracked by https://github.com/OmniSharp/omnisharp-vscode/issues/1495, and hopefully will be addressed this week according to this comment: https://github.com/OmniSharp/omnisharp-vscode/issues/1495#issuecomment-304547648\r\n```\r\n[fail]: OmniSharp.MSBuild.ProjectFile.ProjectFileInfo\r\n        The \"ResolvePackageDependencies\" task failed unexpectedly.\r\nSystem.MissingMethodException: Method not found: 'System.Collections.Generic.IList`1<NuGet.Packaging.Core.PackageDependency> NuGet.ProjectModel.LockFileTargetLibrary.get_Dependencies()'.\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageDependencies.GetPackageDependencies(LockFileTargetLibrary package, String targetName, Dictionary`2 resolvedPackageVersions, HashSet`1 transitiveProjectRefs)\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageDependencies.GetPackageAndFileDependencies(LockFileTarget target)\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageDependencies.RaiseLockFileTargets()\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageDependencies.ExecuteCore()\r\n   at Microsoft.NET.Build.Tasks.TaskBase.Execute()\r\n   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n   at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext()\r\n```",
  "closed_at": "2017-06-14T00:58:21Z",
  "comments": [
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@SteveL-MSFT I think it would be good to have `-SkipCertificateCheck` fixed in `beta.2`. However, adopting `2.0.0-preview2` bits means VSCdoe won't work for us for a few days (Folks from `omnisharp-vscode`  will look at supporting it in this week).\r\n\r\n@JamesWTruher I update `Microsoft.PowerShell.Console.csproj` to use `2.3.0` of `Microsoft.ApplicationInsights` in this refreshment. Please let me know if you have any concerns.",
      "created_at": "2017-05-30T21:42:31Z",
      "updated_at": "2017-05-30T21:42:31Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@daxian-dbw we should hold this til after beta.2 if VSCode support isn't ready",
      "created_at": "2017-05-30T23:07:13Z",
      "updated_at": "2017-05-30T23:07:13Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Fix is ready in OmniSharp v1.11.0-beta2 for Windows only.",
      "created_at": "2017-06-08T05:10:33Z",
      "updated_at": "2017-06-08T05:10:48Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@SteveL-MSFT The VSCode C# extension released `v1.11.0-beta3` that supports .NET Core 2.0-preview2 packages. However, they don't plan to release the official `v1.11.0` anytime soon because it's using `Mono 5.2 bits` which are not officially released. See https://github.com/OmniSharp/omnisharp-vscode/issues/1495#issuecomment-307863132\r\n\r\nThere are instructions for installing beta releases of C# extension (https://github.com/OmniSharp/omnisharp-vscode/issues/1495#issuecomment-307519729). Do you think we can accept this PR without the official release of `v1.11.0` VSCode C# extension?",
      "created_at": "2017-06-12T17:52:53Z",
      "updated_at": "2017-06-12T17:52:53Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@daxian-dbw I think the number of people actively using VSCode and PSCore6 is probably small, however, how will they find out to install the Beta?",
      "created_at": "2017-06-12T18:06:03Z",
      "updated_at": "2017-06-12T18:06:03Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "The instructions for installing beta releases are listed here: https://github.com/OmniSharp/omnisharp-vscode/wiki/Installing-Beta-Releases. However, we probably need to temporarily put it in the README of powershell repo to allow contributors to easily find how to develop powershell core with VSCode. And, maybe also convey the message in twitter?",
      "created_at": "2017-06-12T22:17:03Z",
      "updated_at": "2017-06-12T22:17:03Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I can put out the message on Twitter once we update the README",
      "created_at": "2017-06-12T22:31:50Z",
      "updated_at": "2017-06-12T22:31:50Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "OK, I will update this PR to use a more recent 2.0.0-preview2 build and update the README.",
      "created_at": "2017-06-12T22:57:03Z",
      "updated_at": "2017-06-12T22:57:03Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "In the last six months, I had to put an OmniSharp Beta on twice because of problems that were not related to PowerShell Core. I believe anyone will find the OmniSharp discussion easy.",
      "created_at": "2017-06-13T03:26:24Z",
      "updated_at": "2017-06-13T03:26:24Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "PR has been updated to use the most recent 2.0.0-preview2 build.\r\nOpened #4004 to track updating README.md of powershell repo. Will do it later tonight.\r\n\r\nI have verified the [`v1.11.0-beta4`](https://github.com/OmniSharp/omnisharp-vscode/releases/tag/v1.11.0-beta4) of C# extension works fine with the latest 2.0.0-preview2 packages.",
      "created_at": "2017-06-14T00:56:03Z",
      "updated_at": "2017-06-14T00:56:03Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "It seems https://github.com/dotnet/corefx/issues/20456 fixed. Maybe already in 2.0.0-preview3-25413-01 ?",
      "created_at": "2017-06-14T07:20:04Z",
      "updated_at": "2017-06-14T07:21:41Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "OmniSharp was fixed https://github.com/OmniSharp/omnisharp-vscode/issues/1495 - Beta4.",
      "created_at": "2017-06-14T11:15:44Z",
      "updated_at": "2017-06-14T11:15:44Z"
    }
  ],
  "created_at": "2017-05-30T21:28:08Z",
  "number": 3887,
  "state": "closed",
  "title": "Move to latest .NET Core and enable `-SkipCertificateCheck` on OSX",
  "updated_at": "2017-06-14T11:15:44Z"
}