{
  "_url": "https://github.com/PowerShell/PowerShell/issues/18118",
  "author": "jhoneill",
  "body": "### Prerequisites\n\n- [X] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\n\n### Steps to reproduce\n\n1. If OpenSSHD is not already present, install it (e.g. on Windows run `Add-WindowsCapability -Online -Name  OpenSSH.Server~~~~0.0.1.0`) \r\n2. Enable Remote sessions over ssh by editing the sshd config file as described in https://learn.microsoft.com/en-us/powershell/scripting/learn/remoting/ssh-remoting-in-powershell-core?view=powershell-7.2  (on Windows copy `C:\\Windows\\System32\\OpenSSH\\sshd_config_default`  to  `C:\\ProgramData\\ssh\\sshd_config` to give yourself a file to start from)\r\n3. Backup your profile.ps1 if you have one, and create a simple `profile.ps1`  e.g. ` 'hello' `\r\n4. run `new-PSSession  -HostName localhost`\r\n5. Observe the error `New-PSSession: [localhost] There is an error processing data from the background process. Error reported: Hello.` \r\n6. Think \"A-ha I need to use -NoProfile so SSH works like WinRM\", modify the config file, restart the sshd Service, try again, curse when the same error occurs\n\n### Expected behavior\n\n```console\nPS>  new-PSSession  -HostName localhost\r\nxxxx@localhost's password:\r\n\r\n Id Name            Transport ComputerName    ComputerType    State         ConfigurationName     Availability\r\n -- ----            --------- ------------    ------------    -----         -----------------     ------------\r\n  5 Runspace4       SSH       localhost       RemoteMachine   Opened        DefaultShell             Available\n```\n\n\n### Actual behavior\n\n```console\nPS>  new-PSSession  -HostName localhost\r\nxxxx@localhost's password:\r\nNew-PSSession: [localhost] There is an error processing data from the background process. Error reported: Hello.\n```\n\n\n### Error details\n\n```console\nNew-PSSession: [localhost] There is an error processing data from the background process. Error reported: Hello.\n```\n\n\n### Environment data\n\n```powershell\nPS>  $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.3.0-preview.7\r\nPSEdition                      Core\r\nGitCommitId                    7.3.0-preview.7\r\nOS                             Microsoft Windows 10.0.22000\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\n```\n\n\n### Visuals\n\n<img width=\"667\" alt=\"image\" src=\"https://user-images.githubusercontent.com/16209593/190858893-b55377d5-844c-48e9-8fb7-707391e8914d.png\">\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "jhoneill",
      "author_association": "NONE",
      "body": "This is linked to  #13753  and in particular this comment from @PaulHigin  https://github.com/PowerShell/PowerShell/issues/13753#issuecomment-705796860  \r\n\r\nThat issue was (wrongly) closed as a external - because it was thought to lie with open ssh.  As Paul's comment linked to above explains the code has always followed an incorrect path and it appears  it was intended that `-sshs` should carry an implicit `NoProfile` but this has never been done.\r\n\r\n",
      "created_at": "2022-09-17T13:20:33Z",
      "updated_at": "2022-09-17T13:20:33Z"
    },
    {
      "author": "jhoneill",
      "author_association": "NONE",
      "body": "As a work round, it is possible to recognize a SSH _connection_ without an SSH _tty_  and add this line to the profile at or near the top.\r\n\r\n`if   ($env:SSH_CONNECTION -and $env:SSH_CLIENT -and -not $env:SSH_TTY) {return}` ",
      "created_at": "2022-09-17T13:29:17Z",
      "updated_at": "2022-09-17T13:29:17Z"
    },
    {
      "author": "dkaszews",
      "author_association": "CONTRIBUTOR",
      "body": "Is this a Windows-only thing, or does it also happen on Linux? I never noticed this being an issue on Linux, though my Linux server has bash as default (because it starts faster) and I drop into PowerShell manually as required. ",
      "created_at": "2022-09-17T17:07:50Z",
      "updated_at": "2022-09-17T17:07:50Z"
    },
    {
      "author": "237dmitry",
      "author_association": "NONE",
      "body": "Is this for 7.3.0 ? In 7.2.6 no errors.\r\n\r\n![ns](https://user-images.githubusercontent.com/78153320/190868533-a89988ba-4171-44b5-8f47-874a7e945dcb.png)\r\n",
      "created_at": "2022-09-17T17:10:19Z",
      "updated_at": "2022-09-17T17:10:19Z"
    },
    {
      "author": "jhoneill",
      "author_association": "NONE",
      "body": "@dkaszews  \r\n> Is this a Windows-only thing, or does it also happen on Linux? I never noticed this being an issue on Linux, though my Linux server has bash as default (because it starts faster) and I drop into PowerShell manually as required.\r\n\r\nHow open do you open a PSSession to bash ?  :-)  This only applies to a PSSession. `ssh localhost` is fine. `New-PSSession` falls over. \r\n\r\n@237dmitry  \r\nYes 7.2.6 for me. As shown above, with an empty profile file, or a profile which exits without printing anything, all is fine.    \r\nWith a  `write-host`  or other output  \r\n```\r\nNew-PSSession: [localhost] There is an error processing data from the background process. Error reported: \u00abText output by profile\u00bb\r\n```",
      "created_at": "2022-09-17T17:41:03Z",
      "updated_at": "2022-09-17T17:41:03Z"
    },
    {
      "author": "dkaszews",
      "author_association": "CONTRIBUTOR",
      "body": "@jhoneill Sorry, got confused because the title says SSH",
      "created_at": "2022-09-17T18:11:08Z",
      "updated_at": "2022-09-17T18:11:26Z"
    },
    {
      "author": "jhoneill",
      "author_association": "NONE",
      "body": "@dkaszews  good point, I've made the title clearer. ",
      "created_at": "2022-09-17T18:27:12Z",
      "updated_at": "2022-09-17T18:27:12Z"
    },
    {
      "author": "237dmitry",
      "author_association": "NONE",
      "body": "Since basically the output to the console is from the prompt function, what happens (with subject) if you do not delete the profile, but reset the prompt function? And is the prompt function considered part of the profile if it is \"imported\" from an external file (dot source)?\r\n\r\n```powershell\r\n# 1st question\r\n\r\nPS > function prompt {}   # or del function:prompt\r\n```\r\n```powershell\r\n# 2nd question\r\n\r\n# $profile\r\n\r\n# Environment, Aliases and so on\r\n. set-prompt.ps1  # there is not prompt function in my $profile at all\r\n```",
      "created_at": "2022-09-18T09:40:51Z",
      "updated_at": "2022-09-18T10:27:21Z"
    },
    {
      "author": "jhoneill",
      "author_association": "NONE",
      "body": "@237dmitry  It's not the prompt. \r\n<img width=\"734\" alt=\"image\" src=\"https://user-images.githubusercontent.com/16209593/190896438-0080146a-2ece-49e6-b7c5-2ba5b04fa483.png\">\r\n\r\n\r\nJust connecting using SSH with pwsh set as the default shell for `sshd`  is fine. There are two things with PSSessions   \r\n \r\n1.  A PSSession over WSMan _does not_ process the profile. The command to start pwsh in an ssh _subsystem_ \r\n    `Subsystem\tpowershell\tc:/progra~1/powershell/7/pwsh.exe -sshs  ...` does.  \r\n2. Any output form subsystem at start up seems to cause an error\r\n\r\nI think (2) is expected with openssh -if  you don't specify `-NoLogo`  in the subsystem you get an error citing the the PowerShell version message (The way I have installed 7.3 preview means I can't test on that - the help I linked to above says the `-NoLogo` isn't needed in 7.3, so this symptom may have been silently fixed) \r\n \r\nBut (1)...  PSSessions should do the same things regardless of the connection mechanism.  But the `-sshs` switch doesn't do that automatically and causes `-NoProfile` to be ignored  unless someone tells me that has also changed for 7.3\r\n\r\nIt seems that if the user is a member of admins,  ssh connections are always as admin.  Since I'm testing on my local machine I'm using `New-PSSession  -EnableNetworkAccess -ComputerName localhost` for winrm, and I think that inherits the token from the current session because if I connect from PowerShell run as admin, my PSSession returns true for\r\n`[System.Security.Principal.WindowsIdentity]::GetCurrent().Groups.Value -contains 'S-1-5-32-544'` and if I run from PowerShell un-elevated, it returns false.  AIUI this is specific to  `-EnableNetworkAccess` not to winrm so the *should* in \"PSSessions should do the same things regardless of the connection mechanism.\"  is not a *must*\r\n",
      "created_at": "2022-09-18T10:36:05Z",
      "updated_at": "2022-09-18T12:06:32Z"
    },
    {
      "author": "jhoneill",
      "author_association": "NONE",
      "body": "\r\nBTW when I wrote this  https://jhoneill.github.io/powershell/2019/06/22/Many-Shells.html   6.1 was current and  the problem didn't happen there.   \r\n\r\nI just tried changing to the subystem config to use pwsh 6.2 and I get the same error so \r\n**The may be specific to Windows 11 / the version of Open SSH installed there**   \r\nSo my version of sshd reports it is 8.1.0.1 built June 4th 2021\r\n\r\n\n\n<blockquote><img src=\"/assets/james.jpg\" width=\"48\" align=\"right\"><div><strong><a href=\"https://jhoneill.github.io/powershell/2019/06/22/Many-Shells.html\">Last time I saw this many shells, someone sold them by the sea shore.</a></strong></div><div>PowerShell (or PWSH if you prefer). Devops (especially Azure Devops), Photography, and general thoughts</div></blockquote>",
      "created_at": "2022-09-18T11:17:05Z",
      "updated_at": "2022-09-18T11:17:07Z"
    },
    {
      "author": "jborean93",
      "author_association": "COLLABORATOR",
      "body": "This won't be a problem with OpenSSH itself. When you use pwsh remoting over SSH the subsystem line is essentially the command that OpenSSH spawns when a new subsystem is requested. This process then uses the stdout/stdin to communicate the XML payloads needed for PSRemoting to work. If your profile runs and outputs anything on the console that could interfere with these payloads you get this problem. What should really happen is that either `-sshs` also implied `-NoProfile` (what I would expect and keeps it in line with WSMan) or makes sure that when `-sshs` is run then nothing else can write to the console to interfere with the PSRemoting communication.",
      "created_at": "2022-09-19T08:47:02Z",
      "updated_at": "2022-09-19T08:47:02Z"
    }
  ],
  "created_at": "2022-09-17T13:17:09Z",
  "labels": [
    "Issue-Bug",
    "WG-Remoting",
    "Needs-Triage"
  ],
  "number": 18118,
  "state": "open",
  "title": "Users with a profile which outputs anything cannot create PSSessions over SSH",
  "updated_at": "2022-09-19T19:02:35Z"
}