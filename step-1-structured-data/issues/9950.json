{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9950",
  "author": "SeeminglyScience",
  "body": "Here's an example:\r\n\r\n```powershell\r\n& { [CmdletBinding()]param()\r\n    $PSCmdlet.GetResourceString('HelpDisplayStrings', 'ProviderIsNotFileSystem')\r\n}\r\n\r\n# returns:\r\n# The path {0} does not contain a FileSystem provider. Verify that the specified path contains the FileSystem provider, and then retry the command.\r\n```\r\n\r\nIn general I wouldn't expect them to be supported, but it would be quite useful and the above method makes me think that might have been the intent.",
  "closed_at": "2019-06-20T12:27:12Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Wouldn't they be considered part of display/error formatting for the most part? ",
      "created_at": "2019-06-19T18:59:27Z",
      "updated_at": "2019-06-19T18:59:27Z"
    },
    {
      "author": "KalleOlaviNiemitalo",
      "author_association": "NONE",
      "body": "I suppose PSCmdlet.GetResourceString is intended to be used from compiled cmdlets, in which case it loads the resources from your assembly, rather than the System.Management.Automation assembly.",
      "created_at": "2019-06-20T10:37:59Z",
      "updated_at": "2019-06-20T10:37:59Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "Yeah that sounds about right",
      "created_at": "2019-06-20T12:27:12Z",
      "updated_at": "2019-06-20T12:27:12Z"
    }
  ],
  "created_at": "2019-06-19T17:52:19Z",
  "labels": [
    "Issue-Question",
    "Resolution-Answered"
  ],
  "number": 9950,
  "state": "closed",
  "title": "Are resource strings considered part of the supported API?",
  "updated_at": "2019-06-28T13:17:25Z"
}