{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7496",
  "author": "rjmholt",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\n- Windows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nIf it is a bug report:\r\n- make sure you are able to repro it on the latest released version. \r\nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n- Fill out the following repro template:\r\n\r\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\r\n-->\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n**Note**: The repro uses a relative path, but an absolute path works too; just insert `$PWD` instead of the `.` below.\r\n\r\n```powershell\r\n> mkdir ./AModule\r\n> New-ModuleManifest -Path ./AModule/AModule.psd1 -ModuleVersion '2.0'\r\n> Import-Module -Path ./AModule/\r\n> Import-Module -PassThru -FullQualifiedName @{ ModuleName = \"./AModule/AModule.psd1\"; ModuleVersion = '3.0' } # Also try the absolute path - same outcome\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```none\r\nImport-Module : The specified module './AModule/AModule.psd1' with version '3.0' was not loaded because no valid module file was found in any module directory.\r\nAt line:1 char:1\r\n+ Import-Module -PassThru -FullyQualifiedName @{ ModuleName = './AModul ...\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : ResourceUnavailable: (./AModule:String) [Import-Module], FileNotFoundException\r\n+ FullyQualifiedErrorId : Modules_ModuleWithVersionNotFound,Microsoft.PowerShell.Commands.ImportModuleCommand\r\n\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n```none\r\n\r\nModuleType Version    Name                                ExportedCommands\r\n---------- -------    ----                                ----------------\r\nManifest   2.0        AModule                             \r\n\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.1.0-preview.4\r\nPSEdition                      Core\r\nGitCommitId                    6.1.0-preview.4-61-g1243891ea8c04609ce21d0b31d40945fd46a3576\r\nOS                             Linux 4.15.0-30-generic #32-Ubuntu SMP Thu Jul 26 17:42:43 UTC 2018\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n\r\n```\r\n\r\n## More information\r\n\r\n**EDIT**: Just realised this is for re-imports only (which is good!)\r\n\r\nThe important note is that importing the same module off the module path will fail:\r\n\r\n```powershell\r\n> $env:PSModulePath += [System.IO.Path]::PathSeparator + $PWD\r\n> Import-Module -PassThru -FullyQualifiedName @{ ModuleName = 'AModule'; ModuleVersion = '3.0' }\r\nImport-Module : The specified module 'AModule' with version '3.0' was not loaded because no valid module file was found in any module directory.\r\nAt line:1 char:1\r\n+ Import-Module -PassThru -FullyQualifiedName @{ ModuleName = 'AModule' ...\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : ResourceUnavailable: (AModule:String) [Import-Module], FileNotFoundException\r\n+ FullyQualifiedErrorId : Modules_ModuleWithVersionNotFound,Microsoft.PowerShell.Commands.ImportModuleCommand\r\n \r\n```\r\n\r\nThis behaviour is caused by this logic:\r\nhttps://github.com/PowerShell/PowerShell/blob/1243891ea8c04609ce21d0b31d40945fd46a3576/src/System.Management.Automation/engine/Modules/ImportModuleCommand.cs#L589-L595\r\n\r\nNote that [it's impossible to instantiate a ModuleSpecification with all checked fields not `null`](https://github.com/PowerShell/PowerShell/blob/1243891ea8c04609ce21d0b31d40945fd46a3576/src/System.Management.Automation/engine/Modules/ModuleSpecification.cs#L155-L165), so this check always succeeds.\r\n\r\nThis is addressed by https://github.com/PowerShell/PowerShell/pull/7125, but this discovery means it's a breaking change.",
  "closed_at": "2018-11-01T20:41:52Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Absolute or relative path?",
      "created_at": "2018-08-13T12:14:54Z",
      "updated_at": "2018-08-13T12:14:54Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov Turns out it's both, but this only occurs after the module has already been imported beforehand.\r\n\r\nI've updated the issue.",
      "created_at": "2018-08-13T22:15:13Z",
      "updated_at": "2018-08-13T22:15:13Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@rjmholt Could you update the Issue header too?",
      "created_at": "2018-08-14T05:37:05Z",
      "updated_at": "2018-08-14T05:37:05Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "Which part is the issue header? I updated the repro before -- I think all parts of the issue are correct now",
      "created_at": "2018-08-14T17:17:07Z",
      "updated_at": "2018-08-14T17:17:07Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee reviewed this, this definitely is both a breaking change and a bug.  We should do the version check to look for the requested version instead of just returning the loaded version.",
      "created_at": "2018-10-10T22:46:51Z",
      "updated_at": "2018-10-10T22:46:51Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@rjmholt can we get this fix in sooner so that we can get community feedback if it's an impactful breaking change?",
      "created_at": "2018-10-10T22:47:28Z",
      "updated_at": "2018-10-10T22:47:28Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "Fix is in https://github.com/PowerShell/PowerShell/pull/7125",
      "created_at": "2018-10-10T22:55:48Z",
      "updated_at": "2018-10-10T22:55:48Z"
    }
  ],
  "created_at": "2018-08-10T21:42:04Z",
  "labels": [
    "Resolution-Fixed",
    "Committee-Reviewed",
    "WG-Cmdlets-Core"
  ],
  "number": 7496,
  "state": "closed",
  "title": "Import-Module on path ignores version constraints",
  "updated_at": "2018-11-02T03:15:02Z"
}