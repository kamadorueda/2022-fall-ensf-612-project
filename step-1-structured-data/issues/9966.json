{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9966",
  "author": "daxian-dbw",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\n`System.Runtime.Remoting.RemotingServices` is not coming back to .NET Core, so remove dead code around `IsTransparentProxy`.\r\nAlso, fix the indentation and a wrong `#if` definition in `parser.cs`.\r\n\r\n## PR Context\r\n\r\n<!-- Provide a little reasoning as to why this Pull Request helps and why you have opened it. -->\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n",
  "closed_at": "2019-06-21T04:12:10Z",
  "comments": [
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Hey @iSazonov, a side question: have you ever successfully CPU profiling pwsh (with crossgen'ed assemblies) using PerfView?\r\n\r\nI always have trouble making the symbol resolution to work properly when profiling the corssgen'ed pwsh, and thus the resulted stacks are not very useful \r\n\r\nI remember you did some profiling back when investigating Import-Csv, so I wonder if you had any successful experiences on that.",
      "created_at": "2019-06-20T18:35:00Z",
      "updated_at": "2019-06-20T18:35:00Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw I saw SMA APIs well while we was on .Net Core 2.0/2.1 (open sources from PerfView did not work for me). I remember that there was problems with finding PowerShell pdb-s but I already don't remember how I resolve this (and reinstall my system 2 times since then). (Perhaps I set paths to symbols in PerfView or/and manually coped pdb-s) I tried to run PerfView on last week but now crossgen (Start-PSBuild -CrossGen) fail with:\r\n```\r\nVERBOSE: Matched CrossGen.exe:\r\nC:\\Users\\sie\\.nuget\\packages\\transport.runtime.win-x64.microsoft.netcore.runtime.coreclr\\3.0.0-preview6-27721-71\\tools\\\r\ncrossgen.exe\r\nCould not load type 'System.Utf8String' from assembly 'System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e'.\r\nError: compilation failed for \"src\\powershell-win-core\\bin\\Release\\netcoreapp3.0\\win7-x64\\publish\\Microsoft.CodeAnalysis.CSharp.dll\" (0x80131522)\r\n```\r\nand I can not resolve this and can not get crossgen-ed assemblies. :-( Do you see the error or have thoughts how resolve this? Perhaps it is an issue in 3.0 Preview5 so I am waiting our PR #9888 to move to Preview6.\r\n\r\nUpdate: I found old etl.zip file. There is a symbol folder with files like Microsoft.PowerShell.Commands.Utility.ni.pdb\r\nIf I remember correctly such files was generated by PerfView itself at trace save time.\r\n![etl](https://user-images.githubusercontent.com/22290914/59899136-12a80e00-940d-11e9-8393-0cf99d44e26b.png)\r\n",
      "created_at": "2019-06-21T04:11:51Z",
      "updated_at": "2019-06-21T05:12:44Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@iSazonov Thank you for following up on this. I really appreciate your time!\r\nI figured this out by inspecting the diagnostics log generated by PerfView (should have done that from the very beginning :))\r\nAll we need to do is to copy the corresponding crossgen.exe to `$pshome` and PerfView is able to generate the PDBs for the crossgen'ed assemblies on the fly.",
      "created_at": "2019-06-24T14:50:44Z",
      "updated_at": "2019-06-24T14:50:44Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.0.0-preview.2` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.0.0-preview.2)\n",
      "created_at": "2019-07-17T20:55:21Z",
      "updated_at": "2019-07-17T20:55:21Z"
    }
  ],
  "created_at": "2019-06-20T17:30:51Z",
  "number": 9966,
  "state": "closed",
  "title": "Remove dead code about `IsTransparentProxy`",
  "updated_at": "2019-07-17T20:55:21Z"
}