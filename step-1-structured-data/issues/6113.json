{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6113",
  "author": "maybe-hello-world",
  "body": "## PR Summary\r\n\r\n<!-- summarize your PR between here and the checklist -->\r\nAdd Password parameter to Get-PfxCertificate cmdlet to allow automatization instead of prompting for password every time.\r\n\r\nFix #3970\r\n\r\nPossibly breaking change: \r\nCalling cmdlet without -Password parameter assumes passing empty password instead of prompting for pass as before. In order to avoid breaking change cmdlet can ask for password if Password is missed but it will be more complicated to use empty password string in automated scripts.\r\n\r\nAlso about tests:\r\nHow it's better to create password-protected PFX certificate to test not-null password? Store as raw bytes in certificateCommon.psm1?\r\n\r\n## PR Checklist\r\n\r\nNote: Please mark anything not applicable to this PR `NA`.\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - [x] Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] User facing [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - [x] Issue filed - Issue link: PowerShell/PowerShell-Docs#2150\r\n- [x] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n    - [NA] [Add `[feature]` if the change is significant or affects feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` to the beginning of the title and remove the prefix when the PR is ready.\r\n",
  "closed_at": "2018-02-23T03:29:03Z",
  "comments": [
    {
      "author": "msftclas",
      "author_association": "NONE",
      "body": "[![CLA assistant check](https://cla.opensource.microsoft.com/pull/badge/signed)](https://cla.opensource.microsoft.com/PowerShell/PowerShell?pullRequest=6113) <br/>All CLA requirements met.",
      "created_at": "2018-02-06T16:03:08Z",
      "updated_at": "2018-02-06T16:04:14Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "This will need a user-facing documentation change, see the PR Template.",
      "created_at": "2018-02-07T21:57:01Z",
      "updated_at": "2018-02-07T21:57:01Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "We need tests for this functionality.  At least:\r\n\r\n1. A test verifying a password works\r\n2. A test verifying that a bad supplied password fails and does not prompt.\r\n\r\nAnd it would be nice if we could have a test that verified the host ui prompt scenario",
      "created_at": "2018-02-07T22:41:02Z",
      "updated_at": "2018-02-07T22:41:02Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "We could ignoring UI prompt with `-Force` for best UX in scripts.",
      "created_at": "2018-02-08T03:13:49Z",
      "updated_at": "2018-02-08T03:13:49Z"
    },
    {
      "author": "maybe-hello-world",
      "author_association": "CONTRIBUTOR",
      "body": "But isn't it an unnatural behaviour of cmdlet? PFX certificates (unlike pem) are designed to be password-protected by default, isn't it better to treat them in such way?",
      "created_at": "2018-02-08T22:56:32Z",
      "updated_at": "2018-02-08T22:56:32Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@maybe-hello-world is your comment replying to @iSazonov?  I would agree that we should only support either `-Password` supplied or prompt for password.",
      "created_at": "2018-02-09T00:01:53Z",
      "updated_at": "2018-02-09T00:01:53Z"
    },
    {
      "author": "maybe-hello-world",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT No, it's more about situation when we get no password from user, try to open pfx cert and in case of exception ask user for password. IMHO in either/or situation it's better to use password parameter and treat it as null if it's missed because:\r\n\r\n- It doesn't break existing automated scripts (where pfx isn't protected), scripts that works with protected pfx require interaction anyway\r\n- Prompt can possibly make it more complex to use cmdlet with GUI that relies on Powershell \r\n- It's more intuitive to look for parameter then wait for prompt\r\n\r\nBut of course it's just IMHO =)",
      "created_at": "2018-02-09T00:46:19Z",
      "updated_at": "2018-02-09T00:46:19Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@maybe-hello-world \r\n> It's more intuitive to look for parameter then wait for prompt\r\n\r\nExcept that it has always prompted up to now. Interactive console scripting may rely on that prompt. Replacing the lack of password with an error breaks that flow. In fact. I have CLI that does just that: menu selections for a few PFXs, then something like this\r\n\r\n```powershell\r\nWrite-Host \"Unlock PFX\"\r\n$cert = $null\r\n$attemptsLeft = 3\r\nDo {\r\n    $cert = Get-PfxCertificate -FilePath $pfxChoice -erroraction 'SilentlyContinue'\r\n    $attemptsLeft--\r\n    if (!$cert -and $attemptsLeft -gt 0) { \r\n        Write-Host \"Wrong password. Try again (attempts left: $attemptsLeft)\"\r\n    }\r\n} While ($null -eq $cert -and $attemptsLeft -gt 0)\r\n````\r\n\r\nI'm not sure how wide spread that kind of usage is, but I'm guessing if I use it, at least one other person may be. \ud83d\ude42 ",
      "created_at": "2018-02-09T01:56:45Z",
      "updated_at": "2018-02-09T01:56:45Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@maybe-hello-world I do appreciate this contribution and if the existing behavior was not already there, I would perhaps agree with you, but it seems unnecessary to introduce a breaking change.",
      "created_at": "2018-02-09T03:37:49Z",
      "updated_at": "2018-02-09T03:37:49Z"
    },
    {
      "author": "maybe-hello-world",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT Well, you're right. I've changed behaviour to non-breaking so could you review it again?",
      "created_at": "2018-02-09T08:51:46Z",
      "updated_at": "2018-02-09T08:51:46Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee reviewed this and agree for the need of a switch to suppress prompting for password and recommends the name of the switch to be \"-NoPromptForPassword\"",
      "created_at": "2018-02-21T23:16:06Z",
      "updated_at": "2018-02-21T23:16:06Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@maybe-hello-world Could you please continue?",
      "created_at": "2018-02-22T05:34:51Z",
      "updated_at": "2018-02-22T05:34:51Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT @TravisEz13 Please continue the review.",
      "created_at": "2018-02-22T14:02:25Z",
      "updated_at": "2018-02-22T14:02:25Z"
    }
  ],
  "created_at": "2018-02-06T16:02:51Z",
  "number": 6113,
  "state": "closed",
  "title": "Add Password parameter to Get-PfxCertificate cmdlet",
  "updated_at": "2018-10-15T21:44:22Z"
}