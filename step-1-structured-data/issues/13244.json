{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13244",
  "author": "Quiet-ndl",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 and PowerShell 7+ issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6).\r\n\r\n-->\r\n\r\n## Steps to reproduce\r\nWas typing this \r\n\r\nusing System;\r\nclass Hello\r\n{\r\n\tstatic void Main() {\r\n\t\tConsole.WriteLine(\"My, Dick\");\r\n\t}\r\nreplace \"System;\" with command; and it will crash and yield the result\r\n\r\nLast 200 Keys: Console.WriteLine(\"My, Dick\");\r\nDownArrow DownArrow DownArrow DownArrow DownArrow DownArrow DownArrow DownArrow DownArrow DownArrow DownArrow DownArrow DownArrow DownArrow DownArrow DownArrow Enter\r\nUpArrow UpArrow UpArrow UpArrow UpArrow UpArrow UpArrow UpArrow UpArrow UpArrow UpArrow UpArrow UpArrow UpArrow DownArrow DownArrow DownArrow DownArrow DownArrow DownArrow DownArrow DownArrow DownArrow DownArrow DownArrow DownArrow DownArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow LeftArrow RightArrow RightArrow RightArrow RightArrow RightArrow RightArrow RightArrow RightArrow RightArrow RightArrow RightArrow RightArrow RightArrow LeftArrow RightArrow Backspace Backspace Backspace Backspace Backspace Backspace Backspace Backspace Backspace Backspace Backspace Space Backspace Backspace ; Space LeftArrow LeftArrow LeftArrow RightArrow Backspace Backspace Backspace Backspace Backspace Backspace C o m m a n d\r\n\r\n\r\n```powershell\r\n\r\n```\r\n\r\n## Expected behavior\r\n\r\n```\r\nWindows powershell displays text: \"My Dick\"\r\n```\r\n\r\n## Actual behavior\r\n\r\n```\r\nErRoR\r\n```\r\n\r\n## Environment data\r\n\r\n<!-- provide the output of $PSVersionTable --> \r\nException:\r\nSystem.NullReferenceException: Object reference not set to an instance of an object.\r\nat System.Management.Automation.Language.Parser.UsingStatementRule(Token usingToken)\r\nat System.Management.Automation.Language.Parser.UsingStatementsRule()\r\nat System.Management.Automation.Language.Parser.ScriptBlockRule(Token lCurly, Boolean isFilter, StatementAst predefinedStatementAst)\r\nat System.Management.Automation.Language.Parser.ParseTask(String fileName, String input, List1 tokenList, Boolean recursed, ParseMode parseMode) at System.Management.Automation.Language.Parser.Parse(String fileName, String input, List1 tokenList, ParseError[]& errors, ParseMode parseMode)\r\nat System.Management.Automation.Language.Parser.ParseInput(String input, String fileName, Token[]& tokens, ParseError[]& errors)\r\n```\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Probably shouldn't crash here, but PowerShell isn't expected to parse C# syntax regardless. No idea what you're trying to do, but the only way to run C# code in PowerShell is via `Add-Type -TypeDefinition \"<code in a string>\"`",
      "created_at": "2020-07-23T15:26:00Z",
      "updated_at": "2020-07-23T15:26:00Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "The null reference exception is thrown from parser, which should be fixed. The parser should be able to take any text without crashing.",
      "created_at": "2020-07-23T19:05:37Z",
      "updated_at": "2020-07-23T19:05:37Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "Only repos in 5.1 for me.\r\n\r\nBut honestly... that's one of the few things I'd say maybe should be back ported.  Parser throwing NRE is scary.",
      "created_at": "2020-07-23T23:53:21Z",
      "updated_at": "2020-07-23T23:53:21Z"
    },
    {
      "author": "Quiet-ndl",
      "author_association": "NONE",
      "body": "> Probably shouldn't crash here, but PowerShell isn't expected to parse C# syntax regardless. No idea what you're trying to do, but the only way to run C# code in PowerShell is via `Add-Type -TypeDefinition \"<code in a string>\"`\r\n\r\nso how exactly would a \"hello world\" look in powershell?",
      "created_at": "2020-07-24T07:39:11Z",
      "updated_at": "2020-07-24T07:39:11Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "```ps1\r\nWrite-Host 'Hello World'\r\n```\r\n\r\nOr, if you're especially lazy:\r\n\r\n```ps1\r\n\"Hello World\"\r\n```",
      "created_at": "2020-07-24T14:30:33Z",
      "updated_at": "2020-07-24T14:30:55Z"
    },
    {
      "author": "Quiet-ndl",
      "author_association": "NONE",
      "body": "> ```powershell\r\n> Write-Host 'Hello World'\r\n> ```\r\n> \r\n> Or, if you're especially lazy:\r\n> \r\n> ```powershell\r\n> \"Hello World\"\r\n> ```\r\n\r\nwhoah whoah. I mean specifically in c# my bad",
      "created_at": "2020-07-26T02:04:35Z",
      "updated_at": "2020-07-26T02:04:35Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Oh, right, sorry!\r\n\r\nC# in PowerShell will be pretty much 1:1 for standard c# (most of the time), just wrap it in some quotes to make it a string and pass it to Add-Type:\r\n\r\n```ps1\r\nAdd-Type -TypeDefinition @\"\r\nusing System;\r\npublic class Hello\r\n{\r\n    public static void World() {\r\n        Console.WriteLine(\"Hello World!\");\r\n    }\r\n}\r\n\"@\r\n# Call the created class method from PS.\r\n[Hello]::World()\r\n```\r\n\r\nNote that you'll often need to make the class and at least one of the methods `public` to be able to access them in PS.",
      "created_at": "2020-07-26T02:31:16Z",
      "updated_at": "2020-07-26T02:31:52Z"
    },
    {
      "author": "Quiet-ndl",
      "author_association": "NONE",
      "body": "Add-Type : Cannot add type. The type name 'Hello' already exists.\r\nAt line:1 char:1\r\n+ Add-Type -TypeDefinition @\"\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : InvalidOperation: (Hello:String) [Add-Type], Exception\r\n    + FullyQualifiedErrorId : TYPE_ALREADY_EXISTS,Microsoft.PowerShell.Commands.AddTypeCommand\r\n:(",
      "created_at": "2020-07-26T02:49:22Z",
      "updated_at": "2020-07-26T02:49:22Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "You can't define the same type name over and over in PowerShell.  Change the class name to Hello2 or restart PowerShell.",
      "created_at": "2020-07-26T03:18:10Z",
      "updated_at": "2020-07-26T03:18:10Z"
    }
  ],
  "created_at": "2020-07-23T08:42:54Z",
  "number": 13244,
  "state": "open",
  "title": "A lowly script kiddy with no idea what he's doing (was attempting a \"Hello World\" in C#",
  "updated_at": "2020-07-26T03:18:10Z"
}