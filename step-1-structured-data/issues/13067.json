{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13067",
  "author": "ThomasNieto",
  "body": "I'm writing my first binary PowerShell module and have C# 8 with non-nullable reference type checking enabled. I have a cmdlet with a string parameter called `Name`. The parameter has the `ValidateNotNull` attribute for PS to check if `Name` is null and error out. The compiler outputs a warning about the uninitialized string. \r\n\r\nWhat are the best practices for non-nullable parameters where PS does a null check?\r\n\r\n## Steps to reproduce\r\n\r\n```csharp\r\n[Cmdlet(VerbsCommon.Find, \"Thing\")]\r\npublic sealed class FindThing : PSCmdlet\r\n{\r\n    \r\n    [Parameter()]\r\n    [ValidateNotNull]\r\n    // PS does a null check and errors.\r\n    // Compiler produces this warning:\r\n    // Non-nullable property 'Name' is uninitialized. Consider declaring the property as nullable.\r\n    public string Name { get; set; }\r\n\r\n    protected override void ProcessRecord()\r\n    {\r\n        // do thing\r\n    }\r\n}\r\n```",
  "closed_at": "2020-06-30T19:27:22Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "In that case you can do one of two things:\r\n\r\n1. Set a default value of `string.Empty` just to satisfy the compiler, or\r\n2. \"Assure\" the compiler that it should never be null, effectively. I believe the pattern looks something like this:\r\n\r\n```cs\r\npublic string Name { get; set; } = null!;\r\n```\r\n\r\nThe postfix exclamation point can be used to tell the compiler that \"no, this won't ever actually be null!\" pretty much / the default value will never be accessed and it will always have a value by the time it's needed.",
      "created_at": "2020-06-30T19:21:40Z",
      "updated_at": "2020-06-30T19:22:35Z"
    },
    {
      "author": "ThomasNieto",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks @vexx32. I was trying to use the null-forgiving operator but put it in the wrong spot.",
      "created_at": "2020-06-30T19:27:22Z",
      "updated_at": "2020-06-30T19:27:22Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "I still put it in the wrong place all the time, it's very confusing! \ud83d\ude02 ",
      "created_at": "2020-06-30T19:28:51Z",
      "updated_at": "2020-06-30T19:28:51Z"
    }
  ],
  "created_at": "2020-06-30T19:13:21Z",
  "number": 13067,
  "state": "closed",
  "title": "Non-nullable parameter best practices",
  "updated_at": "2020-06-30T19:38:05Z"
}