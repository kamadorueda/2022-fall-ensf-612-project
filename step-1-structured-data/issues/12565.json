{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12565",
  "author": "TristanJamesBall",
  "body": "When parsing a JSON object with ISO 8601 date strings, Powershell 7 does not convert the date Correctly\r\nIf it's relevant, calling [datetime]::parse() directly on either 5.1 or 7 does work\r\n# Steps to reproduce\r\n\r\n\r\n```powershell\r\n$datePs1 = [PSCustomObject]@{\r\n    \"Date\" = \"2020-05-03T15:13:01Z\"\r\n}\r\n\r\n$dateJSON =  $datePs1 | convertto-json\r\n\r\nwrite-host \"Powershell Version: \" $PSVersionTable.PSVersion\r\nwrite-host \"Original Date String: \"  $datePS1.date\r\nwrite-host \"Parsed Original Date: \"  ([datetime]::parse($datePs1.date))\r\nwrite-host \"Json Object: \" $dateJSON\r\n$dateFromJson = $dateJson | ConvertFrom-Json\r\n\r\nwrite-host \"`nConverted JSON Date String: \"  $dateFromJson.date\r\nwrite-host \"Converted JSON Date Type: \"  $dateFromJson.date.gettype().name\r\nif($PSVersionTable.PSVersion -ne \"7.0.0\" ) {\r\n    write-host \"Parsed Converted JSON Date: \"  ([datetime]::parse($dateFromJson.date))\r\n}\r\n```\r\n\r\n# Expected behavior\r\n\r\n```none\r\nPowershell Version:  5.1.18362.628\r\nOriginal Date String:  2020-05-03T15:13:01Z\r\nParsed Original Date:  4/05/2020 1:13:01 AM\r\nJson Object:  {\r\n    \"Date\":  \"2020-05-03T15:13:01Z\"        \r\n}\r\n\r\nConverted JSON Date String:  2020-05-03T15:13:01Z\r\nConverted JSON Date Type:  String\r\nParsed Converted JSON Date:  4/05/2020 1:13:01 AM\r\n```\r\n\r\n# Actual behavior\r\n\r\n```none\r\nPowershell Version:  7.0.0\r\nOriginal Date String:  2020-05-03T15:13:01Z\r\nParsed Original Date:  4/05/2020 1:13:01 AM\r\nJson Object:  {\r\n  \"Date\": \"2020-05-03T15:13:01Z\"\r\n}\r\n\r\nConverted JSON Date String:  3/05/2020 3:13:01 PM\r\nConverted JSON Date Type:  DateTime\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0\r\nOS                             Microsoft Windows 10.0.18363\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}       \r\nPSRemotingProtocolVersion      2.3    \r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0    \r\n```\r\n",
  "closed_at": "2020-05-05T03:43:48Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "This is expected behaviour. You're passing an object with a string property to `ConvertTo-Json`. It has no choice but to keep it as a string.\r\n\r\nIf you want the JSON cmdlets to handle the date conversions for you, your input to `ConvertTo-Json` must contain an actual `DateTime` object. It's not going to assume whether the content of an arbitrary string should be automatically converted to a date. It's just going to keep it as a string, since that's what you provided.",
      "created_at": "2020-05-04T14:49:03Z",
      "updated_at": "2020-05-04T14:49:03Z"
    },
    {
      "author": "TristanJamesBall",
      "author_association": "NONE",
      "body": "I think you've misunderstood - Powershell 7 is not keeping it as a string (which is what Powershell 5.1 does - that's what I got the expected output from) - it's converting it to a DateTime object _and_ it's converting it incorrectly.",
      "created_at": "2020-05-05T01:22:51Z",
      "updated_at": "2020-05-05T01:22:51Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Yeah, I'm not really following. I'd agree that the data should come back as string, but you've lost me here in terms of the behaviour you're expecting:\r\n```\r\nConverted JSON Date String:  2020-05-03T15:13:01Z\r\nConverted JSON Date Type:  String\r\nParsed Converted JSON Date:  4/05/2020 1:13:01 AM\r\n```\r\n\r\nIn what calendar system does `2020-05-03` parse to a datetime of `4/05/2020`? Are you expecting it to handle the UTC offset to local time?\r\n\r\nIf so, you're probably better off using `[datetimeoffset]` which is designed to handle UTC offsets. DateTime isn't really meant for handling that, and I'm surprised that ever worked as you expected.\r\n\r\nThat aside, the main issue appears to be that conversion to and from json is resulting in a datetime object rather than the original string... @iSazonov is this something you've seen? Perhaps we should check to see how the newer .NET JSON APIs are handling this kind of case?",
      "created_at": "2020-05-05T01:29:53Z",
      "updated_at": "2020-05-05T01:29:53Z"
    },
    {
      "author": "TristanJamesBall",
      "author_association": "NONE",
      "body": "OK - this is my confusion then - I actually expected the resulting date to be presented in local time - this is what [datetime]::parse actually does (Sunday, May 3, 2020 3:13:01 PM UTC == Monday, May 4, 2020 1:13:01 AM local time here in Melbourne/Australia)\r\n\r\nSeparately, I had actually tried to do that conversion, but got badly wrong results - but that's clearly a bug on my side.. \r\n\r\nOK - thats my bad... if I use a .tolocaltime() on the converted date, I get the correct local time.\r\n\r\nSorry everyone.\r\n",
      "created_at": "2020-05-05T03:43:48Z",
      "updated_at": "2020-05-05T03:43:48Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I hope in next release we will be on new .Net Json API.",
      "created_at": "2020-05-05T06:21:58Z",
      "updated_at": "2020-05-05T06:21:58Z"
    }
  ],
  "created_at": "2020-05-04T01:31:38Z",
  "number": 12565,
  "state": "closed",
  "title": "My bug report",
  "updated_at": "2020-05-05T06:21:59Z"
}