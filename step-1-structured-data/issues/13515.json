{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13515",
  "author": "deepend-dev",
  "body": "# Issue: Test-Json scripts overlooks/ ignores \"if then else\" conditions in json schema for attribute checks. \r\n\r\n## Steps to reproduce\r\n\r\nJson schema: \r\n```json\r\n{\r\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\r\n    \"$id\": \"http://example.com/example.json\",\r\n    \"type\": \"object\",\r\n    \"title\": \"The root schema\",\r\n    \"description\": \"The root schema comprises the entire JSON document.\",\r\n    \"required\": [\r\n        \"sqlConfig\"\r\n    ],\r\n    \"properties\": {\r\n        \"sqlConfig\": {\r\n            \"$id\": \"#/properties/sqlConfig\",\r\n            \"type\": \"array\",\r\n            \"title\": \"The sqlConfig schema\",\r\n            \"description\": \"Contains sql configuration information\",\r\n            \"uniqueItems\": true,\r\n            \"additionalItems\": true,\r\n            \"items\": {\r\n                \"$id\": \"#/properties/sqlConfig/items\",\r\n                \"anyOf\": [\r\n                    {\r\n                        \"$id\": \"#/properties/sqlConfig/items/anyOf/0\",\r\n                        \"type\": \"object\",\r\n                        \"title\": \"The first anyOf schema\",\r\n                        \"description\": \"SQL properties\",\r\n                        \"if\": {\r\n                            \"properties\": {\r\n                                \"family\": {\r\n                                    \"pattern\": \"^(?i)(azuresql)$\"\r\n                                }\r\n                            }\r\n                        },\r\n                        \"then\": {\r\n                            \"required\": [\r\n                                \"sku\",\r\n                                \"family\",\r\n                                \"type\",\r\n                                \"keyvault\",\r\n                                \"serverName\",\r\n                                \"administratorLogin\"\r\n                            ]\r\n                        },\r\n                        \"else\": {\r\n                            \"required\": [\r\n                                \"sku\",\r\n                                \"family\",\r\n                                \"keyvault\",\r\n                                \"serverName\",\r\n                                \"administratorLogin\"\r\n                            ]\r\n                        },\r\n                        \"properties\": {\r\n                            \"sku\": {\r\n                                \"$id\": \"#/properties/sqlConfig/items/anyOf/0/properties/sku\",\r\n                                \"type\": \"object\",\r\n                                \"title\": \"The sku schema\",\r\n                                \"description\": \"database sku\",\r\n                                \"required\": [\r\n                                    \"capacity\",\r\n                                    \"name\"\r\n                                ],\r\n                                \"properties\": {\r\n                                    \"capacity\": {\r\n                                        \"$id\": \"#/properties/sqlConfig/items/anyOf/0/properties/sku/properties/capacity\",\r\n                                        \"type\": \"integer\",\r\n                                        \"title\": \"capacity\",\r\n                                        \"description\": \" # In Vcores for GP, BC, HS. In DTU for others.\"\r\n                                    },\r\n                                    \"name\": {\r\n                                        \"$id\": \"#/properties/sqlConfig/items/anyOf/0/properties/sku/properties/name\",\r\n                                        \"type\": \"string\",\r\n                                        \"title\": \"sku service objective name\",\r\n                                        \"description\": \"ServiceObjectiveName - Get-AzSqlServerServiceObjective -Location <location>\"\r\n                                    }\r\n                                },\r\n                                \"additionalProperties\": false\r\n                            },\r\n                            \"family\": {\r\n                                \"$id\": \"#/properties/sqlConfig/items/anyOf/0/properties/family\",\r\n                                \"type\": \"string\",\r\n                                \"title\": \"database family\",\r\n                                \"pattern\": \"^(?i)(azuresql|postgresql|mariadb|mysql)$\",\r\n                                \"description\": \"type of database server\"\r\n                            },\r\n                            \"firewallRules\": {\r\n                                \"$id\": \"#/properties/sqlConfig/items/anyOf/0/properties/firewallRules\",\r\n                                \"type\": \"array\",\r\n                                \"title\": \"The firewallRules schema\",\r\n                                \"description\": \"firewall rules for the database\",\r\n                                \"uniqueItems\": true,\r\n                                \"additionalItems\": true,\r\n                                \"items\": {\r\n                                    \"$id\": \"#/properties/sqlConfig/items/anyOf/0/properties/firewallRules/items\",\r\n                                    \"anyOf\": [\r\n                                        {\r\n                                            \"$id\": \"#/properties/sqlConfig/items/anyOf/0/properties/firewallRules/items/anyOf/0\",\r\n                                            \"type\": \"object\",\r\n                                            \"title\": \"The first anyOf schema\",\r\n                                            \"description\": \"An explanation about the purpose of this instance.\",\r\n                                            \"required\": [\r\n                                                \"endIpAddress\",\r\n                                                \"startIpAddress\"\r\n                                            ],\r\n                                            \"properties\": {\r\n                                                \"endIpAddress\": {\r\n                                                    \"$id\": \"#/properties/sqlConfig/items/anyOf/0/properties/firewallRules/items/anyOf/0/properties/endIpAddress\",\r\n                                                    \"type\": \"string\",\r\n                                                    \"format\": \"ipv4\",\r\n                                                    \"title\": \"The endIpAddress schema\",\r\n                                                    \"description\": \"An explanation about the purpose of this instance.\"\r\n                                                },\r\n                                                \"startIpAddress\": {\r\n                                                    \"$id\": \"#/properties/sqlConfig/items/anyOf/0/properties/firewallRules/items/anyOf/0/properties/startIpAddress\",\r\n                                                    \"type\": \"string\",\r\n                                                    \"format\": \"ipv4\",\r\n                                                    \"title\": \"The startIpAddress schema\",\r\n                                                    \"description\": \"An explanation about the purpose of this instance.\"\r\n                                                }\r\n                                            },\r\n                                            \"additionalProperties\": false\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            },\r\n                            \"keyvault\": {\r\n                                \"$id\": \"#/properties/sqlConfig/items/anyOf/0/properties/keyvault\",\r\n                                \"type\": \"object\",\r\n                                \"title\": \"The keyvault schema\",\r\n                                \"description\": \"An explanation about the purpose of this instance.\",\r\n                                \"required\": [\r\n                                    \"serviceTag\",\r\n                                    \"passwordsecretName\"\r\n                                ],\r\n                                \"properties\": {\r\n                                    \"serviceTag\": {\r\n                                        \"$id\": \"#/properties/sqlConfig/items/anyOf/0/properties/keyvault/properties/serviceTag\",\r\n                                        \"type\": \"string\",\r\n                                        \"title\": \"The serviceTag schema\",\r\n                                        \"description\": \"An explanation about the purpose of this instance.\"\r\n                                    },\r\n                                    \"passwordsecretName\": {\r\n                                        \"$id\": \"#/properties/sqlConfig/items/anyOf/0/properties/keyvault/properties/passwordsecretName\",\r\n                                        \"type\": \"string\",\r\n                                        \"title\": \"The passwordsecretName schema\",\r\n                                        \"description\": \"An explanation about the purpose of this instance.\"\r\n                                    }\r\n                                },\r\n                                \"additionalProperties\": false\r\n                            },\r\n                            \"serverName\": {\r\n                                \"$id\": \"#/properties/sqlConfig/items/anyOf/0/properties/serverName\",\r\n                                \"type\": \"string\",\r\n                                \"title\": \"The serverName schema\",\r\n                                \"description\": \"An explanation about the purpose of this instance.\"\r\n                            },\r\n                            \"databaseNames\": {\r\n                                \"$id\": \"#/properties/sqlConfig/items/anyOf/0/properties/databaseNames\",\r\n                                \"type\": \"array\",\r\n                                \"title\": \"The databaseNames schema\",\r\n                                \"description\": \"An explanation about the purpose of this instance.\",\r\n                                \"uniqueItems\": true,\r\n                                \"additionalItems\": true,\r\n                                \"items\": {\r\n                                    \"$id\": \"#/properties/sqlConfig/items/anyOf/0/properties/databaseNames/items\",\r\n                                    \"anyOf\": [\r\n                                        {\r\n                                            \"$id\": \"#/properties/sqlConfig/items/anyOf/0/properties/databaseNames/items/anyOf/0\",\r\n                                            \"type\": \"string\",\r\n                                            \"title\": \"The first anyOf schema\",\r\n                                            \"description\": \"An explanation about the purpose of this instance.\"\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            },\r\n                            \"type\": {\r\n                                \"$id\": \"#/properties/sqlConfig/items/anyOf/0/properties/type\",\r\n                                \"type\": \"string\",\r\n                                \"title\": \"The type schema\",\r\n                                \"description\": \"An explanation about the purpose of this instance.\"\r\n                            },\r\n                            \"administratorLogin\": {\r\n                                \"$id\": \"#/properties/sqlConfig/items/anyOf/0/properties/administratorLogin\",\r\n                                \"type\": \"string\",\r\n                                \"title\": \"The administratorLogin schema\",\r\n                                \"description\": \"An explanation about the purpose of this instance.\"\r\n                            }\r\n                        },\r\n                        \"additionalProperties\": false\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n    },\r\n    \"additionalProperties\": false\r\n}\r\n```\r\n\r\nJson file:\r\n```json\r\n{\r\n  \"sqlConfig\": [\r\n    {\r\n      \"keyvault\": {\r\n        \"passwordsecretName\": \"databasepassword\",\r\n        \"serviceTag\": \"kvaultcorerg\"\r\n      },\r\n      \"sku\": {\r\n        \"name\": \"free\",\r\n        \"capacity\": 5\r\n      },\r\n      \"administratorLogin\": \"databaseowner\",\r\n      \"serverName\": \"commonserver\"\r\n    }\r\n  ]\r\n}\r\n```\r\nImported above files and ran a test against json file. \r\nThe output is `true` that JSON matches SCHEMA but expectation with test is to `fail` as FAMILY and TYPE are missing.\r\n\r\n```powershell\r\n  \r\n  PS > $schema = Get-Content -raw $SchemaFile\r\n  PS > $json | Test-Json -Schema $schema -Verbose\r\n  True\r\n\r\n```\r\n\r\n## Expected behavior\r\n\r\n```none\r\nFALSE.\r\nRequired properties are missing from object: family, type.\r\n```\r\n\r\n## Actual behavior\r\n\r\n- If else validation is overlooked. It doesn't look at anything \"required\" and everything passed. Ideally it should fail because family and type are missing.\r\n\r\nif do same validation through other validation tools, i get correct response.\r\n\r\n![image](https://user-images.githubusercontent.com/55054090/91167798-75113400-e6cc-11ea-966e-a2da4acbfe7c.png)\r\n\r\n![image](https://user-images.githubusercontent.com/55054090/91167878-8fe3a880-e6cc-11ea-9c96-285b3f733b50.png)\r\n\r\n\r\n## Environment data\r\n\r\n```powershell\r\nPS> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0\r\nOS                             Linux 5.3.0-1035-azure #36-Ubuntu SMP Thu Aug 6 09:21:33 UTC 2020\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "/cc @iSazonov ",
      "created_at": "2020-08-25T12:30:57Z",
      "updated_at": "2020-08-25T12:30:57Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I guess it is NJsonSchema issue and it is better to open new issue there.",
      "created_at": "2020-08-26T17:55:22Z",
      "updated_at": "2020-08-26T17:55:22Z"
    }
  ],
  "created_at": "2020-08-25T11:18:55Z",
  "number": 13515,
  "state": "open",
  "title": "Test-Json ignores if else statement in json-schema",
  "updated_at": "2020-08-26T17:55:38Z"
}