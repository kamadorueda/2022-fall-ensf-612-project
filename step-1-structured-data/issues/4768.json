{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4768",
  "author": "nightroman",
  "body": "`InvokeWithContext` modifies the input list of variables, namely, removes the\r\nfirst occurrence of found `$_`, `$input`, `$this`. (Yes, only the first is\r\nremoved if for some weird reasons there are more.)\r\n\r\nHere is the demo:\r\n\r\n```powershell\r\n    # two blocks\r\n    $script1 = {Get-Variable _ -Scope 0}\r\n    $script2 = {Get-Variable _ -Scope 0}\r\n    1..2 | ForEach-Object {\r\n        # prepare list of variables\r\n        $variables = [System.Collections.Generic.List[PSVariable]] @()\r\n        $variables.Add((Get-Variable _))\r\n\r\n        # invoke blocks with same variables\r\n        # works\r\n        $script1.InvokeWithContext($null, $variables)\r\n        # fails, $_ is removed from $variables\r\n        $script2.InvokeWithContext($null, $variables)\r\n    }\r\n```\r\n\r\nThe demo is contrived but the behaviour of `InvokeWithContext` is rather\r\nunexpected. This may cause subtle and probably difficult to find issues.\r\n\r\nIs this by design? If yes, then is this by design that only first occurrences\r\nof special variables are removed from the input list?\r\n\r\nEnvironment data\r\n----------------\r\n\r\nWindows, PowerShell 5.1\r\nWindows, PowerShell-6.0.0-beta.5-win81-win2012r2-x64\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "Heh. I can't speak towards intention, but it is definitely removing them [(ScriptBlock.cs Line 461)](https://github.com/PowerShell/PowerShell/blob/master/src/System.Management.Automation/engine/lang/scriptblock.cs#L461).  I assume it needs to be removed from the collection before calling `InvokeWithPipe`. ",
      "created_at": "2017-09-07T14:56:33Z",
      "updated_at": "2017-09-07T14:56:33Z"
    },
    {
      "author": "nightroman",
      "author_association": "NONE",
      "body": "1. It is possible to make a copy, to avoid changing the input list.\r\n1. If special variables have to be removed than *all* occurrences should be removed, not just first found.",
      "created_at": "2017-09-07T19:16:07Z",
      "updated_at": "2017-09-07T19:16:07Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "Hmm.\r\n\r\n```powershell\r\n# two blocks\r\n$script1 = {Get-Variable _ -Scope 0}\r\n$script2 = {Get-Variable _ -Scope 0}\r\n1..2 | ForEach-Object {\r\n    # prepare list of variables\r\n    $variables = [System.Collections.Generic.List[PSVariable]] @()\r\n    $variables.Add((Get-Variable _))\r\n    $variables.Add((Get-Variable _))\r\n    $variables.Add((Get-Variable _))\r\n\r\n    # invoke blocks with same variables\r\n    # works\r\n    $script1.InvokeWithContext($null, $variables)\r\n    # fails, $_ is removed from $variables\r\n    $script2.InvokeWithContext($null, $variables)\r\n}\r\n```\r\nresult:\r\n\r\n```\r\nException calling \"InvokeWithContext\" with \"2\" argument(s): \"An item with the same key has already been added.\"\r\nAt line:13 char:9\r\n+         $script1.InvokeWithContext($null, $variables)\r\n+         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : NotSpecified: (:) [], MethodInvocationException\r\n    + FullyQualifiedErrorId : ArgumentException\r\n \r\n\r\nName                           Value                                                                                                                                            \r\n----                           -----                                                                                                                                            \r\n_                              1                                                                                                                                                \r\nException calling \"InvokeWithContext\" with \"2\" argument(s): \"An item with the same key has already been added.\"\r\nAt line:13 char:9\r\n+         $script1.InvokeWithContext($null, $variables)\r\n+         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : NotSpecified: (:) [], MethodInvocationException\r\n    + FullyQualifiedErrorId : ArgumentException\r\n \r\n_                              2  \r\n```\r\n\r\nThis is on line 986 of [CompiledScriptBlock.cs](https://github.com/PowerShell/PowerShell/blob/master/src/System.Management.Automation/engine/runtime/CompiledScriptBlock.cs#L986). Seems to me that the better option is to have the `foreach` loop starting on 971 skip `_`, `this`, and `input` and leave the referenced variables collection unmolested. ",
      "created_at": "2017-09-07T19:41:40Z",
      "updated_at": "2017-09-07T19:41:40Z"
    }
  ],
  "created_at": "2017-09-07T13:27:45Z",
  "number": 4768,
  "state": "open",
  "title": "InvokeWithContext modifies the input list of variables if it contains $_, $input, $this",
  "updated_at": "2017-09-08T17:00:12Z"
}