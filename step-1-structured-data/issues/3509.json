{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3509",
  "author": "jeffbi",
  "body": "Fix #2915\r\nNow creates a file symlink to a file target and to an non-existent target, and a directory symlink to a directory target.\r\n\r\n\r\n## Creating Links with New-Item\r\n\r\nThe `New-Item` cmdlet allows for creating file system *links*.\r\nIn general, `New-Item` can create four types of links:\r\n\r\n- **Hard Link**\r\n  - Created when `-ItemType` is `HardLink`\r\n- **Symbolic Link**\r\n  - Created when `-ItemType` is `SymbolicLink` **and** either the target exists and is a file, or the target does *not* exist\r\n    - In Windows, if the target is a directory then `New-Item -ItemType Symbolic Link` will create a *directory* symbolic link, not a \"plain\" symbolic link.\r\n    - In Linux and OS X, `New-Item -ItemType Symbolic Link` will *always* create a \"plain\" symbolic link, regardless of whether the target is a file or directory, or whether the target exists or not.\r\n  - In Windows, elevated privileges are required to create a symbolic link.\r\n- **_Directory_ Symbolic Link**\r\n  - Created when `-ItemType` is `SymbolicLink` **and** the target exists and is a directory\r\n  - Supported only on NTFS file system\r\n  - In Windows, elevated privileges are required to create a *directory* symbolic link.\r\n  - In Linux and OS X, `New-Item` will not create a *directory* symbolic link, even on an NTFS volume.\r\n- **Directory Junction**\r\n  - Supported only on NTFS file system\r\n  - In Linux and OS X, `New-Item` will not create a directory junction, even on an NTFS volume.\r\n    - Currently, `New-Item` will begin to create the junction by creating the link directory. When the attempt to turn the newly-created directory into a junction fails, `New-Item` will delete the new directory and silently fail.\r\n\r\n#### The following table shows the types of links and targets the `New-Item` cmdlet can create on **Windows**:\r\n<table>\r\n<th>Link Type / Target</th><th>Existing File</th><th>Existing Directory</th><th>Non-Existent</th><th>\"Plain\" Symbolic Link</th><th>Directory Symbolic Link</th><th>Directory Junction</th>\r\n<tr align=\"center\">\r\n  <th scope=\"row\">Hard Link</th>\r\n  <td>Yes</td>\r\n  <td>No</td>\r\n  <td>No</td>\r\n  <td>Yes</td>\r\n  <td>No</td>\r\n  <td>No</td>\r\n</tr>\r\n<tr align=\"center\">\r\n  <th scope=\"row\">\"Plain\" Symbolic Link</th>\r\n  <td>Yes</td>\r\n  <td>No<a href=\"#footnote_1\"><sup>1</sup></a></td>\r\n  <td>Yes</td>\r\n  <td>Yes</td>\r\n  <td>No<a href=\"#footnote_1\"><sup>1</sup></a></td>\r\n  <td>No<a href=\"#footnote_1\"><sup>1</sup></a></td>\r\n</tr>\r\n<tr align=\"center\">\r\n  <th scope=\"row\"><it>Directory</it> Symbolic Link</th>\r\n  <td>No<a href=\"#footnote_1\"><sup>1</sup></a></td>\r\n  <td>Yes</td>\r\n  <td>No<a href=\"#footnote_1\"><sup>1</sup></a></td>\r\n  <td>No<a href=\"#footnote_1\"><sup>1</sup></a></td>\r\n  <td>Yes</td>\r\n  <td>Yes</td>\r\n</tr>\r\n<tr align=\"center\">\r\n  <th scope=\"row\">Directory Junction</th>\r\n  <td>No</td>\r\n  <td>Yes</td>\r\n  <td>No</td>\r\n  <td>No</td>\r\n  <td>Yes</td>\r\n  <td>Yes</td>\r\n</tr>\r\n</table>\r\n<a name=\"footnote_1\">1</a> While the NTFS file system and the Windows operating system support \"plain\" symbolic links to existing directories and *directory* symbolic links to files and to non-existent items, the `New-Item` cmdlet cannot create them.\r\n\r\n#### The following table shows the types of links and targets the `New-Item` cmdlet can create on **Linux** and **OS X**:\r\n<table>\r\n<th>Link Type / Target</th><th>Existing File</th><th>Existing Directory</th><th>Non-Existent</th><th>\"Plain\" Symbolic Link</th><th>Directory Symbolic Link</th><th>Directory Junction</th>\r\n<tr align=\"center\">\r\n  <th scope=\"row\">Hard Link</th>\r\n  <td>Yes</td>\r\n  <td>No</td>\r\n  <td>No</td>\r\n  <td>Yes</td>\r\n  <td>No</td>\r\n  <td>No</td>\r\n</tr>\r\n<tr align=\"center\">\r\n  <th scope=\"row\">\"Plain\" Symbolic Link</th>\r\n  <td>Yes</td>\r\n  <td>Yes</td>\r\n  <td>Yes</td>\r\n  <td>Yes</td>\r\n  <td>No</td>\r\n  <td>No</td>\r\n</tr>\r\n<tr align=\"center\">\r\n  <th scope=\"row\"><it>Directory</it> Symbolic Link<a href=\"#footnote_2\"><sup>2</sup></a></th>\r\n  <td>No</td>\r\n  <td>No</td>\r\n  <td>No</td>\r\n  <td>No</td>\r\n  <td>No</td>\r\n  <td>No</td>\r\n</tr>\r\n<tr align=\"center\">\r\n  <th scope=\"row\">Directory Junction<a href=\"#footnote_2\"><sup>2</sup></a></th>\r\n  <td>No</td>\r\n  <td>No</td>\r\n  <td>No</td>\r\n  <td>No</td>\r\n  <td>No</td>\r\n  <td>No</td>\r\n</tr>\r\n</table>\r\n<a name=\"footnote_2\">2</a> The Linux and OS X operating systems do not support *directory* symbolic links or directory junctions.\r\n",
  "closed_at": "2017-04-14T21:23:15Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "LGTM.",
      "created_at": "2017-04-08T18:36:05Z",
      "updated_at": "2017-04-08T18:36:05Z"
    },
    {
      "author": "jeffbi",
      "author_association": "CONTRIBUTOR",
      "body": "@joeyaiello, @SteveL-MSFT Can whoever else needs to review this please do so? I have another issue that is waiting on this one to finish updating its PR, then I'll likely want to use changes from that one in yet another issue.",
      "created_at": "2017-04-10T22:38:49Z",
      "updated_at": "2017-04-10T22:38:49Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "cc @PowerShell/area-providers ",
      "created_at": "2017-04-11T23:29:16Z",
      "updated_at": "2017-04-11T23:29:16Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@jeffbi Thanks very much for great PR description!",
      "created_at": "2017-04-12T04:34:26Z",
      "updated_at": "2017-04-12T04:34:26Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@mirichmo @SteveL-MSFT The PR block #3441. \ud83d\ude15 Could you please continue with the PR? ",
      "created_at": "2017-04-14T19:38:08Z",
      "updated_at": "2017-04-14T19:38:08Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@jeffbi could you please help me to understand how the change in `FileSystemProvider.cs` fixed the issue?\r\nIt looks to me there is only one behavior change after the fix -- an exception will be thrown from `CheckItemExists` in windows, when `NativeMethods.GetFileAttributes` fails, and in that case, `New-Item` will return with an error message. It's not very obvious how this fixes the issue #2915. Could you please elaborate/explain the fix a bit?",
      "created_at": "2017-04-14T21:17:02Z",
      "updated_at": "2017-04-14T21:19:57Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@jeffbi Never mind, `isDirectory` is the key here. The change looks good.",
      "created_at": "2017-04-14T21:21:03Z",
      "updated_at": "2017-04-14T21:21:03Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw Thanks for quick response!",
      "created_at": "2017-04-15T09:48:01Z",
      "updated_at": "2017-04-15T09:48:01Z"
    }
  ],
  "created_at": "2017-04-07T21:04:15Z",
  "number": 3509,
  "state": "closed",
  "title": "Fix New-Item to create correct symlink type (#2915)",
  "updated_at": "2017-04-24T23:22:10Z"
}