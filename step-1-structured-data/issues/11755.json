{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11755",
  "author": "p0W3RH311",
  "body": "### steps to reproduce\r\n\r\n```\r\nPS C:\\> 'hello' -match 'e'\r\nTrue\r\nPS C:\\> $Matches | fl *\r\n\r\nName      : 0\r\nKey       : 0\r\nValue     : e\r\nIndex     : 1\r\nLastIndex : 2\r\n```",
  "closed_at": "2020-02-04T03:29:37Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "I'm not really sure what you're asking here. What purpose would this serve? $matches is just a hashtable; all it really has is key and value for each item.\r\n\r\nI'd also recommend you follow the feature suggestion template we have so that others can more easily understand what exactly it is that you're proposing \ud83d\ude0a",
      "created_at": "2020-02-02T17:43:20Z",
      "updated_at": "2020-02-02T17:44:01Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "It is about first and last position of found substring in source line.",
      "created_at": "2020-02-03T14:53:51Z",
      "updated_at": "2020-02-03T14:53:51Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov thanks, that makes a bit more sense! It does raise the question of whether we want First/LastIndex of just the `0` entry, though, or whether we'd want to add it for each match group entry as well?",
      "created_at": "2020-02-03T15:10:02Z",
      "updated_at": "2020-02-03T15:10:13Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I guess it is based on Regex and we can not add the indexes without performance degradation.",
      "created_at": "2020-02-03T15:21:23Z",
      "updated_at": "2020-02-03T15:21:23Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Adding new entries to `$Matches` is also a potentially breaking change.\r\n\r\nHowever, we discussed returning `[System.Text.RegularExpressions.Match]` instances in the context of a future `-allmatches` operator -  #7867 - which would at least enable you to do:\r\n\r\n```powershell\r\nPS> ('hello' -allmatches 'e')[0]\r\n\r\nGroups   : {0}\r\nSuccess  : True\r\nName     : 0\r\nCaptures : {0}\r\nIndex    : 1\r\nLength   : 1\r\nValue    : e\r\n```\r\n\r\n\r\n",
      "created_at": "2020-02-03T22:37:51Z",
      "updated_at": "2020-02-03T22:38:13Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@mklement0 Can you move this in #7867 explicitly?",
      "created_at": "2020-02-04T03:01:16Z",
      "updated_at": "2020-02-04T03:01:16Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Assuming you meant my previous comment, @iSazonov: done.\r\n",
      "created_at": "2020-02-04T03:27:50Z",
      "updated_at": "2020-02-04T03:27:50Z"
    }
  ],
  "created_at": "2020-02-02T16:13:07Z",
  "number": 11755,
  "state": "closed",
  "title": "add Index and LastIndex property to $matches variable",
  "updated_at": "2020-02-04T03:29:37Z"
}