{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6456",
  "author": "mklement0",
  "body": "_[Superseded by #6466]_\r\n\r\n#3671 discussed the issue with respect to `[pscustomobject]` instances, for which a fix was attempted in #5756 (but the fix is not in v6.0.2 - @iSazonov, should it be?).\r\n\r\nHowever, there are instances of other types where the problem persists.\r\n\r\nIt would be good to clarity on the _generic_ issue, so that it can be fixed for _any_ (current and future) type.\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\n([System.Data.DataTable]::new()).Count\r\n([pscustomobject] @{}).Count\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```none\r\n0   # because [System.Data.DataTable] is treated as an *enumerable* - see @stknohg's comment below.\r\n1\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\nThe output is `$null`, because there is no `.Count` property.\r\n\r\nEnvironment data\r\n----------------\r\n\r\n```powershell\r\nPowerShell Core v6.0.2 on macOS 10.13.3\r\nPowerShell Core v6.0.2 on Ubuntu 16.04.3 LTS\r\nPowerShell Core v6.0.2 on Microsoft Windows 10 Pro (64-bit; v10.0.15063)\r\nWindows PowerShell v5.1.15063.674 on Microsoft Windows 10 Pro (64-bit; v10.0.15063)\r\n```\r\n",
  "closed_at": "2018-03-22T17:10:47Z",
  "comments": [
    {
      "author": "stknohg",
      "author_association": "CONTRIBUTOR",
      "body": "`DataTable` is defined as enumerable in PowerShell.\r\n\r\nI think \r\n\r\n```powershell\r\n([System.Data.DataTable]::new()).Count\r\n```\r\n\r\nshould retruns `0`.\r\n\r\nbut this expression returns nothing currently...  \r\nI think it is a bug.\r\n\r\n----\r\n\r\n### workaround?\r\n\r\n```powershell\r\n([System.Data.DataTable]::new().Rows).Count\r\n```\r\n\r\nreturns `0` as expected.",
      "created_at": "2018-03-22T03:48:49Z",
      "updated_at": "2018-03-22T03:48:49Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@stknohg: Thanks, good point about `[System.Data.DataTable]` being enumerable (though seemingly [not in all contexts (anymore)](https://github.com/PowerShell/PowerShell/issues/6453) - I've updated the original post.\r\n\r\nYes, it should  return `0` in this case (or, generally, however many rows the `.Rows` property contains) which, as you state, doesn't work.\r\n",
      "created_at": "2018-03-22T04:05:56Z",
      "updated_at": "2018-03-22T04:05:56Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "v6.0.2 is only security update.",
      "created_at": "2018-03-22T04:56:52Z",
      "updated_at": "2018-03-22T04:56:52Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Is the Issue for `ForEach` and `Where` too?",
      "created_at": "2018-03-22T05:06:06Z",
      "updated_at": "2018-03-22T05:06:06Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov: Thanks; your `[pscustomobject]` fixes were indeed effective in all respects (`.Count`, `[0]`, `.ForEach()`, `.Where()`), I checked with the latest code. The issue with `[DataTable]` is a different one that I'll address in a new issue.",
      "created_at": "2018-03-22T17:10:47Z",
      "updated_at": "2018-03-22T17:10:47Z"
    }
  ],
  "created_at": "2018-03-21T22:42:27Z",
  "number": 6456,
  "state": "closed",
  "title": "Treating scalars implicitly as collections doesn't work with all objects - some lack a .Count property, as do some objects that are implicitly treated as collections",
  "updated_at": "2018-03-24T17:27:14Z"
}