{
  "_url": "https://github.com/PowerShell/PowerShell/issues/18053",
  "author": "GeorgeBroughton",
  "body": "### Prerequisites\r\n\r\n- [X] Write a descriptive title.\r\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- [X] Search the existing issues.\r\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\r\n\r\n### Steps to reproduce\r\n\r\n - Install fedora 36\r\n - run the following commands in a TTY:\r\n ```bash\r\nsudo rpm --import https://packages.microsoft.com/keys/microsoft.asc\r\ncurl https://packages.microsoft.com/config/rhel/7/prod.repo | sudo tee /etc/yum.repos.d/microsoft.repo\r\nsudo dnf makecache\r\nsudo dnf install powershell\r\npwsh\r\nGet-ChildItem -Path \"/\"\r\n```\r\n - Press `Up` arrow on keyboard\r\n\r\n### Expected behavior\r\n\r\n```console\r\nPS /home/user> Get-ChildItem -Path \"/\"\r\n```\r\n\r\n\r\n### Actual behavior\r\n\r\n```console\r\nPS /home/user> OA\r\n```\r\n\r\n\r\n### Error details\r\n\r\n```console\r\nNo error produced\r\n```\r\n\r\n\r\n### Environment data\r\n\r\n```powershell\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.6\r\nPSEdition                      Core\r\nGitCommitId                    7.2.6\r\nOS                             Linux 5.19.6-200.fc36.x86_64 #1 SMP PREEMPT_DYNAMIC Wed Aug 31 17:58:15 UTC 2022\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\n\r\n### Visuals\r\n\r\n_No response_\r\n\r\n\r\n### Additional Info\r\n\r\nThis post is related to [Issue 16606](https://github.com/PowerShell/PowerShell/issues/16606)\r\n$TERM for me is `Linux` as it's a TTY i'm invoking it from.",
  "closed_at": "2022-10-05T04:01:22Z",
  "comments": [
    {
      "author": "237dmitry",
      "author_association": "NONE",
      "body": "Confirm:\r\nUp -- `0A`\r\nDown -- `0B`\r\nRight -- `0C`\r\nLeft -- `0D`\r\n\r\nAlso, arrows keys are being read incorrectly in the terminal emulator.\r\n\r\n```powershell\r\nPS > [console]::ReadKey()\r\n\r\nKeyChar    Key Modifiers\r\n-------    --- ---------\r\n       Escape         0\r\n\r\n# After pressing arrow key in prompt:\r\n# A:    UpArrow\r\n# B:    DownArrow\r\n# C:    RightArrow\r\n# D:    LeftArrow\r\n```\r\n\r\n![ArcoLinux_2022-09-08_10-29-25](https://user-images.githubusercontent.com/78153320/189061824-55fb4c8c-431f-44c4-b90c-e82faf513f4c.png)\r\n\r\nIn TTY `[console]::ReaKey()` detects pressing the arrows correctly but not working properly arrows.\r\nIn virtual terminal arrows working properly but in `[console]::ReadKey()` result is incorrect.\r\n",
      "created_at": "2022-09-08T07:45:18Z",
      "updated_at": "2022-09-08T07:45:18Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Is it dup #16443?",
      "created_at": "2022-09-08T09:29:40Z",
      "updated_at": "2022-09-08T09:29:40Z"
    },
    {
      "author": "GeorgeBroughton",
      "author_association": "NONE",
      "body": "> Is it dup #16443?\r\n\r\nPossibly. There have been a number of posts about it, however the terminal emulator has always been different. Not enough information in the other thread about which terminal emulator they're using.\r\n\r\nThis was taken from their thread:\r\n```ps\r\n$CurrentHost = Get-Host\r\n$key1 = $CurrentHost.UI.RawUI.ReadKey(\"NoEcho,IncludeKeyDown\")\r\n\r\n## A bug with Linux and Mac where arrow keys are return in 2 chars.  First is esc follow by A,B,C,D\r\nif ($key1.VirtualKeyCode -eq 0x1B) {\r\n   ## Found that we got an esc chair so we need to grab one more char\r\n   $key2 = $CurrentHost.UI.RawUI.ReadKey(\"NoEcho,IncludeKeyDown\")\r\n\r\n   ## We just care about up and down arrow mapping here for now.\r\n   if ($key2.VirtualKeyCode -eq 0x41) {\r\n      # VK_UP = 0x26 up-arrow\r\n      $key1.VirtualKeyCode = 0x26\r\n   }\r\n   if ($key2.VirtualKeyCode -eq 0x42) {\r\n      # VK_DOWN = 0x28 down-arrow\r\n      $key1.VirtualKeyCode = 0x28\r\n   }\r\n\r\n}\r\n\r\n$key1\r\n```\r\n\r\nThis is what i get when running directly from the TTY ![TTY](https://user-images.githubusercontent.com/17716439/189174550-58cda2d7-eee7-470a-a3a1-1a83e191773f.jpg)\r\n\r\nThis is what i get when running from SSH ![SSH](https://user-images.githubusercontent.com/17716439/189175260-b69f2cb4-1e19-408c-affe-7cc8f4ff4190.png)\r\n\r\nWorks in SSH, not in the TTY",
      "created_at": "2022-09-08T16:27:15Z",
      "updated_at": "2022-09-08T16:28:19Z"
    },
    {
      "author": "GeorgeBroughton",
      "author_association": "NONE",
      "body": "Wrote a different script now that i understand what the other guy was trying to do\r\n\r\n```ps\r\n$CurrentHost = Get-Host\r\n\r\nWrite-Host \"Press Up\"\r\n$Up = [PSCustomObject]@{\r\n        Key             = \"Up\"\r\n        VirtualKeyCode  = \"0x$('{0:X0}' -f $CurrentHost.UI.RawUI.ReadKey('NoEcho,IncludeKeyDown').VirtualKeyCode)\"\r\n}\r\n\r\nWrite-Host \"Press Down\"\r\n$Down = [PSCustomObject]@{\r\n        Key             = \"Down\"\r\n        VirtualKeyCode  = \"0x$('{0:X0}' -f $CurrentHost.UI.RawUI.ReadKey('NoEcho,IncludeKeyDown').VirtualKeyCode)\"\r\n}\r\n\r\nWrite-Host \"Press Left\"\r\n$Left = [PSCustomObject]@{\r\n        Key             = \"Left\"\r\n        VirtualKeyCode  = \"0x$('{0:X0}' -f $CurrentHost.UI.RawUI.ReadKey('NoEcho,IncludeKeyDown').VirtualKeyCode)\"\r\n}\r\n\r\nWrite-Host \"Press Right\"\r\n$Right = [PSCustomObject]@{\r\n        Key             = \"Right\"\r\n        VirtualKeyCode  = \"0x$('{0:X0}' -f $CurrentHost.UI.RawUI.ReadKey('NoEcho,IncludeKeyDown').VirtualKeyCode)\"\r\n}\r\n\r\n$Up,$Down,$Left,$Right\r\n```\r\n\r\nOutput from the TTY:\r\n![_DSC0164](https://user-images.githubusercontent.com/17716439/189186274-9b5d8289-fdf0-4e16-a532-57865b0888e7.jpg)\r\n\r\nSSH seems to work the other way around. The script sees both the escape character and the keycode. So i had to modify the script:\r\n```ps\r\n$CurrentHost = Get-Host\r\n\r\nWrite-Host \"Press Up\"\r\n$Up = [PSCustomObject]@{\r\n        Key             = \"Up\"\r\n        EscChar         = \"0x$('{0:X0}' -f $CurrentHost.UI.RawUI.ReadKey('NoEcho,IncludeKeyDown').VirtualKeyCode)\"\r\n        VirtualKeyCode  = \"0x$('{0:X0}' -f $CurrentHost.UI.RawUI.ReadKey('NoEcho,IncludeKeyDown').VirtualKeyCode)\"\r\n}\r\n\r\nWrite-Host \"Press Down\"\r\n$Down = [PSCustomObject]@{\r\n        Key             = \"Down\"\r\n        EscChar         = \"0x$('{0:X0}' -f $CurrentHost.UI.RawUI.ReadKey('NoEcho,IncludeKeyDown').VirtualKeyCode)\"\r\n        VirtualKeyCode  = \"0x$('{0:X0}' -f $CurrentHost.UI.RawUI.ReadKey('NoEcho,IncludeKeyDown').VirtualKeyCode)\"\r\n}\r\n\r\nWrite-Host \"Press Left\"\r\n$Left = [PSCustomObject]@{\r\n        Key             = \"Left\"\r\n        EscChar         = \"0x$('{0:X0}' -f $CurrentHost.UI.RawUI.ReadKey('NoEcho,IncludeKeyDown').VirtualKeyCode)\"\r\n        VirtualKeyCode  = \"0x$('{0:X0}' -f $CurrentHost.UI.RawUI.ReadKey('NoEcho,IncludeKeyDown').VirtualKeyCode)\"\r\n}\r\n\r\nWrite-Host \"Press Right\"\r\n$Right = [PSCustomObject]@{\r\n        Key             = \"Right\"\r\n        EscChar         = \"0x$('{0:X0}' -f $CurrentHost.UI.RawUI.ReadKey('NoEcho,IncludeKeyDown').VirtualKeyCode)\"\r\n        VirtualKeyCode  = \"0x$('{0:X0}' -f $CurrentHost.UI.RawUI.ReadKey('NoEcho,IncludeKeyDown').VirtualKeyCode)\"\r\n}\r\n\r\n$Up,$Down,$Left,$Right\r\n```\r\n\r\nWhich then shows this:\r\n![image](https://user-images.githubusercontent.com/17716439/189187315-709236c3-321b-4794-a456-99a5a29afc90.png)\r\n",
      "created_at": "2022-09-08T17:30:04Z",
      "updated_at": "2022-09-08T17:30:04Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "The `Console.Key` re-write work (https://github.com/dotnet/runtime/pull/72193) was checked in .NET on 8/1 and will be included in the RC1 release. This issue is likely to be addressed by that change. Please verify if that's the case after we release the PowerShell RC1 this month.",
      "created_at": "2022-09-08T20:45:29Z",
      "updated_at": "2022-09-08T20:45:29Z"
    },
    {
      "author": "GeorgeBroughton",
      "author_association": "NONE",
      "body": "Will do.",
      "created_at": "2022-09-08T20:50:08Z",
      "updated_at": "2022-09-08T20:50:08Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as \"Waiting on Author\" and has not had any activity for **7 day**. It has been closed for housekeeping purposes.",
      "created_at": "2022-10-05T04:01:21Z",
      "updated_at": "2022-10-05T04:01:21Z"
    }
  ],
  "created_at": "2022-09-07T23:01:09Z",
  "labels": [
    "Issue-Question",
    "WG-Interactive-Console",
    "Waiting on Author",
    "Needs-Triage"
  ],
  "number": 18053,
  "state": "closed",
  "title": "Arrow keys don't work in the powershell console when invoked from a TTY",
  "updated_at": "2022-10-05T04:01:22Z"
}