{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10641",
  "author": "SteveL-MSFT",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nAdd new `ConciseView` as Experimental Feature.  When this ExperimentalFeature is enabled, it defaults to `ConciseView`, otherwise, it defaults to `NormalView`.  `CategoryView` is still supported.\r\nWith new `ConciseView`, if the error is not from a script or parser error, then it's a single line error message.  Otherwise, you get a multiline error message that isn't all red showing the script file (if available), line\r\nthat contains the error and a pointer and error message showing where the error is in that line.  If the terminal doesn't support Virtual Terminal, then vt100 color codes are not used.  The error message within the line display will wrap at whitespace making it easier to read.\r\n\r\nA new `$Host.PrivateData.ErrorAccentColor` member is added so users can customize the color.  `$ErrorView` is now of type `[System.Management.Automation.ErrorView]` instead of a string.\r\n\r\nSome cleanup to the formatting script with regards to double double quotes vs single quotes where appropriate.  Also changed the PositionMessage when truncating to use unicode ellipsis instead of 3 dots.\r\n\r\n![Imgur](https://i.imgur.com/86gABZH.png)\r\n\r\n## PR Context\r\n\r\nImplement $ErrorView part of https://github.com/PowerShell/PowerShell-RFC/pull/228\r\n\r\nFix https://github.com/PowerShell/PowerShell/issues/3647\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [ ] None\r\n    - **OR**\r\n    - [x] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [x] Experimental feature name(s): PSErrorView\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [x] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [X] Issue filed: https://github.com/MicrosoftDocs/PowerShell-Docs/issues/4851\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2019-10-04T23:52:58Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT would it make sense to color the token / ast element in the quoted line(s) that caused the error in red? For parse exceptions, maybe highlighting everything after the point it occurs is best, but having the troublesome cmdlet or argument highlighted in red may make this significantly more readable, and obviates the need for an arrow pointing at it, which (in conjunction with leading whitespace) takes up space that may be needed to display the error message itself.",
      "created_at": "2019-09-27T22:10:23Z",
      "updated_at": "2019-09-27T22:10:23Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@vexx32 there are certainly other visualization improvements we could consider.  One concern about using some highlight on the section in question without the arrow pointing is that it wouldn't work well on systems that don't support vt100.  The current solution will detect the terminal doesn't support VT and simply omit the color codes but the content is still consumable.",
      "created_at": "2019-09-27T23:29:37Z",
      "updated_at": "2019-09-27T23:29:37Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT understood, but I imagine combining the arrow with a highlight probably is still a good idea for VT-enabled terminals? \ud83d\ude42 ",
      "created_at": "2019-09-28T00:11:12Z",
      "updated_at": "2019-09-28T00:11:54Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@vexx32 let me try something to see how it looks",
      "created_at": "2019-09-28T00:51:42Z",
      "updated_at": "2019-09-28T00:51:42Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@vexx32 how about this?\r\n\r\n![img](https://i.imgur.com/pkPWrxc.png)",
      "created_at": "2019-09-28T14:47:49Z",
      "updated_at": "2019-09-28T14:47:49Z"
    },
    {
      "author": "anmenaga",
      "author_association": "CONTRIBUTOR",
      "body": "@JamesWTruher Can you please review this when you get a chance? Thank you.",
      "created_at": "2019-10-01T19:32:29Z",
      "updated_at": "2019-10-01T19:32:29Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT very nice! Could we potentially have the first line mention `Get-Item: error at ...` instead of just `Get-Item: at ...` ?\r\n\r\nIt would also be nice to put on the board for the future that you could have `Get-Item: fatal error at ...` for terminating errors. \ud83d\ude42 ",
      "created_at": "2019-10-01T19:58:59Z",
      "updated_at": "2019-10-01T19:58:59Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@vexx32 don't have a way yet to determine if terminating or non-terminating, when that eventually shows up, we can update this.  I change the text to `error in` instead of the current `in` (which is already better than `at` since the line number isn't on that line anymore)",
      "created_at": "2019-10-01T22:07:40Z",
      "updated_at": "2019-10-01T22:07:40Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@vexx32 checkout the updated image above.  I wonder if `error in` should be in error color?",
      "created_at": "2019-10-02T00:06:29Z",
      "updated_at": "2019-10-02T00:06:29Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT yeah I'd say that's a good idea.",
      "created_at": "2019-10-02T00:08:35Z",
      "updated_at": "2019-10-02T00:08:35Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": ">  I wonder if error in should be in error color?\r\n\r\nI don't think it adds much to display `error in` using the error color.  It isn't part of any actual error message. ",
      "created_at": "2019-10-02T00:22:40Z",
      "updated_at": "2019-10-02T00:23:04Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@rkeithhill it makes the file path pop out more, but I'm ok either way",
      "created_at": "2019-10-02T00:55:43Z",
      "updated_at": "2019-10-02T00:55:43Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "The era of color ~~television~~ PowerShell :-)\r\n",
      "created_at": "2019-10-05T15:34:43Z",
      "updated_at": "2019-10-05T15:34:43Z"
    }
  ],
  "created_at": "2019-09-27T20:47:54Z",
  "number": 10641,
  "state": "closed",
  "title": "Add ConciseView for $ErrorView",
  "updated_at": "2019-10-05T15:34:43Z"
}