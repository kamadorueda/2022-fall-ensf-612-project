{
  "_url": "https://github.com/PowerShell/PowerShell/issues/473",
  "author": "palladia",
  "body": null,
  "closed_at": "2017-10-08T17:37:26Z",
  "comments": [
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "This would not make sense, PFX certificates are only used on Windows.\n",
      "created_at": "2016-02-03T17:19:22Z",
      "updated_at": "2016-02-03T17:19:22Z"
    },
    {
      "author": "palladia",
      "author_association": "CONTRIBUTOR",
      "body": "I am certainly not an expert on certificates, but just because it's a Windows thing, it doesn't mean it shouldn't be implemented on Linux.  Certificates are basically wrappers for public keys, and are there alternate mechanisms for Linux?  What happens if we need to inter-work between Linux and Windows?\n\nI hope whoever gets assigned to this can investigate this further.\n",
      "created_at": "2016-02-03T17:49:50Z",
      "updated_at": "2016-02-03T17:49:50Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "I do not think this should be implemented on Linux. The cmdlet is meant to return the PFX certificates stored on the system, of which there are and will not be any on Linux.\n",
      "created_at": "2016-02-03T18:01:35Z",
      "updated_at": "2016-02-03T18:01:35Z"
    },
    {
      "author": "bgever",
      "author_association": "NONE",
      "body": "PFX is a very common certificate encapsulation format, many online services support it to pass certificate structures around that are password protected.\r\n\r\nIt's also the default way to support [HTTPS with the Kestrel server](https://docs.microsoft.com/en-us/aspnet/core/fundamentals/servers/kestrel) in .NET Core 1.1.\r\n\r\nTherefore I think PFX support shouldn't be dismissed. I did see that with [release v6.0.0-alpha.17](https://github.com/PowerShell/PowerShell/releases/tag/v6.0.0-alpha.17) #3224 the Get-PfxCertificate is now supported. \ud83d\udc4d ",
      "created_at": "2017-05-06T09:57:27Z",
      "updated_at": "2017-05-06T09:57:27Z"
    },
    {
      "author": "PsychoData",
      "author_association": "NONE",
      "body": "Just to add to this, there is also a -FIlePath to import from a file\r\n` Get-PfxCertificate -FilePath $certFile`\r\n\r\nWhich I am using to then check the thumbprint of that certificate without importing it into my windows store, this use case could be equally useful on Linuxes. \r\n",
      "created_at": "2017-06-08T14:50:21Z",
      "updated_at": "2017-06-08T14:50:21Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT Should we re-open this for Unix?",
      "created_at": "2017-06-11T10:22:41Z",
      "updated_at": "2017-06-11T10:22:41Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "We'll need to do more research on PowerShell cert management on Linux, but this currently is not a priority.",
      "created_at": "2017-06-11T14:29:43Z",
      "updated_at": "2017-06-11T14:29:43Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I think OpenSSL utilities is good start point for the research.",
      "created_at": "2017-06-11T15:47:40Z",
      "updated_at": "2017-06-11T15:47:40Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": " Get-PfxCertificate was added in #3224 for Windows and Unix.\r\nWhat do we track here? Maybe close?",
      "created_at": "2017-10-07T18:09:00Z",
      "updated_at": "2017-10-07T18:09:00Z"
    }
  ],
  "created_at": "2016-02-02T22:08:14Z",
  "labels": [
    "OS-macOS",
    "OS-Linux",
    "WG-Cmdlets",
    "Resolution-Fixed"
  ],
  "number": 473,
  "state": "closed",
  "title": "Get-pfxCertificate cmdlet not working",
  "updated_at": "2017-10-08T17:37:26Z"
}