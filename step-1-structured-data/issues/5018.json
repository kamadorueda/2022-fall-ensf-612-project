{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5018",
  "author": "praveenc",
  "body": "<!--\r\n\r\nIf it is a bug report:\r\n- make sure you are able to repro it on the latest released version. \r\nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://github.com/PowerShell/PowerShell/blob/master/docs/KNOWNISSUES.md).\r\n- Fill out the following repro template\r\n\r\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\r\n-->\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\nPS D:\\Program Files\\Powershell\\6.0.0-beta.7>$Error.Clear()\r\nPS D:\\Program Files\\Powershell\\6.0.0-beta.7>$Error[0] | fl -Force *\r\nPS D:\\Program Files\\Powershell\\6.0.0-beta.7>Login-AzureRmAccount\r\nLogin-AzureRmAccount : Could not load type 'System.Drawing.Drawing2D.InterpolationMode' from assembly 'System.Drawing,\r\nVersion=4.0.0.0, Culture=neutral, PublicKeyToken=xxxxxxxx'.\r\nAt line:1 char:1\r\n+ Login-AzureRmAccount\r\n+ ~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : CloseError: (:) [Add-AzureRmAccount], AadAuthenticationFailedException\r\n    + FullyQualifiedErrorId : Microsoft.Azure.Commands.Profile.AddAzureRMAccountCommand\r\n\r\nPS D:\\Program Files\\PowerShell\\6.0.0-beta.7>\r\nUnhandled Exception: System.TypeLoadException: Could not load type 'System.Drawing.Icon' from assembly 'System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.\r\n   at System.Windows.Forms.Form.Dispose(Boolean disposing)\r\n   at System.ComponentModel.Component.Finalize()\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```none\r\nPopup the Azure Login window\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n```none\r\nPowershell Crashes with popping up Window \"powershell.exe has stopped working\"\r\n-> Close the Program\r\n-> Debug the Program\r\n```\r\n![psbeta-loginazure-crash](https://user-images.githubusercontent.com/1090396/31231403-c129988a-a9b4-11e7-8a1f-5fe74ee430b7.png)\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.0-beta\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.0-beta.7\r\nOS                             Microsoft Windows 10.0.14393\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2017-10-09T21:56:14Z",
  "comments": [
    {
      "author": "praveenc",
      "author_association": "NONE",
      "body": "```\r\nOS Name:                   Microsoft Windows 10 Enterprise\r\nOS Version:                10.0.14393 N/A Build 14393\r\nOS Manufacturer:           Microsoft Corporation\r\nOS Configuration:          Member Workstation\r\nOS Build Type:             Multiprocessor Free\r\n```",
      "created_at": "2017-10-05T14:08:24Z",
      "updated_at": "2017-10-05T14:08:24Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "The AzureRM module isn't CoreCLR compatible, you have to use the [AzureRM.NetCore](https://www.powershellgallery.com/packages/AzureRM.Netcore) module.  However, PowerShell shouldn't crash either.",
      "created_at": "2017-10-05T15:06:08Z",
      "updated_at": "2017-10-05T15:06:08Z"
    },
    {
      "author": "praveenc",
      "author_association": "NONE",
      "body": "Thanks for the Pointer on AzureRM.NetCore module! \r\nThis may not be the right place to ask - but any idea when does `Login-AzureRmAccount` in `AzureRM.NetCore` Module would support certificate based authentication?\r\nI'd appreciate if you could point me to the right forum if this is not",
      "created_at": "2017-10-05T18:43:49Z",
      "updated_at": "2017-10-05T18:44:17Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@praveenc try https://github.com/Azure/azure-powershell",
      "created_at": "2017-10-05T19:15:01Z",
      "updated_at": "2017-10-05T19:15:01Z"
    },
    {
      "author": "anmenaga",
      "author_association": "CONTRIBUTOR",
      "body": "Regarding process termination...\r\nI'd say this is expected behavior, not a bug.\r\nUnfortunately in this case the unhandled exception is generated on CoreCLR's finalizer thread.\r\nThere is not much we can do about this exception from PS code.\r\nPrinting an error and process shutdown is default and normal in this kind of situations.\r\n\r\n```\r\n(b68.2ee0): CLR exception - code e0434352 (!!! second chance !!!)\r\nCLR exception type: System.TypeLoadException\r\n    \"Could not load type 'System.Drawing.Icon' from assembly 'System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.\"\r\nKERNELBASE!RaiseException+0x68:\r\n00007ffc`11187788 488b8c24c0000000 mov     rcx,qword ptr [rsp+0C0h] ss:0000003b`a75fa8c0=00009bfd7519a47d\r\n0:003> kn\r\n # Call Site\r\n00 KERNELBASE!RaiseException+0x68 [d:\\rs1\\minkernel\\kernelbase\\xcpt.c @ 904] \r\n01 coreclr!__RethrowException+0x13 [f:\\dd\\vctools\\crt\\vcruntime\\src\\eh\\frame.cpp @ 1274] \r\n02 coreclr!__CxxCallCatchBlock+0x151 [f:\\dd\\vctools\\crt\\vcruntime\\src\\eh\\frame.cpp @ 1342] \r\n03 ntdll!RcFrameConsolidation+0x3 [d:\\rs1\\minkernel\\ntos\\rtl\\amd64\\capture.asm @ 596] \r\n04 coreclr!MethodDesc::MakeJitWorker+0x312 [e:\\a\\_work\\308\\s\\src\\vm\\prestub.cpp @ 497] \r\n05 coreclr!MethodDesc::DoPrestub+0xaa9 [e:\\a\\_work\\308\\s\\src\\vm\\prestub.cpp @ 1537] \r\n06 coreclr!PreStubWorker+0x3c1 [e:\\a\\_work\\308\\s\\src\\vm\\prestub.cpp @ 1121] \r\n07 coreclr!ThePreStub+0x55 [E:\\A\\_work\\308\\s\\src\\vm\\amd64\\ThePreStubAMD64.asm @ 22] \r\n08 System_ComponentModel_Primitives!System.ComponentModel.Component.Finalize()+0x13 [E:\\A\\_work\\774\\s\\corefx\\src\\System.ComponentModel.Primitives\\src\\System\\ComponentModel\\Component.cs @ 31] \r\n09 coreclr!FastCallFinalizeWorker+0x6 [E:\\A\\_work\\308\\s\\src\\vm\\amd64\\CallDescrWorkerAMD64.asm @ 27] \r\n0a coreclr!MethodTable::CallFinalizer+0x94 [e:\\a\\_work\\308\\s\\src\\vm\\methodtable.cpp @ 3935] \r\n0b coreclr!CallFinalizer+0x48 [e:\\a\\_work\\308\\s\\src\\vm\\finalizerthread.cpp @ 108] \r\n0c coreclr!FinalizerThread::DoOneFinalization+0x9c [e:\\a\\_work\\308\\s\\src\\vm\\finalizerthread.cpp @ 187] \r\n0d coreclr!FinalizerThread::FinalizeAllObjects+0x89 [e:\\a\\_work\\308\\s\\src\\vm\\finalizerthread.cpp @ 284] \r\n0e coreclr!FinalizerThread::FinalizerThreadWorker+0xca [e:\\a\\_work\\308\\s\\src\\vm\\finalizerthread.cpp @ 642] \r\n0f coreclr!ManagedThreadBase_DispatchInner+0x43 [e:\\a\\_work\\308\\s\\src\\vm\\threads.cpp @ 9204] \r\n10 coreclr!ManagedThreadBase_DispatchMiddle+0x82 [e:\\a\\_work\\308\\s\\src\\vm\\threads.cpp @ 9253] \r\n11 coreclr!ManagedThreadBase_DispatchOuter+0xb4 [e:\\a\\_work\\308\\s\\src\\vm\\threads.cpp @ 9492] \r\n12 coreclr!ManagedThreadBase_NoADTransition+0x41 [e:\\a\\_work\\308\\s\\src\\vm\\threads.cpp @ 9575] \r\n13 coreclr!ManagedThreadBase::FinalizerBase+0x41 [e:\\a\\_work\\308\\s\\src\\vm\\threads.cpp @ 9601] \r\n14 coreclr!FinalizerThread::FinalizerThreadStart+0x9c [e:\\a\\_work\\308\\s\\src\\vm\\finalizerthread.cpp @ 774] \r\n15 coreclr!Thread::intermediateThreadProc+0x8b [e:\\a\\_work\\308\\s\\src\\vm\\threads.cpp @ 2594] \r\n16 KERNEL32!BaseThreadInitThunk+0x14 [d:\\rs1\\base\\win32\\client\\thread.c @ 64] \r\n17 ntdll!RtlUserThreadStart+0x21 [d:\\rs1\\minkernel\\ntdll\\rtlstrt.c @ 997] \r\n```",
      "created_at": "2017-10-09T21:56:14Z",
      "updated_at": "2017-10-09T21:56:14Z"
    },
    {
      "author": "praveenc",
      "author_association": "NONE",
      "body": "Wow .. I can't believe that if a \"type\" is not found it would terminate and shutdown the whole process? \r\nWould this be the case for all unsupported types by CoreCLR then? \r\nIf so, do you guys have a list of these unsupported types by CoreCLR somewhere?",
      "created_at": "2017-10-09T22:52:15Z",
      "updated_at": "2017-10-09T22:52:15Z"
    },
    {
      "author": "anmenaga",
      "author_association": "CONTRIBUTOR",
      "body": "1: Yes, but the exact exception type does not really matter: it can be TypeLoadException or InvalidArgumentException or any other exception type...\r\nWhat matters is if the thread, on which exception is generated, has any handlers for it.\r\nPowershell engine code has exception handlers on its threads; that is why most cmdlets/scripts don't shutdown PS process even if they generate unexpected exceptions (for example unexpected division by zero while doing some math in a cmdlet/script). But in this case the unhandled exception happens on .NET thread that PS has no control of, so the process is getting shut down.\r\n\r\n2: Same as 1; it depends on where (on which thread) exception/error happens.\r\n\r\n3: [CoreFX Github page](https://github.com/dotnet/corefx) points to this [.NET Core API Browser](https://docs.microsoft.com/en-us/dotnet/api/?view=netcore-2.0).",
      "created_at": "2017-10-11T01:34:03Z",
      "updated_at": "2017-10-11T01:34:03Z"
    },
    {
      "author": "vkvikaskmr",
      "author_association": "NONE",
      "body": "We have a module that is using Windows.Forms which does not seem to work in powershell 6.0.1. Is there an alternative? ",
      "created_at": "2018-02-06T08:59:22Z",
      "updated_at": "2018-02-06T08:59:22Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@vkvikaskmr corefx doesn't support WinForms and I believe they have no plans to support it since it's not cross-platform compatible.  You can add your feedback to their issue here: https://github.com/dotnet/corefx/issues/21803",
      "created_at": "2018-02-06T18:00:05Z",
      "updated_at": "2018-02-06T18:00:05Z"
    }
  ],
  "created_at": "2017-10-05T14:06:36Z",
  "labels": [
    "Issue-Bug",
    "Resolution-By Design"
  ],
  "number": 5018,
  "state": "closed",
  "title": "Powershell Crashes whilst using Login-AzureRmAccount Cmdlet on Windows 10",
  "updated_at": "2018-02-06T18:00:06Z"
}