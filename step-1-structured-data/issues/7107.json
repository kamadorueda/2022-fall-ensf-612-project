{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7107",
  "author": "tlindsay42",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\n- Windows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nIf it is a bug report:\r\n- make sure you are able to repro it on the latest released version. \r\nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n- Fill out the following repro template:\r\n\r\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\r\n-->\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\nPS C:\\> Get-Help -Name Connect-Armor -Functionality\r\nGet-Help : Missing an argument for parameter 'Functionality'. Specify a parameter of type 'System.String[]' and try again.\r\nAt line:1 char:30\r\n+ Get-Help -Name Connect-Armor -Functionality\r\n+                              ~~~~~~~~~~~~~~\r\n+ CategoryInfo          : InvalidArgument: (:) [Get-Help], ParameterBindingException\r\n+ FullyQualifiedErrorId : MissingArgument,Microsoft.PowerShell.Commands.GetHelpCommand\r\n\r\nPS C:\\> ( Get-Help -Name Connect-Armor ).Functionality\r\nArmor session management\r\n\r\nPS C:\\> $help = Get-Help -Name Connect-Armor -Full; $help.Functionality\r\nArmor session management\r\n\r\nPS C:\\> ( ( Get-Help -Name Connect-Armor -Full ).ToString() | Select-String -Pattern 'FUNCTIONALITY|COMPONENT' ).Count\r\n0\r\n\r\nPS C:\\> Get-Help -Name Connect-Armor -Full | Select-String -Pattern 'FUNCTIONALITY|COMPONENT'\r\n\r\n@{parameters=@{parameter=System.Management.Automation.PSObject[]}; inputTypes=@{inputType=@{type=@{name=None- this function does not accept pipeline inputs.}}}; returnValues=@{returnValue=@{type=@{name=ArmorSession}}};\r\nalertSet=@{alert=System.Management.Automation.PSObject[]}; description=System.Management.Automation.PSObject[]; details=@{name=Connect-Armor}; examples=@{example=System.Management.Automation.PSObject[]};\r\nrelatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; syntax=@{syntaxItem=@{parameter=System.Management.Automation.PSObject[]; name=Connect-Armor}}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10;\r\nxmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Connect-Armor; Category=Function; Synopsis=; Component=Armor API; Role=; Functionality=Armor session management; ModuleName=Armor}\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\nThe new(ish) Functionality, Component, and Role help sections should output the section content for all standard use cases or a null string if not set. \r\n\r\n```none\r\n\r\n```\r\n\r\nActual behavior\r\n---------------\r\nThe `Get-Help` command throws an error if the corresponding parameter is called, and does not show up in the Full help output. \r\n\r\n```none\r\n\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n6.0.2 + 6.1.0 preview 3\r\n\r\nReference: https://github.com/PowerShell/platyPS/issues/373\r\n",
  "closed_at": "2018-06-19T18:01:25Z",
  "comments": [
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Here's what I think needs addressing (all points should probably be separate issues):\r\n\r\n* `about_comment_based_help` not providing guidance on how to fill in the `.FUNCTIONALITY` and `.COMPONENT` and `.ROLE` sections; it seems that no built-in cmdlets have these sections filled in.\r\n\r\n* `Get-Help -Full / -Detailed` not outputting these sections at all - they can only be retrieved as properties on the objects output by `Get-Help`\r\n\r\n   *  A quick workaround is to pipe the `Get-Help` command to `Format-List`.\r\n\r\n<!--  -->\r\n\r\n* The unexpected stringification behavior of `Get-Help` output (see below).\r\n\r\n---\r\n\r\nAs for `Get-Help -Functionality` / `Get-Help -Component`:\r\n\r\nThese are not _switches_ that output the section of interest.\r\nRather, they act as _filter parameters_ that accept one or more values (with wildcard support) to _select_ (list) help topics with matching sections.\r\n\r\nIn your case:\r\n\r\n```powershell\r\n# Ditto for Get-Help -Component *armor*\r\nPS> Get-Help  -Functionality *armor* \r\n\r\nName                              Category  Module                    Synopsis                                                                                                                 \r\n----                              --------  ------                    --------                                                                                                                 \r\nConnect-Armor                     Function                            Connects to the Armor API and establishes a session.                                                                     \r\n```\r\n\r\n---\r\n\r\nAs for your attempts to find information in the help text using `Select-String`:\r\n\r\nThe real test would be (and indeed it yields no result, because said sections are missing):\r\n\r\n```powershell\r\nPS> Get-Help Connect-Armor -Full | Out-String -Stream | Select-String 'FUNCTIONALITY|COMPONENT'\r\n```\r\n\r\nThat is, `Out-String -Stream` is needed for `Select-String` to operate on the same output as what would print to the console; it forces use of the default output formatting.\r\n\r\nHowever - although it is a separate issue - the current behavior of implicit and explicit stringification is questionable:\r\n\r\nApplying `.ToString()` directly *always* yields the *empty string*:\r\n\r\n```powershell\r\nPS> '' -eq (Get-Help Get-ChildItem).ToString()\r\nTrue\r\n```\r\nBy contrast, _implicit_ stringification - which happens inside `\"...\"` and when piping to a string-binding cmdlet such as `Select-Object` - produces the equivalent of `.psobject.ToString()`; \r\n\r\n```powershell\r\nPS> (Get-Help Get-ChildItem).psobject.ToString()\r\n@{alertSet=@{alert=System.Management.Automation.PSObject[]}; inputTypes=@{inputType=@{type=@{name=System.String}; description=System.Management.Automation.PSObject[]}}; relatedLinks=@{navigationLink=System.Management.Automation.PSObject[]}; details=@{verb=Get; noun=ChildItem; description=System.Management.Automation.PSObject[]; name=Get-ChildItem}; parameters=@{parameter=System.Management.Automation.PSObject[]}; examples=@{example=System.Management.Automation.PSObject[]}; returnValues=@{returnValue=System.Management.Automation.PSObject[]}; syntax=@{syntaxItem=System.Management.Automation.PSObject[]}; description=System.Management.Automation.PSObject[]; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; xmlns:MSHelp=http://msdn.microsoft.com/mshelp; Name=Get-ChildItem; Category=Cmdlet; Synopsis=Gets the items and child items in one or more specified locations.; Component=; Role=; Functionality=; PSSnapIn=; ModuleName=Microsoft.PowerShell.Management}\r\n```\r\n\r\nIn fact, this behavior is tied to _type_ `[pscustomobject]`, which is what `Get-Help` outputs: #6163 asks for `.ToString()` and `.psobject.ToString()` to be the same, though in the specific case of `Get-Help` output you could argue that the ETS should be used to provide a `.ToString()` method that renders the help _text_ (an implicit `Out-String`).",
      "created_at": "2018-06-19T14:16:16Z",
      "updated_at": "2018-06-19T14:16:41Z"
    },
    {
      "author": "tlindsay42",
      "author_association": "CONTRIBUTOR",
      "body": "Agreed on all points and thank you for the detailed explanation, @mklement0.  I'll create separate issues for each.",
      "created_at": "2018-06-19T16:23:29Z",
      "updated_at": "2018-06-19T16:23:29Z"
    },
    {
      "author": "tlindsay42",
      "author_association": "CONTRIBUTOR",
      "body": "Closing in favor of:\r\n* #7113 \r\n* #7114\r\n* #7115\r\n* #7116\r\n",
      "created_at": "2018-06-19T18:01:25Z",
      "updated_at": "2018-06-19T18:01:25Z"
    },
    {
      "author": "Diti",
      "author_association": "NONE",
      "body": "All linked topics are stale since 2018. I believe these sections should NOT be used.",
      "created_at": "2022-05-09T19:32:36Z",
      "updated_at": "2022-05-09T19:32:36Z"
    }
  ],
  "created_at": "2018-06-19T00:52:24Z",
  "labels": [
    "Issue-Question",
    "WG-Interactive-HelpSystem",
    "Resolution-Answered"
  ],
  "number": 7107,
  "state": "closed",
  "title": "Functionality, Component, and Role Comment-Based Help sections don't work as expected",
  "updated_at": "2022-05-09T19:32:36Z"
}