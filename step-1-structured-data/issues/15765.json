{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15765",
  "author": "lselden",
  "body": "Fix for issue #9284 - Escape fields that contain quotes and newlines, not just those that contain the delimiter\r\n\r\n# PR Summary\r\n\r\nThis PR fixes the case of CSV fields that include double quotes or newlines in their values. If a Column value contains `\"`,`\\r`,`\\n` or the delimiter then it will be marked as needing to be surrounded by quotes.\r\n\r\nThis follows [RFC-4180 rules](https://datatracker.ietf.org/doc/html/rfc4180#section-2) as to what characters trigger a field to be quoted (except it allows for different delimiters than the comma). This also follows how `ConvertFrom-Csv` parses input CSV files.\r\n\r\n## PR Context\r\n\r\n`-UseQuotes AsNeeded` currently only looks for delimiters, which means that the field `Hello,World` will be surrounded in quotes, however the field `Hello\"World` would not be surrounded in quotes, causing this kind of embarassing slip-up:\r\n\r\n```powershell\r\n$testObj = [pscustomobject]@{ Greet = \"Hello\"; Me = \"`\"\"; Here = \"World\" };\r\n# Greet Me Here\r\n# ----- -- ----\r\n# Hello \"  World\r\n\r\n$str = $testObj | convertto-csv -UseQuotes AsNeeded\r\n# Greet,Me,Here\r\n# Hello,\",World  <-- Should be 'Hello,\"\"\"\",World'\r\n\r\n$str | convertfrom-csv\r\n# Greet Me     Here\r\n# ----- --     ----\r\n# Hello ,World\r\n```\r\n\r\nNewlines are another risk, since they're interpreted as completely different rows.\r\n\r\n```powershell\r\n$testObj = [pscustomobject]@{ FirstColumn = \"Hello\"; SecondColumn = \"World`r`nGoodbye\" }\r\nFirstColumn,SecondColumn\r\nHello,World\r\nGoodbye\r\n```\r\n\r\n**Performance Caveat:** This version is searching for the existence of 4 characters (using `string.IndexOfAny(chars)` instead of the original 1 (`string.Contains(char)`. Based on my benchmarks this change does have a *miniscule* increase in time for that single operation. However, in my na\u00efve in-memory benchmarks against a 100MB CSV file, using `-UseQuotes AsNeeded` was slightly faster than `-UseQuotes Always` or `-QuoteFields`. My guess is that I didn't need to allocate as much memory for those unneeded quotes.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [X] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [X] Issue filed: [7796](https://github.com/MicrosoftDocs/PowerShell-Docs/issues/7796)\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [X] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [X] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and opened an issue in the relevant tool repository. This may include:\r\n        - [ ] Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode\r\n        (which runs in a different PS Host).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n",
  "closed_at": "2021-08-04T21:47:58Z",
  "comments": [
    {
      "author": "microsoft-cla-retired[bot]",
      "author_association": "NONE",
      "body": "[![CLA assistant check](https://cla.opensource.microsoft.com/pull/badge/signed)](https://cla.opensource.microsoft.com/PowerShell/PowerShell?pullRequest=15765) <br/>All CLA requirements met.",
      "created_at": "2021-07-13T05:25:00Z",
      "updated_at": "2021-07-13T05:32:47Z"
    },
    {
      "author": "lselden",
      "author_association": "CONTRIBUTOR",
      "body": "Re: Testing - Added [additional tests](https://github.com/PowerShell/PowerShell/pull/15765/commits/c712df9199858563923f532c6305bf3232759053) for detecting delimiters, newlines and quotes. I did put the test objects inside the `It` block, since they were only used per-test - let me know if they should be hoisted up to the Context's `BeforeAll` section.",
      "created_at": "2021-07-13T16:16:20Z",
      "updated_at": "2021-07-13T16:16:20Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2021-07-22T14:00:38Z",
      "updated_at": "2021-07-22T14:00:38Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.2.0-preview.9` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.2.0-preview.9)\n",
      "created_at": "2021-08-23T18:35:53Z",
      "updated_at": "2021-08-23T18:35:53Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.2.0-preview.10` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.2.0-preview.10)\n",
      "created_at": "2021-09-28T23:17:44Z",
      "updated_at": "2021-09-28T23:17:44Z"
    }
  ],
  "created_at": "2021-07-13T05:24:48Z",
  "number": 15765,
  "state": "closed",
  "title": "`ConvertTo-Csv`: Quote fields with quotes and newlines when using `-UseQuotes AsNeeded`",
  "updated_at": "2021-09-28T23:17:44Z"
}