{
  "_url": "https://github.com/PowerShell/PowerShell/issues/18281",
  "author": "spottedmahn",
  "body": "### Prerequisites\n\n- [X] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\n\n### Steps to reproduce\n\nexecute: `New-EventLog -LogName Application -Source \"Blah Blah\"`\n\n### Expected behavior\n\n```console\nwhatever the previous output was in 5.X\n```\n\n\n### Actual behavior\n\n```console\n>new-eventlog: The term 'new-eventlog' is not recognized as a name of a cmdlet, function, script file, or executable program.\r\nCheck the spelling of the name, or if a path was included, verify that the path is correct and try again.\n```\n\n\n### Error details\n\n```console\n>\r\nException             :\r\n    Type        : System.Management.Automation.CommandNotFoundException\r\n    ErrorRecord :\r\n        Exception             :\r\n            Type    : System.Management.Automation.ParentContainsErrorRecordException\r\n            Message : The term 'new-eventlog' is not recognized as a name of a cmdlet, function, script file, or\r\nexecutable program.\r\n                      Check the spelling of the name, or if a path was included, verify that the path is correct and\r\ntry again.\r\n            HResult : -2146233087\r\n        TargetObject          : new-eventlog\r\n        CategoryInfo          : ObjectNotFound: (new-eventlog:String) [], ParentContainsErrorRecordException\r\n        FullyQualifiedErrorId : CommandNotFoundException\r\n        InvocationInfo        :\r\n            ScriptLineNumber : 1\r\n            OffsetInLine     : 1\r\n            HistoryId        : 6\r\n            Line             : new-eventlog -logname application -source \"Blah Blah\"\r\n            PositionMessage  : At line:1 char:1\r\n                               + new-eventlog -logname application -source \"Blah Blah\"\r\n                               + ~~~~~~~~~~~~\r\n            InvocationName   : new-eventlog\r\n            CommandOrigin    : Internal\r\n        ScriptStackTrace      : at <ScriptBlock>, <No file>: line 1\r\n    CommandName : new-eventlog\r\n    TargetSite  :\r\n        Name          : LookupCommandInfo\r\n        DeclaringType : System.Management.Automation.CommandDiscovery, System.Management.Automation,\r\nVersion=7.2.6.500, Culture=neutral, PublicKeyToken=31bf3856ad364e35\r\n        MemberType    : Method\r\n        Module        : System.Management.Automation.dll\r\n    Message     : The term 'new-eventlog' is not recognized as a name of a cmdlet, function, script file, or\r\nexecutable program.\r\n                  Check the spelling of the name, or if a path was included, verify that the path is correct and try\r\nagain.\r\n    Data        : System.Collections.ListDictionaryInternal\r\n    Source      : System.Management.Automation\r\n    HResult     : -2146233087\r\n    StackTrace  :\r\n   at System.Management.Automation.CommandDiscovery.LookupCommandInfo(String commandName, CommandTypes commandTypes,\r\nSearchResolutionOptions searchResolutionOptions, CommandOrigin commandOrigin, ExecutionContext context)\r\n   at System.Management.Automation.CommandDiscovery.TryModuleAutoDiscovery(String commandName, ExecutionContext\r\ncontext, String originalCommandName, CommandOrigin commandOrigin, SearchResolutionOptions searchResolutionOptions,\r\nCommandTypes commandTypes, Exception& lastError)\r\n   at System.Management.Automation.CommandDiscovery.LookupCommandInfo(String commandName, CommandTypes commandTypes,\r\nSearchResolutionOptions searchResolutionOptions, CommandOrigin commandOrigin, ExecutionContext context)\r\n   at System.Management.Automation.ExecutionContext.CreateCommand(String command, Boolean dotSource)\r\n   at System.Management.Automation.PipelineOps.AddCommand(PipelineProcessor pipe, CommandParameterInternal[]\r\ncommandElements, CommandBaseAst commandBaseAst, CommandRedirection[] redirections, ExecutionContext context)\r\n   at System.Management.Automation.PipelineOps.InvokePipeline(Object input, Boolean ignoreInput,\r\nCommandParameterInternal[][] pipeElements, CommandBaseAst[] pipeElementAsts, CommandRedirection[][]\r\ncommandRedirections, FunctionContext funcContext)\r\n   at System.Management.Automation.Interpreter.ActionCallInstruction`6.Run(InterpretedFrame frame)\r\n   at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.Run(InterpretedFrame frame)\r\nTargetObject          : new-eventlog\r\nCategoryInfo          : ObjectNotFound: (new-eventlog:String) [], CommandNotFoundException\r\nFullyQualifiedErrorId : CommandNotFoundException\r\nInvocationInfo        :\r\n    ScriptLineNumber : 1\r\n    OffsetInLine     : 1\r\n    HistoryId        : 6\r\n    Line             : new-eventlog -logname application -source \"Blah Blah\"\r\n    PositionMessage  : At line:1 char:1\r\n                       + new-eventlog -logname application -source \"Blah Blah\"\r\n                       + ~~~~~~~~~~~~\r\n    InvocationName   : new-eventlog\r\n    CommandOrigin    : Internal\r\nScriptStackTrace      : at <ScriptBlock>, <No file>: line 1\n```\n\n\n### Environment data\n\n```powershell\n>Name                           Value\r\n----                           -----\r\nPSVersion                      7.2.6\r\nPSEdition                      Core\r\nGitCommitId                    7.2.6\r\nOS                             Microsoft Windows 10.0.19044\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\n```\n\n\n### Visuals\n\nShouldn't that cmdlet work now in 7.x in Windows?\r\n\r\nThe RFC, [Importing Windows PowerShell modules in PowerShell Core](https://github.com/PowerShell/PowerShell-RFC/blob/master/Final/RFC0050-Importing-Windows-PowerShell-modules-in-PowerShell-Core.md), is `Final` which means \"fully complete and implemented in PowerShell\", right ([source](https://github.com/PowerShell/powershell-rfc/blob/master/RFC0000-RFC-Process.md#final))?",
  "closed_at": "2022-10-19T00:01:24Z",
  "comments": [
    {
      "author": "spottedmahn",
      "author_association": "NONE",
      "body": "oh, I'm guessing I have to install a [windows compat module](\r\nhttps://learn.microsoft.com/en-us/powershell/windows/module-compatibility?view=windowsserver2022-ps) for this?\r\n\r\nhow, do I find the module `New-EventLog` is in? \ud83e\udd14",
      "created_at": "2022-10-13T20:00:15Z",
      "updated_at": "2022-10-13T20:00:15Z"
    },
    {
      "author": "237dmitry",
      "author_association": "NONE",
      "body": "In Windows PowerShell.\r\n```powershell\r\nPS > powershell -c Get-Command -Module Microsoft.PowerShell.Management New-*\r\n```",
      "created_at": "2022-10-13T20:40:42Z",
      "updated_at": "2022-10-13T20:40:42Z"
    },
    {
      "author": "spottedmahn",
      "author_association": "NONE",
      "body": "that worked!  BUT, did that work b/c I already installed the correct module? \ud83e\udd14\r\n\r\nand why run another instance of PowerShell? \ud83e\udd14\r\n\r\ncan't I just execute: ` Get-Command -Module Microsoft.PowerShell.Management New-*`?\r\n\r\nthanks @237dmitry!! \ud83e\udd1d",
      "created_at": "2022-10-13T21:30:15Z",
      "updated_at": "2022-10-13T21:30:15Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "`New-EventLog` is indeed only available in _Windows PowerShell_.\r\n\r\nSee the conceptual [about_Windows_PowerShell_Compatibility](https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_Windows_PowerShell_Compatibility) help topic.\r\n\r\nFor in-session use in PowerShell _Core_ (with cross-process serialization behind the scenes), you can make `New-EventLog` available, as follows, but note the limitations discussed in the linked help topic:\r\n\r\n```powershell\r\nImport-Module  Microsoft.PowerShell.Management -UseWindowsPowerShell -WarningAction Ignore\r\n\r\nNew-EventLog -?  # This should now print help information, implying that New-EventLog is now available.\r\n```\r\n\r\nNote:\r\n\r\n* `-WarningAction Ignore` suppresses two warnings:\r\n  * The _specific_ warning about which specific commands are _not_ imported (via proxies), due to conflicting with edition-native versions of those commands.\r\n  * The _general_ warning about the limitations of providing the commands via cross-process serialization; note that this warning as of PowerShell Core 7.3.0-preview.8 contains misleading information:\r\n    *  It mentions `-AllowClobber`, which isn't a supported parameter; the real parameter name, `-NoClobber`, has the _inverse_ logic and  is _implied_ when you use `-UseWindowsPowerShell`\r\n    *  It mentions `-SkipEditionCheck`, which would _not_ be effective in this case (leaving aside the fact that it is described as a necessary step, even though (parts of) the module already _have_ been imported).\r\n\r\n* While `3>$null` is _usually_ equivalent to  `-WarningAction Ignore`  /  `-WarningAction SilentlyContinue` , it fails to suppress the _specific_ warning in this case.\r\n\r\n\r\n\r\n\r\n\r\n",
      "created_at": "2022-10-14T02:35:39Z",
      "updated_at": "2022-10-14T02:37:26Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2022-10-19T00:01:23Z",
      "updated_at": "2022-10-19T00:01:23Z"
    }
  ],
  "created_at": "2022-10-13T19:47:28Z",
  "labels": [
    "Resolution-Answered"
  ],
  "number": 18281,
  "state": "closed",
  "title": "The term 'new-eventlog' is not recognized as a name of a cmdlet",
  "updated_at": "2022-10-19T00:01:24Z"
}