{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4878",
  "author": "JamesWTruher",
  "body": "I would like to suggest a staged approach for https://github.com/PowerShell/PowerShell-RFC/blob/master/2-Draft-Accepted/RFC0020-DefaultFileEncoding.md\r\n\r\nBy removing the support for WindowsLegacy as an encoding type and removing the support for PSDefaultFileEncoding, I believe we can satisfy the bulk of our customers by standardizing our various encoding parameter types to a single type `System.Text.Encoding` and provide a default encoding of UTF-8 without bom. A type forwarder could be constructed to support the string UTF-8WITHBOM to be a utf-8 encoding with BOM. We can use the current code when appending to a file and encoding is not specified.\r\n\r\nIf customer demand for WindowsLegacy is strong, we can implement that at a later date. This provides a staged approach while producing the breaking change earlier to gather feedback",
  "closed_at": "2017-10-31T19:15:36Z",
  "comments": [
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "Formal ack, I'm good with it. ",
      "created_at": "2017-09-21T22:33:09Z",
      "updated_at": "2017-09-21T22:33:09Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee reviewed this and agreed on the proposal",
      "created_at": "2017-09-23T21:40:54Z",
      "updated_at": "2017-09-23T21:40:54Z"
    },
    {
      "author": "JamesWTruher",
      "author_association": "MEMBER",
      "body": "this was addressed byhttps://github.com/PowerShell/PowerShell/pull/5080",
      "created_at": "2017-10-31T19:15:36Z",
      "updated_at": "2017-10-31T19:15:36Z"
    }
  ],
  "created_at": "2017-09-20T19:52:35Z",
  "number": 4878,
  "state": "closed",
  "title": "Reduce scope of File Encoding RFC implementation",
  "updated_at": "2017-10-31T19:15:36Z"
}