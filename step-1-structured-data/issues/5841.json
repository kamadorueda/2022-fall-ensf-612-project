{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5841",
  "author": "ffeldhaus",
  "body": "In many situations a script outputs results, sometimes after a lot of processing. If the output fails because the current user does not have permission to access the file, all processing could have been skipped.\r\n\r\nI would like to suggest to extend the `Test-Path` cmdlet so that it can be used to verify that a given user has a given permission (read/write/execute/..) for the given Path. If the permission is not granted or if the path does not exist, then `$false` should be returned, otherwise `$true`.",
  "closed_at": "2021-07-08T21:01:02Z",
  "comments": [
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "In my experience in both Windows and Linux environments, even when you can determine the permissions form the path, you still do not know if you have those permissions until you perform an operation on that path. Maybe there is a .NET Core API that does give reliable results that could be used. \r\n\r\nTo me, the purpose of `Test-Path` is strictly path existence. I'm not sure extending it to include permissions checks is the correct direction. Perhaps a separate cmdlet? It seems permissions would be pretty tricky given `Test-Path` is PSProvider aware and different providers handle permissions differently. Not that a new cmdlet would have an easier time handling that, but, that the complications could be separated from the pretty reliable `Test-Path` code.",
      "created_at": "2018-01-10T14:03:59Z",
      "updated_at": "2018-01-10T14:03:59Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I can see the utility of such a capability, but also agree with @markekraus it could be tricky to implement due to OS differences (if there isn't a corefx api we can leverage) as implementation at the PSProvider level.  I also think that maybe a `Test-Permission` cmdlet may be better than adding to `Test-Path`.",
      "created_at": "2018-01-11T01:16:29Z",
      "updated_at": "2018-01-11T01:16:29Z"
    },
    {
      "author": "ffeldhaus",
      "author_association": "CONTRIBUTOR",
      "body": "In my experience testing permissions would be very helpful, to fail scripts as early as possible and not when the file is actually opened. I agree that putting it into Test-Path might not be the best idea. Implementing Test-Permission should be fine. Permissions are handled a bit different on different filesystems (especially with regards to NTFS ACLs and Posix Permissions and NFSv4 ACLs), but that can be accounted for.\r\n\r\nI'll have a look at .NET Core later and check what could be reused. If nothing speaks against it, I would go ahead and prepare an initial Pull Request for `Test-Permission` so that we can see if it will work and what may be missing.",
      "created_at": "2018-01-11T15:12:04Z",
      "updated_at": "2018-01-11T15:12:04Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "> In my experience testing permissions would be very helpful,\r\n\r\nI'm not arguing that. I'm only saying that in many cases you can query permissions and it appears you have the correct permissions but only find out you actually do not when you go to perform an operation. Inheritance and nesting are the biggest contributors to this. I've learned that it's better to simply try and handle fails than to test permissions and then still have to handle fails. *shrug I'm not against a way to do this, just a bit skeptical of its true value when you will still need to handle permissions failures anyway.",
      "created_at": "2018-01-11T16:34:03Z",
      "updated_at": "2018-01-11T16:34:03Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Would recommend developing `Test-Permisssion` outside of PowerShell (see [Working Groups Rejection](https://github.com/PowerShell/PowerShell/blob/master/docs/community/working-group.md#working-groups-reject-the-proposal)) to verify utility.  Also, consider ensuring cross-platform support where Windows has ACLs and Unix has permissions differently.",
      "created_at": "2021-06-08T20:25:16Z",
      "updated_at": "2021-06-08T20:25:16Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as won't fix and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2021-07-08T21:01:01Z",
      "updated_at": "2021-07-08T21:01:01Z"
    }
  ],
  "created_at": "2018-01-10T13:45:51Z",
  "number": 5841,
  "state": "closed",
  "title": "Extend Test-Path to verify that a given user has a given permission for the path",
  "updated_at": "2021-07-08T21:01:02Z"
}