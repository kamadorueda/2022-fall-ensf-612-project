{
  "_url": "https://github.com/PowerShell/PowerShell/issues/8289",
  "author": "najeebanwer",
  "body": "Steps to reproduce\r\n------------------\r\npwsh-preview\r\n\r\nExpected behavior\r\n-----------------\r\nLaunch PowerShell-6.2.0-preview.2\r\n\r\nActual behavior\r\n---------------\r\nGives the following error:\r\n\r\n> Error:\r\n>   An assembly specified in the application dependencies manifest (pwsh.deps.json) was not found:\r\n>     package: 'System.Private.ServiceModel', version: '4.5.3'\r\n>     path: 'runtimes/win/lib/netstandard2.0/System.Private.ServiceModel.dll'\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\n\r\n```\r\nN/A",
  "closed_at": "2019-02-28T22:05:28Z",
  "comments": [
    {
      "author": "kborowinski",
      "author_association": "NONE",
      "body": "**Workaround:**\r\nRun the installer again and use repair function. It will fix the problem.",
      "created_at": "2018-11-16T09:00:09Z",
      "updated_at": "2018-11-16T09:00:09Z"
    },
    {
      "author": "najeebanwer",
      "author_association": "NONE",
      "body": "@kborowinski:\r\nYes, that works. Thanks.\r\nHowever, it should work after the initial installation and not require a repair.",
      "created_at": "2018-11-16T09:29:57Z",
      "updated_at": "2018-11-16T09:29:57Z"
    },
    {
      "author": "DarwinJS",
      "author_association": "CONTRIBUTOR",
      "body": "I am having the same problem after an upgrade using the chocolatey package I created for preview.  I will avoid updating the chocolatey.org repo until this is fixed so that I don't get lotsa complaints ;)\r\n",
      "created_at": "2018-11-16T13:07:41Z",
      "updated_at": "2018-11-16T13:07:41Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "This seems to be an upgrade problem only (I could reproduce when upgrading from `6.2-preview1` to `6.2-preview1`). Uninstalling and reinstalling is fine and fixes it",
      "created_at": "2018-11-16T18:09:01Z",
      "updated_at": "2018-11-16T18:09:01Z"
    },
    {
      "author": "Agazoth",
      "author_association": "NONE",
      "body": "I had the same issue upgrading using the msi file on W10.",
      "created_at": "2018-11-16T18:10:29Z",
      "updated_at": "2018-11-16T18:11:28Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "/cc @SteveL-MSFT ",
      "created_at": "2018-11-16T19:27:39Z",
      "updated_at": "2018-11-16T19:27:39Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Will investigate next week",
      "created_at": "2018-11-18T23:06:46Z",
      "updated_at": "2018-11-18T23:06:46Z"
    },
    {
      "author": "damianog",
      "author_association": "NONE",
      "body": "Same issue to me from 6.2-preview1 to 6.2-preview2 msi installation\r\n",
      "created_at": "2018-11-27T07:13:03Z",
      "updated_at": "2018-11-27T07:13:03Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Preview.3 is coming out next week, so will wait to see if this repros.",
      "created_at": "2018-12-07T17:53:59Z",
      "updated_at": "2018-12-07T17:53:59Z"
    },
    {
      "author": "DarwinJS",
      "author_association": "CONTRIBUTOR",
      "body": "It is sort of reproing - though I am going over 6.2 preview 3 and it is a different error:\r\n![image](https://user-images.githubusercontent.com/11597190/49773439-1c62f300-fcbf-11e8-98d6-6ae327f9dcbb.png)\r\n\r\nAnd as with preview 2, uninstall and reinstall works fine.",
      "created_at": "2018-12-11T02:04:04Z",
      "updated_at": "2018-12-11T02:06:33Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "Can someone post which build of Windows 10 got the PowerShell Core error??\r\n\r\n:)",
      "created_at": "2018-12-11T02:14:56Z",
      "updated_at": "2018-12-11T02:14:56Z"
    },
    {
      "author": "DarwinJS",
      "author_association": "CONTRIBUTOR",
      "body": "10.0.17134",
      "created_at": "2018-12-11T02:20:28Z",
      "updated_at": "2018-12-11T02:20:28Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "Never mind finding the build number for Windows 10!\r\n\r\nI just checked that when upgrading from Preview 2 to Preview 3, PowerShell Core won't start.  \r\n\r\nThe installation completes without any failure but either click on the preview icon, or executing from the home folder won't work.\r\n\r\n```\r\nMicrosoft Windows [Version 10.0.18282.1000]\r\n(c) 2018 Microsoft Corporation. All rights reserved.\r\n\r\nC:\\Users\\max_t>cd C:\\Program Files\\PowerShell\\6-preview\r\n\r\nC:\\Program Files\\PowerShell\\6-preview>pwsh\r\nError:\r\n  An assembly specified in the application dependencies manifest (pwsh.deps.json) was not found:\r\n    package: 'System.ServiceModel.Duplex', version: '4.5.3'\r\n    path: 'lib/netstandard2.0/System.ServiceModel.Duplex.dll'\r\n\r\nC:\\Program Files\\PowerShell\\6-preview>ver\r\n\r\nMicrosoft Windows [Version 10.0.18282.1000]\r\n\r\nC:\\Program Files\\PowerShell\\6-preview>\r\n```\r\n\r\nWorkaround to this issue is to uninstall the previous version before installing Preview-3.\r\n:)\r\n",
      "created_at": "2018-12-11T02:24:41Z",
      "updated_at": "2018-12-11T02:24:41Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "I can confirm this happens not only when upgrading `6.2-preview1` to `6.2-preview3` but also when upgrading `6.2-preview2` to `6.2-preview3`",
      "created_at": "2018-12-11T12:46:38Z",
      "updated_at": "2018-12-11T13:27:51Z"
    },
    {
      "author": "DarwinJS",
      "author_association": "CONTRIBUTOR",
      "body": "In my case it happened when upgrading from `6.2-preview2` **that had been upgraded** from `6.2-preview1`.  I would have to test a `6.2-preview1` to `6.2-preview3` upgrade to know if that scenario also generates an error.",
      "created_at": "2018-12-11T13:17:56Z",
      "updated_at": "2018-12-11T13:18:25Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "@DarwinJS \r\n\r\nI have confirmed upgrading from Preview.1 to Preview.3, installation complete without any failures but still PowerShell Core won't start.\r\n\r\n:)",
      "created_at": "2018-12-11T16:09:53Z",
      "updated_at": "2018-12-11T16:09:53Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "@DarwinJS \r\n\r\nAh! Just another FYI\r\n\r\nInstead of uninstall, you click Repair, it will fix the issue too. \r\n\r\n:)",
      "created_at": "2018-12-11T16:12:01Z",
      "updated_at": "2018-12-11T16:12:28Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I believe we've found the root cause.  Since we have both stable and preview releases, we've been using the same componentid's for the same set of files.  MSI is trying to be \"smart\" where if a previously registered component (aka file) is already installed (like you have 6.1.1 installed with same file), then it won't install it again.  So that file is missing from 6.2-preview which causes it to fail to start.  Proposed fix is to generate new componentids for the preview releases so they don't match any of the stable files. cc @TravisEz13 \r\n\r\nExample from msi log\r\n\r\n```none\r\nMSI (s) (D8:1C) [13:08:12:977]: Disallowing installation of component: {A60E946A-2C86-4104-B883-D4B17B50B5B0} since the same component with higher versioned keyfile exists\r\nMSI (s) (D8:1C) [13:08:13:165]: Disallowing installation of component: {7E693303-C675-4985-A1F0-84688E685656} since the same component with higher versioned keyfile exists\r\nMSI (s) (D8:1C) [13:08:13:274]: Disallowing installation of component: {7E58EF48-5AD3-4889-8643-02CAC6C8EBAD} since the same component with higher versioned keyfile exists\r\nMSI (s) (D8:1C) [13:08:13:412]: Disallowing installation of component: {C119D8F5-B184-44F4-9765-CC47699FB06B} since the same component with higher versioned keyfile exists\r\nMSI (s) (D8:1C) [13:08:13:885]: Disallowing installation of component: {F7B290E8-4DDD-4C20-B3F8-5DD38608DFEF} since the same component with higher versioned keyfile exists\r\n```",
      "created_at": "2018-12-11T21:46:23Z",
      "updated_at": "2018-12-11T21:46:59Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "@SteveL-MSFT,\r\n\r\nNo wonder I didn't experience the issue before, as I got the habit of manually uninstall PScore,\r\nI do have both GA and Preview installed. \r\n\r\nI'm glad you found the root cause. Awesome!!\r\n\r\n:)\r\n\r\n",
      "created_at": "2018-12-13T16:02:34Z",
      "updated_at": "2018-12-13T16:02:34Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@TravisEz13 and I looked at this and we believe the issue is understood.  Basically, MSI is being \"smart\" keeping track of assemblies being installed along with their ids.  We have two types of packages: stable and preview.  But they both use the same ids for the same assemblies.  So upon installing the preview, MSI sees that the assembly we are going to install is \"already installed\" because the id matches an assembly that is installed (even though it's in a different target file path).\r\n\r\nThe fix is to generate a different set of ids for the preview release for the assemblies so they don't match the stable ones.  This is not as trivial as it sounds due to how packaging works today with WIX and we don't want to maintain two separate files.wxs that are 99% the same.  We'll get this fixed for next preview.",
      "created_at": "2018-12-20T01:06:33Z",
      "updated_at": "2018-12-20T01:06:33Z"
    },
    {
      "author": "DarwinJS",
      "author_association": "CONTRIBUTOR",
      "body": "Maybe use a simple zip - with the assumption of file overwrites - for the preview?",
      "created_at": "2018-12-20T02:15:35Z",
      "updated_at": "2018-12-20T02:15:35Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@DarwinJS if you use the zip pkg we already release, you already won't have this problem, it's specifically the MSI pkg",
      "created_at": "2018-12-20T03:05:22Z",
      "updated_at": "2018-12-20T03:05:22Z"
    },
    {
      "author": "DarwinJS",
      "author_association": "CONTRIBUTOR",
      "body": "That's right - I forgot.\r\nWhat if your team published a ps1 inside the preview folder that \"self-installs\" - basically does all the little things the MSI does?\r\nThis way we could unzip + run self-install and be done.\r\nThis would seem to be easy:\r\n- to design and build - last I checked the MSI install was simple (might have changed) and the preview should actually be less integrated anyway\r\n- for the powershell team to leave out unapplicable stuff like adding to the path\r\n- easy for people doing self-installers or wrapping in other packaging technologies to get right\r\n- easy for the preview chocolatey package to leverage",
      "created_at": "2018-12-20T11:46:00Z",
      "updated_at": "2018-12-20T11:46:00Z"
    }
  ],
  "created_at": "2018-11-16T08:40:15Z",
  "labels": [
    "Issue-Bug",
    "Area-Maintainers-Build",
    "Resolution-Fixed"
  ],
  "number": 8289,
  "state": "closed",
  "title": "PowerShell-6.2.0-preview.2-win-x64 error on startup (also occurs on upgrade to preview.3)",
  "updated_at": "2019-03-01T03:53:43Z"
}