{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3772",
  "author": "mklement0",
  "body": "[Superseded by #6057, which describes the problem more generally.]\r\n\r\nNote: Applies to all supported platforms.\r\n\r\nWhen you send `Get-Item` / `Get-ChildItem` output through the _pipeline_ to a cmdlet that supports  the `-Path` / `-LiteralPath` parameter pair, the `[System.IO.DirectoryInfo]` and `[System.IO.FileInfo]` instances are bound _unambiguously_:\r\n\r\n* to the `-LiteralPath` parameter, via its alias `-PSPath`\r\n* by property `PSPath`, which contains the full path with a provider prefix; e.g., `Microsoft.PowerShell.Core\\FileSystem::/tmp`\r\n\r\nBy contrast, when you pass such objects as _arguments_:\r\n\r\n* they bind to `-Path` rather than `-LiteralPath`  implicitly - which in itself is problematic, because the stringified input object is now interpreted as a _wildcard pattern_\r\n* by their _string representations_ - which also applies if you explicitly use `-LiteralPath`\r\n\r\nwhich is problematic, especially with `Get-ChildItem`-produced objects (as opposed to `Ge-Item`-produced ones), as they evaluate to the _mere filename_ when stringified.  \r\n\r\nThis can not only lead to unexpected failure, but even to inadvertent destructive actions, such as accidentally removing an unrelated item with the same name that happens to reside in the _current_ directory.\r\n\r\nConsistent binding behavior in both scenarios would eliminate these problems.\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\n# Setup\r\nSet-Location /\r\n$f1 = (Get-Item $PSHOME/*)[0]        # Get-Item output stringifies as .FullName\r\n$f2 = (Get-ChildItem $PSHOME)[0]     # Get-ChildItem output stringifies as .Name only(!)\r\n\r\n# I expect the following 2 commands to produce the same output.\r\n$f1, $f2 | Get-Item\r\nGet-Item $f1, $f2     # !! $f2 causes error, because interpreted as relative to *current* dir.\r\n```\r\n\r\n\r\nExpected behavior\r\n-----------------\r\n\r\nSomething like\r\n\r\n```none\r\n\r\n    Directory: /usr/local/microsoft/powershell/6.0.0-beta.1\r\n\r\n\r\nMode                LastWriteTime         Length Name                                                                                                                              \r\n----                -------------         ------ ----                                                                                                                              \r\nd-r---           5/9/17   3:43 AM                en-US                                                                                                                             \r\nd-r---           5/9/17   3:43 AM                en-US                                                                                                                             \r\nd-r---           5/9/17   3:43 AM                en-US                                                                                                                             \r\nd-r---           5/9/17   3:43 AM                en-US                                                                                                                             \r\n\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n```none\r\n\r\n    Directory: /usr/local/microsoft/powershell/6.0.0-beta.1\r\n\r\n\r\nMode                LastWriteTime         Length Name                                                                                                                              \r\n----                -------------         ------ ----                                                                                                                              \r\nd-r---           5/9/17   3:43 AM                en-US                                                                                                                             \r\nd-r---           5/9/17   3:43 AM                en-US                                                                                                                             \r\nd-r---           5/9/17   3:43 AM                en-US                                                                                                                             \r\nGet-Item : Cannot find path '/en-US' because it does not exist.\r\nAt /Users/mklement/Desktop/pg/pg.ps1:10 char:1\r\n+ Get-Item $f1, $f2\r\n+ ~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : ObjectNotFound: (/en-US:String) [Get-Item], ItemNotFoundException\r\n    + FullyQualifiedErrorId : PathNotFound,Microsoft.PowerShell.Commands.GetItemCommand\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\nPowerShell Core v6.0.0-beta (v6.0.0-beta.1) on macOS 10.12.4\r\nPowerShell Core v6.0.0-beta (v6.0.0-beta.1) on Ubuntu 16.04.1 LTS\r\nPowerShell Core v6.0.0-beta (v6.0.0-beta.1) on Microsoft Windows 10 Pro (64-bit; v10.0.14393)\r\n```\r\n",
  "closed_at": "2018-01-28T23:33:31Z",
  "comments": [
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Superseded by #6057, which describes the problem more generally.",
      "created_at": "2018-01-28T23:33:31Z",
      "updated_at": "2018-01-28T23:33:31Z"
    }
  ],
  "created_at": "2017-05-12T13:59:39Z",
  "labels": [
    "Issue-Discussion",
    "Breaking-Change",
    "WG-Cmdlets-Management"
  ],
  "number": 3772,
  "state": "closed",
  "title": "System.IO.DirectoryInfo and System.IO.FileInfo instances output by Get-Item / Get-ChildItem bind to -Path rather than -LiteralPath and sometimes by filename only",
  "updated_at": "2018-01-28T23:33:31Z"
}