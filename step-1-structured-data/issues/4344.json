{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4344",
  "author": "mklement0",
  "body": "Surprisingly, `[pscustomobject]` is the same as  `[psobject]`: both these type accelerators point to type `[System.Management.Automation.PSObject]`, even though there _is_ a distinct `[System.Management.Automation.PSCustomObject]` type.\r\n\r\nMostly, this conflation goes unnoticed (and has come up before - see #2295), but:\r\n\r\n* what is the rationale for it?\r\n\r\n* it makes for surprising behavior on occasion - see below.\r\n\r\n```powershell\r\n# Even though their names strongly suggest identity, they are different types.\r\n> [pscustomobject] -eq [System.Management.Automation.PSCustomObject]\r\nFalse\r\n\r\n# Any object returned by a *command* (as opposed to an expression)\r\n# returns $True for -is [psobject], and therefore also [pscustomobject]\r\n> (Get-Item /) -is [pscustomobject]\r\nTrue\r\n\r\n# Casting anything other than a hashtable literal to [psobject] is a no-op, \r\n# and therefore also with [pscustomobject]\r\n> ([pscustomobject] 666).GetType().Name\r\nInt32\r\n```\r\n\r\n\r\nEnvironment data\r\n----------------\r\n\r\n```powershell\r\nPowerShell Core v6.0.0-beta.4\r\n```\r\n",
  "closed_at": "2017-07-26T16:23:52Z",
  "comments": [
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "I'm not aware of a good reason other than legacy reasons and concerns over breaking existing scripts.",
      "created_at": "2017-07-26T15:58:55Z",
      "updated_at": "2017-07-26T15:58:55Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks, @lzybkr.\r\n\r\nOn a meta note:\r\n\r\nWhile I will certainly add that information to my personal notes, my concern is that these nuggets of information - sprinkled throughout the issues reported (#4347 is another recent example) - are not documented in an easily discoverable fashion.\r\n\r\nI've seen the `Documentation Needed` label, but it is (a) used sparingly and (b) is perhaps too broad, given that the information in question is often too esoteric / advanced for the standard help topics.\r\n\r\nI do wish we kept track of such issues, however, perhaps with something like an `Advanced-Topic Documentation Needed` label.\r\n",
      "created_at": "2017-07-26T16:23:52Z",
      "updated_at": "2017-07-26T16:23:52Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "For now, I suggest using `Documentation Needed` as a way to review issues later to determine where we need to add documentation (and not just for PRs where a doc change is also needed).\r\n\r\nThanks for your continued depth of research into these advanced topics.",
      "created_at": "2017-07-26T16:27:45Z",
      "updated_at": "2017-07-26T16:27:45Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "My pleasure, @SteveL-MSFT; I'm glad that you think so.\r\n\r\nCan I suggest a few more candidates for the `Documentation Needed` label? (These are just the ones I was personally involved in discussing; in some cases I hope that the behavior will be changed instead.)\r\n\r\n* #4347\r\n* #3629\r\n* #3598\r\n* #3601\r\n* #3809\r\n",
      "created_at": "2017-07-26T18:33:50Z",
      "updated_at": "2017-07-26T18:33:50Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@mklement0 I marked the Issues. Could you please add there that we need document or open Issues in Doc repo?",
      "created_at": "2017-08-03T06:00:12Z",
      "updated_at": "2017-08-03T06:00:12Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov: \r\n\r\nThank you.\r\n\r\n> add there that we need document \r\n\r\nDo you mean I should also add a _comment_ stating that documentation is needed? What would that gain us beyond the label?\r\n\r\nI think I'll hold off on creating documentation issues until it's clearer in what format and to what extent these advanced issues will be documented.",
      "created_at": "2017-08-03T12:57:58Z",
      "updated_at": "2017-08-03T12:57:58Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": ">Do you mean I should also add a comment stating that documentation is needed?\r\n\r\nYes, we'll keep the time of who's going to document if it's not you.",
      "created_at": "2017-08-04T04:39:09Z",
      "updated_at": "2017-08-04T04:39:09Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "> Yes, we'll keep the time of who's going to document if it's not you.\r\n\r\nI don't know what you mean by that.",
      "created_at": "2017-08-04T04:47:45Z",
      "updated_at": "2017-08-04T04:47:45Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Sorry, I meant that we need clear conclusion so that anyone can document it.",
      "created_at": "2017-08-04T06:29:45Z",
      "updated_at": "2017-08-04T06:29:45Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov: I see, good point. I'll see what I can do, but I hope that if I don't get around to it, others will still be able to glean from the existing comments what is documentation-worthy.",
      "created_at": "2017-08-04T15:56:32Z",
      "updated_at": "2017-08-04T15:56:32Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "A concrete example of where the identity of `[pscustomobject]` and `[psobject]` is problematic: the `-as` type operator - see https://github.com/PowerShell/PowerShell/issues/4343#issuecomment-348724275",
      "created_at": "2017-12-02T22:23:42Z",
      "updated_at": "2017-12-02T22:23:42Z"
    },
    {
      "author": "AikenBM",
      "author_association": "NONE",
      "body": "Personally, I've always found this behavior extremely confusing:\r\n\r\n```\r\nPS> (New-Object -TypeName System.Management.Automation.PSObject -Property @{Property = 'Value'}).GetType().FullName\r\nSystem.Management.Automation.PSCustomObject\r\n\r\nPS> (New-Object -TypeName System.Management.Automation.PSCustomObject -Property @{Property = 'Value'}).GetType().FullName\r\nNew-Object : A constructor was not found. Cannot find an appropriate constructor for type System.Management.Automation.PSCustomObject.\r\n\r\nPS> ([PSCustomObject]@{Property = 'Value'}).GetType().FullName\r\nSystem.Management.Automation.PSCustomObject\r\n\r\nPS> ([PSObject]@{Property = 'Value'}).GetType().FullName\r\nSystem.Collections.Hashtable\r\n```\r\n",
      "created_at": "2018-03-07T14:20:37Z",
      "updated_at": "2018-03-07T14:20:37Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@AikenBM: \r\n\r\nAgreed - that's a nice demonstration of the issues.\r\n\r\nThe sense I'm getting is that `[System.Automation.PSObject]`, as an _implementation detail_, should be _hidden_ - see #5551; hiding it completely  - i.e., taking away the availability of `[psobject]` as a type available to the user, is unfortunately no longer an option for reasons of backward compatibility.\r\n\r\nNote that a `[psobject]` cast to _anything_ is _seemingly_ quietly ignored, but in reality you're creating a benign-for-the-most-part-but-not-always _extra_, _hidden_  `[psobject]` wrapper (see #5579):\r\n\r\n```powershell\r\n> @{ Property = 'Value' } -is [psobject]\r\nFalse\r\n\r\n> ([psobject] @{ Property = 'Value'} ) -is [psobject]\r\nTrue  # !! Extra [psobject] wrapper was created.\r\n```\r\n\r\nOn a related note, #4343 shows that \"know thyself\" doesn't apply to custom objects with respect to the `-as` operator:\r\n\r\n```powershell\r\n# Sample custom object.\r\n> $co = [pscustomobject] @{ one = 1 }\r\n\r\n> $co -is [pscustomobject]  \r\nTrue  # OK\r\n# Same with `$co -is [psobject]` due to the identity of [psobject] and [pscustombject]\r\n\r\n> $co -is [System.Management.Automation.PSCustomObject]\r\nTrue  # OK\r\n\r\n# Now try -as\r\n> $co -as [System.Management.Automation.PSCustomObject]\r\n# !! $null - $co doesn't know its own type\r\n```\r\n",
      "created_at": "2018-03-07T15:44:08Z",
      "updated_at": "2018-03-07T15:50:52Z"
    }
  ],
  "created_at": "2017-07-26T04:33:34Z",
  "labels": [
    "Issue-Question",
    "WG-Engine",
    "Resolution-Answered"
  ],
  "number": 4344,
  "state": "closed",
  "title": "Why is [pscustomobject] the same as [psobject], even though a distinct [System.Management.Automation.PSCustomObject] type exists?",
  "updated_at": "2018-10-15T21:56:06Z"
}