{
  "_url": "https://github.com/PowerShell/PowerShell/issues/17730",
  "author": "maciejw",
  "body": "### Prerequisites\n\n- [X] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\n\n### Steps to reproduce\n\nassuming you have a module with psd1 and psm1 file as follows\r\n\r\nTestModule.psd1\r\n```\r\n@{\r\n    RootModule        = \"TestModule2.psm1\"\r\n    ModuleVersion     = \"0.0.1\"\r\n}\r\n```\r\n\r\nTestModule2.psm1\r\n```\r\nfunction Test-Function {\r\n}\r\nfunction Test-Function2 {\r\n}\r\nfunction Test-Function3 {\r\n}\r\n\r\nExport-ModuleMember -Function \"Test-Function2\", \"Test-Function3\"\r\n```\n\n### Expected behavior\n\n```console\nwhen we use Test-ModuleManifest we should see a list containing \"Test-Function2\", \"Test-Function3\"\r\nlike this\r\n\r\nC:\\>pwsh -NoProfile -Command Test-ModuleManifest C:\\modules\\TestModule2\\TestModule2.psd1\r\n\r\nModuleType Version    PreRelease Name                                ExportedCommands\r\n---------- -------    ---------- ----                                ----------------\r\nScript     0.0.1                 TestModule2                         {Test-Function2, Test-Function3}\r\n\r\n```\r\nbut it does not work like this.\n```\n\n\n### Actual behavior\n\n```console\ninstead we see all 3 functions Test-Function, Test-Function2, Test-Function3\r\n\r\n\r\nC:\\>pwsh -NoProfile -Command Test-ModuleManifest C:\\modules\\TestModule2\\TestModule2.psd1\r\n\r\nModuleType Version    PreRelease Name                                ExportedCommands\r\n---------- -------    ---------- ----                                ----------------\r\nScript     0.0.1                 TestModule2                         {Test-Function, Test-Function2, Test-Function3}\r\n\r\n```\r\n\r\nthis works correctly on Windows PowerShell 5.1 \r\n\r\nI can make it work on PowerShell core, but I have to change how functions are exported as follows\r\n\r\n```\r\nExport-ModuleMember \"Test-Function2\", \"Test-Function3\"\r\n```\r\nI have to remove `-Function` parameter name\r\n\r\nthen it works on both windows powershell 5.1 and powershell core 7.2.5\r\n\r\nalso I could not find any info that `Export-ModuleMember` parameters have to be static.\r\n\r\nmy investigation started when I wanted to pass a variable with functions I want to export.\r\n\r\nthis idea with variable will not work, I get it, but `Export-ModuleMember` should work like docs describe, which is not the case currently. docs currently show `-Function`.\r\n\r\nalso since `Export-ModuleMember` has to be static why even bother with it? to me its the main use case for it, lets say I cannot use static list in psd1 file, then I could use dynamic list in psm1 file and use `Export-ModuleMember`. now in order to mane it work I have to specify statically this list, so I could do this in psd1 file.\r\n\r\nI know why you do this, this would have impact on performance of module autoloading, but on the other hand why not put big exclamation in `Export-ModuleMember` docs\n```\n\n\n### Error details\n\n_No response_\n\n### Environment data\n\n```powershell\npowershell core on windows\r\n\r\n$PsVersionTable\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.5\r\nPSEdition                      Core\r\nGitCommitId                    7.2.5\r\nOS                             Microsoft Windows 10.0.19044\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n```\r\n\r\nwindows powershell\r\n```\r\n$PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      5.1.19041.1682\r\nPSEdition                      Desktop\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nBuildVersion                   10.0.19041.1682\r\nCLRVersion                     4.0.30319.42000\r\nWSManStackVersion              3.0\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\n\r\n```\n```\n\n\n### Visuals\n\n_No response_",
  "closed_at": null,
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "`Export-ModuleMember` will only work as you expect if you omit the `psd1` module spec entirely. From memory, module exports work something like this:\r\n\r\n- If you don't use any `Export-ModuleMember` in the module `psm1`, then a `psd1` module spec file will determine the exported functions via its `FunctionsToExport` key.\r\n- If you do use `Export-ModuleMember` _and_ you have a `psd1`, then you must also name all of the functions that you want exported in the `psd1` as well. You can't omit the `FunctionsToExport` just because you've used `Export-ModuleMember`.\r\n  - The odd thing here is that if you use `Export-ModuleMember` in the `psm1`, then the `psd1` can only export functions that have _also_ been exported with `Export-ModuleMember`.\r\n- If you omit the `psd1` file then the `Export-ModuleMember` statements are solely responsible for what functions are exported from the module.\r\n\r\nThis behaviour and interaction between Export-ModuleMember and a PSD1 file with a module is fairly non-obvious and I'm unsure if it's fully documented.",
      "created_at": "2022-07-20T19:38:11Z",
      "updated_at": "2022-07-20T19:45:05Z"
    },
    {
      "author": "maciejw",
      "author_association": "NONE",
      "body": "@vexx32 it does not work the way you've described it in second bullet. if you have `psd1` you can omit `FunctionsToExport ` you can put `*` there, it does not matter, you don't have to put any function names there, if you have `Export-ModuleMember` in `psm1` it takes precedence, as long as you set it like I've describe in my issue, which is not consistent with documentation examples.",
      "created_at": "2022-07-22T14:40:50Z",
      "updated_at": "2022-07-22T14:40:50Z"
    },
    {
      "author": "cxc256",
      "author_association": "NONE",
      "body": "The 3rd bullet point is not working for me either.",
      "created_at": "2022-09-23T18:26:42Z",
      "updated_at": "2022-09-23T18:26:42Z"
    }
  ],
  "created_at": "2022-07-20T16:15:33Z",
  "number": 17730,
  "state": "open",
  "title": "Export-ModuleMember does not export functions when -Function parameter is used",
  "updated_at": "2022-09-23T18:26:42Z"
}