{
  "_url": "https://github.com/PowerShell/PowerShell/issues/17026",
  "author": "jhoneill",
  "body": "### Prerequisites\n\n- [X] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\n\n### Steps to reproduce\n\nApologies if my search-foo isn't working, but I can find this \r\n\r\nWhen run in Windows Terminal or in VSCode - but not in the legacy host child windows open behind the active window. \r\nSo if one runs (e.g.) Notepad it's **not** a child window and it appears in the foreground, but `Get-Help -showWindow` or `Out-GridView` are often hidden (this is most obvious when running on a single screen - sometimes they will open on the other screen so *are* visible)\n\n### Expected behavior\n\n```console\nChild Window is visible\n```\n\n\n### Actual behavior\n\n```console\nChild Window is hidden behind VS-Code or Windows Terminal\n```\n\n\n### Error details\n\n```console\nNo message\n```\n\n\n### Environment data\n\n```powershell\nName                           Value\u001b[0m\r\n----                           -----\u001b[0m\r\nPSVersion                      7.2.1\r\nPSEdition                      Core\r\nGitCommitId                    7.2.1\r\nOS                             Microsoft Windows 10.0.19042\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u0393\u00c7\u00aa}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\n```\n\n\n### Visuals\n\n![image](https://user-images.githubusercontent.com/16209593/158981153-dfd3a475-2eab-44d3-82cc-6160f024e345.png)\r\n\r\nThis show what happens immediately after running the command, an icon appears on the task bar for the child window, but VSCode (in this case) remains in the foreground giving the impression that nothing has happened. If code is running full screen you don't see the icon appear so nothing seems to have happened  but clicking the icon gives access. In dual screen mode the window may appear on another screen ",
  "closed_at": "2022-04-16T22:00:46Z",
  "comments": [
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "Related: https://github.com/microsoft/terminal/pull/12799",
      "created_at": "2022-04-14T23:08:02Z",
      "updated_at": "2022-04-14T23:08:02Z"
    },
    {
      "author": "zadjii-msft",
      "author_association": "NONE",
      "body": "Absolutely, this is the upstream https://github.com/microsoft/terminal/issues/2988",
      "created_at": "2022-04-15T11:04:50Z",
      "updated_at": "2022-04-15T11:04:50Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "Thanks @zadjii-msft! Is the fix for any terminal utilizing ConPTY or is it specifically for WT?",
      "created_at": "2022-04-15T12:26:13Z",
      "updated_at": "2022-04-15T12:26:13Z"
    },
    {
      "author": "zadjii-msft",
      "author_association": "NONE",
      "body": "> Is the fix for any terminal utilizing ConPTY or is it specifically for WT?\r\n\r\nWell, it was designed so that any terminal emulator could use the fix, but they'd need to add some extra code on their part to enable it. We're just kinda testing it out in WT right now to make sure this works for all the cases we'd like before documenting it in greater detail. Wouldn't want to have to rewrite the whole docs if we're wrong \ud83d\ude05 The fix also isn't going to be in OS builds of ConPTY for quite some time yet, so that gives us a bit of wiggle room for making sure the surface is stable.",
      "created_at": "2022-04-15T13:29:01Z",
      "updated_at": "2022-04-15T13:29:01Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as external and has not had any activity for **1 day**. It has been be closed for housekeeping purposes.",
      "created_at": "2022-04-16T22:00:43Z",
      "updated_at": "2022-04-16T22:00:43Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "@jhoneill Just tried the 1.14 release of Windows Terminal Preview and this bug appears to be fixed.  https://devblogs.microsoft.com/commandline/windows-terminal-preview-1-14-release/  \ud83c\udf89 ",
      "created_at": "2022-05-24T18:23:05Z",
      "updated_at": "2022-05-24T18:23:05Z"
    }
  ],
  "created_at": "2022-03-18T09:58:57Z",
  "number": 17026,
  "state": "closed",
  "title": "Pop \"under\" window behaviour",
  "updated_at": "2022-05-24T18:23:05Z"
}