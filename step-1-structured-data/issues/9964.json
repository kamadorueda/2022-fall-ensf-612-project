{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9964",
  "author": "sizur",
  "body": "# Summary of the new feature/enhancement\r\n\r\nPS is awesome for shell experimentation and tailoring shell to individual's needs.  However, dynamically changing PS's behavior currently will inevitably break dependent modules in individual's runspace.\r\n\r\nIntroducing a mechanism to apply PS behavior changes only for current module scope will ensure other modules will not break due to incompatible changes.\r\n\r\nFor example, in global scope:\r\n```\r\nPS > Import-Module BackwardsIncompatibleFeatureModule\r\nPS > Use-Feature BackwardsIncompatibleFeatureModule\r\n```\r\nWill enable you to use your new feature without breaking any other modules.\r\n\r\nRelated #9965\r\n\r\nSomething like Rust's Editions: https://doc.rust-lang.org/stable/edition-guide/",
  "closed_at": null,
  "comments": [
    {
      "author": "bpayette",
      "author_association": "CONTRIBUTOR",
      "body": "@sizur You should probably take a look at @KirkMunro 's [optional feature RFC](https://github.com/PowerShell/PowerShell-RFC/issues/197)\r\n",
      "created_at": "2019-06-20T19:51:28Z",
      "updated_at": "2019-06-20T19:51:28Z"
    }
  ],
  "created_at": "2019-06-20T16:42:58Z",
  "number": 9964,
  "state": "open",
  "title": "Mechanism for using backwards-incompatible features in module scope",
  "updated_at": "2019-06-20T19:51:28Z"
}