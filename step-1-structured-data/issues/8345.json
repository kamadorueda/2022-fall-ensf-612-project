{
  "_url": "https://github.com/PowerShell/PowerShell/issues/8345",
  "author": "rjmholt",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n\r\n-->\r\n\r\n# Steps to reproduce\r\n\r\nHere's a small project that demonstrates this behaviour in Windows:\r\n```csharp\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Management.Automation;\r\n\r\nnamespace psproj\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            using (var pwsh = PowerShell.Create())\r\n            {\r\n                pwsh.AddCommand(\"Import-Module\")\r\n                    .AddParameter(\"SkipEditionCheck\", true)\r\n                    .AddParameter(\"Name\", \"DeliveryOptimization\")\r\n                    .Invoke();\r\n\r\n                IEnumerable<object> output = pwsh.AddCommand(\"Get-DeliveryOptimizationPerfSnapThisMonth\").Invoke<object>();\r\n\r\n                foreach (dynamic obj in output)\r\n                {\r\n                    Console.WriteLine(obj);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n# Expected behavior\r\n\r\nPrints\r\n```none\r\nMonthlyUploadLanBytes           : 3,001,492,347\r\nMonthlyUploadInternetBytes      : 0\r\nMonthlyDownloadHttpBytes        : 20,925,016,490\r\nMonthlyDownloadLanBytes         : 3,712,189,616\r\nMonthlyDownloadInternetBytes    : 0\r\nMonthlyDownloadFgRateKbps       : 3,594\r\nMonthlyDownloadBgRateKbps       : 33,206\r\nMonthlyUploadLimitReached       : No\r\nMonthStartDate                  : 11/1/2018\r\n```\r\n\r\n# Actual behavior\r\n\r\nNo output.\r\n\r\nCompare this with the `AddScript` version:\r\n```csharp\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Management.Automation;\r\n\r\nnamespace psproj\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            using (var pwsh = PowerShell.Create())\r\n            {\r\n                pwsh.AddCommand(\"Import-Module\")\r\n                    .AddParameter(\"SkipEditionCheck\", true)\r\n                    .AddParameter(\"Name\", \"DeliveryOptimization\")\r\n                    .Invoke();\r\n\r\n                IEnumerable<object> output = pwsh.AddScript(\"Get-DeliveryOptimizationPerfSnapThisMonth\").Invoke<object>();\r\n\r\n                foreach (dynamic obj in output)\r\n                {\r\n                    Console.WriteLine(obj);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nPSVersion:                  6.1.1\r\nPSEdition:                  Core\r\nGitCommitId:                6.1.1\r\nOS:                         Microsoft Windows 10.0.18290\r\nPlatform:                   Win32NT\r\nPSCompatibleVersions:       System.Version[]\r\nPSRemotingProtocolVersion:  2.3\r\nSerializationVersion:       1.1.0.1\r\nWSManStackVersion:          3.0\r\n```\r\n\r\n```xml\r\n<PackageReference Include=\"Microsoft.PowerShell.SDK\" Version=\"6.1.1\" />\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "Initially discovered while investigating https://github.com/PowerShell/PowerShell/issues/8323.",
      "created_at": "2018-11-27T20:43:18Z",
      "updated_at": "2018-11-27T20:43:18Z"
    }
  ],
  "created_at": "2018-11-27T20:41:57Z",
  "number": 8345,
  "state": "open",
  "title": "pwsh.AddCommand(\"Invoke-WindowsCmdlet\").Invoke() doesn't work even when incompatible module is imported with -SkipEditionCheck",
  "updated_at": "2018-11-29T10:45:49Z"
}