{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5863",
  "author": "LawrenceHwang",
  "body": "I can\u2019t seem to think of valid use case for the reported steps (running Windows PowerShell from PowerShell Core console). However, it\u2019s something unexpected so bringing it to your attention. \r\n\r\nSteps to reproduce\r\n------------------\r\nEnvironment: PowerShell Core 6 (GA) on Windows\r\n\r\nIn the pwsh: \r\n1. run `powershell`\r\n1. $env:psmodulepath\r\n\r\nExpected behavior\r\n-----------------\r\nThe psmodulepath should be the value from Windows PowerShell.\r\n\r\n\r\nActual behavior\r\n---------------\r\n\r\nThe value is from the pwsh session. \r\n",
  "closed_at": "2018-05-10T20:25:25Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I can not repo.\r\nIf you first run Windows PowerShell do you see `$env:psmodulepath`?",
      "created_at": "2018-01-11T09:14:02Z",
      "updated_at": "2018-01-11T09:14:26Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "I can repro this. PS Core has a separate `PSModulePath` environment variable because of the separation from Windows PowerShell modules. unfortunately, when you start Windows PowerShell from PowerShell Core, Windows PowerShell sees the `PSModulePath` environment path and adopts it. If you do this the other way around and start PowerShell Core from Windows PowerShell, PowerShell core ignores the `PSModulePath` environment variable and uses its own.\r\n\r\nIn PowerShell Core:\r\n\r\n```powershell\r\n$env:PSModulePath; powershell -c '$env:PSModulePath'\r\n```\r\n\r\n```none\r\nC:\\Users\\username\\Documents\\PowerShell\\Modules;C:\\Program Files\\PowerShell\\Modules;c:\\program files\\powershell\\6.0.0-rc.2\\Modules\r\nC:\\Users\\username\\Documents\\PowerShell\\Modules;C:\\Program Files\\PowerShell\\Modules;c:\\program files\\powershell\\6.0.0-rc.2\\Modules\r\n```\r\n\r\nIn Windows PowerShell:\r\n\r\n```powershell\r\n$env:PSModulePath; pwsh -c '$env:PSModulePath'\r\n```\r\n\r\n```none\r\nC:\\Users\\username\\Documents\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules\\;C:\\Program Files\\Intel\\;C:\\opscode\\chefdk\\modules\\\r\nC:\\Users\\username\\Documents\\PowerShell\\Modules;C:\\Program Files\\PowerShell\\Modules;c:\\program files\\powershell\\6.0.0-rc.2\\Modules\r\n```",
      "created_at": "2018-01-11T10:57:00Z",
      "updated_at": "2018-01-11T11:00:01Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Yes, I semms mixed the directions.\r\n\r\nIt is dup #2636\r\n",
      "created_at": "2018-01-11T13:34:38Z",
      "updated_at": "2018-01-11T13:34:38Z"
    },
    {
      "author": "LawrenceHwang",
      "author_association": "NONE",
      "body": "Thank you guys. I checked the discussion in #2636. I see the behavior is caused from the subprocess inherits the variable from its parent now. Wondering why it's does not behave the same the other way around though (launching PowerShell Core from Windows PowerShell)? Launching Windows PowerShell from PowerShell Core may be a less common use case. However, it definitely cause inconsistent user experience.",
      "created_at": "2018-01-11T16:48:09Z",
      "updated_at": "2018-01-11T16:48:09Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@LawrenceHwang Because PowerShell Core needs to ignore the Windows PowerShell `PSModulePath`. `PSModulePath` is set on your system and passed to Windows PowerShell when it starts you can see this by starting cmd.exe form start and running `echo %PSModulePath%`. PowerShell Core needs to ignore this by default to prevent Windows Powershell Modules from loading by default and to find the PowerShell Core modules.",
      "created_at": "2018-01-11T17:01:34Z",
      "updated_at": "2018-01-11T17:01:57Z"
    },
    {
      "author": "Jaykul",
      "author_association": "CONTRIBUTOR",
      "body": "This is ridiculous.\r\n\r\nIf you're not actually reading the variable from the environment that's not really an environment variable, is it?\r\n\r\n",
      "created_at": "2018-05-10T18:22:40Z",
      "updated_at": "2018-05-10T18:22:40Z"
    }
  ],
  "created_at": "2018-01-11T06:23:44Z",
  "number": 5863,
  "state": "closed",
  "title": "Environmental variable not reflected",
  "updated_at": "2018-05-10T20:25:25Z"
}