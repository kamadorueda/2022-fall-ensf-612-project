{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15444",
  "author": "EricLauber",
  "body": "Hello, this is my first time submitting an issue to this repo. Sorry if I make a mistake. I'm running the latest non-preview PowerShell, 7.1.3.\r\n\r\nWhen I manage or administrate some systems, I need to use dedicated admin-accounts on our domain. I use PowerShell to do this. For example, I run: `Start-Process \"C:\\Program Files (x86)\\Microsoft SQL Server Management Studio 18\\Common7\\IDE\\Ssms.exe\" -Credential \"MYDOMAIN\\ADMINACCOUNT\"` to run SSMS under the other context. In non-PowerShell Core, Windows will popup a dialog to enter in the pwd for these credentials, and then proceed as normally.\r\n\r\n## Steps to reproduce\r\n\r\nIn PowerShell 7.1.3 though, running the exact same command, I get a different experience, followed by a series of errors. `Start-Process` will prompt for credentials within the terminal shell, which is fine. But I then get various window popups:\r\n- The 'Microsoft.SqlServer.Management.ThreatDetection.ThreatDetectionPackage, Microsoft.SqlServer.Management.ThreatDetection, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91' package did not load correctly.\r\n- The 'Management Studio Update Checker' package did not load correctly.\r\n- The 'SqlTelemetryPackage' package did not load correctly.\r\n- The 'Microsoft.SqlServer.Management.SqlStudio.Explorer.SqlStudioExplorer, Microsoft.SqlServer.Management.SqlStudio.Explorer, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91' package did not load correctly.\r\n\r\nSSMS then opens, but the toolbar icons are missing, and in the Object Explorer there is another error:\r\nSystem.Runtime.InteropServices.COMException (0x80004005): Error HRESULT E_FAIL has been returned from a call to a COM component.\r\n   at Microsoft.VisualStudio.Shell.Interop.IVsShell5.LoadPackageWithContext(Guid& packageGuid, Int32 reason, Guid& context)\r\n   at Microsoft.VisualStudio.Platform.WindowManagement.WindowFrame.GetPackage()\r\n   at Microsoft.VisualStudio.Platform.WindowManagement.WindowFrame.ConstructContent()\r\n\r\n## Expected Behavior\r\n\r\nWork just like previous versions of PowerShell. Just run the application as that context.",
  "closed_at": null,
  "comments": [],
  "created_at": "2021-05-24T15:23:16Z",
  "number": 15444,
  "state": "open",
  "title": "Start-Process with -Credential causes errors when running SSMS (7.1.3)",
  "updated_at": "2021-05-24T15:25:12Z"
}