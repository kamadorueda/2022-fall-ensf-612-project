{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12165",
  "author": "mklement0",
  "body": "_Some_, but by no means all built-in aliases are defined with the `AllScope` option\r\n(`pwsh -noprofile { get-alias | ? options -like '*allscope*' }`; as an aside: in Windows PowerShell it is _all but a few_).\r\n\r\nRemoving and redefining such aliases works for _invocation_, but makes  _tab completion_ malfunction: The _original_ alias definition's parameters are still being completed.\r\n(By contrast, tab-completion works fine for redefining a built-in alias _not_ defined with `AllScope`.)\r\n\r\n# Steps to reproduce\r\n\r\nNote: \r\n\r\n```powershell\r\nfunction foo { param($bar) \"[$bar]\" }  # Sample function\r\n\r\n# Remove the built-in AllScopes `cd` alias and redefine it to execute `foo`.\r\nRemove-Alias cd; Set-Alias cd foo\r\n\r\n# Make sure that the redefinition worked:\r\ncd -bar baz | Should -Be '[baz]'\r\n```\r\n\r\nNow tab-complete _interactively_:\r\n\r\n```powershell\r\n# OK: tab-completion with `foo` directly.\r\nPS> foo -b<tab> # -> '-bar'\r\n\r\n# BROKEN: tab-completion with redefined `cd` alias\r\nPS> cd -b<tab> # -> !! NO COMPLETION\r\n# Still sees the original parameters:\r\nPS> cd -lit<tab> # -> !! '-LiteralPath'\r\n```\r\n\r\nNote:  I tried to use the following Pester test, but doing so actually makes the symptom _disappear_:\r\n\r\n```powershell\r\n# !! Unexpectedly works, unlike in interactive use.\r\n(TabExpansion2 'cd -b').CompletionMatches.CompletionText | Should -Be '-bar'\r\n```\r\n\r\n# Expected behavior\r\n\r\nAll tests should succeed.\r\n\r\n# Actual behavior\r\n\r\nInteractive tab-completion with the defined `cd` fails, as shown above.\r\n\r\n# Environment data\r\n\r\n```none\r\nPowerShell Core 7.0\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "This is a duplicate of the PSReadLine issue `https://github.com/PowerShell/PSReadLine/issues/453`.\r\n`AllScope` means the alias will be copied to every scope that gets created, and it's copied to PSReadLine's module scope.\r\nWhen you remove the alias, you remove it from the global scope, but not from the scopes where that alias has already been copied, within those scopes, `cd` is still pointing to `Set-Location`, and calling `TabExpansion2` within those scopes will of course operate on `Set-Location`.\r\n\r\nSee https://github.com/PowerShell/PSReadLine/issues/453#issuecomment-341629310 for details.\r\nNote that this is not a problem only with PSReadLine, but with any modules that are already loaded before `Remove-Alias cd`.",
      "created_at": "2020-03-24T17:42:23Z",
      "updated_at": "2020-03-24T17:42:23Z"
    }
  ],
  "created_at": "2020-03-20T16:20:30Z",
  "number": 12165,
  "state": "open",
  "title": "Tab-completion doesn't work properly when AllScope aliases are redefined.",
  "updated_at": "2020-03-24T17:43:13Z"
}