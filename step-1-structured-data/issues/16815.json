{
  "_url": "https://github.com/PowerShell/PowerShell/issues/16815",
  "author": "JoeSalmeri",
  "body": "### Prerequisites\n\n- [X] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\n\n### Steps to reproduce\n\nWhere-Object produces incorrect and inconsistent results depending on whether a scriptblock or property is used for the criteria\r\n\r\nI found this issue with much more complicated function I wrote BUT have reduced it down the following example code:\r\n\r\n        $o = [pscustomobject] @{ Value1 = 'abc' ; Value2 = 'abc' }\r\n\r\n        $o\r\n\r\n             which displays the following ( as expected )\r\n\r\n                      Value1 Value2\r\n                      ------ ------\r\n                      abc    abc\r\n\r\n        $o.Value1 -eq $o.Value2\r\n\r\n              which returns True ( as expected )\r\n\r\n        $o | Where-Object Value1 -ne Value2\r\n\r\n              which returns the following which is NOT expected\r\n\r\n                    Value1 Value2\r\n                    ------ ------\r\n                    abc    abc\r\n\r\n        $o | Where-Object { $_.Value1 -ne $_.Value2 }\r\n\r\n                which returns NOTHING as expected since Value1 and Value2 are the same\r\n\r\nWhy does \"$o | Where-Object Value1 -ne Value2\" produce the wrong result and not the same result as \r\n\"$o | Where-Object { $_.Value1 -ne $_.Value2 }\"\r\n\r\nI thought the purpose of simple Where-Object use was to avoid the script block?\r\n\r\nWhat have I missed ?\r\n\r\n\r\n\r\n\r\n\n\n### Expected behavior\n\n```console\nDocumented inline with example\n```\n\n\n### Actual behavior\n\n```console\nDocumented inline with example\n```\n\n\n### Error details\n\n```console\nDocumented inline with example\n```\n\n\n### Environment data\n\n```powershell\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.1\r\nPSEdition                      Core\r\nGitCommitId                    7.2.1\r\nOS                             Linux 5.15.12-1-default #1 SMP Wed Dec 29 14:50:16 UTC 2021 (375fcb8)\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n*** NOTE: \r\n\r\nThis issue was reproduced on Linux AND Windows using pwsh 7.2.1 but I have also reproduced back to pwsh 7.1.5\n```\n\n\n### Visuals\n\n_No response_",
  "closed_at": "2022-01-28T01:05:09Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "The scriptblock-less parameter set only evaluates the first argument as resolving to a property name on the object. The fully laid out pattern is:\r\n\r\n```powershell\r\n$objects | Where-Object -Property PropertyName -eq -Value $someValue\r\n```\r\n\r\nIn other words, only the `Value1` in your example is actually considered to reference the property, and the `Value2` in your example is treated as a literal string `\"Value2\"`.\r\n\r\nThe [documentation](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/where-object?view=powershell-7.2#description) for Where-Object has more detailed explanations and examples. \ud83d\ude42 ",
      "created_at": "2022-01-27T23:42:28Z",
      "updated_at": "2022-01-27T23:45:02Z"
    },
    {
      "author": "JoeSalmeri",
      "author_association": "NONE",
      "body": "@vexx32 \r\n\r\nThanks very much, that makes perfect sense now.\r\n\r\nFrequently my Where-Object logic needs a script block because it is more than one condition requiring -and / -or\r\n\r\nA lot of the examples in the docs are very similar along the lines of \r\n\r\nWhere-Object Something -eq 'somevalue' \r\n\r\nwhich the docs say are the same as \r\n\r\nWhere-Object { $_.Something -eq 'somevalue'  }\r\n\r\nI mistakenly jumped to the conclusion that ANY single value comparison could use the comparison logic instead of a script block.\r\n\r\nThanks very much for the clarification, I appreciate it!\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
      "created_at": "2022-01-28T01:05:09Z",
      "updated_at": "2022-01-28T01:05:09Z"
    }
  ],
  "created_at": "2022-01-27T23:29:10Z",
  "number": 16815,
  "state": "closed",
  "title": "Where-Object provides incorrect and inconsistent results",
  "updated_at": "2022-01-28T01:06:02Z"
}