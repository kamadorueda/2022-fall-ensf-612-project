{
  "_url": "https://github.com/PowerShell/PowerShell/issues/1584",
  "author": "oising",
  "body": "From psmvp list\n\n> is there any plan to support gnus-style double hyphen parameter parsing on *nix? It seems there's already some leeway there for environment specific tweaks (if reading through the github issues list is taken into account.) What am I talking about? Well, how fully specified arguments for gnu utils are provided like --debug (double), but can be abbreviated as -d (single). Is there room to update the binder to support both -debug and --debug? (for example.) I can't see that being a breaking change, but it might be a nice spot of grease to ease the muscle memory.\n",
  "closed_at": "2017-03-15T18:34:47Z",
  "comments": [
    {
      "author": "DanielFallon",
      "author_association": "NONE",
      "body": "@SteveL-MSFT \r\n\r\ntwo questions, \r\n\r\n- Is this support only intended to be added to *nix environments?\r\n  - A large number of tools released cross platform use --long-option for their options. \r\n- Is there any update on this? 6.0.0-Alpha.11 was reached in October. \r\n\r\n",
      "created_at": "2017-01-13T12:05:07Z",
      "updated_at": "2017-01-13T12:05:07Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@TheElf work for this hasn't started yet (assigned means someone is actively working on it, unassigned means the opposite).  I updated the Milestone to indicate this is something we should have before we declare a beta.  The Alpha.11 milestone used was before we had defined our 6.0.0 and 6.0.0-beta milestones and meant anything not for the first public release.",
      "created_at": "2017-01-13T17:16:33Z",
      "updated_at": "2017-01-13T17:16:33Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "I think this requires some discussion before anyone starts work.\r\nIs the proposal to allow `--parameter` to mean the same thing as `-parameter` when calling PowerShell commands?\r\nIf so, I have one big concern about portability. Should we do this for Windows, or *nix only? Either way, it will allow folks to write scripts that are not portable to Windows PowerShell.",
      "created_at": "2017-01-13T21:22:28Z",
      "updated_at": "2017-01-13T21:22:28Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "We talked about this one in our last @PowerShell/powershell-committee meeting. We definitely have a strong desire to align with Linux conventions (and are open to any other suggestions in that space). \r\n\r\nHowever, there's a few reasons why we feel like this could provide a negative value without a strong counter-benefit:\r\n\r\n- As @lzybkr says, this will break portability with Windows PowerShell scripts downlevel (though @jpsnover maintains, and many of us agree, that this isn't a reason in and of itself to reject places where we can align with Linux)\r\n- `--PascalCase` still won't look like `--lisp-case`\r\n- `--d` will actually work for `--debug` when there's not a disambiguation problem\r\n- One can be (reasonably) certain when mixing and matching native commands and PowerShell cmdlets that `--arguments` apply to native commands",
      "created_at": "2017-01-19T00:31:32Z",
      "updated_at": "2017-01-19T00:31:32Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Based on @PowerShell/powershell-committee decision, we are not moving forward with this",
      "created_at": "2017-03-15T18:34:47Z",
      "updated_at": "2017-03-15T18:34:47Z"
    }
  ],
  "created_at": "2016-08-01T03:29:06Z",
  "number": 1584,
  "state": "closed",
  "title": "Consider supporting GNU style double-hyphen prefixed parameters ",
  "updated_at": "2017-03-15T18:34:47Z"
}