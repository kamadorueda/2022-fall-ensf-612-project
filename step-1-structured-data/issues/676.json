{
  "_url": "https://github.com/PowerShell/PowerShell/issues/676",
  "author": "JumpingYang001",
  "body": "When I run ./xunit.sh, it shows below error:\n\nxUnit.net DNX Runner (64-bit ubuntu.14.04-x64)\n  Discovering: powershell-tests\n  Discovered:  powershell-tests\n  Starting:    powershell-tests\n    PSTests.RunspaceTests.TestRunspaceWithPowerShellAndHost [FAIL]\n      System.InvalidOperationException : Binding model is already locked for the AppDomain and cannot be reset.\n      Stack Trace:\n           at System.Runtime.Loader.AssemblyLoadContext.InitializeDefaultContext(AssemblyLoadContext context)\n           at System.Management.Automation.PowerShellAssemblyLoadContextInitializer.SetPowerShellAssemblyLoadContext(String basePaths)\n           at PSTests.RunspaceTests..ctor()\n    PSTests.RunspaceTests.TestRunspaceWithPipeline [FAIL]\n      System.InvalidOperationException : Binding model is already locked for the AppDomain and cannot be reset.\n      Stack Trace:\n           at System.Runtime.Loader.AssemblyLoadContext.InitializeDefaultContext(AssemblyLoadContext context)\n           at System.Management.Automation.PowerShellAssemblyLoadContextInitializer.SetPowerShellAssemblyLoadContext(String basePaths)\n           at PSTests.RunspaceTests..ctor()\n    PSTests.RunspaceTests.TestRunspaceWithPowerShell [FAIL]\n      System.InvalidOperationException : Binding model is already locked for the AppDomain and cannot be reset.\n      Stack Trace:\n           at System.Runtime.Loader.AssemblyLoadContext.InitializeDefaultContext(AssemblyLoadContext context)\n           at System.Management.Automation.PowerShellAssemblyLoadContextInitializer.SetPowerShellAssemblyLoadContext(String basePaths)\n           at PSTests.RunspaceTests..ctor()\n    PSTests.RunspaceTests.TestRunspaceWithFunction [FAIL]\n      System.InvalidOperationException : Binding model is already locked for the AppDomain and cannot be reset.\n      Stack Trace:\n           at System.Runtime.Loader.AssemblyLoadContext.InitializeDefaultContext(AssemblyLoadContext context)\n           at System.Management.Automation.PowerShellAssemblyLoadContextInitializer.SetPowerShellAssemblyLoadContext(String basePaths)\n           at PSTests.RunspaceTests..ctor()\n    PSTests.RunspaceTests.TestRunspaceWithPowerShellAndInitialSessionState [FAIL]\n      System.InvalidOperationException : Binding model is already locked for the AppDomain and cannot be reset.\n      Stack Trace:\n           at System.Runtime.Loader.AssemblyLoadContext.InitializeDefaultContext(AssemblyLoadContext context)\n           at System.Management.Automation.PowerShellAssemblyLoadContextInitializer.SetPowerShellAssemblyLoadContext(String basePaths)\n           at PSTests.RunspaceTests..ctor()\n  Finished:    powershell-tests\n=== TEST EXECUTION SUMMARY ===\n   powershell-tests  Total: 41, Errors: 0, Failed: 5, Skipped: 0, Time: 1.908s\n/workspace/PowerShell\n",
  "closed_at": "2016-03-18T01:32:29Z",
  "comments": [
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "That came in with the new package updates. We really need to get our xUnit tests running automatically, as I rushed #662 through to unblock another developer.\n\nThe root cause is that .NET enabled a safety check that is completely valid, and we were previously skirting it in these tests. The test setup function that initializes the `AssemblyLoadContext` should only be called once, but is being for each test it seems.\n",
      "created_at": "2016-03-16T05:25:41Z",
      "updated_at": "2016-03-16T05:25:41Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Sorry, I haven't even had time to get this filed to get fixed properly. Thanks for reporting.\n",
      "created_at": "2016-03-16T05:27:40Z",
      "updated_at": "2016-03-16T05:28:07Z"
    },
    {
      "author": "JumpingYang001",
      "author_association": "CONTRIBUTOR",
      "body": "## @andschwa I use below code to fix calling once issue, but I meet another issue when fix it.\n\n``` sh\npublic static object setupObject;\n\n        // Initialize the Core PowerShell AssemblyLoadContext\n        public RunspaceTests()\n        {\n            if(setupObject==null)\n            {\n                setupObject=new object();\n                PowerShellAssemblyLoadContextInitializer.SetPowerShellAssemblyLoadContext(AppContext.BaseDirectory);\n            }\n        }\n```\n\n---\n\nNew error:\nxUnit.net DNX Runner (64-bit ubuntu.14.04-x64)\n  Discovering: powershell-tests\n  Discovered:  powershell-tests\n  Starting:    powershell-tests\n    PSTests.RunspaceTests.TestRunspaceWithPowerShellAndHost [FAIL]\n      System.InvalidOperationException : Binding model is already locked for the AppDomain and cannot be reset.      Stack Trace:\n           at System.Runtime.Loader.AssemblyLoadContext.InitializeDefaultContext(AssemblyLoadContext context)\n           at System.Management.Automation.PowerShellAssemblyLoadContextInitializer.SetPowerShellAssemblyLoadContext(String basePaths)\n           at PSTests.RunspaceTests..ctor()\n    PSTests.RunspaceTests.TestRunspaceWithPipeline [FAIL]\n      System.InvalidOperationException : The default AssemblyLoadContext in use is invalid. The default AssemblyLoadContext for PowerShell Core should be of type 'PowerShellAssemblyLoadContext'.\n      Stack Trace:\n           at System.Management.Automation.ClrFacade.GetAssemblyLoadContext()\n           at System.Management.Automation.ClrFacade.Load(AssemblyName assembly)\n           at System.Management.Automation.Runspaces.RunspaceConfigForSingleShell.LoadMshSnapinAssembly(PSSnapInInfo mshsnapinInfo)\n           at System.Management.Automation.Runspaces.RunspaceConfigForSingleShell.LoadPSSnapIn(PSSnapInInfo mshsnapinInfo)\n           at System.Management.Automation.Runspaces.RunspaceConfigForSingleShell.LoadPSSnapIns(Collection`1 mshsnapinInfos, PSConsoleLoadException& warning)\n           at System.Management.Automation.Runspaces.RunspaceConfigForSingleShell.LoadConsole(PSConsoleLoadException& warning)\n           at System.Management.Automation.Runspaces.RunspaceConfigForSingleShell.CreateDefaultConfiguration()\n           at System.Management.Automation.Runspaces.RunspaceConfiguration.Create()\n           at System.Management.Automation.Runspaces.RunspaceFactory.CreateRunspace(PSHost host)\n           at System.Management.Automation.Runspaces.RunspaceFactory.CreateRunspace()\n           at PSTests.RunspaceTests.TestRunspaceWithPipeline()\n    PSTests.RunspaceTests.TestRunspaceWithPowerShell [FAIL]\n      System.InvalidOperationException : The default AssemblyLoadContext in use is invalid. The default AssemblyLoadContext for PowerShell Core should be of type 'PowerShellAssemblyLoadContext'.\n      Stack Trace:\n           at System.Management.Automation.ClrFacade.GetAssemblyLoadContext()\n           at System.Management.Automation.ClrFacade.Load(AssemblyName assembly)\n           at System.Management.Automation.Runspaces.RunspaceConfigForSingleShell.LoadMshSnapinAssembly(PSSnapInInfo mshsnapinInfo)\n           at System.Management.Automation.Runspaces.RunspaceConfigForSingleShell.LoadPSSnapIn(PSSnapInInfo mshsnapinInfo)\n           at System.Management.Automation.Runspaces.RunspaceConfigForSingleShell.LoadPSSnapIns(Collection`1 mshsnapinInfos, PSConsoleLoadException& warning)\n           at System.Management.Automation.Runspaces.RunspaceConfigForSingleShell.LoadConsole(PSConsoleLoadException& warning)\n           at System.Management.Automation.Runspaces.RunspaceConfigForSingleShell.CreateDefaultConfiguration()\n           at System.Management.Automation.Runspaces.RunspaceConfiguration.Create()\n           at System.Management.Automation.Runspaces.RunspaceFactory.CreateRunspace(PSHost host)\n           at System.Management.Automation.Runspaces.RunspaceFactory.CreateRunspace()\n           at PSTests.RunspaceTests.TestRunspaceWithPowerShell()\n    PSTests.RunspaceTests.TestRunspaceWithFunction [FAIL]\n      System.InvalidOperationException : The default AssemblyLoadContext in use is invalid. The default AssemblyLoadContext for PowerShell Core should be of type 'PowerShellAssemblyLoadContext'.\n      Stack Trace:\n           at System.Management.Automation.ClrFacade.GetAssemblyLoadContext()\n           at System.Management.Automation.ClrFacade.Load(AssemblyName assembly)\n           at System.Management.Automation.Runspaces.PSSnapInHelpers.LoadPSSnapInAssembly(PSSnapInInfo psSnapInInfo, Dictionary`2& cmdlets, Dictionary`2& providers)\n           at System.Management.Automation.Runspaces.InitialSessionState.ImportPSSnapIn(PSSnapInInfo psSnapInInfo, PSSnapInException& warning)\n           at System.Management.Automation.Runspaces.InitialSessionState.ImportCorePSSnapIn()\n           at System.Management.Automation.Runspaces.InitialSessionState.CreateDefault2()\n           at Microsoft.PowerShell.Linux.Host.Listener..ctor(String initialScript, Boolean loadProfiles)\n           at PSTests.RunspaceTests.TestRunspaceWithFunction()\n    PSTests.RunspaceTests.TestRunspaceWithPowerShellAndInitialSessionState [FAIL]\n      System.InvalidOperationException : The default AssemblyLoadContext in use is invalid. The default AssemblyLoadContext for PowerShell Core should be of type 'PowerShellAssemblyLoadContext'.\n      Stack Trace:\n           at System.Management.Automation.ClrFacade.GetAssemblyLoadContext()\n           at System.Management.Automation.ClrFacade.Load(AssemblyName assembly)\n           at System.Management.Automation.Runspaces.PSSnapInHelpers.LoadPSSnapInAssembly(PSSnapInInfo psSnapInInfo, Dictionary`2& cmdlets, Dictionary`2& providers)\n           at System.Management.Automation.Runspaces.InitialSessionState.ImportPSSnapIn(PSSnapInInfo psSnapInInfo, PSSnapInException& warning)\n           at System.Management.Automation.Runspaces.InitialSessionState.ImportCorePSSnapIn()\n           at System.Management.Automation.Runspaces.InitialSessionState.CreateDefault2()\n           at PSTests.RunspaceTests.TestRunspaceWithPowerShellAndInitialSessionState()\n  Finished:    powershell-tests\n",
      "created_at": "2016-03-16T09:02:12Z",
      "updated_at": "2016-03-16T09:02:57Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Can you re-test on the latest `master` branch? I know I saw the same errors in the last few days, but I can't reproduce it any more.\n",
      "created_at": "2016-03-16T17:18:39Z",
      "updated_at": "2016-03-16T17:18:39Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Strange. It only reproduces intermittently. 1/3 runs just now.\n",
      "created_at": "2016-03-16T19:06:57Z",
      "updated_at": "2016-03-16T19:06:57Z"
    },
    {
      "author": "JumpingYang001",
      "author_association": "CONTRIBUTOR",
      "body": "@andschwa We still repro this error, you can login ps64-ubun14-01 (IP: 10.231.73.77 ) user: root password:OpsMgr2007R2 to check the result under /root folder, thanks.\n",
      "created_at": "2016-03-17T03:13:17Z",
      "updated_at": "2016-03-17T03:13:17Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "That's no problem, it reproed for me eventually, just not the first or second time. Which is strange. I'll look into this further.\n",
      "created_at": "2016-03-17T06:50:58Z",
      "updated_at": "2016-03-17T06:50:58Z"
    }
  ],
  "created_at": "2016-03-16T05:08:27Z",
  "labels": [
    "WG-Quality-Test"
  ],
  "number": 676,
  "state": "closed",
  "title": "5 xUnit cases failed with \"System.InvalidOperationException : Binding model is already locked for the AppDomain and cannot be reset.\"",
  "updated_at": "2016-03-18T01:32:33Z"
}