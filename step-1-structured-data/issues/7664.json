{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7664",
  "author": "ryhayash",
  "body": "Description\r\n------------------\r\nGet-WinEvent fails to retrieve the event description for Event 7023 and EventLogException is thrown. But you can see the event correctly with wevtutil and Event Viewer. As far as I checked, this issue happens with RS2 or later and we don\u2019t see the exception on RS1.\r\n\r\n<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\n- Windows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nIf it is a bug report:\r\n- make sure you are able to repro it on the latest released version. \r\nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n- Fill out the following repro template:\r\n\r\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\r\n-->\r\n\r\nSteps to reproduce\r\n------------------\r\n1. Setup Windows 10 RS2 or later.\r\n2. Save below \u2018Sample.txt\u201d to the machine and change the extension to 'evtx'. (ex. Save as C:\\work\\Sample.evtx)\r\n\r\n   [Sample.txt](https://github.com/PowerShell/PowerShell/files/2338332/Sample.txt)\r\n\r\n3. Run Get-WinEvent like below.\r\n\r\n\r\n```powershell\r\nPS C:\\Windows\\system32> Get-WinEvent -path C:\\work\\Sample.evtx\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```\r\n   ProviderName: Service Control Manager\r\n\r\nTimeCreated                     Id LevelDisplayName Message\r\n-----------                     -- ---------------- -------\r\n8/13/2015 3:05:14 PM          7023 Error            \u3000Windows Modules Installer terminated with the following error: %%16405  <--- We expect this message is displayed.\r\n\r\n-----------------------------\r\n\r\n```\r\n\r\nActual behavior\r\n---------------\r\nEventLogException is thrown in EvtFormatMessageRenderName() and the event description is not displayed.\r\n\r\n```\r\nPS C:\\Windows\\system32> Get-WinEvent -path C:\\work\\Sample.evtx\r\nGet-WinEvent : The description string for parameter reference (%1) could not be found\r\nAt line:1 char:1\r\n+ Get-WinEvent -path C:\\work\\Sample.evtx\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : NotSpecified: (:) [Get-WinEvent], EventLogException\r\n    + FullyQualifiedErrorId : The description string for parameter reference (%1) could not be found,Microsoft.PowerSh\r\n   ell.Commands.GetWinEventCommand\r\n\r\n\r\n\r\n   ProviderName: Service Control Manager\r\n\r\nTimeCreated                     Id LevelDisplayName Message\r\n-----------                     -- ---------------- -------\r\n8/13/2015 3:05:14 PM          7023 Error            Cannot retrieve event message text.  <----------- This is not expected.\r\n```\r\n\r\nI collected iDNA trace for the powershell.exe and found that this happens because EventLog service returns ERROR_EVT_UNRESOLVED_PARAMETER_INSERT(0x3ab6) when EvtFormatMessage() is issued from the Get-WinEvent and the error is not handled in EvtFormatMessageRenderName. It looks like the ERROR_EVT_UNRESOLVED_PARAMETER_INSERT could be retruned from EventLog service from RS2 and we need to handle this error. The sb(message of the event description) in EvtFormatMessageRenderName has correct actual event message and we can display the sb if ERROR_EVT_UNRESOLVED_PARAMETER_INSERT is handled accordingly. So please consider to display the sb event when ERROR_EVT_UNRESOLVED_PARAMETER_INSERT is returned from EvtFormatMessage.\r\n\r\nHere is the stack:\r\n```\r\n0:000> kL\r\nChild-SP          RetAddr           Call Site\r\n00000067`de80e1a0 00007ffc`762d3757 clr!MarshalNative::GetLastWin32Error+0x9\r\n00000067`de80e1d0 00007ffc`762d977b system_core_ni!System.Diagnostics.Eventing.Reader.NativeWrapper.EvtFormatMessageRenderName(System.Diagnostics.Eventing.Reader.EventLogHandle, System.Diagnostics.Eventing.Reader.EventLogHandle, EvtFormatMessageFlags)+0x137\r\n00000067`de80e260 00007ffc`913a7120 system_core_ni!System.Diagnostics.Eventing.Reader.ProviderMetadataCachedInformation.GetFormatDescription(System.String, System.Diagnostics.Eventing.Reader.EventLogHandle)+0x9b\r\n00000067`de80e2d0 00007ffc`913a6df6 microsoft_powershell_commands_diagnostics_ni!Microsoft.PowerShell.Commands.GetWinEventCommand.ReadEvents(System.Diagnostics.Eventing.Reader.EventLogReader)+0xa0\r\n00000067`de80e340 00007ffc`74bc717c microsoft_powershell_commands_diagnostics_ni!Microsoft.PowerShell.Commands.GetWinEventCommand.ProcessFile()+0x2e6\r\n00000067`de80e3b0 00007ffc`74bc731d system_management_automation_ni!System.Management.Automation.CommandProcessorBase.Complete()+0x9c\r\n00000067`de80e410 00007ffc`74c4987e \r\n    :\r\n\r\n0:000> r\r\nrax=00000180260957b0 rbx=0000000000000001 rcx=0000d318fb1fe99e\r\nrdx=00000180260957b0 rsi=000001800e723058 rdi=000001800e71f700\r\nrip=00007ffc7ac2c889 rsp=00000067de80e1a0 rbp=00000067de80e250\r\n r8=0000000000000000  r9=0000000000000000 r10=00000067de80e010\r\nr11=00000067de80ded0 r12=000001800e716640 r13=0000000000000000\r\nr14=000001800e7233b0 r15=0000000000000000\r\niopl=0         nv up ei pl nz na po nc\r\ncs=0033  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00000206\r\nclr!MarshalNative::GetLastWin32Error+0x9:\r\n00007ffc`7ac2c889 8b8058010000    mov     eax,dword ptr [rax+158h] ds:00000180`26095908=00003ab6 <---- The error in EvtFormatMessage is ERROR_EVT_UNRESOLVED_PARAMETER_INSERT(0x3ab6)\r\n\r\nThe sb has actual event messages and we can show this if the error is handled accordingly.\r\n\r\n0:000> !ClrStack -i sb.m_ChunkChars 0\r\n\r\nDumping managed stack and managed variables using ICorDebug.\r\n\r\nChild SP         IP               Call Site\r\n00000067de80e1d0 00007ffc762d374e [DEFAULT] String System.Diagnostics.Eventing.Reader.NativeWrapper.EvtFormatMessageRenderName(Class System.Diagnostics.Eventing.Reader.EventLogHandle,Class System.Diagnostics.Eventing.Reader.EventLogHandle,ValueClass EvtFormatMessageFlags) (C:\\Windows\\Microsoft.Net\\assembly\\GAC_MSIL\\System.Core\\v4.0_4.0.0.0__b77a5c561934e089\\System.Core.d)\r\n\r\nPARAMETERS:\r\n  + (Error 0x80131304 retrieving parameter 'pmHandle')\r\n  + (Error 0x80131304 retrieving parameter 'eventHandle')\r\n  + (Error 0x80131304 retrieving parameter 'flag')\r\n\r\nLOCALS:\r\n  + (Error 0x80004005 retrieving local variable 'bufferNeeded')\r\n  + System.Text.StringBuilder sb @ 0x1800e7233b0\r\n     |- char[] m_ChunkChars   (56 elements)\r\n         |- [0]  = 'W'\r\n         |- [1]  = 'i'\r\n         |- [2]  = 'n'\r\n         |- [3]  = 'd'\r\n         |- [4]  = 'o'\r\n         |- [5]  = 'w'\r\n         |- [6]  = 's'\r\n         |- [7]  = ' '\r\n         |- [8]  = 'M'\r\n         |- [9]  = 'o'\r\n         |- [10]  = 'd'\r\n         |- [11]  = 'u'\r\n         |- [12]  = 'l'\r\n         |- [13]  = 'e'\r\n         |- [14]  = 's'\r\n         |- [15]  = ' '\r\n         |- [16]  = 'I'\r\n         |- [17]  = 'n'\r\n         |- [18]  = 's'\r\n         |- [19]  = 't'\r\n         |- [20]  = 'a'\r\n         |- [21]  = 'l'\r\n         |- [22]  = 'l'\r\n         |- [23]  = 'e'\r\n         |- [24]  = 'r'\r\n         |- [25]  = ' '\r\n         |- [26]  = '\u30b5'\r\n         |- [27]  = '\u30fc'\r\n         |- [28]  = '\u30d3'\r\n         |- [29]  = '\u30b9'\r\n         |- [30]  = '\u306f'\r\n         |- [31]  = '\u3001'\r\n         |- [32]  = '\u6b21'\r\n         |- [33]  = '\u306e'\r\n         |- [34]  = '\u30a8'\r\n         |- [35]  = '\u30e9'\r\n         |- [36]  = '\u30fc'\r\n         |- [37]  = '\u3067'\r\n         |- [38]  = '\u7d42'\r\n         |- [39]  = '\u4e86'\r\n         |- [40]  = '\u3057'\r\n         |- [41]  = '\u307e'\r\n         |- [42]  = '\u3057'\r\n         |- [43]  = '\u305f'\r\n         |- [44]  = ':'\r\n         |- [45]  = ' '\r\n'        |- [46]  = '\r\n         |- [47]  = '\r\n'\r\n         |- [48]  = '%'\r\n         |- [49]  = '%'\r\n         |- [50]  = '1'\r\n         |- [51]  = '6'\r\n         |- [52]  = '4'\r\n         |- [53]  = '0'\r\n         |- [54]  = '5'\r\n         |- [55]  = ''\r\n```\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value\r\n----                           -----\r\nPSVersion                      5.1.17134.228\r\nPSEdition                      Desktop\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nBuildVersion                   10.0.17134.228\r\nCLRVersion                     4.0.30319.42000\r\nWSManStackVersion              3.0\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1 \r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "ryhayash",
      "author_association": "NONE",
      "body": "The sample.evtx was attached in the above repro steps.",
      "created_at": "2018-08-31T00:22:26Z",
      "updated_at": "2018-08-31T00:22:26Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@ryhayash Thans for the report and great repo!\r\n\r\nIt's not clear to me where this should be fixed in the repo or in Windows code. Although if it works in wevtutil and Event Viewer we could fix this in PowerShell.\r\n\r\n@ryhayash Do you want to offer PR?",
      "created_at": "2018-08-31T05:40:44Z",
      "updated_at": "2018-08-31T05:40:44Z"
    },
    {
      "author": "ryhayash",
      "author_association": "NONE",
      "body": "Thanks @iSazonov for looking into this. Yes, that would be great if we can fix this as the event message become able to be displayed correctly. Should I create a PR although I've never done that before?\r\n\r\nThis might not be best way but just simply adding a case for ERROR_EVT_UNRESOLVED_PARAMETER_INSERT would resolve this issue like below. I've already confirmed actual code for 'error' and 'status' in EvtFormatMessageRenderName during repro from iDNA trace and the 'status' was E_FAIL(0x80004005) and 'error' was UnsafeNativeMethods.ERROR_EVT_UNRESOLVED_PARAMETER_INSERT(0x3ab6). So below code would be able to handle this case.\r\n\r\nEvtFormatMessageRenderName:\r\nhttps://referencesource.microsoft.com/#system.core/System/Diagnostics/Eventing/Reader/NativeWrapper.cs,38a28b69081629e4\r\n\r\n\r\nLine 998:\r\n````\r\n            sb.EnsureCapacity(bufferNeeded);\r\n            status = UnsafeNativeMethods.EvtFormatMessage(pmHandle, eventHandle, 0, 0, null, flag, bufferNeeded, sb, out bufferNeeded);\r\n            error = Marshal.GetLastWin32Error();\r\n \r\n            if (!status && error != UnsafeNativeMethods.ERROR_EVT_UNRESOLVED_VALUE_INSERT)            \r\n            {\r\n                switch (error) {\r\n                    case UnsafeNativeMethods.ERROR_EVT_UNRESOLVED_PARAMETER_INSERT:  <----- Add this line\r\n                        return sb.ToString();                                        <----- Add this line.\r\n                    case UnsafeNativeMethods.ERROR_EVT_MESSAGE_NOT_FOUND:\r\n                    case UnsafeNativeMethods.ERROR_EVT_MESSAGE_ID_NOT_FOUND:\r\n                    case UnsafeNativeMethods.ERROR_EVT_MESSAGE_LOCALE_NOT_FOUND:\r\n                    case UnsafeNativeMethods.ERROR_RESOURCE_LANG_NOT_FOUND:\r\n                    case UnsafeNativeMethods.ERROR_MUI_FILE_NOT_FOUND:\r\n                        return null;\r\n                }\r\n                EventLogException.Throw(error);\r\n            }\r\n            return sb.ToString();\r\n        }\r\n\r\n````",
      "created_at": "2018-08-31T06:27:51Z",
      "updated_at": "2018-08-31T06:27:51Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> Should I create a PR although I've never done that before?\r\n\r\nIt is _Open project_ - feel free to contribute if you want. We welcome everyone who wants to develop the project. \r\n\r\nAlso if you think that the fix should be in .Net please open issue in CoreFX repo https://github.com/dotnet/corefx.",
      "created_at": "2018-08-31T07:37:59Z",
      "updated_at": "2018-08-31T07:37:59Z"
    },
    {
      "author": "ryhayash",
      "author_association": "NONE",
      "body": "Thanks, just let me double check. The issue was in EvtFormatMessageRenderName() in system.core.ni.dll, and the dll belongs to the CoreFX. Is that correct? If so, I will file this to the CoreFX and please close the issue.",
      "created_at": "2018-08-31T08:22:52Z",
      "updated_at": "2018-08-31T08:22:52Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "No need open an issue in CoreFX repo. The classes in not in .Net Core. We have them temporary in the PowerShell repo.\r\nYou can find the line with proposed fix here\r\nhttps://github.com/PowerShell/PowerShell/blob/master/src/Microsoft.PowerShell.CoreCLR.Eventing/DotNetCode/Eventing/Reader/NativeWrapper.cs\r\n\r\n",
      "created_at": "2018-08-31T10:12:09Z",
      "updated_at": "2018-08-31T10:12:09Z"
    }
  ],
  "created_at": "2018-08-30T12:01:23Z",
  "labels": [
    "Issue-Bug",
    "WG-Cmdlets"
  ],
  "number": 7664,
  "state": "open",
  "title": "Get-WinEvent fails to retrieve an event description with EventLogException",
  "updated_at": "2018-08-31T10:12:09Z"
}