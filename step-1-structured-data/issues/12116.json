{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12116",
  "author": "harrisonmetz",
  "body": "The earlier builds have a win-arm64 build but I do not see one from 7.0 (even the RCs have them). Would it be possible to get one so we can use on Microsoft's own Surface Pro X device without x86 emulation. Thanks.",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "/cc @heaths for information.",
      "created_at": "2020-03-16T05:16:00Z",
      "updated_at": "2020-03-16T05:16:00Z"
    },
    {
      "author": "heaths",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov I don't own the installers. I'm not sure who does. I'm only fixing the many upgrade issues.",
      "created_at": "2020-03-16T18:09:05Z",
      "updated_at": "2020-03-16T18:09:05Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@heaths I ping you only for information so that this request is not a surprise for you.",
      "created_at": "2020-03-17T03:40:03Z",
      "updated_at": "2020-03-17T03:40:03Z"
    },
    {
      "author": "heaths",
      "author_association": "CONTRIBUTOR",
      "body": "I see. That will have to be a separate fix, I believe. The WiX authoring needs to be updated to support it, but there's various conditions that assume BUILD64 and whatever else are only two options, unless ARM64 is part of BUILD64. I haven't looked at that specifically. If it were, that's fine - you only need a minimum of 2 UpgradeCodes since x64 and x86 can be installed SxS. Not sure if that's true of ARM/ARM64 but you can't mix the ARM and x86-based platforms together for MSI, I don't believe.\r\n\r\nThere is an easier, more permissive way to write all this but it would be a huge undertaking. I'm trying to make significant but less invasive changes to keep the churn down and avoid unforeseen problems. I'm also trying to consolidate the authoring and conditions into the .wxs files themselves, rather than splattering various conditions in the calling scripts as well (wasn't necessary, and there are better ways than setting environment variables in the calling process, which might affect some other scripts later).",
      "created_at": "2020-03-17T17:22:50Z",
      "updated_at": "2020-03-17T17:22:50Z"
    },
    {
      "author": "reli-msft",
      "author_association": "NONE",
      "body": "WiX added ARM64 support recently: https://github.com/wixtoolset/issues/issues/5558",
      "created_at": "2020-04-30T12:53:50Z",
      "updated_at": "2020-04-30T12:53:50Z"
    },
    {
      "author": "pmsjt",
      "author_association": "NONE",
      "body": "> I see. That will have to be a separate fix, I believe. The WiX authoring needs to be updated to support it, but there's various conditions that assume BUILD64 and whatever else are only two options, unless ARM64 is part of BUILD64. I haven't looked at that specifically. If it were, that's fine - you only need a minimum of 2 UpgradeCodes since x64 and x86 can be installed SxS. Not sure if that's true of ARM/ARM64 but you can't mix the ARM and x86-based platforms together for MSI, I don't believe.\r\n> \r\n> There is an easier, more permissive way to write all this but it would be a huge undertaking. I'm trying to make significant but less invasive changes to keep the churn down and avoid unforeseen problems. I'm also trying to consolidate the authoring and conditions into the .wxs files themselves, rather than splattering various conditions in the calling scripts as well (wasn't necessary, and there are better ways than setting environment variables in the calling process, which might affect some other scripts later).\r\n\r\nYes, on ARM64 x86 and ARM64 can be installed SxS. MiX support for ARM64 has been upstream quite some time ago now. ARM64 should not require any special handling.\r\n\r\nDo you think we can get this added?\r\n\r\nThanks.",
      "created_at": "2020-07-27T07:37:45Z",
      "updated_at": "2020-07-27T07:37:45Z"
    },
    {
      "author": "awakecoding",
      "author_association": "CONTRIBUTOR",
      "body": "+1 for this, it's quite annoying that there are .msi installers for the x86 and x64 builds, but none for ARM64.",
      "created_at": "2020-11-02T01:28:33Z",
      "updated_at": "2020-11-02T01:28:33Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@TravisEz13 Is this important for 7.1 release?",
      "created_at": "2020-11-02T07:14:37Z",
      "updated_at": "2020-11-02T07:14:37Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I think we'll see about doing this for 7.2.",
      "created_at": "2020-11-02T15:45:50Z",
      "updated_at": "2020-11-02T15:45:50Z"
    },
    {
      "author": "harrisonmetz",
      "author_association": "NONE",
      "body": "Even with the 7.1 release being on dotnet 5.0 and the big thing there is that it works on windows arm64, there still isn't an arm64 windows build?",
      "created_at": "2020-11-12T08:45:11Z",
      "updated_at": "2020-11-12T08:45:11Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "There is a build:  https://github.com/PowerShell/PowerShell/releases/download/v7.1.0/PowerShell-7.1.0-win-arm64.zip\n\n<blockquote></blockquote>",
      "created_at": "2020-11-12T18:47:17Z",
      "updated_at": "2020-11-12T18:47:19Z"
    },
    {
      "author": "harrisonmetz",
      "author_association": "NONE",
      "body": "But it's not an msix\n",
      "created_at": "2020-11-12T18:49:58Z",
      "updated_at": "2020-11-12T18:50:02Z"
    },
    {
      "author": "pmsjt",
      "author_association": "NONE",
      "body": "> There is a build: https://github.com/PowerShell/PowerShell/releases/download/v7.1.0/PowerShell-7.1.0-win-arm64.zip\r\n\r\nYeah, no setup of any kind tho, right? No MSI or MSIX.\n\n<blockquote></blockquote>",
      "created_at": "2020-11-12T18:50:05Z",
      "updated_at": "2020-11-12T18:50:08Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@harrisonmetz @pmsjt Welcome to contribute if you have an interest! PowerShell team is very small to address all requests quickly. ",
      "created_at": "2020-11-13T03:25:50Z",
      "updated_at": "2020-11-13T03:25:50Z"
    },
    {
      "author": "awakecoding",
      "author_association": "CONTRIBUTOR",
      "body": "While I still think we need an .msi installer, I did manage to \"install\" it for my needs from the zip file and configure a profile in Windows Terminal. I first installed PowerShell 7.1 x86 to get a profile added in Windows Terminal, which I could copy and edit to point to PowerShell 7.1 ARM64.\r\n\r\nI downloaded PowerShell-7.1.0-win-arm64.zip and extracted its contents to \"C:\\Program Files (Arm)\\PowerShell\\7.1.0\"\r\n\r\nIn Windows Terminal, I clicked the downward arrow and then clicked \"settings\" to edit settings.json. I copy/pasted the PowerShell 7.1 x86 entry to end up with the following:\r\n\r\n        {\r\n            \"guid\": \"{574e775e-4f2a-5b96-ac1e-a2962a402336}\",\r\n            \"hidden\": false,\r\n            \"name\": \"PowerShell 7 (ARM64)\",\r\n            \"commandline\": \"C:\\\\Program Files (Arm)\\\\PowerShell\\\\7.1.0\\\\pwsh.exe\"\r\n        },\r\n        {\r\n            \"guid\": \"{34a13805-9b56-5e89-9234-f02de44bd971}\",\r\n            \"hidden\": false,\r\n            \"name\": \"PowerShell 7 (x86)\",\r\n            \"source\": \"Windows.Terminal.PowershellCore\"\r\n        },`\r\n`\r\n\r\nI now have \"PowerShell 7 (ARM64)\" and \"PowerShell 7 (x86)\" in Windows Terminal, alongside other entries like Windows PowerShell and the old Command Prompt. It is good enough for me now, but I'd rather have an .msi installer.",
      "created_at": "2020-11-13T15:01:06Z",
      "updated_at": "2020-11-13T15:01:06Z"
    },
    {
      "author": "pmsjt",
      "author_association": "NONE",
      "body": "Even though PowerShell MSIs or MSIXs are not being made available here, they are somehow managing to make their way into the Store.\r\n\r\nhttps://www.microsoft.com/store/productId/9MZ1SNWT0N5D\r\n\r\nInstalling from the store is actually more convenient - at least for me - because it takes care of the updating automatically for me.\n\n<blockquote><img src=\"https://store-images.s-microsoft.com/image/apps.2475.13883721464006213.e7408f78-281f-4d17-9448-de93c5af760c.117a2901-b635-43e2-9ff1-38cbb11784ca?w=120&h=120&q=60\" width=\"48\" align=\"right\"><div>Microsoft Store</div><div><strong><a href=\"https://www.microsoft.com/en-us/p/powershell/9mz1snwt0n5d\">Get PowerShell - Microsoft Store</a></strong></div><div>Download this app from Microsoft Store for Windows 10. See screenshots, read the latest customer reviews, and compare ratings for PowerShell. </div></blockquote>",
      "created_at": "2020-11-17T23:27:47Z",
      "updated_at": "2020-11-17T23:27:49Z"
    },
    {
      "author": "dennisameling",
      "author_association": "NONE",
      "body": "Can confirm the version from the Store is native ARM64 \ud83d\ude80 Thanks for sharing @pmsjt!\r\n\r\n![image](https://user-images.githubusercontent.com/17739158/99578439-23332e00-29dd-11eb-94a1-c54cf1fc02eb.png)\r\n",
      "created_at": "2020-11-18T19:32:30Z",
      "updated_at": "2020-11-18T19:32:30Z"
    }
  ],
  "created_at": "2020-03-12T16:16:58Z",
  "labels": [
    "Issue-Bug",
    "Area-Maintainers-Build"
  ],
  "number": 12116,
  "state": "open",
  "title": "Missing win-arm64 msi build for 7.0",
  "updated_at": "2020-12-14T20:24:06Z"
}