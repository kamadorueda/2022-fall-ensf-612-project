{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7725",
  "author": "vexx32",
  "body": "Despite parameters being named as being in separate sets, autocomplete will still offer parameters from other named sets when the set configuration starts to get complicated. Simple parameter sets seem to work, but the logic is breaking down in more complicated scenarios. \r\n\r\nBelow is the test case I was alerted to by a user in the PS Slack channel, and could not reproduce after attempting to simplify the test. I suspect it has something to do with specifying multiple parameter sets.\r\n\r\nThis creates a confusing user experience, where the command seems valid, but will throw a rather unhelpful error, which does not point out which parameters can't be used together.\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\nfunction Test-ParamSet {\r\n    [CmdletBinding(DefaultParameterSetName='SysIDCred')]\r\n    Param(\r\n        # sys_id of the entry - we need either sysid or the number\r\n        [parameter(mandatory=$true)]\r\n        [Parameter(ParameterSetName='SysIDCred')]\r\n        [Parameter(ParameterSetName='SysIDConnObject')]\r\n        [string]$SysId,\r\n\r\n        # number of the entry - we need either sysid or the number\r\n        [Parameter(mandatory=$true)]\r\n        [Parameter(ParameterSetName='NumberCred')]\r\n        [Parameter(ParameterSetName='NumberConnObject')]\r\n        [string]$Number,\r\n\r\n        # Table containing the entry we're deleting\r\n        [parameter(mandatory=$true)]\r\n        [string]$Table,\r\n\r\n        # Credential used to authenticate to ServiceNow\r\n        [Parameter(ParameterSetName='SysIDCred')]\r\n        [Parameter(ParameterSetName='NumberCred')]\r\n        [ValidateNotNullOrEmpty()]\r\n        [PSCredential]$Credential,\r\n\r\n        # The URL for the ServiceNow instance being used\r\n        [Parameter(ParameterSetName='SysIDCred')]\r\n        [Parameter(ParameterSetName='NumberCred')]\r\n        [ValidateNotNullOrEmpty()]\r\n        [string]$URL,\r\n\r\n        # Azure Automation Connection object containing username, password, and URL for the ServiceNow instance\r\n        [Parameter(ParameterSetName='SysIDConnObject')]\r\n        [Parameter(ParameterSetName='NumberConnObject')]\r\n        [ValidateNotNullOrEmpty()]\r\n        [Hashtable]$Connection,\r\n\r\n        # Hashtable of values to use as the record's properties\r\n        [parameter(mandatory=$false)]\r\n        [hashtable]$Values\r\n    )\r\n\r\n    $Message = \"The parameter set name is {0}\" -f $PSCmdlet.ParameterSetName\r\n    Write-Warning $Message\r\n}\r\n\r\nPS> Test-ParamSet -<tab> Value1 -<tab>\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```none\r\nPS> Test-ParamSet -SysID Value1 -Table\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n-Number is from a mutually exclusive param set with SysID and should not be suggested, but is!\r\n\r\n```none\r\nPS> Test-ParamSet -SysID Value1 -Number\r\n```\r\n\r\nThe unhelpful error message when both parameters are provided:\r\n\r\n```none\r\nPS> Test-ParamSet -SysId \"aaa\" -Number \"bbb\" -Table \"ccc\" -Connection @{test = $true}\r\nTest-ParamSet : Parameter set cannot be resolved using the specified named parameters. One or more parameters issued cannot be used together or an insufficient number of parameters were provided.\r\nAt line:1 char:1\r\n+ Test-ParamSet -SysId \"aaa\" -Number \"bbb\" -Table \"ccc\" -Connection @{t ...\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : InvalidArgument: (:) [Test-ParamSet], ParameterBindingException\r\n+ FullyQualifiedErrorId : AmbiguousParameterSet,Test-ParamSet\r\n\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.1.0-rc.1\r\nPSEdition                      Core\r\nGitCommitId                    6.1.0-rc.1\r\nOS                             Microsoft Windows 10.0.17134\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\nSimilar test cases that _do not_ exhibit the issue\r\n----------------\r\nSame number of named parameter sets:\r\n```powershell\r\nfunction Test-ParamSet {\r\n    [CmdletBinding(defaultparametersetname = \"set1\")]\r\n    param(\r\n        [parameter(mandatory, parametersetname = \"set1\")]\r\n        [parameter(mandatory, parametersetname = \"set2\")]\r\n        [string]\r\n        $param1,\r\n\r\n        [parameter(mandatory, parametersetname = \"set3\")]\r\n        [parameter(mandatory, parametersetname = \"set4\")]\r\n        [string]\r\n        $param2,\r\n\r\n        [Parameter(mandatory, parametersetname = \"set1\")]\r\n        [Parameter(mandatory, parametersetname = \"set3\")]\r\n        [string]\r\n        $param3,\r\n\r\n        [parameter(mandatory, parametersetname = \"set2\")]\r\n        [parameter(mandatory, parametersetname = \"set4\")]\r\n        $param4\r\n    )\r\n    Write-warning \"Parameter set:$($PSCmdlet.ParameterSetName)\"\r\n}\r\n```\r\nSame number of parameter sets:\r\n```powershell\r\nfunction Test-ParamSet {\r\n    [CmdletBinding(defaultparametersetname = \"set1\")]\r\n    param(\r\n        [parameter(mandatory, parametersetname = \"set1\")]\r\n        [parameter(mandatory, parametersetname = \"set2\")]\r\n        [string]\r\n        $param1,\r\n\r\n        [parameter(mandatory, parametersetname = \"set3\")]\r\n        [parameter(mandatory, parametersetname = \"set4\")]\r\n        [string]\r\n        $param2,\r\n\r\n        [parameter(mandatory)]\r\n        [string]\r\n        $CommonParam,\r\n\r\n        [Parameter(mandatory, parametersetname = \"set1\")]\r\n        [Parameter(mandatory, parametersetname = \"set3\")]\r\n        [string]\r\n        $param3,\r\n\r\n        [parameter(mandatory, parametersetname = \"set2\")]\r\n        [parameter(mandatory, parametersetname = \"set4\")]\r\n        $param4\r\n    )\r\n    Write-warning \"Parameter set:$($PSCmdlet.ParameterSetName)\"\r\n}\r\n```\r\n\r\n",
  "closed_at": "2018-09-06T20:28:37Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Oops, I see the error now. :)",
      "created_at": "2018-09-06T20:32:09Z",
      "updated_at": "2018-09-06T20:32:09Z"
    }
  ],
  "created_at": "2018-09-06T19:58:38Z",
  "labels": [
    "Resolution-Answered"
  ],
  "number": 7725,
  "state": "closed",
  "title": "Parameter Autocomplete gets confused with complicated parameter sets",
  "updated_at": "2018-10-30T06:17:25Z"
}