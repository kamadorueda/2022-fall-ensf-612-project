{
  "_url": "https://github.com/PowerShell/PowerShell/issues/16221",
  "author": "Cirn09",
  "body": "### Prerequisites\n\n- [X] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\n\n### Steps to reproduce\n\nFor example, `` pwsh -WorkingDirectory 'D:\\Work\\a[`]' ``, the built-in commands related to the path will report errors, and the external programs will open a new window.\n\n### Expected behavior\n\n```console\nPS D:\\Work\\a[`]> Get-ChildItem\r\n\"file list\"\r\nPS D:\\Work\\a[`]> whoami\r\n\"username\"\r\nPS D:\\Work\\a[`]>\n```\n\n\n### Actual behavior\n\n```console\nPS D:\\Work\\a[`]> Get-ChildItem\r\nGet-ChildItem: Cannot retrieve the dynamic parameters for the cmdlet. The specified wildcard character pattern is not valid: a\\[`]\r\nPS D:\\Work\\a[`]> whoami\r\n\"external window\"\r\nPS D:\\Work\\a[`]>\n```\n\n\n### Error details\n\n```console\nPS D:\\Work\\a[`]> Get-ChildItem\r\nGet-ChildItem: Cannot retrieve the dynamic parameters for the cmdlet. The specified wildcard character pattern is not valid: a\\[`]\r\nPS D:\\Work\\a[`]> Get-Error\r\n\r\nType           : System.Management.Automation.CmdletInvocationException\r\nErrorRecord    :\r\n    Exception             :\r\n        Type        : System.Management.Automation.WildcardPatternException\r\n        ErrorRecord :\r\n            Exception             :\r\n                Type    : System.Management.Automation.ParentContainsErrorRecordException\r\n                Message : The specified wildcard character pattern is not valid: a\\[`]\r\n                HResult : -2146233087\r\n            CategoryInfo          : NotSpecified: (:) [], ParentContainsErrorRecordException\r\n            FullyQualifiedErrorId : RuntimeException\r\n        TargetSite  :\r\n            Name          : Parse\r\n            DeclaringType : System.Management.Automation.WildcardPatternParser, System.Management.Automation,\r\nVersion=7.1.4.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\r\n            MemberType    : Method\r\n            Module        : System.Management.Automation.dll\r\n        StackTrace  :\r\n   at System.Management.Automation.WildcardPatternParser.Parse(WildcardPattern pattern, WildcardPatternParser parser)\r\n   at System.Management.Automation.WildcardPatternMatcher.MyWildcardPatternParser.Parse(WildcardPattern pattern, Charac\r\nterNormalizer characterNormalizer)\r\n   at System.Management.Automation.WildcardPatternMatcher..ctor(WildcardPattern wildcardPattern)\r\n   at System.Management.Automation.WildcardPattern.Init()\r\n   at System.Management.Automation.LocationGlobber.IsChildNameAMatch(PSObject childObject, WildcardPattern stringMatche\r\nr, Collection`1 includeMatcher, Collection`1 excludeMatcher, String& childName)\r\n   at System.Management.Automation.LocationGlobber.GenerateNewPSPathsWithGlobLeaf(List`1 currentDirs, PSDriveInfo drive\r\n, String leafElement, Boolean isLastLeaf, ContainerCmdletProvider provider, CmdletProviderContext context)\r\n   at System.Management.Automation.LocationGlobber.ExpandMshGlobPath(String path, Boolean allowNonexistingPaths, PSDriv\r\neInfo drive, ContainerCmdletProvider provider, CmdletProviderContext context)\r\n   at System.Management.Automation.LocationGlobber.ResolveDriveQualifiedPath(String path, CmdletProviderContext context\r\n, Boolean allowNonexistingPaths, CmdletProvider& providerInstance)\r\n   at System.Management.Automation.LocationGlobber.GetGlobbedMonadPathsFromMonadPath(String path, Boolean allowNonexist\r\ningPaths, CmdletProviderContext context, CmdletProvider& providerInstance)\r\n   at System.Management.Automation.PathIntrinsics.GetResolvedPSPathFromPSPath(String path, CmdletProviderContext contex\r\nt)\r\n   at Microsoft.PowerShell.Commands.ResolvePathCommand.ProcessRecord()\r\n   at System.Management.Automation.CommandProcessor.ProcessRecord()\r\n        Message     : The specified wildcard character pattern is not valid: a\\[`]\r\n        Source      : System.Management.Automation\r\n        HResult     : -2146233087\r\n    CategoryInfo          : NotSpecified: (:) [Resolve-Path], WildcardPatternException\r\n    FullyQualifiedErrorId : RuntimeException,Microsoft.PowerShell.Commands.ResolvePathCommand\r\n    InvocationInfo        :\r\n        MyCommand       : Resolve-Path\r\n        HistoryId       : 16\r\n        InvocationName  : Microsoft.PowerShell.Management\\Resolve-Path\r\n        CommandOrigin   : Internal\r\n    ScriptStackTrace      : at <ScriptBlock><End>, <No file>: line 38\r\n                            at PSConsoleHostReadLine, C:\\program files\\powershell\\7\\Modules\\PSReadLine\\PSReadLine.psm1:\r\n line 4\r\n    PipelineIterationInfo :\r\n\r\n\r\n\r\nTargetSite     :\r\n    Name          : Invoke\r\n    DeclaringType : System.Management.Automation.Runspaces.PipelineBase, System.Management.Automation, Version\r\n=7.1.4.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\r\n    MemberType    : Method\r\n    Module        : System.Management.Automation.dll\r\nStackTrace     :\r\n   at System.Management.Automation.Runspaces.PipelineBase.Invoke(IEnumerable input)\r\n   at System.Management.Automation.PowerShell.Worker.ConstructPipelineAndDoWork(Runspace rs, Boolean performSyncInvoke)\r\n   at System.Management.Automation.PowerShell.CoreInvokeHelper[TInput,TOutput](PSDataCollection`1 input, PSDataCollecti\r\non`1 output, PSInvocationSettings settings)\r\n   at System.Management.Automation.PowerShell.CoreInvoke[TInput,TOutput](PSDataCollection`1 input, PSDataCollection`1 o\r\nutput, PSInvocationSettings settings)\r\n   at System.Management.Automation.PowerShell.Invoke(IEnumerable input, PSInvocationSettings settings)\r\n   at System.Management.Automation.PowerShellExecutionHelper.ExecuteCurrentPowerShell(Exception& exceptionThrown, IEnum\r\nerable input)\r\nMessage        : The specified wildcard character pattern is not valid: a\\[`]\r\nInnerException :\r\n    Type        : System.Management.Automation.WildcardPatternException\r\n    ErrorRecord :\r\n        Exception             :\r\n            Type    : System.Management.Automation.ParentContainsErrorRecordException\r\n            Message : The specified wildcard character pattern is not valid: a\\[`]\r\n            HResult : -2146233087\r\n        CategoryInfo          : NotSpecified: (:) [], ParentContainsErrorRecordException\r\n        FullyQualifiedErrorId : RuntimeException\r\n    TargetSite  :\r\n        Name          : Parse\r\n        DeclaringType : System.Management.Automation.WildcardPatternParser, System.Management.Automation, Vers\r\nion=7.1.4.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\r\n        MemberType    : Method\r\n        Module        : System.Management.Automation.dll\r\n    StackTrace  :\r\n   at System.Management.Automation.WildcardPatternParser.Parse(WildcardPattern pattern, WildcardPatternParser parser)\r\n   at System.Management.Automation.WildcardPatternMatcher.MyWildcardPatternParser.Parse(WildcardPattern pattern, Charac\r\nterNormalizer characterNormalizer)\r\n   at System.Management.Automation.WildcardPatternMatcher..ctor(WildcardPattern wildcardPattern)\r\n   at System.Management.Automation.WildcardPattern.Init()\r\n   at System.Management.Automation.LocationGlobber.IsChildNameAMatch(PSObject childObject, WildcardPattern stringMatche\r\nr, Collection`1 includeMatcher, Collection`1 excludeMatcher, String& childName)\r\n   at System.Management.Automation.LocationGlobber.GenerateNewPSPathsWithGlobLeaf(List`1 currentDirs, PSDriveInfo drive\r\n, String leafElement, Boolean isLastLeaf, ContainerCmdletProvider provider, CmdletProviderContext context)\r\n   at System.Management.Automation.LocationGlobber.ExpandMshGlobPath(String path, Boolean allowNonexistingPaths, PSDriv\r\neInfo drive, ContainerCmdletProvider provider, CmdletProviderContext context)\r\n   at System.Management.Automation.LocationGlobber.ResolveDriveQualifiedPath(String path, CmdletProviderContext context\r\n, Boolean allowNonexistingPaths, CmdletProvider& providerInstance)\r\n   at System.Management.Automation.LocationGlobber.GetGlobbedMonadPathsFromMonadPath(String path, Boolean allowNonexist\r\ningPaths, CmdletProviderContext context, CmdletProvider& providerInstance)\r\n   at System.Management.Automation.PathIntrinsics.GetResolvedPSPathFromPSPath(String path, CmdletProviderContext contex\r\nt)\r\n   at Microsoft.PowerShell.Commands.ResolvePathCommand.ProcessRecord()\r\n   at System.Management.Automation.CommandProcessor.ProcessRecord()\r\n    Message     : The specified wildcard character pattern is not valid: a\\[`]\r\n    Source      : System.Management.Automation\r\n    HResult     : -2146233087\r\nSource         : System.Management.Automation\r\nHResult        : -2146233087\n```\n\n\n### Environment data\n\n```powershell\nPS D:\\Work\\a[`]> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.4\r\nPSEdition                      Core\r\nGitCommitId                    7.1.4\r\nOS                             Microsoft Windows 10.0.19043\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\n```\n\n\n### Visuals\n\n![image](https://user-images.githubusercontent.com/25722111/136694207-8a6881a1-db99-4cab-90f4-9dd529efdc89.png)\r\n",
  "closed_at": "2021-10-14T23:13:50Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "WG-Engine discussed this today. Our opinion is that this is inextricably tied to other issues we've seen around wildcard escaping in the past. See #7999 for more information.\r\n\r\nOur inclination is that it's not feasible to fix this issue \"just\" for this one case without taking a look at the larger scope of work involved here. An idea proposed in terms of properly fixing this issue was to define a new Path API which wraps the path string itself, and contains some metadata for indicating whether the path has been resolved already, and so forth.\r\n\r\nDoing this would require rewriting large portions of the filesystem provider code (and potentially other providers as well), and as such it's unlikely this will get a satisfactory fix until the filesystem provider is rewritten.\r\n\r\nFor the time being, we're resolving this issue as a duplicate of #7999 and we expect that it will be resolved in the course of that issue, although we don't currently have a concrete timeline of when that scope of work is happening just yet.\r\n\r\nThanks for the report! \ud83d\udc96 ",
      "created_at": "2021-10-14T23:13:50Z",
      "updated_at": "2021-10-14T23:13:50Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> An idea proposed in terms of properly fixing this issue was to define a new Path API which wraps the path string itself, and contains some metadata for indicating whether the path has been resolved already, and so forth.\r\n\r\nWe already have PathInfo :-) It is not huge work but can raise breaking changes. ",
      "created_at": "2021-10-15T03:53:13Z",
      "updated_at": "2021-10-15T03:54:57Z"
    }
  ],
  "created_at": "2021-10-10T11:47:35Z",
  "labels": [
    "Resolution-Duplicate",
    "WG-Engine-Providers",
    "Area-FileSystem-Provider"
  ],
  "number": 16221,
  "state": "closed",
  "title": "Powershell does not work properly in a path containing `[",
  "updated_at": "2021-10-15T03:54:57Z"
}