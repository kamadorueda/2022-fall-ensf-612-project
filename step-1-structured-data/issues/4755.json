{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4755",
  "author": "oising",
  "body": "The commonly used unix utility `curl`, and by extension `libcurl` already support this with the `-k` flag (aka `--insecure` so this should be fairly trivial to implement over CoreCLR. \r\n\r\nI nominate myself to implement this feature. I am loathe to make this any more complicated than just ignoring all errors as I think either you should be going all in, or not at all when it comes to dealing with certificates. This offers the \"not at all\" option. This is a common scenario within enterprises using internally developed microservices that use self-signed certificates. Their goals are typically to just ensure end to end encryption and not to ensure identity.\r\n\r\n",
  "closed_at": "2017-09-05T22:19:07Z",
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Isn't this the same as https://github.com/PowerShell/PowerShell/issues/1945?",
      "created_at": "2017-09-05T20:52:56Z",
      "updated_at": "2017-09-05T20:52:56Z"
    },
    {
      "author": "oising",
      "author_association": "CONTRIBUTOR",
      "body": "Why yes it is. I did search existing issues but I probably forgot to remove the isopen:true directive. Oops. Feel free to close.",
      "created_at": "2017-09-05T22:19:07Z",
      "updated_at": "2017-09-05T22:19:07Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@oising good news is that it's already implemented :)",
      "created_at": "2017-09-05T22:27:02Z",
      "updated_at": "2017-09-05T22:27:02Z"
    }
  ],
  "created_at": "2017-09-05T20:46:14Z",
  "labels": [
    "Issue-Question",
    "Resolution-Answered"
  ],
  "number": 4755,
  "state": "closed",
  "title": "Consider adding -IgnoreCertificateValidationErrors to Invoke-RestMethod/WebRequest",
  "updated_at": "2017-09-26T08:16:32Z"
}