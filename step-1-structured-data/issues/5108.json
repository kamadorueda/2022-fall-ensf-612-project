{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5108",
  "author": "mklement0",
  "body": "<sup>Follow-up to #3684.</sup>\r\n\r\nWith _multiple_ input objects, the `-NoNewline` switch causes said cmdlets to not only omit a _trailing_ (last) newline, but also not to place newlines _between_ the (output representations of) the input objects on output.\r\n\r\nHowever, perhaps more typically, you want to only suppress a _trailing_ newline, so it would be handy to have a `-NoLastNewline` parameter (mutually exclusive with `-NoNewLine`) that does just that.\r\n\r\nIf #3855 gets implemented, an alias `-NoLastDelimiter` could be defined, which would effectivley turn the application of the delimiter from _terminator_ logic (place delimiter after _every_ item, including the last) into _separator_ logic (place delimiter only _between_ items).\r\n\r\nDesired behavior\r\n------------------\r\n\r\n```powershell\r\n> 'a', 'b' | Write-Host -NoLastNewline; Write-Host 'c'\r\na\r\nbc\r\n```\r\n\r\nNote that with `-NoNewline` you'd get `abc`.\r\n\r\nInput object-_internal_ (embedded) newlines should be left untouched by both `-NoLastNewline` and\r\n`-NoNewline` (though the latter doesn't do so consistently at present - see #5107).\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\nPowerShell Core v6.0.0-beta.8\r\n```\r\n",
  "closed_at": null,
  "comments": [],
  "created_at": "2017-10-13T13:15:11Z",
  "labels": [
    "Issue-Discussion",
    "WG-Cmdlets-Utility",
    "WG-Cmdlets-Management"
  ],
  "number": 5108,
  "state": "open",
  "title": "Add a -NoLastNewline switch parameter to Write-Host, Set-Content, Add-Content, Out-File, Out-String",
  "updated_at": "2017-10-13T13:35:34Z"
}