{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9259",
  "author": "kwkam",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\nReopen #7404\r\n\r\n# PR Summary\r\n\r\n<!-- Summarize your PR between here and the checklist. -->\r\nUnescape non-literal path when -Name is not set.\r\nFix failure with symlink/junction target which contains special character.\r\n\r\n## PR Context\r\n\r\n<!-- Provide a little reasoning as to why this Pull Request helps and why you have opened it. -->\r\nThis works around for New-Item treating -Path as literal path while\r\nit can also be globbable. For example, assuming there is ```\"[file]1\"```\r\nin current directory, and tab completion suggests ```'./`[file`]1'```\r\nfor the -Path argument, but\r\n```pwsh\r\nNew-Item -Path './`[file`]2'\r\n```\r\nwill create a file named ```\"`[file`]2\"``` instead of ```\"[file]2\"```.\r\n\r\nAlso fixes an issue that New-Item does not handle -Target properly\r\nwhen it contains escaped wildcard character. For example, there is\r\na directory ```\"[dir]1\"``` in current directory, and tab completion\r\nsuggests ```'./`[dir`]1'``` for the -Target argument, but\r\n```pwsh\r\nNew-Item -Type Junction -Path './`[dir`]2' -Target './`[dir`]1'\r\n```\r\nwill complain that it cannot find the item.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n",
  "closed_at": "2019-07-03T22:22:54Z",
  "comments": [
    {
      "author": "stale[bot]",
      "author_association": "NONE",
      "body": "This PR has been automatically marked as stale because it has not had activity in the last 30 days. It will be closed if no further activity occurs within 10 days.\nThank you for your contributions.\nCommunity members are welcome to grab these works.\n",
      "created_at": "2019-05-01T11:47:10Z",
      "updated_at": "2019-05-01T11:47:10Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "I believe we should not change this behavior. To workaround your problem you could simply use the following:\r\n\r\n```PowerShell\r\nPS D:\\temp\\newitem> New-Item -Name `[file`]2\r\n\r\n\r\n    Directory: D:\\temp\\newitem\r\n\r\nMode                LastWriteTime         Length Name\r\n----                -------------         ------ ----\r\n-a----         5/10/2019 10:32 AM              0 [file]2\r\n```",
      "created_at": "2019-05-10T17:34:29Z",
      "updated_at": "2019-05-10T17:34:29Z"
    },
    {
      "author": "kwkam",
      "author_association": "CONTRIBUTOR",
      "body": "The problem is the inconsistency of `-Path` behaviour in the `*-Item` cmdlets.\r\n```PowerShell\r\n# to get '[file]1'\r\nGet-Item -Path './`[file`]1'\r\n\r\n# to move '[file]1'\r\nMove-Item -Path './`[file`]1' -Destination ./dir\r\n\r\n# to copy '[file]1'\r\nCopy-Item -Path './dir/`[file`]1' -Destination ..\r\n\r\n# to remove '[file]1'\r\nRemove-Item -Path './dir/`[file`]1'\r\n```\r\nAll above commands behave correctly with tab completion, but when we do\r\n```PowerShell\r\n# what if we try to overwrite '[file]1'?\r\nNew-Item -Path './`[file`]1' -Value 'This is [file]1'\r\n```\r\nA new file ``` `[file`]1 ``` is created instead, which is unexpected, and in my opinion, is a flaw in the cmdlet since `-Path` is supposed to handle wildcard path and escaped path.\r\n\r\nOf course, we can use `-Name` to workaround the issue (because there is no `-LiteralPath` in `New-Item`), but I believe `-Name` is not the proper replacement, as @mklement0 commented in https://github.com/PowerShell/PowerShell/issues/6232#issuecomment-368394604, `-Name` is not supposed to be path. Anyway, even if we have the workaround, a bug needs a fix.",
      "created_at": "2019-05-11T03:52:24Z",
      "updated_at": "2019-05-11T03:52:24Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as stale because it has been marked as requiring author feedback but has not had any activity for **30 days**. It will be closed if no further activity occurs **within 10 days of this comment**.",
      "created_at": "2019-06-21T12:00:20Z",
      "updated_at": "2019-06-21T12:00:20Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@adityapatwardhan Could you please update your review?",
      "created_at": "2019-06-21T12:19:09Z",
      "updated_at": "2019-06-21T12:19:09Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "Changing the behavior of `Path` is a breaking change and hence I would like the committee to review it. ",
      "created_at": "2019-06-24T19:30:02Z",
      "updated_at": "2019-06-24T19:30:02Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "@PowerShell/powershell-committee discussed this one. \r\n\r\nThe Issue at hand is that tab completion uses single quotes and escaped characterss in what amounts to a literal path, and you only need one or the other to work properly. We agreed not to fix it in the `New-Item` behavior, which would be a significant breaking change, but we should fix it in the tab completion by not adding backticks (because double quotes will break where `$` is in the filename). \r\n\r\nWe'd welcome a PR to fix the tab completion, but given that we're not taking this one, closing it out. ",
      "created_at": "2019-07-03T22:22:54Z",
      "updated_at": "2019-07-03T22:22:54Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@kwkam Have you plans to fix the tab completion?",
      "created_at": "2019-07-04T12:29:06Z",
      "updated_at": "2019-07-04T12:29:06Z"
    }
  ],
  "created_at": "2019-03-31T05:28:23Z",
  "number": 9259,
  "state": "closed",
  "title": "Fix New-Item -Path/-Target with wildcard char",
  "updated_at": "2019-07-04T12:29:24Z"
}