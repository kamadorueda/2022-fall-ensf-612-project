{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9423",
  "author": "jszabo98",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n\r\n-->\r\n\r\nOut-file -append (or \">>\") can mix two encodings, like unicode and utf8, in the same file.  Add-content doesn't seem to suffer from this.  Note that out-file in PS 5.1 uniquely defaults to unicode \r\n (undocumented).  But the problem itself is in both out-file for PS 5.1 & PS 6.\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\nPS /Users/js> write-output hi | set-content hi.txt -Encoding unicode\r\nPS /Users/js> write-output hi | out-file -Append hi.txt\r\nPS /Users/js> get-content hi.txt\r\n```\r\n\r\n(or write-output hi >> hi.txt for line 2)\r\n\r\n# Expected behavior\r\n\r\n```none\r\nhi\r\nhi\r\n```\r\n\r\n# Actual behavior\r\n\r\nline one is unicode, line 2 is utf8\r\n\r\n```none\r\nhi\r\n\u6968\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.2.0\r\nPSEdition                      Core\r\nGitCommitId                    6.2.0\r\nOS                             Darwin 16.7.0 Darwin Kernel Version 16.7.0: Thu Jun 21 20:07:39 PDT 2018; root:xnu-3789.73.14~1/RELEASE_X86_64\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "To summarize the inconsistency:\r\n\r\n* `Add-Content` detects the encoding of existing content in a file (by BOM) and matches it when appending content.\r\n\r\n* `Out-File` / `>>` blindly use their default encoding when appending.\r\n\r\nWhile `Add-Content`'s behavior is helpful and preferable, note that the behavior of `Out-File`' / `>>` behavior is the same as the behavior of `>>` in POSIX-like shells such as Bash:\r\n\r\nGenerally, unlike in the Windows world, Unix shells and utilities assume that _one_ encoding is in use everywhere, as reflected in the `LC_CTYPE` locale category - which is virtually always UTF-8 these days. `>>` therefore blindly uses that encoding when appending.\r\n\r\n---\r\n\r\nAs for the _Windows PowerShell_ situation:\r\n\r\n> Note that out-file in PS 5.1 uniquely defaults to unicode (undocumented).\r\n\r\n`Out-File` notably differs from `Set-Content` in its default encoding (`Unicode` (UTF-16LE) vs. `ANSI`), but there are other cmdlets that produce UTF-16LE by default: `Export-CliXml` and `New-ModuleManifest` (which doesn't support `-Encoding`), possibly others.\r\n\r\nThe behavior is technically not _undocumented_, but _misdocumented_: please see https://github.com/MicrosoftDocs/PowerShell-Docs/issues/4155\r\n",
      "created_at": "2019-04-20T13:03:03Z",
      "updated_at": "2019-04-21T21:42:47Z"
    },
    {
      "author": "jszabo98",
      "author_association": "NONE",
      "body": "I assume \"Out-Content\" should be \"Out-File\" at that link (different noun).",
      "created_at": "2019-04-20T13:29:09Z",
      "updated_at": "2019-04-20T13:29:09Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks, @jszabo98 - fixed; I've also added info about a few more cmdlets.",
      "created_at": "2019-04-20T13:59:17Z",
      "updated_at": "2019-04-20T13:59:17Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Out-File could detect a file encoding at open time like Add-Content. \r\n(Only we need to measure performance.)",
      "created_at": "2021-01-15T10:05:37Z",
      "updated_at": "2021-01-15T10:05:37Z"
    }
  ],
  "created_at": "2019-04-19T21:37:59Z",
  "number": 9423,
  "state": "open",
  "title": "out-file -append (or \">>\") can mix two encodings in the same file",
  "updated_at": "2021-01-15T10:05:53Z"
}