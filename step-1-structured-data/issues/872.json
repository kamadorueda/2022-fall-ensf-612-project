{
  "_url": "https://github.com/PowerShell/PowerShell/issues/872",
  "author": "JumpingYang001",
  "body": "```\nNew-Variable foo bar\n&{\n            Remove-Variable foo\n}\n```\n\nabove code not work in interactive mode and script, it throw below exception:\n\n> Remove-Variable : Cannot find a variable with the name 'foo'.\n> At line:2 char:1\n> - Remove-Variable foo\n> - ~~~~~~~~~~~~~~~~~~~\n>   - CategoryInfo          : ObjectNotFound: (foo:String) [Remove-Variable],\n>     ItemNotFoundException\n>   - FullyQualifiedErrorId : VariableNotFound,Microsoft.PowerShell.Commands.R\n>     emoveVariableCommand\n",
  "closed_at": "2016-04-21T22:02:10Z",
  "comments": [
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "This reproduced identically on stock Windows. @JamesWTruher Is this test failure or bug or what? My guess is that variable scoping is behaving differently than expected.\n",
      "created_at": "2016-04-20T17:50:16Z",
      "updated_at": "2016-04-20T17:50:16Z"
    },
    {
      "author": "JamesWTruher",
      "author_association": "MEMBER",
      "body": "the variable is _accessible_ in this scope, but has not been created in the new scope, so `remove-variable` in this new scope can't find something that hasn't been created in this scope. \n`&{ Clear-Variable foo }` would essential clear the variable that is available in the new scope (and create it as a copy-on-write operation). Which means\n'new-variable foo bar; &{ clear-variable foo; remove-variable foo }`will work, but\n'new-variable foo bar; &{ remove-variable foo}` will not\nso, it's working as expected\n",
      "created_at": "2016-04-21T22:02:09Z",
      "updated_at": "2016-04-21T22:02:09Z"
    }
  ],
  "created_at": "2016-04-20T04:51:25Z",
  "labels": [
    "BVT/DRT"
  ],
  "number": 872,
  "state": "closed",
  "title": "&{} child scope not work for Remove-Variable",
  "updated_at": "2016-04-21T22:02:13Z"
}