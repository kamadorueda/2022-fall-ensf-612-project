{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9237",
  "author": "mklement0",
  "body": "`-Property` requires specifying the name of an existing property.\r\n\r\nIn the case of `-Line`, `-Char`, `-Word`, the inputs are by definition _strings_, whose only property is `Length`.\r\n\r\nTherefore, only `-Property Length` is accepted without breaking the call, but _doing so is pointless and effectively ignored_.\r\n\r\nSuggested fix:\r\n\r\n*  `-Line`, `-Char`, `-Word` should  be in a parameter set that doesn't include `-Property`.\r\n\r\n* Define format data for output type `Microsoft.PowerShell.Commands.TextMeasureInfo` that hides the in applicable `Property` property (which is inherited from the abstract `Microsoft.PowerShell.Commands.MeasureInfo` class), and similarly exclude it for `Deserialized.Microsoft.PowerShell.Commands.TextMeasureInfo`.\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\n# Pointless use of -Property\r\n'foo' | Measure-Object -Line -Property Length\r\n\r\n'foo' | Measure-Object -Line\r\n```\r\n\r\n# Expected behavior\r\n\r\n```none\r\nMeasure-Object: Parameter set cannot be resolved using the specified named parameters. One or more parameters issued cannot be used together or an insufficient number of parameters were provided.\r\n\r\nLines Words Characters\r\n----- ----- ----------\r\n    1                 \r\n\r\n```\r\n\r\n# Actual behavior\r\n\r\n```none\r\n\r\nLines Words Characters Property\r\n----- ----- ---------- --------\r\n    1                  Length\r\n\r\n\r\n\r\nLines Words Characters Property\r\n----- ----- ---------- --------\r\n    1                  \r\n```\r\n\r\nThat is, `-Property Length` was accepted, but ignored -  even though it is reflected in the output.\r\n\r\nSimilarly, even without `-Property`, the inapplicable `Property` is shown in the output.\r\n\r\n# Environment data\r\n\r\n```none\r\nPowerShell Core 6.2.0-rc.1\r\nWindows PowerShell v5.1 \r\n```\r\n",
  "closed_at": "2019-03-27T14:18:44Z",
  "comments": [
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "@mklement0 Using `Property` with one of those parameters changes the *target* to the property's value.  e.g.\r\n\r\n```powershell\r\n$string = 'This is a test value'\r\n$customObj = [pscustomobject]@{ MyProperty = $string }\r\n$customObj | Measure-Object -Character -Property MyProperty\r\n\r\n# Lines Words Characters Property\r\n# ----- ----- ---------- --------\r\n#                     20 MyProperty\r\n\r\n$string.Length\r\n# 20\r\n```\r\n\r\nThe value of `string.Length` just also happens to be a single line.",
      "created_at": "2019-03-27T13:10:30Z",
      "updated_at": "2019-03-27T13:11:14Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks, @SeeminglyScience, that makes sense - it hadn't occurred to me to combine the features this way.\r\n\r\nI'll close this, but I've created a docs issue to suggest making the relationship between these parameters clearer: https://github.com/MicrosoftDocs/PowerShell-Docs/issues/4062\r\n",
      "created_at": "2019-03-27T14:18:43Z",
      "updated_at": "2019-03-27T14:19:08Z"
    }
  ],
  "created_at": "2019-03-27T12:36:23Z",
  "labels": [
    "Issue-Question",
    "Resolution-External"
  ],
  "number": 9237,
  "state": "closed",
  "title": "Measure-Object: allowing the combination of -Line, -Char, -Word with -Property is pointless",
  "updated_at": "2019-04-02T06:14:25Z"
}