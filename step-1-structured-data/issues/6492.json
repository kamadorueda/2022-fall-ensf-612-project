{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6492",
  "author": "ghost",
  "body": "### Setup\r\n\r\na.ps1\r\n\r\n```ps1\r\n&\".\\b.ps1\" @args\r\n```\r\n\r\nb.ps1\r\n\r\n```ps1\r\nParam\r\n(\r\n    [Switch]\r\n    $p1,\r\n    [Switch]\r\n    $p2,\r\n    [String]\r\n    $p3,\r\n    [int]\r\n    $p4\r\n)\r\n\r\necho \"p1: $p1\"\r\necho \"p2: $p2\"\r\necho \"p3: $p3\"\r\necho \"p4: $p4\"\r\n```\r\n\r\n### Execution\r\n\r\n\ud83d\udc4d  Invoke b.ps1 directly:\r\n\r\n```ps1\r\n.\\b.ps1 -p1:$true -p2:$true\r\n\r\np1: True\r\np2: True\r\np3:\r\np4: 0\r\n```\r\n\r\n\ud83d\udc4e Invoke through a.ps1:\r\n\r\n```ps1\r\n.\\a.ps1 -p1:$true -p2:$true\r\n\r\np1: True\r\np2: True\r\np3: True\r\np4: 1\r\n```\r\n\r\n\ud83d\udc4d Invoke through a.ps1 removing `:$true`:\r\n\r\n```ps1\r\n.\\b.ps1 -p1 -p2\r\n\r\np1: True\r\np2: True\r\np3:\r\np4: 0\r\n```\r\n\r\n\r\n@SteveL-MSFT, this is our production code and i have reduced and anonymize it to demonstrate the problem. External party (Visual Studio in our case) calls `a.ps1` with `-p1:$true`, so we don't control that part. The only viable solution is to move code from b.ps1 to a.ps1. In our case, that means a lots of duplicate code.\r\n\r\nis this a bug with PowerShell argument parsing, splatting or parameter binding? Please share if there is a workaround that can be made in a.ps1 or b.ps2 without raising our expectation from the caller.",
  "closed_at": "2018-03-25T13:10:51Z",
  "comments": [
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@kasper3: I think this is a duplicate of #6360 and part of larger discussion about parameter parsing (#6467).",
      "created_at": "2018-03-25T12:53:01Z",
      "updated_at": "2018-03-25T12:53:01Z"
    },
    {
      "author": "ghost",
      "author_association": "NONE",
      "body": "@mklement0, thanks for pointing out. Well, in my defense i searched something before opening the issue but apparently with wrong keywords Will close this one too then. \ud83d\ude22 \r\n\r\nI was thinking about parsing `@args` in a.ps1 and pass each argument separately to b.ps1. Do you know of any better workaround?",
      "created_at": "2018-03-25T13:10:51Z",
      "updated_at": "2018-03-25T13:10:51Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@kasper3: \r\n\r\nThe workaround is to define the same `param()` block in `a.ps1` and then pass `@PSBoundParameters` through instead of `@args`.\r\n\r\nOf course, if you need to support unknown-in-advance parameters to pass through, that won't work.",
      "created_at": "2018-03-25T13:21:39Z",
      "updated_at": "2018-03-25T13:21:39Z"
    }
  ],
  "created_at": "2018-03-25T09:25:48Z",
  "labels": [
    "Resolution-Duplicate"
  ],
  "number": 6492,
  "state": "closed",
  "title": "Switch with coloned value parsed differently when invoking with pass thru args",
  "updated_at": "2018-04-11T06:30:53Z"
}