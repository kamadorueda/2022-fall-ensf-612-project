{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7473",
  "author": "adityapatwardhan",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\n- Windows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nIf it is a bug report:\r\n- make sure you are able to repro it on the latest released version. \r\nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n- Fill out the following repro template:\r\n\r\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\r\n-->\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\nGet-AuthenticodeSignature -FilePath 'C:\\Program Files\\PowerShell\\6-preview\\Microsoft.PowerShell.MarkdownRender.dll'\r\n\r\nSignerCertificate      :\r\nTimeStamperCertificate :\r\nStatus                 : NotSigned\r\nStatusMessage          : The file C:\\Program Files\\PowerShell\\6-preview\\Microsoft.PowerShell.MarkdownRender.dll is not digitally signed. You cannot run this script on the current system. For more information about running scripts and\r\n                         setting execution policy, see about_Execution_Policies at https://go.microsoft.com/fwlink/?LinkID=135170\r\nPath                   : C:\\Program Files\\PowerShell\\6-preview\\Microsoft.PowerShell.MarkdownRender.dll\r\nSignatureType          : None\r\nIsOSBinary             : False\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```none\r\nAll files are signed\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n```none\r\nMicrosoft.PowerShell.MarkdownRender.dll was not signed in Preview.4\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.1.0-preview.4\r\nPSEdition                      Core\r\nGitCommitId                    6.1.0-preview.4\r\nOS                             Microsoft Windows 10.0.18204\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "@adityapatwardhan A while ago I wrote a `Pester` test for a similar scenario to check that all DLLs are signed:\r\n```powershell\r\n# Tests that all .dll files in a given folder are signed. Requires Pester v4+\r\n# Example call: Invoke-Pester -Script @{ Path='path/to/this/File'; Parameters = @{PathToFolderToCheckForRecursively='path/to/binaries/folder'} }\r\nParam\r\n(\r\n    [Parameter(Mandatory = $true)]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ValidateScript( {(Test-Path $PSItem)})]\r\n    [string] $PathToFolderToCheckForRecursively\r\n)\r\n\r\n$filesInFolder = Get-ChildItem -Filter '*.dll' -Path $PathToFolderToCheckForRecursively -Recurse\r\n\r\nContext \"Expected files are signed in $PathToFolderToCheckForRecursively\" {\r\n\r\n    $filesInFolder | ForEach-Object {\r\n        $assemblyPath = $PSItem.FullName\r\n        It \"$assemblyPath should be signed\" {\r\n            (Get-AuthenticodeSignature $assemblyPath).Status | Should -Be ([System.Management.Automation.SignatureStatus]::Valid)\r\n        }\r\n    }\r\n}\r\n```",
      "created_at": "2018-08-07T17:04:44Z",
      "updated_at": "2018-08-07T17:04:44Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@adityapatwardhan @TravisEz13 Can we close the issue?",
      "created_at": "2021-11-30T14:55:48Z",
      "updated_at": "2021-11-30T14:55:48Z"
    }
  ],
  "created_at": "2018-08-07T14:37:56Z",
  "number": 7473,
  "state": "open",
  "title": "Add verification for all PowerShell assemblies are signed in the official build",
  "updated_at": "2021-11-30T14:55:48Z"
}