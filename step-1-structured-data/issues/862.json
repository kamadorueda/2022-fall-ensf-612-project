{
  "_url": "https://github.com/PowerShell/PowerShell/issues/862",
  "author": "andschwa",
  "body": "In order to start resolving #854 / #839 and enable a much easier packaging story for @raghushantha, we need to switch to the shared .NET framework.\n- [x] Revert to RC2 bits\n- [ ] Update documentation to refer to OmniSharp/omnisharp-vscode#157 for debugging (Thanks @gregg-miskelly)\n- [x] Depend on Microsoft.NETCore.App instead of NETStandard.Library\n- [x] Remove superfluous package dependencies\n\nOnce this is done, the `powershell.deps.json` file will contain only the app's dependency closure (no FX assemblies). We could then:\n\n> For each assembly enumerated, perform a Assembly.Load for it. Since the assembly would be listed in the TPAbinder, but not yet loaded, Assembly.Load will load it and return the reference that you can use. -- @gkhanna79\n\nWe would then not need to modify the type catalog.\n\n/cc @daxian-dbw\n",
  "closed_at": "2016-04-25T22:40:09Z",
  "comments": [
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Summary from email:\n- We are using the latest drops of .NET CLI; so at this time, 1.0.0-rc2-002416, and will continue to do so\n- We currently depend on \"NETStandard.Library\": \"1.5.0-rc3-24011-00\"\n- We will change that dependency to \u201cMicrosoft.NETCore.App\u201d: \u201c1.0.0-rc2-3002416\u201d\n- We will continue to use \"dotnet-test-xunit\": \"1.0.0-dev-140469-38\", and it will work (Peter?)\n- ~~We use VS Code\u2019s C# 0.3.7 (latest published) extension to debug, which will work with RC2 bits~~ Update docs to use GitHub release of extension\n- After changing to NETCore.App, we will be using the shared host framework, such that our app.deps.json will only contain non FX assemblies\n- We can then accomplish our original goal of working around both the custom AssemblyLoadContext and hard-coded TypeCatalog for the app dependencies by separately and explicitly loading (and analyzing) each assembly in app.deps.json (Dongbo?)\n- We will additionally be able to package PowerShell without embedding the .NET runtime (FX assemblies), thus making Raghu\u2019s job much easier\n- Our Linux and OS X packages will require a dependency on the .NET Core runtime and framework\n",
      "created_at": "2016-04-18T19:47:27Z",
      "updated_at": "2016-04-18T19:47:27Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "I am unsure if we should do this immediately. It's definitely not a v0.4.0 milestone, as it will not actually help solve #839 (we need to decouple the type analysis and caching from loading regardless).\n",
      "created_at": "2016-04-20T23:30:47Z",
      "updated_at": "2016-04-20T23:30:47Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "This is now required to solve #769.\n",
      "created_at": "2016-04-22T21:28:27Z",
      "updated_at": "2016-04-22T21:28:27Z"
    }
  ],
  "created_at": "2016-04-18T18:43:58Z",
  "labels": [
    "Area-Maintainers-Build"
  ],
  "number": 862,
  "state": "closed",
  "title": "Switch to shared framework",
  "updated_at": "2016-04-25T22:40:13Z"
}