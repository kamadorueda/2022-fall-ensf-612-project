{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10218",
  "author": "msftrncs",
  "body": "# Steps to reproduce\r\n\r\n```powershell\r\nfunction test ([validateset('$test', 'test$', 'test test', '#', '# hello', '#requires more', '<# hello #>')]$test) {echo $test}\r\n\r\ntest <ALT-SPACE>   # value `$test` will not be escaped or quoted due to `$`, nor will the completions that start with `#`, except `#requires more` gets quoted\r\n# also, `<# hello #>` fails to be quoted\r\ntest \"<ALT-SPAC>\"  # values `$test` and `test$` will not have the `$` escaped\r\n```\r\n\r\n# Expected behavior\r\n\r\nAll special characters (those affecting tokenizing the argument correct intentions) would force quoting or escaping.  \r\n\r\n# Actual behavior\r\n\r\nSome characters do, some do not.  \r\n\r\nThis is due to a reliance of using the parser (via CompletionRequiresQuotes() method) to determine if there is more than 1 token, or if the parser has an error parsing the tokens contained in the completion.  In the case of `$test` the parser sees exactly the one successful token and no more.  I've also determined the same is happening for `#`\r\n\r\nI understand why the parser is being used, but I think the idea is flawed because the parser doesn't know the full context of the completion, and can be swayed, as I have done here with the `$test` argument value.\r\n\r\n# Environment data\r\n\r\nPowerShell 7.0.0-preview.2\r\n\r\n# Considerations\r\n\r\nThis is partially related to other completion bugs I have been reporting.  I'd like to consider writing a more specific helper function/method for handling argument completions that can correctly determine if an argument needs quoted, and/or (if already quoted) properly escaped, and would not rely directly on the parser.  I have covered this idea in #9881, and I am working on converting the PowerShell code example to C#.  Using this helper, all argument type completions will be funneled through a single method for proper quoting and escaping.  This does mean that making tweaks to the parser that might affect how a completion needs to be quoted/escaped would require tweaking this helper as well.\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "msftrncs",
      "author_association": "CONTRIBUTOR",
      "body": "Additionally, and this technically affects all argument completions but is more likely to occur in `ValidateSet`, argument completion values that start with a dash and follow with a valid identifier start character, or are just dash dash (`--`) should be quoted or escaped, to prevent them being parsed as a parameter name.",
      "created_at": "2019-07-27T00:52:42Z",
      "updated_at": "2019-07-27T00:52:42Z"
    }
  ],
  "created_at": "2019-07-24T01:31:20Z",
  "number": 10218,
  "state": "open",
  "title": "completions of [validateset] parameters fails to escape special characters",
  "updated_at": "2019-07-27T00:52:42Z"
}