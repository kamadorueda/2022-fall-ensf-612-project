{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12605",
  "author": "powercode",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nAdding support for derived, parameterized, ArgumentCompleterAttributes. This makes it possible to create more generic completers, either in libraries or shipping with the product.\r\n\r\nThis allows for parameterized ArgumentCompleters. \r\nDeriving from `ArgumentCompleterAttribute` makes it possible to create generic completers, like\r\n```powershell\r\n[DirectoryCompleter(ContainingFile=\"pswh.exe\", Depth=2)]\r\n\r\n[DateCompleter(WeekDay='Monday', From=\"LastYear\")]\r\n\r\n[GitCommits(Branch='release')]\r\n```\r\n\r\nThe derived attributes implement the `IArgumentCompleterFactory` interface and use property values to create a specialized completer.\r\n\r\n## PR Context\r\n\r\nIt is difficult (if even possible) to write generic completers. This PR would allow for the following:\r\n\r\n```csharp\r\n   /// <summary>\r\n    /// Creates new number completions\r\n    /// </summary>\r\n    public class NumberCompletionsAttribute : ArgumentCompleterAttribute, IArgumentCompleterFactory\r\n    {\r\n        private readonly int _from;\r\n        private readonly int _to;\r\n        private readonly int _step;\r\n\r\n        /// <summary>\r\n        /// Creates a new <see cref=\"NumberCompletionsAttribute\"/>.\r\n        /// </summary>\r\n        /// <param name=\"from\"></param>\r\n        /// <param name=\"to\"></param>\r\n        /// <param name=\"step\"></param>\r\n        public NumberCompletionsAttribute(int from, int to, int step = 1) \r\n        {\r\n            _from = @from;\r\n            _to = to;\r\n            _step = step;\r\n        }\r\n\r\n        /// <inheritdoc />\r\n        public IArgumentCompleter Create() => new NumberCompleter(_from, _to, _step);\r\n    }\r\n\r\n    /// <summary>\r\n    /// Completes numbers\r\n    /// </summary>\r\n    public class NumberCompleter : IArgumentCompleter\r\n    {\r\n        private readonly int _from;\r\n        private readonly int _to;\r\n        private readonly int _step;\r\n\r\n        /// <summary>\r\n        /// Creates a new instance of a NumberCompleter\r\n        /// </summary>\r\n        /// <param name=\"from\"></param>\r\n        /// <param name=\"to\"></param>\r\n        /// <param name=\"step\"></param>\r\n        public NumberCompleter(int from, int to, int step)\r\n        {\r\n            _from = @from;\r\n            _to = to;\r\n            _step = step;\r\n        }\r\n\r\n        /// <inheritdoc />\r\n        public IEnumerable<CompletionResult> CompleteArgument(string commandName, string parameterName, string wordToComplete, CommandAst commandAst, IDictionary fakeBoundParameters)\r\n        {\r\n            var res = new List<CompletionResult>((_to - _from) / _step);\r\n\r\n            for (int i = _from; i <= _to; i += _step)\r\n            {\r\n                string completionText = i.ToString();\r\n                if (completionText.StartsWith(wordToComplete, StringComparison.Ordinal))\r\n                    res.Add(new CompletionResult(completionText));\r\n            }\r\n\r\n            return res;\r\n        }\r\n    }\r\n```\r\n\r\nor in PowerShell:\r\n```powershell\r\nusing namespace System.Management.Automation\r\nusing namespace System.Management.Automation.Language\r\nusing namespace System.Collections\r\nusing namespace System.Collections.Generic\r\n\r\n\r\nclass NumberCompleter : IArgumentCompleter {\r\n\r\n    [int] $From\r\n    [int] $To\r\n    [int] $Step\r\n    \r\n    NumberCompleter([int] $from, [int] $to, [int] $step) {\r\n        if ($from -gt $to) {\r\n            throw [ArgumentOutOfRangeException]::new(\"from\")\r\n        }\r\n        $this.From = $from\r\n        $this.To = $to\r\n        $this.Step = $step -lt 1 ? 1 : $step\r\n    }\r\n\r\n    [IEnumerable[CompletionResult]] CompleteArgument(\r\n        [string] $CommandName,\r\n        [string] $parameterName,\r\n        [string] $wordToComplete,\r\n        [CommandAst] $commandAst,\r\n        [IDictionary] $fakeBoundParameters) {\r\n        \r\n        $resultList = [List[CompletionResult]]::new()\r\n        $local:to = $this.To\r\n        $local:step = $this.Step\r\n        for ($i = $this.From; $i -lt $to; $i += $step) {\r\n            $resultList.Add([CompletionResult]::new($i.ToString()))\r\n        }\r\n        \r\n        return $resultList\r\n    }\r\n}\r\n\r\nclass NumberCompletionAttribute : ArgumentCompleterAttribute, IArgumentCompleterFactory {\r\n    [int] $From\r\n    [int] $To\r\n    [int] $Step\r\n    \r\n    NumberCompletionAttribute([int] $from, [int] $to, [int] $step) {\r\n        $this.From = $from\r\n        $this.To = $to\r\n        $this.Step = $step\r\n    }\r\n\r\n    [IArgumentCompleter] Create() { return [NumberCompleter]::new($this.From, $this.To, $this.Step) }\r\n}\r\n\r\n```\r\n\r\nUsage from PowerShell would then be:\r\n\r\n```powershell\r\nfunction Add{\r\n    param(\r\n       [NumberCompletions(0, 100, 5)]\r\n       [int] $X\r\n      ,\r\n       [NumberCompletions(0, 100, 5)]\r\n       [int] $Y\r\n    )\r\n    $X + $Y\r\n}\r\n```\r\n\r\nFix https://github.com/PowerShell/PowerShell/issues/12708\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [x] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2021-03-26T00:06:41Z",
  "comments": [
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "The CI errors seem unrelated to my commits\r\n",
      "created_at": "2020-05-08T11:04:09Z",
      "updated_at": "2020-05-08T11:04:09Z"
    },
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "Yet again an unrelated CI failure",
      "created_at": "2020-05-08T16:42:11Z",
      "updated_at": "2020-05-08T16:42:11Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Add PowerShell Committee to approve new public API.",
      "created_at": "2020-05-08T17:21:06Z",
      "updated_at": "2020-05-08T17:21:06Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Do you think about IArgumentCompleter<T> vs IArgumentCompleterFactory?",
      "created_at": "2020-05-12T09:28:28Z",
      "updated_at": "2020-05-12T09:28:28Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "@PowerShell/powershell-committee discussed this and we all think it's super interesting, and, at least in our initial look, a well thought out feature.\r\n\r\nHowever, given it's scope, it'd be really nice to see an RFC (or even an issue) where the problem statement and any alternative solutions are discussed and other contributors have a chance to give feedback on the proposal. \r\n\r\n@JamesWTruher also suggested that it might be useful to see a real-world example of how this could be used to refactor PowerShell built-in completers, or to make them more intelligent. E.g. `Import-Module -Path <tab>` might only show folders, *.psd1 files, and *.psm1 files, and that could be reused in other places where it's relevant. ",
      "created_at": "2020-05-13T22:50:25Z",
      "updated_at": "2020-05-13T22:50:25Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Convert to Draft until RFC or issue discussion is finished.",
      "created_at": "2020-05-14T05:35:18Z",
      "updated_at": "2020-05-14T05:35:18Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "I like the idea, very interesting, allowing people to have reusable argument completer attributes. About the implementation, why not have an abstract attribute class that defines an abstract method which returns an `IArgumentCompleter` instance? For example:\r\n\r\n```c#\r\n[AttributeUsage(AttributeTargets.Field | AttributeTargets.Property)]\r\npublic abstract class ReusableArgumentCompletionAttribute : Attribute\r\n{\r\n    protected ReusableArgumentCompletionAttribute() {}\r\n    public abstract IArgumentCompleter NewArgumentCompleter(/* EngineIntrinsics engineIntrinsics ?? */);\r\n}\r\n```\r\n\r\nThis seems more succinct than `: ArgumentCompleterAttribute, IArgumentCompleterFactory`",
      "created_at": "2020-05-14T05:40:06Z",
      "updated_at": "2020-05-14T05:40:06Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "The @PowerShell/powershell-committee discussed this.  In general, we all agree this capability would be useful so thanks for that!  However, we're trying to update our RFC process to make it lighter-weight and would like to try it out with this feature if you're ok with this.  Basically, we'd like to have an issue opened that describes the problem to be solved and/or value to the user and also some example code showing its use (which you have in this PR description already) and expected results.  Based on the amount and quality of discussion, it will help inform if an RFC is needed.",
      "created_at": "2020-05-19T20:22:07Z",
      "updated_at": "2020-05-19T20:22:44Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT in case y'all missed it. \ud83d\ude42 \r\nhttps://github.com/PowerShell/PowerShell/issues/12708",
      "created_at": "2020-05-19T20:44:37Z",
      "updated_at": "2020-05-19T20:44:37Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@vexx32 yes, we missed that.  Thanks!  I linked it to this PR.",
      "created_at": "2020-05-20T16:20:06Z",
      "updated_at": "2020-05-20T16:20:57Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMainainer, Please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2020-05-28T02:00:13Z",
      "updated_at": "2020-05-28T02:00:13Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee had reviewed the associated [issue](https://github.com/PowerShell/PowerShell/issues/12708#issuecomment-645715122) and supports the current design (which is not a statement on the PR review).",
      "created_at": "2020-06-24T16:25:52Z",
      "updated_at": "2020-06-24T16:25:52Z"
    },
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "@PoshChan Please rebuild all",
      "created_at": "2020-06-25T10:02:12Z",
      "updated_at": "2020-06-25T10:02:12Z"
    },
    {
      "author": "PoshChan",
      "author_association": "COLLABORATOR",
      "body": "@powercode, you are not authorized to request a rebuild",
      "created_at": "2020-06-25T10:02:43Z",
      "updated_at": "2020-06-25T10:02:43Z"
    },
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "\ud83e\udd37\u200d\u2642\ufe0f",
      "created_at": "2020-06-25T10:06:42Z",
      "updated_at": "2020-06-25T10:06:42Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2020-07-07T02:00:15Z",
      "updated_at": "2020-07-07T02:00:15Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "Closing and re-opening as the CI structure has changed",
      "created_at": "2020-07-21T00:26:28Z",
      "updated_at": "2020-07-21T00:26:28Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "The CI failure was recently fixed and would be fine on a re-run after the next commit.",
      "created_at": "2020-07-21T17:25:27Z",
      "updated_at": "2020-07-21T17:25:27Z"
    },
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "I think the Codacy error is a false positive.",
      "created_at": "2020-08-03T10:39:13Z",
      "updated_at": "2020-08-03T10:39:13Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2020-08-10T14:00:16Z",
      "updated_at": "2020-08-10T14:00:16Z"
    },
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "@PowerShellTeam Any eyes on this?",
      "created_at": "2020-08-26T12:26:38Z",
      "updated_at": "2020-08-26T12:26:38Z"
    },
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "@adityapatwardhan It seems that you have a requested change here that I have addressed, but somehow the system does not recognize it. Can you have a check to see if there is something that you still want to be addressed? ",
      "created_at": "2020-11-19T18:38:18Z",
      "updated_at": "2020-11-19T18:38:18Z"
    },
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "@PowerShellTeam Can you have a look at why this is in limbo? It's been months without a comment.",
      "created_at": "2020-11-23T16:22:44Z",
      "updated_at": "2020-11-23T16:22:44Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> @PowerShellTeam Can you have a look at why this is in limbo? It's been months without a comment.\r\n\r\n175 open PRs - it speaks for itself - MSFT team is working on other projects.\r\n",
      "created_at": "2020-11-23T16:54:33Z",
      "updated_at": "2020-11-23T16:54:33Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2020-12-01T02:00:07Z",
      "updated_at": "2020-12-01T02:00:07Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "Open PRs should not be assigned to milestone, so they are not assigned to the wrong milestone after they are merged.  For backport consideration, use a `backport` label. ",
      "created_at": "2020-12-09T23:52:44Z",
      "updated_at": "2020-12-09T23:52:44Z"
    },
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT This PR is in a `Change Requested` state, but the requested change is on a commit that is no longer available due to a force push after a rebase, and the requested change is made. How can I get this into a green state?",
      "created_at": "2020-12-14T09:09:43Z",
      "updated_at": "2020-12-14T09:09:43Z"
    },
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "@adityapatwardhan It's been 8 months since you last touched this. Can you act on it or maybe reassign it if you don't have the bandwidth to process it?",
      "created_at": "2021-01-18T13:45:09Z",
      "updated_at": "2021-01-18T13:45:09Z"
    },
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov I'm suspecting that this is in limbo as there is 1 change requested, but it is requested on a commit that isn't available anymore, and hence cannot be fixed. The requested change is already in a different, force-pushed commit.\r\n\r\nWhat do you think is the right way to move this forward? This is actually a very nice feature to have, that opens up new possibilities, both for the team and for regular users, and it's a shame that it's just stuck here.",
      "created_at": "2021-01-27T12:29:46Z",
      "updated_at": "2021-01-27T12:29:46Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "Sorry for the delay. I have reviewed this and looks good. Since it has been a while since we ran the CI tests for this PR. I am restarting all the tests. I will merge as soon as the tests pass.",
      "created_at": "2021-03-25T22:24:14Z",
      "updated_at": "2021-03-25T22:24:14Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "Closing and re-opening to re-trigger all CI tests",
      "created_at": "2021-03-25T22:25:43Z",
      "updated_at": "2021-03-25T22:25:43Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@PoshChan please remind me in 1 hour",
      "created_at": "2021-03-25T22:26:04Z",
      "updated_at": "2021-03-25T22:26:04Z"
    },
    {
      "author": "PoshChan",
      "author_association": "COLLABORATOR",
      "body": "@adityapatwardhan, this is the reminder you requested 1 hour ago",
      "created_at": "2021-03-25T23:27:07Z",
      "updated_at": "2021-03-25T23:27:07Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@powercode Thank you for your contribution and patience!",
      "created_at": "2021-03-26T00:07:04Z",
      "updated_at": "2021-03-26T00:07:04Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@powercode Please open new documentation issue.\r\n\r\n/cc @sdwheeler ",
      "created_at": "2021-03-26T05:33:00Z",
      "updated_at": "2021-03-26T05:33:00Z"
    },
    {
      "author": "sdwheeler",
      "author_association": "COLLABORATOR",
      "body": "@powercode @iSazonov The scripting example can be added to the docs. The C# usage needs to be added in ///-comments in the source code. Please open the appropriate `documentation needed` issue in this repo.",
      "created_at": "2021-03-29T15:48:13Z",
      "updated_at": "2021-03-29T15:48:13Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.2.0-preview.5` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.2.0-preview.5)\n",
      "created_at": "2021-04-14T23:59:41Z",
      "updated_at": "2021-04-14T23:59:41Z"
    }
  ],
  "created_at": "2020-05-07T21:54:05Z",
  "number": 12605,
  "state": "closed",
  "title": "Adding IArgumentCompleterFactory for parameterized ArgumentCompleters",
  "updated_at": "2021-09-15T18:33:01Z"
}