{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3060",
  "author": "Gemstar007",
  "body": "Steps to reproduce\r\n------------------\r\nfunction Bug {\r\n  while($true) {\r\n    \u201cBefore Output\u201d\r\n    Invoke-SqlCmd -Query \"SELECT TOP 10 *\u00a0 FROM YourTable\u201d -Server \"YourServer\" -Database \"YourDB\" \u00a0 \u00a0\r\n    \"After Output\"\r\n    Read-Host -Prompt \u201cpress a key\u2026\u201d\r\n  }\r\n}\r\nBug\r\n\r\n\r\nExpected behavior\r\n-----------------\r\n\u201cBefore Output\u201d -> SqlCmd results -> \u201cAfter Output\u201d -> \u201cpress a key\u2026\u201d ->(returned Read-Host value) -> LOOP.\r\n\r\nActual behavior\r\n---------------\r\n\u201cBefore Output\u201d -> \u201cpress a key\u2026\u201d -> SqlCmd results ->  \u201cAfter Output\u201d -> (returned Read-Host value) -> LOOP.\r\n\r\nEnvironment data\r\n----------------\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      5.1.15023.1000\r\nPSEdition                      Desktop\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nBuildVersion                   10.0.15023.1000\r\nCLRVersion                     4.0.30319.42000\r\nWSManStackVersion              3.0\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Invoke-Sqlcmd cmdlet is not part of the Powershell Core.\r\nPlease report the issue on [UserVoice site](https://windowsserver.uservoice.com/forums/301869-powershell).",
      "created_at": "2017-01-27T19:07:11Z",
      "updated_at": "2017-01-27T19:07:11Z"
    },
    {
      "author": "Gemstar007",
      "author_association": "NONE",
      "body": "This was filed after speaking with folks from Powershell and from SQL.  SQL folks say this is an issue with the default powershell output, not their code.",
      "created_at": "2017-01-30T18:24:27Z",
      "updated_at": "2017-01-30T18:24:27Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "The following code works as expected:\r\n```powershell\r\nfunction Bug {\r\n while($true) {\r\n    \"Before Output\"\r\n    Get-Command Get-Alias\r\n    \"After Output\"\r\n    Read-Host -Prompt \"press a key\u2026\"\r\n }\r\n}\r\n```\r\n@Gemstar007 We need more details.",
      "created_at": "2017-01-30T18:44:15Z",
      "updated_at": "2017-01-30T18:44:15Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "@Gemstar007 could you tell me with whom you spoke on the SQL team? I can follow up with them offline. ",
      "created_at": "2017-01-30T23:50:26Z",
      "updated_at": "2017-01-30T23:50:26Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "TFS:10131325",
      "created_at": "2017-01-30T23:57:01Z",
      "updated_at": "2017-01-30T23:57:01Z"
    },
    {
      "author": "matteot31415",
      "author_association": "NONE",
      "body": "As I told @joeyaiello in e/mail, this does not look like an issue with the SQL PowerShell cmdlet. It seems more related to dubious handling of arrays or collections of 'DataRow' objects.\r\n\r\nHere's an independent repro:\r\n\r\n```PowerShell\r\n\r\n# Create a dummy table\r\n$table = New-Object \"System.Data.DataTable\" \"Foo\"\r\n\r\n# Create a couple of columns\r\n# and add them to the table\r\n$dc = New-Object \"System.Data.DataColumn\"\r\n$dc.DataType = [System.Type]::GetType(\"System.String\")\r\n$dc.ColumnName = \"name\";\r\n$table.Columns.Add($dc)\r\n$dc2 = New-Object \"System.Data.DataColumn\"\r\n$dc2.DataType = [System.Type]::GetType(\"System.Int32\")\r\n$dc2.ColumnName = \"object_id\"\r\n$table.Columns.Add($dc2)\r\n\r\n# Populate two rows..\r\n$row = $table.NewRow()\r\n$row[\"name\"] = \"AAA\"\r\n$row[\"object_id\"] = -103\r\n\r\n$row2 = $table.NewRow()\r\n$row2[\"name\"] = \"BBB\"\r\n$row2[\"object_id\"] = -104\r\n\r\nfunction Bug {\r\n  while($true) {\r\n    Write-Host \"Before Output\"\r\n    @($row, $row2)\r\n    Write-Host \"After Output\"\r\n    Read-Host -Prompt \"press a key...\"\r\n  }\r\n}\r\n```\r\nHere's the output:\r\n\r\n    Before Output\r\n\r\n    After Output\r\n    press a key...: \r\n    name object_id\r\n    ---- ---------\r\n    AAA       -103\r\n    BBB       -104\r\n\r\n    Before Output\r\n    AAA       -103\r\n    BBB       -104\r\n    After Output\r\n    press a key...\r\n\r\n\r\n\r\nKeep pinging me on e/mail, if you have questions. @Gemstar007: I'm also curious to know who you spoke on the SQL Team (I own SQL PowerShell and I don't recall talking to you... Lol)\r\n\r\n-Matteo ",
      "created_at": "2017-03-04T04:18:08Z",
      "updated_at": "2017-03-04T04:27:32Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "Hi @Gemstar007 \r\n\r\nYes! Invoke-SQLCmd or any SQL PowerShell cmdlets are not supported in PowerShell Open Source (only on Windows Systems).  If the problem in Windows PowerShell 5,1 then it needs to be addressed thru UserVoice in the Windows section: \r\nhttps://windowsserver.uservoice.com/forums/295047-general-feedback \r\n\r\nAlso, you can use the following link for specific SQL PowerShell cmdlets issues: https://trello.com/b/NEerYXUU/powershell-sql-client-tools-sqlps-ssms \r\n\r\nHope this helps,\r\n:)\r\n",
      "created_at": "2017-03-04T04:29:58Z",
      "updated_at": "2017-03-04T04:29:58Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "This seems to be an issue with System.Data.DataTable than SQL cmdlet.  We should investigate why the output is out-of-order as this may not be unique to that type.",
      "created_at": "2017-03-07T18:58:14Z",
      "updated_at": "2017-03-07T18:58:14Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I can not reproduce in PS 6.0 alfa.16:\r\n```powershell\r\nPS C:\\Program Files\\PowerShell\\6.0.0.16> $table = New-Object \"System.Data.DataTable\" \"Foo\"\r\nNew-Object : A constructor was not found. Cannot find an appropriate constructor for type System.Data.DataTable.\r\nAt line:1 char:10\r\n+ $table = New-Object \"System.Data.DataTable\" \"Foo\"\r\n+          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : ObjectNotFound: (:) [New-Object], PSArgumentException\r\n    + FullyQualifiedErrorId : CannotFindAppropriateCtor,Microsoft.PowerShell.Commands.NewObjectCommand\r\n\r\nPS C:\\Program Files\\PowerShell\\6.0.0.16> [System.Data.DataTable].Assembly\r\n\r\nGAC    Version        Location\r\n---    -------        --------\r\n       v4.0.30319     C:\\Program Files\\PowerShell\\6.0.0.16\\System.Data.Common.dll\r\n```\r\n\r\nCoreFX already has the constructor.",
      "created_at": "2017-03-07T19:37:23Z",
      "updated_at": "2017-03-07T19:37:23Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "Hum! I don't think there's a problem with Invoke-SQLCmd as the proper way is to use this command is to save the results to a variable and then displaying the object properties.  Although I don't understand the use of the forever-loop as I would have to condition the loop properly.  This issue on relates only to Windows 5.1 and not Alpha 6.0.  \r\n\r\n![invokesql_2017-03-07_16-01-56](https://cloud.githubusercontent.com/assets/19892435/23677851/cb29e490-034f-11e7-93f2-5e350f1a59a6.jpg)\r\n",
      "created_at": "2017-03-07T21:05:32Z",
      "updated_at": "2017-03-07T21:05:32Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "Hey @iSazonov,\r\n\r\nWhy not creating a separate issue for loading assembly \"System.Data.SqlClient.dll\"?  I can't use to connect to a SQL instance in either PowerShell Alpha 6.0.0.16 version in Linux not Windows.  And, it works on Windows PowerShell fine.\r\n\r\nOf course, unless I'm doing something wrong in how to load the assemblies. Feel free to correct my mistake.  See code below and attached image.\r\n\r\nI tried the code in both Windows 10 Build 15048 and Linux Ubuntu 16.04.1.\r\n\r\n`\r\n## - Loading Assemblies:\r\nAdd-Type -Path \"C:\\Program Files\\PowerShell\\6.0.0.16\\System.Data.Common.dll\"\r\nAdd-Type -Path \"C:\\Program Files\\PowerShell\\6.0.0.16\\System.Data.SqlClient.dll\"\r\n\r\n## - NON-SMO script code Set PowerShell variables:\r\n$ConnectionString = 'server=servername;database=Master;Integrated Security=false;User ID=sa;Password=yrpassword';\r\n$TSQLQuery = \"Select @@Version as SQLVersion; \";\r\n\r\n## - Connect and Execute Stored-Procedure:\r\n$sda = New-Object System.Data.SqlClient.SqlDataAdapter ($TSQLQuery, $ConnectionString);\r\n$sdt = New-Object System.Data.DataTable;\r\n$sda.fill($sdt) | Out-Null;\r\n$sdt.Rows;\r\n`\r\n![sqlclient_01_2017-03-07_16-51-20](https://cloud.githubusercontent.com/assets/19892435/23679814/1296a780-0357-11e7-94b6-aa227569cf4c.jpg)\r\n\r\n\r\n\r\n",
      "created_at": "2017-03-07T21:59:17Z",
      "updated_at": "2017-03-07T21:59:17Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@MaximoTrinidad SqlDataAdapter not in corefx and not planned for .Net Std 2.0 https://github.com/dotnet/corefx/issues/10706\r\n\r\nSqlClient should show up once we moved to latest corefx",
      "created_at": "2017-03-07T22:05:18Z",
      "updated_at": "2017-03-07T22:05:18Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "@SteveL-MSFT \r\n\r\nCool!!  Thanks.  I'll be waiting for it.\r\n\r\nGreatly Appreciated,\r\n:)",
      "created_at": "2017-03-07T22:16:01Z",
      "updated_at": "2017-03-07T22:16:01Z"
    }
  ],
  "created_at": "2017-01-27T17:58:22Z",
  "number": 3060,
  "state": "open",
  "title": "When using Invoke-SqlCmd in a loop, print buffer doesn't get flushed before\u00a0a Read-Host is executed",
  "updated_at": "2018-06-21T21:07:25Z"
}