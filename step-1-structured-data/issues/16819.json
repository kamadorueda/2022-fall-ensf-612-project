{
  "_url": "https://github.com/PowerShell/PowerShell/issues/16819",
  "author": "8YdEo37",
  "body": "### Summary of the new feature / enhancement\n\nMy personal use case is configuration files, but would be perfect to ingest any yaml structure without extra modules with stale development and with official support for PS +7\r\n\r\n- https://github.com/cloudbase/powershell-yaml\r\n- https://github.com/Phil-Factor/PSYaml\r\n\r\nIn my opinion, Yaml is getting mature enough to bring it natively to Powershell without hassle around JSON\r\n\r\nPS: Thanks for pushing hard forward and making Powershell so good nowadays ! ;)\n\n### Proposed technical implementation details (optional)\n\n_No response_",
  "closed_at": "2022-02-02T11:00:45Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "There are multiple issues for this already: \r\n\r\n- #2109\r\n- #3607\r\n- #3613\r\n- #16785",
      "created_at": "2022-01-30T17:12:46Z",
      "updated_at": "2022-01-30T17:12:46Z"
    },
    {
      "author": "jhoneill",
      "author_association": "NONE",
      "body": "> There are multiple issues for this already:\r\n> \r\n\r\nA couple of points before this one is marked as closed, \r\n- It would be good to have an official statement - even if just team blog post entitled \"Why doesn't PowerShell ship a YAML module\" this has been rumbling along for five years now and people will keep asking. \r\n- There is a community module. https://www.powershellgallery.com/packages/powershell-yaml/0.4.2  With 18 million downloads it has become the de-facto way to add YAML support, the OP terms it stale (last update was May 2020) others might call it stable :-)  It uses https://github.com/aaubry/YamlDotNet which has been pull from nuget over 30 million times, and has been updated more recently.  \r\n\r\n What would people like the PowerShell team to do ?  \r\n1. Find a way to ship the community module with PowerShell 7.x  ? (Possibly fork the code and maintain it, but it means taking a dependency on a third party YAML library for .NET with which comes with that)\r\n2. Build a \"clean clone\" version of the community module? i.e. the same commands work, the same YAML library is doing the work under the surface (same dependency issues)  but the module code comes from the team\r\n3. Lobby the powers-that-be on the .NET team to add YAML support (much as Json support was added after years of relying on 3rd party libraries),  and when they do add cmdlets to leverage it \r\n4. Write their own parser (which requires significant effort, and would likely be dropped if/when YAML support goes into .NET)\r\n\r\nNone of these would allow PowerShell to do something it can't do now using a 3rd party module, or to do it very much better, than the third party module ; they  address the problem that **some people using PowerShell want all modules they use to be first-party ones**; I have worked for customers who make the processes to adopt 3rd party modules an onerous one so I understand that this can be for good reason. If the PowerShell team took a dependency on YamlDotNet, things could be made easier for those customers. But it is easy to see this could be repeated for many, many things - more than the team could ever have capacity for. That's why the default position is these additions should come from the community - people can make a case that X should not follow that default, but to date the case made for YAML hasn't convinced the people it needs to.\r\n\r\n \r\n\r\n\r\n\r\n\r\n\n\n<blockquote><img src=\"https://powershellgallery.com/Content/Images/Branding/PackageDefaultIcon.png\" width=\"48\" align=\"right\"><div><strong><a href=\"https://powershellgallery.com/packages/powershell-yaml/\">powershell-yaml 0.4.2</a></strong></div><div>Powershell module for serializing and deserializing YAML</div></blockquote>\n<blockquote><img src=\"https://opengraph.githubassets.com/850572a91c6e9fb1702dca4cc365ecfd75a3bdd8473ed9d6a7cf095de8f4acf6/aaubry/YamlDotNet\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/aaubry/YamlDotNet\">GitHub - aaubry/YamlDotNet: YamlDotNet is a .NET library for YAML</a></strong></div><div>YamlDotNet is a .NET library for YAML. Contribute to aaubry/YamlDotNet development by creating an account on GitHub.</div></blockquote>",
      "created_at": "2022-01-31T12:43:23Z",
      "updated_at": "2022-01-31T12:43:25Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "[This comment](https://github.com/PowerShell/PowerShell/issues/3607#issuecomment-901288121) in one of the linked issues above discusses the reasoning / stance of the pwsh team. As far as I know it hasn't changed much. \ud83d\ude42 ",
      "created_at": "2022-01-31T14:00:00Z",
      "updated_at": "2022-01-31T14:00:00Z"
    },
    {
      "author": "jhoneill",
      "author_association": "NONE",
      "body": "@vexx32    Indeed.  I'm remined of \r\n\r\n> \"I eventually had to go down to the cellar...  with a torch.\"   (flashlight)\r\n>  _'The lights had probably gone.\u2019_ \r\n> \"So had the stairs.\"\r\n> '_You found the notice didn\u2019t you?'_\r\n>  \"Yes I did. It was on display in the bottom of a locked filing cabinet stuck in a disused lavatory with a sign on the door saying 'Beware of The Leopard'.\"\r\n\r\nInstead of having the teams position in a comment to a closed issue on github it might be helpful to give it a bit more, you know,  _prominence_  :-) ",
      "created_at": "2022-02-01T08:02:33Z",
      "updated_at": "2022-02-01T08:02:33Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as duplicate and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2022-02-02T11:00:44Z",
      "updated_at": "2022-02-02T11:00:44Z"
    }
  ],
  "created_at": "2022-01-30T11:56:46Z",
  "number": 16819,
  "state": "closed",
  "title": "Feature Request: Native support for YAML",
  "updated_at": "2022-02-02T11:00:45Z"
}