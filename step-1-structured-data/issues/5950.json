{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5950",
  "author": "pcgeek86",
  "body": "### Symptom\r\n\r\n```\r\nPS /Users/tsulli> $SessionList = @()\r\nPS /Users/tsulli> $SessionList += New-PSSession -SSHTransport .... .... .... ....\r\nPS /Users/tsulli> Invoke-Command -Session $SessionList -ScriptBlock { Get-CimInstance -ClassName Win32_OperatingSystem }\r\nUnable to load DLL 'libmi.so': The specified module or one of its dependencies could not be found.\r\n (Exception from HRESULT: 0x8007007E)\r\n```\r\n\r\n### Expected Result\r\n\r\nCIM instances are returned from remote PowerShell sessions.\r\n\r\n### Actual Result\r\n\r\nError is returned.\r\n\r\n### Environment\r\n\r\n```\r\nPS /Users/tsulli> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.0\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.0\r\nOS                             Darwin 16.7.0 Darwin Kernel Version 16.7.0: Mon Nov 13 21:56:25 PST 2017; root:xnu-3789.72.11~1/RELEASE_X86_64\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\nCheers,\r\nTrevor Sullivan",
  "closed_at": null,
  "comments": [
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@pcgeek86 Thanks for the report! I presume that the remote session is not a loopback, right?\r\nCould you please share the stack trace?",
      "created_at": "2018-01-19T16:59:14Z",
      "updated_at": "2018-01-19T16:59:14Z"
    },
    {
      "author": "pcgeek86",
      "author_association": "NONE",
      "body": "@daxian-dbw Yep, that's correct. It's a remote session from Mac --> Windows Server 2016, via SSH transport. Does this help?\r\n\r\n```\r\nPS /Users/tsulli> $StackTrace\r\n   at System.Management.Automation.Runspaces.AsyncResult.EndInvoke()\r\n   at System.Management.Automation.PowerShell.CoreInvokeRemoteHelper[TInput,TOutput](PSDataCollection`1 input, PSDataCollection`1 output, PSInvocationSettings settings)\r\n   at System.Management.Automation.PowerShell.CoreInvoke[TInput,TOutput](PSDataCollection`1 input, PSDataCollection`1 output, PSInvocationSettings settings)\r\n   at System.Management.Automation.PowerShell.CoreInvoke[TOutput](IEnumerable input, PSDataCollection`1 output, PSInvocationSettings settings)\r\n   at System.Management.Automation.PowerShell.Invoke(IEnumerable input, PSInvocationSettings settings)\r\n   at System.Management.Automation.PowerShell.Invoke()\r\n   at System.Management.Automation.RemoteDebugger.set_UnhandledBreakpointMode(UnhandledBreakpointProcessingMode value)\r\n   at Microsoft.PowerShell.Commands.ExecutionCmdletHelper.ConfigureRunspaceDebugging(Runspace runspace)\r\n   at Microsoft.PowerShell.Commands.ExecutionCmdletHelperRunspace.StartOperation()\r\n   at System.Management.Automation.Remoting.ThrottleManager.StartOneOperationFromQueue()\r\n   at System.Management.Automation.Remoting.ThrottleManager.StartOperationsFromQueue()\r\n   at System.Management.Automation.Remoting.ThrottleManager.SubmitOperations(List`1 operations)\r\n   at System.Management.Automation.PSInvokeExpressionSyncJob.StartOperations(List`1 operations)\r\n   at Microsoft.PowerShell.Commands.InvokeCommandCommand.CreateAndRunSyncJob()\r\n   at Microsoft.PowerShell.Commands.InvokeCommandCommand.ProcessRecord()\r\n   at System.Management.Automation.Cmdlet.DoProcessRecord()\r\n   at System.Management.Automation.CommandProcessor.ProcessRecord()\r\n```",
      "created_at": "2018-01-19T17:02:14Z",
      "updated_at": "2018-01-19T17:03:13Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@pcgeek86 Thanks!\r\n@PaulHigin can you please take a look?",
      "created_at": "2018-01-19T17:07:25Z",
      "updated_at": "2018-01-19T17:07:25Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "The problem is that the pwsh client relies on libmi to deserialize a CIM instance to a PSObject.  It seems that the nupkg for mmi.dll doesn't include a macOS runtime, only a generic `unix` runtime which is really Linux (libmi.so).  Fix would be to publish new version of mmi.dll with proper runtime for `osx-x64`.",
      "created_at": "2018-06-25T23:49:30Z",
      "updated_at": "2018-06-25T23:49:30Z"
    }
  ],
  "created_at": "2018-01-19T16:45:08Z",
  "labels": [
    "Issue-Bug",
    "WG-Remoting"
  ],
  "number": 5950,
  "state": "open",
  "title": "Bug: Calling Get-CimInstance with Invoke-Command results in error: Unable to load DLL 'libmi.so'",
  "updated_at": "2018-06-25T23:49:30Z"
}