{
  "_url": "https://github.com/PowerShell/PowerShell/issues/2527",
  "author": "bcdady",
  "body": "<!--\n\nIf it is a bug report:\n- make sure you are able to repro it on the latest released version. \nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\n- Search the existing issues.\n- Refer to the [FAQ](../docs/FAQ.md).\n- Refer to the [known issues](../docs/KNOWNISSUES.md).\n- Fill out the following repro template\n\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\n-->\n\nThe Get-Verb cmdlet should include a -Group Parameter, or another means of filtering the list of approved verbs.\n## Steps to reproduce\n\nPer [Windows PowerShell 5.0 documentation](https://technet.microsoft.com/en-us/library/hh852690.aspx), `Get-Verb` Syntax is:\n`Get-Verb [[-Verb] <string[]>] [<CommonParameters>]`\n## Expected behavior\n\n`Get-Verb -Group <Common|Communications|Data|Diagnostic|Lifecycle|Other|Security>`\nSpecifying a -Group Parameter would filter to show only the approved verbs in that Group.\nAlternatively, Get-Verb could support a `-Filter`, or `-Include` and `-Exclude` parameter(s)\n## Actual behavior\n\n`Get-Verb` enumerates the full list of approved verbs and their corresponding verb group, but does not provide a convenient way to filter and more easily view approved verbs\n## Environment data\n\nSymptom appears consistent from PSVersions 3.0 - 5.0\n",
  "closed_at": "2017-01-03T23:14:28Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@bcdady Thanks for the enhancement request.\nToday `(get-verb).count` return 98. Do you really think that this _short_ list should be filtered? Could you give practical examples?\nI believe that this list is very short and stable. And that I would really expect from this cmdlet, this is a _description_ of the verbs and groups.\n",
      "created_at": "2016-10-24T04:23:26Z",
      "updated_at": "2016-10-25T04:05:50Z"
    },
    {
      "author": "jpsnover",
      "author_association": "CONTRIBUTOR",
      "body": "I like it!\n",
      "created_at": "2016-10-24T13:25:47Z",
      "updated_at": "2016-10-24T13:25:47Z"
    },
    {
      "author": "kilasuit",
      "author_association": "COLLABORATOR",
      "body": "Not sure there is much need for this as its simple enough to just pipe to Where-Object in my opinion.\n",
      "created_at": "2016-10-24T16:27:51Z",
      "updated_at": "2016-10-24T16:27:51Z"
    },
    {
      "author": "bcdady",
      "author_association": "NONE",
      "body": "@kilasuit Yes, except that with `| where {}`, the admin / IT Pro needs to first know that Verbs are grouped, the names of the Groups they want to view verbs from. Strictly speaking, they could first invoke `get-verb | select Group -Unique`, and then try each of those Group names through `| where {$_.Group -eq $group } | Out-Host -Paging`. But why not make all that easier (especially newbies learning the ropes, not yet familiar with approved verbs. If the same results were possible via a parameter of the cmdlet, then an IT Pro can more simply tab through the available Groups, select the best option for their use case, and enumerate the list approved Verbs in that Group.\n",
      "created_at": "2016-10-26T02:06:10Z",
      "updated_at": "2016-10-26T02:06:10Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I do think that there isn't a cmdlet that is used less frequently:\n[Get-Verb](https://www.google.ru/#newwindow=1&q=filetype:ps1+%22get-verb%22)\n",
      "created_at": "2016-10-26T03:06:57Z",
      "updated_at": "2016-10-26T03:06:57Z"
    },
    {
      "author": "bcdady",
      "author_association": "NONE",
      "body": "@iSazonov Perhaps after we make it more useful, it will be used more frequently.\n",
      "created_at": "2016-10-26T13:23:41Z",
      "updated_at": "2016-10-26T13:23:41Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Give up! \ud83d\ude0a \n\nWhat do you say to add a brief description?\n\n``` powershell\nPS > Get-Verb\n\nVerb        Group      Description\n----        -----      -----------\nAdd         Common     <Add description>\nClear       Common     <Clear description>\n```\n",
      "created_at": "2016-10-26T15:40:23Z",
      "updated_at": "2016-10-26T15:40:23Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "There is little point in speculating on the usage.\n\nI don't really see any downside to this proposal, it is a simple change to add and I can't see the any potential UX problems in the future, e.g. the cmdlet ending up with too many parameters.\n",
      "created_at": "2016-10-26T15:55:11Z",
      "updated_at": "2016-10-26T15:55:11Z"
    }
  ],
  "created_at": "2016-10-23T22:16:22Z",
  "labels": [
    "Issue-Enhancement",
    "WG-Cmdlets",
    "Up-for-Grabs",
    "Resolution-Fixed"
  ],
  "number": 2527,
  "state": "closed",
  "title": "Enhancement Request: Get-Verb -Group parameter",
  "updated_at": "2017-01-03T23:14:28Z"
}