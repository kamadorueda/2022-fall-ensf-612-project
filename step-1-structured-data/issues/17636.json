{
  "_url": "https://github.com/PowerShell/PowerShell/issues/17636",
  "author": "theuserbl",
  "body": "### Prerequisites\n\n- [X] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\n\n### Steps to reproduce\n\nUsing for example PowerShell 7.3.0-preview.5 on Windows 10 21H1.\r\nWith PowerShell 7.1.4 it don't work, because it needs the file and directory coloring.\r\nInput then `Get-ChildItem | Out-GridView` on the PowerShell in a directory with subdirectories and *-.exe-files.\r\n\r\n\r\n\n\n### Expected behavior\n\n```console\nThat a directory called \"Downloads\" is in the Out-GridView shown as \"Downloads\".\r\nAnd that an executable called \"program.exe\" is in the Out-GridView shown as \"program.exe\".\n```\n\n\n### Actual behavior\n\n```console\nThe directory called \"Downloads\" is in the Out-GridView shown as \"[44;1mDownloads[0m\".\r\nAnd the executable called \"program.exe\" is in the Out-GridView shown as \"[32;1mprogram.exe[0m\".\n```\n\n\n### Error details\n\n```console\nthere is no error\n```\n\n\n### Environment data\n\n```powershell\nPS D:\\> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.3.0-preview.5\r\nPSEdition                      Core\r\nGitCommitId                    7.3.0-preview.5\r\nOS                             Microsoft Windows 10.0.19043\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\nPS D:\\>\n```\n\n\n### Visuals\n\n<img width=\"674\" alt=\"outgrid\" src=\"https://user-images.githubusercontent.com/8337032/177521924-636f2d7f-6d06-482d-a57f-f1a1f34a1f4b.png\">\r\n",
  "closed_at": "2022-07-12T16:41:58Z",
  "comments": [
    {
      "author": "MatejKafka",
      "author_association": "NONE",
      "body": "This is a more general issue \u2013 also happens with `ls >out.txt`, `ls | clip`,...\r\n\r\nIt seems that `ls` unconditionally adds the color escape sequences whenever the output is formatted in a table (not sure, but seems like it), without checking if the output actually goes to the terminal.",
      "created_at": "2022-07-06T11:01:32Z",
      "updated_at": "2022-07-25T17:17:57Z"
    },
    {
      "author": "theuserbl",
      "author_association": "NONE",
      "body": "@MatejKafka No, if I output it to out.txt it isn't there.\r\n\r\nBut I don't know, why they are using on any point of the PowerShell Escape sequences.\r\n\r\nIf I write in C# a program with\r\n```\r\nConsole.ForegroundColor=ConsoleColor.Red;\r\nConsole.Write(\"Hello \");\r\nConsole.ForegroundColor=ConsoleColor.Yellow;\r\nConsole.WriteLine(\"there!\");\r\n```\r\n\r\nI can move it to Out-GridView and every point else and there are no escape sequences.\r\n\r\nIf I write in PowerShell\r\n`Write-Host -ForegroundColor \"Red\" \"Hello \" -NoNewLine ; Write-Host -ForegroundColor \"Yellow\" \"there!\"`\r\n\r\nThats the way  https://github.com/joonro/Get-ChildItemColor works.\r\nAnd Get-ChildItemColor is written in PowerShell, creates an colorizes Get-ChildItem output, and it can be output to Out-GridView without ANSI escape sequences.\r\n\r\nSo why have the current implementation of the Get-ChildItem ANSI escape sequences, when they are not needed and other implementations are possible?\r\n\r\n<blockquote><img src=\"https://opengraph.githubassets.com/b9c9ca2305887b7a3ffc8c45db153fb7bbef54635f935c59137df4a4ac077c1c/joonro/Get-ChildItemColor\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/joonro/Get-ChildItemColor\">GitHub - joonro/Get-ChildItemColor: Provides colorized version of Get-ChildItem Cmdlet of PowerShell.</a></strong></div><div>Provides colorized version of Get-ChildItem Cmdlet of PowerShell. - GitHub - joonro/Get-ChildItemColor: Provides colorized version of Get-ChildItem Cmdlet of PowerShell.</div></blockquote>",
      "created_at": "2022-07-06T12:08:26Z",
      "updated_at": "2022-07-06T12:09:23Z"
    },
    {
      "author": "MatejKafka",
      "author_association": "NONE",
      "body": "@theuserbl Ah, you're right, the `ls >out.txt` and `ls | clip` scenarios must have been fixed somewhere between -preview.2 (which I use) and -preview.5.\r\n\r\nAs for your other points, I think VT color escape sequences might be used to allow easier configuration using $PSStyle, but I'm only guessing. Also, I think the Win32 API for console colors only supports 16 colors, so using escape sequences might be necessary to get full RGB colors, and it's hard to make Win32 colors work with text remoting (e.g. SSH).",
      "created_at": "2022-07-06T15:14:35Z",
      "updated_at": "2022-07-06T15:20:35Z"
    },
    {
      "author": "jhoneill",
      "author_association": "NONE",
      "body": "But it's OK if you turn off the experimental feature \"PSAnsiRenderingFileInfo\" . yes ? \r\n\r\n",
      "created_at": "2022-07-06T21:40:14Z",
      "updated_at": "2022-07-06T21:40:14Z"
    },
    {
      "author": "StevenBucher98",
      "author_association": "COLLABORATOR",
      "body": "Yes seems to be a bug with the `PSAnsiRenderingFileInfo` experimental feature. The bug does not happen when it is disabled",
      "created_at": "2022-07-11T16:44:18Z",
      "updated_at": "2022-07-11T16:44:18Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I believe the problem is that `out-gridview` is using the formatdata and not the original object data\r\n",
      "created_at": "2022-07-11T16:48:12Z",
      "updated_at": "2022-07-11T16:48:12Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Trying to see if this is a somewhat easy fix as this would affect any formatting that adds ANSI escape sequences and used with Out-GridView",
      "created_at": "2022-07-11T17:13:32Z",
      "updated_at": "2022-07-11T17:13:32Z"
    },
    {
      "author": "ThomasNieto",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT this is also impacting `Out-ConsoleGridView` https://github.com/PowerShell/GraphicalTools/issues/159. If you fix it for one it may be fixed for both.\r\n\r\n",
      "created_at": "2022-07-11T17:33:33Z",
      "updated_at": "2022-07-25T17:17:57Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:This issue was addressed in PowerShell/PowerShell#17664, which has now been successfully released as `v7.3.0-preview.6`.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.3.0-preview.6)\n",
      "created_at": "2022-07-18T21:43:13Z",
      "updated_at": "2022-07-25T17:17:58Z"
    }
  ],
  "created_at": "2022-07-06T09:49:05Z",
  "labels": [
    "Issue-Bug",
    "Resolution-Fixed"
  ],
  "number": 17636,
  "state": "closed",
  "title": "Get-ChildItem in Out-GridView with ANSI Escape sequences :-(",
  "updated_at": "2022-07-25T17:17:58Z"
}