{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11302",
  "author": "joeyaiello",
  "body": "Going into RC, we have to make a decision on whether experimental features are \"graduated\" to stable vs. staying as experimental.\r\n\r\nPer some conversations with the @PowerShell/powershell-committee, this is our current position on each:\r\n\r\n## Stable\r\n\r\n```\r\nPSCoalescingOperators\r\nPSErrorView\r\nPSForEachObjectParallel\r\nPSPipelineChainOperators\r\nPSTernaryOperator\r\nPSUpdatesNotification\r\nPSWindowsPowerShellCompatibility\r\nMicrosoft.PowerShell.Utility.PSGetError\r\n```\r\n\r\n## Experimental\r\n\r\n* `PSCommandNotFoundSuggestion`: the suggestion infrastructure has proven to have some serious issues that break this feature (e.g. it's not shown at all in VS Code)\r\n* `PSImplicitRemotingBatching`: this has not had enough significant usage (both internally and externally) for us to feel confident about it\r\n* `PSNullConditionalOperators`: this is only the null conditional member access aspect of the null conditional operators\r\n* `PSUnixFileState`: this could still have unknown performance implications, and we still might want to change the property names on the returned information\r\n* `Microsoft.PowerShell.Utility.PSManageBreakpointsInRunspace`: this one will likely be getting some last minute work from @TylerLeonhardt to support a feature needed in `vscode-powershell`. Given the risk of these last minute changes, we don't want to promote this to stable in 7.0.\r\n* `PSDesiredStateConfiguration.InvokeDscResource`: this has some limitations compared to the `Invoke-DscResource` shipped in Windows PS that we'd like to address before graduating it.",
  "closed_at": "2019-12-10T23:41:44Z",
  "comments": [
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "> PSWindowsPowerShellCompatibility\r\n\r\nIf this is made stable will there still be a way to disable it globally?",
      "created_at": "2019-12-10T13:17:16Z",
      "updated_at": "2019-12-10T13:17:16Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@SeeminglyScience we've discussed adding a setting to powershell.config.json to disable it.  Created https://github.com/PowerShell/PowerShell/issues/11309",
      "created_at": "2019-12-10T16:52:15Z",
      "updated_at": "2019-12-10T17:10:59Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:This issue was addressed in #11303, which has now been successfully released as `v7.0.0-rc.1`.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.0.0-rc.1)\n",
      "created_at": "2019-12-16T21:38:02Z",
      "updated_at": "2019-12-16T21:38:02Z"
    }
  ],
  "created_at": "2019-12-09T20:49:05Z",
  "labels": [
    "Issue-Enhancement",
    "Area-Maintainers-Build"
  ],
  "number": 11302,
  "state": "closed",
  "title": "Decide on which experimental features will remain in experimental in 7.0",
  "updated_at": "2020-08-11T20:14:33Z"
}