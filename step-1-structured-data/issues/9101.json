{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9101",
  "author": "pougetat",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nThis PR \"fixes\" the current behavior for get-module with -FullyQualifiedName specified and containing a path. Unfortunately this does mean that this PR is a breaking change.\r\n\r\nTo illustrate the current behavior and the new behavior we can look at the following example : \r\n/Foo/1.0/Foo.psd1\r\n/Foo/2.0/Foo.psd1\r\nGet-module -ListAvailable -FullyQualifiedName @{ModuleName = \"/Foo\"; ModuleVersion = \"2.0\"}\r\n\r\nThis will return both modules since \"/Foo\" is not correctly matched to either .psd1 file and the current behavior is to skip the version checks and simply return the modules.\r\nWith this PR the names are correctly matched and the version checks can take place thus resulting in only one module being returned. \r\n\r\n## PR Context\r\n\r\nThis PR is related to the following issues : \r\nhttps://github.com/PowerShell/PowerShell/issues/8936 (meta-issue tracking refactoring work on module commandlets in general)\r\nhttps://github.com/PowerShell/PowerShell/issues/8262\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [ ] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [x] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: https://github.com/PowerShell/PowerShell/issues/8262\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n        - [ ] [Add `[feature]` to your commit messages if the change is significant or affects feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\r\n",
  "closed_at": "2019-03-29T22:27:10Z",
  "comments": [
    {
      "author": "pougetat",
      "author_association": "NONE",
      "body": "CodeFactor is raising one issue (private static methods must come before non static private methods) which is not respected in other parts of the file that I have not modified. :)",
      "created_at": "2019-03-10T14:48:08Z",
      "updated_at": "2019-03-10T14:48:08Z"
    },
    {
      "author": "pougetat",
      "author_association": "NONE",
      "body": "@PowerShell/powershell-committee\r\nAlso tagging @SteveL-MSFT and @daxian-dbw since @PowerShell/powershell-committee not hoverable.\r\n\r\nHere is an example that illustrates the behavior differences introduced with this PR.\r\n\r\nConsider the following environment : \r\n\r\n/foo/1.0/foo.pds1 => version 1.0 specified in the manifest\r\n/foo/2.0/foo.psd1 => version 2.0 specified in the manifest\r\n\r\nWhen executing the following command : \r\n\r\n```powershell\r\nGet-module -ListAvailable -FullyQualifiedName @{ModuleName = \"./foo\"; ModuleVersion = \"2.0\"}\r\n```\r\nthe old behavior yields : \r\n\r\n```\r\nModuleType        Version       Name\r\n-----------     -----------   --------\r\nManifest            2.0          foo\r\nManifest            1.0          foo\r\n```\r\n\r\nthe new behavior yields : \r\n```\r\nModuleType        Version       Name\r\n-----------     -----------   --------\r\nManifest            2.0          foo\r\n```\r\n\r\nThis is a breaking change for anyone counting on the fact that both modules would be returned even though this behavior seems counter-intuitive.",
      "created_at": "2019-03-26T22:46:23Z",
      "updated_at": "2019-03-27T08:42:25Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee reviewed this and agree with the change in behavior as it's unlikely someone has been dependent on this existing behavior",
      "created_at": "2019-03-27T22:35:36Z",
      "updated_at": "2019-03-27T22:35:36Z"
    },
    {
      "author": "pougetat",
      "author_association": "NONE",
      "body": "@rjmholt\r\nThanks for the approval and the review. I am still going to remove the extra linq expressions to not create too much garbage as you requested so this isn't quite ready to merge. ",
      "created_at": "2019-03-29T08:58:25Z",
      "updated_at": "2019-03-29T08:58:25Z"
    },
    {
      "author": "pougetat",
      "author_association": "NONE",
      "body": "@adityapatwardhan @rjmholt Hey,\r\nI have updated the PR to remove the Linq expression :smile: ",
      "created_at": "2019-03-29T20:44:02Z",
      "updated_at": "2019-03-29T20:44:02Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@pougetat Thank you for your contribution!",
      "created_at": "2019-03-29T22:27:32Z",
      "updated_at": "2019-03-29T22:27:32Z"
    },
    {
      "author": "LaurentDardenne",
      "author_association": "NONE",
      "body": "As a result of this change, as I understand it, should not the _ModuleSpecification_ class help specify that its [Name](https://github.com/PowerShell/PowerShell/blob/bd6fdae73520931f0d27a29d6290e18761772141/src/System.Management.Automation/engine/Modules/ModuleSpecification.cs#L281)  property can also contain a path and not just a module name?",
      "created_at": "2019-05-31T13:50:24Z",
      "updated_at": "2019-05-31T13:50:24Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "> As a result of this change, as I understand it, should not the ModuleSpecification class help specify that its Name property can also contain a path and not just a module name?\r\n\r\nYes it should. I believe that was always intended to work, since ModuleSpecifications are how RequiredModules in PSD1s are loaded.",
      "created_at": "2019-05-31T14:26:52Z",
      "updated_at": "2019-05-31T14:26:52Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "@LaurentDardenne which help are you talking about?",
      "created_at": "2019-05-31T14:27:47Z",
      "updated_at": "2019-05-31T14:27:47Z"
    },
    {
      "author": "LaurentDardenne",
      "author_association": "NONE",
      "body": "> @LaurentDardenne which help are you talking about?\r\n\r\n[This one](https://docs.microsoft.com/en-us/dotnet/api/microsoft.powershell.commands.modulespecification.name?view=pscore-6.2.0#Microsoft_PowerShell_Commands_ModuleSpecification_Name) ",
      "created_at": "2019-05-31T14:56:50Z",
      "updated_at": "2019-05-31T14:56:50Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "Oh -- that comes from comment help! (In the XML comments)",
      "created_at": "2019-05-31T15:04:41Z",
      "updated_at": "2019-05-31T15:04:41Z"
    }
  ],
  "created_at": "2019-03-10T13:55:28Z",
  "number": 9101,
  "state": "closed",
  "title": "Fix Get-Module -FullyQualifiedName option to work with paths",
  "updated_at": "2019-08-08T21:22:17Z"
}