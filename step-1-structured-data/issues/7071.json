{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7071",
  "author": "SeeminglyScience",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\n- Windows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nIf it is a bug report:\r\n- make sure you are able to repro it on the latest released version. \r\nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n- Fill out the following repro template:\r\n\r\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\r\n-->\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\n$module = [psmoduleinfo]::new({\r\n    $script:moduleVar = 'myValue'\r\n    function Test-Function {\r\n        [CmdletBinding()]\r\n        param(\r\n            [ArgumentCompleter({ $moduleVar })]\r\n            [string] $MyParameter\r\n        )\r\n    }\r\n\r\n    Export-ModuleMember -Function Test-Function\r\n})\r\n\r\n$module | Import-Module -Force\r\n$inputScript = 'Test-Function -MyParameter '\r\n$splat = @{\r\n    inputScript = $inputScript\r\n    cursorColumn = $inputScript.Length\r\n}\r\n\r\nTabExpansion2 @splat | % CompletionMatches\r\n\r\n$moduleVar = 'differentValue'\r\nTabExpansion2 @splat | % CompletionMatches\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\nBoth TabExpansion2 invocations to return completion matches based on the module scoped variable.\r\n\r\n```none\r\nCompletionText ListItemText   ResultType ToolTip\r\n-------------- ------------   ---------- -------\r\nmyValue        myValue              Text myValue\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\nThe first invocation returns the default completion of relative file names, while the second returns completions based on the globally scoped variable.\r\n\r\n```none\r\nCompletionText ListItemText   ResultType ToolTip\r\n-------------- ------------   ---------- -------\r\n<relative file name completion output>\r\ndifferentValue differentValue       Text differentValue\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.1.0-preview.3\r\nPSEdition                      Core\r\nGitCommitId                    v6.1.0-preview.3\r\nOS                             Microsoft Windows 10.0.15063\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\nI'm able to reproduce as far back as Windows PowerShell 5.1.  Also worth noting that ScriptBlock's created for `ValidateScriptAttribute` **do** get scoped correctly.",
  "closed_at": null,
  "comments": [],
  "created_at": "2018-06-14T18:40:59Z",
  "labels": [
    "WG-Engine",
    "Issue-Discussion"
  ],
  "number": 7071,
  "state": "open",
  "title": "ScriptBlock created for ArgumentCompleter has top level SessionState",
  "updated_at": "2018-06-15T18:00:37Z"
}