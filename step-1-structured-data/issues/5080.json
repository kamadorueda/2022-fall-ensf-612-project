{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5080",
  "author": "JamesWTruher",
  "body": "This unifies file encoding across the inbox cmdlets to be UTF-8 without a BOM for all platforms. This is a breaking change as cmdlets on windows have a number of different encodings. This  supports better interoperability with tradition Linux shells as we are using the same encoding.\r\n\r\nUse `ArgumentCompletionsAttribute` for the parameter to accept the currently used strings.\r\nRegister encoding providers on all platforms. This seems safe enough, and there are defintely more encodings available on CoreFX after this is done, which will be useful for some of the web cmdlet scenarios\r\n\r\nValidate that files are created with UTF-8 encoding without BOM\r\nUpdate tests to validate Encoding parameter to new type and create new tests for\r\nparameter type validation.\r\n\r\n*Breaking Change* The `-Encoding Byte` has been removed from the filesystem provider cmdlets. A new parameter -Byte is now the signal that a byte stream is required as input or output will be a stream of bytes.",
  "closed_at": "2017-10-24T02:46:27Z",
  "comments": [
    {
      "author": "dantraMSFT",
      "author_association": "CONTRIBUTOR",
      "body": ">     internal static class EncodingConversion\r\n\r\nI think this class should be in its own CS file; it's not a path utility and discoverability is problematic. \r\n\r\nIn fact, I think this and the associated ArgumentToEncodingTransformationAttribute should be moved into an encoding file.",
      "created_at": "2017-10-10T22:46:44Z",
      "updated_at": "2017-10-10T22:50:17Z"
    },
    {
      "author": "JamesWTruher",
      "author_association": "MEMBER",
      "body": "@adityapatwardhan @dantraMSFT @SteveL-MSFT I've believe I've made updates that address your blocking issues",
      "created_at": "2017-10-17T18:43:48Z",
      "updated_at": "2017-10-17T18:43:48Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee reviewed this and has agreed on:\r\n\r\n1. name the parameter `-AsByteArray`\r\n2. output warning if `-Encoding` is used with `-AsByteArray` that Encoding is not being used\r\n",
      "created_at": "2017-10-18T23:35:22Z",
      "updated_at": "2017-10-18T23:35:22Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "A message from the COSP (Crying Over Spilt Milk) department:\r\n\r\n> output warning if -Encoding is used with -AsByteArray that Encoding is not being used\r\n\r\nThis results in an awkward user experience, because users will expect incompatible parameters to be in different parameter sets, with attempts to combine them resulting in an _error_, not a warning.\r\n\r\nA step backward in usability, and a breaking change to boot - and no gain that I can discern.\r\n\r\nI also agree with @iSazonov that forgoing compatibility with the legacy encoding behavior on Windows altogether will dismay many Windows users, especially those whose \"ANSI\" / OEM code pages aren't based on the Latin alphabet.\r\n\r\nIf the idea is to focus on the Unix crowd first, I see trouble as well: broken quoting, broken CLI, broken globbing, lack of `&&` and `||`, ...\r\n",
      "created_at": "2017-10-19T03:22:23Z",
      "updated_at": "2017-10-20T02:58:10Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@mklement one of the considerations the committee acknowledged is the complexity of using multiple parametersets to make parameters mutually exclusive so we were ok with using a warning as a simplification until we can revisit the recalled RFC on making it easier to both define as well as understand mutually exclusive parameters",
      "created_at": "2017-10-19T20:27:17Z",
      "updated_at": "2017-10-19T20:27:17Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@dantraMSFT Can you please take another look and update your review?",
      "created_at": "2017-10-23T20:23:23Z",
      "updated_at": "2017-10-23T20:23:23Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "I'm getting this PR merged so that it can be validated by today's daily builds, and hopefully, it can catch Beta.9 release.\r\nActually, this PR should have the last commit marked with '[Feature]' tag to trigger full build run.",
      "created_at": "2017-10-24T02:42:11Z",
      "updated_at": "2017-10-24T02:47:27Z"
    }
  ],
  "created_at": "2017-10-10T21:53:02Z",
  "number": 5080,
  "state": "closed",
  "title": "Unify cmdlets with parameter 'Encoding' to be of type System.Text.Encoding",
  "updated_at": "2022-05-11T18:27:51Z"
}