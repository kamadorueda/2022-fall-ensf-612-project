{
  "_url": "https://github.com/PowerShell/PowerShell/issues/17020",
  "author": "HerbBoy",
  "body": "### Prerequisites\n\n- [X] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\n\n### Steps to reproduce\n\nI experienced this issue when I went to leverage Chef InSpec to run https://github.com/vmware/dod-compliance-and-automation (a compliance check against VMware DISA STIG's).\r\n\r\n1. Using RHEL 8.4 or Ubuntu 18.04 (tested against both OS's)\r\n2. Install PowerShell Core 7.2.1\r\n3. Install Chef InSpec ver. 4.52.9\r\n4. Git Clone https://github.com/vmware/dod-compliance-and-automation\r\n5. Run the Chef InSpec role to run a complaince check against a ESXi https://github.com/vmware/dod-compliance-and-automation/blob/master/vsphere/7.0/vsphere/inspec/vmware-vsphere-esxi-7.0-stig-baseline/README.md\r\n\n\n### Expected behavior\n\n```console\nWhen run on PowerShell Core 7.2.0 this works without issue.\n```\n\n\n### Actual behavior\n\n```console\nWhen run on PowerShell Core 7.2.1 this fails out.\r\n\r\nOnly thing i am not sure of is which tool is at fault, hence why i have issue open at InSpec Train https://github.com/inspec/train/issues/725\n```\n\n\n### Error details\n\n```console\nPS /root>> inspec exec ./vmware-vsphere-esxi-7.0-stig-baseline -t vmware:// --input vmhostName=192.168.1.62\r\nhere1\r\n[string](Get-InstalledModule -Name VMware.PowerCLI | Select -ExpandProperty Version)\r\n12.4.1.18769701\r\nPS /root>\r\nhere2\r\nion)\r\n12.4.1.18769701\r\nPS /root>\r\nhere3\r\nion)\r\n12.4.1.18769701\r\nhere4\r\necho $?\r\nTrue\r\nPS /root>\r\nhere5\r\no $?\r\nTrue\r\nPS /root>\r\nhere6\r\no $?\r\nTrue\r\n#<struct Train::Extras::CommandResult stdout=\"ion)\\n\\e[?1l12.4.1.18769701\\n\", stderr=\"\", exit_status=1>\r\nUnable to determine PowerCLI Module version, is it installed?\n```\n\n\n### Environment data\n\n```powershell\nPowerCLI Version: 12.5.0.19195797\r\nOS: RHEL 8.4\r\nPowerShell Core Version: 7.2.1-1.rh\n```\n\n\n### Visuals\n\nn/a",
  "closed_at": null,
  "comments": [
    {
      "author": "jhoneill",
      "author_association": "NONE",
      "body": "I can see an ANSI escape sequence in the output. The main change in   7.2.1 was corrupting output with ansi sequences **by  default**   try this to get clean output\r\n\r\n`$PSStyle.OutputRendering = \"PlainText\"` \r\n\r\n@SteveL-MSFT  I was thinking this was going to put right in 7.2.2 but it seems not. Do with an eta for when *host* can be norm again, because quite a few issues being raised at the moment relate it to it. \r\nIt would be nice for the default to be able to `dir > file.txt` and or `$psversion | clip` and get what we always got. \r\n\r\n",
      "created_at": "2022-03-18T09:22:11Z",
      "updated_at": "2022-03-18T09:22:11Z"
    },
    {
      "author": "HerbBoy",
      "author_association": "NONE",
      "body": "@jhoneill I will give this a shot.\r\n\r\nI would assume then that InSpec will need to adapt how they parse output?",
      "created_at": "2022-03-18T15:31:15Z",
      "updated_at": "2022-03-18T15:31:15Z"
    },
    {
      "author": "jhoneill",
      "author_association": "NONE",
      "body": "They may need to make the parsing more robust, sure. Often that sort of parsing is wrong-footed by even quite small changes, but if they never thought an ANSI sequence could get into the output, you'd expect the appearance of one to cause a failure. ",
      "created_at": "2022-03-18T16:45:26Z",
      "updated_at": "2022-03-18T16:45:26Z"
    },
    {
      "author": "HerbBoy",
      "author_association": "NONE",
      "body": "@jhoneill \r\n\r\n![image](https://user-images.githubusercontent.com/61263592/159192994-7977cded-6425-43fa-8305-2ec66fee287c.png)\r\n\r\n![image](https://user-images.githubusercontent.com/61263592/159192972-b5be2128-fd21-4510-a1f7-8fc6996ecabe.png)\r\n\r\nAny other ideas?\r\n",
      "created_at": "2022-03-21T00:40:23Z",
      "updated_at": "2022-03-21T00:40:23Z"
    },
    {
      "author": "jhoneill",
      "author_association": "NONE",
      "body": "If inspec is launching its own copy of PowerShell setting the option in the session won't work ,  \r\n`$env:NO_COLOR=$true` might\r\n I'm not quite sure what the sequence [esc][?1l does or where it comes from. And I could be barking up the wrong tree, that message might not mean the output that its getting is wrong but if it worked with 7.2 and not 7.2.1  that's too big a coincidence.",
      "created_at": "2022-03-21T12:34:22Z",
      "updated_at": "2022-03-21T12:34:22Z"
    },
    {
      "author": "HerbBoy",
      "author_association": "NONE",
      "body": "Setting ```$env:NO_COLOR=$true``` worked\r\n\r\n@jhoneill which i think based on my understanding means this is a ANSI related issue that InSpec would need to address. ",
      "created_at": "2022-03-21T15:16:41Z",
      "updated_at": "2022-03-21T15:16:41Z"
    },
    {
      "author": "jhoneill",
      "author_association": "NONE",
      "body": "@HerbBoy  Good news :-) , I think they need to make their parsing a bit harder to throw off track. ",
      "created_at": "2022-03-21T19:49:05Z",
      "updated_at": "2022-03-21T19:49:05Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I believe https://github.com/PowerShell/PowerShell/pull/16811 should resolve this",
      "created_at": "2022-03-30T22:02:11Z",
      "updated_at": "2022-03-30T22:02:11Z"
    },
    {
      "author": "jhoneill",
      "author_association": "NONE",
      "body": "@SteveL-MSFT  do we have an ETA on when #16811 will be delivered? The default has not changed back to Host in 7.2.2",
      "created_at": "2022-04-01T10:50:43Z",
      "updated_at": "2022-04-01T10:50:43Z"
    }
  ],
  "created_at": "2022-03-18T03:44:29Z",
  "labels": [
    "Issue-Question",
    "Needs-Triage"
  ],
  "number": 17020,
  "state": "open",
  "title": "PowerShell Core 7.2.1 + Chef InSpec",
  "updated_at": "2022-04-01T10:50:43Z"
}