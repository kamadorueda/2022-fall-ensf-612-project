{
  "_url": "https://github.com/PowerShell/PowerShell/issues/18236",
  "author": "tps800",
  "body": "### Prerequisites\n\n- [X] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\n\n### Steps to reproduce\n\nIf you install PowerShell 7.2.0 or 7.3.0-preview8 side by side with PowerShell 5.1 on Windows 10 or 11 (did not test on Windows Server) the cmdlet `Get-Counter` will not work any more as expected:\r\n\r\nGet-Counter -Counter \"some counter\"\r\n\r\nWill throw an error if used with any Array of String or with a single string within a script. On commandline one single string will work. Within PowerShell 7.2.0 or 7.3.0-preview8 the commandlet works as expected.\r\n\r\nThis is not really an error with PowerShell 7.2.0 or 7.3.0-preview8, but one that shall be fixed. Installing all PowerShell-Versions side by side shall not have any side effects like this on PowerShell 5.1.\r\n\r\n```\r\n$counters = @(\r\n    '\\Logischer Datentr\ufffdger(*)\\Freier Speicherplatz (%)'\r\n    '\\Logischer Datentr\ufffdger(*)\\MB frei'\r\n    '\\Logischer Datentr\ufffdger(*)\\Aktuelle Warteschlangenl\ufffdnge'\r\n    '\\Logischer Datentr\ufffdger(*)\\Zeit (%)'\r\n    '\\Logischer Datentr\ufffdger(*)\\Durchschnittl. Warteschlangenl\ufffdnge des Datentr\ufffdgers'\r\n    '\\Logischer Datentr\ufffdger(*)\\Lesezeit (%)'\r\n    '\\Logischer Datentr\ufffdger(*)\\Durchschnittl. Warteschlangenl\ufffdnge der Datentr\ufffdger-Lesevorg\ufffdnge'\r\n    '\\Logischer Datentr\ufffdger(*)\\Schreibzeit (%)'\r\n    '\\Logischer Datentr\ufffdger(*)\\Durchschnittl. Warteschlangenl\ufffdnge der Datentr\ufffdger-Schreibvorg\ufffdnge'\r\n    '\\Logischer Datentr\ufffdger(*)\\Mittlere Sek./\ufffdbertragung'\r\n    '\\Logischer Datentr\ufffdger(*)\\Mittlere Sek./Lesevorg\ufffdnge'\r\n    '\\Logischer Datentr\ufffdger(*)\\Mittlere Sek./Schreibvorg\ufffdnge'\r\n    '\\Logischer Datentr\ufffdger(*)\\\ufffdbertragungen/s'\r\n    '\\Logischer Datentr\ufffdger(*)\\Lesevorg\ufffdnge/s'\r\n    '\\Logischer Datentr\ufffdger(*)\\Schreibvorg\ufffdnge/s'\r\n    '\\Logischer Datentr\ufffdger(*)\\Bytes/s'\r\n    '\\Logischer Datentr\ufffdger(*)\\Bytes gelesen/s'\r\n    '\\Logischer Datentr\ufffdger(*)\\Bytes geschrieben/s'\r\n    '\\Logischer Datentr\ufffdger(*)\\Mittlere Bytes/\ufffdbertragung'\r\n    '\\Logischer Datentr\ufffdger(*)\\Mittlere Bytes/Lesevorgang'\r\n    '\\Logischer Datentr\ufffdger(*)\\Mittlere Bytes/Schreibvorgang'\r\n    '\\Logischer Datentr\ufffdger(*)\\Leerlaufzeit (%)'\r\n    '\\Logischer Datentr\ufffdger(*)\\Teil-E/A/s'\r\n)\r\n\r\nforeach ($counter in $counters) {\r\n    Get-Counter -Counter \"\\Logischer Datentr\ufffdger(*)\\Freier Speicherplatz (%)\" -MaxSamples 5 | ForEach-Object {\r\n        $_.CounterSamples | ForEach-Object {\r\n            [PSCustomObject]@{\r\n                Timestamp = $_.Timestamp;\r\n                Path = $_.Path;\r\n                Value = $_.CookedValue;\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nThe error remains, removing any other PowerShell-Versions from the system except 5.1. It works as long as you do not install PowerShell 7.2.0 or 7.3.0-preview8 side-by-side with PowerShell 5.1.\n\n### Expected behavior\n\n```console\n`Get-Counter` should work as expected regardless being called from PowerShell 5.1, 7.2.0 or 7.3.0-preview8. Regardless PowerShell 5.1 installed side-by-side with PowerShell 7.2.0 or 7.3.0-preview8 or not.\n```\n\n\n### Actual behavior\n\n```console\n`Get-Counter` will throw an exception if used with any array of strings or a single string variable. It will throw an exception with more than one String after `-Counter` used interactive.\r\nUsed within a script it will throw an exception in any case called within PowerShell 5.1.\r\nCalled from PowerShell 7.2.0 or 7.3.0-preview8 it will work as expected.\n```\n\n\n### Error details\n\n```console\nPowerShell 5.1 installed side-by-side with PowerShell 7.2.0 or 7.3.0-preview8; Running above script with PowerShell 5.1:\r\n> .\\perfcounter.ps1\r\nGet-Counter : Das angegebene Objekt wurde nicht auf dem Computer gefunden.\r\nIn C:\\Users\\sct-muc\\Projects\\PowerShell-Kurs\\perfcounter.ps1:33 Zeichen:5\r\n+     Get-Counter -Counter \"\\Logischer Datentr\u00e4ger(*)\\Freier Speicherp ...\r\n+     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : InvalidResult: (:) [Get-Counter], Exception\r\n    + FullyQualifiedErrorId : CounterApiError,Microsoft.PowerShell.Commands.GetCounterCommand\r\n\r\nGet-Counter : Das angegebene Objekt wurde nicht auf dem Computer gefunden.\r\n\r\nRunning same script with PowerShell 5.1 without having installed PowerShell 7.x side-by-side with PowerShell 5.1:\r\n> .\\perfcounter.ps1\r\n\r\nTimestamp           Path                                                                         Value\r\n---------           ----                                                                         -----\r\n07.10.2022 14:39:26 \\\\bcl2695-sz\\logischer datentr\ufffdger(harddiskvolume1)\\freier speicherplatz (%) 90,54\r\n07.10.2022 14:39:26 \\\\bcl2695-sz\\logischer datentr\ufffdger(c:)\\freier speicherplatz (%)              14,38\r\n07.10.2022 14:39:26 \\\\bcl2695-sz\\logischer datentr\ufffdger(harddiskvolume3)\\freier speicherplatz (%) 99,41\r\n07.10.2022 14:39:26 \\\\bcl2695-sz\\logischer datentr\ufffdger(_total)\\freier speicherplatz (%)          15,29\r\n07.10.2022 14:39:28 \\\\bcl2695-sz\\logischer datentr\ufffdger(harddiskvolume1)\\freier speicherplatz (%) 90,54\r\n[...]\n```\n\n\n### Environment data\n\n```powershell\n> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      5.1.17763.2931\r\nPSEdition                      Desktop\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nBuildVersion                   10.0.17763.2931\r\nCLRVersion                     4.0.30319.42000\r\nWSManStackVersion              3.0\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\n\r\n> $PSversionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.6\r\nPSEdition                      Core\r\nGitCommitId                    7.2.6\r\nOS                             Microsoft Windows 10.0.17763\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\ufffd}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.3.0-preview.8\r\nPSEdition                      Core\r\nGitCommitId                    7.3.0-preview.8\r\nOS                             Microsoft Windows 10.0.17763\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\ufffd}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\n```\n\n\n### Visuals\n\n_No response_",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> The error remains, removing any other PowerShell-Versions from the system except 5.1. It works as long as you do not install PowerShell 7.2.0 or 7.3.0-preview8 side-by-side with PowerShell 5.1.\r\n\r\nI guess PSModulePath env variable is a key here. Compere it before and after installing pwsh.",
      "created_at": "2022-10-07T16:50:19Z",
      "updated_at": "2022-10-07T16:50:19Z"
    },
    {
      "author": "tps800",
      "author_association": "NONE",
      "body": "> > The error remains, removing any other PowerShell-Versions from the system except 5.1. It works as long as you do not install PowerShell 7.2.0 or 7.3.0-preview8 side-by-side with PowerShell 5.1.\r\n> \r\n> I guess PSModulePath env variable is a key here. Compere it before and after installing pwsh.\r\n\r\n```\r\n> $env:PSModulePath -split ';'\r\n%USERPROFILE%\\Documents\\WindowsPowerShell\\Modules\r\nC:\\Program Files\\WindowsPowerShell\\Modules\r\nC:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules\r\nC:\\Program Files (x86)\\Windows Kits\\10\\Microsoft Application Virtualization\\Sequencer\\AppvPkgConverter\r\nC:\\Program Files (x86)\\Windows Kits\\10\\Microsoft Application Virtualization\\Sequencer\\AppvSequencer\r\nC:\\Program Files (x86)\\Windows Kits\\10\\Microsoft Application Virtualization\\\r\nC:\\Program Files (x86)\\AutoIt3\\AutoItX\r\n```\r\nEmpty or not existing are:\r\n```\r\n%USERPROFILE%\\Documents\\WindowsPowerShell\\Modules\r\n```\r\nAfter Installing PowerShell 7.3.0-preview8 nothing changes. $env:PSModulePath is the same before and after.\r\nBut within `C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules` there are changes. May it be if PowerShell 7.3.0-preview8 is installed with admin-rights it overwrites modules provided by both: PowerShell 5.1 and PowerShell 7.3.0-preview8?\r\n",
      "created_at": "2022-10-09T21:30:27Z",
      "updated_at": "2022-10-09T21:30:27Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> After Installing PowerShell 7.3.0-preview8 nothing changes. $env:PSModulePath is the same before and after.\r\n> But within `C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules` there are changes. May it be if PowerShell 7.3.0-preview8 is installed with admin-rights it overwrites modules provided by both: PowerShell 5.1 and PowerShell 7.3.0-preview8?\r\n\r\nPlease share more information what changes you see there.",
      "created_at": "2022-10-10T04:18:26Z",
      "updated_at": "2022-10-10T04:18:26Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "In each of the PS versions, can you provide output of:\r\n\r\n```powershell\r\n(gcm get-counter).module.path\r\n```\r\n\r\nMake sure to run this from a new start of each version of PS and not starting PS within PS.  It looks like 5.1 is somehow picking up the PS7 version?",
      "created_at": "2022-10-10T18:14:54Z",
      "updated_at": "2022-10-10T18:14:54Z"
    },
    {
      "author": "tps800",
      "author_association": "NONE",
      "body": "**Windows PowerShell 5.1:**\r\n`C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules\\Microsoft.PowerShell.Diagnostics\\Microsoft.PowerShell.Diagnostics.psd1`\r\n\r\n```\r\n> .\\perfcnt2.ps1\r\nGet-Counter : Das angegebene Objekt wurde nicht auf dem Computer gefunden.\r\nIn C:\\Users\\sct-muc\\Projects\\PowerShell-Kurs\\perfcnt2.ps1:12 Zeichen:5\r\n+     Get-Counter -Counter \"\\Logischer Datentr\u00c3\u00a4ger(*)\\Freier Speicherp ...\r\n+     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : InvalidResult: (:) [Get-Counter], Exception\r\n    + FullyQualifiedErrorId : CounterApiError,Microsoft.PowerShell.Commands.GetCounterCommand\r\n\r\nGet-Counter : Das angegebene Objekt wurde nicht auf dem Computer gefunden.\r\nIn C:\\Users\\sct-muc\\Projects\\PowerShell-Kurs\\perfcnt2.ps1:12 Zeichen:5\r\n+     Get-Counter -Counter \"\\Logischer Datentr\u00c3\u00a4ger(*)\\Freier Speicherp ...\r\n+     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : InvalidResult: (:) [Get-Counter], Exception\r\n    + FullyQualifiedErrorId : CounterApiError,Microsoft.PowerShell.Commands.GetCounterCommand\r\n```\r\n\r\n**PowerShell 7.2.6:**\r\n`C:\\program files\\powershell\\7\\Modules\\Microsoft.PowerShell.Diagnostics\\Microsoft.PowerShell.Diagnostics.psd1`\r\n\r\n```\r\n> .\\perfcnt2.ps1\r\n\r\nTimestamp           Path                                                                                    Value\r\n---------           ----                                                                                    -----\r\n14.10.2022 09:54:58 \\\\swps7\\logischer datentr\u00e4ger(harddiskvolume1)\\freier speicherplatz (%) 90,5444126074499\r\n14.10.2022 09:54:58 \\\\swps7\\logischer datentr\u00e4ger(c:)\\freier speicherplatz (%)              12,5020292296825\r\n14.10.2022 09:54:58 \\\\swps7\\logischer datentr\u00e4ger(harddiskvolume3)\\freier speicherplatz (%)       99,4140625\r\n14.10.2022 09:54:58 \\\\swps7\\logischer datentr\u00e4ger(_total)\\freier speicherplatz (%)          13,4302672555041\r\n14.10.2022 09:54:59 \\\\swps7\\logischer datentr\u00e4ger(harddiskvolume1)\\freier speicherplatz (%) 90,5444126074499\r\n14.10.2022 09:54:59 \\\\swps7\\logischer datentr\u00e4ger(c:)\\freier speicherplatz (%)              12,5020292296825\r\n14.10.2022 09:54:59 \\\\swps7\\logischer datentr\u00e4ger(harddiskvolume3)\\freier speicherplatz (%)       99,4140625\r\n14.10.2022 09:54:59 \\\\swps7\\logischer datentr\u00e4ger(_total)\\freier speicherplatz (%)          13,4302672555041```\r\n```\r\n\r\n**PowerShell 7.3.0-preview.8:**\r\n`C:\\program files\\powershell\\7-preview\\Modules\\Microsoft.PowerShell.Diagnostics\\Microsoft.PowerShell.Diagnostics.psd1`\r\n\r\n```\r\n> .\\perfcnt2.ps1\r\n\r\nTimestamp           Path                                                                         Value\r\n---------           ----                                                                         -----\r\n14.10.2022 09:55:37 \\\\swps7\\logischer datentr\u00e4ger(harddiskvolume1)\\freier speicherplatz (%) 90,54\r\n14.10.2022 09:55:37 \\\\swps7\\logischer datentr\u00e4ger(c:)\\freier speicherplatz (%)              12,50\r\n14.10.2022 09:55:37 \\\\swps7\\logischer datentr\u00e4ger(harddiskvolume3)\\freier speicherplatz (%) 99,41\r\n14.10.2022 09:55:37 \\\\swps7\\logischer datentr\u00e4ger(_total)\\freier speicherplatz (%)          13,43\r\n14.10.2022 09:55:38 \\\\swps7\\logischer datentr\u00e4ger(harddiskvolume1)\\freier speicherplatz (%) 90,54\r\n14.10.2022 09:55:38 \\\\swps7\\logischer datentr\u00e4ger(c:)\\freier speicherplatz (%)              12,50\r\n14.10.2022 09:55:38 \\\\swps7\\logischer datentr\u00e4ger(harddiskvolume3)\\freier speicherplatz (%) 99,41\r\n14.10.2022 09:55:38 \\\\swps7\\logischer datentr\u00e4ger(_total)\\freier speicherplatz (%)          13,43```\r\n```\r\n\r\n**The same on a system with only PowerShell 5.1 installed:**\r\n`C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules\\Microsoft.PowerShell.Diagnostics\\Microsoft.PowerShell.Diagnostics.psd1`\r\n\r\n```\r\n> .\\perfcnt2.ps1\r\n\r\nTimestamp           Path                                                                                      Value\r\n---------           ----                                                                                      -----\r\n14.10.2022 10:10:07 \\\\sops5\\logischer datentr\u00e4ger(c:)\\freier speicherplatz (%)              19,3412432086929\r\n14.10.2022 10:10:07 \\\\sops5\\logischer datentr\u00e4ger(harddiskvolume5)\\freier speicherplatz (%) 35,1190476190476\r\n14.10.2022 10:10:07 \\\\sops5\\logischer datentr\u00e4ger(e:)\\freier speicherplatz (%)              99,5014339634437\r\n14.10.2022 10:10:07 \\\\sops5\\logischer datentr\u00e4ger(_total)\\freier speicherplatz (%)          92,3084582068004\r\n14.10.2022 10:10:08 \\\\sops5\\logischer datentr\u00e4ger(c:)\\freier speicherplatz (%)              19,3412432086929\r\n14.10.2022 10:10:08 \\\\sops5\\logischer datentr\u00e4ger(harddiskvolume5)\\freier speicherplatz (%) 35,1190476190476\r\n14.10.2022 10:10:08 \\\\sops5\\logischer datentr\u00e4ger(e:)\\freier speicherplatz (%)              99,5014339634437\r\n14.10.2022 10:10:08 \\\\sops5\\logischer datentr\u00e4ger(_total)\\freier speicherplatz (%)          92,3084582068004\r\n```\r\n\r\n\r\n**For all four systems the script called was:**\r\n```\r\n$counters = @(\r\n    '\\Logischer Datentr\u00e4ger(*)\\Freier Speicherplatz (%)'\r\n    '\\Logischer Datentr\u00e4ger(*)\\MB frei'\r\n)\r\n\r\nforeach ($counter in $counters) {\r\n    Get-Counter -Counter \"\\Logischer Datentr\u00e4ger(*)\\Freier Speicherplatz (%)\" -MaxSamples 1 | ForEach-Object {\r\n        $_.CounterSamples | ForEach-Object {\r\n            [PSCustomObject]@{\r\n                Timestamp = $_.Timestamp;\r\n                Path = $_.Path;\r\n                Value = $_.CookedValue;\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n",
      "created_at": "2022-10-14T08:33:16Z",
      "updated_at": "2022-10-14T08:37:21Z"
    }
  ],
  "created_at": "2022-10-07T12:56:35Z",
  "labels": [
    "Needs-Triage"
  ],
  "number": 18236,
  "state": "open",
  "title": "Installing PowerShell 7.2.0 or 7.3.0-preview8 side by side with PowerShell 5.1 may render `Get-Counter` useless in PowerShell 5.1",
  "updated_at": "2022-10-14T08:37:21Z"
}