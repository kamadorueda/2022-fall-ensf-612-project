{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9285",
  "author": "DarwinJS",
  "body": "# Windows PowerShell\r\n\r\nI can't figure out what commit did this, but the OS detection routine in installpsh-amazonlinux.sh has been dramatically simplified from what is still in install-powershell.sh.\r\n\r\nIt is now missing the amazon linux detection routines.\r\n\r\nThe original design allowed for the underlying installers to be called directly - but they still need the full linux detection routine in order validate they are being run on the correct OS.\r\n\r\nMy container builds that install PowerShell are now failing: \r\n\r\nhttps://gitlab.com/DarwinJS/amazon-linux-2-container-with-powershell/-/jobs/189478956\r\nhttps://gitlab.com/DarwinJS/amazon-linux-2-ec2-build-container-with-powershell/-/jobs/189478955\r\n\r\nFor the time being I'm going to switch my build to a known working branch in my own fork of this repo.\r\n\r\nIs there a reason this does not show up in automated testing?\r\n\r\nI don't personally have the time to fix this.\r\n\r\n/cc @TravisEz13 ",
  "closed_at": "2019-10-13T17:11:16Z",
  "comments": [
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "Yup... I am waiting on feedback on two issues in the docker repo before I can add tests for amazon linux.\r\n\r\n\r\nhttps://github.com/PowerShell/PowerShell-Docker/issues/200\r\n\r\nOn this issue, I think we can move these changes in to the sub-image proposed by 200, assuming we go with that solution.\r\nhttps://github.com/PowerShell/PowerShell-Docker/issues/178",
      "created_at": "2019-04-03T17:27:26Z",
      "updated_at": "2019-04-03T17:27:26Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "I have a PR adding CI for this and the script is working fine.  At least calling it through `install-powershell.sh`\r\nhttps://github.com/PowerShell/PowerShell/pull/9314",
      "created_at": "2019-04-07T18:39:18Z",
      "updated_at": "2019-04-07T18:39:18Z"
    },
    {
      "author": "DarwinJS",
      "author_association": "CONTRIBUTOR",
      "body": "As I mentioned, the original intent was that if you knew your distro, you wouldn't need two scripts to get the job done.\r\n\r\nIt looks like the sub-installers are now dot sourced into the overall script - which means the distro detection is passing through.\r\n\r\nBut then this big block of now non-working (for Amazon Linux) distro detection in the sub-install script is unnecessary if the sub-install is going to always assume it is called from the overall: https://github.com/PowerShell/PowerShell/blob/master/tools/installpsh-amazonlinux.sh#L53-L83\r\n\r\nI liked it the original way because for those of us who are automating a known distro we don't need two internet downloads - or any actually.  And then these sub-installs can self-validate that you are running them on the proper platform.\r\n",
      "created_at": "2019-04-07T21:38:02Z",
      "updated_at": "2019-04-07T21:38:02Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "This is the only change not by you, although you reviewed the change:\r\nhttps://github.com/PowerShell/PowerShell/pull/9071\r\n\r\nI'm adding a CI job for your scenario to my PR.",
      "created_at": "2019-04-07T22:12:22Z",
      "updated_at": "2019-04-07T22:12:22Z"
    }
  ],
  "created_at": "2019-04-03T11:20:53Z",
  "number": 9285,
  "state": "closed",
  "title": "installpsh-amazonlinux.sh not detecting amazon linux",
  "updated_at": "2019-10-13T17:11:36Z"
}