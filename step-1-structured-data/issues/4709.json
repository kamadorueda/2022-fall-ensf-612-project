{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4709",
  "author": "daxian-dbw",
  "body": "Fix #4688\r\n\r\nWhen dotting a script cmdlet, the locals of automatic variables from the `PSScriptCmdlet` is not set up in the current scope before parameter binding. The fix is to push the locals in `CommandProcessor.OnSetCurrentScope` and pop them in `CommandProcessor.OnRestorePreviousScope`, which will be called from `SetCurrentScopeToExecutionScope` and `RestorePreviousScope` respectively.\r\n\r\nSummary of changes:\r\n1. When a new local scope is used, currently we set the locals for `CommandProcessor` right before parameter binding (in `BindCommandLineParametersNoValidation`); we set the locals for `ScriptCommandProcessor` in `Prepare`. I moved both to the constructor, right after the new scope is created so that the code is more consistent.\r\n\r\n2. In `CmdletParameterBinderController.cs`, we set up the `PSBoundParameters` and `MyInvocation` variables in `HandleCommandLineDynamicParameters` again, which I think is unnecessary because this method is only called from `BindCommandLineParametersNoValidation`, where the setup is done for the first time.\r\n\r\n3. Currently, the locals will be set for dotted script cmdlet in `EnterScope()` and `ExitScope()`. Now, that logic is moved to `OnSetCurrentScope` and `OnRestorePreviousScope` of `CommandProcessor`. This not only makes sure that locals are set before parameter binding, but also is consistent with the `ScriptCommandProcessor`.",
  "closed_at": "2017-09-06T17:25:34Z",
  "comments": [
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@vors Thanks!\r\n@lzybkr can you please take a look when you have time?",
      "created_at": "2017-09-02T00:46:25Z",
      "updated_at": "2017-09-02T00:46:25Z"
    }
  ],
  "created_at": "2017-08-30T20:37:07Z",
  "number": 4709,
  "state": "closed",
  "title": "Push locals of automatic variables to 'DottedScopes' when dotting script cmdlets",
  "updated_at": "2017-09-06T17:25:38Z"
}