{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15653",
  "author": "daxian-dbw",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nFix #15651\r\n\r\nPowerShell [automatically adds 'Out-Default -Transcript' to the end of pipeline](https://github.com/PowerShell/PowerShell/blob/1f2dc26ab45d07ac0cd90b6a76af946d088d5243/src/System.Management.Automation/engine/hostifaces/LocalPipeline.cs#L325-L335) when it's transcribing and invoked via API. When [`-Transcript`](https://github.com/PowerShell/PowerShell/blob/1f2dc26ab45d07ac0cd90b6a76af946d088d5243/src/System.Management.Automation/FormatAndOutput/out-console/OutConsole.cs#L46-L53) is specified, objects passed through are transcribed but [are not passed ahead to the host](https://github.com/PowerShell/PowerShell/blob/1f2dc26ab45d07ac0cd90b6a76af946d088d5243/src/System.Management.Automation/FormatAndOutput/out-console/ConsoleLineOutput.cs#L337-L343).\r\n\r\nThe PowerShell sub-kernel actually already adds `Out-Default` to pass output to host, however, [we have to use `Out-Default2` as the name](https://github.com/dotnet/interactive/blob/09d6307ddaea52ea39c41abfa980fd3dce9a25d6/src/Microsoft.DotNet.Interactive.PowerShell/PowerShellKernel.cs#L63-L68) due to a limitation in the native command processor. Since we are using `Out-Default2`, PowerShell believes it doesn't have the `Out-Default` command at the end, and thus adds `Out-Default -Transcript` automatically, which prevents sending anything to the host and hence you don't see output from PowerShell sub-kernel when the transcription is turned on.\r\n\r\nThis needs to be fixed in the `InvokeHelper()` method, to not just check for the `Out-Default` name, but also check whether the `ImplementingType` is `typeof(OutDefaultCommand)`.\r\n\r\nThis PR also refactors the code a bit, to calculate `needToAddOutDefault` only if PowerShell is transcribing.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n",
  "closed_at": "2021-06-28T18:26:15Z",
  "comments": [
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "BackPort-7.1.x-Consider context: this issue causes the PowerShell sub-kernel in .NET interactive to not work with `Start-Transcript`. Once the transcribing starts, a user of PowerShell notebook won't be able to see any output when running commands in the notebook. The .NET interactive is currently using PowerShell 7.1.3 NuGet packages.",
      "created_at": "2021-06-28T15:35:47Z",
      "updated_at": "2021-06-28T15:36:15Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@adityapatwardhan Can you please review and see if we can merge this one?",
      "created_at": "2021-06-28T15:37:06Z",
      "updated_at": "2021-06-28T15:37:06Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.2.0-preview.8` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.2.0-preview.8)\n",
      "created_at": "2021-07-22T21:42:01Z",
      "updated_at": "2021-07-22T21:42:01Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.1.5` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.1.5)\n",
      "created_at": "2021-10-14T18:21:43Z",
      "updated_at": "2021-10-14T18:21:43Z"
    }
  ],
  "created_at": "2021-06-23T21:09:18Z",
  "number": 15653,
  "state": "closed",
  "title": "Test if a command is 'Out-Default' more thoroughly",
  "updated_at": "2021-10-14T18:21:43Z"
}