{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6135",
  "author": "mallochine",
  "body": "This function is not available on Centos 7: Get-PSSnapin",
  "closed_at": "2018-02-08T06:37:15Z",
  "comments": [
    {
      "author": "stknohg",
      "author_association": "CONTRIBUTOR",
      "body": "PowerShell Core 6.0 no longer supports snap-ins.  \r\nCmdlets related to snap-ins(`Add-PSSnapin`, `Get-PSSnapin`, `Remove-PSSnapin`) don't exist.\r\n\r\nSee [breaking changes](https://github.com/PowerShell/PowerShell/blob/master/docs/BREAKINGCHANGES.md#custom-snap-ins) :\r\n\r\n> Custom snap-ins\r\n>  \r\n> PowerShell snap-ins are a predecessor to PowerShell modules that do not have widespread adoption in the PowerShell community.\r\n>  \r\n> Due to the complexity of supporting snap-ins and their lack of usage in the community, we no longer support custom snap-ins in PowerShell Core.\r\n\r\nIncidentally, maybe related to #2122.",
      "created_at": "2018-02-08T04:48:56Z",
      "updated_at": "2018-02-08T04:48:56Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@stknohg is correct, we removed custom PSSnapin support in PSCore6",
      "created_at": "2018-02-08T06:37:15Z",
      "updated_at": "2018-02-08T06:37:15Z"
    },
    {
      "author": "mallochine",
      "author_association": "NONE",
      "body": "what is the easiest way for users to install cmdlets that my company may write as part of an SDK?",
      "created_at": "2018-02-08T16:09:20Z",
      "updated_at": "2018-02-08T16:09:20Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@mallochine best practice is to wrap the cmdlets as a module and then you can just xcopy the module folder to <user data directory>\\powershell\\modules",
      "created_at": "2018-02-08T17:29:45Z",
      "updated_at": "2018-02-08T17:29:45Z"
    },
    {
      "author": "mallochine",
      "author_association": "NONE",
      "body": "is this something like where I provide a compiled DLL and my users can just download the DLL to that directory?\r\n\r\nWhere is the '\\powershell\\modules' directory on Linux?",
      "created_at": "2018-02-08T18:56:20Z",
      "updated_at": "2018-02-08T18:56:20Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@mallochine if it's something that can be public, the easiest way is to publish it to powershellgallery.com and then your users can just do `install-module <foo>` and it'll put it in the right place regardless of platform.\r\n\r\nUnfortunately, we never completed the work to support leaving modules as a .zip archive so modules have to be a folder.  For a compiled assembly, it's really just having the folder with your .dll and a .psd1 module manifest file. \r\n\r\nOn Linux, it should be ~/.local/share/powershell/modules",
      "created_at": "2018-02-08T19:20:30Z",
      "updated_at": "2018-02-08T19:20:30Z"
    }
  ],
  "created_at": "2018-02-08T02:57:49Z",
  "labels": [
    "Resolution-Answered"
  ],
  "number": 6135,
  "state": "closed",
  "title": "where is Get-PSSnapin?",
  "updated_at": "2018-02-08T19:20:30Z"
}