{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15057",
  "author": "mklement0",
  "body": "## Summary of the new feature/enhancement\r\n\r\n* The `-Option` parameter of `New-Variable` and `Set-Variable` is of type [`System.Management.Automation.ScopedItemOptions`](https://docs.microsoft.com/en-US/dotnet/api/System.Management.Automation.ScopedItemOptions), which is an `enum` with the `Flags` attribute: that is, *multiple* values (bit-ORed flags) can be assigned.\r\n\r\n* Because the parameter type is a _scalar_, however, it isn't  obvious how to pass _multiple_ options at the same time - even _though it is directly supported_ (thanks, @SeeminglyScience).\r\n\r\n```powershell\r\n# Works, but isn't obvious from looking at the syntax diagram.\r\nNew-Variable foo bar -Option ReadOnly, AllScope\r\n```\r\n\r\n\r\n---\r\n\r\nWritten as of PowerShell Core 7.2.0-preview.4.\r\n",
  "closed_at": "2021-03-17T18:45:14Z",
  "comments": [
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "> A better way to support this - which shouldn't break existing code - would be to use accept an _array_ of such values:\r\n> \r\n> ```powershell\r\n> # WISHFUL THINKING\r\n> New-Variable foo bar -Option ReadOnly, AllScope\r\n> ```\r\n\r\nDid you try that? Seems to work for me:\r\n\r\n```powershell\r\nNew-Variable foo bar -Option ReadOnly, AllScope\r\n(Get-Variable foo).Options\r\n# ReadOnly, AllScope\r\n```",
      "created_at": "2021-03-17T18:16:54Z",
      "updated_at": "2021-03-17T18:16:54Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@SeeminglyScience, well I'll be...\r\n\r\nThanks, trying that hadn't even _occurred_ to me, given the type of the parameter.\r\n\r\nBut now I see that casting an array of strings directly to an `enum` in PowerShell is directly supported:\r\n\r\n```powershell\r\nPS> [System.Management.Automation.ScopedItemOptions] ('ReadOnly', 'AllScope')\r\nReadOnly, AllScope\r\n```\r\n\r\nThat is, `[System.Management.Automation.ScopedItemOptions] ('ReadOnly', 'AllScope')` is equivalent to `[System.Management.Automation.ScopedItemOptions] 'ReadOnly, AllScope'` and `[System.Management.Automation.ScopedItemOptions]::ReadOnly -bor  [System.Management.Automation.ScopedItemOptions]::AllScope`\r\n\r\nSo many ways to herd enums. TIL.\r\n\r\nStill, given how non-obvious this us from looking at the syntax diagram and without knowing the intricacies of these conversions, we should still consider making the parameter array-valued.\r\n",
      "created_at": "2021-03-17T18:29:28Z",
      "updated_at": "2021-03-17T18:29:28Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@SeeminglyScience, I'm closing this for now, because I think the issue here is a more fundamental UI / help-system issue that I have to get a better handle on first:\r\n\r\n* Currently, nothing in the syntax diagrams indicates when a parameter happens to be a `Flags` enum and that _combinations_ are therefore automatically accepted.\r\n\r\n* `Get-ChildItem`, by using a _plural_ in its `-Attributes` parameter name, helps this a little.\r\n\r\nA simple solution would be to establish a convention to consistently use _plurals_ in parameter names that are `Flags`-enum-typed.\r\n\r\nIn the case at hand, an `-Option` could be to rename to `-Options` without breaking anyone.\r\n\r\nSeparately/additionally, syntax diagrams, when they show the individual enumeration values with `Get-Help`, could indicate `Flag` enums, along the lines of the following (borrowing metachar. `+` from regexes):\r\n\r\n```\r\n... [-Options {None | ReadOnly | Constant | Private | AllScope | Unspecified}+]\r\n```\r\n\r\n\r\n",
      "created_at": "2021-03-17T18:45:13Z",
      "updated_at": "2021-03-17T18:47:04Z"
    }
  ],
  "created_at": "2021-03-17T18:11:42Z",
  "labels": [
    "Issue-Enhancement",
    "Needs-Triage"
  ],
  "number": 15057,
  "state": "closed",
  "title": "New-Variable and Set-Variable: The -Option parameter should be array-valued to better suggest that *combinations* of variable options are possible",
  "updated_at": "2021-03-17T18:47:04Z"
}