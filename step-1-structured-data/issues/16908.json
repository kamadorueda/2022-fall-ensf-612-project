{
  "_url": "https://github.com/PowerShell/PowerShell/issues/16908",
  "author": "wordeater",
  "body": "### Prerequisites\n\n- [X] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\n\n### Steps to reproduce\n\nThe Invoke-Webrequest and Invoke-RestMethod cmdlets are generating an error when I try to use them through our web proxy.\r\nIf I bypass the proxy completely, there is no error message.\r\nThe error happens in both Windows 10 20H2 and Windows Server 2019 1809, which are the two environments I have available.\r\nI also have PowerShell Core 7.2.1 on a Linux system, but it does not go through the proxy and does not get the error.\r\nPowerShell 5.1 does not get the error. In fact, I am running scripts with PowerShell 5.1 instead of PowerShell Core 7.2.1 because it does not get the error.\r\nThe steps to reproduce are simple in my environment.\r\nRun PowerShell Core.\r\nPS D:\\Tools\\Code\\dev> Invoke-WebRequest https://www.google.com\r\nInvoke-WebRequest: The token supplied to the function is invalid\r\n\r\nI've rebooted both systems on which I test and that did not resolve the issue.\r\nI am able to get to the Internet using Chrome, Edge, and Firefox on these systems.\r\nI am able to get to the Internet using PowerShell 5.1 on these systems.\r\nI use this to pull my proxy credentials into PowerShell 5.1 and PowerShell Core 7.2.1.\r\n(New-Object System.Net.WebClient).Proxy.Credentials = [System.Net.CredentialCache]::DefaultNetworkCredentials\r\n\r\nA packet capture and the proxy logs show a successful NTLM authentication from PowerShell and then nothing else after that.\r\nThe proxy is a McAfee Web Gateway.\n\n### Expected behavior\n\n```console\nPS D:\\tools\\code\\dev> Invoke-WebRequest https://www.google.com\r\n\r\n\r\nStatusCode        : 200\r\nStatusDescription : OK\r\nContent           : <!doctype html><html itemscope=\"\" itemtype=\"http://schema.org/WebPage\" lang=\"en\"><head><meta content=\"Search the world's information, including webpages, images, videos and more. Google has many speci...\r\nRawContent        : HTTP/1.1 200 OK\r\n                    Vary: Accept-Encoding\r\n                    Alt-Svc: h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000...\r\nForms             : {f}\r\nHeaders           : {[Vary, Accept-Encoding], [Alt-Svc, h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"],\r\n                    [Connection, Keep-Alive], [Date, Wed, 23 Feb 2022 15:30:20 GMT]...}\r\nImages            : {@{innerHTML=; innerText=; outerHTML=<IMG id=hplogo style=\"PADDING-BOTTOM: 14px; PADDING-TOP: 28px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px\" alt=Google\r\n                    src=\"/images/branding/googlelogo/1x/googlelogo_white_background_color_272x92dp.png\" width=272 height=92>; outerText=; tagName=IMG; id=hplogo; style=PADDING-BOTTOM: 14px; PADDING-TOP: 28px; PADDING-LEFT: 0px;\r\n                    PADDING-RIGHT: 0px; alt=Google; src=/images/branding/googlelogo/1x/googlelogo_white_background_color_272x92dp.png; width=272; height=92}}\r\nInputFields       : {@{innerHTML=; innerText=; outerHTML=<INPUT type=hidden value=en name=hl>; outerText=; tagName=INPUT; type=hidden; value=en; name=hl}, @{innerHTML=; innerText=; outerHTML=<INPUT type=hidden value=hp\r\n                    name=source>; outerText=; tagName=INPUT; type=hidden; value=hp; name=source}, @{innerHTML=; innerText=; outerHTML=<INPUT type=hidden name=biw>; outerText=; tagName=INPUT; type=hidden; name=biw}, @{innerHTML=;\r\n                    innerText=; outerHTML=<INPUT type=hidden name=bih>; outerText=; tagName=INPUT; type=hidden; name=bih}...}\r\nLinks             : {@{innerHTML=<SPAN class=gbtb2></SPAN><SPAN class=gbts>Search</SPAN>; innerText=Search; outerHTML=<A id=gb_1 class=\"gbzt gbz0l gbp1\" href=\"https://www.google.com/webhp?tab=ww\"><SPAN class=gbtb2></SPAN><SPAN\r\n                    class=gbts>Search</SPAN></A>; outerText=Search; tagName=A; id=gb_1; class=gbzt gbz0l gbp1; href=https://www.google.com/webhp?tab=ww}, @{innerHTML=<SPAN class=gbtb2></SPAN><SPAN class=gbts>Images</SPAN>;\r\n                    innerText=Images; outerHTML=<A id=gb_2 class=gbzt href=\"https://www.google.com/imghp?hl=en&amp;tab=wi\"><SPAN class=gbtb2></SPAN><SPAN class=gbts>Images</SPAN></A>; outerText=Images; tagName=A; id=gb_2;\r\n                    class=gbzt; href=https://www.google.com/imghp?hl=en&amp;tab=wi}, @{innerHTML=<SPAN class=gbtb2></SPAN><SPAN class=gbts>Maps</SPAN>; innerText=Maps; outerHTML=<A id=gb_8 class=gbzt\r\n                    href=\"https://maps.google.com/maps?hl=en&amp;tab=wl\"><SPAN class=gbtb2></SPAN><SPAN class=gbts>Maps</SPAN></A>; outerText=Maps; tagName=A; id=gb_8; class=gbzt;\r\n                    href=https://maps.google.com/maps?hl=en&amp;tab=wl}, @{innerHTML=<SPAN class=gbtb2></SPAN><SPAN class=gbts>Play</SPAN>; innerText=Play; outerHTML=<A id=gb_78 class=gbzt\r\n                    href=\"https://play.google.com/?hl=en&amp;tab=w8\"><SPAN class=gbtb2></SPAN><SPAN class=gbts>Play</SPAN></A>; outerText=Play; tagName=A; id=gb_78; class=gbzt; href=https://play.google.com/?hl=en&amp;tab=w8}...}\r\nParsedHtml        : System.__ComObject\r\nRawContentLength  : 53342\n```\n\n\n### Actual behavior\n\n```console\nPS D:\\Tools\\Code\\dev> Invoke-WebRequest https://www.google.com\r\nInvoke-WebRequest: The token supplied to the function is invalid\n```\n\n\n### Error details\n\n```console\nException             :\r\n    Type            : System.ComponentModel.Win32Exception\r\n    NativeErrorCode : -2146893048\r\n    ErrorCode       : -2147467259\r\n    TargetSite      :\r\n        Name          : GetOutgoingBlob\r\n        DeclaringType : System.Net.NTAuthentication, System.Net.Http, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\n        MemberType    : Method\r\n        Module        : System.Net.Http.dll\r\n    Message         : The token supplied to the function is invalid\r\n    Source          : System.Net.Http\r\n    HResult         : -2147467259\r\n    StackTrace      :\r\n   at System.Net.NTAuthentication.GetOutgoingBlob(Byte[] incomingBlob, Boolean throwOnError, SecurityStatusPal& statusCode)\r\n   at System.Net.NTAuthentication.GetOutgoingBlob(String incomingBlob)\r\n   at System.Net.Http.AuthenticationHelper.SendWithNtAuthAsync(HttpRequestMessage request, Uri authUri, Boolean async, ICredentials credentials, Boolean isProxyAuth, HttpConnection connection, HttpConnectionPool\r\nconnectionPool, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.AuthenticationHelper.SendWithAuthAsync(HttpRequestMessage request, Uri authUri, Boolean async, ICredentials credentials, Boolean preAuthenticate, Boolean isProxyAuth, Boolean doRequestAuth,\r\nHttpConnectionPool pool, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.EstablishProxyTunnelAsync(Boolean async, HttpRequestHeaders headers, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(HttpRequestMessage request)\r\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPoolManager.SendAsyncMultiProxy(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, MultiProxy multiProxy, Uri firstProxy, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource\r\npendingRequestsCts, CancellationToken originalCancellationToken)\r\n   at Microsoft.PowerShell.Commands.WebRequestPSCmdlet.GetResponse(HttpClient client, HttpRequestMessage request, Boolean keepAuthorization)\r\n   at Microsoft.PowerShell.Commands.WebRequestPSCmdlet.ProcessRecord()\r\n   at System.Management.Automation.CommandProcessor.ProcessRecord()\r\nCategoryInfo          : NotSpecified: (:) [Invoke-WebRequest], Win32Exception\r\nFullyQualifiedErrorId : System.ComponentModel.Win32Exception,Microsoft.PowerShell.Commands.InvokeWebRequestCommand\r\nInvocationInfo        :\r\n    MyCommand        : Invoke-WebRequest\r\n    ScriptLineNumber : 1\r\n    OffsetInLine     : 1\r\n    HistoryId        : 12\r\n    Line             : Invoke-WebRequest https://www.google.com\r\n    PositionMessage  : At line:1 char:1\r\n                       + Invoke-WebRequest https://www.google.com\r\n                       + ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    InvocationName   : Invoke-WebRequest\r\n    CommandOrigin    : Internal\r\nScriptStackTrace      : at <ScriptBlock>, <No file>: line 1\n```\n\n\n### Environment data\n\n```powershell\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.1\r\nPSEdition                      Core\r\nGitCommitId                    7.2.1\r\nOS                             Microsoft Windows 10.0.17763\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\n```\n\n\n### Visuals\n\n_No response_",
  "closed_at": "2022-02-26T00:00:41Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> Invoke-WebRequest: The token supplied to the function is invalid\r\n\r\nIt is not PowerShell error. It comes from underlying OS and says the OS has a cryptographic algorithm disabled.\r\nSee https://stackoverflow.com/questions/40939031/tls-1-2-the-token-supplied-to-the-function-is-invalid\n\n<blockquote><img src=\"https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded\" width=\"48\" align=\"right\"><div>Stack Overflow</div><div><strong><a href=\"https://stackoverflow.com/questions/40939031/tls-1-2-the-token-supplied-to-the-function-is-invalid\">TLS 1.2 - The token supplied to the function is invalid</a></strong></div><div>I have this strange problem, SslStream.AuthenticateAsClient() throws following exception:\n\nSystem.Security.Authentication.AuthenticationException : A call to SSPI failed, see inner exception.\n  ---...</div></blockquote>",
      "created_at": "2022-02-23T18:32:51Z",
      "updated_at": "2022-02-23T18:32:54Z"
    },
    {
      "author": "wordeater",
      "author_association": "NONE",
      "body": "I have looked at that article previously, as part of my earlier troubelshooting.\r\nIf that is the case, why does it work on the same system with PowerShell 5.1 but fail with PowerShell 7.2.1?\r\nI also created a test script that iterated through setting\r\n`$ProtocolList = @( 'SystemDefault'; 'Ssl3'; 'Tls'; 'Tls11'; 'Tls12'; 'Tls13' ); $ProtocolList | Foreach-Object { $protocol = $_; [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::($protocol); Invoke-WebRequest -Uri \"https://www.google.com\" }`\r\nAnd it failed for every protocol with the same error. It got a different error with SystemDefault because it didn't understand that protocol, but the rest all say \"The token supplied to the function in invalid\"\r\nThe cryptographic protocols enabled in the registry are\r\n`RSA/SHA256\r\nRSA/SHA384\r\nRSA/SHA1\r\nECDSA/SHA256\r\nECDSA/SHA384\r\nECDSA/SHA1\r\nDSA/SHA1\r\nRSA/SHA512\r\nECDSA/SHA512`\r\nWhat is the best way to get a better error?\r\nWould that be a packet capture and study the SSL logs or can PowerShell provide any detailed logging on that aspect of the problem?",
      "created_at": "2022-02-24T15:40:00Z",
      "updated_at": "2022-02-24T15:40:00Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "You can use Wireshark (or another sniffer) to troubleshot TLS negotiations\r\nhttps://kb.vmware.com/s/article/2960967\n\n<blockquote><div><strong><a href=\"https://kb.vmware.com/s/article/2960967\">Access Denied</a></strong></div></blockquote>",
      "created_at": "2022-02-24T18:32:40Z",
      "updated_at": "2022-02-24T18:32:42Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2022-02-26T00:00:40Z",
      "updated_at": "2022-02-26T00:00:40Z"
    }
  ],
  "created_at": "2022-02-23T15:47:14Z",
  "labels": [
    "Issue-Question",
    "Resolution-Answered",
    "Needs-Triage"
  ],
  "number": 16908,
  "state": "closed",
  "title": "Internet Access Behind a proxy fails with \"The token supplied to the function is invalid\"",
  "updated_at": "2022-02-26T00:00:41Z"
}