{
  "_url": "https://github.com/PowerShell/PowerShell/issues/14864",
  "author": "LeeHolmes",
  "body": "Engine logging is not enabled \u2013 this is a security issue for some (detecting PowerShell being hosted in other processes), although the primary industry use is detecting somebody loading Powershell v2 (which isn't really pertinent in PowerShell).\r\n\r\nHere is where it's disabled: https://github.com/PowerShell/PowerShell/blob/0d1ea73e599021c9ead87542646f7975bc04e5b9/src/System.Management.Automation/logging/MshLog.cs#L137\r\n\r\nThis isn\u2019t a critical security issue, but a loss of visibility for some. ",
  "closed_at": "2022-03-19T07:04:16Z",
  "comments": [
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "The ETW engine logging has been enabled for quite some time. It's the Event Log provider that is not enabled yet, but I wonder if the event log provider is still needed.\r\n\r\nPowerShell Core registers the event provider manifest for its ETW logging, which is available in Event Viewer. Also, according to the comments in `EventLogLogProvider.cs`, it's only for the scenarios where PowerShell is running in early windows releases from 2000 to 2003.\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/4711eb570e45ffd161ff50fc7d474816875abc99/src/System.Management.Automation/logging/eventlog/EventLogLogProvider.cs#L16-L19\r\n\r\nMark this issue to be reviewed by committee, to see if the event log provider should just be deleted.",
      "created_at": "2022-03-04T22:52:54Z",
      "updated_at": "2022-03-04T22:52:54Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "In case someone wonder what this event log provider is, here is some information about it in Windows PowerShell:\r\n\r\nIt's the \"Windows PowerShell\" channel that can be found right under _\"Applications and Services Logs\"_ in Event Viewer\r\n\r\n![image](https://user-images.githubusercontent.com/127450/156853261-28accf10-7cb9-4ead-bc04-e9bd0bf6cfcd.png)\r\n\r\n\r\nAs a comparison, the Windows PowerShell ETW logging provider can be found at _\"Applications and Services Logs/Microsoft/Windows/PowerShell\"_, and the PowerShell Core ETW logging provider can be found at _\"Applications and Services Logs/PowerShellCore\"_",
      "created_at": "2022-03-04T22:59:14Z",
      "updated_at": "2022-03-04T22:59:14Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Let's have WG-Security review this first to see if there's any security implication.  If this is just legacy logging particularly on legacy Windows, the Committee would rely on WG-Engine's evaluation if this code should just be removed as Windows Server 2003 is out of support.",
      "created_at": "2022-03-09T17:19:30Z",
      "updated_at": "2022-03-09T17:19:30Z"
    },
    {
      "author": "LeeHolmes",
      "author_association": "CONTRIBUTOR",
      "body": "This is the security context: https://www.leeholmes.com/detecting-and-preventing-powershell-downgrade-attacks as well as folks trying to detect WinWord / Excel spawning PowerShell.\r\n\r\nThis log channel itself doesn't matter, but today those engine events only get generated when this code is not commented out. We could move these events to the ETW log if we wanted.\n\n<blockquote><img src=\"/favicon.ico\" width=\"48\" align=\"right\"><div><strong><a href=\"https://www.leeholmes.com/detecting-and-preventing-powershell-downgrade-attacks\">Lee Holmes | Detecting and Preventing PowerShell Downgrade Attacks</a></strong></div><div>Precision Computing - Software Design and Development</div></blockquote>",
      "created_at": "2022-03-09T22:43:53Z",
      "updated_at": "2022-03-09T22:43:54Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@LeeHolmes Thanks for sharing the context!\r\n`pwsh` cannot start a downgrade version of PowerShell, so I guess the \"downgrade attacks\" is no longer a concern to `pwsh`.\r\nCan you share more details about the \"detecting WinWord / Excel spawning PowerShell\" scenario?",
      "created_at": "2022-03-10T00:50:12Z",
      "updated_at": "2022-03-10T00:50:12Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "@WG-Security  We agree that PowerShell Core no longer supports running down level PowerShell (v2.0) directly or via remoting, and so this is not a security issue.",
      "created_at": "2022-03-14T20:49:14Z",
      "updated_at": "2022-03-14T20:49:14Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Thanks for the review @PaulHigin.\r\nMark for committee to review again, to see if the event log provider should just be deleted.",
      "created_at": "2022-03-14T21:58:13Z",
      "updated_at": "2022-03-14T21:58:13Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee discussed this, we agree this is legacy and should be removed and should not create any compat issue.",
      "created_at": "2022-03-16T22:30:39Z",
      "updated_at": "2022-03-16T22:30:39Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:This issue was addressed in #17027, which has now been successfully released as `v7.3.0-preview.4`.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.3.0-preview.4)\n",
      "created_at": "2022-05-23T16:20:41Z",
      "updated_at": "2022-05-23T16:20:41Z"
    }
  ],
  "created_at": "2021-02-20T19:38:05Z",
  "number": 14864,
  "state": "closed",
  "title": "Engine Logging is not enabled",
  "updated_at": "2022-05-23T16:20:41Z"
}