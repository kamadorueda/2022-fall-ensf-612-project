{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4528",
  "author": "mirichmo",
  "body": "We have internally been referring to this as the \"Nano Server Scenario\" aka headless, remote-only remoting activation. The idea is that we need a way to register a non-running instance of PowerShell Core with WinRM. In Nano Server, you can create a remote session (`New-PSSession`)to the instance of Windows PowerShell running on the system. Once in that session (`Enter-PSSession`), you can unzip PowerShell Core on Nano Server to make it available for use. The only way to register the new instance of PowerShell Core as a WinRM endpoint is to run `Install-PowerShellRemoting.ps1` from within the current Windows PowerShell remote session.\r\n\r\nEnable-PSRemoting works to register the running instance of PowerShell Core with WinRM, but the script `Install-PowerShellRemoting.ps1` is the only solution to this problem. We should consider building that functionality into a new cmdlet or an existing cmdlet to make it more permanent.\r\n\r\nEnvironment data\r\n----------------\r\nWindows\r\nBeta.5\r\n",
  "closed_at": "2018-06-20T20:13:35Z",
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Today `Install-PowerShellRemoting.ps1` and `Enable-PSRemoting` overlap and create PSSessionConfigurations with slightly different names (PowerShell.v6.0.0 vs powershell.6.0.0).  We remove `Install-PowerShellRemoting.ps1` and add support for `-PowerShellHome` to `Enable-PSRemoting` and standardize on the configuration name (I prefer the latter myself).",
      "created_at": "2018-01-10T18:17:14Z",
      "updated_at": "2018-01-10T18:17:14Z"
    },
    {
      "author": "mirichmo",
      "author_association": "MEMBER",
      "body": "It was my original intent that the script and cmdlet should produce the same configuration name, so I consider divergence a bug. I prefer it without the \"v\" as well.",
      "created_at": "2018-01-10T19:35:38Z",
      "updated_at": "2018-01-10T19:36:15Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "For this issue, it seems we have a couple of minor things:\r\n\r\n1. Add support for `-PowerShellHome` to `Enable-PSRemoting`, however, this makes it a bit more complicated to run on Windows IoT where you initially only have Windows PowerShell Core which won't have the updated `Enable-PSRemoting`.\r\n2. Fix `Enable-PSRemoting` endpoint name to not contain `v`",
      "created_at": "2018-01-31T06:04:51Z",
      "updated_at": "2018-01-31T06:04:51Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I think what we have is sufficient, so closing this item.",
      "created_at": "2018-06-20T20:13:35Z",
      "updated_at": "2018-06-20T20:13:35Z"
    }
  ],
  "created_at": "2017-08-08T16:55:13Z",
  "number": 4528,
  "state": "closed",
  "title": "Consistent way to enable PSRemoting",
  "updated_at": "2018-06-29T15:07:48Z"
}