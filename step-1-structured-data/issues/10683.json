{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10683",
  "author": "mklement0",
  "body": "See also (the inverse problem): https://github.com/PowerShell/PowerShell/issues/18038\r\n\r\nWhen calling external programs (native programs) on Unix-like platforms, wildcard patterns that you want automatic globbing applied to (as in Bash, for instance) must be _unquoted_, i.e. they must neither be enclosed in single quotes nor in double quotes.\r\n\r\nTherefore, if you want globbing to be applied to a wildcard pattern that has spaces, for instance, you need to _individually_ escape the space, namely as `` `\u00a0``\r\n\r\nHowever, the automatic globbing mechanism currently doesn't recognize that and doesn't expand such patterns.\r\n\r\n# Steps to reproduce\r\n\r\nOn **Linux** (native globbing is currently fundamentally broken on macOS, and isn't applied on Windows)\r\n\r\n```powershell\r\nPush-Location temp:/\r\ntouch 'a b.txt'\r\n\r\n/bin/echo a` * | Should -Be 'a b.txt'\r\n\r\nRemove-Item 'a b.txt'\r\nPop-Location\r\n```\r\n\r\n# Expected behavior\r\n\r\nThe test should succeed.\r\n\r\n# Actual behavior\r\n\r\nThe test fails, because the pattern is not expanded (`'a *'` is echoed).\r\n\r\n# Environment data\r\n\r\n```none\r\nPowerShell Core v7.0.0-preview.3 \r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Is there a workaround?",
      "created_at": "2019-10-07T11:50:38Z",
      "updated_at": "2019-10-07T11:50:38Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov: Not in terms of native globbing, as far as I can tell, but you can do the following:\r\n\r\n```powershell\r\n /bin/echo (Get-Item 'a *').Name\r\n```",
      "created_at": "2019-10-07T13:25:06Z",
      "updated_at": "2019-10-07T13:25:06Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "It seems a dup #10675.",
      "created_at": "2019-10-07T17:09:39Z",
      "updated_at": "2019-10-07T17:09:39Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "It's not a duplicate, because the linked issue relates to resolving PS-drive-based paths to native paths, (which would also apply to Windows), whereas this issue is related to the (Unix-only) native-globbing feature.\r\n",
      "created_at": "2019-10-07T18:45:26Z",
      "updated_at": "2019-10-07T18:45:43Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Really the resolving is executed by the same LocalGlobbig code. So technically it is one issue.",
      "created_at": "2019-10-08T05:14:54Z",
      "updated_at": "2019-10-08T05:14:54Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "I see: it happens to be technically related rather than a duplicate.",
      "created_at": "2019-10-08T12:54:04Z",
      "updated_at": "2019-10-08T12:54:04Z"
    },
    {
      "author": "dkaszews",
      "author_association": "CONTRIBUTOR",
      "body": "Workaround is to wrap any globbing with `(Get-ChildItem ...)`. This is also a problem on Windows using utilities ported from Unix which expect globbing to be expanded by shell. Examples:\r\n\r\n```pwsh\r\nvim *.txt # bash: opens all txt files bash, pwsh: opens file '*.txt'\r\nvim (Get-ChildItem *.txt)  # bash and pwsh: opens all txt files\r\n```",
      "created_at": "2022-09-06T19:58:39Z",
      "updated_at": "2022-09-06T19:58:39Z"
    }
  ],
  "created_at": "2019-10-02T15:58:55Z",
  "number": 10683,
  "state": "open",
  "title": "Native globbing: Automatic globbing for native commands doesn't work with backtick-escaped spaces",
  "updated_at": "2022-09-06T19:58:39Z"
}