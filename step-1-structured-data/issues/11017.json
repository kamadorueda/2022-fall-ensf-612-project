{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11017",
  "author": "mklement0",
  "body": "#10851 reported that feeding `Get-Command` output to itself via the pipeline - useful if you want to force loading of all modules in the context of reflection, for instance - doesn't work as expected.\r\n\r\n#10929  tried to fix that, but fell short.\r\n\r\n\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\nfunction foo {}; set-alias foo foo\r\n\r\n(gcm -all foo | gcm).Count | Should -Be 2\r\n\r\n(gcm -all foo | gcm).ComandType | Should -Be Alias, Function\r\n```\r\n\r\n# Expected behavior\r\n\r\nThe tests should succeed.\r\n\r\n\r\n# Actual behavior\r\n\r\nThe tests fail:\r\n\r\n```none\r\nExpected 2, but got 278                   #  *all* commands are returned\r\nExpected @('Alias', 'Function'), but got $null\r\n```\r\n\r\n# Environment data\r\n\r\n```none\r\nPowerShell Core 7.0.0-preview.5, with PR #10929 applied\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "So what's happening is that the `foo` function doesn't have a Noun or Verb (they are empty strings), but it does have a Noun and Verb property, so when it's piped to `gcm` it binds to `-Noun` and `-Verb`, since they are empty string, `gcm` does a wildcard search thus returning everything.  A simpler repro:\r\n\r\n```powershell\r\nfunction foo{}; gcm foo | gcm\r\n```\r\n\r\nAdding a new parameterset to accept CommandInfo won't help as the default parameter set is Noun/Verb which will match any CommandInfo object.\r\n\r\nA possible fix would be if Noun and Verb are both empty, inspect the pipeline object further and use whatever is available to match: Name and CommandType",
      "created_at": "2019-11-08T00:48:28Z",
      "updated_at": "2019-11-08T00:48:28Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Given there is currently no pipeline parameter accepting this object as input in its complete form, would that information be available to Get-Command?",
      "created_at": "2019-11-08T02:01:20Z",
      "updated_at": "2019-11-08T02:01:20Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@vexx32 excellent point, it wouldn't as only Noun and Verb would be there.  Hmmm, I guess the only way to fix this I can think of is a breaking change so that CommandInfo parameterset is default.",
      "created_at": "2019-11-08T03:41:05Z",
      "updated_at": "2019-11-08T03:41:05Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT: It's fine to leave the default parameter set as-is - a specifically `CommandInfo`-typed parameter would still bind correctly.",
      "created_at": "2019-11-08T21:15:42Z",
      "updated_at": "2019-11-08T21:15:58Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@mklement0 it would bind correctly if the default parameter set doesn't bind first which it will",
      "created_at": "2019-11-08T22:08:37Z",
      "updated_at": "2019-11-08T22:08:37Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT \r\n\r\nIt doesn't _necessarily_ bind first, but, as I just realized, it does if you combine it with a parameter _not_ supported in a potential new `CommandInfo`-typed parameter set.\r\n\r\nSo the choices are:\r\n\r\n* (a) change the default parameter set\r\n\r\n* (b) make the new parameter set support _all_ other parameters (except `-Name`), even though some combinations don't make sense (such as `-UseFuzzyMatching`).\r\n\r\nI'm unclear on the ramifications of (a)\r\n\r\n(b) could be addressed by either warning about inapplicable arguments or throwing an error (there's already one instance of that in the existing code).",
      "created_at": "2019-11-08T22:33:15Z",
      "updated_at": "2019-11-08T22:37:46Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Changing the default parameter set makes the most sense to me, but also unclear how many will be impacted. ",
      "created_at": "2019-11-08T23:04:21Z",
      "updated_at": "2019-11-08T23:04:21Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "We could add optional parameter -Name in the default parameter set.",
      "created_at": "2019-11-09T16:07:12Z",
      "updated_at": "2019-11-09T16:07:12Z"
    }
  ],
  "created_at": "2019-11-07T23:18:47Z",
  "number": 11017,
  "state": "open",
  "title": "Get-Command doesn't properly recognize System.Management.Automation.CommandInfo (its own output type) as pipeline input",
  "updated_at": "2019-11-09T16:07:38Z"
}