{
  "_url": "https://github.com/PowerShell/PowerShell/issues/17994",
  "author": "janegilring",
  "body": "### Summary of the new feature / enhancement\r\n\r\nBy design, interactive use of PowerShell via Remoting does not support interactive console applications - as these requires a full console. Remoting is currently sending stdin and stdout back and forth via PS Remoting, hence an interactive application does not work.\r\n\r\nDemo of the current user experience, using Enter-PSSession -Hostname against an Ubuntu VM with PowerShell 7 installed:\r\n\r\n```\r\n[adminjer@172.28.0.11]:` PS /home/adminjer> vim /etc/ssh/sshd_config\r\nVim: Warning: Output is not to a terminal\r\nVim: Warning: Input is not from a terminal\r\n```\r\n\r\nTrying a different editor such as nano also fails:\r\n```\r\n[adminjer@172.28.0.11]: PS /home/adminjer> nano test.txt\r\nError opening terminal: unknown.\r\n```\r\n\r\nLooking into Get-Help about_remote_troubleshooting reveals a section called entitled 'TROUBLESHOOTING UNRESPONSIVE BEHAVIOUR', which states:\r\n\r\n```\r\nTROUBLESHOOTING UNRESPONSIVE BEHAVIOR\r\n\r\nThis section discusses remoting problems that prevent a command from completing and prevent or delay the return of the PowerShell prompt.\r\n\r\nHOW TO INTERRUPT A COMMAND\r\n\r\nSome native Windows programs, such as programs with a user interface, console applications that prompt for input, and console applications that use the Win32 console API, do not work correctly in the PowerShell remote host.\r\n\r\nWhen you use these programs, you might see unexpected behavior, such as no output, partial output, or a remote command that does not complete. To end an unresponsive program, type CTRL + C. To view any errors that might have been reported, type \"$error\" in the local host and the remote session.\r\n```\r\n\r\nEven though the above was originally written for Windows PowerShell towards Windows console applications, I suppose the same is true for Linux/MacOS as well, meaning console applications such as VIM won't work.\r\n\r\nI recall Windows PowerShell ISE has this variable containing unsupported console applications:\r\n\r\n```\r\n$psUnsupportedConsoleApplications\r\nwmic\r\nwmic.exe\r\ncmd\r\ncmd.exe\r\ndiskpart\r\ndiskpart.exe\r\nedit.com\r\nnetsh\r\nnetsh.exe\r\nnslookup\r\nnslookup.exe\r\npowershell\r\npowershell.exe\r\nssh-keygen\r\nssh-keygen.exe\r\n```\r\n\r\nTrying to launch one of them would result in a more user friendly error:\r\n\r\n```\r\nCannot start \"diskpart.exe\". Interactive console applications are not supported. \r\nTo run the application, use the Start-Process cmdlet or use \"Start PowerShell.exe\" from the File menu.\r\nTo view/modify the list of blocked console applications, use $psUnsupportedConsoleApplications, or consult online help.\r\nAt line:0 char:0\r\n```\r\n\r\nWould it be possible to have a similar variable and error message for PowerShell Remoting sessions? If so, I could file an issue for this. Or are there any obvious reasons it won`t be doable?\r\n\r\n\r\n\r\n### Proposed technical implementation details (optional)\r\n\r\nImplement a new variable containing unsupported console applications that is known to not work via PowerShell Remoting:\r\n\r\n```\r\n$psRemotingUnsupportedConsoleApplications\r\nvim\r\nnano\r\n```\r\n\r\nTrying to launch one of them would result in a more user friendly error:\r\n\r\n```\r\nCannot start \"vim\". Interactive console applications are not supported via PowerShell Remoting. \r\nTo run the application, use an interactive session - for example ssh@remote-host followed by launching pwsh.\r\nTo view/modify the list of blocked console applications, use $psRemotingUnsupportedConsoleApplications, or consult online help.\r\nAt line:0 char:0\r\n```",
  "closed_at": null,
  "comments": [
    {
      "author": "kasini3000",
      "author_association": "NONE",
      "body": "It seems that it is not easy to achieve in a short time.\r\nfor other way:\r\nI have written a replacement ps1 script similar to SED, support win, linux, \r\nI use it to implement remote batch replacement of strings, in linux text files\r\nare you willing to consider it?",
      "created_at": "2022-08-31T03:36:41Z",
      "updated_at": "2022-08-31T03:36:41Z"
    },
    {
      "author": "kilasuit",
      "author_association": "COLLABORATOR",
      "body": "Hi @janegilring \r\n\r\nI personally can see this being of use though a static list perhaps isn't the most sensible way forward here, even though it worked well enough for the list in ISE, I'd be happier if we could dynamically work this out based on the application being called. especially as some executables can have both an interactive and non-interactive mode. As such I think this has enough cross over that we need to discuss this across 2 WG's so will get this rolling now. ",
      "created_at": "2022-09-01T22:02:17Z",
      "updated_at": "2022-09-01T22:02:17Z"
    },
    {
      "author": "kilasuit",
      "author_association": "COLLABORATOR",
      "body": "I think that you can currently get round this in VSCode with it's SSH based remoting to open up files similar to how the ISE had remote tabs, but I haven't tested if that may work for you as opposed to in this case opening Vim/nano to do required changes.",
      "created_at": "2022-09-01T22:04:24Z",
      "updated_at": "2022-09-01T22:04:24Z"
    },
    {
      "author": "janegilring",
      "author_association": "NONE",
      "body": "> I think that you can currently get round this in VSCode with it's SSH based remoting to open up files similar to how the ISE had remote tabs, but I haven't tested if that may work for you as opposed to in this case opening Vim/nano to do required changes.\r\n\r\nThat is exactly the approach I use personally. The question regarding vim via PowerShell Remoting popped up in a customer workshop, where someone who is used to leveraging vim wanted to use it via PowerShell Remoting and was wondering why it didn\u00b4t work.",
      "created_at": "2022-09-16T19:33:48Z",
      "updated_at": "2022-09-16T19:35:04Z"
    },
    {
      "author": "janegilring",
      "author_association": "NONE",
      "body": "> It seems that it is not easy to achieve in a short time. for other way: I have written a replacement ps1 script similar to SED, support win, linux, I use it to implement remote batch replacement of strings, in linux text files are you willing to consider it?\r\n\r\nSure, it sounds useful to have in the tool belt.",
      "created_at": "2022-09-16T19:34:41Z",
      "updated_at": "2022-09-16T19:34:41Z"
    }
  ],
  "created_at": "2022-08-30T17:47:27Z",
  "number": 17994,
  "state": "open",
  "title": "Implement a warning when trying to use known interactive console applications via PowerShell Remoting",
  "updated_at": "2022-09-16T19:35:04Z"
}