{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4553",
  "author": "daxian-dbw",
  "body": "Fix #3775\r\n\r\n'GetEnumerator()' is not supported on COM collections in .NET Core (see https://github.com/dotnet/corefx/issues/19731), so we need to have our own implementation to enumerate COM collections.\r\n\r\n",
  "closed_at": "2017-08-17T16:23:37Z",
  "comments": [
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "I should use `Measure-Object` in the test but instead used `Measure-Command`, which pops for mandatory parameter input and thus caused the build to hang. It's fixed now.",
      "created_at": "2017-08-11T23:02:00Z",
      "updated_at": "2017-08-11T23:02:00Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@iSazonov I have addressed your comments. Please take another look. Thanks!",
      "created_at": "2017-08-14T17:48:58Z",
      "updated_at": "2017-08-14T17:48:58Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@lzybkr  @adityapatwardhan We have new commits - please take another look.",
      "created_at": "2017-08-15T05:34:32Z",
      "updated_at": "2017-08-15T05:34:32Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@lzybkr Can you approve?",
      "created_at": "2017-08-16T12:53:38Z",
      "updated_at": "2017-08-16T12:53:38Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@iSazonov Jason probably doesn't have time to come back and approve it again, so it's up to the maintainer's judgment to see if it's necessary for reviewers who had approved to approve again. There are some guidelines you can use, for example:\r\n1. are the changes after the previous approval fundamental or just touch-ups\r\n2. are the changes to address comments left by the reviewer who previously approved\r\n\r\nCertainly, you will get your own guidelines as you become more experienced in this role.",
      "created_at": "2017-08-16T16:43:27Z",
      "updated_at": "2017-08-16T16:43:57Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw Thank you for the helpful comment!\r\n\r\nIn this case, it's more of a courtesy - I have to show respect and ask him after I formally dismissed his approval.",
      "created_at": "2017-08-16T16:56:25Z",
      "updated_at": "2017-08-16T16:56:25Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@iSazonov Another related comment. I usually don't dismiss a reviewer's approval unless the PR needs some fundamental changes (e.g. design flaw, logic changes and etc.). If the following-up changes are touch-ups or minor fixes (like typo, a null condition check, test fix-up), I think it's fine to keep the previous approval, and once the minor issues are addressed, you can approve the PR and merge it.",
      "created_at": "2017-08-16T17:46:41Z",
      "updated_at": "2017-08-16T17:46:41Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw I wonder why CI AppVeyor failed?",
      "created_at": "2017-08-17T03:56:05Z",
      "updated_at": "2017-08-17T03:56:05Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "I have investigated the failure, it actually a bug in Binder, more specifically at [here](https://github.com/PowerShell/PowerShell/blob/master/src/System.Management.Automation/engine/runtime/Binding/Binders.cs#L4978), the restriction generated in the call to `this.DeferForPSObject` doesn't respect the fact that the baseobject needs to be a COM object.\r\n\r\nA repro would be:\r\n```\r\n$shell = New-Object -ComObject \"Shell.Application\"\r\n$folder = $shell.Namespace(\"F:\\tmp\")\r\n#$item = $folder.Items().Item(0)\r\n$item = $folder.Items() | select -Last 1\r\n$item.Name\r\n\r\n\r\n$members = new-object System.Collections.ObjectModel.Collection[System.Management.Automation.PSMemberInfo]\r\n$n=new-object Management.Automation.PSNoteProperty a,1\r\n$members.Add($n)\r\n$r=add-member -InputObject a -MemberType MemberSet -Name Name -Value $members -passthru\r\n$r.Name.a\r\n```\r\n\r\nThe `$r.Name.a` is supposed to return 1. If you run the lower part first then upper part, then all work fine.\r\nThis happens when a COM object is wrapped into a PSObject, which is the case when the COM object is returned from a pipeline, like the above repro code.\r\n\r\nI cannot open an issue until this PR is merged because the repro requires enumerating a COM collection.\r\nI have updated the test to not access `Name` member, so it would be good now. When I resolve the bug, I will update the COM basic test to keep accessing the `Name` member.",
      "created_at": "2017-08-17T05:41:38Z",
      "updated_at": "2017-08-17T05:41:38Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw Maybe made two commits for code and tests before rebase and merge?",
      "created_at": "2017-08-17T07:24:09Z",
      "updated_at": "2017-08-17T08:16:38Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@iSazonov Please just choose 'Squash and merge'. It's a simple fix and there is no need to keep history commits.",
      "created_at": "2017-08-17T16:07:40Z",
      "updated_at": "2017-08-17T16:07:40Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "A follow-up of the binder bug:\r\nThe issue repros without COM enumeration. #4607 opened to track it.",
      "created_at": "2017-08-17T16:17:17Z",
      "updated_at": "2017-08-17T16:17:17Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw Merged.\r\nGreat work! Thanks!",
      "created_at": "2017-08-17T16:24:33Z",
      "updated_at": "2017-08-17T16:24:33Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@iSazonov Thank you for the review and good work as a maintainer \ud83d\ude04 \r\n\r\nHere are some of my experiences to choose among `Squash and merge`, `Rebase and merge` and `Create a merge commit`:\r\n1. number of meaningful commits (commits that are part of the PR work, or commits to address major comments that require non-trivial design/logic changes) is one thing to consider\r\n1. the complexity of the PR work is also something to consider.\r\n\r\n- Some PR may involve many commits, but the fix or feature work is not complex, in those cases, just `Squash and merge`. \r\n- Some PR may have clean history commits, but again, the fix/work is simple, in those cases, `Squash and merge`\r\n- A PR may be complex work, and the history is not clean -- complex work usually means a lot major changes during the review process -- in such case, choose `create a merge commit` to preserve the history even though it's not clean. Example: #2450\r\n- A PR is non-trivial and the history is clean, then it's worthy to keep the history. In this case, consider using `rebase and merge` to keep the main branch history clean if the number of commits is not too many (~5/6). Otherwise, use `create a merge commit`.\r\n- A PR may contain more than 1 fix, in this case we usually should ask the author to break it into two PRs.\r\n\r\nAs you can see from the main branch history, most of time we use (and prefer to) `squash and merge`.\r\n\r\nAs for what is a simple/complex/non-trivial fix/work, it's hard to describe but you will have your judgement call as you gain more expeirences.",
      "created_at": "2017-08-17T16:44:04Z",
      "updated_at": "2017-08-17T16:44:04Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw Thanks for sharing your experience!",
      "created_at": "2017-08-17T18:04:27Z",
      "updated_at": "2017-08-17T18:04:27Z"
    }
  ],
  "created_at": "2017-08-11T17:10:22Z",
  "number": 4553,
  "state": "closed",
  "title": "Make PowerShell Core enumerate COM collections",
  "updated_at": "2017-08-17T18:04:27Z"
}