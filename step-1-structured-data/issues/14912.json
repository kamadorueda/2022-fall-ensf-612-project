{
  "_url": "https://github.com/PowerShell/PowerShell/issues/14912",
  "author": "SteveL-MSFT",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nCurrently, if a script module (like PowerShellGet v2) has an error, it shows internal information to the user which can be confusing.  Change is to check if the invocation is from a `.psm1` file and to not show the script line information.  Developers of modules can still use `Get-Error` to get that information during development time.\r\n\r\nBefore:\r\n\r\n```console\r\nPS> install-module lskjfd\r\nInstall-Package: /Users/steve/.local/share/powershell/Modules/PowerShellGet/2.2.5/PSModule.psm1:9711\r\nLine |\r\n9711 |  \u2026 talledPackages = PackageManagement\\Install-Package @PSBoundParameters\r\n     |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n     | No match was found for the specified search criteria and module name 'lskjfd'. Try Get-PSRepository to see all available registered module repositories.\r\n```\r\n\r\nAfter:\r\n\r\n```console\r\nPS> install-module lskjfd\r\nInstall-Package: No match was found for the specified search criteria and module name 'lskjfd'. Try Get-PSRepository to see all available registered module repositories.\r\n```\r\n\r\n(Note that the error record here is coming from `Install-Package` being used by `Install-Module` which is what gets returned by PowerShell)\r\n\r\n## PR Context\r\n\r\nThis was reported by users.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [X] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [X] Issue filed: <!-- Number/link of that issue here -->https://github.com/MicrosoftDocs/PowerShell-Docs/issues/7301\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and opened an issue in the relevant tool repository. This may include:\r\n        - [ ] Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode\r\n        (which runs in a different PS Host).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n",
  "closed_at": "2021-03-08T18:37:12Z",
  "comments": [
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "Can we have another view that maintains the current functionality?\r\n\r\nIt works well as it is now.",
      "created_at": "2021-02-27T14:01:54Z",
      "updated_at": "2021-02-27T14:01:54Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@powercode you can get the same (and more information) using `Get-Error`.  It seems like a module should be an abstraction layer from the user.  It could be configurable, but I also don't think we want tons of configuration that people don't use as I believe the current output of line information for a script module is really only useful to the author of the module.",
      "created_at": "2021-02-28T14:25:18Z",
      "updated_at": "2021-02-28T14:25:18Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Maybe it makes sense to add this in docs - $error vs ConciseView vs GetError.",
      "created_at": "2021-02-28T15:38:08Z",
      "updated_at": "2021-02-28T15:38:08Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Static analysis failure is unrelated to this PR and being invested separately",
      "created_at": "2021-03-01T16:11:29Z",
      "updated_at": "2021-03-01T16:11:29Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> Static analysis failure is unrelated to this PR and being invested separately\r\n\r\nWe could only run markdown tests (1) if CL-Doc label is present and (2) in nightly build. ",
      "created_at": "2021-03-01T18:06:14Z",
      "updated_at": "2021-03-01T18:06:14Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov are you ok to merge this?",
      "created_at": "2021-03-05T23:02:18Z",
      "updated_at": "2021-03-05T23:02:18Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT \"PowerShell-CI-static-analysis (Secret Scan)\" blocks merging :-( Could you please ask anybody in your team to look the issue?",
      "created_at": "2021-03-06T06:44:50Z",
      "updated_at": "2021-03-06T06:44:50Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "The CI has the problem in all PRs.",
      "created_at": "2021-03-08T17:01:34Z",
      "updated_at": "2021-03-08T17:01:34Z"
    },
    {
      "author": "JustinGrote",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov @SteveL-MSFT haven't had a chance to test but will this work for powershell modules that aren't a single .psm1 file? It's common for modules to be broken into \"Private\",\"Public\", etc. folders and dot source in the files from there.\r\n\r\nMaybe better to test for `$myinvocation.mycommand.module.modulebase` or something?",
      "created_at": "2021-03-08T19:35:09Z",
      "updated_at": "2021-03-08T19:35:09Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@JustinGrote Could you please create a test for scenario you mean?",
      "created_at": "2021-03-09T04:00:07Z",
      "updated_at": "2021-03-09T04:00:07Z"
    },
    {
      "author": "JustinGrote",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov sure, fairly simple:\r\n\r\nmymodule.psm1\r\n```powershell\r\n. .\\myfunction.ps1\r\n```\r\n\r\nmyfunction.ps1\r\n```powershell\r\nfunction myfunction {\r\n  throw 'This should not have a line indicator in conciseview'\r\n}\r\n```",
      "created_at": "2021-03-10T06:55:14Z",
      "updated_at": "2021-03-10T06:55:14Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@JustinGrote that still shows line information as the ErrorRecord shows the ps1 as the source and I don't see a way to map it to the psm1",
      "created_at": "2021-03-11T18:48:10Z",
      "updated_at": "2021-03-11T18:48:10Z"
    },
    {
      "author": "JustinGrote",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT How about if `$myinv.MyCommand.Module.ModuleBase` is present?",
      "created_at": "2021-03-11T18:53:41Z",
      "updated_at": "2021-03-11T18:53:41Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.2.0-preview.4` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.2.0-preview.4)\n",
      "created_at": "2021-03-16T23:39:57Z",
      "updated_at": "2021-03-16T23:39:57Z"
    }
  ],
  "created_at": "2021-02-27T02:35:44Z",
  "number": 14912,
  "state": "closed",
  "title": "Update `Concise` ErrorView to not show line information for errors from script module functions",
  "updated_at": "2021-03-16T23:39:57Z"
}