{
  "_url": "https://github.com/PowerShell/PowerShell/issues/2977",
  "author": "vors",
  "body": "<!--\r\n\r\nIf it is a bug report:\r\n- make sure you are able to repro it on the latest released version. \r\nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\r\n- Search the existing issues.\r\n- Refer to the [FAQ](../docs/FAQ.md).\r\n- Refer to the [known issues](../docs/KNOWNISSUES.md).\r\n- Fill out the following repro template\r\n\r\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\r\n-->\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```\r\nPS /Users/vors/Downloads> mkdir foo\r\nPS /Users/vors/Downloads> ii './foo/' # works fine: open the folder in Finder                                                                                   \r\nPS /Users/vors/Downloads> mkdir 'foo bar'                                                                             \r\nPS /Users/vors/Downloads> ii './foo bar/' # doesn't work, writes to stderr                                                                             \r\nPS /Users/vors/Downloads> The file /Users/vors/bar does not exist. # this text comes from stderr and even not wrapped in the PS error\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\nFolder `foo bar` is open in Finder (macOS). I didn't test in on Unix.\r\n\r\n\r\nActual behavior\r\n---------------\r\n\r\nError `The file /Users/vors/bar does not exist.` is printed to the terminal\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value                                                                                 \r\n----                           -----                                                                                 \r\nPSVersion                      6.0.0-alpha                                                                           \r\nPSEdition                      Core                                                                                  \r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}                                                               \r\nBuildVersion                   3.0.0.0                                                                               \r\nGitCommitId                    v6.0.0-alpha.14                                                                       \r\nCLRVersion                                                                                                           \r\nWSManStackVersion              3.0                                                                                   \r\nPSRemotingProtocolVersion      2.3                                                                                   \r\nSerializationVersion           1.1.0.1  \r\n```\r\n",
  "closed_at": "2017-05-16T21:31:09Z",
  "comments": [
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "Definitely, something to look into. In Linux I found that has to be related to escape code.  As I can do a \"CD 'foo bar'\" and it will process the command but it breaks when doing Invoke-Item.  When you do the bash command \"dir\", it will show the escape code as the space \"\\ \"  as \"foo\\ bar\".\r\n(See Attached image)\r\n![invoke-item_folderissue](https://cloud.githubusercontent.com/assets/19892435/21754171/b4ccc2ee-d5c8-11e6-856b-67c66737c9bd.png)\r\n\r\n\r\n",
      "created_at": "2017-01-08T22:34:32Z",
      "updated_at": "2017-01-08T22:34:52Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "By the way, when using Get-ChildItem \"foo bar\" works fine.\r\n\r\n![invoke-item_folderissue2](https://cloud.githubusercontent.com/assets/19892435/21754195/3f2c1142-d5c9-11e6-9b0a-86b9903a88d0.png)\r\n",
      "created_at": "2017-01-08T22:38:25Z",
      "updated_at": "2017-01-08T22:38:25Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "For the `Invoke-Item` we are calling some platform specific hacks, I believe for OSX it's something like AppleScript `open` equivalent. That would explain why the problem happens: we are calling a command line that performs it's own parameter parsing.",
      "created_at": "2017-01-09T22:24:14Z",
      "updated_at": "2017-01-09T22:24:14Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "Just hit this problem again. Very annoying.",
      "created_at": "2017-03-10T20:55:53Z",
      "updated_at": "2017-03-10T20:55:53Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Dupe of https://github.com/PowerShell/PowerShell/issues/2900",
      "created_at": "2017-05-16T21:31:09Z",
      "updated_at": "2017-05-16T21:31:09Z"
    }
  ],
  "created_at": "2017-01-08T19:09:09Z",
  "labels": [
    "Resolution-Duplicate",
    "OS-macOS",
    "WG-Cmdlets"
  ],
  "number": 2977,
  "state": "closed",
  "title": "Invoke-Item 'foo bar' doesn't work",
  "updated_at": "2017-05-16T21:31:09Z"
}