{
  "_url": "https://github.com/PowerShell/PowerShell/issues/16197",
  "author": "KevRitchie",
  "body": "# PR Summary\r\n\r\nReplace int.MaxValue with 100 so that parameter validation works as expected.\r\n\r\nRemove BeginProcessing method.  No longer required to do a prerequisite check on Max Depth.  Parameter Argument Validation now used.\r\n\r\nUpdate Json Tests.\r\n\r\n## PR Context\r\n\r\nFixes #15344\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and opened an issue in the relevant tool repository. This may include:\r\n        - [ ] Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode\r\n        (which runs in a different PS Host).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->",
  "closed_at": "2021-10-28T18:56:56Z",
  "comments": [
    {
      "author": "microsoft-cla-retired[bot]",
      "author_association": "NONE",
      "body": "[![CLA assistant check](https://cla.opensource.microsoft.com/pull/badge/signed)](https://cla.opensource.microsoft.com/PowerShell/PowerShell?pullRequest=16197) <br/>All CLA requirements met.",
      "created_at": "2021-10-05T23:03:45Z",
      "updated_at": "2021-10-05T23:04:51Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@SteveL-MSFT can you please take a quick look?",
      "created_at": "2021-10-06T00:46:41Z",
      "updated_at": "2021-10-06T00:46:41Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I wonder why do we change the check if we get right error message? Also see #3181 - I wonder about it too.",
      "created_at": "2021-10-06T03:42:25Z",
      "updated_at": "2021-10-06T03:42:25Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "The [documentation](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/convertto-json?view=powershell-7.1) is already up-to-date;\r\n> Specifies how many levels of contained objects are included in the JSON representation. The value can be any number from 1 to 100. The default value is 2. ConvertTo-Json emits a warning if the number of levels in an input object exceeds this number.\r\n\r\n@iSazonov This is to fix the incorrect validate range attribute. While after fixing that, there is no need for explicit check.",
      "created_at": "2021-10-06T17:12:51Z",
      "updated_at": "2021-10-06T20:04:36Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> The documentation is already up-to-date;\r\n> \r\n> > Specifies how many levels of contained objects are included in the JSON representation. The value can be any number from 1 to 100. The default value is 2. ConvertTo-Json emits a warning if the number of levels in an input object exceeds this number.\r\n> \r\n> @iSazonov This is to fix the incorrect validate range attribute. While after fixing that, there is no need for explicit check.\r\n\r\nI had reverse logic to keep PowerShell custom error message. :-) No objections to have ValidateRange error message.",
      "created_at": "2021-10-06T17:19:07Z",
      "updated_at": "2021-10-06T17:19:07Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "> The documentation is already up-to-date;\r\n\r\nActually, there is an inconsistency in the doc. `-Depth` supports argument 0, but the help content say `from 1 to 100`.\r\n@sdwheeler, shall we update the doc?",
      "created_at": "2021-10-06T20:06:12Z",
      "updated_at": "2021-10-06T20:06:12Z"
    },
    {
      "author": "sdwheeler",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw It supports a value of 0 but is it valid?\r\n\r\n```\r\nPS> get-date | convertto-json -Depth 0\r\nConvertTo-Json: Cannot validate argument on parameter 'Depth'. The 0 argument is less than the minimum allowed range of 1. Supply an argument that is greater than or equal to 1 and then try the command again.\r\n```\r\n\r\nThe supported range should probably start at 1, not 0.",
      "created_at": "2021-10-06T21:37:52Z",
      "updated_at": "2021-10-06T21:38:36Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@sdwheeler It works on 7.2.0-preview.9, so I guess there was a change that made this work at some point.\r\n\r\n![image](https://user-images.githubusercontent.com/127450/136289659-8b784841-7277-4ed2-bc06-a3aa12c3ca8c.png)\r\n",
      "created_at": "2021-10-06T22:02:32Z",
      "updated_at": "2021-10-06T22:02:32Z"
    },
    {
      "author": "sdwheeler",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw Ah, yeah. I think that was one of the things fixed. The docs for the cmdlet in 7.2 already list the range as `0..100`.\r\n",
      "created_at": "2021-10-06T22:08:54Z",
      "updated_at": "2021-10-06T22:08:54Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Right, the [7.2 doc](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/convertto-json?view=powershell-7.2) has the right content. Thanks @sdwheeler!\r\n> Specifies how many levels of contained objects are included in the JSON representation. The value can be any number from 0 to 100. The default value is 2. ConvertTo-Json emits a warning if the number of levels in an input object exceeds this number.",
      "created_at": "2021-10-06T22:11:19Z",
      "updated_at": "2021-10-06T22:11:19Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.3.0-preview.1` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.3.0-preview.1)\n",
      "created_at": "2021-12-16T19:59:21Z",
      "updated_at": "2021-12-16T19:59:21Z"
    }
  ],
  "created_at": "2021-10-05T21:36:32Z",
  "number": 16197,
  "state": "closed",
  "title": "Fix ValidateRange Max Depth Allowed",
  "updated_at": "2021-12-16T19:59:21Z"
}