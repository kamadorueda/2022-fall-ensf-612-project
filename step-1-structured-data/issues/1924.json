{
  "_url": "https://github.com/PowerShell/PowerShell/issues/1924",
  "author": "zaxebo1",
  "body": "on the releases page , please provide pre-built binary in two more formats \n1) flatpak format = (See flatpak.org) = In this way we can install it on multiple linux distributions, **and without requiring root password** . note that, flatpak format is accepted in many distributions by default ,like debian testing,fedora. In other distributions it can be installed as http://flatpak.org/getting.html    . This flatpak format is the most promising and buzzword of the packaging formats)\n\n2) the debian stable .deb = currently debian linux stable is 8.5 ( see https://en.wikipedia.org/wiki/Debian )\n# \n\nnote: you may automate creation of the pre-built binaries formats using travis CI + github\n( see https://cylonjs.com/blog/2014/11/19/creating-multiplatform-precompiled-binaries-for-node-modules/  )\n\nif you can support **only one** additional format, then support flatpak and drop debian stable .deb\n",
  "closed_at": null,
  "comments": [
    {
      "author": "tidux",
      "author_association": "NONE",
      "body": "If it's just bootstrapping a build system there is no need for OS packages at all.  Build against Debian 8 for an old glibc and static-link the binary and you just have a single binary per system architecture to download.  Targeting Debian Stable is also optimal for cross platform usage, since creating a binary for Debian armel (ARMv5te soft float) would allow bootstrapping on Raspbian (ARMv6 hard float), and Debian already has ports to armhf (ARMv7 hard float) and arm64 (ARMv8).  Microsoft is typically big on home-lab usage, and using PowerShell to orchestrate a fleet of tiny Raspberry Pis or other cheap single board computers would be good practice for using it to orchestrate a fleet of VMs in AWS, Azure, locally-hosted Hyper-V, or (maybe some day) KVM+Libvirt.\n",
      "created_at": "2016-08-19T01:29:41Z",
      "updated_at": "2016-08-19T01:29:41Z"
    },
    {
      "author": "zaxebo1",
      "author_association": "NONE",
      "body": "additionally I will even propose that **LATER in future** the debian package be submitted to debian standard repository later. So that there is no need to get separate binary of powershell and using \"dpkg\" to install it.   The deb of powershell will become part of \"debian package standard repository\", which can be easily installed through \"apt-get\"\n\nrefer to:\nhttp://askubuntu.com/questions/13255/how-do-i-propose-my-project-to-be-part-of-debian-too\nhttp://askubuntu.com/questions/16446/how-to-get-my-software-into-ubuntu\n",
      "created_at": "2016-08-19T19:04:39Z",
      "updated_at": "2016-08-19T19:04:39Z"
    },
    {
      "author": "ghost",
      "author_association": "NONE",
      "body": "@zaxebo1 already underway https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=834756\n\n@tidux it's always better to use the distro package manager.\n\nThis is pretty much a duplicate of #1903 \n",
      "created_at": "2016-08-21T05:45:15Z",
      "updated_at": "2016-08-21T05:45:15Z"
    },
    {
      "author": "Carringguns",
      "author_association": "NONE",
      "body": "-------- Original message --------From: Adam Baxter notifications@github.com Date: 8/21/16  1:45 AM  (GMT-05:00) To: PowerShell/PowerShell PowerShell@noreply.github.com Subject: Re: [PowerShell/PowerShell] prebuilt binary downloads should be\n\u00a0 available in flatpak format and debian stable .deb format too (#1924) \n@zaxebo1 already underway https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=834756\n\n@tidux it's always better to use the distro package manager.\n\nThis is pretty much a duplicate of #1903 \n\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n",
      "created_at": "2016-08-22T05:30:01Z",
      "updated_at": "2016-08-22T05:30:01Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "This seems like a dupe of #1903 , reactivate if you don't agree\n",
      "created_at": "2016-09-29T21:31:10Z",
      "updated_at": "2016-09-29T21:31:10Z"
    },
    {
      "author": "zaxebo1",
      "author_association": "NONE",
      "body": "@SteveL-MSFT \ni do not agree, both are entirely different issues\n",
      "created_at": "2016-09-30T00:47:57Z",
      "updated_at": "2016-09-30T00:48:23Z"
    },
    {
      "author": "zaxebo1",
      "author_association": "NONE",
      "body": "just a clarification: flatpak is a linux \"distribution independent\" format. It can install on any distribution, with minimal dependencies requirement.\n My request emphasis \"was more on flatpak format\". So I have modified the title just to reflect my original indent of request more appropriately.\n\nadvantage of delivering in flatpak format will be: that I can install it without admin(root) permissions. I can install it on Redhat,Fedora, Debian,Arch etc - all of them now **officially** support flatpak. So with single release format one can easily target all the distributions.\n",
      "created_at": "2016-10-01T05:43:01Z",
      "updated_at": "2016-10-01T05:43:43Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@zaxebo1  What would be the purpose of a flatpak for PowerShell?  Since flatpaks always run in a sandbox, what use case did you have in mind?\r\nSee:  https://github.com/TravisEz13/PowerShell-flatpak/issues/2\r\n",
      "created_at": "2020-03-02T18:35:05Z",
      "updated_at": "2020-03-02T18:35:26Z"
    },
    {
      "author": "Gigadoc2",
      "author_association": "NONE",
      "body": "Well, most of the sandboxing can be turned off, but the filesystem will always not be that of the host, due to how the packaging works. So having powershell in flatpak would indeed not make much sense when using it as a shell for the local host.\r\n\r\nBut I wonder, isn't powershell also used for remoting? Having it in a flatpak might still be useful if you only want to use it for remote sessions.",
      "created_at": "2020-03-02T18:54:58Z",
      "updated_at": "2020-03-02T18:54:58Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@Gigadoc2 A flatpak would probably work for SSH remoting (also another sandbox that has to be turned off), but WSMan remoting is unlikely to work based on my experience with Snap (unless someone rewrites the MI implementation for Linux)",
      "created_at": "2020-03-02T21:37:24Z",
      "updated_at": "2020-03-02T21:37:24Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "I already have a PR, that in theory, that should allow the flatpak to work for SSH remoting (I've done NO testing).\r\nhttps://github.com/TravisEz13/PowerShell-flatpak/pull/3",
      "created_at": "2020-03-02T21:38:24Z",
      "updated_at": "2020-03-02T21:38:24Z"
    },
    {
      "author": "zaxebo1",
      "author_association": "NONE",
      "body": "i only want it be used for SSH remoting (say,for servers) only, not for local scripting.",
      "created_at": "2020-03-02T21:41:39Z",
      "updated_at": "2020-03-02T21:41:39Z"
    },
    {
      "author": "Gigadoc2",
      "author_association": "NONE",
      "body": "@TravisEz13 I am afraid I don't know much about WSMan, but isn't it running over HTTP? Apart from needing network access, how would the sandbox impede WSMan?",
      "created_at": "2020-03-02T22:56:46Z",
      "updated_at": "2020-03-02T22:56:46Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "> how would the sandbox impede WSMan?\r\n\r\nIn theory, it shouldn't, but the library that implements WSMan is not maintained and critical bugs are not fixed.  It's not compatible with a modern runtime and takes hacks to make it run on most.  I'm not going to use an old runtime and hack it to make WSMan work.",
      "created_at": "2020-03-02T23:05:08Z",
      "updated_at": "2020-03-02T23:05:08Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "One anyone ever try to use the PowerShell flatpak for device automation?    \r\nIf so, I don't know what device you want.  I'll have to say that the flatpak should have access to all devices.",
      "created_at": "2020-03-02T23:10:02Z",
      "updated_at": "2020-03-02T23:10:02Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "I opened the sandbox for the filesystem and network. \r\nI published a release so you can test it.\r\n\r\nhttps://github.com/TravisEz13/PowerShell-flatpak/releases/tag/v0.0.1\r\n\r\nInstall instructions are here:\r\n\r\nhttps://github.com/TravisEz13/PowerShell-flatpak#installation\r\n\r\nVerified client SSH remoting is working.\n\n<blockquote><img src=\"https://avatars2.githubusercontent.com/u/10873629?s=400&v=4\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicon.ico\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/TravisEz13/PowerShell-flatpak\">TravisEz13/PowerShell-flatpak</a></strong></div><div>Contribute to TravisEz13/PowerShell-flatpak development by creating an account on GitHub.</div></blockquote>\n<blockquote><img src=\"https://avatars2.githubusercontent.com/u/10873629?s=400&v=4\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicon.ico\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/TravisEz13/PowerShell-flatpak\">TravisEz13/PowerShell-flatpak</a></strong></div><div>Contribute to TravisEz13/PowerShell-flatpak development by creating an account on GitHub.</div></blockquote>",
      "created_at": "2020-03-02T23:51:39Z",
      "updated_at": "2020-03-02T23:51:41Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@zaxebo1 @Gigadoc2 How would you feel if flathub was the one building the flatpak?  ",
      "created_at": "2020-03-03T00:43:14Z",
      "updated_at": "2020-03-03T00:43:14Z"
    },
    {
      "author": "rokejulianlockhart",
      "author_association": "NONE",
      "body": "> http://github.com/PowerShell/PowerShell/issues/1924#issuecomment-593707024.\r\n\r\nWould that allow for automated building of the package? If any repository's build process should be used, currently [Flathub's](http://github.com/flathub) shall be the most useful.",
      "created_at": "2021-09-12T19:57:48Z",
      "updated_at": "2021-10-08T16:11:38Z"
    }
  ],
  "created_at": "2016-08-19T01:07:06Z",
  "labels": [
    "Area-Maintainers-Build"
  ],
  "number": 1924,
  "state": "open",
  "title": "prebuilt binary downloads should be available in flatpak format ",
  "updated_at": "2021-10-08T16:11:38Z"
}