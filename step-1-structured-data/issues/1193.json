{
  "_url": "https://github.com/PowerShell/PowerShell/issues/1193",
  "author": "mirichmo",
  "body": "# Overview\n\nOn Windows, the PowerShell installer will not automatically enable receiving incoming requests. The feature shall be activated as a post-install step that requires Administrator-level authorization (due to the WinRM plugin's System32 placement requirement).\n# Changes Required\n## Enable-PSRemoting Changes\n\nCmdlet implementation should be changed to also \n1. Copy pwrshplugin.dll from %ProgramFiles%\\PowerShell<versionX>\\ (aka $PSHOME) to %windir%\\System32\\PowerShell<versionX>\n2. Create a the necessary plugin configuration file in %windir%\\System32\\PowerShell<versionX>\n3. Register the plugin as a WinRM endpoint (Proposed name = PowerShell.<versionX>)\n\nGet-PSSessionConfiguration should work with these changes.\n",
  "closed_at": "2017-08-08T16:36:23Z",
  "comments": [
    {
      "author": "alexandair",
      "author_association": "CONTRIBUTOR",
      "body": "How is Get-PSRemoting different than Get-PSSessionConfiguration?\n\nUPDATE: Is this expected?\nPS C:> Get-PSSessionConfiguration\nGet-ChildItem : Cannot find drive. A drive with the name 'WSMan' does not exist.\n",
      "created_at": "2016-07-20T19:47:28Z",
      "updated_at": "2016-07-20T19:57:52Z"
    },
    {
      "author": "HemantMahawar",
      "author_association": "CONTRIBUTOR",
      "body": "@alexandair  ... that was left over from previous thinking. Cleaned it up  .. cc @mirichmo \n",
      "created_at": "2016-07-20T20:35:03Z",
      "updated_at": "2016-07-20T20:35:14Z"
    },
    {
      "author": "mirichmo",
      "author_association": "MEMBER",
      "body": "Due to time constraints for the upcoming release, I implemented a partial solution to this issue. The script Install-PowerShellRemoting.ps1 resides in $PSHOME for Windows releases and will automatically register the included plugin as a WinRM endpoint for PS remoting. The script must be run with Administrator rights because it copies the plugin dll into a versioned directory within System32.\n\nThis issue should remain open until I have time to implement the full solution.\n",
      "created_at": "2016-08-07T03:49:23Z",
      "updated_at": "2016-08-07T03:49:23Z"
    },
    {
      "author": "masaeedu",
      "author_association": "NONE",
      "body": "Will the cmdlet have options to choose between SSH and WinRM?\n",
      "created_at": "2016-08-24T08:26:38Z",
      "updated_at": "2016-08-24T08:26:38Z"
    },
    {
      "author": "mirichmo",
      "author_association": "MEMBER",
      "body": "This issue only applies to Windows + WinRM. Adding support for SSH should be handled through a separate issue and would be a feature request. Please go ahead and file an issue for it if you think it would be useful as part of the overall SSH user experience.\n",
      "created_at": "2016-08-24T17:37:01Z",
      "updated_at": "2016-08-24T17:37:01Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "I believe that most of this logic is already encapsulated in `Install-PowerShellRemoting.ps1`, but we should bring it into `Enable-PSRemoting`.",
      "created_at": "2017-05-22T23:19:42Z",
      "updated_at": "2017-05-22T23:19:42Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@mirichmo This issue was closed automatically after merging #2671. If this issue shouldn't be closed due the pending NanoServer scenario, feel free to re-open it.",
      "created_at": "2017-08-08T16:39:57Z",
      "updated_at": "2017-08-08T16:39:57Z"
    },
    {
      "author": "mirichmo",
      "author_association": "MEMBER",
      "body": "The Nano Server Scenario (registering a different instance of PowerShell Core) is covered by the install script and that still exists. I filed #4528 to document this.",
      "created_at": "2017-08-08T16:55:46Z",
      "updated_at": "2017-08-08T16:55:46Z"
    },
    {
      "author": "BatmanAMA",
      "author_association": "NONE",
      "body": "It sounds like this is resolved, however on a new install of powershell 6.1.1 (on WS 2016) ``enable-psremoting`` fails to register a powershell.6 (or powershell.6.1.1) endpoint. I need to still use the ``install-powershellremoting.ps1`` script. \r\nIs this intended? It may be worth clarifying in the [docs](https://github.com/PowerShell/PowerShell-Docs/blob/staging/reference/docs-conceptual/learn/remoting/WSMan-Remoting-in-PowerShell-Core.md) what the psremoting setup procedure is and removing the reference to this issue. Let me know what you're thinking and I'll happily go submit a pull request to the docs repo.",
      "created_at": "2019-01-14T21:57:20Z",
      "updated_at": "2019-01-14T21:57:20Z"
    },
    {
      "author": "benmccallum",
      "author_association": "NONE",
      "body": "After installing PS 7.1 and in the installer checking \"Enable Remoting\" or whatever the option was I couldn't remote. Full details on this [SO post here](https://stackoverflow.com/questions/65131931). \r\n\r\nI found a kind of solution which is giving the windows user I'm trying to connect with Full Control of `C:\\Windows\\System32\\PowerShell\\7.1.0`, but I'd obviously like to know if something else has gone wrong and it seems kinda of related to what this installer was doing though I used Enable-PSRemoting in a 7.1 isntance so not sure... \r\n\r\nAny help would be appreciated!",
      "created_at": "2020-12-03T18:57:54Z",
      "updated_at": "2020-12-03T18:57:54Z"
    }
  ],
  "created_at": "2016-06-23T23:21:14Z",
  "labels": [
    "Issue-Enhancement",
    "OS-Windows",
    "Area-SideBySide",
    "Resolution-Fixed"
  ],
  "number": 1193,
  "state": "closed",
  "title": "WinRM Plugin Registration and Modification",
  "updated_at": "2020-12-03T18:57:54Z"
}