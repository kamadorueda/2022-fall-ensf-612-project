{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9744",
  "author": "573",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n\r\n-->\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\n$ pwsh.exe -Command Start-Process -Wait -NoNewWindow pwsh.exe -ArgumentList 'Get-Help'\r\nThe argument 'Get-Help' is not recognized as the name of a script file. Check the spelling of the name, or if a path was included, verify that the path is correct and try again.\r\n```\r\n\r\n# Expected behavior\r\nThe commands output being (truncated)\r\n```none\r\n\r\nTOPIC\r\n    PowerShell Help System\r\n\r\nSHORT DESCRIPTION\r\n    Displays help about PowerShell cmdlets and concepts.\r\n\r\nLONG DESCRIPTION\r\n    PowerShell Help describes PowerShell cmdlets,\r\n```\r\n\r\n# Actual behavior\r\nThe commands output being\r\n```none\r\nThe argument 'Get-Help' is not recognized as the name of a script file. Check the spelling of the name, or if a path was included, verify that the path is correct and try again.\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.2.1\r\nPSEdition                      Core\r\nGitCommitId                    6.2.1\r\nOS                             Microsoft Windows 10.0.17134\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2019-06-01T00:00:39Z",
  "comments": [
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "`pwsh` now defaults to `-File` rather than to `-Command`, which is why you must include `-Command` in your `-ArgumentList` in order for `Get-Help` to be interpreted as a a _command_ rather than a _script file_:\r\n\r\nIn order to do that, additionally enclose the entire original `-Command` argument in `\"...\"`:\r\n\r\n```powershell\r\npwsh -Command \"Start-Process -Wait -NoNewWindow pwsh -ArgumentList '-Command', 'Get-Help'\"\r\n```",
      "created_at": "2019-05-28T12:03:02Z",
      "updated_at": "2019-05-28T12:03:14Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2019-06-01T00:00:11Z",
      "updated_at": "2019-06-01T00:00:11Z"
    },
    {
      "author": "573",
      "author_association": "NONE",
      "body": "So @mklement0, what you're saying is, there is basically no way to fully translate, i. e. the following pre-pscore expression without much adding quotes (note the powershell.exe instance)?\r\n\r\n    pwsh.exe -NoProfile -Command \"Start-Process\" -Wait -NoNewWindow powershell.exe -ArgumentList 'Set-ClipboardText','-Value','$(([string](pwsh\" \"-Command\" \"Get-ClipboardText)).Replace(''\" \"'',''\\\\\" \\\\\"''))'\r\n\r\nHave this to translate a list of full paths to files in Intellij to a format needed by some app. The problem with adding more double quotes here is, that Intellij applies some semantics already a bit different to what one expected would a different shell be used instead of powershell.\r\n\r\nEDIT: This is what I got running in a bare pwsh session so far, have to figure it out how to adapt it for use with IntelliJ:\r\n\r\n    pwsh.exe -NoProfile -Command \"Start-Process -Wait -NoNewWindow pwsh.exe -ArgumentList '-Command', 'Set-ClipboardText', '''$(([string] (Get-ClipboardText)) -replace \"`n|`r\")'''\"\r\n\r\nClarification:\r\nWhat I needed was a powershell expression that turns a linefeed-separated list of files into one separated by the string \" \" (double quote space double quote).\r\nThe one I came up with finally (no powershell.exe anymore) to use in Intellij is:\r\n\r\n    pwsh.exe -NoProfile -Command \"Start-Process -Wait -NoNewWindow pwsh.exe -ArgumentList '-Command', 'Set-ClipboardText', '$(([string] (Get-ClipboardText)) -replace ''`n|`r'' -replace ''\" \"'',''\\\\\" \\\\\"'')'\"\r\n\r\n* left the task to fit it back to bare pwsh sessions to the potential reader.",
      "created_at": "2019-06-03T06:18:03Z",
      "updated_at": "2019-06-03T10:52:31Z"
    }
  ],
  "created_at": "2019-05-28T07:58:09Z",
  "number": 9744,
  "state": "closed",
  "title": "Can pscore support powershell-style spawning?",
  "updated_at": "2019-06-03T10:52:31Z"
}