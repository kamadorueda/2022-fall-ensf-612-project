{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4685",
  "author": "janegilring",
  "body": "Steps to reproduce\r\n------------------\r\n\r\nPut the following in the PowerShell profile file ($profile)\r\n```powershell\r\n\r\n# Press Ctrl to not load profile\r\nif (($host.Version.Major -gt 2) -and ($PSEdition -ne 'Core')) {\r\n\r\n  if ($host.Name -eq \"ConsoleHost\") {\r\n    Add-Type -AssemblyName PresentationCore\r\n  }\r\n  \r\n  if([System.Windows.Input.Keyboard]::IsKeyDown(\"Ctrl\")) { return }\r\n  \r\n}\r\n\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\nNo error messages\r\n\r\nActual behavior\r\n---------------\r\n\r\nEven though the if-statement is evaluated to false, the following error is presented:\r\n\r\nThe following exception occurred while retrieving member \"IsKeyDown\": \"Could not load type 'System.Windows.Input.ModifierKeys' from assembly 'WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.\"\r\nAt C:\\Users\\jan-e\\Documents\\PowerShell\\Microsoft.PowerShell_profile.ps1:6 char:4\r\n if([System.Windows.Input.Keyboard]::IsKeyDown(\"Ctrl\")) { return }\r\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n     CategoryInfo          : NotSpecified: (:) [], ExtendedTypeSystemException\r\n     FullyQualifiedErrorId : CatchFromBaseGetMember\r\n\r\nOn a side note: Are there other techniques for discovering whether a specific key is pressed which also works on PowerShell Core?\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.0-beta\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.0-beta.6\r\nOS                             Microsoft Windows 10.0.15063\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2017-08-28T16:42:32Z",
  "comments": [
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Again I cannot reproduce this on W10:\r\n\r\nIf I put the following at the very top of my Core `$PROFILE`:\r\n\r\n```powershell\r\n$host.Version.Major\r\n$PSEdition\r\n($host.Version.Major -gt 2) -and ($PSEdition -ne 'Core')\r\n```\r\n\r\nI get:\r\n\r\n```none\r\n6\r\nCore\r\nFalse\r\n```\r\n\r\nsuggesting that the conditional in your original post should never be entered - which indeed doesn't happen for me when I use your code verbatim in the same place.\r\n\r\nAs an aside, consider using `$PSVersionTable.PSVersion.Major` (and  perhaps `$PSVersionTable.PSEdition`) instead.\r\n\r\n---\r\n\r\n> Are there other techniques for discovering whether a specific key is pressed which also works on PowerShell Core?\r\n\r\nThe only thing I'm personally aware of is `[console]::KeyAvailable` and `[console]::ReadKey()`, but, unfortunately, they don't work with modifier keys in isolation - so a `Ctrl` keypress _by itself_ cannot be detected that way.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
      "created_at": "2017-08-27T21:10:30Z",
      "updated_at": "2017-08-28T03:52:03Z"
    },
    {
      "author": "janegilring",
      "author_association": "NONE",
      "body": "I see, thanks for the input regarding key presses.\r\n\r\nHere is a better example of the issue I am seeing:\r\n```powershell\r\nif ($false) {\r\n\r\n\tif([System.Windows.Input.Keyboard]::IsKeyDown(\"Ctrl\")) { return }\r\n\r\n}\r\n```\r\n\r\nPut this in the profile and open PowerShell Core.",
      "created_at": "2017-08-28T04:42:14Z",
      "updated_at": "2017-08-28T04:42:35Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "You can try `$host.UI.RawUI.ReadKey()` and analyze `KeyInfo`.",
      "created_at": "2017-08-28T04:57:43Z",
      "updated_at": "2017-08-28T04:57:43Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@janegilring: My `$PSVersionTable` shows the same output as yours, and I cannot recreate your problem (I've verified that the profile indeed loads).",
      "created_at": "2017-08-28T12:31:30Z",
      "updated_at": "2017-08-28T12:31:30Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov: What @janegilring is looking for is to asynchronously check whether a given _modifier key by itself_ happens to be held down.\r\n\r\n`[console]::KeyAvailable` / `$host.UI.RawUI.ReadKey()` / `[console]::ReadKey()` only check for \r\n / read keypresses that involve at least one non-modifier key.\r\n\r\nI'm not really familiar with CoreFX, but a quick documentation search tells me that you may be out of luck:\r\n\r\nhttps://docs.microsoft.com/en-us/dotnet/api/?term=keydown&view=netcore-2.0\r\n",
      "created_at": "2017-08-28T12:45:38Z",
      "updated_at": "2017-08-28T12:45:38Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@janegilring also not able to repro this, if you can provide something that can be repro'd we can look into it",
      "created_at": "2017-08-28T16:42:32Z",
      "updated_at": "2017-08-28T16:42:32Z"
    },
    {
      "author": "janegilring",
      "author_association": "NONE",
      "body": "Sorry, this was a user error from my side.\r\nIt turns out the problematic code was present in 2 different profile files - Microsoft.PowerShell_profile.ps1 and profile.ps1.\r\n\r\nAnyway, thanks for the tip regarding keypresses.",
      "created_at": "2017-08-28T19:50:38Z",
      "updated_at": "2017-08-28T19:50:38Z"
    }
  ],
  "created_at": "2017-08-27T20:30:04Z",
  "labels": [
    "Issue-Question",
    "Resolution-Answered"
  ],
  "number": 4685,
  "state": "closed",
  "title": "PowerShell Core - profile issue",
  "updated_at": "2017-08-28T19:50:38Z"
}