{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15257",
  "author": "MartinGC94",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nMakes tab completion respect validateset values for parameters with an enum type.\r\n```\r\nfunction foo\r\n{\r\n    param\r\n    (\r\n        [ValidateSet('DarkBlue','DarkCyan')]\r\n        [ConsoleColor]$Color\r\n    )\r\n}\r\n#Tab completion only cycles through DarkBlue and DarkCyan\r\nfoo <Tab>\r\n```\r\n\r\n## PR Context\r\n\r\nThe completion for variables already work this way and Powershell does allow you to use ValidateSet to limit valid enums so this is just a fix for the parameter completion.\r\n\r\n## PR Checklist\r\n\r\n- [X] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [X] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [X] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [X] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [X] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [X] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and opened an issue in the relevant tool repository. This may include:\r\n        - [ ] Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode\r\n        (which runs in a different PS Host).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n",
  "closed_at": "2022-03-23T19:38:06Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "What if implement this as filter over enum values? I mean get enum values and filter out them with values from ValidateSet?\r\nThis also protects from typos in ValidateSet values.\r\n\r\n\r\n@mklement0 Are there such scenarios where we could use ValidateSet as follow filter after another source of values?",
      "created_at": "2021-04-17T15:31:40Z",
      "updated_at": "2021-04-17T15:31:40Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "I'm not sure we need more sophistication here, as it probably isn't that common a scenario.\r\n\r\nNo other value sources where filtering based on explicitly enumerated _constants_ - which is the prerequisite for taking effect for _tab-completion_ - come to mind.\r\n\r\nThe typo problem can be avoided if you use the enum type explicitly, but it's obviously more effort to type:\r\n\r\n```powershell\r\n# A typo here would be flagged in Visual Studio Code and would cause a *parse*-time error when invoked.\r\n[ValidateSet([ConsoleColor]::DarkBlue, [ConsoleColor]::DarkCyan)]\r\n```\r\n\r\nHowever, if you use _strings_, you won't see the problem until runtime, _situationally_, namely only if you happen to pass as value with a typo.\r\n\r\nAgain, given the use case, I personally think it's fine to make this the command author's responsibility.\r\n\r\nOn a related note, the ability to rule out specifying _multiple_ values for a flag-based enumeration via a dedicated attribute would be handy  - see @SeeminglyScience's suggestions [here](https://github.com/PowerShell/PowerShell/issues/15058#issuecomment-802163293).\r\n\r\n\r\n\r\n",
      "created_at": "2021-04-17T15:58:40Z",
      "updated_at": "2021-04-17T15:58:40Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "What if we use ValidateScript in the scenario?",
      "created_at": "2021-04-18T10:26:11Z",
      "updated_at": "2021-04-18T10:26:11Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "ValidateScript doesn't provide any tab completion, so I'm not really sure how it's relevant here.",
      "created_at": "2021-04-18T15:01:43Z",
      "updated_at": "2021-04-18T15:01:43Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> ValidateScript doesn't provide any tab completion, so I'm not really sure how it's relevant here.\r\n\r\nMy question is about using it as a filter.",
      "created_at": "2021-04-18T17:24:22Z",
      "updated_at": "2021-04-18T17:24:22Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "I mean yeah, you can use it as a filter for the enum values as they're passed into the function, but it doesn't have any real advantages over using ValidateSet. You also still can't use it to filter out autocompletion options, which seems to be the point of the PR here.",
      "created_at": "2021-04-18T17:34:28Z",
      "updated_at": "2021-04-18T17:34:28Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> but it doesn't have any real advantages over using ValidateSet.\r\n\r\nWhat if a parameter gets a list of VMs from Cloud but want only stopped ones?",
      "created_at": "2021-04-18T17:39:13Z",
      "updated_at": "2021-04-18T17:39:13Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov, in that case you'd use a [`System.Management.Automation.ArgumentCompleterAttribute`](https://docs.microsoft.com/en-US/dotnet/api/System.Management.Automation.ArgumentCompleterAttribute) attribute.",
      "created_at": "2021-04-18T17:50:05Z",
      "updated_at": "2021-04-18T17:50:05Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> @iSazonov, in that case you'd use a [`System.Management.Automation.ArgumentCompleterAttribute`](https://docs.microsoft.com/en-US/dotnet/api/System.Management.Automation.ArgumentCompleterAttribute) attribute.\r\n\r\nThen it is a binary attribute and you write a script? :-)",
      "created_at": "2021-04-18T18:01:31Z",
      "updated_at": "2021-04-18T18:01:31Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "It's usable in PowerShell code too; e.g.:\r\n\r\n```powershell\r\nfunction foo {\r\n  [cmdletbinding()]\r\n  param(\r\n    [ArgumentCompleter({ param($cmd, $param, $wordToComplete) 'Unix', 'Win32NT' -like \"$wordToComplete*\" })]\r\n    $Platform\r\n  )\r\n  [System.PlatformID] $Platform\r\n}\r\n```\r\n\r\nIncidentally, this highlights that the `[ArgumentCompleter()]` attribute too should probably take precedence over the `enum` values: if you define the `$Platform` parameter as  `[System.PlatformID] $Platform`, the `enum` values currently take precedence.",
      "created_at": "2021-04-18T18:24:36Z",
      "updated_at": "2021-04-18T18:25:05Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2021-04-26T02:00:08Z",
      "updated_at": "2021-04-26T02:00:08Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as stale because it has been marked as requiring author feedback but has not had any activity for **15 days**. It will be closed if no further activity occurs **within 10 days of this comment**.",
      "created_at": "2021-07-27T20:00:35Z",
      "updated_at": "2021-07-27T20:00:35Z"
    },
    {
      "author": "MartinGC94",
      "author_association": "CONTRIBUTOR",
      "body": "Why has this been marked as \"Waiting on Author\"? What do I need to do?",
      "created_at": "2021-07-28T04:52:20Z",
      "updated_at": "2021-07-28T04:52:20Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2021-08-04T14:00:40Z",
      "updated_at": "2021-08-04T14:00:40Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "I would like to get @daxian-dbw  to review this before merging.",
      "created_at": "2021-08-05T23:24:20Z",
      "updated_at": "2021-08-05T23:24:20Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2021-08-13T02:00:40Z",
      "updated_at": "2021-08-13T02:00:40Z"
    },
    {
      "author": "pull-request-quantifier[bot]",
      "author_association": "NONE",
      "body": "### ![](https://img.shields.io/static/v1?label=Quantified&message=Small&color=green)\r\n\r\nThis PR has `72` quantified lines of changes. In general, a change size of upto `200` lines is ideal for the best PR experience!\r\n\r\n------\r\n\r\n<details >\r\n    <summary display=\"inline\"> <strong>Quantification details</strong></summary>\r\n    <p />\r\n\r\n```\r\nLabel      : Small\r\nSize       : +40 -32\r\nPercentile : 28.8%\r\n\r\nTotal files changed: 2\r\n\r\nChange summary by file extension:\r\n.cs : +33 -32\r\n.ps1 : +7 -0\r\n```\r\n> Change counts above are quantified counts, based on the [PullRequestQuantifier customizations](https://github.com/microsoft/PullRequestQuantifier/blob/main/docs/prquantifier-yaml.md).\r\n    \r\n</details>\r\n\r\n\r\n<details>\r\n    <summary display=\"inline\"> <strong>Why proper sizing of changes matters</strong> </summary>\r\n    <p/>\r\n    <p/>\r\n\r\nOptimal pull request sizes drive a better predictable PR flow as they strike a\r\nbalance between between PR complexity and PR review overhead. PRs within the\r\noptimal size (typical small, or medium sized PRs) mean:\r\n\r\n- Fast and predictable releases to production:\r\n  - Optimal size changes are more likely to be reviewed faster with fewer\r\niterations.\r\n  - Similarity in low PR complexity drives similar review times.\r\n- Review quality is likely higher as complexity is lower:\r\n  - Bugs are more likely to be detected.\r\n  - Code inconsistencies are more likely to be detetcted.\r\n- Knowledge sharing is improved within the participants:\r\n  - Small portions can be assimilated better.\r\n- Better engineering practices are exercised:\r\n  - Solving big problems by dividing them in well contained, smaller problems.\r\n  - Exercising separation of concerns within the code changes.\r\n\r\n#### What can I do to optimize my changes\r\n\r\n- Use the PullRequestQuantifier to quantify your PR accurately\r\n  - Create a context profile for your repo using the [context generator](https://github.com/microsoft/PullRequestQuantifier/releases)\r\n  - Exclude files that are not necessary to be reviewed or do not increase the review complexity. Example: Autogenerated code, docs, project IDE setting files, binaries, etc. Check out the `Excluded` section from your `prquantifier.yaml` context profile. \r\n  - Understand your typical change complexity, drive towards the desired complexity by adjusting the label mapping in your `prquantifier.yaml` context profile.\r\n  - Only use the labels that matter to you, [see context specification](./docs/prquantifier-yaml.md) to customize your `prquantifier.yaml` context profile.\r\n- Change your engineering behaviors\r\n  - For PRs that fall outside of the desired spectrum, review the details and check if:\r\n    - Your PR could be split in smaller, self-contained PRs instead\r\n    - Your PR only solves one particular issue. (For example, don't refactor and code new features in the same PR).\r\n\r\n#### How to interpret the change counts in git diff output\r\n\r\n- One line was added: `+1 -0`\r\n- One line was deleted: `+0 -1`\r\n- One line was modified: `+1 -1` (git diff doesn't know about modified, it will\r\ninterpret that line like one addition plus one deletion)\r\n- Change percentiles: Change characteristics (addition, deletion, modification)\r\nof this PR in relation to all other PRs within the repository.\r\n\r\n</details>\r\n\r\n<p />\r\n\r\n------\r\n\r\nWas this comment helpful? <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoiTWFydGluR0M5NCIsIlJlcG9zaXRvcnlMaW5rIjoiaHR0cHM6Ly9naXRodWIuY29tL1Bvd2VyU2hlbGwvUG93ZXJTaGVsbCIsIlB1bGxSZXF1ZXN0TGluayI6Imh0dHBzOi8vZ2l0aHViLmNvbS9Qb3dlclNoZWxsL1Bvd2VyU2hlbGwvcHVsbC8xNTI1NyIsIkV2ZW50VHlwZSI6IlRodW1ic1VwIn0=&amp;anonymous=True\" target=\"_blank\" title=\"Thumbs up\"><strong>:thumbsup:</strong></a> <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoiTWFydGluR0M5NCIsIlJlcG9zaXRvcnlMaW5rIjoiaHR0cHM6Ly9naXRodWIuY29tL1Bvd2VyU2hlbGwvUG93ZXJTaGVsbCIsIlB1bGxSZXF1ZXN0TGluayI6Imh0dHBzOi8vZ2l0aHViLmNvbS9Qb3dlclNoZWxsL1Bvd2VyU2hlbGwvcHVsbC8xNTI1NyIsIkV2ZW50VHlwZSI6Ik5ldXRyYWwifQ==&amp;anonymous=True\" target=\"_blank\" title=\"Neutral\"><strong>&nbsp;:ok_hand:</strong></a> <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoiTWFydGluR0M5NCIsIlJlcG9zaXRvcnlMaW5rIjoiaHR0cHM6Ly9naXRodWIuY29tL1Bvd2VyU2hlbGwvUG93ZXJTaGVsbCIsIlB1bGxSZXF1ZXN0TGluayI6Imh0dHBzOi8vZ2l0aHViLmNvbS9Qb3dlclNoZWxsL1Bvd2VyU2hlbGwvcHVsbC8xNTI1NyIsIkV2ZW50VHlwZSI6IlRodW1ic0Rvd24ifQ==&amp;anonymous=True\" target=\"_blank\" title=\"Thumbs down\"><strong>&nbsp;:thumbsdown:</strong></a> (<a href=\"MAILTO:prquantifier@microsoft.com\" title=\"Mail to prquantifier@microsoft.com\">Email</a>)\r\n[Customize PullRequestQuantifier](https://github.com/PowerShell/PowerShell/blob/master/.github/prquantifier.yaml) for this repository.\r\n\r\n",
      "created_at": "2022-03-23T17:48:03Z",
      "updated_at": "2022-03-23T17:48:03Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.3.0-preview.4` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.3.0-preview.4)\n",
      "created_at": "2022-05-23T16:21:14Z",
      "updated_at": "2022-05-23T16:21:14Z"
    }
  ],
  "created_at": "2021-04-17T12:21:17Z",
  "number": 15257,
  "state": "closed",
  "title": "Prioritize validateset completions over Enums for parameters.",
  "updated_at": "2022-06-05T08:27:56Z"
}