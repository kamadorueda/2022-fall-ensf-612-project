{
  "_url": "https://github.com/PowerShell/PowerShell/issues/2881",
  "author": "DarwinJS",
  "body": "One or more of the below may be due to the WIX framework not following MSI best practices and conventions - I'm not sure.\r\n\r\n**The MSI package uninstall does not clean up the start menu folder and shortcut that were created.**\r\n(e.g. \"C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\PowerShell_6.0.0.13\\PowerShell_6.0.0.13.lnk\")\r\n\r\nThis may be because the package breaks an MSI validation rule (ICE67: https://msdn.microsoft.com/en-us/library/windows/desktop/aa369017(v=vs.85).aspx) that all shortcuts should be defined in the same component as the EXE they point to (their \"target\").  As authored, the shortcut has a dedicated component instead with a dedicated registry keypath just so that the component will work properly.  When done in a compliant way, MSI knows to remove the shortcut when the EXE is removed.  This should also prevent you from having to include an ICO file for the shortcut as the icon will be pulled from the target EXE.\r\n\r\n**It also does not clean up the empty version folder.  (e.g. \"C:\\Program Files\\PowerShell\\6.0.0.13\")**\r\nIn this case I believe this is because you have this folder in the \"CreateFolder\" table and you should not.  MSI implicitly creates folders whenever a component targeted for the folder is selected.  The component reference count is also how it knows when to remove the folder.  There does appear to be a correlating \"RemoveFile\" table entry - but for whatever reason it is not taking effect.  It is possible this is an artifact of using WIX as it may be doing this in error or for handling edge cases.\r\n\r\nThere is not a validation rule for this - it is just a convention of how MSI works.  The valid use case for CreateFolder should be for creating empty folders for which the package will never have a component destined to - for example a data folder in Documents.\r\n",
  "closed_at": "2018-08-29T21:50:13Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@DarwinJS Could you please update/close/renew the issue ?",
      "created_at": "2018-08-29T14:25:22Z",
      "updated_at": "2018-08-29T14:25:22Z"
    }
  ],
  "created_at": "2016-12-14T13:25:50Z",
  "labels": [
    "Area-Maintainers-Build",
    "Resolution-Fixed"
  ],
  "number": 2881,
  "state": "closed",
  "title": "MSI Package Uninstall Does not Cleanup Some Things Due to Non-Compliance with MSI Best Practices and Conventions",
  "updated_at": "2018-08-30T03:37:16Z"
}