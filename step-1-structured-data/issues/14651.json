{
  "_url": "https://github.com/PowerShell/PowerShell/issues/14651",
  "author": "JustinGrote",
  "body": "## Summary of the new feature/enhancement\r\n\r\nAlmost every one of my scripts/modules starts with `using namespace system.collections.generic` for the use of the List and Dictionary types in order to have strongly typed and performant versions of these to help avoid type and casting mistakes.\r\n\r\nSince `System` is already implicitly included in the namespace, there is precedence for this.\r\n\r\nI understand this may open the floodgates of \"well what about this generic namespace too?\" but I think this is a reasonable \"base\" to include to allow for the very common collection and dictionary formats we are \"supposed\" to use instead of arraylist and hashtable since .NET 2.0, even though powershell still natively uses those for compatibility reasons.\r\n\r\nThe only potential breaking change I could see here is a collision with a custom defined name type, but even then powershell class names like `List` would take precedence and override the implicit definition.\r\n\r\n## Proposed technical implementation details (optional)\r\n\r\nHave System.Collections.Generic added as a `using namespace` by default.\r\n\r\nAlternatively register [list] and [dictionary] as new type accelerators, however the \"easy\" way of doing this in userspace was made private a while ago.\r\n\r\nRelated to but not a dupe of #10862, it is simpler in scope.",
  "closed_at": "2022-01-22T22:00:45Z",
  "comments": [
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "WG-Engine discussed this today.\r\n\r\nWhile this issue with adding `using namespace System.Collections.Generic` is a sore point for you, for others the sore point may be with the `System.Diagnostics` or `System.Management.Automation.*` or `System.Linq` namespaces.  Any additional types we add automatically, increase the odds of a type name collision.  So, adding the requested namespace automatically would likely require a way to disable (not add) the namespace (automatically).  And there are also runtime costs associated with adding more types from more namespaces.  \r\n\r\nThe team feels that the current mechanism i.e., `using namespace <some.namespace>` is sufficient - providing a way to access the types that each individual scripter is interested in using without having to supply fully qualified type names.",
      "created_at": "2022-01-21T01:05:44Z",
      "updated_at": "2022-01-21T01:05:44Z"
    },
    {
      "author": "JustinGrote",
      "author_association": "CONTRIBUTOR",
      "body": "@rkeithhill understood, I added my justification to assuage these concerns but I respect the team's decision. One can make the same argument about the type accelerators present, and yet we have them :)",
      "created_at": "2022-01-21T16:36:52Z",
      "updated_at": "2022-01-21T16:37:09Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as declined and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2022-01-22T22:00:44Z",
      "updated_at": "2022-01-22T22:00:44Z"
    }
  ],
  "created_at": "2021-01-22T16:41:01Z",
  "number": 14651,
  "state": "closed",
  "title": "Feature Request: Consider including System.Collections.Generic namespace by default",
  "updated_at": "2022-01-22T22:00:45Z"
}