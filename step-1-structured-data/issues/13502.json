{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13502",
  "author": "xtqqczze",
  "body": "# PR Summary\r\n\r\nAvoid some signed/unsigned conversions.\r\n\r\n## PR Context\r\n\r\n`PDH_STATUS`error codes can be handled with `UInt32`\r\n\r\nhttps://docs.microsoft.com/en-us/windows/win32/perfctrs/pdh-error-codes\r\n\r\nFollow-up: #13141\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [NA] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [NA] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [NA] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [NA] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [NA] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [NA] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2020-08-27T17:27:25Z",
  "comments": [
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "> According to the [`FormatMessage` API docs](https://docs.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-formatmessage), the PDH error code values are of type `DWORD`, which the [marshalling docs](https://docs.microsoft.com/en-us/dotnet/framework/interop/marshaling-data-with-platform-invoke#platform-invoke-data-types) say should be rendered as `uint`. So this changes makes sense to me\r\n\r\nYeah.  The original author probably looked at `PdhMsg.h` and saw that the constants were suffixed with `L`.  Really easy mistake to make, it's not super intuitive that `long` translates to `Int32` and `long long` is what translates to `Int64`.  Especially since that's only Windows (see [64-bit data models](https://en.wikipedia.org/wiki/64-bit_computing#64-bit_data_models)).",
      "created_at": "2020-08-24T18:41:46Z",
      "updated_at": "2020-08-24T18:41:46Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.1.0-preview.7` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.1.0-preview.7)\n",
      "created_at": "2020-09-08T22:50:34Z",
      "updated_at": "2020-09-08T22:50:34Z"
    }
  ],
  "created_at": "2020-08-22T15:50:08Z",
  "number": 13502,
  "state": "closed",
  "title": "Use uint instead of long for PDH constants",
  "updated_at": "2020-09-08T22:50:34Z"
}