{
  "_url": "https://github.com/PowerShell/PowerShell/issues/8204",
  "author": "bergmeister",
  "body": "This issue started only in the last few days using the daily build and does not happen with `6.1` or `6.1-preview`.\r\nCalling `Import-Module` on a module that declares `RequiredModules = @('C:\\full\\path\\to\\manifest.psd1')`, causes loading of it to fail. A specific example of such a manifest is [here](https://github.com/bergmeister/posh-profile/blob/master/source/posh-profile.psd1) but even if I change it to just one dependent module with a full path, it still happens, therefore I think the issue is generic to any manifest. with `RequiredModules`\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\nImport-Module $PathToManifestThatDeclaresRequiredModules\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\nImports dependent modules\r\n\r\nActual behavior\r\n---------------\r\n\r\nThrows because it fails to import dependent modules.\r\n```\r\nImport-Module : The required module 'C:\\Users\\cberg\\git\\posh-profile\\source\\dotnetCli\\dotnetCli.psd1' is not loaded. Load the module or remove the module from 'RequiredModules' in the file 'C:\\Users\\cberg\\git\\posh-profile\\source\\posh-profile.psd1'.\r\n```\r\nLoading the dependent module works fine but an `Import-Module` of the main module fails again with the same error\r\n\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.2.0-preview.864\r\nPSEdition                      Core\r\nGitCommitId                    6.2.0-preview.864\r\nOS                             Microsoft Windows 10.0.17134\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```",
  "closed_at": "2018-11-13T22:56:08Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@TravisEz13 @rjmholt Could you please look the issue?",
      "created_at": "2018-11-09T04:20:57Z",
      "updated_at": "2018-11-09T04:20:57Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "The error occurs here:\r\nhttps://github.com/PowerShell/PowerShell/blob/4118fd2829cb1a0a64005bd5b84e08ca7ea354e2/src/System.Management.Automation/engine/Modules/ModuleCmdletBase.cs#L3717\r\n\r\nAfter my changes there, the assumption is made that the module name for a module after it's loaded is the same as if we find it. However, we are given the module path and compare it to just the name.\r\n\r\nI'll prepare a PR and some testing around this.\r\n\r\n@adityapatwardhan, @TravisEz13 hopefully I can have a fix for you within the day.",
      "created_at": "2018-11-09T06:10:29Z",
      "updated_at": "2018-11-09T06:10:29Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "I'm currently confused by the fact that the module name is obtained the same way as it always was:\r\nhttps://github.com/PowerShell/PowerShell/blob/e888e5109785871af09df22d30f87bc8b375502c/src/System.Management.Automation/engine/Modules/ModuleCmdletBase.cs#L3661-L3667\r\n\r\nAnd the comparison logic is the same too.\r\n\r\nSo I need to work out why we are now getting a path rather than a name.",
      "created_at": "2018-11-09T06:22:33Z",
      "updated_at": "2018-11-09T06:22:33Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "Ok, so it turns out we've always failed that first check (even if the module is already loaded, we still end up calling `Get-Module -ListAvailable`).\r\n\r\nThe fix lay in not checking the name when we actually load the required module.\r\n\r\nI have a quick fix available in the PR linked above.\r\n\r\nHowever, with more time I'd like to write out tests for this and then fix it properly.",
      "created_at": "2018-11-09T06:41:35Z",
      "updated_at": "2018-11-09T06:41:35Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@rjmholt \t when was this introduced?  Can you include a link to the commit?",
      "created_at": "2018-11-09T19:55:04Z",
      "updated_at": "2018-11-09T19:55:20Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "https://github.com/PowerShell/PowerShell/commit/5d06fba36662c17df32805f73d174f514e822191",
      "created_at": "2018-11-09T19:58:41Z",
      "updated_at": "2018-11-09T19:58:41Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "Thanks",
      "created_at": "2018-11-09T21:15:52Z",
      "updated_at": "2018-11-09T21:15:52Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "@rjmholt Thanks, I appreciate your hard work in the last days, I can confirm that your PR #8218 has fixed the issue for me in the latest nightly build (`6.2.0-preview.876`)",
      "created_at": "2018-11-14T18:26:32Z",
      "updated_at": "2018-11-14T18:26:32Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "@bergmeister Happy to help -- I broke it, so I'm glad I was able to fix it. Thanks for letting me know it's working",
      "created_at": "2018-11-14T19:30:49Z",
      "updated_at": "2018-11-14T19:30:49Z"
    }
  ],
  "created_at": "2018-11-07T23:16:36Z",
  "labels": [
    "Issue-Bug",
    "Resolution-Fixed",
    "WG-Cmdlets-Core"
  ],
  "number": 8204,
  "state": "closed",
  "title": "RequiredModules manifest property stopped working recently (noticed in daily build)",
  "updated_at": "2018-11-14T19:30:49Z"
}