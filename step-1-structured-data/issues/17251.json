{
  "_url": "https://github.com/PowerShell/PowerShell/issues/17251",
  "author": "daxian-dbw",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nFix #16700\r\n\r\nFix formatting truncation to handle strings with VT sequences.\r\nThe main changes are in buffer cell length calculation, as well as adding `VtSubstring` implementations, which are used to get part of a string that may contain escape sequences.\r\n\r\nWith the changes in this PR, the formatting works fine with the demo scripts from https://github.com/PowerShell/PowerShell/issues/16700#issuecomment-1103474523 and https://github.com/PowerShell/PowerShell/issues/16700#issuecomment-1103486148:\r\n\r\n```pwsh\r\nfunction Get-DemoObjects {\r\n    [PSCustomObject]@{PSTypeName = \"User\"; Name = \"Bob Saggat\"; Tenure = 2; Role = \"Developer\" }\r\n    [PSCustomObject]@{PSTypeName = \"User\"; Name = \"John Seymour\"; Tenure = 6; Role = \"Sw Engineer\" }\r\n    [PSCustomObject]@{PSTypeName = \"User\"; Name = \"Billy Bob Thorton\"; Tenure = 13; Role = \"Senior DevOps Engineer\" }\r\n}\r\n\r\nGet-DemoObjects |\r\n    Format-Table @{Width = 10; Name = \"Name\"; E = { (@(\"`e[32m\", \"`e[34m\", \"`e[33m\", \"`e[31m\", \"`e[33m\", \"`e[34m\", \"`e[32m\")[[array]::BinarySearch(@(3, 5, 8), $_.Tenure)]) + $_.Name + \"`e[39m\"}},\r\n                 @{Width = 15; Name = \"Role\";  E = { $_.Role }}, \r\n                 @{Width = 3; Name = \"YIR\";  E = { $_.Tenure }}\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/127450/166813836-18762c3c-1d44-4988-9282-67933c2d84d8.png)\r\n\r\n```pwsh\r\nGet-DemoObjects |\r\n    Format-Table @{Width = 10; Name = \"Name\"; E = { (@(\"`e[32m\", \"`e[34m\", \"`e[33m\", \"`e[31m\", \"`e[33m\", \"`e[34m\", \"`e[32m\")[[array]::BinarySearch(@(3, 5, 8), $_.Tenure)]) + $_.Name + \"`e[39m\"}},\r\n                 @{Width = 15; Name = \"Role\";  E = {\r\n                                -join $(switch -regex ($_.Role){\r\n                                        \"Senior\" { \"`e[42m\" }\r\n                                        \"Engineer\" { \"`e[1;33m\" }\r\n                                    }) + $_.Role  + \"`e[0m\"}}, \r\n                 @{Width = 3; Name = \"YIR\";  E = { $_.Tenure }}\r\n```\r\n![image](https://user-images.githubusercontent.com/127450/166813920-7bb444a5-bfbd-482b-9f72-2c01493e02c9.png)\r\n\r\n```pwsh\r\n$PSStyle.OutputRendering = \"Ansi\"\r\n(Get-DemoObjects) + (Get-DemoObjects) + \r\n(Get-DemoObjects) + (Get-DemoObjects) + \r\n(Get-DemoObjects) + (Get-DemoObjects) | \r\n    Format-Wide @{E = { (@(\"`e[32m\", \"`e[34m\", \"`e[33m\", \"`e[31m\", \"`e[33m\", \"`e[34m\", \"`e[32m\")[[array]::BinarySearch(@(3, 5, 8), $_.Tenure)]) + $_.Name + \"`e[39m\"}} -co 2 | Out-String -Width 47\r\n```\r\n![image](https://user-images.githubusercontent.com/127450/166814126-e2252eb8-133b-4570-87bf-104e4ab8f1c9.png)\r\n\r\n```pwsh\r\nGet-DemoObjects | Format-Table @{Width = 10; Name = \"Name\"; E = { \"`e[33m\" + $_.Name } }, \r\n                               @{Width = 15; Name = \"Role\"; E = { $_.Role }},\r\n                               @{Width = 3;  Name = \"YIR\";  E = { $_.Tenure }}\r\n\r\nGet-DemoObjects | Format-Table @{Width = 10; Name = \"Name\"; E = { \"`e[1;33m\" + $_.Name } }, \r\n                               @{Width = 15; Name = \"Role\"; E = { $_.Role }},\r\n                               @{Width = 3;  Name = \"YIR\";  E = { $_.Tenure }}\r\n```\r\n![image](https://user-images.githubusercontent.com/127450/166814208-f780f670-e9e8-4190-ba40-4c588975de62.png)\r\n\r\nUsing the repro provided in https://github.com/PowerShell/PowerShell/issues/16700#issue-1093826191, now the formatting truncation and alignment work as expected:\r\n\r\n![image](https://user-images.githubusercontent.com/127450/166814640-75b3735f-7869-4b58-924a-5ce543f13276.png)\r\n\r\n`Out-String` works as well:\r\n\r\n![image](https://user-images.githubusercontent.com/127450/166980934-8f1b235b-86ab-4420-9c9d-0a17c5be5b55.png)\r\n\r\n\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n",
  "closed_at": "2022-05-06T18:40:34Z",
  "comments": [
    {
      "author": "pull-request-quantifier[bot]",
      "author_association": "NONE",
      "body": "### ![](https://img.shields.io/static/v1?label=Quantified&message=Large&color=red)\r\n\r\nThis PR has `351` quantified lines of changes. In general, a change size of upto `200` lines is ideal for the best PR experience!\r\n\r\n------\r\n\r\n<details >\r\n    <summary display=\"inline\"> <strong>Quantification details</strong></summary>\r\n    <p />\r\n\r\n```\r\nLabel      : Large\r\nSize       : +232 -119\r\nPercentile : 75.1%\r\n\r\nTotal files changed: 10\r\n\r\nChange summary by file extension:\r\n.cs : +150 -118\r\n.ps1 : +81 -0\r\n.json : +1 -1\r\n```\r\n> Change counts above are quantified counts, based on the [PullRequestQuantifier customizations](https://github.com/microsoft/PullRequestQuantifier/blob/main/docs/prquantifier-yaml.md).\r\n    \r\n</details>\r\n\r\n\r\n<details>\r\n    <summary display=\"inline\"> <strong>Why proper sizing of changes matters</strong> </summary>\r\n    <p/>\r\n    <p/>\r\n\r\nOptimal pull request sizes drive a better predictable PR flow as they strike a\r\nbalance between between PR complexity and PR review overhead. PRs within the\r\noptimal size (typical small, or medium sized PRs) mean:\r\n\r\n- Fast and predictable releases to production:\r\n  - Optimal size changes are more likely to be reviewed faster with fewer\r\niterations.\r\n  - Similarity in low PR complexity drives similar review times.\r\n- Review quality is likely higher as complexity is lower:\r\n  - Bugs are more likely to be detected.\r\n  - Code inconsistencies are more likely to be detetcted.\r\n- Knowledge sharing is improved within the participants:\r\n  - Small portions can be assimilated better.\r\n- Better engineering practices are exercised:\r\n  - Solving big problems by dividing them in well contained, smaller problems.\r\n  - Exercising separation of concerns within the code changes.\r\n\r\n#### What can I do to optimize my changes\r\n\r\n- Use the PullRequestQuantifier to quantify your PR accurately\r\n  - Create a context profile for your repo using the [context generator](https://github.com/microsoft/PullRequestQuantifier/releases)\r\n  - Exclude files that are not necessary to be reviewed or do not increase the review complexity. Example: Autogenerated code, docs, project IDE setting files, binaries, etc. Check out the `Excluded` section from your `prquantifier.yaml` context profile. \r\n  - Understand your typical change complexity, drive towards the desired complexity by adjusting the label mapping in your `prquantifier.yaml` context profile.\r\n  - Only use the labels that matter to you, [see context specification](./docs/prquantifier-yaml.md) to customize your `prquantifier.yaml` context profile.\r\n- Change your engineering behaviors\r\n  - For PRs that fall outside of the desired spectrum, review the details and check if:\r\n    - Your PR could be split in smaller, self-contained PRs instead\r\n    - Your PR only solves one particular issue. (For example, don't refactor and code new features in the same PR).\r\n\r\n#### How to interpret the change counts in git diff output\r\n\r\n- One line was added: `+1 -0`\r\n- One line was deleted: `+0 -1`\r\n- One line was modified: `+1 -1` (git diff doesn't know about modified, it will\r\ninterpret that line like one addition plus one deletion)\r\n- Change percentiles: Change characteristics (addition, deletion, modification)\r\nof this PR in relation to all other PRs within the repository.\r\n\r\n</details>\r\n\r\n<p />\r\n\r\n------\r\n\r\nWas this comment helpful? <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoiZGF4aWFuLWRidyIsIlJlcG9zaXRvcnlMaW5rIjoiaHR0cHM6Ly9naXRodWIuY29tL1Bvd2VyU2hlbGwvUG93ZXJTaGVsbCIsIlB1bGxSZXF1ZXN0TGluayI6Imh0dHBzOi8vZ2l0aHViLmNvbS9Qb3dlclNoZWxsL1Bvd2VyU2hlbGwvcHVsbC8xNzI1MSIsIkV2ZW50VHlwZSI6IlRodW1ic1VwIn0=&amp;anonymous=True\" target=\"_blank\" title=\"Thumbs up\"><strong>:thumbsup:</strong></a> <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoiZGF4aWFuLWRidyIsIlJlcG9zaXRvcnlMaW5rIjoiaHR0cHM6Ly9naXRodWIuY29tL1Bvd2VyU2hlbGwvUG93ZXJTaGVsbCIsIlB1bGxSZXF1ZXN0TGluayI6Imh0dHBzOi8vZ2l0aHViLmNvbS9Qb3dlclNoZWxsL1Bvd2VyU2hlbGwvcHVsbC8xNzI1MSIsIkV2ZW50VHlwZSI6Ik5ldXRyYWwifQ==&amp;anonymous=True\" target=\"_blank\" title=\"Neutral\"><strong>&nbsp;:ok_hand:</strong></a> <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoiZGF4aWFuLWRidyIsIlJlcG9zaXRvcnlMaW5rIjoiaHR0cHM6Ly9naXRodWIuY29tL1Bvd2VyU2hlbGwvUG93ZXJTaGVsbCIsIlB1bGxSZXF1ZXN0TGluayI6Imh0dHBzOi8vZ2l0aHViLmNvbS9Qb3dlclNoZWxsL1Bvd2VyU2hlbGwvcHVsbC8xNzI1MSIsIkV2ZW50VHlwZSI6IlRodW1ic0Rvd24ifQ==&amp;anonymous=True\" target=\"_blank\" title=\"Thumbs down\"><strong>&nbsp;:thumbsdown:</strong></a> (<a href=\"MAILTO:prquantifier@microsoft.com\" title=\"Mail to prquantifier@microsoft.com\">Email</a>)\r\n[Customize PullRequestQuantifier](https://github.com/PowerShell/PowerShell/blob/master/.github/prquantifier.yaml) for this repository.\r\n\r\n",
      "created_at": "2022-05-04T18:48:09Z",
      "updated_at": "2022-05-04T18:48:09Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.3.0-preview.4` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.3.0-preview.4)\n",
      "created_at": "2022-05-23T16:22:11Z",
      "updated_at": "2022-05-23T16:22:11Z"
    }
  ],
  "created_at": "2022-05-04T01:10:42Z",
  "number": 17251,
  "state": "closed",
  "title": "Fix formatting truncation to handle strings with VT sequences",
  "updated_at": "2022-05-23T16:22:11Z"
}