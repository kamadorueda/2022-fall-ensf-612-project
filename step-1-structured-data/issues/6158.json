{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6158",
  "author": "constantinhager",
  "body": "\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\n\r\nclass Rock {\r\n    [string]$Color\r\n    [string]$Luster\r\n    [string]$Shape\r\n    [string]$Texture\r\n    [string]$Pattern\r\n    [string]$Size\r\n    [int]$Location   \r\n    }\r\n\r\n$rock = [rock]::New()\r\n$rock.Color = 1\r\n\r\n```\r\n\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```none\r\nError Message that Color is of Type String and not of type int\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n```none\r\nColor    : 1\r\nLuster   :\r\nShape    :\r\nTexture  :\r\nPattern  :\r\nSize     :\r\nLocation : 0\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.1\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.1\r\nOS                             Microsoft Windows 10.0.17093\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n\r\n```\r\n\r\nAdditional Information\r\n----------------\r\nIf I try to set the Location Variable with a string, It does the right thing.\r\n\r\n```powershell\r\nclass Rock {\r\n    [string]$Color\r\n    [string]$Luster\r\n    [string]$Shape\r\n    [string]$Texture\r\n    [string]$Pattern\r\n    [string]$Size\r\n    [int]$Location   \r\n    }\r\n\r\n$rock = [rock]::New()\r\n$rock.Location = \"Test\"\r\n```\r\n\r\nError Message:\r\n```powershell\r\nException setting \"Location\": \"Cannot convert value \"Test\" to type \"System.Int32\". Error: \"Input string was not in a correct format.\"\"\r\nAt line:12 char:1\r\n+ $rock.Location = \"Test\"\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : NotSpecified: (:) [], SetValueInvocationException\r\n+ FullyQualifiedErrorId : ExceptionWhenSetting\r\n```\r\n\r\nIs this normal or am I doing something wrong?",
  "closed_at": "2018-02-15T16:52:12Z",
  "comments": [
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "PowerShell is a shell and like many shells it performs some automatic type transformations for the user. \r\n\r\n```powershell\r\n[int]$Int = \"5\"\r\n$Int\r\n[string]$String = 6.00\r\n$string\r\n[string]$String = 6\r\n$string\r\n```\r\n\r\n```none\r\n5\r\n6\r\n6\r\n```\r\n\r\n",
      "created_at": "2018-02-14T22:12:16Z",
      "updated_at": "2018-02-14T22:12:16Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Do we need strict typing in strict mode?",
      "created_at": "2018-02-15T03:52:09Z",
      "updated_at": "2018-02-15T03:52:09Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov I don't thinks so. IMO, the nature of PowerShell is to handle many automatic type conversions. I think any attempt to take that away would just make PowerShell a thin wrapper for .NET. It would look more like Object Oriented Programming and less like command driven shell. the type conversions happen in so many places that users would find an option like that makes PowerShell very foreign. For example, so many parameters Enums and PowerShell handles the String to Enum conversion.\r\n\r\nSo, unless there was some way to limit it to just assignment operations, it wouldn't be a good idea, IMO. But, I'm not sure I see the value of doing it in the first place. ",
      "created_at": "2018-02-15T09:30:11Z",
      "updated_at": "2018-02-15T09:30:11Z"
    },
    {
      "author": "constantinhager",
      "author_association": "NONE",
      "body": "OK. Thank you for the information. In my opinion you can close the issue.",
      "created_at": "2018-02-15T16:52:04Z",
      "updated_at": "2018-02-15T16:52:04Z"
    }
  ],
  "created_at": "2018-02-14T19:29:50Z",
  "labels": [
    "Issue-Question",
    "Resolution-Answered"
  ],
  "number": 6158,
  "state": "closed",
  "title": "PowerShell Classes Typesafe?",
  "updated_at": "2018-02-16T03:02:27Z"
}