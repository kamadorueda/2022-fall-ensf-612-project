{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12745",
  "author": "sba923",
  "body": "Running\r\n\r\n````\r\nGet-ChildItem -LiteralPath <somedir> -Filter 'wontmatchanything*.txt'\r\n````\r\n\r\n(especially when the filter excludes all/most files) is **much** slower in PowerShell 7 than in Windows PowerShell 5.1:\r\n\r\n![image](https://user-images.githubusercontent.com/12860484/82532925-91885800-9b42-11ea-98b4-e5aac4aefa07.png)\r\n\r\nDigging _seems_ to reveal that the .NET Core API (invoked from PowerShell) would be the culprit, but I was unable to repro using raw C#:\r\n\r\n![image](https://user-images.githubusercontent.com/12860484/82533031-cac0c800-9b42-11ea-9ffd-1aabefcccde6.png)\r\n\r\n\r\n\r\n# Steps to reproduce\r\n\r\n- Extract the test harness from [TestHarness.zip](https://github.com/PowerShell/PowerShell/files/4661326/TestHarness.zip)\r\n- edit the `locations.json` file to define the location of one or more test directories\r\n- populate the directories by running `Populate.ps1`\r\n- optionally, add/remove/change testcases by editing the `testcases.json` file\r\n- run `RunTestCampaign.ps1`\r\n\r\nResults are output to `results.csv`.\r\n\r\n# Expected behavior\r\n\r\nThe performance of PowerShell 7 should be higher than Windows PowerShell 5.1, or at least on par with Windows PowerShell 5.1\r\n\r\n# Actual behavior\r\n\r\nPowerShell 7 is way slower\r\n\r\n# Environment data\r\n\r\n```\r\n> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.1\r\nPSEdition                      Core\r\nGitCommitId                    7.0.1\r\nOS                             Microsoft Windows 10.0.18363\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Yellow lines on second screenshot shows that it is .Net Core issue.\r\n\r\nYou could enhance your tests using `enumerationOptions` parameter in `EnumerateFiles(string path, string searchPattern, System.IO.Enume\r\nrationOptions enumerationOptions)` ",
      "created_at": "2020-05-22T05:33:01Z",
      "updated_at": "2020-05-22T05:33:01Z"
    },
    {
      "author": "sba923",
      "author_association": "CONTRIBUTOR",
      "body": "That was also my line of thinking. But I wrote a [C# program](https://github.com/PowerShell/PowerShell/files/4666679/EnumerateFilesPerf.zip) and couldn't show that difference between .NET Framework and .NET Core. Something wrong in that C# repro attempt?\r\n\r\nWhat `enumerationOptions` would you suggest trying?\r\n\r\n",
      "created_at": "2020-05-22T07:34:00Z",
      "updated_at": "2020-05-22T07:34:00Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "You could play with MatchType.\r\n\r\nAs for C#, you should measure with PerfView to see all call stack. Perhaps PowerShell force antivirus API.\r\n\r\nAlso you could use BenchmarkDotNet to get more accurate result for C#.",
      "created_at": "2020-05-22T09:31:31Z",
      "updated_at": "2020-05-22T09:33:32Z"
    },
    {
      "author": "sba923",
      "author_association": "CONTRIBUTOR",
      "body": "`EnumerateFiles(String, String, EnumerationOptions)` is not supported under .NET Framework, so there's not much I can compare there.\r\n\r\nI'm not sure I understand what you want me to profile.\r\n\r\nThe PowerShell test harness clearly reveals a performance difference between 5.1 and 7.0.\r\n\r\nI can't repro a similar performance difference when calling `EnumerateFiles(String, String)` in .NET Framework 4.8 and .NET Core 3.1.\r\n\r\nMaybe I could try using WPR on the PowerShell tests?\r\n\r\n",
      "created_at": "2020-05-22T17:55:49Z",
      "updated_at": "2020-05-22T17:55:49Z"
    },
    {
      "author": "sba923",
      "author_association": "CONTRIBUTOR",
      "body": "If you send me a private message, I can share the WPR capture off my OneDrive.",
      "created_at": "2020-05-22T18:51:04Z",
      "updated_at": "2020-05-22T18:51:04Z"
    }
  ],
  "created_at": "2020-05-21T08:18:49Z",
  "number": 12745,
  "state": "open",
  "title": "\"Get-ChildItem -Filter\" is much slower in PowerShell 7 than in Windows PowerShell 5.1",
  "updated_at": "2021-01-16T13:50:54Z"
}