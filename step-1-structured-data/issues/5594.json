{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5594",
  "author": "BerheAbrha",
  "body": "Steps to reproduce\r\n------------------\r\n1) Create new file catalog for one of the modules in your system (using New-FileCatlog) \r\n2) Run Test-FileCatlog on the catalog created in step 1.\r\n```powershell\r\nNew-FileCatalog -CatalogFilePath \"C:\\Program Files\\WindowsPowerShell\\Modules\\Pester\\3.4.0\\pester.cat\"  -Path \"C:\\Program Files\\WindowsPowerShell\\Modules\\Pester\\3.4.0\"\r\n\r\nTest-FileCatalog \"C:\\Program Files\\WindowsPowerShell\\Modules\\Pester\\3.4.0\\pester.cat\"\r\n\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```none\r\nPS C:\\DSC-tests\\DSC\\Tests\\PullServerClient\\BVT> Test-FileCatalog \"C:\\Program Files\\WindowsPowerShell\\Modules\\Pester\\3.4.0\\pester.cat\" -Detailed\r\n\r\n\r\nStatus        : Valid\r\nHashAlgorithm : SHA1\r\nCatalogItems  : {[Functions\\Coverage.ps1, F4022ABD45FE0FB2C3527A539F022E2AFDF16851], [Functions\\Assertions\\BeGreaterThan.ps1, \r\n                EEE62A89040021D1F3B2B86D8B6C4884AF7C8925], [bin\\Pester.bat, E20AF79E7EC1B2DBA3DF7600C46E9CA613DF1A3C], [Functions\\GlobalMock-A.Tests.ps1, \r\n                DF7F6F009A46AE9386C01A2350741C264FB4163D]...}\r\nPathItems     : {[Build.bat, B4FEDB2F7522EB6EEA68EEA73A095EBA8E441926], [build.psake.ps1, 70DA7E6DF0664C0E791C32C31E14924B779A6938], [CHANGELOG.md, \r\n                86F6D42CC7389E38952ED741BFACE73A2C755119], [chocolateyInstall.ps1, 013A7B468B830C37FA51518E56933ACE54889CCC]...}\r\nSignature     : System.Management.Automation.Signature\r\n\r\n\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n```none\r\nPS C:\\InGuestPolicyx64> Test-FileCatalog \"C:\\Program Files\\WindowsPowerShell\\Modules\\Pester\\3.4.0\\pester.cat\"\r\n\r\n<NO OUTPUT>\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n\r\nPS C:\\InGuestPolicyx64> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.0-beta\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.0-beta.6-dirty\r\nOS                             Microsoft Windows 10.0.16250\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n```\r\n",
  "closed_at": "2017-12-01T18:57:01Z",
  "comments": [
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov  This appears to be caused by #3074. Can you take a look? there appears to be no code path for when `-Path` is not supplied. In 5.1 supplying just `-CatalogFilePath` (position 0)  would use the directory of the catalog file. This is performed in `PerformAction()` which is never reached because `ProcessRecord()` doesn't have any code paths for null `-Path`.",
      "created_at": "2017-12-01T01:55:03Z",
      "updated_at": "2017-12-01T01:55:03Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@BerheAbrha you can work around this by supplying the `-Path` and `-CatalogFilePath`:\r\n\r\nExample:\r\n\r\n```powershell\r\nNew-FileCatalog -CatalogFilePath C:\\temp\\temp.cat -Path C:\\temp\\\r\nTest-FileCatalog -Path C:\\temp\\ -CatalogFilePath C:\\temp\\temp.cat -Detailed\r\n```\r\n\r\nAlso, judging from your PSVersiontable, you are not on the latest version of PS core. However, i was able to repro this for you on\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.0-rc\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.0-rc\r\nOS                             Microsoft Windows 10.0.15063\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```",
      "created_at": "2017-12-01T01:58:02Z",
      "updated_at": "2017-12-01T01:58:02Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "The problem appears to be line 117 was moved inside the `if` statement when it should stay where it was outside of it.  I'll submit a fix.",
      "created_at": "2017-12-01T02:29:21Z",
      "updated_at": "2017-12-01T02:29:21Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "My bad \ud83d\ude15 ",
      "created_at": "2017-12-01T03:02:36Z",
      "updated_at": "2017-12-01T03:02:36Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov no worries, I'm just adding some tests and should have a PR soon",
      "created_at": "2017-12-01T03:06:54Z",
      "updated_at": "2017-12-01T03:06:54Z"
    },
    {
      "author": "BerheAbrha",
      "author_association": "NONE",
      "body": "@markekraus, It does work when the path is supplied to the cmdlet.  But it is regression from WMF 5.1 where path is not required.  This broke signature validation logic in DSC.\r\n\r\n```powershell\r\nPS C:\\InGuestPolicyx64> Test-FileCatalog -CatalogFilePath \"C:\\Program Files\\WindowsPowerShell\\Modules\\Pester\\3.4.0\\peste\r\nr.cat\" -Detailed -Path \"C:\\Program Files\\WindowsPowerShell\\Modules\\Pester\\3.4.0\"\r\n\r\n\r\nStatus        : Valid\r\nHashAlgorithm : SHA1\r\nCatalogItems  : {[Functions\\Coverage.ps1, F4022ABD45FE0FB2C3527A539F022E2AFDF16851],\r\n                [Functions\\Assertions\\BeGreaterThan.ps1, EEE62A89040021D1F3B2B86D8B6C4884AF7C8925], [bin\\Pester.bat,\r\n                E20AF79E7EC1B2DBA3DF7600C46E9CA613DF1A3C], [Functions\\GlobalMock-A.Tests.ps1,\r\n                DF7F6F009A46AE9386C01A2350741C264FB4163D]...}\r\nPathItems     : {[Build.bat, B4FEDB2F7522EB6EEA68EEA73A095EBA8E441926], [build.psake.ps1,\r\n                70DA7E6DF0664C0E791C32C31E14924B779A6938], [CHANGELOG.md, 86F6D42CC7389E38952ED741BFACE73A2C755119],\r\n                [chocolateyInstall.ps1, 013A7B468B830C37FA51518E56933ACE54889CCC]...}\r\nSignature     : System.Management.Automation.Signature\r\n\r\n```",
      "created_at": "2017-12-01T18:25:32Z",
      "updated_at": "2017-12-01T19:48:28Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@BerheAbrha Yes it was a regression. i was letting you know the workaround while the issue was being addressed. #5596 has addressed the issue and this should be fixed in 6.0.0-GA \ud83d\ude03 , Thanks for reporting!",
      "created_at": "2017-12-01T19:49:24Z",
      "updated_at": "2017-12-01T19:49:24Z"
    }
  ],
  "created_at": "2017-12-01T01:33:35Z",
  "number": 5594,
  "state": "closed",
  "title": "Test-FileCatalog does not work on PSCore.",
  "updated_at": "2017-12-01T19:49:25Z"
}