{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5731",
  "author": "stknohg",
  "body": "Steps to reproduce\r\n------------------\r\n\r\n```powershell\r\n[char]'a'..[char]'e'\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```powershell\r\n# Char array ([char]'a', [char]'b', [char]'c', [char]'d', [char]'e')\r\na\r\nb\r\nc\r\nd\r\ne\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n```powershell\r\n# Int array (97, 98, 99, 100, 101)\r\n97\r\n98\r\n99\r\n100\r\n101\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n\r\n\r\n```powershell\r\n> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.0-rc.2\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.0-rc.2\r\nOS                             Microsoft Windows 10.0.15063\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```",
  "closed_at": "2018-02-11T10:22:46Z",
  "comments": [
    {
      "author": "FireInWinter",
      "author_association": "NONE",
      "body": "Oddly the actual behavior matches Windows PowerShell results.  So changing this might break a few scripts that otherwise might work when on PowerShell 6.  \r\nI still think it should be modified to give the expected results, but wanted to call out that ```[char]'a'..[char]'e'``` did work in previous versions of PowerShell by returning 97-101.",
      "created_at": "2018-01-03T19:48:06Z",
      "updated_at": "2018-01-03T19:48:06Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@FireInWinter Thanks! I'll label the fix as Breaking change. ",
      "created_at": "2018-01-04T17:35:35Z",
      "updated_at": "2018-01-04T17:35:35Z"
    },
    {
      "author": "nightroman",
      "author_association": "NONE",
      "body": "Is it a bug at all? The operator casts operands to integers and then increments. The result is integers. This looks fine (to me).\r\n\r\nWhat about `1.1 .. 9.1`? Should it work with doubles or not?\r\n  ",
      "created_at": "2018-01-04T18:15:53Z",
      "updated_at": "2018-01-04T18:17:43Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "It is bug for PowerShell Core not for Windows PowerShell. Windows PowerShell support only [Int]. PowerShell Core support [char].\r\nIt would works with doubles if doubles had an enumerator.",
      "created_at": "2018-01-04T18:43:53Z",
      "updated_at": "2018-01-04T18:43:53Z"
    }
  ],
  "created_at": "2017-12-21T04:32:36Z",
  "number": 5731,
  "state": "closed",
  "title": "Range operator with char returns unexpected value",
  "updated_at": "2018-03-24T18:08:09Z"
}