{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11497",
  "author": "evanlanester",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 and PowerShell 7+ issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n\r\n-->\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\nEnter-PSSession $RemoteHost -Cred \"\"\r\n```\r\n\r\n# Expected behavior\r\n\r\n```none\r\nSession to Connect to host.\r\nWorks fine from my Windows Desktop.\r\n```\r\n\r\n# Actual behavior\r\n\r\n```none\r\nEnter-PSSession : This parameter set requires WSMan, and no supported WSMan client library was found. WSMan is either not installed or unavailable for this system.\r\nAt line:1 char:1\r\n+ Enter-PSSession $RemoteHost -Cred \"\"\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : InvalidArgument: ($RemoteHost:String) [Enter-PSSession], PSRemotingTransportException\r\n+ FullyQualifiedErrorId : CreateRemoteRunspaceFailed\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\naarch64 GNU/Linux\r\n\r\nPS /etc/powershell> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.2.3\r\nPSEdition                      Core\r\nGitCommitId                    6.2.3\r\nOS                             Linux 4.4.132-1075-rockchip-ayufan-ga83beded8524 #1 SMP Thu Jul 26 08:22:22 UTC 2018\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2020-05-15T06:24:57Z",
  "comments": [
    {
      "author": "evanlanester",
      "author_association": "NONE",
      "body": "Noticed this issue: [Powershell: Issue 5561](https://github.com/PowerShell/PowerShell/issues/5561#issuecomment-368496307)\r\n\r\nFound that the Arm64 packages in [Latest Release: Powershell](https://github.com/PowerShell/PowerShell/releases/latest) don't contain the `libmi.so` file that seems to reference the `libssl` and `libcrypto` libraries for the WS-Man to work. The Amd64 release does.\r\nIs this by design or a feature missing in Arm64 releases currently?\r\n",
      "created_at": "2020-01-06T04:56:24Z",
      "updated_at": "2020-01-06T04:56:36Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "WinRM based remoting is not supported on non-Windows platforms.  You might consider using SSH based remoting now that Windows supports OpenSSH.",
      "created_at": "2020-01-06T20:36:36Z",
      "updated_at": "2020-01-06T20:36:36Z"
    },
    {
      "author": "evanlanester",
      "author_association": "NONE",
      "body": "You can use WinRM to connect from Linux hosts to Windows hosts. There are many examples of people using Powershell on Linux to connect to Windows hosts. There does seem to be a lot of issues with it though.\r\nI spun up a Ubuntu 18.04 (64bit) VM and `Enter-PSSession $RemoteHost -Cred \"\" -Authentication Negotiate` works fine after adding the proper required libraries.",
      "created_at": "2020-01-07T00:06:14Z",
      "updated_at": "2020-01-07T00:06:14Z"
    },
    {
      "author": "he852100",
      "author_association": "NONE",
      "body": "@iSazonov  Ssh is not installed and opened by default on the windowsserver system.  If this system is remote.  How to climb the first mountain. :)\r\n\r\n",
      "created_at": "2020-01-07T03:37:12Z",
      "updated_at": "2020-01-07T03:41:50Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I think we see a deadlock :-) MSFT would be happy to have full-featured WinRM on Unix-s but strategic conclusion was to do not invest in SOAP. Also it is important to keep security and backward compatibility that is another deadlock.",
      "created_at": "2020-01-07T04:38:34Z",
      "updated_at": "2020-01-07T04:38:34Z"
    },
    {
      "author": "evanlanester",
      "author_association": "NONE",
      "body": "In the meantime, I set up OpenSSH on the Windows server and will use that as it worked in my testing.\r\nI don't like the idea of having WinRM and SSH both open as my environment is split 30% Windows and 70% Linux/Unix, and this project is the first time I am having to do remote calls from Linux to Windows.\r\nI might just migrate all of my Windows to OpenSSH way of working and turn off WinRM altogether in this case.\r\nI have a lot of Powershell scripts to fix. Thanks all!",
      "created_at": "2020-01-08T18:00:49Z",
      "updated_at": "2020-01-08T18:00:49Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "@evanlanester \r\nI have been working on a module that contains a `Enable-SSHRemoting` cmdlet to help set up an endpoint on a system so that PowerShell SSH remoting can connect to it.  It requires that SSH client and server (sshd) be installed on the machine and configured appropriately for SSH connections.  Then it creates a subsystem entry in the sshd_config file that allows a remote PowerShell remote connection over SSH.\r\n\r\nIt is not published yet but I have created a Gist link for what I have so far.  You are welcome to use it.\r\n\r\nhttps://gist.github.com/PaulHigin/b12b552b12dc4e8c940efe4f402e5362\r\n\n\n<blockquote><img src=\"https://github.githubassets.com/images/modules/gists/gist-og-image.png\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicon.ico\" height=\"14\"> Gist</div><div><strong><a href=\"https://gist.github.com/PaulHigin/b12b552b12dc4e8c940efe4f402e5362\">PSRemotingTools module</a></strong></div><div>PSRemotingTools module. GitHub Gist: instantly share code, notes, and snippets.</div></blockquote>",
      "created_at": "2020-01-08T21:05:13Z",
      "updated_at": "2020-01-08T21:05:16Z"
    }
  ],
  "created_at": "2020-01-06T04:51:12Z",
  "labels": [
    "Issue-Question",
    "Resolution-Answered",
    "WG-Remoting"
  ],
  "number": 11497,
  "state": "closed",
  "title": "Linux Arm64  - WSMan issues",
  "updated_at": "2020-05-15T06:24:57Z"
}