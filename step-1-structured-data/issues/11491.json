{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11491",
  "author": "PrzemyslawKlys",
  "body": "<!--\r\nIf this is a bug report, make sure you are able to reproduce it with the latest PowerShellGet module from master branch.\r\n- Search the [existing issues](https://github.com/PowerShell/PowerShellGet/issues?utf8=%E2%9C%93&q=is%3Aissue).\r\n- Fill out the following template:\r\n\r\nIf it's not a bug, please remove the template and elaborate on the issue in your own words.\r\n-->\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\nRun this command on PS 7 and it will set `RequireLicenseAcceptance = $true` while on PS 5.1 it will be not there. \r\n\r\n```powershell\r\nnew-modulemanifest -Path $PSScriptRoot\\test.psd1\r\n```\r\n\r\n```powershell\r\n#\r\n# Module manifest for module 'test'\r\n#\r\n# Generated by: przemyslaw.klys\r\n#\r\n# Generated on: 04.01.2020\r\n#\r\n\r\n@{\r\n\r\n# Script module or binary module file associated with this manifest.\r\n# RootModule = ''\r\n\r\n# Version number of this module.\r\nModuleVersion = '0.0.1'\r\n\r\n# Supported PSEditions\r\n# CompatiblePSEditions = @()\r\n\r\n# ID used to uniquely identify this module\r\nGUID = '4f6d06ca-60dd-4b9a-9561-350058984ba5'\r\n\r\n# Author of this module\r\nAuthor = 'przemyslaw.klys'\r\n\r\n# Company or vendor of this module\r\nCompanyName = 'Unknown'\r\n\r\n# Copyright statement for this module\r\nCopyright = '(c) przemyslaw.klys. All rights reserved.'\r\n\r\n# Description of the functionality provided by this module\r\n# Description = ''\r\n\r\n# Minimum version of the PowerShell engine required by this module\r\n# PowerShellVersion = ''\r\n\r\n# Name of the PowerShell host required by this module\r\n# PowerShellHostName = ''\r\n\r\n# Minimum version of the PowerShell host required by this module\r\n# PowerShellHostVersion = ''\r\n\r\n# Minimum version of Microsoft .NET Framework required by this module. This prerequisite is valid for the PowerShell Desktop edition only.\r\n# DotNetFrameworkVersion = ''\r\n\r\n# Minimum version of the common language runtime (CLR) required by this module. This prerequisite is valid for the PowerShell Desktop edition only.\r\n# CLRVersion = ''\r\n\r\n# Processor architecture (None, X86, Amd64) required by this module\r\n# ProcessorArchitecture = ''\r\n\r\n# Modules that must be imported into the global environment prior to importing this module\r\n# RequiredModules = @()\r\n\r\n# Assemblies that must be loaded prior to importing this module\r\n# RequiredAssemblies = @()\r\n\r\n# Script files (.ps1) that are run in the caller's environment prior to importing this module.\r\n# ScriptsToProcess = @()\r\n\r\n# Type files (.ps1xml) to be loaded when importing this module\r\n# TypesToProcess = @()\r\n\r\n# Format files (.ps1xml) to be loaded when importing this module\r\n# FormatsToProcess = @()\r\n\r\n# Modules to import as nested modules of the module specified in RootModule/ModuleToProcess\r\n# NestedModules = @()\r\n\r\n# Functions to export from this module, for best performance, do not use wildcards and do not delete the entry, use an empty array if there are no functions to export.\r\nFunctionsToExport = @()\r\n\r\n# Cmdlets to export from this module, for best performance, do not use wildcards and do not delete the entry, use an empty array if there are no cmdlets to export.\r\nCmdletsToExport = @()\r\n\r\n# Variables to export from this module\r\nVariablesToExport = '*'\r\n\r\n# Aliases to export from this module, for best performance, do not use wildcards and do not delete the entry, use an empty array if there are no aliases to export.\r\nAliasesToExport = @()\r\n\r\n# DSC resources to export from this module\r\n# DscResourcesToExport = @()\r\n\r\n# List of all modules packaged with this module\r\n# ModuleList = @()\r\n\r\n# List of all files packaged with this module\r\n# FileList = @()\r\n\r\n# Private data to pass to the module specified in RootModule/ModuleToProcess. This may also contain a PSData hashtable with additional module metadata used by PowerShell.\r\nPrivateData = @{\r\n\r\n    PSData = @{\r\n\r\n        # Tags applied to this module. These help with module discovery in online galleries.\r\n        # Tags = @()\r\n\r\n        # A URL to the license for this module.\r\n        # LicenseUri = ''\r\n\r\n        # A URL to the main website for this project.\r\n        # ProjectUri = ''\r\n\r\n        # A URL to an icon representing this module.\r\n        # IconUri = ''\r\n\r\n        # ReleaseNotes of this module\r\n        # ReleaseNotes = ''\r\n\r\n        # Prerelease string of this module\r\n        # Prerelease = ''\r\n\r\n        # Flag to indicate whether the module requires explicit user acceptance for install/update/save\r\n        RequireLicenseAcceptance = $true\r\n\r\n        # External dependent modules of this module\r\n        # ExternalModuleDependencies = @()\r\n\r\n    } # End of PSData hashtable\r\n\r\n} # End of PrivateData hashtable\r\n\r\n# HelpInfo URI of this module\r\n# HelpInfoURI = ''\r\n\r\n# Default prefix for commands exported from this module. Override the default prefix using Import-Module -Prefix.\r\n# DefaultCommandPrefix = ''\r\n\r\n}\r\n```\r\n\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```powershell\r\nnew-modulemanifest -Path $PSScriptRoot\\test.psd1\r\n```\r\n\r\n```powershell\r\n#\r\n# Module manifest for module 'test'\r\n#\r\n# Generated by: przemyslaw.klys\r\n#\r\n# Generated on: 04.01.2020\r\n#\r\n\r\n@{\r\n\r\n# Script module or binary module file associated with this manifest.\r\n# RootModule = ''\r\n\r\n# Version number of this module.\r\nModuleVersion = '1.0'\r\n\r\n# Supported PSEditions\r\n# CompatiblePSEditions = @()\r\n\r\n# ID used to uniquely identify this module\r\nGUID = 'dfbbd559-e47c-4ecb-aeb8-dd692b454783'\r\n\r\n# Author of this module\r\nAuthor = 'przemyslaw.klys'\r\n\r\n# Company or vendor of this module\r\nCompanyName = 'Unknown'\r\n\r\n# Copyright statement for this module\r\nCopyright = '(c) 2020 przemyslaw.klys. All rights reserved.'\r\n\r\n# Description of the functionality provided by this module\r\n# Description = ''\r\n\r\n# Minimum version of the Windows PowerShell engine required by this module\r\n# PowerShellVersion = ''\r\n\r\n# Name of the Windows PowerShell host required by this module\r\n# PowerShellHostName = ''\r\n\r\n# Minimum version of the Windows PowerShell host required by this module\r\n# PowerShellHostVersion = ''\r\n\r\n# Minimum version of Microsoft .NET Framework required by this module. This prerequisite is valid for the PowerShell Desktop edition only.\r\n# DotNetFrameworkVersion = ''\r\n\r\n# Minimum version of the common language runtime (CLR) required by this module. This prerequisite is valid for the PowerShell Desktop edition only.\r\n# CLRVersion = ''\r\n\r\n# Processor architecture (None, X86, Amd64) required by this module\r\n# ProcessorArchitecture = ''\r\n\r\n# Modules that must be imported into the global environment prior to importing this module\r\n# RequiredModules = @()\r\n\r\n# Assemblies that must be loaded prior to importing this module\r\n# RequiredAssemblies = @()\r\n\r\n# Script files (.ps1) that are run in the caller's environment prior to importing this module.\r\n# ScriptsToProcess = @()\r\n\r\n# Type files (.ps1xml) to be loaded when importing this module\r\n# TypesToProcess = @()\r\n\r\n# Format files (.ps1xml) to be loaded when importing this module\r\n# FormatsToProcess = @()\r\n\r\n# Modules to import as nested modules of the module specified in RootModule/ModuleToProcess\r\n# NestedModules = @()\r\n\r\n# Functions to export from this module, for best performance, do not use wildcards and do not delete the entry, use an empty array if there are no functions to export.\r\nFunctionsToExport = @()\r\n\r\n# Cmdlets to export from this module, for best performance, do not use wildcards and do not delete the entry, use an empty array if there are no cmdlets to export.\r\nCmdletsToExport = @()\r\n\r\n# Variables to export from this module\r\nVariablesToExport = '*'\r\n\r\n# Aliases to export from this module, for best performance, do not use wildcards and do not delete the entry, use an empty array if there are no aliases to export.\r\nAliasesToExport = @()\r\n\r\n# DSC resources to export from this module\r\n# DscResourcesToExport = @()\r\n\r\n# List of all modules packaged with this module\r\n# ModuleList = @()\r\n\r\n# List of all files packaged with this module\r\n# FileList = @()\r\n\r\n# Private data to pass to the module specified in RootModule/ModuleToProcess. This may also contain a PSData hashtable with additional module metadata used by PowerShell.\r\nPrivateData = @{\r\n\r\n    PSData = @{\r\n\r\n        # Tags applied to this module. These help with module discovery in online galleries.\r\n        # Tags = @()\r\n\r\n        # A URL to the license for this module.\r\n        # LicenseUri = ''\r\n\r\n        # A URL to the main website for this project.\r\n        # ProjectUri = ''\r\n\r\n        # A URL to an icon representing this module.\r\n        # IconUri = ''\r\n\r\n        # ReleaseNotes of this module\r\n        # ReleaseNotes = ''\r\n\r\n    } # End of PSData hashtable\r\n\r\n} # End of PrivateData hashtable\r\n\r\n# HelpInfo URI of this module\r\n# HelpInfoURI = ''\r\n\r\n# Default prefix for commands exported from this module. Override the default prefix using Import-Module -Prefix.\r\n# DefaultCommandPrefix = ''\r\n\r\n}\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\nRequireLicenseAcceptance = $true`  should not be set. \r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- If relevant to your issue, please paste output from the following commands -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-rc.1\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-rc.1\r\nOS                             Microsoft Windows 10.0.18363\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n```\r\n\r\n```powershell\r\n> Get-Module -ListAvailable PowerShellGet,PackageManagement\r\n\r\n    Directory: C:\\Users\\przemyslaw.klys\\Documents\\PowerShell\\Modules\r\n\r\nModuleType Version    PreRelease Name                                PSEdition ExportedCommands\r\n---------- -------    ---------- ----                                --------- ----------------\r\nScript     1.4.5                 PackageManagement                   Desk      {Find-Package, Get-Package, Get-PackageProvider, Get-PackageSource\u2026}\r\nScript     2.2.1                 PowerShellGet                       Desk      {Find-Command, Find-DSCResource, Find-Module, Find-RoleCapability\u2026}\r\n\r\n    Directory: C:\\program files\\powershell\\7-preview\\Modules\r\n\r\nModuleType Version    PreRelease Name                                PSEdition ExportedCommands\r\n---------- -------    ---------- ----                                --------- ----------------\r\nScript     1.4.5                 PackageManagement                   Desk      {Find-Package, Get-Package, Get-PackageProvider, Get-PackageSource\u2026}\r\nScript     2.2.2                 PowerShellGet                       Desk      {Find-Command, Find-DSCResource, Find-Module, Find-RoleCapability\u2026}\r\n\r\n    Directory: C:\\Program Files\\WindowsPowerShell\\Modules\r\n\r\nModuleType Version    PreRelease Name                                PSEdition ExportedCommands\r\n---------- -------    ---------- ----                                --------- ----------------\r\nScript     1.4.6                 PackageManagement                   Desk      {Find-Package, Get-Package, Get-PackageProvider, Get-PackageSource\u2026}\r\nScript     1.4.1                 PackageManagement                   Desk      {Find-Package, Get-Package, Get-PackageProvider, Get-PackageSource\u2026}\r\nScript     2.2.3                 PowerShellGet                       Desk      {Find-Command, Find-DSCResource, Find-Module, Find-RoleCapability\u2026}\r\nScript     2.2                   PowerShellGet                       Desk      {Find-Command, Find-DSCResource, Find-Module, Find-RoleCapability\u2026}\r\n\r\n    Directory: C:\\Users\\przemyslaw.klys\\Documents\\WindowsPowerShell\\Modules\r\n\r\nModuleType Version    PreRelease Name                                PSEdition ExportedCommands\r\n---------- -------    ---------- ----                                --------- ----------------\r\nScript     1.4.5                 PackageManagement                   Desk      {Find-Package, Get-Package, Get-PackageProvider, Get-PackageSource\u2026}\r\nScript     2.2.1                 PowerShellGet                       Desk      {Find-Command, Find-DSCResource, Find-Module, Find-RoleCapability\u2026}\r\n```\r\n\r\n```powershell\r\n> Get-PackageProvider -ListAvailable\r\nName                     Version          DynamicOptions\r\n----                     -------          --------------\r\nNuGet                    3.0.0.1          Destination, ExcludeVersion, Scope, SkipDependencies, Headers, FilterOnTag, Contains, AllowPrereleaseVersions, ConfigFile, SkipValidate  \r\nPowerShellGet            2.2.3.0          PackageManagementProvider, Type, Scope, AllowClobber, SkipPublisherCheck, InstallUpdate, NoPathUpdate, AllowPrereleaseVersions, Filter,\u2026\r\nPowerShellGet            2.2.2.0\r\nPowerShellGet            2.2.1.0          PackageManagementProvider, Type, Scope, AllowClobber, SkipPublisherCheck, InstallUpdate, NoPathUpdate, AllowPrereleaseVersions, Filter,\u2026\r\nPowerShellGet            2.2.0.0\r\n\r\n```\r\n",
  "closed_at": "2020-01-07T19:43:59Z",
  "comments": [
    {
      "author": "ThomasNieto",
      "author_association": "CONTRIBUTOR",
      "body": "@PrzemyslawKlys I think I found the issue. PR #9104 added the parameter `RequireLicenseAcceptance` however, it has a default value of true.\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/08d6be90397e382c808dbc347b8e4ae459239f53/src/System.Management.Automation/engine/Modules/NewModuleManifestCommand.cs#L480\r\n",
      "created_at": "2020-01-04T19:12:41Z",
      "updated_at": "2020-01-04T19:12:41Z"
    },
    {
      "author": "PrzemyslawKlys",
      "author_association": "NONE",
      "body": "Great find. I believe it should be $false to make sure we are not forced to use licenses. ",
      "created_at": "2020-01-04T19:13:43Z",
      "updated_at": "2020-01-04T19:13:43Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "/cc @pougetat @anmenaga @SteveL-MSFT  Thoughts? \r\n\r\nIf we want the default being fasle we should change before 7.0 GA to avoid a breaking change.",
      "created_at": "2020-01-05T08:00:05Z",
      "updated_at": "2020-01-05T08:00:05Z"
    },
    {
      "author": "ThomasNieto",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov I would say this has to get fixed before GA. Since this is a switch parameter and its on by default it goes against all other switch parameters. The only way to \"turn it off\" would be to use the awkward syntax of `-RequireLicenseAcceptance:$false` which most end users don't know.",
      "created_at": "2020-01-06T14:01:59Z",
      "updated_at": "2020-01-06T14:01:59Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "@anmenaga pinged me on this one offline. Given the low risk and wide impact, I think we should fix it pre-GA",
      "created_at": "2020-01-06T19:07:51Z",
      "updated_at": "2020-01-06T19:07:51Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:This issue was addressed in #11512, which has now been successfully released as `v7.0.0-rc.2`.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.0.0-rc.2)\n",
      "created_at": "2020-01-16T23:38:31Z",
      "updated_at": "2020-01-16T23:38:31Z"
    }
  ],
  "created_at": "2020-01-04T19:04:50Z",
  "labels": [
    "Issue-Question",
    "Resolution-Fixed",
    "WG-Cmdlets-Core"
  ],
  "number": 11491,
  "state": "closed",
  "title": "RequireLicenseAcceptance set to $true automatically on PS 7",
  "updated_at": "2020-01-16T23:38:32Z"
}