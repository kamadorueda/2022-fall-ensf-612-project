{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4191",
  "author": "mikederksen",
  "body": "Steps to reproduce\r\n------------------\r\nWhen overwriting the prompt function as follows:\r\n\r\n```powershell\r\nfunction prompt {\r\n    Write-Host \"Something> \"\r\n    \" \"\r\n}\r\n```\r\n\r\nThe reason why one would want to manually use Write-Host for outputting prompt values, is to be able to use colors. This is done in posh-git for example. In windows this works as expected.\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```powershell\r\nSomething> --input goes here--\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n```powershell\r\nSomething>\r\n Something>\r\n--cursor position--\r\n```\r\n\r\nWhen i start typing the input appears as follows:\r\n\r\n```powershell\r\nSomething>\r\n--input appears here--\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value                                           \r\n----                           -----                                           \r\nPSVersion                      6.0.0-beta                                      \r\nPSEdition                      Core                                            \r\nBuildVersion                   3.0.0.0                                         \r\nCLRVersion                                                                     \r\nGitCommitId                    v6.0.0-beta.1                                   \r\nOS                             Darwin 16.6.0 Darwin Kernel Version 16.6.0: F...\r\nPlatform                       Unix                                            \r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}                         \r\nPSRemotingProtocolVersion      2.3                                             \r\nSerializationVersion           1.1.0.1                                         \r\nWSManStackVersion              3.0 \r\n```\r\n",
  "closed_at": "2017-08-14T23:31:49Z",
  "comments": [
    {
      "author": "alexandair",
      "author_association": "CONTRIBUTOR",
      "body": "Don't use Write-Host at all. Just specify a string.\r\nOr, use Write-Host -NoNewLine.",
      "created_at": "2017-07-06T09:47:44Z",
      "updated_at": "2017-07-06T09:47:44Z"
    },
    {
      "author": "mikederksen",
      "author_association": "NONE",
      "body": "Write-Host -NoNewLine gives the same result. Returning a string is fine for normal text, but when one wants colored text this method doesn't suffice.",
      "created_at": "2017-07-06T10:49:59Z",
      "updated_at": "2017-07-06T10:49:59Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "> but when one wants colored text this method doesn't suffice.\r\n\r\nSure it does.  Try `` \"`e[32mMy Green prompt>`e[0m \"``.  See the MSDN docs on the rest of the [VT seqs](https://msdn.microsoft.com/en-us/library/windows/desktop/mt638032(v=vs.85).aspx).  Oh, and you can test if the current host supports these with `$host.UI.SupportsVirtualTerminal`\r\n\r\n",
      "created_at": "2017-07-06T14:36:58Z",
      "updated_at": "2017-07-06T14:36:58Z"
    },
    {
      "author": "mikederksen",
      "author_association": "NONE",
      "body": "Oh, didn't know that! Thanks for the advice. We can consider this issue resolved.",
      "created_at": "2017-07-06T18:22:38Z",
      "updated_at": "2017-07-06T18:22:38Z"
    },
    {
      "author": "mikederksen",
      "author_association": "NONE",
      "body": "Oke, using \"`e[32mMy Green prompt>`e[0m \" works, until i start typing. Once i start typing the prompt changes to ` [32mMy Green pro   `",
      "created_at": "2017-07-06T19:53:37Z",
      "updated_at": "2017-07-06T19:56:11Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "There is a known issue with the ESC sequences used on the same line where input happens **and** you have PSReadline imported.  You can read about the issue here https://github.com/PowerShell/PowerShell/pull/3867 and here https://github.com/lzybkr/PSReadLine/issues/470.  \r\n\r\nOn my Ubuntu VM, I split my prompt to two lines and put all the colored stuff on the first line and then I put an uncolored `> ` on the second line.  It's a workaround until PSReadline is fixed. \r\n\r\nAlso consider moving to beta.3.  :-)",
      "created_at": "2017-07-06T20:03:47Z",
      "updated_at": "2017-07-06T20:03:47Z"
    },
    {
      "author": "jpogran",
      "author_association": "NONE",
      "body": "FWIW, on beta.3 this is still an issue. This shows up on Terminal.app and iterm2 with just PSReadline and the example prompt in this issue. Things are resolved if PSReadline module is removed, but all history, tab completing, etc functionality is gone (obviously).\r\n\r\n```\r\nPowerShell v6.0.0-beta.3\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nPS /Users/jpogran> function prompt {                                                                                                   >>     Write-Host \"Something> \"                                                                                                        >>     \" \"                                                                                                                             >> }\r\nSomething>\r\n Something>\r\nSomething>\r\n \"foo\"\r\nfoo\r\nSomething>\r\n $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.0-beta\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.0-beta.3\r\nOS                             Darwin 16.6.0 Darwin Kernel Version 16.6.0: Fri Apr 14 16:21:16 PDT 2017; root:xnu-3789.60.24~6/RELE...\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n\r\nSomething>\r\n Something>\r\n\r\n```",
      "created_at": "2017-07-11T13:31:16Z",
      "updated_at": "2017-07-11T13:31:16Z"
    },
    {
      "author": "electricduck",
      "author_association": "NONE",
      "body": "This happens on Linux too, just to be aware",
      "created_at": "2017-08-14T16:57:08Z",
      "updated_at": "2017-08-14T16:57:08Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "This is https://github.com/lzybkr/PSReadLine/issues/468\r\n\r\nI'm quite far along with the real fix - the ansi_render branch fixes the problem on Windows, but that branch still has some Windows specific code, I haven't finished porting everything yet.",
      "created_at": "2017-08-14T23:31:49Z",
      "updated_at": "2017-08-14T23:31:49Z"
    },
    {
      "author": "stuartleeks",
      "author_association": "NONE",
      "body": "I'm not clear why this issue is closed.\r\n\r\nIn PowerShell on Windows (either powershell or pwsh) I can set the prompt with `function prompt {Write-Host \"myprompt>\" -NoNewline; ' '}` and the prompt that I will get is `myprompt>`\r\n\r\nIf I try this on Linux then then prompt that I get is `myprompt> myprompt>`\r\n\r\nSince this is a difference in behaviour from the full powershell, *and* pwsh on Windows is consistent with the previous behaviour, this feels like it is broken on Linux/macOS.\r\n\r\nLooking back at the thread it seems that @lzybkr is having to work around this in PSReadline. I'm a big fan of posh-git and want to set this up for pwsh in WSL and on native Linux, but not fixing this in pwsh means that any libs that depend on the pre-existing behaviour are broken on pwsh on mac/Linux :-(\r\n\r\nLook forward to your thoughts",
      "created_at": "2017-11-22T13:46:18Z",
      "updated_at": "2017-11-22T13:46:18Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@stuartleeks I assume it was closed because this is a PSReadline issue, and not PowerShell issue:\r\n\r\n```powershell\r\nRemove-Module PSReadLine\r\nfunction prompt  \r\n{  \r\n    $color = Get-Random -Min 1 -Max 16  \r\n    Write-Host (\"PS \" + $(Get-Location) +\">\") -NoNewLine -ForegroundColor $Color  \r\n    return \" \"  \r\n}\r\n```\r\n\r\nThat's the example in [about_Prompts](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_prompts?view=powershell-5.1). If you were to run that without `Remove-Module PSReadLine`, you get the double prompt behavior. But, without ` PSReadLine` loaded, prompt works as expected.",
      "created_at": "2017-11-22T14:13:10Z",
      "updated_at": "2017-11-22T14:13:10Z"
    },
    {
      "author": "stuartleeks",
      "author_association": "NONE",
      "body": "Ah, ok... I missed the initial PSReadline reference - thanks :-)",
      "created_at": "2017-11-22T14:20:30Z",
      "updated_at": "2017-11-22T14:20:30Z"
    }
  ],
  "created_at": "2017-07-06T07:21:58Z",
  "labels": [
    "OS-macOS",
    "WG-Interactive-PSReadLine",
    "Resolution-External"
  ],
  "number": 4191,
  "state": "closed",
  "title": "Prompt function with Write-Host on MacOS 10.12.5",
  "updated_at": "2017-11-22T14:20:30Z"
}