{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13457",
  "author": "IISResetMe",
  "body": "## Summary of the new feature/enhancement\r\n\r\nToday I spent ~2 hours just to get Visual Studio to load `PowerShell.sln` - updating both the release and preview versions, re-installing latest published release of the .NET 5 Preview SDK etc. etc.\r\n\r\nThe culprit seems to be [this commit](https://github.com/PowerShell/PowerShell/commit/9c396aa0eae7976c62cfb905cacfdf5cd7390378), pulling in a version of the SDK. Problem is that `dotnet-install.ps1` finds the corresponding artifact online (`https://dotnetcli.azureedge.net/dotnet/Sdk/5.0.100-preview.7.20366.15/dotnet-sdk-5.0.100-preview.7.20366.15-win-x64.zip`), but it's NOT actually the latest version published on the .NET Core website (`5.0.100-preview.7.20366.6` as of publishing this issue)?!\r\n\r\nSo now, whenever I set up a new branch from master I have to either\r\n - Update `global.json` manually every time I checkout a branch I want to work with in VS\r\n - Run `Start-PSBootStrap` and then manually copy the appropriately versioned SDK folder to `C:\\Program Files\\dotnet\\`\r\n\r\nThis is perhaps the 4th or 5th time I've run into this or similar issues when picking up the project after not having worked on it for a while, and FWIW it's the No. 1 reason I haven't really contributed anything in the last ~8 months `\u00af\\_(\u30c4)_/\u00af`\r\n\r\n## Proposed technical implementation details (optional)\r\n\r\nEither:\r\n - Add an option to `Start-PSBootStrap` that allows me to install `dotnet` system-wide instead of in my user profile, or\r\n - Avoid pulling in new SDK versions before an installer is actually available\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I'm afraid it's inevitable.\r\nMSFT team plans to release PowerShell 7.1 immediately after the release of .Net 5.0. To do this, we need to install the latest available .Net previews as soon as possible. Even with this approach, we receive fixes in .Net with a delay of about 2 months!\r\n\r\nWe can not install such previews globally because it can break Visual Studio (at least move it in unsupported state).\r\n\r\n",
      "created_at": "2020-08-16T18:59:48Z",
      "updated_at": "2020-08-16T18:59:48Z"
    },
    {
      "author": "IISResetMe",
      "author_association": "COLLABORATOR",
      "body": "> We can not install such previews globally because it can break Visual Studio (at least move it in unsupported state).\r\n\r\nI totally get that, but I'm talking about an _opt-in_ change, not a change to the default behavior. \r\n\r\nLike, `Start-PSBootstrap -Global -Force -YesIKnowWhatIAmDoing`?",
      "created_at": "2020-08-16T20:53:19Z",
      "updated_at": "2020-08-16T20:53:19Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "`Install-Dotnet` function already has `InstallDir` parameter.",
      "created_at": "2020-08-17T04:58:52Z",
      "updated_at": "2020-08-17T04:58:52Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "/cc @adityapatwardhan for insights.",
      "created_at": "2020-08-17T21:03:02Z",
      "updated_at": "2020-08-17T21:03:02Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I think we could write a comment with description how to install .Net globally.",
      "created_at": "2020-08-18T03:54:33Z",
      "updated_at": "2020-08-18T03:54:33Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "Yeah I also have grappled with this. Us taking preview builds of .NET makes it hard to work with Visual Studio, since VS refuses to do anything unless it can find the driving SDK.\r\n\r\nI get around this by letting `Start-PSBootstrap` set the relevant environment variables, and then starting Visual Studio from the same process with this function in my profile:\r\n\r\n```powershell\r\nfunction Start-VisualStudio\r\n{\r\n  [Alias('vs')]\r\n  param()\r\n\r\n  & \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\Common7\\IDE\\devenv.exe\" $args\r\n}\r\n```\r\n\r\nSo then I can do this:\r\n\r\n```\r\nStart-PSBootstrap\r\nvs ./PowerShell.sln\r\n```",
      "created_at": "2020-08-21T20:26:29Z",
      "updated_at": "2020-08-21T20:26:29Z"
    }
  ],
  "created_at": "2020-08-16T15:16:04Z",
  "number": 13457,
  "state": "open",
  "title": "More human-friendly dependency management?",
  "updated_at": "2020-11-22T19:23:34Z"
}