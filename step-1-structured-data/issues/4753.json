{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4753",
  "author": "lbertolotti",
  "body": " Set-AuthenticodeSignature is giving me UnkownError. This looks serious.",
  "closed_at": "2017-11-04T03:43:28Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Could you please add repo steps, platform and version?",
      "created_at": "2017-09-05T08:42:04Z",
      "updated_at": "2017-09-05T08:42:26Z"
    },
    {
      "author": "george-chakhidze",
      "author_association": "NONE",
      "body": "Let me guess: code signing certificate is expired.",
      "created_at": "2017-09-05T12:57:48Z",
      "updated_at": "2017-09-05T12:57:48Z"
    },
    {
      "author": "lbertolotti",
      "author_association": "NONE",
      "body": "```\r\nPS C:\\test> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.0-beta\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.0-beta.6\r\nOS                             Microsoft Windows 10.0.15063\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n$Params = @{    \r\nSubject           = \"CN=Test Code Signing\"\r\nType              = \"CodeSigningCert\"    \r\nKeySpec           = \"Signature\"     \r\nKeyUsage          = \"DigitalSignature\"    \r\nFriendlyName      = \"Test code signing\"    \r\nNotAfter          = [datetime]::now.AddYears(5)    \r\nCertStoreLocation = 'Cert:\\CurrentUser\\My' }\r\n\r\nNew-SelfSignedCertificate @Params\r\nNew-SelfSignedCertificate : The type initializer for '<Module>' threw an exception.\r\nAt line:1 char:1\r\n+ New-SelfSignedCertificate $Params\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : NotSpecified: (:) [], TypeInitializationException\r\n    + FullyQualifiedErrorId : System.TypeInitializationException\r\n```\r\nWell, that last line on PSVersion 5.1.15063.502 gives:\r\n```\r\n\r\nPS C:\\test> New-SelfSignedCertificate @Params\r\n\r\n\r\n   PSParentPath: Microsoft.PowerShell.Security\\Certificate::CurrentUser\\My\r\n\r\nThumbprint                                Subject\r\n----------                                -------\r\n3FAA880B51E7EFDC2AF451DAEDC9F67B76E29A6A  CN=Test Code Signing\r\n\r\n```\r\n",
      "created_at": "2017-09-05T13:49:45Z",
      "updated_at": "2017-09-05T13:49:45Z"
    },
    {
      "author": "mattifestation",
      "author_association": "CONTRIBUTOR",
      "body": "@lbertolotti You're getting UnkownError because your self-signed certificate isn't trusted in the Root certificate store. While New-SelfSignedCertificate won't let you store in the Root store, you can do it with Export/Import-Certificate. Here's some repro code:\r\n\r\n```powershell\r\n$Params = @{    \r\nSubject           = \"CN=Test Code Signing\"\r\nType              = \"CodeSigningCert\"    \r\nKeySpec           = \"Signature\"     \r\nKeyUsage          = \"DigitalSignature\"    \r\nFriendlyName      = \"Test code signing\"    \r\nNotAfter          = [datetime]::now.AddYears(5)    \r\nCertStoreLocation = 'Cert:\\CurrentUser\\My' }\r\n\r\n$TestCodeSigningCert = New-SelfSignedCertificate @Params\r\n\r\nExport-Certificate -FilePath exported_cert.cer -Cert $TestCodeSigningCert\r\nImport-Certificate -FilePath exported_cert.cer -CertStoreLocation Cert:\\CurrentUser\\Root\r\n\r\nSet-AuthenticodeSignature -Certificate $TestCodeSigningCert -FilePath HelloWorld.exe\r\n```\r\n\r\nUpon calling Import-Certificate, you'll get a prompt. Click yes and your file will sign just fine.",
      "created_at": "2017-11-03T23:32:55Z",
      "updated_at": "2017-11-03T23:32:55Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "UnkownError looks bad.",
      "created_at": "2017-11-04T17:48:11Z",
      "updated_at": "2017-11-04T17:48:11Z"
    },
    {
      "author": "mattifestation",
      "author_association": "CONTRIBUTOR",
      "body": "It doesn't bother me because the `StatusMessage` property is very descriptive: `A certificate chain processed, but terminated in a root certificate which is not trusted by the trust provider.`",
      "created_at": "2017-11-05T02:26:13Z",
      "updated_at": "2017-11-05T02:26:13Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "If `UnknownError` is coming from the cmdlet, then I agree that wrapping it with that exception is not useful and we should fix that so that the detailed message shows up by default on the console.  If that is the case, we can reopen this and repurpose it to get a better error message.  If that error is coming from the cert api, I'd rather than add code to work around their issue.",
      "created_at": "2017-11-05T19:33:23Z",
      "updated_at": "2017-11-05T19:33:23Z"
    },
    {
      "author": "thadfield",
      "author_association": "NONE",
      "body": "> It doesn't bother me because the `StatusMessage` property is very descriptive: `A certificate chain processed, but terminated in a root certificate which is not trusted by the trust provider.`\r\n\r\nHow would I get to StatusMessage? I can't seem to find a way of getting to that information.",
      "created_at": "2019-07-25T21:37:05Z",
      "updated_at": "2019-07-25T21:37:05Z"
    },
    {
      "author": "mattifestation",
      "author_association": "CONTRIBUTOR",
      "body": "Hey @thadfield. You'll get that message in the StatusMessage property of the object returned by Set-AuthenticodeSignature or Get-AuthenticodeSignature (a `System.Management.Automation.Signature` object instance). \r\n\r\n```powershell\r\n$Signature = Get-AuthenticodeSignature C:\\Windows\\System32\\kernel32.dll\r\n$Signature.StatusMessage\r\n```\r\n\r\nA StatusMessage of `A certificate chain processed, but terminated in a root certificate which is not trusted by the trust provider` will indicate that the certificate used to sign the code being validated does not chain to a trusted root certificate, which is often the case when signing with a self-signed certificate. If you're encountering that message, then assuming you accept the risk of trusting your cert, you can follow along with the instructions in the thread above.\r\n\r\nI hope that helps!\r\n\r\nCheers,\r\nMatt",
      "created_at": "2019-07-26T05:56:40Z",
      "updated_at": "2019-07-26T05:56:40Z"
    },
    {
      "author": "thadfield",
      "author_association": "NONE",
      "body": "@mattifestation thanks for the quick reply. Not sure why I didn't just try that. I looked at what was returned in the debugger and didn't see that variable. It's definitely there, will use it, much appreciated.",
      "created_at": "2019-07-27T03:46:23Z",
      "updated_at": "2019-07-27T03:46:23Z"
    },
    {
      "author": "codaamok",
      "author_association": "NONE",
      "body": "I just received this where the property value was `No provider was specified for the store or object` while using `Set-AuthentiCodesignature`. Root cause was that the user didn't have the private key of the code signing certificate in any of their stores, despite trying to sign with a certificate in the LocalMachine store where it did have the private key.\r\n\r\nWho do we ask politely to correctly throw or feedback to the user the real error?\r\n\r\n@SteveL-MSFT  @iSazonov ",
      "created_at": "2022-04-27T10:19:47Z",
      "updated_at": "2022-04-27T10:20:51Z"
    },
    {
      "author": "begemott",
      "author_association": "NONE",
      "body": "> I just received this where the property value was `No provider was specified for the store or object` while using `Set-AuthentiCodesignature`. Root cause was that the user didn't have the private key of the code signing certificate in any of their stores, despite trying to sign with a certificate in the LocalMachine store where it did have the private key.\r\n> \r\n> Who do we ask politely to correctly throw or feedback to the user the real error?\r\n> \r\n> @SteveL-MSFT @iSazonov\r\n\r\nI have the same issue, is there any workaround for that?",
      "created_at": "2022-05-25T06:54:54Z",
      "updated_at": "2022-05-25T06:54:54Z"
    },
    {
      "author": "jolting",
      "author_association": "NONE",
      "body": "@begemott \r\nI am using a PFX file, so I am using Get-PfxCertificate.\r\n\r\nTry importing it into the keystore too. That should import the private key too.\r\n```\r\nImport-PfxCertificate -FilePath cert.pfx -CertStoreLocation Cert:\\\\LocalMachine\\\\My -Password $pass\r\n```\r\n\r\nThen call Set-AuthenticodeSignature.\r\n\r\nI think it's a Windows bug because that shouldn't be necessary.\r\n\r\nI'm using Windows Server 2022 as a jenkins worker on ec2 and I was having trouble with signtool as well in case that information is relevant.",
      "created_at": "2022-05-27T06:42:11Z",
      "updated_at": "2022-05-27T06:42:11Z"
    },
    {
      "author": "begemott",
      "author_association": "NONE",
      "body": "Thanks for the replay\r\nI'll try it.\r\n",
      "created_at": "2022-05-27T07:16:42Z",
      "updated_at": "2022-05-27T07:16:42Z"
    },
    {
      "author": "achimismaili",
      "author_association": "NONE",
      "body": "> I just received this where the property value was `No provider was specified for the store or object` while using `Set-AuthentiCodesignature`. Root cause was that the user didn't have the private key of the code signing certificate in any of their stores, despite trying to sign with a certificate in the LocalMachine store where it did have the private key.\r\n> \r\n> Who do we ask politely to correctly throw or feedback to the user the real error?\r\n> \r\n> @SteveL-MSFT @iSazonov\r\n\r\nFor me, this problem was resolved by executing the command in an admin-powershell. \r\nIt seems, when running the powershell as normal user, there is no access to the private key available ...",
      "created_at": "2022-07-18T10:56:46Z",
      "updated_at": "2022-07-18T10:56:46Z"
    }
  ],
  "created_at": "2017-09-04T23:28:01Z",
  "number": 4753,
  "state": "closed",
  "title": " Set-AuthenticodeSignature (Unkown Error)",
  "updated_at": "2022-07-18T10:56:46Z"
}