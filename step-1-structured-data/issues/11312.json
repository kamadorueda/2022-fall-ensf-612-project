{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11312",
  "author": "TylerLeonhardt",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nThis addresses two things:\r\n* gives the ability to set a breakpoint remotely on a runspace even if it's busy\r\n* gives the ability to set a breakpoint on a specific runspace\r\n\r\nThis is only added to the API surface for the PowerShell extension. In theory the breakpoint cmdlets can take advantage of this in the future.\r\n\r\n## PR Context\r\n\r\nThis will light up a scenario in the PowerShell Editor Services so that when you click to add a breakpoint, that breakpoint will be applied even if the PowerShell Integrated Console is busy running the `Debug-Runspace`.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [ ] None\r\n    - **OR**\r\n    - [x] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [x] Experimental feature name(s): Microsoft.PowerShell.Utility.PSManageBreakpointsInRunspace\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [ ] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [x] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2019-12-13T01:23:13Z",
  "comments": [
    {
      "author": "TylerLeonhardt",
      "author_association": "MEMBER",
      "body": "The \"hook in output\" commit hooks up the ability to send output to the original client PowerShell without needing to invoke a pipeline on the server side.",
      "created_at": "2019-12-11T15:55:47Z",
      "updated_at": "2019-12-11T15:55:47Z"
    },
    {
      "author": "TylerLeonhardt",
      "author_association": "MEMBER",
      "body": "@PoshChan please retry PowerShell-CI-static-analysis",
      "created_at": "2019-12-11T21:36:21Z",
      "updated_at": "2019-12-11T21:36:21Z"
    },
    {
      "author": "PoshChan",
      "author_association": "COLLABORATOR",
      "body": "@TylerLeonhardt, I do not understand the build target(s) `PowerShell-CI-static-analysis`; I only allow `static`, `windows`, `macos`, `linux`, `all`",
      "created_at": "2019-12-11T21:36:37Z",
      "updated_at": "2019-12-11T21:36:37Z"
    },
    {
      "author": "TylerLeonhardt",
      "author_association": "MEMBER",
      "body": "@PoshChan please retry static",
      "created_at": "2019-12-11T21:37:34Z",
      "updated_at": "2019-12-11T21:37:34Z"
    },
    {
      "author": "PoshChan",
      "author_association": "COLLABORATOR",
      "body": "@TylerLeonhardt, successfully started retry of `PowerShell-CI-static-analysis`",
      "created_at": "2019-12-11T21:37:44Z",
      "updated_at": "2019-12-11T21:37:44Z"
    },
    {
      "author": "TylerLeonhardt",
      "author_association": "MEMBER",
      "body": "@PoshChan please retry static",
      "created_at": "2019-12-11T21:59:54Z",
      "updated_at": "2019-12-11T21:59:54Z"
    },
    {
      "author": "TylerLeonhardt",
      "author_association": "MEMBER",
      "body": "@PoshChan please retry windows",
      "created_at": "2019-12-11T22:00:01Z",
      "updated_at": "2019-12-11T22:00:01Z"
    },
    {
      "author": "PoshChan",
      "author_association": "COLLABORATOR",
      "body": "@TylerLeonhardt, successfully started retry of `PowerShell-CI-static-analysis`",
      "created_at": "2019-12-11T22:00:22Z",
      "updated_at": "2019-12-11T22:00:22Z"
    },
    {
      "author": "PoshChan",
      "author_association": "COLLABORATOR",
      "body": "@TylerLeonhardt, successfully started retry of `PowerShell-CI-Windows`",
      "created_at": "2019-12-11T22:00:23Z",
      "updated_at": "2019-12-11T22:00:23Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@TylerLeonhardt - please resolve CodeFactor issues.",
      "created_at": "2019-12-12T01:27:08Z",
      "updated_at": "2019-12-12T01:27:08Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@SteveL-MSFT - please update your review",
      "created_at": "2019-12-12T21:51:07Z",
      "updated_at": "2019-12-12T21:51:07Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@SteveL-MSFT - please re-review",
      "created_at": "2019-12-12T23:57:48Z",
      "updated_at": "2019-12-12T23:57:48Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.0.0-rc.1` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.0.0-rc.1)\n",
      "created_at": "2019-12-16T21:38:09Z",
      "updated_at": "2019-12-16T21:38:09Z"
    }
  ],
  "created_at": "2019-12-10T19:37:36Z",
  "number": 11312,
  "state": "closed",
  "title": "Improvements in breakpoint APIs for remote scenarios",
  "updated_at": "2019-12-16T21:38:10Z"
}