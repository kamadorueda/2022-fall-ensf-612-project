{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7537",
  "author": "HumanEquivalentUnit",
  "body": "Using Get-Content to read an [example 170,000 line wordlist text file](https://github.com/dolph/dictionary/raw/master/enable1.txt).\r\n\r\n```\r\n# Default use, slow.  Roughly 6 seconds. Over 100x longer than the alternatives.\r\n\r\n$lines = Get-Content -Path '/path/to/bigfile.txt'\r\n\r\n\r\n\r\n# Fast. Roughly 40ms - 90ms.\r\n\r\n$lines = [system.io.file]::ReadAllLines('/path/to/bigfile.txt')\r\n\r\n\r\n\r\n# Fast. Roughly 50-100ms. NB. the ReadCount has to be larger than the file line count,\r\n# otherwise $lines is not a 1-dimensional array. i.e. you need to know the file line \r\n# count to be able to do this in one move.\r\n\r\n$lines = Get-Content -Path '/path/to/bigfile.txt' -ReadCount 200kb\r\n\r\n\r\n\r\n# Fastest. Roughly 30ms - 50ms.\r\n\r\n$lines = Get-Content -Path '/path/to/bigfile.txt' -ReadCount 100 | foreach { $_ }\r\n```\r\n\r\nThe reason for the slow version is explained [here, apparently by Bruce Payette in 2006](https://www.vistax64.com/threads/much-faster-than-get-content-why.23052/):\r\n\r\n> This is a known issue with the way Get-Content works. For each object\r\nreturned from the pipe, it adds a bunch of extra information to that object\r\nin the form of NoteProperties. \r\n\r\n> These properties are being added for *every* object processed in the\r\npipeline. We do this to allow cmdlets to work more effectively together.\r\nIt's important because things like the Path property may vary across\r\ndifferent object types. In effect, we're doing \"property name\r\nnormalization\". Unfortunately, while this technique provides significant\r\nbenefits by making the system more consistent, it isn't free. It adds\r\nsignificant overhead both in terms of processing time and memory space.\r\nWe're investigating ways to reduce these costs without losing the benefits\r\nbut in the end, we may need to add a way to suppress adding this extra\r\ninformation.\r\n\r\nI think it's a shame that the default usage of Get-Content is the slow version, but that's likely not going to change. But, 12 years on from this posting, is it time to add a way to suppress adding this extra information?\r\n\r\ne.g. a parameter to `Get-Content` which switches off the NoteProperties. I have no good parameter name suggestion - ideally I would want it to communicate \"this is faster\" to people who see it in written code, or who read the documentation wondering how they can speed up Get-Content on large files.",
  "closed_at": null,
  "comments": [
    {
      "author": "jcotton42",
      "author_association": "CONTRIBUTOR",
      "body": "I'm willing to take this if the PS team OKs it, although I'm unsure what to name the parameter. Someone suggested `RawLines` to me.",
      "created_at": "2018-08-16T04:05:29Z",
      "updated_at": "2018-08-16T04:06:54Z"
    },
    {
      "author": "jcotton42",
      "author_association": "CONTRIBUTOR",
      "body": "I have decided to go ahead and work on this issue. @powershell/powershell can I get an assignment?",
      "created_at": "2018-08-16T04:15:23Z",
      "updated_at": "2018-08-16T04:15:23Z"
    },
    {
      "author": "BrucePay",
      "author_association": "COLLABORATOR",
      "body": "I've marked it as an enhancement and up-for-grabs. You should just be able to assign it to yourself. We added `-Raw` a long while back to address the perf issue but it doesn't really do the right thing. Naming the new parameter `-RawLines` sounds ok but maybe a `-ReadMode` parameter that took `lines`, `text`, `rawlines`, `rawtext` etc. might be more flexible. ",
      "created_at": "2018-08-16T08:07:03Z",
      "updated_at": "2018-08-16T08:07:03Z"
    },
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "#7481 Will make this a bit better - haven't tried it yet to see how much, and it will always be slower that just creating the strings.",
      "created_at": "2018-08-16T13:52:05Z",
      "updated_at": "2018-08-16T13:52:05Z"
    },
    {
      "author": "jcotton42",
      "author_association": "CONTRIBUTOR",
      "body": "@BrucePay maybe I'm just being daft but I don't see a way to assign this to myself",
      "created_at": "2018-08-16T17:10:44Z",
      "updated_at": "2018-08-16T17:10:44Z"
    },
    {
      "author": "Jaykul",
      "author_association": "CONTRIBUTOR",
      "body": "See #7501 ",
      "created_at": "2018-08-16T17:35:48Z",
      "updated_at": "2018-08-16T17:35:48Z"
    },
    {
      "author": "jcotton42",
      "author_association": "CONTRIBUTOR",
      "body": "Someone just brought PR #7502 to my attention, would that make solving this issue unnecessary? It seems to solve the same issue of `Get-Content` being slow, but in a more elegant manner.",
      "created_at": "2018-08-16T17:35:59Z",
      "updated_at": "2018-08-16T17:42:09Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Only individuals marked as `Collaborators` show up in the `Assignees` list.  @jcotton42 I'll assign this to myself to avoid someone else duplicating the work.  You can assume this is assigned to you.\r\n\r\nThe WIP PR is still under review as it is a breaking change.  However, although that change will improve things if accepted, it may still make sense to add a parameter to `Get-Content`",
      "created_at": "2018-08-16T21:35:40Z",
      "updated_at": "2018-08-16T21:35:40Z"
    },
    {
      "author": "HumanEquivalentUnit",
      "author_association": "CONTRIBUTOR",
      "body": "> We added -Raw a long while back to address the perf issue but it doesn't really do the right thing\r\n\r\nOhhh I didn't imagine it had already been acted on. That's partly what I meant about \"*ideally I would want a parameter name to communicate \"this is faster\" to people who see it*\". I've used `-Raw` in other circumstances, not noticed it was faster, and not twigged it was related to this.",
      "created_at": "2018-08-16T23:43:34Z",
      "updated_at": "2018-08-16T23:43:34Z"
    },
    {
      "author": "jcotton42",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT ok sounds good. Given that it looks like that PR will affect mine I will wait until it's merged.",
      "created_at": "2018-08-17T01:40:59Z",
      "updated_at": "2018-08-17T01:41:06Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "As for what to name the parameter:\r\n\r\nI suggest `-Bare`, which avoids the `-Raw` confusion (_raw_ also has inapplicable connotations of reading _raw bytes_).\r\n\r\n(Conversely, a more sensibly named parameter alias  for `-Raw` should be introduced - see #7715)\r\n\r\nUsing `-Bare` - without including the term _lines_ - also opens the door for implementing similar logic for other cmdlets (opting out of output-object decoration) that may be emitting different types of output objects - see #7713 (though there the \"bare\" objects happen to be lines too, except if combined with the proposed option to return only matching portions of a line (#7712)).",
      "created_at": "2018-09-05T17:56:11Z",
      "updated_at": "2018-09-06T19:13:51Z"
    }
  ],
  "created_at": "2018-08-16T03:58:53Z",
  "number": 7537,
  "state": "open",
  "title": "Get-Content is slow on large text files. Could it have a parameter to speed it up by not adding NoteProperties?",
  "updated_at": "2018-11-12T17:46:15Z"
}