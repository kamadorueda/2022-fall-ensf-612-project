{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10309",
  "author": "iSazonov",
  "body": "I discovered that for cdxml modules PowerShell calls GetSaferPolicy() method twice:\r\n1. https://github.com/PowerShell/PowerShell/blob/3ca5a1bdb031eeb9453b1481bcfa23eee6d89aec/src/System.Management.Automation/engine/Modules/ModuleCmdletBase.cs#L1208\r\n2. https://github.com/PowerShell/PowerShell/blob/3ca5a1bdb031eeb9453b1481bcfa23eee6d89aec/src/System.Management.Automation/engine/Modules/ModuleCmdletBase.cs#L1260\r\n\r\nDozens of such modules can be installed on the system and this gives a noticeable delay in the command. \r\n`Get-Module -Listavailable -All` can consumes a lot of time - up to 25s on my computer at first run and up to 12s in follow runs.\r\nAfter I remove GetSaferPolicy() - up to 9s at first run and up to 0.9s in follow runs\r\n\r\nGetScriptInfoForFile() method has a checkExecutionPolicy parameter which is converted to CommandOrigin  in GetScriptInfoForFile() method but the CommandOrigin is ignored in follow method ShouldRunInternal() - so checkExecutionPolicy parameter doesn't work at all.\r\n\r\nI hope we could find a way to remove the extra second check for cdxml modules. I'd expect that we could get 10% perf win at least in the scenario on Windows.\r\n/cc @PaulHigin @SteveL-MSFT \r\n\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\nGet-Module -Listavailable -All\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-preview.2\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-preview.2-36-g3ca5a1bdb031eeb9453b1481bcfa23eee6d89aec\r\nOS                             Microsoft Windows 10.0.17763\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2022-10-04T07:03:22Z",
  "comments": [
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@iSazonov Is this a regression caused by the windows update? Or it has always been slow?",
      "created_at": "2019-08-06T19:33:23Z",
      "updated_at": "2019-08-06T19:33:23Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw I think it is always slow.\r\nI checked on a test VM, install RSAT (to get many modules), run `Measure-Command { Get-Module -Listavailable -All }`\r\non Windows 10 1709 Enterprise then update OS to Windows 10 1803 Enterprise\r\n(MS Defender)\r\n- Windows 10 1709 Enterprise - 3.8s (1.25s without  GetSaferPolicy() call)\r\n- Windows 10 1803 Enterprise - 3.84s (1.24s without  GetSaferPolicy() call)\r\n\r\nThen I checked on HW computer with different antiviruses.\r\nWindows 10 1809 Enterprise\r\n- with KES/KAV and latest updates - 3.7s (0.46s without  GetSaferPolicy() call)\r\n- with MS Defender (KES/KAV was removed) and latest updates - 3.0s (0.33s without  GetSaferPolicy() call)\r\n- with MS Defender (KES/KAV was removed) and only March updates - 3.0s (0.33s without  GetSaferPolicy() call)\r\n\r\nConclusion:\r\n- The Safer API is very slow always.\r\n",
      "created_at": "2019-08-07T12:18:17Z",
      "updated_at": "2019-08-07T12:18:17Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov \r\nI verified that the Safer API is called twice per CDXML module processing, however it would not be easy to change since the code paths are from different parts of module processing.\r\n\r\nI also tried reproducing this by disabling Safer API for CDXML modules, but I did not see any significant perf difference when listing modules.  This may be because the Safer APIs can take varying amounts of time depending on whether it needs to refresh cert revocation list.  But in general I would expect the Safer check time to be insignificant compared to the work done in importing a module.",
      "created_at": "2019-08-07T16:48:25Z",
      "updated_at": "2019-08-07T16:48:25Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@PaulHigin Thanks!\r\n>  I did not see any significant perf difference when listing modules.\r\n\r\nDo you measure for default installation? I installed RSAT to get over 400 modules (I don't know how many csxml modules is there) - only in the case we will see significant delay in the scenario.\r\n\r\n>  But in general I would expect the Safer check time to be insignificant compared to the work done in importing a module.\r\n\r\nYes, it is not significant for module import scenario. Here I consider another scenario - Get-Module -Listavailable -All - in the scenario we pass hundreds of files through Safer API.\r\nAnother scenario - run Pester tests for a project like the repo - again hundreds of files is passed through Safer API.\r\nThe worst part is also affecting completions in interactive scenario. On my computer where `Get-Module -Listavailable -All` takes sometimes over 20s, if I type `Get-<Tab>` after pwsh start it can takes a lot of time too.\r\nI guess there is many users who install RSAT and many modules and who is prone to this problem.",
      "created_at": "2019-08-07T17:17:04Z",
      "updated_at": "2019-08-07T17:17:04Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "Yes, I tested with `gmo -list -all`.  I am not running RSAT but I do list > 1000 modules.  In any case I was measuring the difference between CDXML SaferAPI calls and no CDXML SaferAPI calls to try and get an idea of the impact of SaferAPIs.\r\n\r\nHowever, I am sure machine/HD speed makes a difference, and as I mentioned I know that the API call time can vary greatly depending on whether cert revocation checks need to be made.\r\n\r\nAt least in my case the Safer APIs made no noticeable difference in performance.",
      "created_at": "2019-08-07T20:42:31Z",
      "updated_at": "2019-08-07T20:42:31Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": ">  I am sure machine/HD speed makes a difference\r\n\r\nAs we can see on screenshots https://github.com/PowerShell/PowerShell/pull/10244#discussion_r308518652  GetSaferPolicy() is on top, and no HD related API is in the trace.\r\n\r\n> the API call time can vary greatly depending on whether cert revocation checks need to be made\r\n\r\nI tested in closed enterprise environment and I'd guess that in second case (cert revocation) is main. But I turn on CAPI2 log and see only 40 events with Verify Trust category for signed cdxml files - _they takes only 1 second_. (And I see that the events presents twice).\r\nThen I measure\r\n```\r\nMeasure-Command { Get-Module -ListAvailable -All }\r\n\r\nDays              : 0\r\nHours             : 0\r\nMinutes           : 0\r\nSeconds           : 10\r\nMilliseconds      : 937\r\nTicks             : 109376769\r\nTotalDays         : 0,000126593482638889\r\nTotalHours        : 0,00303824358333333\r\nTotalMinutes      : 0,182294615\r\nTotalSeconds      : 10,9376769\r\nTotalMilliseconds : 10937,6769\r\n```\r\nand \r\n```\r\nMeasure-Command {dir C:\\windows\\system32\\WindowsPowerShell\\v1.0\\Modules\\ -Recurse}\r\n\r\nDays              : 0\r\nHours             : 0\r\nMinutes           : 0\r\nSeconds           : 1\r\nMilliseconds      : 11\r\nTicks             : 10113956\r\nTotalDays         : 1,17059675925926E-05\r\nTotalHours        : 0,000280943222222222\r\nTotalMinutes      : 0,0168565933333333\r\nTotalSeconds      : 1,0113956\r\nTotalMilliseconds : 1011,3956\r\n```\r\n\r\nSo I cannot confirm that cert revocation and HD cause the issue.\r\n",
      "created_at": "2019-08-08T03:49:28Z",
      "updated_at": "2019-08-08T03:49:28Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I collected a trace with WPR/WPA on HW computer with clean install OS.\r\nThe trace shows that 90% time it is GetSaferPolicy() and SRP API. (Below you can see 3.5s delay but there is second way with the same delay - we check cdxml twice, so delay is above 7s from 9s)\r\n![pwsh-ge-module](https://user-images.githubusercontent.com/22290914/62695819-810e5300-b9f0-11e9-8456-b46f5f63314c.png)\r\n\r\nI disconnect network cable and expect that the delay go away but I get the same delay. I guess the delay is not a network delay. The API is not documented and I can not confirm that it is CRL check problem.",
      "created_at": "2019-08-08T10:31:53Z",
      "updated_at": "2019-08-08T10:31:53Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "If you disconnect the network cable, then there will be a timeout delay if a cert revocation check is needed.",
      "created_at": "2019-08-08T15:41:45Z",
      "updated_at": "2019-08-08T15:41:45Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Usually all network delays go away if Windows haven't network - network API fast returns if network interface is down. It is my expectation (`ping unknowncomputer` returns without delay in the case).\r\n\r\n",
      "created_at": "2019-08-09T05:09:13Z",
      "updated_at": "2019-08-09T05:09:13Z"
    }
  ],
  "created_at": "2019-08-06T13:34:47Z",
  "number": 10309,
  "state": "closed",
  "title": "Double check cdxml modules in Safer API",
  "updated_at": "2022-10-04T07:03:22Z"
}