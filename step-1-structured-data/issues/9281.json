{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9281",
  "author": "iSazonov",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nAdd very popular \"is\" and \"_is\" prefixes.\r\n\r\n## PR Context\r\n\r\n<!-- Provide a little reasoning as to why this Pull Request helps and why you have opened it. -->\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n",
  "closed_at": "2019-04-05T17:56:22Z",
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Should we just enable [allowCommonHungarianPrefixes](https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/Configuration.md#hungarian-notation)?  It seems that you don't need to explicitly specify the leading underscore version?",
      "created_at": "2019-04-03T21:15:58Z",
      "updated_at": "2019-04-03T21:15:58Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Yes, but CodeFactor still reports \"is\" and \"_is\" https://www.codefactor.io/repository/github/powershell/powershell/issues?category=Style&groupId=15\r\n\r\nUpdate: from previous PR https://www.codefactor.io/repository/github/powershell/powershell/pull/8500 - there is CodeFactor reports that \"is\" and \"_is\" too. \r\nI do not understand where the problem is :-(\r\n",
      "created_at": "2019-04-04T03:19:54Z",
      "updated_at": "2019-04-04T03:38:34Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "some tools read from master and don't use the configuration files from the PR.  I'm just guessing.",
      "created_at": "2019-04-04T23:24:43Z",
      "updated_at": "2019-04-04T23:24:43Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "It's actually difficult to read the updated config from a PR as the json you get back is just the diff of the file and not the complete file.  This is why for @PoshChan I always look in master rather than trying to generate the resulting config file from master + diff.",
      "created_at": "2019-04-05T02:12:04Z",
      "updated_at": "2019-04-05T02:12:04Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@TravisEz13 There is really a problem. As @SteveL-MSFT mentioned above  allowCommonHungarianPrefixes enabled \"is\" by default - I found [this](https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/57821a1c4d014e8d80b3e236ff444e0e30d8a112/StyleCop.Analyzers/StyleCop.Analyzers/NamingRules/SA1305FieldNamesMustNotUseHungarianNotation.cs#L65) in source code too. But CodeFactor continues to report \"is\". We can see this in previous @daxian-dbw PR #8500 - it seems CodeFactor read config from commit - and then in master too.\r\n",
      "created_at": "2019-04-05T03:08:59Z",
      "updated_at": "2019-04-05T03:08:59Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT @TravisEz13 @daxian-dbw \r\n\r\nI received a response from the CodeFactor support:\r\n\r\n>Thank you for reaching out.  \r\nCodeFactor supports Settings.StyleCop file as config, but not stylecop.json (it will be supported once https://github.com/DotNetAnalyzers/StyleCopAnalyzers/releases is out of RC). \r\nSo, you can still configure StyleCop to do what allowCommonHungarianPrefixes proposes by modifying Settings.StyleCop file (e.g. https://stackoverflow.com/a/45606734) \r\nPlease let me know if I was able to address your inquiry or if you need anything else.  \r\nThank you, \r\nSandra Jones \r\nYour CodeFactor.io team \r\nTrack CodeFactor.io feature announcements on Twitter https://twitter.com/CodeFactor_io\r\n\r\nSo I reverted previous commit and change Settings.StyleCop as recommended. You can see that now CodeFactor reports \"2253 issues fixed.\"\r\n\r\nWe could move stylecop.json to Tools folder and use Settings.StyleCop until CodeFactor get new StyleCopAnalyzers version.",
      "created_at": "2019-04-05T12:55:00Z",
      "updated_at": "2019-04-05T13:02:26Z"
    }
  ],
  "created_at": "2019-04-03T09:00:41Z",
  "number": 9281,
  "state": "closed",
  "title": "Fix stylecop hungarian ",
  "updated_at": "2019-04-05T18:18:49Z"
}