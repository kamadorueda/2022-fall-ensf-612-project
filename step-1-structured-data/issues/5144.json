{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5144",
  "author": "dantraMSFT",
  "body": "NOTE: Tests are pending...\r\n\r\nThis PR is divided into the following areas: \r\n1: Add/Rename the PowerShell/Windows ETW manifest to the repo and change both the provider id (guid) and name.  See https://github.com/PowerShell/PowerShell/issues/4939.\r\nThe manifest is at tools/resxgen/PowerShell-Core-Instrumentation.man\r\n\r\n2: Generate a resx file containing the string resources needed for logging ETW events to syslog.\r\nThis is accomplished by tools\\resxgen\\resxgen.psm1 and resxgen.ps1.  The tool generates two files\r\n* A resx file containing string resources for each message string from the manifest.  This is generated into the System.Management.Automation\\gen directory.\r\n* A C# class (EventResource) that provides the mapping between the integer event id and the associated string resource name. The file is generated into the System.Management.Automation\\CoreCLR directory with a compile-time condition of UNIX\r\nNOTE: The EventResource.cs class generated by resgen is explicitly ignored in the csproj file; it is not used.\r\n\r\n3: Native shims for the syslog apis to enable pInvoke.\r\nThe shim implementations are libpsl-native\\src\\nativesyslog.cpp.  Native_SysLog, Native_OpenLog, and Native_CloseLog are the target pInvoke.\r\nNOTE: See https://github.com/PowerShell/PowerShell/pull/5149.\r\n\r\n4: SMA\\utils\\tracing\\PSSysLogProvider.cs \r\nImplements the abstract LogProvider class and is the syslog equivalent of PSEtwLogProvider.  The class contains a number of logical methods for logging lifecycle, health, and normal events.  \r\n\r\n5: SMA\\utils\\tracing\\SysLogProvider.cs \r\nThis is the Syslog equivalent of ETW's log provider class and implements a Log method versus ETW's EventWrite.  It is also responsible for resolving event ids to resource names and peforming the Syslog call.  There is a large comment block in the class XML doc that describes the types of log output it produces.\r\n\r\n6: SMA\\utils\\tracing\\PSEtwLog.cs \r\nPowerShell's current implementation is tightly coupled to this class; with code calling it directly for all events. To simplify integration of syslog, I updated the class to create an instance of PSSysLogProvider on Linux and removed the Linux-specific stub file.\r\n\r\n7: SMA\\engine\\PropertyAccessor.cs\r\nThis class provides a wrapper around PowerShellProperties.json and has been extended to have Unix-specific assessors for configuring logging.  Note that the file is expected to be in the $PSHOME directory to ensure SxS.\r\n\r\nCurrently, there are four configuration properties:\r\n\r\nLogIdentity - the string identifier for the source application. This defaults to 'powershell' and can be configured to enable distinguishing between side-by-side installations.\r\n\r\nLogLevel - configures the tracing level (log level).  Informational is the defauilt.\r\n\r\nLogChannels - used to enable operational and analytic logging.  Operational is the default.\r\n\r\nLogKeywords - used to configure enabling tracing by keyword.  All keywords other than UseAlwaysAnalytic are enabled by default.\r\nNOTE: This will likely change.  PowerShell sometimes confuses the analytic channel with this keyword and sends logging to the wrong channel.  Once this is cleared up, UseAlwaysAnalytic and UseAlwaysOperational keywords will likely be removed.\r\n\r\nAdditional Notes:\r\n\r\n1: The current implementation writes directly to syslog and writing to a separate log file is still pending.  \r\n2: The generated class and resx are not part of the build; instead, it is expected that Resxgen should be run when events are added to the manifest.  To fully automate the process, resxgen will need to be updated to generate the other dependent enums such as PSChannel, PSEventId, PSTask, PSOpcode, etc.   You will see parsing logic in resxgen.psm1 to prepare for that but it is not enabled at this point.\r\n4: Documentation is pending that documents the format of the syslog output as well as associated configuration.\r\n5: As mentioned at the start, tests are pending ",
  "closed_at": "2017-11-06T16:32:30Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Add \"Blocked\" to wait #5149 ",
      "created_at": "2017-10-18T06:16:21Z",
      "updated_at": "2017-10-18T06:16:21Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Something is wrong. A lot merged changes are shown up in this PR. Can you please rebase?",
      "created_at": "2017-10-20T18:00:02Z",
      "updated_at": "2017-10-20T18:00:02Z"
    },
    {
      "author": "dantraMSFT",
      "author_association": "CONTRIBUTOR",
      "body": "@PaulHigin I believe I've address all of your feedback.\r\n@daxian-dbw I've fixed the commit list.",
      "created_at": "2017-10-20T19:45:47Z",
      "updated_at": "2017-10-20T19:45:47Z"
    },
    {
      "author": "dantraMSFT",
      "author_association": "CONTRIBUTOR",
      "body": "@lzybkr I've addressed everything I plan to address.  \r\nFor some reason, your comments about the shared StringBuilder aren't showing up but I've made the changes anyways. \r\n@daxian-dbw Let me know if you have any additional feedback.",
      "created_at": "2017-10-24T02:03:36Z",
      "updated_at": "2017-10-24T02:03:36Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "> The hash code is used in-lieu of logging the long commit id with every log message. Instead, I log an initial entry containing the full commit id and the associated hash. Subsequent entries contain on the hash. SysLogProvider has a comment block at the beginning that illustrates its usage.\r\n\r\n\"GetHashCode\" on the same string text value will return different hash value in different processes. Would that cause any confusion?",
      "created_at": "2017-10-24T03:19:48Z",
      "updated_at": "2017-10-24T03:19:48Z"
    },
    {
      "author": "dantraMSFT",
      "author_association": "CONTRIBUTOR",
      "body": "@daxian-dbw The intent is to be able to identify the the full commit id from the hash.  There's currently, as far as I can tell, no built-in way to get a stable string hash.  We'd have to look to one of the security hashing algorithms or provide a modified one of our own; something that doesn't change per process or per build.\r\n\r\nIf we go that route, we should document it because I expect consumers to take a dependency on specific values.",
      "created_at": "2017-10-24T15:12:19Z",
      "updated_at": "2017-10-24T15:13:08Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Git commit id is already a hash - can we use it?",
      "created_at": "2017-10-24T15:56:26Z",
      "updated_at": "2017-10-24T15:56:26Z"
    },
    {
      "author": "dantraMSFT",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov The Git commit id is something like this: v6.0.0-beta.8-67-gca2630a3dea6420a3cd3914c84a74c1c45311f54\r\nI'm trying to avoid logging that with every log record.",
      "created_at": "2017-10-24T16:19:09Z",
      "updated_at": "2017-10-24T16:19:09Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "SHA is only `ca2630a3dea6420a3cd3914c84a74c1c45311f54` and we can use first 7 chars.",
      "created_at": "2017-10-24T16:33:52Z",
      "updated_at": "2017-10-24T16:33:52Z"
    },
    {
      "author": "dantraMSFT",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov Is this just a general comment or are you requesting it be changed?",
      "created_at": "2017-10-24T17:16:05Z",
      "updated_at": "2017-10-24T17:16:05Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "It is a suggestion. I don't know how much this hash is good for the logging. It seems good. \r\n \r\n ",
      "created_at": "2017-10-24T17:43:00Z",
      "updated_at": "2017-10-24T17:43:00Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Git accepts any number of characters from the hash as long as it's unambiguous.  Typically, the first 7 characters is sufficient, but sometimes you have to use more if there's a collision.  ",
      "created_at": "2017-10-25T01:48:35Z",
      "updated_at": "2017-10-25T01:48:35Z"
    },
    {
      "author": "dantraMSFT",
      "author_association": "CONTRIBUTOR",
      "body": "@daxian-dbw, @iSazonov, @lzybkr : Any additional comments?\r\n\r\n@daxian-dbw Note that this PR depends on https://github.com/PowerShell/PowerShell/pull/5151.",
      "created_at": "2017-10-25T23:00:27Z",
      "updated_at": "2017-10-25T23:00:27Z"
    },
    {
      "author": "dantraMSFT",
      "author_association": "CONTRIBUTOR",
      "body": "@daxian-dbw  This is dependent on https://github.com/PowerShell/PowerShell/issues/5231.",
      "created_at": "2017-10-26T22:45:15Z",
      "updated_at": "2017-10-26T22:45:15Z"
    },
    {
      "author": "dantraMSFT",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov and @lzybkr: let me know if you have any more comments.",
      "created_at": "2017-10-27T20:14:31Z",
      "updated_at": "2017-10-27T20:14:31Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "LGTM.",
      "created_at": "2017-10-28T15:34:29Z",
      "updated_at": "2017-10-28T15:34:29Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@dantraMSFT The macbook is not available today, so I probably cannot publish a new package for libspl today. I will check with @TravisEz13 to see if he can build the libspl binary for osx.",
      "created_at": "2017-10-30T17:13:21Z",
      "updated_at": "2017-10-30T17:13:21Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@dantraMSFT The new libpsl package `libpsl 6.0.0-beta.8` has been published (https://powershell.myget.org/feed/powershell-core/package/nuget/libpsl). Can you please try and see if it works?",
      "created_at": "2017-10-30T18:40:29Z",
      "updated_at": "2017-10-30T18:40:29Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@lzybkr Can you please take another look and see if you have further comments?",
      "created_at": "2017-10-30T18:41:57Z",
      "updated_at": "2017-10-30T18:41:57Z"
    },
    {
      "author": "dantraMSFT",
      "author_association": "CONTRIBUTOR",
      "body": "@daxian-dbw I'm producing a build to test the libpsl package now.",
      "created_at": "2017-10-30T19:19:25Z",
      "updated_at": "2017-10-30T19:19:25Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "I'm done reviewing this - so no more comments. I tried taking another look, but I'm on a smaller screen for the next couple weeks and it's getting annoying to review this way, so I'll just trust @dantraMSFT on the updates.",
      "created_at": "2017-10-30T19:23:36Z",
      "updated_at": "2017-10-30T19:23:36Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@dantraMSFT I just noticed that there are no tests in this PR. Are you planning to add tests later?",
      "created_at": "2017-10-31T03:09:36Z",
      "updated_at": "2017-10-31T03:09:36Z"
    },
    {
      "author": "dantraMSFT",
      "author_association": "CONTRIBUTOR",
      "body": "NOTE: This PR is dependent on https://github.com/PowerShell/PowerShell/pull/5310 as well as republishing the nugget package for libpsl-native.",
      "created_at": "2017-11-02T18:33:25Z",
      "updated_at": "2017-11-02T18:33:25Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "#5310 has been merged. Need to update the libpsl nuget package to include the binary with the new changes.",
      "created_at": "2017-11-03T17:58:23Z",
      "updated_at": "2017-11-03T17:58:23Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "The new libpsl nuget package has been published to powershell-core feed.\r\nI also restarted the Travis CI builds.",
      "created_at": "2017-11-03T21:12:28Z",
      "updated_at": "2017-11-03T21:12:28Z"
    },
    {
      "author": "dantraMSFT",
      "author_association": "CONTRIBUTOR",
      "body": "@daxian-dbw I've verified the package on Ubuntu 14.04, Rasberry PI, and Mac 10.12. My 16.04 system is currently hosed.\r\n",
      "created_at": "2017-11-03T23:35:42Z",
      "updated_at": "2017-11-03T23:35:42Z"
    }
  ],
  "created_at": "2017-10-17T17:36:46Z",
  "number": 5144,
  "state": "closed",
  "title": "Redirect ETW logging to Syslog on Linux",
  "updated_at": "2018-01-18T18:54:32Z"
}