{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3580",
  "author": "iSazonov",
  "body": "Fixed #3545.\r\n\r\nI fixed by restore \"ProgramFiles\" and \"ProgramFiles(X86)\"environment variables for subprocess.\r\nI don't understand how PowerShell use it in start time and perhaps my fix is not in right place.\r\n",
  "closed_at": "2017-04-28T04:04:20Z",
  "comments": [
    {
      "author": "JamesWTruher",
      "author_association": "MEMBER",
      "body": "this needs at least 1 test for validation unless a test already exists.",
      "created_at": "2017-04-25T23:00:19Z",
      "updated_at": "2017-04-25T23:00:19Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "This probably is not the right fix, what if I'm starting an application which is not powershell and I really would like no environment variable at all?\r\n\r\nI feel the right approach probably should be avoiding using environment variables in powershell as much as possible. After we move to `netcoreapp2.0`, we can use `[System.Environment]::GetFolderPath` to get most special folder paths on windows. For example, `ClrFacade.GetFileSecurityZone` uses `Environment.GetEnvironmentVariable(\"SystemRoot\")` which can be replaced now. It seems `PSReadline` also depends on environment variables and thus I got the error `The type initializer for 'Microsoft.PowerShell.PSConsoleReadLine`.\r\n\r\nHowever, it's impossible to avoid environment variables in powershell on Unix, as `[System.Environment]::GetFolderPath` doesn't work in most cases. So I believe powershell started by `Start-Process powershell -UseNewEnvironment` on Unix platforms won't work well by design.",
      "created_at": "2017-04-26T18:53:56Z",
      "updated_at": "2017-04-26T18:53:56Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw Thanks that confirmed my doubts!\r\n\r\nAs the latest option of this partial solution can I put a check that exactly `powershell` runs?\r\n\r\nThen we can also open tracking question to remove in the future depending on environment variables.\r\n\r\n",
      "created_at": "2017-04-27T03:38:08Z",
      "updated_at": "2017-04-27T03:39:56Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@iSazonov That feels a hack to me. I prefer to fix the issue for win-core powershell by directly removing the dependencies on environment variables -- I believe they are workarounds for `Environment.GetFolderPath` which were missing in .NET Core 1.1 and prior.",
      "created_at": "2017-04-27T21:17:53Z",
      "updated_at": "2017-04-27T21:17:53Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I created new Issue #3662 about avoiding using environment variables and close the PR.",
      "created_at": "2017-04-28T04:04:20Z",
      "updated_at": "2017-04-28T04:04:20Z"
    }
  ],
  "created_at": "2017-04-17T14:29:44Z",
  "number": 3580,
  "state": "closed",
  "title": "Fix Start-Process with -UseNewEnvironment switch",
  "updated_at": "2017-04-28T04:04:20Z"
}