{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13879",
  "author": "moyue83",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 and PowerShell 7+ issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6).\r\n\r\n-->\r\n\r\n## Steps to reproduce\r\n\r\n```powershell\r\n\r\n\"test`r`ntest12`r`ntest123`r`ntest12`r`ntest`r`n\" > logfile.txt\r\nSelect-String \"test123\" .\\logfile.txt -Context 1,1\r\n\r\n```\r\n\r\n## Expected behavior\r\n\r\n```none\r\nlogfile.txt:2:test12\r\nlogfile.txt:3:test123\r\nlogfile.txt:4:test12\r\n```\r\n\r\n## Actual behavior\r\n\r\n```none\r\nlogfile.txt:3:test123\r\n```\r\n\r\n## Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.3\r\nPSEdition                      Core\r\nGitCommitId                    7.0.3\r\nOS                             Microsoft Windows 10.0.19041\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\nseems to fail on v6 & 5 as well.\r\n```\r\n",
  "closed_at": "2020-10-27T08:41:39Z",
  "comments": [
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Hmm... using your command verbatim, I don't see the symptom on my W10 machine, neither in 7.0.3 nor in 7.1.0-rc.2 nor in Windows PowerShell v5.1.18362.1110",
      "created_at": "2020-10-26T16:29:51Z",
      "updated_at": "2020-10-26T16:30:00Z"
    },
    {
      "author": "moyue83",
      "author_association": "NONE",
      "body": "Hi Michael, Thanks for checking. \r\nBut what do you mean with that ? Do don't get the same behavior as me ? \r\nThat's strange, as I get the same behavior on every server that I manage including my Home desktop. \r\n\r\n",
      "created_at": "2020-10-26T17:09:03Z",
      "updated_at": "2020-10-26T17:09:03Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Yes, I don't get the same behavior as you and instead see the expected behavior, on both editions, on Windows, macOS, Ubuntu.\r\n\r\nCould this be an output formatting problem (though I wouldn't see how)?\r\nDo you also get different output for this?\r\n\r\n```powershell\r\nPS> (Select-String \"test123\" .\\logfile.txt -Context 1,1) | select Line, { $_.Context.PreContext, $_.Context.PostContext }\r\n\r\nLine     $_.Context.PreContext, $_.Context.PostContext \r\n----    -----------------------------------------------\r\ntest123 {test12, test12}\r\n```",
      "created_at": "2020-10-26T17:23:41Z",
      "updated_at": "2020-10-26T17:23:41Z"
    },
    {
      "author": "moyue83",
      "author_association": "NONE",
      "body": "I do get the same result as you on this.\r\nI've reinstalled my laptop last week and before that I had the same problem as well. \r\nThe only thing that can be differently then are the regional settings, but I can't imagine that his could have an impact on this behavior.\r\n\r\n```powershell\r\nPS C:\\temp> (Select-String \"test123\" .\\logfile.txt -Context 1,1) | select Line, { $_.Context.PreContext, $_.Context.PostContext }\r\n\r\n\r\nLine     $_.Context.PreContext, $_.Context.PostContext\r\n----    -----------------------------------------------\r\ntest123 {test12, test12}\r\n\r\nPS C:\\temp>\r\n```",
      "created_at": "2020-10-26T17:51:45Z",
      "updated_at": "2020-10-26T17:51:45Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Interesting; what are your regional settings? What does `Get-Culture` output?",
      "created_at": "2020-10-26T17:53:10Z",
      "updated_at": "2020-10-26T17:53:10Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "I have a sneaking suspicion that the comma is being read as something else when on a different culture... Let me go check the code here.",
      "created_at": "2020-10-26T18:12:58Z",
      "updated_at": "2020-10-26T18:12:58Z"
    },
    {
      "author": "moyue83",
      "author_association": "NONE",
      "body": "-context 1 isn't working either. ( without the comma ).\r\n\r\n```powershell\r\nPS C:\\temp> Get-Culture\r\n\r\nLCID             Name             DisplayName\r\n----             ----             -----------\r\n8192             en-BE            English (Belgium)\r\n```",
      "created_at": "2020-10-26T18:17:38Z",
      "updated_at": "2020-10-26T18:17:38Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Hmm... nope, it _shouldn't_ be different. It's read as `int[]` which should be fine. If that argument parsing was causing problems, I'd expect you'd have a lot more issues.\r\n\r\nI'm not familiar enough with this code to see what else it might be. The context tracking code is complicated as all heck. If for some reason it's reproducible with that specific culture setting, someone with more familiarity with the code might be able to recognise what's going on with some debugging, but that's probably too complicated for me to easily sort out what's happening there at any given potin.",
      "created_at": "2020-10-26T18:18:46Z",
      "updated_at": "2020-10-26T18:18:46Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Yes, `1,1` is two-element array `1, 1`, irrespective of culture - number literals are always culture-invariant.\r\n\r\n@moyue83, I tried with the culture temporarily set to `en-BE`, but still don't see the problem.\r\nIf you try with `en-US`, does it work then?\r\n",
      "created_at": "2020-10-26T18:24:12Z",
      "updated_at": "2020-10-26T18:24:45Z"
    },
    {
      "author": "moyue83",
      "author_association": "NONE",
      "body": "Thanks guys for checking this with me. \r\nThe problem happens not in Powershell but in the module PScolor that is loaded. \r\nFor reference: [Issue Module](https://github.com/Davlind/PSColor/issues/13)\r\n\r\nregards !\r\n\r\n",
      "created_at": "2020-10-27T08:41:39Z",
      "updated_at": "2020-10-27T08:41:39Z"
    }
  ],
  "created_at": "2020-10-26T12:22:00Z",
  "labels": [
    "Issue-Question"
  ],
  "number": 13879,
  "state": "closed",
  "title": "Select-String -Context not working",
  "updated_at": "2020-10-27T08:41:40Z"
}