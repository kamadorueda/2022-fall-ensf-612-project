{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7604",
  "author": "luizgn",
  "body": "Steps to reproduce\r\n------------------\r\n\r\n```powershell\r\nRemove-Module PSReadLine\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\nAfter that, immediately see typed characters without colors, character positioning and other control characters.\r\n\r\nActual behavior\r\n---------------\r\n\r\nOn CentOS, after that, each typed character takes about one second to be showed. \r\n\r\nOn Ubuntu, after that, each typed character takes about one second to be showed and control characters like '33;19R1R' are inserted on input.\r\n```powershell\r\nPS /root> remove-module psreadline\r\n33;19R1RPS /root>\r\n33\r\n19R : The term '19R' is not recognized as the name of a cmdlet, function, script file, or operable program.\r\nCheck the spelling of the name, or if a path was included, verify that the path is correct and try again.\r\nAt line:1 char:4\r\n+ 33;19R\r\n+    ~~~\r\n+ CategoryInfo          : ObjectNotFound: (19R:String) [], CommandNotFoundException\r\n+ FullyQualifiedErrorId : CommandNotFoundException\r\n```\r\n\r\nOn Windows, it works fine.\r\n\r\nEnvironment data\r\n----------------\r\n\r\nCentOS Linux release 7.5.1804 (Core)\r\n\r\n```powershell\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.4\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.4\r\nOS                             Linux 3.10.0-862.6.3.el7.x86_64 #1 SMP Tue Jun 26 16:32:21 UTC 2018\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\nUbuntu 16.04.5 LTS\r\n\r\n```powershell\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.4\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.4\r\nOS                             Linux 4.4.0-133-generic #159-Ubuntu SMP Fri Aug 10 07:31:43 UTC 2018\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\nWindows 10\r\n```powershell\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.4\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.4\r\nOS                             Microsoft Windows 10.0.17134\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "Just an FYI\r\n\r\nThere's no issues with Preview.4.  I tested with CentOS 7, Ubuntu 17.04, and WSL Ubuntu.\r\n:)\r\n\r\n",
      "created_at": "2018-08-22T17:20:22Z",
      "updated_at": "2018-08-22T17:20:22Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "What terminal do you use?",
      "created_at": "2018-08-23T10:48:17Z",
      "updated_at": "2018-08-23T10:48:17Z"
    },
    {
      "author": "luizgn",
      "author_association": "NONE",
      "body": "I log on Linux using Putty and executed pwsh, so, $env:TERM is 'xterm'.\r\n\r\nI just tried to use 'dumb' and also tried remove $env:TERM because I noticed this variable is not set on Windows but behavior was the same.",
      "created_at": "2018-08-23T12:41:34Z",
      "updated_at": "2018-08-23T12:41:34Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "@iSazonov,\r\n\r\nI use their standard terminal.  This is not using ssh remoting!\r\n:)",
      "created_at": "2018-08-23T13:13:05Z",
      "updated_at": "2018-08-23T13:13:05Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@luizgn Do you connect to Linux from Windows?\r\n\r\nPlease test with resently published 6.1.0 RC1 version.",
      "created_at": "2018-08-24T06:51:00Z",
      "updated_at": "2018-08-24T06:51:00Z"
    },
    {
      "author": "luizgn",
      "author_association": "NONE",
      "body": "@iSazonov, yes, I'm connecting to Linux from Windows 10 using [Putty ](https://www.putty.org/) ssh client. 6.1.0 RC1 has same behavior.\r\n\r\nNow, I tested using Enter-PSSession with 6.1.0 RC1 and OpenSSH_for_Windows_7.7p1 ssh client and it crashed:\r\n\r\n```powershell\r\nPS D:\\OpenSSH-Win64> Enter-PSSession -HostName 10.0.0.2 -UserName psuser\r\npsuser@10.0.0.2's password:\r\npsuser@10.0.0.2's password: Enter-PSSession : The background process reported an error with the following message: The SSH client session has ended with error message: Permission denied, please try again..\r\nAt line:1 char:1\r\n+ Enter-PSSession -HostName 10.0.0.2 -UserName psuser\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : ResourceUnavailable: (:) [Enter-PSSession], PSRemotingTransportException\r\n+ FullyQualifiedErrorId : System.Management.Automation.Remoting.PSRemotingDataStructureException,Microsoft.PowerShell.Commands.EnterPSSessionCommand\r\n```\r\n\r\nThan, I tested using ssh client (OpenSSH_for_Windows_7.7p1) from powershell 6.1.0 RC1 console and it has same behavior also (psuser uses /bin/pwsh-preview as shell):\r\n\r\n```powershell\r\nPS D:\\OpenSSH-Win64> ssh psuser@10.0.0.2\r\npsuser@10.0.0.2's password:\r\nPowerShell 6.1.0-rc.1\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\n\r\nhttps://aka.ms/pscore6-docs\r\nType 'help' to get help.\r\n\r\nPS /home/psuser> $psversiontable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.1.0-rc.1\r\nPSEdition                      Core\r\nGitCommitId                    6.1.0-rc.1\r\nOS                             Linux 3.10.0-862.6.3.el7.x86_64 #1 SMP Tue Jun 26 16:32:21 UTC 2018\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n\r\nPS /home/psuser> remove-module psreadline\r\nPS /home/psuser> test\r\n```\r\n\r\nAfter removing psreadline, all characters are typed very slowly.",
      "created_at": "2018-08-24T13:52:01Z",
      "updated_at": "2018-08-24T13:52:01Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@PaulHigin Could you please comment the Issue?",
      "created_at": "2018-08-24T18:19:42Z",
      "updated_at": "2018-08-24T18:19:42Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "I don't think the issue is with remoting.  It seems this is at the Linux main console terminal.\r\n\r\nAlso, I had a different issue when removing PSReadline impacting tab-completion which ended up to be **By-Design**.  \r\n\r\nIn other words, in Linux or MacOS, we shouldn't remove the PSReadLine module. There's a chance it will impact the performance of PowerShell Core.\r\n\r\n:(",
      "created_at": "2018-08-24T18:47:19Z",
      "updated_at": "2018-08-24T18:47:19Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "PSReadLine is not used for prompts, e.g. `$host.UI.ReadLine()` or `[Console]::ReadLine()`, so it's worth understanding if that's also slow.\r\n\r\nAs an aside, `$host.UI.ReadLine()` should probably use PSReadLine, but disable colors and history.",
      "created_at": "2018-08-24T20:43:59Z",
      "updated_at": "2018-08-24T20:43:59Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "I agree that this is not about PowerShell SSH based remoting.  This seems to only repro when SSH remoting from Windows to Linux, so we should make the Win32-OpenSSH team aware.  I have not been able to repro this but I am currently using an older version of Windows OpenSSH.\r\n\r\n@manojampalam Could this be something related to Win32-OpenSSH?",
      "created_at": "2018-08-24T22:11:45Z",
      "updated_at": "2018-08-24T22:11:45Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "Hey, \r\n\r\nIf there's an issue with Win32-OpenSSH, then someone need to open the issue on their end. This way it can be track separate from this issue.\r\n\r\nAlso, there has to be a distinction between the Win32-OpenSSH and the one implemented by Microsoft in Windows 10.  Right!!\r\n\r\n:)",
      "created_at": "2018-08-24T23:10:56Z",
      "updated_at": "2018-08-24T23:10:56Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "Just an FYI\r\n\r\nI also tested the PowerShell Core 6.1.0-rc1 and I see no issues of been slow after removing the PSReadLine.\r\n\r\nInteresting enough, I decided to install 6.0.4, remove the PSReadLine module and I'm not experiencing pwsh to be slow.  Everything seems to work in Linux, and Windows.\r\n\r\n:)",
      "created_at": "2018-08-24T23:23:14Z",
      "updated_at": "2018-08-24T23:23:14Z"
    },
    {
      "author": "luizgn",
      "author_association": "NONE",
      "body": "@MaximoTrinidad could you provide more detail about your environment? All my tries caused a high latency on text input.\r\n\r\nAnd, for me, it doesn't happen with Win32-OpenSSH only, it also happens with putty.",
      "created_at": "2018-08-24T23:56:11Z",
      "updated_at": "2018-08-24T23:56:11Z"
    },
    {
      "author": "manojampalam",
      "author_association": "NONE",
      "body": "Unable to comprehend this thread in one pass through :(. If you feel there is an issue with Win32-OpenSSH, please open an issue here - https://github.com/PowerShell/Win32-OpenSSH/issues ",
      "created_at": "2018-08-27T04:44:22Z",
      "updated_at": "2018-08-27T04:44:22Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "@luizgn,\r\n\r\nPlease clarify if this issues is due to using PSRemoting or just SSH. The issue is not clear.  Also, provide the exact steps to reproduce as the steps provided are not sufficient.  \r\n\r\nWhat happen before removing PSReadLine?\r\n\r\n:)",
      "created_at": "2018-08-27T15:18:55Z",
      "updated_at": "2018-08-27T15:18:55Z"
    },
    {
      "author": "luizgn",
      "author_association": "NONE",
      "body": "Hi, I tested using ssh, putty and PSRemoting. Issues happens in all, so, I'm sure it is not a Win32-OpenSSH issue.",
      "created_at": "2018-08-28T13:12:24Z",
      "updated_at": "2018-08-28T13:12:24Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "OK! So, this issue is really while doing remoting and not at each individual OS consoles.\r\n\r\nLet me check it out now that I understand the environment and condition.  \r\n\r\n:) ",
      "created_at": "2018-08-28T23:55:29Z",
      "updated_at": "2018-08-28T23:55:29Z"
    },
    {
      "author": "luizgn",
      "author_association": "NONE",
      "body": "@maximoTrinidad, @iSazonov, do you need more information?",
      "created_at": "2018-08-30T11:48:25Z",
      "updated_at": "2018-08-30T11:48:25Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I very wonder about '33;19R1R' - seems we don't write explicitly any escapes.\r\n@luizgn Perhaps you could record a demo video to show all repo steps and configs.",
      "created_at": "2018-08-30T13:25:38Z",
      "updated_at": "2018-08-30T13:25:38Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "Well,  I can't test!\r\n\r\nWhen connecting Windows to either Ubuntu 17.10 or to CentOS 7 using Enter-PSSession, it won't let me remove the module PSReadLine giving the following message:\r\n\r\n```\r\n[maxt@mars]: PS /home/maxt> remove-module psreadline\r\nremove-module : No modules were removed. Verify that the specification of modules to remove is correct and those modules exist in the runspace.\r\n+ CategoryInfo          : ResourceUnavailable: (:) [Remove-Module], InvalidOperationException\r\n+ FullyQualifiedErrorId : Modules_NoModulesRemoved,Microsoft.PowerShell.Commands.RemoveModuleCommand\r\n```\r\n\r\nThe module is installed but can't be remove.\r\n\r\nI only can remove it in Windows OS in PowerShell Core.  So, something change in Windows 10.\r\n\r\nI'm on Windows 10 Insider Build 17746_rs5.  Also, it seems at now Windows 10 latest Insider build has OpenSSH integrated behind the scene. I can't find any active ssh services any more on the Services Panel.\r\n\r\n\r\n",
      "created_at": "2018-08-31T22:31:49Z",
      "updated_at": "2018-08-31T22:32:38Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "PSCore6 console host doesn't write any explicit VT100 sequences, that `33;19R` sequence is a response from the terminal on a cursor position request.  This is being sent by .NET CoreFx console api and is supposed to be handled by the api so you don't see that output.  One significant difference between Windows PowerShell and PSCore6 is that the PSCore6 console host has a very simplistic readline implementation and PSReadLine is expected to be loaded for the interactive experience.  @luizgn is there a reason you need to remove PSReadLine?",
      "created_at": "2018-08-31T22:43:08Z",
      "updated_at": "2018-08-31T22:43:08Z"
    },
    {
      "author": "luizgn",
      "author_association": "NONE",
      "body": "Hi @SteveL-MSFT, sorry delay to answer.\r\n\r\nI have an application which starts Windows PowerShell and interactively send commands to it and get responses. Linux support is amazing for me because I will be able to use this on both platforms. However, I'm receiving control characters PSCore6. I think PSReadLine is causing that, so, I would like to remove it.. I appreciate if there is other solution to avoid control characters.\r\n\r\nThis is an example of control characters executing command 'hostname':\r\n\r\n![image](https://user-images.githubusercontent.com/17809978/47298988-84feef00-d5ef-11e8-825b-ff79861e35ce.png)\r\n\r\nBy the way, this is a short video showing what happens when I remove PSReadLine on Linux. All characters typed after that are showed very slowly:\r\n\r\n[powershell2.zip](https://github.com/PowerShell/PowerShell/files/2501851/powershell2.zip)\r\n\r\nOn Windows, I can remove PSReadLine without problems.",
      "created_at": "2018-10-22T14:49:32Z",
      "updated_at": "2018-10-22T14:49:32Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@luizgn I believe the perf issue is a dupe of https://github.com/PowerShell/PowerShell/issues/7971\r\n\r\nIf your application is interacting with PowerShell, you should consider hosting powershell rather than interacting with pwsh via stdin/stdout.",
      "created_at": "2018-10-22T16:18:22Z",
      "updated_at": "2018-10-22T16:18:22Z"
    }
  ],
  "created_at": "2018-08-22T16:35:24Z",
  "number": 7604,
  "state": "open",
  "title": "Remove-Module PSReadLine makes input very slow on Linux",
  "updated_at": "2018-10-22T16:18:23Z"
}