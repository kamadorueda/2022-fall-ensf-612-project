{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13707",
  "author": "mklement0",
  "body": "The problem affects both explicit string interpolation as well as implicit interpolation in command arguments.\r\n\r\nWorkaround: use `{...}` to enclose the variable name.\r\n\r\nSee [this StackOverflow question](https://stackoverflow.com/q/64107344/45375) for a real-world manifestation of this bug.\r\n\r\n## Steps to reproduce\r\n\r\n```powershell\r\n$env:foo = 'bar'\r\n# Problem equally occurs with:\r\n#    Write-Output $env:foo:$env:foo\r\n# Workaround:\r\n#    \"${env:foo}:$env:foo\"    \r\n\"$env:foo:$env:foo\" | Should -Be 'bar:bar'\r\n```\r\n\r\n## Expected behavior\r\n\r\nThe test should succeed.\r\n\r\n## Actual behavior\r\n\r\nThe test fails, because only the _last_ `$env:foo` reference was expanded (and the `:` was ignored):\r\n\r\n```none\r\n Expected: 'bar:bar' But was:  'bar'\r\n```\r\n\r\n## Environment data\r\n\r\n```none\r\nPowerShell Core 7.1.0-preview.7\r\n```\r\n\r\n",
  "closed_at": null,
  "comments": [],
  "created_at": "2020-09-28T19:20:55Z",
  "labels": [
    "Issue-Question",
    "WG-Engine"
  ],
  "number": 13707,
  "state": "open",
  "title": "Expandable strings: directly concatenating namespace-based variable references with a colon ignores all but the last reference",
  "updated_at": "2020-09-30T15:16:42Z"
}