{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10965",
  "author": "iSazonov",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nFix #3028\r\n\r\n## PR Context\r\n\r\n#10962 is direct implementation of pwshw idea. pwshw is only one option from many in the complex topic dicussed in #3028. The PR seems add more flexibility and allow to experiment with console, non-console, pseudo-console and GUI modes, allow to implement pwshw in the same way as we did for `preview-pwsh`, and also fix `-WindowStyle Hidden` scenario.\r\n\r\nUpdate: I think follow work should be:\r\n\r\n- create xUnit tests for command line parser\r\n- refactor command line parser \r\n  - make it static\r\n  - move out execution code from parser (parser should only parse)\r\n  - merge EarlyParser and parser\r\n\r\n## PR Checklist\r\n\r\n- [ ] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [ ] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [ ] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [ ] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [ ] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [ ] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2022-04-16T19:11:41Z",
  "comments": [
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@iSazonov Please add description/context for this PR. Also, #10962 is also for fixing #3028, so what is the difference between your fix and that one?",
      "created_at": "2019-11-01T17:36:44Z",
      "updated_at": "2019-11-01T17:36:44Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw #10962 is direct implementation of pwshw idea. pwshw is only one option from many in the complex topic dicussed in #3028. The PR seems add more flexibility and allow to experiment with console, non-console, pseudo-console and GUI modes, allow to implement pwshw in the same way as we did for `preview-pwsh`, and also fix `-WindowStyle Hidden` scenario.",
      "created_at": "2019-11-01T17:55:19Z",
      "updated_at": "2019-11-01T17:55:19Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "You'd better add the PR description about what you are doing in this PR, so a reviewer would know.",
      "created_at": "2019-11-01T17:58:30Z",
      "updated_at": "2019-11-01T17:58:30Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw Already done.\r\n\r\nUpdate: I think follow work should be:\r\n\r\n- create xUnit tests for command line parser\r\n- refactor command line parser \r\n  - make it static\r\n  - move out execution code from parser (parser should only parse)\r\n  - merge EarlyParser and parser",
      "created_at": "2019-11-01T18:03:59Z",
      "updated_at": "2019-11-01T18:03:59Z"
    },
    {
      "author": "DHowett-MSFT",
      "author_association": "NONE",
      "body": "Just so you\u2019re aware, attaching to the parent process\u2019s console as a Windows subsystem application (`WinExe`) will cause handle fighting where half your input will go to the parent and half to the child, and all output will be intermixed. This is because the parent, usually `cmd` or another instance of powershell _will not wait_ for a spawned Windows subsystem application to exit.\r\n\r\nYou\u2019ll probably see this:\r\n\r\n```\r\nC:\\> pwsh\r\nPowerShell 7.0.0\r\nC:\\> PS C:\\>\r\n```\r\n\r\n(One prompt from CMD, one from powershell, both running and reading input simultaneously.)\r\n\r\nThis is impossible to work around without...\r\n\r\n1. A generic solution in the operating system\r\n2. A hack where powershell knows that it\u2019s spawning another version of powershell, and waits for it to finish (working around the problem only for the PS->PS case.)",
      "created_at": "2020-04-12T05:51:44Z",
      "updated_at": "2020-04-12T05:51:44Z"
    },
    {
      "author": "DHowett-MSFT",
      "author_association": "NONE",
      "body": "Attaching back to the parent\u2019s console handle can also make the console fail to exit because a Windows subsystem application is still attached to it. This happens when you run `code` from `cmd` and then type in `exit`. CMD exits and the window remains because VSCode reattaches to its parent\u2019s console handle. ",
      "created_at": "2020-04-12T05:53:17Z",
      "updated_at": "2020-04-12T05:53:17Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@DHowett-MSFT Thanks! The scenario you describe is \"Start-Process -NoNewWindow\". We have an issue for it. I agree that we can not resolve it in simple way.\r\nOriginal issue for the PR asks to address a scenario like scheduled task in user session so that user does not see PowerShell window. In the PR I try to demo how simple we can manually allocate a console to resolve the ask if no user IO is implied.",
      "created_at": "2020-04-13T04:34:41Z",
      "updated_at": "2020-04-13T04:34:41Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMainainer, Please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2020-05-27T02:02:47Z",
      "updated_at": "2020-05-27T02:02:47Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "Open PRs should not be assigned to milestone, so they are not assigned to the wrong milestone after they are merged.  For backport consideration, use a `backport` label. ",
      "created_at": "2020-12-09T23:21:58Z",
      "updated_at": "2020-12-09T23:21:58Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2021-09-23T02:01:12Z",
      "updated_at": "2021-09-23T02:01:12Z"
    }
  ],
  "created_at": "2019-11-01T13:45:22Z",
  "number": 10965,
  "state": "closed",
  "title": "Resolve -WindowStyle Hidden console flashing",
  "updated_at": "2022-04-16T19:11:44Z"
}