{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9611",
  "author": "Creetor",
  "body": "Hello.  I have been automating tasks involving Azure DevOps' NuGet Feed with PowerShell Core on Windows 10 and have found a very odd inconsistency.  In short, if I try to register the NuGet Feed as a PS Repository through PS Core, I receive a warning and any subsequent attempts to access the PS Repo fail (before and after a console restart). The **weird part** is that if I use the same code in PowerShell to register the PS Repo and then open a new PS Core console, the follow-up commands work as expected.\r\n\r\n# Steps to reproduce\r\n1. **May or May Not Matter** - Follow the steps from [Use Azure Artifacts as a private PowerShell repository](https://docs.microsoft.com/en-us/azure/devops/artifacts/tutorials/private-powershell-library?view=azure-devops&viewFallbackFrom=vsts) until \"Connecting to the feed as a PowerShell repo\".\r\n2. Attempt to add the NuGet Feed as a PS Repository and then use it:\r\n\r\n```powershell\r\nRegister-PSRepository -Name \"PowershellAzureDevopsServices\" -SourceLocation \"https://REDACTED.pkgs.visualstudio.com/_packaging/REDACTED/nuget/v2/\" -PublishLocation \"https://REDACTED.pkgs.visualstudio.com/_packaging/REDACTED/nuget/v2/\" -InstallationPolicy Trusted\r\n$password = ConvertTo-SecureString 'REDACTED' -AsPlainText -Force\r\n$credsAzureDevopsServices = New-Object System.Management.Automation.PSCredential 'REDACTED', $password\r\nFind-Module -Repository PowershellAzureDevopsServices -Credential $credsAzureDevopsServices\r\n```\r\n\r\n# Expected behavior\r\n```PowerShell\r\nRegister-PSRepository -Name \"PowershellAzureDevopsServices\" -SourceLocation \"https://REDACTED.pkgs.visualstudio.com/_packaging/REDACTED/nuget/v2/\" -PublishLocation \"https://REDACTED.pkgs.visualstudio.com/_packaging/REDACTED/nuget/v2/\" -InstallationPolicy Trusted\r\n$password = ConvertTo-SecureString 'REDACTED' -AsPlainText -Force\r\n$credsAzureDevopsServices = New-Object System.Management.Automation.PSCredential 'REDACTED', $password\r\nFind-Module -Repository PowershellAzureDevopsServices -Credential $credsAzureDevopsServices\r\n\r\nVersion              Name                                Repository           Description\r\n-------              ----                                ----------           -----------\r\n0.0.1                Get-Hello                           PowershellAzureDevo\u2026 Say Hello PowerShellGet\r\n```\r\n\r\n* This is also how PS responds and after I add Register the Repo in PS, the other command works in a new instance of PS Core.\r\n\r\n# Actual behavior\r\n\r\n```none\r\nRegister-PSRepository -Name \"PowershellAzureDevopsServices\" -SourceLocation \"https://REDACTED.pkgs.visualstudio.com/_packaging/REDACTED/nuget/v2/\" -PublishLocation \"https://REDACTED.pkgs.visualstudio.com/_packaging/REDACTED/nuget/v2/\" -InstallationPolicy Trusted\r\n\r\nWARNING: Unable to resolve pack\r\nage source 'https://REDACTED.pkgs.visualstudio.com/_packaging/REDACTED/nuget/v2/'.\r\n\r\n$password = ConvertTo-SecureString 'REDACTED' -AsPlainText -Force\r\n$credsAzureDevopsServices = New-Object System.Management.Automation.PSCredential 'REDACTED', $password\r\nFind-Module -Repository PowershellAzureDevopsServices -Credential $credsAzureDevopsServices\r\n\r\nWARNING: Unable to resolve package source 'https://REDACTED.pkgs.visualstudio.com/_packaging/REDACTED/nuget/v2/'.\r\n```\r\n\r\n# Environment data\r\n\r\n## PowerShell Core\r\n\r\n```PowerShell\r\nPS C:\\dev> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.2.0\r\nPSEdition                      Core\r\nGitCommitId                    6.2.0\r\nOS                             Microsoft Windows 10.0.17134\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\n## PowerShell\r\n\r\n``` PowerShell\r\nPS C:\\WINDOWS\\system32> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      5.1.17134.590\r\nPSEdition                      Desktop\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nBuildVersion                   10.0.17134.590\r\nCLRVersion                     4.0.30319.42000\r\nWSManStackVersion              3.0\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\n```\r\n",
  "closed_at": "2019-09-29T17:08:23Z",
  "comments": [
    {
      "author": "rlvandaveer",
      "author_association": "NONE",
      "body": "Interestingly enough, I followed the same tutorial today and had a similar issue. Though in my case, my results have been intermittently successful from PowerShell Core on a Mac, (worked the first time, didn't work any subsequent times until moments ago), and completely unsuccessful from Windows Powershell 5.1 on a Windows Server 2016 box. Registering the repository and trying to install a module results in the same message: `WARNING: Unable to resolve package source 'https://REDACTED.pkgs.visualstudio.com/_packaging/REDACTED/nuget/v2/'`. I was able to publish my package and can see the package using the nuget CLI on both systems, but that is using the V3 URL. ",
      "created_at": "2019-05-16T00:35:29Z",
      "updated_at": "2019-05-16T00:35:29Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I think the issue should be moved to PowerShellGet repo https://github.com/PowerShell/PowerShellGet",
      "created_at": "2019-05-16T09:38:46Z",
      "updated_at": "2019-05-16T09:38:46Z"
    },
    {
      "author": "rlvandaveer",
      "author_association": "NONE",
      "body": "I would tend to agree that this is an issue with PowerShellGet and/or possibly PackageManagement.\r\n\r\nI believe I have figured out why my experience was seemingly intermittent on PowerShell Core and just didn't work on Windows Powershell. I had added a nuget source for my repository using the V3 URL following the tutorial referenced above and it was named identically to my PSRepo. I don't understand why, but operations for that PSRepo always failed with the unable to resolve package source warning. When I changed my nuget source to use the V2 URL and restarted my PowerShell session, it worked. My experience in Core was seemingly intermittent because I had not restarted my PowerShell session after changing my nuget source URL. Since it didn't appear to work in Core I never tried it in Windows PowerShell.\r\n\r\nI've swapped out the URL for my nuget source in PowerShell Core and Windows PowerShell 5.1, restarted my sessions and I am no longer seeing the issue.",
      "created_at": "2019-05-16T13:12:04Z",
      "updated_at": "2019-05-16T13:12:04Z"
    }
  ],
  "created_at": "2019-05-15T14:21:24Z",
  "number": 9611,
  "state": "closed",
  "title": "Configuration failure when using Register-PSRepository on PS Core but not PS",
  "updated_at": "2019-09-29T17:08:33Z"
}