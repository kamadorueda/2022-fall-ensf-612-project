{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6970",
  "author": "daxian-dbw",
  "body": "If there are other elements after the `if() {}` part, then parser will fail.\r\nBut it's fine if you have `if() {} else {}` as the value.\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\n$script = @'\r\n@{\r\n a = if($true) { 'true' }\r\n b = 10\r\n}\r\n'@\r\n$er = $null\r\n$a = [System.Management.Automation.Language.Parser]::ParseInput($script, [ref]$null, [ref]$er)\r\n$er\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n`$er` is null. No error produced.\r\n\r\nActual behavior\r\n---------------\r\n\r\n```none\r\nExtent ErrorId              Message                                                    IncompleteInput\r\n------ -------              -------                                                    ---------------\r\n       MissingEndCurlyBrace Missing closing '}' in statement block or type definition.           False\r\nb      UnexpectedToken      Unexpected token 'b' in expression or statement.                     False\r\n}      UnexpectedToken      Unexpected token '}' in expression or statement.                     False\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.1\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.1\r\nOS                             Microsoft Windows 10.0.17134\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2018-06-06T16:38:06Z",
  "comments": [
    {
      "author": "BrucePay",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw  Note: there is a backtick before `$true` in the example that shouldn't be there\r\n\r\nIf you put a `;` after the `if` statement as in:\r\n```powershell\r\n@{\r\n a = if($true) { 'true' };\r\n b = 10\r\n}\r\n```\r\nthen it parses properly so the bug is probably in the newline tokenization.",
      "created_at": "2018-06-02T00:04:11Z",
      "updated_at": "2018-06-02T00:04:11Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@BrucePay Good catch. The backtick is removed. I submitted a PR to fix this bug. Please take a look when you have time. Thanks!",
      "created_at": "2018-06-05T18:28:22Z",
      "updated_at": "2018-06-05T18:28:22Z"
    }
  ],
  "created_at": "2018-06-01T20:45:17Z",
  "labels": [
    "Issue-Bug",
    "WG-Language",
    "Resolution-Fixed"
  ],
  "number": 6970,
  "state": "closed",
  "title": "Hashtable literal parsing fails when using an if statement as value",
  "updated_at": "2018-06-07T10:47:29Z"
}