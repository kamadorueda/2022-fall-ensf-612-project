{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11696",
  "author": "p0W3RH311",
  "body": "steps to reproduce\r\n\r\n```\r\n$a = 8\r\n$b = 14\r\n\r\n[ValidateRange($a,$b)]$number = Read-Host \"Enter number Between 8 and 14\"\r\n```\r\n\r\nthis return error. i known we can use instead validatescript but this decorator its not specific to range or length...etc otherwise why create such decorators if validatescript can do everything",
  "closed_at": "2020-01-31T00:00:09Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Attributes require static values in order to be able to compile. As far as I know this would create uncompilable code.\r\n\r\nIn order to allow this, PS would have to retrieve variable values at the time the variable or function is defined, effectively defeating the purpose of doing so.\r\n\r\nI'd also generally be quite worried about any code written this way. Having functions that effectively have a fluid definition based on runtime state creates difficult to trace errors and unpredictable functions. The point of defining a function is to have a replicable block of code that always behaves the way it was originally defined.",
      "created_at": "2020-01-27T20:47:44Z",
      "updated_at": "2020-01-27T20:47:44Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "You could try to add an attribute dynamically in run time.",
      "created_at": "2020-01-29T14:41:58Z",
      "updated_at": "2020-01-29T14:41:58Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2020-01-31T00:00:08Z",
      "updated_at": "2020-01-31T00:00:08Z"
    }
  ],
  "created_at": "2020-01-27T19:47:34Z",
  "number": 11696,
  "state": "closed",
  "title": "decorator validator with variable",
  "updated_at": "2020-01-31T00:00:09Z"
}