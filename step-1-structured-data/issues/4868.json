{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4868",
  "author": "daxian-dbw",
  "body": "Fix #4149\r\n\r\nThe code in `AssemblyLoadContext.dll` doesn't need to be in a separate DLL anymore.\r\nS.M.A.dll depends on `AssemblyLoadContext.dll`, so keeping that code out of S.M.A.dll doesn't help make S.M.A smaller size or less dependent.\r\nThis PR is to move the code in `AssemblyLoadContext.dll` to `S.M.A.dll` and get rid of `AssemblyLoadContext.dll`.\r\n\r\nThe changes are:\r\n- Move `CorePsAssemblyLoadContext.cs` to `src\\S.M.A\\CoreCLR\\`\r\n- Update `CorePsAssemblyLoadContext.cs` to get the test took moved to `Utils.InternalTestHooks` and update tests\r\n- Update `build.psm1` and `.csproj` accrodingly\r\n- Update `pwrshcommon.cpp` to remove `AssemblyLoadContext.dll` from the TPA list.\r\n- `S.M.A.AssemblyExtensions` is removed as `PackageManagement` has finished their move to .NET Core 2.0. (I will work with Bryan to get the latest version uploaded to powershell-core)\r\n\r\nNote that, the first commit is pure file movement. To easily see the changes to `CorePsAssemblyLoadContext.cs` after the move, you can just review the second commit.",
  "closed_at": "2017-09-30T00:26:56Z",
  "comments": [
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "All PackageManagement and PowerShellGet related tests failed because @brywang-msft hasn't uploaded the latest `PackageManagement` module. Will work with him to get that done, and then re-run the CI builds.",
      "created_at": "2017-09-19T23:00:09Z",
      "updated_at": "2017-09-19T23:00:09Z"
    },
    {
      "author": "mirichmo",
      "author_association": "MEMBER",
      "body": "Just a few minor things. Otherwise it looks good.",
      "created_at": "2017-09-20T21:55:17Z",
      "updated_at": "2017-09-20T21:55:17Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "An update of other offline works related to this change:\r\n1. @brywang-msft has updated the `PackageManagement` module, and it works with this PR (feature CI passed).\r\n2. I need to refresh the `psrp-windows` package. In progress.\r\n3. I asked @nitinbps to validate this change with DSC native host. Haven't heard from him yet. I will check with him next Monday.",
      "created_at": "2017-09-23T00:12:15Z",
      "updated_at": "2017-09-23T00:12:15Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@daxian-dbw Did you hear back from @nitinbps?",
      "created_at": "2017-09-26T18:10:40Z",
      "updated_at": "2017-09-26T18:10:40Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@adityapatwardhan Not yet, I will check with him today. I'm verifying the new `psrp.windows` packages at the meantime. ",
      "created_at": "2017-09-26T18:15:05Z",
      "updated_at": "2017-09-26T18:15:05Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@adityapatwardhan talked to @nitinbps and he needs another 2 days to verify the changes.",
      "created_at": "2017-09-26T18:51:26Z",
      "updated_at": "2017-09-26T18:51:26Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Rebased to resolve the conflicts.",
      "created_at": "2017-09-27T00:36:49Z",
      "updated_at": "2017-09-27T00:36:56Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "**_[Update 1]_** Updated and validated the [`psrp.windows-beta.3`](https://powershell.myget.org/feed/powershell-core/package/nuget/psrp.windows/6.0.0-beta.3) package. It works fine on `Win10`, `Win2012R2 (after installing prerequisites)` as well as `Win7 x64 (after installing WMF 5.1)`. \r\n\r\n~However, @mirichmo found that with Beta.7 packages, remoting **does not** work on `win7 x86 + WMF 5.1` and `win8.1 x86`. Mike believes the x86 build of `pwrshplugin.dll` is broken. I opened #4955 to track that issue.~\r\n\r\n**_[Update 2]_** It turned out to be a packaging issue. In `psrp.windows-beta.2` package, the `win-x86` folder in the package actually contains the x64 plugin, which caused WinRM to fail to load the plugin on x86 systems.\r\n\r\nThis has been fixed in `psrp.windows-beta.3` package. @mirichmo has verified that remoting works on `Win7-x86 + WMF 5.1` and `WinBlue-x86 (no WMF)` with changes in this PR and the x86 plugin from `psrp.windows-beta.3` package. @mirichmo thanks for the investigation! #4955 is closed.\r\n\r\nQuoted from Mike:\r\n> On Win 7, Enable-PSRemoting throws a non-terminating error, but both it and the install script both successfully register the plugin. \r\nThe non-terminating error is from Get-CimInstance and that is a known issue with MI .Net on Win 7\r\n\r\nI also synced with @nitinbps. He still hasn't got the chance to validate this change. But he is OK that we merge this without his validation. We will handle the issue when/if it comes up.\r\n\r\n@adityapatwardhan so I think we can merge this PR now.",
      "created_at": "2017-09-29T01:00:22Z",
      "updated_at": "2017-09-29T22:17:08Z"
    },
    {
      "author": "mirichmo",
      "author_association": "MEMBER",
      "body": "LGTM",
      "created_at": "2017-09-29T22:15:46Z",
      "updated_at": "2017-09-29T22:15:46Z"
    }
  ],
  "created_at": "2017-09-19T20:52:10Z",
  "number": 4868,
  "state": "closed",
  "title": "Remove Microsoft.PowerShell.CoreCLR.AssemblyLoadContext.dll",
  "updated_at": "2017-09-30T00:26:58Z"
}