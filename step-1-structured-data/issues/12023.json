{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12023",
  "author": "jakauppila",
  "body": "# Steps to reproduce\r\n\r\n```powershell\r\nInvoke-RestMethod -uri https://<url_that_supports_credentials_this_way> -UseDefaultCredentials\r\nInvoke-WebRequest -uri https://<url_that_supports_credentials_this_way> -UseDefaultCredentials\r\n```\r\n\r\n# Expected behavior\r\n\r\n```none\r\nCmdlet successfully authenticates to remote web application\r\n```\r\n\r\n# Actual behavior\r\n\r\n```none\r\nInvoke-RestMethod:\r\n401 - Unauthorized: Access is denied due to invalid credentials.\r\nServer Error\r\n\r\n  401 - Unauthorized: Access is denied due to invalid credentials.\r\n  You do not have permission to view this directory or page using the credentials that you supplied.\r\n```\r\n\r\n# Environment data\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0\r\nOS                             Microsoft Windows 10.0.17763\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Do you use a proxy? ",
      "created_at": "2020-03-05T05:37:09Z",
      "updated_at": "2020-03-05T05:37:09Z"
    },
    {
      "author": "jakauppila",
      "author_association": "NONE",
      "body": "Typically yes, though in this case it is hitting an internal site",
      "created_at": "2020-03-05T05:41:26Z",
      "updated_at": "2020-03-05T05:41:26Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "We have an registered issue that proxy auto configuration can cause such problem. Try manual settings for proxy (don't forget add your site to internal site list).",
      "created_at": "2020-03-05T05:56:21Z",
      "updated_at": "2020-03-05T05:56:21Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2020-05-09T12:00:17Z",
      "updated_at": "2020-05-09T12:00:17Z"
    },
    {
      "author": "jakauppila",
      "author_association": "NONE",
      "body": "@iSazonov Do you happen to have a link to the issue you're referring to?",
      "created_at": "2020-08-18T16:27:40Z",
      "updated_at": "2020-08-18T16:27:40Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@jakauppila You could use -Proxy -ProxyUseDefaultCredentials parameters if you have a proxy in your environment. After #12675 you will can skip -Proxy parameter.",
      "created_at": "2020-08-19T14:55:46Z",
      "updated_at": "2020-08-19T14:55:46Z"
    },
    {
      "author": "jakauppila",
      "author_association": "NONE",
      "body": "@iSazonov Is there a way to tell the web cmdlets _not_ to use a proxy?",
      "created_at": "2020-08-19T15:04:58Z",
      "updated_at": "2020-08-19T15:04:58Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "There is `-NoProxy` switch.",
      "created_at": "2020-08-19T15:12:50Z",
      "updated_at": "2020-08-19T15:12:50Z"
    },
    {
      "author": "jakauppila",
      "author_association": "NONE",
      "body": "\ud83e\udd26\ud83c\udffb\u200d\u2642\ufe0f Sorry, missed that in the documentation.\r\n\r\nSo with that, this call works in Windows PowerShell 5.1:\r\n\r\n`Invoke-RestMethod -Uri 'https://INTERNALRESTAPI' -UseDefaultCredentials`\r\n\r\nBut fails with a 401 in PowerShell 7.0.3:\r\n\r\n`Invoke-RestMethod -Uri 'https://INTERNALRESTAPI' -UseDefaultCredentials -NoProxy`\r\n\r\nThat should mean that the problem is different from the issue you mentioned? \r\n",
      "created_at": "2020-08-19T15:22:46Z",
      "updated_at": "2020-08-19T15:22:46Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I'd suggest to check with latest 7.1 build.",
      "created_at": "2020-08-20T03:24:09Z",
      "updated_at": "2020-08-20T03:24:09Z"
    },
    {
      "author": "jakauppila",
      "author_association": "NONE",
      "body": "I am still receiving the same 401 with the following:\r\n\r\n`Invoke-RestMethod -Uri 'https://INTERNALRESTAPI' -UseDefaultCredentials -NoProxy`\r\n\r\n```\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.0-preview.6\r\nPSEdition                      Core\r\nGitCommitId                    7.1.0-preview.6\r\nOS                             Microsoft Windows 10.0.18363\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```",
      "created_at": "2020-08-20T14:32:54Z",
      "updated_at": "2020-08-20T14:32:54Z"
    },
    {
      "author": "jakauppila",
      "author_association": "NONE",
      "body": "@iSazonov Any additional thoughts? Could this be re-opened since it doesn't _appear_ related to the proxy issues?",
      "created_at": "2020-08-25T14:47:01Z",
      "updated_at": "2020-08-25T14:47:01Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Sorry, I don't have time to investigate this problem yet.",
      "created_at": "2020-08-27T03:53:14Z",
      "updated_at": "2020-08-27T03:53:14Z"
    },
    {
      "author": "jakauppila",
      "author_association": "NONE",
      "body": "@iSazonov Just curious if you'll have any time to investigate this?\r\n\r\nI did verify this is still a problem on `7.1.0-rc.2`\r\n\r\n```\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.0-rc.2\r\nPSEdition                      Core\r\nGitCommitId                    7.1.0-rc.2\r\nOS                             Microsoft Windows 10.0.18363\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
      "created_at": "2020-11-03T18:23:08Z",
      "updated_at": "2020-11-03T18:23:08Z"
    },
    {
      "author": "jakauppila",
      "author_association": "NONE",
      "body": "Any chance for investigation on this? This bug is hindering our ability to rollout PS7 in our organization due to internal applications requiring integrated authentication.",
      "created_at": "2021-03-17T17:23:12Z",
      "updated_at": "2021-03-17T18:47:45Z"
    },
    {
      "author": "jakauppila",
      "author_association": "NONE",
      "body": "Confirmed this is still a problem on `7.2.0-preview.4`\r\n\r\n```\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.0-preview.4\r\nPSEdition                      Core\r\nGitCommitId                    7.2.0-preview.4\r\nOS                             Microsoft Windows 10.0.18363\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```",
      "created_at": "2021-03-17T18:43:35Z",
      "updated_at": "2021-03-17T18:43:35Z"
    },
    {
      "author": "JCervero",
      "author_association": "NONE",
      "body": "I'm seeing this same behavior between two different 5.1 versions so I'm curious if there is a root cause. I migrated a script from a 2008r2 server running PowerShell 5.1.14409.1018 to a 2016 server running 5.1.14393.3866. It runs as expected on 5.1.14409.1018 but generates 401 Unauthorized on 5.1.14393.3866.\r\n\r\nI find the fact that the 2016 server seeming has an earlier version than the 2008r2 server to be very odd/confusing. I'm goign to look across my infrastructure and see what other versions we have and if there is any other versions on which -UseDefaultCredentials works as expected.\r\n\r\n",
      "created_at": "2021-03-18T00:13:53Z",
      "updated_at": "2021-03-18T00:13:53Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I checked the scenario with an web server (Kerberos) and `-UseDefaultCredentials` works for me in all pwsh versions.\r\n\r\nWhat does Get-Error show?\r\nWhat does an browser show for the url?",
      "created_at": "2021-03-18T06:14:56Z",
      "updated_at": "2021-03-18T06:14:56Z"
    },
    {
      "author": "jakauppila",
      "author_association": "NONE",
      "body": "Here is the `Get-Error` output:\r\n\r\n```\r\nException             :\r\n    Type       : Microsoft.PowerShell.Commands.HttpResponseException\r\n    Response   : StatusCode: 401, ReasonPhrase: 'Unauthorized', Version: 1.1, Content: System.Net.Http.HttpConnectionResponseContent, Headers:\r\n                 {\r\n                 Server: Microsoft-IIS/8.5\r\n                 Access-Control-Allow-Credentials: true\r\n                 WWW-Authenticate: Negotiate\r\n                 WWW-Authenticate: NTLM\r\n                 WWW-Authenticate: Basic realm=\"contoso.com\"\r\n                 X-Powered-By: ASP.NET\r\n                 Date: Thu, 18 Mar 2021 15:49:39 GMT\r\n                 Set-Cookie: BIGipServerL_QUAL_LOGINREDIRECT_LOGIN.CONTOSO.COM_POOL_443=!COOKIEVALUE; path=/; Httponly; Secure\r\n                 Content-Type: text/html\r\n                 Content-Length: 1293\r\n                 }\r\n    TargetSite :\r\n        Name          : ThrowTerminatingError\r\n        DeclaringType : System.Management.Automation.MshCommandRuntime, System.Management.Automation, Version=7.0.3.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\r\n        MemberType    : Method\r\n        Module        : System.Management.Automation.dll\r\n    StackTrace :\r\n   at System.Management.Automation.MshCommandRuntime.ThrowTerminatingError(ErrorRecord errorRecord)\r\n    Message    : Response status code does not indicate success: 401 (Unauthorized).\r\n    Source     : System.Management.Automation\r\n    HResult    : -2146233088\r\nTargetObject          : Method: GET, RequestUri: 'https://login.contoso.com/Login?continueURL=https%3a%2f%2fMYAPI.contoso.com%3a443%2fv1%2fAssets%2fGetAssetByKeyCode%3fassetKeyCode%3dASSET&authenticationProfile=Internal', Version: 1.1, Content:\r\nSystem.Net.Http.StringContent, Headers:\r\n                        {\r\n                        User-Agent: Mozilla/5.0\r\n                        User-Agent: (Windows NT 10.0; Microsoft Windows 10.0.18363; en-US)\r\n                        User-Agent: PowerShell/7.0.3\r\n                        Content-Length: 0\r\n                        }\r\nCategoryInfo          : InvalidOperation: (Method: GET, Reques\u2026ontent-Length: 0\r\n                        }:HttpRequestMessage) [Invoke-RestMethod], HttpResponseException\r\nFullyQualifiedErrorId : WebCmdletWebResponseException,Microsoft.PowerShell.Commands.InvokeRestMethodCommand\r\nErrorDetails          :\r\n\r\n                        401 - Unauthorized: Access is denied due to invalid credentials.\r\n\r\n                        Server Error\r\n\r\n                        401 - Unauthorized: Access is denied due to invalid credentials.\r\n                        You do not have permission to view this directory or page using the credentials that you supplied.\r\n\r\nInvocationInfo        :\r\n    MyCommand        : Invoke-RestMethod\r\n    ScriptLineNumber : 1\r\n    OffsetInLine     : 1\r\n    HistoryId        : 31\r\n    Line             : Invoke-RestMethod -Uri https://MYAPI.contoso.com/v1/Assets/GetAssetByKeyCode?assetKeyCode=ASSET -UseDefaultCredentials\r\n    PositionMessage  : At line:1 char:1\r\n                       + Invoke-RestMethod -Uri https://MYAPI.contoso.com/v1 \u2026\r\n                       + ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    InvocationName   : Invoke-RestMethod\r\n    CommandOrigin    : Internal\r\nScriptStackTrace      : at <ScriptBlock>, <No file>: line 1\r\n```\r\n\r\nRunning the request through Fiddler on PS7, the following occurs:\r\n\r\n```\r\nCONNECT http://myapi.contoso.com:443\r\n200 Connection Established ()\r\n\r\nGET https://myapi.contoso.com/v1/Assets/GetAssetByKeyCode?assetKeyCode=ASSET\r\n302 Redirect to https://login.contoso.com/Login?continueURL=https%3a%2f%2fmyapi.contoso.com%3a443%2fv1%2fAssets%2fGetAssetByKeyCode%3fassetKeyCode%3dASSET&authenticationProfile=Internal\r\n\r\nCONNECT http://login.contoso.com:443\r\n200 Connection Established ()\r\n\r\nGET https://login.contoso.com/Login?continueURL=https%3a%2f%2fmyapi.contoso.com%3a443%2fv1%2fAssets%2fGetAssetByKeyCode%3fassetKeyCode%3dASSET&authenticationProfile=Internal\r\n401 Unauthorized (text/html)\r\n```\r\n\r\nWhereas it is successful when I utilize Windows PowerShell:\r\n\r\n```\r\nName                           Value\r\n----                           -----\r\nPSVersion                      5.1.18362.1171\r\nPSEdition                      Desktop\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nBuildVersion                   10.0.18362.1171\r\nCLRVersion                     4.0.30319.42000\r\nWSManStackVersion              3.0\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\n```\r\n\r\n```\r\nCONNECT http://myapi.contoso.com:443\r\n200 Connection Established ()\r\n\r\nGET https://myapi.contoso.com/v1/Assets/GetAssetByKeyCode?assetKeyCode=ASSET\r\n302 Redirect to https://login.contoso.com/Login?continueURL=https%3a%2f%2fmyapi.contoso.com%3a443%2fv1%2fAssets%2fGetAssetByKeyCode%3fassetKeyCode%3dASSET&authenticationProfile=Internal\r\n\r\nCONNECT http://login.contoso.com:443\r\n200 Connection Established ()\r\n\r\nGET https://login.contoso.com/Login?continueURL=https%3a%2f%2fmyapi.contoso.com%3a443%2fv1%2fAssets%2fGetAssetByKeyCode%3fassetKeyCode%3dASSET&authenticationProfile=Internal\r\n401 Unauthorized (text/html)\r\n\r\nCONNECT http://login.contoso.com:443\r\n200 Connection Established ()\r\n\r\nGET https://login.contoso.com/Login?continueURL=https%3a%2f%2fmyapi.contoso.com%3a443%2fv1%2fAssets%2fGetAssetByKeyCode%3fassetKeyCode%3dASSET&authenticationProfile=Internal\r\n401 Unauthorized (text/html)\r\n\r\nGET https://login.contoso.com/Login?continueURL=https%3a%2f%2fmyapi.contoso.com%3a443%2fv1%2fAssets%2fGetAssetByKeyCode%3fassetKeyCode%3dASSET&authenticationProfile=Internal\r\n302 Redirect to https://myapi.contoso.com:443/v1/Assets/GetAssetByKeyCode?assetKeyCode=ASSET\r\n\r\nGET https://myapi.contoso.com/v1/Assets/GetAssetByKeyCode?assetKeyCode=ASSET\r\n200 OK (application/json)\r\n```\r\n\r\nTo give more context, we utilize an internal login component that will redirect the request to the central sso application that supports NTLM which ultimately sets a cookie and redirects back to the original url.",
      "created_at": "2021-03-18T16:23:12Z",
      "updated_at": "2021-03-18T16:23:12Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> 302 Redirect to\r\n\r\nIt is by design (security) to remove Authentication header. See https://github.com/dotnet/runtime/issues/26475#issuecomment-432733897",
      "created_at": "2021-03-18T17:33:26Z",
      "updated_at": "2021-03-18T17:33:26Z"
    },
    {
      "author": "jakauppila",
      "author_association": "NONE",
      "body": "Thanks for that @iSazonov.\r\n\r\nI would echo https://github.com/dotnet/runtime/issues/26475#issuecomment-576764181, it would be great if there was an option not to remove the headers on redirect.\r\n\r\nBut until an option like that were to be implemented, I think our only option is to switch all of our integrations to utilizing Basic auth.",
      "created_at": "2021-03-18T17:59:22Z",
      "updated_at": "2021-03-18T17:59:22Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> I think our only option is to switch all of our integrations to utilizing Basic auth.\r\n\r\nI think it is bad idea for security reasons.\r\n\r\nMaybe `PreserveAuthorizationOnRedirect` parameter helps in your scenario?",
      "created_at": "2021-03-18T19:00:17Z",
      "updated_at": "2021-03-18T19:00:17Z"
    },
    {
      "author": "jakauppila",
      "author_association": "NONE",
      "body": "> I think it is bad idea for security reasons.\r\n\r\nI agree.\r\n\r\n> Maybe `PreserveAuthorizationOnRedirect` parameter helps in your scenario?\r\n\r\nNo change, still seeing this pattern.\r\n\r\n```\r\nCONNECT http://myapi.contoso.com:443\r\n200 Connection Established ()\r\n\r\nGET https://myapi.contoso.com/v1/Assets/GetAssetByKeyCode?assetKeyCode=ASSET\r\n302 Redirect to https://login.contoso.com/Login?continueURL=https%3a%2f%2fmyapi.contoso.com%3a443%2fv1%2fAssets%2fGetAssetByKeyCode%3fassetKeyCode%3dASSET&authenticationProfile=Internal\r\n\r\nCONNECT http://login.contoso.com:443\r\n200 Connection Established ()\r\n\r\nGET https://login.contoso.com/Login?continueURL=https%3a%2f%2fmyapi.contoso.com%3a443%2fv1%2fAssets%2fGetAssetByKeyCode%3fassetKeyCode%3dASSET&authenticationProfile=Internal\r\n401 Unauthorized (text/html)\r\n```\r\n\r\nThough now that I think of it, if it were that problem you linked, I would have expected the cmdlet to be able to respond to the 401, get the auth token, and proceed to get a 401 against the destination application after the 302 redirect as a result of the header getting dropped during that final redirect.\r\n\r\nIt is instead failing on the first 401 challenge above.\r\n\r\n```\r\nCONNECT http://myapi.contoso.com:443\r\n200 Connection Established ()\r\n\r\nGET https://myapi.contoso.com/v1/Assets/GetAssetByKeyCode?assetKeyCode=ASSET\r\n302 Redirect to https://login.contoso.com/Login?continueURL=https%3a%2f%2fmyapi.contoso.com%3a443%2fv1%2fAssets%2fGetAssetByKeyCode%3fassetKeyCode%3dASSET&authenticationProfile=Internal\r\n\r\nCONNECT http://login.contoso.com:443\r\n200 Connection Established ()\r\n\r\nGET https://login.contoso.com/Login?continueURL=https%3a%2f%2fmyapi.contoso.com%3a443%2fv1%2fAssets%2fGetAssetByKeyCode%3fassetKeyCode%3dASSET&authenticationProfile=Internal\r\n401 Unauthorized (text/html)\r\n\r\nCONNECT http://login.contoso.com:443\r\n200 Connection Established ()\r\n\r\nGET https://login.contoso.com/Login?continueURL=https%3a%2f%2fmyapi.contoso.com%3a443%2fv1%2fAssets%2fGetAssetByKeyCode%3fassetKeyCode%3dASSET&authenticationProfile=Internal\r\n401 Unauthorized (text/html)\r\n\r\nGET https://login.contoso.com/Login?continueURL=https%3a%2f%2fmyapi.contoso.com%3a443%2fv1%2fAssets%2fGetAssetByKeyCode%3fassetKeyCode%3dASSET&authenticationProfile=Internal\r\n302 Redirect to https://myapi.contoso.com:443/v1/Assets/GetAssetByKeyCode?assetKeyCode=ASSET\r\n\r\nGET https://myapi.contoso.com/v1/Assets/GetAssetByKeyCode?assetKeyCode=ASSET\r\n401 Unauthorized (text/html)\r\n```\r\n",
      "created_at": "2021-03-18T21:00:15Z",
      "updated_at": "2021-03-18T21:00:15Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> > Maybe `PreserveAuthorizationOnRedirect` parameter helps in your scenario?\r\n> \r\n> No change, still seeing this pattern.\r\n\r\nIn the case I'd suggest you redesign your SSO to use more modern and more secure methods.\r\nIf it is too hard you could implement SSO client (using HttpClient class on PowerShell or C#) which will process redirections as needed for your SSO application.",
      "created_at": "2021-03-19T02:48:57Z",
      "updated_at": "2021-03-19T02:48:57Z"
    },
    {
      "author": "Svirusx",
      "author_association": "NONE",
      "body": "It doesn't work further with 7.2.6 and too 7.3.0. Any fix or workaroud for this problem? \r\nIn some cases i could use powershell.exe -Command { ... } in my Powershell 7 scripts to use with Invoke-WebRequests -UseDefaultCredentials but here i can't get session back to powershell 7 so using of this workaroud is very limited.\r\n\r\nIs here another possibility to get result like with -UseDefaultCredentials with other command and add session to [Microsoft.PowerShell.Commands.WebRequestSession]::new() ?\r\n",
      "created_at": "2022-10-11T06:32:01Z",
      "updated_at": "2022-10-11T06:32:01Z"
    }
  ],
  "created_at": "2020-03-05T03:58:25Z",
  "labels": [
    "Issue-Bug",
    "WG-Cmdlets-Utility"
  ],
  "number": 12023,
  "state": "open",
  "title": "Web Cmdlets -UseDefaultCredentials do not work on 7.0",
  "updated_at": "2022-10-11T06:32:01Z"
}