{
  "_url": "https://github.com/PowerShell/PowerShell/issues/14103",
  "author": "RG255",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 and PowerShell 7+ issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6).\r\n\r\n-->\r\n``\r\n## Steps to reproduce\r\n```\r\nAdd-Type -TypeDefinition 'using System;\r\n  using System.Management.Automation;\r\n  public class FixedVariableNow : PSVariable\r\n  {public FixedVariableNow() : base(\"Now\", 0, ScopedItemOptions.ReadOnly | ScopedItemOptions.AllScope)\r\n  {}\r\n  public override object Value\r\n  {get { return DateTime.Now; }}\r\n}'\r\n$ExecutionContext.SessionState.PSVariable.Set((New-Object -TypeName FixedVariableNow))\r\n$Now.GetDateTimeFormats().count\r\nPause\r\n$Now.GetDateTimeFormats()`\r\n```\r\nRun the code above on PowerShell V5.1 and PowerShell V7.1 and compare the output\r\n\r\n```powershell\r\n\r\n```\r\n\r\n## Expected behavior\r\nOn Powershell V5.1 115 items are returned.\r\n```none\r\n\r\n```\r\n\r\n## Actual behavior\r\non V7.1 only 30 items are returned.\r\n```none\r\n\r\n```\r\n\r\n## Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n```\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.0\r\nPSEdition                      Core\r\nGitCommitId                    7.1.0\r\nOS                             Microsoft Windows 10.0.19042\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      5.1.19041.610\r\nPSEdition                      Desktop\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nBuildVersion                   10.0.19041.610\r\nCLRVersion                     4.0.30319.42000\r\nWSManStackVersion              3.0\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\n```\r\n```none\r\n\r\n```\r\n",
  "closed_at": "2020-11-19T00:00:05Z",
  "comments": [
    {
      "author": "fMichaleczek",
      "author_association": "NONE",
      "body": "@RG255 Could you format the input code you post ?\r\n Can you explain the scenario of this issue ? I mean what are the consequences in your code, what is the final problem in your development. \r\n",
      "created_at": "2020-11-16T18:45:00Z",
      "updated_at": "2020-11-16T18:45:15Z"
    },
    {
      "author": "RG255",
      "author_association": "NONE",
      "body": "> Can you explain the scenario of this issue? I mean what are the consequences in your code, what is the final problem in your development.\r\n \r\nThe code is part of a function in a module called in this way\r\n\r\nGet-mydatetime -outputformat 78\r\n\r\nthe parameter is validated and the validation fails in v7.1 because the value 78 is out of range. to show the output\r\n\r\nThe last three lines are just there to show the output. The function just returns the format asked for.\r\n\r\nThe code should be readable in the original post ",
      "created_at": "2020-11-16T23:02:07Z",
      "updated_at": "2020-11-16T23:05:47Z"
    },
    {
      "author": "fMichaleczek",
      "author_association": "NONE",
      "body": "@RG255 first, the documentation about  GetDateTimeFormats : \r\n\r\n_You should not assume that multiple calls to the GetDateTimeFormats overloads will return identical data. Depending on the specific overload, the data returned by this method can change if the current culture changes, the user overrides individual cultural settings, or an update occurs to the system's cultural data._\r\n\r\nSource : https://docs.microsoft.com/en-us/dotnet/api/system.datetime.getdatetimeformats?view=net-5.0\r\n\r\nSo the code you use is a bad pattern. Nothing can resolve it, you must move to a good pattern. \r\n(Windows PowerShell is dot.net framework, PowerShell is dot.net core, if you use API directly, you have to manage the lifecycle of the API)\r\n\r\nGet-Date should be enough powerfull to do what you need. \r\n\r\nI will search later why the method GetDateTimeFormats of DateTime has so much difference between dotnet and dotnetcore but the code is not in this repo, so I don't think it could be resolved here.\r\n\r\n<blockquote><img src=\"https://docs.microsoft.com/en-us/media/logos/logo-ms-social.png\" width=\"48\" align=\"right\"><div><strong><a href=\"https://docs.microsoft.com/en-us/dotnet/api/system.datetime.getdatetimeformats\">DateTime.GetDateTimeFormats Method (System)</a></strong></div><div>Converts the value of this instance to all the string representations supported by the standard date and time format specifiers. </div></blockquote>",
      "created_at": "2020-11-16T23:27:33Z",
      "updated_at": "2020-11-16T23:29:46Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "You could run `([datetime]::now.GetDateTimeFormats()).count` and compare - it is a question for .Net Rumtime repository if you want in depth explanations.",
      "created_at": "2020-11-17T12:17:49Z",
      "updated_at": "2020-11-17T12:17:49Z"
    },
    {
      "author": "RG255",
      "author_association": "NONE",
      "body": "OK I accept the above and have looked at the option @iSazonov suggested. I note the following:\r\nThere were some duplications in the list on V5.1 and when those are removed the number of items drops to 54. Looking at the differences between both outputs I see that the things that seem to be common are all the ones using the 24-hour clock. The ones that are missing are the ones that use the 12-hour clock (which add the \"PM\") and also the option to drop the leading zero. \r\n\r\nV5.1 (54 items)\r\n```\r\n04:09 PM\r\n04:09:09 PM\r\n16:09\r\n16:09:09\r\n17 November\r\n17 November 2020\r\n17 November 2020 04:09 PM\r\n17 November 2020 04:09:09 PM\r\n17 November 2020 16:09\r\n17 November 2020 16:09:09\r\n17 November 2020 4:09 PM\r\n17 November 2020 4:09:09 PM\r\n17.11.20\r\n17.11.20 04:09 PM\r\n17.11.20 04:09:09 PM\r\n17.11.20 16:09\r\n17.11.20 16:09:09\r\n17.11.20 4:09 PM\r\n17.11.20 4:09:09 PM\r\n17/11/20\r\n17/11/20 04:09 PM\r\n17/11/20 04:09:09 PM\r\n17/11/20 16:09\r\n17/11/20 16:09:09\r\n17/11/20 4:09 PM\r\n17/11/20 4:09:09 PM\r\n17/11/2020\r\n17/11/2020 04:09 PM\r\n17/11/2020 04:09:09 PM\r\n17/11/2020 16:09\r\n17/11/2020 16:09:09\r\n17/11/2020 4:09 PM\r\n17/11/2020 4:09:09 PM\r\n2020-11-17\r\n2020-11-17 04:09 PM\r\n2020-11-17 04:09:09 PM\r\n2020-11-17 16:09\r\n2020-11-17 16:09:09\r\n2020-11-17 16:09:09Z\r\n2020-11-17 4:09 PM\r\n2020-11-17 4:09:09 PM\r\n2020-11-17T16:09:09\r\n2020-11-17T16:09:09.7056960+00:00\r\n4:09 PM\r\n4:09:09 PM\r\nNovember 2020\r\nTue, 17 Nov 2020 16:09:09 GMT\r\nTuesday, 17 November 2020\r\nTuesday, 17 November 2020 04:09 PM\r\nTuesday, 17 November 2020 04:09:09 PM\r\nTuesday, 17 November 2020 16:09\r\nTuesday, 17 November 2020 16:09:09\r\nTuesday, 17 November 2020 4:09 PM\r\nTuesday, 17 November 2020 4:09:09 PM\r\n```\r\n\r\nV7.1 (20 Items)\r\n```\r\n16:06\r\n16:06:58\r\n17 Nov 2020\r\n17 Nov 2020 16:06\r\n17 Nov 2020 16:06:58\r\n17 November\r\n17 November 2020\r\n17 November 2020 16:06\r\n17 November 2020 16:06:58\r\n17/11/2020\r\n17/11/2020 16:06\r\n17/11/2020 16:06:58\r\n2020-11-17 16:06:58Z\r\n2020-11-17T16:06:58\r\n2020-11-17T16:06:58.0087641+00:00\r\nNovember 2020\r\nTue, 17 Nov 2020 16:06:58 GMT\r\nTuesday, 17 November 2020\r\nTuesday, 17 November 2020 16:06\r\nTuesday, 17 November 2020 16:06:58\r\n```\r\nGiven the option of using (as I have done above):\r\n```\r\n([datetime]::now.GetDateTimeFormats()) | sort -unique\r\n```\r\nwhich I assume will make use of the API as it may or may not change in the future.\r\n\r\nI can adjust the code accordingly, but I can't get at the missing options this way.\r\n\r\nOK I can use \"get-date\" but the formatting options are more difficult to use and this way made it easy.\r\n\r\nComments appreciated and I will look at tweaking the code I am using hoping the missing options will re-appear?\r\n\r\nI think these are the formats that are missing:\r\n```\r\n04:11 PM\r\n04:11:59 PM\r\n17 November 2020 04:11 PM\r\n17 November 2020 04:11:59 PM\r\n17 November 2020 4:11 PM\r\n17 November 2020 4:11:59 PM\r\n17.11.20\r\n17.11.20 04:11 PM\r\n17.11.20 04:11:59 PM\r\n17.11.20 16:11\r\n17.11.20 16:11:59\r\n17.11.20 4:11 PM\r\n17.11.20 4:11:59 PM\r\n17/11/20\r\n17/11/20 04:11 PM\r\n17/11/20 04:11:59 PM\r\n17/11/20 16:11\r\n17/11/20 16:11:59\r\n17/11/20 4:11 PM\r\n17/11/20 4:11:59 PM\r\n17/11/2020 04:11 PM\r\n17/11/2020 04:11:59 PM\r\n17/11/2020 4:11 PM\r\n17/11/2020 4:11:59 PM\r\n2020-11-17\r\n2020-11-17 04:11 PM\r\n2020-11-17 04:11:59 PM\r\n2020-11-17 16:11\r\n2020-11-17 16:11:59\r\n2020-11-17 4:11 PM\r\n2020-11-17 4:11:59 PM\r\n4:11 PM\r\n4:11:59 PM\r\nTuesday, 17 November 2020 04:11 PM\r\nTuesday, 17 November 2020 04:11:59 PM\r\nTuesday, 17 November 2020 4:11 PM\r\nTuesday, 17 November 2020 4:11:59 PM\r\n```",
      "created_at": "2020-11-17T16:24:58Z",
      "updated_at": "2020-11-17T16:27:11Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@RG255 I don't know that you want but DateTimeFormat comes from Cuture-s. .Net imports Culture-s from OS. It's not as easy as it sounds. You can find our discussion about adding a ListAvailable parameter to Get-Culture. \r\nAlso you can collect DateTimeFormat-s with `(Get-Culture -ListAvailable).DateTimeFormat`.\r\n",
      "created_at": "2020-11-17T17:56:30Z",
      "updated_at": "2020-11-17T17:56:30Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2020-11-19T00:00:04Z",
      "updated_at": "2020-11-19T00:00:04Z"
    }
  ],
  "created_at": "2020-11-16T15:59:26Z",
  "number": 14103,
  "state": "closed",
  "title": "Fixed Variable returns different results for PowerShell V5.1 & V7.1",
  "updated_at": "2020-11-19T00:00:05Z"
}