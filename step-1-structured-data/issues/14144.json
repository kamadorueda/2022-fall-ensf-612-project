{
  "_url": "https://github.com/PowerShell/PowerShell/issues/14144",
  "author": "ghost",
  "body": "Steps to reproduce :\r\n1- Install or update to last version both PowerShell 7 x64 and x86 on any supported version of Windows.\r\n2- Right click on **any folder** and see **there's** (x86) written next to \"PowerShell 7\" for PowerShell x86.\r\n3- Right click on **any ps1** file and see **there's no** (x86) written next to \"Run with PowerShell 7\" for PowerShell x86. There would normally be (x86) like in the step 2 (those two steps aren't related, those are just teo different ways to open powershell).",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@heaths Could you please look the issue?",
      "created_at": "2020-11-20T17:40:38Z",
      "updated_at": "2020-11-20T17:40:38Z"
    },
    {
      "author": "ghost",
      "author_association": "NONE",
      "body": "Do you need a screenshot?\nIt's pretty hard to take a screenshot of Windows context menus. Just ask and I'll do my best.",
      "created_at": "2020-11-22T13:26:40Z",
      "updated_at": "2020-11-22T13:26:40Z"
    },
    {
      "author": "heaths",
      "author_association": "CONTRIBUTOR",
      "body": "I've not had time to look at this, but these are different registry keys. For folders, it's easy enough to put whatever value you want in the registry key for Directory types. But for files, PowerShell is using resource strings and MUI to extract them, so the executable resources have to be changed and differ between x86 and x64: https://github.com/PowerShell/PowerShell/blob/master/assets/Product.wxs#L259\n\n<blockquote><img src=\"https://repository-images.githubusercontent.com/49609581/aad0ad80-cdec-11ea-8248-a37bc0571bfd\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/PowerShell/PowerShell\">PowerShell/PowerShell</a></strong></div><div>PowerShell for every system! Contribute to PowerShell/PowerShell development by creating an account on GitHub.</div></blockquote>",
      "created_at": "2021-01-05T01:49:04Z",
      "updated_at": "2021-01-05T01:49:06Z"
    },
    {
      "author": "ghost",
      "author_association": "NONE",
      "body": "See the video for an example :\r\n\r\nhttps://user-images.githubusercontent.com/66923825/103713206-c211ea80-4f89-11eb-8783-cb9a2a96a339.mp4\r\n\r\n\r\nIt's on Windows 7 but there's the same result on Windows 8 or Windows 10.\r\nP.S. : \r\nIf the video doesn't work in your web browser try it in QuickTime, VLC or Windows Media Player.\r\nLet me know if it doesn't work at all.\r\nSorry for the bad video quality.\r\n\r\nSo as you can see I firstly right click on a file and the two PowerShell shortcuts in the context menu have the same exact name, whatever they are 32 bit or 64 bit architecture of PowerShell. \r\n\r\nI then right click on a folder and the two PowerShell  shortcuts in the context menu have a name that fit the architecture of PowerShell. This is the behavior I would expect to see on both file and folders because PowerShell supports a lot of architectures : x86, x86_64, arm, arm64 ... I think it could even be compiled to unsupported architectures.\r\nSo yeah, it would be awesome that it be fixed.\r\nAlso it would be nice to get the same kind of behavior for previous versions of PowerShell, like PowerShell 5.1.0.\r\nMaybe a script to add more PowerShell context menu in Windows?\r\nSorry if I'm asking too much.\nBy the way,\nHappy New Year 2021.",
      "created_at": "2021-01-05T23:52:05Z",
      "updated_at": "2021-01-06T01:14:57Z"
    }
  ],
  "created_at": "2020-11-19T16:01:43Z",
  "number": 14144,
  "state": "open",
  "title": "PowerShell 7.1.0 'Open Here' context menu miss (x86) next to \"Run with PowerShell 7\" for PowerShell x86",
  "updated_at": "2021-01-06T01:14:57Z"
}