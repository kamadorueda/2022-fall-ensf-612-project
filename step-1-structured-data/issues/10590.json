{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10590",
  "author": "msftrncs",
  "body": "# Summary of the new feature/enhancement\r\n\r\nWhen a keyword statement is used in regular context, the end of the statement block (usually) marks the end of the statement, and a new statement may start immediately without a new line or a `;` semicolon terminator.  However this doesn't happen when keyword statements are used in hashtable literal assignments.\r\n\r\n```PowerShell\r\n# should be acceptable but isn't\r\n@{key1 = if (cond) {statement cond1} elseif (cond2) {statement cond2} key2 = 3} # key2 is an unexpected token\r\n\r\n# normal practice\r\n@{\r\n    key1 = if (cond) {statement cond1} elseif (cond2) {statement cond2} \r\n    key2 = 3 # key2 is accepted\r\n}\r\n\r\n# noted special condition\r\n@{\r\n    if = if (cond) {statement cond1} elseif (cond2) {statement cond2} \r\n    else = 3 # else key not accepted, expected to be remnant of if statement.\r\n}\r\n\r\n# required regardless of this request\r\n@{\r\n    if = if ($cond) {statement cond1} elseif (cond2) {statement cond2}; \r\n    else = 3 # else key is accepted, `;` above ended if statement definitively\r\n}\r\n```\r\n\r\nI'm not saying this request is good practice.  I'm just pointing out a discrepancy in behavior.",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> I'm not saying this request is good practice\r\n\r\nLooking on the samples I think we get no benefits if we fix this.",
      "created_at": "2019-09-21T16:40:34Z",
      "updated_at": "2019-09-21T16:40:34Z"
    }
  ],
  "created_at": "2019-09-21T04:41:00Z",
  "labels": [
    "Issue-Enhancement"
  ],
  "number": 10590,
  "state": "open",
  "title": "Feature Request: keyword statement in hashtable assignments should reset parser for next hash key",
  "updated_at": "2019-09-21T16:40:35Z"
}