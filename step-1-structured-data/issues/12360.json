{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12360",
  "author": "tiwood",
  "body": "# Steps to reproduce\r\n\r\n```powershell\r\n$powershell = [powershell]::Create()\r\n$null = $powershell.AddStatement().AddScript(\"throw 'This should be in Streams.Error'\")\r\n$powershell.Invoke()\r\n$powershell.Streams.Error\r\n```\r\n\r\n# Expected behavior\r\n\r\n```none\r\n$powershell.Streams.Error should contain 'This should be in Streams.Error'\r\n```\r\n\r\n# Actual behavior\r\n\r\n```none\r\n$powershell.Streams.Error is $null\r\n```\r\n\r\n# Environment data\r\n\r\n\r\n```none\r\nPSVersion                      7.0.0\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0\r\nOS                             Darwin 19.4.0 Darwin Kernel Version 19.4.0: Wed Mar  4 22:28:40 PST 2020; root:xnu-6153.101.6~15/RELEASE_X86_64\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2020-04-17T17:23:51Z",
  "comments": [
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "The error stream only holds non-terminating errors.  If there's terminating error, the exception is stored in `$powershell.InvocationStateInfo.Reason` (and also the `Invoke` method will throw).",
      "created_at": "2020-04-17T16:56:57Z",
      "updated_at": "2020-04-17T16:57:46Z"
    }
  ],
  "created_at": "2020-04-17T16:32:26Z",
  "labels": [
    "Issue-Question"
  ],
  "number": 12360,
  "state": "closed",
  "title": "System.Management.Automation.PowerShell - Streams.Error is empty after Invoke() hits a TerminatingError",
  "updated_at": "2020-04-17T17:23:51Z"
}