{
  "_url": "https://github.com/PowerShell/PowerShell/issues/1770",
  "author": "JamesWTruher",
  "body": "## Steps to reproduce\n\n```\n$ExecutionContext.SessionState.InvokeProvider.SecurityDescriptor.Get(\"/\",\"None\")\n```\n## Expected behavior\n\nnot an error\n## Actual behavior\n\n```\n\nPS> $ExecutionContext.SessionState.InvokeProvider.SecurityDescriptor.Get(\"/\",\"None\")\nException calling \"Get\" with \"2\" argument(s): \"Attempting to perform the GetSecurityDescriptor operation on the 'FileSystem'\nprovider failed for path '/'. Unable to load DLL 'api-ms-win-security-lsalookup-l2-1-1.dll': The specified module could not\nbe found.\n (Exception from HRESULT: 0x8007007E)\"\nAt line:1 char:1\n+ $ExecutionContext.SessionState.InvokeProvider.SecurityDescriptor.Get( ...\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : NotSpecified: (:) [], MethodInvocationException\n    + FullyQualifiedErrorId : ProviderInvocationException\n```\n## Environment data\n\n<!-- provide the output of $PSVersionTable -->\n\n```\nPS> $psversiontable\n\nName                           Value\n----                           -----\nPSVersion                      6.0.0-alpha\nPSEdition                      Core\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\nBuildVersion                   3.0.0.0\nGitCommitId                    v6.0.0-alpha.7-367-g800382f0193b20a99dfad686877124ddebbb16ca\nCLRVersion\nWSManStackVersion              3.0\nPSRemotingProtocolVersion      2.3\nSerializationVersion           1.1.0.1\n\nPS> uname -a\nLinux UbuntuS-PS 4.2.0-42-generic #49~14.04.1-Ubuntu SMP Wed Jun 29 20:22:11 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux\n```\n",
  "closed_at": null,
  "comments": [
    {
      "author": "h93xV2",
      "author_association": "NONE",
      "body": "This error is still reproducable.\r\n\r\n```\r\nPS> $ExecutionContext.SessionState.InvokeProvider.SecurityDescriptor.Get(\"/\",\"None\")\r\nException calling \"Get\" with \"2\" argument(s): \"Attempting to perform the GetSecurityDescriptor operation on the 'FileSystem' provider failed for path '/'. Unable to load shared library 'api-ms-win-security-lsalookup-l2-1-0.dll' or one of its dependencies. In order to help diagnose loading problems, consider setting the LD_DEBUG environment variable: libapi-ms-win-security-lsalookup-l2-1-0.dll: cannot open shared object file: No such file or directory\"\r\nAt line:1 char:1\r\n+ $ExecutionContext.SessionState.InvokeProvider.SecurityDescriptor.Get( ...\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : NotSpecified: (:) [], MethodInvocationException\r\n+ FullyQualifiedErrorId : ProviderInvocationException\r\n```\r\n```\r\nPS> $psversiontable \r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.2.3\r\nPSEdition                      Core\r\nGitCommitId                    6.2.3\r\nOS                             Linux 5.3.16-300.fc31.x86_64 #1 SMP Fri Dec 13 17:59:04 UTC 2019\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```",
      "created_at": "2020-01-01T10:31:40Z",
      "updated_at": "2020-01-01T10:31:40Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "We should catch the exception and report an appropriate error stating that this is not supported on the current platform.",
      "created_at": "2021-02-25T21:38:29Z",
      "updated_at": "2021-02-25T21:38:29Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "In order to help find where the exception needs to be caught: Using `master`, here is the stacktrace:\r\n```\r\n at System.Management.Automation.ExceptionHandlingOps.ConvertToMethodInvocationException(Exception exception, Type typeToThrow, String methodName, Int32 numArgs, MemberInfo memberInfo) \r\n                              in /workspaces/PowerShell/src/System.Management.Automation/engine/runtime/Operations/MiscOps.cs:line 2067\r\n                                 at CallSite.Target(Closure , CallSite , Object , String , String )\r\n                                 at System.Dynamic.UpdateDelegates.UpdateAndExecute3[T0,T1,T2,TRet](CallSite site, T0 arg0, T1 arg1, T2 arg2) in System.Linq.Expressions.dll:token 0x6001064+0x128\r\n                                 at System.Management.Automation.Interpreter.DynamicInstruction`4.Run(InterpretedFrame frame) in \r\n                              /workspaces/PowerShell/src/System.Management.Automation/engine/interpreter/DynamicInstructions.Generated.cs:line 192\r\n                                 at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.Run(InterpretedFrame frame) in \r\n                              /workspaces/PowerShell/src/System.Management.Automation/engine/interpreter/ControlFlowInstructions.cs:line 358\r\n```\r\nAnd here the inner exception:\r\n```\r\nSystem.Management.Automation.ProviderInvocationException: Attempting to perform the GetSecurityDescriptor operation on the 'FileSystem' provider failed for path '/'. Unable to load \r\n                              shared library 'api-ms-win-security-lsalookup-l2-1-0.dll' or one of its dependencies. In order to help diagnose loading problems, consider setting the LD_DEBUG environment variable: \r\n                              libapi-ms-win-security-lsalookup-l2-1-0.dll: cannot open shared object file: No such file or directory\r\n                               ---> System.DllNotFoundException: Unable to load shared library 'api-ms-win-security-lsalookup-l2-1-0.dll' or one of its dependencies. In order to help diagnose loading problems, \r\n                              consider setting the LD_DEBUG environment variable: libapi-ms-win-security-lsalookup-l2-1-0.dll: cannot open shared object file: No such file or directory\r\n                                 at System.Management.Automation.PlatformInvokes.LookupPrivilegeValue(String lpSystemName, String lpName, LUID& lpLuid)\r\n                                 at System.Management.Automation.PlatformInvokes.EnableTokenPrivilege(String privilegeName, TOKEN_PRIVILEGE& oldPrivilegeState) in \r\n                              /workspaces/PowerShell/src/System.Management.Automation/utils/PlatformInvokes.cs:line 282\r\n                                 at Microsoft.PowerShell.Commands.FileSystemProvider.GetSecurityDescriptor(String path, AccessControlSections sections) in \r\n                              /workspaces/PowerShell/src/System.Management.Automation/namespaces/FileSystemSecurity.cs:line 60\r\n                                 at System.Management.Automation.Provider.CmdletProvider.GetSecurityDescriptor(String path, AccessControlSections sections, CmdletProviderContext context) in \r\n                              /workspaces/PowerShell/src/System.Management.Automation/namespaces/ProviderBaseSecurity.cs:line 49\r\n                                 at System.Management.Automation.SessionStateInternal.GetSecurityDescriptor(CmdletProvider providerInstance, String path, AccessControlSections sections, CmdletProviderContext context) \r\n                              in /workspaces/PowerShell/src/System.Management.Automation/engine/SessionStateSecurityDescriptorInterface.cs:line 155\r\n                                 --- End of inner exception stack trace ---\r\n                                 at System.Management.Automation.SessionStateInternal.GetSecurityDescriptor(CmdletProvider providerInstance, String path, AccessControlSections sections, CmdletProviderContext context) \r\n                              in /workspaces/PowerShell/src/System.Management.Automation/engine/SessionStateSecurityDescriptorInterface.cs:line 171\r\n                                 at System.Management.Automation.SessionStateInternal.GetSecurityDescriptor(String path, AccessControlSections sections, CmdletProviderContext context) in \r\n                              /workspaces/PowerShell/src/System.Management.Automation/engine/SessionStateSecurityDescriptorInterface.cs:line 126\r\n                                 at System.Management.Automation.SessionStateInternal.GetSecurityDescriptor(String path, AccessControlSections sections) in \r\n                              /workspaces/PowerShell/src/System.Management.Automation/engine/SessionStateSecurityDescriptorInterface.cs:line 74\r\n                                 at System.Management.Automation.SecurityDescriptorCmdletProviderIntrinsics.Get(String path, AccessControlSections includeSections) in \r\n                              /workspaces/PowerShell/src/System.Management.Automation/engine/SecurityDescriptorCmdletProviderInterfaces.cs:line 90\r\n                                 at CallSite.Target(Closure , CallSite , Object , String , String )\r\n```",
      "created_at": "2021-06-17T19:29:01Z",
      "updated_at": "2021-06-17T19:29:01Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "This code should rather be ported than disabled.",
      "created_at": "2021-06-18T03:25:49Z",
      "updated_at": "2021-06-18T03:25:49Z"
    },
    {
      "author": "JamesWTruher",
      "author_association": "MEMBER",
      "body": "on non-Windows systems, i would rather provide a permissions-llike object using stat or some such",
      "created_at": "2021-07-29T16:34:06Z",
      "updated_at": "2021-07-29T16:34:06Z"
    }
  ],
  "created_at": "2016-08-12T20:12:14Z",
  "labels": [
    "Issue-Bug",
    "WG-DevEx-Portability",
    "Up-for-Grabs"
  ],
  "number": 1770,
  "state": "open",
  "title": "Getting the SecurityDescriptor from the filesystem provider produces an error on Linux",
  "updated_at": "2021-07-29T16:34:06Z"
}