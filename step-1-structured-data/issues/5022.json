{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5022",
  "author": "brianary",
  "body": "Currently, if I want to reference a .NET assembly like System.Configuration, I do something like this at the top of [my scripts](https://github.com/brianary/scripts \"context for this usage\"):\r\n```powershell\r\ntry{[void][Configuration.ConfigurationManager]}catch{Add-Type -AN System.Configuration}\r\n```\r\nit would be much more readable (and declarative) as something like:\r\n```powershell\r\n#Requires -Assembly System.Configuration\r\n```",
  "closed_at": "2020-01-30T12:00:06Z",
  "comments": [
    {
      "author": "PetSerAl",
      "author_association": "CONTRIBUTOR",
      "body": "Why do you put `Add-Type` in `catch`? You could also put `using assembly System.Configuration` on top of script.",
      "created_at": "2017-10-05T19:57:16Z",
      "updated_at": "2017-10-05T19:57:16Z"
    },
    {
      "author": "JasonG-STCU",
      "author_association": "NONE",
      "body": "I, too, have used this in a script of mine. It would absolutely be beneficial to be able to include it this way.",
      "created_at": "2017-10-05T20:23:47Z",
      "updated_at": "2017-10-05T20:23:47Z"
    },
    {
      "author": "brianary",
      "author_association": "CONTRIBUTOR",
      "body": "@PetSerAl I wasn't aware of the [`using`](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_using?view=powershell-5.1) keyword, though I don't see `assembly` documented as an argument to it. Also, our servers are not uniformly on PowerShell 5 just yet, so that extended syntax isn't something we can fully rely on yet (my workstation is stuck on version 5.0.10105.0-April2015Preview which doesn't support `using assembly`, and I'm unable to upgrade or downgrade or uninstall it from Windows 7). It seems odd to have _another_ thing that must come first in the script, along with `[CmdletBinding()]Param(\u2026)`. It looks like `using` *must* precede `[CmdletBinding()]Param(\u2026)`.\r\n\r\nThe reason I use the above formulation is to `Add-Type` only if referencing the type causes an exception, that way I'm only adding it once per session.",
      "created_at": "2017-10-05T21:44:24Z",
      "updated_at": "2017-10-05T21:44:41Z"
    },
    {
      "author": "PetSerAl",
      "author_association": "CONTRIBUTOR",
      "body": "> The reason I use the above formulation is to `Add-Type` only if referencing the type causes an exception, that way I'm only adding it once per session.\r\n\r\nYou can not load same assembly twice anyway. No harm on calling `Add-Type` for already loaded assembly.\r\n```powershell\r\n$a = Add-Type -AssemblyName System.Configuration -PassThru | Select-Object -First 1 -ExpandProperty Assembly\r\n$b = Add-Type -AssemblyName System.Configuration -PassThru | Select-Object -First 1 -ExpandProperty Assembly\r\n[Object]::ReferenceEquals($a, $b)\r\n```",
      "created_at": "2017-10-06T04:12:45Z",
      "updated_at": "2017-10-06T04:12:45Z"
    },
    {
      "author": "brianary",
      "author_association": "CONTRIBUTOR",
      "body": "I'll have to look into the `using` syntax (I hope it gets added to the docs, and is officially supported) once I can finally upgrade things and get the new features.\r\n\r\nHowever, even on a newer machine, there's a pretty big performance difference:\r\n```\r\nPS C:\\Users\\me> \"$(Measure-Command {0..10000|% {iex 'using assembly System.Configuration'}})\"\r\n00:00:08.2655849\r\nPS C:\\Users\\me> \"$(Measure-Command {0..10000|% {Add-Type -AN System.Configuration}})\"\r\n00:00:04.6386843\r\nPS C:\\Users\\me> \"$(Measure-Command {0..10000|% {try{[void][Configuration.ConfigurationManager]}catch{Add-Type -AN System.Configuration}}})\"\r\n00:00:00.0728870\r\n```\r\non my older machine, it's even bigger:\r\n```\r\nPS C:\\Users\\me> \"$(Measure-Command {0..10000|% {Add-Type -AN System.Configuration}})\"\r\n00:00:08.1306933\r\nPS C:\\Users\\me> \"$(Measure-Command {0..10000|% {try{[void][Configuration.ConfigurationManager]}catch{Add-Type -AN System.Configuration}}})\"\r\n00:00:00.2983187\r\n```",
      "created_at": "2017-10-06T16:45:04Z",
      "updated_at": "2017-10-06T16:45:04Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "I've opened [an RFC](https://github.com/PowerShell/PowerShell-RFC/pull/122) on updating the behaviour of `#requires`. Please feel free to comment in the PR.",
      "created_at": "2018-03-23T18:33:57Z",
      "updated_at": "2018-03-23T18:33:57Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2020-01-30T12:00:05Z",
      "updated_at": "2020-01-30T12:00:05Z"
    }
  ],
  "created_at": "2017-10-05T17:26:28Z",
  "number": 5022,
  "state": "closed",
  "title": "Suggestion: Add #Requires -Assembly AssemblyName support",
  "updated_at": "2020-01-30T12:00:06Z"
}