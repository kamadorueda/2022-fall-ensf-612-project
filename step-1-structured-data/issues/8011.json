{
  "_url": "https://github.com/PowerShell/PowerShell/issues/8011",
  "author": "archmangler",
  "body": "Getting powershell running on Linux is straightforward. \r\n\r\nUnfortunately this is based on .NetCore which excludes a lot a important functionality and modules e.g the DNSServer module. It's not installable on Linux using powershell gallery:\r\n\r\n```\r\nPS /home/gmonkey> Install-Module -Name DNSServer -Scope CurrentUser\r\nPackageManagement\\Install-Package : No match was found for the specified search criteria and module name 'DNSServer'. Try Get-PSRepository to see all available registered module repositories.\r\nAt /opt/microsoft/powershell/6/Modules/PowerShellGet/PSModule.psm1:9491 char:21\r\n+ ...          $null = PackageManagement\\Install-Package @PSBoundParameters\r\n+                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : ObjectNotFound: (Microsoft.Power....InstallPackage:InstallPackage) [Install-Package], Exception\r\n+ FullyQualifiedErrorId : NoMatchFoundForCriteria,Microsoft.PowerShell.PackageManagement.Cmdlets.InstallPackage\r\n```\r\n\r\nIs there a workaround to obtain a fully functional PowerShell installation on linux including modules that don't appear in .NetCore (specifically DNSServer) ?\r\n\r\n\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "The current DNSServer PowerShell module that is in Windows is specific to managing Windows DNS Server and wouldn't work on Linux.  If you want to manage Windows DNSServer using the PowerShell module from Linux, you can do this via PowerShell remoting.  Using [implicit remoting](https://technet.microsoft.com/en-us/library/ff720181.aspx) you can run scripts locally on Linux that actually execute remotely on the Windows target (after setting up the PSSession).\r\n\r\nIf the ask is to manage Linux DNS servers, then that would need to be a completely different module that someone would have to author.",
      "created_at": "2018-10-12T17:12:02Z",
      "updated_at": "2018-10-12T17:12:02Z"
    },
    {
      "author": "archmangler",
      "author_association": "NONE",
      "body": "@SteveL-MSFT - Thanks, I've been able to successfully test this from Linux to Windows, with OpenSSH installed on Windows. \r\n\r\nHowever, it just occurred to me that it should also be possible to simply scp a script over to the windows server and execute it using ssh's remote execution capability, as in the following test:\r\n\r\nCopy:\r\n\r\n```\r\nscp -v addarecord.ps1 0101@winserver.lol.com:addarecord.ps1\r\n\r\n```\r\n\r\nExecute:\r\n\r\n```\r\n(.env) [0101@linuxserver terraform-implementation]$ ssh 0101@winserverlol.com 'powershell ./addarecord.ps1'\r\n0101@winserverlol.com's password:\r\n\r\nAdd-DnsServerResourceRecordA : Cannot connect to CIM server. Access denied\r\nAt C:\\Users\\0101\\addarecord.ps1:1 char:1\r\n+ Add-DnsServerResourceRecordA -Name \"testserver\" -ZoneName\r\n\"testzone.com ...\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n~~~\r\n    + CategoryInfo          : ResourceUnavailable: (PS_DnsServerResourceRecord\r\n   A:String) [Add-DnsServerResourceRecordA], CimJobException\r\n    + FullyQualifiedErrorId : CimJob_BrokenCimSession,Add-DnsServerResourceRec\r\n   ordA\r\n```\r\n\r\nGiven this, does it justify the complexity of implicit remoting setup if the above two commands can just be wrapped?\r\n\r\n\r\n\r\n",
      "created_at": "2018-10-15T11:21:07Z",
      "updated_at": "2018-10-15T11:21:07Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "You can always use `ssh` to execute remote commands without using PowerShell remoting.  It's more of a user choice which experience they want.",
      "created_at": "2018-10-15T17:01:47Z",
      "updated_at": "2018-10-15T17:01:47Z"
    },
    {
      "author": "aaronk1",
      "author_association": "NONE",
      "body": "@SteveL-MSFT do I understand correctly the recommendation is to connect to a Windows machine to run the DNS cmdlets instead of running them locally on a Linux machine?  Agree it would be nice to have this functionality on Linux.  We have the same need as @archmangler and are currently connecting over WinRM with our ansible installation using pywinrm to access the DNS cmdlets with Powershell.  In ansible it can be as simple as using [this](https://docs.ansible.com/ansible/latest/modules/win_command_module.html), but it's better to avoid WinRM as it has a laundry list of its own problems.  \r\n\r\n@archmangler FYI I was able to get nsupdate to work at Linux command line a while back with Windows DNS Server.  Again, not \"Windows-specific\" and not supported by MSFT, though.",
      "created_at": "2019-06-07T02:04:55Z",
      "updated_at": "2019-06-07T02:05:47Z"
    }
  ],
  "created_at": "2018-10-12T15:34:54Z",
  "labels": [
    "Issue-Discussion"
  ],
  "number": 8011,
  "state": "open",
  "title": "Request: DNSServer module for powershell on Linux",
  "updated_at": "2019-06-07T02:05:47Z"
}