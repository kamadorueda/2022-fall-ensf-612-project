{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12333",
  "author": "thecliguy",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 and PowerShell 7+ issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n\r\n-->\r\n\r\n# Steps to reproduce\r\n\r\nThere are three variations of the Replacement Operator:\r\n  * `-replace` is implicitly case-insensitive.\r\n  * `-ireplace` is explicitly case-insensitive.\r\n  * `-creplace` is case-sensitive.\r\n\r\nThe exception message returned when passing three or more comma separated values to `-replace`, `-ireplace` or `-creplace` is counterintuitive:\r\n\r\n| Command                       | Exception Message                                                                      |\r\n| ----------------------------- |--------------------------------------------------------------------------------------|\r\n| `\"foo\" -replace \"o\", \"e\", \"e\"`  | `InvalidOperation: The -ireplace operator allows only two elements to follow it, not 3.` |\r\n| `\"foo\" -ireplace \"o\", \"e\", \"e\"` | `InvalidOperation: The -ireplace operator allows only two elements to follow it, not 3.` |\r\n| `\"foo\" -creplace \"o\", \"e\", \"e\"` | `InvalidOperation: The -replace operator allows only two elements to follow it, not 3.`  |\r\n\r\nAs the table above demonstrates, when either the `-replace` or `-ireplace` operator is used, the message content refers to `-ireplace`. This is not ideal but since `-replace` and `-ireplace` are functionally equivalent it's perhaps not a big deal. But what is particularly inappropriate is that the exception message for `-creplace` refers to `-replace`.\r\n\r\n\r\n# Expected behavior\r\n\r\nThe exception message should ideally refer to the respective operator that was used. Else at a minimum, the message returned for the `-creplace` operator should refer to `-creplace`.\r\n\r\n\r\n# Environment data\r\n\r\nThe same result is exhibited in PowerShell 5.1, 7.0.0 and 7.1.0-preview.1, full version details below:\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      5.1.18362.628\r\nPSEdition                      Desktop\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nBuildVersion                   10.0.18362.628\r\nCLRVersion                     4.0.30319.42000\r\nWSManStackVersion              3.0\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0\r\nOS                             Microsoft Windows 10.0.18363\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.0-preview.1\r\nPSEdition                      Core\r\nGitCommitId                    7.1.0-preview.1\r\nOS                             Microsoft Windows 10.0.18363\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2020-04-28T17:45:11Z",
  "comments": [
    {
      "author": "paytonmcl",
      "author_association": "NONE",
      "body": "I would like to contribute to fix this issue. Please let me know!",
      "created_at": "2020-04-20T02:34:31Z",
      "updated_at": "2020-04-20T02:34:31Z"
    },
    {
      "author": "jackdcasey",
      "author_association": "CONTRIBUTOR",
      "body": "I've looked into this a bit. It appears the parameter shown is dependent on if the replace was case sensitive, or not: \r\n\r\n```csharp\r\nif (rList.Count > 2)\r\n{\r\n    // only allow 1 or 2 arguments to -replace\r\n    throw InterpreterError.NewInterpreterException(rval, typeof(RuntimeException), errorPosition,\r\n        \"BadReplaceArgument\", ParserStrings.BadReplaceArgument, ignoreCase ? \"-ireplace\" : \"-replace\", rList.Count);\r\n}\r\n```\r\nFrom the comment included, this appears to be expected: \r\n```csharp\r\n/// <param name=\"ignoreCase\">True for -ireplace/-replace, false for -creplace.</param>\r\n```\r\nA simple solution to restore consistency may be to rewrite the messages to including both:\r\n```csharp\r\nif (rList.Count > 2)\r\n{\r\n    // only allow 1 or 2 arguments to -replace\r\n    throw InterpreterError.NewInterpreterException(rval, typeof(RuntimeException), errorPosition,\r\n        \"BadReplaceArgument\", ParserStrings.BadReplaceArgument, ignoreCase ? \"-replace/-ireplace\" : \"-creplace\", rList.Count);\r\n}\r\n```\r\nThis would provide the following error messages: \r\n```\r\nPS> \"foo\" -replace \"f\", \"j\", \"h\"\r\nInvalidOperation: The -ireplace/-replace operator allows only two elements to follow it, not 3.\r\n\r\nPS> \"foo\" -ireplace \"f\", \"j\", \"h\"\r\nInvalidOperation: The -ireplace/-replace operator allows only two elements to follow it, not 3.\r\n\r\nPS> \"foo\" -creplace \"f\", \"j\", \"h\"\r\nInvalidOperation: The -creplace operator allows only two elements to follow it, not 3.\r\n```\r\n\r\nUnless anyone has a clever solution to get around this limitation, I'll get a PR opened up \ud83d\ude01",
      "created_at": "2020-04-20T06:27:10Z",
      "updated_at": "2020-04-20T06:39:46Z"
    },
    {
      "author": "paytonmcl",
      "author_association": "NONE",
      "body": "I'm going to make an attempt to see if this can be improved upon",
      "created_at": "2020-04-20T13:48:15Z",
      "updated_at": "2020-04-20T13:48:15Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:This issue was addressed in #12388, which has now been successfully released as `v7.1.0-preview.3`.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.1.0-preview.3)\n",
      "created_at": "2020-05-19T18:09:39Z",
      "updated_at": "2020-05-19T18:09:39Z"
    },
    {
      "author": "UberKluger",
      "author_association": "NONE",
      "body": "Just a thought but perhaps the problem is trying to be too specific. Instead of giving an error message referring to the actual operator (information which in the case of -replace vs -ireplace has been lost), in cases where the error cause is common to all versions of the operator (in this case, too many elements in the second operand) just using the generic operator designation would be sufficient. So in this case the error message would be\r\n```\r\nInvalidOperation: The replace operator allows only two elements to follow it, not 3.\r\n```\r\nfor all three versions.\r\n\r\nIn fact, a possibly better message is\r\n```\r\nInvalidOperation: The replace operator requires exactly two elements in the second operand.\r\n```\r\nthereby removing any possible confusion about whether 1 element is acceptable (see below) and clarifying the location of the required elements instead of the somewhat nebulous \"follow it\". Does the replace operator allow another operator to \"follow it\"? Or a pipeline? Or an output redirection? How about a single element which just happens to be a two element array?",
      "created_at": "2020-09-24T12:19:44Z",
      "updated_at": "2020-09-24T12:19:44Z"
    }
  ],
  "created_at": "2020-04-15T21:25:33Z",
  "number": 12333,
  "state": "closed",
  "title": "Replace Operator InvalidOperation Exception Message",
  "updated_at": "2020-09-24T12:19:44Z"
}