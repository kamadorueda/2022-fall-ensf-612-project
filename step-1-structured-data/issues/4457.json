{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4457",
  "author": "mwrock",
  "body": "I've been playing with various techniques of using powershell core to apply IIS configuration on windows (I have a specific use case for this). Since the `IISAdministration` and `WebAdministration` modules are not .net core compliant, I dropped to `appcmd.exe` but its awkward to say the least. It occurred to me that better than all of the above would be to use DSC. The challenge is that Powershell core lacks `Invoke-DSCResource` and `Start-DSCConfiguration`. So I call the LCM via `Invoke-CimMethod`  like so:\r\n\r\n```\r\nInstall-Module xWebAdministration -Force\r\n\r\n. (Join-Path my_configs website.ps1)\r\n\r\n# NewWebsite is in the sourced config above\r\n$mof = NewWebsite -OutputPath \"{{pkg.svc_path}}\"\r\n$configurationData = Get-Content $mof.FullName -Encoding Byte -ReadCount 0\r\n$totalSize = [System.BitConverter]::GetBytes($configurationData.Length + 4)\r\n$configurationData = $totalSize + $configurationData\r\n\r\n# Need to move xWebAdministration because LCM is not honoring PS Core's PSModulePath\r\n$mod = (Get-Module xWebAdministration -ListAvailable).ModuleBase\r\n$machine_mod = \"C:\\Program Files\\windowsPowerShell\\Modules\\xWebAdministration\"\r\nif(Test-Path $machine_mod) { Remove-Item $machine_mod -Recurse -Force }\r\nMove-Item $mod $machine_mod -Force\r\n\r\nInvoke-CimMethod -ComputerName localhost -Namespace \"root/Microsoft/Windows/DesiredStateConfiguration\" -ClassName \"MSFT_DSCLocalConfigurationManager\" -MethodName \"SendConfigurationApply\" -Arguments @{ConfigurationData = $configurationData; Force = $true}\r\n```\r\n\r\nThis works but still has some obvious awkwardness to it.\r\n\r\nI've searched around and did not see how I could apply DSC configuration completely in PS Core without breaking out the WMI but I may easily have missed something. Is there a better way?",
  "closed_at": "2019-09-30T00:00:46Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@mwrock Could you please report incompatibility modules in #4062 ?",
      "created_at": "2017-08-02T12:34:39Z",
      "updated_at": "2017-08-02T12:34:58Z"
    },
    {
      "author": "mwrock",
      "author_association": "CONTRIBUTOR",
      "body": "Done @iSazonov ",
      "created_at": "2017-08-02T17:29:49Z",
      "updated_at": "2017-08-02T17:29:49Z"
    },
    {
      "author": "pauldevson",
      "author_association": "NONE",
      "body": "Hi guys, is there any update on how to manage IIS using Powershell Core?",
      "created_at": "2019-06-14T21:01:23Z",
      "updated_at": "2019-06-14T21:01:23Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "The latest information was that IIS team has no plans to support PowerShell Core. Perhaps the situation changed after the PowerShell team announced that version 7 should be an almost complete replacement for Windows PowerShell. /cc @SteveL-MSFT \r\nIn any case it is better ask IIS team. You could use Windows 10 Feedback utility, UserVoice, Microsoft forums and others.",
      "created_at": "2019-06-15T16:05:48Z",
      "updated_at": "2019-06-15T16:05:48Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "The main problem with IIS is that the namespace needed to administer IIS isn't part of .NET Core and no plans to support it in .NET Core.  Alternatively, we're working on a WinPS bridge in PS7 timeframe that may resolve this.  I'm referring specifically to the cmdlet and not the DSC Resource.  Some fixes have come to the DSC module in PS7 from DSC team so applying DSC config in general should work.  Since LCM 1.0 is using Windows PowerShell, this might just work with PS7 Preview.2.",
      "created_at": "2019-06-20T15:53:47Z",
      "updated_at": "2019-06-20T15:55:29Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2019-09-30T00:00:36Z",
      "updated_at": "2019-09-30T00:00:36Z"
    }
  ],
  "created_at": "2017-08-01T17:57:50Z",
  "number": 4457,
  "state": "closed",
  "title": "Applying DSC Config from Powershell Core on Windows",
  "updated_at": "2019-09-30T00:00:46Z"
}