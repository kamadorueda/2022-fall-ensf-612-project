{
  "_url": "https://github.com/PowerShell/PowerShell/issues/18200",
  "author": "theuserbl",
  "body": "### Summary of the new feature / enhancement\n\nI have tesed also the NuShell. It have the nice possibility to change in a symlink-directory.\r\n\r\nFor example on a german Windows 10.\r\nIf I start cmd.exe and go to \"C:\\\\\" and type there \"dir /a\" there is listed\r\n`02.10.2021  20:42    <JUNCTION>     Dokumente und Einstellungen [C:\\Users]`\r\nIf I want to go in it with \"cd\", I don't end in C:\\Users.\r\n\r\nIn PowerShell 7.3.0-preview 8 is the same behavior.\r\nIf I type there \"Get-ChildItem -Hidden\", there is listed this entry\r\n`l--hs          02.10.2021    20:42                Dokumente und Einstellungen -> C:\\Users`\r\nBut when I move in it, I don't change to the Users-directory:\r\n```\r\nPS C:\\> Set-Location '.\\Dokumente und Einstellungen\\'\r\nPS C:\\Dokumente und Einstellungen> Get-ChildItem\r\nGet-ChildItem: Access to the path 'C:\\Dokumente und Einstellungen' is denied.\r\nPS C:\\Dokumente und Einstellungen>\r\n```\r\n\r\nI think it would be nice, if that would be implemented in \"Set-Location\".\r\nOn the NuShell on the other side, it works.\r\n```\r\nC:\\\u3009cd `Dokumente und Einstellungen\\`\r\nC:\\Users\u3009  \r\n```\n\n### Proposed technical implementation details (optional)\n\n_No response_",
  "closed_at": "2022-10-05T00:01:20Z",
  "comments": [
    {
      "author": "237dmitry",
      "author_association": "NONE",
      "body": "I believe that this particular example cannot be considered a rule. If you create a junction with the same name, target and attributes elsewhere, then everything will work fine. Maybe for full access is not enough privileges or maybe this is not a junction but file type hidden from common users. ))\r\n```powershell\r\n> cd ~\\Desktop\r\n\r\n> New-Item -ItemType Junction -Name \"Documents and Settings\" -Target \"C:\\Users\"\r\n\r\n> (Get-Item '.\\Documents and Settings\\').Attributes = 9238\r\n\r\n> # test cd, dir\r\n\r\n> del \"~\\Desktop\\Documents and Settings\" -Force\r\n``` ",
      "created_at": "2022-10-02T16:32:09Z",
      "updated_at": "2022-10-02T16:32:09Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "These special, hidden, system-defined junctions exist solely for pre-Windows-Vista compatibility, and I suggest not using them, as they're specifically designed to prevent enumeration of their contents (except, surprisingly, during remoting: see #13348). Thus, the problem here are the specific permissions associated with these system-defined junctions, not the fact that their path isn't resolved to the target path.\r\n\r\nGenerally, when you target a symlink / junction with `Set-Location` you _do_ want its path to be used as-is rather than resolving it to its target path. \r\n\r\n\r\n\r\n\r\n\r\n\r\n",
      "created_at": "2022-10-02T19:17:05Z",
      "updated_at": "2022-10-02T19:17:05Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2022-10-05T00:01:19Z",
      "updated_at": "2022-10-05T00:01:19Z"
    }
  ],
  "created_at": "2022-10-02T13:14:15Z",
  "number": 18200,
  "state": "closed",
  "title": "\"Set-Location\" don't change in directory with symlink on Windows",
  "updated_at": "2022-10-05T00:01:20Z"
}