{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5393",
  "author": "alx9r",
  "body": "I suspect changing this behavior now would be a breaking change.  I'm mainly opening this because I'm wondering how `Start-Job -Scriptblock` is meant to be used in scenarios where the concrete data used in the scriptblock has be factored-out.  This is a common scenario when system-specific configuration data is separated from the more general automation procedures used to enact the configuration.\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\nNew-Module m {\r\n    $v = 'm value'\r\n    function f {\r\n        param($sb)\r\n        Start-Job $sb | Receive-Job -Wait\r\n    }\r\n} | Import-Module\r\n\r\n$v = 'outer value'\r\n\r\n& {\r\n    $v = 'local value'\r\n    f -sb { $using:v }.GetNewClosure()\r\n}\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\nOutput: `local value`\r\n\r\nActual behavior\r\n---------------\r\n\r\nOutput:  `m value`\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\n\r\nName                           Value                                                                                                                           \r\n----                           -----                                                                                                                           \r\nPSVersion                      6.0.0-beta.9                                                                                                                    \r\nPSEdition                      Core                                                                                                                            \r\nGitCommitId                    v6.0.0-beta.9                                                                                                                   \r\nOS                             Microsoft Windows 6.3.9600                                                                                                      \r\nPlatform                       Win32NT                                                                                                                         \r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}                                                                                                         \r\nPSRemotingProtocolVersion      2.3                                                                                                                             \r\nSerializationVersion           1.1.0.1                                                                                                                         \r\nWSManStackVersion              3.0                                                                                                                             \r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "PetSerAl",
      "author_association": "CONTRIBUTOR",
      "body": ">I'm wondering how `Start-Job -Scriptblock` is meant to be used in scenarios where the concrete data used in the scriptblock has be factored-out.\r\n\r\nYou can use `-ArgumentList` parameter:\r\n```powershell\r\n$sb = { param($arg) $arg }\r\n1..10 | % { Start-Job -ScriptBlock $sb -ArgumentList $_ } | Receive-Job -Wait -AutoRemoveJob\r\n```",
      "created_at": "2017-12-18T04:59:26Z",
      "updated_at": "2017-12-18T04:59:26Z"
    },
    {
      "author": "Line40",
      "author_association": "NONE",
      "body": "I just spent hours figuring out that the above mentioned behaviour is screwing with my code. \r\n\r\nThis is, at least to me, clearly a BUG! The -ScriptBlock parameter behaves differently for for different commands. If I use Invoke-Command -ScriptBlock with my closure it works just fine. If I use it with Start-Job it does not. Neither the help nor any other place for powershell documentation mentions any of that.\r\n\r\nThank god I found this issue finally, I was beginning to think I was just too stupid to get my code to work.",
      "created_at": "2019-03-20T09:08:06Z",
      "updated_at": "2019-03-20T09:08:06Z"
    }
  ],
  "created_at": "2017-11-09T17:21:26Z",
  "labels": [
    "Issue-Discussion"
  ],
  "number": 5393,
  "state": "open",
  "title": "Start-Job -Scriptblock ignores closure",
  "updated_at": "2019-03-20T09:08:06Z"
}