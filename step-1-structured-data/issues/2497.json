{
  "_url": "https://github.com/PowerShell/PowerShell/issues/2497",
  "author": "iSazonov",
  "body": "The feature request is on UserVoice [Add a Get-Uptime cmdlet](https://windowsserver.uservoice.com/forums/301869-powershell/suggestions/11105001-add-a-get-uptime-cmdlet)\n\nIncredibly that we don't have an easy way on Windows to get Uptime!\n\nI would like to discuss this.\n\n1.\nThere's a workaround is suggested:\n\n``` powershell\nfunction Get-Uptime { \n [timespan]::FromSeconds([double][System.Diagnostics.Stopwatch]::GetTimestamp() / [double][System.Diagnostics.Stopwatch]::Frequency) \n} \n```\n\nIt's not working remotely.\nIt's working on non-Windows.\n\n2.\nCurrent Powershell versions have Get-ComputerInfo cmdlet that also returns OsUptime.\nProblem is that Get-ComputerInfo  is slow and return a lot of unnecessary information.\n\nIt's not working remotely.\nIt seems it is not ported.\n\n3.\nAnd the last way is to use System.Environment.\nIt would be cool to have **[Environment]::Uptime**\n\nIs there a way to add [Environment]::Uptime in Powershell  without requesting .Net developers?\nIt does not work remotely, but looks wonderful.\n\n(We can not use [Environment]::TickCount to calculate Uptime because it is reset every 29 days.\nAmazingly there is no [Environment]::TickCount64. \ud83d\ude15)\n",
  "closed_at": "2016-11-10T17:51:29Z",
  "comments": [
    {
      "author": "oising",
      "author_association": "CONTRIBUTOR",
      "body": "```\nfunction get-uptime {\n    (get-date) - [Management.ManagementDateTimeConverter]::ToDateTime((gwmi `\n        win32_operatingsystem).LastBootUpTime)\n}\n```\n",
      "created_at": "2016-10-18T17:07:56Z",
      "updated_at": "2016-10-18T17:07:56Z"
    },
    {
      "author": "jdhitsolutions",
      "author_association": "COLLABORATOR",
      "body": "For Windows systems this is pretty easy as @oising  suggests. Even easier when using Get-Ciminstance because the timestamps are automatically converted. The challenge I think is that non-Windows systems don't any may not have the same WMI classes.\n",
      "created_at": "2016-10-18T17:49:21Z",
      "updated_at": "2016-10-18T17:49:21Z"
    },
    {
      "author": "jdhitsolutions",
      "author_association": "COLLABORATOR",
      "body": "I don't have a Linux instance running now to check but another technique I used to use was to get the date of the swapfile and use that to calculate when the computer last booted. Wonder if we could do something similar with Linux and MacOS.\n",
      "created_at": "2016-10-18T17:55:42Z",
      "updated_at": "2016-10-18T17:55:42Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "On Linux you can get the uptime info from `cat /proc/uptime`.   \"The first number is the total number of seconds the system has been up.\"  https://en.wikipedia.org/wiki/Uptime\n",
      "created_at": "2016-10-18T18:57:12Z",
      "updated_at": "2016-10-18T18:57:12Z"
    },
    {
      "author": "oising",
      "author_association": "CONTRIBUTOR",
      "body": "Yep, or even just use the gnu commands `uptime`, `w` and it's also visible with `top`.\n",
      "created_at": "2016-10-18T19:21:09Z",
      "updated_at": "2016-10-18T19:21:22Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Thanks for comments guys!\n\nOne of the main goals of the Open Powershell project is portable code. This eliminates the use of WMI. Above I just provide portable examples.\n\nI really like the simplicity of Linux to get Uptime by means of `/proc/uptime` or `uptime`. \nNow Powershell and bash are often compared. So It would be a good suggestion to make **`uptime`** as an alias in Powershell.\n",
      "created_at": "2016-10-19T04:22:00Z",
      "updated_at": "2016-10-19T04:22:00Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Related #2277\n",
      "created_at": "2016-11-01T14:44:02Z",
      "updated_at": "2016-11-01T14:44:02Z"
    }
  ],
  "created_at": "2016-10-18T12:05:28Z",
  "labels": [
    "Issue-Enhancement",
    "WG-Cmdlets",
    "Up-for-Grabs",
    "Resolution-Fixed"
  ],
  "number": 2497,
  "state": "closed",
  "title": "Get Uptime",
  "updated_at": "2017-02-02T00:03:32Z"
}