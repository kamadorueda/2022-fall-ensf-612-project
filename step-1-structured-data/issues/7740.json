{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7740",
  "author": "dantraMSFT",
  "body": "I have a remoting test from Linux to Windows Server 2016 that connects using PubKeyAuthentication, Copies a File to the target using Copy-Item, the tests for the file's existence using Invoke-Command.\r\n\r\nI'm finding this test randomly fails (30-40% of the time) with an ObjectDisposedException when calling Remove-PSSession on the outbound session.\r\n\r\nMessage: \"Cannot access a closed file.\"\r\n\r\nThe stack trace is very consistent:\r\n\r\nat System.IO.FileStream.Flush(Boolean flushToDisk)\r\n at System.IO.StreamWriter.Flush(Boolean flushStream, Boolean flushEncoder)\r\n at System.IO.StreamWriter.Dispose(Boolean disposing)\r\n at System.IO.TextWriter.Dispose()\r\n at System.Management.Automation.Remoting.Client.SSHClientSessionTransportManager.CloseConnection()\r\n at System.Management.Automation.Remoting.Client.SSHClientSessionTransportManager.Dispose(Boolean isDisposing)\r\n at System.Management.Automation.Remoting.BaseTransportManager.Dispose()\r\n at System.Management.Automation.Remoting.ClientRemoteSessionDSHandlerImpl.Dispose(Boolean disposing)\r\n at System.Management.Automation.Remoting.ClientRemoteSessionDSHandlerImpl.Dispose()\r\n at System.Management.Automation.Remoting.ClientRemoteSessionImpl.Dispose(Boolean disposing)\r\n at System.Management.Automation.Remoting.ClientRemoteSessionImpl.Dispose()\r\n at System.Management.Automation.Internal.ClientRunspacePoolDataStructureHandler.Dispose(Boolean disposing)\r\n at System.Management.Automation.Runspaces.Internal.RemoteRunspacePoolInternal.Dispose(Boolean disposing)\r\n at System.Management.Automation.Runspaces.RunspacePool.Dispose()\r\n at System.Management.Automation.RemoteRunspace.Dispose(Boolean disposing)\r\n at System.Management.Automation.Runspaces.Runspace.Dispose()\r\n at Microsoft.PowerShell.Commands.RemovePSSessionCommand.ProcessRecord()\r\n at System.Management.Automation.Cmdlet.DoProcessRecord()\r\n at System.Management.Automation.CommandProcessor.ProcessRecord()\r\n\r\nLooking at both the PowerShell code and the CoreFx code, there are three problems:\r\n\r\n1: SSHClientSessionTransportManager.CloseConnection disposes three streams but does not clear the associated fields. The result is multiple unnecessary calls to StreamXXX.Dispose.  A minor perf hit, at worse.\r\n\r\n2: System.IO.StreamWriter does not correctly detect it has been disposed.  It calls its Flush method which detects the underlying stream is null and throw the ObjectDisposedException.\r\n\r\n3: The System.IO.Stream* instances have already been disposed before the test has called Remove-PSSession.\r\n\r\nThe cause of this is TBD; investigation in progress.\r\n\r\nThe attached file provides a repro.  Running it in a loop will average about 3 failures out of 10.  It does not fail when run on Windows but the repro percentage can be seen consistently on Ubuntu 16.04. In all cases, the target system is Windows Server 2016.\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n[SshObjectDisposedException.ps1.txt](https://github.com/PowerShell/PowerShell/files/2362754/SshObjectDisposedException.ps1.txt)\r\n\r\n```powershell\r\n\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\nThe script runs without errors\r\n\r\nActual behavior\r\n---------------\r\n~30% of the time, the script fails when closing the PSSession (Remove-PSSession)\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\nClient System:  Ubuntu 16.04\r\n```powershell\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.1.0-rc.1\r\nPSEdition                      Core\r\nGitCommitId                    6.1.0-rc.1\r\nOS                             Linux 4.15.0-1022-azure #22~16.04.1-Ubuntu SMP Thu Aug 16 10:31:05 UTC 2018\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\nTarget System: Windows Server 2016\r\n```powershell\r\nName                           Value\r\n----                           -----\r\nGitCommitId                    6.1.0-rc.1-43-g70d601502dc05ef99f4950a67ccadf73b5338ce8\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSEdition                      Core\r\nPSVersion                      6.1.0-rc.1\r\nWSManStackVersion              3.0\r\nPSRemotingProtocolVersion      2.3\r\nPlatform                       Win32NT\r\nOS                             Microsoft Windows 10.0.14393\r\nSerializationVersion           1.1.0.1\r\n```",
  "closed_at": "2018-09-10T19:31:57Z",
  "comments": [
    {
      "author": "dantraMSFT",
      "author_association": "CONTRIBUTOR",
      "body": "On further investigation I found two things:\r\n\r\n1: The exception appears to occur within the context of dispose. i.e., if I extend the script to perform more operations, before Remove-PSSession, the operations all succeed.  However, the exception does cause the script to abort at that point.\r\n\r\n2: I'm seeing failure rates that range from 20%-70%",
      "created_at": "2018-09-08T01:20:22Z",
      "updated_at": "2018-09-08T01:20:22Z"
    }
  ],
  "created_at": "2018-09-07T23:18:47Z",
  "number": 7740,
  "state": "closed",
  "title": "ObjectDisposedException attempting to Remove-PSSession an SSH-Based PSSession",
  "updated_at": "2018-09-11T04:32:22Z"
}