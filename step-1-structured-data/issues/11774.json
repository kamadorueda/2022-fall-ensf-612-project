{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11774",
  "author": "cloudhan",
  "body": "\r\n\r\n# Steps to reproduce\r\nSeems only `ssh.exe` and `wsl.exe` will have this weird problem. Even I use a full path like `C:\\Windows\\System32\\OpenSSH\\ssh.exe` wont fix the problem. See following screenshots.\r\n\r\n# Expected behavior\r\nWith Windows PowerShell, everything works as expected.\r\n![image](https://user-images.githubusercontent.com/1279292/73805290-418abd00-4801-11ea-8f70-792589c4b4f9.png)\r\n\r\n\r\n# Actual behavior\r\nWith PowerShell Core \r\n![image](https://user-images.githubusercontent.com/1279292/73805262-29b33900-4801-11ea-8c40-634cc5add377.png)\r\n\r\n\r\n# Environment data\r\n\r\nInstalled with [PowerShell-7.0.0-rc.2-win-x64.msix](https://github.com/PowerShell/PowerShell/releases/download/v7.0.0-rc.2/PowerShell-7.0.0-rc.2-win-x64.msix)\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-rc.2\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-rc.2\r\nOS                             Microsoft Windows 10.0.19041\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\n",
  "closed_at": "2020-02-06T01:51:09Z",
  "comments": [
    {
      "author": "cloudhan",
      "author_association": "NONE",
      "body": "Note, `autochk.exe` is a executable that I randomly chosen from `C:\\Windows\\System32`, to show that:\r\n1.  `C:\\Windows\\System32` is in $env:Path.\r\n2.  `C:\\Windows\\System32` is readable in ps core",
      "created_at": "2020-02-05T02:31:16Z",
      "updated_at": "2020-02-05T02:31:16Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "A shot in the dark: Are these perhaps 32-bit executables? If so, you must target them via `C:\\Windows\\SysWow64` from 64-bit processes.",
      "created_at": "2020-02-05T03:47:02Z",
      "updated_at": "2020-02-05T13:14:55Z"
    },
    {
      "author": "cloudhan",
      "author_association": "NONE",
      "body": "Might be related https://github.com/MicrosoftDocs/WSL/issues/499 and https://github.com/microsoft/WSL/issues/4259.\r\n\r\n@therealkenc I see you commented in https://github.com/microsoft/WSL/issues/4259, do you have any idea? I think this is a PSCore's issue.\r\n\r\n\r\nHere is my path.\r\n```none\r\n> $env:Path -split ';'\r\nC:\\Program Files\\WindowsApps\\Microsoft.PowerShellPreview_7.0.102.0_x86__8wekyb3d8bbwe\r\nC:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v10.2\\bin\r\nC:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v10.2\\libnvvp\r\nC:\\Program Files (x86)\\Common Files\\Intel\\Shared Libraries\\redist\\intel64_win\\compiler\r\nC:\\Program Files (x86)\\Common Files\\Intel\\Shared Libraries\\redist\\ia32_win\\compiler\r\nC:\\Program Files\\WindowsApps\\Microsoft.PowerShell_7.0.0.4_neutral__8wekyb3d8bbwe\r\nC:\\ProgramData\\Oracle\\Java\\javapath\r\nC:\\Program Files (x86)\\PDFtk\\bin\r\nC:\\Program Files (x86)\\GnuPG\\bin\r\nC:\\Program Files (x86)\\IntelSWTools\\OpenCL\\runtime\\cpu\\windows\\compiler\\lib\\ia32_win\r\nC:\\Program Files (x86)\\IntelSWTools\\OpenCL\\runtime\\cpu\\windows\\compiler\\lib\\intel64_win\r\nC:\\Program Files (x86)\\IntelSWTools\\OpenCL\\sdk\\bin\\GTPin\r\nC:\\Program Files (x86)\\IntelSWTools\\OpenCL\\sdk\\bin\\Pin\r\nC:\\Program Files (x86)\\IntelSWTools\\OpenCL\\sdk\\bin\\x64\r\nC:\\Program Files (x86)\\IntelSWTools\\OpenCL\\sdk\\bin\\x86\r\nC:\\Program Files (x86)\\Wolfram Research\\WolframScript\r\nC:\\Program Files\\dotnet\r\nC:\\Program Files\\Git LFS\r\nC:\\Program Files\\Git\\cmd\r\nC:\\Program Files\\Microsoft SQL Server\\130\\Tools\\Binn\r\nC:\\Program Files\\Microsoft VS Code\\bin\r\nC:\\Program Files (x86)\\NVIDIA Corporation\\PhysX\\Common\r\nC:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\r\nC:\\Windows\r\nC:\\Windows\\System32\r\nC:\\Windows\\System32\\OpenSSH\r\nC:\\Windows\\System32\\wbem\r\nC:\\Windows\\System32\\WindowsPowerShell\\v1.0\r\nC:\\Program Files\\NVIDIA Corporation\\Nsight Compute 2019.5.0\r\nC:\\Program Files\\CMake\\bin\r\nC:\\texlive\\2019\\bin\\win32\r\nC:\\tools\\vcpkg\r\nC:\\tools\\vcpkg\\installed\\x64-windows\\bin\r\nC:\\Users\\cloud\\.dotnet\\tools\r\nC:\\Users\\cloud\\AppData\\Local\\Microsoft\\WindowsApps\r\nC:\\tools\\depot_tools\r\nC:\\tools\r\n```",
      "created_at": "2020-02-05T07:11:12Z",
      "updated_at": "2020-02-05T10:13:35Z"
    },
    {
      "author": "cloudhan",
      "author_association": "NONE",
      "body": "@mklement0 random executables live in $env:Path being not executable is frustrating. I just don't understand how can I being unable to launch a process with an absolute path of an executable, where the executable is perfectly runnable with `cmd` or `Windows PowerShell`.\r\n\r\nAnd I notice an even more stupid thing, if I launch cmds from powershells, the problem still presents with PSCore launched cmd, is it contagious, or just something wrong with my env?",
      "created_at": "2020-02-05T07:27:08Z",
      "updated_at": "2020-02-05T10:12:59Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Does PowerShell at least find the _file_? Does the following return what you expect it to?\r\n\r\n```powershell\r\nGet-Item -Force C:\\Windows\\System32\\OpenSSH\\ssh.exe\r\n```\r\n\r\nYour `$env:PATH` variable content is short enough to not be a problem.\r\nStill, given that you say that a `cmd` instance launched from PowerShell then also displays the problem makes me wonder if there's something about the _content_ of your `$env:PATH` variable that causes problems (though that contradicts being able to run `autochck.exe`); \r\n\r\nif you trim down `$env:PATH` to just the standard entries (temporarily, so we can narrow down the problem), does the problem persist.",
      "created_at": "2020-02-05T13:24:31Z",
      "updated_at": "2020-02-05T13:24:31Z"
    },
    {
      "author": "cloudhan",
      "author_association": "NONE",
      "body": "@mklement0 PSCore failed to `Get-Item` with \r\n```\r\nGet-Item: Cannot find path 'C:\\Windows\\System32\\OpenSSH\\ssh.exe' because it does not exist.\r\n```\r\n",
      "created_at": "2020-02-05T14:08:21Z",
      "updated_at": "2020-02-05T14:08:21Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "I see: I'm starting to suspect that it is _PowerShell_ that has been installed as a _32-bit_ version, which would explain the symptom, given that 32-bit processes have their own, independent `C:\\Windows\\System32` directory that shadows the one that 64-bit processes see.\r\n\r\nTry:\r\n\r\n```powershell\r\n# This would only work from a 32-bit PowerShell instance.\r\n# Access the 64-bit C:\\Windows\\System32 directory.\r\nGet-Item -Force C:\\Windows\\SysNative\\OpenSSH\\ssh.exe\r\n```\r\n\r\nA quick test to determine whether your PowerShell session is 32-bit is to examine `$env:ProgramFiles`: if it contains `C:\\Program Files (x86)` instead of `C:\\Program Files`, you're running a 32-bit session.",
      "created_at": "2020-02-05T14:14:32Z",
      "updated_at": "2020-02-05T14:15:26Z"
    },
    {
      "author": "cloudhan",
      "author_association": "NONE",
      "body": "@mklement0 Great thanks for the help, problem resolved after I reinstalled x64 version. Seems I make some mistake and install x86 version, and I can confirm that with my command history. Also thanks for pointing out the interesting `SysNative` directory. ",
      "created_at": "2020-02-06T01:51:09Z",
      "updated_at": "2020-02-06T01:51:09Z"
    },
    {
      "author": "ianyepan",
      "author_association": "NONE",
      "body": "@mklement0 Thanks Michael, your solution saved my day.",
      "created_at": "2020-10-15T16:51:03Z",
      "updated_at": "2020-10-15T16:51:03Z"
    }
  ],
  "created_at": "2020-02-05T02:27:34Z",
  "labels": [
    "Issue-Question"
  ],
  "number": 11774,
  "state": "closed",
  "title": "The term 'C:\\Windows\\System32\\OpenSSH\\ssh.exe' is not recognized as the name of a cmdlet, function, script file, or operable program.",
  "updated_at": "2020-10-15T16:51:03Z"
}