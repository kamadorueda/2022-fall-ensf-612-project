{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10796",
  "author": "Kriegel",
  "body": "InformationRecord has an `Source` property instead of an `InvocationInfo` property.\r\nThis  `Source` property has also an unexpected behavior. See: #10795 \r\n\r\nAll other xxxxxRecord Objects have an `InvocationInfo` property with rich call-source information's.\r\n\r\nInformationRecord is a very good candidate for Logging needs, because his other useful properties.\r\nI think even other use cases can participate from a rich call-source information out of  an `InvocationInfo` object.\r\n\r\nIf you assume an `InvocationInfo` property with `InformationRecord` you will earn Errors.\r\nSo an equal treatment with the other xxxxRecord objects is not possible.\r\n\r\nCode to reproduce:\r\n```powershell\r\n\r\nFunction New-PsStreamRecordObject {\r\n\r\n    [CmdletBinding()]\r\n    param ()\r\n\r\n    Process {\r\n\r\n        $InformationPreference = 'Continue'\r\n        $VerbosePreference = 'Continue'\r\n        $DebugPreference = 'Continue'\r\n        $WarningPreference = 'Continue'\r\n        $ErrorPreference = 'Continue'\r\n\r\n        $PSCmdlet.WriteInformation('PSCmdlet Information',@('Tag1','Tag2','Tag3'))\r\n        Write-Information 'Write Information' -Tags 'Tag1','Tag2','Tag3'\r\n\r\n        $PSCmdlet.WriteVerbose('PSCmdlet Verbose')\r\n        Write-Verbose 'Write Verbose'\r\n\r\n        $PSCmdlet.WriteDebug('PSCmdlet Debug')\r\n        Write-Debug 'Write Debug'\r\n\r\n        $PSCmdlet.WriteWarning('PSCmdlet Warning')\r\n        Write-Warning 'Write Warning'\r\n\r\n        $ErrorRecord = Write-Error 'PSCmdlet Error' 2>&1\r\n        $PSCmdlet.WriteError($ErrorRecord)\r\n        Write-Error 'Write Error'\r\n\r\n    }\r\n}\r\n\r\n\r\nNew-PsStreamRecordObject *>&1 | Select-Object -ExpandProperty 'InvocationInfo'\r\n\r\n```",
  "closed_at": null,
  "comments": [],
  "created_at": "2019-10-15T13:58:10Z",
  "number": 10796,
  "state": "open",
  "title": "Add InvocationInfo Property to InformationRecord",
  "updated_at": "2019-10-15T17:31:35Z"
}