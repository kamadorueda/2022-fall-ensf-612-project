{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4046",
  "author": "ricardogaspar2",
  "body": "Steps to reproduce\r\n------------------\r\n\r\nWhen calling Invoke-DscResource and passing string arguments that are supposed to be converted to integers (Enumerator) values the command doesn't do it. Only when using a DSC powershell configuration script.\r\n\r\nThe error is discussed in another issue in Ansible, because, at first, one thought the problem was inside win_dsc Ansible module. Apparently is not.\r\nhttps://github.com/ansible/ansible/issues/25754#issuecomment-309287318\r\n\r\nFull thread with all the steps (including DSC Script and PowerShell commands)\r\nhttps://github.com/ansible/ansible/issues/25754\r\n\r\nBut to shorten it a bit:\r\nThis DSC Script **works fine** using the cAdministrativeTemplateSetting from the PolicyFileEditor module (https://github.com/dlwyatt/PolicyFileEditor).\r\n\r\n1. Install the PolicyFileEditor in PowerShell of the target machine:\r\n```\r\nPS C:\\Users\\user>Find-DSCResource -ModuleName PolicyFileEditor\r\nPS C:\\Users\\user> Install-Module PolicyFileEditor\r\n```\r\n2. Run a simple DSC Script on the target Windows machine to prove that the resource **works fine**:\r\n```powershell\r\nConfiguration LocalGPO\r\n{\r\n    param\r\n    (\r\n        [string[]] $NodeName = 'localhost'\r\n    )\r\n\r\n    Import-DSCResource -ModuleName PolicyFileEditor\r\n\r\n    Node $NodeName\r\n    {\r\n        cAdministrativeTemplateSetting \"RDP Users Home Directory Path\"\r\n        {\r\n        #    SOFTWARE\\Policies\\Microsoft\\Windows NT\\Terminal Services!WFHomeDirUNC \r\n        #    SOFTWARE\\Policies\\Microsoft\\Windows NT\\Terminal Services!WFHomeDir\r\n        #    SOFTWARE\\Policies\\Microsoft\\Windows NT\\Terminal Services!WFHomeDirDrive\r\n            KeyValueName = \"SOFTWARE\\Policies\\Microsoft\\Windows NT\\Terminal Services\\WFHomeDir\"\r\n            PolicyType = \"Machine\"\r\n            Data = \"\\\\servershare\\test\"\r\n            Ensure = \"Present\"\r\n            Type = \"String\"\r\n        }\r\n\r\n        cAdministrativeTemplateSetting \"RDP Users Home Directory Letter\"\r\n        {\r\n            KeyValueName = \"SOFTWARE\\Policies\\Microsoft\\Windows NT\\Terminal Services\\WFHomeDirDrive\"\r\n            PolicyType = \"Machine\"\r\n            Data = \"X:\"\r\n            Ensure = \"Present\"\r\n            Type = \"String\"\r\n        }\r\n\r\n        cAdministrativeTemplateSetting \"RDP Users Home Directory UNC boolean\"\r\n        {\r\n            KeyValueName = \"SOFTWARE\\Policies\\Microsoft\\Windows NT\\Terminal Services\\WFHomeDirUNC\"\r\n            PolicyType = \"Machine\"\r\n            Data = \"1\"\r\n            Ensure = \"Present\"\r\n            Type = \"Dword\"\r\n        }\r\n\r\n    }\r\n}\r\n\r\nLocalGPO\r\nStart-DscConfiguration -Path .\\LocalGPO -Wait -Force -Verbose\r\n```\r\n\r\n3. On the target machine, run the command `gpupdate` to update the Group Policy. Then Check the registry keys in `HKLM:SOFTWARE\\Policies\\Microsoft\\Windows NT\\Terminal Services\\`. There should be a **DWORD** key with the name `WFHomeDirUNC` and value `1`.\r\n\r\n\r\nWhat **DOES NOT work**:\r\n1. check the cAdministrativeTemplateSetting resource (from https://github.com/ansible/ansible/issues/25754#issuecomment-309286332):\r\n```powershell\r\nPS C:\\Users\\trond\\Documents> Get-DscResource cAdministrativeTemplateSetting | select -ExpandProperty Properties\r\n\r\nName                 PropertyType   IsMandatory Values\r\n----                 ------------   ----------- ------\r\nKeyValueName         [string]              True {}\r\nPolicyType           [string]              True {Administrators, Machine, NonAdministrators, User}\r\nData                 [string[]]           False {}\r\nDependsOn            [string[]]           False {}\r\nEnsure               [string]             False {Absent, Present}\r\nPsDscRunAsCredential [PSCredential]       False {}\r\nType                 [Int32]              False {Binary, DWord, ExpandString, MultiString...}\r\n```\r\n\r\n2. Test using Invoke-DscResource **(essential for ANSIBLE win_dsc module to call DSC resources)**. From https://github.com/ansible/ansible/issues/25754#issuecomment-309287318.\r\n```powershell\r\n$DscParams = @{}\r\n$DscParams.Add(\"Ensure\", \"Present\")\r\n$DscParams.Add(\"KeyValueName\", \"SOFTWARE\\Policies\\Microsoft\\Windows NT\\Terminal Services\\WFHomeDirUNC\")\r\n$DscParams.Add(\"PolicyType\", \"Machine\")\r\n$DscParams.Add(\"Data\", 1)\r\n$DscParams.Add(\"Type\", \"Dword\")\r\nInvoke-DscResource -Name cAdministrativeTemplateSetting -ModuleName \"PolicyFileEditor\" -Method Get -Property $dscparams\r\nInvoke-DscResource -Name cAdministrativeTemplateSetting -ModuleName \"PolicyFileEditor\" -Method Set -Property $dscparams\r\n```\r\nThe errors:\r\n```powershell\r\nInvoke-DscResource -Name cAdministrativeTemplateSetting -ModuleName \"PolicyFileEditor\" -Method Get -Property $dscparams\r\nConvert property 'Type' value from type 'STRING' to type 'SINT32' failed\r\n At line:12, char:2\r\n Buffer:\r\nirectResourceAccess\";\r\n};^\r\ninsta\r\n    + CategoryInfo          : SyntaxError: (root/Microsoft/...gurationManager:String) [], CimException\r\n    + FullyQualifiedErrorId : MiClientApiError_Failed\r\n    + PSComputerName        : localhost\r\n \r\n\r\nPS C:\\Windows\\system32> Invoke-DscResource -Name cAdministrativeTemplateSetting -ModuleName \"PolicyFileEditor\" -Method Set -Property $dscparams\r\nConvert property 'Type' value from type 'STRING' to type 'SINT32' failed\r\n At line:12, char:2\r\n Buffer:\r\nirectResourceAccess\";\r\n};^\r\ninsta\r\n    + CategoryInfo          : SyntaxError: (root/Microsoft/...gurationManager:String) [], CimException\r\n    + FullyQualifiedErrorId : MiClientApiError_Failed\r\n    + PSComputerName        : localhost\r\n```\r\nExpected behavior\r\n-----------------\r\nThe Invoke-DscResource should work like calling a DSC resource with parameters in a DSC configuration script. Using string arguments that inside the resource are actually integers.\r\n\r\nActual behavior\r\n---------------\r\nIt's not able to convert a string (which is supposedly accepted by the resource in the examples: cAdministrativeTemplateSetting from PolicyFileEditor module) to an integer. The resource contains a map to do this \"conversion\"/substitution of the keys (string values) for integers (enumerators). \r\n\r\nEnvironment data\r\n----------------\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value\r\n----                           -----\r\nPSVersion                      5.1.14409.1005\r\nPSEdition                      Desktop\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nBuildVersion                   10.0.14409.1005\r\nCLRVersion                     4.0.30319.42000\r\nWSManStackVersion              3.0\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "cc @nitinbps ",
      "created_at": "2018-12-05T20:16:21Z",
      "updated_at": "2018-12-05T20:16:21Z"
    }
  ],
  "created_at": "2017-06-19T10:46:37Z",
  "number": 4046,
  "state": "open",
  "title": "Invoke-DscResource parameters type conversion",
  "updated_at": "2018-12-05T20:16:22Z"
}