{
  "_url": "https://github.com/PowerShell/PowerShell/issues/1751",
  "author": "SteveL-MSFT",
  "body": "<!--\n\nIf it is a bug report:\n- make sure you are able to repro it on the latest released version. \nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\n- Search the existing issues.\n- Refer to the [FAQ](../docs/FAQ.md).\n- Refer to the [known issues](../docs/KNOWNISSUES.md).\n- Fill out the following repro template\n\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\n-->\n## Steps to reproduce\n\nCode: \n\n``` powershell\nclass TestClass {\n  hidden [int] $i = 1\n         [int] $j = 2\n}\n[TestClass] $tc = [TestClass]::new()\nGet-Member -InputObject $tc\nGet-Member -InputObject $tc -Force\nFormat-Table -InputObject $tc\nFormat-Table -InputObject $tc -Force\n\n# Output (note that while i is visible to Get-Member -Force, Format-Table doesn't \"see\" the property even with -Force):\nPS C:\\Users\\scbaker> Get-Member   -InputObject $tc\n\n   TypeName: TestClass\nName        MemberType Definition                    \n----        ---------- ----------                    \nEquals      Method     bool Equals(System.Object obj)\nGetHashCode Method     int GetHashCode()             \nGetType     Method     type GetType()                \nToString    Method     string ToString()             \nj           Property   int j {get;set;}             \n\nPS C:\\Users\\scbaker> Get-Member   -InputObject $tc -Force\n\n   TypeName: TestClass\nName        MemberType   Definition                                                                                                                                      \n----        ----------   ----------                                                                                                                                      \npstypenames CodeProperty System.Collections.ObjectModel.Collection`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]] pst...\npsadapted   MemberSet    psadapted {j, get_i, set_i, get_j, set_j, ToString, Equals, GetHashCode, GetType}                                                               \npsbase      MemberSet    psbase {j, get_i, set_i, get_j, set_j, ToString, Equals, GetHashCode, GetType}                                                                  \npsextended  MemberSet    psextended {}                                                                                                                                   \npsobject    MemberSet    psobject {BaseObject, Members, Properties, Methods, ImmediateBaseObject, TypeNames, get_BaseObject, get_Members, get_Properties, get_Methods,...\nEquals      Method       bool Equals(System.Object obj)                                                                                                                  \nGetHashCode Method       int GetHashCode()                                                                                                                               \nGetType     Method       type GetType()                                                                                                                                  \nget_i       Method       int get_i()                                                                                                                                     \nget_j       Method       int get_j()                                                                                                                                     \nset_i       Method       void set_i(int )                                                                                                                                \nset_j       Method       void set_j(int )                                                                                                                                \nToString    Method       string ToString()                                                                                                                               \ni           Property     int i {get;set;}                                                                                                                                \nj           Property     int j {get;set;}                                                                                                                               \n\nPS C:\\Users\\scbaker> Format-Table -InputObject $tc\nj\n-\n2\n\nPS C:\\Users\\scbaker> Format-Table -InputObject $tc -Force\nj\n-\n2\n```\n\nScotia Baker:\nISSUE:\n\nThere is currently no way (that I'm aware of) to make the built-in Format-\\* cmdlets display hidden class properties.\n\nIMPACT:\n\nUsers are forced to either implement their own Format-\\* cmdlet, remove hidden when it belongs, or accept that the hidden field won't be available when it's desired.\n\nEXAMPLE:\n\nI'm writing an API where some state is internal and others are public.  Since PowerShell 5 classes only supports public properties, I use the hidden keyword to hide API users from complexity they don't need to worry about.  However, I need to log this state for debugging purposes.  Instead of being able to use the built-in Format-\\* cmdlets, I had to spend significant time creating my own function that uses Get-Member -Force to enumerate the object's (hidden) properties.\n",
  "closed_at": "2022-05-05T21:00:40Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Good idea!\nI'm just not sure that \"-Force\" is suitable.\nPerhaps it is better to add a new switch? Format-\\* -Hidden ? Format-\\* -All ?\n",
      "created_at": "2016-09-28T14:15:47Z",
      "updated_at": "2016-09-28T14:16:47Z"
    },
    {
      "author": "jdhitsolutions",
      "author_association": "COLLABORATOR",
      "body": "Under review by the Cmdlet Working Group",
      "created_at": "2022-05-02T13:21:44Z",
      "updated_at": "2022-05-02T13:21:44Z"
    },
    {
      "author": "JamesWTruher",
      "author_association": "MEMBER",
      "body": "@PowerShell/wg-powershell-cmdlets \r\nThis is by design. Our `hidden` is more akin to the c# `private` or `internal`. Please see `get-help about_hidden` for more information. \r\n",
      "created_at": "2022-05-04T17:02:13Z",
      "updated_at": "2022-05-04T17:02:13Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as by-design and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2022-05-05T21:00:39Z",
      "updated_at": "2022-05-05T21:00:39Z"
    }
  ],
  "created_at": "2016-08-12T17:50:37Z",
  "labels": [
    "WG-Cmdlets",
    "Resolution-By Design",
    "Issue-Discussion"
  ],
  "number": 1751,
  "state": "closed",
  "title": "format-* cmdlets cannot display hidden class members",
  "updated_at": "2022-05-05T21:00:40Z"
}