{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6917",
  "author": "hubuk",
  "body": "## PR Summary\r\n\r\nFix for #6916.\r\n\r\nThis change makes transcription of Write-Information command consistent with `$InfomrationPreference` variable.\r\nCurrently Write-Information command is being transcribed if `$InfomrationPreference` is set to `'SilentlyContinue'` and not transcribed if set to `'Continue'`.\r\n\r\nThe problem is in if/else statement which starts here:\r\nhttps://github.com/PowerShell/PowerShell/blob/948532ac839f3bc7e8bbbd3c9f5f292868ac8687/src/System.Management.Automation/engine/MshCommandRuntime.cs#L757-L758\r\nand has a continuation here:\r\nhttps://github.com/PowerShell/PowerShell/blob/948532ac839f3bc7e8bbbd3c9f5f292868ac8687/src/System.Management.Automation/engine/MshCommandRuntime.cs#L824-L828\r\n\r\nTranscription of Write-Host commands are handled in InternalUI.Write* methods as the comment suggests. These commands are distinguished by \"PSHOST\" tag.\r\nTranscription of Write-Information commands is supposed to take place in the else statement but code in this statement is being executed only if \r\n``` C#\r\n(!record.Tags.Contains(\"PSHOST\") || record.Tags.Contains(\"FORWARDED\"))\r\n&&\r\npreference != ActionPreference.Continue)\r\n```\r\nThis condition is invalid. Correct condition is:\r\n``` C#\r\n!record.Tags.Contains(\"PSHOST\")\r\n&&\r\npreference == ActionPreference.Continue)\r\n```\r\n\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [ ] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` to the beginning of the title and remove the prefix when the PR is ready.\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [x] User-facing [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [x] Issue filed - Issue link: #6916\r\n- **Testing - New and feature**\r\n    - [ ] Not Applicable or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n        - [ ] [Add `[feature]` if the change is significant or affects feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\r\n",
  "closed_at": "2018-06-16T16:11:22Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@hubuk Thanks for your contribution. I believe we need to get a conclusion in Issue before we continue the PR.",
      "created_at": "2018-05-22T10:43:37Z",
      "updated_at": "2018-05-22T10:43:37Z"
    },
    {
      "author": "hubuk",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov Sure. I need to check why a new test is failing. It was OK on my local machine.",
      "created_at": "2018-05-22T18:20:29Z",
      "updated_at": "2018-05-22T18:20:29Z"
    },
    {
      "author": "hubuk",
      "author_association": "CONTRIBUTOR",
      "body": "I found that tests are executed with redirection to a pipe.\r\nIn this case all Write-* commands are always logged in the transcript file no matter what preference is set.\r\nAccording to this I removed the second test (no transcription for 'SilentlyContinue') as it cannot be satisfied by current test environment.",
      "created_at": "2018-05-22T21:02:20Z",
      "updated_at": "2018-05-22T21:02:20Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@mklement0 Could you please review the PR?",
      "created_at": "2018-05-23T03:51:49Z",
      "updated_at": "2018-05-23T03:51:49Z"
    },
    {
      "author": "hubuk",
      "author_association": "CONTRIBUTOR",
      "body": "@mklement0 You are right. My bad...\r\nAnd it proved that newly written test is not that useful...\r\nWill fix it shortly.",
      "created_at": "2018-05-23T18:38:55Z",
      "updated_at": "2018-05-23T18:38:55Z"
    },
    {
      "author": "hubuk",
      "author_association": "CONTRIBUTOR",
      "body": "It should be OK now. Test was passing for the same reason why my previous test was failing.\r\nAll Write-* commands are transcribed if redirected to a pipe.",
      "created_at": "2018-05-23T19:41:06Z",
      "updated_at": "2018-05-23T19:41:06Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@hubuk:\r\n\r\n> All Write-* commands are transcribed if redirected to a pipe.\r\n\r\nCan you clarify what that means, specifically, and perhaps give an example?\r\nIs that a problem in itself or by-design behavior?\r\n\r\n",
      "created_at": "2018-05-23T21:18:13Z",
      "updated_at": "2018-05-23T21:18:13Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@hubuk Please don't fix CodeFactor issues in the PR (It's hard to review meaningful changes) - all style changes should be in new PR.",
      "created_at": "2018-05-24T04:03:31Z",
      "updated_at": "2018-05-24T04:03:31Z"
    },
    {
      "author": "hubuk",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov Reverted the change.\r\n\r\n@mklement0 \r\n> All Write-* commands are transcribed if redirected to a pipe.\r\n\r\nSorry, for wrong information I provided:\r\nTests was failing because of too simple data to check. 'Continue' was also part of the pwsh.exe command line:\r\n`Host Application: ...\\bin\\Release\\netcoreapp2.1\\win7-x64\\publish\\pwsh.dll -noprofile -c $env:POWERSHELL_TELEMETRY_OPTOUT = 1;$ProgressPreference = 'silentlyContinue';...`\r\nand this is part of the transcription file.\r\nI still need to investigate my previous observations. For now lets assume that this is not an issue.",
      "created_at": "2018-05-24T06:15:56Z",
      "updated_at": "2018-05-24T06:15:56Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Write-Host is related to this code so you have to add tests for it.",
      "created_at": "2018-05-25T07:17:07Z",
      "updated_at": "2018-05-25T07:17:07Z"
    },
    {
      "author": "hubuk",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov I added tests for `Write-Host` with `-InformationAction` `Continue` and `SilentlyContinue`. Currently `Ignore` does not write to console but is being transcribed, so I skipped test for it. Let me know if you would like to have this test included anyway. I can also spend some time to make it produce same result for console and for transcript file. Fixing console output rather than transcription will make `Write-Host` behave as documented.\r\n\r\nAdditionally removing `INFO: ` prefix mentioned by @mklement0 is easy. Should I proceed with it in this PR?",
      "created_at": "2018-05-27T19:27:20Z",
      "updated_at": "2018-05-27T19:27:38Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@hubuk:\r\n\r\n> Fixing console output rather than transcription will make Write-Host behave as documented.\r\n\r\nI'm currently only aware of problems with the _transcription_ behavior, not with _console output_, so the guiding principle should be to align transcription behavior with that of the current console-output behavior.\r\n\r\nIf, with respect to console-output behavior, you're referring to `Write-Host` being silenced by `-InformationAction Ignore`, that is not a _behavioral_ problem, it is a _documentation_ problem.",
      "created_at": "2018-05-27T19:56:40Z",
      "updated_at": "2018-05-27T19:56:40Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I'm not sure I need to remove the INFO: prefix. I suppose it was made that distinguish the output of the cmdlet. Although if we want to get the exact snapshot of the console then we need to remove this prefix",
      "created_at": "2018-05-28T03:48:40Z",
      "updated_at": "2018-05-28T03:48:40Z"
    },
    {
      "author": "hubuk",
      "author_association": "CONTRIBUTOR",
      "body": "There are two issues still present:\r\n1. `Write-Host -InformationAction Ignore` is being transcribed but is should not be.\r\n2. `Write-Host -InformationAction Inquire` has wrong order in transcript file:\r\n```\r\n> Write-Host 'Question?' -InformationAction Inquire\r\nQuestion?\r\n\r\nConfirm\r\nContinue with this operation?\r\n[Y] Yes  [A] Yes to All  [H] Halt Command  [S] Suspend  [?] Help (default is \"Y\"):\r\n```\r\nin transcript file:\r\n```\r\nConfirm\r\nContinue with this operation?\r\n&Yes  Yes to &All  &Halt Command  &Suspend\r\nY\r\nQuestion?\r\n```\r\n\r\nThe reason of 2. is that `Write-Host` is being transcribed separately in WriteConsoleCmdlet.cs file after the whole command has been handled.\r\n\r\nCurrent transcript implementation for `Write-Information` can be used for `Write-Host` which will slightly simplify the code and provide fix for both 1. and 2.\r\nMay I include this fix in this PR?",
      "created_at": "2018-05-28T08:53:00Z",
      "updated_at": "2018-05-28T08:59:39Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@hubuk: \r\n\r\nIf there are no side effects, it seems like a good change to make (but it's not my call).\r\n\r\nOn a side note: the transcription of the prompt choices with the raw \"accelerator chars.\" (`&Yes` instead of `[Y] Yes`) is unexpected (though not a big deal).\r\n\r\n@iSazonov:\r\n\r\n> I'm not sure I need to remove the INFO: prefix. I suppose it was made that distinguish the output of the cmdlet. Although if we want to get the exact snapshot of the console then we need to remove this prefix\r\n\r\nYes, consistency with console output is important, I think.\r\n\r\nHowever, you could argue that the `INFO: ` prefix should be present in the console (as well), for consistency with the `Write-Verbose`, `Write-Warning`, and `Write-Debug` cmdlets, and that it is therefore console output that needs fixing in this case.\r\n\r\nWhile changing that wouldn't technically be a _breaking_ change - _for-display_ output is not part of the contract with the user - it would be a _noticeable_ one.\r\n\r\nEither way, let's discuss it in a separate issue: #6951\r\n",
      "created_at": "2018-05-28T14:57:13Z",
      "updated_at": "2018-05-28T14:57:13Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Now that we know that the `INFO: ` prefix is not printed to the console by design - see https://github.com/PowerShell/PowerShell/issues/6951#issuecomment-393290377 - we should remove it from the transcript too.",
      "created_at": "2018-05-30T21:15:41Z",
      "updated_at": "2018-05-30T21:15:41Z"
    },
    {
      "author": "hubuk",
      "author_association": "CONTRIBUTOR",
      "body": "@mklement0 @iSazonov \r\nMade changes for two issues I mentioned.\r\n\r\nUnfortunately \"accelerator chars.\" are handled by `PromptForChoice` method in `ConsoleHostUserInterfacePromptForChoice.cs` file. Fix could be done by making part of this method public.\r\n\r\nIt seems like there could be much more cases in which transcription file is different from the console output. For example there is no transcription of an invalid accelerator keys user pressed.\r\nCurrently transcription code is spreed among entire codebase and it is hard to make it consistent with console output because host code may make changes to the data just before displaying it.\r\n\r\nBetter approach would be to make a transcript part of host classes which will make it easier to ensure consistency but it would be a major refactoring.",
      "created_at": "2018-06-04T10:28:41Z",
      "updated_at": "2018-06-04T11:07:28Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@hubuk: Thanks for the update; my sense is that - at least for now and in the context of this PR - we needn't worry about transcribing 100% faithfully in all cases as long as all the information is ultimately there.",
      "created_at": "2018-06-04T13:19:58Z",
      "updated_at": "2018-06-04T13:21:07Z"
    },
    {
      "author": "hubuk",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT Is there anything else you would like to be changed?",
      "created_at": "2018-06-13T04:32:09Z",
      "updated_at": "2018-06-13T04:32:09Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT Please update your review.",
      "created_at": "2018-06-14T18:08:20Z",
      "updated_at": "2018-06-14T18:08:20Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I have a fear of removal FORWARDED condition - do it really not used?\r\n\r\n/cc @SteveL-MSFT Who can confirm?",
      "created_at": "2018-06-15T18:55:29Z",
      "updated_at": "2018-06-15T18:55:29Z"
    },
    {
      "author": "hubuk",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov \r\nFORWARDED condition is still there: https://github.com/PowerShell/PowerShell/blob/c67c20c5c3caa7615028cb2cafea1cdfa9fe9b26/src/System.Management.Automation/engine/MshCommandRuntime.cs#L756-L757 Only logic for the else statement has changed from:\r\nhttps://github.com/PowerShell/PowerShell/blob/e177fcaef610f874aa31cd3d85f97162d2859e72/src/System.Management.Automation/engine/MshCommandRuntime.cs#L824-L828 to: https://github.com/PowerShell/PowerShell/blob/c67c20c5c3caa7615028cb2cafea1cdfa9fe9b26/src/System.Management.Automation/engine/MshCommandRuntime.cs#L828-L831\r\n\r\n**Before** my changes `TranscribeResult` was being executed for the following conditions:\r\n1. In `WriteConsoleCmdlet.cs` which is when `record.Tags.Contains(\"PSHOST\")`\r\n2. `(preference != ActionPreference.Continue) && !record.Tags.Contains(\"PSHOST\")` as the first part of the evaluation of condition for else statement.\r\n3. `(preference != ActionPreference.Continue) && record.Tags.Contains(\"PSHOST\") && record.Tags.Contains(\"FORWARDED\")` as the second part.\r\n_So transcription for FORWARDED tag was being executed only for `Write-Host` or for `Write-Information` when `preference != ActionPreference.Continue`. Taking into account that due to bug `ActionPreference.Continue` should be `ActionPreference.SilentlyContinue` This is what current code is doing._\r\n\r\n**After** my changes `TranscribeResult` is being executed only for the following cases:\r\n1. `record.Tags.Contains(\"PSHOST\")`\r\n2. `!record.Tags.Contains(\"PSHOST\") && preference != ActionPreference.SilentlyContinue`\r\n\r\nI hope this is somehow readable.",
      "created_at": "2018-06-15T20:02:23Z",
      "updated_at": "2018-06-15T20:26:48Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@hubuk Sorry, sometimes GitHub shows diffs in very strange way.",
      "created_at": "2018-06-16T16:07:51Z",
      "updated_at": "2018-06-16T16:07:51Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@hubuk Thank you for your contribution and your patience! \r\nI hope you will make still many useful contributions.",
      "created_at": "2018-06-16T16:14:27Z",
      "updated_at": "2018-06-16T16:14:27Z"
    },
    {
      "author": "hubuk",
      "author_association": "CONTRIBUTOR",
      "body": "Happy to contribute. Thanks!",
      "created_at": "2018-06-16T17:10:45Z",
      "updated_at": "2018-06-16T17:10:45Z"
    }
  ],
  "created_at": "2018-05-22T06:03:03Z",
  "number": 6917,
  "state": "closed",
  "title": "Fix conditions for transcription of Write-Information command.",
  "updated_at": "2018-06-17T20:33:03Z"
}