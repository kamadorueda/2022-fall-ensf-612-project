{
  "_url": "https://github.com/PowerShell/PowerShell/issues/16237",
  "author": "craibuc",
  "body": "### Prerequisites\n\n- [X] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\n\n### Steps to reproduce\n\n1. Find an API that supports POSTing documents; I'm using BambooHR's [Upload Employee File](https://documentation.bamboohr.com/reference#upload-employee-file-1)\r\n2. Create a PDF with accented character (e.g. `r\u00e9sum\u00e9.pdf`)\r\n3. Run script\r\n\r\n```powershell\r\n$Path = '~/Desktop/r\u00e9sum\u00e9.pdf`\r\n$Item = Get-Item -Path $Path\r\n\r\n$Form = @{\r\n    file = $Item\r\n    fileName = $Item.Name\r\n    category = 12 # required by API\r\n}\r\n\r\n$Headers = @{\r\n    Accept = 'application/json'\r\n}\r\n\r\n# credentials\r\n$ApiKey = '1c174caf-d294-4dcd-9df0-6ba8b7242066' # dummy\r\n$Password = ConvertTo-SecureString 'Password' -AsPlainText -Force\r\n$Credentials = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList $ApiKey, $Password\r\n\r\n$Subdomain = 'mydomain' # dummy\r\n$Id = 0 # dummy\r\n$Uri = \"https://api.bamboohr.com/api/gateway.php/$Subdomain/v1/employees/$Id/files\"\r\n\r\ntry\r\n{\r\n    Invoke-WebRequest -Uri $Uri -Method Post -Form $Form -Headers $Headers -Credential $Credentials -UseBasicParsing\r\n}\r\ncatch\r\n{\r\n    Write-Error -Message $_.Exception.Message\r\n}\r\n```\n\n### Expected behavior\n\n```console\nStatusCode        : 201                                                                                                                                                      StatusDescription : Created                                                                                                                                                  Content           :                                                                                                                                                          \r\nRawContent        : HTTP/1.1 201 Created\r\n                    Date: Wed, 13 Oct 2021 13:23:36 GMT\r\n                    Transfer-Encoding: chunked\r\n                    Connection: keep-alive\r\n                    Server: nginx\r\n                    Location: https://app.bamboohr.com/api/gateway.php/mycompany/v1/employees/0/f\u2026\r\nHeaders           : {[Date, System.String[]], [Transfer-Encoding, System.String[]], [Connection, System.String[]], [Server, System.String[]]\u2026}\r\nImages            : {}\r\nInputFields       : {}\r\nLinks             : {}\r\nRawContentLength  : 0\r\nRelationLink      : {}\r\n```\n```\n\n\n### Actual behavior\n\n```console\nThe action fails.\r\n\r\nIf you supply a file without diacritical marks (e.g. `resume.pdf`), the action succeeds.\r\n\r\nIf you supply a file without diacritical marks (e.g. `resume.pdf`), but change the `fileName`\r\n\r\n\r\n$Form = @{\r\n    file = $Item\r\n    fileName = 'r\u00e9sum\u00e9.pdf' # hardcoded for testing purposes\r\n    category = 12 # required by API\r\n}\r\n```\r\nthen the action succeeds.\r\n\r\nSpace and apostrophe (') in the file's name do not cause a failure.\n```\n\n\n### Error details\n\n```console\nResponse       : StatusCode: 400, ReasonPhrase: 'Bad Request', Version: 1.1, Content: System.Net.Http.HttpConnectionResponseContent, Headers:\r\n                 {\r\n                   Date: Wed, 13 Oct 2021 13:02:49 GMT\r\n                   Transfer-Encoding: chunked\r\n                   Connection: keep-alive\r\n                   Server: nginx\r\n                   X-BambooHR-Error-Messsage: Extension missing or not supported\r\n                   X-BambooHR-Error-Messsage: Extension missing or not supported\r\n                   X-BambooHR-Error-Message: Extension missing or not supported\r\n                   X-BambooHR-Error-Message: Extension missing or not supported\r\n                   Cache-Control: no-cache, private\r\n                   Content-Type: text/html; charset=utf-8\r\n                 }\r\nStatusCode     : \r\nTargetSite     : Void ThrowTerminatingError(System.Management.Automation.ErrorRecord)\r\nStackTrace     :    at System.Management.Automation.MshCommandRuntime.ThrowTerminatingError(ErrorRecord errorRecord)\r\nMessage        : Response status code does not indicate success: 400 (Bad Request).\r\nData           : {}\r\nInnerException : \r\nHelpLink       : \r\nSource         : System.Management.Automation\r\nHResult        : -2146233088\r\n```\n```\n\n\n### Environment data\n\n```powershell\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.4\r\nPSEdition                      Core\r\nGitCommitId                    7.1.4\r\nOS                             Darwin 20.6.0 Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\n```\n\n\n### Visuals\n\n_No response_",
  "closed_at": "2021-11-03T01:00:59Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Please use Fiddler to capture a packet sent by PowerShell to the site. This can help that is a wrong in the packet.",
      "created_at": "2021-10-13T16:36:15Z",
      "updated_at": "2021-10-13T16:36:15Z"
    },
    {
      "author": "craibuc",
      "author_association": "NONE",
      "body": "I created a Word document, named `Resume.docx`.\r\n\r\nWhen it was posted, `mitmproxy` shows this request:\r\n\r\n```\r\nHost: | api.bamboohr.com\r\nAccept: | application/json\r\nUser-Agent: | Mozilla/5.0  (Macintosh; Darwin 20.6.0 Darwin Kernel Version 20.6.0: Mon Aug 30  06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64; en-US)  PowerShell/7.1.4\r\nContent-Type: | multipart/form-data; boundary=\"a4a8f29b-246f-45fa-a440-f7f79b5a22d5\"\r\nContent-Length: | 12783\r\n\r\n--a4a8f29b-246f-45fa-a440-f7f79b5a22d5\r\nContent-Disposition: form-data; name=\"file\"; filename=\"Resume.docx\"\r\nContent-Type: application/octet-stream\r\n[omitted]\r\n--a4a8f29b-246f-45fa-a440-f7f79b5a22d5\r\nContent-Type: text/plain; charset=utf-8\r\nContent-Disposition: form-data; name=\"category\"\r\n22\r\n--a4a8f29b-246f-45fa-a440-f7f79b5a22d5\r\n```\r\n\r\nI renamed the file `R\u00e9sum\u00e9.docx, then posted it.\r\n\r\n```\r\nHost: | api.bamboohr.com\r\nAccept: | application/json\r\nUser-Agent: | Mozilla/5.0  (Macintosh; Darwin 20.6.0 Darwin Kernel Version 20.6.0: Mon Aug 30  06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64; en-US)  PowerShell/7.1.4\r\nAuthorization: | Basic Mjk5ZTQ5MDFhOTc1MTliNWY5MzZlNzMzMTk2ZWE3ZTk1MTJlNzc2ZTpQYXNzd29yZA==\r\nContent-Type: | multipart/form-data; boundary=\"a46150cc-b0b2-4809-b1a9-0c0efe6b7452\"\r\nContent-Length: | 12808\r\n\r\n--a46150cc-b0b2-4809-b1a9-0c0efe6b7452\r\nContent-Disposition: form-data; name=\"file\"; filename=\"=?utf-8?B?UmXMgXN1bWXMgS5kb2N4?=\"\r\n[Re\u0301sume\u0301.docx](https://github.com/PowerShell/PowerShell/files/7340651/Resume.docx)\r\nContent-Type: application/octet-stream\r\n[omitted]\r\n--a46150cc-b0b2-4809-b1a9-0c0efe6b7452\r\nContent-Type: text/plain; charset=utf-8\r\nContent-Disposition: form-data; name=\"category\"\r\n22\r\n--a46150cc-b0b2-4809-b1a9-0c0efe6b7452\r\n```\r\n\r\nIt appears that the `filename` property in the second posting is wrong: `\"=?utf-8?B?UmXMgXN1bWXMgS5kb2N4?=\"`.",
      "created_at": "2021-10-13T18:59:17Z",
      "updated_at": "2021-10-13T18:59:17Z"
    },
    {
      "author": "jborean93",
      "author_association": "COLLABORATOR",
      "body": "That base64 value `UmXMgXN1bWXMgS5kb2N4?=` has the following bytes\r\n\r\n```\r\n52 65 CC 81 73 75 6D 65  R e . . s u m e\r\nCC 81 2E 64 6F 63 78     . . . d o c x\r\n```\r\n\r\nNow the `CC 81` refers to https://www.compart.com/en/unicode/U+0301 which is the combining acute accent which is designed to combine with the previous character so `e -> \u00e9` in both instances giving you `R\u00e9sum\u00e9.docx`. I'm unsure whether Fiddler is doing the representation like this but potentially the endpoint is unable to work with combinding characters and is expecting the `C3 A9` codepoint https://www.compart.com/en/unicode/U+00E9.\r\n\r\nAt least when testing this against httpbin.org I can see the raw payload sent to the host uses the `C3 A9` variant and the value isn't base64 encoded:\r\n\r\n```powershell\r\n$request = @{\r\n    Uri = 'http://httpbin.org/post'\r\n    Method = 'Post'\r\n    Form = @{\r\n        fileName = 'R\u00e9sum\u00e9.pdf'\r\n        category = 12\r\n    }\r\n    Headers = @{\r\n        Accept = 'application/json'\r\n    }\r\n    UseBasicParsing = $true\r\n}\r\nInvoke-WebRequest @request\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/8462645/137199728-912f0d2b-661f-47a9-ab3a-fe5bbd9a4972.png)\r\n\r\nIt would be good to know whether the format `?utf-8?B?....` is just a Fiddler representation or how the value is actually being sent across the wire. At least from what I can see PowerShell is correctly encoding the value to bytes on my test so I'm unsure why yours is different.\r\n\r\n<blockquote><img src=\"/en/unicode/images/icon/icon-compart.svg\" width=\"48\" align=\"right\"><div>https://www.compart.com/en/unicode/U+0301</div><div><strong><a href=\"https://www.compart.com/en/unicode/U+0301\">Unicode</a></strong></div><div>U+0301 is the unicode hex value of the character Combining Acute Accent. Char U+0301, Encodings, HTML Entitys:&#769;,&#x301;, UTF-8 (hex), UTF-16 (hex), UTF-32 (hex)</div></blockquote>\r\n<blockquote><img src=\"/en/unicode/images/icon/icon-compart.svg\" width=\"48\" align=\"right\"><div>https://www.compart.com/en/unicode/U+00E9</div><div><strong><a href=\"https://www.compart.com/en/unicode/U+00E9\">Unicode</a></strong></div><div>U+00E9 is the unicode hex value of the character Latin Small Letter E with Acute. Char U+00E9, Encodings, HTML Entitys:&#233;,&#xE9;,&eacute;, UTF-8 (hex), UTF-16 (hex), UTF-32 (hex)</div></blockquote>",
      "created_at": "2021-10-13T19:26:28Z",
      "updated_at": "2021-10-13T19:27:56Z"
    },
    {
      "author": "craibuc",
      "author_association": "NONE",
      "body": "@jborean93 I was using [mitmproxy](https://mitmproxy.org/) instead of Fiddler, if that matters.\r\n\r\nI was able to post `R\u00e9sum\u00e9.docx` to the same endpoint with Postman successfully.",
      "created_at": "2021-10-13T19:59:41Z",
      "updated_at": "2021-10-13T19:59:41Z"
    },
    {
      "author": "jborean93",
      "author_association": "COLLABORATOR",
      "body": "Using `mitmproxy` shows the same thing for me\r\n\r\n![image](https://user-images.githubusercontent.com/8462645/137205560-a8b9a735-5f7a-41d2-9bfc-16dcfece49b3.png)\r\n\r\nThe `fileName` is the raw bytes with `\u00e9` being represented as `C3 A9` rather than `65 CC 81`. The filename also isn't base64 encoded like in your example which is interesting. I'm using pwsh 7.1.4 just as you are but am on Linux not macOS.",
      "created_at": "2021-10-13T20:12:02Z",
      "updated_at": "2021-10-13T20:12:02Z"
    },
    {
      "author": "jborean93",
      "author_association": "COLLABORATOR",
      "body": "Ahh wait I see the problem, it occurs when a ` FileInfo` object is passed through the form-data:\r\n![screenshot_2021-10-14-061915](https://user-images.githubusercontent.com/8462645/137206788-ae50c108-bcc3-4af3-8e0c-31afad8d1374.png)\r\n\r\nSo the problem lies not in the `fileName`, which I was assuming incorrectly, value but rather the `file` with it being a `FileInfo` value. Looking at the code it looks like this might be a problem in .NET https://github.com/PowerShell/PowerShell/blob/bd5dc970874314f3e69b2efe601d791a99e5e10f/src/Microsoft.PowerShell.Commands.Utility/commands/utility/WebCmdlet/Common/WebRequestPSCmdlet.Common.cs#L1953-L1960 as PowerShell is just setting the `Name` in the `ContentDisposition.FileName` property and the actual form data is being built by .NET. Would need further investigation to figure out whether this is the case or the problem lies elsewhere.\r\n",
      "created_at": "2021-10-13T20:22:56Z",
      "updated_at": "2021-10-13T20:23:28Z"
    },
    {
      "author": "jborean93",
      "author_association": "COLLABORATOR",
      "body": "You can replicate how PowerShell is calling .NET to build the form data with the following\r\n\r\n```powershell\r\n$multipart = [System.Net.Http.MultipartFormDataContent]::new(\"-------boundary\")\r\n$streamContent = [System.Net.Http.StreamContent]::new([System.IO.MemoryStream]::new([Text.Encoding]::UTF8.GetBytes(\"data\")))\r\n$streamContent.Headers.ContentDisposition = [System.Net.Http.Headers.ContentDispositionHeaderValue]::new(\"form-data\")\r\n$streamContent.Headers.ContentDisposition.Name = '\"file\"'\r\n$streamContent.Headers.ContentDisposition.FileName = '\"R\u00e9sum\u00e9.pdf\"'\r\n$streamContent.Headers.ContentType = [System.Net.Http.Headers.MediaTypeHeaderValue]::new(\"application/octet-stream\")\r\n$multipart.Add($streamContent)\r\n\r\n$out = [System.IO.MemoryStream]::new()\r\n$multipart.CopyTo($out, $null, [System.Threading.CancellationToken]::new($false))\r\n[void]$out.Seek(0, 'Begin')\r\n$form = [System.IO.StreamReader]::new($out).ReadToEnd()\r\n```\r\n\r\nThe output of `$form` is\r\n\r\n```\r\n---------boundary\r\nContent-Disposition: form-data; name=\"file\"; filename=\"=?utf-8?B?UsOpc3Vtw6kucGRm?=\"\r\nContent-Type: application/octet-stream\r\n\r\ndata\r\n---------boundary--\r\n```\r\n\r\nhttps://github.com/dotnet/runtime/issues/23761 seems to be a similar problem but I'm finding it hard to wrap my head around all the RFCs mentioned.",
      "created_at": "2021-10-13T20:39:10Z",
      "updated_at": "2021-10-13T20:41:15Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Last comment in https://github.com/dotnet/runtime/issues/23761 recommends to open new issue in .Net Runtime repo.",
      "created_at": "2021-10-14T03:04:39Z",
      "updated_at": "2021-10-14T03:04:39Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as external and has not had any activity for **1 day**. It has been be closed for housekeeping purposes.",
      "created_at": "2021-11-03T01:00:59Z",
      "updated_at": "2021-11-03T01:00:59Z"
    }
  ],
  "created_at": "2021-10-13T13:51:24Z",
  "number": 16237,
  "state": "closed",
  "title": "Invoke-WebRequest fails when supplying multi-part form data using the `Form` parameter, when the file's name has characters with diacritals",
  "updated_at": "2021-11-03T01:00:59Z"
}