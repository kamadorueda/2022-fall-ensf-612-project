{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4986",
  "author": "iSazonov",
  "body": "- [ ] #5780 We should show the full/short command line help in Bash style if a parameter is wrong.\r\n- [x] #4989 We should reformat the help in Bash style:\r\n    - sort parameter list in alphabetical order.\r\n    - replace long header on  powershell[.exe] [options] \r\n- [x] #4989 We should add more examples in line of the help.\r\n- [x] #5275  Add \"To get help type Help or Help followed by the command name, such as: Help Get-Process\" in PowerShell banner bottom.\r\n\r\nThe Issue consider command line only  powershell -Help  (in bash or cmd.exe).\r\n  ",
  "closed_at": "2018-01-05T11:36:46Z",
  "comments": [
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov this is for the PowerShell binary, correct?\r\n\r\n> We should show the full command line help in Bash style if a parameter is wrong.\r\n\r\nMost Linux commands show usage and how to obtain help (`-h`, `--help`, `man`, etc.) on incorrect parameters unless their usage is very simple. Full help leads to the previous command going off console. command history is not always a given in the Linux world. I would prefer short syntax help and how to obtain the full help when I use the wrong parameters.",
      "created_at": "2017-10-03T11:05:50Z",
      "updated_at": "2017-10-03T11:05:50Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@markekraus The Issue is for discussion to collect ideas. :-)\r\n\r\nI like short help on error too. We mean an interactive session where typos is a common matter - full help will going to annoy.",
      "created_at": "2017-10-03T13:44:14Z",
      "updated_at": "2017-10-03T13:44:14Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov  by \"We mean an interactive session where typos is a common matter\"\r\nDo you mean an interactive session in PowerShell?\r\n\r\nexample:\r\n\r\n```\r\nc:\\> Get-Service -Nmae Get-Command\r\n\r\nGet-Service : A parameter cannot be found that matches parameter name 'Nmae'.\r\nAt line:1 char:13\r\n+ Get-Service -Nmae Get-Command\r\n+             ~~~~~\r\n\r\nSYNTAX\r\n    Get-Service [[-Name] <String[]>] [-ComputerName <String[]>] [-DependentServices] [-Exclude <String[]>] [-Include <String[]>] [-RequiredServices] [<CommonParameters>]\r\n\r\n    Get-Service [-ComputerName <String[]>] [-DependentServices] [-Exclude <String[]>] [-Include <String[]>] [-RequiredServices] -DisplayName <String[]> [<CommonParameters>]\r\n\r\n    Get-Service [-ComputerName <String[]>] [-DependentServices] [-Exclude <String[]>] [-Include <String[]>] [-InputObject <ServiceController[]>] [-RequiredServices] [<CommonParameters>]\r\n\r\nFor more help on Get-Service run:\r\nGet-Help -Name Get-Service -Full\r\n```",
      "created_at": "2017-10-03T13:56:09Z",
      "updated_at": "2017-10-03T13:57:05Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "No, the Issue consider command line only `powershell -h` (in bash or cmd.exe). I updated the Issue desciption.",
      "created_at": "2017-10-03T14:34:45Z",
      "updated_at": "2017-10-03T14:36:44Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "Ok then. Something like this:\r\n\r\n```\r\nc:\\> powershell -noloexisto\r\nThe argument '-noloexisto' is not recognized as the name of a script file. Check the spelling of the name, or if a path was included, verify that the path is correct and try again.\r\n\r\nPowerShell[.exe] [-PSConsoleFile <file> | -Version <version>]\r\n    [-NoLogo] [-NoExit] [-Sta] [-Mta] [-NoProfile] [-NonInteractive] [-Interactive]\r\n    [-InputFormat {Text | XML}] [-OutputFormat {Text | XML}]\r\n    [-WindowStyle <style>] [-EncodedCommand <Base64EncodedCommand>]\r\n    [-ConfigurationName <string>]\r\n    [-Command { - | <script-block> [-args <arg-array>]\r\n                  | <string> [<CommandParameters>] } ]\r\n    [-File <filePath> <args>] [-ExecutionPolicy <ExecutionPolicy>]\r\n\r\nPowerShell[.exe] -Help | -? | /?\r\n```",
      "created_at": "2017-10-03T14:47:43Z",
      "updated_at": "2017-10-03T14:47:43Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "We can be very short and show only `PowerShell[.exe] -Help | -? | /?`.",
      "created_at": "2017-10-03T14:50:41Z",
      "updated_at": "2017-10-03T14:50:41Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "I personally like being shown the syntax. that way something like this\r\n\r\n```\r\npowershell -NoUserEnvironment\r\n```\r\n\r\ndoesn't require me to read the full help to see that it was supposed to be\r\n\r\n```\r\npowershell -NoProfile\r\n```",
      "created_at": "2017-10-03T14:54:14Z",
      "updated_at": "2017-10-03T14:55:24Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Users will most _often_ see this help when there are typos. For newbie \"PowerShell[.exe] -Help\" is good start.",
      "created_at": "2017-10-03T15:24:18Z",
      "updated_at": "2017-10-03T15:24:18Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "Syntax is useful for typos, IMO.\r\n\r\n```\r\nc:\\> powershell -NoPrfoile\r\nThe argument '-NoPrfoile' is not recognized as the name of a script file. Check the spelling of the name, or if a path was included, verify that the path is correct and try again.\r\n\r\nPowerShell[.exe] [-PSConsoleFile <file> | -Version <version>]\r\n    [-NoLogo] [-NoExit] [-Sta] [-Mta] [-NoProfile] [-NonInteractive] [-Interactive]\r\n    [-InputFormat {Text | XML}] [-OutputFormat {Text | XML}]\r\n    [-WindowStyle <style>] [-EncodedCommand <Base64EncodedCommand>]\r\n    [-ConfigurationName <string>]\r\n    [-Command { - | <script-block> [-args <arg-array>]\r\n                  | <string> [<CommandParameters>] } ]\r\n    [-File <filePath> <args>] [-ExecutionPolicy <ExecutionPolicy>]\r\n\r\nPowerShell[.exe] -Help | -? | /?\r\n```\r\n\r\nthen I can easily compare what I typed versus what the correct parameter is. If I have to run the full help and my command goes off screen, I can't easily compare. I may have to scroll and depending on the console I'm working in. that can be either impossible or painful. ",
      "created_at": "2017-10-03T15:29:54Z",
      "updated_at": "2017-10-03T15:29:54Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "From my limited test of Linux commands it seems most complain about the unknown parameter and just tells how to get help.  However, I'm not against showing just the syntax.",
      "created_at": "2017-10-03T17:51:36Z",
      "updated_at": "2017-10-03T17:51:36Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@mklement0 Could you please comment? Have you ideas?",
      "created_at": "2017-10-04T04:28:23Z",
      "updated_at": "2017-10-04T04:28:23Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "I agree that the must-have components are:\r\n\r\n* an error message that is neither drowned out by other information nor scrolled off screen\r\n* a generic tip on how to get help.\r\n\r\nA concise syntax diagram can be helpful, but the emphasis is on _concise_ - such as in @markekraus's hypothetical example - whereas the current `-?` output would be too wordy.\r\n\r\nI'm not sure if POSIX mandates the format response to invalid command syntax for compliant utilities; in practice, you get instances of error message only, error message + help tip, and syntax only. \r\n\r\nSome examples:\r\n\r\n```sh\r\n# BSD ls (macOS)\r\n$ ls -y\r\nls: illegal option -- y\r\nusage: ls [-ABCFGHLOPRSTUWabcdefghiklmnopqrstuwx1] [file ...]\r\n\r\n# GNU ls\r\n$ ls -y\r\nls: invalid option -- 'y'\r\nTry 'gls --help' for more information.\r\n\r\n# BSD grep\r\n$ grep -y\r\nusage: grep [-abcDEFGHhIiJLlmnOoqRSsUVvwxZ] [-A num] [-B num] [-C[num]]\r\n\t[-e pattern] [-f file] [--binary-files=value] [--color=when]\r\n\t[--context[=num]] [--directories=action] [--label] [--line-buffered]\r\n\t[--null] [pattern] [file ...]\r\n\r\n\r\n# GNU grep\r\nUsage: ggrep [OPTION]... PATTERN [FILE]...\r\nTry 'ggrep --help' for more information.\r\n```",
      "created_at": "2017-10-04T13:21:36Z",
      "updated_at": "2017-10-04T13:21:36Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I really don't like scrolling so based on samples above I still suggest start with\r\n```\r\n<error message>\r\nFor more information try 'powershell -h' or Online Help https://...\r\n```\r\nOnline Help link can be useful for Web/Azure scenarios.\r\n",
      "created_at": "2017-10-04T13:49:23Z",
      "updated_at": "2017-10-04T13:49:23Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "cc @joeyaiello @HemantMahawar for some opinions here",
      "created_at": "2017-10-04T16:07:25Z",
      "updated_at": "2017-10-04T16:07:25Z"
    }
  ],
  "created_at": "2017-10-03T10:41:10Z",
  "labels": [
    "Issue-Enhancement",
    "WG-Interactive-Console",
    "Resolution-Fixed"
  ],
  "number": 4986,
  "state": "closed",
  "title": "Enhance PowerShell full command line help",
  "updated_at": "2018-02-08T07:26:46Z"
}