{
  "_url": "https://github.com/PowerShell/PowerShell/issues/996",
  "author": "andschwa",
  "body": "This is just so I remember to do this for @lzybkr.\n",
  "closed_at": "2018-01-20T02:15:10Z",
  "comments": [
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "While extracting the history and making PSReadLine build stand-alone against the public reference assemblies, I got blocked by a weird .NET possible bug. Filed https://github.com/dotnet/corefx/issues/9658.\n",
      "created_at": "2016-06-24T02:48:19Z",
      "updated_at": "2016-06-24T02:48:19Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Changes have been exported, closing.\n",
      "created_at": "2016-09-19T22:23:02Z",
      "updated_at": "2016-09-19T22:23:02Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "This shouldn't be closed until PSReadline has a single source of truth.\n- [x] Changes are accepted\n- [ ] Package from lzybkr/PSReadline are being consumed here\n- [ ] PSReadline sources are removed from this repo\n",
      "created_at": "2016-09-19T22:27:11Z",
      "updated_at": "2017-12-05T15:42:04Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Okay, well I'm at least changing over the assignee then.\n",
      "created_at": "2016-09-19T22:27:47Z",
      "updated_at": "2016-09-19T22:27:47Z"
    },
    {
      "author": "it-praktyk",
      "author_association": "CONTRIBUTOR",
      "body": "After this change, the easiest way to pull the Pester module from PowerShell Gallery is to add it to the file `src/Modules/PSGalleryModules.csproj` but as the result,\r\n- Pester module will be pulled every time\r\n- the switch `CI` used in the functions\r\n  - `Start-PSBuild`\r\n  - `Restore-PSModuleToBuild`\r\nwill be useless and have to be removed.\r\n\r\nAnother option - probably a more accurate - is to create the new one csproj file - by analogy to `src/Modules/PSGalleryModules.csproj` (the proposed name PSGalleryModulesCI.csproj) and add an additional parameter to the function [`Copy-PSGalleryModules`](https://github.com/PowerShell/PowerShell/blob/beffdcf94d00b51d9339bb26dbc0e477cd147c92/build.psm1#L2463-L2514) that will contain a path to csproj file ([an equivalent of the current line 2484](https://github.com/PowerShell/PowerShell/blob/beffdcf94d00b51d9339bb26dbc0e477cd147c92/build.psm1#L2484)) and call the function `Copy-PSGalleryModules` twice when $CI will be used.\r\n\r\nIn both options the functions\r\n- [`Restore-PSPester`](https://github.com/PowerShell/PowerShell/blob/beffdcf94d00b51d9339bb26dbc0e477cd147c92/build.psm1#L663-L673)\r\n- [`Restore-GitModule`](https://github.com/PowerShell/PowerShell/blob/beffdcf94d00b51d9339bb26dbc0e477cd147c92/build.psm1#L2415-L2460)\r\nwill be removed.\r\n\r\nWhat do you think? Am I right?\r\n\r\nMy comment is related to #4618.",
      "created_at": "2018-01-20T22:29:58Z",
      "updated_at": "2018-01-20T22:29:58Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "@it-praktyk - `msbuild restore` caches the package locally, so if the cache already has the correct version, nothing is pulled.\r\n\r\nFurthermore, at least in AppVeyor (I'm not sure about Travis) - the cache is saved across builds, so we shouldn't see too many pulls from CI.\r\n\r\nI think what I did for `PSReadLine` can be done for `Pester` as well and as you point out - that would get rid of some code in `build.psm1` - but I haven't looked as closely as you - maybe we don't need the `-CI` parameter assuming the nuget cache is working as I described.",
      "created_at": "2018-01-21T06:15:52Z",
      "updated_at": "2018-01-21T06:15:52Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "`travis-ci` can cache... I started working on making it but never finished.  The `-CI` parameter is to pull in Pester only during CI builds.  The desire is to not ship pester with PowerShell and have people use `Install-Module` to get pester.",
      "created_at": "2018-01-23T02:38:25Z",
      "updated_at": "2018-01-23T02:38:25Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Can we leave Pester in debug builds? I don't like run `Restore-PSPester` every time.",
      "created_at": "2018-01-23T03:43:44Z",
      "updated_at": "2018-01-23T03:43:44Z"
    }
  ],
  "created_at": "2016-05-18T21:19:21Z",
  "number": 996,
  "state": "closed",
  "title": "Export PSReadLine to changes to public project",
  "updated_at": "2018-01-23T03:43:44Z"
}