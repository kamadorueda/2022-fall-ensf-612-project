{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10024",
  "author": "iSazonov",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nIn module loading scenario PerfView shows a lot of allocations of CultureInfo objects\r\n![image](https://user-images.githubusercontent.com/22290914/60342090-f9353200-99c9-11e9-8878-519644585e52.png)\r\n\r\nIt come from \r\nhttps://github.com/PowerShell/PowerShell/blob/e177d90cad50f6f6349cd3a9c0115cc9f3510073/src/System.Management.Automation/utils/ClrFacade.cs#L59-L64\r\n\r\nwhere we call Assembly.GetName(). And the method calls  GetLocale()\r\nhttps://github.com/dotnet/coreclr/blob/a64cb0a41a4ebeb4a61b8b0f1f2eeeff8dd539c9/src/System.Private.CoreLib/src/System/Reflection/RuntimeAssembly.cs#L538-L548\r\n\r\nThe fix is to use cached Assembly.FullName.\r\nAfter the fix PerfView shows that the allocations are gone.\r\nI don't know but probably there is other scenarios where we get the perf win.\r\n\r\n## PR Context\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n",
  "closed_at": "2019-07-01T15:38:00Z",
  "comments": [
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Thanks @iSazonov, this is great! Well guided by the profiling traces with simple changes traded for good result. \r\n\r\n> I don't know but probably there is other scenarios where we get the perf win.\r\n\r\nThis code path is hit by type resolution, so this will generally make type resolution faster.",
      "created_at": "2019-06-28T15:53:11Z",
      "updated_at": "2019-06-28T15:53:11Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@PoshChan Please remind me in 1 day",
      "created_at": "2019-06-28T20:27:48Z",
      "updated_at": "2019-06-28T20:27:48Z"
    },
    {
      "author": "PoshChan",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw, this is the reminder you requested 1 day ago",
      "created_at": "2019-06-29T20:28:08Z",
      "updated_at": "2019-06-29T20:28:08Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.0.0-preview.2` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.0.0-preview.2)\n",
      "created_at": "2019-07-17T20:55:45Z",
      "updated_at": "2019-07-17T20:55:45Z"
    }
  ],
  "created_at": "2019-06-28T12:39:10Z",
  "number": 10024,
  "state": "closed",
  "title": "Reduce allocations in GetAssemblies()",
  "updated_at": "2019-07-17T20:55:45Z"
}