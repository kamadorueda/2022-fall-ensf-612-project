{
  "_url": "https://github.com/PowerShell/PowerShell/issues/17706",
  "author": "saladproblems",
  "body": "### Summary of the new feature / enhancement\n\nCurrently you must define a variable to splat parameters to a command. Allow splatting a hashtable directly.\r\n\r\nThis could simplify syntax and reduce mistakes from splatting in loops where the current loop fails to update the splatted variable and the wrong iteration's parameters are applied.\r\n\r\nAdditionally, it may to provide parameter tab completion for an in-line splat than a variable defined before the function is called.\n\n### Proposed technical implementation details (optional)\n\n```\r\nInvoke-Command @{\r\n    ComputerName = 'computer1','computer2','computer3'\r\n    ScriptBlock = { 'my name is {0}' -f $env:computername }\r\n    ErrorAction = 'stop'\r\n}\r\n\r\n```",
  "closed_at": "2022-07-19T12:59:12Z",
  "comments": [
    {
      "author": "iRon7",
      "author_association": "NONE",
      "body": "I think this is a duplicate with: #10073",
      "created_at": "2022-07-19T07:28:08Z",
      "updated_at": "2022-07-19T07:28:08Z"
    },
    {
      "author": "saladproblems",
      "author_association": "NONE",
      "body": "You're absolutely right. I searched for splatting and hashtables, but didn't see it at the time.",
      "created_at": "2022-07-19T12:59:12Z",
      "updated_at": "2022-07-19T12:59:12Z"
    }
  ],
  "created_at": "2022-07-18T21:05:20Z",
  "labels": [
    "Issue-Enhancement"
  ],
  "number": 17706,
  "state": "closed",
  "title": "In-line splatting",
  "updated_at": "2022-07-19T12:59:19Z"
}