{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5912",
  "author": "brantb",
  "body": "Steps to reproduce\r\n------------------\r\n\r\n```powershell\r\n$p = [Diagnostics.Process]::new()\r\n$p.StartInfo.FileName = \"pwsh\"\r\n$encoded = [Convert]::ToBase64String([Text.Encoding]::Unicode.GetBytes(\"throw 'boom'\"))\r\n$p.StartInfo.Arguments = \"-EncodedCommand $encoded -ExecutionPolicy Bypass -NoLogo -NonInteractive -NoProfile -OutputFormat text\"\r\n$p.StartInfo.UseShellExecute = $false\r\n$p.StartInfo.RedirectStandardError = $true\r\n$p.Start() | Out-Null\r\n$p.StandardError.ReadToEnd()\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\nThe error is written to stderr as text:\r\n```none\r\nboom\r\nAt line:1 char:1\r\n+ throw 'boom'\r\n+ ~~~~~~~~~~~~\r\n+ CategoryInfo          : OperationStopped: (boom:String) [], RuntimeException\r\n+ FullyQualifiedErrorId : boom\r\n```\r\nChanging `$p.StartInfo.RedirectStandardError` to `$false` (the default) will result in the expected output. \r\n\r\nActual behavior\r\n---------------\r\nThe error record is encoded as CLIXML before being written to stderr:\r\n```none\r\n#< CLIXML\r\n<Objs Version=\"1.1.0.1\" xmlns=\"http://schemas.microsoft.com/powershell/2004/04\"><S S=\"Error\">boom_x000D__x000A_</S><S S=\"Error\">At line:1 char:1_x000D__x000A_</S><S S=\"Error\">+ throw 'boom'_x000D__x000A_</S><S S=\"Error\">+ ~~~~~~~~~~~~_x000D__x000A_</S><S S=\"Error\">+ CategoryInfo          : OperationStopped: (boom:String) [], RuntimeException_x000D__x000A_</S><S S=\"Error\">+ FullyQualifiedErrorId : boom_x000D__x000A_</S><S S=\"Error\"> _x000D__x000A_</S></Objs>\r\n```\r\n\r\nThis problem doesn't seem to apply to stdout. Setting `$p.StartInfo.RedirectStandardOutput = $true` in a similar fashion works as expected.\r\n\r\nEnvironment data\r\n----------------\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.0\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.0\r\nOS                             Microsoft Windows 10.0.16299\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2018-10-30T00:51:21Z",
  "comments": [
    {
      "author": "bugoutfr",
      "author_association": "NONE",
      "body": "Hi,\r\nI have the same problem here. The parent Powershell script is launched by Gitlab Runner which doesn't output to the standard output. With this configuration I end up with a messy mixed XMLCLI and normal text output instead of only the requested Text output.\r\n\r\nSample command line : \r\n\r\n`\r\npwsh.exe -NoLogo -NonInteractive -NoProfile -OutputFormat Text -Command { [...] }\r\n`\r\n\r\nRegards.",
      "created_at": "2018-05-14T14:16:58Z",
      "updated_at": "2018-05-14T15:05:08Z"
    },
    {
      "author": "MartinSGill",
      "author_association": "NONE",
      "body": "Any progress on this? It's really annoying in our build logs. I'd love to try and fix this myself.. but I've no idea where to look :(.",
      "created_at": "2018-10-11T15:11:45Z",
      "updated_at": "2018-10-11T15:11:45Z"
    },
    {
      "author": "MartinSGill",
      "author_association": "NONE",
      "body": "Seems to have happened before and seems related to -EncodedCommand\r\n\r\nhttps://github.com/hashicorp/packer/issues/4322\r\n",
      "created_at": "2018-10-23T06:58:44Z",
      "updated_at": "2018-10-23T06:58:44Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Looking in the [code](https://github.com/PowerShell/PowerShell/blob/master/src/Microsoft.PowerShell.ConsoleHost/host/msh/ConsoleHost.cs#L1214) it appears this is by-design, but I don't know why this is the case.  @lzybkr do you recall or know why we force XML in this case?",
      "created_at": "2018-10-24T17:59:51Z",
      "updated_at": "2018-10-24T17:59:51Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "I don't recall any history (the code comes from V1 I believe, before my time).\r\n\r\nI'm guessing that code ignored the case where `OutputFormat` was specified **explicitly**. It makes sense to implicitly change to XML if `OutputFormat` is not specified - with the assumption being that you're piping PowerShell to PowerShell.",
      "created_at": "2018-10-24T18:14:17Z",
      "updated_at": "2018-10-24T18:14:17Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Ok, that makes sense.  So I can just modify it so that if `OutputFormat` was specified explicitly, we should honor that.",
      "created_at": "2018-10-24T19:53:14Z",
      "updated_at": "2018-10-24T19:53:14Z"
    },
    {
      "author": "TishSerg",
      "author_association": "NONE",
      "body": "How about this fix for PowerShell 5.1.* branch?",
      "created_at": "2022-04-12T16:35:39Z",
      "updated_at": "2022-04-12T16:35:39Z"
    }
  ],
  "created_at": "2018-01-15T19:05:19Z",
  "number": 5912,
  "state": "closed",
  "title": "pwsh ignores -OutputFormat text when writing to a redirected stderr stream",
  "updated_at": "2022-04-12T16:35:39Z"
}