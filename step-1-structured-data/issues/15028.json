{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15028",
  "author": "Sidneys1",
  "body": "# Problem\r\n\r\nPossibly a non-issue, but this became apparent when trying to excise a poorly-name directory on Windows (`'..`). The folder was non-empty, and could not be entered with PowerShell, CMD, or Explorer to empty.\r\n\r\n```ps1\r\n$files = Get-ChildItem;\r\n$dir = $files[0]; # This is the badly-named directory\r\n\r\nRemove-Item -Recursive -Force $dir; # Fails\r\n# I assume because it tries to walk the contents and remove them individually,\r\n# but the oddly-named directory \"'..\" cannot have its contents enumerated\r\n\r\n$dir.Delete($true); # Succeeds, is System.IO.DirectoryInfo.Delete(bool recurse)\r\n```\r\n\r\n# Solution\r\n\r\nIt would possibly speed up and increase the resilience of `Remove-Item -Recursive` operations against filesystem providers if PowerShell shortcutted directory removals to call the .NET `System.IO.DirectoryInfo.Delete(bool recurse)` method instead of recursively listing-and-deleting contents.\r\n\r\n# Testing\r\n\r\nFor testing purposes, the folder `'..` was generated in an Angular project with the typo'd command `ng generate component \"'..\\foo\"`.",
  "closed_at": null,
  "comments": [
    {
      "author": "jborean93",
      "author_association": "COLLABORATOR",
      "body": "AFAIK `Delete(true)` does the same thing, it calls `Dir.EnumerateFileSystemEntries` and it itself will traverse down and delete the files before it deletes the actual parent dir The difference is that PowerShell adds a few more checks in there to handle things like like OneDrive reparse points, or broken symlinks, that I believe .NET struggled with in the past. Maybe that's no longer an issue and it could be simplified as you are suggesting. Even if it can't be simplified and there is another reason for PowerShell to enumerate and delete the contents itself then the fact that `$dir.Delete($true)` works means there's a bug in the logic here which should be fixed.",
      "created_at": "2021-03-15T21:29:47Z",
      "updated_at": "2021-03-15T21:29:47Z"
    }
  ],
  "created_at": "2021-03-15T13:43:56Z",
  "labels": [
    "WG-Cmdlets-Management",
    "WG-Engine-Providers",
    "Needs-Triage",
    "Area-FileSystem-Provider"
  ],
  "number": 15028,
  "state": "open",
  "title": "`Remove-Item -Recurse` against folders should use a .NET method on Windows instead of recursive list-and-delete",
  "updated_at": "2021-11-30T07:31:18Z"
}