{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15229",
  "author": "jborean93",
  "body": "When an SSH remoting session is created the server doesn't seem to redirect the stdout pipe to nothing so anything that writes to stdout is picked up and treated as a PSRP fragment from the server. Because these fragments are designed in a particular way and should come in sequence it's pretty much going to crash the process because the client cannot treat the message as a PSRP response.\r\n\r\nFunnily enough the server mode setup with `-s` sets the Stdout/Stderr/Stdin streams to `TextWriter.Null` alleviating this problem https://github.com/PowerShell/PowerShell/blob/99a49e0eab9b137449b690ab4607d7932c6f9956/src/System.Management.Automation/engine/remoting/server/OutOfProcServerMediator.cs#L459-L482.\r\n\r\nThe SSH server mode `-sshs` only gets the handles to write to without setting the existing console handles to `Null` causing this problem https://github.com/PowerShell/PowerShell/blob/99a49e0eab9b137449b690ab4607d7932c6f9956/src/System.Management.Automation/engine/remoting/server/OutOfProcServerMediator.cs#L526-L549.\r\n\r\n## Steps to reproduce\r\n\r\n```powershell\r\nEnter-PSSession -HostName windows\r\n\r\n[Console]::WriteLine('boom')\r\n```\r\n\r\n## Expected behavior\r\n\r\nNo output as the raw stdout console should not be attached to anything just like a WSMan remoting session.\r\n\r\nThis at least aligns with WSMan based sessions and I assume `pwsh -s` ones as there is no console attached for WSMan and `-s` sets the stdio streams in .NET to `TextWriter.Null`. In reality it would be nice if anything written to raw stdout would translate to `$host.UI.Write()` but that would be a future enhance IMO.\r\n\r\n## Actual behavior\r\n\r\nErrors with the following and the session is closed\r\n\r\n> There is an error processing data from the background process. Error reported: boom.\r\n\r\n![image](https://user-images.githubusercontent.com/8462645/114641795-16a9cc00-9d16-11eb-950e-dac952a43020.png)\r\n\r\n## Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.3\r\nPSEdition                      Core\r\nGitCommitId                    7.1.3\r\nOS                             Microsoft Windows 10.0.17763\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2021-05-05T21:16:10Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "For reference. #15128 suggest to allocate a console in WinRM process.",
      "created_at": "2021-04-14T12:28:35Z",
      "updated_at": "2021-04-14T12:28:35Z"
    },
    {
      "author": "jborean93",
      "author_association": "COLLABORATOR",
      "body": "See https://github.com/PowerShell/PowerShell/issues/15128#issuecomment-819772400 these 2 issues are not related.",
      "created_at": "2021-04-14T19:23:48Z",
      "updated_at": "2021-04-14T19:23:48Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "Thanks for finding this!",
      "created_at": "2021-04-23T22:49:39Z",
      "updated_at": "2021-04-23T22:49:39Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "Remoting working group:  Fix has been merged.",
      "created_at": "2021-05-05T21:16:06Z",
      "updated_at": "2021-05-05T21:16:06Z"
    }
  ],
  "created_at": "2021-04-14T01:46:14Z",
  "labels": [
    "Issue-Bug",
    "WG-Remoting"
  ],
  "number": 15229,
  "state": "closed",
  "title": "Console Output on SSH Remoting Session Breaks Session",
  "updated_at": "2021-05-05T21:16:10Z"
}