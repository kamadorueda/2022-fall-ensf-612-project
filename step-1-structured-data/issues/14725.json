{
  "_url": "https://github.com/PowerShell/PowerShell/issues/14725",
  "author": "mkht",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 and PowerShell 7+ issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6).\r\n\r\n-->\r\nI would like to retrieve the content of a web page using Invoke-WebRequest.\r\n\r\nFor a particular URL that contains a redirection, Windows PowerShell 5.1 can retrieve the web content, but PowerShell 7.1.1 throws an exception.\r\n\r\nI have tried the `-MaximumRedirection` parameter and try-catch, but with no good results.\r\nHow can I get the same results as in Windows PowerShell 5.1?\r\n\r\n## Steps to reproduce\r\n\r\nIn PowerShell 7.1.1, These commands does not return the content of the web page.\r\n```powershell\r\nInvoke-WebRequest 'https://welcome.opendns.com/'\r\nInvoke-WebRequest 'https://welcome.opendns.com/' -MaximumRedirection 100\r\ntry{ Invoke-WebRequest 'https://welcome.opendns.com/' }catch{ $_.Exception.Response }\r\n```\r\n\r\nIn Windows PowerShell 5.1, The command returns HTTP 200 response and the content of the page.\r\n```PowerShell\r\nInvoke-WebRequest 'https://welcome.opendns.com/'\r\n```\r\n\r\n## Expect behavior\r\n```\r\nPS C:\\> Invoke-WebRequest 'https://welcome.opendns.com/'\r\n\r\nStatusCode        : 200\r\nStatusDescription : OK\r\nContent           : <!DOCTYPE html>\r\n                    <html lang=\"en-US\" prefix=\"og: http://ogp.me/ns#\" class=\"\">\r\n\r\n                    <head>\r\n                        <meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\" />\r\n                        <meta name=\"viewport\" content=\"width=d...\r\n---- (ellipsis) ----\r\nParsedHtml        : mshtml.HTMLDocumentClass\r\nRawContentLength  : 28582\r\n```\r\n\r\n## Actual behaivor\r\n```\r\nPS C:\\> Invoke-WebRequest 'https://welcome.opendns.com/'\r\nInvoke-WebRequest:\r\n302 Found\r\n302 Found\r\nnginx/1.16.0\r\n```\r\n\r\n```\r\nPS C:\\> try{ Invoke-WebRequest 'https://welcome.opendns.com/' }catch{ $_.Exception.Response }\r\n\r\nVersion             : 1.1\r\nContent             : System.Net.Http.HttpConnectionResponseContent\r\nStatusCode          : Redirect\r\nReasonPhrase        : Moved Temporarily\r\nHeaders             : {[Server, System.String[]], [Date, System.String[]], [Connection, System.String[]], [Location, System.String[]]\u2026}\r\nTrailingHeaders     : {}\r\nRequestMessage      : Method: GET, RequestUri: 'https://welcome.opendns.com/', Version: 1.1, Content: System.Net.Http.StringContent, Headers:\r\n                      {\r\n                        User-Agent: Mozilla/5.0\r\n                        User-Agent: (Windows NT 10.0; Microsoft Windows 10.0.19042; ja-JP)\r\n                        User-Agent: PowerShell/7.1.1\r\n                        Content-Length: 0\r\n                      }\r\nIsSuccessStatusCode : False\r\n```\r\n\r\n### My Workaround\r\nMy current workaround is to run Invoke-WebRequest recursively until I get HTTP 200. However, this method is not too beautiful.\r\n```PowerShell\r\n\r\n$URL = [Uri]'https://welcome.opendns.com/'\r\n$sb = { param($p1) try { Invoke-WebRequest $p1 }catch { $_.Exception.Response } }\r\n\r\n$Response = $null\r\ndo {\r\n    $Response = Invoke-Command -ScriptBlock $sb -ArgumentList $URL\r\n    if ($Response.StatusCode -ne 200 -and $Response.Headers.Location) {\r\n        $URL = $Response.Headers.Location\r\n        continue\r\n    }\r\n    else {\r\n        Write-Output $Response\r\n        break\r\n    }\r\n} while ($true)\r\n```",
  "closed_at": "2021-02-07T18:21:46Z",
  "comments": [
    {
      "author": "mkht",
      "author_association": "NONE",
      "body": "Um, sorry.\r\nI went back through the list of Issues quite a bit and found that this is a duplicate of #2896.\r\n\r\nThis issue has been discussed for quite some time, but does not seem to have been addressed. I hope it will be addressed as soon as possible.",
      "created_at": "2021-02-07T18:21:46Z",
      "updated_at": "2021-02-07T18:21:46Z"
    }
  ],
  "created_at": "2021-02-07T17:15:53Z",
  "labels": [],
  "number": 14725,
  "state": "closed",
  "title": "Invoke-WebRequest does not handle Redirect correctly in some situations.",
  "updated_at": "2021-02-22T19:25:41Z"
}