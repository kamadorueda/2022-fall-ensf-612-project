{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3542",
  "author": "joeyaiello",
  "body": "Got this one [filed on UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell/suggestions/11454600-bug-nullable-enum-dsc-property-throws-system-n) and discussed it again at PS Summit NA 2017. It seems like a small thing, but it's blocking usage of class-based resources to the point that they have to install WMF 5 Production Preview on their build servers in order to compile their MOFs. They have no problem using PowerShell 6 on their build servers to do the same if we make the fix here. \r\n\r\nSteps to reproduce\r\n------------------\r\nCreate a new DSC Resource module called `EnumTest`. Create your module manifest and set the .psm1 file content to:\r\n\r\n```powershell\r\nenum MyEnum { \r\n    Test \r\n    Setting \r\n}\r\n\r\n[DscResource()] \r\nClass MyTestResource { \r\n    [DscProperty(Key)] \r\n    [String] $MyKey\r\n\r\n    [DscProperty()] \r\n    [nullable[MyEnum]] $MyEnum\r\n\r\n    [Void] Set() { \r\n        $null \r\n    }\r\n\r\n    [Boolean] Test() { \r\n        return $true \r\n    }\r\n\r\n    [MyTestResource] Get() { \r\n        Return [MyTestResource] \r\n    } \r\n}\r\n```\r\n\r\nFollowing, try to create a Configuration with the following code and the 'Import-DscResource' keyword will be underlined with an error.\r\n\r\n```powershell\r\nConfiguration MyEnumTest { \r\n    Param ( \r\n    [Parameter(Mandatory=$true)] \r\n    [string]$ComputerName \r\n    )\r\n\r\n    Import-DscResource -ModuleName EnumTest\r\n\r\n    Node $ComputerName { \r\n        EnumTest Test { \r\n            MyKey = 'Blah' \r\n            MyEnum = 'Setting' \r\n        }\r\n    } \r\n}\r\n\r\n$null = MyEnumTest -ComputerName $env:COMPUTERNAME\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\nThe configuration should compile into a MOF document. \r\n\r\nActual behavior\r\n---------------\r\nThe `Import-DscResource -ModuleName EnumTest` is underlined in red and the configuration does not compile. \r\n\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value\r\n----                           -----\r\nPSRemotingProtocolVersion      2.3\r\nGitCommitId                    v6.0.0-alpha.17\r\nCLRVersion\r\nPSEdition                      Core\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\nPSVersion                      6.0.0-alpha\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nBuildVersion                   3.0.0.0\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "Soolkiki",
      "author_association": "NONE",
      "body": "Is there any other way to work around this? I'm using 5.1 since it's what comes with Windows Server 2019.",
      "created_at": "2020-08-18T17:40:53Z",
      "updated_at": "2020-08-18T17:44:58Z"
    },
    {
      "author": "jzabroski",
      "author_association": "NONE",
      "body": "@Soolkiki I doubt you'll see any traction on this.  Yes, it sucks, because it feels like every desired state configuration tool (Chef, Puppet, SaltStack) has some ugly usability issues tied to the programming environment (e.g., for years Chef used a version of Ruby that did not ship with any easy way to output logs to standard out...).  As much has been said about DevOps, little gets done, especially on Windows, which is why Hashicorp TerraForm became so popular, because it actually works, unlike stuff Microsoft started and then abandoned.",
      "created_at": "2020-08-18T18:11:06Z",
      "updated_at": "2020-08-18T18:11:06Z"
    },
    {
      "author": "Soolkiki",
      "author_association": "NONE",
      "body": "That is frustrating...I suppose I'll just add a None first value to my enums to get around it.\r\nThank you",
      "created_at": "2020-08-18T18:31:15Z",
      "updated_at": "2020-08-18T18:31:15Z"
    },
    {
      "author": "schittli",
      "author_association": "NONE",
      "body": "While we customers pay M$ so many billions of US$ that no human can count it, M$$ fails to hire developers so that meaningful suggestions from customers don't take 1/2 decade?\r\n\r\nJust FYI:\r\nThe shame is not minor when a robot closes such feedback just because not so many customers study and vote for Issues all the time.\r\n\r\nIt would be great if M$ actually shows interest in having satisfied customers.\r\nGuess what: just pretending to be interested is also a shame.",
      "created_at": "2022-11-06T23:39:51Z",
      "updated_at": "2022-11-06T23:39:51Z"
    }
  ],
  "created_at": "2017-04-12T18:14:43Z",
  "number": 3542,
  "state": "open",
  "title": "Allow Enums to be Nullable",
  "updated_at": "2022-11-06T23:39:51Z"
}