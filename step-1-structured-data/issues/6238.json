{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6238",
  "author": "CloudyDino",
  "body": "## PR Summary\r\n\r\n<!-- summarize your PR between here and the checklist -->\r\n\r\nThis continues the work done by @dfinke on pull request #4969. It removes the rounding before displaying the standard deviation, and addresses comments by @iSazonov and @SteveL-MSFT about removing code due to different parameter sets. It passes Measure-Object.Tests.ps1.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` to the beginning of the title and remove the prefix when the PR is ready.\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [x] User-facing [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed - Issue link:\r\n- **Testing - New and feature**\r\n    - [ ] Not Applicable or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n        - [ ] [Add `[feature]` if the change is significant or affects feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\r\n",
  "closed_at": "2018-03-16T03:46:00Z",
  "comments": [
    {
      "author": "msftclas",
      "author_association": "NONE",
      "body": "[![CLA assistant check](https://cla.opensource.microsoft.com/pull/badge/signed)](https://cla.opensource.microsoft.com/PowerShell/PowerShell?pullRequest=6238) <br/>All CLA requirements met.",
      "created_at": "2018-02-24T23:20:38Z",
      "updated_at": "2018-02-24T23:24:17Z"
    },
    {
      "author": "TylerLeonhardt",
      "author_association": "MEMBER",
      "body": "Just for context, this PR was submitted by a student at Hack Illinois :)\r\n\r\nA lot of them are new to this space so let's also take this as an opportunity to teach about open source processes. ",
      "created_at": "2018-02-25T16:20:29Z",
      "updated_at": "2018-02-25T16:20:29Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I have some questions about the implementation\r\n- should we implement \"sample standard deviation\" or \"corrected sample standard deviation\"? I'd expect first\r\n- should we implement \"one pass\" algorithm without store all values (more cpu load)? I'd vote for \"one pass\"\r\n- should we throw if StdDeviation=$true and Average=$false? I would consider the presence of individual parameters as a request for output values. These values are nullable. So if we set `-Count` we want to get the count in output. If we set `-Average` we want get the average in output. And so on. It doesn't affect what we do internally. So `-Average` can assume that we do count.",
      "created_at": "2018-02-25T16:52:40Z",
      "updated_at": "2018-02-25T16:52:40Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "Need to do an experiment to prove this, but my gut feeling is that one-pass implementation will suffer considerably from floating point arithmetic.\r\nI think that memory allocation is ok, if user explicitly asked for standard deviation information. PowerShell often operates with large in-memory collections and this place hardly can be a bottleneck.",
      "created_at": "2018-02-25T17:01:51Z",
      "updated_at": "2018-02-25T17:01:51Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "My concern is that PowerShell is too eats in all subsystems. I think we _should think_ about being more effective every time.\r\nFor the feature we haven't source scenario so we can only do general reasoning. What I have is thousands of objects for which I can count the deviation. Not too much. There's one more task out of millions of objects but this is a database and I can use SQL instead PowerShell.",
      "created_at": "2018-02-25T17:17:02Z",
      "updated_at": "2018-02-25T17:17:02Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "I think my original concerns about the arithmetic precision are invalid.\r\n\r\nI run this code to calculate `sd(1:100000)^2`\r\n\r\n```powershell\r\n$s2 = 0.0\r\n$x = 0.0\r\n$n = 100000\r\n$data = 1..$n\r\nforeach ($i in 1..$n) {\r\n    $xPrev = $x \r\n    $x = $xPrev + ($data[$i-1] - $xPrev) / $i\r\n    if ($i -gt 1) {\r\n        $s2 = ($i - 2) / ($i - 1) * $s2 + ($data[$i-1] - $xPrev)*($data[$i-1] - $xPrev) / $i\r\n    }\r\n}\r\n$s2\r\n```\r\n\r\nThe output is `833341666.666671` compare to the `833341667` that R produces (R implements the precision estimation better and rounds it).\r\nSo I agree with @iSazonov : we should implement the iterative approach.\r\nI took formulas from wikipedia https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance\r\n\r\n@CloudyDino would you be interested in rewriting the algorithm to the iterative approach?",
      "created_at": "2018-02-26T03:12:21Z",
      "updated_at": "2018-02-26T03:12:39Z"
    },
    {
      "author": "CloudyDino",
      "author_association": "CONTRIBUTOR",
      "body": "Yeah, I'd love to give this another try with the iterative method! A bit new to GitHub, would I just delete this branch of mine and make a new one to implement it? Or should I just make a new branch without deleting this one? @vors",
      "created_at": "2018-02-26T04:11:01Z",
      "updated_at": "2018-02-26T04:11:01Z"
    },
    {
      "author": "TylerLeonhardt",
      "author_association": "MEMBER",
      "body": "@CloudyDino All you have to do is make changes to the branch you're already working in and push them up. Github will notice that you made changes and those changes will be automatically reflected here \ud83d\ude04 ",
      "created_at": "2018-02-26T05:28:43Z",
      "updated_at": "2018-02-26T05:28:56Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "Awesome! Yes, what @tylerl0706 said: push to the same brunch and PR will be updated. More details: https://stackoverflow.com/questions/9790448/how-to-update-a-pull-request-from-forked-repo",
      "created_at": "2018-02-27T00:21:30Z",
      "updated_at": "2018-02-27T00:21:30Z"
    },
    {
      "author": "CloudyDino",
      "author_association": "CONTRIBUTOR",
      "body": "I haven't changed the tester file at all and I'm not sure if I'm failing the test if I wrote my code wrong or if the iterative method needs that extra wiggle room. I've been trying to figure this out for a bit. Am I failing anything besides the tests in PowerShell/test/powershell/Modules/Microsoft.PowerShell.Utility/Measure-Object.Tests.ps1 ?",
      "created_at": "2018-03-11T02:13:57Z",
      "updated_at": "2018-03-11T02:13:57Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "@CloudyDino to find out what exactly failed, you can click the \"Details\" links next to the red crosses. And then dig thru logs a little bit. In our case we can see the following:\r\n\r\nhttps://ci.appveyor.com/project/PowerShell/powershell/build/v6.1.0-preview.8336/tests\r\n\r\n```\r\nExpected .00000000000001 to be less than the actual value, but got 0.0280303239036055.\r\n```\r\n\r\nSince `$testObject = 1,3,4` we really should not get that big of the difference in the methods. I think the implementation has a bug. Let me take a look.",
      "created_at": "2018-03-11T05:33:16Z",
      "updated_at": "2018-03-11T05:33:16Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "One more request: can you, please, add a new test for something like `1..100` (should be ~ `29.01149`), since we have a non-trivial algorithm it would be good to have more than 1 test for it.",
      "created_at": "2018-03-11T05:46:10Z",
      "updated_at": "2018-03-11T05:46:10Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "This is getting closer to be mergeble imo. Can somebody else take a quick look?",
      "created_at": "2018-03-12T04:38:42Z",
      "updated_at": "2018-03-12T04:38:42Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT Here we enhance a public structure - formally we need PowerShell Committee conclusion.",
      "created_at": "2018-03-12T14:06:03Z",
      "updated_at": "2018-03-12T14:06:03Z"
    },
    {
      "author": "CloudyDino",
      "author_association": "CONTRIBUTOR",
      "body": "I realize that for some reason the tests started failing after commit c40ab47, I'm taking a look at what I did to see what went wrong.",
      "created_at": "2018-03-14T17:52:01Z",
      "updated_at": "2018-03-14T17:52:01Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee reviewed this, we are ok with adding a new parameter to this cmdlet.  The specific implementation details should be part of the regular PR review unless there is something controversial.  We recommend using https://msdn.microsoft.com/en-us/library/ms714657%28v=vs.85%29.aspx?f=255&MSPPError=-2147217396 as a guideline for cmdlet design.  Action item for Committee to have this document updated and published on PowerShell-Docs.",
      "created_at": "2018-03-14T22:32:49Z",
      "updated_at": "2018-03-14T22:34:45Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@CloudyDino I wonder why you push the commit  1820a41?",
      "created_at": "2018-03-15T05:08:28Z",
      "updated_at": "2018-03-15T05:08:28Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT awesome!\r\n\r\n@CloudyDino let's get the final cleanup and nit comment fixed.\r\nI'm going to sign-off, but waiting on the final fixes and other reviewers. I think we should just squash the whole branch to clean up the history in the merge.",
      "created_at": "2018-03-15T05:30:50Z",
      "updated_at": "2018-03-15T05:30:50Z"
    },
    {
      "author": "CloudyDino",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov I pushed 1820a41 on accident and then reverted it with commit df8ac60. I should have checked to see if everything still worked, but standard deviation wasn't being output due to that specific commit. Trying to figure out how to go about checking when we need to put `StandardDeviation` out, can you elaborate what you meant by that?",
      "created_at": "2018-03-15T09:48:33Z",
      "updated_at": "2018-03-16T00:42:02Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov @CloudyDino thank you! \ud83c\udf89 ",
      "created_at": "2018-03-16T03:46:18Z",
      "updated_at": "2018-03-16T03:46:18Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "I filled https://github.com/PowerShell/PowerShell-Docs/issues/2183 for the help follow-up.",
      "created_at": "2018-03-16T03:48:29Z",
      "updated_at": "2018-03-16T03:48:29Z"
    },
    {
      "author": "TylerLeonhardt",
      "author_association": "MEMBER",
      "body": "So happy to see this get merged :) nice @CloudyDino!",
      "created_at": "2018-03-16T06:59:33Z",
      "updated_at": "2018-03-16T06:59:33Z"
    }
  ],
  "created_at": "2018-02-24T23:20:27Z",
  "number": 6238,
  "state": "closed",
  "title": "Standard deviation implementation on Measure-Object",
  "updated_at": "2018-03-18T21:03:57Z"
}