{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12781",
  "author": "Shayan-To",
  "body": "# Steps to reproduce\r\n\r\n```powershell\r\nAdd-Type -Language CSharp -TypeDefinition @'\r\npublic class Test1\r\n{\r\n    public static void f()\r\n    {\r\n        System.Console.WriteLine(\"abc\");\r\n    }\r\n}\r\n'@ -ReferencedAssemblies System.Windows.Forms\r\n```\r\n\r\n# Expected behavior\r\n\r\nThe code compiles and the type `Test1` is added and available.\r\n\r\n# Actual behavior\r\n\r\nIt gives me this error:\r\n\r\n```none\r\nAdd-Type: (5,9): error CS0234: The type or namespace name 'Console' does not exist in the namespace 'System' (are you missing an assembly reference?)\r\n        System.Console.WriteLine(\"abc\");\r\n        ^\r\n\r\nAdd-Type: Cannot add type. Compilation errors occurred.\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.0-preview.3\r\nPSEdition                      Core\r\nGitCommitId                    7.1.0-preview.3\r\nOS                             Microsoft Windows 10.0.18363\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2020-05-26T05:51:13Z",
  "comments": [
    {
      "author": "alx9r",
      "author_association": "NONE",
      "body": "@Shayan-To \r\n\r\nI think you'll need to reference the assembly containing System.Console explicitly by passing the right name to `-ReferencedAssemblies`.  The assembly containing `System.Console` for .Net Core seems to be System.Console.dll.  It is usually possible to find the assembly you need to reference for a type in the following ways:\r\n\r\n* the \"Assembly:\" field of the documentation on [docs.microsoft.com](https://docs.microsoft.com/en-us/dotnet/api/system.console?view=netcore-3.1)\r\n* outputting the assembly location from PowerShell (`[System.Console].Assembly.Location`)\r\n\r\nThe following outputs `abc` without errors:\r\n\r\n```PowerShell\r\nAdd-Type -Language CSharp -TypeDefinition @'\r\npublic class Test1\r\n{\r\n    public static void f()\r\n    {\r\n        System.Console.WriteLine(\"abc\");\r\n    }\r\n}\r\n'@ -ReferencedAssemblies @(\r\n    'System.Windows.Forms'\r\n    ([System.Console].Assembly.Location)\r\n)\r\n[Test1]::f()\r\n```\r\n\r\nFWIW `Add-Type` makes an amount of effort to reference default assemblies and resolve named assemblies.  But in your case, mentioning `System.Windows.Forms` seems to cause `Add-Type` to not reference `System.Console`.  The assembly resolution logic is implemented in [AddType.cs](https://github.com/PowerShell/PowerShell/blob/master/src/Microsoft.PowerShell.Commands.Utility/commands/utility/AddType.cs) but it's not obvious to me why that happens.",
      "created_at": "2020-05-25T15:10:13Z",
      "updated_at": "2020-05-25T15:10:13Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Dup #9599. Please discuss there.",
      "created_at": "2020-05-26T05:51:02Z",
      "updated_at": "2020-05-26T05:51:02Z"
    }
  ],
  "created_at": "2020-05-25T14:32:02Z",
  "number": 12781,
  "state": "closed",
  "title": "Error when using `Add-Type` with `-ReferencedAssemblies`",
  "updated_at": "2020-05-26T05:51:13Z"
}