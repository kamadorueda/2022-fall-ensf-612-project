{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9910",
  "author": "jonitis",
  "body": "# Issue\r\nAll versions of PowerShell (5.1, 6.2, 7.0) have different problems with input of accented characters.   The issue with 7.0.0 preview 1 is that entering dead-key character should wait for next character to produce the combined character. For examle '+a=\u0101. '+(space)='. Instead we immediately get @ character. If followed by correct latin character we also get combined accented character. Pressing the dead-key should not produce any output until next key is pressed.\r\n  It is getting better in 7.0, but still broken compared to cmd.exe or plain notepad.exe.\r\n\r\n# Steps to reproduce\r\n\r\nInstall \"Latvian (standard)\" keyboard layout. Produce accented characters using both supported methods (use a,c,e,g,i,k,l,n,s,u,z as base characters):\r\n1. Hold AltGr+Latin character. E.g. AltGr+a=\u0101, AltGr+S=\u0160\r\n2. Tap dead-key ', followed by latin character. E.g. '+a=\u0101, '+S=\u0160\r\n\r\n# Expected behavior\r\n\r\n```\r\n// Using AltGr\r\n\u0101\u010d\u0113\u0123\u012b\u0137\u013c\u0146\u0161\u016b\u017e\r\n\r\n// Using dead-key\r\n\u0101\u010d\u0113\u0123\u012b\u0137\u013c\u0146\u0161\u016b\u017e\r\n```\r\n\r\n# Actual behavior\r\n\r\nPowerShell 7 works correctly with AltGr, but produces unexpected characters with dead-key \r\n```\r\n// Using AltGr\r\n\u0101\u010d\u0113\u0123\u012b\u0137\u013c\u0146\u0161\u016b\u017e\r\n// Using dead-key\r\n@\u0101@\u010d@\u0113@\u0123@\u012b@\u0137@\u013c@\u0146@\u0161@\u016b@\u017e\r\n```\r\nPowerShell 6.2 swallows all AltGr combinations, but works as expected with dead-keys\r\n```\r\n// Using AltGr\r\n<nothing>\r\n// Using dead-key\r\n\u0101\u010d\u0113\u0123\u012b\u0137\u013c\u0146\u0161\u016b\u017e\r\n```\r\nPowerShell 5.1 swallows all AltGr combinations and with dead-keys produces non-accented character. 100% unusable\r\n```\r\n// Using AltGr\r\n<nothing>\r\n// Using dead-key\r\nacegiklnsuz\r\n```\r\ncmd.exe works with both methods as expected:\r\n```\r\n// Using AltGr\r\n\u0101\u010d\u0113\u0123\u012b\u0137\u013c\u0146\u0161\u016b\u017e\r\n// Using dead-key\r\n\u0101\u010d\u0113\u0123\u012b\u0137\u013c\u0146\u0161\u016b\u017e\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-preview.1\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-preview.1\r\nOS                             Microsoft Windows 10.0.18362\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2019-06-17T16:58:10Z",
  "comments": [
    {
      "author": "jonitis",
      "author_association": "NONE",
      "body": "Area-PSReadline",
      "created_at": "2019-06-17T13:37:08Z",
      "updated_at": "2019-06-17T13:37:08Z"
    },
    {
      "author": "jonitis",
      "author_association": "NONE",
      "body": "One can use Microsoft Keyboard Layout Creator 1.4 to see what combined characters should be produced by keyboard layout on each key combination\r\nhttps://www.microsoft.com/en-us/download/details.aspx?id=22339",
      "created_at": "2019-06-17T13:39:36Z",
      "updated_at": "2019-06-17T13:39:36Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "See here: https://github.com/PowerShell/PSReadLine/pull/945#issuecomment-502710868\r\n\r\nBeing worked on in the PSReadline repo. :smile:",
      "created_at": "2019-06-17T15:17:11Z",
      "updated_at": "2019-06-17T15:17:11Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@jonitis Can you please try out the fix in https://github.com/PowerShell/PSReadLine/pull/945? You can get the `PSReadLine.zip` from the artifact tab of that PR CI: https://ci.appveyor.com/project/PowerShell/psreadline/builds/25306787/artifacts",
      "created_at": "2019-06-17T16:12:27Z",
      "updated_at": "2019-06-17T16:12:27Z"
    },
    {
      "author": "jonitis",
      "author_association": "NONE",
      "body": "@vexx32, @daxian-dbw With provided PSReadLine the keyboard input works as expected. Good to know that fix is already available. Thanks for prompt reply! You can close the issue.",
      "created_at": "2019-06-17T16:54:58Z",
      "updated_at": "2019-06-17T16:54:58Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Thanks @jonitis for trying out the fix and reporting back.\r\nRelated to https://github.com/PowerShell/PSReadLine/issues/914. The fix is ready in PR https://github.com/PowerShell/PSReadLine/pull/945",
      "created_at": "2019-06-17T16:57:28Z",
      "updated_at": "2019-06-17T16:58:08Z"
    }
  ],
  "created_at": "2019-06-17T13:35:39Z",
  "number": 9910,
  "state": "closed",
  "title": "7.0.0-preview.1 problems with keyboard layouts that use dead-keys",
  "updated_at": "2019-06-17T16:58:34Z"
}