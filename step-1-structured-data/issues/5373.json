{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5373",
  "author": "markekraus",
  "body": "PowerShell Core (currently) only supports basic parsing on Web Cmdlets. All of the code which contains the actual `Forms` and `ParsedHtml`properties are behind `#if !CORECLR` so these properties do not exist on any of the core types. However, The `Forms` and `ParsedHtml` properties are defined in the format data.\r\n\r\nI believe [the decision](https://github.com/PowerShell/PowerShell/issues/3267#issuecomment-286917402) was that HTML processing would no longer be handled by the `WebResponseObject` and instead would be part of a separate cmdlet. \r\n\r\nOver the course of the past few months have fielded a lot of confused questions about this. I think it would help clarify that this is not supported in Core if the formatting data was updated to match object and remove the dummy `Forms` and `ParsedHtml` properties it adds.\r\n\r\nOffending code\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/fe3e44f3055ccd57e19ce1d29a5320e2f3891705/src/System.Management.Automation/FormatAndOutput/DefaultFormatters/PowerShellCore_format_ps1xml.cs#L1263\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/fe3e44f3055ccd57e19ce1d29a5320e2f3891705/src/System.Management.Automation/FormatAndOutput/DefaultFormatters/PowerShellCore_format_ps1xml.cs#L1268\r\n\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\n$result = iwr 'https://www.bing.com/'\r\n$result\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n`Forms` and `ParsedHtml` should not be shown\r\n```none\r\nStatusCode        : 200\r\nStatusDescription : OK\r\nContent           : <!DOCTYPE html PUBLIC #snip\r\nRawContent        : HTTP/1.1 200 OK #snip\r\nHeaders           : {[Cache-Control, System.String[]], #snip\r\nImages            : {@{outerHTML=<img id= #snip\r\nInputFields       : {@{outerHTML=<input clas #snip\r\nRawContentLength  : 124089\r\nRelationLink      : {}\r\n```\r\n\r\nActual behavior\r\n---------------\r\n`Forms` and `ParsedHtml` are shown\r\n```none\r\nStatusCode        : 200\r\nStatusDescription : OK\r\nContent           : <!DOCTYPE html PUBLIC #snip\r\nRawContent        : HTTP/1.1 200 OK #snip\r\nForms             :\r\nHeaders           : {[Cache-Control, System.String[]], #snip\r\nImages            : {@{outerHTML=<img id= #snip\r\nInputFields       : {@{outerHTML=<input clas #snip\r\nParsedHtml        :\r\nRawContentLength  : 124089\r\nRelationLink      : {}\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n```powershell\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.0-beta.9\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.0-beta.9\r\nOS                             Microsoft Windows 10.0.15063\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2017-11-10T18:00:12Z",
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Agree we should remove those properties.",
      "created_at": "2017-11-08T00:30:07Z",
      "updated_at": "2017-11-08T00:30:07Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT  Currently the formatting data is lumped together for both `BasicHtmlWebResponseObject` (which exists in Core) and `HtmlWebResponseObject` (which does not exist in core). Should this be just removed for both, or have them separated in 2 different formats, or remove the formatting for `HtmlWebResponseObject` and remove these 2 properties for `BasicHtmlWebResponseObject`?",
      "created_at": "2017-11-08T00:42:22Z",
      "updated_at": "2017-11-08T00:43:00Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Since we've already made the decision to clean up the PowerShell Core code base to not have FullClr code, I would actually like to clean up the entirety of the webcmdlets code to just have CoreClr code (so we don't have to worry about the question you are asking).",
      "created_at": "2017-11-08T03:38:08Z",
      "updated_at": "2017-11-08T03:38:08Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT Is that cleanup something that can be done before release, though? Ideally, we would at least remove these 2 properties before release, But if it is tied to a bigger cleanup, maybe not?",
      "created_at": "2017-11-08T09:22:06Z",
      "updated_at": "2017-11-08T09:22:06Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@markekraus the clean-up is not needed for 6.0.0 and agree we can wait on that.  Removing the 2 properties we should get in for RC so it doesn't become a breaking change (from 6.0.0) later.",
      "created_at": "2017-11-08T22:35:22Z",
      "updated_at": "2017-11-08T22:35:22Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT I removed that properties in #5376 with the other cleanup activities. Would that one get added before RC? If not, I can separate it out to a PR of its own.",
      "created_at": "2017-11-08T23:39:54Z",
      "updated_at": "2017-11-08T23:39:54Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@markekraus I think the PR can still make it into RC as-is",
      "created_at": "2017-11-09T01:37:49Z",
      "updated_at": "2017-11-09T01:37:49Z"
    }
  ],
  "created_at": "2017-11-08T00:24:02Z",
  "number": 5373,
  "state": "closed",
  "title": "Format data for BasicHtmlWebResponseObject contains ParsedHtml and Forms properties",
  "updated_at": "2017-11-10T18:01:24Z"
}