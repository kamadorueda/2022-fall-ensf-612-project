{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9824",
  "author": "KirkMunro",
  "body": "The `Remove-PSBreakpoint` command has logic that disables the debugger when the last breakpoint is removed. As defined, this can happen even if you are currently stepping through the debugger, such that any subsequent step command (step into, step over, step out) is ignored and the script runs to completion.\r\n\r\nThe condition needs to also check to make sure that you are not currently stepping through the debugger. If you are, the debugger must not be disabled.\r\n\r\nThis issue is being fixed as part of PR #9825. I am simply adding it here for tracking purposes.\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\n& {\r\n    $bp = Set-PSBreakpoint -Command Remove-PSBreakpoint\r\n    Remove-PSBreakpoint -Breakpoint $bp\r\n}\r\n1 + 1\r\n```\r\n\r\n# Expected behavior\r\n\r\nRegardless of whether you use stepInto, stepOver, or stepOut, you should be able to step to the 1 + 1 command.\r\n\r\n# Actual behavior\r\n\r\nYou cannot step to the 1 + 1 command.\r\n\r\n# Environment data\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.2.0\r\nPSEdition                      Core\r\nGitCommitId                    6.2.0\r\nOS                             Microsoft Windows 10.0.17763\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "When debugging is enabled, there is a significant impact to performance. It seems like a bad idea to degrade performance for the rest of the session if the debugger isn't actively needed.",
      "created_at": "2019-06-05T05:57:31Z",
      "updated_at": "2019-06-05T05:57:31Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "@lzybkr I understand that and figured that was the reasoning behind this code; however, without this fixed, if I'm in a debug session, on the last breakpoint, and I remove that breakpoint and then step, the code runs to the end because the debugger is disabled. How can the debugger no longer be needed when I'm in the debugger stepping through code?\r\n\r\nIf we want this logic needs to be kept, then the condition needs to change so that the debugger is not disabled the last breakpoint is removed and if you are currently in the debugger. I'm not sure what flag/setting tells me that, but there must be one. I'll have a look to see.",
      "created_at": "2019-06-05T13:13:26Z",
      "updated_at": "2019-06-05T13:13:26Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for the comment @lzybkr. I put the disabling logic back, with added conditional checks to ensure that you are not currently stepping in the debugger. If you are, the debugger will not be disabled.",
      "created_at": "2019-06-05T15:56:44Z",
      "updated_at": "2019-06-05T16:40:28Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "That's better, but still not optimal. The debugger should also be disabled when you go (no more breakpoints could be hit) and when you've exited all scripts (empty callstack).",
      "created_at": "2019-06-05T16:56:41Z",
      "updated_at": "2019-06-05T16:56:41Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "I don't disagree, but those two additional scenarios don't have anything to do with Remove-PSBreakpoint though, do they? I mean, when you `continue` and no more breakpoints can be hit, it's still disabled (because Remove-PSBreakpoint looks at the current debugger command if there is one, and only prevents the disabling of the debugger if it was a step command. And for when you've exited all scripts, I would presume that the debugger is already being disabled, but I haven't looked at that code.",
      "created_at": "2019-06-05T17:55:07Z",
      "updated_at": "2019-06-05T18:00:21Z"
    }
  ],
  "created_at": "2019-06-04T23:01:48Z",
  "labels": [
    "Issue-Question",
    "WG-Interactive-Debugging"
  ],
  "number": 9824,
  "state": "open",
  "title": "The debugger should not be disabled when you remove the last breakpoint if you are currently stepping through the debugger",
  "updated_at": "2019-06-05T18:00:21Z"
}