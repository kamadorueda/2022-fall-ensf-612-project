{
  "_url": "https://github.com/PowerShell/PowerShell/issues/17243",
  "author": "sdg002",
  "body": "### Prerequisites\n\n- [X] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\n\n### Steps to reproduce\n\n\r\n# Create a custom settings file\r\n\r\n- Use the folder `c:\\users\\<currentuser>\\demo1`\r\n- Name the file `demo.config.json`\r\n- The contents should be as follows:\r\n```\r\n{\r\n  \"PSModulePath\": \"C:\\\\Program Files\\\\PowerShell\\\\6\\\\Modules;c:\\\\blah\"\r\n}\r\n```\r\n- Save the file\r\n\r\n# Launch PWSH with -settingsFile\r\n\r\n- Launch a new CMD\r\n- For the purpose of reference, print the value of the environment variable by typing `echo %PSModulePath%`\r\n- This will display the value of the environment variable `PSModulePath`\r\n- Run the command `pwsh -settingsFile c:\\users\\<currentuser>\\demo1\\demo.config.json`\r\n- Now examine the value of the environment variable by typing `$env:PSModulePath`\r\n- \r\n\r\n\r\n\r\n\n\n### Expected behavior\n\n```console\nThe environment variable `PSModulePath` should take the value specified in the file `demo.config.json`\n```\n\n\n### Actual behavior\n\n```console\nThe environment variable `PSModulePath` retains most of the original value.\n```\n\n\n### Error details\n\n```console\nMy objective was to override the environment variable $PSModulePath as much as possible by using a settings file.  I wanted to bypass `c:\\users\\<currentuser>\\documents\\PowerShell\\Modules` completely.\r\nThis was not met.  I was following the documentation [documentation here](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_powershell_config?view=powershell-7.2) \r\n\r\nThe documentation on the `settingsFile` needs clarity on the extent of overriding that can be carried out by using the `-settingsFile` argument. If there are caveats then those should be clearly documented.\n```\n\n\n### Environment data\n\n```powershell\nWindows 10\r\nPowerShell core 7.1.3\n```\n\n\n### Visuals\n\nContents of my config file:\r\n\r\n![image](https://user-images.githubusercontent.com/20245330/166246184-179e66aa-50b9-463b-8c15-b9447930a849.png)\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "fMichaleczek",
      "author_association": "NONE",
      "body": "@sdg002 The documentation said \"<ps-module-path> is the absolute path to a module directory\". You had specified 2 paths in your configuration. Could you try again with only one path to verify it's working as expected ? Then you should ask to support more than one path. ",
      "created_at": "2022-05-02T14:05:52Z",
      "updated_at": "2022-05-02T14:05:52Z"
    },
    {
      "author": "jhoneill",
      "author_association": "NONE",
      "body": "> My objective was to override the environment variable $PSModulePath as much as possible by using a settings file.  I wanted to bypass `c:\\users\\<currentuser>\\documents\\PowerShell\\Modules` completely.\r\n> This was not met.  I was following the documentation [documentation here](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_powershell_config?view=powershell-7.2) \r\n> The documentation on the `settingsFile` needs clarity on the extent of overriding that can be carried out by using the `-settingsFile` argument. If there are caveats then those should be clearly documented.\r\n\r\nThe settings file adds to the values, rather than replacing them \r\nOn a clean system I get the following with `echo %psmodulepath%`  in cmd\r\n`C:\\Program Files\\WindowsPowerShell\\Modules;`    \r\n`C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules ` \r\n\r\nWhen I start PowerShell 7, it prepends 3 directories. \r\n`<userProfile> \\Documents\\PowerShell\\Modules`   \r\n`C:\\Program Files\\PowerShell\\Modules`   \r\n`<install dir> \\Modules`   \r\n\r\nAdding a directory in the settings file adds it after these 3 but before the existing 2.  With more than one directory both were added _in reverse order_\r\n\r\nThe documentation says \r\n>  **Overrides** the PSModulePath settings for this PowerShell session. If the configuration is for the current user, sets the CurrentUser module path. If the configuration is for all users, sets the AllUsers module path.\r\n\r\nThere have been other cases where people have said PSModulePath is not doing what they expect. **Override** in the docs suggests either the setting in the file replaces, or at least has higher priority than, the setting added by pwsh. The behaviour and docs don't match. The behaviour may be as intended (meaning the docs need an update and possibly a feature request for something different), or there may one or more bugs  \r\n\r\n\r\n\r\n\r\n",
      "created_at": "2022-05-03T12:13:29Z",
      "updated_at": "2022-05-03T12:14:12Z"
    }
  ],
  "created_at": "2022-05-02T13:57:41Z",
  "number": 17243,
  "state": "open",
  "title": "PWSH -settingsFile argument does not have an impact on the $env:PSModulePath variable",
  "updated_at": "2022-05-03T12:14:12Z"
}