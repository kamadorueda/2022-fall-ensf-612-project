{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6340",
  "author": "Jaykul",
  "body": "I've gotten a PowerShell Core host working (finally!) using the new 6.0.1.1 SDK release -- if you want an example, it's [my Jupyter-PowerShell kernel](https://github.com/Jaykul/Jupyter-PowerShell)\r\n\r\nHowever, there's one or two significant problems.\r\n\r\nThe primary one is that without the `Modules` folder that PowerShell ships, there are no modules at all, and even simple command lines like `Get-Command` fail with a \"Command not found\" error.\r\n\r\nSince the built-in modules _need to be available_ when someone's hosting PowerShell - which means they need to be on the `PSModulePath`, I think that means they should be included as content in the SDK, and I think that PowerShell itself should make sure that path is _always_ included, regardless of whether PowerShell is created via `PowerShell.Create()` or `RunspaceFactory.CreateRunspace` ... and regardless of the value of the environment variable when PowerShell is initialized.",
  "closed_at": null,
  "comments": [
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "@Jaykul I was playing with the SDK as well and found that it was better to to do a platform specific `dotnet publish` to get all dependencies to work on non-Windows systems.",
      "created_at": "2018-03-08T22:31:06Z",
      "updated_at": "2018-03-08T22:31:06Z"
    },
    {
      "author": "Jaykul",
      "author_association": "CONTRIBUTOR",
      "body": "@bergmeister yep. In order to ship something, you have to -publish, otherwise everyone needs the SDK ;-)",
      "created_at": "2018-03-08T23:32:39Z",
      "updated_at": "2018-03-08T23:32:39Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "No, I rather meant specifying the platform when publishing.\r\n.Net core can make a generic publish folder that 'should' run everywhere but specifying the platform compiles a platform specific and optimised version and I found that I had to use this rather than the generic one because otherwise native low level dependencies were missing.\r\nOr maybe this is due to the introduction of the runtime store in netcore2 that is a bit like a GaC.",
      "created_at": "2018-03-08T23:38:36Z",
      "updated_at": "2018-03-08T23:42:39Z"
    }
  ],
  "created_at": "2018-03-08T06:55:25Z",
  "number": 6340,
  "state": "open",
  "title": "Does the PowerShell SDK needs to include module manifests etc.?",
  "updated_at": "2018-03-08T23:42:39Z"
}