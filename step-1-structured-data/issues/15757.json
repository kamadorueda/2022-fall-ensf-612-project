{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15757",
  "author": "rkeithhill",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nImplements a terminating error when a native executable returns a non-zero exit code similar to `set -e` on Linux and macOS.\r\n\r\n## PR Context\r\nImplement [RFC 277](https://github.com/PowerShell/PowerShell-RFC/pull/277)\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [ ] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [x] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and opened an issue in the relevant tool repository. This may include:\r\n        - [ ] Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode\r\n        (which runs in a different PS Host).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [x] Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n\r\nThis PR does impact the [UseDeclaredVarsMoreThanAssignments PSSA rule](https://github.com/PowerShell/PSScriptAnalyzer/blob/master/RuleDocumentation/UseDeclaredVarsMoreThanAssignments.md).  `PSNativeCommandUseErrorActionPreference` needs to be excluded from this rule.",
  "closed_at": "2021-08-09T21:17:10Z",
  "comments": [
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "There are internal APIs to get/set pref vars in `ExecutionContext.cs`, `MshCommandRuntime.cs` and `PowerShell.cs` (public api). Not sure if I need to define this preference variable in those files.",
      "created_at": "2021-07-11T20:40:51Z",
      "updated_at": "2021-07-11T20:40:51Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "Assigning myself since I've been tasked with taking this work on, but since you've already started @rkeithhill maybe I can support you here instead",
      "created_at": "2021-07-14T19:55:54Z",
      "updated_at": "2021-07-14T19:55:54Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "@rjmholt That would be great! I'd love to have your input on this.  I need to update this PR as I started it off from my memory of the RFC and now I see that (as @iSazonov  points out), I need to be checking the value of `$ErrorActionPreference`.  I also see in the PR that there are specifics regarding the generated `ErrorRecord` that I need to snap to.  I'll push an update to this PR tonight to cover those issues.  I'll try to add the implementation for `NativeCommandException` but may have some questions about where to put that source.",
      "created_at": "2021-07-14T20:15:43Z",
      "updated_at": "2021-07-14T20:16:01Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "I implemented `NativeCommandException`. The result looks like this:\r\n\r\n![image](https://user-images.githubusercontent.com/5177512/126058572-5be5aa24-3710-407d-a1d9-eff62ec44e7e.png)\r\n",
      "created_at": "2021-07-18T06:59:17Z",
      "updated_at": "2021-07-18T06:59:17Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "@rjmholt The current build checks seem to be stuck. Is there a way I restart them short of pushing a bogus commit?  Nevermind - resolved the merge conflict and that has restarted the build.",
      "created_at": "2021-08-05T17:20:53Z",
      "updated_at": "2021-08-05T17:25:36Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "Test failures are very weird...\r\n\r\n/azp run",
      "created_at": "2021-08-05T18:23:05Z",
      "updated_at": "2021-08-05T18:23:05Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "@rjmholt There is a test failure in output rendering tests which I don't believe this PR should impact:\r\n```\r\n2021-08-05T17:44:15.0467419Z     Context NormalView tests\r\n2021-08-05T17:44:15.0498743Z +\r\n2021-08-05T17:44:15.0512900Z \r\n2021-08-05T17:44:15.0527114Z     Context DetailedView tests\r\n2021-08-05T17:44:15.0555317Z +\r\n2021-08-05T17:44:15.0570773Z \r\n2021-08-05T17:44:15.0603255Z \r\n2021-08-05T17:44:15.0611669Z   Describing OutputRendering tests\r\n2021-08-05T17:44:15.0627692Z     [-] Error occurred in Describe block\r\n2021-08-05T17:44:15.0649066Z       PSArgumentException: The key 'It:Skip' has already been added to the dictionary.\r\n2021-08-05T17:44:15.0663568Z       MethodInvocationException: Exception calling \"Add\" with \"2\" argument(s): \"The key 'It:Skip' has already been added to the dictionary.\"\r\n2021-08-05T17:44:15.0704752Z       at <ScriptBlock>, D:\\a\\1\\s\\test\\powershell\\engine\\Formatting\\OutputRendering.Tests.ps1: line 6\r\n2021-08-05T17:44:15.0717916Z       at Invoke-Blocks, D:\\a\\1\\s\\src\\powershell-win-core\\bin\\Release\\net6.0\\win7-x64\\publish\\Modules\\Pester\\4.10.1\\Functions\\SetupTeardown.ps1: line 135\r\n2021-08-05T17:44:15.0731656Z       at Invoke-TestGroupSetupBlocks, D:\\a\\1\\s\\src\\powershell-win-core\\bin\\Release\\net6.0\\win7-x64\\publish\\Modules\\Pester\\4.10.1\\Functions\\SetupTeardown.ps1: line 121\r\n2021-08-05T17:44:15.0746462Z       at DescribeImpl, D:\\a\\1\\s\\src\\powershell-win-core\\bin\\Release\\net6.0\\win7-x64\\publish\\Modules\\Pester\\4.10.1\\Functions\\Describe.ps1: line 209\r\n```\r\nIt's balking on this last line here:\r\n```\r\nDescribe 'OutputRendering tests' {\r\n    BeforeAll {\r\n        $PSDefaultParameterValues.Add('It:Skip', (-not $EnabledExperimentalFeatures.Contains('PSAnsiRendering')))\r\n```\r\nAnything wrong with that? It's a bit different than how you skipped the tests for this PR when the exp feature is not enabled.\r\n\r\nHmm, it seems that the following approach to skipping a test is way more prevalent in the tests vs what the Output Rendering test does:\r\n```powershell\r\nDescribe \"Get-HotFix Tests\" -Tag CI {\r\n    BeforeAll {\r\n        $originalDefaultParameterValues = $PSDefaultParameterValues.Clone()\r\n\r\n        $skip = $false\r\n        if (!$IsWindows) {\r\n            $skip = $true\r\n        }\r\n        else {\r\n            # skip the tests if there are no hotfixes returned\r\n            $qfe = Get-CimInstance Win32_QuickFixEngineering\r\n            if ($qfe.Count -eq 0) {\r\n                $skip = $true\r\n            }\r\n        }\r\n\r\n        $PSDefaultParameterValues[\"it:skip\"] = $skip\r\n    }\r\n\r\n    AfterAll {\r\n        $global:PSDefaultParameterValues = $originalDefaultParameterValues\r\n    }\r\n```",
      "created_at": "2021-08-05T19:56:20Z",
      "updated_at": "2021-08-05T21:00:11Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "@rjmholt Woohoo!  All checks pass!  That said, we might want to think about whether the tests I've added are adequate.",
      "created_at": "2021-08-05T23:40:05Z",
      "updated_at": "2021-08-05T23:41:03Z"
    },
    {
      "author": "theJasonHelmick",
      "author_association": "CONTRIBUTOR",
      "body": "@rkeithhill - Thank you for all the hard work. I just spoke with @rjmholt and he thinking he might open a separate pr to add a couple of tests. ",
      "created_at": "2021-08-06T18:03:52Z",
      "updated_at": "2021-08-06T18:03:52Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "Sounds good to me.  I wouldn't be able to do anything until later this evening and even then I don't have a ton of time before I'm out of vacation next week.",
      "created_at": "2021-08-06T20:24:20Z",
      "updated_at": "2021-08-06T20:24:20Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "@rkeithhill see https://github.com/rkeithhill/PowerShell/pull/21",
      "created_at": "2021-08-06T20:33:27Z",
      "updated_at": "2021-08-06T20:33:27Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "Merged.",
      "created_at": "2021-08-06T20:43:55Z",
      "updated_at": "2021-08-06T20:43:55Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "Markdown tests failed. Le sigh. \r\n\r\n![image](https://user-images.githubusercontent.com/5177512/128572009-c05baec2-14a8-47c8-bcf1-c5421064cc97.png)\r\n\r\nThis is a downside of relying on websites during the build.\r\n",
      "created_at": "2021-08-06T21:18:55Z",
      "updated_at": "2021-08-06T21:18:55Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "/azp run",
      "created_at": "2021-08-06T21:39:29Z",
      "updated_at": "2021-08-06T21:39:29Z"
    },
    {
      "author": "azure-pipelines[bot]",
      "author_association": "NONE",
      "body": "<samp>\nAzure Pipelines successfully started running 6 pipeline(s).<br>\r\n\n</samp>",
      "created_at": "2021-08-06T21:40:08Z",
      "updated_at": "2021-08-06T21:40:08Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "Opened https://github.com/rkeithhill/PowerShell/pull/22 (@rkeithhill)",
      "created_at": "2021-08-09T19:29:18Z",
      "updated_at": "2021-08-09T19:29:29Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "Closing in favour of https://github.com/PowerShell/PowerShell/pull/15897 because I needed to rebase the branch and can't edit this one (@rkeithhill you can turn that on in future if you'd like)",
      "created_at": "2021-08-09T21:17:06Z",
      "updated_at": "2021-08-09T21:17:06Z"
    }
  ],
  "created_at": "2021-07-11T20:35:05Z",
  "number": 15757,
  "state": "closed",
  "title": "Initial impl of RFC-277 - native exe throws on non-zero exit code",
  "updated_at": "2021-08-10T03:17:03Z"
}