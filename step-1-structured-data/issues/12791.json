{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12791",
  "author": "deoradh",
  "body": "I have run into a difference in behavior of PS7.x between Windows (success) and Ubuntu 18.04 (failure).  This may be related to #12240, and arose when I parallelized the child item processing using ForEach-Object -Parallel.\r\n\r\nIn this case, the failure is that a PSDrive I define earlier is not found.\r\n\r\n# Steps to reproduce\r\n\r\n1. Install PS7 on each of Windows 10 v2004 and Ubuntu 18.04 on WSL2.\r\n2. Install git\r\n3. Install and Import posh-git and oh-my-posh\r\n4. In profile:\r\n\r\n```powershell\r\n# set $REPOS to a path, for use later\r\n\r\n# then...\r\n\r\nnew-psdrive -name Repos -psprovider FileSystem -root $REPOS\r\n\r\nfunction Get-TimeSinceLastCommit {\r\n    return (git log --pretty=format:'%cr' -1)\r\n}\r\n\r\nfunction Get-Repos {\r\n    Push-Location Repos:\\\r\n\r\n    $result = Get-ChildItem -Path Repos:\\ -Include .git -recurse -Directory -Hidden -Depth 2 | ForEach-Object -Parallel { $_ | Select-Object Parent, @{label=\"Status\";expression= {Push-Location $_.Parent; $status = Get-GitStatus; Pop-Location; $status}}, @{label=\"Last Commit\";expression={Push-Location $_.Parent; $timeStamp = Get-TimeSinceLastCommit; Pop-Location; $timeStamp}} }\r\n    \r\n    Pop-Location\r\n\r\n    $result\r\n}\r\n```\r\n\r\nThe above fails on Ubuntu, see Actual below.  It can be worked around, by replacing Repos:/ with $REPOS.  But the scripts shouldn't have to differ, let alone because one system doesn't see a PSDrive where the other system does.\r\n\r\n# Expected behavior\r\n\r\nAs on Windows:\r\n\r\n```powershell\r\nParent                                         Status\r\n------                                         ------\r\nC:\\Users\\kfarm\\source\\repos\\Manx               @{HasUntracked=False; Branch=master; HasWorking=True; StashCount=0; Ups\u2026\r\nC:\\Users\\kfarm\\source\\repos\\PowerShell         @{HasUntracked=False; Branch=master; HasWorking=False; StashCount=0; Up\u2026\r\nC:\\Users\\kfarm\\source\\repos\\Aspilogia          @{HasUntracked=False; Branch=master; HasWorking=False; StashCount=0; Up\u2026\r\nC:\\Users\\kfarm\\source\\repos\\Setup              @{HasUntracked=False; Branch=master; HasWorking=False; StashCount=0; Up\u2026\r\nC:\\Users\\kfarm\\source\\repos\\Microsoft\\Terminal @{HasUntracked=False; Branch=master; HasWorking=False; StashCount=0; Up\u2026\r\nC:\\Users\\kfarm\\source\\repos\\WindowsTerminal    @{HasUntracked=False; Branch=master; HasWorking=False; StashCount=0; Up\u2026\r\n\r\n```\r\n\r\n# Actual behavior\r\n\r\nAs on Ubuntu 18.04:\r\n\r\n```powershell\r\nForEach-Object: /home/kfarmer/repos/PowerShell/Microsoft.PowerShell_profile-Linux.ps1:27\r\nLine |\r\n  27 |          | ForEach-Object -Parallel { $_ | Select-Object Parent, @{lab \u2026\r\n     |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n     | An unexpected error has occurred while processing ForEach-Object -Parallel input. This may mean that\r\n     | some of the piped input did not get processed. Error:\r\n     | System.Management.Automation.DriveNotFoundException: Cannot find drive. A drive with the name 'Repos'\r\n     | does not exist.    at System.Management.Automation.SessionStateInternal.GetDrive(String name, Boolean\r\n     | automount)    at System.Management.Automation.SessionStateInternal.AutomountBuiltInDrive(String name)\r\n     | at System.Management.Automation.SessionStateInternal.GetDrive(String name, Boolean automount)    at\r\n     | System.Management.Automation.SessionStateInternal.GetDrive(String name)    at\r\n     | System.Management.Automation.SessionStateInternal.SetLocation(String path, CmdletProviderContext\r\n     | context, Boolean literalPath)    at\r\n     | System.Management.Automation.SessionStateInternal.SetLocation(String path, CmdletProviderContext\r\n     | context)    at System.Management.Automation.SessionStateInternal.SetLocation(String path)    at\r\n     | System.Management.Automation.PSTasks.PSTaskBase.Start()    at\r\n     | System.Management.Automation.PSTasks.PSTaskPool.Add(PSTaskBase task)    at\r\n     | Microsoft.PowerShell.Commands.ForEachObjectCommand.<InitParallelParameterSet>b__63_2(Object _).\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nWindows PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.0-preview.3\r\nPSEdition                      Core\r\nGitCommitId                    7.1.0-preview.3\r\nOS                             Microsoft Windows 10.0.19041\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\nUbuntu PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.1\r\nPSEdition                      Core\r\nGitCommitId                    7.0.1\r\nOS                             Linux 4.19.84-microsoft-standard #1 SMP Wed Nov 13 11:44:37 UTC 2019\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2020-05-28T12:00:09Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Is it WSL2 only failure? Does it work on full Ubuntu?",
      "created_at": "2020-05-26T04:07:36Z",
      "updated_at": "2020-05-26T04:07:36Z"
    },
    {
      "author": "deoradh",
      "author_association": "NONE",
      "body": "I wouldn\u2019t know about full Ubuntu. I haven\u2019t had a bare Linux box since 1995.\n",
      "created_at": "2020-05-26T04:17:02Z",
      "updated_at": "2020-05-26T04:17:04Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "By design, runspace-specific definitions such as custom PS drives aren't visible to the threads run by `ForEach-Object -Parallel` - you'll indeed have to wait for #12240 to be implemented to have the option of automatically copying such definitions to these threads.\r\n\r\n",
      "created_at": "2020-05-26T22:04:47Z",
      "updated_at": "2020-05-26T22:04:47Z"
    },
    {
      "author": "deoradh",
      "author_association": "NONE",
      "body": "I have some new information: this actually might be independent of OS. It repros in 7.0.1 on Windows as well.  7.1p3 may resolve it.\n",
      "created_at": "2020-05-26T22:19:25Z",
      "updated_at": "2020-05-26T22:19:27Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2020-05-28T12:00:08Z",
      "updated_at": "2020-05-28T12:00:08Z"
    }
  ],
  "created_at": "2020-05-26T02:52:02Z",
  "number": 12791,
  "state": "closed",
  "title": "ForEach-Object -Parallel: Difference between Windows and Ubuntu 18.04 leading to exception",
  "updated_at": "2020-05-28T12:00:09Z"
}