{
  "_url": "https://github.com/PowerShell/PowerShell/issues/2448",
  "author": "SummerSun",
  "body": "## OS info\n\nEdition: Windows 10 Enterprise\nVersion: 1607\nOS Build: 14393.187\nInstalled RAM: 16.0 GB\nSystem Type: 64-bit operating system, x64-based processor\n## Steps to reproduce\n1. Create a .json file. Write in an array with only one valid json object:\n\n``` json\n[{\n    \"name\": \"Animals\",\n    \"age\": \"1\",\n    \"children\": [{\n        \"name\": \"mimi\",\n        \"age\": \"1\",\n        \"lovely\": true,\n        \"height\": 20\n    },\n    {\n        \"name\": \"dog\",\n        \"age\": \"2\",\n        \"lovely\": false,\n        \"height\": 100\n    }]\n}]\n```\n1. Convert this json file content to psobject and then convert it back to write it to another file\n\n``` powershell\n$o=(Get-Content -Raw D:\\Test_Convert.json | ConvertFrom-Json)\nSet-Content 'D:\\result.json' ($o | ConvertTo-Json)\n```\n1. View the result.json:\n\n``` json\n{\n    \"name\":  \"Animals\",\n    \"age\":  \"1\",\n    \"children\":  [\n                     {\n                         \"name\":  \"mimi\",\n                         \"age\":  \"1\",\n                         \"lovely\":  true,\n                         \"height\":  20\n                     },\n                     {\n                         \"name\":  \"dog\",\n                         \"age\":  \"2\",\n                         \"lovely\":  false,\n                         \"height\":  100\n                     }\n                 ]\n}\n```\n## Expected behavior\n\nGet the right PSObject and write the same content back.\n## Actual behavior\n\nThe array turns into its only child.\n## Environment data\n\nIncluded in the repro steps.\n## Powershell Version\n\n``` powershell\n\nPS C:\\Users\\qisun\\Downloads\\LatestPowerShell> $PSVersionTable.PSVersion\n\nMajor Minor Patch Label\n----- ----- ----- -----\n    6     0     0 alpha\n```\n\n**Have to mention that the issue does not repro when there are multiple children in that array.**\n",
  "closed_at": "2017-05-19T21:48:37Z",
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@Francisco-Gamino I think you had brought this up before and this was \"by design\"?\n",
      "created_at": "2016-10-12T16:42:55Z",
      "updated_at": "2016-10-12T16:42:55Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "With the repro as is, it does look like it is by design - we enumerate objects written to the pipeline, so piping loses the fact that the object was an array. This is similar to the difference between:\n\n``` powershell\n$o = @(1)\n$o | Get-Member\nGet-Member -InputObject $o\n```\n\nI was going to suggest using:\n\n``` powershell\nSet-Content 'D:\\result.json' (ConvertTo-Json -InputObject $o)\n```\n\nBut this doesn't work either, and I would consider this a bug.\n",
      "created_at": "2016-10-26T19:42:51Z",
      "updated_at": "2016-10-26T19:42:51Z"
    },
    {
      "author": "kamranayub",
      "author_association": "NONE",
      "body": "Just ran into this the other day, the workaround I'm using is\r\n\r\n    Set-Content 'D:\\result.json' (ConvertTo-Json -InputObject @($o))\r\n\r\nThe fact that it still won't work in pipeline is annoying. I have a restriction that I have to use pipeline, so I end up doing:\r\n\r\n     .\\Some-Script.ps1 -OutVariable List | Out-Null; ConvertTo-Json -InputObject @($List)\r\n\r\nAnd that works. I'm restricted because in this context, the script reference must be first and all other arguments are appended afterwards. I almost want a `-AsArray` switch or something to ConvertTo-Json.\r\n\r\n    .\\Some-Script.ps1 | ConvertTo-Json -AsArray",
      "created_at": "2017-05-19T13:45:23Z",
      "updated_at": "2017-05-19T13:49:10Z"
    },
    {
      "author": "Francisco-Gamino",
      "author_association": "CONTRIBUTOR",
      "body": "The pipleline issue is by design; however, this is not documented, so I've create an doc issue for this: https://github.com/PowerShell/PowerShell-Docs/issues/1219\r\n\r\nFor the ConvertTo-Json -InputObject $array, I cannot get it to repro. Here is what I am running:\r\n``` powershell\r\n\r\n# Generate a test file with Json content\r\n'[{\r\n    \"name\": \"Animals\",\r\n    \"age\": \"1\",\r\n    \"children\": [{\r\n        \"name\": \"mimi\",\r\n        \"age\": \"1\",\r\n        \"lovely\": true,\r\n        \"height\": 20\r\n    },\r\n    {\r\n        \"name\": \"dog\",\r\n        \"age\": \"2\",\r\n        \"lovely\": false,\r\n        \"height\": 100\r\n    }]\r\n}]'  | Out-File Test_Convert.json\r\n\r\n# Create the test object from the Json file\r\n$o=(Get-Content -Raw Test_Convert.json | ConvertFrom-Json)\r\n$o\r\n\r\nname    age children\r\n----    --- --------\r\nAnimals 1   {@{name=mimi; age=1; lovely=True; height=20}, @{name=dog; age=2; lovely=False; height=100}}\r\n\r\n# Serialize the object using  ConvertTo-Json -InputObject\r\nSet-Content result.json (ConvertTo-Json -InputObject $o -Depth 3)\r\n\r\nGet-Content .\\result.json\r\n[\r\n  {\r\n    \"name\": \"Animals\",\r\n    \"age\": \"1\",\r\n    \"children\": [\r\n      {\r\n        \"name\": \"mimi\",\r\n        \"age\": \"1\",\r\n        \"lovely\": true,\r\n        \"height\": 20\r\n      },\r\n      {\r\n        \"name\": \"dog\",\r\n        \"age\": \"2\",\r\n        \"lovely\": false,\r\n        \"height\": 100\r\n      }\r\n    ]\r\n  }\r\n]\r\n\r\n```\r\nSince the pipleline issue is by design, I am closing this. Please reopen is ConvertTo-Json -InputObject $array does not work.",
      "created_at": "2017-05-19T21:46:31Z",
      "updated_at": "2017-05-19T21:48:26Z"
    },
    {
      "author": "gramae",
      "author_association": "NONE",
      "body": "In my case this approach adds  \"value\": at the beggining and \"Count\":  1 at the end:\r\n\r\n{\r\n    \"value\":  [\r\n                  {\r\n                      \"name\":  \"Animals\",\r\n                      \"age\":  \"1\",\r\n                      \"children\":  [\r\n                                       {\r\n                                           \"name\":  \"mimi\",\r\n                                           \"age\":  \"1\",\r\n                                           \"lovely\":  true,\r\n                                           \"height\":  20\r\n                                       },\r\n                                       {\r\n                                           \"name\":  \"dog\",\r\n                                           \"age\":  \"2\",\r\n                                           \"lovely\":  false,\r\n                                           \"height\":  100\r\n                                       }\r\n                                   ]\r\n                  }\r\n              ],\r\n    \"Count\":  1\r\n}",
      "created_at": "2018-01-07T11:32:53Z",
      "updated_at": "2018-01-07T11:32:53Z"
    },
    {
      "author": "utripathi",
      "author_association": "NONE",
      "body": "Does this support complex json files . \r\n\r\nReferring to the Azure ARM templates which are in the json format . \r\n\r\nDoes it support that too ?\r\n",
      "created_at": "2018-03-07T12:30:33Z",
      "updated_at": "2018-03-07T12:30:33Z"
    }
  ],
  "created_at": "2016-10-10T08:53:51Z",
  "number": 2448,
  "state": "closed",
  "title": "ConvertFrom-Json and ConvertTo-Json eat the one object array",
  "updated_at": "2018-03-07T12:30:33Z"
}