{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13777",
  "author": "daxian-dbw",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nUpdate PSReadLine version to `2.1.0-rc1`\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [ ] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2020-10-14T16:58:10Z",
  "comments": [
    {
      "author": "ThomasNieto",
      "author_association": "CONTRIBUTOR",
      "body": "Will this be in PS 7.1 RC/GA? If so, will PSReadline 2.1 be stable at that time? I don't want to have another scenario where a stable release of PowerShell has a prerelease version of PSReadline. Reason being, that it will be difficult to upgrade PSReadline to stable once it does become available. Remember all the issues with PSReadline 2.0.0-betaX in 7.0 and being unable to upgrade to 2.0.0 stable due to PSGet issues with upgrading prerelease to stable binary modules? If you do decide to go through with it, the first version of PSReadline should be 2.1.1. \ud83d\ude04 ",
      "created_at": "2020-10-14T02:05:16Z",
      "updated_at": "2020-10-14T02:05:16Z"
    },
    {
      "author": "doctordns",
      "author_association": "COLLABORATOR",
      "body": "I would assume that any final RC of PowerShell 7.1 would include only fully released versions of all modules, including PSReadline. Is that assumption valid??",
      "created_at": "2020-10-14T13:44:38Z",
      "updated_at": "2020-10-14T13:44:38Z"
    },
    {
      "author": "ThomasNieto",
      "author_association": "CONTRIBUTOR",
      "body": "One other question, PS 7.1 RC1 has PSReadline 2.0.4. Why are we changing the PSReadline version to 2.1 during the RC instead of shipping the 2.1 betas along side the 7.1 previews?\r\n\r\n```powershell\r\nC:\\> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.0-rc.1\r\nPSEdition                      Core\r\nGitCommitId                    7.1.0-rc.1\r\nOS                             Microsoft Windows 10.0.19041\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\nC:\\> Get-Module PSReadLine -ListAvailable\r\n\r\n    Directory: C:\\program files\\powershell\\7-preview\\Modules\r\n\r\nModuleType Version    PreRelease Name                                PSEdition ExportedCommands\r\n---------- -------    ---------- ----                                --------- ----------------\r\nScript     2.0.4                 PSReadLine                          Desk      {Get-PSReadLineKeyHandler, Set-PSReadLineKeyHandler, Remove-PSReadLineKeyHandler, Get-PSReadLineOption\u2026}\r\n```",
      "created_at": "2020-10-14T13:59:07Z",
      "updated_at": "2020-10-14T14:00:11Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> One other question, PS 7.1 RC1 has PSReadline 2.0.4. Why are we changing the PSReadline version to 2.1 during the RC instead of shipping the 2.1 betas along side the 7.1 previews?\r\n> \r\n\r\nNot all users want the latest PSReadline build and prefer the familiar latest release.\r\n\r\n\r\n",
      "created_at": "2020-10-14T15:57:55Z",
      "updated_at": "2020-10-14T15:57:55Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "Please correct me if I am wrong @daxian-dbw. The plan is to ship PSReadLine 2.1.0 with 7.1 GA. ",
      "created_at": "2020-10-14T16:57:43Z",
      "updated_at": "2020-10-14T16:57:43Z"
    },
    {
      "author": "doctordns",
      "author_association": "COLLABORATOR",
      "body": "w\r\n\r\n> Please correct me if I am wrong @daxian-dbw. The plan is to ship PSReadLine 2.1.0 with 7.1 GA.\r\n\r\nThanks. My question was whether there would be a PowerShell 7.l RC with the GA version of PSReadline 2.l.0? Or will you just bump the module version for GA of 7.1?\r\n",
      "created_at": "2020-10-14T17:06:23Z",
      "updated_at": "2020-10-14T17:06:23Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "> Please correct me if I am wrong @daxian-dbw. The plan is to ship PSReadLine 2.1.0 with 7.1 GA.\r\n\r\nYes, we are going to ship PS 7.1.0 GA along with PSReadLine 2.1.0. ",
      "created_at": "2020-10-14T18:13:01Z",
      "updated_at": "2020-10-14T18:13:01Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "> Thanks. My question was whether there would be a PowerShell 7.l RC with the GA version of PSReadline 2.l.0? Or will you just bump the module version for GA of 7.1?\r\n\r\nThere is no plan to make any changes to PSReadLine 2.1-rc1 unless there is functionality or stability regression. Shipping the PSReadLine 2.1-rc1 with PS 7.1 RC2 is a way to find those potential functionality or stability regressions. If no such issue is reported, then we will just bump the module version to 2.1 before PS 7.1 GA.",
      "created_at": "2020-10-14T18:17:48Z",
      "updated_at": "2020-10-14T18:17:48Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "> Will this be in PS 7.1 RC/GA? If so, will PSReadline 2.1 be stable at that time? I don't want to have another scenario where a stable release of PowerShell has a prerelease version of PSReadline.\r\n\r\n@ThomasNieto PS 7.1 GA will ship with the PSReadLine 2.1 GA version.\r\n",
      "created_at": "2020-10-14T18:23:00Z",
      "updated_at": "2020-10-14T18:23:00Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.1.0-rc.2` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.1.0-rc.2)\n",
      "created_at": "2020-10-21T19:08:14Z",
      "updated_at": "2020-10-21T19:08:14Z"
    }
  ],
  "created_at": "2020-10-13T19:24:43Z",
  "number": 13777,
  "state": "closed",
  "title": "Update PSReadLine version to `2.1.0-rc1`",
  "updated_at": "2020-10-27T21:31:11Z"
}