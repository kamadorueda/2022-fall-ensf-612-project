{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3706",
  "author": "mklement0",
  "body": "Note: It may be too late to change this behavior, or perhaps it falls into [Bucket 3: Unlikely Grey Area](https://github.com/PowerShell/PowerShell/blob/master/docs/dev-process/breaking-change-contract.md#bucket-3-unlikely-grey-area).\r\nIf the former, perhaps a `-TrimDelimiter` option could be added.\r\n\r\nBy default, `Get-Content` strips the newline character [sequence] from the lines it returns.\r\n\r\nThe generalization of this concept is to use the `-Delimiter` parameter, which allows specifying a custom line (record) delimiter (terminator / separator).\r\n\r\nHowever, unlike with the default delimiter - a newline - whatever `-Delimiter` argument you specify is _kept_ in the lines returned, which is:\r\n\r\n* an inconsistency\r\n\r\n* an inconvenience, because the delimiter - which by its nature is not part of the data itself - must be stripped explicitly before further processing.\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\nI'd expect the following 2 commands to be equivalent:\r\n\r\n```powershell\r\n1,2 > t.txt; get-content                                     t.txt | % { \"[$_]\" }\r\n1,2 > t.txt; get-content -delimiter ([environment]::newline) t.txt | % { \"[$_]\" }\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```PowerShell\r\n[1]\r\n[2]\r\n[1]\r\n[2]\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n```PowerShell\r\n[1]\r\n[2]\r\n[1\r\n]\r\n[2\r\n]\r\n```\r\n\r\nNote how the trailing newlines were retained in the output from the 2nd command.\r\n\r\nEnvironment data\r\n----------------\r\n\r\n```powershell\r\nPowerShell Core v6.0.0-alpha (v6.0.0-alpha.18) on macOS 10.12.4\r\n```\r\n",
  "closed_at": "2017-09-01T20:01:44Z",
  "comments": [
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "Hey @iSazonov,\r\n\r\nJust wondering if this could be tied up with this other issue experiencing with Import-Csv:\r\n\"Import-Csv does not handle newlines containing just \\r (Carriage Return) #3692\"\r\n\r\nCan someone confirmed this?\r\n\r\n:)",
      "created_at": "2017-05-05T17:11:02Z",
      "updated_at": "2017-05-05T17:11:02Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@MaximoTrinidad: The other issue is somewhat related, though in the case of `Import-Csv` the proper fix is to have it accept `\\r`-only line breaks too (in line with `Get-Content`), so I see less of a need for an explicit `-Delimiter` parameter there.",
      "created_at": "2017-05-05T17:15:55Z",
      "updated_at": "2017-05-05T17:16:07Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "Thanks @mklement0!\r\n",
      "created_at": "2017-05-05T17:21:30Z",
      "updated_at": "2017-05-05T17:21:30Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I agree that both should work uniformly `Get-Content` and `Get-Content -Delimiter`. Although the parameter name `LineTerminator` is more suitable.\r\n\r\nAnd it is an other issue -  `Import-Csv` don't use FileProvider code. Although worth discussing that all file cmdlets (Out-File, Import-Csv, Export-Csv ...)  have been based on FileProvider code to work uniformly.\r\n\r\n/cc @jeffbi ",
      "created_at": "2017-05-05T19:56:02Z",
      "updated_at": "2017-05-05T19:56:02Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov: \r\n\r\nHistorically, there's been a lot of confusion around the terms _separator_, _delimiter_, and _terminator_.\r\n\r\nI agree that `-Delimiter` is not a great name, and that _terminator_ is more appropriate here - though, arguably, we're then not dealing with _lines_ anymore, but with the abstraction of _records_ (the terminology adopted by `awk` for instance, which has otherwise settled on _separator_, unfortunately).\r\n\r\nTherefore, bypassing the secondary issue of _line_ vs. _record_, perhaps defining `-Terminator` as an alias for `-Delimiter` is appropriate (`-Delimiter` currently has no alias).\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
      "created_at": "2017-05-09T23:41:29Z",
      "updated_at": "2017-05-09T23:41:29Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@mklement0 We could rely on the W3C standard - [Model for Tabular Data and Metadata on the Web\r\nline terminators](http://www.w3.org/TR/2015/REC-tabular-data-model-20151217/) (from https://github.com/PowerShell/PowerShell/issues/3692#issuecomment-299393554)",
      "created_at": "2017-05-10T05:08:14Z",
      "updated_at": "2017-05-10T05:08:38Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov:  \r\n\r\nIn the context of _CSV_ files, specifically, which are _line-oriented_, _line_ terminator is the right term.\r\n\r\nBy contrast, by allowing _arbitrary_ terminator strings with `-Delimiter`, what a terminator terminates is no longer necessarily a _line_: with a terminator other than a newline (in any of its variations), any number of lines may then occur between instances of the terminator.  \r\n\r\nIn other words: the units of data may themselves be _multi-line_, so calling such a unit a _line_ is inappropriate.\r\n\r\nThat's why `awk` chose _record_, for instance, but my point is that it isn't necessary for the parameter name to reflect a term for the data unit, given that only _one_ kind of terminator is supported (for the implied lines / data units).\r\n\r\nOn a meta note: even though the label of your link suggests that it is to a specific comment on the issue page, the link is just to the issue page itself.\r\nA recent post by @lzybkr exhibited the same problem.\r\nHow are you generating these links? Is this a GitHub bug?",
      "created_at": "2017-05-11T05:45:11Z",
      "updated_at": "2017-05-11T05:45:11Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@mklement0 You can copy such links from post header datetime string \"mklement0  commented _**9 minutes ago**_\". \r\nIt is GitHub bug.",
      "created_at": "2017-05-11T05:57:41Z",
      "updated_at": "2017-05-11T05:57:41Z"
    }
  ],
  "created_at": "2017-05-05T15:13:32Z",
  "number": 3706,
  "state": "closed",
  "title": "Get-Content -Delimiter unexpectedly keeps the delimiter in the lines returned",
  "updated_at": "2017-09-02T16:48:13Z"
}