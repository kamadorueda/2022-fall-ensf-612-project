{
  "_url": "https://github.com/PowerShell/PowerShell/issues/1233",
  "author": "lzybkr",
  "body": "The module name is too generic, maybe BuildPowerShell.psm1?\n\nAnd the prefix for commands in the module shouldn't be PS - that prefix belongs to the product, not the tool that builds the product.\n\nHere are some possible names (with almost no real thought here):\n\nStart-PSBootStrap => Start-BootstrapBuildPowerShell\nStart-PSBuild => Start-BuildPowerShell\nStart-PSPackage => Start-PackagePowerShell\nStart-PSPester => Start-TestPowerShell -Pester\nStart-PSxUnit => Start-TestPowerShell -xUnit\n\nAssuming the above sounds good, some aliases are desirable too:\n\nStart-BootstrapBuildPowerShell => sbbps\nStart-BuildPowerShell => sbps\nStart-TestPowerShell => stps\n",
  "closed_at": "2017-05-22T23:26:03Z",
  "comments": [
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "My view on it:\n- `build.*` is an expected and discoverable name \n- the module is not a generic-purpose module (i.e. we never will publish it into a gallery), so distinct name is not needed.\n- Same goes about the function names.\n- Agree, we need to change **PS** prefix.\n- Aliases like `sbbps`, etc make me sad.\n",
      "created_at": "2016-06-29T01:51:31Z",
      "updated_at": "2016-06-29T01:51:54Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "I expect our build to be a pattern others follow, so we should keep that in mind.\n\nbuild.psm1 is fine if you like the razzle model of a new shell for each project.  I'm not sure that's what we want though.\n\nSame goes for function names - Start-Build - fine if you create a new shell for each project you work in, but not so nice if you work in multiple projects.\n",
      "created_at": "2016-06-29T01:57:21Z",
      "updated_at": "2016-06-29T01:57:21Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "I see your reasoning. I don't like razzle model, but not that part of it.\nIt's ok to ask people run some command, when they switch context.\nI.e. in python it's common to use [virtualenvs](http://docs.python-guide.org/en/latest/dev/virtualenvs/).\nYou need to run a command to enter another virtual env, when you switch project.\n\nSame way, it could be our pattern: we are using generic names (i.e `build.psm1`, `Start-Build`), just force-import the module, when you are switching context.\n",
      "created_at": "2016-06-29T16:47:14Z",
      "updated_at": "2016-06-29T16:47:51Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "You guys got me thinking about implementing a Make-like dependency system in PowerShell... it could work, and it would be awesome, especially with PowerShell being the first (real) cross-platform shell.\n\nI'm also on the side of discoverability with `build.psm1`. I also realized too late back on Windows that PS was being used for PowerShell product cmdlets, heh.\n",
      "created_at": "2016-06-29T17:27:10Z",
      "updated_at": "2016-06-29T17:27:10Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "Like https://github.com/psake/psake?\n",
      "created_at": "2016-06-29T17:28:15Z",
      "updated_at": "2016-06-29T17:28:15Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "That is awesome. @vors, our build module has gotten to the point that it's not simply a wrapper a any more. We've been talking about adding a `Clean` target, and we're having to do dependency checking. I think it makes sense to investigate using `psake` to clean it up.\n",
      "created_at": "2016-06-29T17:31:13Z",
      "updated_at": "2016-06-29T17:31:13Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "I [tried](https://github.com/vors/ZLocation/blob/master/default.ps1) psake and it lacks things that I expected. I.e error handing is non-intuitive (swallows exceptions silently).\n\nOn the other hand, there is an [opportunity](https://github.com/psake/psake/issues/130) to influence the project.\n",
      "created_at": "2016-06-29T17:34:07Z",
      "updated_at": "2016-07-26T17:50:00Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "[Invoke-Build](https://github.com/nightroman/Invoke-Build) looks promising - the author also wrote a maml help file generator I considered using before PlatyPS.\n",
      "created_at": "2016-06-29T17:39:33Z",
      "updated_at": "2016-06-29T17:39:33Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "The reason I think we should move investigate these (and indeed Invoke-Build does look promising) is that we now have at least two pre-build tasks (type catalog generation and resource generation) as well as an upcoming post(?)-build task for crossgen/NGEN, and we want a clean task. Additionally we have xUnit, Pester, MSI, APPX, and Linux / OS X package creation targets.\n\nOur needs are _definitely_ suited to a build tool.\n",
      "created_at": "2016-06-29T17:43:43Z",
      "updated_at": "2016-06-29T17:43:43Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Oh and I forgot to list the native components too, as well as bootstrapping.\n",
      "created_at": "2016-06-29T17:44:48Z",
      "updated_at": "2016-06-29T17:44:48Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Invoke-Build has VSCode integration. I think this is worth pursuing. I'll investigate.\n",
      "created_at": "2016-06-29T17:45:33Z",
      "updated_at": "2016-06-29T17:45:33Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "I would expect problems on Linux / CoreCLR, but definitely worth investigation.\n",
      "created_at": "2016-06-29T17:46:21Z",
      "updated_at": "2016-06-29T17:46:28Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "While we are on this thread, we also should pull things out of `appveyor.yml` into `build.psm1` (or its replacement).\n",
      "created_at": "2016-06-29T21:39:40Z",
      "updated_at": "2016-06-29T21:39:40Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "@vors a fair bit of what's in `appveyor.yml` is already available in `build.psm1`. Check out what I do in the `.travis.yml`; I'm only calling our build functions.\n",
      "created_at": "2016-06-29T21:47:11Z",
      "updated_at": "2016-06-29T21:47:11Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "@andschwa most things there is capturing test results, reporting them and throwing, if there are failures. I agree that it should be moved to `.\\build.psm1`\n",
      "created_at": "2016-07-26T17:51:04Z",
      "updated_at": "2016-07-26T17:51:04Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "@JamesWTruher was going to do that I think.\n",
      "created_at": "2016-07-26T18:24:24Z",
      "updated_at": "2016-07-26T18:24:24Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "It makes testing easier.\n",
      "created_at": "2016-07-26T18:24:33Z",
      "updated_at": "2016-07-26T18:24:33Z"
    },
    {
      "author": "nightroman",
      "author_association": "NONE",
      "body": "Hello,\n\nSorry if this is off-topic or it is too late. The discussion was private and I\ncould not join it. I hope that Invoke-Build still can be useful.\n\n@vors wrote:\n\n> I would expect problems on Linux / CoreCLR, but definitely worth investigation.\n\nTrue, Invoke-Build currently has some known issues (like [#31](https://github.com/nightroman/Invoke-Build/issues/31)) and some\npotential (like a few `\\` in paths). I am working on resolving them.\n",
      "created_at": "2016-08-22T12:35:11Z",
      "updated_at": "2016-08-22T12:35:11Z"
    },
    {
      "author": "nightroman",
      "author_association": "NONE",
      "body": "Invoke-Build v3.0.1 is cross-platform with PowerShell v6.0.0-alpha.\n",
      "created_at": "2016-08-23T02:00:27Z",
      "updated_at": "2016-08-23T02:00:27Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "@nightroman that is awesome! Nice, fast, work. Our build module really should be rewritten in a target driven manner... random scripts are messy.\n",
      "created_at": "2016-08-23T02:05:23Z",
      "updated_at": "2016-08-23T02:05:23Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "I think we're far enough along here that this isn't going to be (nor does it need to be) changed. Closing unless someone has an issue with it. ",
      "created_at": "2017-05-22T23:25:28Z",
      "updated_at": "2017-05-22T23:25:28Z"
    }
  ],
  "created_at": "2016-06-29T01:45:31Z",
  "labels": [
    "Issue-Enhancement",
    "Area-Maintainers-Build"
  ],
  "number": 1233,
  "state": "closed",
  "title": "Rename build.psm1 and commands some of the commands",
  "updated_at": "2017-05-22T23:26:03Z"
}