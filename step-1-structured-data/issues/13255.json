{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13255",
  "author": "smitheroons",
  "body": "Expected behavior: Test-Json should evaluate the input data against the given schema. If the schema requires certain properties to be present, it should fail without those properties.\r\n\r\nActual behavior: Test-Json returns true even if required properties are missing.\r\n\r\nIn the following example, the schema requires a billing address if there is a credit card. The sample data contains a credit card, but no billing address. This passes, but it should fail.\r\n\r\nExample:\r\n```powershell\r\n$demoschema = @'\r\n{\r\n  \"type\": \"object\",\r\n \r\n  \"properties\": {\r\n    \"name\": { \"type\": \"string\" },\r\n    \"credit_card\": { \"type\": \"number\" },\r\n    \"billing_address\": { \"type\": \"string\" }\r\n  },\r\n \r\n  \"required\": [\"name\"],\r\n \r\n  \"dependencies\": {\r\n    \"credit_card\": [\"billing_address\"]\r\n  }\r\n}\r\n'@\r\n \r\n$demoinput = \"{`\"name`\": `\"John Doe`\",`\"credit_card`\": 5555555555555555}\"\r\n \r\n$demoinput | Test-Json -Schema $demoschema\r\n```",
  "closed_at": null,
  "comments": [
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "/cc @iSazonov to comment.",
      "created_at": "2020-07-23T21:16:43Z",
      "updated_at": "2020-07-23T21:16:43Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@smitheroons Thanks for your report!\r\n\r\nWe use [NJsonSchema ](https://github.com/RicoSuter/NJsonSchema) API to validate JSON schema. You could ask in NJsonSchema repository about this behavior.",
      "created_at": "2020-07-24T06:01:14Z",
      "updated_at": "2020-07-24T06:01:14Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@iSazonov Can we label this one as `external`?",
      "created_at": "2020-07-31T15:48:03Z",
      "updated_at": "2020-07-31T15:48:03Z"
    },
    {
      "author": "cchildress",
      "author_association": "NONE",
      "body": "@daxian-dbw / @iSazonov \r\nDo either of you have time to write up a test in .NET to try this in the NJsonSchema library directly?\r\n\r\nIf we don't see this issue in the library directly then it sounds like this is a cmdlet issue.\r\nIf we do see this issue in the library then we have a repro ready to file an upstream bug.",
      "created_at": "2020-07-31T16:47:42Z",
      "updated_at": "2020-07-31T16:47:42Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@cchildress All the cmdlet does it is call two NJsonSchema methods\r\nhttps://github.com/PowerShell/PowerShell/blob/4464d1b4140cc53fa1cf65e95b569e8fd956bba8/src/Microsoft.PowerShell.Commands.Utility/commands/utility/TestJsonCommand.cs#L85-L106",
      "created_at": "2020-07-31T17:37:58Z",
      "updated_at": "2020-07-31T17:37:58Z"
    },
    {
      "author": "Glober777",
      "author_association": "NONE",
      "body": "According to RicoSuter/NJsonSchema#1276, support for dependencies is not implemented in NJsonSchema yet ",
      "created_at": "2021-06-25T16:17:53Z",
      "updated_at": "2021-06-25T16:17:53Z"
    },
    {
      "author": "Glober777",
      "author_association": "NONE",
      "body": "By the way, it is worth mentioning that JsonSchema is now obsolete:\r\nhttps://github.com/PowerShell/PowerShell/blob/4464d1b4140cc53fa1cf65e95b569e8fd956bba8/src/Microsoft.PowerShell.Commands.Utility/commands/utility/TestJsonCommand.cs#L51\r\n\r\nHere are the link to the docs:\r\nhttps://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_Schema_JsonSchema.htm\r\n\r\nThis has been moved to a separate package, which, by the way, does support dependencies:\r\n\r\n```posh\r\nAdd-Type -Path \"C:\\Temp\\JsonSchema\\Bin\\netstandard2.0\\Newtonsoft.Json.Schema.dll\"\r\n\r\n$SchemaJSON = @\"\r\n{\r\n    \"additionalProperties\": false,\r\n    \"properties\": {\r\n    \"PropertyOne\": {\"type\": \"string\"},\r\n    \"PropertyTwo\": {\"type\": \"string\"},\r\n    \"PropertyThree\": {\"type\": \"string\"}\r\n    },\r\n    \"dependencies\":{\r\n        \"PropertyThree\": [\r\n            \"PropertyOne\",\r\n            \"PropertyTwo\"\r\n        ]\r\n    },\r\n    \"type\": \"object\"\r\n}\r\n\"@\r\n\r\n$TestJSON = @\"\r\n{\r\n    \"PropertyThree\": \"qwerty\"\r\n}\r\n\"@\r\n\r\n$ParsedJSON = [Newtonsoft.Json.Linq.JObject]::Parse($TestJSON)\r\n$Schema = [Newtonsoft.Json.Schema.JSchema]::Parse($SchemaJSON)\r\n\r\n$ValidationErrors = New-Object System.Collections.Generic.List[string]\r\n$Result = [Newtonsoft.Json.Schema.SchemaExtensions]::IsValid($ParsedJSON, $Schema, [ref] $ValidationErrors)\r\n\r\n$Result # is $False\r\n\r\n$ValidationErrors # Dependencies for property 'PropertyThree' failed. Missing required keys: PropertyOne, PropertyTwo. Path '', line 1, position 1.\r\n``` \r\n\r\n@iSazonov, is there a chance the Test-JSON cmdlet can be updated to use the new package?\r\n\r\n<blockquote><img src=\"../icons/favicon.ico\" width=\"48\" align=\"right\"><div><strong><a href=\"https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_Schema_JsonSchema.htm\">JsonSchema Class</a></strong></div><div>An in-memory representation of a JSON Schema. JSON Schema validation has been moved to its own package. See https://www.newtonsoft.com/jsonschema for more details.</div></blockquote>",
      "created_at": "2021-06-26T10:07:28Z",
      "updated_at": "2021-06-26T10:08:10Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@Glober777 We use NJsonSchema. \r\nNewtonsoft.Json.Schema is a paid package and we can not use it.",
      "created_at": "2021-06-26T17:18:07Z",
      "updated_at": "2021-06-26T17:18:07Z"
    }
  ],
  "created_at": "2020-07-23T17:53:53Z",
  "labels": [
    "Issue-Question",
    "WG-Cmdlets-Utility"
  ],
  "number": 13255,
  "state": "open",
  "title": "Test-Json passes erroneously when data required in schema is missing ",
  "updated_at": "2021-06-26T17:18:08Z"
}