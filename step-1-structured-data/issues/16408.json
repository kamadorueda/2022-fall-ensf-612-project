{
  "_url": "https://github.com/PowerShell/PowerShell/issues/16408",
  "author": "Stroniax",
  "body": "### Prerequisites\n\n- [X] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\n\n### Steps to reproduce\n\nUpgrading package reference for System.Management.Automation to version 7.2, I got the compiler error CS1061:\r\n```\r\n'IScriptExtent' does not contain a definition for 'File' and no accessible extension method 'File' accepting a first argument of type 'IScriptExtent' could be found (are you missing a using directive or an assembly reference?)\r\n```\r\ndue to this line:\r\n```\r\n// statement is an instance of StatementAst\r\nwriter.WriteLine(\"### File: {0}\", System.IO.Path.GetFileName(statement.Extent.File));\r\n```\r\n\r\nI have confirmed that the property exists in the interface while running PowerShell so it looks like this is just omitted from the reference assembly:\r\n```\r\n[System.Management.Automation.Language.IScriptExtent].GetProperty('File')\r\n```\n\n### Expected behavior\n\n```console\nNo Error\n```\n\n\n### Actual behavior\n\n```console\nCS1061: 'IScriptExtent' does not contain a definition for 'File' and no accessible extension method 'File' accepting a first argument of type 'IScriptExtent' could be found (are you missing a using directive or an assembly reference?)\n```\n\n\n### Error details\n\n_No response_\n\n### Environment data\n\n```powershell\nNA. Referencing System.Management.Automation version 7.2.0\n```\n\n\n### Visuals\n\n_No response_",
  "closed_at": null,
  "comments": [
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "Specifically it's just the ref assembly included in the nuget package.  Opening the ref assembly in dnSpy shows the property missing, but opening the real assembly shows `File` present on `IScriptExtent`",
      "created_at": "2021-11-09T03:41:47Z",
      "updated_at": "2021-11-09T03:41:47Z"
    }
  ],
  "created_at": "2021-11-09T01:22:58Z",
  "number": 16408,
  "state": "open",
  "title": "IScriptExtent.File not in reference assembly for 7.2.0",
  "updated_at": "2021-11-09T03:41:47Z"
}