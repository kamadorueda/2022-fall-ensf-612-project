{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6720",
  "author": "raymsft",
  "body": "Steps to reproduce\r\n------------------\r\nAdd a parameter argument length validation attribute to any C# cmdlet and then run the cmdlet with a parameter value which is expected to fail. e.g. \r\n```\r\n[Parameter(ParameterSetName = MyParameterSet, Mandatory = true, ValueFromPipelineByPropertyName = true)]\r\n[ValidateLength(1, 50)]\r\npublic String MyParameter { get; set; }\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\nA sensible error message.\r\n\r\nActual behavior\r\n---------------\r\nWeird message:  *The character length of the 91 argument is too long.*\r\n```\r\nMy-Cmdlet : Cannot validate argument on parameter 'MyParameter'. The character length of the 91 argument is too\r\nlong. Shorten the character length of the argument so it is fewer than or equal to \"50\" characters, and then try the command\r\nagain.\r\nAt line:1 char:60\r\n+ ... MyParameter M3jfgfjkghdfjksdgfjksfgsjkfhgsjfgskjdhfgsjkhfgsjkhfgskjdh ...\r\n+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : InvalidData: (:) [My-Cmdlet], ParameterBindingValidationException\r\n    + FullyQualifiedErrorId : ParameterArgumentValidationError,namespace.MyCmdlet\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\nMajor  Minor  Build  Revision\r\n-----  -----  -----  --------\r\n5      1      16299  251\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "I can confirm that the issue is present in Core as well (and equally affects advanced functions).\r\n\r\n(Note that, in general, If a problem affects Windows PowerShell only, you should report it at [uservoice.com](https://windowsserver.uservoice.com/forums/301869-powershell) instead.)\r\n\r\nTrying to decipher the message:\r\n\r\n* It sounds like the `91` is the character count of the specific argument passed.\r\n\r\n* \"character length\" is awkward; better to call it \"character count\" or \"string length\".\r\n\r\nThe message for a value that is too _short_ is analogous.\r\n\r\nSomething as simple as simple as the following would do, unifying the too-short and too-long messages and the dropping the _prescriptive_ part (\"Supply an argument ...\") altogether: \r\n\r\n> The character count is {actual-count}, which is outside the permissible range of {lower-bound} to {upper-bound}, inclusively.\r\n\r\nIt's probably worth revising the `[ValidateRange()]` error messages accordingly, which also have some awkwardness (\"less than the minimum allowed _range_ of 2\").\r\n\r\nP.S.: To me, the \"validate argument _on_ parameter\" in the generic prefix sounds awkward too; perhaps \"validate argument _for_\"?\r\n",
      "created_at": "2018-04-25T18:43:58Z",
      "updated_at": "2018-04-25T18:43:58Z"
    }
  ],
  "created_at": "2018-04-24T11:04:29Z",
  "labels": [
    "Issue-Bug",
    "WG-Cmdlets"
  ],
  "number": 6720,
  "state": "open",
  "title": "Bad error message for ValidateLength parameter validation exceptions for cmdlets",
  "updated_at": "2018-04-26T01:19:07Z"
}