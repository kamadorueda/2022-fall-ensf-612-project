{
  "_url": "https://github.com/PowerShell/PowerShell/issues/14019",
  "author": "rgroefer",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 and PowerShell 7+ issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6).\r\n\r\n-->\r\n\r\n## Steps to reproduce\r\n\r\n$cim = New-CimSession -ComputerName myServerFQDN.domain.com\r\nGet-DscLocalConfigurationManager -CimSession $cim\r\n\r\n## Expected behavior\r\n\r\nReturn the LCM meta-configuration data.\r\n\r\n## Actual behavior\r\n\r\nGet-DscLocalConfigurationManager: Cannot process argument transformation on parameter 'CimSession'. Cannot convert the \"CimSession: myServerFQDN.domain.com\" value of type \"Deserialized.Microsoft.Management.Infrastructure.CimSession\" to type \"Microsoft.Management.Infrastructure.CimSession[]\".\r\n\r\n## Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n__PSVersionTable__\r\nName                           Value\r\nPSVersion                      7.0.3\r\nPSEdition                      Core\r\nGitCommitId                    7.0.3\r\nOS                             Microsoft Windows 10.0.17763\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n__PSDesiredStateConfiguration Module Version__\r\nScript     1.0                   PSDesiredStateConfiguration\r\n\r\n## Notable Difference between PS Core and Windows PS\r\n\r\nWindows PowerShell with PSDesiredStateConfiguration module version 1.1 has the CimSession parameter as a CimSession[] type, but PowerShell 7 has it as an Object type.\r\n\r\n__PowerShell 7__\r\n```pwsh\r\nGet-Command Get-DscLocalConfigurationManager\r\n  Get-DscLocalConfigurationManager [[-WarningVariable] <Object>] [[-CimSession] <Object>] \r\n```\r\n\r\n__Windows PowerShell__\r\n```pwsh\r\nGet-Command Get-DscLocalConfigurationManager\r\n  Get-DscLocalConfigurationManager [-CimSession <CimSession[]>]\r\n```\r\n\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "rgroefer",
      "author_association": "NONE",
      "body": "I tried importing the Windows PowerShell version of PSDesiredStateConfiguration module, but I get the same result.\r\n",
      "created_at": "2020-11-09T21:48:40Z",
      "updated_at": "2020-11-09T21:48:40Z"
    },
    {
      "author": "jborean93",
      "author_association": "COLLABORATOR",
      "body": "I believe this is because the [Get-DscLocalConfigurationManager](https://docs.microsoft.com/en-us/powershell/module/psdesiredstateconfiguration/get-dsclocalconfigurationmanager?view=powershell-5.1) is only present in the Windows PowerSell (5.1) `PSDesiredStateConfiguration` module. Running `(Get-Command Get-DscLocalConfigurationManager).Definition` will show that it runs it through a proxy function which ultimately uses `Get-PSImplicitRemotingSession` to run it on Windows PowerShell.\r\n\r\nBecause it runs it in a separate process, any data that is exchanged between the 2 sessions need to be serialized to CLIXML which looses any active information, like a CIM connection, and make it effectively read only. This is why the error states it cannot transform `Deserialized.Microsoft.Management.Infrastructure.CimSession` to `Microsoft.Management.Infrastructure.CimSession[]`.\r\n\r\nWhat you can do to run this command from PowerShell 7 is to wrap you entire call in the inside 1 script block like\r\n\r\n```powershell\r\n$implicitSession = New-PSSession -UseWindowsPowerShell\r\n$dscInfo = Invoke-Command -Session $implicitSession -ScriptBlock {\r\n    $cim = New-CimSession -ComputerName myServerFQDN.domain.com\r\n    Get-DscLocalConfigurationManager -CimSession $cim\r\n}\r\n$implicitSession | Remove-PSSession\r\n```\r\n\r\nThis make sure the CimSession you create exists solely in the Windows PowerShell session and doesn't traverse any boundaries. The only way to natively call `Get-DscLocalConfigurationManager` in PowerShell is for that module to be included in `PSDesiredStateConfiguration` that ships with PowerShell. Considering LCM is probably going away at some point in the future I doubt that will happen.",
      "created_at": "2020-11-09T22:12:43Z",
      "updated_at": "2020-11-10T03:47:48Z"
    }
  ],
  "created_at": "2020-11-09T21:27:23Z",
  "labels": [
    "Issue-Question",
    "Area-DSC"
  ],
  "number": 14019,
  "state": "open",
  "title": "CimSession Parameter Fail on Get-DSCLocalConfigurationManager",
  "updated_at": "2020-11-10T12:31:50Z"
}