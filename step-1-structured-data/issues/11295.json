{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11295",
  "author": "jiasli",
  "body": "# Steps to reproduce\r\n\r\nCreate a batch file `mybatch.cmd` containing:\r\n```cmd\r\n@echo off\r\necho %1\r\necho %2\r\n```\r\n\r\nIn PowerShell call it with\r\n```powershell\r\nPS C:\\Users\\me> .\\mybatch.cmd \"a,b\"\r\na\r\nb\r\nPS C:\\Users\\me> .\\mybatch.cmd 'a,b'\r\na\r\nb\r\nPS C:\\Users\\me> .\\mybatch.cmd --% \"a,b\"\r\n\"a,b\"\r\nECHO is off.  # this is expected in cmd\r\nPS C:\\Users\\me> .\\mybatch.cmd --% 'a,b'\r\n'a\r\nb'            # this is expected in cmd\r\n```\r\n\r\n# Expected behavior\r\n\r\nComma inside the string should be preserved, like when calling it in cmd:\r\n\r\n```cmd\r\nmybatch.cmd \"a,b\"\r\n\"a,b\"\r\nECHO is off.\r\n```\r\n\r\n# Actual behavior\r\n\r\nComma is parsed as [array](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_operators?view=powershell-6#comma-operator-).\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\n$PSVersionTable \r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.2.3\r\nPSEdition                      Core\r\nGitCommitId                    6.2.3\r\nOS                             Microsoft Windows 10.0.18363\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\n```\r\n$PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-preview.6\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-preview.6\r\nOS                             Microsoft Windows 10.0.18363\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```",
  "closed_at": "2019-12-11T00:00:09Z",
  "comments": [
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "It isn't PowerShell that parses the argument as an array, it is _cmd_ that interprets unquoted token `a,b` as _two_ arguments, because not only _spaces_ but also `,` and `;` can serve as argument separators.\r\n\r\nPowerShell performs re-quoting as needed behind the scenes, and in the absence of _spaces_ inside arguments, it currently decides that enclosing the value in double quotes is _not_ necessary, so that both `.\\mybatch.cmd \"a,b\"` and `.\\mybatch.cmd 'a,b'` end up getting called as `.\\mybatch.cmd a,b`, at which point cmd considers `a` and `b` separate arguments.\r\n\r\nThis re-quoting logic does not special-case calling `cmd.exe` or batch files, and is currently generally broken - see #1995 \r\n\r\n**The workaround is to use _embedded_ double quoting**:\r\n\r\n```powershell\r\n.\\mybatch.cmd '\"a,b\"'\r\n.\\mybatch.cmd \"`\"a,b`\"\"\r\n```\r\n\r\nYou can use the `iep` function defined [here](https://github.com/PowerShell/PowerShell/issues/1995#issuecomment-562334606) to automate this quoting  and to compensate for the other ways in which re-quoting is broken.\r\n\r\nNote that the planned fix for #1995, detailed in [this RFC](https://github.com/PowerShell/PowerShell-RFC/pull/90), will _break_ the workaround (as it will break all other current workarounds) and - unless `cmd.exe` / batch-file calls are special-cased - would offer no alternative (other than the limited `--%` approach) - see [this comment](https://github.com/PowerShell/PowerShell-RFC/pull/90#issuecomment-552231174).",
      "created_at": "2019-12-09T14:27:22Z",
      "updated_at": "2019-12-09T14:27:22Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2019-12-11T00:00:08Z",
      "updated_at": "2019-12-11T00:00:08Z"
    }
  ],
  "created_at": "2019-12-09T05:27:18Z",
  "number": 11295,
  "state": "closed",
  "title": "When calling cmd script, comma in string is not preserved ",
  "updated_at": "2019-12-11T00:00:09Z"
}