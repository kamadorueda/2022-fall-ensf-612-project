{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3304",
  "author": "schittli",
  "body": "Good evening\r\n\r\nIf we use the -Include argument with Get-Childitem on the FileSystem Provider, then Get-Childitem changes it's behaviour:\r\n\r\nSteps to reproduce\r\n------------------\r\n**OK: Without the -Include argument Get-ChildItem works as expected:** \r\n```\r\nPS C:\\Temp> Get-ChildItem\r\n    Directory: C:\\Temp\\= EdNe - Ber\u00f6a\r\nMode                LastWriteTime         Length Name\r\n----                -------------         ------ ----\r\n-a----       10.03.2017     16:48         106678 1001-600x600.jpg\r\n-a----       10.03.2017     16:48          58204 1519-600x600.jpg\r\n```\r\n**Inconsequent and therefore annyoing if we use the -Include Argument**\r\n```\r\nPS C:\\Temp> Get-ChildItem -Include @('*.*')\r\nPS C:\\Temp> _(no result returned)_\r\n\r\n```\r\nExpected behavior\r\n-----------------\r\nOf course, \r\n`Get-ChildItem -Include @('*.*') `\r\nshould return the same results as \r\n`Get-ChildItem`\r\n\r\nActual behavior\r\n---------------\r\nIf we use the -Include Argument, then Get-ChildItem must process the same directories - independent if we use the -Indlude Argument.\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```\r\nName                           Value\r\n----                           -----\r\nPSVersion                      5.1.14393.693\r\nPSEdition                      Desktop\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nBuildVersion                   10.0.14393.693\r\nCLRVersion                     4.0.30319.42000\r\nWSManStackVersion              3.0\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\n\r\n```",
  "closed_at": null,
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Agree that this is not intuitive, but it appears to be `by design` based on the help:\r\n\r\n```\r\n-Include <String[]>\r\n        Specifies, as a string array, an item or items that this cmdlet includes in the \r\n        operation. The value of this parameter qualifies the Path parameter. Enter a path \r\n        element or pattern, such as *.txt. Wildcards are permitted.\r\n        \r\n        The Include parameter is effective only when the command includes the Recurse \r\n        parameter or the path leads to the contents of a directory, such as C:\\Windows\\*, \r\n        where the wildcard character specifies the contents of the C:\\Windows directory.\r\n```\r\n\r\n```powershell\r\nget-childitem * -Include *.jpg\r\n```\r\nDoes what you expect.\r\nI'm not familiar with the history of this provider and why this design was chosen.  It seems that if `-include` is used, it implies `*` if path is not specified.",
      "created_at": "2017-03-10T21:56:27Z",
      "updated_at": "2017-03-10T21:57:57Z"
    },
    {
      "author": "schittli",
      "author_association": "NONE",
      "body": "Good evening Steve,\r\nThank you very much for your answer and help!, yes, I've noted that it is by design. \r\n\r\nBut this shouldn't be a reason to not enhance Powershell and wipe out bad design decisions.\r\nEvery programming language is great - if it operates as the programmer expect. If it doesn't, it should be fixed.\r\n\r\nI even think it's much more important for the most used commands, because they annoy every day.\r\n(In this example, we can not just add _-Include *.jpg_ to an existing command to get what we expect)\r\n\r\nI know it's always a problem if existing commands are changed in their old behaviour, but it can easily be solved by offering good release notes and a global switch, for example using\r\n`#Requires -Version xxx`\r\nor a new one:\r\n`#Uses-Command-Set -Version xxx`\r\n\r\nKind regards, Thomas",
      "created_at": "2017-03-10T22:19:39Z",
      "updated_at": "2017-03-10T22:19:39Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@BrucePay do you know the history of this?",
      "created_at": "2017-03-10T22:23:18Z",
      "updated_at": "2017-03-10T22:23:18Z"
    },
    {
      "author": "Jaykul",
      "author_association": "CONTRIBUTOR",
      "body": "What you want is the `-Filter` parameter.",
      "created_at": "2017-03-11T15:59:29Z",
      "updated_at": "2017-03-11T15:59:29Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Interesting result:\r\n```powershell\r\nPS C:\\temp\\a.b>  Get-ChildItem -Include @('*.*')\r\n\r\n\r\n    Directory: C:\\temp\\a.b\r\n\r\n\r\nMode                LastWriteTime         Length Name\r\n----                -------------         ------ ----\r\n-a----        3/11/2017   7:28 PM              0 Document2.txt\r\n```\r\nHere key is \"a.b\"",
      "created_at": "2017-03-11T16:44:56Z",
      "updated_at": "2017-03-11T16:44:56Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@Jaykul: The `-Filter` parameter is no real substitute, unfortunately: its provider-specific wildcard language has legacy quirks and fewer features than PowerShell's, and it is limited to _one_ argument. (That said, if its capabilities are sufficient, It is worth using to greatly speed things up.)\r\n\r\n`-Include` is a generic, provider-independent, _array-valued_ parameter, and what makes its current behavior counter-intuitive is that you'd think that the _Child_ in `Get-ChildItem` _implies_ that the `-Include` pattern is applied to `*`, i.e., all child items, but that's currently not the case. (You do get that behavior if you add `-Recurse`, but that changes the semantics, obviously).\r\n\r\nBy contrast, with `Get-Item` the current behavior makes sense.\r\n",
      "created_at": "2017-03-11T17:24:44Z",
      "updated_at": "2017-03-11T17:27:08Z"
    },
    {
      "author": "ditta95aR",
      "author_association": "NONE",
      "body": "Windows phone\n",
      "created_at": "2017-03-11T18:01:32Z",
      "updated_at": "2017-03-11T18:01:32Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov: I suspect you know it, but just to spell it out explicitly:\r\n\r\n`-Include` and `-Exclude` operate on the _leaf component_ of the `-Path` value (at least with the Filesystem provider).\r\n\r\nIn your case, `a.b` is the (implied) leaf component, and wildcard `*.*` matches it, so `Get-ChildItem` shows the content of `C:\\temp\\a.b`.\r\n\r\n(Note that the documentation does a poor job of explaining that.)\r\n\r\n@SteveL-MSFT: \r\n\r\n> It seems that if `-include` is used, it implies `*` if path is not specified.\r\n\r\nThe fact that `*` is _not_ implied is the cause of the confusion - in @iSazonov's example, the wildcard is matched against the _directory name_ FIRST, and only THEN to the names of the items _in_ the directory, as one is likely to expect.  \r\nIn other words: The explicit need to specify `*` - either in isolation for the current dir., or by appending it to an explicit path being passed to `-Path` - is what constitutes the pitfall.\r\n\r\n",
      "created_at": "2017-03-14T13:54:21Z",
      "updated_at": "2020-01-22T16:50:49Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@mklement0 that was a typo on my part, I was trying to say `*` **should** be implied to make it useful rather than giving no results",
      "created_at": "2017-03-14T15:43:56Z",
      "updated_at": "2017-03-14T15:44:21Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Because it took me a while to figure it out, I thought I'd share how to get the desired behavior with `-Include` / `-Exclude` (in the absence of `-Recurse`)  currently:\r\n\r\nTo get what you might _expect_ something like\r\n    \r\n```powershell\r\nGet-ChildItem -Include *.*    # or, mostly, Get-ChildItem -Filter *.*\r\n```\r\nto do, you must:\r\n\r\n * switch to `Get-Item` from `Get-ChildItem` - if you don't, any child _directories_ among the included items will output _their_ children, not the child directories themselves.\r\n\r\n * use `*` in the absence of a path / append `/*` to an existing path; e.g.:\r\n\r\n```powershell\r\n Get-Item * -Include *.*\r\n```\r\n\r\nAn explanation can be found in [this SO answer](http://stackoverflow.com/a/38308796/45375) of mine.",
      "created_at": "2017-03-28T20:32:53Z",
      "updated_at": "2017-03-28T20:32:53Z"
    },
    {
      "author": "schittli",
      "author_association": "NONE",
      "body": "Hi mklement0\r\nthank you very much for sharing your work!\r\n\r\n_**btw: It's the best 'chain of evidence'** (I don't find the right english term) **that the actual implementation is not what we should have.**_\r\n\r\nkind regards, Thomas",
      "created_at": "2017-03-29T11:52:34Z",
      "updated_at": "2017-03-29T11:52:34Z"
    }
  ],
  "created_at": "2017-03-10T20:00:02Z",
  "labels": [
    "Issue-Discussion",
    "WG-Cmdlets-Management",
    "WG-Engine-Providers",
    "Area-FileSystem-Provider"
  ],
  "number": 3304,
  "state": "open",
  "title": "Get-ChildItem with FileSystem Provider: behaves inconsequent with -Include",
  "updated_at": "2021-11-29T17:54:21Z"
}