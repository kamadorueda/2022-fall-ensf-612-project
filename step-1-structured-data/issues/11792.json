{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11792",
  "author": "MartinSGill",
  "body": "I'm trying to load IISAdmininistration module on Server 2019 (core), but it's failing for me.\r\n\r\nI do not understand why. I've tried loading the one installed on the system, I've also tried installing it from PSGallery and importing that one, with the same result.\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\nPS> Import-Module IISAdministration -SkipEditionCheck  -RequiredVersion 1.1.0.0\r\nImport-Module: Could not load file or assembly 'Microsoft.Web.Administration, Version=7.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'. The system cannot find the file specified.\r\nPS> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-rc.2\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-rc.2\r\nOS                             Microsoft Windows 10.0.17763\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n```\r\n\r\n# Expected behavior\r\n\r\nThis is what happens in Powershell 5 on the same machine, basically I typed `exit` then `powershell`\r\n\r\n```powershell\r\nPS> Import-Module IISAdministration  -RequiredVersion 1.1.0.0\r\nGet-Command -Module IISAdministration\r\n\r\nCommandType     Name                                               Version    Source\r\n-----------     ----                                               -------    ------\r\nCmdlet          Clear-IISCentralCertProvider                       1.1.0.0    IISAdministration\r\nCmdlet          Clear-IISConfigCollection                          1.1.0.0    IISAdministration\r\nCmdlet          Disable-IISCentralCertProvider                     1.1.0.0    IISAdministration\r\n...\r\n\r\nPS> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      5.1.17763.316\r\nPSEdition                      Desktop\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nBuildVersion                   10.0.17763.316\r\nCLRVersion                     4.0.30319.42000\r\nWSManStackVersion              3.0\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\n\r\n```\r\n\r\nIt seems to work on my windows 10 machine. Are additional steps required, or is this a bug?\r\n",
  "closed_at": "2020-02-08T13:00:09Z",
  "comments": [
    {
      "author": "doctordns",
      "author_association": "COLLABORATOR",
      "body": "Not that it helps, but this works OK here. Without the edition check.\r\n\r\n```powershell\r\nPS C:\\Windows\\System32> ipmo iisadministration\r\nWARNING: Module iisadministration is loaded in Windows PowerShell using WinPSCompatSession remoting session; please note that all input and output of commands from this module will be deserialized objects. If you want to load this module into PowerShell Core please use 'Import-Module -SkipEditionCheck' syntax.\r\nPS C:\\Windows\\System32> gmo\r\n\r\nModuleType Version    PreRelease Name                                ExportedCommands\r\n---------- -------    ---------- ----                                ----------------\r\nScript     1.0                   iisadministration                   {Clear-IISCentralCertProvider, Clear-IISConfigCol\u2026\r\nManifest   7.0.0.0               Microsoft.PowerShell.Management     {Add-Content, Clear-Content, Clear-Item, Clear-It\u2026\r\nManifest   7.0.0.0               Microsoft.PowerShell.Utility        {Add-Member, Add-Type, Clear-Variable, Compare-Ob\u2026\r\nScript     2.0.0      rc2        PSReadLine                          {Get-PSReadLineKeyHandler, Get-PSReadLineOption, \u2026\r\nScript     1.0                   ServerManager                       {Disable-ServerManagerStandardUserRemoting, Enabl\u2026\r\n```\r\n\r\nThe IIS Administration module does sort of load OK (Trying RC2 here). But the IIS: PSDrive is not imported. ",
      "created_at": "2020-02-06T16:11:09Z",
      "updated_at": "2020-02-06T16:11:09Z"
    },
    {
      "author": "he852100",
      "author_association": "NONE",
      "body": "Because `powershell core`(6,7) does not support `windows powershell`(5,4,3,2) module",
      "created_at": "2020-02-06T17:09:51Z",
      "updated_at": "2020-02-06T17:09:51Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "The issue is reported in https://github.com/PowerShell/PowerShellModuleCoverage/issues/14",
      "created_at": "2020-02-06T17:22:11Z",
      "updated_at": "2020-02-06T17:22:11Z"
    },
    {
      "author": "MartinSGill",
      "author_association": "NONE",
      "body": "@iSazonov Are you sure? I found that issue before I wrote this one, and the other one is about importing webadministration module. I'm trying to import IISAdministration, which \r\n\r\n> I believe we are favouring the IISAdministration module for porting. \r\nhttps://github.com/PowerShell/PowerShellModuleCoverage/issues/14#issuecomment-534405763\r\n\r\nI'm also curious as to why it works on Windows 10 for me and appears to work for @doctordns . What's different?",
      "created_at": "2020-02-07T06:10:02Z",
      "updated_at": "2020-02-07T06:10:02Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "IISAdministration module is not compatible with PowerShell Core and you can not directly load and use it in 7.0. As @doctordns mentioned you can use WinCompat feature and load the module without edition check.",
      "created_at": "2020-02-07T07:01:53Z",
      "updated_at": "2020-02-07T07:01:53Z"
    },
    {
      "author": "MartinSGill",
      "author_association": "NONE",
      "body": "@iSazonov I get the same error when I load it without skipedition check.\r\n\r\n````\r\nPS> Import-Module -Name IISAdministration\r\nImport-Module: Could not load file or assembly 'Microsoft.Web.Administration, Version=7.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'. The system cannot find the file specified.\r\n````\r\n\r\nI'm starting to think there's something wrong with my Server install.",
      "created_at": "2020-02-07T07:38:48Z",
      "updated_at": "2020-02-07T07:39:14Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Have you `Microsoft.Web.Administration` in GAC? Do you install IIS admin tools?",
      "created_at": "2020-02-07T07:52:19Z",
      "updated_at": "2020-02-07T07:52:49Z"
    },
    {
      "author": "MartinSGill",
      "author_association": "NONE",
      "body": "Yes to the latter. I'm actually in the process of trying to figure out the minimum set of features/components I need my app.",
      "created_at": "2020-02-07T08:19:30Z",
      "updated_at": "2020-02-07T08:19:30Z"
    },
    {
      "author": "doctordns",
      "author_association": "COLLABORATOR",
      "body": "> IISAdministration module is not compatible with PowerShell Core and you can not directly load and use it in 7.0. As @doctordns mentioned you can use WinCompat feature and load the module without edition check.\r\n\r\nI am not sure this is good advice (loading with -SkipEditionCheck).  Mainly because it does not work:\r\n\r\n```powershell\r\nPS C:\\Windows\\System32> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-rc.2\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-rc.2\r\nOS                             Microsoft Windows 10.0.17763\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\nPS C:\\Windows\\System32> Import-Module -Name IISAdministration -SkipEditionCheck\r\nImport-Module: Could not load file or assembly 'Microsoft.Web.Administration, Version=7.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'. The system cannot find the file specified.\r\nPS C:\\Windows\\System32>\r\n```\r\n\r\nSo not only is the error message rather obtuse, but the module is not loadable within a PWSH 7 session in any event. Loading it in the compatibility session works and the IISAdministration module mainly functional. The OP needs to work out why it's not being loaded in the compat session - is the OP actually running the latest RC?\r\n\r\nI think the compatibility solution is helpful but it leaves a lot of work undone. I do not feel this solution is really a) the best the team can do, and b) really ready for prime time. But to ship is to choose - and maybe the team is choosing to ship what arguably, is an incomplete solution with no formal mitigation plans yet advised.\r\n\r\n\r\n",
      "created_at": "2020-02-07T09:52:32Z",
      "updated_at": "2020-02-07T09:52:32Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> I am not sure this is good advice (loading with -SkipEditionCheck). \r\n\r\n:-) Sorry, I meant just \"do not use -SkipEditionCheck\"",
      "created_at": "2020-02-07T10:44:08Z",
      "updated_at": "2020-02-07T10:44:08Z"
    },
    {
      "author": "doctordns",
      "author_association": "COLLABORATOR",
      "body": "I agree - the advice in that error message is poor. Telling the user to use -SkipEditionCheck is not useful or helpful/ \r\n\r\nWe have an issue with compatibility that will never be 100% resolved until product teams 'fix' their modules to accommodate .NET Core - like the AD module.  I know for some this will be hard (eg WSUS UpdateServices module). Having less than 100%, but still high, at RTM is, to me, is find given that so much works. @SteveL-MSFT said he wanted 90% and while I've not added it up, it's in that ballpark.  We want IT Pros to migrate to PowerShell 7 with a great compatibility story.\r\n\r\nTo me, our issue is two-fold: doing what can be done to move the meter (and being able to publicise the timetable to 100%) AND ensuring the user gets good actionable feedback when they enter into that 10% area.  I'd like to see, at PowerShell 7 release a confirmation as to when/how those incompatible modules are to be moved to .NET Core and PowerShell 7. Let's get a commitment to the roadmap to .NET core.\r\n\r\nAnd when compatibility can be achieved, the user experience has to be good too. The OP;'s error message should not happen. When you try to load UpdateServices or BestPractices, you should get a good failure message (and maybe a URL reference for more info). The latest build nearly does this!   All other modules should load with the warning messages I see in RC2. It would be nice to have that message explicitly state that a provider is NOT being imported - but you can get to it via Invoke-Command.\r\n\r\nAnd finally, when you try to load a compatible or semi-compatible module, like Server Manager and IIS, jit would be great to import the Display XML into the PowerShell 7 session to give the best possible user experience. \r\n\r\nI feel we are nearly there on a good compatibility story. We can/should do that little bit better.",
      "created_at": "2020-02-07T11:33:05Z",
      "updated_at": "2020-02-07T11:33:05Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as external and has not had any activity for **1 day**. It has been be closed for housekeeping purposes.",
      "created_at": "2020-02-08T13:00:08Z",
      "updated_at": "2020-02-08T13:00:08Z"
    },
    {
      "author": "PeterHodges15",
      "author_association": "NONE",
      "body": "Regarding managing IIS servers via PowerShell (IISAdministration),  MS does not install the required DLL for this to work.  They must be distracted with other priorities.\r\nDoes not even work on the latest preview.  ",
      "created_at": "2020-07-16T23:10:45Z",
      "updated_at": "2020-07-16T23:10:45Z"
    }
  ],
  "created_at": "2020-02-06T13:39:08Z",
  "labels": [
    "Issue-Question",
    "Resolution-External"
  ],
  "number": 11792,
  "state": "closed",
  "title": "Unable to Load IISAdministration module in Server 2019, pwsh7-rc2",
  "updated_at": "2020-07-16T23:10:45Z"
}