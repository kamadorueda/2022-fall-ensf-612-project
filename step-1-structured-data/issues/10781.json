{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10781",
  "author": "vexx32",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nRefactor `IsNullLike()` to evaluate the most commonly-expected `null`-like values first.\r\n\r\nNew order of evaluation:\r\n\r\n1. `IsNull(value)`:\r\n    1. `value == null` \r\n    1. `value == AutomationNull.Value`\r\n2. `value == DBNull.Value`\r\n3. `value == AutomationNull.Value`\r\n\r\n## PR Context\r\n\r\n`IsNullLike()` is used in binders like `-eq` (e.g., `$null -eq $value)` and it makes the most sense to evaluate in order of the most common null/null-like values first so that the code path short-circuits in the most common situations.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [ ] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [x] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2019-10-16T06:38:40Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "It was  in #9794 (milestone 7.0-Preview2) as a breaking change without PowerShell Committee approve. So add the labels.",
      "created_at": "2019-10-12T19:44:05Z",
      "updated_at": "2019-10-12T19:45:08Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov the committee approved the change in the original issue (see https://github.com/PowerShell/PowerShell/issues/9561#issuecomment-492843597) \ud83d\ude42 ",
      "created_at": "2019-10-13T01:50:54Z",
      "updated_at": "2019-10-13T01:51:19Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "My concern about __order__.",
      "created_at": "2019-10-13T11:37:35Z",
      "updated_at": "2019-10-13T11:37:35Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Why is changing the order a breaking change? It doesn't change the behavior of this method, does it?",
      "created_at": "2019-10-14T23:19:43Z",
      "updated_at": "2019-10-14T23:19:43Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Nope, it still checks the same things, just in a different order. \ud83d\ude42 ",
      "created_at": "2019-10-15T00:07:57Z",
      "updated_at": "2019-10-15T00:07:57Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I see the logic is more simple than I thought.",
      "created_at": "2019-10-15T03:16:42Z",
      "updated_at": "2019-10-15T03:16:42Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.0.0-preview.5` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.0.0-preview.5)\n",
      "created_at": "2019-10-23T19:08:00Z",
      "updated_at": "2019-10-23T19:08:00Z"
    }
  ],
  "created_at": "2019-10-12T19:30:02Z",
  "number": 10781,
  "state": "closed",
  "title": "Use more effective evaluation order in LanguagePrimitives.IsNullLike()",
  "updated_at": "2019-10-23T19:08:00Z"
}