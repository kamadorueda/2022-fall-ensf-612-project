{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10488",
  "author": "Glober777",
  "body": "Hi!\r\n\r\nI have a module that instantiates a web service proxy object (through `New-WebServiceProxy`) generated based on a fairly large WSDL definition. Within that definition there some methods that contain optional parameters, i.e.:\r\n```\r\n<xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"SomeParameter\" nillable=\"true\" type=\"xsd:string\" />\r\n```\r\n\r\nThe problem is that when I invoke those methods without specifying anything for the optional parameters, they get serialized as:\r\n```\r\n<SomeParameter xsi:nil=\"true\" xmlns=\"\" />\r\n```\r\n\u2026which, in turn is being interpreted by the server as if it was set to Null and acted accordingly. Imagine So in order to call a method that updates some object in a database, I have to know all its property values in advance before and populate them accordingly to avoid them being overwritten by nulls.\r\n\r\nWhat I'd like to have instead is an ability to control whether certain properties should be serialized or not. Is this possible?\r\n\r\nWhile googling around, I came across a suggestion to override EmitDefaultValue attribute, but I can't figure out how that can be done at runtime and not even sure it is applicable to the class generated by New-WebServiceProxy. Another suggestions were to use ShouldSerialize methods and XMLIgnore attributes, but I couldn't figure out how to apply that. Does anyone have any idea?\r\n\r\nThanks!",
  "closed_at": "2019-09-07T00:00:35Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@Glober777 The cmdlet is not in the repo. Please use forums and other resources for support.",
      "created_at": "2019-09-05T13:27:12Z",
      "updated_at": "2019-09-05T13:27:12Z"
    },
    {
      "author": "Glober777",
      "author_association": "NONE",
      "body": "@iSazonov Actually, it is in the repo:\r\nhttps://github.com/PowerShell/PowerShell/blob/master/src/Microsoft.PowerShell.Commands.Management/commands/management/WebServiceProxy.cs\n\n<blockquote><img src=\"https://avatars0.githubusercontent.com/u/11524380?s=400&v=4\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicon.ico\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/PowerShell/PowerShell\">PowerShell/PowerShell</a></strong></div><div>PowerShell for every system! Contribute to PowerShell/PowerShell development by creating an account on GitHub.</div></blockquote>",
      "created_at": "2019-09-05T14:08:18Z",
      "updated_at": "2019-09-05T14:08:19Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@Glober777 It is deprecated https://github.com/PowerShell/PowerShell/issues/2240\r\nIt will continue to work in Windows PowerShell but not in PowerShell Core.",
      "created_at": "2019-09-05T14:27:14Z",
      "updated_at": "2019-09-05T14:27:14Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2019-09-07T00:00:34Z",
      "updated_at": "2019-09-07T00:00:34Z"
    }
  ],
  "created_at": "2019-09-05T13:06:36Z",
  "labels": [
    "Issue-Question",
    "Resolution-Answered"
  ],
  "number": 10488,
  "state": "closed",
  "title": "New-WebServiceProxy and calling methods with optional parameters ",
  "updated_at": "2019-09-07T00:00:35Z"
}