{
  "_url": "https://github.com/PowerShell/PowerShell/issues/8157",
  "author": "kort3x",
  "body": "I like the idea of impact levels for cmdlets.\r\nWhat I dont like is that almost all stock cmdlets have \"medium\" as value for ConfirmImpact.\r\n\r\n```\r\nGet-Command -CommandType Cmdlet | \r\n  ForEach-Object { \r\n    $type = $_.ImplementingType\r\n    if ($type -ne $null)\r\n    {\r\n      $type.GetCustomAttributes($true) | \r\n      Where-Object { $_.VerbName -ne $null } |\r\n      Select-Object @{Name='Name';\r\n      Expression={'{0}-{1}' -f $_.VerbName, $_.NounName}}, ConfirmImpact\r\n    }\r\n  } |\r\n  Sort-Object ConfirmImpact -Descending\r\n```\r\n\r\nRemove-Item should behave differently from Get-Date.",
  "closed_at": "2019-01-26T11:12:01Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Medium is the default when one doesn't spare the time to define a specific level. But I agree, the stock cmdlets should be more thorough in which has medium or low confirmImpact.",
      "created_at": "2018-10-31T16:13:49Z",
      "updated_at": "2018-10-31T16:13:49Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "If there are specific proposals on `ConfirmImpact` per cmdlet, we can review that.",
      "created_at": "2018-10-31T16:17:15Z",
      "updated_at": "2018-10-31T16:17:15Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "these are the cmdlets that I'd personally expect to have a ConfirmImpact of Low, pilfered from the output of the command @kort3x wrote:\r\n\r\n```\r\nName                              ConfirmImpact\r\n----                              -------------\r\nCompare-Object                           Medium\r\nConvertFrom-Csv                          Medium\r\nConvertFrom-Json                         Medium\r\nConvertFrom-Markdown                     Medium\r\nConvertFrom-StringData                   Medium\r\nConvert-Path                             Medium\r\nConvertTo-Csv                            Medium\r\nConvertTo-Html                           Medium\r\nConvertTo-Json                           Medium\r\nConvertTo-Xml                            Medium\r\nExport-ModuleMember                      Medium\r\nForEach-Object                           Medium\r\nFormat-Custom                            Medium\r\nFormat-Hex                               Medium\r\nFormat-List                              Medium\r\nFormat-Table                             Medium\r\nFormat-Wide                              Medium\r\nGet-Alias                                Medium\r\nGet-ChildItem                            Medium\r\nGet-Command                              Medium\r\nGet-ComputerInfo                         Medium\r\nGet-Content                              Medium\r\nGet-Culture                              Medium\r\nGet-Date                                 Medium\r\nGet-Event                                Medium\r\nGet-EventSubscriber                      Medium\r\nGet-ExperimentalFeature                  Medium\r\nGet-FileHash                             Medium\r\nGet-FormatData                           Medium\r\nGet-Help                                 Medium\r\nGet-History                              Medium\r\nGet-Host                                 Medium\r\nGet-Item                                 Medium\r\nGet-ItemProperty                         Medium\r\nGet-ItemPropertyValue                    Medium\r\nGet-Job                                  Medium\r\nGet-Location                             Medium\r\nGet-MarkdownOption                       Medium\r\nGet-Member                               Medium\r\nGet-Module                               Medium\r\nGet-Process                              Medium\r\nGet-PSBreakpoint                         Medium\r\nGet-PSCallStack                          Medium\r\nGet-PSDrive                              Medium\r\nGet-PSHostProcessInfo                    Medium\r\nGet-PSProvider                           Medium\r\nGet-PSReadLineKeyHandler                 Medium\r\nGet-PSReadLineOption                     Medium\r\nGet-PSSession                            Medium\r\nGet-PSSessionCapability                  Medium\r\nGet-PSSessionConfiguration               Medium\r\nGet-Random                               Medium\r\nGet-Runspace                             Medium\r\nGet-RunspaceDebug                        Medium\r\nGet-Service                              Medium\r\nGet-TimeZone                             Medium\r\nGet-TraceSource                          Medium\r\nGet-TypeData                             Medium\r\nGet-UICulture                            Medium\r\nGet-Unique                               Medium\r\nGet-Uptime                               Medium\r\nGet-Variable                             Medium\r\nGet-Verb                                 Medium\r\nGroup-Object                             Medium\r\nJoin-Path                                Medium\r\nMeasure-Command                          Medium\r\nMeasure-Object                           Medium\r\nNew-Alias                                Medium\r\nNew-Guid                                 Medium\r\nNew-Module                               Medium\r\nNew-ModuleManifest                       Medium\r\nNew-Object                               Medium\r\nNew-PSDrive                              Medium\r\nNew-PSRoleCapabilityFile                 Medium\r\nNew-PSSession                            Medium\r\nNew-PSSessionConfigurationFile           Medium\r\nNew-PSSessionOption                      Medium\r\nNew-PSTransportOption                    Medium\r\nNew-TemporaryFile                        Medium\r\nNew-TimeSpan                             Medium\r\nNew-Variable                             Medium\r\nOut-Default                              Medium\r\nOut-Host                                 Medium\r\nOut-Null                                 Medium\r\nOut-String                               Medium\r\nPop-Location                             Medium\r\nPush-Location                            Medium\r\nRead-Host                                Medium\r\nReceive-Job                              Medium\r\nReceive-PSSession                        Medium\r\nRegister-ArgumentCompleter               Medium\r\nResolve-Path                             Medium\r\nSave-Help                                Medium\r\nSelect-Object                            Medium\r\nSelect-String                            Medium\r\nSelect-Xml                               Medium\r\nSend-MailMessage                         Medium\r\nShow-Markdown                            Medium\r\nSort-Object                              Medium\r\nSplit-Path                               Medium\r\nStart-Sleep                              Medium\r\nTee-Object                               Medium\r\nTest-Connection                          Medium\r\nTest-Json                                Medium\r\nTest-ModuleManifest                      Medium\r\nTest-Path                                Medium\r\nTest-PSSessionConfigurationFile          Medium\r\nTrace-Command                            Medium\r\nUpdate-FormatData                        Medium\r\nUpdate-Help                              Medium\r\nUpdate-TypeData                          Medium\r\nWait-Debugger                            Medium\r\nWait-Event                               Medium\r\nWait-Job                                 Medium\r\nWait-Process                             Medium\r\nWhere-Object                             Medium\r\nWrite-Debug                              Medium\r\nWrite-Error                              Medium\r\nWrite-Host                               Medium\r\nWrite-Information                        Medium\r\nWrite-Output                             Medium\r\nWrite-Progress                           Medium\r\nWrite-Verbose                            Medium\r\nWrite-Warning                            Medium\r\n```\r\nAnd the following command probably ought to be High by default:\r\n```\r\nSet-StrictMode                           Medium\r\n```",
      "created_at": "2018-10-31T16:52:14Z",
      "updated_at": "2018-10-31T16:54:22Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "I think part of the problem with having so few actual `Low`-ranked cmdlets in terms of `ConfirmImpact` is that having any set value for `$ConfirmPreference` *other* than `High` quickly becomes unusable, as almost every standard command used may suddenly start triggering prompts, but in fact they either a) do not properly implement ShouldProcess anyway, or b) their impact should be ranked significantly lower than it is set at.\r\n\r\nI would contend that there is a good degree of value in having properly granular ConfirmImpact \"recommendations\" as it were, as a quick method of determining *if I execute X cmdlet, am I risking system modifications I may not want?*, and *should I be cautious and make use of -WhatIf?*\r\n\r\nThis would make setting a `$ConfirmPreference = 'Medium'` a viable method to ensure that any concrete changes to the system state is accompanied by a prompt, but simply retrieving and working with data in the console is not, as it should (hopefully) not cause any unexpected changes in system state.\r\n\r\n### Other Considerations\r\n\r\nI am of two minds when it comes to creating new items and similar actions on the system; on the one hand, if a path is provided that is not occupied, there is very low risk of actually impacting system function. But, if an existing path is specified, it could overwrite the file and should prompt accordingly.\r\n\r\nI almost feel as though we need a more dynamic way to alter the current `ConfirmImpact` of a cmdlet in certain cases; a cmdlet-level attribute doesn't seem sufficient when it make be capable of, say, two or three slightly different actions, with different levels of severity (e.g., `New-Item` can either create a new file in a blank space, provided the permissions in that location allow it &mdash; `Low` impact, in my opinion &mdash; _OR_ it can overwrite a file with a blank one &mdash; requires use of `-Force`, from memory? &mdash; would be a `Medium` impact, in my opinion).\r\n\r\nPerhaps we ought to modify the `ShouldProcess()` method to allow _specifying the ConfirmImpact_ on a per-action basis, and it can take its default value from the cmdlet attribute property.\r\n\r\nRef: https://github.com/PowerShell/PowerShell-RFC/pull/149",
      "created_at": "2018-11-01T13:29:14Z",
      "updated_at": "2018-11-01T20:28:26Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee reviewed this, agree with list except: `Update-Help` should stay `medium` as it can affect system, `Set-StrictMode` should also stay medium since it only affects the session and not system state.  The `ConfirmImpact` is documented as impact to system.  Should also consider changing default for `Get-` cmdlets to `low` if not specified.",
      "created_at": "2018-11-07T23:19:26Z",
      "updated_at": "2018-11-07T23:19:26Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "I almost mentioned that about Get- cmdlets myself, actually. Sounds good!  If you guys don't mind, I'll be happy to pick up the menial labor of adding the appropriate levels to the cmdlets discussed.\n\nNot sure how I'd go about changing the default just for Get-* verbed cmdlets (should that extend to advanced functions?) but it might be fun to give that a look as well.",
      "created_at": "2018-11-07T23:36:36Z",
      "updated_at": "2018-11-07T23:36:36Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT from what I'm seeing on these commands, ~~some~~ **most** of them *did not implement ShouldProcess at all*. \r\n\r\nSo, really, the main problem here is that querying a command's `ConfirmImpact` incorrectly returns the default `ConfirmImpact.Medium` value instead of `ConfirmImpact.None` as might reasonably be expected for commands that don't set `SupportsShouldProcess = true`. I will look to make this change in as minimally-impacting way I can, and then check the other cmdlets you pointed out to see if there are other changes needed.\r\n\r\nDefinitely reduces the scope of changes necessary, though it's interesting.",
      "created_at": "2018-11-08T04:48:24Z",
      "updated_at": "2018-11-08T05:17:42Z"
    },
    {
      "author": "kort3x",
      "author_association": "NONE",
      "body": "> @PowerShell/powershell-committee reviewed this, agree with list except: `Update-Help` should stay `medium` as it can affect system, `Set-StrictMode` should also stay medium since it only affects the session and not system state. The `ConfirmImpact` is documented as impact to system. Should also consider changing default for `Get-` cmdlets to `low` if not specified.\r\n\r\nI agree that all `get-` cmdlets should return _low_",
      "created_at": "2018-11-08T12:38:41Z",
      "updated_at": "2018-11-08T12:38:41Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee re-reviewed this.  The concern is that although we can change the default for C# cmdlets to be low for `Get-` cmdlets, it is much more difficult from an engineering perspective to support this for advanced functions.  Our decision is that we should explicitly state the `ConfirmImpact` for cmdlets shipped with PSCore6, but leave the default to be `medium` if not specified (regardless if `Get-`) so that it is predictable and consistent.",
      "created_at": "2019-01-16T23:55:15Z",
      "updated_at": "2019-01-16T23:55:15Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": ">  Our decision is that we should explicitly state the ConfirmImpact for cmdlets shipped with PSCore6,\r\n\r\nShould we have a tracking issue for this?",
      "created_at": "2019-01-26T12:44:10Z",
      "updated_at": "2019-01-26T12:44:10Z"
    }
  ],
  "created_at": "2018-10-31T15:51:20Z",
  "labels": [
    "WG-Cmdlets",
    "Up-for-Grabs",
    "Issue-Discussion",
    "Resolution-Fixed",
    "Committee-Reviewed"
  ],
  "number": 8157,
  "state": "closed",
  "title": "Impact Level",
  "updated_at": "2019-01-26T12:44:10Z"
}