{
  "_url": "https://github.com/PowerShell/PowerShell/issues/18482",
  "author": "SeeminglyScience",
  "body": "### Steps to reproduce\r\n\r\nI know this issue probably exists in some form but I want to get it recorded quickly so I can add it to the agenda for the engine WG. This mostly came up due to what I suspect is the docs describing how we'd like it work, vs how it currently works.\r\n\r\nMore specifically, [the docs state](https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_using?view=powershell-7.2#assembly-syntax):\r\n\r\n(emphasis is mine)\r\n\r\n> Loading an assembly preloads .NET types from that assembly into a script **at parse time**. This allows you to **create new PowerShell classes that use types from the preloaded assembly**.\r\n\r\n```powershell\r\nusing assembly SomeAssembly.dll\r\n\r\nclass MyClass : SomeTypeFromSomeAssembly {\r\n}\r\n```\r\n\r\n### Expected behavior\r\n\r\nEither we make it work (one day) or update the docs\r\n\r\n\r\n### Actual behavior\r\n\r\n```console\r\nParserError:\r\nLine |\r\n   3 |  class MyClass : SomeTypeFromSomeAssembly {\r\n     |                  ~~~~~~~~~~~~~~~~~~~~~~~~\r\n     | Unable to find type [SomeTypeFromSomeAssembly].\r\n```\r\n\r\n### Environment data\r\n\r\n```powershell\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.3.0-rc.1\r\nPSEdition                      Core\r\nGitCommitId                    7.3.0-rc.1\r\nOS                             Microsoft Windows 10.0.22621\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```",
  "closed_at": null,
  "comments": [
    {
      "author": "237dmitry",
      "author_association": "NONE",
      "body": "```powershell\r\nParserError: /data/0.ps1:1\r\nLine |\r\n   1 |  using assembly SomeAssembly.dll\r\n     |                 ~~~~~~~~~~~~~~~~\r\n     | Cannot load assembly 'SomeAssembly.dll'\r\n```\r\n\r\n```powershell\r\n\r\nException             : \r\n    Type        : System.Management.Automation.ParseException\r\n    Errors      : \r\n        Extent  : SomeAssembly.dll\r\n        ErrorId : ErrorLoadingAssembly\r\n        Message : Cannot load assembly 'SomeAssembly.dll'.\r\n\r\n        Extent  : SomeTypeFromSomeAssembly\r\n        ErrorId : TypeNotFound\r\n        Message : Unable to find type [SomeTypeFromSomeAssembly].\r\n    Message     : At /data/0.ps1:1 char:16\r\n                  + using assembly SomeAssembly.dll\r\n                  +                ~~~~~~~~~~~~~~~~\r\n                  Cannot load assembly 'SomeAssembly.dll'.\r\n                  \r\n                  At /data/0.ps1:3 char:17\r\n                  + class MyClass : SomeTypeFromSomeAssembly {\r\n                  +                 ~~~~~~~~~~~~~~~~~~~~~~~~\r\n                  Unable to find type [SomeTypeFromSomeAssembly].\r\n    ErrorRecord : \r\n        Exception             : \r\n            Type    : System.Management.Automation.ParentContainsErrorRecordException\r\n            Message : At /data/0.ps1:1 char:16\r\n                      + using assembly SomeAssembly.dll\r\n                      +                ~~~~~~~~~~~~~~~~\r\n                      Cannot load assembly 'SomeAssembly.dll'.\r\n                      \r\n                      At /data/0.ps1:3 char:17\r\n                      + class MyClass : SomeTypeFromSomeAssembly {\r\n                      +                 ~~~~~~~~~~~~~~~~~~~~~~~~\r\n                      Unable to find type [SomeTypeFromSomeAssembly].\r\n            HResult : -2146233087\r\n        CategoryInfo          : ParserError: (:) [], ParentContainsErrorRecordException\r\n        FullyQualifiedErrorId : ErrorLoadingAssembly\r\n        InvocationInfo        : \r\n            ScriptLineNumber : 1\r\n            OffsetInLine     : 16\r\n            HistoryId        : -1\r\n            ScriptName       : /data/0.ps1\r\n            Line             : using assembly SomeAssembly.dll\r\n                               \r\n            PositionMessage  : At /data/0.ps1:1 char:16\r\n                               + using assembly SomeAssembly.dll\r\n                               +                ~~~~~~~~~~~~~~~~\r\n            PSScriptRoot     : /data\r\n            PSCommandPath    : /data/0.ps1\r\n            CommandOrigin    : Internal\r\n        ScriptStackTrace      : at <ScriptBlock>, <No file>: line 1\r\n    TargetSite  : \r\n        Name          : Create\r\n        DeclaringType : scriptblock\r\n        MemberType    : Method\r\n        Module        : System.Management.Automation.dll\r\n    Data        : System.Collections.ListDictionaryInternal\r\n    Source      : System.Management.Automation\r\n    HResult     : -2146233087\r\n    StackTrace  : \r\n   at System.Management.Automation.ScriptBlock.Create(Parser parser, String fileName, String fileContents)\r\n   at System.Management.Automation.ExternalScriptInfo.ParseScriptContents(Parser parser, String fileName, String fileContents, Nullable`1 definingLanguageMode)\r\n   at System.Management.Automation.ExternalScriptInfo.get_ScriptBlock()\r\n   at System.Management.Automation.CommandDiscovery.CreateCommandProcessorForScript(ExternalScriptInfo scriptInfo, ExecutionContext context, Boolean useNewScope, SessionStateInternal sessionState)\r\n   at System.Management.Automation.CommandDiscovery.CreateScriptProcessorForSingleShell(ExternalScriptInfo scriptInfo, ExecutionContext context, Boolean useLocalScope, SessionStateInternal sessionState)\r\n   at System.Management.Automation.CommandDiscovery.LookupCommandProcessor(CommandInfo commandInfo, CommandOrigin commandOrigin, Nullable`1 useLocalScope, SessionStateInternal sessionState)\r\n   at System.Management.Automation.CommandDiscovery.LookupCommandProcessor(String commandName, CommandOrigin commandOrigin, Nullable`1 useLocalScope)\r\n   at System.Management.Automation.ExecutionContext.CreateCommand(String command, Boolean dotSource)\r\n   at System.Management.Automation.PipelineOps.AddCommand(PipelineProcessor pipe, CommandParameterInternal[] commandElements, CommandBaseAst commandBaseAst, CommandRedirection[] redirections, ExecutionContext context)\r\n   at System.Management.Automation.PipelineOps.InvokePipeline(Object input, Boolean ignoreInput, CommandParameterInternal[][] pipeElements, CommandBaseAst[] pipeElementAsts, CommandRedirection[][] commandRedirections, FunctionContext funcContext)\r\n   at System.Management.Automation.Interpreter.ActionCallInstruction`6.Run(InterpretedFrame frame)\r\n   at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.Run(InterpretedFrame frame)\r\nCategoryInfo          : ParserError: (:) [], ParseException\r\nFullyQualifiedErrorId : ErrorLoadingAssembly\r\nInvocationInfo        : \r\n    ScriptLineNumber : 1\r\n    OffsetInLine     : 16\r\n    HistoryId        : -1\r\n    ScriptName       : /data/0.ps1\r\n    Line             : using assembly SomeAssembly.dll\r\n                       \r\n    PositionMessage  : At /data/0.ps1:1 char:16\r\n                       + using assembly SomeAssembly.dll\r\n                       +                ~~~~~~~~~~~~~~~~\r\n    PSScriptRoot     : /data\r\n    PSCommandPath    : /data/0.ps1\r\n    CommandOrigin    : Internal\r\nScriptStackTrace      : at <ScriptBlock>, <No file>: line 1\r\n\r\n```\r\n",
      "created_at": "2022-11-08T09:17:40Z",
      "updated_at": "2022-11-08T09:32:14Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "Yeah the example is arbitrary, I just wanted to get something quick put up so it could be discussed. The parser attempts to verify that the assembly exists, but does not actually try to load it at parse time.",
      "created_at": "2022-11-08T14:42:15Z",
      "updated_at": "2022-11-08T14:42:15Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "See also:\r\n\r\n* https://github.com/PowerShell/PowerShell/issues/3641#issuecomment-297151112",
      "created_at": "2022-11-08T17:01:04Z",
      "updated_at": "2022-11-08T17:01:04Z"
    }
  ],
  "created_at": "2022-11-07T19:23:33Z",
  "labels": [
    "WG-Engine",
    "Issue-Discussion",
    "Needs-Triage"
  ],
  "number": 18482,
  "state": "open",
  "title": "`using assembly` is processed at compile time rather than parse time",
  "updated_at": "2022-11-08T17:01:05Z"
}