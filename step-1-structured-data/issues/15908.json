{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15908",
  "author": "daxian-dbw",
  "body": "# PR Summary\r\n\r\nAfter switching to the latest dotnet 6 preview.7 SDK, we started to see the \"Bad IL format\" failure as shown below (see the reported dotnet bug [here](https://github.com/dotnet/runtime/issues/57106)).\r\nThis is because a new preview feature is enabled in preview.7, which allows an interface to have abstract static methods (see the [blog post](https://devblogs.microsoft.com/dotnet/preview-features-in-net-6-generic-math/)). The type `System.Int16` implements much more interfaces in preview.7, and many of them declare abstract static properties. However, the abstract static properties cannot be invoked with `GetValue(null)` reflection API, and doing so results in this `Bad IL format` error.\r\n\r\n![image](https://user-images.githubusercontent.com/127450/129113875-c6249399-2122-4d23-93ae-c31e39882478.png)\r\n\r\nThe recommendation from .NET team is to ignore static virtual/abstract members on an interface, especially as the set of APIs may change with .NET 7.\r\n\r\nThis PR includes the following changes:\r\n1. Update .NET adapter to ignore static virtual methods/properties on interface\r\n2. Given `DisablePrivateReflectionAttribute` is already obsolete and there is no restriction on private reflection in .NET Core, remove `DisallowPrivateReflection` and uses of it from our code.\r\n3. The way how `PopulateMethodReflectionTable` handles interface was to call `type.GetInterfaceMap(interfaceType)` and use the interface methods from the returned mapping object. The static non-virtual methods on an interface will be missed in this way, so, this is changed to call `interfaceType.GetMethods(bindingFlags)` directly.\r\n4. A minor change to the parameter type of the `MethodCacheEntry` constructor, to avoid unneeded array creation.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n",
  "closed_at": "2021-08-14T14:56:15Z",
  "comments": [
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@daxian-dbw Please respond to Rob's comments.",
      "created_at": "2021-08-12T19:25:37Z",
      "updated_at": "2021-08-12T19:25:37Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "All comments are addressed. Please take another look, thanks!",
      "created_at": "2021-08-12T21:05:26Z",
      "updated_at": "2021-08-12T21:05:26Z"
    },
    {
      "author": "tannergooding",
      "author_association": "NONE",
      "body": "Its worth calling out that, aside from `static abstract` being a new IL concept, `short.MinValue` is an existing public constant. However, whatever logic is doing the resolution is finding and preferring the explicitly implemented interface member from `IMinMaxValue<TSelf>.MinValue { get; }`.\r\n\r\nI would have expected that such members were at least not preferred over matching public members (even once powershell can properly support `static abstracts in interfaces`).",
      "created_at": "2021-08-12T21:27:09Z",
      "updated_at": "2021-08-12T21:27:09Z"
    },
    {
      "author": "tannergooding",
      "author_association": "NONE",
      "body": "A basic breaking-change issue documenting this has been created here: https://github.com/dotnet/runtime/issues/57323",
      "created_at": "2021-08-12T21:56:09Z",
      "updated_at": "2021-08-12T21:56:09Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.2.0-preview.9` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.2.0-preview.9)\n",
      "created_at": "2021-08-23T18:36:59Z",
      "updated_at": "2021-08-23T18:36:59Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.2.0-preview.10` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.2.0-preview.10)\n",
      "created_at": "2021-09-28T23:18:49Z",
      "updated_at": "2021-09-28T23:18:49Z"
    }
  ],
  "created_at": "2021-08-11T23:25:34Z",
  "number": 15908,
  "state": "closed",
  "title": "Update .NET adapter to handle interface static members properly",
  "updated_at": "2021-09-28T23:18:50Z"
}