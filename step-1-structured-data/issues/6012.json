{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6012",
  "author": "leonard84",
  "body": "There are many HTTP APIs that don't follow RFC 2617 and don't respond with `401`, instead they either return `200` and something with less information or `403 Forbidden`.\r\n\r\nThere is currently no way to use `Invoke-WebRequest -Credential` and force preemptive authentication. The ugly workaround is to extract the password from the SecureString of the `Credential` and converting it to the base64 encoded `Authorization` Header manually. \r\n\r\nWith #5052 direct support was added for BasicAuth, but it still misses the option for preemptive authentication.\r\n\r\nI'd suggest to use either `-PreemptiveAuthentication` or `-ForceAuthentication` as new parameters for this feature.",
  "closed_at": "2018-01-24T20:24:59Z",
  "comments": [
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@leonard84 When you use use the `-Authorization basic -Credential $Credential`, the `Authorization: Basic <Base64(user:password)>` is sent explicitly without first checking for a 403 response.\r\n\r\nMore info https://get-powershellblog.blogspot.com/2017/12/powershell-core-web-cmdlets-in-depth_24.html#L06",
      "created_at": "2018-01-24T18:20:54Z",
      "updated_at": "2018-01-24T18:21:28Z"
    }
  ],
  "created_at": "2018-01-24T17:16:33Z",
  "number": 6012,
  "state": "closed",
  "title": "Invoke-WebRequest should support preemptive Authentication",
  "updated_at": "2018-01-24T20:24:59Z"
}