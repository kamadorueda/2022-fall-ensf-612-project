{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9071",
  "author": "Geweldig",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\nI noticed a couple of inconsistencies when reading through the install bash scripts. \r\n\r\n- Make documentation for switches consistent over all files.\r\n- Replace all `sed` implementations of `lowercase` with a more maintainable `tr` implementation.\r\n- Set the `OS` variable in every install script, making it so previously unused checks are actually used.\r\n- Exit with a non-zero exit code when the script reaches an illegal state.\r\n\r\n<!-- Summarize your PR between here and the checklist. -->\r\n\r\n## PR Context\r\nA lot of people, including myself, read the install scripts before executing them. While doing so I noticed they contained inconsistencies. For example, certain flags you can pass to the install script were either undocumented or had an incorrect description. This PR fixes some of these inconsistencies, which should make them easier to maintain and easier to read.\r\n\r\n<!-- Provide a little reasoning as to why this Pull Request helps and why you have opened it. -->\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n        - [ ] [Add `[feature]` to your commit messages if the change is significant or affects feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\r\n",
  "closed_at": "2019-03-08T21:00:05Z",
  "comments": [
    {
      "author": "msftclas",
      "author_association": "NONE",
      "body": "[![CLA assistant check](https://cla.opensource.microsoft.com/pull/badge/signed)](https://cla.opensource.microsoft.com/PowerShell/PowerShell?pullRequest=9071) <br/>All CLA requirements met.",
      "created_at": "2019-03-06T11:58:06Z",
      "updated_at": "2019-03-06T12:03:13Z"
    },
    {
      "author": "Geweldig",
      "author_association": "CONTRIBUTOR",
      "body": "I used [`ShellCheck`](https://www.shellcheck.net/) as a linter locally, as it seemed to create the same output as Codacy. I also noticed some of the files contained invalid bash (`if then if` instead of `if then fi`), which has also been resolved.",
      "created_at": "2019-03-06T15:06:37Z",
      "updated_at": "2019-03-06T15:08:49Z"
    },
    {
      "author": "Geweldig",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov thanks for the great suggestions! I was not entirely sure about the correct casing for Visual Studio Code, as I could find it as `VSCode`, `vscode` and `VS Code`. Because of this I decided to just leave it all lowercase. I have implemented your suggestions, thanks for the review!",
      "created_at": "2019-03-06T17:26:29Z",
      "updated_at": "2019-03-06T17:26:29Z"
    },
    {
      "author": "Geweldig",
      "author_association": "CONTRIBUTOR",
      "body": "It appears the connection to windowsitpro.com has timed out, which is why the static analysis has failed.  The next connection to it however does finish successfully. Should the CI be restarted or is this not an issue?",
      "created_at": "2019-03-06T17:42:42Z",
      "updated_at": "2019-03-06T17:42:42Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Restart CI-static-analysis.",
      "created_at": "2019-03-06T18:33:37Z",
      "updated_at": "2019-03-06T18:33:37Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@DarwinJS Would you mind giving this a first pass?",
      "created_at": "2019-03-08T02:21:35Z",
      "updated_at": "2019-03-08T02:21:35Z"
    },
    {
      "author": "DarwinJS",
      "author_association": "CONTRIBUTOR",
      "body": "@TravisEz13 - I looked it over and it looks like a nice cleanup to me.  Is that what you mean by a first pass? :)",
      "created_at": "2019-03-08T02:46:36Z",
      "updated_at": "2019-03-08T02:46:36Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "yup.\r\n",
      "created_at": "2019-03-08T02:48:04Z",
      "updated_at": "2019-03-08T02:48:04Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "Okay... I tried to add support to the CI for a representative portion of the distros.  \r\n\r\nAmazonLinux image failed because it was missing `adduser`.  (I'll ask in the docker repo if we want to add this to get this scenario working.)\r\n\r\nOpenSUSE failed because it Azure DevOps could not find `pwsh` (I can fix this later)\r\n",
      "created_at": "2019-03-08T03:25:07Z",
      "updated_at": "2019-03-08T03:25:07Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "So CentOS testing was the only distro added.  cc @adityapatwardhan \t",
      "created_at": "2019-03-08T03:25:44Z",
      "updated_at": "2019-03-08T03:25:44Z"
    },
    {
      "author": "DarwinJS",
      "author_association": "CONTRIBUTOR",
      "body": "Travis - Amazon optimizes every purpose specific use of Amazon Linux and of course specifically the one for containers.\r\n\r\nSince the size of the Amazon built Amazon Linux containers affects their server density globally across all customers, it will likely be necessary to add back what you need to get CI running.\r\n\r\nPS For my local testing of Amazon Linux 2 - I have actually created some antipattern containers that have the entire EC2 build version: https://cloudywindows.io/post/three-amazon-linux-2-containers-for-testing/",
      "created_at": "2019-03-08T12:37:04Z",
      "updated_at": "2019-03-08T12:37:04Z"
    },
    {
      "author": "DarwinJS",
      "author_association": "CONTRIBUTOR",
      "body": "@Geweldig - did you test your changes on the major distros?\r\n@TravisEz13 - how do we know what distros these install scripts are tested on - is there a manifest somewhere?",
      "created_at": "2019-03-08T12:38:15Z",
      "updated_at": "2019-03-08T12:38:15Z"
    },
    {
      "author": "Geweldig",
      "author_association": "CONTRIBUTOR",
      "body": "@DarwinJS I have verified it to be working for the following operating systems:\r\n- Centos7\r\n- Ubuntu 18.04\r\n- Debian 9 (Assuming lsb-release has been shipped with it, might be worthwhile to look at an alternative check as it is not always included)\r\n- Fedora 29\r\n- macOS 12\r\n\r\nWhich should cover the major distros. I have tried the installer on openSUSE Leap 15 (as 42.3 is reaching EOL in July) where I have not been able to get it to work. However, when trying to run the script which is currently on master I couldn't get it to work either. This problem is twofold, as the OS is not recognized by the main script and the openSUSE installer which is currently provided contains invalid bash. Unfortunately I am not familiar with openSUSE and would need some time to figure out why it currently is not recognized by the script on master and find a robust solution to recognize the operating system.",
      "created_at": "2019-03-08T14:34:06Z",
      "updated_at": "2019-03-08T14:52:00Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@DarwinJS \tThe CI YML for testing these scripts is here:  https://github.com/PowerShell/PowerShell/blob/7031954669422ae577b5d3f4da52fdda7554fffe/.vsts-ci/install-ps.yml#L45-L64\r\n\r\n**NOTE:** where a container is listed, it overrides the pool.  Like on line 54, to switch to CentOS.\r\n\r\nCurrently Ubuntu 16.04, CentOS 7, and macOS Mojave are in the list.",
      "created_at": "2019-03-08T21:04:06Z",
      "updated_at": "2019-03-08T21:04:06Z"
    },
    {
      "author": "DarwinJS",
      "author_association": "CONTRIBUTOR",
      "body": "Is it ok if I reverse these changes?\r\nAmazon Linux 2 install is not working whether using the stand alone script or the main one.  I'm not sure how many more are doing that?",
      "created_at": "2019-06-19T20:03:21Z",
      "updated_at": "2019-06-19T20:03:21Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Why revert? Do you know the issue root cause? Is it possible to fix?",
      "created_at": "2019-06-20T03:19:33Z",
      "updated_at": "2019-06-20T03:19:33Z"
    },
    {
      "author": "DarwinJS",
      "author_association": "CONTRIBUTOR",
      "body": "I don't know the root cause, but I let this slip through without realizing the distro fingerprinting had been altered to DEPEND on the parent script being called for each distro specific script.  I had specifically designed it to not depend - the parent script was a convenience when wanting to target distros homogenously.\r\n\r\nBut then I wanted to get off using my original merge branch for linuxmint support which still works for Amazon Linux - and this one does not. (I use it here to create Amazon LInux 2 containers that have PowerShell: https://gitlab.com/DarwinJS/amazon-linux-2-container-with-powershell/blob/master/Dockerfile#L4)\r\n\r\nSo this all points to the changes not being comprehensively tested - something I was doing whenever I made broad-based changes.\r\n\r\nSince these changes seemed to be mainly making the code prettier - not more functional - I'd rather revert to a known working state that I had tested across all distros - than try to fix and retest on all distros.  I really don't have the time for the latter.",
      "created_at": "2019-06-20T11:44:56Z",
      "updated_at": "2019-06-20T11:46:35Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@Geweldig @TravisEz13 Thoughts? ",
      "created_at": "2019-06-20T12:24:18Z",
      "updated_at": "2019-06-20T12:24:18Z"
    },
    {
      "author": "DarwinJS",
      "author_association": "CONTRIBUTOR",
      "body": "> @DarwinJS I have verified it to be working for the following operating systems:\r\n> \r\n> * Centos7\r\n> * Ubuntu 18.04\r\n> * Debian 9 (Assuming lsb-release has been shipped with it, might be worthwhile to look at an alternative check as it is not always included)\r\n> * Fedora 29\r\n> * macOS 12\r\n> \r\n> Which should cover the major distros. I have tried the installer on openSUSE Leap 15 (as 42.3 is reaching EOL in July) where I have not been able to get it to work. However, when trying to run the script which is currently on master I couldn't get it to work either. This problem is twofold, as the OS is not recognized by the main script and the openSUSE installer which is currently provided contains invalid bash. Unfortunately I am not familiar with openSUSE and would need some time to figure out why it currently is not recognized by the script on master and find a robust solution to recognize the operating system.\r\n\r\nOK, then maybe the solution is to consider Amazon Linux 2 a major distro and test and debug for it.  Not only is Amazon treating it this way, but it was the first distro to have prebuilt cloud image template (AMIs) from the cloud provider with .NET Core and PowerShell Core preinstalled.   That is a full Ec2 image, I want to use amazon linux 2 w/ PowerShell Core under Gitlab CI on Linux containers  - so still need installation support.",
      "created_at": "2019-06-20T12:30:59Z",
      "updated_at": "2019-06-20T12:30:59Z"
    },
    {
      "author": "Geweldig",
      "author_association": "CONTRIBUTOR",
      "body": "@DarwinJS I indeed didn't test the install script on Amazon Linux 2, as I did not have access to a build environment for it. However, I believe the changes made to the install script shouldn't have broken anything as they only cleaned up unused and broken variables, but I'm obviously wrong. All changes which I believe could break the build on Linux, should also break all other scripts which we have tested to be working.\r\n\r\nDo you have a specific error so we can pinpoint where the script goes wrong? ",
      "created_at": "2019-06-20T16:30:05Z",
      "updated_at": "2019-06-20T16:30:05Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I have concerns about the rollback since the PR has been merged for a long time (we have a release after that).\r\n\r\n>  I did not have access to a build environment for it.\r\n\r\nMaybe you could cooperate with @DarwinJS directly?",
      "created_at": "2019-06-20T17:03:35Z",
      "updated_at": "2019-06-20T17:03:35Z"
    },
    {
      "author": "DarwinJS",
      "author_association": "CONTRIBUTOR",
      "body": "The following Docker commands will let you easily test:\r\n\r\n\r\n````\r\n# This Works:\r\ndocker run -v -it amazonlinux /bin/bash -c \"curl -s https://raw.githubusercontent.com/DarwinJS/PowerShell/installpsh-debian-support-for-linuxmint/tools/installpsh-amazonlinux.sh | bash ; pwsh\"\r\n\r\n# This Does Not:\r\ndocker run -v -it amazonlinux /bin/bash -c \"curl -s https://raw.githubusercontent.com/PowerShell/PowerShell/master/tools/installpsh-amazonlinux.sh | bash ; pwsh\"\r\n````",
      "created_at": "2019-06-20T17:18:11Z",
      "updated_at": "2019-06-20T17:18:11Z"
    },
    {
      "author": "Geweldig",
      "author_association": "CONTRIBUTOR",
      "body": "Ah I see what the problem is, I rewrote the OS checks in a single script and copied them over all other scripts. However, the script I originally based it on seems to not have included the check for amazonlinux. Not sure how I missed that, but it shouldn't be difficult to fix.",
      "created_at": "2019-06-20T17:30:56Z",
      "updated_at": "2019-06-20T17:30:56Z"
    },
    {
      "author": "Geweldig",
      "author_association": "CONTRIBUTOR",
      "body": "@DarwinJS I have opened #9967 to fix this issue, I'm currently verifying the install scripts again on all different operating systems. This has resolved the problem for amazon linux.",
      "created_at": "2019-06-20T17:40:20Z",
      "updated_at": "2019-06-20T17:40:20Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@iSazonov \t@DarwinJS \t@Geweldig \tWe have started to move the packaging/installation tools into separate repos that are maintained by the people that care about that tool.  Honestly, long term I think we should do the same thing here.  We could keep the main script with a warning to migrate.  \r\n\r\ncc @SteveL-MSFT \t",
      "created_at": "2019-06-20T17:53:34Z",
      "updated_at": "2019-06-20T17:53:34Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@TravisEz13 Could you please reference the new repo?",
      "created_at": "2019-06-20T18:02:47Z",
      "updated_at": "2019-06-20T18:02:47Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@iSazonov \tThis is a concept.  There is no current.  But Docker and Snap have been separated, if that is what you are talking about.",
      "created_at": "2019-06-20T18:06:42Z",
      "updated_at": "2019-06-20T18:06:42Z"
    }
  ],
  "created_at": "2019-03-06T11:57:55Z",
  "number": 9071,
  "state": "closed",
  "title": "Make install scripts more consistent over different operating systems",
  "updated_at": "2019-06-20T18:06:43Z"
}