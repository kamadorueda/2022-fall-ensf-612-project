{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7415",
  "author": "Jaykul",
  "body": "Given XML, such as:\r\n\r\n```posh\r\n$xml = [xml]\"<person><name type='first'>John</name><name type='last'>Doe</name></person>\" \r\n```\r\nIf we use Get-Member on an XML Element:\r\n\r\n```posh\r\n$xml.person | Get-member\r\n```\r\n\r\nWe are missing _all_ of the basic XML properties such as `InnerText` and even when using `Get-Member -Force` they are only shown as hidden `get_*` and `set_*` _methods_ rather than as properties!\r\n\r\nThese properties are crucial to doing serious Xml work, and only the properties are being hidden. That is, `ChildNodes` and `FirstChild` and `LastChild`  are missing, but `AppendChild(...)` and `PrependChild(...)` and `RemoveChild(...)` and `ReplaceChild(...)` are all still there.\r\n\r\nI understand the need to hide these in formatted output objects to prevent complicated unrolling and preserve the impression of XML nodes as custom objects -- but they really should show up in the output of `Get-Member` (or at least, be displayed properly in `Get-Member -Force`).\r\n\r\nThis is a long-standing discoverability problem, but it's high time it was fixed.\r\n\r\nWe need our `Attributes` or `BaseURI` or `ChildNodes` or `FirstChild` or `HasAttributes` or `HasChildNodes` or `InnerText` or `InnerXml` or `IsEmpty` or `IsReadOnly` or `Item` or `LastChild` or `LocalName` or `Name` or `NamespaceURI` or `NextSibling` or `NodeType` or `OuterXml` or `OwnerDocument` or `ParentNode` or `Prefix` or `PreviousSibling` or `PreviousText` or `SchemaInfo` or `Value` ...",
  "closed_at": null,
  "comments": [
    {
      "author": "robderickson",
      "author_association": "NONE",
      "body": "I was personally struggling with getting text within an XML element node, and did not realize the `InnerText` property was available to me until Joel pointed it out.",
      "created_at": "2018-07-31T19:13:54Z",
      "updated_at": "2018-07-31T19:13:54Z"
    },
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "I thought it was intentional to get a cleaner projection of the xml data.\r\n\r\nThe properties are available via the `psbase` member.\r\n\r\n```\r\n$xml.person.psbase | Get-member\r\n```",
      "created_at": "2018-07-31T19:18:46Z",
      "updated_at": "2018-07-31T19:18:46Z"
    },
    {
      "author": "robderickson",
      "author_association": "NONE",
      "body": "Should the properties also be available if you go one node deeper?\r\n\r\n```PowerShell\r\n$xml.person.name.psbase | Get-Member\r\n```\r\nI don't see them there, but I can get values with `$xml.person.name.InnerText`",
      "created_at": "2018-07-31T20:15:54Z",
      "updated_at": "2018-07-31T20:15:54Z"
    }
  ],
  "created_at": "2018-07-31T18:35:15Z",
  "number": 7415,
  "state": "open",
  "title": "Missing members on XML elements",
  "updated_at": "2018-08-01T12:50:57Z"
}