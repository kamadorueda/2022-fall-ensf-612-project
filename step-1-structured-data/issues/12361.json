{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12361",
  "author": "iSazonov",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nTurn on ReadyToRun for PowerShell dll-s.\r\n\r\nWe can use https://github.com/dotnet/runtime/issues/35062#issuecomment-615005834 to check dll-s.\r\n\r\n## PR Context\r\n\r\nNow all .Net dll-s is in ReadyToRun format and PowerShell distributive doubled in size. So we can turn on the feature too. It will add ~20Mb (10%).\r\n\r\nDocs https://docs.microsoft.com/en-us/dotnet/core/whats-new/dotnet-core-3-0#readytorun-images\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [ ] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2020-04-22T19:13:49Z",
  "comments": [
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "We should disable the crossgen, but only for our binaries... let me see if I can do this change...",
      "created_at": "2020-04-17T23:10:21Z",
      "updated_at": "2020-04-17T23:10:21Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "I need to do some testing.",
      "created_at": "2020-04-17T23:48:40Z",
      "updated_at": "2020-04-17T23:48:40Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@daxian-dbw FYI",
      "created_at": "2020-04-17T23:48:55Z",
      "updated_at": "2020-04-17T23:48:55Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "> Revert \"Disable Start-ResGen\" \r\nDisable Start-CrossGen\r\n\r\n@iSazonov You reverted a commit and then applied the same commit again.",
      "created_at": "2020-04-20T18:44:00Z",
      "updated_at": "2020-04-20T18:44:00Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@PoshChan  Please remind me in 1 hour",
      "created_at": "2020-04-22T18:12:19Z",
      "updated_at": "2020-04-22T18:12:19Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "If we need to disable crossgen on the other assemblies, please submit a separate PR.  Combining items in PRs makes it difficult if we need to backport.",
      "created_at": "2020-04-22T18:13:50Z",
      "updated_at": "2020-04-22T18:13:50Z"
    },
    {
      "author": "PoshChan",
      "author_association": "COLLABORATOR",
      "body": "@TravisEz13, this is the reminder you requested 1 hour ago",
      "created_at": "2020-04-22T19:12:46Z",
      "updated_at": "2020-04-22T19:12:46Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> If we need to disable crossgen on the other assemblies, please submit a separate PR. Combining items in PRs makes it difficult if we need to backport.\r\n\r\nI have only question about PSRL and MI. We could make it readytorun in their repos. If yes I can open tracking issues. Thoughts?\r\n",
      "created_at": "2020-04-23T03:54:10Z",
      "updated_at": "2020-04-23T03:54:10Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "I think it's bad practices in publish the readytorun in the nuget.  But I would open a new issue, and just be sure to ask that question.",
      "created_at": "2020-04-24T21:00:48Z",
      "updated_at": "2020-04-24T21:00:48Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "\"At present, libraries can only be R2R compiled as part of an application, not for delivery as a NuGet package.\"\r\nhttps://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-preview-6/\n\n<blockquote><img src=\"https://devblogs.microsoft.com/dotnet/wp-content/uploads/sites/10/2019/02/swimlane-cross-platform.png\" width=\"48\" align=\"right\"><div><img src=\"https://devblogs.microsoft.com/dotnet/wp-content/uploads/sites/10/2018/10/Microsoft-Favicon.png\" height=\"14\"> .NET Blog</div><div><strong><a href=\"https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-preview-6/\">Announcing .NET Core 3.0 Preview 6 | .NET Blog</a></strong></div><div>Today, we are announcing .NET Core 3.0 Preview 6. It includes updates for compiling assemblies for improved startup, optimizing applications for size with linker and EventPipe improvements. We\u2019ve also released new Docker images for Alpine on ARM64.\nDownload .NET Core 3.0 Preview 6 right now on Windows,</div></blockquote>",
      "created_at": "2020-04-24T21:17:07Z",
      "updated_at": "2020-04-24T21:17:10Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "In our publish folder we get .Net dll-s in R2R format and trace shows this. If we compiled them locally into this format, then PSRL and MI would also be converted in it. Yes? It makes me think that we get them already in R2R format and I'd expect we could get PSRL and MI in R2R format too.\r\nI can ask in .Net repo but I do still not understand that ask. :-)",
      "created_at": "2020-04-25T05:47:18Z",
      "updated_at": "2020-04-25T05:48:36Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.1.0-preview.3` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.1.0-preview.3)\n",
      "created_at": "2020-05-19T18:07:57Z",
      "updated_at": "2020-05-19T18:07:57Z"
    }
  ],
  "created_at": "2020-04-17T17:04:06Z",
  "number": 12361,
  "state": "closed",
  "title": "Turn on `ReadyToRun`",
  "updated_at": "2020-05-19T18:07:57Z"
}