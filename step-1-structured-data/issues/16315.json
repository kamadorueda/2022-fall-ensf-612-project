{
  "_url": "https://github.com/PowerShell/PowerShell/issues/16315",
  "author": "rokejulianlockhart",
  "body": "### Summary of the new feature / enhancement\r\n\r\n<P>\r\n\tI am desiring addition of support for uniform-resource-identifiers whose scheme is \"file\". \r\n</P>\r\n\r\n<P>\r\n\tI am desiring addition of this because it shall enable usage of more consistent syntax during creation of software that should be invoked by operating-systems whose kernels are primarily comprised of code that is from NT, Unix, and Linux, respectively. (I am referring to \"macOS\", Windows 11, and \"GNU\" Software, when it is combined with Linux.)\r\n</P>\r\n\r\n### Proposed technical implementation details (optional)\r\n\r\nThis functionality should be implemnted as one flag that should be \"-Url\" (for consistency with other commands that are for [PowerShell](http://github.com/PowerShell/PowerShell)). It should be one alternative for \"-Path\".\r\n\r\n<PRE>\r\n\tSET-LOCATION -URL 'FILE://%SYSTEMDRIVE%/USERS'\r\n</PRE>\r\n\r\n[`FILE://%SYSTEMDRIVE%/WINDOWS/EXPLORER.EXE`](FILE://%SYSTEMDRIVE%/WINDOWS/EXPLORER.EXE) is already able to resolve the uniform-resource-identifier that has been proposed as demonstration of potential implementation my proposition.",
  "closed_at": "2022-01-25T02:21:05Z",
  "comments": [
    {
      "author": "jdhitsolutions",
      "author_association": "COLLABORATOR",
      "body": "So are you expecting an experience like this:\r\n\r\n```dos\r\nPS C:\\> Set-Location -uri \"file://%systemdrive%/users\"\r\nPS C:\\Users>\r\n```\r\n\r\nOr do you need a way to translate the FILE:// URL  to a filesystem path?  Do you have an actual use case?",
      "created_at": "2022-01-20T19:03:16Z",
      "updated_at": "2022-01-20T19:03:16Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "It seems we already had a request to support URI path formats in _general_. This is contrary to the design of PowerShell Providers because `name:` is a PowerShell drive.  \r\n\r\nAs for adding `-Uri` to `Set-Location`, I think it is not mainstream scenario. We need to see important business scenario(s) to implement this.\r\n\r\nAs for implementing a convertor, it is already exists - .Net Uri class.",
      "created_at": "2022-01-21T03:53:20Z",
      "updated_at": "2022-01-21T03:53:20Z"
    },
    {
      "author": "rokejulianlockhart",
      "author_association": "NONE",
      "body": "@jdhitsolutions, your proposition is what I desire. I explain subsequently what my rationale is.\r\n\r\n@iSazonov, I am glad that support for URIs has been previously demonstrated, because such support provides notification of the importance of what I propose:\r\n\r\nConsistent interaction with local and external filesystems is important, not least because my primary utilisation of PowerShell is interaction with identical storage that is formatted as exFAT that is mounted by Windows, macOS, and Linux-based operating-systems. Consequently, consider this:\r\n\r\nLinux \u2013 '/media/$USER/56309a5f-0f79-43af-b055-9d657d4cf784/PLACEHOLDER'\r\nWindows \u2013 '%systemdrive%\\PLACEHOLDER'\r\nmacOS \u2013 '/Volumes/DEC8759E-F77D-3EAE-B3EB-B6438F1AA428/PLACEHOLDER'\r\nAndroid \u2013 '/mnt/media_rw/0000-0000/PLACEHOLDER'\r\n\r\n...versus:\r\n\r\nLinux \u2013 'file://localhost//media/$USER/56309a5f-0f79-43af-b055-9d657d4cf784/PLACEHOLDER'\r\nWindows \u2013 'file://localhost/%SYSTEMDRIVE%/PLACEHOLDER'\r\nmacOS \u2013 'file://localhost//Volumes/DEC8759E-F77D-3EAE-B3EB-B6438F1AA428/PLACEHOLDER'\r\nAndroid \u2013 'file://localhost//mnt/media_rw/0000-0000/PLACEHOLDER'\r\n\r\n...whereby \"PLACEHOLDER\" represents the root directory of the drive.\r\n\r\nNot merely is ascertainment of where the storage-device is significantly more consistent, compression is able to be superior because the construction of the URI is more consistent than the construction of the current different paths. Consequently, my opinion is that the constructor that is '-Path' is obsolete because the URI that is 'file://' is entirely superior, and that consequently, files should be interacted with as I describe. The least that I desire is addition of the constructor.",
      "created_at": "2022-01-22T19:52:20Z",
      "updated_at": "2022-05-21T14:20:21Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> Consequently, my opinion is that the constructor that is '-Path' is obsolete because the URI that is 'file://' is entirely superior.\r\n\r\n@BEEDELLROKEJULIANLOCKHART PowerShell is a language and the language has a _design_. Your argument contradicts this design. PowerShell design defines Provider-direct paths. Particularly `\\\\server\\share\\folder\\file` is supported on Windows. Because of limitations of PowerShell remoting on Unix Provider-direct paths is not implemented in FileSystem provider on Unix.",
      "created_at": "2022-01-24T04:39:14Z",
      "updated_at": "2022-01-24T04:39:14Z"
    }
  ],
  "created_at": "2021-10-27T12:07:19Z",
  "number": 16315,
  "state": "closed",
  "title": "Add support for 'file://' URIs for commands that are able to accept paths.",
  "updated_at": "2022-05-21T14:20:21Z"
}