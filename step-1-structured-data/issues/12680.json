{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12680",
  "author": "ghost",
  "body": "# Steps to reproduce\r\n\r\n```powershell\r\nfunction foo { param([string] $bar = [nullstring]::value) $null -eq $bar }; foo\r\n```\r\n\r\n# Expected behavior\r\n\r\n```powershell\r\ntrue\r\n```\r\n\r\n# Actual behavior\r\n\r\n```powershell\r\nfalse\r\n```\r\n\r\n# Environment data\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.1\r\nPSEdition                      Core\r\nGitCommitId                    7.0.1\r\nOS                             Microsoft Windows 10.0.18363\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\n# Notes\r\n1. This is especially annoying when using the new null-coalescing operator, e.g.:\r\n```powershell\r\nfunction foo { param([string] $bar = [nullstring]::value) $bar ?? 'default' }; foo\r\n```\r\nthis use is relevant in contexts where multiple parameter sets are used and only some of them should have default values for certain string parameters.\r\n2. Found this example and workaround in an existing issue: https://github.com/PowerShell/PowerShell/issues/4616#issuecomment-405113611\r\n",
  "closed_at": "2021-01-16T12:19:39Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "If that's the case, then this issue is also tied to #4312 and would be fixed if that was resolved, according to @mklement0's comment there.",
      "created_at": "2020-05-15T14:30:04Z",
      "updated_at": "2020-05-15T14:30:04Z"
    }
  ],
  "created_at": "2020-05-15T12:15:38Z",
  "number": 12680,
  "state": "closed",
  "title": "String parameters are converted to empty string despite being set to [NullString]::Value",
  "updated_at": "2021-01-16T12:19:39Z"
}