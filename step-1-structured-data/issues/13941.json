{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13941",
  "author": "kyanha",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\nTake 3, final version.\r\n\r\n# PR Summary\r\n\r\nThis PR allows `Get-Item -Stream`, `Get-Content -Stream`, `Clear-Content -Stream`, `Set-Content -Stream`, `Add-Content -Stream`, and `Remove-Item -Stream` to see and address alternate data streams on directories, not merely on files.\r\n\r\nFixes #10570. Fixes #13656.\r\n\r\nSupersedes #13650 (squashes all intermediary commits).\r\nSupersedes #13795 (apparently some pull I did wanted to update the workflow, and my OAUTH token doesn't have workflow scope, and I can't figure out how to fix it)\r\n\r\nAddresses addtional comments in #13795 regarding $PSIsContainer should be false on alternate data streams on directories because ADSes cannot contain other items.\r\n\r\n<!-- Summarize your PR between here and the checklist. -->\r\n\r\n## PR Context\r\n\r\nIssue #10570 has been open for a year.  NTFS supports what are called \"Alternate Data Streams\" on both files and directories (multiple named discrete blobs of data which are associated with a single directory entry).  PowerShell currently supports enumeration of these Alternate Data Streams on files, using the '-Stream' parameter to 'Get-Item'.  It also supports manipulation of these alternate data streams on files, using the '-Stream' parameter to Set-Content, Add-Content, Clear-Content, and Remove-Item.\r\n\r\nUnfortunately, the initial implementation of PowerShell only supported alternate data streams on files, not on directories.  This makes an entire facility of the OS's file system invisible, and if an administration team is relying on PowerShell it makes an attractive place for a red team to store data to exfiltrate.  (This is not an invitation to destroy the capability to store alternate data streams on directories, as they are useful for many purposes.  It is merely a rationale for making their existence visible through PowerShell.)\r\n\r\nTo create and see an alternate data stream on a directory, use cmd.exe to run the following commands:\r\n\r\n```\r\n> mkdir 10570demo\r\n> cd 1057demo\r\n> echo \"This is a file.\" > 10570demo.txt\r\n> echo \"This is an alternate data stream on the file.\" > 10570demo.txt:datastream\r\n> mkdir bug10570\r\n> echo \"This is an alternate data stream on the directory.\" > bug10570:datastream\r\n> dir /r\r\n```\r\nThe output is something like:\r\n```\r\nD:\\10570demo>dir /r\r\n Volume in drive D is DATA\r\n Volume Serial Number is 8FD3-BD69\r\n\r\n Directory of D:\\10570demo\r\n\r\n09/17/2020  02:59 PM    <DIR>          .\r\n09/17/2020  02:59 PM    <DIR>          ..\r\n09/17/2020  02:58 PM                20 10570demo.txt\r\n                                    50 10570demo.txt:datastream:$DATA\r\n09/17/2020  02:59 PM    <DIR>          bug10570\r\n                                    55 bug10570:datastream:$DATA\r\n               1 File(s)             20 bytes\r\n               3 Dir(s)  88,185,401,344 bytes free\r\n```\r\n\r\nTo see the failure of PowerShell being able to see the stream on the file, but not the directory:\r\n```\r\n> pwsh\r\nPS > Get-Item *\r\n\r\n\r\n    Directory: D:\\10570demo\r\n\r\nMode                 LastWriteTime         Length Name\r\n----                 -------------         ------ ----\r\nda---           9/17/2020  2:59 PM                bug10570\r\n-a---           9/17/2020  2:58 PM             20 10570demo.txt\r\n\r\nPS > Get-Item * -stream *\r\n\r\nPSPath        : Microsoft.PowerShell.Core\\FileSystem::D:\\10570demo\\10570demo.txt::$DATA\r\nPSParentPath  : Microsoft.PowerShell.Core\\FileSystem::D:\\10570demo\r\nPSChildName   : 10570demo.txt::$DATA\r\nPSDrive       : D\r\nPSProvider    : Microsoft.PowerShell.Core\\FileSystem\r\nPSIsContainer : False\r\nFileName      : D:\\10570demo\\10570demo.txt\r\nStream        : :$DATA\r\nLength        : 20\r\n\r\nPSPath        : Microsoft.PowerShell.Core\\FileSystem::D:\\10570demo\\10570demo.txt:datastream\r\nPSParentPath  : Microsoft.PowerShell.Core\\FileSystem::D:\\10570demo\r\nPSChildName   : 10570demo.txt:datastream\r\nPSDrive       : D\r\nPSProvider    : Microsoft.PowerShell.Core\\FileSystem\r\nPSIsContainer : False\r\nFileName      : D:\\10570demo\\10570demo.txt\r\nStream        : datastream\r\nLength        : 50\r\n\r\nPS > Get-Item bug10570 -stream *\r\nPS >\r\n```\r\n\r\nWriting the tests revealed that Set-Content internally calls Clear-Content, which is hardcoded to not check for streams on directories.  This was raised as an issue in Issue #13656, but I decided to put that into this PR as well, because it made it easier to write the tests.\r\n\r\n## PR Checklist\r\n\r\n- [X] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [X] I'm assuming bucket 3: current behavior of Get-Item -stream when confronted with a directory was to silently do nothing, and this PR continues to do so in the event a directory doesn't have any alternate data streams.  I would like someone to doublecheck, though.\r\n- **User-facing changes**\r\n    - [X] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [X] Issue filed: <!-- Number/link of that issue here --> MicrosoftDocs/Powershell-Docs#6648\r\n- **Testing - New and feature**\r\n    - [X] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [X] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n",
  "closed_at": "2020-12-08T01:31:56Z",
  "comments": [
    {
      "author": "kyanha",
      "author_association": "CONTRIBUTOR",
      "body": "Note: the Powershell-CI-static-analysis tests are failing because powershellgallery.com is down and the CI system cannot install Pester.  (See https://github.com/PowerShell/PowerShellGallery/issues/135)",
      "created_at": "2020-10-30T07:33:27Z",
      "updated_at": "2020-10-30T07:34:21Z"
    },
    {
      "author": "kyanha",
      "author_association": "CONTRIBUTOR",
      "body": "Closing and reopening to rerun CI.",
      "created_at": "2020-10-30T20:19:08Z",
      "updated_at": "2020-10-30T20:19:08Z"
    },
    {
      "author": "kyanha",
      "author_association": "CONTRIBUTOR",
      "body": "Reopening to rerun CI.",
      "created_at": "2020-10-30T20:19:18Z",
      "updated_at": "2020-10-30T20:19:18Z"
    },
    {
      "author": "kyanha",
      "author_association": "CONTRIBUTOR",
      "body": "@n3rdopolis Tagging you to test the compatibility, particularly that alternate data streams on directories should not report as containers, if you would like to do so.",
      "created_at": "2020-11-06T05:03:07Z",
      "updated_at": "2020-11-06T05:03:07Z"
    },
    {
      "author": "n3rdopolis",
      "author_association": "NONE",
      "body": "sweet, that attribute looks good now!",
      "created_at": "2020-11-06T20:04:22Z",
      "updated_at": "2020-11-06T20:04:22Z"
    },
    {
      "author": "kyanha",
      "author_association": "CONTRIBUTOR",
      "body": "Also, I request that this be merged, even with the CodeFactor analysis failing.  I touched none of the functions that CodeFactor is complaining about, and for me to fix them in this PR would muddy the intent and scope of the actual changes.",
      "created_at": "2020-11-07T18:16:34Z",
      "updated_at": "2020-11-07T18:16:34Z"
    },
    {
      "author": "kyanha",
      "author_association": "CONTRIBUTOR",
      "body": "Current CI failures appear to be completely unrelated to this PR.",
      "created_at": "2020-11-11T08:53:01Z",
      "updated_at": "2020-11-11T08:53:01Z"
    },
    {
      "author": "n3rdopolis",
      "author_association": "NONE",
      "body": "Are they going to merge this? it worked for me",
      "created_at": "2020-12-03T03:02:58Z",
      "updated_at": "2020-12-03T03:02:58Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "> Are they going to merge this? it worked for me\r\n\r\nWe need reviews to merge a PR.\r\n\r\nAre you saying you've run this branch and it works? Would you be able to contribute a review of the PR as well?",
      "created_at": "2020-12-03T16:48:15Z",
      "updated_at": "2020-12-03T16:48:15Z"
    },
    {
      "author": "kyanha",
      "author_association": "CONTRIBUTOR",
      "body": "There. @rjmholt I think I got all the suggestions addressed (including properly hanging the if block, naming the parameter, and all the newlines).",
      "created_at": "2020-12-03T20:19:56Z",
      "updated_at": "2020-12-03T20:19:56Z"
    },
    {
      "author": "kyanha",
      "author_association": "CONTRIBUTOR",
      "body": "PowerShell-CI-static-analysis is failing because someone on the docs team removed\r\nhttps://docs.microsoft.com/dotnet/csharp/programming-guide/xmldoc/xml-documentation-comments, as specified by the Azure Pipeline.\r\n\r\nPowerShell-CI-static-analysis (Markdown and Common Tests) is failing for a reason I can't discern, but I assume it's related to the prior issue.\n\n<blockquote><div><strong><a href=\"https://docs.microsoft.com/en-us/404\">404 - Content Not Found</a></strong></div></blockquote>",
      "created_at": "2020-12-03T20:58:05Z",
      "updated_at": "2020-12-03T20:58:07Z"
    },
    {
      "author": "kyanha",
      "author_association": "CONTRIBUTOR",
      "body": "@rjmholt This is still saying merging is blocked, even after your approval.  What else needs to be done?",
      "created_at": "2020-12-07T07:55:28Z",
      "updated_at": "2020-12-07T07:55:28Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@kyanha Thanks for your contribution!",
      "created_at": "2020-12-08T03:43:55Z",
      "updated_at": "2020-12-08T03:43:55Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.2.0-preview.2` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.2.0-preview.2)\n",
      "created_at": "2020-12-15T21:37:47Z",
      "updated_at": "2020-12-15T21:37:47Z"
    }
  ],
  "created_at": "2020-10-30T07:17:19Z",
  "number": 13941,
  "state": "closed",
  "title": "The -Stream parameter now works with directories",
  "updated_at": "2020-12-15T22:38:22Z"
}