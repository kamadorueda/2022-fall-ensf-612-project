{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13816",
  "author": "mklement0",
  "body": "Inside a `ForEach-Object -Parallel` / `Start-ThreadJob` script block, passing common parameters `-Verbose`, `-Debug`, `-InformationAction Continue` does not make the respective stream output visible to the caller.\r\n\r\nWorkaround: set the corresponding preference variables in the _caller_'s scope.\r\n\r\n## Steps to reproduce\r\n\r\n```powershell\r\n# Note: The same applies to Start-ThreadJob\r\n1 | ForEach-Object -Parallel {\r\n  Write-Host \"host\"\r\n  Write-Output \"Output\"\r\n  Write-Error \"error\"       \r\n  Write-Warning \"Warning\"\r\n  Write-Debug \"debug\" -Debug\r\n  Write-Verbose \"verbose\" -Verbose\r\n  Write-Information \"information\" -InformationAction Continue\r\n}\r\n```\r\n\r\n## Expected behavior\r\n\r\nAll streams should produce output, as would be the case with `ForEach-Object` without `-Parallel` as well as with `Start-Job`:\r\n\r\n```none\r\nhost\r\nOutput\r\nWrite-Error: error\r\nWARNING: Warning\r\nDEBUG: debug\r\nVERBOSE: verbose\r\ninformation\r\n```\r\n\r\n## Actual behavior\r\n\r\nThe verbose, debug, and information streams unexpectedly produce no output:\r\n\r\n```none\r\nhost\r\nOutput\r\nWrite-Error: error\r\nWARNING: Warning\r\n```\r\n\r\n## Environment data\r\n\r\n```none\r\nPowerShell Core 7.1.0-rc.1\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "jaslawinMs",
      "author_association": "NONE",
      "body": "Same for 7.1.1 and 7.1.2",
      "created_at": "2021-02-13T01:41:06Z",
      "updated_at": "2021-02-13T01:44:25Z"
    },
    {
      "author": "RandyInMarin",
      "author_association": "NONE",
      "body": "This is the same in 7.1.3.  I worked around this by including  the following at the start of the script block.\r\n\r\n```\r\n-Parallel {\r\n    $DebugPreference = $using:DebugPreference # bug work around\r\n    $VerbosePreference = $using:VerbosePreference # bug work around\r\n    $InformationPreference = $using:InformationPreference # bug work around\r\n    ...\r\n```",
      "created_at": "2021-04-20T01:48:05Z",
      "updated_at": "2021-04-20T01:48:05Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov, could you please label this for the appropriate WG? Thanks.",
      "created_at": "2021-04-20T01:51:20Z",
      "updated_at": "2021-04-20T01:51:20Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "`Area-Cmdlets-Core` is best I can set. (This says the area is not classified in WG RFC for specific WG.)",
      "created_at": "2021-04-20T05:33:08Z",
      "updated_at": "2021-04-20T05:33:08Z"
    },
    {
      "author": "jaslawinMs",
      "author_association": "NONE",
      "body": "I am not sure how relevant it is to this thread, but also -WhatIf does not propagate with -Parallel",
      "created_at": "2021-04-20T18:54:47Z",
      "updated_at": "2021-04-20T18:54:47Z"
    },
    {
      "author": "RandyInMarin",
      "author_association": "NONE",
      "body": "@jaslawinMs Whatif being set to false is scary.  Let's see what files would be deleted using WhatIf.  Hum, that's a lot of large audit files.  I guess I better buy some extra backup space so that I can delete them without violating the law.  ",
      "created_at": "2022-01-25T23:17:43Z",
      "updated_at": "2022-01-25T23:17:43Z"
    },
    {
      "author": "RandyInMarin",
      "author_association": "NONE",
      "body": "Simple demo\r\n\r\n```\r\n$DebugPreference = 'Stop'\r\n$VerbosePreference = 'Stop'\r\n$ProgressPreference = 'Stop'\r\n$InformationPreference = 'Stop'\r\n$WarningPreference = 'Stop'\r\n$ErrorActionPreference = 'Stop'\r\n$WhatIfPreference = $true\r\n\r\n$DebugPreference\r\n$VerbosePreference\r\n$ProgressPreference\r\n$InformationPreference\r\n$WarningPreference\r\n$ErrorActionPreference\r\n$WhatIfPreference\r\n\r\n1 | ForEach-Object -Parallel {\r\n    $_\r\n    $DebugPreference\r\n    $VerbosePreference\r\n    $ProgressPreference\r\n    $InformationPreference\r\n    $WarningPreference\r\n    $ErrorActionPreference\r\n    $WhatIfPreference\r\n}\r\n```\r\n\r\nStop\r\nStop\r\nStop\r\nStop\r\nStop\r\nStop\r\nTrue\r\n1\r\nSilentlyContinue\r\nSilentlyContinue\r\nContinue        \r\nSilentlyContinue\r\nContinue        \r\nContinue        \r\nFalse",
      "created_at": "2022-01-25T23:19:41Z",
      "updated_at": "2022-01-25T23:20:40Z"
    },
    {
      "author": "Jaykul",
      "author_association": "CONTRIBUTOR",
      "body": "I'm not sure what's going on here, but it might be worth pointing out that the output _does_ come out:\r\n\r\nIf you run:\r\n\r\n```PowerShell\r\n$InformationPreference = \"SilentlyContinue\"\r\n\"Hello\",\"Goodbye\" | foreach -parallel {\r\n    write-host $_\r\n    invoke-command -Cn $Env:COMPUTERNAME -EnableNetworkAccess {\r\n        write-host $args from $Env:ComputerName\r\n    } -ArgumentList $_\r\n} -iv drip\r\n```\r\n\r\nIt will only output \r\n```\r\nHello\r\nGoodbye\r\n```\r\n\r\nBut if you check `$drip | Format-Table * -force` now\r\n\r\nYou will actually see the greeting from Computername, like:\r\n```\r\nMessageData         Source     TimeGenerated        Tags\r\n-----------         ------     -------------        ----\r\nHello               Write-Host 11/4/2022 1:38:25 AM {PSHOST}\r\nGoodbye             Write-Host 11/4/2022 1:38:25 AM {PSHOST}\r\nHello from Tester   Write-Host 11/4/2022 1:38:29 AM {PSHOST, FORWARDED}\r\nGoodbye from Tester Write-Host 11/4/2022 1:38:29 AM {PSHOST, FORWARDED}\r\n```\r\n\r\nSo why isn't it being displayed by the host?",
      "created_at": "2022-11-04T05:40:31Z",
      "updated_at": "2022-11-04T05:41:29Z"
    }
  ],
  "created_at": "2020-10-20T03:08:50Z",
  "labels": [
    "Issue-Question",
    "WG-Cmdlets-Core"
  ],
  "number": 13816,
  "state": "open",
  "title": "ForEach-Object -Parallel / Start-ThreadJob don't honor unsilencing of silent-by-default streams via common parameters",
  "updated_at": "2022-11-04T05:41:29Z"
}