{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13692",
  "author": "SteveL-MSFT",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nWhen using `ConvertTo-Json`, the default `-Depth` value is 2 to avoid recursion for objects like Services on Windows.  Users who do not set a deep enough depth may be losing data they may not be aware of as they expected full fidelity of the object to be serialized to JSON.  The change agreed by @PowerShell/powershell-committee is to emit a warning message once the depth is exceeded.  The warning is only emitted once per object serialized, but note that arrays are treated as a single object and not unrolled.\r\n\r\nThe SecureString tests were updated because it seems a credscan change identified a test \"secret\" in the script and caused CI to fail.  After fixing that, I needed to have scriptanalyzer not fail on using plaintext \"secret\".\r\n\r\n## PR Context\r\n\r\nFix https://github.com/PowerShell/PowerShell/issues/8393\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [ ] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2020-09-28T16:22:41Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT If we will move to new .Net JSON API in next milestone (7.2 LTS!) does it make sense to change anything today in JSON cmdlets?",
      "created_at": "2020-09-25T03:39:57Z",
      "updated_at": "2020-09-25T03:39:57Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov this change doesn't impact functionality and addresses the concern that users aren't aware they aren't getting a full fidelity serialization of their object.  I think it's ok to take this for 7.1 even if we plan to move to .NET JSON API in 7.2.",
      "created_at": "2020-09-25T05:13:24Z",
      "updated_at": "2020-09-25T05:13:24Z"
    },
    {
      "author": "heilkn",
      "author_association": "NONE",
      "body": "Thank you!",
      "created_at": "2020-09-28T17:25:11Z",
      "updated_at": "2020-09-28T17:25:11Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.1.0-rc.2` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.1.0-rc.2)\n",
      "created_at": "2020-10-21T19:08:20Z",
      "updated_at": "2020-10-21T19:08:20Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.2.0-preview.1` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.2.0-preview.1)\n",
      "created_at": "2020-11-17T23:02:00Z",
      "updated_at": "2020-11-17T23:02:00Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "Not taking this to 7.0.x as it adds a new warning and is a change in behavior.",
      "created_at": "2021-03-02T22:24:53Z",
      "updated_at": "2021-03-02T22:24:53Z"
    }
  ],
  "created_at": "2020-09-25T01:05:31Z",
  "number": 13692,
  "state": "closed",
  "title": "Emit warning if `ConvertTo-Json` exceeds `-Depth` value",
  "updated_at": "2021-03-02T22:25:01Z"
}