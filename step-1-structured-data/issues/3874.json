{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3874",
  "author": "Liturgist",
  "body": "<!--\r\n\r\nIf it is a bug report:\r\n- make sure you are able to repro it on the latest released version. \r\nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\r\n- Search the existing issues.\r\n- Refer to the [FAQ](../docs/FAQ.md).\r\n- Refer to the [known issues](../docs/KNOWNISSUES.md).\r\n- Fill out the following repro template\r\n\r\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\r\n-->\r\n\r\nSteps to reproduce\r\n------------------\r\nInvoke-Command -ComputerName localhost -ScriptBlock { dir }\r\n\r\nExpected behavior\r\n-----------------\r\nDirectory contents are presented.\r\n\r\nActual behavior\r\n---------------\r\n```\r\nPS C:\\Program Files\\PowerShell\\6.0.0-beta.1> Invoke-Command -ComputerName localhost -ScriptBlock { dir }\r\n[localhost] Connecting to remote server localhost failed with the following error message : Access is denied. For more\r\ninformation, see the about_Remote_Troubleshooting Help topic.\r\n    + CategoryInfo          : OpenError: (localhost:String) [], PSRemotingTransportException\r\n    + FullyQualifiedErrorId : AccessDenied,PSSessionStateBroken\r\n```\r\n\r\nIf using the loopback adapter to localhost is prohibited unless elevated, the error message should include that information. It clearly knows the problem. Not sure of the implications on Linux.\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\nPSVersion                      6.0.0-beta\r\nPSEdition                      Core\r\nBuildVersion                   3.0.0.0\r\nCLRVersion\r\nGitCommitId                    v6.0.0-beta.1\r\nOS                             Microsoft Windows 10.0.15063\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2017-06-27T16:25:19Z",
  "comments": [
    {
      "author": "Liturgist",
      "author_association": "NONE",
      "body": "This appears to be a security restriction by design on Windows.",
      "created_at": "2017-06-27T16:25:19Z",
      "updated_at": "2017-06-27T16:25:19Z"
    },
    {
      "author": "a-kanaan",
      "author_association": "NONE",
      "body": "I am getting same error\r\nbut if remove ComputerName then, it will work, but I think it's not a loopback work",
      "created_at": "2018-03-07T04:05:49Z",
      "updated_at": "2018-03-07T04:05:49Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "`ComputerName ` is implemented as remoting that requires elevated rights.",
      "created_at": "2018-03-24T17:44:53Z",
      "updated_at": "2018-03-24T17:44:53Z"
    },
    {
      "author": "Liturgist",
      "author_association": "NONE",
      "body": "Does not work using \"Run as Administrator.\" What elevated rights are required?",
      "created_at": "2018-05-27T01:57:45Z",
      "updated_at": "2018-05-27T01:57:45Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Did you set remoting up?",
      "created_at": "2018-05-27T10:11:41Z",
      "updated_at": "2018-05-27T10:11:41Z"
    },
    {
      "author": "FcoJavier0099",
      "author_association": "NONE",
      "body": "Well, you need to enlist the localhost (with its hostname) to use remoting.\r\nThese were the steps that I follow:\r\n(1) Start a new powershell window with administrator privilegies (Run as Administrator)\r\n(2) Retrive your localhost name with the command: `hostname`, in my example its name is \"PROCDB01\"\r\n(3) Enlist this hostname in the list of trusted servers with a comman like this:\r\n```\r\n# procdb01 is the localhost\r\nSet-Item WSMan:\\localhost\\Client\\TrustedHosts -Value \"procdb01,procdb02,procdb03,procdb04,procdb05\"\r\n```\r\n(4) Activate Remoting with these commands:\r\n```\r\nWinrm qc\r\nEnable-PSRemoting\r\n```\r\n(5) Test it\r\n```\r\nInvoke-Command -ComputerName procdb01 -ScriptBlock {hostname}\r\nInvoke-Command -ComputerName localhost -ScriptBlock {hostname}\r\n```\r\n\r\n**Note:** I'am using this version:\r\n```PowerShell\r\nPS > $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      5.1.14393.2828\r\nPSEdition                      Desktop\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nBuildVersion                   10.0.14393.2828\r\nCLRVersion                     4.0.30319.42000\r\nWSManStackVersion              3.0\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\n```",
      "created_at": "2019-07-12T02:02:01Z",
      "updated_at": "2019-07-12T02:09:53Z"
    }
  ],
  "created_at": "2017-05-27T10:47:18Z",
  "labels": [
    "Issue-Discussion",
    "Resolution-Answered",
    "WG-Cmdlets-Core"
  ],
  "number": 3874,
  "state": "closed",
  "title": "Invoke-Command error message on localhost loopback",
  "updated_at": "2019-07-12T02:09:53Z"
}