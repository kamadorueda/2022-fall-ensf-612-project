{
  "_url": "https://github.com/PowerShell/PowerShell/issues/979",
  "author": "andschwa",
  "body": "Similar to #943, we need a test scenario where the cmdlet requires not only PowerShell, but also additional library dependencies that it deploys in the module folder.\n\nWe expected this to work as Windows PowerShell (I believe) supports such a setup; however, it is not working with PowerShell from repo..\n\nFrom Atanas Atanasov (VMWare partner)\n\n> Now the module loads but the required assemblies (listed in the manifest .psd1 file) need to be in the PowerShell installation folder to be discovered. I\u2019ll workaround it for now by placing my assemblies in the installation folder.\n\nApparently the module system is failing to load libraries specified in the manifest. The C# library loading logic in Core PowerShell is _very_ different from WIdnows PowerShell, and moreover, PowerShell Core from GitHub repo is different from Core (due to #839). \n\n/cc @SteveL-MSFT @daxian-dbw\n",
  "closed_at": "2018-04-30T17:11:20Z",
  "comments": [
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "@joeyaiello I _think_ that Atanas received the v0.4.0 package and this was bug is no more. Can you verify that?\n",
      "created_at": "2016-05-19T17:07:43Z",
      "updated_at": "2016-05-19T17:07:43Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "That's correct, it fixed his problem. :) \n",
      "created_at": "2016-05-19T17:08:21Z",
      "updated_at": "2016-05-19T17:08:21Z"
    }
  ],
  "created_at": "2016-05-16T17:58:27Z",
  "labels": [
    "Issue-Bug",
    "WG-Quality-Test",
    "Usability"
  ],
  "number": 979,
  "state": "closed",
  "title": "Add test scenario for module with external dependencies",
  "updated_at": "2018-04-30T17:11:20Z"
}