{
  "_url": "https://github.com/PowerShell/PowerShell/issues/8080",
  "author": "vexx32",
  "body": "## PR Summary\r\n\r\nFix #5717.\r\nFix #8076.\r\n\r\nTest-Path is expected to be almost exclusively a True/False response cmdlet, and the cases where it may error or return an unexpected result are a few too many at present (see above issues). This PR allows `$null` / empty value(s) to be passed to Test-Path without throwing parameter binding exceptions. It also adds additional logic to Test-Path such that passing it `$null`, `''`, or `' '` (or any pure whitespace string) returns `$false` instead of throwing an error or returning `$true` on a \"path\" that is nothing but whitespace.\r\n\r\nNew behaviour:\r\n```powershell\r\nPS> Test-Path ' '\r\nFalse\r\nPS> Test-Path ''\r\nFalse\r\nPS> Test-Path @()\r\nFalse\r\n```\r\nError conditions:\r\n```powershell\r\nPS> Test-Path $null\r\nPS> Test-Path $null, $null\r\n```\r\nThese are non-terminating errors.\r\n\r\nA small handful of tests predicated on Test-Path failing in these cases have been updated to simply transform the error into terminating via -ErrorAction, as it appears that the important part of the test was not Test-Path itself, but throwing a terminating error in specific code strictures.\r\n\r\nTests for the additional behaviours have also been added.\r\n\r\n## PR Checklist\r\n\r\n- [X] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [X] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [X] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` to the beginning of the title and remove the prefix when the PR is ready.\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [X] User-facing [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [X] Issue filed - Issue link: https://github.com/PowerShell/PowerShell-Docs/issues/3165\r\n- **Testing - New and feature**\r\n    - [ ] Not Applicable or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n        - [ ] [Add `[feature]` if the change is significant or affects feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\r\n",
  "closed_at": "2018-11-21T05:08:32Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT Is this a breaking change?",
      "created_at": "2018-10-19T12:23:47Z",
      "updated_at": "2018-10-19T12:23:47Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee reviewed this, we believe the correct behavior is to accept null/nullcollection, but return non-terminating error at runtime (instead of exception or $false)",
      "created_at": "2018-10-24T22:23:32Z",
      "updated_at": "2018-10-24T22:23:32Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@vexx32 Please continue and open new issue in PowerShell-Docs.",
      "created_at": "2018-10-25T03:50:49Z",
      "updated_at": "2018-10-25T03:50:49Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Added non-terminating errors for the following cases, per PowerShell committee recommendation:\r\n\r\n1. Null collection handed to Test-Path (e.g., `Test-Path $null`)\r\n2. Collection of null items handed to Test-Path (e.g., `Test-Path $null, $null`)\r\n\r\n`$false` will be output if:\r\n1. Path is invalid (same as existing behaviour)\r\n2. Path is empty or pure whitespace.\r\n\r\nDocs issue: https://github.com/PowerShell/PowerShell-Docs/issues/3165",
      "created_at": "2018-10-25T04:19:12Z",
      "updated_at": "2018-10-25T04:19:24Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@vexx32 Please add tests for new behaviors.",
      "created_at": "2018-10-25T05:05:59Z",
      "updated_at": "2018-10-25T05:05:59Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> @PowerShell/powershell-committee reviewed this, we believe the correct behavior is to accept null/nullcollection, but return non-terminating error at runtime (instead of exception or $false)\r\n\r\nWe'll get $false without `-ErrorAction Stop` - yes?",
      "created_at": "2018-10-31T04:30:02Z",
      "updated_at": "2018-10-31T04:30:02Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "We'll get a non-terminating error per the recommendation. In terms of output this will effectively be treated as `$null` in expressions and statements; in most reasonable circumstances this will be coerced to` $false `in a statement that is expecting a boolean conditional, yes.\r\n\r\nWould explicitly outputting `$false` along with the error(s) be preferable?",
      "created_at": "2018-10-31T04:34:40Z",
      "updated_at": "2018-10-31T04:36:29Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@vexx32 Could you please continue?\r\n\r\nUpdate: Sorry, seems my comments was addressed.",
      "created_at": "2018-11-06T06:28:56Z",
      "updated_at": "2018-11-06T06:30:47Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT @adityapatwardhan Could you please review the small PR?",
      "created_at": "2018-11-14T05:16:53Z",
      "updated_at": "2018-11-14T05:16:53Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "MacOS CI failure appears to be temporary and no related to the PR as far as I can see.",
      "created_at": "2018-11-16T18:13:31Z",
      "updated_at": "2018-11-16T18:13:31Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Restart MacOs CI.",
      "created_at": "2018-11-16T19:24:03Z",
      "updated_at": "2018-11-16T19:24:03Z"
    },
    {
      "author": "ZenoArrow",
      "author_association": "NONE",
      "body": "Is this change due to be released in PowerShell 7? I haven't seen it in the release notes of the previews released to date, just wanted to check that it's still on course to be included.",
      "created_at": "2019-11-05T10:26:41Z",
      "updated_at": "2019-11-05T10:26:41Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@ZenoArrow The fix is in current 7.0 Preview5 and will be in 7.0 GA too.\r\nAlso the fix was mentioned in CHANGELOG.md.",
      "created_at": "2019-11-05T11:06:23Z",
      "updated_at": "2019-11-05T11:07:19Z"
    },
    {
      "author": "ZenoArrow",
      "author_association": "NONE",
      "body": "@iSazonov \r\nThanks for the heads up about the changelog. Referencing that file...\r\n\"Test-Path: Return $false when given an empty or $null -Path/-LiteralPath value (#8080) (Thanks @vexx32!)\"\r\n\r\nThe behaviour seems to be fixed for empty path, but the behaviour is different from what I'd expect for $null values...\r\n\r\n![TestPath20191105](https://user-images.githubusercontent.com/1449002/68236494-2a1f1680-fffd-11e9-8d5f-6401596cfa26.png)\r\n\r\nAm I missing something?\r\n",
      "created_at": "2019-11-05T18:51:46Z",
      "updated_at": "2019-11-05T18:51:46Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@ZenoArrow apologies! Looks like I neglected to update the PR description properly. The PS committee's decision was that we should maintain the error for $null values. I didn't agree, but that is that they decided and so that is how it ended up being implemented.\r\n\r\nIf you disagree with their decision there (I'm right there with you really) I'd recommend opening an issue so that they can see that the behaviour isn't as desired and we can have them reconvene and reassess. :slightly_smiling_face: \r\n\r\n/Cc @SteveL-MSFT ",
      "created_at": "2019-11-05T23:58:47Z",
      "updated_at": "2019-11-05T23:58:47Z"
    },
    {
      "author": "ZenoArrow",
      "author_association": "NONE",
      "body": "@vexx32 Thanks for the heads up. I can raise a new issue, but it'd effectively just be a duplicate of the issue raised by @KevinMarquette last year...\r\nhttps://github.com/PowerShell/PowerShell/issues/8076\r\n\r\nRegarding returning the non-terminating error, I understand this to a degree, but what I can't understand is why Test-Path can't return more than just the error. Correct me if I'm wrong, but usually error stream output doesn't interfere with the standard output, so in my mind there's no reason not to return both (an error message to the error stream and a \"False\" value to the standard stream).",
      "created_at": "2019-11-06T00:20:16Z",
      "updated_at": "2019-11-06T00:21:47Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "It certainly could! But it's not strictly necessary. If you're using Test-Path as a conditional in most cases the non-respose will be treated as $false.\r\n\r\nFor example:\r\n\r\n```powershell\r\nif (Test-Path $null) { \"true!\" } Else { \"false!\" }\r\n```",
      "created_at": "2019-11-06T00:58:56Z",
      "updated_at": "2019-11-06T00:58:56Z"
    },
    {
      "author": "ZenoArrow",
      "author_association": "NONE",
      "body": "@vexx32 Good to know. In that case the current improvements to Test-Path should cover what I was hoping for.",
      "created_at": "2019-11-06T15:06:55Z",
      "updated_at": "2019-11-06T15:06:55Z"
    }
  ],
  "created_at": "2018-10-19T03:21:45Z",
  "number": 8080,
  "state": "closed",
  "title": "Test-Path: Return $false when given an empty or $null -Path/-LiteralPath value",
  "updated_at": "2019-11-06T15:06:55Z"
}