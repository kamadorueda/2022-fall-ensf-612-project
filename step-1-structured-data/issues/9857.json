{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9857",
  "author": "travisclagrone",
  "body": "# Steps to reproduce\r\n\r\n```powershell\r\npwsh -NoProfile -Command {\r\n    Get-Command -Noun 'ItemProperty*' -PipelineVariable 'command' |\r\n    ForEach-Object {\r\n        $alias = Get-Alias -Definition $_.Name -ErrorAction Ignore\r\n        if ($alias) {\r\n            $alias\r\n        } else {\r\n            $null\r\n        }\r\n    } -PipelineVariable 'alias' |\r\n    ForEach-Object {\r\n        [PSCustomObject] @{\r\n            Command = $command.Name\r\n            Alias   = $alias.Name\r\n            Options = $alias.Options\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n# Expected behavior\r\n\r\n```none\r\nCommand               Alias  Options\r\n-------               -----  -------\r\nClear-ItemProperty    clp   ReadOnly\r\nCopy-ItemProperty     cpp   ReadOnly\r\nGet-ItemProperty      gp    ReadOnly\r\nGet-ItemPropertyValue gpv   ReadOnly\r\nMove-ItemProperty     mp    ReadOnly\r\nNew-ItemProperty      np    ReadOnly\r\nRemove-ItemProperty   rp    ReadOnly\r\nRename-ItemProperty   rnp   ReadOnly\r\nSet-ItemProperty      sp    ReadOnly\r\n```\r\n\r\n# Actual behavior\r\n\r\n```none\r\nCommand               Alias  Options\r\n-------               -----  -------\r\nClear-ItemProperty    clp   ReadOnly\r\nCopy-ItemProperty     cpp   ReadOnly\r\nGet-ItemProperty      gp    ReadOnly\r\nGet-ItemPropertyValue gpv   ReadOnly\r\nMove-ItemProperty     mp    ReadOnly\r\nNew-ItemProperty                    \r\nRemove-ItemProperty   rp    ReadOnly\r\nRename-ItemProperty   rnp   ReadOnly\r\nSet-ItemProperty      sp    ReadOnly\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.2.1\r\nPSEdition                      Core\r\nGitCommitId                    6.2.1\r\nOS                             Microsoft Windows 10.0.17763 \r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0, 5.0, 5.1.10032.0, 6.2.1}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2019-06-12T06:34:33Z",
  "comments": [
    {
      "author": "BrucePay",
      "author_association": "COLLABORATOR",
      "body": "@travislagrone Reading between the lines, you appear to be asserting that we should add 'np' as an alias for New-ItemProperty - correct? Now aliases are for interactive use, in theory to act as accelerators to facillitate interactive operations. In practise I suspect that in fact New-ItemProperty is not used enough to warrant acceleration (please tell me if i am wrong.) so there's not much justification to do this. Also, it would be a breaking change since it adding it would hid existing \"np\" commands. Thoughts?",
      "created_at": "2019-06-08T11:23:46Z",
      "updated_at": "2019-06-08T11:23:46Z"
    },
    {
      "author": "travisclagrone",
      "author_association": "NONE",
      "body": "@BrucePay From my perspective, _none_ of the `*-ItemProperty` cmdlets are used enough by enough people to warrant a built-in pre-defined alias. If I had my preference, I'd remove all of their aliases from \"language-native\" status.\r\n\r\nThat being said, if PowerShell is choosing to / has already _de facto_ committed to aliasing the `*-ItemProperty` cmdlets, then it should provide consistency in that regard.  Otherwise, the implicit expectation of \"ItemProperty cmdlet aliases are a language-native feature\" that is built up by the presence of literally all of them except one is violated in a somewhat jarring (albeit minor) way when encountered during interactive work.\r\n\r\nAll that being said, this issue appears to me more like an accidental oversight given the intention to alias them all, rather than a mediated decision that `New-ItemProperty` in particular is fundamentally less deserving of an alias then every other `*-ItemProperty` cmdlet (whatever \"deserving\" was defined as by the original creator(s)).\r\n\r\nAm I characterizing the genesis of this inconsistency fairly?  And either way, is it actually feasible to \"demote\" (so to speak) the `*-ItemProperty` cmdlet aliases from \"language-native\" status?",
      "created_at": "2019-06-08T15:55:22Z",
      "updated_at": "2019-06-08T15:56:16Z"
    },
    {
      "author": "MovGP0",
      "author_association": "NONE",
      "body": "I agree that they are not widely used, but removing them will break things. So that's a bad thing. \r\n\r\nAdding that alias would improve consistency. So that would be a plus. ",
      "created_at": "2019-06-08T20:25:04Z",
      "updated_at": "2019-06-08T20:25:04Z"
    },
    {
      "author": "BrucePay",
      "author_association": "COLLABORATOR",
      "body": "Somewhat random comments: Aliases are an interactive-convenience feature rather than a \"language-native feature\" and, for the most part, should not be used in production scripts. I don't remember us making a conscious decision to exclude New-ItemProperty (@khansen00 might remember more) so it's probably an oversight. However even though you shouldn't use aliases in scripts, people do so removing the existing aliases would be a breaking change. Adding a new alias would also be a breaking change because people might have their own \"np\" command. Yes we were overly enthusiastic adding aliases in the beginning. Clearly not everything needs an alias but it was our \"defence against verbosity\" argument. The core scenario for the ItemProperty commands is the registry which has both items and values (properties). ",
      "created_at": "2019-06-10T02:34:47Z",
      "updated_at": "2019-06-10T02:34:47Z"
    },
    {
      "author": "travisclagrone",
      "author_association": "NONE",
      "body": "@BrucePay I think I might have come across as a bit abrasive in my initial response.  If so, I apologize.  It was not my intention.\r\n\r\nIf it helps to clarify my position, I agree with you that aliases should be considered a \"convenience feature\" for interactive work, and that they should not be used in production scripts.\r\n\r\nSo, to advance the discussion, do you--or anyone else on the PowerShell team--know of any good way to search a corpus of PowerShell files with regex?  In particular, I would like to perform a survey of public PowerShell scripts on GitHub for the incidence of the ItemProperty cmdlet aliases, as well as that of my proposed \"np\" alias.",
      "created_at": "2019-06-10T18:11:07Z",
      "updated_at": "2019-06-10T18:11:07Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "@travisclagrone \r\n\r\n> as well as that of my proposed \"np\" alias.\r\n\r\nThe problem with that is that a large portion of the folks who would use that in a script, aren't typically the type of folks to publish their work.\r\n\r\nThat said, I would be much more worried about breaking profiles.  Personally I don't like the idea of *any* additional two letter command names being reserved, regardless of the command's popularity.",
      "created_at": "2019-06-10T18:33:00Z",
      "updated_at": "2019-06-10T18:33:00Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "For reference https://github.com/PowerShell/PowerShell-RFC/pull/129 - long story about aliases.",
      "created_at": "2019-06-11T10:36:15Z",
      "updated_at": "2019-06-11T10:36:15Z"
    },
    {
      "author": "BrucePay",
      "author_association": "COLLABORATOR",
      "body": "@travisclagrone I did a quick search of github using:\r\n```\r\nlanguage:powershell \"gp -path\"\r\n```\r\nThis returned a few hits (ones that aren't part of our test suites) so the aliases are definitely used though not frequently. As @SeeminglyScience points out, most uses are likely in casual files or profiles.\r\n\r\nOn the other hand, proving that it's safe to add an alias like 'np' i.e. that it _isn't_ currently used is impossible. The best you say that it isn't used in the body of software you checked. That said, I did a search\r\n```\r\nlanguage:powershell \" np -path\"\r\n```\r\nand there is one hit where `np` is used as a command.",
      "created_at": "2019-06-11T19:37:47Z",
      "updated_at": "2019-06-11T19:37:47Z"
    },
    {
      "author": "travisclagrone",
      "author_association": "NONE",
      "body": "Given the discussion and results so far, I believe it is appropriate to close this issue. At the very least, it can now stand as documentation + commentary for posterity.",
      "created_at": "2019-06-12T06:34:33Z",
      "updated_at": "2019-06-12T06:34:33Z"
    }
  ],
  "created_at": "2019-06-08T07:22:40Z",
  "labels": [
    "Issue-Question",
    "Resolution-Answered"
  ],
  "number": 9857,
  "state": "closed",
  "title": "Missing exactly one ItemProperty cmdlet alias",
  "updated_at": "2019-06-12T17:02:39Z"
}