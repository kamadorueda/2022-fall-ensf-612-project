{
  "_url": "https://github.com/PowerShell/PowerShell/issues/16659",
  "author": "kilasuit",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nFixes #16658 \r\n\r\n## PR Context\r\nUsers may get URI/URL mixed up and by adding an alias to this shared parameter will reduce errors in interactive scripting \r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [x] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and opened an issue in the relevant tool repository. This may include:\r\n        - [ ] Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode\r\n        (which runs in a different PS Host).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n",
  "closed_at": "2022-10-05T18:01:21Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Make draft until we get a conclusion from WG in related issue.",
      "created_at": "2021-12-21T05:34:58Z",
      "updated_at": "2021-12-21T05:34:58Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as stale because it has been marked as requiring author feedback but has not had any activity for **15 days**. It will be closed if no further activity occurs **within 10 days of this comment**.",
      "created_at": "2022-01-08T08:00:45Z",
      "updated_at": "2022-01-08T08:00:45Z"
    },
    {
      "author": "kilasuit",
      "author_association": "COLLABORATOR",
      "body": "@PaulHigin can you please review this along with the conversation in #16658 & comment on whether or not this is something that could be merged or not",
      "created_at": "2022-01-09T22:29:12Z",
      "updated_at": "2022-01-09T22:29:12Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "This seems like a reasonable change to me, and I don't see how this would be a breaking change.  However, the cmdlet working group should weigh in on it.  So adding that tag.",
      "created_at": "2022-01-10T19:02:21Z",
      "updated_at": "2022-01-10T19:02:21Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "For WG. I can't agree with that _cosmetic_ addition.\r\n1. URI is not wrong term in the context\r\n2. Aliases are always bad thing until they do useful work. Ex., we added PSPath alias to LiteralPath parameter of many cmdlets. As result we get perf win because of skipping unneeded globbing.\r\n3. For interactive scenario - the source of this request - we have tab-completion, suggestions and now predictions - all this makes cosmetic aliases unnecessary.",
      "created_at": "2022-01-11T04:27:53Z",
      "updated_at": "2022-01-11T04:27:53Z"
    },
    {
      "author": "kilasuit",
      "author_association": "COLLABORATOR",
      "body": "> For interactive scenario - the source of this request - we have tab-completion, suggestions and now predictions - all this makes cosmetic aliases unnecessary.\r\n\r\nSorry @iSazonov I have to disagree with you on especialy on that last part because you are forgetting about the non-advanced users who are coming to this language for the first time, who may not know about `tab-completion, suggestions and now predictions ` as well as those using the language for years and still don't use those to their full potential. Plus this request was as pointed out in the issue based on a long standing Microsoft FTE who correctly pointed out that muscle memory in this particular instance causes unneccessary failures, which this PR would address and is exactly why we have aliases on parameters, for improving the **user experience** not for engine perfomance gains like you mention in your 2nd point & your first isn't an issue of being technically correct, but an issue that many users **do not understand** the differnce between them and use them interchangably.\r\n\r\nThis is defiinitley more for the Interactive UX WG than the Cmdlets one I think @PaulHigin so I'm tagging @JamesWTruher & @daxian-dbw as these are their key areas from that WG",
      "created_at": "2022-01-13T11:45:06Z",
      "updated_at": "2022-01-13T11:45:06Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@kilasuit I could agree if we made a breaking change and _replaced_ the parameter name, but otherwise it only worsens the UX - aliases have never been a public contract and are not mentioned anywhere - neither in documentation, nor in tab completion.\r\nAnd there are all kinds of newbies - those who learn and those who are lazy. You don't have to worry about the latter, and the former, if they were able to find this teamlet, no doubt they are already familiar with the list of parameters.",
      "created_at": "2022-01-13T12:13:19Z",
      "updated_at": "2022-01-13T12:13:19Z"
    },
    {
      "author": "kilasuit",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov - sorry, whilst I respect your POV on just about everything else when it comes to PowerShell i have to point out that your view here is currently not correct\r\n\r\n1) They are a part of the public contract\r\n2) They are documented (albeit poorly) [in this doc](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_functions_advanced?view=powershell-7.2#long-description) but [called out fully in this section of this other doc](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_functions_advanced_parameters?view=powershell-7.2#alias-attribute)  \r\n3) Implict parameter completion allows use of named aliases or lazy aliases\r\n4) As @PaulHigin mentioned this isn't a breaking change and is why aliases exist to not end up being a breaking change in the first place",
      "created_at": "2022-01-13T12:57:29Z",
      "updated_at": "2022-01-13T12:57:29Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Labelled both this PR and the issue with `WG-Interactive-Console`, as the main disagreement in the discussions in #16658 is about a subtle change in tab completion for this parameter when the `Emacs` edit mode is in use, see https://github.com/PowerShell/PowerShell/issues/16658#issuecomment-1001809209.",
      "created_at": "2022-01-13T19:22:20Z",
      "updated_at": "2022-01-13T19:22:20Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as stale because it has been marked as requiring author feedback but has not had any activity for **15 days**. It will be closed if no further activity occurs **within 10 days of this comment**.",
      "created_at": "2022-02-01T08:00:45Z",
      "updated_at": "2022-02-01T08:00:45Z"
    },
    {
      "author": "kilasuit",
      "author_association": "COLLABORATOR",
      "body": "This is currently waiting agreement based on the above mentioned comment in the issue as this has identified a potential additional change to PSReadline (raised in https://github.com/PowerShell/PSReadLine/issues/3198) to equate for adapting this particular user experience.",
      "created_at": "2022-02-01T14:55:16Z",
      "updated_at": "2022-02-01T14:55:16Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as stale because it has been marked as requiring author feedback but has not had any activity for **15 days**. It will be closed if no further activity occurs **within 10 days of this comment**.",
      "created_at": "2022-02-19T20:00:43Z",
      "updated_at": "2022-02-19T20:00:43Z"
    },
    {
      "author": "pull-request-quantifier[bot]",
      "author_association": "NONE",
      "body": "### ![](https://img.shields.io/static/v1?label=Quantified&message=Extra%20Small&color=green)\r\n\r\nThis PR has `19` quantified lines of changes. In general, a change size of upto `200` lines is ideal for the best PR experience!\r\n\r\n------\r\n\r\n<details >\r\n    <summary display=\"inline\"> <strong>Quantification details</strong></summary>\r\n    <p />\r\n\r\n```\r\nLabel      : Extra Small\r\nSize       : +19 -0\r\nPercentile : 7.6%\r\n\r\nTotal files changed: 2\r\n\r\nChange summary by file extension:\r\n.cs : +1 -0\r\n.ps1 : +18 -0\r\n```\r\n> Change counts above are quantified counts, based on the [PullRequestQuantifier customizations](https://github.com/microsoft/PullRequestQuantifier/blob/main/docs/prquantifier-yaml.md).\r\n    \r\n</details>\r\n\r\n\r\n<details>\r\n    <summary display=\"inline\"> <strong>Why proper sizing of changes matters</strong> </summary>\r\n    <p/>\r\n    <p/>\r\n\r\nOptimal pull request sizes drive a better predictable PR flow as they strike a\r\nbalance between between PR complexity and PR review overhead. PRs within the\r\noptimal size (typical small, or medium sized PRs) mean:\r\n\r\n- Fast and predictable releases to production:\r\n  - Optimal size changes are more likely to be reviewed faster with fewer\r\niterations.\r\n  - Similarity in low PR complexity drives similar review times.\r\n- Review quality is likely higher as complexity is lower:\r\n  - Bugs are more likely to be detected.\r\n  - Code inconsistencies are more likely to be detected.\r\n- Knowledge sharing is improved within the participants:\r\n  - Small portions can be assimilated better.\r\n- Better engineering practices are exercised:\r\n  - Solving big problems by dividing them in well contained, smaller problems.\r\n  - Exercising separation of concerns within the code changes.\r\n\r\n#### What can I do to optimize my changes\r\n\r\n- Use the PullRequestQuantifier to quantify your PR accurately\r\n  - Create a context profile for your repo using the [context generator](https://github.com/microsoft/PullRequestQuantifier/releases)\r\n  - Exclude files that are not necessary to be reviewed or do not increase the review complexity. Example: Autogenerated code, docs, project IDE setting files, binaries, etc. Check out the `Excluded` section from your `prquantifier.yaml` context profile. \r\n  - Understand your typical change complexity, drive towards the desired complexity by adjusting the label mapping in your `prquantifier.yaml` context profile.\r\n  - Only use the labels that matter to you, [see context specification](./docs/prquantifier-yaml.md) to customize your `prquantifier.yaml` context profile.\r\n- Change your engineering behaviors\r\n  - For PRs that fall outside of the desired spectrum, review the details and check if:\r\n    - Your PR could be split in smaller, self-contained PRs instead\r\n    - Your PR only solves one particular issue. (For example, don't refactor and code new features in the same PR).\r\n\r\n#### How to interpret the change counts in git diff output\r\n\r\n- One line was added: `+1 -0`\r\n- One line was deleted: `+0 -1`\r\n- One line was modified: `+1 -1` (git diff doesn't know about modified, it will\r\ninterpret that line like one addition plus one deletion)\r\n- Change percentiles: Change characteristics (addition, deletion, modification)\r\nof this PR in relation to all other PRs within the repository.\r\n\r\n</details>\r\n\r\n<p />\r\n\r\n------\r\n\r\nWas this comment helpful? <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoia2lsYXN1aXQiLCJSZXBvc2l0b3J5TGluayI6Imh0dHBzOi8vZ2l0aHViLmNvbS9Qb3dlclNoZWxsL1Bvd2VyU2hlbGwiLCJQdWxsUmVxdWVzdExpbmsiOiJodHRwczovL2dpdGh1Yi5jb20vUG93ZXJTaGVsbC9Qb3dlclNoZWxsL3B1bGwvMTY2NTkiLCJFdmVudFR5cGUiOiJUaHVtYnNVcCJ9&amp;anonymous=True\" target=\"_blank\" title=\"Thumbs up\"><strong>:thumbsup:</strong></a> <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoia2lsYXN1aXQiLCJSZXBvc2l0b3J5TGluayI6Imh0dHBzOi8vZ2l0aHViLmNvbS9Qb3dlclNoZWxsL1Bvd2VyU2hlbGwiLCJQdWxsUmVxdWVzdExpbmsiOiJodHRwczovL2dpdGh1Yi5jb20vUG93ZXJTaGVsbC9Qb3dlclNoZWxsL3B1bGwvMTY2NTkiLCJFdmVudFR5cGUiOiJOZXV0cmFsIn0=&amp;anonymous=True\" target=\"_blank\" title=\"Neutral\"><strong>&nbsp;:ok_hand:</strong></a> <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoia2lsYXN1aXQiLCJSZXBvc2l0b3J5TGluayI6Imh0dHBzOi8vZ2l0aHViLmNvbS9Qb3dlclNoZWxsL1Bvd2VyU2hlbGwiLCJQdWxsUmVxdWVzdExpbmsiOiJodHRwczovL2dpdGh1Yi5jb20vUG93ZXJTaGVsbC9Qb3dlclNoZWxsL3B1bGwvMTY2NTkiLCJFdmVudFR5cGUiOiJUaHVtYnNEb3duIn0=&amp;anonymous=True\" target=\"_blank\" title=\"Thumbs down\"><strong>&nbsp;:thumbsdown:</strong></a> (<a href=\"MAILTO:prquantifier@microsoft.com\" title=\"Mail to prquantifier@microsoft.com\">Email</a>)\r\n[Customize PullRequestQuantifier](https://github.com/PowerShell/PowerShell/blob/master/.github/prquantifier.yaml) for this repository.\r\n\r\n",
      "created_at": "2022-09-06T22:23:24Z",
      "updated_at": "2022-09-06T22:23:24Z"
    },
    {
      "author": "kilasuit",
      "author_association": "COLLABORATOR",
      "body": "Reopening this PR & asking for others in the Interactive UX WG to comment on this. ",
      "created_at": "2022-09-06T22:26:19Z",
      "updated_at": "2022-09-06T22:26:19Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as stale because it has been marked as requiring author feedback but has not had any activity for **15 days**. It will be closed if no further activity occurs **within 10 days of this comment**.",
      "created_at": "2022-09-25T08:01:19Z",
      "updated_at": "2022-09-25T08:01:19Z"
    }
  ],
  "created_at": "2021-12-21T03:51:17Z",
  "number": 16659,
  "state": "closed",
  "title": "Add in Url Alias for IRM/IWR Cmdlets",
  "updated_at": "2022-10-05T18:01:21Z"
}