{
  "_url": "https://github.com/PowerShell/PowerShell/issues/8322",
  "author": "daxian-dbw",
  "body": "### Problem\r\n\r\nThe current PowerShell SDK NuGet packages have crossgen'ed assemblies in them, which are huge in size compared to the IL version of those assemblies, e.g. `System.Management.Automation.dll` from the NuGet package is 19.4mb while the IL version of it is 6.6mb. This causes a size bloat to applications that host PowerShell runtime.\r\n\r\n### Suggestion\r\n\r\nInstead of ship with crossgen'ed assemblies, make the PowerShell SDK NuGet packages bundle with IL assemblies.\r\n\r\nThe pros of this:\r\n- Much smaller size\r\n- Much simpler folder structures of the NuGet packages\r\n\r\nThe cons of this:\r\n- Slower startup time\r\n\r\nI totally see the perf benefit of having crossgen'ed assemblies in the SDK NuGet packages, so I'm not suggesting completely rule it out. We need to think about whether it's possible to keep the benefits from both approach.\r\n\r\n/cc @adityapatwardhan @TylerLeonhardt @SteveL-MSFT ",
  "closed_at": "2021-02-03T19:08:19Z",
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Can't we just ship the IL assemblies under the `any` runtime id?\r\n",
      "created_at": "2018-11-20T22:53:41Z",
      "updated_at": "2018-11-20T22:53:41Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "We have conditional compilation for Windows and Unix. So we atleast need two runtime ids, `win` and `unix`",
      "created_at": "2018-11-20T23:23:38Z",
      "updated_at": "2018-11-20T23:23:38Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "It would be separate nuget package.",
      "created_at": "2018-11-21T07:35:44Z",
      "updated_at": "2018-11-21T07:35:44Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "Verified that the assemblies in `Microsoft.PowerShell.SDK` are MSIL.\r\n\r\nExample:\r\n\r\n```\r\n[System.Reflection.AssemblyName]::GetAssemblyName(\"C:\\Users\\aditya\\.nuget\\packages\\system.management.automation\\7.1.0\\runtimes\\win\\lib\\net5.0\\System.Management.Automation.dll\") | fl\r\n\r\nName                  : System.Management.Automation\r\nVersion               : 7.1.0.0\r\nCultureInfo           : \r\nCultureName           :\r\nCodeBase              :\r\nEscapedCodeBase       :\r\nProcessorArchitecture : MSIL\r\nContentType           : Default\r\nFlags                 : PublicKey\r\nHashAlgorithm         : SHA1\r\nVersionCompatibility  : SameMachine\r\nKeyPair               :\r\nFullName              : System.Management.Automation, Version=7.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\r\n```",
      "created_at": "2021-02-03T19:08:19Z",
      "updated_at": "2021-02-03T19:08:19Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I don't see any conclusion about performance concerns. How should users do if they want crossgened SDK dll-s? Should we document this?",
      "created_at": "2021-02-04T03:29:38Z",
      "updated_at": "2021-02-04T03:29:58Z"
    }
  ],
  "created_at": "2018-11-20T18:23:05Z",
  "number": 8322,
  "state": "closed",
  "title": "Make PowerShell SDK NuGet packages ship IL assemblies",
  "updated_at": "2021-02-04T03:29:58Z"
}