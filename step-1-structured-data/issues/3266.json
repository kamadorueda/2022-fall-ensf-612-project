{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3266",
  "author": "pcgeek86",
  "body": "Steps to reproduce\r\n------------------\r\n\r\n```powershell\r\n[adsi]\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\nThe code should return a `System.RuntimeType` representing the `System.DirectoryServices.DirectoryEntry` class, similar to the full version of PowerShell.\r\n\r\n```powershell\r\nPS D:\\Users\\tsulli\\sshscan> [adsi].GetType()\r\n\r\nIsPublic IsSerial Name                                     BaseType\r\n-------- -------- ----                                     --------\r\nFalse    True     RuntimeType                              System.Reflection.TypeInfo\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\nThrows an exception.\r\n\r\n```\r\nPS /Users/tsulli> [adsi]\r\nUnable to find type [adsi].\r\nAt line:1 char:1\r\n+ [adsi]\r\n+ ~~~~~~\r\n    + CategoryInfo          : InvalidOperation: (adsi:TypeName) [], RuntimeException\r\n    + FullyQualifiedErrorId : TypeNotFound\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.0-alpha\r\nPSEdition                      Core\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nBuildVersion                   3.0.0.0\r\nGitCommitId                    v6.0.0-alpha.15\r\nCLRVersion\r\nWSManStackVersion              3.0\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\n```\r\n\r\nCheers,\r\n**Trevor Sullivan**\r\nDocker Captain\r\nMicrosoft MVP: Cloud & Data Center Management\r\nhttps://trevorsullivan.net\r\nhttps://twitter.com/pcgeek86",
  "closed_at": "2018-06-21T16:57:15Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "[Following types not in CoreCLR](https://github.com/PowerShell/PowerShell/blob/02b5f357a20e6dee9f8e60e3adb9025be3c94490/src/System.Management.Automation/engine/parser/TypeResolver.cs#L728):\r\n- adsi\r\n- adsisearcher\r\n- wmi\r\n- wmiclass\r\n- wmisearcher\r\n- mailaddress",
      "created_at": "2017-03-06T16:31:43Z",
      "updated_at": "2017-09-15T18:20:41Z"
    },
    {
      "author": "BrucePay",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT Do we have any idea when the active directory types are going to be added to CoreClr? You can't add the accelerators until the underlying types are there so marking this \"up for grabs\" is kind of pointless.",
      "created_at": "2017-03-06T19:42:49Z",
      "updated_at": "2017-03-06T19:42:49Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@BrucePay no idea, not a focus for PS Core 6.0.0",
      "created_at": "2017-03-06T19:59:22Z",
      "updated_at": "2017-03-06T19:59:22Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "They've just added to CoreFX without tests. The work has high priority for .NET Standard 2.0\r\nhttps://github.com/dotnet/corefx/issues/2089#issuecomment-261681168",
      "created_at": "2017-03-06T20:08:07Z",
      "updated_at": "2017-03-06T20:08:07Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "CoreFX change milestone to 2.1.0. System.DirectoryServices is still unstable.",
      "created_at": "2017-09-15T18:23:01Z",
      "updated_at": "2017-09-15T18:23:01Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT @daxian-dbw I believe it is important features for Enterprises and we should enable its.\r\nCurrently there is no progress in CoreFX with `System.DirectoryServices`. So  I think we should enable it for Windows only.\r\n\r\nIt seems we cannot [directly reference in GAC ](https://github.com/dotnet/sdk/issues/987#issuecomment-318174931)`System.DirectoryServices` .\r\nIs there a way to solve this problem?",
      "created_at": "2017-09-27T17:40:06Z",
      "updated_at": "2017-09-27T17:40:06Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I think we should defer this to 6.1.0 given we should depend on corefx.  Perhaps we should suppress the type accelerator for now.",
      "created_at": "2017-09-27T17:52:15Z",
      "updated_at": "2017-09-27T17:52:15Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "In CoreFX repo comments say that it depends very much on COM, also, there is no port LDAP library yet. I believe that this will not be done much longer. That's why I'm requesting to enable it on Windows based on GAC dlls.",
      "created_at": "2017-09-27T18:04:35Z",
      "updated_at": "2017-09-27T18:04:35Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I'm not sure if we want to set a precedent on creating a dependency on the GAC from PSCore.  cc @daxian-dbw ",
      "created_at": "2017-09-27T19:36:17Z",
      "updated_at": "2017-09-27T19:36:17Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "It seems DirectoryServices code is available in corefx: https://github.com/dotnet/corefx/tree/master/src/System.DirectoryServices/src/System/DirectoryServices\r\nand the preview version nuget package for `System.DirectoryServices` is also available on dotnet-core feed (https://dotnet.myget.org/feed/dotnet-core/package/nuget/System.DirectoryServices).\r\nCan't we wait for that to mature and depend on that instead?",
      "created_at": "2017-09-27T22:11:10Z",
      "updated_at": "2017-09-27T22:11:10Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I suggest we wait until 6.1.0 timeframe to tackle this",
      "created_at": "2017-09-27T23:56:05Z",
      "updated_at": "2017-09-27T23:56:05Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I agree that native support would be best. But...\r\n1. My scripts is 80% Active Directory related - so I cannot use 6.0 in Enterprise at all. All the more ActiveDirectory module is not supported. ETA? No one can use PowerShell Core 6.0 version in Enterprises.\r\n2. DirectoryServices nuget package is not updated for about a last month. Works frozen.\r\n3. Little progress is in last year.\r\n4. It is not stable and haven't tests.\r\n5. It is not ported. No plans (possibilities) is to port all APIs (depends on COM and LDAP native Windows dlls).\r\n6. No full time MSFT employers works on the DirectoryServices.\r\n\r\n\r\n",
      "created_at": "2017-09-28T04:08:40Z",
      "updated_at": "2017-09-28T04:08:40Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov would you be ok with a workaround (in your scripts or profile) until we can do this properly in 6.1.0?\r\n\r\n```powershell\r\nAdd-Type -AssemblyName ${env:windir}\\microsoft.net\\framework64\\v4.0.30319\\system.directoryservices.dll\r\n[psobject].Assembly.GetType(\"System.Management.Automation.TypeAccelerators\")::add(\"adsi\",\"System.DirectoryServices.DirectoryEntry\")\r\n[adsi]\"WinNT://${env:computername}/${env:username}\"\r\n```\r\n",
      "created_at": "2017-09-29T15:49:22Z",
      "updated_at": "2017-09-29T20:11:53Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I thought about this and about our compatibility module.\r\nMy concerns:\r\n1.  I don't believe that the module will be ready in RTM time.\r\n2. I see we have codes for DirectoryEntry (ExtendedAdapter and etc.) - it could be the main breaking change.\r\n\r\nSuggestion is - create temporary nuget package to expose the GAC dll until CoreFX issue a ported version.\r\n\r\nI think too many Windows users will be forced to use workarounds - why should we rob them? :-)",
      "created_at": "2017-09-29T19:41:40Z",
      "updated_at": "2017-09-29T19:44:40Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee reviewed this and agreed we should not take explicitly dependency on assemblies in the GAC.  However, to resolve this class of issues, we agreed that we should have a module like \"WindowsPSModulePath\" to create aliases that have been excluded from PSCore6.  Steve to work on that module.  Leaving this issue until DirectoryEntry shows up in corefx.",
      "created_at": "2017-11-01T22:54:04Z",
      "updated_at": "2017-11-01T22:54:04Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Unfortunately, it appears my workaround isn't complete so I can't actually enable this in my module.  Currently, we explicitly `#ifdef` out the [type convertors for ADSI](https://github.com/PowerShell/PowerShell/blob/4bc52d2358222084738157a08907fac32d13bd3a/src/System.Management.Automation/engine/LanguagePrimitives.cs#L2343) (and WMI) as the type doesn't exist in corefx.  Without the type convertors, it's only a partial solution to manually add the type accelerator.",
      "created_at": "2017-11-02T21:01:39Z",
      "updated_at": "2017-11-02T21:01:39Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "It would be useful to have a \"delay resolved\" type accelerator - that would help startup performance a bit by not eagerly loading all the assemblies referenced by accelerators, and as a bonus, you could add the `adsi` accelerator in the core.\r\n\r\nThat said, I never implemented this idea because I was pretty sure some other code running during startup would just load the assemblies I was trying to defer.",
      "created_at": "2017-11-02T21:48:43Z",
      "updated_at": "2017-11-02T21:48:43Z"
    },
    {
      "author": "dronkoff",
      "author_association": "NONE",
      "body": "So, gentleman, can I search in AD from PS Core 6.0 or need to wait for future releases?",
      "created_at": "2018-01-15T14:39:57Z",
      "updated_at": "2018-01-15T14:39:57Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Try the module https://github.com/markekraus/PSCoreWindowsCompat",
      "created_at": "2018-01-15T14:44:22Z",
      "updated_at": "2018-01-15T14:44:22Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@dronkoff the PSCoreWindowsCompat module will add most of the .NET `System.DirectoryServices` namespace back (Only works on windows, no support for macOS or Linux). The ADSI type accelerators and the special things PS does with them are not available.",
      "created_at": "2018-01-15T15:23:53Z",
      "updated_at": "2018-01-15T15:30:59Z"
    },
    {
      "author": "dronkoff",
      "author_association": "NONE",
      "body": "Guys, that works for me. Thanks @markekraus !\r\n```PowerShell\r\nif($PSVersionTable.PSEdition -eq 'Core')\r\n{\r\n    if(-not $IsWindows)\r\n    {\r\n        throw \"This works only on Windows.\"\r\n    }\r\n    if(-not (Get-Module PSCoreWindowsCompat -ListAvailable))\r\n    {\r\n       Install-Module PSCoreWindowsCompat -Scope CurrentUser\r\n    }\r\n    Import-Module PSCoreWindowsCompat -ErrorAction Stop\r\n    Add-Type -AssemblyName ${env:windir}\\microsoft.net\\framework64\\v4.0.30319\\system.directoryservices.dll\r\n    [psobject].Assembly.GetType(\"System.Management.Automation.TypeAccelerators\")::add(\"adsi\",\"System.DirectoryServices.DirectoryEntry\")\r\n    [psobject].Assembly.GetType(\"System.Management.Automation.TypeAccelerators\")::add(\"adsisearcher\",\"System.DirectoryServices.DirectorySearcher\")\r\n}\r\n```\r\n\r\nIs it an official way (workaround) from PS team?",
      "created_at": "2018-01-15T17:16:47Z",
      "updated_at": "2018-01-15T17:37:24Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "We consider Windows Compatibility Pack as an opportunity to return back the excluded features in PowerShell Core on Windows until .Net Core implement the APIs.\r\nCurrently Windows Compatibility Pack is still _preview_.",
      "created_at": "2018-01-15T17:49:13Z",
      "updated_at": "2018-01-15T17:49:13Z"
    }
  ],
  "created_at": "2017-03-06T15:48:01Z",
  "number": 3266,
  "state": "closed",
  "title": "[adsi] type accelerator is unavailable / throws an exception",
  "updated_at": "2018-06-21T17:18:01Z"
}