{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13672",
  "author": "SteveL-MSFT",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nBy default, there is a limit to the number of keys in a hashtable allowed to be converted from a psd1 file (500 keys).  This limit is hitting user cases like DSC configuration.  Change is to add a `-SkipLimitCheck` switch to by-pass the validation step for a hashtable.\r\n\r\n## PR Context\r\n\r\nFix https://github.com/PowerShell/PowerShell/issues/7979\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [ ] None\r\n    - **OR**\r\n    - [x] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [x] Experimental feature name(s): `Microsoft.PowerShell.Utility.PSImportPSDataFileNoLimit`\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2020-12-09T19:07:09Z",
  "comments": [
    {
      "author": "TylerLeonhardt",
      "author_association": "MEMBER",
      "body": "Shouldn't this follow the JSON cmdlet's `-Depth` so it's consistant? ",
      "created_at": "2020-09-22T15:52:56Z",
      "updated_at": "2020-09-22T15:52:56Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "`-Depth` is a bit of a different concept than just maximum number of keys/properties.\r\n\r\nBut I do think following a similar pattern is probably a better call than a switch; if a user knows the ballpark value to use, let them specify 1000 or 2000 so they can keep some control over the input file and verify things aren't getting input over and above what they expected. Have it default to 500 and then if you really want no limit, set it to zero or something?",
      "created_at": "2020-09-22T16:14:39Z",
      "updated_at": "2020-09-22T16:14:39Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "> if you really want no limit, set it to zero or something?\r\n\r\n0 or -1 both seem logical to me",
      "created_at": "2020-09-22T17:57:53Z",
      "updated_at": "2020-09-22T17:57:53Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I think `0` or `-1` to mean infinite only makes sense to a developer.  Most users don't think like that.  Per @PowerShell/powershell-committee updated to `-SkipLimitCheck`",
      "created_at": "2020-09-23T23:03:30Z",
      "updated_at": "2020-09-23T23:03:30Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "The static analysis credscan issue is fixed as part of https://github.com/PowerShell/PowerShell/pull/13692",
      "created_at": "2020-09-25T20:53:43Z",
      "updated_at": "2020-09-25T20:53:43Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2020-10-06T02:00:09Z",
      "updated_at": "2020-10-06T02:00:09Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@SteveL-MSFT  Please update the PR.",
      "created_at": "2020-11-13T22:23:19Z",
      "updated_at": "2020-11-13T22:23:19Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as stale because it has been marked as requiring author feedback but has not had any activity for **15 days**. It will be closed if no further activity occurs **within 10 days of this comment**.",
      "created_at": "2020-11-28T23:00:05Z",
      "updated_at": "2020-11-28T23:00:05Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "@PoshChan please remind me in 18 hours",
      "created_at": "2020-12-08T22:59:21Z",
      "updated_at": "2020-12-08T22:59:21Z"
    },
    {
      "author": "PoshChan",
      "author_association": "COLLABORATOR",
      "body": "@rjmholt, this is the reminder you requested 18 hours ago",
      "created_at": "2020-12-09T16:59:26Z",
      "updated_at": "2020-12-09T16:59:26Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.2.0-preview.2` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.2.0-preview.2)\n",
      "created_at": "2020-12-15T21:37:59Z",
      "updated_at": "2020-12-15T21:37:59Z"
    }
  ],
  "created_at": "2020-09-22T13:58:15Z",
  "number": 13672,
  "state": "closed",
  "title": "Add `-SkipLimitCheck` switch to `Import-PowerShellDataFile`",
  "updated_at": "2020-12-15T21:37:59Z"
}