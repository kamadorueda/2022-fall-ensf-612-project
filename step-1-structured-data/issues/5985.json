{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5985",
  "author": "SteveL-MSFT",
  "body": "Currently, when using PSCore6 PSRP over SSH you register a new subsystem in sshd_config passing `pwsh -sshs`.  It seems that for PSRP over SSH, we can use `SSH Server mode` of pwsh if the parent process is `sshd`.  We can keep `-sshs` as a `no-op` switch for compatibility reasons.",
  "closed_at": null,
  "comments": [
    {
      "author": "thezim",
      "author_association": "CONTRIBUTOR",
      "body": "A couple of questions.\r\n\r\n1. What about possible other SSH implmentations where the parent process is not `sshd`?\r\n2. Are there any security concerns with auto-enabling the mode? Like if I wrote my own wrapper app and named it `sshd` and called upon PowerShell from it?",
      "created_at": "2018-01-23T01:04:15Z",
      "updated_at": "2018-01-23T01:04:15Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Can we run pwsh as demon, i.e. sshd from pwsh? It can help if we'll need set config name/file.\r\nAlso I wonder why OpenSSH is not library?",
      "created_at": "2018-01-23T03:24:17Z",
      "updated_at": "2018-01-23T03:24:17Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@thezim As discussed in #5944, we can retain `-sshs` which can be used with other implementations/hosts, although I believe OpenSSH has something like 90+% marketshare.\r\n\r\nI can't imagine any security concerns with someone trying to masquerade as `sshd` since it would be within their own user space.  If they can get a system service called `sshd` running, they already own the system.\r\n\r\n@iSazonov in the future we may need to consider other remote hosting models, but I don't image it would be pwsh itself running as a daemon.  OpenSSH is designed to be used not as a library.  Their client api is basically wrapping `ssh.exe`.  There are 3rd party SSH libraries, though.",
      "created_at": "2018-01-23T17:39:56Z",
      "updated_at": "2018-01-23T17:39:56Z"
    },
    {
      "author": "tdaniely",
      "author_association": "NONE",
      "body": "+1 For keeping -sshs functionality for external consumption, it doesn't matter if powershell can do it on it's own, the shell should behave correctly under any ssh host binary. Consider high security networks where they sometimes use custom tools all together, even if just not to use the publicly available code.",
      "created_at": "2018-10-28T19:41:48Z",
      "updated_at": "2018-10-28T19:41:48Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "My proposal retains `-sshs` for compatibility and also enable working with other sshd implementations.  There shouldn't be any security concern as pwsh would run under the parent context.  So if run manually, it'll run as that user.  A user would have to configure a service to start pwsh so they can do what they want as that service account anyways.",
      "created_at": "2018-10-28T22:53:09Z",
      "updated_at": "2018-10-28T22:53:09Z"
    }
  ],
  "created_at": "2018-01-22T21:49:23Z",
  "number": 5985,
  "state": "open",
  "title": "pwsh in sshd.config should not require the `-sshs` switch",
  "updated_at": "2018-10-28T22:53:09Z"
}