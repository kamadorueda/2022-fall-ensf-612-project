{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9246",
  "author": "Baribeault",
  "body": "in 6.1.2 this command works : Remove-Item C:\\Users\\david\\OneDrive\\Documents\\ -Recurse\r\n\r\nbut in 6.2.0-rc.1 I get this error\r\n\r\nPS C:\\Users\\david> Remove-Item C:\\Users\\david\\OneDrive\\Documents\\ -Recurse\r\nRemove-Item : Index (zero based) must be greater than or equal to zero and less than the size of the argument list.\r\nAt line:1 char:1\r\n+ Remove-Item C:\\Users\\david\\OneDrive\\Documents\\ -Recurse\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : NotSpecified: (:) [Remove-Item], FormatException\r\n+ FullyQualifiedErrorId : System.FormatException,Microsoft.PowerShell.Commands.RemoveItemCommand",
  "closed_at": "2021-11-23T10:38:58Z",
  "comments": [
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "@Baribeault Can you add the output of \r\n```powershell\r\n$error[0] | fl -showerror -force *\r\n```\r\n\r\n",
      "created_at": "2019-03-29T15:29:16Z",
      "updated_at": "2019-03-29T15:29:16Z"
    },
    {
      "author": "Baribeault",
      "author_association": "NONE",
      "body": "PS C:\\Users\\david> $error[0] | fl -showerror -force *\r\n\r\nPSMessageDetails      :\r\nException             : System.FormatException: Index (zero based) must be greater than or equal to zero and less than the size of the argument list.\r\n                           at System.Text.StringBuilder.AppendFormatHelper(IFormatProvider provider, String format, ParamsArray args)\r\n                           at System.String.FormatHelper(IFormatProvider provider, String format, ParamsArray args)\r\n                           at System.String.Format(IFormatProvider provider, String format, Object arg0)\r\n                           at System.Management.Automation.Internal.StringUtil.Format(String formatSpec, Object o)\r\n                           at Microsoft.PowerShell.Commands.FileSystemProvider.RemoveDirectoryInfoItem(DirectoryInfo directory, Boolean recurse, Boolean force,\r\n                        Boolean rootOfRemoval)\r\n                           at Microsoft.PowerShell.Commands.FileSystemProvider.RemoveItem(String path, Boolean recurse)\r\n                           at System.Management.Automation.SessionStateInternal.RemoveItem(CmdletProvider providerInstance, String path, Boolean recurse,\r\n                        CmdletProviderContext context)\r\nTargetObject          :\r\nCategoryInfo          : NotSpecified: (:) [Remove-Item], FormatException\r\nFullyQualifiedErrorId : System.FormatException,Microsoft.PowerShell.Commands.RemoveItemCommand\r\nErrorDetails          :\r\nInvocationInfo        : System.Management.Automation.InvocationInfo\r\nScriptStackTrace      : at <ScriptBlock>, <No file>: line 1\r\nPipelineIterationInfo : {}\r\n",
      "created_at": "2019-03-29T15:33:21Z",
      "updated_at": "2019-03-29T15:33:21Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Hmm, sounds like someone might have messed with one of the resx strings there.\r\n\r\nDoes `$error[0].Exception.GetBaseException() | fl -f` give any additional information?",
      "created_at": "2019-03-29T15:54:36Z",
      "updated_at": "2019-03-29T15:54:36Z"
    },
    {
      "author": "Baribeault",
      "author_association": "NONE",
      "body": "PS C:\\Users\\david> $error[0].Exception.GetBaseException() | fl -f\r\n\r\nMessage        : Index (zero based) must be greater than or equal to zero and less than the size of the argument list.\r\nData           : {}\r\nInnerException :\r\nTargetSite     : System.Text.StringBuilder AppendFormatHelper(System.IFormatProvider, System.String, System.ParamsArray)\r\nStackTrace     :    at System.Text.StringBuilder.AppendFormatHelper(IFormatProvider provider, String format, ParamsArray args)\r\n                    at System.String.FormatHelper(IFormatProvider provider, String format, ParamsArray args)\r\n                    at System.String.Format(IFormatProvider provider, String format, Object arg0)\r\n                    at System.Management.Automation.Internal.StringUtil.Format(String formatSpec, Object o)\r\n                    at Microsoft.PowerShell.Commands.FileSystemProvider.RemoveDirectoryInfoItem(DirectoryInfo directory, Boolean recurse, Boolean force, Boolean\r\n                 rootOfRemoval)\r\n                    at Microsoft.PowerShell.Commands.FileSystemProvider.RemoveItem(String path, Boolean recurse)\r\n                    at System.Management.Automation.SessionStateInternal.RemoveItem(CmdletProvider providerInstance, String path, Boolean recurse,\r\n                 CmdletProviderContext context)\r\nHelpLink       :\r\nSource         : System.Private.CoreLib\r\nHResult        : -2146233033",
      "created_at": "2019-03-29T15:57:13Z",
      "updated_at": "2019-03-29T15:57:13Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Looks like it should be from these three here, I'd venture to guess, and the resx strings used therein:\r\n```\r\n1. at Microsoft.PowerShell.Commands.FileSystemProvider.RemoveDirectoryInfoItem(DirectoryInfo directory, Boolean recurse, Boolean force, Boolean\r\nrootOfRemoval)\r\n2. at Microsoft.PowerShell.Commands.FileSystemProvider.RemoveItem(String path, Boolean recurse)\r\n3. at System.Management.Automation.SessionStateInternal.RemoveItem(CmdletProvider providerInstance, String path, Boolean recurse,\r\nCmdletProviderContext context)\r\n```",
      "created_at": "2019-03-29T16:02:47Z",
      "updated_at": "2019-03-29T16:02:47Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> C:\\Users\\david\\\\__OneDrive__\\Documents\\\r\n\r\nWe don't work with OneDrive well.",
      "created_at": "2019-03-29T18:34:37Z",
      "updated_at": "2019-03-29T18:34:37Z"
    },
    {
      "author": "GregWoods",
      "author_association": "NONE",
      "body": "Ubuntu shell works fine in a Windows OneDrive folder\r\nrm -r",
      "created_at": "2020-03-02T20:05:19Z",
      "updated_at": "2020-03-02T20:06:17Z"
    },
    {
      "author": "sba923",
      "author_association": "CONTRIBUTOR",
      "body": "I confirm this issue is still there with PowerShell 7.0:\r\n\r\n![image](https://user-images.githubusercontent.com/12860484/78645251-84c3e380-78b7-11ea-8226-f1125a6df0ab.png)\r\n\r\nWhen this fails, the same `Remove-Item -Recurse -Force` operation works in Windows PowerShell 5.1.",
      "created_at": "2020-04-07T08:07:57Z",
      "updated_at": "2020-04-07T08:07:57Z"
    },
    {
      "author": "sba923",
      "author_association": "CONTRIBUTOR",
      "body": "Same as https://github.com/PowerShell/PowerShell/issues/11721\r\n",
      "created_at": "2020-04-24T18:06:00Z",
      "updated_at": "2020-04-24T18:06:00Z"
    },
    {
      "author": "dgard1981",
      "author_association": "NONE",
      "body": "Is there a workaround here? This has been acknowledged as a bug for over a year with seemingly no movement.",
      "created_at": "2020-06-03T15:00:16Z",
      "updated_at": "2020-06-03T15:00:16Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I guess it is not complex fix. I guess we need detect _surrogate_ reparse points. If I remember correctly we already did this for read operations. Also I saw such code in .Net Core for Delete().",
      "created_at": "2020-06-03T16:45:29Z",
      "updated_at": "2020-06-03T16:46:14Z"
    },
    {
      "author": "fmorriso",
      "author_association": "NONE",
      "body": "This is still happening on July 28, 2020 using PowerShell Core 7.0.3, so whatever is the problem with regular PowerShell (5.x?) has carried over intact (unfortunately) to it's sire, PS 7.x.",
      "created_at": "2020-07-28T14:27:29Z",
      "updated_at": "2020-07-28T14:27:29Z"
    },
    {
      "author": "moorichardmoo",
      "author_association": "NONE",
      "body": "I think I must be missing something. Is it really the case that the LTS release of PowerShell Core doesn't contain the working functionality to delete files? \r\nI'm getting \"Index (zero based) must be greater than or equal to zero and less than the size of the argument list.\" even if I pipe the input from a Get-ChildItem foreach loop rather than use -Recurse. Is that a problem only I'm experiencing or is that related to this issue?",
      "created_at": "2020-08-18T09:40:56Z",
      "updated_at": "2020-08-18T09:40:56Z"
    },
    {
      "author": "fmorriso",
      "author_association": "NONE",
      "body": "As of August 18, 2020, using PowerShell 7.0.3 on Windows 10 Pro Version 2004 (OS Build 19041.450), the following works correctly for me:\r\n`Get-ChildItem -Path .\\node_modules -Recurse | Remove-Item -Recurse`",
      "created_at": "2020-08-18T12:26:37Z",
      "updated_at": "2020-08-18T12:26:37Z"
    },
    {
      "author": "sba923",
      "author_association": "CONTRIBUTOR",
      "body": "It's only broken in the OneDrive folder where files are not actual files but reparse points. ",
      "created_at": "2020-08-18T14:22:05Z",
      "updated_at": "2020-08-18T14:22:05Z"
    },
    {
      "author": "DJackman123",
      "author_association": "NONE",
      "body": "@fmorriso, does that command work for you when .\\node_modules contains folders?  I was able to delete individual files from my OneDrive using Remove-Item, but not folders.  At least not when the folders are non-empty.  But if I delete everything that Get-ChildItem -Recurse lists in reverse order (so files in the folder are deleted before attempting to delete the parent folder) then it works.  So my command looks like this:\r\n\r\n```\r\nGet-ChildItem -Path .\\node_modules -Recurse | Sort-Object { (--$script:i) } | Remove-Item\r\n```",
      "created_at": "2020-08-28T15:24:02Z",
      "updated_at": "2020-08-28T15:24:02Z"
    },
    {
      "author": "fmorriso",
      "author_association": "NONE",
      "body": "I copied an angular project from my c:\\projects\\angular\\ folder to c:\\users\\username\\OneDrive\\projects\\angular\\ and then tried my script and it worked just fine (directory node_modules and all files/subdirectories beneath it were deleted, which was over 883 items).",
      "created_at": "2020-08-28T18:02:21Z",
      "updated_at": "2020-08-28T18:03:44Z"
    },
    {
      "author": "DJackman123",
      "author_association": "NONE",
      "body": "That's interesting.  If you tried to just Remove-Item -Recurse on a folder would that give the error from this bug?  I noticed that I was able to delete folders in my personal OneDrive without problems, but in my OneDrive for business folder it gave this error.  I'm guessing it's because my OneDrive for Business is having the local \"My Documents\" and other folders routed to it (even though the folders I'm testing with aren't in there).",
      "created_at": "2020-08-28T19:42:26Z",
      "updated_at": "2020-08-28T19:42:26Z"
    },
    {
      "author": "fmorriso",
      "author_association": "NONE",
      "body": "I performed the following starting at `c:\\users\\userName\\OneDrive\\projects\\angular\\dummyProject\\` with no issues (the top-level directory and all subdirectories/files were removed):\r\n`\r\nRemove-Item -Path .\\node_modules -Recurse\r\n`",
      "created_at": "2020-08-28T22:04:14Z",
      "updated_at": "2020-08-28T22:04:14Z"
    },
    {
      "author": "gatesvp",
      "author_association": "NONE",
      "body": "Here to confirm the same issue with PowerShell `7.0.3`.\r\n![image](https://user-images.githubusercontent.com/319590/93011005-52de3980-f547-11ea-91b0-0630fc640a52.png)\r\n\r\nFor context, I am in the middle of a large OneDrive sync and I'm trying to clean up some dead folders. But those dead folders are within other folders that are still being synced.\r\n![image](https://user-images.githubusercontent.com/319590/93011015-7903d980-f547-11ea-961b-9760346851e5.png)\r\n\r\nIf, instead I try to delete a folder from somewhere that has been \"synced\", I don't get this problem.\r\n![image](https://user-images.githubusercontent.com/319590/93011087-05160100-f548-11ea-9366-80cdc96ea24e.png)\r\n\r\nIt looks like folders in transit to OneDrive cloud are somewhat invisible to OneDrive PowerShell Core during this process.\r\n\r\nHopefully that's a useful repro case:\r\n - Generate gigabytes of OneDrive changes\r\n - Attempt to delete folders deep in the structure of the changes that are syncing",
      "created_at": "2020-09-13T05:36:03Z",
      "updated_at": "2020-09-13T05:36:03Z"
    },
    {
      "author": "fmorriso",
      "author_association": "NONE",
      "body": "Based on previous comments, I wonder if the issue can be avoided by pausing OneDrive synchronization prior to invoking `Remove-Item -Recurse`.",
      "created_at": "2020-09-13T11:47:44Z",
      "updated_at": "2020-09-13T11:47:44Z"
    },
    {
      "author": "gatesvp",
      "author_association": "NONE",
      "body": "Hey @fmorriso , this was a good idea, but I just tested this and no luck. Still the same results.\r\n![image](https://user-images.githubusercontent.com/319590/93021515-d45db800-f597-11ea-8f35-3fbf89a2616e.png)\r\n",
      "created_at": "2020-09-13T15:05:08Z",
      "updated_at": "2020-09-13T15:05:08Z"
    },
    {
      "author": "simonsabin",
      "author_association": "NONE",
      "body": "I've found this works as a workaround. essentially you have to empty the folders and then remove the folders when empty. \r\n```\r\n\"foldername\" | %{\r\n  Get-ChildItem -Recurse $_ -force -file | %{ remove-item $_ -force -Verbose}\r\n # This gets paths in reverse order so you can remove from the parent down\r\n  (Get-Childitem $_ -Recurse -force).Fullname |sort-object {$_.length} -Descending | remove-item -force -Verbose; \r\n}\r\n```",
      "created_at": "2020-10-28T13:25:14Z",
      "updated_at": "2020-10-28T13:25:14Z"
    },
    {
      "author": "fireflycons",
      "author_association": "NONE",
      "body": "Presumably the C# code behind `Remove-Item` and anywhere else that files are being \"deleted\" (so possibly `Move-Item` too) needs to correctly recognise and handle the reparse points used by OneDrive, which I imagine will be interesting if you're trying to have a single build of PS Core that runs on windows and non-windows systems.\r\n\r\nIt would be nice to get this fix once complete rolled out in a patch to Windows PowerShell too, not to put a requirement on using PS Core to work with OneDrive.\r\n\r\nAs mentioned in several places, OD for business causes havoc with module management due to My Documents being part of the OD file system. \r\n\r\nAs a workaround, is there a way to tell both Windows PowerShell and PS Core to use different directories for user-scoped modules such that they can be pointed away from OD?\r\n",
      "created_at": "2021-02-01T07:59:38Z",
      "updated_at": "2021-02-01T08:01:35Z"
    },
    {
      "author": "MisinformedDNA",
      "author_association": "NONE",
      "body": "I'm getting a new work PC and had to backup all my data to OneDrive. Due to how slow OneDrive is, I decided to go through and delete as much as I could. Now I have errors like this when opening \"leftover\" directories.\r\n\r\n```\r\n[Window Title]\r\nLocation is not available\r\n\r\n[Content]\r\nC:\\Users\\XXXX\\...\\somefolder is not accessible.\r\n\r\nThe tag present in the reparse point buffer is invalid.\r\n```\r\n\r\nI used a combination of `Remove-Item -Recurse` and deleting directly from File Explorer.\r\n\r\nI can't even delete these folders anymore. Clicking \"Delete\" in File Explorer results in literally nothing. It doesn't get deleted and it doesn't even prompt me with a confirmation or anything. It just does nothing.\r\n\r\nLuckily, I'm getting a new computer so this should all go away, but it has been an awful experience.\r\n\r\n(BTW: Copying everything to Azure using Storage Explorer turned out to be the best/fastest solution for me)",
      "created_at": "2021-02-01T15:18:47Z",
      "updated_at": "2021-02-01T15:22:08Z"
    },
    {
      "author": "sba923",
      "author_association": "CONTRIBUTOR",
      "body": "> I'm getting a new work PC and had to backup all my data to OneDrive. Due to how slow OneDrive is, I decided to go through and delete as much as I could. Now I have errors like this when opening \"leftover\" directories.\r\n> \r\n> ```\r\n> [Window Title]\r\n> Location is not available\r\n> \r\n> [Content]\r\n> C:\\Users\\XXXX\\...\\somefolder is not accessible.\r\n> \r\n> The tag present in the reparse point buffer is invalid.\r\n> ```\r\n> \r\n\r\nWhat version / build number of Windows and what version of the OneDrive sync client are you using?\r\n\r\nThis might be an issue that got fixed by KB4550945 which applies to 1903 (19H1 / 18362) or 1909 (19H2 / 18363) and should not be present in 2004 (20H1 / 19041) / 20H2 (19042).\r\n\r\n",
      "created_at": "2021-02-01T15:49:01Z",
      "updated_at": "2021-02-01T17:45:05Z"
    },
    {
      "author": "gatesvp",
      "author_association": "NONE",
      "body": "I was using the latest version of everything as of the time I posted that\nmessage. I update everything basically weekly.\n",
      "created_at": "2021-02-03T08:43:13Z",
      "updated_at": "2021-02-03T08:43:16Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov are you going to make another attempt to fix this?",
      "created_at": "2021-06-21T20:55:05Z",
      "updated_at": "2021-06-21T20:55:05Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "#15571 is waiting a code review.",
      "created_at": "2021-06-22T07:34:06Z",
      "updated_at": "2021-06-22T07:34:06Z"
    },
    {
      "author": "sba923",
      "author_association": "CONTRIBUTOR",
      "body": "Is this fixed in 7.2?",
      "created_at": "2021-11-23T15:06:05Z",
      "updated_at": "2021-11-23T15:06:05Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> Is this fixed in 7.2?\r\n\r\nI hope :-) Please install 7.2 and try to work with OneDrive.",
      "created_at": "2021-11-23T18:10:42Z",
      "updated_at": "2021-11-23T18:10:42Z"
    },
    {
      "author": "sba923",
      "author_association": "CONTRIBUTOR",
      "body": "I was at work when I got the notification so I thought I would just get the answer without testing \ud83d\ude1dOf course 7.2 is on all my systems so I can test... And now I know I have to since there is no pre baked answer. ",
      "created_at": "2021-11-23T19:16:44Z",
      "updated_at": "2021-11-23T19:16:44Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> I thought I would just get the answer without testing\r\n\r\nYou got :-) We push some commits to fix such issues and I hope now all works well. If you still see problems, feel free to report.",
      "created_at": "2021-11-24T03:50:11Z",
      "updated_at": "2021-11-24T03:50:11Z"
    },
    {
      "author": "sba923",
      "author_association": "CONTRIBUTOR",
      "body": "I think the answer is clear \ud83d\ude06\r\n\r\n![image](https://user-images.githubusercontent.com/12860484/143203659-192b07d7-14e2-40e6-a288-cae38934cf8b.png)\r\n\r\n\r\nGood job!",
      "created_at": "2021-11-24T08:40:28Z",
      "updated_at": "2021-11-24T08:40:28Z"
    }
  ],
  "created_at": "2019-03-29T11:57:03Z",
  "number": 9246,
  "state": "closed",
  "title": "6.2.0-rc.1 Remove-Item -Recurse broken for reparse points",
  "updated_at": "2021-11-24T08:40:28Z"
}