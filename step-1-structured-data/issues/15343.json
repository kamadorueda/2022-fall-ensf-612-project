{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15343",
  "author": "davidBar-On",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\n<!-- Summarize your PR between here and the checklist. -->\r\nSuggested fix for issue #702 - adding *nix manpage info to `Get-Help` output.  In all variations, only a one line short description is shown.\r\n\r\nThe one line description is taken from `whatis(1)` output is exact match is available and from `apropos(1)` output when general match is available.  Both commands are used, as their MacOs version does not support options.\r\n\r\nWhen a list of matched command names is shown, the output format is similar to [this suggestion](https://github.com/PowerShell/PowerShell/issues/702#issuecomment-225665241), with `Manpage` as Category (`Linux` may be more appropriate, but manpage may be shown in other OSs), and the short description as Synopsis.\r\n\r\nOnly manpages of sections 1,6,8 are used, as these are manpages of executable.  Assumption is that manpages of library routines, etc. should not be shown. (The user can still used the `man` command to see the full list.)\r\n\r\nWhen only one command is found, and it is from a manpage, the output is shown below for `whatis` and is used for all cases (short, full, example, etc.):\r\n```\r\nNAME\r\n    whatis (1)\r\n\r\nSHORT DESCRIPTION\r\n    display one-line manual page descriptions\r\n\r\nREMARKS\r\n    For full help use `man whatis`\r\n```\r\n\r\n### Output Examples\r\n- **pwd**: `help pwd` shows the PS help for `pwd` alias, `help pwd*` output is:\r\n```\r\nName                              Category  Module                    Synopsis\r\n----                              --------  ------                    --------\r\npwd                               Alias                               Get-Location\r\npwd (1)                           Manpage                             print name of current/working directory\r\npwdx (1)                          Manpage                             report current working directory of a process\r\n```\r\nand `help *pwd*` output is:\r\n```\r\nName                              Category  Module                    Synopsis\r\n----                              --------  ------                    --------\r\npwd                               Alias                               Get-Location\r\npwd (1)                           Manpage                             print name of current/working directory\r\npwdx (1)                          Manpage                             report current working directory of a process\r\nunix_chkpwd (8)                   Manpage                             Helper binary that verifies the password of the current user\r\n```\r\n\r\n- **list**: `help list` shows the oneline manpage help (as shown above for `whatis`), and `help *list*` output is:\r\n```\r\nName                              Category  Module                    Synopsis\r\n----                              --------  ------                    --------\r\nFormat-List                       Cmdlet    Microsoft.PowerShell.Uti\u2026 \u2026\r\nUpdate-List                       Cmdlet    Microsoft.PowerShell.Uti\u2026 \u2026\r\nacpi_listen (8)                   Manpage                             ACPI event listener\r\naxfer-list (1)                    Manpage                             dump lists of available sound devices and nodes to transfer audio data frame.\r\nbundle-list2.7 (1)                Manpage                             List all the gems in the bundle\r\ncorelist (1)                      Manpage                             a commandline frontend to Module::CoreList\r\nfc-conflist (1)                   Manpage                             Show the ruleset files information on the system\r\nfc-list (1)                       Manpage                             list available fonts\r\ngit-rev-list (1)                  Manpage                             Lists commit objects in reverse chronological order\r\nlibwacom-list-local-devices (1)   Manpage                             utility to list tablet devices\r\nlist (1ssl)                       Manpage                             list algorithms and features\r\nlistres (1)                       Manpage                             list resources in widgets\r\nlxc.alias.list (1)                Manpage                             List aliases\r\nlxc.cluster.list (1)              Manpage                             List all the cluster members\r\nlxc.config.device.list (1)        Manpage                             List container devices\r\nlxc.config.template.list (1)      Manpage                             List container file templates\r\nlxc.config.trust.list (1)         Manpage                             List trusted clients\r\nlxc.image.alias.list (1)          Manpage                             List image aliases\r\nlxc.image.list (1)                Manpage                             List images\r\nlxc.list (1)                      Manpage                             List containers\r\nlxc.network.list (1)              Manpage                             List available networks\r\nlxc.network.list-leases (1)       Manpage                             List DHCP leases\r\nlxc.operation.list (1)            Manpage                             List background operations\r\nlxc.profile.device.list (1)       Manpage                             List container devices\r\nlxc.profile.list (1)              Manpage                             List profiles\r\nlxc.remote.list (1)               Manpage                             List the available remotes\r\nlxc.storage.list (1)              Manpage                             List available storage pools\r\nlxc.storage.volume.list (1)       Manpage                             List storage volumes\r\nopenssl-list (1ssl)               Manpage                             list algorithms and features\r\npam_listfile (8)                  Manpage                             deny or allow services based on an arbitrary file\r\nsbsiglist (1)                     Manpage                             Create EFI_SIGNATURE_LIST signature databases\r\nGet-WebListener                   Function  WebListener               \u2026\r\nStart-WebListener                 Function  WebListener               \u2026\r\nStop-WebListener                  Function  WebListener               \u2026\r\nGet-WebListenerClientCertificate  Function  WebListener               \u2026\r\nGet-WebListenerUrl                Function  WebListener               \u2026\r\nStop-HttpListener                 Function  HttpListener              \u2026\r\nStart-HttpListener                Function  HttpListener              \u2026\r\n```\r\n\r\n## PR Context\r\n\r\n<!-- Provide a little reasoning as to why this Pull Request helps and why you have opened it. -->\r\nResolve issue #702.\r\n\r\n## PR Checklist\r\n\r\n- [X] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [X] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [X] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [X] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [X] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and opened an issue in the relevant tool repository. This may include:\r\n        - [ ] Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode\r\n        (which runs in a different PS Host).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n",
  "closed_at": "2021-07-25T18:00:32Z",
  "comments": [
    {
      "author": "davidBar-On",
      "author_association": "CONTRIBUTOR",
      "body": "I am aware that the the build failed, but I don't understand from the build logs what is the problem. Because of issue #15353 I cannot run the full PSPester test suit on my computer.",
      "created_at": "2021-05-09T07:37:00Z",
      "updated_at": "2021-05-09T07:37:00Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2021-05-16T14:00:08Z",
      "updated_at": "2021-05-16T14:00:08Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as stale because it has been marked as requiring author feedback but has not had any activity for **15 days**. It will be closed if no further activity occurs **within 10 days of this comment**.",
      "created_at": "2021-06-12T20:00:05Z",
      "updated_at": "2021-06-12T20:00:05Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Please look test fails and add screenshots with new output in PR description.",
      "created_at": "2021-06-23T14:39:42Z",
      "updated_at": "2021-06-23T14:39:42Z"
    },
    {
      "author": "davidBar-On",
      "author_association": "CONTRIBUTOR",
      "body": "> add screenshots with new output in PR description.\r\n\r\nAdded two examples (as text that shows the exact output on the screen).\r\n\r\n> Please look test fails\r\n\r\nI did that and I don't understand what the problem is - I assume that I don't understand well enough the tests output.  As I wrote, for some reason when I run `PSPester` locally it fails when getting the the \"help\" tests even when I use unmodified PS version (on both Linux and Windows - see issue #15353), so I cannot be 100% that the tests would have been successful locally.\r\n\r\nUPDATE: I now understand how to read the tests results.  Will try to solve the tests issues.",
      "created_at": "2021-06-24T09:42:04Z",
      "updated_at": "2021-06-24T12:02:29Z"
    },
    {
      "author": "davidBar-On",
      "author_association": "CONTRIBUTOR",
      "body": "> Please look test fails\r\n\r\n**All test issues should be fixed now**.  The main issue was the MacOs  `whatis` implementation that does not accept any option, so `whatis` is now used to find exact match if available, and `apropos` (that also does not accept options in MacOs) for general match in case exact match was not found.\r\n\r\n(Note that the two tests failures are because of **test system errors** and not code issues.  Both failed on \"[fatal: unable to access '***.git/': Failed to connect to github.com port 443: Connection timed out](https://dev.azure.com/powershell/PowerShell/_build/results?buildId=80526&view=logs&j=6cde3b71-baca-5747-8e0b-9d2766aa716f&t=47fc9023-6cac-5beb-8364-930b9f80e71d&l=12)\".)",
      "created_at": "2021-06-26T08:00:50Z",
      "updated_at": "2021-06-26T08:00:50Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as stale because it has been marked as requiring author feedback but has not had any activity for **15 days**. It will be closed if no further activity occurs **within 10 days of this comment**.",
      "created_at": "2021-07-15T08:00:38Z",
      "updated_at": "2021-07-15T08:00:38Z"
    },
    {
      "author": "kilasuit",
      "author_association": "COLLABORATOR",
      "body": "looking into getting this reopened and merged",
      "created_at": "2022-02-15T06:41:05Z",
      "updated_at": "2022-02-15T06:41:05Z"
    }
  ],
  "created_at": "2021-05-04T11:53:04Z",
  "number": 15343,
  "state": "closed",
  "title": "Adding *nix manpages info to Get-Help output",
  "updated_at": "2022-02-15T06:41:10Z"
}