{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5712",
  "author": "daxian-dbw",
  "body": "## PR Summary\r\nAutomate the generation of release change log draft.\r\n\r\nFor a commit that is breaking change, `Get-ChangeLog` assumes that a `[breaking change]` tag is put in the commit description body so that it can incorporate this information in the generated changelog entry.\r\n\r\nSo to @PowerShell/powershell-maintainers, please put the `[breaking change]` tag in the description body when you squash merge a PR that is a breaking change.\r\n\r\n## PR Checklist\r\n\r\nNote: Please mark anything not applicable to this PR `NA`.\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - [x] Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [NA] User facing [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - [NA] Issue filed - Issue link:\r\n- [x] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [NA] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n    - [NA] [Add `[feature]` if the change is significant or affectes feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` to the beginning of the title and remove the prefix when the PR is ready.\r\n",
  "closed_at": "2017-12-19T21:39:37Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": " We have three places where we mark a breaking change - PR description, PR label and now commit description. Can we reduce this amount? Can we use the Breaking change PR label in the script?",
      "created_at": "2017-12-18T19:18:12Z",
      "updated_at": "2017-12-18T19:18:12Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@iSazonov IMHO, it's useful to keep the \"breaking change\" information in the commit. It also would force maintainers to edit the commit descirption body with better messages before merging (I think this is particularly necessary for a breaking change commit).\r\n\r\nToday, we can easily find a commit whose body description is just a list of commit messages that are auto-generated by GitHub from the set of commits in the PR, including message entries like `\"* Address review comments\"` or `\"* Fix a test issue\"`. Body descirption like this is not useful, so maintainers should edit the commit body description before merging a PR -- either remove all auto-generated messages when a body description is not needed, or replace with a summary that better describes the changes when a body description is needed. In case of a breaking change, a body description is necessary to describe the breaking change in summary, maybe even including why it's approved.\r\n\r\nAs for other places we mark for breaking change, they all have their purposes\r\n- Label in issue and PR. The label makes it easy to recognize the breaking change and easy to filter.\r\n- Checklist in PR description. It serves as a reminder to the maintainer assignee that the `breaking change` label needs to be added. Maybe this checklist is not absolutely necessary becuase the maintainer can look at the issue to know if it's a breaking change, but it makes it easier for the maintainer.",
      "created_at": "2017-12-18T20:00:16Z",
      "updated_at": "2017-12-18T20:01:00Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw Thanks for clarify. I agree that keeping the breaking change label in commit description is useful. \r\nContinuing to think about simplifying this process  - can we assign a template to commit description in GitHub and/or Git?\r\n\r\nUpdate: I see  a community recommend to use git hooks:\r\nhttps://stackoverflow.com/questions/14151775/how-do-i-set-a-pattern-for-git-commit-messages\r\nhttps://stackoverflow.com/questions/13087625/git-gitolite-v3-pre-receive-hook-for-all-commit-messages\r\nUpdate2: Maybe interesting \r\nhttps://gist.github.com/stephenparish/9941e89d80e2bc58a153\r\nhttps://www.npmjs.com/package/git-semantic-commits (https://github.com/russiann/git-semantic-commits)\r\nhttp://karma-runner.github.io/1.0/dev/git-commit-msg.html -> sample http://karma-runner.github.io/1.0/about/changelog.html",
      "created_at": "2017-12-19T05:43:32Z",
      "updated_at": "2017-12-19T15:36:29Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@iSazonov Thank you for the research! Let me play with the hook.\r\nI'm also planning to update the maintainer README.md about the commit message requirement.",
      "created_at": "2017-12-19T18:37:00Z",
      "updated_at": "2017-12-19T18:37:00Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw If you plan to play with Git hooks please take attention on #3504 too.",
      "created_at": "2017-12-19T18:40:31Z",
      "updated_at": "2017-12-19T18:40:31Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@iSazonov Will do, thanks!",
      "created_at": "2017-12-19T18:41:41Z",
      "updated_at": "2017-12-19T18:41:41Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "We should investigate what git hooks can do for us, but I cannot find any docs that GitHub supports these.  I doubt that these would be supported as it would allow fairly arbitrary code to run on GitHub's servers.",
      "created_at": "2017-12-19T23:24:41Z",
      "updated_at": "2017-12-19T23:24:41Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@TravisEz13 Good news (although preview only) https://developer.github.com/v3/enterprise-admin/pre_receive_hooks/\r\nAnother way is GitHub Webhooks https://developer.github.com/v3/orgs/hooks/",
      "created_at": "2017-12-20T09:37:50Z",
      "updated_at": "2017-12-20T09:37:50Z"
    }
  ],
  "created_at": "2017-12-18T18:36:55Z",
  "number": 5712,
  "state": "closed",
  "title": "Automate the generation of release change log draft",
  "updated_at": "2017-12-20T09:37:50Z"
}