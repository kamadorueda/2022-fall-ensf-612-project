{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7083",
  "author": "daxian-dbw",
  "body": "## PR Summary\r\n\r\nAdd `CompatiblePSEditions = @(\"Core\")` to PowerShell Core built-in modules.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [ ] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` to the beginning of the title and remove the prefix when the PR is ready.\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] User-facing [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed - Issue link:\r\n- **Testing - New and feature**\r\n    - [x] Not Applicable or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n        - [ ] [Add `[feature]` if the change is significant or affects feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\r\n",
  "closed_at": "2018-06-15T22:28:59Z",
  "comments": [
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "Do we control the PSReadLine psd1? I noticed trying it with my compatibility checking prototype that it also doesn't have this field \ud83d\ude31 ",
      "created_at": "2018-06-15T18:40:40Z",
      "updated_at": "2018-06-15T18:40:40Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@rjmholt That needs to be addressed in the PSReadLine repo.  However, since PSReadLine supports PSv3 and higher which doesn't understand the `CompatiblePSEditions` property, we can't add it.",
      "created_at": "2018-06-15T18:42:55Z",
      "updated_at": "2018-06-15T18:42:55Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "Also, given that the modules have been changing in sync with PowerShell and that PowerShell is now version 6.1, should the `PowerShellVersion` field be `6.1`?\r\n\r\nIt's unlikely that someone would even manage to get to the point where loading old PowerShell modules into a newer version is possible, but it's conceivable, and in principle should be protected against maybe?",
      "created_at": "2018-06-15T18:43:37Z",
      "updated_at": "2018-06-15T18:43:37Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT New PSReadLine will only support v5+ right? So that can have the field? But I'm assuming that until then, or in cases using older PSReadLine versions, we take advantage of implicit compatibility due to path location?",
      "created_at": "2018-06-15T18:45:48Z",
      "updated_at": "2018-06-15T18:45:48Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@rjmholt regarding `PowerShellVersion`, yes it would be more accurate to set it to `6.1`.  As for PSReadLine, I think even 2.0.0 still supports v3, not sure.  I would suggest following up on the PSReadLine repo.",
      "created_at": "2018-06-15T18:53:54Z",
      "updated_at": "2018-06-15T18:53:54Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@rjmholt @SteveL-MSFT Your comments were addressed, please take another look when you have time. Thanks!",
      "created_at": "2018-06-15T19:56:08Z",
      "updated_at": "2018-06-15T19:56:08Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT Looks like PSReadLine 2.0 is now v5+: https://github.com/lzybkr/PSReadLine/blob/46960b1fe442024923381eedd1c9100ded30d123/PSReadLine/Changes.txt#L32\r\n\r\nI'll open an issue to update the PSD1",
      "created_at": "2018-06-15T20:05:44Z",
      "updated_at": "2018-06-15T20:06:00Z"
    }
  ],
  "created_at": "2018-06-15T18:28:39Z",
  "number": 7083,
  "state": "closed",
  "title": "Add 'CompatiblePSEditions' to PowerShell Core built-in modules",
  "updated_at": "2018-06-15T22:29:02Z"
}