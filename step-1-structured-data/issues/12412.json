{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12412",
  "author": "vexx32",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nAdds support for specifying type arguments for generic methods.\r\n\r\nFor example:\r\n\r\n```ps1\r\n[Array]::Empty[int]()\r\n```\r\n\r\n```ps1\r\n$dictionary = [System.Collections.Concurrent.ConcurrentDictionary[string, int]]::new()\r\n$dictionary.AddOrUpdate[float]($Key, $addEntryScript, $updateEntryScript, $FloatValue)\r\n```\r\n\r\nMany thanks to @dlwyatt for the initial parsing implementation! \ud83d\ude0a \ud83d\udc96 \r\n\r\n## PR Context\r\n\r\nResolves #5146\r\n\r\n/cc @lzybkr @daxian-dbw \r\n\r\n/cc @TylerLeonhardt would this necessitate an update to language spec like the `dispose{}` one did?\r\nThis may affect tools not using an actual PS parser, but in general I think the impact will be minor overall, likely requiring some updates to any regex recognition patterns for some syntax highlighting rules.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [x] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [x] Issue filed: https://github.com/MicrosoftDocs/PowerShell-Docs/issues/8533\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [ ] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [x] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2022-01-27T17:55:55Z",
  "comments": [
    {
      "author": "TylerLeonhardt",
      "author_association": "MEMBER",
      "body": "> This may affect tools not using an actual PS parser, but in general I think the impact will be minor overall, likely requiring some updates to any regex recognition patterns for some syntax highlighting rules.\r\n\r\nYeah this will possibly need a change to EditorSyntax.",
      "created_at": "2020-04-21T23:14:31Z",
      "updated_at": "2020-04-21T23:14:31Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@vexx32 There are many formatting and style issue. Please fix issues for _changed_ code and move unrelated ones to another PR (I mean specially build.psm1 and some in other code). It will very help reviewers!",
      "created_at": "2020-04-22T03:15:16Z",
      "updated_at": "2020-04-22T03:15:16Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov ah, you're right. I'll have to do a bit of a rebase to clear that up, give me a few moments. I think a lot of those came from Dave's original code here, so I'll pare out what's needed and drop the unrelated style changes. Thanks! \ud83d\udc96 ",
      "created_at": "2020-04-22T04:31:33Z",
      "updated_at": "2020-04-22T04:31:33Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov that should do it. Time for bed. \ud83d\ude01 ",
      "created_at": "2020-04-22T05:10:38Z",
      "updated_at": "2020-04-22T05:10:38Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@rjmholt Can you review?",
      "created_at": "2020-04-30T18:32:45Z",
      "updated_at": "2020-04-30T18:32:45Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMainainer, Please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2020-05-27T02:01:02Z",
      "updated_at": "2020-05-27T02:01:02Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@rjmholt Could you review this please?",
      "created_at": "2020-06-01T20:21:27Z",
      "updated_at": "2020-06-01T20:21:27Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMainainer, Please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2020-06-10T14:00:20Z",
      "updated_at": "2020-06-10T14:00:20Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@rjmholt please update your review when you can. Thanks! \ud83d\ude0a \ud83d\udc96 \r\n\r\n@daxian-dbw did you want to review this as well? ^^",
      "created_at": "2020-06-24T13:34:50Z",
      "updated_at": "2020-06-24T13:34:50Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@rjmholt @daxian-dbw - Do we need a RFC for this?",
      "created_at": "2020-07-30T18:20:04Z",
      "updated_at": "2020-07-30T18:20:04Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@vexx32 Please resolve merge conflicts",
      "created_at": "2020-07-30T18:20:24Z",
      "updated_at": "2020-07-30T18:20:24Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@adityapatwardhan all sorted",
      "created_at": "2020-07-30T18:57:31Z",
      "updated_at": "2020-07-30T18:57:31Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2020-08-08T02:00:21Z",
      "updated_at": "2020-08-08T02:00:21Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "Open PRs should not be assigned to milestone, so they are not assigned to the wrong milestone after they are merged.  For backport consideration, use a `backport` label. ",
      "created_at": "2020-12-09T23:44:49Z",
      "updated_at": "2020-12-09T23:44:49Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "@PoshChan please remind me in 2 days",
      "created_at": "2020-12-10T20:35:24Z",
      "updated_at": "2020-12-10T20:35:24Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Linux elevated test on last commit failed with a seemingly unrelated error. Restarting it to see if it's sporadic, this is the 2nd time I've come across it (across different PRs, too, I think).",
      "created_at": "2020-12-11T04:31:52Z",
      "updated_at": "2020-12-11T04:31:52Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "not sure what's up with codeQL here... the log shows nothing, and I get no errors building locally.",
      "created_at": "2020-12-11T06:00:40Z",
      "updated_at": "2020-12-11T06:00:40Z"
    },
    {
      "author": "PoshChan",
      "author_association": "COLLABORATOR",
      "body": "@rjmholt, this is the reminder you requested 2 days ago",
      "created_at": "2020-12-12T20:35:40Z",
      "updated_at": "2020-12-12T20:35:40Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2020-12-20T02:00:08Z",
      "updated_at": "2020-12-20T02:00:08Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@vexx32 Also can you have a look at the CodeFactor issues?",
      "created_at": "2021-03-25T22:57:27Z",
      "updated_at": "2021-03-25T22:57:27Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@adityapatwardhan that should sort it out. Some of the codefactor things were more or less tangential, but I figured they were small enough to fix anyway, save someone else the hassle later.",
      "created_at": "2021-03-25T23:36:06Z",
      "updated_at": "2021-03-25T23:36:06Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2021-04-02T14:00:08Z",
      "updated_at": "2021-04-02T14:00:08Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "I will have a look at separating out purely style changes when I can, although I'm not sure I made that many in this PR.",
      "created_at": "2021-07-29T13:27:44Z",
      "updated_at": "2021-07-29T13:27:44Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "This mostly looks good to me, just want a few more tests",
      "created_at": "2021-08-03T18:52:30Z",
      "updated_at": "2021-08-03T18:52:30Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@rjmholt I've removed the default values for the public API constructors and added extra overloads instead, thanks for pointing that out! \ud83d\udc96 ",
      "created_at": "2021-08-06T03:47:56Z",
      "updated_at": "2021-08-06T03:47:56Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2021-08-13T14:00:43Z",
      "updated_at": "2021-08-13T14:00:43Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "@adityapatwardhan please refresh your review, @daxian-dbw please take a look when you get time",
      "created_at": "2021-08-13T15:56:46Z",
      "updated_at": "2021-08-13T15:56:46Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I added Breaking-Change label to notice EditorSyntax.",
      "created_at": "2021-08-13T17:03:13Z",
      "updated_at": "2021-08-13T17:03:13Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2021-08-21T02:00:37Z",
      "updated_at": "2021-08-21T02:00:37Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "Just a note: since 7.2 is going to RC soon, we're intending to merge this after that so it gets some time in the 7.3 preview",
      "created_at": "2021-09-02T15:42:53Z",
      "updated_at": "2021-09-02T15:42:53Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2021-09-10T02:00:38Z",
      "updated_at": "2021-09-10T02:00:38Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2021-09-23T02:01:05Z",
      "updated_at": "2021-09-23T02:01:05Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw @adityapatwardhan Any chance this PR can make it into the next preview? \ud83e\udd1e ",
      "created_at": "2021-12-20T16:46:31Z",
      "updated_at": "2021-12-20T16:46:31Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "We need @andschwa review too (for possible PSES breaking).",
      "created_at": "2021-12-20T16:55:32Z",
      "updated_at": "2021-12-20T16:55:32Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2021-12-28T02:00:41Z",
      "updated_at": "2021-12-28T02:00:41Z"
    },
    {
      "author": "pull-request-quantifier[bot]",
      "author_association": "NONE",
      "body": "### ![](https://img.shields.io/static/v1?label=Quantified&message=Extra%20Large&color=red)\r\n\r\nThis PR has `472` quantified lines of changes. In general, a change size of upto `200` lines is ideal for the best PR experience!\r\n\r\n------\r\n\r\n<details >\r\n    <summary display=\"inline\"> <strong>Quantification details</strong></summary>\r\n    <p />\r\n\r\n```\r\nLabel      : Extra Large\r\nSize       : +396 -76\r\nPercentile : 82.4%\r\n\r\nTotal files changed: 9\r\n\r\nChange summary by file extension:\r\n.cs : +250 -76\r\n.resx : +6 -0\r\n.ps1 : +140 -0\r\n```\r\n> Change counts above are quantified counts, based on the [PullRequestQuantifier customizations](https://github.com/microsoft/PullRequestQuantifier/blob/main/docs/prquantifier-yaml.md).\r\n    \r\n</details>\r\n\r\n\r\n<details>\r\n    <summary display=\"inline\"> <strong>Why proper sizing of changes matters</strong> </summary>\r\n    <p/>\r\n    <p/>\r\n\r\nOptimal pull request sizes drive a better predictable PR flow as they strike a\r\nbalance between between PR complexity and PR review overhead. PRs within the\r\noptimal size (typical small, or medium sized PRs) mean:\r\n\r\n- Fast and predictable releases to production:\r\n  - Optimal size changes are more likely to be reviewed faster with fewer\r\niterations.\r\n  - Similarity in low PR complexity drives similar review times.\r\n- Review quality is likely higher as complexity is lower:\r\n  - Bugs are more likely to be detected.\r\n  - Code inconsistencies are more likely to be detetcted.\r\n- Knowledge sharing is improved within the participants:\r\n  - Small portions can be assimilated better.\r\n- Better engineering practices are exercised:\r\n  - Solving big problems by dividing them in well contained, smaller problems.\r\n  - Exercising separation of concerns within the code changes.\r\n\r\n#### What can I do to optimize my changes\r\n\r\n- Use the PullRequestQuantifier to quantify your PR accurately\r\n  - Create a context profile for your repo using the [context generator](https://github.com/microsoft/PullRequestQuantifier/releases)\r\n  - Exclude files that are not necessary to be reviewed or do not increase the review complexity. Example: Autogenerated code, docs, project IDE setting files, binaries, etc. Check out the `Excluded` section from your `prquantifier.yaml` context profile. \r\n  - Understand your typical change complexity, drive towards the desired complexity by adjusting the label mapping in your `prquantifier.yaml` context profile.\r\n  - Only use the labels that matter to you, [see context specification](./docs/prquantifier-yaml.md) to customize your `prquantifier.yaml` context profile.\r\n- Change your engineering behaviors\r\n  - For PRs that fall outside of the desired spectrum, review the details and check if:\r\n    - Your PR could be split in smaller, self-contained PRs instead\r\n    - Your PR only solves one particular issue. (For example, don't refactor and code new features in the same PR).\r\n\r\n#### How to interpret the change counts in git diff output\r\n\r\n- One line was added: `+1 -0`\r\n- One line was deleted: `+0 -1`\r\n- One line was modified: `+1 -1` (git diff doesn't know about modified, it will\r\ninterpret that line like one addition plus one deletion)\r\n- Change percentiles: Change characteristics (addition, deletion, modification)\r\nof this PR in relation to all other PRs within the repository.\r\n\r\n</details>\r\n\r\n<p />\r\n\r\n------\r\n\r\nWas this comment helpful? <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoidmV4eDMyIiwiUmVwb3NpdG9yeUxpbmsiOiJodHRwczovL2dpdGh1Yi5jb20vUG93ZXJTaGVsbC9Qb3dlclNoZWxsIiwiUHVsbFJlcXVlc3RMaW5rIjoiaHR0cHM6Ly9naXRodWIuY29tL1Bvd2VyU2hlbGwvUG93ZXJTaGVsbC9wdWxsLzEyNDEyIiwiRXZlbnRUeXBlIjoiVGh1bWJzVXAifQ==&amp;anonymous=True\" target=\"_blank\" title=\"Thumbs up\"><strong>:thumbsup:</strong></a> <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoidmV4eDMyIiwiUmVwb3NpdG9yeUxpbmsiOiJodHRwczovL2dpdGh1Yi5jb20vUG93ZXJTaGVsbC9Qb3dlclNoZWxsIiwiUHVsbFJlcXVlc3RMaW5rIjoiaHR0cHM6Ly9naXRodWIuY29tL1Bvd2VyU2hlbGwvUG93ZXJTaGVsbC9wdWxsLzEyNDEyIiwiRXZlbnRUeXBlIjoiTmV1dHJhbCJ9&amp;anonymous=True\" target=\"_blank\" title=\"Neutral\"><strong>&nbsp;:ok_hand:</strong></a> <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoidmV4eDMyIiwiUmVwb3NpdG9yeUxpbmsiOiJodHRwczovL2dpdGh1Yi5jb20vUG93ZXJTaGVsbC9Qb3dlclNoZWxsIiwiUHVsbFJlcXVlc3RMaW5rIjoiaHR0cHM6Ly9naXRodWIuY29tL1Bvd2VyU2hlbGwvUG93ZXJTaGVsbC9wdWxsLzEyNDEyIiwiRXZlbnRUeXBlIjoiVGh1bWJzRG93biJ9&amp;anonymous=True\" target=\"_blank\" title=\"Thumbs down\"><strong>&nbsp;:thumbsdown:</strong></a> (<a href=\"MAILTO:prquantifier@microsoft.com\" title=\"Mail to prquantifier@microsoft.com\">Email</a>)\r\n[Customize PullRequestQuantifier](https://github.com/PowerShell/PowerShell/blob/master/.github/prquantifier.yaml) for this repository.\r\n\r\n",
      "created_at": "2022-01-27T04:16:20Z",
      "updated_at": "2022-01-27T16:22:14Z"
    },
    {
      "author": "pull-request-quantifier[bot]",
      "author_association": "NONE",
      "body": "### ![](https://img.shields.io/static/v1?label=Quantified&message=Extra%20Large&color=red)\r\n\r\nThis PR has `472` quantified lines of changes. In general, a change size of upto `200` lines is ideal for the best PR experience!\r\n\r\n------\r\n\r\n<details >\r\n    <summary display=\"inline\"> <strong>Quantification details</strong></summary>\r\n    <p />\r\n\r\n```\r\nLabel      : Extra Large\r\nSize       : +396 -76\r\nPercentile : 82.4%\r\n\r\nTotal files changed: 9\r\n\r\nChange summary by file extension:\r\n.cs : +250 -76\r\n.resx : +6 -0\r\n.ps1 : +140 -0\r\n```\r\n> Change counts above are quantified counts, based on the [PullRequestQuantifier customizations](https://github.com/microsoft/PullRequestQuantifier/blob/main/docs/prquantifier-yaml.md).\r\n    \r\n</details>\r\n\r\n\r\n<details>\r\n    <summary display=\"inline\"> <strong>Why proper sizing of changes matters</strong> </summary>\r\n    <p/>\r\n    <p/>\r\n\r\nOptimal pull request sizes drive a better predictable PR flow as they strike a\r\nbalance between between PR complexity and PR review overhead. PRs within the\r\noptimal size (typical small, or medium sized PRs) mean:\r\n\r\n- Fast and predictable releases to production:\r\n  - Optimal size changes are more likely to be reviewed faster with fewer\r\niterations.\r\n  - Similarity in low PR complexity drives similar review times.\r\n- Review quality is likely higher as complexity is lower:\r\n  - Bugs are more likely to be detected.\r\n  - Code inconsistencies are more likely to be detetcted.\r\n- Knowledge sharing is improved within the participants:\r\n  - Small portions can be assimilated better.\r\n- Better engineering practices are exercised:\r\n  - Solving big problems by dividing them in well contained, smaller problems.\r\n  - Exercising separation of concerns within the code changes.\r\n\r\n#### What can I do to optimize my changes\r\n\r\n- Use the PullRequestQuantifier to quantify your PR accurately\r\n  - Create a context profile for your repo using the [context generator](https://github.com/microsoft/PullRequestQuantifier/releases)\r\n  - Exclude files that are not necessary to be reviewed or do not increase the review complexity. Example: Autogenerated code, docs, project IDE setting files, binaries, etc. Check out the `Excluded` section from your `prquantifier.yaml` context profile. \r\n  - Understand your typical change complexity, drive towards the desired complexity by adjusting the label mapping in your `prquantifier.yaml` context profile.\r\n  - Only use the labels that matter to you, [see context specification](./docs/prquantifier-yaml.md) to customize your `prquantifier.yaml` context profile.\r\n- Change your engineering behaviors\r\n  - For PRs that fall outside of the desired spectrum, review the details and check if:\r\n    - Your PR could be split in smaller, self-contained PRs instead\r\n    - Your PR only solves one particular issue. (For example, don't refactor and code new features in the same PR).\r\n\r\n#### How to interpret the change counts in git diff output\r\n\r\n- One line was added: `+1 -0`\r\n- One line was deleted: `+0 -1`\r\n- One line was modified: `+1 -1` (git diff doesn't know about modified, it will\r\ninterpret that line like one addition plus one deletion)\r\n- Change percentiles: Change characteristics (addition, deletion, modification)\r\nof this PR in relation to all other PRs within the repository.\r\n\r\n</details>\r\n\r\n<p />\r\n\r\n------\r\n\r\nWas this comment helpful? <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoidmV4eDMyIiwiUmVwb3NpdG9yeUxpbmsiOiJodHRwczovL2dpdGh1Yi5jb20vUG93ZXJTaGVsbC9Qb3dlclNoZWxsIiwiUHVsbFJlcXVlc3RMaW5rIjoiaHR0cHM6Ly9naXRodWIuY29tL1Bvd2VyU2hlbGwvUG93ZXJTaGVsbC9wdWxsLzEyNDEyIiwiRXZlbnRUeXBlIjoiVGh1bWJzVXAifQ==&amp;anonymous=True\" target=\"_blank\" title=\"Thumbs up\"><strong>:thumbsup:</strong></a> <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoidmV4eDMyIiwiUmVwb3NpdG9yeUxpbmsiOiJodHRwczovL2dpdGh1Yi5jb20vUG93ZXJTaGVsbC9Qb3dlclNoZWxsIiwiUHVsbFJlcXVlc3RMaW5rIjoiaHR0cHM6Ly9naXRodWIuY29tL1Bvd2VyU2hlbGwvUG93ZXJTaGVsbC9wdWxsLzEyNDEyIiwiRXZlbnRUeXBlIjoiTmV1dHJhbCJ9&amp;anonymous=True\" target=\"_blank\" title=\"Neutral\"><strong>&nbsp;:ok_hand:</strong></a> <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoidmV4eDMyIiwiUmVwb3NpdG9yeUxpbmsiOiJodHRwczovL2dpdGh1Yi5jb20vUG93ZXJTaGVsbC9Qb3dlclNoZWxsIiwiUHVsbFJlcXVlc3RMaW5rIjoiaHR0cHM6Ly9naXRodWIuY29tL1Bvd2VyU2hlbGwvUG93ZXJTaGVsbC9wdWxsLzEyNDEyIiwiRXZlbnRUeXBlIjoiVGh1bWJzRG93biJ9&amp;anonymous=True\" target=\"_blank\" title=\"Thumbs down\"><strong>&nbsp;:thumbsdown:</strong></a> (<a href=\"MAILTO:prquantifier@microsoft.com\" title=\"Mail to prquantifier@microsoft.com\">Email</a>)\r\n[Customize PullRequestQuantifier](https://github.com/PowerShell/PowerShell/blob/master/.github/prquantifier.yaml) for this repository.\r\n\r\n",
      "created_at": "2022-01-27T04:16:20Z",
      "updated_at": "2022-01-27T04:16:20Z"
    },
    {
      "author": "IISResetMe",
      "author_association": "COLLABORATOR",
      "body": "I realize this question is probably beyond the scope of this PR, but I feel it's still relevant:\r\n\r\nDoes it make sense to attempt coercion of enumerables passed as arguments to method parameters constrained by generic type parameters _when overload resolution is not otherwise ambiguous_?\r\n\r\nTake the following example:\r\n\r\n    $linq = [System.Linq.IEnumerable]\r\n    \r\n    # this fails because [object[]] doesn't implement [IEnumerable[int]] (not because of ambiguous overload resolution)\r\n    $linq::Distinct[int](@(1,2,3,1,2,3))\r\n    \r\n    # this succeeds\r\n    $linq::Distinct[int]([int[]]@(1,2,3,1,2,3))\r\n\r\n----\r\n\r\nEdit: as soon as I posted this I realized what I'm really asking for is \"can we have better coercion semantics for downcasting to interfaces with covariant generic type parameters?\" which is sorta orthogonal to this change and should be chased separately, please ignore this :) ",
      "created_at": "2022-01-27T13:01:23Z",
      "updated_at": "2022-01-27T13:02:57Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@IISResetMe I agree we should have that, and agree it's out of this scope... but I _would_ really love to have that. Because yeah, in some method calls it does feel like casts should not be necessary. Maybe would be good to file a follow up issue with that? I think it'll be easier to manage with the changes from this PR actually defining some of the types needed for the method call, so PS has less to infer from just the arguments.",
      "created_at": "2022-01-27T16:23:09Z",
      "updated_at": "2022-01-27T16:23:09Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "> We need @andschwa review too (for possible PSES breaking).\r\n\r\nWhat are the concerns around breaking PSES?",
      "created_at": "2022-01-27T17:23:04Z",
      "updated_at": "2022-01-27T17:23:04Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> > We need @andschwa review too (for possible PSES breaking).\r\n> \r\n> What are the concerns around breaking PSES?\r\n\r\nChanges in Parser.",
      "created_at": "2022-01-27T17:29:18Z",
      "updated_at": "2022-01-27T17:29:18Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Thanks @vexx32 for your contribution!\r\n\r\n> can we have better coercion semantics for downcasting to interfaces with covariant generic type parameters?\r\n\r\n@IISResetMe Feel free to open an issue for discussion about this \ud83d\ude04\r\n\r\n@andschwa I guess `EditorSyntax` would need updates? If so, can you please open an issue tracking that?\r\n@JamesWTruher Not sure how much this would affect PSSA. It would be great if you can help evaluate and open tracking issue as needed. ",
      "created_at": "2022-01-27T18:02:30Z",
      "updated_at": "2022-01-27T18:08:30Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Just noticed no documentation issue was filed. @vexx32 can you please open a documentation issue for this feature?",
      "created_at": "2022-01-27T18:03:44Z",
      "updated_at": "2022-01-27T18:03:44Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Aye, will do!\r\n\r\nEDIT: Doc issue filed: https://github.com/MicrosoftDocs/PowerShell-Docs/issues/8533",
      "created_at": "2022-01-27T18:06:09Z",
      "updated_at": "2022-01-27T18:17:21Z"
    },
    {
      "author": "oising",
      "author_association": "CONTRIBUTOR",
      "body": "w00000000. \r\n\r\nCongrats @vexx32 ",
      "created_at": "2022-01-27T19:27:45Z",
      "updated_at": "2022-01-27T19:27:45Z"
    },
    {
      "author": "kborowinski",
      "author_association": "NONE",
      "body": "@vexx32 Finally! This is awesome!",
      "created_at": "2022-01-27T20:07:06Z",
      "updated_at": "2022-01-27T20:07:06Z"
    }
  ],
  "created_at": "2020-04-21T21:06:02Z",
  "number": 12412,
  "state": "closed",
  "title": "Add support for supplying generic method type parameters",
  "updated_at": "2022-02-24T18:26:47Z"
}