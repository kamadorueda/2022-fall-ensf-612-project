{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5877",
  "author": "KevinMarquette",
  "body": "I created the suggested module in #5866 to create an alias for `SC` and to act as a placeholder for other aliases. I discovered that it will not auto import the alias module when calling `sc` because of the `sc.exe` conflict. If I import the module any other way, then the alias works as expected. I suspect that if I had a non-conflicting alias that was called the module would import and then the original alias would work as expected.\r\n\r\npsd1\r\n```\r\n@{\r\n        RootModule        = 'PowerShell-Core-Compatibility-Alias.psm1'\r\n        ModuleVersion     = '0.1.0'\r\n        GUID              = '14905138-6639-4c1c-8297-e587f27dc943'\r\n        Author            = 'Kevin Marquette'\r\n        CompanyName       = 'Unknown'\r\n        Copyright         = '(c) Kevin Marquette. All rights reserved.'\r\n        Description       = 'Adds aliases to PowerShell Core that were removed from Windows PowerShell'\r\n        FunctionsToExport = @()\r\n        CmdletsToExport   = @()\r\n        VariablesToExport = @()\r\n        AliasesToExport   = @('sc')\r\n    \r\n        PrivateData       = @{\r\n            PSData = @{        \r\n            }\r\n        }\r\n    }\r\n```\r\npsm1\r\n```\r\nSet-Alias -Name sc -Value Set-Content -ErrorAction Ignore\r\n```\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\nPS:> Install-Module PowerShell-Core-Compatibility-Alias\r\nPS:> Get-module PowerShell-Core-Compatibility-Alias\r\nModuleType Version    Name                                ExportedCommands\r\n---------- -------    ----                                ----------------\r\nScript     0.1.0      PowerShell-Core-Compatibility-Alias sc\r\n\r\nPS:> SC -Path $env:temp\\test.txt -Value 'test'\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\nThat calling the exported `sc` alias would import the module and create the alias.\r\nThen the `sc` alias for `Set-Content` would create a file with the value `test`\r\n```none\r\n\r\n```\r\n\r\nActual behavior\r\n---------------\r\nThe windows `sc.exe` is called and gives it's output\r\n```none\r\nERROR:  Unrecognized command\r\n\r\nDESCRIPTION:\r\n        SC is a command line program used for communicating with the\r\n        Service Control Manager and services.\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.0\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.0\r\nOS                             Microsoft Windows 10.0.16299\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2018-01-14T05:54:47Z",
  "comments": [
    {
      "author": "Jaykul",
      "author_association": "CONTRIBUTOR",
      "body": "That's the expected behavior --regardless of whether the command in the module is a function, cmdlet, or alias-- a module will only be autoloaded to satisfy the command if the command cannot be found at all without loading the module. If you think about it, you'll realize it couldn't be any other way, or we'd never be able to safely write modules that overwrite existing commands.\r\n\r\nFor example, in Windows PowerShell `glg` is an alias for `Get-LocalGroup` -- try making a glg.cmd file in your path:\r\n\r\n```posh\r\nNew-Item .\\Scripts -Type Directory -Force\r\n$Env:Path += \";\" + (resolve-path .\\Scripts\\).Path\r\nSet-Content .\\Scripts\\glg.cmd \"@echo Hello World\"\r\nGet-Command glg*\r\n```\r\n\r\nYou'll see that glg shows up as an alias _without a definition_, and also as an Application: glg.cmd\r\n\r\nIt will look like the alias comes first in the output of Get-Command, which would mean that it would be what's executed -- but that's only because we triggered Get-Command's _search_ mode by using a wildcard, try this:\r\n\r\n```posh\r\nGet-Command glg\r\n```\r\n\r\nAnd you'll see that the alias _does not show up_.  In the first output, the fact that the alias had no definition (i.e., it shows an arrow -> with nothing on the right) should have been our clue. If you run `glg` you'll get the batch file ... _unless_ you first import the module:\r\n\r\n```posh\r\nImport-Module Microsoft.PowerShell.LocalAccounts\r\nGet-Command glg*\r\n```\r\n\r\nNow you'll see the alias has a definition, so it's going to _actually_ win when we run it --which we can tell by running:\r\n\r\n```posh\r\nGet-Command glg\r\n```",
      "created_at": "2018-01-14T04:10:29Z",
      "updated_at": "2018-01-14T04:10:29Z"
    },
    {
      "author": "KevinMarquette",
      "author_association": "CONTRIBUTOR",
      "body": "That's perfectly logical when you break it down that way. It kills the value of the module that I was going to create because of a specific conflict, but PowerShell is not wrong here.",
      "created_at": "2018-01-14T05:54:47Z",
      "updated_at": "2018-01-14T05:54:47Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@KevinMarquette The module is useful - simply we should import it manually, in profile files or in engine. See suggested roadmap in https://github.com/PowerShell/PowerShell/issues/5870#issuecomment-357240591",
      "created_at": "2018-01-14T10:23:07Z",
      "updated_at": "2018-01-14T10:23:07Z"
    },
    {
      "author": "KevinMarquette",
      "author_association": "CONTRIBUTOR",
      "body": "I'll work on adding other missing aliases this week.\n",
      "created_at": "2018-01-14T15:39:58Z",
      "updated_at": "2018-01-14T15:39:58Z"
    },
    {
      "author": "Jaykul",
      "author_association": "CONTRIBUTOR",
      "body": "@KevinMarquette did you see my jump-start? I still need to dump the defaults from PS6 on LInux & Windows and then break this list up based on that, but: https://gist.github.com/Jaykul/2c10404e13f6ae82e20abec4fa756bb3",
      "created_at": "2018-01-14T18:46:06Z",
      "updated_at": "2018-01-14T18:46:06Z"
    }
  ],
  "created_at": "2018-01-12T10:18:31Z",
  "labels": [
    "Issue-Question",
    "Resolution-Answered"
  ],
  "number": 5877,
  "state": "closed",
  "title": "module with a exported aliase don't auto import that alias if conflicting native command exists",
  "updated_at": "2018-01-14T18:46:06Z"
}