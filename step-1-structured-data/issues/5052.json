{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5052",
  "author": "markekraus",
  "body": "Closes #4274\r\n\r\n- Adds an `-Authentication` parameter to `Invoke-RestMethod` and `Invoke-WebRequest`\r\n- Adds an `-Token` parameter to `Invoke-RestMethod` and `Invoke-WebRequest`\r\n- Adds an `-AllowUnencryptedAuthentication` parameter to `Invoke-RestMethod` and `Invoke-WebRequest`\r\n- Adds tests for various `-Authorization` uses\r\n-  `-Authentication` Parameter has 3 options: `Basic`, `OAuth`, and `Bearer`\r\n- `Basic` requires `-Credential` and provides RFC-7617 Basic Authorization credentials to the remote server\r\n- `OAuth` and `Bearer` require the `-Token` which is a SecureString containing the bearer token to send to the remote server\r\n- If any authentication is provided for any transport scheme other than HTTPS, the request will result in an error. A user may use the `-AllowUnencryptedAuthentication` switch to bypass this behavior and send their secrets unencrypted at their own risk.\r\n- `-Authentication` does not work with `-UseDefaultCredentials` and will result in an error.\r\n\r\nThe existing behavior with `-Credential` is left untouched. When *not* supplying `-Authentication`, A user will *not* receive an error when using `-Credential` over unencrypted connections.\r\n\r\nCode design choice is meant to accommodate more Authentication types in the future.\r\n\r\n# Documentation Needed\r\nThe 3 new parameters will need to be added to the `Invoke-RestMethod` and `Invoke-WebRequest` documentation along with examples. Syntax will need to be updated.",
  "closed_at": "2017-10-18T02:08:07Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": ">The existing behavior with  -Credential  is left untouched. When not supplying  -Authorization , A user will not receive an error when using  -Credential  over unencrypted connections.\r\n\r\nWe could write non-terminating error or just terminating error w/o explicitly `-AllowUnencrypted`. I think we should. Security is in high priority.\r\n\r\nWhy 'Authorization' ? ~Right term is 'Authentication'~. It's confusing. I think better  'AuthorizationHeaderType' and '-AllowUnencryptedAuthentication'.\r\n",
      "created_at": "2017-10-09T07:38:47Z",
      "updated_at": "2017-10-09T08:13:30Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "> We could write non-terminating error or just terminating error w/o explicitly `-AllowUnencrypted`.\r\n\r\nI considered that but I wasn't sure if that should be done in this PR or something separate. This PR is adding new features only without altering existing behavior. It's still not clear to me what is too much for one PR and what is not.\r\n\r\n> Why 'Authorization' ? ~Right term is 'Authentication'.~ It's confusing. I think better 'AuthorizationHeaderType' and '-AllowUnencryptedAuthentication'.\r\n\r\nI would take that up with IETF. They are the crazy ones that decided that Authorization is the correct term here regardless of what the dictionary begs to differ. \ud83d\ude06 \r\n\r\nI think `-Authorization` is fine. I asked for feedback in the issue and there seemed to be an agreement on it being ok. The originally proposed parameter was `-Authentication`. To most people the words are interchangeable. But to those familiar with HTTP, `Authorization` is less ambiguous.  'AuthorizationHeaderType' or 'AuthorizationType'  is a bit verbose and redundant in my opinion.\r\n\r\n'-AllowUnencryptedAuthentication' How about '-AllowUnencryptedSecrets'? Assuming there may be more uses outside of the 'Authorization'. I wouldn't want to have `-Authorization` and `-AllowUnencryptedAuthentication` mixing. so if one is `Authorization` so should be the other unless we decide on something completely different.",
      "created_at": "2017-10-09T09:38:14Z",
      "updated_at": "2017-10-09T09:39:21Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "Travis CI fail due to #5062",
      "created_at": "2017-10-09T10:33:45Z",
      "updated_at": "2017-10-09T10:33:45Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I believe that the use of `Authorization` term on the client side is a crude distortion of its classical definition of AAA. @SteveL-MSFT pointed out this in the Issue discussion. When I started with the PR, I came here in a bit of confusion about what we wanted to do on the client side?! Turns out we need classical _authentication_ by means of setting `HTTP authorization header`. We have to be more precise in using long-known terms to prevent users from being misled.\r\nSo I think 'AuthorizationHeaderType' is good. IntelliSense help us with long parameters. But '-AuthHeaderType' is also good. Perhaps `-AllowUnencryptedAuth` too.",
      "created_at": "2017-10-09T10:38:53Z",
      "updated_at": "2017-10-09T10:38:53Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "What is the consensus on the parameter names? leave them? change them?",
      "created_at": "2017-10-09T23:45:39Z",
      "updated_at": "2017-10-09T23:45:39Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "I think adding \"HeaderType\" is more of an impl detail than the average user will care about.  And while the header is named Authorization, in [articles and papers ](https://tools.ietf.org/html/rfc1945#section-11) the overall process is referred to as `Authentication` as in Basic Authentication, Digest Authentication, etc.  Perhaps you just call the parameter `-Auth` and let the user interpret it as they see fit.  :-)",
      "created_at": "2017-10-10T00:32:08Z",
      "updated_at": "2017-10-10T00:33:20Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "To be consistent with other cmdlets, I think we should call it `-Authentication`.  People can use `-Auth` as it will resolve correctly.",
      "created_at": "2017-10-10T00:43:21Z",
      "updated_at": "2017-10-10T00:43:21Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I agree with @SteveL-MSFT - really a client do an authentication.",
      "created_at": "2017-10-10T03:58:21Z",
      "updated_at": "2017-10-10T03:59:28Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "Ok. I have switch Authorization with Authentication,\r\n\r\n@SteveL-MSFT @iSazonov can I get some guidance on the public enum for the `-Authentication` parameter? Should we do this? What namespace do I use? Suggestions for name (`WebCmdletAuthenticationType`?) I assume the file location is in the `WebCmdlet` folder?",
      "created_at": "2017-10-10T09:49:07Z",
      "updated_at": "2017-10-10T09:50:38Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I think an enum is good because we rid from many string constants and string comparitions, our code becomes more readable. I only worry about extensibility.\r\nIt seems `namespace Microsoft.PowerShell.Commands` is good.\r\n` WebCmdletAuthenticationType` - we could use the type not only in web cmdlets.\r\n\r\n@markekraus Please correct the PR header and description (Authentication).",
      "created_at": "2017-10-10T12:05:44Z",
      "updated_at": "2017-10-10T12:10:17Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov \r\n> we could use the type not only in web cmdlets.\r\n\r\nThen we would probably need to include logic that limits the subsets allowed by the authentication parameter. For example, if this enum were used in another cmdlet and it was extended to include `Shiboleth` for support in that cmdlet but the web cmdlets lack logic to handle that.",
      "created_at": "2017-10-10T13:05:59Z",
      "updated_at": "2017-10-10T13:05:59Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "It's overkill. I mean, this is a public type and users can use it. Although it may be better to mark it as obsolete and document that it is for internal use only.",
      "created_at": "2017-10-10T17:41:37Z",
      "updated_at": "2017-10-10T17:41:37Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov I guess it is overkill. I looked a how other enums are being implemented for parameter options and have tried to follow their conventions. I chose the name `WebAuthenticationType` to make it a bit more generic and to give it some clarity vs other Auth enums used in various other cmdlets.\r\n\r\n@SteveL-MSFT is a comittee review required for the new public enum or is your blessing good enough? \r\n\r\n@iSazonov and @SteveL-MSFT the other outstanding question in this PR is to add a warning to the legacy `-Credential` usage when being sent over non-HTTPS schemes. Should this be done in this PR or in a separate PR?",
      "created_at": "2017-10-13T12:12:08Z",
      "updated_at": "2017-10-13T12:12:08Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "You can add one commit for the warning :-)",
      "created_at": "2017-10-13T13:40:19Z",
      "updated_at": "2017-10-13T13:40:19Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@markekraus I'll see if I can get a quick committee review on this",
      "created_at": "2017-10-13T18:10:34Z",
      "updated_at": "2017-10-13T18:10:34Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee brief discussion is that adding an enum used as a parameter type doesn't require committee approval, code review feedback is sufficient.  The current name and namespace seems appropriate to me.",
      "created_at": "2017-10-13T18:30:26Z",
      "updated_at": "2017-10-13T18:30:26Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@markekraus Thanks for your contribution.  I'll allow 24 hours for the code owners to review. @dantraMSFT , @PaulHigin , & @JamesWTruher ",
      "created_at": "2017-10-16T22:16:33Z",
      "updated_at": "2017-10-16T22:17:19Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "\ud83d\ude04 I've been dragged the PR.\r\n",
      "created_at": "2017-10-18T03:15:35Z",
      "updated_at": "2017-10-18T03:15:35Z"
    }
  ],
  "created_at": "2017-10-07T12:04:34Z",
  "number": 5052,
  "state": "closed",
  "title": "Add Authentication Parameter to Web Cmdlets for Basic and OAuth",
  "updated_at": "2018-01-19T18:57:46Z"
}