{
  "_url": "https://github.com/PowerShell/PowerShell/issues/1849",
  "author": "toenuff",
  "body": "In order for get-process to be useful on Linux, it needs to have access to all properties available via ps.  Specifically, when ps is called with -f, you get the full path and args called for each process.  Unfortunately, on Windows the path has been possible, but the arguments has not been.  Most resort to the WMI objects to get this info.  Alas, no wmi object on Linux.\n\nAnother problem is that the contents of the path property is weird on Linux.  It actually shows the real path (unlike ps -f) for a few processes, but then others, it shows no path when there is one.  For example, sshd:\n\n``` bash\n10:57:20 PS /home/ubuntu> ps -ef |grep sshd\nroot      1002     1  0 Aug15 ?        00:00:00 /usr/sbin/sshd -D\nroot      8325  1002  0 10:19 ?        00:00:00 sshd: ubuntu [priv]\nubuntu    8408  8325  0 10:19 ?        00:00:01 sshd: ubuntu@pts/0\n10:57:24 PS /home/ubuntu> gps sshd |select name, path\n\nName Path\n---- ----\nsshd\nsshd\nsshd\n```\n\nAnd here's the opposite when it shows a path in gps that is the actual path of the bin running:\n\n``` bash\n10:58:41 PS /home/ubuntu> ps -ef |grep vi\nubuntu    4769  4659  0 Aug15 pts/2    00:00:00 /usr/bin/vi t.py\nubuntu    6183  5897  0 Aug16 pts/4    00:00:00 vi t.py\n10:58:43 PS /home/ubuntu> gps vi |select name, path\n\nName Path\n---- ----\nvi   /usr/bin/vim.basic\nvi   /usr/bin/vim.basic\n```\n\nThere doesn't need to be complete consistency with the formatting, but the property for the process object needs to have the contents of ps somewhere in some property.\n\nThis is likely going to be a dotnet issue over a PowerShell one, but it is a story that needs to be addressed by PowerShell in order to become a truly usable shell for Linux.\n",
  "closed_at": "2020-07-16T11:20:31Z",
  "comments": [
    {
      "author": "CJHarmath",
      "author_association": "NONE",
      "body": "I would say that this is also a big miss on Windows as well.\nJust consider this example:\n\n```\nPS C:\\> start notepad c:\\temp\\foo.txt\nPS C:\\> (get-process notepad ).StartInfo.Arguments\n```\n\nIt starts up a notepad.exe with an argument, then when trying to get-process, you won't be able to see that argument anywhere. Your best bet is what @toenuff said to go the WMI route based on the PID, which is messy, but yeah this is more of a .NET limitation as the result is the same when calling \n`[System.Diagnostics.Process]::GetProcessesByName(\"notepad\").StartInfo.Arguments`\n\nApparently that is always empty for already running processes, so not even sure what's the point of having it.\nWould be nice if this issue could trigger a fix in .NET then this can be solved as well.\nFor example procexp is showing the arguments just fine and it does not seem to be an expensive operation to me, probably using Win32 API's.\n\nAlso I would say get-process should return process arguments as top level property vs exposing it as a .NET Startinfo.Arguments\n\nThanks\n",
      "created_at": "2016-09-12T19:13:05Z",
      "updated_at": "2016-09-12T19:13:59Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Great idea, @toenuff @csharmath can one/both of you author an RFC to capture all the details and propose how the output should look along with the parameters?\n",
      "created_at": "2016-09-29T20:49:37Z",
      "updated_at": "2016-09-29T20:49:37Z"
    },
    {
      "author": "davehull",
      "author_association": "NONE",
      "body": "Path, StartInfo and other useful properties are not populated for all Windows processes either (e.g. csrss.exe). I'm assuming this is not a PowerShell problem, but an issue with how CreateProcessW was called at process creation time. Some values can be null, like the process path and presumably StartInfo.\r\n\r\nIt would be useful if MSFT would fix this for csrss.exe, smss.exe, wininit.exe, services.exe and any others. When you can't determine the path of a process, it makes it difficult to investigate issues.",
      "created_at": "2017-05-03T13:29:14Z",
      "updated_at": "2017-05-03T13:29:14Z"
    },
    {
      "author": "felixfbecker",
      "author_association": "CONTRIBUTOR",
      "body": "This seems to be the most common thing googled for `Get-Process`:\r\n\r\n![image](https://user-images.githubusercontent.com/10532611/40194295-bfcbfa4a-59be-11e8-9ade-2a7108ea2df3.png)\r\n\r\n[The accepted answer on StackOverflow](https://stackoverflow.com/a/17582576/4208018) is to use WMI, which of course doesn't work on macOS/Linux.\r\n\r\nI fully agree that this is a big blocker to making PowerShell become a fully useful shell on Linux/macOS.",
      "created_at": "2018-05-17T17:43:22Z",
      "updated_at": "2018-05-17T17:43:46Z"
    },
    {
      "author": "kfsone",
      "author_association": "NONE",
      "body": "Same machine:\r\n\r\nWindows 10 17755.1, powershell 5.0:\r\n(Get-Process |? StartInfo | Measure).Count\r\n173\r\n\r\nWindows 10 17755.1, pwsh core 6.0a:\r\n(Get-Process |? StartInfo | Measure).Count\r\n0\r\n\r\n`\r\nW10 PS5:\r\n`PSVersion                      5.1.17755.1\r\nPSEdition                      Desktop\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nBuildVersion                   10.0.17755.1\r\nCLRVersion                     4.0.30319.42000\r\nWSManStackVersion              3.0\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1`\r\n\r\nPS Core:\r\n`PSVersion                      6.0.4\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.4\r\nOS                             Microsoft Windows 10.0.17755\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0`\r\n",
      "created_at": "2018-09-11T17:53:19Z",
      "updated_at": "2018-09-11T17:53:19Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Someone should open an issue in corefx repo and link it back to this issue",
      "created_at": "2018-09-11T22:33:49Z",
      "updated_at": "2018-09-11T22:33:49Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "The issue was fixed in #12288 for Windows and MacOS. For MacOS see #12832.",
      "created_at": "2020-07-16T11:20:31Z",
      "updated_at": "2020-07-16T11:20:31Z"
    }
  ],
  "created_at": "2016-08-17T11:01:39Z",
  "labels": [
    "Issue-Enhancement",
    "OS-Linux",
    "WG-Cmdlets",
    "Resolution-Fixed"
  ],
  "number": 1849,
  "state": "closed",
  "title": "Get-Process - Missing paths and arguments",
  "updated_at": "2020-07-16T11:20:41Z"
}