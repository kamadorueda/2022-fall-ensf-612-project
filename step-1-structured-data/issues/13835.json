{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13835",
  "author": "xtqqczze",
  "body": "# PR Summary\r\n\r\n* Copy `microsoft.codeanalysis.netanalyzers/5.0.0-rtm.20502.2/editorconfig/AllRulesDefault/.editorconfig` to `.globalconfig`\r\n* Add Add IDE diagnostics to `.globalconfig` with most rules hidden\r\n  * copied from [dotnet/runtime](https://github.com/stephentoub/runtime/blob/3b6600cbefe6b96706c5315ce184accbb4501f3b/eng/CodeAnalysis.ruleset) and converted using `RulesetToEditorconfigConverter.exe`\r\n* Disable diagnostics for `Microsoft.Management.UI.Internal`\r\n\r\n## PR Context\r\n\r\nAlternative to #12892\r\n\r\nIf Visual Studio 2019 is installed, it should be updated to 16.8 Preview5+ because OmniSharp appears to prefer the Visual Studio  MSBuild instance to the StandAlone instance. Otherwise, the global AnalyzerConfig may be ignored.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [NA] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [NA] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [NA] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [NA] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [NA] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [NA] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2020-10-26T16:11:10Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Why not follow https://github.com/dotnet/runtime/blob/master/eng/Analyzers.props?\r\n(Also I'd think about xUnit tests folder too.)\r\n\r\n<blockquote><img src=\"https://avatars0.githubusercontent.com/u/9141961?s=400&v=4\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/dotnet/runtime\">dotnet/runtime</a></strong></div><div>.NET is a cross-platform runtime for cloud, mobile, desktop, and IoT apps. - dotnet/runtime</div></blockquote>",
      "created_at": "2020-10-22T16:47:03Z",
      "updated_at": "2020-10-22T16:48:11Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "> Why not follow https://github.com/dotnet/runtime/blob/master/eng/Analyzers.props?\r\n> (Also I'd think about xUnit tests folder too.)\r\nPreviously, you had wanted to use EditorConfig instead of ruleset configuration.\n\n<blockquote><img src=\"https://avatars0.githubusercontent.com/u/9141961?s=400&v=4\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/dotnet/runtime\">dotnet/runtime</a></strong></div><div>.NET is a cross-platform runtime for cloud, mobile, desktop, and IoT apps. - dotnet/runtime</div></blockquote>",
      "created_at": "2020-10-22T16:57:16Z",
      "updated_at": "2020-10-22T16:57:19Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> Previously, you had wanted to use EditorConfig instead of ruleset configuration.\r\n\r\nMy thought was and is that we shouldn't have two configs - in EditorConfig and in ruleset. If VS Code supports(?) ruleset it is better to use ruleset and follow .Net team's pattern.",
      "created_at": "2020-10-22T17:41:34Z",
      "updated_at": "2020-10-22T17:41:34Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "Closed in favour of #12892",
      "created_at": "2020-10-22T19:27:35Z",
      "updated_at": "2020-10-23T20:06:52Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov This PR uses `.globalconfig` file. It is the easiest solution and it just works, including `TreatWarningsAsErrors`.",
      "created_at": "2020-10-23T17:09:56Z",
      "updated_at": "2020-10-23T17:09:56Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I will merge because:\r\n- we should benefit from Roslyn analyzers that is best practice.\r\n- it is more convenient than alternative analyzers.\r\n- we will be able to force rules in PRs without requests from maintainers.\r\n- After we moved to .Net 5.0 RC1 Roslyn analyzers are already enabled by default.\r\n- VS Code OmniSharp works with EditorConfig and GlobalConfig (need latest VS 2019 16.8 Preview5+).\r\n\r\nAs a side notice, we could disable Analyzers in all CIs to speed up compiling and separate check (compile only) with enabled analyzers.\r\n",
      "created_at": "2020-10-26T16:09:43Z",
      "updated_at": "2020-10-26T16:09:43Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.2.0-preview.1` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.2.0-preview.1)\n",
      "created_at": "2020-11-17T23:00:18Z",
      "updated_at": "2020-11-17T23:00:18Z"
    }
  ],
  "created_at": "2020-10-22T16:35:30Z",
  "number": 13835,
  "state": "closed",
  "title": "Add global AnalyzerConfig with default configuration",
  "updated_at": "2020-11-17T23:00:18Z"
}