{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3140",
  "author": "joeyaiello",
  "body": "This more of a placeholder issue than anything right now. Today, the build uses `dotnet-cli` and the `project.json` schema for managing the build. In the future, [.NET Core is moving back to MSBuild](https://blogs.msdn.microsoft.com/dotnet/2016/11/16/announcing-net-core-tools-msbuild-alpha/), which we'll need to use if we want to leverage .NET Standard 2.0 (which we want to do in the 6.0.0 timeframe). \r\n\r\nI have no idea what the work entails right now (or if we can get started yet), but I wanted to get it on everyone's radar. ",
  "closed_at": "2017-03-23T20:04:53Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I see that .Net team is actively seeking the experience of such migration. Maybe they will be happy to provide direct assistance to us.\r\nhttp://landinghub.visualstudio.com/migrate-dotnetcore",
      "created_at": "2017-02-14T17:39:25Z",
      "updated_at": "2017-02-14T17:39:25Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "The biggest issue is likely on our side - we depend on the `project.json` files to produce the list of assemblies that go into our type catalog for type resolution. We have a proposed temporary solution - to just check in the generated type catalog - but that's not a long term solution because it won't work when we update which assemblies we pull in.\r\n\r\nWe also need to merge https://github.com/PowerShell/PowerShell/pull/3066 to reduce the effort to migrate.",
      "created_at": "2017-02-14T19:29:29Z",
      "updated_at": "2017-02-14T19:29:29Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "@lzybkr can't we also solve the same problems that #3066 alleviates (namely, a dependency on Win10 SDK) by moving native binary compilation out of this repository? (i.e. since those aren't getting touched quite as much, build them in another repo and pull them in through a Nuget feed?)",
      "created_at": "2017-02-14T22:56:07Z",
      "updated_at": "2017-02-14T22:56:07Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "#3066 saves effort in migrating by building less **and** having simpler build files (one target - `netstandard1.x` instead of two.)\r\n\r\nMoving native binary compilation should also help (building less!), but it is slightly different.",
      "created_at": "2017-02-14T23:19:42Z",
      "updated_at": "2017-02-14T23:19:42Z"
    }
  ],
  "created_at": "2017-02-13T21:52:45Z",
  "number": 3140,
  "state": "closed",
  "title": "Move build to csproj/msbuild",
  "updated_at": "2017-03-24T03:32:16Z"
}