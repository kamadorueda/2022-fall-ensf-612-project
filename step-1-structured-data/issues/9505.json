{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9505",
  "author": "SteveL-MSFT",
  "body": "# Summary of the new feature/enhancement\r\n\r\nhttps://github.com/libfuse/sshfs enables mounting a SFTP endpoint as a local filesystem.  Seems like we should be able to use this concept with a PSProvider thus enabling something like:\r\n\r\n```powershell\r\ncd SFTP:\r\n# no creds passed as using pubkey auth\r\nSFTP:> Connect-SftpServer -HostName foo\r\ncd foo\r\nSFTP:/foo>\r\n```\r\n\r\n# Proposed technical implementation details (optional)\r\n\r\nSince we want this to be cross platform, we shouldn't use `sshfs` linked above.  Instead, we should be able to just use `sftp.exe` directly with some check that it is available.  This will work on Windows with OpenSSH installed.\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "strawgate",
      "author_association": "CONTRIBUTOR",
      "body": "This would be great if it also supported insecure ftp",
      "created_at": "2019-05-01T03:24:14Z",
      "updated_at": "2019-05-01T03:24:14Z"
    },
    {
      "author": "fMichaleczek",
      "author_association": "NONE",
      "body": "@strawgate This enhancement is about FTP over SSH (SFTP) to improve remote administration. In my opinion, FTP and FTPS are out of scope and need a different library (like this one : [FluentFTP](https://github.com/robinrodricks/FluentFTP) )",
      "created_at": "2019-05-01T03:37:10Z",
      "updated_at": "2019-05-01T03:37:10Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "FTP is very old, insecure protocol with very poor capabilities. I see use cases for compatibilites with old systems which can work only with FTP but I think this is the case when it should be separated from core.\r\nFor reference. We should work transparently with any transport (WSMan, SSH and etc). Also we discussed previously that we need to implement provider-to-provider communications (ex.: copy-item).",
      "created_at": "2019-05-01T17:50:20Z",
      "updated_at": "2019-05-01T17:50:20Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Regular FTP should be covered by https://github.com/PowerShell/PowerShell-RFC/pull/124\r\n",
      "created_at": "2019-05-01T19:54:46Z",
      "updated_at": "2019-05-01T19:54:46Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "With such a provider, you don't even have to `cd` into the psdrive, you should be able to do this:\r\n\r\n```powershell\r\ncopy-item sftp:/foo/path/file ~/Downloads/\r\n```\r\n",
      "created_at": "2019-05-02T16:38:43Z",
      "updated_at": "2019-05-02T16:38:43Z"
    },
    {
      "author": "ThomasNieto",
      "author_association": "CONTRIBUTOR",
      "body": "If this gets implemented #6586 would need to be fixed to enable cross-provider support for the example to work.",
      "created_at": "2020-09-14T02:21:01Z",
      "updated_at": "2020-09-14T02:21:01Z"
    },
    {
      "author": "chrgraefe",
      "author_association": "NONE",
      "body": "@SteveL-MSFT: Are the any ideas to put some effort in this implementation?\r\nI don't understand your proposed technical idea. Should this work as a wrapper around the ssh and sftp commands?",
      "created_at": "2021-04-30T11:58:17Z",
      "updated_at": "2021-04-30T11:58:17Z"
    }
  ],
  "created_at": "2019-05-01T00:47:44Z",
  "labels": [
    "Issue-Enhancement",
    "WG-Engine-Providers"
  ],
  "number": 9505,
  "state": "open",
  "title": "Have SFTP PSProvider",
  "updated_at": "2021-04-30T11:58:17Z"
}