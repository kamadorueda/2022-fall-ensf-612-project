{
  "_url": "https://github.com/PowerShell/PowerShell/issues/8111",
  "author": "sonjz",
  "body": "On my Mac (OSX 10.13.6), after performing a `brew cask install powershell`, I proceeded to try create a best practise commenting for test.ps1 and found the shebang pwsh and script comment to conflict.\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\n#!/usr/local/bin/pwsh\r\n<#\r\n    .SYNOPSIS\r\n    test.ps1\r\n    ...\r\n#>\r\n\r\n# return usage\r\nget-help \"./$($MyInvocation.MyCommand.Name)\" -Detailed ;\r\n```\r\n\r\n```bash\r\nchmod +x test.ps1 ;\r\n./test.ps1\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\nExpect to get detailed help back.\r\n\r\nActual behavior\r\n---------------\r\n\r\nJust get parameter usage.  It appears that `<# ... #>` comment needs to be the first line, just like the shebang pwsh needs to be the first line.  Removing either makes the other work.\r\n\r\nWhy this is bad\r\n---------------\r\n\r\nNot having the shebang interpreter + standard commenting will slow down ease of use / adoption for *nix users (i.e not having to run `pwsh ./test.ps1`)\r\n\r\n\r\nEnvironment data\r\n----------------\r\n```powershell\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.1.0\r\nPSEdition                      Core\r\nGitCommitId                    6.1.0\r\nOS                             Darwin 17.7.0 Darwin Kernel Version 17.7.0: Fri Jul  6 19:54:51 PDT 2018; root:xnu-4570.71.3~2/RELEASE_X86_64\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2018-10-24T17:22:51Z",
  "comments": [
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "You can workaround this for now by inserting a blank line after the shebang.  That works for me on Linux.",
      "created_at": "2018-10-24T13:20:18Z",
      "updated_at": "2018-10-24T13:20:18Z"
    },
    {
      "author": "sonjz",
      "author_association": "NONE",
      "body": "Thanks @rkeithhill !\r\n",
      "created_at": "2018-10-24T15:01:02Z",
      "updated_at": "2018-10-24T15:01:02Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "I don't know if I'd close it just yet @sonjz -- a workaround is great, but *ideally* it should be fixed so that the extra line isn't necessary. \ud83d\ude04 ",
      "created_at": "2018-10-24T15:10:07Z",
      "updated_at": "2018-10-24T15:10:07Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I agree, the workaround is great, but not easily discoverable.",
      "created_at": "2018-10-24T17:18:23Z",
      "updated_at": "2018-10-24T17:18:23Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I take it back, looks like it's explicitly documented that the comment based help block must be standalone (that is newline separated from preceding comments) https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_comment_based_help?view=powershell-6",
      "created_at": "2018-10-24T17:23:30Z",
      "updated_at": "2018-10-24T17:23:30Z"
    }
  ],
  "created_at": "2018-10-24T03:26:27Z",
  "number": 8111,
  "state": "closed",
  "title": "shebang interpreter #!/usr/local/bin/pwsh breaks best practise Powershell commenting structure",
  "updated_at": "2018-10-30T05:37:07Z"
}