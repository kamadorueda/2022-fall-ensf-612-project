{
  "_url": "https://github.com/PowerShell/PowerShell/issues/1752",
  "author": "SteveL-MSFT",
  "body": "Description: Problem:\nWhen using Set-AuthenticodeSignature and specifying a TimeStampServer http URL, if the time stamp server returns content/MIME type of: \"application/timestamp-reply\" the cmdlet returns an unknown error with a status of \"ASN1 bad tag value met\". This is non-compliant according to RFC3161 for Time-Stamp protocol via HTTP.\n\nExpected - Set-AuthenticodeSignature with a specified timestampserver URL appropriately handles the \"application/timestamp-reply\" content/MIME, commits the authenticode signature as well as the timestamp from said server without error.\n\nAdditionally, the success case today is when using Set-AuthenticodeSignature with a specified timestampserver URL and the response is content/MIME type of \"application/octet-stream\" the cmdlet returns without error, the authenticode signature is committed and the timestamp is commited without error.\n",
  "closed_at": "2018-02-07T00:51:52Z",
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "TFS:6897298\n",
      "created_at": "2016-09-29T20:08:38Z",
      "updated_at": "2016-09-29T20:08:38Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "We could certainly use a better repro here if someone has one. Either way, it's a fairly low-pri issue, moving it out. ",
      "created_at": "2017-05-23T22:49:49Z",
      "updated_at": "2017-05-23T22:49:49Z"
    },
    {
      "author": "kechols2406",
      "author_association": "NONE",
      "body": "Signing against Symantecs SHA256 timestamp server recreates this issue reliably for me. ",
      "created_at": "2017-10-10T16:00:09Z",
      "updated_at": "2017-10-10T16:00:09Z"
    },
    {
      "author": "chandj",
      "author_association": "NONE",
      "body": "`set-authenticodesignature c:\\test.ps1 -certificate $mycert -hashalgorithm \"SHA256\" -timestampserver \"http://sha256timestamp.ws.symantec.com/sha256/timestamp\"`  \r\n\r\nwill reproduce this error.  Please consider bumping this up in priority, as it stops us from timestamping signed scripts according to Microsoft's new timestamping standards.\r\n\r\nMy current workaround is to use signtool.exe to timestamp our scripts with SHA2.\r\n\r\nThanks!",
      "created_at": "2018-02-06T18:33:17Z",
      "updated_at": "2018-02-06T18:33:52Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Not sure if there's much we can do here, it appears that the cmdlet simply passes the signing to the native [CryptUIWiz](https://github.com/PowerShell/PowerShell/blob/4bc52d2358222084738157a08907fac32d13bd3a/src/System.Management.Automation/security/nativeMethods.cs#L511) API which is returning this error.  Looking at the CryptAPI, it appears they only support `octet-stream`.  They would need to support `timestamp-reply` and this cmdlet should just work.\r\n\r\nBest way to get this supported is to open or upvote a issue here: https://wpdev.uservoice.com/",
      "created_at": "2018-02-07T00:51:52Z",
      "updated_at": "2018-02-07T00:51:52Z"
    },
    {
      "author": "gillesveyet",
      "author_association": "NONE",
      "body": "Vote [here](https://wpdev.uservoice.com/forums/110705-universal-windows-platform/suggestions/33239629-cryptuiwiz-to-support-timestamp-reply) to support Jordan Chan proposal \"Cryptuiwiz to support timestamp-reply\"",
      "created_at": "2018-04-24T12:29:12Z",
      "updated_at": "2018-04-24T12:29:12Z"
    },
    {
      "author": "GregoryOtt",
      "author_association": "NONE",
      "body": "User Voice is no longer up... Anyone knows where we can follow this issue?",
      "created_at": "2020-03-10T16:05:28Z",
      "updated_at": "2020-03-10T16:05:28Z"
    },
    {
      "author": "gillesveyet",
      "author_association": "NONE",
      "body": "Sorry I don't know, and I am less interested in this as I have switched to http://timestamp.digicert.com  which works with PowerShell.\r\n\r\nNote : Anyone using legacy VeriSign and symantec time stamping services should switch to digicert : https://knowledge.digicert.com/alerts/migration-of-legacy-verisign-and-symantec-time-stamping-services.html\n\n<blockquote></blockquote>\n<blockquote><img src=\"/content/dam/digicertknowledgebase/favicon.png\" width=\"48\" align=\"right\"><div><strong><a href=\"https://knowledge.digicert.com/alerts/migration-of-legacy-verisign-and-symantec-time-stamping-services.html\">Migration of Legacy VeriSign and Symantec Time Stamping Services</a></strong></div></blockquote>",
      "created_at": "2020-03-10T18:32:38Z",
      "updated_at": "2020-03-10T18:32:40Z"
    }
  ],
  "created_at": "2016-08-12T18:24:56Z",
  "labels": [
    "WG-Cmdlets",
    "Resolution-External"
  ],
  "number": 1752,
  "state": "closed",
  "title": "Set-AuthenticodeSignature does not handle MIME type \"application/timestamp-reply\"",
  "updated_at": "2020-03-10T18:32:40Z"
}