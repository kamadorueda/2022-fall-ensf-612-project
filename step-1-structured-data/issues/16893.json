{
  "_url": "https://github.com/PowerShell/PowerShell/issues/16893",
  "author": "cmeyertons",
  "body": "### Prerequisites\r\n\r\n- [X] Write a descriptive title.\r\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- [X] Search the existing issues.\r\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\r\n\r\n### Steps to reproduce\r\n\r\nI am attempting to invoke a Powershell file via c# using the Microsoft.PowerShell.SDK (7.2.1, net6)\r\n\r\nI can only get back the return value if AddScript is passed the raw script text.  However, that method starts failing when nested Powershell files get used.\r\n\r\nThe [AddScript documentation](https://docs.microsoft.com/en-us/dotnet/api/system.management.automation.powershell.addscript?view=powershellsdk-7.0.0) appears incorrect -- it only referes to AddCommand in the examples.\r\n\r\nI was looking at the [Powershell.AddCommand(CommandInfo info](https://docs.microsoft.com/en-us/dotnet/api/system.management.automation.powershell.addcommand?view=powershellsdk-7.0.0#overloads) overload, but all the constructors of those implementations have been marked `internal`, so that public overload does not allow anything to be passed into it? :/\r\n\r\nI could only find a similar example [here](https://www.codelocker.net/p/5232/csharp-run-powershell-script-from-csharp-dotnet-core/)\r\n\r\nC# code\r\n```csharp\r\nprivate object TestPowershell(string path)\r\n    {\r\n        var ps = PowerShell.Create();\r\n\r\n        var text = File.ReadAllText(path);\r\n\r\n        ps = ps\r\n            // .AddScript(text) <- this works when using raw settings.  Nested powershell files does not\r\n            // .AddCommand(path) <- does not work at all.\r\n            .AddScript(path) // <- does not work at all.\r\n            .AddParameter(\"Env\", \"local\")\r\n        ;\r\n\r\n\r\n        var psResult = ps.Invoke();\r\n\r\n        return psResult;\r\n    }\r\n```\r\n\r\nsimple powershell file:\r\n```ps\r\nParam (\r\n    [string]$Env = \"local\"\r\n)\r\n\r\n$settings = @{\r\n    Test = \"hi!\"\r\n}\r\n\r\n$settings\r\n```\r\n \r\nnested powershell file (invokes the one above)\r\n```ps\r\nParam (\r\n    [string]$Env = \"local\"\r\n)\r\n\r\nreturn (& \"$PSScriptRoot\\..\\local\\Settings.ps1\")\r\n```\r\n\r\n### Expected behavior\r\n\r\n```console\r\nCan pass in script path via AddScript + nested powershell files work the same as invoked from terminal\r\n```\r\n\r\n\r\n### Actual behavior\r\n\r\n```console\r\nWhen using the script path (or a nested script is involved), the result set is always empty.\r\n\r\nRaw script text w/ just a simple file works fine (so I know I'm at least close!)\r\n```\r\n\r\n\r\n### Error details\r\n\r\n_No response_\r\n\r\n### Environment data\r\n\r\n```powershell\r\n<TargetFramework>net6.0</TargetFramework>\r\n<PackageReference Include=\"Microsoft.PowerShell.SDK\" Version=\"7.2.1\" />\r\n```\r\n\r\n\r\n### Visuals\r\n\r\n_No response_",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> The [AddScript documentation](https://docs.microsoft.com/en-us/dotnet/api/system.management.automation.powershell.addscript?view=powershellsdk-7.0.0) appears incorrect -- it only referes to AddCommand in the examples.\r\n\r\nThis must be fixed in the repository (ex., #15568)",
      "created_at": "2022-02-17T14:54:25Z",
      "updated_at": "2022-02-17T14:54:25Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Working example for AddScript https://docs.microsoft.com/en-us/powershell/scripting/developer/hosting/adding-and-invoking-commands?view=powershell-7.2#addscript\n\n<blockquote><img src=\"https://docs.microsoft.com/media/logos/logo-powershell-social.png\" width=\"48\" align=\"right\"><div><strong><a href=\"https://docs.microsoft.com/en-us/powershell/scripting/developer/hosting/adding-and-invoking-commands\">Adding and invoking commands - PowerShell</a></strong></div><div>Adding and invoking commands</div></blockquote>",
      "created_at": "2022-02-17T14:57:53Z",
      "updated_at": "2022-02-17T14:57:55Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Examples for files\r\nhttps://stackoverflow.com/questions/68941818/how-to-execute-a-powershell-script-using-c-sharp-and-setting-execution-policy\r\nhttps://stackoverflow.com/questions/527513/execute-powershell-script-from-c-sharp-with-commandline-arguments\n\n<blockquote><img src=\"https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded\" width=\"48\" align=\"right\"><div>Stack Overflow</div><div><strong><a href=\"https://stackoverflow.com/questions/68941818/how-to-execute-a-powershell-script-using-c-sharp-and-setting-execution-policy\">How to execute a powershell script using c# and setting execution policy?</a></strong></div><div>I tried to combine two answers from stackoverflow (first &amp; second)\nInitialSessionState iss = InitialSessionState.CreateDefault();\n// Override ExecutionPolicy\n\nPropertyInfo execPolProp = iss.Get...</div></blockquote>\n<blockquote><img src=\"https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded\" width=\"48\" align=\"right\"><div>Stack Overflow</div><div><strong><a href=\"https://stackoverflow.com/questions/527513/execute-powershell-script-from-c-sharp-with-commandline-arguments\">Execute PowerShell Script from C# with Commandline Arguments</a></strong></div><div>I need to execute a PowerShell script from within C#. The script needs commandline arguments.\n\nThis is what I have done so far:\n\nRunspaceConfiguration runspaceConfiguration = RunspaceConfiguration....</div></blockquote>",
      "created_at": "2022-02-17T15:02:04Z",
      "updated_at": "2022-02-17T15:02:06Z"
    },
    {
      "author": "cmeyertons",
      "author_association": "NONE",
      "body": "@iSazonov  you are a life saver!  Was banging my head against the wall on that one for a while.\r\n\r\nWould it be worth documenting this code path?  It seems like a pretty common pattern to invoke an existing .ps1 file from .NET core.  I don't see any samples in the [MSDN docs](https://docs.microsoft.com/en-us/powershell/scripting/developer/hosting/host-application-samples?view=powershell-7.2) for this use case\r\n\r\nFor those that come across this, here is my final working example for running an external script using the Powershell SDK:\r\n\r\n```csharp\r\nprivate object TestPowershell(string path)\r\n    {\r\n        // not required, but nice to do if you don't want the execution policy to block\r\n        var iss = InitialSessionState.CreateDefault();\r\n        iss.ExecutionPolicy = Microsoft.PowerShell.ExecutionPolicy.Bypass;\r\n\r\n        using var runspace = RunspaceFactory.CreateRunspace(iss);\r\n        runspace.Open();\r\n        using var pipeline = runspace.CreatePipeline();\r\n\r\n        var cmd = new Command(path);\r\n        cmd.Parameters.Add(\"Env\", \"local\");\r\n\r\n        pipeline.Commands.Add(cmd);\r\n\r\n        return pipeline.Invoke();\r\n    }\r\n```",
      "created_at": "2022-02-17T16:12:28Z",
      "updated_at": "2022-02-17T16:13:05Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> Would it be worth documenting this code path? It seems like a pretty common pattern to invoke an existing .ps1 file from .NET core. I don't see any samples in the [MSDN docs](https://docs.microsoft.com/en-us/powershell/scripting/developer/hosting/host-application-samples?view=powershell-7.2) for this use case\r\n\r\nYou can open new issue https://github.com/MicrosoftDocs/PowerShell-Docs\n\n<blockquote><img src=\"https://repository-images.githubusercontent.com/44411511/850abe80-7ca6-11e9-886f-a1b13b275ae0\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/MicrosoftDocs/PowerShell-Docs\">GitHub - MicrosoftDocs/PowerShell-Docs: The official PowerShell documentation sources</a></strong></div><div>The official PowerShell documentation sources. Contribute to MicrosoftDocs/PowerShell-Docs development by creating an account on GitHub.</div></blockquote>",
      "created_at": "2022-02-17T17:24:59Z",
      "updated_at": "2022-02-17T17:25:01Z"
    },
    {
      "author": "cmeyertons",
      "author_association": "NONE",
      "body": "Done on my side! Feel free to close if desired!",
      "created_at": "2022-02-17T17:31:18Z",
      "updated_at": "2022-02-17T17:31:18Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "We keep the issue opened to fix docs in code https://github.com/PowerShell/PowerShell/issues/16893#issuecomment-1043035393",
      "created_at": "2022-02-18T04:25:14Z",
      "updated_at": "2022-02-18T04:25:14Z"
    }
  ],
  "created_at": "2022-02-17T13:42:21Z",
  "labels": [
    "Up-for-Grabs",
    "Issue-Code Cleanup",
    "Documentation Needed",
    "WG-DevEx-SDK",
    "Needs-Triage"
  ],
  "number": 16893,
  "state": "open",
  "title": "Microsoft.PowerShell.SDK - AddScript does not work w/ script path or nested Powershell files",
  "updated_at": "2022-02-18T04:25:15Z"
}