{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7628",
  "author": "ThreeFive-O",
  "body": "## PR Summary\r\n\r\nFix #4043. \r\nAdds a new parameter set with `-NoSubject` switch to opt-in, which allows to send a mail message without a subject.\r\nAdds test cases for named and positional parameters. No test case for pipeline input due to error as stated by #7591.\r\nAdds context scopes for test cases to differentiate between parameter set tests.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` to the beginning of the title and remove the prefix when the PR is ready.\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [x] User-facing [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [x] Issue filed - Issue link: PowerShell/PowerShell-Docs#2852\r\n- **Testing - New and feature**\r\n    - [ ] Not Applicable or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n        - [ ] [Add `[feature]` if the change is significant or affects feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\r\n",
  "closed_at": "2018-09-06T05:51:12Z",
  "comments": [
    {
      "author": "msftclas",
      "author_association": "NONE",
      "body": "[![CLA assistant check](https://cla.opensource.microsoft.com/pull/badge/signed)](https://cla.opensource.microsoft.com/PowerShell/PowerShell?pullRequest=7628) <br/>All CLA requirements met.",
      "created_at": "2018-08-24T09:44:41Z",
      "updated_at": "2018-08-24T09:46:01Z"
    },
    {
      "author": "kvprasoon",
      "author_association": "CONTRIBUTOR",
      "body": "@ThreeFive-O Fix CodeFactor issues as well.",
      "created_at": "2018-08-25T16:43:58Z",
      "updated_at": "2018-08-25T16:43:58Z"
    },
    {
      "author": "ThreeFive-O",
      "author_association": "CONTRIBUTOR",
      "body": " @kvprasoon Thank you for the feedback. I've fixed the spacing issues. \r\n\r\nRegarding CodeFactor feedback: Most of the issues were the spacing issues as you pointed out. The other four remaining issues are styling issues which would have to apply for the entire file. But I stick to the coding style within the file. Maybe a separate PR which improves the code style would help here.\r\n\r\nOne problem I've encountered: My access to the CodeFactor feedback for this PR was denied. I had to clone the code into my own CodeFactor namespace to see the issues. Are you able to access the feedback of CodeFactor directly by clicking \"Details\" for this PR?",
      "created_at": "2018-08-25T17:53:13Z",
      "updated_at": "2018-08-25T17:53:13Z"
    },
    {
      "author": "kvprasoon",
      "author_association": "CONTRIBUTOR",
      "body": "Nop I don't have. Cc: @iSazonov ",
      "created_at": "2018-08-25T18:34:55Z",
      "updated_at": "2018-08-27T03:13:06Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I lost access to CodeFactor too.\r\n/cc @TravisEz13 ",
      "created_at": "2018-08-26T10:44:40Z",
      "updated_at": "2018-08-26T10:44:40Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "I think codefactor should be back.  I had last access as well.",
      "created_at": "2018-08-27T17:17:51Z",
      "updated_at": "2018-08-27T17:17:51Z"
    },
    {
      "author": "kvprasoon",
      "author_association": "CONTRIBUTOR",
      "body": "@ThreeFive-O CodeFactor is back, I have just checked, you can refactor the code now.",
      "created_at": "2018-08-27T17:20:53Z",
      "updated_at": "2018-08-27T17:22:09Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@ThreeFive-O You have added new switch but not implement logic to exclude a subject from the mail.",
      "created_at": "2018-08-28T04:17:20Z",
      "updated_at": "2018-08-28T04:17:20Z"
    },
    {
      "author": "ThreeFive-O",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov This is intended: There is no explicit logic to leave the subject out. The implicit logic is the parameter binding. Since the named parameter `-Subject` won't be bound using the `-NoSubject` parameter, the subject of the email will be assigned to `null`. \r\nThe possibility to get a wrong behavior would be with pipeline input, but this behavior is not correctly implemented (see also #7591), since the implemented core logic only allows attachments to be piped.\r\nIf you wish, one could implement a simple logic to set the mail subject explicitly to `null`, but due to #7591 the current implementation would have to undergo a bigger code change anyway.\r\nIn my humble opinion this PR is the simplest way to implement the behavior without changing the core logic of the code too much.\r\n\r\n@kvprasoon  As of the CodeFactor issues: This is also intended not to be fixed in this PR, since the entire document has a different coding style. Merging this PR with all CodeFactor issues fixed would result in a mixed coding style. As cited by the coding guidelines of this repository: \r\n\r\n> As a general rule, our coding convention is to follow the style of the surrounding code. ",
      "created_at": "2018-08-28T18:05:17Z",
      "updated_at": "2018-08-28T18:05:17Z"
    },
    {
      "author": "kvprasoon",
      "author_association": "CONTRIBUTOR",
      "body": "@ThreeFive-O CodeFactor checks only for changed/added lines and you have to correct it regardless of the existing code style. CodeFactor is recently added, hence not applied to existing code and I think there won't be an effort to trigger CodeFactor check against the whole codebase.\r\n\r\n@iSazonov Correct me if I'm wrong.\r\n",
      "created_at": "2018-08-28T20:30:35Z",
      "updated_at": "2018-08-28T20:30:35Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@ThreeFive-O Thanks for clarify! I think it is a tricky logic and we MUST add a comment to descibe the behavior in the parameter description.\r\n\r\n@kvprasoon We are in a transition phase and we haven't strong requirements about style issues. In the transition time we welcome and accept style fixes _in separate PRs or in separate commits_ but don't force contributers to do this.\r\nIf @ThreeFive-O have plans to continue fix issues in the cmdlet (#7591) it would be nice to fix style issues in the file beforehand.",
      "created_at": "2018-08-29T05:48:52Z",
      "updated_at": "2018-08-29T05:49:25Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@dantraMSFT Could you please review the small PR?",
      "created_at": "2018-08-29T05:56:24Z",
      "updated_at": "2018-08-29T05:56:24Z"
    },
    {
      "author": "dantraMSFT",
      "author_association": "CONTRIBUTOR",
      "body": ">             _mMailMessage.Subject = _subject;\r\n\r\nI believe you only want to set _mMailMessage.Subject only if -NoSubject is not present.\r\n\r\nSomething like the following:\r\nif (!NoSubject.IsPresent)\r\n{\r\n    _mMailMessage.Subject = _subject;\r\n}\r\n",
      "created_at": "2018-08-29T20:42:47Z",
      "updated_at": "2018-08-29T20:44:42Z"
    },
    {
      "author": "ThreeFive-O",
      "author_association": "CONTRIBUTOR",
      "body": "Implemented logic as suggested by @dantraMSFT and previously mentioned by @iSazonov.\r\nFixed the code factor issues as suggested by @kvprasoon.\r\nChanged to auto property as suggested by @iSazonov.\r\n\r\nThe other style issues shall be fixed in an upcoming PR.",
      "created_at": "2018-08-30T10:26:12Z",
      "updated_at": "2018-08-30T10:26:12Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee reviewed this and recommends the proposal we put in the issue https://github.com/PowerShell/PowerShell/issues/4043",
      "created_at": "2018-09-05T22:33:46Z",
      "updated_at": "2018-09-05T22:33:46Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@ThreeFive-O Sorry, PowerShell Committee conclusion is that we should change `Subject` parameter and not add new parameter. I think you could close the PR and implement the conclusion in new PR.",
      "created_at": "2018-09-06T04:18:00Z",
      "updated_at": "2018-09-06T04:18:00Z"
    },
    {
      "author": "ThreeFive-O",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov Thank you. Will make a new PR soon.",
      "created_at": "2018-09-06T05:51:12Z",
      "updated_at": "2018-09-06T05:51:12Z"
    }
  ],
  "created_at": "2018-08-24T09:44:30Z",
  "number": 7628,
  "state": "closed",
  "title": "WIP: Add -NoSubject switch to Send-MailMessage cmdlet",
  "updated_at": "2018-09-06T05:51:24Z"
}