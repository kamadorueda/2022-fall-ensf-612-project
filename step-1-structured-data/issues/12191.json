{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12191",
  "author": "mattmcnabb",
  "body": "In PS7 with `$ErrorView` set to `ConciseView` a custom function in a script module does not display an error, but an error is recorded in `$Error`. Changing to `NormalView` fixes this issue. I have tested the same command in VS Code's Integrated Terminal running PS7 with ConciseView and an error is output as expected. I can't explain why this works differently based on the host.\r\n\r\n![image](https://user-images.githubusercontent.com/6998507/77373400-8da4a900-6d3e-11ea-97b0-6e971330472f.png)\r\n\r\nThe error itself is coming from `Invoke-RestMethod` which is reaching out to an Office 365 REST API. I don't see the same behavior with built in commands.\r\n\r\n\r\n```\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0\r\nOS                             Microsoft Windows 10.0.18363\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n```\r\n",
  "closed_at": "2020-05-15T23:24:46Z",
  "comments": [
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@mattmcnabb Could you please provide a repro for us to investigate?",
      "created_at": "2020-03-24T04:57:53Z",
      "updated_at": "2020-03-24T04:57:53Z"
    },
    {
      "author": "mattmcnabb",
      "author_association": "NONE",
      "body": "@daxian-dbw here's the actual code I'm running:\r\n\r\nhttps://github.com/mattmcnabb/O365ServiceCommunications/blob/master/Source/Public/Connect-O365ServiceCommunications.ps1\r\n\r\nThere's not much to it. I have this issue when I run this command with a bad value for `$ClientSecret` and get an error from the server.\n\n<blockquote><img src=\"https://avatars2.githubusercontent.com/u/6998507?s=400&v=4\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicon.ico\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/mattmcnabb/O365ServiceCommunications\">mattmcnabb/O365ServiceCommunications</a></strong></div><div>A Powershell module for monitoringOffice 365 Service Health! - mattmcnabb/O365ServiceCommunications</div></blockquote>",
      "created_at": "2020-03-25T00:21:26Z",
      "updated_at": "2020-03-25T00:21:31Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@mattmcnabb, I tried your script with PS7 and got this error:\r\n\r\n```powershell\r\nPS> Connect-O365ServiceCommunications -ClientID (new-guid) -ClientSecret 2 -TenantID (new-guid)                                                                                                                                                                                                                                                                                                                                             Invoke-RestMethod:\r\nLine |\r\n  28 |      $Response = Invoke-RestMethod -Method Post -Uri $Url -Body $Body\r\n     |                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n     | {\"error\":\"invalid_request\",\"error_description\":\"AADSTS90002: Tenant '94451173-27af-4457-9369-571accb75354' not found. This may happen if there are no active subscriptions for the tenant. Check to make sure you have the correct tenant ID. Check with your subscription administrator.\\r\\nTrace ID: e3531849-ac96-40e0-b31b-d575c3091c00\\r\\nCorrelation ID: 96f214bb-c6b2-41f1-b7e1-e2cc47832376\\r\\nTimestamp: 2020-03-27 20:29:10Z\",\"error_codes\":[90002],\"timestamp\":\"2020-03-27 20:29:10Z\",\"trace_id\":\"e3531849-ac96-40e0-b31b-d575c3091c00\",\"correlation_id\":\"96f214bb-c6b2-41f1-b7e1-e2cc47832376\",\"error_uri\":\"https://login.microsoftonline.com/error?code=90002\"}\r\nInvalidOperation:\r\nLine |\r\n  29 |      $Script:SCConnection = [O365ServiceCommunications_Connection]@{\r\n     |                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n     | Unable to find type [O365ServiceCommunications_Connection].\r\n```\r\n\r\nNeed a better repro.  What size is your terminal?  If you can repro, can you output `$host.ui.RawUI.WindowSize`?",
      "created_at": "2020-03-27T20:30:59Z",
      "updated_at": "2020-03-27T20:30:59Z"
    },
    {
      "author": "mattmcnabb",
      "author_association": "NONE",
      "body": "@SteveL-MSFT Window size really seems to be the issue here:\r\n\r\n![image](https://user-images.githubusercontent.com/6998507/77798410-2db54780-7049-11ea-97f5-50941eb93884.png)\r\n\r\nYou can see there that I ran it once and no error was displayed while the host window was scaled to a small size. Then I expanded the window and ran it again and the error was rendered to the screen.\r\n\r\nI had no idea that had an impact on displaying the error!\r\n\r\nEDIT: I also confirmed the same issues exists in the VS Code integrated terminal if I squish it down really small.\r\n\r\nEDIT 2: It appears to also matter what the error's source is. For instance in your case you received an error that the command is unknown. If I remove the module and repro that, I get the error displayed regardless of window size. If I actually load the module so the command is available, then I only get an error if the window is large enough. Hopefully that helps a bit.",
      "created_at": "2020-03-27T20:38:26Z",
      "updated_at": "2020-03-27T21:14:06Z"
    },
    {
      "author": "krokofant",
      "author_association": "NONE",
      "body": "This seems to be the cause of errors not showing up in Azure Pipelines. The powershell task has been updated (not yet released it seems) to workaround the issue by explicitly setting $ErrorView to NormalView before any code is invoked.",
      "created_at": "2020-05-12T19:28:17Z",
      "updated_at": "2020-05-12T19:28:17Z"
    },
    {
      "author": "mattmcnabb",
      "author_association": "NONE",
      "body": "@SteveL-MSFT  I'm no longer able to reproduce this issue in PowerShell 7.0.1. I'm thinking maybe this was fixed with #11880?",
      "created_at": "2020-05-15T23:12:49Z",
      "updated_at": "2020-05-15T23:13:36Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Yep, seems to be the case. Glad it's sorted out!\r\n\r\nI'll close this one for now. \ud83d\ude42 ",
      "created_at": "2020-05-15T23:24:46Z",
      "updated_at": "2020-05-15T23:24:46Z"
    }
  ],
  "created_at": "2020-03-24T00:05:49Z",
  "labels": [
    "Issue-Question"
  ],
  "number": 12191,
  "state": "closed",
  "title": "No Error Displayed When $ErrorView Set to ConciseView",
  "updated_at": "2020-05-15T23:24:46Z"
}