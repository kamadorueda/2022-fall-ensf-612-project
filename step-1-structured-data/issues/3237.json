{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3237",
  "author": "juneb",
  "body": "Scenario: I want only line 1053 from a large file. This might be a line flagged by a debugger, malware detector, or script analyzer. \r\n\r\nThere are many ways to do this, but some are very inefficient. It would be great to enclose a best-performance method in a parameter.\r\n\r\nGet-Content -Line <int> (scalar)\r\nWhen the line doesn't exist in the file, Get-Content returns nothing (no error).",
  "closed_at": "2021-07-08T22:00:48Z",
  "comments": [
    {
      "author": "pcgeek86",
      "author_association": "NONE",
      "body": "Good idea. What if you wanted to obtain a range of lines, or an array of individual lines?\r\n\r\n```\r\n### Get an individual line\r\nGet-Content -Path ... -Line 1053\r\n\r\n### Get a range of lines\r\nGet-Content -Path ... -Line 1053-1058\r\n\r\n### Get more than one individual line\r\nGet-Content -Path ... -Line 1053,2130\r\n\r\n### Get line ranges and individual lines\r\nGet-Content -Path ... -Line 1053-1058, 2130\r\n```\r\n\r\nI suppose you could treat a single line as a range with a length of one.",
      "created_at": "2017-03-02T16:27:02Z",
      "updated_at": "2017-03-02T16:27:02Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "Nice add @pcgeek86 but remember the range operator is `..` so Line would be of type `[int[]]` and take `-Line 1053`, `-Line 1053..1058` and `-Line (1053..1058),2130`.",
      "created_at": "2017-03-02T17:00:06Z",
      "updated_at": "2017-03-02T17:00:06Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> When the line doesn't exist in the file, Get-Content returns nothing (no error).\r\n\r\nI believe this should cause an exception. If we do not want it, then `-ErrorAction SilentlyContinue`",
      "created_at": "2017-03-02T17:13:47Z",
      "updated_at": "2017-03-02T17:13:47Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "Well, at the most I would say a missing line would cause a non-terminating error.",
      "created_at": "2017-03-02T17:19:01Z",
      "updated_at": "2017-03-02T17:19:01Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "An issue to think about is whether `-Line` specifies 0 or 1 based indices.  I think 1-based is the way to go since most tools report line errors/warnings using 1-based indices.",
      "created_at": "2017-03-02T17:31:26Z",
      "updated_at": "2017-03-02T17:31:26Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Error reporting is not the only scenario and perhaps it is better to use a general rule - start with 0.",
      "created_at": "2017-03-02T17:47:51Z",
      "updated_at": "2017-03-02T17:47:51Z"
    },
    {
      "author": "BrucePay",
      "author_association": "COLLABORATOR",
      "body": "Hmm \"Get-Content -Path ... -Line 1053\" instead of (Get-Content -Path ...)[1053] doesn't seem like much of a win to me (maybe for very large files...). Also remember that Get-Content is a provider cmdlet so is -Line a dynamic parameter for the file system provider? Or does it apply to all providers. Finally (ignoring pipeline performance issues)\r\n    get-content -path ... | select -range 1053,1055\r\nis more \"powershelly\".\r\n",
      "created_at": "2017-03-02T19:22:30Z",
      "updated_at": "2017-03-02T19:22:30Z"
    },
    {
      "author": "BrucePay",
      "author_association": "COLLABORATOR",
      "body": "Also note that you can also do \r\n `Get-Content -Path ... | Select -Skip 1052 -First 1`",
      "created_at": "2017-03-02T19:28:09Z",
      "updated_at": "2017-03-02T19:28:09Z"
    },
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "Most likely a dynamic param on FileSystemProvider. @BrucePay: I agree that your examples are more powershelly, but it is also nice to have scripts that doesn't only work on small files (where work may be \"work reasonably fast\").\r\n(Get-Content -Path ...)[1053] may be really bad. \r\n\r\nI don't have a strong opinion about how to solve this, but in general, I would like to see a bit more focus on making our core cmdlets performant even on very large data sets.\r\n\r\nI find myself starting with pipelines for interactively trying things out, but quite often moving to other solutions when making a module out of my findings, often for performance reasons. And as with most perf opt, the result is less readable. \r\n",
      "created_at": "2017-03-03T04:18:53Z",
      "updated_at": "2017-03-03T04:18:53Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "If this can be done internally, this should be done internally for performance reasons.",
      "created_at": "2017-03-03T05:15:43Z",
      "updated_at": "2017-03-03T05:15:43Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Since this ask is for lines and not bytes, there isn't an API in the OS to skip by lines, so the example @BrucePay provided to use `Select-Object` is the right way to do this.  The potential small perf benefit would be to not incur the cost of generating PSObjects to the pipeline, but it's not clear this would be worth it for potentially limited use.",
      "created_at": "2021-06-08T19:44:24Z",
      "updated_at": "2021-06-08T19:44:24Z"
    },
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "Maybe reconsider `-Raw` or add a `-RawLine`, that returns strings instead of PSObjects? ",
      "created_at": "2021-06-24T07:49:25Z",
      "updated_at": "2021-06-24T07:49:25Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as declined and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2021-07-08T22:00:48Z",
      "updated_at": "2021-07-08T22:00:48Z"
    }
  ],
  "created_at": "2017-03-02T16:09:23Z",
  "number": 3237,
  "state": "closed",
  "title": "Feature Request: Add -Line parameter to Get-Content",
  "updated_at": "2021-07-08T22:00:48Z"
}