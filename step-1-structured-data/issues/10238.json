{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10238",
  "author": "KirkMunro",
  "body": "# PR Summary\r\n\r\n* Add `VerboseAction` (`va`), `DebugAction` (`da`), `ProgressAction` (`pra`), `VerboseVariable` (`vv`), `DebugVariable` (`dv`), and `ProgressVariable` (`prv`) common parameters.\r\n* ~~Remove unnecessary restriction around `ActionPreference.Ignore` (see [this discussion in issue 4348](https://github.com/PowerShell/PowerShell/issues/4348#issuecomment-490672315)).~~ (this has been moved to PR #10317)\r\n* Add default output for progress messages when rendered in the console.\r\n* Change behavior of `Write-Verbose` and `Write-Warning` such that they simply output their messages if they are invoked with `-Debug`. This was missed in PR #8195.\r\n* Fixed bug in handling of `PSCmdlet.WriteVerbose` and `PSCmdlet.WriteWarning` methods. When a cmdlet is invoked without any common parameters, and that cmdlet invokes one of these methods, the cmdlet runtime was supposed to read the corresponding preference value once and then use that value in all subsequent invocations, for performance reasons. `WriteVerbose` and `WriteWarning` were not properly setting a flag when the value was read, and as a result were reading it again every time. See [here](https://github.com/PowerShell/PowerShell/pull/10238#discussion_r334077384) for a more detailed discussion about this.\r\n\r\n## PR Context\r\n\r\nAs per #6702 and [some considerations on one of my RFCs](https://github.com/PowerShell/PowerShell-RFC/blob/9d0b313c76144e9af7b84294bba470da710810e8/1-Draft/RFCNNNN-ScriptBlock-Action-Preference.md#add--verboseaction--debugaction-and--progressaction-common-parameters), this PR normalizes the common parameter set to allow for better scripter control for any stream in PowerShell.\r\n\r\nThis is the first step in facilitating easier capturing of stream data for logging purposes.\r\n\r\nFor the enquiring mind, it is even important to capture progress records, because some scripts are written to show a bunch of progress messages but not much else, and when these are run unattended and fail, it is impossible to know how far along they went before they failed. Capturing progress messages makes that problem go away.\r\n\r\n## PR Checklist\r\n\r\n- [X] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [X] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [X] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [x] Experimental feature name(s): `PSNewCommonParameters`\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [X] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [X] Issue filed: https://github.com/MicrosoftDocs/PowerShell-Docs/issues/4929\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [X] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [X] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2021-04-24T13:15:04Z",
  "comments": [
    {
      "author": "Jaykul",
      "author_association": "CONTRIBUTOR",
      "body": "The alias for `-Verbose` is `-vb` and the alias for `-Debug` is `-db` ... \r\n\r\nShould their respective Action and Variable short forms start with _those prefixes_?\r\n\r\nThat is, should `-VerboseAction` be `-vba` instead of `-va`, etc.?\r\n\r\nI'm not sure. Certainly the InformationAction is the only one of the existing aliases that isn't a two-letter alias (and I don't actually know why), so there's good reason to stick with 2-letter initialisms.",
      "created_at": "2019-07-27T03:03:18Z",
      "updated_at": "2019-07-27T03:03:18Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "I'm not sure either. Also, used three letters for the progress aliases (`pra` and `prv`) to differentiate them from the `-PipelineVariable` alias while maintaining \"suffix\" consistency between them and with the other aliases.\r\n\r\n> That is, should -VerboseAction be -vba instead of -va, etc.?\r\n\r\nI don't think we want `vba` in PowerShell. \ud83d\ude1d \r\n\r\nKidding of course. I'm not attached to anything I chose...I just picked what made sense at the time.",
      "created_at": "2019-07-27T03:21:58Z",
      "updated_at": "2019-07-27T15:27:33Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "We should probably also make note that using `-v` as a shorthand for `-Verbose` is pretty common, especially in interactive cases.\r\n\r\nIf we're adding more parameters that by default conflict with that shorthand, we should probably add that as an explicit alias as well. :)",
      "created_at": "2019-07-28T23:17:57Z",
      "updated_at": "2019-07-28T23:17:57Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "So here's an idea. These new parameters make the usefulness of `-Verbose` and `-Debug` questionable. Those are convenient, but not as capable as the new common parameters. What if `-VerboseAction` was defined as a `Switchable<ActionPreference>`, where `Switchable<T>` is a new generic type whose constructor accepts the true and false `T` values for the type, plus assignment operators for `bool` and `T`, and an implicit conversion operator to `T`. `Switchable<T>` would also need to be supported in the parser as a parameter with no value, of course. This is just thinking out loud, but I've been brainstorming some ideas on how I could obsolete old switches without breaking scripts, and with a proper alias plus the `Switchable<T>` type, this would allow switches like `-Verbose` and `-Debug`, and even `-Information` if we wanted it, to just work as if they were common switch parameters without even having them explicitly defined (`-Warning`, `-Progress`, and `-Error` would not be necessary since those messages are shown by default).\r\n\r\nThe benefit with this approach is to simplify and normalize the common parameters without losing muscle memory and without breaking existing scripts. This generic type would also provide a pattern that would allow for switch replacement in any other command, should the need for that arise.",
      "created_at": "2019-07-29T01:11:28Z",
      "updated_at": "2019-08-13T14:24:06Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "Here is a screenshot that shows what `ProgressRecord` output looks like using the formatter:\r\n\r\n![image](https://user-images.githubusercontent.com/3515485/62058548-02e3cc80-b1f8-11e9-9934-50b066707c50.png)\r\n\r\nAside: That this screenshot demonstrates the problem identified in issue #10236 (many `*Record` types default format does not identify the actual type of message that is being conveyed, but they really should for logging/review/searching purposes).",
      "created_at": "2019-07-29T14:59:11Z",
      "updated_at": "2019-07-29T16:44:33Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "FYI for reviewers, I just logged this related issue that applies to all streams other than error: #10248. I can either address that in a separate PR after this is merged, or fix it as part of this one, your call.",
      "created_at": "2019-07-29T15:31:34Z",
      "updated_at": "2019-07-29T15:31:34Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov: This is ready for review anytime.",
      "created_at": "2019-08-05T18:47:47Z",
      "updated_at": "2019-08-05T18:47:47Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "Any reviewers care to share some feedback on this PR?",
      "created_at": "2019-09-04T14:28:48Z",
      "updated_at": "2019-09-04T14:28:48Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "@PoshChan Please restart CI.",
      "created_at": "2019-09-13T17:43:17Z",
      "updated_at": "2019-09-13T17:43:17Z"
    },
    {
      "author": "PoshChan",
      "author_association": "COLLABORATOR",
      "body": "@KirkMunro, I do not understand the build target(s) `CI.`; I only allow `static`, `windows`, `macos`, `linux`, `all`",
      "created_at": "2019-09-13T17:44:13Z",
      "updated_at": "2019-09-13T17:44:13Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "@PoshChan Please restart all.",
      "created_at": "2019-09-13T17:44:39Z",
      "updated_at": "2019-09-13T17:44:39Z"
    },
    {
      "author": "PoshChan",
      "author_association": "COLLABORATOR",
      "body": "@KirkMunro, I do not understand the build target(s) `all.`; I only allow `static`, `windows`, `macos`, `linux`, `all`",
      "created_at": "2019-09-13T17:45:03Z",
      "updated_at": "2019-09-13T17:45:03Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "@PoshChan please restart all",
      "created_at": "2019-09-13T17:45:48Z",
      "updated_at": "2019-09-13T17:45:48Z"
    },
    {
      "author": "PoshChan",
      "author_association": "COLLABORATOR",
      "body": "@KirkMunro, did not find any matching pull request checks",
      "created_at": "2019-09-13T17:47:00Z",
      "updated_at": "2019-09-13T17:47:00Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "@TravisEz13 The CI for this PR is stuck. Can you do something to unstick it?",
      "created_at": "2019-09-13T17:48:31Z",
      "updated_at": "2019-09-13T17:48:31Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Reopen the PR to restart CIs.",
      "created_at": "2019-09-13T18:45:15Z",
      "updated_at": "2019-09-13T18:45:15Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@KirkMunro \tif the bot cannot find the PR, there are only two options.  Close and re-open the PR or push a new commit.  ",
      "created_at": "2019-09-16T20:11:57Z",
      "updated_at": "2019-09-16T20:11:57Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "It may be empty commit.",
      "created_at": "2019-09-17T04:51:04Z",
      "updated_at": "2019-09-17T04:51:04Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT Any chance this can be reviewed for consideration in preview 5?",
      "created_at": "2019-09-25T13:04:43Z",
      "updated_at": "2019-09-25T13:04:43Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "Any chance we can get some reviewer eyes on here to see if this can make it into preview 5?",
      "created_at": "2019-10-09T16:05:30Z",
      "updated_at": "2019-10-09T16:05:30Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@PaulHigin Could you please review the PR with new public API?",
      "created_at": "2019-10-09T17:48:15Z",
      "updated_at": "2019-10-09T17:48:15Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "Sorry for the delay.  I'll get to this today or tomorrow.",
      "created_at": "2019-10-09T21:34:35Z",
      "updated_at": "2019-10-09T21:34:35Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@KirkMunro I see you did and do some in-depth investigations in design, bugs and fixes. Could you please add these conclusions to the PR descriptions for history and improving documentation?",
      "created_at": "2019-10-11T17:34:32Z",
      "updated_at": "2019-10-11T17:34:32Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov Will do.",
      "created_at": "2019-10-11T17:59:54Z",
      "updated_at": "2019-10-11T17:59:54Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "One remaining work item for this PR is alias verification. Since this adds new common parameters with aliases, we need to make sure those aliases don't step on the toes of other aliases already in place on other commands.\r\n\r\n@SteveL-MSFT How does the PowerShell Team check common parameter aliases to the point where you're satisfied that they won't conflict with existing parameter aliases? There are 6 new common parameters with aliases for me to check here.",
      "created_at": "2019-10-11T18:03:42Z",
      "updated_at": "2019-10-11T18:03:42Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> @iSazonov Will do.\r\n\r\nPerhaps it\u2019s enough to add links to posts with a short description.\r\n",
      "created_at": "2019-10-11T18:32:54Z",
      "updated_at": "2019-10-11T18:32:54Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "@PoshChan Please restart static analysis",
      "created_at": "2019-10-12T01:42:31Z",
      "updated_at": "2019-10-12T01:42:31Z"
    },
    {
      "author": "PoshChan",
      "author_association": "COLLABORATOR",
      "body": "@KirkMunro, I do not understand the build target(s) `static analysis`; I only allow `static`, `windows`, `macos`, `linux`, `all`",
      "created_at": "2019-10-12T01:43:15Z",
      "updated_at": "2019-10-12T01:43:15Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "@PoshChan Please restart static",
      "created_at": "2019-10-12T01:43:31Z",
      "updated_at": "2019-10-12T01:43:31Z"
    },
    {
      "author": "PoshChan",
      "author_association": "COLLABORATOR",
      "body": "@KirkMunro, successfully started retry of `PowerShell-CI-static-analysis`",
      "created_at": "2019-10-12T01:43:38Z",
      "updated_at": "2019-10-12T01:43:38Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "@PoshChan please retry static",
      "created_at": "2019-10-12T12:37:17Z",
      "updated_at": "2019-10-12T12:37:17Z"
    },
    {
      "author": "PoshChan",
      "author_association": "COLLABORATOR",
      "body": "@KirkMunro, successfully started retry of `PowerShell-CI-static-analysis`",
      "created_at": "2019-10-12T12:37:28Z",
      "updated_at": "2019-10-12T12:37:28Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "A link to MSDN died. Will pull fix.",
      "created_at": "2019-10-12T12:53:12Z",
      "updated_at": "2019-10-12T12:53:12Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov I updated the description, and logged a docs issue and linked it here. Remaining tasks:\r\n\r\n- ~~merging in your PR for the static analysis update once it's merged into master~~ done\r\n- testing for unused aliases once @SteveL-MSFT responds to [this question](https://github.com/PowerShell/PowerShell/pull/10238#issuecomment-541165711)",
      "created_at": "2019-10-12T19:24:55Z",
      "updated_at": "2019-10-21T22:00:53Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT If you can answer [this question](https://github.com/PowerShell/PowerShell/pull/10238#issuecomment-541165711), I'll be able to work in aliases for the new common parameters and get this ready for merge into preview 6.",
      "created_at": "2019-10-23T19:59:12Z",
      "updated_at": "2019-10-23T19:59:12Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMainainer, Please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2020-05-27T02:03:26Z",
      "updated_at": "2020-05-27T02:03:26Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@KirkMunro Please resolve merge conflicts.",
      "created_at": "2020-05-27T10:49:09Z",
      "updated_at": "2020-05-27T10:49:09Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as stale because it has been marked as requiring author feedback but has not had any activity for **15 days**. It will be closed if no further activity occurs **within 10 days of this comment**.",
      "created_at": "2020-06-11T23:00:28Z",
      "updated_at": "2020-06-11T23:00:28Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "Why is this waiting on author? Because of merge conflicts that came up because it has been waiting for review for so long? I'll resolve those.",
      "created_at": "2020-06-13T02:18:18Z",
      "updated_at": "2020-06-13T02:18:18Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMainainer, Please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2020-06-22T02:00:24Z",
      "updated_at": "2020-06-22T02:00:24Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@PaulHigin Please update your review\r\n@KirkMunro Please fix the merge conflicts",
      "created_at": "2020-06-22T16:46:31Z",
      "updated_at": "2020-06-22T16:46:31Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as stale because it has been marked as requiring author feedback but has not had any activity for **15 days**. It will be closed if no further activity occurs **within 10 days of this comment**.",
      "created_at": "2020-07-07T17:00:11Z",
      "updated_at": "2020-07-07T17:00:11Z"
    },
    {
      "author": "Jaykul",
      "author_association": "CONTRIBUTOR",
      "body": "This is kind-of embarrassing now.",
      "created_at": "2020-07-08T02:17:32Z",
      "updated_at": "2020-07-08T02:17:32Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2020-07-28T02:00:23Z",
      "updated_at": "2020-07-28T02:00:23Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as stale because it has been marked as requiring author feedback but has not had any activity for **15 days**. It will be closed if no further activity occurs **within 10 days of this comment**.",
      "created_at": "2020-11-11T23:00:04Z",
      "updated_at": "2020-11-11T23:00:04Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "C'mon, guys. 1.5 years post PR submission, you finally move forward with some action on this, but then your attention wanes at the end when some important questions are put on the table, and then you let it go stale and be closed? @TravisEz13: How was this marked waiting on author when the author (me) had responded with questions back to @PaulHigin?\r\n\r\nIt really is no wonder why I put my I put my interest in pushing PRs into this repo on hold until you all could catch up with the PRs that were already open and the discussions that were already started. I'm not all that surprised that this hasn't happened yet, but what does surprise me is that rather than properly managing what's there, you're allowing it get discarded. Such a waste.",
      "created_at": "2020-11-24T02:17:06Z",
      "updated_at": "2020-11-24T12:30:42Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2020-12-01T14:00:10Z",
      "updated_at": "2020-12-01T14:00:10Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "I'm walking away from my open PRs. I'm not really involved in PowerShell much these days. Personally I spend very little time using it, and at this point I don't have the time nor the motivation to deal with PRs submitted over 18 months ago.\r\n\r\nAs a point of feedback, this community is stagnant and unhealthy to participate in. It takes far too much personal effort and lobbying like a politician to get anything moving. Ideas on how to help the community move forward take years, and years, and years to bear any fruit at all. In software development, there is a balance between driving software forward based on internal business and internal/external customer priorities, and driving features and functionality that are quality of life improvements for the community of users using a product. This community has been, and in my mind clearly still is, focused almost exclusively on the former, and only considers the latter when it is of benefit to their goals for the former. It is not balanced at all when it comes to community contributions. Glancing at the [history of closed PRs](https://github.com/PowerShell/PowerShell/pulls?q=is%3Apr+is%3Aclosed), and who those PRs come from, is clear evidence of this, and it seems obvious where your focus is internally for team member MBOs.",
      "created_at": "2021-04-24T13:15:04Z",
      "updated_at": "2021-04-24T13:15:04Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@KirkMunro, I was going to say that we'll miss your contributions in all forms in this community.\r\n\r\nBut then I realized: there is no _we_. \r\nBut first, let's invite a few more people to the good-bye party: @SteveL-MSFT, @joeyaiello, @bpayette, @rjmholt, @sdwheeler.\r\n\r\nI share your assessment of what is problematic about this community; let me point to two particularly striking examples that I've personally expended a lot of energy on:\r\n\r\n* https://github.com/PowerShell/PowerShell/issues/14025#issuecomment-743354227 (not requiring `{...}` around variable names for the null-conditional operators, `?.` / `?[]`)\r\n* https://github.com/PowerShell/PowerShell/issues/15143#issuecomment-824269830  (comprehensive solution to the perennial quoting headaches when calling native executables)\r\n\r\nIn my perception, these two issues (the specific comments tell the history) exemplify several problematic patterns:\r\n\r\n* Fiat decisions handed down with little to no explanation, often indicative of unawareness of the specifics of a proposal / lack of sufficient subject-matter expertise, followed by unwillingness to explain or debate the decision.\r\n\r\n   * Working groups were supposed to help with that, but in my personal experience it seems to be just more of the same.\r\n\r\n* Many quality-of-life-improvement proposals either getting ignored altogether, being met with indignant pushback (\"very much by design\"), argument-less claims of lack of arguments (\"I don't believe you've made the argument sufficiently\"), followed by eternal silence when counterarguments are made.\r\n\r\n* Vague promises of revisiting issues that never materialize.\r\n\r\nI hope that the many talented people that still make up this community have the stamina to continue to contribute, as things - hopefully - improve, but personally I feel burned out and, save for perhaps filing the occasional bug report prompted by real-life use, I will cease my activities here and in the docs repo.\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
      "created_at": "2021-04-30T21:22:14Z",
      "updated_at": "2021-04-30T21:22:14Z"
    }
  ],
  "created_at": "2019-07-27T01:51:32Z",
  "number": 10238,
  "state": "closed",
  "title": "Add VerboseAction, DebugAction, ProgressAction, VerboseVariable, DebugVariable, and ProgressVariable common parameters",
  "updated_at": "2021-04-30T21:22:14Z"
}