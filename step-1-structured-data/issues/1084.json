{
  "_url": "https://github.com/PowerShell/PowerShell/issues/1084",
  "author": "wimcoekaerts",
  "body": "Can you add a version number option so I can do  powershell \u2013version \u2013-version or \u2013v or \u2013V so that I know what\u2019s installed\n# bash --version\n\nGNU bash, version 4.2.46(1)-release (x86_64-redhat-linux-gnu)\nCopyright (C) 2011 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later http://gnu.org/licenses/gpl.html\n\nThis is free software; you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\nWould be nice to have same for powershell\n\n  # powershell \u2013version\n",
  "closed_at": "2017-03-10T00:09:43Z",
  "comments": [
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "This comes up against the problem where PowerShell already using `-Version` to specify which version to launch; a feature that will not exist in PowerShell Core. The canonical way of obtaining PowerShell's version is to inspect `$PSVersionTable`.\n\n@JamesWTruher @lzybkr @daxian-dbw @mirichmo  perhaps we should change `-version`'s behavior to emit `PSVersionTable`?\n",
      "created_at": "2016-06-09T18:02:01Z",
      "updated_at": "2016-08-17T22:02:51Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Per the \"handling semver in PowerShell meeting notes\", it sounds like we've closed on usurping `powershell --version` to actually emit the version. @JKeithB is that right?\n",
      "created_at": "2016-06-14T17:15:06Z",
      "updated_at": "2016-08-17T05:59:06Z"
    },
    {
      "author": "ghost",
      "author_association": "NONE",
      "body": "@andschwa I don't think we went that far. What we agreed on _so far_ is only that the $psversiontable information would support semver. We also said that starting Powershell with the -Version XXX parameter would have to support semver, which means that if someone goes to a cmd prompt or PS window and types **\"Powershell -version 6.0.1-Alpha\"** it should work & launch that specific version of PowerShell.exe. \n",
      "created_at": "2016-06-14T22:32:26Z",
      "updated_at": "2016-06-14T22:32:26Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "@JKeithB Ah, I see. As of now, @HemantMahawar and I don't think PowerShell Core will support _its_ executable launching different versions of PowerShell by `--version`, but instead a shim launcher would support this on Windows (due to path issues), and symlinks would be used (as usual) on Linux.\n\n/cc @JamesWTruher @mirichmo @daxian-dbw @raghushantha \n",
      "created_at": "2016-06-14T23:30:59Z",
      "updated_at": "2016-08-17T22:03:10Z"
    },
    {
      "author": "jpsnover",
      "author_association": "CONTRIBUTOR",
      "body": "So isn't this as simple as \n\n> PowerShell -version x.y.z\n> starts powershell using the specified version and\n> PowerShell -version\n> when no value is provided for version, we return the version \n> ?\n",
      "created_at": "2016-06-27T17:34:49Z",
      "updated_at": "2016-06-27T17:34:49Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "I agree with @jpsnover; this isn't a question of CLI syntax; we can support both. Can we get the go-ahead to implement this @JKeithB, @joeyaiello?\n",
      "created_at": "2016-06-27T17:48:19Z",
      "updated_at": "2016-06-27T17:48:19Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "powershell -version **and** no other arguments?  Then I agree, but if there are other arguments, we should expect the version number.\n",
      "created_at": "2016-06-27T17:58:07Z",
      "updated_at": "2016-06-27T17:58:07Z"
    },
    {
      "author": "jpsnover",
      "author_association": "CONTRIBUTOR",
      "body": "@jason: Sounds right to me.\n",
      "created_at": "2016-06-27T18:12:31Z",
      "updated_at": "2016-06-27T18:12:31Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "Note: we reserve the right to completely change the output of `powershell -version` as we try and land on the correct design for people to automate against. \n",
      "created_at": "2016-06-27T18:39:38Z",
      "updated_at": "2016-06-27T18:39:38Z"
    }
  ],
  "created_at": "2016-06-09T17:49:58Z",
  "labels": [
    "Issue-Enhancement",
    "Usability",
    "Area-SideBySide",
    "WG-DevEx-Portability",
    "Resolution-Fixed"
  ],
  "number": 1084,
  "state": "closed",
  "title": "add a command line option to show the version of powershell installed",
  "updated_at": "2017-03-10T00:09:43Z"
}