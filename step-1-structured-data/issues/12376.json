{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12376",
  "author": "mklement0",
  "body": "You can send CLIXML input via the pipeline to the PowerShell CLI, but this currently only works if the input XML file has a `#< CLIXML` comment line as its very first line, which `Export-CliXml` does _not_ produce (whereas `-OutputFormat Xml` does).\r\n\r\nTherefore, sending the content of an `Export-CliXml`-produced fiel currently fails.\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\n'foo' | Export-CliXml tmp.xml\r\nGet-Content tmp.xml | pwsh -noprofile -InputFormat Xml -c '$Input' | Should -Be 'foo'\r\n```\r\n\r\n# Expected behavior\r\n\r\nThe test should succeed.\r\n\r\n# Actual behavior\r\n\r\nThe test fails\r\n\r\n```none\r\nExpected 'foo', but got $null\r\n```\r\n\r\nIf you omit the `Should` call, you'll see:\r\n\r\n```none\r\nElement 'Objs' with namespace name 'http://schemas.microsoft.com/powershell/2004/04' was not found. Line 1, position 4.\r\n```\r\n\r\n_Perhaps_  the following is happening: the first line - expected to the comment line - is blindly skipped, which causes the remaining file content not to be valid XML.\r\n\r\nIf you manually add the comment line, the test succeeds:\r\n\r\n```powershell\r\n# OK, due to manually prepended comment line.\r\n'#< CLIXML', (Get-Content tmp.xml) | pwsh -noprofile -InputFormat Xml -c '$Input' | Should -Be 'foo'\r\n```\r\n\r\n# Environment data\r\n\r\n```none\r\nPowerShell Core 7.1.0-preview.1\r\n```\r\n\r\n\r\n",
  "closed_at": null,
  "comments": [],
  "created_at": "2020-04-18T12:43:18Z",
  "number": 12376,
  "state": "open",
  "title": "The CLI's -InputFormat XML processing doesn't work with Export-CliXml output",
  "updated_at": "2020-04-22T14:28:43Z"
}