{
  "_url": "https://github.com/PowerShell/PowerShell/issues/14538",
  "author": "mklement0",
  "body": "\r\n\r\n## Steps to reproduce\r\n\r\nOn macOS or Linux:\r\n\r\n```powershell\r\nJoin-Path (Get-Item .).PSParentPath foo | Should -Be \"$((Get-Item .).PSParentPath)/foo\"\r\n```\r\n\r\n## Expected behavior\r\n\r\nThe test should succeed.\r\n\r\n## Actual behavior\r\n\r\nThe test fails, because the existing provider prefix isn't recognized as such, causing its `\\` separator to be normalized to `/` and _another_ provider prefix to be prepended.\r\n\r\n```none\r\nExpected strings to be the same, but they were different. Expected length: 65 Actual length:   103 Strings differ at index 38. Expected: '...tem::/User...' But was:  '...tem::Micro...'\r\n```\r\n\r\nThat is, `Join-Path`'s output was something like (note the doubled provider prefix, with the 2nd one using `/`):\r\n\r\n```none\r\nMicrosoft.PowerShell.Core\\FileSystem::Microsoft.PowerShell.Core/FileSystem::/Users/jdoe/Desktop/foo\r\n```\r\n\r\n## Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nPowerShell Core 7.2.0-preview.2\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Is this for Linux and MacOs only?",
      "created_at": "2021-01-07T12:35:44Z",
      "updated_at": "2021-01-07T12:35:44Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov, yes, because the problem is related to normalizing `\\` to `/`.",
      "created_at": "2021-01-07T14:13:15Z",
      "updated_at": "2021-01-07T14:13:15Z"
    },
    {
      "author": "ghost",
      "author_association": "NONE",
      "body": "Hi folks. Is this up for grabs? If so, I'd like to take it on.",
      "created_at": "2021-06-22T14:23:10Z",
      "updated_at": "2021-06-22T14:23:10Z"
    },
    {
      "author": "ghost",
      "author_association": "NONE",
      "body": "@iSazonov, resurfacing my question above. This issue is not tagged as up for grabs but I'm wondering whether it could still be a good one for me to look into.",
      "created_at": "2021-06-27T17:42:07Z",
      "updated_at": "2021-06-27T17:42:07Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@octos4murai I haven't seen anyone else wanting to take it up, and it seems a fairly clear case of the behaviour being bugged, so yeah, we may as well consider it up for grabs. \ud83d\ude42 ",
      "created_at": "2021-06-27T18:39:35Z",
      "updated_at": "2021-06-27T18:39:35Z"
    },
    {
      "author": "ghost",
      "author_association": "NONE",
      "body": "I've been able to take a better look and wanted to ask a couple questions before I start writing any code:\r\n\r\n- Is it intentional for the `FileSystemProvider` to have a Windows-style path separator (`\\`) in Unix-like platforms? For example, `Microsoft.PowerShell.Core\\FileSystem::/Users/jdoe/Desktop/foo` instead of `Microsoft.PowerShell.Core/FileSystem::/Users/jdoe/Desktop/foo`. It appears this is hardcoded in `ProviderNames.FileSystem`.\r\n- Assuming the answer to the question above is yes, could an ideal fix be to exclude the `FileSystemProvider` string from any normalization? Potentially a good place to make this change is `NavigationProviderBase.NormalizePath(string path)`.",
      "created_at": "2021-07-27T14:06:29Z",
      "updated_at": "2021-07-27T14:06:29Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "FileSystem Provider always normalizes paths. See https://github.com/PowerShell/PowerShell/blob/3733a0bb3749b448002b034d0d09055367adac27/src/System.Management.Automation/namespaces/FileSystemProvider.cs#L103-L106.\r\n",
      "created_at": "2021-07-28T04:53:11Z",
      "updated_at": "2021-07-28T04:53:11Z"
    },
    {
      "author": "ghost",
      "author_association": "NONE",
      "body": "Thanks for your response @iSazonov -- but allow me to switch gears for a bit... Is `Join-Path` even meant to have support for paths prepended with the `FileSystemProvider` prefix? This page does not give any hints that it is supported behaviour: https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.management/join-path?view=powershell-7.1.\r\n\r\nA supported way to accomplish @mklement0's example above is to do this instead:\r\n```pwsh\r\nJoin-Path (Get-Item .).Parent.FullName foo\r\n# Returns something like: /home/octos4murai/foo\r\n```\r\n\r\nUnless I'm missing something, this should be classified as an enhancement (if it's decided it should be supported at all).\n\n<blockquote><img src=\"https://docs.microsoft.com/media/logos/logo-powershell-social.png\" width=\"48\" align=\"right\"><div><strong><a href=\"https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.management/join-path\">Join-Path (Microsoft.PowerShell.Management) - PowerShell</a></strong></div><div>The Join-Path cmdlet combines a path and child-path into a single path. The provider supplies the path delimiters. </div></blockquote>",
      "created_at": "2021-07-28T22:29:18Z",
      "updated_at": "2021-07-28T22:29:26Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> Is `Join-Path` even meant to have support for paths prepended with the `FileSystemProvider` prefix?\r\n\r\nYes, it is. All paths on top level is PowerShell paths (provider qualified paths). Then on level below they are resolved to provider specific paths.\r\n\r\nRoot of the issue is in broken normalization `\\` to `/` .",
      "created_at": "2021-07-29T03:02:37Z",
      "updated_at": "2021-07-29T03:02:37Z"
    },
    {
      "author": "ghost",
      "author_association": "NONE",
      "body": "Thanks! For the following command in Unix-like systems:\r\n```pwsh\r\nJoin-Path (Get-Item .).PSParentPath foo\r\n```\r\nWhich of the following is the expected result:\r\n```pwsh\r\nMicrosoft.PowerShell.Core/FileSystem::/home/octos4murai/foo\r\n```\r\nor\r\n```pwsh\r\nMicrosoft.PowerShell.Core\\FileSystem::/home/octos4murai/foo\r\n```\r\nI assume it's the first one with consistent path separators?",
      "created_at": "2021-07-29T03:20:09Z",
      "updated_at": "2021-07-29T03:20:09Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Provider names are never normalized. You can find them in SingleShellProviderNames class.\r\nIn your example this is `Microsoft.PowerShell.Core\\FileSystem::/home/octos4murai/foo`.\r\nChanging this will be huge breaking change. \r\nNotice - they is _names_.",
      "created_at": "2021-07-29T03:30:40Z",
      "updated_at": "2021-07-29T03:31:48Z"
    }
  ],
  "created_at": "2021-01-04T16:53:47Z",
  "number": 14538,
  "state": "open",
  "title": "Join-Path doesn't handle provider prefixes correctly on Unix-like platforms",
  "updated_at": "2022-01-11T16:07:28Z"
}