{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7862",
  "author": "KirkMunro",
  "body": "## PR Summary\r\n\r\nFix #7846.\r\n\r\n- added -Stable switch parameter to Sort-Object\r\n- moved -Top parameter from Default parameter set to Top parameter set and made it mandatory for that parameter set\r\n- added new Pester tests for -Stable switch (ascending, descending, with/without unique)\r\n\r\nRegarding the breaking change, this is clearly in [Bucket 3](https://github.com/PowerShell/PowerShell/blob/master/docs/dev-process/breaking-change-contract.md#bucket-3-unlikely-grey-area) (technically it is breaking, but it is highly unlikely that anyone will be impacted by this change). For details on how it is breaking, see [here](#issuecomment-424757855).\r\n\r\n## PR Checklist\r\n\r\n- [X] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [X] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [ ] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [X] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` to the beginning of the title and remove the prefix when the PR is ready.\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [X] User-facing [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [X] Issue filed - Issue link: https://github.com/PowerShell/PowerShell-Docs/issues/3246\r\n- **Testing - New and feature**\r\n    - [ ] Not Applicable or can only be tested interactively\r\n    - **OR**\r\n    - [X] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n        - [ ] [Add `[feature]` if the change is significant or affects feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\r\n",
  "closed_at": "2019-01-16T01:14:40Z",
  "comments": [
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov Why did you add the Breaking-Change label? Because the Top parameter was moved to a separate parameter set (which would invalidate code someone had written specifically against the Default parameter set if they expected Top to be in there)? Or is there a functional breaking change you see here that I don't?",
      "created_at": "2018-09-26T10:59:57Z",
      "updated_at": "2018-09-26T10:59:57Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@KirkMunro Formally it is a breaking change because (1) a parameter set is changed, (2) sort order is changed and some scripts can fail. I believe we should inform users in change log about this. Also we need PowerShell Committee approvement.\r\n",
      "created_at": "2018-09-26T14:17:33Z",
      "updated_at": "2018-09-26T14:17:33Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@KirkMunro Please update Markdig.Signed package version 0.15.2 -> 0.15.3 to pass CI tests.",
      "created_at": "2018-09-26T14:18:49Z",
      "updated_at": "2018-09-26T14:18:49Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov I updated the 3 packages that had updates available.\r\n\r\nOn the breaking change comments, where you say \"sort order is changed and some scripts may fail\", the sort order has not changed with this PR. A new option has been added to allow users to choose a stable sort, where the order of duplicate items is preserved through the sort. That addition should not have any impact whatsoever over the sort order of existing sorts, because you only get that functionality by adding the new -Stable switch. For yourself and other readers, the reason this was done is because Top/Bottom sorts are implicitly stable, so there is no need to have a -Stable switch on those parameter sets. The behavior of the default parameter set has not changed either. The only \"breaking\" change is if you use -Top, you're invoking a different parameter set, that's all. The only people who might run into that as a breaking change are teams building tooling around PowerShell where they explicitly look for a Top parameter in the Default parameter set, if any such teams exist.\r\n\r\nAnyhow, I agree with the committee review to decide if change log details are necessary for this.",
      "created_at": "2018-09-26T15:24:18Z",
      "updated_at": "2018-09-26T15:24:42Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@KirkMunro Thanks for clarify. Please update the PR description about the \"breaking\" change.\r\n\r\nNow we are waiting PowerShell Committee conclusion.",
      "created_at": "2018-09-27T03:24:44Z",
      "updated_at": "2018-09-27T03:24:44Z"
    },
    {
      "author": "anmenaga",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT we need to make sure this breaking change gets reviewed by PS Committee...\r\n`Review - Committee` label was added almost a month ago.",
      "created_at": "2018-10-23T20:12:26Z",
      "updated_at": "2018-10-23T20:12:26Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@anmenaga yes, this is in the queue for review but we have so many items now it's taking a bit longer",
      "created_at": "2018-10-27T05:11:34Z",
      "updated_at": "2018-10-27T05:11:34Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@KirkMunro Please resolve merge conflicts.",
      "created_at": "2018-11-01T09:51:30Z",
      "updated_at": "2018-11-01T09:51:30Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@BrucePay I believe you had an action item to review this PR on behalf of the @PowerShell/powershell-committee ",
      "created_at": "2018-11-05T21:56:03Z",
      "updated_at": "2018-11-05T21:56:03Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "Change looks good, awaiting review from committee. ",
      "created_at": "2018-11-09T18:59:07Z",
      "updated_at": "2018-11-09T18:59:07Z"
    },
    {
      "author": "sdwheeler",
      "author_association": "COLLABORATOR",
      "body": "Docs issue https://github.com/PowerShell/PowerShell-Docs/issues/3021",
      "created_at": "2018-11-27T16:01:19Z",
      "updated_at": "2018-11-27T16:01:19Z"
    },
    {
      "author": "anmenaga",
      "author_association": "CONTRIBUTOR",
      "body": "@BrucePay friendly ping. This PR needs your review.",
      "created_at": "2018-11-28T00:24:22Z",
      "updated_at": "2018-11-28T00:24:22Z"
    },
    {
      "author": "BrucePay",
      "author_association": "COLLABORATOR",
      "body": "@KirkMunro @anmenaga My main question is this: do we really need a custom implementation of a heap sort? LINQ OrderBy and OrderByDescrnding are stable sorts. Why not just use them? It would be a lot less code to maintain.",
      "created_at": "2018-11-29T15:18:40Z",
      "updated_at": "2018-11-29T15:18:40Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "There has been a significant performance increase in # 2518 + support Top/Bottom.\r\nThere is open issues in CoreFX for new API that can replace the code.",
      "created_at": "2018-11-29T15:38:11Z",
      "updated_at": "2018-11-29T15:38:11Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "@BrucePay That question has nothing to do with this PR. This PR is to correct issue #7846, while also allowing full stable sorts using the same algorithm. The sorting algorithm isn't new here. It was added for PowerShell 6.0 in PR #2518 to greatly improve Sort-Object performance issues while adding -Top and -Bottom to Sort-Object.\r\n\r\nTo get the answer to your question, I think it would be better to open another issue requesting a comparison between LINQ's OrderBy and OrderByDescending and the existing indexed min-/max-heap sort algorithm, which should include an in depth analysis of results to ensure sorting does not change as well as a thorough performance analysis. Either that or compare with the CoreFX issue that @iSazonov just mentioned (Ilya, can you provide a link to that please?).",
      "created_at": "2018-11-29T15:45:53Z",
      "updated_at": "2018-11-29T19:31:48Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Waiting PowerShell Committee review.",
      "created_at": "2018-11-30T04:53:04Z",
      "updated_at": "2018-11-30T04:53:04Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee approves of the changes",
      "created_at": "2018-12-05T23:24:10Z",
      "updated_at": "2018-12-05T23:24:10Z"
    },
    {
      "author": "stale[bot]",
      "author_association": "NONE",
      "body": "This PR has been automatically marked as stale because it has not had activity in the last 30 days. It will be closed if no further activity occurs within 10 days.\nThank you for your contributions.\nCommunity members are welcome to grab these works.\n",
      "created_at": "2019-01-07T07:20:14Z",
      "updated_at": "2019-01-07T07:20:14Z"
    },
    {
      "author": "sdwheeler",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT What's the status on this PR?",
      "created_at": "2019-01-07T15:34:10Z",
      "updated_at": "2019-01-07T15:34:10Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@KirkMunro Can you resolve the merge conflict?",
      "created_at": "2019-01-08T18:25:59Z",
      "updated_at": "2019-01-08T18:25:59Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@sdwheeler @KirkMunro I believe the changes are approved by committee and individuals, so once the merge conflict is resolved this can be merged",
      "created_at": "2019-01-08T19:27:13Z",
      "updated_at": "2019-01-08T19:27:13Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@KirkMunro Fixed the merge conflict.",
      "created_at": "2019-01-16T00:52:25Z",
      "updated_at": "2019-01-16T01:12:42Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@KirkMunro Thank you for your contribution!",
      "created_at": "2019-01-16T01:14:54Z",
      "updated_at": "2019-01-16T01:14:54Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks @adityapatwardhan, for fixing the merge conflict and merging the PR. I missed the earlier comments about the merge conflict.",
      "created_at": "2019-01-16T17:50:35Z",
      "updated_at": "2019-01-16T17:50:35Z"
    }
  ],
  "created_at": "2018-09-26T01:19:51Z",
  "number": 7862,
  "state": "closed",
  "title": "Add `-Stable` to `Sort-Object` and related tests",
  "updated_at": "2019-01-16T17:50:36Z"
}