{
  "_url": "https://github.com/PowerShell/PowerShell/issues/557",
  "author": "palladia",
  "body": "This PR includes fixes for:\n1.  Tab completion of file names so that they are preceded by \"./\" or \".\\\"\n2.  Directories have trailing slash\n3.  Handle files with spaces in them.\n4.  Files with \"..\\\" are displayed correctly.\n5.  Up/down arrow key requiring double-tap to show correctly\n6.  Hitting \"down-arrow\" and then \"up-arrow\" did not display history correctly\n7.  General cleaning of code to use boundary-checking instead of try-catch blocks.\n",
  "closed_at": "2016-02-19T21:22:16Z",
  "comments": [
    {
      "author": "palladia",
      "author_association": "CONTRIBUTOR",
      "body": "This PR supersedes #553.\n",
      "created_at": "2016-02-18T23:38:46Z",
      "updated_at": "2016-02-18T23:38:46Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "This doesn't wrap folder in quotes:\n\n``` powershell\nmkdir 'foo '\ncd ./fo+<Tab>\n```\n\nExpected:\n\n```\ncd './foo /'\n```\n\nActual\n\n```\ncd ./foo /\n```\n",
      "created_at": "2016-02-19T06:12:40Z",
      "updated_at": "2016-02-19T06:12:40Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "Interestingly on windows `mkdir 'foo '` creates a directory without a trailing space. Looks like it's prohibited. http://superuser.com/questions/565334/rename-delete-windows-x64-folder-with-leading-and-trailing-space\n",
      "created_at": "2016-02-19T06:14:00Z",
      "updated_at": "2016-02-19T06:14:00Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "This requires PowerShell/psl-monad#23.\n\n@palladia Do you want to fix what @vors reported before merging?\n\n(I ask because it sounds like a regression that could prove very troublesome.)\n",
      "created_at": "2016-02-19T18:15:06Z",
      "updated_at": "2016-02-19T18:15:25Z"
    },
    {
      "author": "palladia",
      "author_association": "CONTRIBUTOR",
      "body": "It doesn't sound like Sergei is sure whether his test case is valid.  Let's merge what we have and create a new bug if necessary. \n\nWhether file names should be quoted could be a separate, but complicated topic to examine later.  Unix/Linux actually allows just about every non-alphanumeric characters in the file name, and I have a feeling that the existing parser may not handle all cases properly.  For example, see [this](http://unix.stackexchange.com/questions/148043/is-space-not-allowed-in-a-filename) for examples of ridiculous file names.\n",
      "created_at": "2016-02-19T18:35:30Z",
      "updated_at": "2016-02-19T18:35:30Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "While that is true, handling those file names in the shell always requires them to be surrounded by quotes or with the space escaped. `touch foo bar` will touch two files in Bash, `foo` and `bar`. If you wanted a file named `foo bar` you'd have to `touch \"foo bar\"` or `touch 'foo bar'` or `touch foo\\ bar`.\n",
      "created_at": "2016-02-19T18:42:40Z",
      "updated_at": "2016-02-19T18:42:40Z"
    },
    {
      "author": "palladia",
      "author_association": "CONTRIBUTOR",
      "body": "I've tested spaces inside file names, like \"Program Files\".  Sergei was trying out something unusual, like space at end of file.\n",
      "created_at": "2016-02-19T20:34:08Z",
      "updated_at": "2016-02-19T20:34:08Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Just an oddity. When I tab completed a filename with a space in it, it prepended an ampersand:\n\n```\nfoo<tab>\n& './foo bar'\n```\n",
      "created_at": "2016-02-19T21:20:45Z",
      "updated_at": "2016-02-19T21:20:45Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Otherwise this looks good. Merging.\n",
      "created_at": "2016-02-19T21:21:17Z",
      "updated_at": "2016-02-19T21:21:17Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "Yeah, don't stop on this `\"foo \"` non-sense. It's petty corner.\nPlus we can hopefully converge on readline implementations and avoid having 3 of them.\n",
      "created_at": "2016-02-19T21:23:30Z",
      "updated_at": "2016-02-19T21:23:41Z"
    },
    {
      "author": "palladia",
      "author_association": "CONTRIBUTOR",
      "body": "& './foo bar'...It does that on Windows too.  It tries to be smart.\n",
      "created_at": "2016-02-19T22:10:18Z",
      "updated_at": "2016-02-19T22:10:18Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "It's the right behavior, if the the is no command at the begging: then it assumes that executable from file system would be called.\n",
      "created_at": "2016-02-20T00:12:20Z",
      "updated_at": "2016-02-20T00:12:20Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Hm, it doesn't do it if the binary is inside a folder. I don't get an ampersand if I'm tabbing through completions like `./bin/<tab>`. Also doesn't do it on items in there; only seems to do it if the item had a space in its name.\n",
      "created_at": "2016-02-20T00:24:01Z",
      "updated_at": "2016-02-20T00:24:01Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "right, logic follow like this:\n1) You need quotes, because of the space\n2) You need an `&`, because quotes turns a command to a string, so without it, you will emit a string, not call a command.\n\nIf you don't have space in the name, there are no ambiguity: it's always a command\n",
      "created_at": "2016-02-20T00:38:08Z",
      "updated_at": "2016-02-20T00:38:08Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Ahh I see now. PowerShell is strange.\n",
      "created_at": "2016-02-20T00:39:47Z",
      "updated_at": "2016-02-20T00:39:47Z"
    }
  ],
  "created_at": "2016-02-18T23:38:16Z",
  "number": 557,
  "state": "closed",
  "title": "Combo PR that fixes tab-completion and up/down arrows",
  "updated_at": "2016-02-20T00:39:47Z"
}