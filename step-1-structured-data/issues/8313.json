{
  "_url": "https://github.com/PowerShell/PowerShell/issues/8313",
  "author": "mklement0",
  "body": "Sometimes you want to simply _suppress_ stdout _and_ stderr output from a process launched with `Start-Process`.\r\n\r\nHowever:\r\n\r\n* `-RedirectStandardOut /dev/null -RedirectStandardError /dev/null` (Unix) and `-RedirectStandardOut NUL -RedirectStandardError NUL` do _not_ work, due to a na\u00efve check for whether the output filenames are the same (see below).\r\n\r\n* `-RedirectStandardOut $null -RedirectStandardError $null` doesn't work either, because `$null` is fundamentally not accepted as a target filename - although it arguably should, for symmetry with `> $null`.\r\n\r\nAs for when you might need this:\r\n\r\nSometimes you want to simply _silence all output_ from an external program that you run _hidden and asynchronously_ (launch-it-and-forget-it style)\r\n\r\nOn Windows you can use `Start-Process -WindowStyle Hidden`, but the `-WindowStyle` parameter is not available on Unix-like platforms.\r\n\r\nSince the new process therefore invariably runs in the same terminal window, its output must be silenced, so as not to interfere with interactive use of the terminal.\r\n\r\n# Steps to reproduce\r\n\r\nOn macOS, redirecting both stdout and stderr to `/dev/null`:\r\n\r\nThe following command shows a GUI dialog asynchronously, but also produces stdout output, which needs to be silenced:\r\n\r\n```powershell\r\nPSonMacOS> Start-Process pwsh '-nop', '-c', 'get-date; osascript -e ''display alert \\\\\"\"\"hi\\\\\"\"\"''' -RedirectStandardOut /dev/null -RedirectStandardError /dev/null\r\n```\r\n\r\n<sup>I wish I were kidding about the quoting acrobatics required here, which are necessitated by an unholy combination of a [`Start-Process` bug](https://github.com/PowerShell/PowerShell/issues/5576) and the [fundamentally broken quoting for external programs](https://github.com/PowerShell/PowerShell-Docs/issues/2361).</sup>\r\n\r\nOn Windows (where there's less of a need for it), redirecting both stdout and stderr to `NUL`:\r\n\r\n```powershell\r\nPSonWin> Start-Process -NoNewWindow pwsh '-nop' ,'-c', 'get-date; (New-Object -ComObject WScript.Shell).Popup(\\\"message\\\")' -RedirectStandardOut NUL -RedirectStandardError NUL\r\n```\r\n\r\n# Expected behavior\r\n\r\nThe alert / message box should pop up asynchronously, without any output showing in the calling console window / terminal.\r\n\r\n# Actual behavior\r\n\r\nThe following error occurs:\r\n\r\n```none\r\nStart-Process : This command cannot be run because \"RedirectStandardOutput\" and \"RedirectStandardError\" are same. \r\nGive different inputs and Run your command again.\r\n```\r\n\r\nThat is, the command is not aware of the (platform-appropriate) NULL device and tries to prevent an error that is none.\r\n\r\n# Environment data\r\n\r\n```none\r\nPowerShell Core 6.2.0-preview.1 on macOS 10.14.1\r\nPowerShell Core 6.2.0-preview.1 on Ubuntu 16.04.5 LTS\r\nPowerShell Core 6.2.0-preview.1 on Microsoft Windows 10 Pro (64-bit; Version 1803, OS Build: 17134.345)\r\nWindows PowerShell v5.1.17134.228 on Microsoft Windows 10 Pro (64-bit; Version 1803, OS Build: 17134.345)\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "sir-galahad",
      "author_association": "NONE",
      "body": "Is it necessarily the case that powershell needs special knowledge of /dev/null ? \r\nI mean is there a reason not to detect if stdout and stderr are being redirected to the same file, and use the same file handle for both?",
      "created_at": "2018-12-24T01:59:58Z",
      "updated_at": "2018-12-24T01:59:58Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@sir-galahad:\r\n\r\nTo recap the motivation stated in the OP:\r\n\r\n> Sometimes you want to simply _silence all output_ from an external program that you run _hidden and asynchronously_ (launch-it-and-forget-it style)\r\n\r\nIt's not a common scenario, and on Windows it only applies if you also pass `-NoNewWindow` (which is invariably implied on Unix-like platforms), but there's no reason to disallow it based on a check that makes no sense _when applied to `NUL` / `/dev/null`_.\r\nTo be clear: I'm not suggesting the check be removed for _other_ files.\r\n",
      "created_at": "2018-12-24T02:34:40Z",
      "updated_at": "2018-12-24T02:34:40Z"
    },
    {
      "author": "sir-galahad",
      "author_association": "NONE",
      "body": "Forgive me for pressing a little bit more, but removing the check for other files is what i am suggesting. I can imagine a case where you might want to redirect both to one file to have a record of what that process output and in what order. The order of output is lost if there are no timestamps in the output\r\n\r\nThe only reason i can think of to maintain the check for separate files would be to prevent the process from unintentionally closing both handles if the process closes one or the other. but i could easily be missing key knowledge.\r\nIf i am correct then we could maybe get  around the problem with wrapper file handles with  a shared reference count object?\r\n\r\nThank you for your time.",
      "created_at": "2018-12-24T02:58:45Z",
      "updated_at": "2018-12-24T02:58:45Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@sir-galahad:\r\n\r\nI see - you want to be able to capture the _interleaved_ stdout and stderr streams in a _single_ file, as  you can already do with direct invocation with something like `... 2>&1 >out.txt`, by generally allowing the same file path to be passed to `-RedirectStandardOut` and `-RedirectStandardError`\r\n\r\nThat would be a _new feature_, and I encourage you to open a new issue for it.\r\n\r\nBy contrast, what _this_ issue asks for is merely a tweak (arguably: bug fix) to the current behavior, which intentionally doesn't support targeting the same file, but is overzealous in enforcing that behavior.\r\n",
      "created_at": "2018-12-24T03:51:03Z",
      "updated_at": "2018-12-24T03:52:00Z"
    }
  ],
  "created_at": "2018-11-19T17:02:29Z",
  "number": 8313,
  "state": "open",
  "title": "Start-Process doesn't permit passing NUL or /dev/null to *both* -RedirectStandardOut and -RedirectStandardError; $null should be supported",
  "updated_at": "2018-12-24T03:52:18Z"
}