{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10075",
  "author": "jszabo98",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n\r\n-->\r\n\r\nThis is more for 3rd party programs like ghostscript.  See https://stackoverflow.com/questions/15489502/powershell-and-ghostscript/56923846#56923846  This will output to a file literally called '$OutputFile'.  The variable isn't interpreted unless it's double quoted.\r\n\r\ngswin64c -sOutputFile=$OutputFile\r\n\r\nI can demo it with any command.  If it's a pain to change, it would be nice if it was documented.\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\n$a = 'hi'\r\necho -inputobject$a\r\n```\r\n\r\n# Expected behavior\r\n\r\n```none\r\n-inputobjecthi\r\n```\r\n\r\n# Actual behavior\r\n\r\n```none\r\n-inputobject$a\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.2.0\r\nPSEdition                      Core\r\nGitCommitId                    6.2.0\r\nOS                             Darwin 16.7.0 Darwin Kernel Version 16.7.0: Thu Jun 21 20:07:39 PDT 2018; root:xnu-3789.73.14~1/\u2026\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2019-07-09T11:00:14Z",
  "comments": [
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "The issue that summarizes all parameter-parsing oddities is #6467 (your particular finding was originally discussed in #4624, but I've just folded a summary into #6467).\r\n\r\nThere already is a tracking issue in the docs repo for #6467, https://github.com/MicrosoftDocs/PowerShell-Docs/issues/3038.",
      "created_at": "2019-07-08T04:24:23Z",
      "updated_at": "2019-07-08T04:24:23Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as duplicate and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2019-07-09T11:00:14Z",
      "updated_at": "2019-07-09T11:00:14Z"
    }
  ],
  "created_at": "2019-07-07T16:51:50Z",
  "labels": [
    "Resolution-Duplicate",
    "Issue-Question"
  ],
  "number": 10075,
  "state": "closed",
  "title": "powershell sometimes doesn't interpret variables within parameters (external commands)",
  "updated_at": "2019-07-09T11:00:14Z"
}