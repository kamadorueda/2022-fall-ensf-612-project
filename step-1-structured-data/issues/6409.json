{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6409",
  "author": "rjmholt",
  "body": "## PR Summary\r\nFixes #3154 and #3773.\r\n\r\nCurrently, when a value is passed out of a command using `-OutVariable`, we use an `ArrayList` to collect the value to give back to the user, but we leak that detail so that the variable comes back as an `ArrayList` and not `object[]` or as itself.\r\n\r\nThis PR fixes this, so that implementation differences between\r\n```powershell\r\n$null = Write-Output -OutVariable x $value; $x\r\n```\r\nand\r\n```powershell\r\nWrite-Output $value\r\n```\r\nare transparent.\r\n\r\nTo summarize:\r\n\r\n| Input | Non-OutVar Result Type | Old Result Type | New Result Type |\r\n| :-: | :-: | :-: | :-: |\r\n| `'Hello'` | System.String | System.Collections.ArrayList | System.String |\r\n| `@(1, 2)` | object[] | System.Collections.ArrayList | object[] |\r\n| `[System.Collections.ArrayList]::new(@(1,2))` | object[] | System.Collections.ArrayList | object[] |\r\n| `@(,[System.Collections.ArrayList]::new(@(1,2))` | System.Collections.ArrayList | System.Collections.ArrayList | System.Collections.ArrayList |\r\n| `$null` | \u22a5 | System.Collections.ArrayList | \u22a5 |\r\n\r\nThis is technically a **breaking change**. The PowerShell commitee reviewed it in #3154. A suggested classification was as a class-3 unlikely grey area change, where the new behaviour is more likely to be expected.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [ ] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` to the beginning of the title and remove the prefix when the PR is ready.\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [x] User-facing [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed - Issue link:\r\n- **Testing - New and feature**\r\n    - [ ] Not Applicable or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n        - [x] [Add `[feature]` if the change is significant or affects feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\r\n",
  "closed_at": "2018-03-16T22:28:30Z",
  "comments": [
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "Quick question - the `[feature]` checkbox - is that supposed to just be in the commit message and not in the title of the PR?",
      "created_at": "2018-03-16T16:33:52Z",
      "updated_at": "2018-03-16T16:33:52Z"
    },
    {
      "author": "Jaykul",
      "author_association": "CONTRIBUTOR",
      "body": "This would be a pretty major breaking change...",
      "created_at": "2018-03-16T17:33:33Z",
      "updated_at": "2018-03-16T17:33:33Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "Umm... I disagree that this is a `Bucket 3` breaking change and request it be classified as `Bucket 1`. Especially if you are going to return a string as a `String` instead of an ArrayList.\r\n\r\nI have been preaching for years as well as using the `-OutVariable`  specifically because it always returns an ArrayList. Since it is always a predictable type you can always use the same methods and actions on it.\r\n\r\nIf Strings are suddenly returned... this becomes problematic:\r\n\r\n```powershell\r\n$null = Get-MaybeOneOrMoreStrings -OutVariable Results\r\n$FirstString = $Results[0]\r\n```\r\n\r\nThis is a simplified example of something I make great use of in many places.\r\n\r\n@SteveL-MSFT ",
      "created_at": "2018-03-16T17:41:54Z",
      "updated_at": "2018-03-16T17:47:49Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "To clarify, I would be ok with these returning any collection type (changed in a major version bump). In order of preference `List<Object>`, `ArrayList`, ~`Object[]`~ (an object array can't be used, see my other comment.). But I am wholeheartedly against this returning single values and not a collection. ",
      "created_at": "2018-03-16T17:45:49Z",
      "updated_at": "2018-03-16T18:23:48Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "This PR breaks the following usage:\r\n\r\n```powershell\r\n$Results = [System.Collections.ArrayList]::new()\r\n$Results.Add('before')\r\nWrite-Output 'a' -OutVariable '+Results'\r\n$Results.Add('After')\r\n\r\n$Results.Count\r\n$Results[0]\r\n$Results[1]\r\n$Results[2]\r\n```\r\n\r\n```none\r\nException calling \"Add\" with \"1\" argument(s): \"Collection was of a fixed size.\"\r\nAt line:1 char:1\r\n+ $Results.Add('After')\r\n+ ~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : NotSpecified: (:) [], MethodInvocationException\r\n+ FullyQualifiedErrorId : NotSupportedException\r\n```",
      "created_at": "2018-03-16T18:06:33Z",
      "updated_at": "2018-03-16T18:06:33Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "Apologies -- after reading through #3154, the responses there seemed to encourage the change.\r\n\r\nSince I've already created a PR, I've gone ahead an created an [RFC](https://github.com/PowerShell/PowerShell-RFC/pull/120), so feel free to comment there.\r\n\r\nI may also submit a PR to change the docs to emphasise and strengthen the language on RFCs for breaking changes. After going through the PR checklist, I didn't catch the reference to possibly submitting an RFC.\r\n\r\nI will mothball this PR for now.",
      "created_at": "2018-03-16T22:28:20Z",
      "updated_at": "2018-03-16T22:28:20Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@rjmholt No worries! if I had seen those other issues I would have raised a stink about it needing an RFC before the PR! \ud83d\ude06 ",
      "created_at": "2018-03-16T23:11:26Z",
      "updated_at": "2018-03-16T23:11:26Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": ">Quick question - the [feature] checkbox - is that supposed to just be in the commit message and not in the title of the PR?\r\n\r\nIn last commit header only.",
      "created_at": "2018-03-19T04:40:47Z",
      "updated_at": "2018-03-19T04:41:06Z"
    }
  ],
  "created_at": "2018-03-16T03:07:29Z",
  "number": 6409,
  "state": "closed",
  "title": "Stop stream variables (e.g. OutVariable) becoming ArrayLists",
  "updated_at": "2018-08-16T18:17:30Z"
}