{
  "_url": "https://github.com/PowerShell/PowerShell/issues/17205",
  "author": "PalmEmanuel",
  "body": "### Prerequisites\n\n- [X] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\n\n### Steps to reproduce\n\nWhen looking at the help documentation for `Invoke-Command`, one of the valid parameter sets suggests that the only mandatory parameter is `-Credential`.\r\n\r\n```plaintext\r\nInvoke-Command\r\n      -Credential <PSCredential>\r\n      [-ConfigurationName <String>]\r\n      [-ThrottleLimit <Int32>]\r\n      [-AsJob]\r\n      [-HideComputerName]\r\n      [-ScriptBlock] <ScriptBlock>\r\n      [-RemoteDebug]\r\n      [-InputObject <PSObject>]\r\n      [-ArgumentList <Object[]>]\r\n      [-VMId] <Guid[]>\r\n      [<CommonParameters>]\r\n```\r\n\r\nThis means that the following command would be a valid way to run a specified `-ScriptBlock` with a provided credential.\r\n\r\n```powershell\r\nInvoke-Command -Credential $Cred -ScriptBlock { 'Hello world' }\r\n```\r\n\r\nBut it results in an error saying it's an invalid combination of parameters.\r\n\r\n```plaintext\r\nInvoke-Command: Parameter set cannot be resolved using the specified named parameters. One or more parameters issued cannot be used together or an insufficient number of parameters were provided.\r\n```\r\n\r\nI've tried both newer PowerShell versions as well as Windows PowerShell, and since the problem exists in several versions of the documentation I suspect it's an old bug.\n\n### Expected behavior\n\n```console\nPS> $Cred = [pscredential]::new('test', ('123' | ConvertTo-SecureString -AsPlainText))\r\nPS> Invoke-Command -Credential $Cred -ScriptBlock { 'Hello world' }\r\nHello world\n```\n\n\n### Actual behavior\n\n```console\nPS> $Cred = [pscredential]::new('test', ('123' | ConvertTo-SecureString -AsPlainText))\r\nPS> Invoke-Command -Credential $Cred -ScriptBlock { 'Hello world' }\r\nInvoke-Command: Parameter set cannot be resolved using the specified named parameters. One or more parameters issued cannot be used together or an insufficient number of parameters were provided.\n```\n\n\n### Error details\n\n```console\nException             :\r\n    Type              : System.Management.Automation.ParameterBindingException\r\n    Message           : Parameter set cannot be resolved using the specified named parameters. One or more\r\nparameters issued cannot be used together or an insufficient number of parameters were provided.\r\n    ErrorId           : AmbiguousParameterSet\r\n    Line              : 1\r\n    Offset            : 1\r\n    CommandInvocation :\r\n        MyCommand        : Invoke-Command\r\n        BoundParameters  :\r\n            Comparer : System.OrdinalIgnoreCaseComparer\r\n            Count    : 2\r\n            Keys     :\r\n                Length : 11\r\n\r\n                Length : 10\r\n            Values   :\r\n                StartPosition : System.Management.Automation.PSToken\r\n                Id            : 188c8021-e934-4603-b532-8541b78c9ccb\r\n                Ast           : { 'Hello world' }\r\n\r\n                UserName : test\r\n                Password : System.Security.SecureString\r\n            SyncRoot :\r\n                Comparer : System.OrdinalIgnoreCaseComparer\r\n                Count    : 2\r\n                Keys     :\r\n                    Length : 11\r\n\r\n                    Length : 10\r\n                Values   :\r\n                    StartPosition : System.Management.Automation.PSToken\r\n                    Id            : 188c8021-e934-4603-b532-8541b78c9ccb\r\n                    Ast           : { 'Hello world' }\r\n\r\n                    UserName : test\r\n                    Password : System.Security.SecureString\r\n                SyncRoot :\r\n                    Comparer : System.OrdinalIgnoreCaseComparer\r\n                    Count    : 2\r\n                    Keys     :\r\n                        Length : 11\r\n\r\n                        Length : 10\r\n                    Values   :\r\n                        StartPosition : System.Management.Automation.PSToken\r\n                        Id            : 188c8021-e934-4603-b532-8541b78c9ccb\r\n                        Ast           : { 'Hello world' }\r\n\r\n                        UserName : test\r\n                        Password : System.Security.SecureString\r\n                    SyncRoot :\r\n                        Comparer : System.OrdinalIgnoreCaseComparer\r\n                        Count    : 2\r\n                        Keys     :\r\n                            Length : 11\r\n\r\n                            Length : 10\r\n                        Values   :\r\n                            StartPosition : System.Management.Automation.PSToken\r\n                            Id            : 188c8021-e934-4603-b532-8541b78c9ccb\r\n                            Ast           : { 'Hello world' }\r\n\r\n                            UserName : test\r\n                            Password : System.Security.SecureString\r\n                        SyncRoot :\r\n                            Comparer : System.OrdinalIgnoreCaseComparer\r\n                            Count    : 2\r\n                            Keys     :\r\n                                Length : 11\r\n\r\n                                Length : 10\r\n                            Values   :\r\n                                StartPosition : System.Management.Automation.PSToken\r\n                                Id            : 188c8021-e934-4603-b532-8541b78c9ccb\r\n                                Ast           : { 'Hello world' }\r\n\r\n                                UserName : test\r\n                                Password : System.Security.SecureString\r\n                            SyncRoot :\r\n                                Comparer : System.OrdinalIgnoreCaseComparer\r\n                                Count    : 2\r\n                                Keys     :\r\n                                    Length : 11\r\n\r\n                                    Length : 10\r\n                                Values   :\r\n                                    StartPosition : System.Management.Automation.PSToken\r\n                                    Id            : 188c8021-e934-4603-b532-8541b78c9ccb\r\n                                    Ast           : { 'Hello world' }\r\n\r\n                                    UserName : test\r\n                                    Password : System.Security.SecureString\r\n                                SyncRoot :\r\n                                    Comparer : System.OrdinalIgnoreCaseComparer\r\n                                    Count    : 2\r\n                                    Keys     : \u2026\r\n                                    Values   : \u2026\r\n                                    SyncRoot : \u2026\r\n        ScriptLineNumber : 1\r\n        OffsetInLine     : 1\r\n        HistoryId        : 20\r\n        Line             : Invoke-Command -ScriptBlock { 'Hello world' } -Credential $Cred\r\n        PositionMessage  : At line:1 char:1\r\n                           + Invoke-Command -ScriptBlock { 'Hello world' } -Credential $Cred\r\n                           + ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n        InvocationName   : Invoke-Command\r\n        PipelineLength   : 1\r\n        PipelinePosition : 1\r\n    ErrorRecord       :\r\n        Exception             :\r\n            Type    : System.Management.Automation.ParentContainsErrorRecordException\r\n            Message : Parameter set cannot be resolved using the specified named parameters. One or more\r\nparameters issued cannot be used together or an insufficient number of parameters were provided.\r\n            HResult : -2146233087\r\n        CategoryInfo          : InvalidArgument: (:) [Invoke-Command], ParentContainsErrorRecordException\r\n        FullyQualifiedErrorId : AmbiguousParameterSet,Microsoft.PowerShell.Commands.InvokeCommandCommand\r\n        InvocationInfo        :\r\n            MyCommand        : Invoke-Command\r\n            ScriptLineNumber : 1\r\n            OffsetInLine     : 1\r\n            HistoryId        : 20\r\n            Line             : Invoke-Command -ScriptBlock { 'Hello world' } -Credential $Cred\r\n            PositionMessage  : At line:1 char:1\r\n                               + Invoke-Command -ScriptBlock { 'Hello world' } -Credential $Cred\r\n                               + ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n            CommandOrigin    : Internal\r\n        ScriptStackTrace      : at <ScriptBlock>, <No file>: line 1\r\n    TargetSite        :\r\n        Name          : ThrowAmbiguousParameterSetException\r\n        DeclaringType : System.Management.Automation.CmdletParameterBinderController,\r\nSystem.Management.Automation, Version=7.2.2.500, Culture=neutral, PublicKeyToken=31bf3856ad364e35\r\n        MemberType    : Method\r\n        Module        : System.Management.Automation.dll\r\n    Data              : System.Collections.ListDictionaryInternal\r\n    Source            : System.Management.Automation\r\n    HResult           : -2146233087\r\n    StackTrace        :\r\n   at\r\nSystem.Management.Automation.CmdletParameterBinderController.ThrowAmbiguousParameterSetException(UInt32\r\nparameterSetFlags, MergedCommandParameterMetadata bindableParameters)\r\n   at System.Management.Automation.CmdletParameterBinderController.ValidateParameterSets(Boolean\r\nprePipelineInput, Boolean setDefault)\r\n   at System.Management.Automation.CmdletParameterBinderController.BindCommandLineParameters(Collection`1\r\narguments)\r\n   at System.Management.Automation.CommandProcessor.BindCommandLineParameters()\r\n   at System.Management.Automation.CommandProcessor.Prepare(IDictionary psDefaultParameterValues)\r\n   at System.Management.Automation.CommandProcessorBase.DoPrepare(IDictionary psDefaultParameterValues)\r\n   at System.Management.Automation.Internal.PipelineProcessor.Start(Boolean incomingStream)\r\n   at System.Management.Automation.Internal.PipelineProcessor.SynchronousExecuteEnumerate(Object input)\r\n--- End of stack trace from previous location ---\r\n   at System.Management.Automation.Internal.PipelineProcessor.SynchronousExecuteEnumerate(Object input)\r\n   at System.Management.Automation.PipelineOps.InvokePipeline(Object input, Boolean ignoreInput,\r\nCommandParameterInternal[][] pipeElements, CommandBaseAst[] pipeElementAsts, CommandRedirection[][]\r\ncommandRedirections, FunctionContext funcContext)\r\n   at System.Management.Automation.Interpreter.ActionCallInstruction`6.Run(InterpretedFrame frame)\r\n   at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.Run(InterpretedFrame frame)\r\nCategoryInfo          : InvalidArgument: (:) [Invoke-Command], ParameterBindingException\r\nFullyQualifiedErrorId : AmbiguousParameterSet,Microsoft.PowerShell.Commands.InvokeCommandCommand\r\nInvocationInfo        :\r\n    MyCommand        : Invoke-Command\r\n    ScriptLineNumber : 1\r\n    OffsetInLine     : 1\r\n    HistoryId        : 20\r\n    Line             : Invoke-Command -ScriptBlock { 'Hello world' } -Credential $Cred\r\n    PositionMessage  : At line:1 char:1\r\n                       + Invoke-Command -ScriptBlock { 'Hello world' } -Credential $Cred\r\n                       + ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    CommandOrigin    : Internal\r\nScriptStackTrace      : at <ScriptBlock>, <No file>: line 1\n```\n\n\n### Environment data\n\n```powershell\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.2\r\nPSEdition                      Core\r\nGitCommitId                    7.2.2\r\nOS                             Microsoft Windows 10.0.19044\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\n```\n\n\n### Visuals\n\n_No response_",
  "closed_at": "2022-04-27T15:40:14Z",
  "comments": [
    {
      "author": "PalmEmanuel",
      "author_association": "NONE",
      "body": "I seem to have missed that `VMId` was a positional mandatory parameter, closing issue.",
      "created_at": "2022-04-27T15:40:14Z",
      "updated_at": "2022-04-27T15:40:14Z"
    }
  ],
  "created_at": "2022-04-27T15:33:35Z",
  "labels": [],
  "number": 17205,
  "state": "closed",
  "title": "Invoke-Command throws error with supposedly valid parameter combination",
  "updated_at": "2022-04-27T15:40:17Z"
}