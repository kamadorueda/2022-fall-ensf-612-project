{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7215",
  "author": "mklement0",
  "body": "Currently, if you attach an `ArgumentCompleterAttribute` to a parameter and its script block happens to return no completions, tab completion falls back to the _default_ behavior, i.e., completion of item names in the current location (which, in a filesystem location, cycles through the names of all files and directories in the current directory).\r\n\r\nHowever, it makes more sense to _not complete_ in this event, given that the intended completions may be unrelated to provider items altogether.\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\nAssume that the current location is a filesystem location and that no `*.ext` files are present.\r\n\r\n```powershell\r\nfunction foo {\r\n  param(\r\n    [ArgumentCompleter({\r\n      Get-ChildItem -Name *.ext\r\n    })]\r\n    [string] $Bar\r\n  )\r\n\r\n  $Bar\r\n}\r\n\r\nfoo # <-- press TAB here\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\nA no-op: given that the argument-completer script block outputs no completions, nothing should happen.\r\n\r\nActual behavior\r\n---------------\r\n\r\nTab completion falls back to the default behavior and cycles through the names of all files and subdirectories in the current dir.\r\n\r\nEnvironment data\r\n----------------\r\n\r\nWritten as of:\r\n\r\n```powershell\r\nPowerShell Core v6.1.0-preview.3\r\n```\r\n",
  "closed_at": null,
  "comments": [],
  "created_at": "2018-06-30T23:34:24Z",
  "number": 7215,
  "state": "open",
  "title": "An ArgumentCompleter script block returning no results should not result in falling back to the default tab-completion behavior",
  "updated_at": "2018-07-03T09:03:35Z"
}