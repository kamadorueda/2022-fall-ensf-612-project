{
  "_url": "https://github.com/PowerShell/PowerShell/issues/17120",
  "author": "o-l-a-v",
  "body": "### Prerequisites\r\n\r\n- [X] Write a descriptive title.\r\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- [X] Search the existing issues.\r\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\r\n\r\n### Steps to reproduce\r\n\r\nWith both [PowerShell](https://www.microsoft.com/en-us/store/apps/9mz1snwt0n5d) and [PowerShell Preview](https://www.microsoft.com/en-us/store/apps/9p95zzktnrn4) from Microsoft Store, and [latest stable MSI 64 bit](https://github.com/PowerShell/PowerShell/releases/tag/v7.2.2), running on a 64 bit operating system, following:\r\n\r\n* ```$env:PSModulePath.Split(';') | Sort-Object```\r\n\r\nIs missing a what I consider crucial path for modules: The default install location for Windows PowerShell 5.1 when specifying ```-Scope AllUsers``` when running Windows PowerShell 5.1 as 64 bit on a 64 bit OS.\r\n\r\n* But the 32 bit path is there!\r\n\r\n**Is this intentional?**\r\nIf yes:\r\n\r\n* Why?\r\n* Why is the x86 Windows PowerShell modules location for system context there?\r\n\r\n### Expected behavior\r\n\r\n* I'll indicate what I consider a missing path with ```<--```.\r\n* I've removed ```%OneDriveCommercial%``` paths from these outputs, as it's not really relevant, and few are likely using OneDrive for Business Known Folder Move (KFM) anyways.\r\n\r\n#### Microsoft Store PowerShell\r\n\r\n```\r\nC:\\Program Files (x86)\\Microsoft Azure Information Protection\\Powershell\r\nC:\\Program Files (x86)\\Microsoft Configuration Manager\\AdminConsole\\bin\r\nC:\\Program Files (x86)\\WindowsPowerShell\\Modules\r\nC:\\Program Files\\PowerShell\\Modules\r\nc:\\program files\\windowsapps\\microsoft.powershell_7.2.2.0_x64__8wekyb3d8bbwe\\Modules\r\nC:\\Program Files\\WindowsPowerShell\\Modules <--\r\nC:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules\r\n```\r\n\r\n#### Microsoft Store PowerShell Preview\r\n\r\n```\r\nC:\\Program Files (x86)\\Microsoft Azure Information Protection\\Powershell\r\nC:\\Program Files (x86)\\Microsoft Configuration Manager\\AdminConsole\\bin\r\nC:\\Program Files (x86)\\WindowsPowerShell\\Modules\r\nC:\\Program Files\\PowerShell\\Modules\r\nc:\\program files\\windowsapps\\microsoft.powershellpreview_7.3.3.0_x64__8wekyb3d8bbwe\\Modules\r\nC:\\Program Files\\WindowsPowerShell\\Modules <--\r\nC:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules\r\n```\r\n\r\n#### PowerShell 7.2.2 MSI\r\n\r\n```\r\nC:\\Program Files (x86)\\Microsoft Azure Information Protection\\Powershell\r\nC:\\Program Files (x86)\\Microsoft Configuration Manager\\AdminConsole\\bin\r\nC:\\Program Files (x86)\\WindowsPowerShell\\Modules\r\nc:\\program files\\powershell\\7\\Modules\r\nC:\\Program Files\\PowerShell\\Modules\r\nC:\\Program Files\\WindowsPowerShell\\Modules <--\r\nC:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules\r\n```\r\n\r\n### Actual behavior\r\n\r\n* I've removed ```%OneDriveCommercial%``` paths from these outputs, as it's not really relevant, and few are likely using OneDrive for Business Known Folder Move (KFM) anyways.\r\n\r\n#### Microsoft Store PowerShell\r\n\r\n```\r\nC:\\Program Files (x86)\\Microsoft Azure Information Protection\\Powershell\r\nC:\\Program Files (x86)\\Microsoft Configuration Manager\\AdminConsole\\bin\r\nC:\\Program Files (x86)\\WindowsPowerShell\\Modules\r\nC:\\Program Files\\PowerShell\\Modules\r\nc:\\program files\\windowsapps\\microsoft.powershell_7.2.2.0_x64__8wekyb3d8bbwe\\Modules\r\nC:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules\r\n```\r\n\r\n#### Microsoft Store PowerShell Preview\r\n\r\n```\r\nC:\\Program Files (x86)\\Microsoft Azure Information Protection\\Powershell\r\nC:\\Program Files (x86)\\Microsoft Configuration Manager\\AdminConsole\\bin\r\nC:\\Program Files (x86)\\WindowsPowerShell\\Modules\r\nC:\\Program Files\\PowerShell\\Modules\r\nc:\\program files\\windowsapps\\microsoft.powershellpreview_7.3.3.0_x64__8wekyb3d8bbwe\\Modules\r\nC:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules\r\n```\r\n\r\n#### PowerShell 7.2.2 MSI\r\n\r\n```\r\nC:\\Program Files (x86)\\Microsoft Azure Information Protection\\Powershell\r\nC:\\Program Files (x86)\\Microsoft Configuration Manager\\AdminConsole\\bin\r\nC:\\Program Files (x86)\\WindowsPowerShell\\Modules\r\nc:\\program files\\powershell\\7\\Modules\r\nC:\\Program Files\\PowerShell\\Modules\r\nC:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules\r\n```\r\n\r\n### Error details\r\n\r\n_No response_\r\n\r\n### Environment data\r\n\r\n#### Microsoft Store PowerShell\r\n\r\n```\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.2\r\nPSEdition                      Core\r\nGitCommitId                    7.2.2\r\nOS                             Microsoft Windows 10.0.22000\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\n#### Microsoft Store PowerShell Preview\r\n\r\n```\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.3.0-preview.3\r\nPSEdition                      Core\r\nGitCommitId                    7.3.0-preview.3\r\nOS                             Microsoft Windows 10.0.22000\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\n#### PowerShell 7.2.2 MSI\r\n\r\n```\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.2\r\nPSEdition                      Core\r\nGitCommitId                    7.2.2\r\nOS                             Microsoft Windows 10.0.22000\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\n### Visuals\r\n\r\n_No response_",
  "closed_at": "2022-04-10T00:00:45Z",
  "comments": [
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "Hmm I can't repro this:\r\n\r\n```powershell\r\n> $env:PSModulePath -split ';'\r\nC:\\Users\\pmeinecke\\Documents\\PowerShell\\Modules\r\nC:\\Program Files\\PowerShell\\Modules\r\nc:\\program files\\powershell\\7\\Modules\r\nC:\\Program Files\\WindowsPowerShell\\Modules\r\nC:\\windows\\system32\\WindowsPowerShell\\v1.0\\Modules\r\n```\r\n\r\nCan you check\r\n\r\n```powershell\r\n[Environment]::GetEnvironmentVariable('PSModulePath', 'User')\r\n[Environment]::GetEnvironmentVariable('PSModulePath', 'Machine')\r\n```\r\n\r\nTo see if it's set somewhere? Also check `[IntPtr]::Size`",
      "created_at": "2022-04-07T14:14:43Z",
      "updated_at": "2022-04-07T14:14:43Z"
    },
    {
      "author": "o-l-a-v",
      "author_association": "NONE",
      "body": "Hmm, strange.\r\n\r\nI have some other strange problems on this laptop alone, for instance ```-AcceptLicense``` parameter does not work with ```PackageManagement\\Install-Package``` v1.4.7.\r\n\r\nOutput of ```[Environment]::GetEnvironmentVariable('PSModulePath', 'User')``` is nothing.\r\n\r\nMachine:\r\n\r\n```powershell\r\nPS C:\\Users\\<user>> [Environment]::GetEnvironmentVariable('PSModulePath', 'Machine').Split(';') | Sort-Object\r\n%ProgramFiles(x86)%\\WindowsPowerShell\\Modules\r\n%SystemRoot%\\system32\\WindowsPowerShell\\v1.0\\Modules\r\nC:\\Program Files (x86)\\Microsoft Azure Information Protection\\Powershell\r\nC:\\Program Files (x86)\\Microsoft Configuration Manager\\AdminConsole\\bin\r\nPS C:\\Users\\<user>>\r\n```\r\n\r\n```[IntPtr]::Size``` is 8.",
      "created_at": "2022-04-08T07:00:26Z",
      "updated_at": "2022-04-08T07:00:26Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "> ```powershell\r\n> %ProgramFiles(x86)%\\WindowsPowerShell\\Modules\r\n> %SystemRoot%\\system32\\WindowsPowerShell\\v1.0\\Modules\r\n> C:\\Program Files (x86)\\Microsoft Azure Information Protection\\Powershell\r\n> C:\\Program Files (x86)\\Microsoft Configuration Manager\\AdminConsole\\bin\r\n> ```\r\n\r\nIt seems like when one of the last two entries were written to the environment variable it was locked to the wrong bitness.\r\n\r\nThis is unfortunately a pretty common problem with .NET based installers do to how this particular API works. If folks alter an expand sz environment variable via this API, it loses `EXPAND` and hard codes the directories in the new variable value.\r\n\r\nHappens with `%PATH%` *a lot* but most of the time it's done by a 64 bit installer so it doesn't become an issue for most. You can change it in the registry or with `[Environment]::SetEnvironmentVariable('PSModulePath', $newValue, 'Machine')` as admin.\r\n",
      "created_at": "2022-04-08T13:42:05Z",
      "updated_at": "2022-04-08T13:42:05Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2022-04-10T00:00:44Z",
      "updated_at": "2022-04-10T00:00:44Z"
    }
  ],
  "created_at": "2022-04-07T08:48:57Z",
  "number": 17120,
  "state": "closed",
  "title": "```%ProgramW6432%\\WindowsPowerShell\\Modules``` not in ```$env:PSModulePath``` for PowerShell 7.2 nor 7.3",
  "updated_at": "2022-04-10T00:00:45Z"
}