{
  "_url": "https://github.com/PowerShell/PowerShell/issues/17145",
  "author": "chippey5",
  "body": "### Steps to reproduce\r\n\r\nPreviously I've been able to read event logs in user context using `Get-Winevent -FilterHashTable`. For some reason, I don't have permissions to filter the logs with `-FilterHashTable`. This can be tested with the following:\r\n\r\n```\r\n#Create Provider: \"Test\"\r\nNew-EventLog -LogName Application -Source \"Test\" -ErrorAction Ignore\r\n\r\n#Create an event under the provider we just created\r\nWrite-EventLog -LogName \"Application\" -Source \"Test\" -EventID 100 -EntryType Information -Message \"This is a test message\"\r\n\r\n#Filter out the event we just created\r\nGet-WinEvent -ErrorAction Ignore -FilterHashtable @{\r\n    ProviderName = \"Test\";\r\n    LogName      = \"Application\";\r\n}\r\n```\r\n\r\nWhen I run the last command as an Administrator however, it works. I can also find the event without `-FilterHashTable` (in user context) :\r\n\r\n```\r\n$logs = Get-WinEvent -LogName \"Application\" -MaxEvents 1000 -ErrorAction Ignore\r\n$logs | Where-Object {$_.ProviderName -eq \"Test\"}\r\n\r\n   ProviderName: Test\r\n\r\nTimeCreated                     Id LevelDisplayName Message\r\n-----------                     -- ---------------- -------\r\n2022-04-13 09:21:48            100 Information      This is a test message\r\n\r\n```\r\n\r\nTested on both PowerShell 5.1 (which comes shipped with W11) and PowerShell 7.2.2.\r\n\r\n### Expected behavior\r\n\r\n```console\r\nPS> Get-WinEvent -FilterHashtable @{\r\n    ProviderName = \"Test\";\r\n    LogName      = \"Application\";\r\n}\r\nProviderName: Test\r\n\r\nTimeCreated                     Id LevelDisplayName Message\r\n-----------                     -- ---------------- -------\r\n2022-04-13 09:21:48            100 Information      This is a test message\r\n```\r\n\r\n\r\n### Actual behavior\r\n\r\n```console\r\nPS> Get-WinEvent -FilterHashtable @{\r\n    ProviderName = \"Test\";\r\n    LogName      = \"Application\";\r\n}\r\nGet-WinEvent: There is not an event provider on the localhost computer that matches \"Test\".\r\nGet-WinEvent: The specified providers do not write events to any of the specified logs.\r\nGet-WinEvent: The parameter is incorrect.\r\n```\r\n\r\n\r\n### Error details\r\n\r\n```console\r\nPS> Get-Error\r\nException             :\r\n    Type       : System.Diagnostics.Eventing.Reader.EventLogException\r\n    Message    : The parameter is incorrect.\r\n    TargetSite :\r\n        Name          : Throw\r\n        DeclaringType : System.Diagnostics.Eventing.Reader.EventLogException\r\n        MemberType    : Method\r\n        Module        : System.Diagnostics.EventLog.dll\r\n    Source     : System.Diagnostics.EventLog\r\n    HResult    : -2146233088\r\n    StackTrace :\r\n   at System.Diagnostics.Eventing.Reader.EventLogException.Throw(Int32 errorCode)\r\n   at System.Diagnostics.Eventing.Reader.NativeWrapper.EvtQuery(EventLogHandle session, String path, String query, Int3\r\n2 flags)\r\n   at System.Diagnostics.Eventing.Reader.EventLogReader..ctor(EventLogQuery eventQuery, EventBookmark bookmark)\r\n   at System.Diagnostics.Eventing.Reader.EventLogReader..ctor(EventLogQuery eventQuery)\r\n   at Microsoft.PowerShell.Commands.GetWinEventCommand.ReadEvents(EventLogQuery logQuery)\r\n   at Microsoft.PowerShell.Commands.GetWinEventCommand.ProcessHashQuery()\r\n   at Microsoft.PowerShell.Commands.GetWinEventCommand.ProcessRecord()\r\n   at System.Management.Automation.CommandProcessor.ProcessRecord()\r\nCategoryInfo          : NotSpecified: (:) [Get-WinEvent], EventLogException\r\nFullyQualifiedErrorId : System.Diagnostics.Eventing.Reader.EventLogException,Microsoft.PowerShell.Commands.Get\r\nWinEventCommand\r\nInvocationInfo        :\r\n    MyCommand        : Get-WinEvent\r\n    ScriptLineNumber : 1\r\n    OffsetInLine     : 1\r\n    HistoryId        : 13\r\n    Line             : Get-WinEvent -FilterHashtable @{\r\n\r\n    PositionMessage  : At line:1 char:1\r\n                       + Get-WinEvent -FilterHashtable @{\r\n                       + ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    InvocationName   : Get-WinEvent\r\n    CommandOrigin    : Internal\r\nScriptStackTrace      : at <ScriptBlock>, <No file>: line 1\r\n```\r\n\r\n\r\n### Environment data\r\n\r\n```powershell\r\n1.\r\nName                           Value\r\n----                           -----\r\nPSVersion                      5.1.22000.282\r\nPSEdition                      Desktop\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nBuildVersion                   10.0.22000.282\r\nCLRVersion                     4.0.30319.42000\r\nWSManStackVersion              3.0\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\n\r\n2.\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.2\r\nPSEdition                      Core\r\nGitCommitId                    7.2.2\r\nOS                             Microsoft Windows 10.0.22000\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\n\r\n### Visuals\r\n\r\n_No response_",
  "closed_at": null,
  "comments": [
    {
      "author": "jdhitsolutions",
      "author_association": "COLLABORATOR",
      "body": "I just ran through the steps in 7.2.6 and 7.3-Preview8 with no issues.\r\n\r\n![image](https://user-images.githubusercontent.com/12089920/197059025-bf725569-b5de-414d-9eab-eefce90c393c.png)\r\n\r\n![image](https://user-images.githubusercontent.com/12089920/197059206-6ea465da-9112-40e0-97ab-c63694efced2.png)\r\n\r\nI was running in an elevated session in those examples. In a Non-elevated session, I get the error.\r\n\r\n![image](https://user-images.githubusercontent.com/12089920/197059627-ef15756b-4ad4-4438-a433-f1146eae646d.png)\r\n\r\nUsing an xPath filter DOES work in all situations.\r\n\r\n![image](https://user-images.githubusercontent.com/12089920/197061044-e05e6e1b-0d93-41ab-beb2-2fd92246451d.png)\r\n\r\nSo this would seem to point to a bug with `Filterhashtable`.",
      "created_at": "2022-10-20T21:22:01Z",
      "updated_at": "2022-10-20T21:22:01Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> When I run the last command as an Administrator however, it works.\r\n\r\nMSFT improved security on Windows 11 \ud83d\ude04 ",
      "created_at": "2022-10-21T03:05:04Z",
      "updated_at": "2022-10-21T03:05:04Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "This doesn't repro for me:\r\n\r\n![image](https://user-images.githubusercontent.com/11859881/198903443-c740c4f2-f398-4da3-9e7b-d5d7771324a6.png)\r\n\r\n",
      "created_at": "2022-10-30T21:57:23Z",
      "updated_at": "2022-10-30T21:57:23Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Try running with `-verbose` which will emit the created query.  Also, are you running anything that isn't en-US?",
      "created_at": "2022-10-30T21:59:46Z",
      "updated_at": "2022-10-30T22:00:31Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@chippey5 when it fails, can you try: wevtutil gp Test\r\n",
      "created_at": "2022-11-09T21:16:55Z",
      "updated_at": "2022-11-09T21:16:55Z"
    }
  ],
  "created_at": "2022-04-13T07:47:55Z",
  "labels": [
    "WG-Cmdlets",
    "Needs-Triage"
  ],
  "number": 17145,
  "state": "open",
  "title": "PowerShell Get-WinEvent -FilterHashTable generates error on Windows 11 in user context",
  "updated_at": "2022-11-09T21:16:56Z"
}