{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3534",
  "author": "jaredpar",
  "body": "I'm trying to understand how `Out-String` chooses to combine the input strings.  In particular, how it chooses what separators to insert between the strings.  The [documentation](https://msdn.microsoft.com/en-us/powershell/reference/5.1/microsoft.powershell.utility/out-string) only states the following:\r\n\r\n>  By default, Out-String accumulates the strings and returns them as a single string, but you can use the stream parameter to direct Out-String to return one string at a time. \r\n\r\nThis says nothing about inserting anything between the string objects being combined but in practice `Out-String` seems to do exactly this.  \r\n\r\n``` powershell\r\n> $lines = @('hello', 'world')  \r\n> $lines | Out-String\r\nhello\r\nworld\r\n\r\n>\r\n```\r\n\r\nThe `Out-String` command let appears to be inserting new line characters here.  Is this what is actually occurring and it's simply undocumented or there a more subtle behavior at work here that i'm missing?  Additionally what new line is inserted: `Environment.NewLine` or is it hard coded to a particular combination? \r\n",
  "closed_at": "2018-09-03T12:41:53Z",
  "comments": [
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "I believe it is a `Environment.Newline` based on this [code](https://github.com/PowerShell/PowerShell/blob/8d4db01a5d4b5dcd981ef216d3d7f24b484c7c60/src/Microsoft.PowerShell.Commands.Utility/commands/utility/FormatAndOutput/out-string/out-string.cs#L127) - assuming `StringBuilder.AppendLine` uses `Environment.Newline` on all targets.\r\n\r\nAs the documentation suggests - you can use the `-Stream` parameter if need different behavior.",
      "created_at": "2017-04-11T21:24:18Z",
      "updated_at": "2017-04-11T21:24:18Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@jaredpar: \r\n\r\nYou can think of `Out-String` as producing the same output as in the console (implied `Out-Host`):\r\n\r\nSince the default formatter is involved,\r\n\r\n  *  _multiple_ objects of the same type may be formatted _together_, so it's not a simple case of concatenating individual, self-contained representations.\r\n\r\n   * With an array of  _strings_ as the (only) input, however - given that strings are output as-is - the input strings are concatenated with - and invariably also _terminated_ with (see #3684) - a platform-appropriate newline each (`[environment]::NewLine`), as @lzybkr notes.\r\n\r\n   * The formatting of multiple _non-string objects_ results in a _combined_ representation (whose internal line breaks also use the platform-appropriate newline).\r\n\r\n      * If all input objects are of the _same_ type, you get predictable output; e.g.: `(Get-Item /), (Get-Item /) | Out-String`\r\n\r\n      * If the types are disparate, the output is hard to predict, because the _first_ object's type determines the formatting; compare `(Get-Date), (Get-Item /) | Out-String` to `(Get-Item /), (Get-Date) | Out-String`\r\n\r\n * Given the above, which applies to all `Out-` cmdlets (because they all use the default formatter), it's better to limit use of `Out-` cmdlets to creating output for _human eyeballs_ rather than machine-parsable output.\r\n \r\nIn the case of  a string array, perhaps the better  approach is to use `('hello', 'world') - join [environment]::newline` (which does _not_ add a trailing newline).\r\n\r\n",
      "created_at": "2017-05-02T19:31:34Z",
      "updated_at": "2018-09-03T12:44:48Z"
    },
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "@jaredpar We are also in the process of adding `Join-String`, a cmdlet specifically designed to create new strings from pipelined input. See #7660.",
      "created_at": "2018-09-04T06:09:36Z",
      "updated_at": "2018-09-04T06:09:36Z"
    }
  ],
  "created_at": "2017-04-11T20:09:55Z",
  "labels": [
    "Issue-Question",
    "Area-Maintainers-Documentation",
    "Resolution-Answered"
  ],
  "number": 3534,
  "state": "closed",
  "title": "Out-String concatenation behavior ",
  "updated_at": "2018-09-04T06:09:36Z"
}