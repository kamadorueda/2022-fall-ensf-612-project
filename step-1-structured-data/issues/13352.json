{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13352",
  "author": "yohosuff",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 and PowerShell 7+ issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6).\r\n\r\n-->\r\n\r\n## Steps to reproduce\r\n\r\nRun the script below in a new folder.\r\n\r\n```powershell\r\nif (Test-Path src){\r\n\tremove-item src -force -recurse\r\n}\r\n\r\nif (Test-Path dest){\r\n\tremove-item dest -force -recurse\r\n}\r\n\r\nNew-Item -ItemType directory -Path src | out-null\r\nNew-Item -ItemType directory -Path src\\foo | out-null\r\nNew-Item src\\foo.txt | out-null\r\nNew-Item src\\foo\\foo.txt | out-null\r\n\r\nmove-item -path \"src\\*\" -Destination \"dest\"\r\n```\r\n\r\nIt will create a simple folder structure like this...\r\n\r\n![image](https://user-images.githubusercontent.com/41205049/89348768-5b02a980-d66a-11ea-9906-612ff981916d.png)\r\n\r\n...and then move the contents of `src` into a new folder  `dest`.\r\n\r\n## Expected behavior\r\n\r\n![image](https://user-images.githubusercontent.com/41205049/89348972-afa62480-d66a-11ea-801a-35fb40464718.png)\r\n\r\n## Actual behavior\r\n\r\nWe end up with a folder structure like this...\r\n\r\n![image](https://user-images.githubusercontent.com/41205049/89348637-1b3bc200-d66a-11ea-8b7b-3888bd630dc0.png)\r\n\r\n...as well as the following error.\r\n\r\n![image](https://user-images.githubusercontent.com/41205049/89348462-d31c9f80-d669-11ea-9558-38fc6f0d9b0a.png)\r\n\r\nI assume the error appears because when `foo` is moved, the contents are moved instead of the whole folder, so `foo.txt` is moved directly under `dest`. When the root level `foo.txt` is then attempted to be moved, there is already a `foo.txt` in its destination path.\r\n\r\n## Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n![image](https://user-images.githubusercontent.com/3869624/89429782-399dce00-d6fb-11ea-812b-876575515ca1.png)\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "mkht",
      "author_association": "NONE",
      "body": "In this case, Move-Item performs a two-step operation in sequence.\r\nFirst, it RENAMES the `src/foo` folder to the `dest` folder.\r\nNext, it tries to MOVE the `src/foo.txt` file to the `dest` folder. However, there is already a `foo.txt` file in the `dest` folder and an error occurs.\r\n\r\nThat is, Move-Item will \"move\" the item if the destination already exists, but otherwise it will \"rename\" the item.\r\nI don't know if this behavior is intended or if it's a bug. Please wait for reply from PowerShell Pros. :-(\r\n\r\nAn easy workaround is to create a `dest` folder before you run Move-Item. This will allow you to achieve the behavior you expected.\r\n\r\n```PowerShell\r\nif (Test-Path src){\r\n\tremove-item src -force -recurse\r\n}\r\n\r\nif (Test-Path dest){\r\n\tremove-item dest -force -recurse\r\n}\r\n\r\nNew-Item -ItemType directory -Path src | out-null\r\nNew-Item -ItemType directory -Path src\\foo | out-null\r\nNew-Item src\\foo.txt | out-null\r\nNew-Item src\\foo\\foo.txt | out-null\r\n\r\n# Create a dest folder explicitly\r\nNew-Item -ItemType directory -Path dest | out-null\r\n\r\n# Then, move items\r\nmove-item -path \"src\\*\" -Destination \"dest\"\r\n```",
      "created_at": "2020-08-05T07:15:56Z",
      "updated_at": "2020-08-05T07:15:56Z"
    },
    {
      "author": "jdhitsolutions",
      "author_association": "COLLABORATOR",
      "body": "Couldn't `Move-Item` be modified to first create the destination if it doesn't exist? If it did, would that solve the original problem?",
      "created_at": "2020-08-26T22:22:16Z",
      "updated_at": "2020-08-26T22:22:16Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I see we need to review move-item design. I don't think it works as such alternative tools.\r\n/cc @mklement0 if you have an interest.",
      "created_at": "2021-01-17T14:59:22Z",
      "updated_at": "2021-01-17T14:59:22Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "We could follow the lead of the Unix `mv` utility:\r\n\r\n* If there are _multiple_ source items,  the target item must (a) exist and (b) must be a directory - otherwise an error occurs (that is, @mkht's workaround is the proper solution to avoid this problem).\r\n\r\nAdditionally, @jdhitsolutions' proposal - creation of a target folder on demand (unless a _file_ by that name already exists) - should probably be _opt-in_, via a switch such as `-Force` (though making `-Force` do many different things is problematic, I'm not aware of anything that it currently does in the file-system provider, so perhaps that is an option),\r\n",
      "created_at": "2021-01-17T17:46:39Z",
      "updated_at": "2021-01-17T17:46:39Z"
    }
  ],
  "created_at": "2020-08-04T21:58:43Z",
  "number": 13352,
  "state": "open",
  "title": "Move-Item explodes contents of first top-level folder",
  "updated_at": "2021-12-01T07:04:38Z"
}