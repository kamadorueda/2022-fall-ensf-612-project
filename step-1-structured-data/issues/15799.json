{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15799",
  "author": "hkystar35",
  "body": "### Prerequisites\n\n- [X] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\n\n### Steps to reproduce\n\nIn Pwsh 7.1.3 (and Windows PowerShell 5.1), the **BatteryStaticData** WMI class data cannot be called with CIM cmdlets.\r\n\r\nVerify Class exists:\r\n```ps\r\nPS C:\\> Get-CimClass -Namespace root/wmi -ClassName BatteryStaticData | Select-Object -Property *\r\n\r\nCimClassName        : BatteryStaticData\r\nCimSuperClassName   : MSBatteryClass\r\nCimSuperClass       : ROOT/wmi:MSBatteryClass\r\nCimClassProperties  : {Caption, Description, Name, Frequency_Object\u2026}\r\nCimClassQualifiers  : {dynamic, guid, localeid, provider\u2026}\r\nCimClassMethods     : {}\r\nCimSystemProperties : Microsoft.Management.Infrastructure.CimSystemProperties\r\n```\r\n\r\n\r\nI can also reproduce this error in Windows PowerShell 5.1\r\n\r\n____________________________________________________________\r\n\r\nAdditionally, in PowerShell 5.1, using the older `Get-WMIObject` command works as expected:\r\n```ps\r\nPS C:\\> Get-WmiObject -Namespace root/wmi -Class BatteryStaticData | select *\r\n\r\nPSComputerName     : REDACTED\r\n__GENUS            : 2\r\n__CLASS            : BatteryStaticData\r\n__SUPERCLASS       : MSBatteryClass\r\n__DYNASTY          : CIM_StatisticalInformation\r\n__RELPATH          : BatteryStaticData.InstanceName=\"ACPI\\\\PNP0C0A\\\\1_0\"\r\n__PROPERTY_COUNT   : 28\r\n__DERIVATION       : {MSBatteryClass, Win32_PerfRawData, Win32_Perf, CIM_StatisticalInformation}\r\n__SERVER           : REDACTED\r\n__NAMESPACE        : root\\wmi\r\n__PATH             : \\\\REDACTED\\root\\wmi:BatteryStaticData.InstanceName=\"ACPI\\\\PNP0C0A\\\\1_0\"\r\nActive             : True\r\nCapabilities       : 2147483648\r\nCaption            :\r\nChemistry          : 5269836\r\nCriticalBias       : 0\r\nDefaultAlert1      : 2060\r\nDefaultAlert2      : 6794\r\nDescription        :\r\nDesignedCapacity   : 68005\r\nDeviceName         : DELL REDACTED\r\nFrequency_Object   :\r\nFrequency_PerfTime :\r\nFrequency_Sys100NS :\r\nGranularity0       : 8847632630436\r\nGranularity1       : 292079250965156\r\nGranularity2       : 0\r\nGranularity3       : 0\r\nInstanceName       : ACPI\\PNP0C0A\\1_0\r\nManufactureDate    : **************.**********\r\nManufactureName    : SMP\r\nName               :\r\nSerialNumber       : 156\r\nTag                : 1\r\nTechnology         : 1\r\nTimestamp_Object   :\r\nTimestamp_PerfTime :\r\nTimestamp_Sys100NS :\r\nUniqueID           : 156SMPDELL REDACTED\r\nScope              : System.Management.ManagementScope\r\nPath               : \\\\REDACTED\\root\\wmi:BatteryStaticData.InstanceName=\"ACPI\\\\PNP0C0A\\\\1_0\"\r\nOptions            : System.Management.ObjectGetOptions\r\nClassPath          : \\\\REDACTED\\root\\wmi:BatteryStaticData\r\nProperties         : {Active, Capabilities, Caption, Chemistry...}\r\nSystemProperties   : {__GENUS, __CLASS, __SUPERCLASS, __DYNASTY...}\r\nQualifiers         : {dynamic}\r\nSite               :\r\nContainer          :\r\n```\n\n### Expected behavior\n\n```console\nPS C:\\> Get-CimInstance -Namespace root/wmi -ClassName BatteryStaticData | select *\r\n\r\nPSComputerName     : REDACTED\r\n__GENUS            : 2\r\n__CLASS            : BatteryStaticData\r\n__SUPERCLASS       : MSBatteryClass\r\n__DYNASTY          : CIM_StatisticalInformation\r\n__RELPATH          : BatteryStaticData.InstanceName=\"ACPI\\\\PNP0C0A\\\\1_0\"\r\n__PROPERTY_COUNT   : 28\r\n__DERIVATION       : {MSBatteryClass, Win32_PerfRawData, Win32_Perf, CIM_StatisticalInformation}\r\n__SERVER           : REDACTED\r\n__NAMESPACE        : root\\wmi\r\n__PATH             : \\\\REDACTED\\root\\wmi:BatteryStaticData.InstanceName=\"ACPI\\\\PNP0C0A\\\\1_0\"\r\nActive             : True\r\nCapabilities       : 2147483648\r\nCaption            :\r\nChemistry          : 5269836\r\nCriticalBias       : 0\r\nDefaultAlert1      : 2060\r\nDefaultAlert2      : 6794\r\nDescription        :\r\nDesignedCapacity   : 68005\r\nDeviceName         : DELL REDACTED\r\nFrequency_Object   :\r\nFrequency_PerfTime :\r\nFrequency_Sys100NS :\r\nGranularity0       : 8847632630436\r\nGranularity1       : 292079250965156\r\nGranularity2       : 0\r\nGranularity3       : 0\r\nInstanceName       : ACPI\\PNP0C0A\\1_0\r\nManufactureDate    : **************.**********\r\nManufactureName    : SMP\r\nName               :\r\nSerialNumber       : 156\r\nTag                : 1\r\nTechnology         : 1\r\nTimestamp_Object   :\r\nTimestamp_PerfTime :\r\nTimestamp_Sys100NS :\r\nUniqueID           : 156SMPDELL REDACTED\r\nScope              : System.Management.ManagementScope\r\nPath               : \\\\REDACTED\\root\\wmi:BatteryStaticData.InstanceName=\"ACPI\\\\PNP0C0A\\\\1_0\"\r\nOptions            : System.Management.ObjectGetOptions\r\nClassPath          : \\\\REDACTED\\root\\wmi:BatteryStaticData\r\nProperties         : {Active, Capabilities, Caption, Chemistry...}\r\nSystemProperties   : {__GENUS, __CLASS, __SUPERCLASS, __DYNASTY...}\r\nQualifiers         : {dynamic}\r\nSite               :\r\nContainer          :\n```\n\n\n### Actual behavior\n\n```console\nPS C:\\> Get-CimInstance -Namespace root/wmi -ClassName BatteryStaticData -Verbose | Select-Object -Property *\r\nVERBOSE: Perform operation 'Enumerate CimInstances' with following parameters, ''namespaceName' = root/wmi,'className' = BatteryStaticData'.\r\nGet-CimInstance: Generic failure\r\nVERBOSE: Operation 'Enumerate CimInstances' complete.\n```\n\n\n### Error details\n\n```console\nOriginInfo            :\r\nException             :\r\n    Type            : Microsoft.Management.Infrastructure.CimException\r\n    NativeErrorCode : Failed\r\n    ErrorData       : MSFT_WmiError\r\n    MessageId       : HRESULT 0x80041001\r\n    StatusCode      : 1\r\n    TargetSite      :\r\n        Name          : ProcessNativeCallback\r\n        DeclaringType : Microsoft.Management.Infrastructure.Internal.Operations.CimAsyncObserverProxyBase`1[T]\r\n        MemberType    : Method\r\n        Module        : Microsoft.Management.Infrastructure.dll\r\n    StackTrace      :\r\n   at Microsoft.Management.Infrastructure.Internal.Operations.CimAsyncObserverProxyBase`1.ProcessNativeCallback(Operati\r\nonCallbackProcessingContext callbackProcessingContext, T currentItem, Boolean moreResults, MiResult operationResult,\r\nString errorMessage, InstanceHandle errorDetailsHandle)\r\n    Message         : Generic failure\r\n    Source          : Microsoft.Management.Infrastructure\r\n    HResult         : -2146233088\r\nTargetObject          : root/wmi:BatteryStaticData\r\nCategoryInfo          : NotSpecified: (root/wmi:BatteryStaticData:String) [Get-CimInstance], CimException\r\nFullyQualifiedErrorId : HRESULT 0x80041001,Microsoft.Management.Infrastructure.CimCmdlets.GetCimInstanceCommand\r\nInvocationInfo        :\r\n    MyCommand        : Get-CimInstance\r\n    ScriptLineNumber : 1\r\n    OffsetInLine     : 1\r\n    HistoryId        : 13\r\n    Line             : Get-CimInstance -Namespace root/wmi -ClassName BatteryStaticData -Verbose | Select-Object\r\n-Property *\r\n    PositionMessage  : At line:1 char:1\r\n                       + Get-CimInstance -Namespace root/wmi -ClassName BatteryStaticData -Ver \u2026\r\n                       + ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    InvocationName   : Get-CimInstance\r\n    CommandOrigin    : Internal\r\nScriptStackTrace      : at <ScriptBlock>, <No file>: line 1\r\nPipelineIterationInfo :\n```\n\n\n### Environment data\n\n```powershell\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.3\r\nPSEdition                      Core\r\nGitCommitId                    7.1.3\r\nOS                             Microsoft Windows 10.0.19042\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\n```\n\n\n### Visuals\n\n_No response_",
  "closed_at": null,
  "comments": [
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "Trying to enumerate manually gives a more specific error message:\r\n\r\n```powershell\r\n$cim = [CimSession]::Create('.')\r\n$cim.EnumerateInstances('root/wmi', 'BatteryStaticData')\r\n# InvalidOperation: An error occurred while enumerating through a collection: The WS-Management service cannot process the request. The request contains an invalid datetime. The string **************.********** does not represent any of these types: xs:dateTime, xs:date, or xs:time..\r\n```\r\n\r\n<details>\r\n\r\n<summary>Get-Error output</summary>\r\n\r\n```powershell\r\n$Error[0].Exception.InnerException|Get-Error\r\n\r\nType            : Microsoft.Management.Infrastructure.CimException\r\nNativeErrorCode : Failed\r\nErrorData       : MSFT_WmiError\r\nMessageId       : HRESULT 0x80338041\r\nStatusCode      : 1\r\nTargetSite      :\r\n    Name          : MoveNext\r\n    DeclaringType : Microsoft.Management.Infrastructure.Internal.Operations.CimSyncEnumeratorBase`1[T]\r\n    MemberType    : Method\r\n    Module        : Microsoft.Management.Infrastructure.dll\r\nStackTrace      :\r\n   at Microsoft.Management.Infrastructure.Internal.Operations.CimSyncEnumeratorBase`1.MoveNext()\r\n   at System.Management.Automation.EnumerableOps.MoveNext(ExecutionContext context, IEnumerator enumerator)\r\nMessage         : The WS-Management service cannot process the request. The request contains an invalid datetime. The string\r\n**************.********** does not represent any of these types: xs:dateTime, xs:date, or xs:time.\r\nSource          : Microsoft.Management.Infrastructure\r\nHResult         : -2146233088\r\n```\r\n\r\n</details>\r\n",
      "created_at": "2021-07-19T17:16:08Z",
      "updated_at": "2021-07-19T17:16:08Z"
    },
    {
      "author": "hkystar35",
      "author_association": "NONE",
      "body": "Great addition, thank you @SeeminglyScience !\r\n\r\nVerified the same additional output:\r\n```ps\r\nPS C:\\> $cim = [CimSession]::Create('.')\r\nPS C:\\> $cim.EnumerateInstances('root/wmi', 'BatteryStaticData')\r\nInvalidOperation: An error occurred while enumerating through a collection: The WS-Management service cannot process the request. The request contains an invalid datetime. The string **************.********** does not represent any of these types: xs:dateTime, xs:date, or xs:time..\r\n```\r\n\r\n<details><summary>Get-Error details</summary><p>\r\n\r\n```ps\r\nPS C:\\> Get-Error\r\n\r\nException             :\r\n    Type           : System.Management.Automation.RuntimeException\r\n    ErrorRecord    :\r\n        Exception             :\r\n            Type    : System.Management.Automation.ParentContainsErrorRecordException\r\n            Message : An error occurred while enumerating through a collection: The WS-Management service cannot\r\nprocess the request. The request contains an invalid datetime. The string **************.********** does not represent\r\nany of these types: xs:dateTime, xs:date, or xs:time..\r\n            HResult : -2146233087\r\n        CategoryInfo          : InvalidOperation: (Microsoft.Managemen\u2026cInstanceEnumerator:CimSyncInstanceEnumerator)\r\n[], ParentContainsErrorRecordException\r\n        FullyQualifiedErrorId : BadEnumeration\r\n        InvocationInfo        :\r\n            ScriptLineNumber : 1\r\n            OffsetInLine     : 1\r\n            HistoryId        : -1\r\n            Line             : $cim.EnumerateInstances('root/wmi', 'BatteryStaticData')\r\n            PositionMessage  : At line:1 char:1\r\n                               + $cim.EnumerateInstances('root/wmi', 'BatteryStaticData')\r\n                               + ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n            CommandOrigin    : Internal\r\n        ScriptStackTrace      : at <ScriptBlock>, <No file>: line 1\r\n    TargetSite     :\r\n        Name          : MoveNext\r\n        DeclaringType : System.Management.Automation.EnumerableOps, System.Management.Automation, Version=7.1.3.0,\r\nCulture=neutral, PublicKeyToken=31bf3856ad364e35\r\n        MemberType    : Method\r\n        Module        : System.Management.Automation.dll\r\n    StackTrace     :\r\n   at System.Management.Automation.EnumerableOps.MoveNext(ExecutionContext context, IEnumerator enumerator)\r\n   at System.Management.Automation.EnumerableOps.WriteEnumerableToPipe(IEnumerator enumerator, Pipe pipe,\r\nExecutionContext context, Boolean dispose)\r\n   at System.Dynamic.UpdateDelegates.UpdateAndExecuteVoid3[T0,T1,T2](CallSite site, T0 arg0, T1 arg1, T2 arg2)\r\n   at System.Management.Automation.Interpreter.ActionCallInstruction`5.Invoke(Object arg0, Object arg1, Object arg2,\r\nObject arg3, Object arg4)\r\n   at System.Management.Automation.Interpreter.CallInstruction.InvokeInstance(Object instance, Object[] args)\r\n   at System.Management.Automation.Interpreter.DynamicInstructionN.Run(InterpretedFrame frame)\r\n   at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.Run(InterpretedFrame frame)\r\n    Message        : An error occurred while enumerating through a collection: The WS-Management service cannot\r\nprocess the request. The request contains an invalid datetime. The string **************.********** does not represent\r\nany of these types: xs:dateTime, xs:date, or xs:time..\r\n    Data           : System.Collections.ListDictionaryInternal\r\n    InnerException :\r\n        Type            : Microsoft.Management.Infrastructure.CimException\r\n        NativeErrorCode : Failed\r\n        ErrorData       : MSFT_WmiError\r\n        MessageId       : HRESULT 0x80338041\r\n        StatusCode      : 1\r\n        TargetSite      :\r\n            Name          : MoveNext\r\n            DeclaringType : Microsoft.Management.Infrastructure.Internal.Operations.CimSyncEnumeratorBase`1[T]\r\n            MemberType    : Method\r\n            Module        : Microsoft.Management.Infrastructure.dll\r\n        StackTrace      :\r\n   at Microsoft.Management.Infrastructure.Internal.Operations.CimSyncEnumeratorBase`1.MoveNext()\r\n   at System.Management.Automation.EnumerableOps.MoveNext(ExecutionContext context, IEnumerator enumerator)\r\n        Message         : The WS-Management service cannot process the request. The request contains an invalid\r\ndatetime. The string **************.********** does not represent any of these types: xs:dateTime, xs:date, or xs:time.\r\n        Source          : Microsoft.Management.Infrastructure\r\n        HResult         : -2146233088\r\n    Source         : System.Management.Automation\r\n    HResult        : -2146233087\r\nCategoryInfo          : InvalidOperation: (Microsoft.Managemen\u2026cInstanceEnumerator:CimSyncInstanceEnumerator) [],\r\nRuntimeException\r\nFullyQualifiedErrorId : BadEnumeration\r\nInvocationInfo        :\r\n    ScriptLineNumber : 1\r\n    OffsetInLine     : 1\r\n    HistoryId        : -1\r\n    Line             : $cim.EnumerateInstances('root/wmi', 'BatteryStaticData')\r\n    PositionMessage  : At line:1 char:1\r\n                       + $cim.EnumerateInstances('root/wmi', 'BatteryStaticData')\r\n                       + ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    CommandOrigin    : Internal\r\nScriptStackTrace      : at <ScriptBlock>, <No file>: line 1\r\n```</p></details>",
      "created_at": "2021-07-19T17:29:13Z",
      "updated_at": "2021-07-19T17:40:59Z"
    },
    {
      "author": "fMichaleczek",
      "author_association": "NONE",
      "body": "A little code, to determinate which property is failed.\r\n\r\n```\r\nGet-CimInstance -Namespace root/wmi -ClassName BatteryStaticData -KeyOnly | \r\nGet-Member -MemberType Properties | \r\nWhere-Object Name -ne PSComputerName | \r\nForEach-Object { $_.Name ; Get-CimInstance -Namespace root/wmi -ClassName BatteryStaticData -Property $_.Name | Out-Null }\r\n```\r\n\r\nSo it's ManufactureDate\r\n\r\nI exclude it.\r\n```\r\nGet-CimInstance -Namespace root/wmi -ClassName BatteryStaticData -Property 'Active', 'Capabilities', 'Caption', 'Chemistry', 'CriticalBias', 'DefaultAlert1', 'DefaultAlert2', 'Description', 'DesignedCapacity', 'DeviceName', 'Frequency_Object', 'Frequency_PerfTime', 'Frequency_Sys100NS', 'Granularity0', 'Granularity1', 'Granularity2', 'Granularity3', 'InstanceName', 'ManufactureName', 'Name', 'SerialNumber', 'Tag', 'Technology', 'Timestamp_Object', 'Timestamp_PerfTime', 'Timestamp_Sys100NS', 'UniqueID'\r\n```\r\n\r\nWorkaround is working :)\r\n\r\nThe WMI command shows the same value as you for my old Dell. \r\n`ManufactureDate    : **************.**********`\r\n\r\nI will test on another computer later.\r\n\r\n",
      "created_at": "2021-07-20T10:20:49Z",
      "updated_at": "2021-07-20T10:20:49Z"
    },
    {
      "author": "237dmitry",
      "author_association": "NONE",
      "body": "\u0421IM is much poorer than WMI in terms of functionality. But what we have, we use. A tribute to modern technologies at the expense of existing ones.",
      "created_at": "2021-07-20T15:56:57Z",
      "updated_at": "2021-07-20T15:56:57Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "The reason CIM fails here is essentially because it tries to be helpful and convert the wmi/cim datetime value to a usable DateTime object in .NET. Arguably, an improvement more than anything.\r\n\r\nIt would be a good idea to have a fallback to return the raw value (or just nothing), for cases like this where the property's value is unusable.",
      "created_at": "2021-07-20T16:12:07Z",
      "updated_at": "2021-07-20T16:12:26Z"
    },
    {
      "author": "fMichaleczek",
      "author_association": "NONE",
      "body": "> The reason CIM fails here is essentially because it tries to be helpful and convert the wmi/cim datetime value to a usable DateTime object in .NET. Arguably, an improvement more than anything.\r\n> \r\n> It would be a good idea to have a fallback to return the raw value (or just nothing), for cases like this where the property's value is unusable.\r\n\r\nThis issue should be moved to this repository https://github.com/PowerShell/MMI\r\n\r\n\n\n<blockquote><img src=\"https://opengraph.githubassets.com/aadc50178300335b30911ebbe2add4aaeff7aea91a6ecbe214a127b3e2262471/PowerShell/MMI\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/PowerShell/MMI\">PowerShell/MMI</a></strong></div><div>Contribute to PowerShell/MMI development by creating an account on GitHub.</div></blockquote>",
      "created_at": "2021-07-20T16:51:53Z",
      "updated_at": "2021-07-20T16:51:54Z"
    }
  ],
  "created_at": "2021-07-19T15:46:57Z",
  "number": 15799,
  "state": "open",
  "title": "Get-CimInstance -NameSpace root/wmi -ClassName \"BatteryStaticData\" throws generic failure",
  "updated_at": "2021-07-20T16:51:54Z"
}