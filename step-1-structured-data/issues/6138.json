{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6138",
  "author": "AlFeersum",
  "body": "Comparing two large arrays (~75K entries) with Compare-Object lists items common to both objects.  Comparing the two arrays by iterating through each element identifies entries that are different (which is what I'd expect Compare-Object to do).\r\n\r\nNote: this is borne out of the need to determine whether file repositories are in sync over globally distributed NAS devices.\r\n\r\nBelow, generate two arrays with the same content, with random differences scattered between both.\r\n\r\nDifference between Compare-Object and CompareArrays.ps1 (note: this script will take a long time to run, hence the need to use Compare-Object as this is _quick_!)\r\n\r\nSteps to reproduce\r\n------------------\r\nScript: genArrays.ps1\r\n\r\n```powershell\r\n#!/usr/bin/pwsh\r\n#requires -Version 6\r\n$Random = [System.Random]::New()\r\n\r\n$RandomStrings = @(\r\n    ([string]::Join(\"\", (0..25| ForEach-Object {$Random.Next(9)})))\r\n    ([string]::Join(\"\", (0..25| ForEach-Object {$Random.Next(9)})))\r\n    ([string]::Join(\"\", (0..25| ForEach-Object {$Random.Next(9)})))\r\n)\r\n\r\n$PathLength = 9\r\n$Records = 75000\r\n$RootPath = \"/root/instance/filestore100\"\r\n$Hostnames = \"host1.domain.local\", \"host2.domain.remote\"\r\n$Files = @(@(),@())\r\n$FileCount = @(0, 0)\r\n$FileRecord = @(@{}, @{})\r\n\r\n0..$Records|Foreach-Object {\r\n    $Record = $_\r\n    if ($Record % 1000 -eq 0) {\r\n        Write-Warning \"$($Record)\"\r\n    }\r\n    $Offset = $Random.Next(7)\r\n    $Filename = \"$($RootPath)/$($RandomStrings[0].SubString($Offset,$PathLength))/$($RandomStrings[1].SubString($Offset,$PathLength))/$($RandomStrings[2].SubString($Offset,$PathLength))/$([guid]::NewGuid().Guid)\"\r\n    $Size = $Random.Next(128*1mb)\r\n    if (($Random.Next() % 23) -eq 0) {\r\n        $AddSize = $Random.Next(1mb)\r\n    } elseif (($Random.Next() % 29) -eq 0) {\r\n        $AddSize = 0 - $Random.Next(1mb)\r\n    } else {\r\n        $AddSize = 0\r\n    }\r\n    if (($Random.Next() % 107) -ne 0) {\r\n        $Files[0] += @{\r\n            Host = $Hostnames[0]\r\n            Size = ($Size + $AddSize)\r\n            Filename = $Filename\r\n        }\r\n    }\r\n    if (($Random.Next() % 103) -ne 0) {\r\n        $Files[1] += @{\r\n            Host = $Hostnames[1]\r\n            Size = $Size\r\n            Filename = $Filename\r\n        }\r\n    }\r\n}\r\n$FileCount[0] = $Files[0].Size|Measure-Object -Sum\r\n$FileCount[1] = $Files[1].Size|Measure-Object -Sum\r\n\r\n$FileRecord[0] = @{\r\n    Used = $FileCount[0].Sum\r\n    Host = $Hostnames[0]\r\n    Filecount = $FileCount[0].Count\r\n    Files = $Files[0]\r\n    StorageType = \"Primary\"\r\n}\r\n\r\n$FileRecord[1] = @{\r\n    Used = $FileCount[1].Sum\r\n    Host = $Hostnames[1]\r\n    Filecount = $FileCount[1].Count\r\n    Files = $Files[1]\r\n    StorageType = \"Secondary\"\r\n}\r\n@{\r\n    Instance = \"Instance\"\r\n    Filestore = 100\r\n    Report = @($FileRecord[0],$FileRecord[1])\r\n    Root = \"/root/instance\"\r\n}\r\n\r\n```\r\n\r\nScript: CompareArrays.ps1\r\n```powershell\r\n#!/usr/bin/pwsh\r\n$Count = 0\r\n$FakeReport.Report[0].Files|Foreach-Object {\r\n        $Count++\r\n        if (($Count % 100) -eq 0) {\r\n                Write-Warning \"$Count\"\r\n        }\r\n        $FileObject = $_\r\n\r\n        $OrigIndex = $FakeReport.Report[0].Files.Filename.IndexOf($FileObject.Filename)\r\n        #$OrigIndex\r\n        $NewIndex = $FakeReport.Report[1].Files.Filename.IndexOf($FileObject.Filename)\r\n        #$NewIndex\r\n        if ($NewIndex -lt 0) {\r\n                $FakeReport.Report[0].Files[$OrigIndex]\r\n        }\r\n\r\n}\r\n$Count = 0\r\n$FakeReport.Report[1].Files|Foreach-Object {\r\n        $Count++\r\n        if (($Count % 100) -eq 0) {\r\n                Write-Warning \"$Count\"\r\n        }\r\n        $FileObject = $_\r\n\r\n        $OrigIndex = $FakeReport.Report[1].Files.Filename.IndexOf($FileObject.Filename)\r\n        $NewIndex = $FakeReport.Report[0].Files.Filename.IndexOf($FileObject.Filename)\r\n        if ($NewIndex -lt 0) {\r\n                $FakeReport.Report[1].Files[$OrigIndex]\r\n        }\r\n}\r\n\r\n```\r\n\r\nGenerate data:\r\n```powershell\r\n$FakeReport = ./genArrays.ps1\r\n```\r\nCompare data:\r\n```powershell\r\n$Result1 = Compare-Object $FakeReport.Report[0].Files $FakeReport.Report[1].Files -PassThru\r\n\r\n$Result2 = ./CompareArrays.ps1\r\n```\r\n\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```none\r\n$Result1 should have similar content to $Result2.  Entries in $Result1 should not exist in $FakeReport.Report[0].Files _and_ $FakeReport.Report[1].Files\r\n\r\n$Result2 contains entries that either do not exist in $FakeReport.Report[0].Files or do not exist in $FakeReport.Report[1].Files, which is what I would _expect_ to see in $Result1.\r\n\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n```none\r\n$Result1 contains items common to both $FakeReport.Report[0].Files and $FakeReport.Report[1].Files\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.1\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.1\r\nOS                             Linux 4.13.0-32-generic #35~16.04.1-Ubuntu SMP Thu Jan 25 10:13:43 UTC 2018\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "makorus",
      "author_association": "NONE",
      "body": "Having the very same issue. This seems to happen as soon as you compare two objects of different sizes (e.g. array1 = 5 items, array2 = 10 items).",
      "created_at": "2018-06-11T08:29:36Z",
      "updated_at": "2018-06-11T08:29:36Z"
    }
  ],
  "created_at": "2018-02-08T14:35:55Z",
  "number": 6138,
  "state": "open",
  "title": "BUG: Compare-Object shows inconsistent results for large arrays",
  "updated_at": "2018-06-11T08:29:36Z"
}