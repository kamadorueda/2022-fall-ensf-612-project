{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4471",
  "author": "richardszalay",
  "body": "I'm setting up CI to ensure my assembly-based module ([PsHosts](https://github.com/richardszalay/pshosts)) runs on Linux and macOS. The process builds on Appveyor/Windows since I'm targetting .NET 4.0 (for compat back to PS3) - the TravisCI builds then install the module from a MyGet feed and run the pester tests.\r\n\r\nThe Appveyor and Travis _Linux_ builds are both fine, but on Travis macOS calling any of the Cmdlets inside the assembly throw an error:\r\n\r\n> Could not load file or assembly 'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'. Could not find or load a specific file. (Exception from HRESULT: 0x80131621)\r\n\r\nIs this a known issue on macOS? Should I just hold off testing on macOS until a particular release/milestone?\r\n\r\nI'm using PowerShell's `install-powershell.sh` to bootstrap PS in the Travis builds.\r\n\r\nLinks to build logs if you're interested:\r\n\r\n- [Windows](https://ci.appveyor.com/project/richardszalay/pshosts/build/1.0.24)\r\n- [Linux](https://travis-ci.org/richardszalay/pshosts/jobs/260027318)\r\n- [macOS](https://travis-ci.org/richardszalay/pshosts/jobs/260027319)",
  "closed_at": "2017-08-05T02:38:11Z",
  "comments": [
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "I downloaded the v1.2.1 from https://github.com/richardszalay/pshosts/releases, and it works fine on my MacBook with beta.5:\r\n```\r\nPS:3> Import-Module /Users/usr/Downloads/PsHosts                                                                   \r\nPS:4> gmo                                                                                                                  \r\n\r\nModuleType Version    Name                                ExportedCommands                                                \r\n---------- -------    ----                                ----------------                                                \r\nManifest   3.1.0.0    Microsoft.PowerShell.Management     {Add-Content, Clear-Content, Clear-Item, Clear-ItemProperty...} \r\nManifest   3.1.0.0    Microsoft.PowerShell.Utility        {Add-Member, Add-Type, Clear-Variable, Compare-Object...}       \r\nBinary     1.2.1      PsHosts                             {Add-HostEntry, Disable-HostEntry, Enable-HostEntry, Get-Host...\r\nScript     1.2        PSReadLine                          {Get-PSReadlineKeyHandler, Get-PSReadlineOption, Remove-PSRea...\r\n\r\nPS:5> $result = Add-HostEntry -Name \"hostname\" -Address \"10.10.10.10\"                                                      \r\nPS:6> $result                                                                                                              \r\n\r\nName                             Address                          Enabled \r\n----                             -------                          ------- \r\nhostname                         10.10.10.10                      True    \r\n\r\nPS:7> Get-HostEntry                                                                                                        \r\n\r\nName                             Address                          Enabled \r\n----                             -------                          ------- \r\nbroadcasthost                    255.255.255.255                  True    \r\nhostname                         10.10.10.10                      True    \r\n\r\nPS:8> $PSVersionTable                                                                                                      \r\n\r\nName                           Value                                                                                      \r\n----                           -----                                                                                      \r\nPSVersion                      6.0.0-beta                                                                                 \r\nPSEdition                      Core                                                                                       \r\nGitCommitId                    v6.0.0-beta.5                                                                              \r\nOS                             Darwin 16.0.0 Darwin Kernel Version 16.0.0: Mon Aug 29 17:56:20 PDT 2016; root:xnu-3789....\r\nPlatform                       Unix                                                                                       \r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}                                                                    \r\nPSRemotingProtocolVersion      2.3                                                                                        \r\nSerializationVersion           1.1.0.1                                                                                    \r\nWSManStackVersion              3.0\r\n```\r\n\r\n/cc @TravisEz13 maybe something with the `install-powershell.sh` script and the environment setup?",
      "created_at": "2017-08-04T18:11:57Z",
      "updated_at": "2017-08-04T18:11:57Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "I created a clean macOS VM and installed PowerShell using `install-powershell.sh` and it also worked.",
      "created_at": "2017-08-04T21:30:44Z",
      "updated_at": "2017-08-04T21:30:44Z"
    },
    {
      "author": "richardszalay",
      "author_association": "NONE",
      "body": "Strange. I'll try to follow it up with the Travis CI guys, but failing that I'll just have to list macOS as unsupported.",
      "created_at": "2017-08-04T21:42:17Z",
      "updated_at": "2017-08-04T21:42:17Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "I went to try to run your CI to see if I can repro the problem but I cannot.  You don't seem to build your module in your CI (see [Practices of CI](https://martinfowler.com/articles/continuousIntegration.html#PracticesOfContinuousIntegration)).  You just get the module from a gallery here:\r\nhttps://github.com/richardszalay/pshosts/blob/master/build/travis.ps1#L1\r\nand the location isn't declared in the `travis.yml`\r\n\r\nPerhaps there is a difference between the module in the releases section and in this gallery?",
      "created_at": "2017-08-04T21:42:49Z",
      "updated_at": "2017-08-04T21:42:49Z"
    },
    {
      "author": "richardszalay",
      "author_association": "NONE",
      "body": "Conceptually there could be a difference as the MyGet version is built in AppVeyor (despite using the same build process). I think I'm using the VS2017 image in order to get access to WM5 (to patch the version number with Update-ModuleManifest). Could that be related?\r\n\r\nThe strange thing is it all runs fine in Travis' Linux build.",
      "created_at": "2017-08-04T21:58:50Z",
      "updated_at": "2017-08-04T22:02:24Z"
    },
    {
      "author": "richardszalay",
      "author_association": "NONE",
      "body": "(I can't build the module on Linux because I still support PS3, which is net40. I'll eventually drop that for a new major version)",
      "created_at": "2017-08-04T22:00:55Z",
      "updated_at": "2017-08-04T22:00:55Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "What about having an AppVeyor build to build the net40 version and use their [project NuGet feed](https://www.appveyor.com/docs/nuget/#project-nuget-feeds) as a PowerShell Gallery to host the dev version of the module?  Then you could make the URL of the feed public.  We do this (targeting windows only) in our PS DSC Resource repos.",
      "created_at": "2017-08-04T22:12:51Z",
      "updated_at": "2017-08-04T22:13:21Z"
    },
    {
      "author": "richardszalay",
      "author_association": "NONE",
      "body": "I started in that direction but got blocked by the project feed being read only apart from automatically publishing .nupkg files, but no documented way of package a PS module as a nupkg (I dug through the PsGet source for an exported cndlet, but to no avail). If you can shoot me a link to docs or an example, I'm happy to do that instead.\r\n\r\nHere's the public myget feed link if it helps: https://www.myget.org/F/pshosts\r\n\r\n",
      "created_at": "2017-08-04T22:25:28Z",
      "updated_at": "2017-08-04T22:25:28Z"
    },
    {
      "author": "richardszalay",
      "author_association": "NONE",
      "body": "(eventually the appveyor build will trigger the Travis build via a web hook, buy I'm just trying to get everything working to start with)",
      "created_at": "2017-08-04T22:26:55Z",
      "updated_at": "2017-08-04T22:26:55Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "just `register-psrepository` a local path and then `publish-module` to that repository.  Then you can just publish as artifacts all the nupkg's from that folder.  BTW, Only works on windows.",
      "created_at": "2017-08-04T22:31:29Z",
      "updated_at": "2017-08-04T22:32:42Z"
    },
    {
      "author": "richardszalay",
      "author_association": "NONE",
      "body": "My understanding is that Appveyor won't let you do that, that you can only publish to the project feed by having a nupkg artifact from your build.",
      "created_at": "2017-08-04T22:35:32Z",
      "updated_at": "2017-08-04T22:35:32Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "yes, do this during your AppVeyor build.  You can use `Push-AppVeyorArtifact` and everything you find in the folder.",
      "created_at": "2017-08-04T22:36:28Z",
      "updated_at": "2017-08-04T22:38:30Z"
    },
    {
      "author": "richardszalay",
      "author_association": "NONE",
      "body": "Will give it a go, though I'm still unsure how this will resolve the macOS issue. I'll let you know how it goes.",
      "created_at": "2017-08-04T22:39:41Z",
      "updated_at": "2017-08-04T22:39:41Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "I'm not sure it will solve the macOS issue, but having a public CI definition means that I can run it and repro your problem.  BTW, I tried the MyGet feed and still wasn't able to repro the issue.  We also use Travis-ci for macOS testing.  So, I'm confused at where the difference is.",
      "created_at": "2017-08-04T22:42:35Z",
      "updated_at": "2017-08-04T22:42:42Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "We are basically chatting here.  How about we close this issue and chat on gitter (preferred) or twitter.\r\n\r\nGitter:  https://gitter.im/TravisEz13/home\r\ntwitter: travisplunk",
      "created_at": "2017-08-04T23:08:44Z",
      "updated_at": "2017-08-04T23:08:44Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "Root cause was found, and filed issue #4505 ",
      "created_at": "2017-08-05T02:38:11Z",
      "updated_at": "2017-08-05T02:38:11Z"
    },
    {
      "author": "richardszalay",
      "author_association": "NONE",
      "body": "Confirmed that #4506 fixed the issue. Thanks Travis!",
      "created_at": "2017-08-09T03:02:16Z",
      "updated_at": "2017-08-09T03:02:16Z"
    }
  ],
  "created_at": "2017-08-03T00:49:44Z",
  "labels": [
    "Issue-Question",
    "Resolution-Answered"
  ],
  "number": 4471,
  "state": "closed",
  "title": " Could not load file or assembly 'mscorlib' on macOS",
  "updated_at": "2017-08-09T03:02:17Z"
}