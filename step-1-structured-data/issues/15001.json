{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15001",
  "author": "rtestardi",
  "body": "## update by @TravisEz13 on 2021/4/28:\r\n\r\nsimplified repro:\r\n```\r\npwsh -noprofile -c {start-job { start-sleep 30 }; start-sleep 60}\r\n```\r\n\r\n## original issue\r\n\r\nHopefully I just don't understand, again! :-)\r\n\r\n\r\nI'm running this command on Linux pwsh 7.1.2:\r\n\r\n\r\n\r\n```\r\necho \"start-job { start-sleep 30 }; start-sleep 60\" >test.ps1; powershell (join-path . test.ps1)\r\n```\r\n\r\nWhile it is running, just after the background job starts but before it finishes, I press Ctrl-C.\r\n\r\nNothing happens (until the 60 seconds finishes and the script completes).\r\n\r\nI logged into Linux using ssh and then typed \"powershell\" to launch powershell in the same terminal window.\r\n\r\nThis works on Windows PS Core, and well as Windows desktop PS (Ctrl-C returns to the command prompt immediately).\r\n\r\nThanks for any help for a workaround!\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "rtestardi",
      "author_association": "NONE",
      "body": "PS color me surprised -- the hang time seems somewhat fixed, independent of the sleep times?\r\n\r\n```\r\nPS /home/storsimple> $d=get-date; echo \"start-job { start-sleep 30 }; start-sleep 200\" >test.ps1; powershell (join-path . test.ps1)\r\n\r\nId     Name            PSJobTypeName   State         HasMoreData     Location             Command\r\n--     ----            -------------   -----         -----------     --------             -------\r\n1      Job1            BackgroundJob   Running       True            localhost             start-sleep 30\r\nPS /home/storsimple> ((get-date)-$d).totalseconds\r\n62.9565988\r\nPS /home/storsimple> get-job | remove-job\r\nPS /home/storsimple> $d=get-date; echo \"start-job { start-sleep 30 }; start-sleep 20\" >test.ps1; powershell (join-path . test.ps1)\r\n\r\nId     Name            PSJobTypeName   State         HasMoreData     Location             Command\r\n--     ----            -------------   -----         -----------     --------             -------\r\n1      Job1            BackgroundJob   Running       True            localhost             start-sleep 30\r\nPS /home/storsimple> ((get-date)-$d).totalseconds\r\n62.0291922\r\nPS /home/storsimple> get-job | remove-job\r\nPS /home/storsimple> $d=get-date; echo \"start-job { start-sleep 90 }; start-sleep 20\" >test.ps1; powershell (join-path . test.ps1)\r\n\r\nId     Name            PSJobTypeName   State         HasMoreData     Location             Command\r\n--     ----            -------------   -----         -----------     --------             -------\r\n1      Job1            BackgroundJob   Running       True            localhost             start-sleep 90\r\nPS /home/storsimple> ((get-date)-$d).totalseconds\r\n62.3322423\r\nPS /home/storsimple>\r\n```",
      "created_at": "2021-03-11T22:45:54Z",
      "updated_at": "2021-03-11T22:45:54Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "I think this is by-design, as the job you're starting is executing out-of-proc. So you're starting a `powershell` instance, and then that instance is starting a new process to run the job in. \r\n\r\nAs for the 62 seconds you're seeing with all of those scripts....I have no idea. That doesn't make sense to me. Looping in @PaulHigin as he might know",
      "created_at": "2021-03-17T00:31:04Z",
      "updated_at": "2021-03-17T00:31:04Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "I'm able to repro on macOS with this \r\n```powershell\r\npwsh -noprofile -c {start-job { start-sleep 30 }; start-sleep 60}\r\n```\r\n\r\nIf I run this command in the current process I cannot reproduce the issue.",
      "created_at": "2021-03-17T21:22:11Z",
      "updated_at": "2021-03-17T21:22:39Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "I think this may be a known issue with SIGINT handling in .NET on non-windows.  cc @JamesWTruher ",
      "created_at": "2021-03-17T21:27:06Z",
      "updated_at": "2021-03-17T21:27:06Z"
    }
  ],
  "created_at": "2021-03-11T22:18:11Z",
  "labels": [
    "Issue-Bug",
    "Issue-Question",
    "WG-Remoting"
  ],
  "number": 15001,
  "state": "open",
  "title": "PowerShell does not honor Ctrl-C on Linux with jobs outstanding?",
  "updated_at": "2021-04-28T21:25:49Z"
}