{
  "_url": "https://github.com/PowerShell/PowerShell/issues/14456",
  "author": "mardukbp",
  "body": "## Steps to reproduce\r\n\r\nInstall [Oracle XE 11g](https://www.oracle.com/database/technologies/xe-prior-releases.html)\r\n\r\n```powershell\r\n (ps -Name TNSLSNR).CommandLine\r\n```\r\n\r\n## Expected behavior\r\n\r\n```none\r\nC:\\oraclexe\\app\\oracle\\product\\11.2.0\\server\\bin\\tnslsnr.exe\r\n```\r\n\r\n## Actual behavior\r\n\r\n```none\r\nNo output\r\n```\r\n\r\n## Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.0\r\nPSEdition                      Core\r\nGitCommitId                    7.1.0\r\nOS                             Microsoft Windows 10.0.19041\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2020-12-20T12:00:06Z",
  "comments": [
    {
      "author": "mardukbp",
      "author_association": "NONE",
      "body": "It works with PowerShell running as Administrator.",
      "created_at": "2020-12-18T15:28:10Z",
      "updated_at": "2020-12-18T15:28:10Z"
    },
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "Isn't this just an issue of access rights?\r\nNone of the windows management tools I know of displays a command line for admin processes when executing under a non-privileged account.\r\nYou have to read the memory of the other process to determine the command line, and you don't have the required rights to do that.",
      "created_at": "2020-12-18T16:11:55Z",
      "updated_at": "2020-12-18T16:11:55Z"
    },
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "What was your expectation?",
      "created_at": "2020-12-18T16:12:45Z",
      "updated_at": "2020-12-18T16:12:45Z"
    },
    {
      "author": "mardukbp",
      "author_association": "NONE",
      "body": "When I run the Task Manager using `Ctrl-Alt-Del` it shows the command line of the process. Is it running using Admin privileges?\r\n\r\n> You have to read the memory of the other process to determine the command line, and you don't have the required rights to do that.\r\n\r\nFair enough. I think this is what PowerShell should tell the user. Then you know what to do. It is not obvious that you are allowed to read the rest of the information about the process, but not the command line.",
      "created_at": "2020-12-18T16:28:08Z",
      "updated_at": "2020-12-18T16:28:08Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "> Fair enough. I think this is what PowerShell should tell the user. Then you know what to do. It is not obvious that you are allowed to read the rest of the information about the process, but not the command line.\r\n\r\nHard to do for a property.  PowerShell by design swallows any exceptions that a property getter throws and instead just displays nothing.",
      "created_at": "2020-12-18T18:18:27Z",
      "updated_at": "2020-12-18T18:18:27Z"
    },
    {
      "author": "mardukbp",
      "author_association": "NONE",
      "body": "IMHO that is not how exceptions are supposed to be used. An exception should be thrown when something unexpected happens and of course the user should know about it.\n\nPowerShell happily throws up lots of red text due to a syntax error, but it remains silent when an exception occurs?\n",
      "created_at": "2020-12-18T18:35:15Z",
      "updated_at": "2020-12-18T18:35:15Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "Only when thrown by the method that obtains a value from a property.  Note that I'm not necessarily saying it was or wasn't a good idea, but changing it now would break a lot of folks.",
      "created_at": "2020-12-18T19:08:15Z",
      "updated_at": "2020-12-18T19:08:15Z"
    },
    {
      "author": "jborean93",
      "author_association": "COLLABORATOR",
      "body": "Task manager is a special process where it's run as elevated by default without having to prompt through UAC. It's signed by a specific Microsoft cert which allows it to do so and that's why it can see the command line. So you need to be running as admin and the only action I can reliably see here is for the docs to be updated to state that is the case. As @SeeminglyScience says, changing the behaviour now could break existing scripts so not really something that could be done.",
      "created_at": "2020-12-18T22:39:24Z",
      "updated_at": "2020-12-18T22:39:24Z"
    },
    {
      "author": "mardukbp",
      "author_association": "NONE",
      "body": "Thank you for the detailed explanation. I wanted to know how the Task Manager does it.\n\nYes, I also wanted to suggest updating the docs.\n",
      "created_at": "2020-12-19T09:45:41Z",
      "updated_at": "2020-12-19T09:45:44Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2020-12-20T12:00:05Z",
      "updated_at": "2020-12-20T12:00:05Z"
    }
  ],
  "created_at": "2020-12-18T15:11:25Z",
  "labels": [
    "Issue-Question",
    "Resolution-Answered"
  ],
  "number": 14456,
  "state": "closed",
  "title": "CommandLine property is empty when user has insufficient privileges",
  "updated_at": "2020-12-20T12:00:06Z"
}