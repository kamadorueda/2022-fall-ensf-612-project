{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5425",
  "author": "mklement0",
  "body": "<sup>Related: #4613</sup>\r\n\r\nThe `.HadErrors` property of `[System.Management.Automation.PowerShell]` currently invariably - and unexpectedly - reflects `$True` in the following situations:\r\n\r\n* an external utility reports a nonzero exit code - even overriding `$LASTEXITCODE` later doesn't help that.\r\n\r\n* something writes to PowerShell's error stream, notably including stderr output from an external utility.\r\n\r\nGenerally, having a _separate property_ that reflects `$LASTEXITCODE` would be helpful - see #5426\r\n\r\nExamples\r\n---------\r\n\r\n```powershell\r\n# Yields $True - triggered by nonzero exit code \r\n$ps = [PowerShell]::Create().AddScript({ whoami -nosuch }); $ps.Invoke(); $ps.HadErrors\r\n\r\n# Unexpectedly also yields $True - despite attempt to set the exit code to 0.\r\n$ps = [PowerShell]::Create().AddScript({ whoami -nosuch; $LASTEXITCODE = 0 }); $ps.Invoke(); $ps.HadErrors\r\n\r\n# Unexpectedly also yields $True - triggered by native stderr output.\r\n$ps = [PowerShell]::Create().AddScript({ bash -c 'echo err >&2'  }); $ps.Invoke(); $ps.HadErrors\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n```powershell\r\nPowerShell Core v6.0.0-beta.9 on macOS 10.13\r\nPowerShell Core v6.0.0-beta.9 on Ubuntu 16.04.3 LTS\r\nPowerShell Core v6.0.0-beta.9 on Microsoft Windows 10 Pro (64-bit; v10.0.15063)\r\nWindows PowerShell v5.1.15063.674 on Microsoft Windows 10 Pro (64-bit; v10.0.15063)\r\n\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "When running a native utility in `S.M.A.PowerShell`, the standard output/error are always redirected to PowerShell output/error streams. The pipeline would detect there are things written into error stream and thus set `HadErrors` to true.\r\n```powershell\r\n> $ps = [PowerShell]::Create().AddScript({ whoami -nosuch; \"Error: $($Error[0])\" }); $ps.Invoke()\r\nError: Try '/usr/bin/whoami --help' for more information.\r\n```\r\n\r\nWhen running the native utility standalone in an interactive PowerShell session, standard output/error are not redirected, and thus `$Error` doesn't have the error output.\r\n```powershell\r\n> whoami -nosuch;\r\n/usr/bin/whoami: invalid option -- 'n'\r\nTry '/usr/bin/whoami --help' for more information.\r\n> $Error.Count\r\n0\r\n```",
      "created_at": "2017-11-12T18:45:45Z",
      "updated_at": "2017-11-12T18:56:06Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Treating stderr output as an error is plainly wrong as many utils use that as a `verbose` type channel so that it doesn't disrupt the actual output from stdout.  Checking exitcode is better although it's only a convention that non-zero means error.",
      "created_at": "2017-12-13T00:38:21Z",
      "updated_at": "2017-12-13T00:38:21Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks, @daxian-dbw and @SteveL-MSFT.\r\n\r\nHaving just come across this again and being somewhat confused by my own initial post, let me try to summarize:\r\n\r\n* That _any stderr output_ currently causes `.HadErrors` to become `$true` is inappropriate and should be fixed.\r\n\r\n* Similarly, that an external-program call reporting a nonzero exit currently _by default_ causes `.HadErrors` to be `$true` (irrespective of whether it is the _last_ external program called) is inappropriate and should be fixed.\r\n\r\n  * Only with `$PSNativeCommandUseErrorActionPreference = $true`  in effect (via the _experimental_ `PSNativeCommandErrorActionPreference` feature as of pre-v7.3)  is that behavior appropriate.\r\n   \r\n  * As noted in the initial post, it would be desirable to have a `.LastExitCode` _property_ that reflects the value of `$LASTEXITCODE`.\r\n\r\n",
      "created_at": "2022-10-21T15:23:29Z",
      "updated_at": "2022-10-24T21:52:30Z"
    }
  ],
  "created_at": "2017-11-12T13:39:48Z",
  "labels": [
    "WG-Engine",
    "Issue-Discussion"
  ],
  "number": 5425,
  "state": "open",
  "title": "The HadErrors property of System.Management.Automation.PowerShell reports $True in unexpected scenarios",
  "updated_at": "2022-10-24T21:52:30Z"
}