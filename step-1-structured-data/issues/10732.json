{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10732",
  "author": "SeeminglyScience",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n\r\n-->\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\n$pso = & {\r\n    [CmdletBinding()]\r\n    param() end {\r\n        $a = [psobject]'some string'\r\n        $a.psobject.Properties.Add([psnoteproperty]::new('Prop1', 'value'))\r\n        $PSCmdlet.WriteObject($a, $false)\r\n    }\r\n}\r\n\r\n$pso.Prop1\r\n```\r\n\r\n# Expected behavior\r\n\r\n```none\r\nvalue\r\n```\r\n\r\n# Actual behavior\r\n\r\n```none\r\n# Nothing is returned because the psobject wrapped was discarded.\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-preview.4\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-preview.4\r\nOS                             Microsoft Windows 10.0.18362\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\n# Notes\r\n\r\nBecause the argument for `WriteObject` is typed as `object` instead of `psobject`, the binder unwraps the string.  This is typically by design, but may not be desirable in this instance.\r\n\r\nAs a workaround, you can replace `$PSCmdlet.WriteObject($a, $false)` with `,$a`.\r\n",
  "closed_at": null,
  "comments": [],
  "created_at": "2019-10-08T15:35:01Z",
  "labels": [
    "Issue-Question",
    "WG-Engine"
  ],
  "number": 10732,
  "state": "open",
  "title": "$PSCmdlet.WriteObject unwraps PSObjects when called from PowerShell",
  "updated_at": "2019-10-09T10:06:05Z"
}