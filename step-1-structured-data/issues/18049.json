{
  "_url": "https://github.com/PowerShell/PowerShell/issues/18049",
  "author": "mklement0",
  "body": "### Prerequisites\n\n- [X] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\n\n### Steps to reproduce\n\nNote: The following may seem contrived, but it's actually useful to work around the limitation in C# 9 and below of not being able to use parameter-_less_ constructors in `struct`s.\r\n\r\n```powershell\r\nAdd-Type @'\r\npublic struct MyConfig\r\n{\r\n    // Note the `int unused = 0` dummy parameter with a default value.\r\n    public MyConfig(int unused = 0) { level = 42; }\r\n    public int level;\r\n}\r\n'@\r\n\r\nNew-Object MyConfig  # !! Constructor is NOT called.\r\n[MyConfig]::new()         # OK: constructor is called.\r\n```\r\n\n\n### Expected behavior\n\n```console\nlevel\r\n-----\r\n   42\r\n   42\n```\n\n\n### Actual behavior\n\n```console\nlevel\r\n-----\r\n    0\r\n   42\n```\n\n\n### Error details\n\n_No response_\n\n### Environment data\n\n```powershell\nPowerShell Core 7.3.0-preview.7\n```\n\n\n### Visuals\n\n_No response_",
  "closed_at": null,
  "comments": [
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "~~Related (but not dupe) #13674~~ Eh not really",
      "created_at": "2022-09-07T15:23:00Z",
      "updated_at": "2022-09-19T20:21:52Z"
    }
  ],
  "created_at": "2022-09-07T12:55:29Z",
  "number": 18049,
  "state": "open",
  "title": "Static ::new() method honors a single-parameter constructor whose parameter is optional, while New-Object does not",
  "updated_at": "2022-09-19T20:22:19Z"
}