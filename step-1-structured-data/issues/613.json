{
  "_url": "https://github.com/PowerShell/PowerShell/issues/613",
  "author": "palladia",
  "body": "This update fixes two things:\n1.  Add support for Ctrl-C to interrupt current command input.  Similar to Windows behavior, it appends ^C to end of command line, and prints a new prompt.\n2.  Add multi-line command capability for script debugger that was mistakenly left out in a previous update.\n\n<!-- Reviewable:start -->\n\n---\n\nThis change is [<img src=\"https://reviewable.io/review_button.svg\" height=\"35\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/powershell/powershell/613)\n\n<!-- Reviewable:end -->\n",
  "closed_at": "2016-03-24T00:18:28Z",
  "comments": [
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "The summary message for commit 14e8dacc1ef7b1aa2e6b55ff7982b40a1ec28178 is far longer than it should be. This [template](http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html) is what all Git commit messages should follow.\n",
      "created_at": "2016-03-02T22:42:04Z",
      "updated_at": "2016-03-02T22:42:04Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Your notes in the PR description are what should be the body of the commit message. Keep in mind that PRs are not permanent (they exist only on GitHub); only the Git commit messages are actually tied to the project. Be as descriptive as you can with your commit messages.\n",
      "created_at": "2016-03-02T22:43:06Z",
      "updated_at": "2016-03-02T22:43:06Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Just reiterating information from phone conversations; we have a couple things going on here:\n- We should not sleep our `ReadLine` thread as this breaks shell responsiveness (keys are updated only when the thread wakes up; not when the user hit a key)\n- `Console.KeyAvailable` appears broken in that it is only returning true when `Enter` was hit; at which point all the previous buffered key strokes came through\n- `TreatControlCAsInput` is not implemented and would be a pain to get implemented; if it were implemented, we'd have to be really careful to enable and disable it appropriately so that the handler is called appropriately during pipeline execution\n- It would not be totally odd for `Esc` to handle clearing multi-line input, as it already clears single-line input; I understand it is different from Windows, and that is acceptable as the alternatives are not viable\n",
      "created_at": "2016-03-03T20:49:09Z",
      "updated_at": "2016-03-03T20:49:09Z"
    },
    {
      "author": "palladia",
      "author_association": "CONTRIBUTOR",
      "body": "I'm not too concerned about responsiveness.  I did a quick web search, and the fastest one could type is about 12 strokes a second, or about 83 milliseconds between strokes.  If I change sleep to 80 milliseconds, it should be plenty to keep up with fastest typist.\n\nAs for second item, I assume a fix is forth coming.  Any estimate on when they will fix that?  I currently don't see this problem.  Have they released the broken patch, or will wait for the new fix before releasing everything?\n",
      "created_at": "2016-03-03T22:00:01Z",
      "updated_at": "2016-03-03T22:00:01Z"
    },
    {
      "author": "palladia",
      "author_association": "CONTRIBUTOR",
      "body": "Since the resolution of this PR will not be immediate, I will take changes associated with multi-line out of this PR, and create a separate PR for it.  \n",
      "created_at": "2016-03-03T22:07:17Z",
      "updated_at": "2016-03-03T22:07:17Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "You don't see the problem because the pinned packages are before any of the changes. The fix is already up in dotnet/corefx#6619; I didn't catch it because we weren't using `Console.KeyAvailable`.\n\nThanks @palladia.\n",
      "created_at": "2016-03-03T22:14:15Z",
      "updated_at": "2016-03-03T22:23:35Z"
    },
    {
      "author": "palladia",
      "author_association": "CONTRIBUTOR",
      "body": "New push that includes most changes per Andy comments.  Ctrl-C works great, and with 80 msec sleep, there's no apparent lag.\n\nWill re-test after CoreFx #6619 is pulled into our build.\n",
      "created_at": "2016-03-03T23:40:01Z",
      "updated_at": "2016-03-03T23:40:01Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "I'd prefer to wait until after we've merged in the new packages, so we can test before merging.\n",
      "created_at": "2016-03-04T00:27:20Z",
      "updated_at": "2016-03-04T00:27:20Z"
    },
    {
      "author": "palladia",
      "author_association": "CONTRIBUTOR",
      "body": "No problem.\n",
      "created_at": "2016-03-04T16:01:08Z",
      "updated_at": "2016-03-04T16:01:08Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Tested on latest .NET updates... this performs very oddly.\n",
      "created_at": "2016-03-08T06:36:42Z",
      "updated_at": "2016-03-08T06:36:42Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "`TreatControlCAsInput` has been implemented in dotnet/corefx#6669, which should be available in build 23908 (which I'll get us updated to ASAP).\n",
      "created_at": "2016-03-08T06:40:30Z",
      "updated_at": "2016-03-08T06:40:30Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Closing in favor of #717, right?\n",
      "created_at": "2016-03-24T00:18:28Z",
      "updated_at": "2016-03-24T00:18:28Z"
    }
  ],
  "created_at": "2016-03-02T22:16:59Z",
  "number": 613,
  "state": "closed",
  "title": "Add support for Ctrl-C to interrupt commands, and add multi-line capa\u2026",
  "updated_at": "2016-03-24T00:18:34Z"
}