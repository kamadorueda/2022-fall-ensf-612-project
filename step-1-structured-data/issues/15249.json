{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15249",
  "author": "conioh",
  "body": "`Mount-DiskImage` return value is wrong if the specified image is already mounted. It returns the first mount regardless.\r\n\r\nThis make it impossible to write a script like:\r\n\r\n```powershell\r\n$mount = Mount-DiskImage -ImagePath $some_path\r\nTry {\r\n    $mount_root_path = ($mount | Get-Volume).DriveLetter + \":\\\"\r\n    # do stuff\r\n} Finally {\r\n    Dismount-DiskImage -InputObject $mount | Out-Null\r\n}\r\n```\r\n\r\nIf the image `$some_path` is already mounted by the user (let's say as device `\\\\.\\CdRom0` and has a drive letter `X:`) and we run the script and mount the image one more (as `\\\\.\\CdRom1` and drive letter `Y:`), the value returned from the second `Mount-DiskImage`, the one performed by the script, would be incorrectly `\\\\.\\CdRom0`.\r\n\r\nThen in the `Finally` block `Dismount-DiskImage` will dismount `\\\\.\\CdRom0` (and drive letter `X:`) and pull the rug from under the user's feet.\r\n\r\n## Steps to reproduce\r\n\r\nMount the same ISO twice:\r\n\r\n```powershell\r\nPS C:\\> $path_to_iso = \"D:\\Downloads\\Microsoft\\Windows 10\\en_windows_10_business_editions_version_20h2_x64_dvd_4788fb7c.iso\"\r\nPS C:\\> $mount1 = Mount-DiskImage -ImagePath $path_to_iso\r\nPS C:\\> ($mount1 | Get-Volume).DriveLetter\r\nE\r\nPS C:\\> $mount2 = Mount-DiskImage -ImagePath $path_to_iso\r\nPS C:\\> ($mount2 | Get-Volume).DriveLetter\r\nE\r\nPS C:\\> Get-Volume | Where-Object -Property DriveType -EQ \"CD-ROM\"\r\n\r\nDriveLetter FriendlyName          FileSystemType DriveType HealthStatus OperationalStatus SizeRemaining    Size\r\n----------- ------------          -------------- --------- ------------ ----------------- -------------    ----\r\nE           CPBA_X64FRE_EN-US_DV9 Unknown        CD-ROM    Healthy      OK                          0 B 5.54 GB\r\nF           CPBA_X64FRE_EN-US_DV9 Unknown        CD-ROM    Healthy      OK                          0 B 5.54 GB\r\n\r\nPS C:\\> Get-Volume | Where-Object -Property DriveLetter -IN \"E\",\"F\" | Get-DiskImage\r\n\r\nAttached          : True\r\nBlockSize         : 0\r\nDevicePath        : \\\\.\\CDROM0\r\nFileSize          : 5946707968\r\nImagePath         : D:\\Downloads\\Microsoft\\Windows 10\\en_windows_10_business_editions_version_20h2_x64_dvd_4788fb7c.iso\r\nLogicalSectorSize : 2048\r\nNumber            : 0\r\nSize              : 5946707968\r\nStorageType       : 1\r\nPSComputerName    :\r\n\r\nAttached          : True\r\nBlockSize         : 0\r\nDevicePath        : \\\\.\\CDROM0\r\nFileSize          : 5946707968\r\nImagePath         : D:\\Downloads\\Microsoft\\Windows 10\\en_windows_10_business_editions_version_20h2_x64_dvd_4788fb7c.iso\r\nLogicalSectorSize : 2048\r\nNumber            : 0\r\nSize              : 5946707968\r\nStorageType       : 1\r\nPSComputerName    :\r\n\r\n\r\nPS C:\\> $mount1\r\n\r\nAttached          : True\r\nBlockSize         : 0\r\nDevicePath        : \\\\.\\CDROM0\r\nFileSize          : 5946707968\r\nImagePath         : D:\\Downloads\\Microsoft\\Windows 10\\en_windows_10_business_editions_version_20h2_x64_dvd_4788fb7c.iso\r\nLogicalSectorSize : 2048\r\nNumber            : 0\r\nSize              : 5946707968\r\nStorageType       : 1\r\nPSComputerName    :\r\n\r\n\r\nPS C:\\> $mount2\r\n\r\nAttached          : True\r\nBlockSize         : 0\r\nDevicePath        : \\\\.\\CDROM0\r\nFileSize          : 5946707968\r\nImagePath         : D:\\Downloads\\Microsoft\\Windows 10\\en_windows_10_business_editions_version_20h2_x64_dvd_4788fb7c.iso\r\nLogicalSectorSize : 2048\r\nNumber            : 0\r\nSize              : 5946707968\r\nStorageType       : 1\r\nPSComputerName    :\r\n\r\n\r\nPS C:\\> $mount_leftover = Dismount-DiskImage -ImagePath $path_to_iso\r\nPS C:\\> $mount_leftover\r\n\r\nAttached          : True\r\nBlockSize         : 0\r\nDevicePath        : \\\\.\\CDROM1\r\nFileSize          : 5946707968\r\nImagePath         : D:\\Downloads\\Microsoft\\Windows 10\\en_windows_10_business_editions_version_20h2_x64_dvd_4788fb7c.iso\r\nLogicalSectorSize : 2048\r\nNumber            : 1\r\nSize              : 5946707968\r\nStorageType       : 1\r\nPSComputerName    :\r\n\r\n\r\nPS C:\\> ($mount_leftover | Get-Volume).DriveLetter\r\nF\r\nPS C:\\>\r\n```\r\n\r\n## Expected behavior\r\n\r\n`Mount-DiskImage` should return the mount it just did, not a random one of the same disk image.\r\n\r\nFor example, the following C++ example (disregard lack or error checking, leaking resources, etc.) returns the correct device path for every mount it performs. If you run it several times in a row without dismounting the image it will print different `\\\\.\\CDROMn`, `\\\\.\\CDROM{n+1}`, `\\\\.\\CDROM{n+2}` and so on.\r\n\r\nThis is because the code queries `GetVirtualDiskPhysicalPath` using the handle on which it performed `AttachVirtualDisk`.\r\n\r\nIf you comment out the call to `AttachVirtualDisk` and just `OpenVirtualDisk` and immediately `GetVirtualDiskPhysicalPath` you'll get similar results to the ones `Mount-DiskImage` and `Get-DiskImage` give (the \"earliest\" mount from what I can see).\r\n\r\n```cpp\r\n#include <iostream>\r\n#include <vector>\r\n\r\n#include <windows.h>\r\n#include <virtdisk.h>\r\n\r\nint main() {\r\n    static const GUID VIRTUAL_STORAGE_TYPE_VENDOR_MICROSOFT = { 0xEC984AEC, 0xA0F9, 0x47e9, 0x90, 0x1F, 0x71, 0x41, 0x5A, 0x66, 0x34, 0x5B };\r\n\r\n    const std::wstring path_iso{ LR\"(D:\\Downloads\\Microsoft\\Windows 10\\en_windows_10_business_editions_version_20h2_x64_dvd_4788fb7c.iso)\" };\r\n    DWORD success{};\r\n    HANDLE handle_vdisk{};\r\n    VIRTUAL_STORAGE_TYPE virtual_storage_type{ VIRTUAL_STORAGE_TYPE_DEVICE_ISO , VIRTUAL_STORAGE_TYPE_VENDOR_MICROSOFT };\r\n    VIRTUAL_DISK_ACCESS_MASK virtual_disk_access_mask{ VIRTUAL_DISK_ACCESS_ATTACH_RO | VIRTUAL_DISK_ACCESS_GET_INFO };\r\n    OPEN_VIRTUAL_DISK_FLAG virtual_disk_open_flags{ OPEN_VIRTUAL_DISK_FLAG_NONE };\r\n\r\n    success = OpenVirtualDisk(&virtual_storage_type, path_iso.c_str(), virtual_disk_access_mask, virtual_disk_open_flags, nullptr, &handle_vdisk);\r\n    \r\n    ATTACH_VIRTUAL_DISK_FLAG virtual_disk_attach_flags{ ATTACH_VIRTUAL_DISK_FLAG_READ_ONLY | ATTACH_VIRTUAL_DISK_FLAG_PERMANENT_LIFETIME };\r\n\r\n    success = AttachVirtualDisk(handle_vdisk, nullptr, virtual_disk_attach_flags, 0, nullptr, nullptr);\r\n\r\n    std::vector<wchar_t> path_virtual_disk_buffer(1024);\r\n    ULONG size_virtual_disk{ path_virtual_disk_buffer.size() };\r\n\r\n    success = GetVirtualDiskPhysicalPath(handle_vdisk, &size_virtual_disk, path_virtual_disk_buffer.data());\r\n\r\n    std::wstring path_virtual_disk{ path_virtual_disk_buffer.data() };\r\n    std::wcout << \"Phyiscal path of virtual disk: \" << path_virtual_disk << std::endl;\r\n\r\n    return 0;\r\n}\r\n\r\n```\r\n\r\n## Actual behavior\r\n\r\nReturns _a_ mount but not _the_ mount it just performed.\r\n\r\nThe cause seems to be the WMI interface. `MSFT_DiskImage.Mount(...)` doesn't return a device path or handle and there's not handle to begin with. Unlike the `MSFT_Volume` objects the `MSFT_DiskImage` objects are epehmeral. For both mounts of the same image there are distinct `MSFT_Volume` objects, but they both associate with a single `MSFT_DiskImage` instance, and if you ask WMI for it's association you get back to just one of the two `MSFT_Volume` objects.\r\n\r\n## Environment data\r\n\r\n```none\r\nPS C:\\> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.3\r\nPSEdition                      Core\r\nGitCommitId                    7.1.3\r\nOS                             Microsoft Windows 10.0.19042\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n```\r\n",
  "closed_at": "2021-04-17T19:00:04Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "The cmdlet is not in the repo. Please use other channels to report the issue - UserVoice site, Windows support. Microsoft forums...",
      "created_at": "2021-04-16T16:45:04Z",
      "updated_at": "2021-04-16T16:45:04Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as external and has not had any activity for **1 day**. It has been be closed for housekeeping purposes.",
      "created_at": "2021-04-17T19:00:03Z",
      "updated_at": "2021-04-17T19:00:03Z"
    }
  ],
  "created_at": "2021-04-16T14:45:21Z",
  "labels": [
    "Resolution-External",
    "Needs-Triage"
  ],
  "number": 15249,
  "state": "closed",
  "title": "Mount-DiskImage returns wrong mount when performing multiple mounts of the same image",
  "updated_at": "2021-04-17T19:00:04Z"
}