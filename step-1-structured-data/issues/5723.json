{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5723",
  "author": "iSazonov",
  "body": "@daxian-dbw @adityapatwardhan I collected from PR discussions useful links for possible future additions in our guidelines. Feel free to close after read.\r\n\r\n- Sorts class elements according to StyleCop guidance https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1201.md\r\n- Sorts within the same elements by access type according to StyleCop guidance https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1202.md\r\n- https://smartbear.com/learn/code-review/best-practices-for-peer-code-review/\r\n- https://www.codefactor.io",
  "closed_at": "2021-08-25T04:06:33Z",
  "comments": [
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "If someone could figure out how to get [StyleCop.Analyzers](https://github.com/DotNetAnalyzers/StyleCopAnalyzers) working in our project, that would be great. I gave it a full days worth of effort and came back empty handed. It is supposed to be as simple as adding the package reference, but I ran into weird dependency conflicts. We would need to ignore some of the rules unless we are willing to change some of our guidelines. (for example, separating private fields backing properties from the properties). And maybe it doesn't need to be in every assembly. Or maybe it can be added through some empty project trickery and run ad hoc instead of every build.",
      "created_at": "2017-12-20T10:56:53Z",
      "updated_at": "2017-12-20T10:56:53Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "I agree with @markekraus to rather use the stylecop linter because then you get errors in Visual Studio (and you can even do Ctrl+'.' to auto-fix it). I have used that already in a .Net Core solution but remember that there were some gotchas and limitations (e.g. one could only have one global stylecop.json). In general, I can say that it has to be customised first because the default rule set is very persnickety and some of the rules are questionable. I can give it a try to integrate it if you want to but it may be that it requires [PR 5209](https://github.com/PowerShell/PowerShell/pull/5209) to be merged, because at the moment compilation is disabled for all *.cs files in the csproj files. I don't know if it integrates well with VSCode or if it only works with Visual Studio because of the way it hooks into the .Net Core MSBUILD system under the hood. ",
      "created_at": "2017-12-20T12:51:16Z",
      "updated_at": "2017-12-20T17:31:04Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@bergmeister Thanks! \r\n\r\nIf we can at least get it hooked into the Microsoft.PowerShell.Commands.Utility assembly as a start. That is where the heaviest amount of community contributions seem to go (by my impression only and no solid analytics \ud83d\ude0f ). And I have WIP for refactoring/organizing the web cmdlets (that's where much of this is stemming from). \r\n\r\nFor vscode, I believe the only current support is for compile time warnings, which is why I suggested possibly a pseudo-project... or maybe even a build configuration? I dunno.. I'm very new to this so whatever makes it work without impacting normal build processes until we can get the code to a state where we CAN flip it on for builds and serve as a fail detector.\r\n",
      "created_at": "2017-12-20T13:10:02Z",
      "updated_at": "2017-12-20T13:10:02Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "[StyleCops.Analyzers](https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/StyleCop.Analyzers/StyleCopTester/StyleCopTester.csproj#L6) depends on Net452 \ud83d\ude15 ",
      "created_at": "2017-12-20T17:08:16Z",
      "updated_at": "2017-12-20T17:08:16Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "what about this https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/DotNetCli.md is that the same thing?",
      "created_at": "2017-12-20T18:11:52Z",
      "updated_at": "2017-12-20T18:11:52Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "ASP.NET Core depends on Net452 too. \ud83d\ude15",
      "created_at": "2017-12-20T18:26:19Z",
      "updated_at": "2017-12-20T18:26:19Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov I was able to get it to work with this https://carlos.mendible.com/2017/08/24/net-core-code-analysis-and-stylecop/ in a `netcoreapp2.0` targeted app. \r\n\r\nmodifying it slightly to \r\n\r\n```\r\ndotnet add package Microsoft.CodeAnalysis.FxCopAnalyzers -v 2.3.0-beta1\r\ndotnet add package StyleCop.Analyzers -v 1.1.0-beta004\r\n```\r\n\r\nafter some toying around with it... I was able to get a beautiful sea of red StyleCop errors when running \r\n\r\n```powershell\r\nStart-PSBuild -Clean -Configuration Style\r\n```\r\n\r\n\r\nhttps://github.com/PowerShell/PowerShell/compare/master...markekraus:StyleCop\r\n",
      "created_at": "2017-12-20T20:29:46Z",
      "updated_at": "2017-12-20T20:29:46Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@markekraus Great news! Do this work on Unix too?",
      "created_at": "2017-12-21T12:28:56Z",
      "updated_at": "2017-12-21T12:28:56Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "I tried doing a very basic console project in Ubuntu and it failed with `Feature 'IOperation' is disabled.` errors, so I'm guessing it would only work on Windows. that means we could have it run only in the Windows CI and adjust Start-PSBuild to error when `Style` is used on linux.\r\n\r\nRight now... it would be painful to have it run at all. For just the files in the Web Cmdlets folder there are over [1419 issues](https://gist.github.com/markekraus/5746e0240c86c0869a8b4ad910028b31). But.. some of these may not really apply. For example\r\n\r\n```none\r\n.\\commands\\utility\\WebCmdlet\\Common\\BasicHtmlWebResponseObject.Common.cs(5,1): error SA1200: Using directive should appear within a namespace declaration\r\n```\r\n\r\nWe don't enforce that in this project, In fact [our guidance](https://github.com/PowerShell/PowerShell/blob/master/docs/dev-process/coding-guidelines.md#layout-conventions) says to do the opposite. \r\n\r\n> Namespace imports should be specified at the top of the file, outside of namespace declarations.\r\n\r\nI read through [SA1200](https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1200.md) and tend to agree with it. *shrugs",
      "created_at": "2017-12-21T13:40:52Z",
      "updated_at": "2017-12-21T13:40:52Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "actually.. after some google-fu I was able to get StyleCop working on linux on a simple console project (needed `<Features>IOperation</Features>` added to a property group). But, I have no clue how to make this work with our project. Supplying `Style` as the configuration results int `Linux` configuration being chosen. I don't understand our build internals well enough to try this manually. One would think you could just run `dotnet build` in the assembly directory, but that doesn't work.",
      "created_at": "2017-12-21T14:08:02Z",
      "updated_at": "2017-12-21T14:08:02Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "@markekraus : Haha, that brings back memories of a question that I asked about the roslyn analyzers half a year ago: https://github.com/dotnet/roslyn-analyzers/issues/1151#issuecomment-303509027\r\nI am not sure if it is worthwhile just waiting until the whole build system has switched to MSBUILD per the PR that I mentioned above.",
      "created_at": "2017-12-21T15:09:44Z",
      "updated_at": "2017-12-21T15:09:44Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@markekraus Thanks for great research! If MSFT team approve this we'll continue to resolve minor problems.\r\nI like the idea to turn on some StyleCops.Analyzers rules in the PowerShell repo.",
      "created_at": "2017-12-21T17:44:17Z",
      "updated_at": "2017-12-21T17:44:17Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "We enabled StyleCop.Analyzers package in #13963 and I have submitted PRs for various rules.\r\n\r\nThere are a huge number of issues though, see https://www.codefactor.io/repository/github/powershell/powershell/issues, any help would be appreciated!\n\n<blockquote><img src=\"/Content/img/favicon.png?v=3\" width=\"48\" align=\"right\"><div><strong><a href=\"https://www.codefactor.io/repository/github/powershell/powershell/issues\">PowerShell/PowerShell - Issues</a></strong></div><div>Quality software, faster.</div></blockquote>",
      "created_at": "2020-12-04T09:45:58Z",
      "updated_at": "2020-12-04T09:46:03Z"
    }
  ],
  "created_at": "2017-12-20T10:20:05Z",
  "labels": [
    "Area-Maintainers-Documentation"
  ],
  "number": 5723,
  "state": "closed",
  "title": "Links for code style and review",
  "updated_at": "2021-08-25T04:06:33Z"
}