{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6933",
  "author": "BrucePay",
  "body": "There is a bug when using the `-AsHashTable` flag on `Group-Object` such that the keys in the hashtable are still wrapped in `PSObject` when added to the table. This makes them useless because you can't retrieve the entry and confusing because it looks like a string but it isn't. See [this issue on StackOverflow](https://stackoverflow.com/questions/50486981/unexpected-behavior-with-group-object-with-scriptblock/50498862#50498862) and also [this one](https://stackoverflow.com/questions/28190053/group-object-diffencies-with-or-without-code-block)\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\n$groupedProjects = 1..10 | foreach {\r\n    [PSCustomObject]@{ ErrorMessage = if ($_ % 2) {'SomeError'} else {''} }\r\n} |\r\n    Group-Object -Property {if ($_.ErrorMessage) {'Failed'} else {'Successful'}} -AsHashTable\r\n$groupedProjects.Keys\r\n$groupedProjects[\"Failed\"]\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n```none\r\n>  $groupedProjects.Keys # the keys exist and look like strings\r\nSuccessful\r\nFailed\r\n>  $groupedProjects.Failed # Should be able to retrieve the corresponding value\r\n\r\nErrorMessage\r\n------------\r\nSomeError\r\nSomeError\r\nSomeError\r\nSomeError\r\nSomeError\r\n>\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n```none\r\n >  $groupedProjects.Keys\r\nSuccessful\r\nFailed\r\n>  $groupedProjects.Failed # Specifying the key name fails because the actual key is a PSObject\r\n>\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n(This fails on all version of PowerShell)\r\n\r\n```powershell\r\n> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.1.0-preview.2\r\nPSEdition                      Core\r\nGitCommitId                    v6.1.0-preview.2\r\nOS                             Microsoft Windows 10.0.17134\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2018-06-28T07:29:05Z",
  "comments": [
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "Just ran into this :) Any progress?",
      "created_at": "2018-06-19T09:30:07Z",
      "updated_at": "2018-06-19T09:30:07Z"
    }
  ],
  "created_at": "2018-05-24T22:27:11Z",
  "number": 6933,
  "state": "closed",
  "title": "GroupObject -AsHashTable should \"core\" any PSObjects being used as keys",
  "updated_at": "2018-06-28T07:33:23Z"
}