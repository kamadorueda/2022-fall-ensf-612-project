{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7119",
  "author": "HemantMahawar",
  "body": "Steps to reproduce\r\n------------------\r\n0. Run **elevated** pwsh.exe\r\n\r\n1. Unregister any existing PowerShell Core remoting endpoint\r\n```powershell\r\nGet-PSSessionConfiguration | Unregister-PSSessionConfiguration\r\n```\r\n\r\n2. Run _Install-PowerShellRemoting.ps1_ from **$PSHome**\r\n```powershell\r\n& $PSHome\\Install-PowerShellRemoting.ps1\r\n```\r\n\r\n3. List the remoting endpoints\r\n```powershell\r\nGet-PSSessionConfiguration | ft name\r\n```\r\n\r\n4. Unregister any existing PowerShell Core remoting endpoint from step 2\r\n```powershell\r\nGet-PSSessionConfiguration | Unregister-PSSessionConfiguration\r\n```\r\n\r\n5. Run _Enable-PSRemoting_ cmdlet\r\n```powershell\r\nEnable-PSRemoting\r\n```\r\n\r\n6. List the remoting endpoints\r\n```powershell\r\nGet-PSSessionConfiguration | ft name\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\nAfter steps 3 and 5, the endpoint names should be same:\r\n  - **PowerShell.6**\r\n  - **PowerShell.6.1.0-preview.3**\r\n\r\nActual behavior\r\n---------------\r\nEndpoint names are **different** after steps 3 and 5\r\n\r\n**After Step 3**\r\n  - PowerShell.6\r\n  - **PowerShell.6.1.0-preview.3**\r\n\r\n**After Step 5**\r\n  - PowerShell.6\r\n  - **PowerShell.v6.1.0-preview.3** (extra 'v' before version number)\r\n",
  "closed_at": "2018-07-17T02:35:49Z",
  "comments": [
    {
      "author": "HemantMahawar",
      "author_association": "CONTRIBUTOR",
      "body": "FYI .. @SteveL-MSFT ",
      "created_at": "2018-06-28T17:41:14Z",
      "updated_at": "2018-06-28T17:41:14Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Thought this was already fixed.  I'll also fix it so that for `Preview` releases, it'll be `PowerShell.6-Preview`.  I also wonder if we need to keep `Install-PowerShellRemoting.ps1` as the only use different from `Enable-PSRemoting` is supporting specifying the location of PowerShell different than the running PowerShell, but I think you can just do:\r\n\r\n> pwsh -c enable-psremoting\r\n\r\nNeed to verify that works on Win10 IoT where you've had to use `Install-PowerShellRemoting.ps1`",
      "created_at": "2018-06-28T17:55:36Z",
      "updated_at": "2018-06-28T17:55:36Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov brought up a good issue, currently if you run `Enable-PSRemoting` or `Install-PowerShellRemoting.ps1` we setup the generic endpoint `PowerShell.6` as well as the version specific endpoint `PowerShell.v6.1.0-blah` (using `Enable-PSRemoting`) or `PowerShell.6.1.0-blah` (using `Install-PowerShellRemoting.ps1`).  Intent of this issue was to have `Enable-PSRemoting` and `Install-PowerShellRemoting.ps1` standardize on the non `v` naming of the version specific endpoint to match the generic one.\r\n\r\nHowever, the end result is that every script that wants to use the version specific one needs to apply the same formula:\r\n\r\n> \"PowerShell.\" + $PSVersionTable.GitCommitId.ToString().SubString(1)\r\n\r\nThis strips the `v`.  It seems we should simplify this to make it predictable for automation.  Options:\r\n\r\n1. Change `PSVersionTable.GitCommitId` to not start with a `v` (then we have to decide whether on `pwsh` start we emit \"PowerShell v<GitCommitId>\" or just \"PowerShell <GitCommitId>\"\r\n2. Add a new `ShellName` or `EndpointName` property to PSVersionTable that is exactly the same as the version specific endpoint\r\n3. Update `Install-PowerShellRemoting.ps1` to put back the `v` so it's consistent with GitCommitId but inconsistent with PSVersion\r\n\r\nPersonally, I don't think we need the `v` at all so I'd go with option 1.\r\n",
      "created_at": "2018-06-29T15:43:47Z",
      "updated_at": "2018-06-29T15:43:47Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee reviewed this and would prefer to drop the `v` from GitCommitId and have the version specific endpoint match GitCommitId.  @TravisEz13 can you verify that there is no functional/packaging concern with removing the `v`?",
      "created_at": "2018-07-11T22:23:38Z",
      "updated_at": "2018-07-11T22:23:38Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I talked to @TravisEz13 and he's not aware of any reason the `v` is necessary.  I'll update the PR to standardize on no `v`.",
      "created_at": "2018-07-16T19:15:14Z",
      "updated_at": "2018-07-16T19:15:14Z"
    }
  ],
  "created_at": "2018-06-19T18:48:36Z",
  "number": 7119,
  "state": "closed",
  "title": "Enable-PSRemoting and Install-PowerShellRemoting.ps1 create version specific endpoints with different names",
  "updated_at": "2018-07-17T03:33:09Z"
}