{
  "_url": "https://github.com/PowerShell/PowerShell/issues/1720",
  "author": "TravisEz13",
  "body": "<!--\n\nIf it is a bug report:\n- make sure you are able to repro it on the latest released version. \nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\n- Search the existing issues.\n- Refer to the [FAQ](../docs/FAQ.md).\n- Refer to the [known issues](../docs/KNOWNISSUES.md).\n- Fill out the following repro template\n\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\n-->\n## Steps to reproduce\n\n`PowerShell.exe`\n## Expected behavior\n\nIt should open the same version of powershell that I'm running\n## Actual behavior\n\nIt actually opens the inbox PowerShell\n\n```\nPS C:\\Program Files\\PowerShell\\6.0.0.7> powershell\nWindows PowerShell\nCopyright (C) 2016 Microsoft Corporation. All rights reserved.\n\nPS C:\\Program Files\\PowerShell\\6.0.0.7> $PSVersionTable\n\nName                           Value\n----                           -----\nPSVersion                      5.1.14901.1000\nPSEdition                      Desktop\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\nBuildVersion                   10.0.14901.1000\nCLRVersion                     4.0.30319.42000\nWSManStackVersion              3.0\nPSRemotingProtocolVersion      2.3\nSerializationVersion           1.1.0.1\n\n```\n## Environment data\n\n<!-- provide the output of $PSVersionTable -->\n\n``` powershell\n> $PSVersionTable\nPS C:\\Program Files\\PowerShell\\6.0.0.7> $psversiontable\n\nName                           Value\n----                           -----\nGitCommitId                    v6.0.0-alpha.7-378-g86c5d3e4c88fe1489dcb657132e64dd8535da6a1\nWSManStackVersion              3.0\nPSEdition                      Core\nSerializationVersion           1.1.0.1\nBuildVersion                   3.0.0.0\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\nPSRemotingProtocolVersion      2.3\nPSVersion                      6.0.0-alpha\nCLRVersion\n\n\n```\n",
  "closed_at": "2018-04-05T20:39:31Z",
  "comments": [
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "Not sure about this one. `powershell.exe` is a native executable. Standard PATH precedence resolution rules are applied.\n",
      "created_at": "2016-08-11T05:27:14Z",
      "updated_at": "2016-08-11T05:27:14Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Hemant/Bruce is authoring an experience on this.  Tests will need to be updated.\n",
      "created_at": "2016-08-11T21:36:26Z",
      "updated_at": "2016-08-11T21:36:26Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "I agree with @vors here. This is by design, PATH precedence should always win (though it would certainly make things easier if we emitted the version in the startup header). \r\n\r\nDid the investigation by @HemantMahawar or @BrucePay show anything? ",
      "created_at": "2017-05-23T21:52:59Z",
      "updated_at": "2017-05-23T21:52:59Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "If we decide this is the correct behavior, there should be a definitive way to execute a new process with the same version of PowerShell.",
      "created_at": "2017-05-24T18:31:18Z",
      "updated_at": "2017-05-24T18:31:18Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "I'm not sure how useful it will be. But, if PowerShell Core will coexist with Windows PowerShell, maybe it will be good to investing in a simple cmdlet to help detect which versions are available. Then, it can give you the option to pick which version to execute.  \r\n\r\nThis may be useful when doing WinRm between Windows systems having both Windows PowerShell and PowerShell Core.\r\n\r\n:)\r\n\r\n",
      "created_at": "2017-05-24T20:02:08Z",
      "updated_at": "2017-05-24T20:02:08Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "Is it not simply `& $PSHOME\\powershell.exe`? \r\n\r\nOr are you thinking about a cmdlet wrapper like `Start-PowerShell`? ",
      "created_at": "2017-05-25T20:17:39Z",
      "updated_at": "2017-05-25T20:17:39Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "` & $PSHOME\\pewershell.exe` works for me, but we should document this as $PSHOME was not required previously.",
      "created_at": "2017-05-26T18:56:50Z",
      "updated_at": "2017-05-26T18:56:50Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "this has been fixed",
      "created_at": "2018-04-05T20:39:31Z",
      "updated_at": "2018-04-05T20:39:31Z"
    }
  ],
  "created_at": "2016-08-11T03:33:00Z",
  "labels": [
    "Issue-Enhancement",
    "BVT/DRT",
    "Area-Maintainers-Documentation",
    "Resolution-Fixed"
  ],
  "number": 1720,
  "state": "closed",
  "title": "Document that running Powershell.exe from PowerShell results in a different version of PowerShell",
  "updated_at": "2018-04-05T20:39:32Z"
}