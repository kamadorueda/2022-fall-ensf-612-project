{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9856",
  "author": "alujones",
  "body": "# Summary of the new feature/enhancement\r\n\r\nI had some code working locally on a Windows laptop in Powershell 5, which used Net.WebRequest to get the Certificate returned by a server, so as to validate its ownership.\r\n\r\nTried to use the code in PowerShell 6, and/or in Azure Functions (which also use PS6), and was unable to do so - ServicePoint.Certificate was always $null, no matter what site I tried.\r\n\r\nI see you've done some work adding -SkipCertificateCheck, and are working on adding custom certificate validation functionality - but all I really need is to see what certificate is provided by the web server. Ideally without performing the entire request - I currently use a HEAD Method, but I'm aware that might have issues, too.\r\n\r\n# Proposed technical implementation details (optional)\r\n\r\nCurrent code (PS5):\r\n$wr1 = [Net.HttpWebRequest]::Create('https://www.github.com')\r\n$wr1.Method = 'HEAD'\r\n$ignore = $wr1.GetResponse()\r\nif ($wr1.ServicePoint -ne $null)\r\n{\r\n  if ($wr1.ServicePoint.Certificate -ne $null) {\r\n    Write-Host \"The certificate is $($wr1.ServicePoint.Certificate.Subject)\"\r\n  } else {\r\n    Write-Host \"The certificate is null - can't get the subject.\"\r\n  }\r\n} else {\r\n  Write-Host \"The service point is null, can't get the certificate.\"\r\n}\r\n\r\nIdeal target code, something like:\r\n\r\n$wr1 = Invoke-WebRequest 'https://www.github.com' -SkipCertificateCheck -SkipHeaderValidation -Method 'Head'\r\nWrite-Host \"Certificate subject is $($wr1.Certificate.Subject)\"",
  "closed_at": "2019-06-12T12:00:22Z",
  "comments": [
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "This is not an issue of PowerShell but the underlying .Net Core Framework.\r\nThe API that you use is now deprecated and alternative APIs like HttpClient are recommended. See the below issue for details and possible solutions\r\nhttps://github.com/dotnet/corefx/issues/36979",
      "created_at": "2019-06-09T07:34:18Z",
      "updated_at": "2019-06-09T07:34:18Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "If just getting the certificate from the remote server is your goal:\r\n\r\n```powershell\r\nfunction Get-RemoteCertificate {\r\n  [CmdletBinding()]\r\n  [OutputType([System.Security.Cryptography.X509Certificates.X509Certificate])]\r\n  param (\r\n    [Parameter(\r\n      Mandatory,\r\n      ValueFromPipeline\r\n    )]\r\n    [ValidateNotNull()]\r\n    [Uri]\r\n    $Uri\r\n  )\r\n  process {\r\n    try {\r\n      $TcpClient = [System.Net.Sockets.TcpClient]::new($Uri.Host, $Uri.Port)\r\n      try {\r\n        $SslStream = [System.Net.Security.SslStream]::new($TcpClient.GetStream())\r\n        $SslStream.AuthenticateAsClient($Uri.Host)\r\n        $SslStream.RemoteCertificate\r\n      } finally {\r\n        $SslStream.Dispose()\r\n      }\r\n    } finally {\r\n      $TcpClient.Dispose()\r\n    }\r\n  }\r\n}\r\n```",
      "created_at": "2019-06-09T23:44:24Z",
      "updated_at": "2019-06-09T23:44:24Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2019-06-12T12:00:21Z",
      "updated_at": "2019-06-12T12:00:21Z"
    },
    {
      "author": "DennisL68",
      "author_association": "NONE",
      "body": "> If just getting the certificate from the remote server is your goal:\r\n> \r\n> ```powershell\r\n> function Get-RemoteCertificate \r\n> ```\r\nTcpClient doesn't work with self signed certificates and an error will be generated...\r\n\r\n~~~\r\nException calling \".ctor\" with \"2\" argument(s): \"A connection attempt failed because the connected party did not properly\r\nrespond after a period of time, or established connection failed because connected host has failed to respond\r\n~~~",
      "created_at": "2022-08-29T20:44:26Z",
      "updated_at": "2022-08-29T20:44:26Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@DennisL68 TcpClient know nothing about certificates. Look SslStream.",
      "created_at": "2022-08-30T04:53:24Z",
      "updated_at": "2022-08-30T04:53:24Z"
    }
  ],
  "created_at": "2019-06-07T22:56:33Z",
  "labels": [
    "Issue-Enhancement",
    "Resolution-Answered"
  ],
  "number": 9856,
  "state": "closed",
  "title": "Please provide a way to get the certificate from a web response.",
  "updated_at": "2022-08-30T04:53:24Z"
}