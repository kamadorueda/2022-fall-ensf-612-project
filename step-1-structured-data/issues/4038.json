{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4038",
  "author": "pcgeek86",
  "body": "This feedback was well-received a couple years ago, with 23 upvotes on Microsoft Connect, but hasn't been implemented yet. Basically, it would be really cool to be able to call a class constructor and \"splat\" the input parameters, and invoke static & instance methods the same way.\r\n\r\nhttps://connect.microsoft.com/PowerShell/feedback/details/1376904/splatting-for-class-method-input-parameters\r\n\r\n```powershell\r\nclass Person {\r\n    [string] $FirstName;\r\n    [string] $LastName;\r\n\r\n    Person ([string] $First, [string] $Last) {\r\n        $this.FirstName = $First;\r\n        $this.LastName = $Last;\r\n    }\r\n}\r\n\r\n$NewPerson = @{\r\n    FirstName = 'Trevor';\r\n    LastName = 'Sullivan';\r\n    };\r\n[Person]::new(@NewPerson);\r\n```\r\n\r\nCheers,\r\nTrevor Sullivan\r\nhttps://trevorsullivan.net\r\nhttps://twitter.com/pcgeek86",
  "closed_at": null,
  "comments": [
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "This is discussed in the generalized splatting RFC, see [here](https://github.com/PowerShell/PowerShell-RFC/blob/master/1-Draft/RFC0002-Generalized-Splatting.md#splatting-in-method-invocations).",
      "created_at": "2017-06-16T22:45:17Z",
      "updated_at": "2017-06-16T22:45:17Z"
    },
    {
      "author": "pcgeek86",
      "author_association": "NONE",
      "body": "[RFC comments reference](https://github.com/PowerShell/PowerShell-RFC/issues/6)",
      "created_at": "2017-06-17T17:57:25Z",
      "updated_at": "2017-06-17T17:57:25Z"
    }
  ],
  "created_at": "2017-06-16T22:32:53Z",
  "number": 4038,
  "state": "open",
  "title": "New syntax: Enable splatting for class instantiations and method calls",
  "updated_at": "2018-06-20T20:18:14Z"
}