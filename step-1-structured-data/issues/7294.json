{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7294",
  "author": "mklement0",
  "body": "This is an inconsistency discovered by @alx9r:\r\n\r\nIf you define a class property of type `[string]` without assigning an initial value, its value is unexpectedly `$null`, even though in all other contexts PowerShell defaults `[string]` values to `''` (the empty string) and even converts explicitly assigned `$null` to `''`.\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\nclass c { [string] $prop }; $null -eq [c]::new().prop\r\nclass c { [string] $prop = $null }; $null -eq [c]::new().prop\r\nclass c { [string] meth() { return $null } }; $null -eq [c]::new().meth()\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```none\r\nFalse\r\nFalse\r\nFalse\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n```none\r\nTrue\r\nFalse\r\nFalse\r\n```\r\n\r\nThat is, the uninitialized `[string]` property unexpectedly contains `$null`.\r\n\r\nEnvironment data\r\n----------------\r\n\r\n```powershell\r\nPowerShell Core v6.1.0-preview.3 on macOS 10.13.5\r\nPowerShell Core v6.1.0-preview.3 on Ubuntu 16.04.4 LTS\r\nPowerShell Core v6.1.0-preview.3 on Microsoft Windows 10 Pro (64-bit; Version 1709, OS Build: 16299.371)\r\nWindows PowerShell v5.1.17134.48 on Microsoft Windows 10 Pro (64-bit; Version 1709, OS Build: 16299.371)\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "mattpwhite",
      "author_association": "NONE",
      "body": "Is this unexpected?  I know that I would personally be very surprised to find string members initialized to empty strings.  I would expect class members to have default values as they do in other .NET languages.  Coercing null to empty string is already a confusing foot gun in other contexts, I wouldn\u2019t want to see it extended to classes. ",
      "created_at": "2018-07-17T03:41:15Z",
      "updated_at": "2018-07-17T03:41:15Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@mattpwhite: \r\n\r\nThe primary purpose of this issue is to show the _lack of consistency_.\r\n\r\nI suggested resolving the inconsistency toward PowerShell-like behavior, because, as demonstrated, in the majority of cases you already _do_ get the surprising behavior in the context of custom classes - in line with non-class PowerShell behavior: \r\n\r\n  * assigning `$null` to a `[string]`-typed property or variable\r\n  * returning `$null` from a `[string]`-typed method.\r\n\r\n(Ideally, PowerShell itself should also default `[string]` instances to `$null`, but [that ship has sailed](https://github.com/PowerShell/PowerShell/issues/4616#issuecomment-323530442))\r\n\r\nThat said, in other respects classes are closer to C# behavior, not least syntactically.\r\n\r\nSo I suppose resolving the inconsistency toward C#-like behavior (allowing assigning `$null` to `[string]` variables/properties / allowing returning `$null` from `[string]`-typed methods) is another option.\r\n\r\nBoth resolutions are technically breaking changes, so a third option is to simply live with the inconsistency and merely document it.\r\n\r\nI can't really speak to the guiding principles behind the behavior of PowerShell classes.\r\nPerhaps @lzybkr  can help out.\r\n",
      "created_at": "2018-07-17T04:04:41Z",
      "updated_at": "2018-07-17T20:43:38Z"
    },
    {
      "author": "mattpwhite",
      "author_association": "NONE",
      "body": "Point taken, and I agree that it\u2019s a bit inconsistent.  I guess I\u2019m just voicing a preference for aligning with C# in this context.  As you note, in many ways, it already is.\r\n\r\nNo one has ever had to learn about [NullString]::Value and been happy about it.  I know it\u2019s too late for that, but I\u2019d hate to have it show up more than it already has to. ",
      "created_at": "2018-07-18T01:06:22Z",
      "updated_at": "2018-07-18T01:06:22Z"
    }
  ],
  "created_at": "2018-07-16T05:25:05Z",
  "labels": [
    "WG-Engine"
  ],
  "number": 7294,
  "state": "open",
  "title": "Classes: an uninitialized [string] property defaults to $null rather than the empty string",
  "updated_at": "2018-07-18T01:06:22Z"
}