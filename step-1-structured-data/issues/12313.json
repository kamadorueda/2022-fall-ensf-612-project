{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12313",
  "author": "Damag3d",
  "body": "Hello,\r\nI am processing large amount of Graph calls using powershell script block - 500K in my case. I want to process script blocks in batches. My ForEach-Object loop is defined inside class, say Library, in method, say ExportItems. Library.ExportItems call global function named Log([string]text). Method can successfully use it, however Parallel block cannot.\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\nusing module .\\logger.ps1\r\n\r\nclass SPOLibrary {\r\n \r\n    [void]ExportItems (\r\n        [string]$OutputFileName\r\n    ) {\r\n\r\n       try {\r\n\r\n            # MAIN: process loaded queue \r\n            $this.Process( $OutputFileName)    \r\n        \r\n        }\r\n        finally {\r\n\r\n\r\n        \r\n        }\r\n\r\n        \r\n    }\r\n\r\n    [void]Process (\r\n        [string]$OutputFileName\r\n    ){\r\n\r\n     \r\n        [int]$_batchSize = 20\r\n \r\n\r\n            1..$_batchSize | ForEach-Object -Parallel {\r\n\r\n            # NOW here is the global function that is not visible to this block\r\n            Log \"text\"\r\n            }\r\n\r\n     }\r\n```\r\n\r\n# Expected behavior\r\n\r\n```\r\nglobal functions should be visible within script block\r\n\r\n```\r\n\r\n# Actual behavior\r\n\r\n```\r\nfunction is not visible\r\n\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0\r\nOS                             Microsoft Windows 10.0.19603\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2020-04-14T20:19:25Z",
  "comments": [
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "The ForEach-Object -Parallel feature uses PowerShell runspaces to run each loop iteration concurrently.  PowerShell runspaces are isolation abstractions and don't provide a way to share state between instances.\r\n\r\nHowever, there are many examples (including this) of reasonable expectations for the loop iteration state to be the same as what the ForEach-Object cmdlet runs in.  One solution is to allow an option that replicates the state, at some cost to performance.  We have a current issue to track this (so I'll close this one). #12240\r\n\r\nAlso, here is an article that goes into greater detail about how ForEach-Object -Parallel works.  But note that one issue, runspace re-use, has been fixed in 7.1 preview (#12122).\r\n\r\nhttps://devblogs.microsoft.com/powershell/powershell-foreach-object-parallel-feature/\n\n<blockquote><img src=\"https://devblogs.microsoft.com/powershell/wp-content/uploads/sites/30/2018/09/Powershell_256.png\" width=\"48\" align=\"right\"><div><img src=\"https://devblogs.microsoft.com/powershell/wp-content/uploads/sites/30/2019/02/Powershell_2561.png\" height=\"14\"> PowerShell</div><div><strong><a href=\"https://devblogs.microsoft.com/powershell/powershell-foreach-object-parallel-feature/\">PowerShell ForEach-Object Parallel Feature | PowerShell</a></strong></div><div>PowerShell ForEach-Object Parallel Feature\nPowerShell 7.0 Preview 3 is now available with a new ForEach-Object Parallel Experimental feature. This feature is a great new tool for parallelizing work, but like any tool, it has its uses and drawbacks.\nThis article describes this new feature,</div></blockquote>",
      "created_at": "2020-04-14T20:19:25Z",
      "updated_at": "2020-04-14T20:19:28Z"
    },
    {
      "author": "Damag3d",
      "author_association": "NONE",
      "body": "> The ForEach-Object -Parallel feature uses PowerShell runspaces to run each loop iteration concurrently. PowerShell runspaces are isolation abstractions and don't provide a way to share state between instances.\r\n> \r\n> However, there are many examples (including this) of reasonable expectations for the loop iteration state to be the same as what the ForEach-Object cmdlet runs in. One solution is to allow an option that replicates the state, at some cost to performance. We have a current issue to track this (so I'll close this one). #12240\r\n> \r\n> Also, here is an article that goes into greater detail about how ForEach-Object -Parallel works. But note that one issue, runspace re-use, has been fixed in 7.1 preview (#12122).\r\n> \r\n> https://devblogs.microsoft.com/powershell/powershell-foreach-object-parallel-feature/\r\n> \r\n> > <img alt=\"\" width=\"48\" src=\"https://camo.githubusercontent.com/81d28cf99fecd33e97c84c06701dff2f5a6bfcd6/68747470733a2f2f646576626c6f67732e6d6963726f736f66742e636f6d2f706f7765727368656c6c2f77702d636f6e74656e742f75706c6f6164732f73697465732f33302f323031382f30392f506f7765727368656c6c5f3235362e706e67\"><img alt=\"\" height=\"14\" src=\"https://camo.githubusercontent.com/9c013a468c6cf48222b871a24273e0b9ba2d9327/68747470733a2f2f646576626c6f67732e6d6963726f736f66742e636f6d2f706f7765727368656c6c2f77702d636f6e74656e742f75706c6f6164732f73697465732f33302f323031392f30322f506f7765727368656c6c5f323536312e706e67\"> PowerShell**[PowerShell ForEach-Object Parallel Feature | PowerShell](https://devblogs.microsoft.com/powershell/powershell-foreach-object-parallel-feature/)**PowerShell ForEach-Object Parallel Feature\r\n> > PowerShell 7.0 Preview 3 is now available with a new ForEach-Object Parallel Experimental feature. This feature is a great new tool for parallelizing work, but like any tool, it has its uses and drawbacks.\r\n> > This article describes this new feature,\r\n\r\nthanks\n\n<blockquote><img src=\"https://devblogs.microsoft.com/powershell/wp-content/uploads/sites/30/2018/09/Powershell_256.png\" width=\"48\" align=\"right\"><div><img src=\"https://devblogs.microsoft.com/powershell/wp-content/uploads/sites/30/2019/02/Powershell_2561.png\" height=\"14\"> PowerShell</div><div><strong><a href=\"https://devblogs.microsoft.com/powershell/powershell-foreach-object-parallel-feature/\">PowerShell ForEach-Object Parallel Feature | PowerShell</a></strong></div><div>PowerShell ForEach-Object Parallel Feature\nPowerShell 7.0 Preview 3 is now available with a new ForEach-Object Parallel Experimental feature. This feature is a great new tool for parallelizing work, but like any tool, it has its uses and drawbacks.\nThis article describes this new feature,</div></blockquote>",
      "created_at": "2020-04-15T05:43:20Z",
      "updated_at": "2020-04-15T05:43:22Z"
    }
  ],
  "created_at": "2020-04-14T19:55:20Z",
  "labels": [
    "Issue-Question",
    "Resolution-Answered",
    "WG-Cmdlets-Core"
  ],
  "number": 12313,
  "state": "closed",
  "title": "Accessing global functions from inside ForEach-Object -Parallel",
  "updated_at": "2020-04-15T09:12:49Z"
}