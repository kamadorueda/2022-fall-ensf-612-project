{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3941",
  "author": "vors",
  "body": "<!--\r\n\r\nIf it is a bug report:\r\n- make sure you are able to repro it on the latest released version. \r\nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\r\n- Search the existing issues.\r\n- Refer to the [FAQ](../docs/FAQ.md).\r\n- Refer to the [known issues](../docs/KNOWNISSUES.md).\r\n- Fill out the following repro template\r\n\r\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\r\n-->\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\nI don't have repro, but it happens fairly consistent with me on macOS.\r\nMaybe every 1 of 100 or so. Running it in the loop doesn't repro it.\r\nI understand that's it not an actionable bug report, but I hitted it about 5 times in a last week and it's pretty frustrating, so I'd like to at least start the conversation about it. It could be not a powershell problem all together, but I tend to think that it's probably PS.\r\n\r\n```\r\ngit branch \r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\nPrint branches and return back to prompt\r\n\r\nActual behavior\r\n---------------\r\n\r\nPrint branches and don't return to prompt for a very long time (perception like a hang, but eventually it returns to promp).\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value                                                                                                                     \r\n----                           -----                                                                                                                     \r\nPSVersion                      6.0.0-beta                                                                                                                \r\nPSEdition                      Core                                                                                                                      \r\nBuildVersion                   3.0.0.0                                                                                                                   \r\nCLRVersion                                                                                                                                               \r\nGitCommitId                    v6.0.0-beta.1                                                                                                             \r\nOS                             Darwin 16.6.0 Darwin Kernel Version 16.6.0: Fri Apr 14 16:21:16 PDT 2017; root:xnu-3789.60.24~6/RELEASE_X86_64            \r\nPlatform                       Unix                                                                                                                      \r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}                                                                                                   \r\nPSRemotingProtocolVersion      2.3                                                                                                                       \r\nSerializationVersion           1.1.0.1                                                                                                                   \r\nWSManStackVersion              3.0              \r\n```\r\n",
  "closed_at": "2018-09-28T17:59:15Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Sometime I see any artifacts between VS Code and GitHub Desktop. So maybe the Issue  is due to multiple git clients?",
      "created_at": "2017-06-06T12:22:48Z",
      "updated_at": "2017-06-06T12:22:48Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "Happens with other native executables too, i.e. `python` test runner",
      "created_at": "2017-06-07T21:13:42Z",
      "updated_at": "2017-06-07T21:13:42Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "Same with `arc` which is a tool for Phabricator.\r\nI'm very much convinced it's a PS problem.",
      "created_at": "2017-06-08T01:04:43Z",
      "updated_at": "2017-06-08T01:04:43Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Maybe delayed sleep on waiting external process?",
      "created_at": "2017-06-08T05:36:38Z",
      "updated_at": "2017-06-08T05:36:38Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "This happens consistently on all native executables but very rarely.\r\nI never can attach debugger quick enough to troubleshoot it.\r\n\r\nThis is currently my biggest usability problem with powershell.\r\n",
      "created_at": "2017-07-01T16:51:56Z",
      "updated_at": "2017-07-01T16:51:56Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Can we inject a trace hook?\r\nWe can use WPT (WPR/WPA) on Windows. Have Unix an equivalent?",
      "created_at": "2017-07-01T17:05:12Z",
      "updated_at": "2017-07-01T17:05:12Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "I captured some debug info attaching to the process and pausing it\r\nNo symbols unfortunately\r\n\r\n![image](https://user-images.githubusercontent.com/816680/27810652-eeb21076-6011-11e7-99bb-1d09e910fccb.png)\r\n\r\n\r\nThe PSReadLine one seems suspicious, cc @lzybkr \r\n\r\n```\r\nSystem.Private.CoreLib.ni.dll!System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[] waitHandles, int millisecondsTimeout, bool exitContext) (/Unknown Source:0)\r\nMicrosoft.PowerShell.PSReadLine.dll!Microsoft.PowerShell.PSConsoleReadLine.ReadKeyThreadProc() (/Unknown Source:0)\r\nSystem.Private.CoreLib.ni.dll!System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state) (/Unknown Source:0)\r\n[Native to Managed Transition] (/Unknown Source:0)\r\n```",
      "created_at": "2017-07-04T00:07:52Z",
      "updated_at": "2017-07-04T00:07:52Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "The PSReadline thread is probably not interesting, it's probably waiting for a signal to start reading keys.",
      "created_at": "2017-07-04T01:51:09Z",
      "updated_at": "2017-07-04T01:51:09Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "Yes I realised it after reading some code. Maybe ApplicationInsight has something to do with it?",
      "created_at": "2017-07-04T04:55:11Z",
      "updated_at": "2017-07-04T04:55:11Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": ">Running it in the loop doesn't repro it.\r\n\r\nMaybe we need console IO (type emulation) to repo it?",
      "created_at": "2017-07-04T10:21:20Z",
      "updated_at": "2017-07-04T10:22:29Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@vors the AppInsight code only runs once at startup",
      "created_at": "2017-07-05T16:51:04Z",
      "updated_at": "2017-07-05T16:51:04Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT do you know where this appinsight call stack on Thread#1 coming from? I skimmed thru telemetry code and indeed it seems that it should be only relevant on a startup.",
      "created_at": "2017-07-05T17:11:56Z",
      "updated_at": "2017-07-05T17:11:56Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "cc @JamesWTruher ",
      "created_at": "2017-07-05T17:15:07Z",
      "updated_at": "2017-07-05T17:15:07Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "At the first glance it looks not quite as a deadlock, but as a problem where all thread wait for a signal and some of them have timeout set for this wait, so it's eventually resolves itself. Not quite sure what's the proper name for this concurrent issue.",
      "created_at": "2017-07-05T17:46:38Z",
      "updated_at": "2017-07-05T17:46:38Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "I'm hitting it few times a day and it's ruining the powershell on mac so badly.\r\nThis issue is very hard to tolerate.",
      "created_at": "2017-08-31T21:45:32Z",
      "updated_at": "2017-08-31T21:45:32Z"
    },
    {
      "author": "JamesWTruher",
      "author_association": "MEMBER",
      "body": "I have seen this as well, although not as often as @vors is seeing it. The app insights call happens only at startup and only if the semaphore file is present in $PSHOME. Would dtruss help? Can you use it to inspect what's going on?",
      "created_at": "2017-09-01T16:58:44Z",
      "updated_at": "2017-09-01T16:58:44Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "For me it's not only on a srartup, maybe the app insights is a red herring.",
      "created_at": "2017-09-01T22:33:20Z",
      "updated_at": "2017-09-01T22:33:20Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "Removing `DELETE_ME_TO_DISABLE_CONSOLEHOST_TELEMETRY` didn't affect the problem",
      "created_at": "2017-09-02T00:12:38Z",
      "updated_at": "2017-09-02T00:12:38Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Maybe after we enable tracing we can narrow this down",
      "created_at": "2017-09-02T05:40:03Z",
      "updated_at": "2017-09-02T05:40:03Z"
    },
    {
      "author": "dgc",
      "author_association": "NONE",
      "body": "I appear to have a consistent reproduction of this now on a VM (which I've just backed up in case it starts being inconsistent again.)\r\n\r\n* VirtualBox 5.1.26\r\n* PuTTY Release 0.70\r\n\r\nVM details: \r\n\r\n```\r\n$ cat /etc/redhat-release\r\nCentOS Linux release 7.3.1611 (Core)\r\n\r\n$ screen -v\r\nScreen version 4.01.00devel (GNU) 2-May-06\r\n\r\nPS /home/dgc> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.0-beta\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.0-beta.6\r\nOS                             Linux 3.10.0-514.el7.x86_64 #1 SMP Tue Nov 22...\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n```\r\n\r\nIt happens all the time when I use GNU screen. I'm fairly sure that it wasn't this consistent in earlier versions of PowerShell.\r\n\r\nThe steps I took:\r\n\r\n1. Boot the VM\r\n1. Log into the VM via PuTTY\r\n1. Start a screen session with \"screen\"\r\n1. Run PowerShell with \"powershell\"\r\n1. Try a native command with \"cat /etc/redhat-release\"\r\n\r\nI get the expected output but the cursor just sits in column 0 on the next line like this:\r\n\r\n![image](https://user-images.githubusercontent.com/287612/30271175-362506a0-96e7-11e7-86fa-ee1692cf35cc.png)\r\n\r\nA combination of waiting and hitting Ctrl-C repeatedly will usually break out of it and then it looks like this:\r\n\r\n![image](https://user-images.githubusercontent.com/287612/30271107-f8643fde-96e6-11e7-9d45-687ae09f3ddc.png)\r\n\r\n",
      "created_at": "2017-09-11T10:49:24Z",
      "updated_at": "2017-09-11T10:49:24Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@dgc I think your repro is this issue https://github.com/PowerShell/PowerShell/issues/2364, try setting TERM",
      "created_at": "2017-09-15T03:38:59Z",
      "updated_at": "2017-09-15T03:38:59Z"
    },
    {
      "author": "dgc",
      "author_association": "NONE",
      "body": "@SteveL-MSFT Yes, it is.\r\n\r\nThe problem was resolved when:\r\n\r\n* I set TERM to \"xterm\" which resolved the problem on the packaged version of Screen (from 2006!?)\r\n* I built Screen 4.06.01 (July 2017) and it worked correctly without having to change TERM.\r\n",
      "created_at": "2017-09-15T12:23:22Z",
      "updated_at": "2017-09-15T12:23:22Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "Just captured this state in a debugger.\r\n\r\n![image](https://user-images.githubusercontent.com/816680/30770991-e9e8436e-9ff2-11e7-8460-461915e333d9.png)\r\n\r\nThis stack seems like this `WaitForExit()` call doesn't return https://github.com/PowerShell/PowerShell/blob/40577cb61ffdb4b94c8d5251bac7e07872fefc22/src/System.Management.Automation/engine/NativeCommandProcessor.cs#L698\r\n\r\n@SteveL-MSFT are there pdbs available somewhere? I'd like to get one for `v6.0.0-beta.6` on macOS if possible.\r\n\r\n",
      "created_at": "2017-09-23T07:07:22Z",
      "updated_at": "2017-09-23T07:16:10Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@vors I don't believe we publish the pdbs.  Best thing to do is to build it yourself unfortunately.",
      "created_at": "2017-09-23T14:36:44Z",
      "updated_at": "2017-09-23T14:36:44Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "ok, so I captured it with the symbols (`v6.0.0-beta.6`).\r\n\r\nHere are non-empty threads (whatever it means in the VSCode terms):\r\n\r\n![image](https://user-images.githubusercontent.com/816680/30887396-1f5276ac-a2d0-11e7-8652-10e42c729658.png)\r\n\r\n`Pipeline Execution Thread` is blocked on https://github.com/PowerShell/PowerShell/blob/40577cb61ffdb4b94c8d5251bac7e07872fefc22/src/System.Management.Automation/engine/NativeCommandProcessor.cs#L698\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/816680/30887409-33b9ea44-a2d0-11e7-90ec-11ae54b1749e.png)\r\n\r\n`Thread 6` https://github.com/PowerShell/PowerShell/blob/414d56170b7abe7b602d1692de4b570671c8b7e6/src/System.Management.Automation/engine/hostifaces/pipelinebase.cs#L387\r\n\r\n`Thread 7` (probably unrelated PSReadLine Wait)\r\nhttps://github.com/PowerShell/PowerShell/blob/414d56170b7abe7b602d1692de4b570671c8b7e6/src/Microsoft.PowerShell.PSReadLine/ReadLine.cs#L102\r\n\r\nThere is also `Thread 1` with AppInsight stuff and Wait (see screenshot), but there is no our code in the stacktrace of it.\r\n\r\nThat doesn't quite seems like a dead-lock for me anymore. I just think that dotnet core may have a problem sometimes with ` _nativeProcess.WaitForExit();`.\r\nBut I could not repro it separately to report :(",
      "created_at": "2017-09-26T22:40:13Z",
      "updated_at": "2017-09-26T23:12:31Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Maybe related https://github.com/dotnet/corefx/issues/19470",
      "created_at": "2017-09-27T07:36:39Z",
      "updated_at": "2017-09-27T07:36:39Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov I think your comment on `System.DirectoryServices` is for https://github.com/PowerShell/PowerShell/issues/3266?",
      "created_at": "2017-09-27T16:40:07Z",
      "updated_at": "2017-09-27T16:40:07Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT Yes, sorry.",
      "created_at": "2017-09-27T17:40:35Z",
      "updated_at": "2017-09-27T17:40:35Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Just got a MacBook Pro and I've noticed this with just the `git` commands.  Pretty annoying.",
      "created_at": "2017-10-02T00:30:56Z",
      "updated_at": "2017-10-02T00:30:56Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "Also in another case I noticed that there are 2 threads that are waiting on the same ManualResetEvent. The second one is thru https://github.com/PowerShell/PowerShell/blob/2a9cd7211fbcaee170eedab572ed88645aee0bd8/src/System.Management.Automation/engine/hostifaces/LocalPipeline.cs#L861",
      "created_at": "2017-10-11T19:49:40Z",
      "updated_at": "2017-10-11T19:49:40Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "As part of https://github.com/PowerShell/PowerShell/pull/4995, I'm changing it to reuse threads by default whereas previously it was creating a new thread everytime.  It might help this situation.",
      "created_at": "2017-10-11T20:54:32Z",
      "updated_at": "2017-10-11T20:54:32Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "One more observation about this situation is that once one powershell process hangs on a `git` command, others will too with very high probability",
      "created_at": "2017-10-18T19:20:59Z",
      "updated_at": "2017-10-18T19:20:59Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "JFYI, still seeing it on `6.0.0-rc`, so the thread reusing doesn't seems to help",
      "created_at": "2017-11-22T00:49:31Z",
      "updated_at": "2017-11-22T00:49:31Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Without a clear repro, moving to 6.1.0",
      "created_at": "2017-12-06T00:51:08Z",
      "updated_at": "2017-12-06T00:51:08Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "FWIW it happens much more frequently after a system wake up. On mac while laptop is closed, system does hibernation. This native call hang is the first thing in the morning that greets me almost every day. But it also happens in a steady state sporadically.",
      "created_at": "2017-12-24T20:40:01Z",
      "updated_at": "2017-12-24T20:40:01Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "I stop seeing this recently. Perhaps dotnet finally get around to solve it.",
      "created_at": "2018-09-28T06:37:50Z",
      "updated_at": "2018-09-28T06:37:50Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I haven't experienced myself in a long time.  Let's close this and if it repros we can reopen.",
      "created_at": "2018-09-28T17:59:15Z",
      "updated_at": "2018-09-28T17:59:15Z"
    }
  ],
  "created_at": "2017-06-05T21:51:02Z",
  "labels": [
    "OS-macOS",
    "WG-Interactive-Console",
    "WG-Engine"
  ],
  "number": 3941,
  "state": "closed",
  "title": "native commands doesn't return to prompt immediately sometimes",
  "updated_at": "2018-09-28T17:59:16Z"
}