{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11411",
  "author": "rgroefer",
  "body": "### Import-CSV Looks in Parent Directory\r\nAfter throwing an error using ConvertFrom-String, Import-Csv no longer uses the current directory, but looks in the parent directory instead.  I'll add my code so you may simulate the same thing.  This code throws an error on ConvertFrom-String, which appears to generate the directory issue on the Import-Csv, but not other cmdlets like Get-Item or Get-Content.\r\n\r\n$PSVersionTable:                                                                                                    \r\nPSRemotingProtocolVersion - 2.3                                                                                                        \r\nPlatform - Win32NT                                                                                                    \r\nPSVersion - 7.0.0-rc.1                                                                                                 \r\nPSCompatibleVersions - {1.0, 2.0, 3.0, 4.0...}                                                                                    \r\nOS -Microsoft Windows 10.0.18362                                                                               \r\nGitCommitId - 7.0.0-rc.1                                                                                                 \r\nWSManStackVersion - 3.0                                                                                                        \r\nPSEdition - Core                                                                                                       \r\nSerializationVersion - 1.1.0.1                                                                                                    \r\n\r\n### Steps to Reproduce\r\nCode:\r\n```\r\n$imp = Import-Csv .\\TestColumn.csv\r\n$Template = @'\r\n{Type*:IP4Address},{IP:10.20.30.40}\r\n'@\r\n$imp.col2 | ConvertFrom-String -TemplateContent $Template -PropertyNames Type,IP\r\nImport-Csv `.\\TestColumn.csv\r\n```\r\nContent in the IP file (fake IPs... of course)\r\n```\r\ngc .\\TestColumn.csv\r\nCol1,Col2\r\nOne,@{IP4Address=10.20.30.41}\r\nTwo,@{IP4Address=10.20.30.42}\r\nThree,@{IP4Address=10.20.30.43}\r\nFour,@{IP4Address=10.20.30.44}\r\n```",
  "closed_at": "2020-01-15T05:00:18Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> ConvertFrom-String\r\n\r\nWinCompat feature is activated and the issue could come from the fact.\r\n\r\n/cc @anmenaga @SteveL-MSFT ",
      "created_at": "2019-12-20T19:12:18Z",
      "updated_at": "2019-12-20T19:12:18Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@anmenaga Bruce made this change for the WindowsCompat module to track the current directory, may need something similar: https://github.com/PowerShell/WindowsCompatibility/pull/47",
      "created_at": "2019-12-21T00:42:55Z",
      "updated_at": "2019-12-21T00:42:55Z"
    },
    {
      "author": "anmenaga",
      "author_association": "CONTRIBUTOR",
      "body": "This is a duplicate of #11419 \r\n`ConvertFrom-String` causes WinCompat loading of `Microsoft.PowerShell.Utility` module, which also generates `Import-Csv` proxy function which according to #11419 takes precedence over original `Import-Csv`.\r\n```\r\nPS C:\\1> Get-Command Import-Csv -All\r\nCommandType     Name                                               Version    Source\r\n-----------     ----                                               -------    ------\r\nCmdlet          Import-Csv                                         7.0.0.0    Microsoft.PowerShell.Utility\r\nFunction        Import-Csv                                         1.0        Microsoft.PowerShell.Utility\r\n```\r\n\r\n**Workaround 1** - call local `Import-Csv` cmdlet using call operator\r\n```\r\n&(Get-Command -Name Import-Csv -CommandType Cmdlet) .\\TestColumn.csv\r\n```\r\nor\r\n```\r\n$ImportCsv = Get-Command -Name Import-Csv -CommandType Cmdlet\r\n&($ImportCsv) .\\TestColumn.csv\r\n```\r\n\r\n**Workaround 2** - fix WinCompat session / proxy function to update current dir in remote session whenever local current dir changes\r\n```\r\n$ExecutionContext.InvokeCommand.LocationChangedAction = {$s = Get-PSSession -Name WinPSCompatSession; if ($s) {$newPath = $_.newPath;Invoke-Command $s {Set-Location $using:newPath}}}\r\ncd . # just once; this will sync remote current dir to the current one; subsequent local dir changes will be sync'ed automatically\r\nImport-Csv .\\TestColumn.csv # this will call the proxy function, but it supports serialization, so this works fine\r\n```",
      "created_at": "2020-01-14T03:42:54Z",
      "updated_at": "2020-01-14T03:44:34Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as duplicate and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2020-01-15T05:00:17Z",
      "updated_at": "2020-01-15T05:00:17Z"
    }
  ],
  "created_at": "2019-12-20T16:19:50Z",
  "number": 11411,
  "state": "closed",
  "title": "Import-CSV Uses Parent Folder After Error",
  "updated_at": "2020-01-15T05:00:18Z"
}