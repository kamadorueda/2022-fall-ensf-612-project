{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4261",
  "author": "bergmeister",
  "body": "This is the updated version of PR #4213, in which it was requested to split the commits on a per kind category.\r\nThe intend is to help with fixing #3791. The fixed PSScriptAnalyzer warnings are PSPossibleIncorrectComparisonWithNull and PSAvoidUsingCmdletAliases for ForEach-Object, Where-Object and Select-Object since those warning types were responsible for the majority of warnings.\r\n",
  "closed_at": "2017-07-22T04:03:50Z",
  "comments": [
    {
      "author": "msftclas",
      "author_association": "NONE",
      "body": "\r\n@bergmeister,\nThanks for having already signed the Contribution License Agreement. Your agreement was validated by Microsoft. We will now review your pull request.\n_Thanks,\nMicrosoft Pull Request Bot_",
      "created_at": "2017-07-14T23:47:21Z",
      "updated_at": "2017-07-14T23:47:21Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@bergmeister Thank you so much for taking extra effort splitting the original PR by the fix categories!",
      "created_at": "2017-07-15T01:03:47Z",
      "updated_at": "2017-07-15T01:03:47Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "LGTM.",
      "created_at": "2017-07-17T06:49:33Z",
      "updated_at": "2017-07-17T06:49:33Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "I don't think we should touch CSharp files and Markdown files. PSScriptAnalyzer warnings should be applicable only to powershell script files.",
      "created_at": "2017-07-17T17:12:01Z",
      "updated_at": "2017-07-17T17:12:01Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Should we fix CSharp files and Markdown files in separate PRs?",
      "created_at": "2017-07-17T17:19:04Z",
      "updated_at": "2017-07-17T17:19:04Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "I don't think we need to make those changes in non-powershell-script files, since the goal is to avoid PSScriptAnalyzer warnings.\r\nIt's easy to revert changes in CSharp/Markdown files -- do a soft reset, and then `cd` into `PowerShell\\src` and run `git checkout .`. It should reset all changes in `PowerShell\\src` folder. And it's similar to Markdown files.",
      "created_at": "2017-07-17T17:29:06Z",
      "updated_at": "2017-07-17T17:33:39Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "@daxian-dbw If you say that the only goal is to avoid PSScriptAnalyzer warnings, then I'm not sure if you considered the reason why those rules exist. They are there best practices to avoid unintended/wrong behaviour and therefore apply to any file using PS syntax IMHO. PSPossibleIncorrectComparisonWithNull is the best example where it can result in e.g. an if condition that always evaluates to true. I can understand if you are concerned that in the case of PSPossibleIncorrectComparisonWithNull, changes in the code of the actual product could lead to a regression and should be excluded but in the case of PSAvoidUsingCmdletAliases, I do not see a reason as to why cs/md files should be excluded. WDYT?",
      "created_at": "2017-07-19T23:34:37Z",
      "updated_at": "2017-07-19T23:34:37Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@bergmeister Thanks for the comment, and you have very good points. Yes, my main concern about changing the `.cs` files is the potential regression. Given the size of changes, it could be easy for us to overlook something in the review. That being said, I think you are right that the scripts declared in C# code should follow the rules as well, but I would suggest that we leave the comments unchanged in C# code, especially those that still use other aliases.\r\n\r\nAs for the PSScriptAnalyzer rules, it's very useful to write easy-to-maintain and less error-prone PS script files, but it's not necessarily always applicable to any PSH syntax, for example, the script that serves as a one-liner command for you to run interactively, in which case aliases may be more preferred because they make the command concise and easy to type. The changes in [`KnownIssues.md`](https://github.com/PowerShell/PowerShell/pull/4261/files#diff-f25db63262b5a4a08e655687e9e2ec18R53) would be a good example of it -- `ls (gci *.txt | % name)` is a command for a user to run interactively, and thus it's OK to keep the aliases. It's a similar idea for scripts in c# comments -- those simple scripts are only for demonstrating the scenarios, and thus it's OK to use the aliases to keep them concise.",
      "created_at": "2017-07-20T06:38:22Z",
      "updated_at": "2017-07-20T06:39:36Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Only we don't type samples from code and md files - we copy-paste \ud83d\ude04 ",
      "created_at": "2017-07-20T06:50:18Z",
      "updated_at": "2017-07-20T06:50:18Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@iSazonov right :) my point is that for the one-liner scripts like those, it's OK to use aliases to keep them concise.\r\nI will do a pass of review on the `.cs` files.",
      "created_at": "2017-07-20T15:58:38Z",
      "updated_at": "2017-07-20T15:58:38Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@bergmeister Please push new commits to address the comments and resolve conflicts. **Please DO NOT rebase your branch**. This way, we can keep the review history which is very important for large size changes like this PR.",
      "created_at": "2017-07-20T20:23:38Z",
      "updated_at": "2017-07-20T20:24:57Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@bergmeister I just resolved the 2 conflicts. I think we need faster review iterations on this PR, because there are many other PRs changing the script files covered in this PR and thus there will be more conflicts very soon.",
      "created_at": "2017-07-21T16:50:46Z",
      "updated_at": "2017-07-21T16:50:46Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "@daxian-dbw I have applied your requested changes.",
      "created_at": "2017-07-21T22:27:27Z",
      "updated_at": "2017-07-21T22:27:27Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@bergmeister Thank you for your patience and hard work!",
      "created_at": "2017-07-22T19:40:04Z",
      "updated_at": "2017-07-22T19:40:04Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov @daxian-dbw Thank you both as well. I really had no idea it would turn out to be that complex. I am currently developing a `-AutoFix` switch for `Invoke-PSScriptAnalyzer` that will make it easier for everyone to fix some of the remaining warnings in the future.",
      "created_at": "2017-07-22T21:41:35Z",
      "updated_at": "2017-07-22T21:41:35Z"
    }
  ],
  "created_at": "2017-07-14T23:47:18Z",
  "number": 4261,
  "state": "closed",
  "title": "PSScriptAnalyzer fixes by category",
  "updated_at": "2017-07-22T21:41:35Z"
}