{
  "_url": "https://github.com/PowerShell/PowerShell/issues/8790",
  "author": "msftrncs",
  "body": "# Summary of the new feature/enhancement\r\n\r\nA `Parameter()` attribute arguments should not require a comma when separated by newline's.  The comma's serve no purpose, unlike the comma's between each parameter.  While the assignment operator will allow line continuation, nothing else will, so each argument will end at the first newline that isn't in `()` anyway.\r\n\r\nHowever, to be honest, I cannot think of anywhere else where comma's are not required for separating items enclosed in `()`.\r\n\r\n```PowerShell\r\nfunction `#a\u2015\u2015 ($a\r\n= 35,   # this is allowed\r\n    [Parameter(Mandatory = $true,\r\n        ValueFromPipeline\r\n         =$true, # this isn't allowed anyway\r\n        ValueFromPipelineByPropertyName = $true)]\r\n    [AllowEmptyCollection() ]\r\n    [AllowNull()]\r\n    [AllowEmptyString()]\r\n    [object]$PropertyList\r\n    ) {}\r\n```\r\n\r\nwithout comma's:\r\n```PowerShell\r\nfunction `#a\u2015\u2015 ($a = 35, \r\n    [Parameter(Mandatory = $true\r\n        ValueFromPipeline = $true\r\n        ValueFromPipelineByPropertyName = $true)]\r\n    [AllowEmptyCollection() ]\r\n    [AllowNull()]\r\n    [AllowEmptyString()]\r\n    [object]$PropertyList\r\n    ) {}\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I guess that it is parsed as a parameter list and will affect function and method calls.",
      "created_at": "2019-01-30T06:59:31Z",
      "updated_at": "2019-01-30T06:59:31Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Hmm. Possibly. But the AST for an attribute declaration is very much distinct from a normal method call. It probably isn't impossible to have them parsed differently, although I do not know if it is necessarily something we ought to do.",
      "created_at": "2019-01-30T11:08:44Z",
      "updated_at": "2019-01-30T11:08:44Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@lzybkr Could you please comment?",
      "created_at": "2019-02-02T14:56:45Z",
      "updated_at": "2019-02-02T14:56:45Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "First, this sounds like a bug to me - easy to fix and shouldn't preclude requiring commas between arguments:\r\n\r\n```powershell\r\n    [Parameter(ValueFromPipeline\r\n         = $true)]\r\n```\r\n\r\nI can't think of a technical reason to require commas, but I'm not sure I like the aesthetics.\r\n\r\nThe syntax mimics the parameter list for method invocation in part because an attribute is calling a method - the constructor (followed by setting properties from the named argument values.)",
      "created_at": "2019-02-04T05:44:51Z",
      "updated_at": "2019-02-04T05:44:51Z"
    },
    {
      "author": "Jaykul",
      "author_association": "CONTRIBUTOR",
      "body": "I was just about to file a request asking for the commas _between parameters_ to be optional when I saw this. In other places where we explicitly _know_ we're dealing with a list, we do allow commas to be optional. The most obvious is arrays:\r\n\r\n```PowerShell\r\n$rhyme = @(\r\n\"one\"\r\n\"two\"\r\n)\r\n```\r\n\r\nI don't see anything that would absolutely prevent making the commas **between** attribute properties optional -- to be clear, it wouldn't just affect `Parameter()` but all attributes -- but I'm not sure I think it's useful. They are weird and have many syntaxes anyway:\r\n\r\n```PowerShell\r\n[Parameter(\"Mandatory\", \"Hide\", Mandatory, ValueFromPipeline, ValueFromPipelineByPropertyName)]\r\n[object]$PropertyList\r\n```\r\n```PowerShell\r\n[Parameter(\"Mandatory\", \r\n           \"Hide\",\r\n           Mandatory,\r\n           ValueFromPipeline,\r\n           ValueFromPipelineByPropertyName)]\r\n[object]$PropertyList\r\n```\r\n```PowerShell\r\n[Parameter(\"Mandatory\", \r\n           ExperimentAction = \"Hide\",\r\n           Mandatory = $false,\r\n           ValueFromPipeline = $true,\r\n           ValueFromPipelineByPropertyName)]\r\n[object]$PropertyList\r\n```\r\n\r\nAdding the option to leave out the commas _if there's a newline_ seems fine (without having looked at the parser code), even if it's not hugely compelling...\r\n\r\n```PowerShell\r\n[Parameter(\"Mandatory\"\r\n           ExperimentAction = \"Hide\"\r\n           Mandatory = $false\r\n           ValueFromPipeline = $true\r\n           ValueFromPipelineByPropertyName)]\r\n[object]$PropertyList\r\n```\r\n",
      "created_at": "2019-02-23T03:45:03Z",
      "updated_at": "2019-02-23T03:45:03Z"
    }
  ],
  "created_at": "2019-01-30T01:02:04Z",
  "labels": [
    "Issue-Enhancement",
    "WG-Language"
  ],
  "number": 8790,
  "state": "open",
  "title": "Remove unnecessary comma requirement in parameter attribute",
  "updated_at": "2019-02-23T03:45:04Z"
}