{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13365",
  "author": "mklement0",
  "body": "Following up from https://github.com/PowerShell/PowerShell/pull/13082#discussion_r466009551:\r\n\r\nOn Windows, the `.Target` property (an ETS property added to `FileSystemInfo` instances) has always returned a symlink's target _as defined in the link itself_ - which may be a relative or an absolute path.\r\n\r\nOn Unix, we currently unexpectedly resolve the target path to a _full_ path in `.Target`, with no ability to inspect the target path _as defined_.\r\n\r\nNote: It would also be convenient to have a separate property that always reflects the _full_ path, irrespective of whether the symlink is defined with a relative or full target path - see #13366.\r\n\r\n## Steps to reproduce\r\n\r\nOn macOS or Linux:\r\n\r\n```powershell\r\nPush-Location Temp:/\r\n\r\nmkdir -p f$PID\r\n\r\n# Define a symlink with  a *relative* target path.\r\nNew-Item -Type SymbolicLink f$PID_L -Target ./f$PID\r\n\r\n# Querying .Target should return the target path *as defined*.\r\n(Get-Item f$PID_L).Target | Should -Be ./f$PID\r\n\r\nRemove-Item -Recurse f$PID, f$PID_L; Pop-Location\r\n```\r\n\r\n## Expected behavior\r\n\r\nThe test should succeed.\r\n\r\n## Actual behavior\r\n\r\nThe test fails, because the target path is returned not as defined, but as a full path.\r\n\r\n## Environment data\r\n\r\n```none\r\nPowerShell Core 7.1.0-preview.5\r\n```\r\n",
  "closed_at": "2021-10-27T16:39:33Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "There is a problem with Target property on Unix-s. We call FollowSymLink() that is a native code from PowerShell-Native (libpsl-native)\r\nhttps://github.com/PowerShell/PowerShell-Native/blob/7b7b889e8a331fd0ea47082d5edbf80402ea51ad/src/libpsl-native/src/followsymlink.cpp#L39-L47\r\n\r\nDocs explicitly say that realpath() always returns absolute path.\r\n\r\nIt is should be fixed in psl (PowerShell-Native repository) and we need an approve from @adityapatwardhan .\n\n<blockquote><img src=\"https://avatars0.githubusercontent.com/u/11524380?s=400&v=4\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/PowerShell/PowerShell-Native\">PowerShell/PowerShell-Native</a></strong></div><div>Contribute to PowerShell/PowerShell-Native development by creating an account on GitHub.</div></blockquote>",
      "created_at": "2020-08-06T16:29:54Z",
      "updated_at": "2020-08-06T16:29:56Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov, looks like the `FollowSymLink()` function needs another, optional argument that specifies whether `realpath()` should be called for resolution to a full path (or, alternatively, introduce a separate `ReadSymLink()` function).\r\n\r\nIf not, a call to `readlink()` is sufficient , which `FollowSymLink()` already does - but only _as a fallback_ (if the target path doesn't exist).\r\n\r\n\r\n",
      "created_at": "2020-08-06T16:36:29Z",
      "updated_at": "2020-08-06T16:37:32Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "If we think about a script users will use either Target or ResolvedTarget but not both. In the case I'd add new p/invoke `FollowSymLinkResolved()`.\r\nI don't know whether we need this or no but if we need we could resolve the full path in C# without complication psl.",
      "created_at": "2020-08-06T16:54:39Z",
      "updated_at": "2020-08-06T16:54:39Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "It certainly would be nice to have cross-platform `realpath()` functionality available in .NET itself, and to surface that via `Convert-Path`, as suggested in #10640 - I never got around to asking in the dotnet repo for such an API.\r\n",
      "created_at": "2020-08-06T17:03:28Z",
      "updated_at": "2020-08-06T17:03:28Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": ">  I never got around to asking in the dotnet repo for such an API\r\n\r\nThere is an issue to add symlink support - you can share thoughts there.",
      "created_at": "2020-08-06T17:11:15Z",
      "updated_at": "2020-08-06T17:11:15Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks, @iSazonov,  I've added a suggestion to add a  `System.IO.Path.GetFullPath()` overload for canonical path resolution there: https://github.com/dotnet/runtime/issues/24271#issuecomment-670709364",
      "created_at": "2020-08-07T20:59:49Z",
      "updated_at": "2020-08-07T20:59:49Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Is this already fixed in 7.2?",
      "created_at": "2021-10-27T07:09:30Z",
      "updated_at": "2021-10-27T07:09:30Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Yes, it appears to be fixed as of PowerShell Core 7.2.0-rc.1 (tested on macOS 10.15.7 and Ubuntu 18.04).",
      "created_at": "2021-10-27T16:39:33Z",
      "updated_at": "2021-10-27T16:39:33Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Fixed in #16165.\r\n\r\n@mklement0 Thanks for finding this!",
      "created_at": "2021-10-27T17:04:18Z",
      "updated_at": "2021-10-27T17:04:18Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:This issue was addressed in #16165, which has now been successfully released as `v7.3.0-preview.1`.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.3.0-preview.1)\n",
      "created_at": "2021-12-16T19:58:36Z",
      "updated_at": "2021-12-16T19:58:36Z"
    }
  ],
  "created_at": "2020-08-06T13:04:50Z",
  "labels": [
    "Issue-Bug",
    "Resolution-Fixed",
    "WG-Engine-Providers"
  ],
  "number": 13365,
  "state": "closed",
  "title": "On Unix, the .Target property should report a symlink's target path as defined, not resolved to a full path",
  "updated_at": "2021-12-16T19:58:36Z"
}