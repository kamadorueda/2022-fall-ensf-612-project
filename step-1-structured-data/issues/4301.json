{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4301",
  "author": "oising",
  "body": "set-psreadlinekeyhandler <binding> -function <builtin> was CS due to missing bindingflags for reflection  lookup. It's now CI.\r\n\r\n<!--\r\n\r\nIf you are a PowerShell Team member, please make sure you choose the Reviewer(s) and Assignee for your PR.\r\nIf you are not from the PowerShell Team, you can leave the fields blank and the Maintainers will choose them for you. If you are familiar with the team, feel free to mention some Reviewers yourself.\r\n\r\nFor more information about the roles of Reviewer and Assignee, refer to CONTRIBUTING.md.\r\n\r\n-->\r\n",
  "closed_at": "2017-08-07T21:24:35Z",
  "comments": [
    {
      "author": "oising",
      "author_association": "CONTRIBUTOR",
      "body": "fixes https://github.com/PowerShell/PowerShell/issues/4300",
      "created_at": "2017-07-19T22:31:13Z",
      "updated_at": "2017-07-19T22:31:13Z"
    },
    {
      "author": "oising",
      "author_association": "CONTRIBUTOR",
      "body": "Certainly, Jason\n\nSent from my Windows 10 phone\n\nFrom: Jason Shirk<mailto:notifications@github.com>\nSent: Friday, July 21, 2017 1:13 PM\nTo: PowerShell/PowerShell<mailto:PowerShell@noreply.github.com>\nCc: Oisin Grehan<mailto:oising@gmail.com>; Mention<mailto:mention@noreply.github.com>\nSubject: Re: [PowerShell/PowerShell] PSReadline keyhandler built-in function names are now CI when ref'd (fixes #4300) (#4301)\n\n\n@lzybkr commented on this pull request.\n\n________________________________\n\nIn test/powershell/Modules/PSReadLine/PSReadLine.Tests.ps1<https://github.com/PowerShell/PowerShell/pull/4301#discussion_r128813279>:\n\n> @@ -42,6 +42,13 @@ Describe \"PSReadLine\" -tags \"CI\" {\n         (Get-PSReadLineKeyHandler | where { $_.Key -ceq \"Alt+B\" }).Function | Should Be SelectBackwardWord\n     }\n\n+    It \"Should ignore case when using Function binding\" {\n+        Set-PSReadlineOption -EditMode Windows\n+        $lowerCaseFunctionName = \"yank\";\n+        Set-PSReadlineKeyHandler \"Ctrl+k\" -Function $lowerCaseFunctionName\n\n\nCan you use a different key that is unbound, preferably one that most keyboards don't even have? That way if someone ran this test from their interactive sessions, it won't mess up the editing experience.\n\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub<https://github.com/PowerShell/PowerShell/pull/4301#pullrequestreview-51532122>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ABwjIXQCQLMef8dWGKxePPJlQs0s3fCKks5sQNxFgaJpZM4OdYX7>.\n",
      "created_at": "2017-07-21T20:19:02Z",
      "updated_at": "2017-07-21T20:19:02Z"
    },
    {
      "author": "oising",
      "author_association": "CONTRIBUTOR",
      "body": "urgh, why is the merge commit appearing in here? Dammit, do I need to rebase and squash? ",
      "created_at": "2017-07-27T23:18:29Z",
      "updated_at": "2017-07-27T23:18:29Z"
    },
    {
      "author": "oising",
      "author_association": "CONTRIBUTOR",
      "body": "@lzybkr Looks like the binding `F24`  is not recognized under *nix -- the Travis CI build is failing the corresponding test to read it back. Windows is fine... sigh. \r\n\r\nupdate: Yes, verified on WSL. At least I can test alternatives on my local w10 box.\r\n\r\nupdate2: Interesting -- attempts to bind \"F24\" result in a binding for \"f\" on WSL\r\n\r\nupdate3: 1..24 | % { set-psreadlinekeyhandler \"F${_}\" -function Yank } # results in 24 bindings for \"f\"",
      "created_at": "2017-07-27T23:22:25Z",
      "updated_at": "2017-07-28T01:52:29Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "The logic for converting string to key binding is different on *nix, so my guess is that code isn't working correctly. You wrote the Win32 version, so you know where to look. :)\r\n\r\nAnd don't worry about the merge commit - we'll squash when merging anyway.",
      "created_at": "2017-07-28T00:28:18Z",
      "updated_at": "2017-07-28T00:28:18Z"
    },
    {
      "author": "oising",
      "author_association": "CONTRIBUTOR",
      "body": "@lzybkr I was just coming to that realization when you posted... I was looking through the chord/key parsing code and thinking \"hmmm, this seems familiar...oh ****\"",
      "created_at": "2017-07-28T02:06:29Z",
      "updated_at": "2017-07-28T02:06:29Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@oising Thanks for your contribution!",
      "created_at": "2017-08-08T03:33:55Z",
      "updated_at": "2017-08-08T03:33:55Z"
    },
    {
      "author": "oising",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov It was an itch I scratched. There'll be more, I hope :)",
      "created_at": "2017-08-08T16:33:24Z",
      "updated_at": "2017-08-08T16:33:24Z"
    }
  ],
  "created_at": "2017-07-19T22:30:27Z",
  "number": 4301,
  "state": "closed",
  "title": "Ignore case when binding PSReadline keyhandler functions",
  "updated_at": "2017-08-08T16:33:24Z"
}