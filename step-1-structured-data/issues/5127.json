{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5127",
  "author": "SteveL-MSFT",
  "body": "ErrorRecord output goes through ComplexWriter which splits lines based on console window width\r\n\r\nFix is to add a flag to FormatEntryData to know that it's an ErrorRecord and don't constrain\r\nthe output to window width\r\n\r\nExisting Write-Error.Tests.ps1 was not formatted correctly, so added some indentation to make it easier to read while modifying the file.\r\n\r\nFix https://github.com/PowerShell/PowerShell/issues/3813\r\n\r\n<!--\r\n\r\nIf you are a PowerShell Team member, please make sure you choose the Reviewer(s) and Assignee for your PR.\r\nIf you are not from the PowerShell Team, you can leave the fields blank and the Maintainers will choose them for you. If you are familiar with the team, feel free to mention some Reviewers yourself.\r\n\r\nFor more information about the roles of Reviewer and Assignee, refer to [CONTRIBUTING.md](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md).\r\n\r\n-->",
  "closed_at": "2017-10-19T23:40:10Z",
  "comments": [
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "I think there are 2 issues here:\r\n\r\n* Native command errors should be treated like a simple string - maybe we can add to `Microsoft.PowerShell.Commands.Internal.Format.DefaultScalarTypes`.\r\n* Script errors (or any type really) need a way to say - let wrapping for this property happen downstream or not at all.\r\n\r\nI wonder if fixing the first issue (assuming my suggestion works) is sufficient for now while we explore a less hacky fix for the second issue.\r\n",
      "created_at": "2017-10-15T19:38:36Z",
      "updated_at": "2017-10-15T19:38:36Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@lzybkr currently, native command errors get wrapped in an ErrorRecord making this more complicated than it should be.  Are you suggesting adding ErrorRecord to DefaultScalarTypes so that it should (hypothetically) just be ToString()?",
      "created_at": "2017-10-15T20:32:32Z",
      "updated_at": "2017-10-15T20:32:32Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "Add `ErrorRecord` to `DefaultScalarTypes` is probably insufficient - we'd find the view and apply that before looking at `DefaultScalarTypes`.\r\n\r\nIt feels wrong to wrap those lines in an `ErrorRecord`. Maybe we should just stop doing that.",
      "created_at": "2017-10-15T20:56:08Z",
      "updated_at": "2017-10-15T20:56:08Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Is `Out-Default` a single entry point for all the cases? If so we could add new parameter to turn on/off wrap. `Out-String` and `Out-File` already has `Width` parameter - for redirection operator we could call `Out-File -Width [int]::MaxValue`.",
      "created_at": "2017-10-16T11:27:19Z",
      "updated_at": "2017-10-16T11:27:19Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@lzybkr Adding System.Management.Automation.ErrorRecord to DefaultScalarTypes is not sufficient as in FormatViewManager.cs:531, view is not null so it doesn't go through the DefaultScalarTypes check path.",
      "created_at": "2017-10-17T06:02:38Z",
      "updated_at": "2017-10-17T06:02:38Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@lzybkr do you have other concerns with the current fix as-is?  I think the wrapping of stderr is covered by the other existing issues such as https://github.com/PowerShell/PowerShell/issues/3996",
      "created_at": "2017-10-19T21:14:47Z",
      "updated_at": "2017-10-19T21:14:47Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "My concern is - this change affects more than native commands, and if we stop wrapping stderr in an ErrorRecord, this PR isn't necessary.",
      "created_at": "2017-10-19T21:21:29Z",
      "updated_at": "2017-10-19T21:21:29Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "And I should add - it's too targeted - it doesn't solve the more general problem of wrapping when the output is to a file.",
      "created_at": "2017-10-19T21:22:33Z",
      "updated_at": "2017-10-19T21:22:33Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "This solves the specific problem of stderr output being broken when output is redirected to file (stdout already didn't have an issue) as well as any errorrecord having linebreaks inserted into the output.  I think we can have the general issue fix as a separate PR.",
      "created_at": "2017-10-19T21:38:23Z",
      "updated_at": "2017-10-19T21:38:23Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "I have two objections:\r\n\r\n* Wrapping stderr in an ErrorRecord introduces undesirable side effects like this.\r\n* Formatting wraps nearly all types when output to file - which we also don't want.\r\n\r\nWe could fix this issue by not wrapping stderr and not touch formatting, or you could generalize the fix for formatting and not add the knowledge of this specific type.\r\n\r\nFrom my point of view, you're adding dead code to the formatting engine - I can see this code living well beyond the other issues getting addressed.",
      "created_at": "2017-10-19T21:58:18Z",
      "updated_at": "2017-10-19T21:58:18Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I've re-titled the original issue to be more general.  I think the formatting wrapping is a separate issue which I'll open.",
      "created_at": "2017-10-19T23:40:10Z",
      "updated_at": "2017-10-19T23:40:10Z"
    }
  ],
  "created_at": "2017-10-15T16:37:20Z",
  "number": 5127,
  "state": "closed",
  "title": "StdErr/ErrorRecord should not be modified on output",
  "updated_at": "2017-11-12T05:17:52Z"
}