{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11829",
  "author": "PaulHigin",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nThis fixes a bug in ForEach-Object -Parallel where a using variable in a nested ForEach-Object -Parallel throws an error even when the variable is defined in the correct scope (Issue #11817).\r\n\r\n## PR Context\r\n\r\nThis error was occurring because, when ForEach-Object -Parallel was assembling the user variable map, it was searching all nested scriptblocks within the ForEach scriptblock, with the result of finding nested using variables where the variable had not yet been defined.  Since the nested scriptblock using variable had not been defined in the current scope, a mapping error was thrown.\r\n\r\nFix is to change the using variable map function to not search nested scriptblocks in the ForEach -Parallel case.  This way foreach -parallel using variable mapping is always performed only for the current scope.\r\n\r\nMany thanks to @mklement0  for pointing out the fix.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [ ] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [x] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [x] Issue filed: 5436\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2021-01-05T22:12:15Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@PaulHigin would this fix also affect the use of nested iterations of `Start-ThreadJob` and similar `$using:` variable usage there?",
      "created_at": "2020-02-12T04:08:02Z",
      "updated_at": "2020-02-12T04:08:02Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "@vexx32  No, ThreadJob will also need to change.  Please create an issue for it.",
      "created_at": "2020-02-12T17:37:25Z",
      "updated_at": "2020-02-12T17:37:25Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Just double checked it, and looks like `Start-ThreadJob` doesn't exhibit the same issue, interestingly enough. \ud83c\udf89 ",
      "created_at": "2020-02-14T05:09:40Z",
      "updated_at": "2020-02-14T05:09:40Z"
    },
    {
      "author": "PrzemyslawKlys",
      "author_association": "NONE",
      "body": "Will this be added to RC3? ",
      "created_at": "2020-02-18T19:04:40Z",
      "updated_at": "2020-02-18T19:04:40Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@PrzemyslawKlys I don't think so, as the RC3 is already locked down and we have a very high bar for GA. But this fix will be included in a servicing release later.",
      "created_at": "2020-02-18T19:08:17Z",
      "updated_at": "2020-02-18T19:08:17Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMainainer, Please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2020-05-27T02:01:41Z",
      "updated_at": "2020-05-27T02:01:41Z"
    },
    {
      "author": "PrzemyslawKlys",
      "author_association": "NONE",
      "body": "What is the status of this PR?",
      "created_at": "2020-12-20T12:50:52Z",
      "updated_at": "2020-12-20T12:50:52Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "AFAIK there is no reason not to take this PR.  @daxian-dbw can we include this in the next preview release?",
      "created_at": "2021-01-04T23:59:14Z",
      "updated_at": "2021-01-04T23:59:14Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@PaulHigin Please rebase to pass CIs.",
      "created_at": "2021-01-05T06:07:41Z",
      "updated_at": "2021-01-05T06:07:41Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "Closing this PR since it is so old, and created a new one (#14548)",
      "created_at": "2021-01-05T22:12:15Z",
      "updated_at": "2021-01-05T22:12:15Z"
    }
  ],
  "created_at": "2020-02-11T18:05:44Z",
  "number": 11829,
  "state": "closed",
  "title": "[WIP] Fix using variable error for nested foreach parallel",
  "updated_at": "2021-01-05T22:12:15Z"
}