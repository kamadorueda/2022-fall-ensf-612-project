{
  "_url": "https://github.com/PowerShell/PowerShell/issues/18314",
  "author": "xtqqczze",
  "body": "Use [CsWin32](https://github.com/microsoft/CsWin32) source generator for Win32 P/Invoke methods and supporting types.\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "I think it's a little early to make the switch atm. There's no release version yet (which is reason enough from a policy standpoint I believe), and they don't have enough settings for customization yet.\r\n\r\nFor instance, one option that is off by default in the underlying utility ([ClangSharpPInvokeGenerator](https://github.com/dotnet/ClangSharp#generating-bindings)) but unavailable as an option here is transparent structs. I don't have a source, but I believe I've seen the owner of `ClangSharp` mention that transparent structs aren't free as the jitter doesn't always treat them like their underlying primitive.\r\n\r\nPersonally, I like the idea of transparent utility structs to represent types like `HRESULT`, but I'd find it hard to argue in favor of it until the jitter catches up <sup>(citation needed)</sup>.\r\n\r\n(when CsWin32 GA's I'll look into whether this is actually still true. I can't easily repro, so maybe it's changed (or only manifests under more complex scenarios than what I'm trying)).\r\n\r\nThat said, I'd highly recommend anyone needing to add or alter some p/invoke code to utilize `ClangSharpPInvokeGenerator` manually.",
      "created_at": "2022-10-17T16:36:01Z",
      "updated_at": "2022-10-17T19:08:05Z"
    }
  ],
  "created_at": "2022-10-17T13:38:07Z",
  "labels": [
    "Issue-Enhancement",
    "WG-Engine",
    "Needs-Triage"
  ],
  "number": 18314,
  "state": "open",
  "title": "Use CsWin32 source generator for P/Invoke methods",
  "updated_at": "2022-10-17T19:08:05Z"
}