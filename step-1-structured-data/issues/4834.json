{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4834",
  "author": "nightroman",
  "body": "As far as I know, PowerShell v2 was recently declared deprecated.\r\nThus, it normal to expect some kind of related errors in the latest v6.\r\n\r\nThe behaviour is strange, though. If I try to invoke something (anything\r\nactually, including gibberish) with `-version 2` then PowerShell succeeds\r\n(`$LASTEXITCODE` is 0) and prints the same result `powershell v6.0.0-beta.7`.\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n````powershell\r\n    powershell -version 2 gibberish\r\n    $LASTEXITCODE\r\n````\r\n\r\nExpected behavior\r\n-----------------\r\n\r\nNon-zero `$LASTEXITCODE` and a clear error message.\r\n\r\nActual behavior\r\n---------------\r\n\r\nZero `$LASTEXITCODE` and some version-like text, the same regardless of a command.\r\n\r\n````\r\n    powershell v6.0.0-beta.7\r\n    0\r\n````\r\n\r\nEnvironment data\r\n----------------\r\n\r\nPowerShell-6.0.0-beta.7-win-x64.zip\r\n\r\n````\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.0-beta\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.0-beta.7\r\nOS                             Microsoft Windows 10.0.10586\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n````\r\n",
  "closed_at": "2017-09-29T19:20:29Z",
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "This is a change we took awhile back with https://github.com/PowerShell/PowerShell/pull/3115\r\n\r\nSince PSCore6 is inherently side-by-side, you can start different versions using file paths, so currently `-version` only emits the version info.  Although perhaps we should error if anything else is passed after the arg.  We can use this issue to track returning an error so that the result is not confusing for Windows PowerShell users.",
      "created_at": "2017-09-14T06:00:00Z",
      "updated_at": "2017-09-14T06:00:00Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "If now `-version` show PowerShell Core version of started exe we could introduce `-versions` to show all discovered (by paths? config files?) PowerShell versions and `-versions <vername>` to start the specific version.",
      "created_at": "2017-09-14T06:55:25Z",
      "updated_at": "2017-09-14T06:55:25Z"
    },
    {
      "author": "nightroman",
      "author_association": "NONE",
      "body": "@SteveL-MSFT Thank you for the clarification.\r\n\r\n> Although perhaps we should error if anything else is passed after the arg. We can use this issue to track returning an error so that the result is not confusing for Windows PowerShell users.\r\n\r\nYes, please. It currently confuses users, including some relatively experienced :)",
      "created_at": "2017-09-14T09:07:56Z",
      "updated_at": "2017-09-14T09:07:56Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Updated title.  The committee has discussed ways to enumerate installed versions and starting them easily, but that discussion should be a different issue.",
      "created_at": "2017-09-14T14:50:01Z",
      "updated_at": "2017-09-14T14:50:01Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT Do you ask me to open new Issue \"Enumerate installed PowerShell versions\"?",
      "created_at": "2017-09-14T15:16:52Z",
      "updated_at": "2017-09-14T15:17:02Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov I didn't find an existing issue, so please open a new one.  Thanks!",
      "created_at": "2017-09-14T16:23:25Z",
      "updated_at": "2017-09-14T16:23:25Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Done #4836 ",
      "created_at": "2017-09-14T17:19:40Z",
      "updated_at": "2017-09-14T17:19:40Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "With https://github.com/PowerShell/PowerShell/pull/4958, we will be adopting the behavior of other popular cmdline tools like git, curl, bash where `-v` outputs the version and ignores the rest of the cmdline",
      "created_at": "2017-10-02T18:59:18Z",
      "updated_at": "2017-10-02T18:59:18Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "The conclusion is that we don't write an error for `-Version 2.0`. We have plans to implement new side-by-side behavior to run other PowerShell versions and will document this (in docs and Release Notes).",
      "created_at": "2017-10-03T06:16:36Z",
      "updated_at": "2017-10-03T06:16:36Z"
    }
  ],
  "created_at": "2017-09-14T05:22:02Z",
  "labels": [
    "Resolution-Won't Fix",
    "WG-Interactive-Console",
    "Issue-Discussion"
  ],
  "number": 4834,
  "state": "closed",
  "title": "powershell -version 2 should return error",
  "updated_at": "2017-10-03T06:16:36Z"
}