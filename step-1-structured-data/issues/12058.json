{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12058",
  "author": "rjmholt",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nFixes https://github.com/PowerShell/PowerShell/issues/12020.\r\n\r\n## PR Context\r\n\r\nProfiles on some Linux systems contain bashisms that are not /bin/sh compatible, causing issues.\r\n\r\nBy trying bash first, we eliminate this problem.\r\n\r\n## PR Checklist\r\n\r\n- [ ] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [ ] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [ ] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [ ] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [ ] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [ ] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2020-07-10T18:00:11Z",
  "comments": [
    {
      "author": "gdoenlen",
      "author_association": "NONE",
      "body": "Thanks @rjmholt. I was just about to do [this](https://github.com/gdoenlen/PowerShell/commit/9f2af7f915fcc78ac9c42236c4e400b44e240402) myself when I saw your pr. \r\n\r\nMuch appreciated.\r\n",
      "created_at": "2020-03-06T19:16:56Z",
      "updated_at": "2020-03-06T19:16:56Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "> Much appreciated.\r\n\r\nNo worries. I'm responsible for this feature and have been wanting to fix it in WSL (especially because setting pwsh as your login shell there causes an error that's very hard to fix).\r\n\r\nWith your analysis, it makes sense why it wasn't working now, and I'm happy to enable the fix.",
      "created_at": "2020-03-06T19:57:50Z",
      "updated_at": "2020-03-06T19:57:50Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I think this can have negative consequences. What if user have some shells installed (this is a common case) on a system but configure tcsh as default and configure paths only for tcsh? In the case we call bash and get wrong paths.\r\nIf we want to make a workaround for `dash` we have two cases:\r\n- add explicit check for dash - it is very slow\r\n- catch error and call bash as last resort - I think it is best way.\r\n",
      "created_at": "2020-03-11T06:13:16Z",
      "updated_at": "2020-03-11T06:13:16Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "> tcsh\r\n\r\nThat's not a POSIX-compliant shell. We should be able to execute POSIX shell script from any POSIX-compliant shell; that's the definition of POSIX-compliant. The scripts and paths should be written for any /bin/sh to execute them, and our choice of implementation doesn't matter.\r\n\r\nThe issue is that dash is the default /bin/sh on some platforms and doesn't like the way paths are passed, while bash and zsh have no problem with it.\r\n\r\n`zsh` is guaranteed on supported macOS versions, so that's ok. But on Linux we just don't know. However, `bash` is so very common that (1) it's what people actually write their scripts for when they mean to target /bin/sh and (2) it's probably worth looking for.\r\n\r\nI agree that I don't like looking for another file at startup, but (1) it's only on Linux when `-Login` is used and (2) it's probably not actually that expensive. It's also very simple.\r\n\r\n> catch error and call bash as last resort - I think it is best way.\r\n\r\nWhat do we catch though? We're p/Invoking into a syscall, so there's no exception. Theoretically it returns an error code, except it's `exec` so when you call it your whole process gets paved over. We successfully start the new program, but it's taken over our process, so when it fails later it's not the `exec` call that fails, it's our initial `pwsh` process.\r\n\r\nThe only solution to that is making the `/bin/sh` login/exec script failsafe, but then we need to pass the failure information into pwsh in the exec call and use it to tell ourselves to start bash. That's now a third CLR startup, which involves plenty of file reads as assemblies are loaded into memory... So I think testing for bash is going to be faster.",
      "created_at": "2020-03-11T16:13:33Z",
      "updated_at": "2020-03-11T16:13:57Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "I just need to test this PR",
      "created_at": "2020-03-11T16:16:28Z",
      "updated_at": "2020-03-11T16:16:28Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@rjmholt Do `dash` and `bash` load the same `profile` files at startup?\r\nAlso, could this be an issue to Windows integration? It doesn't work with dash after all.",
      "created_at": "2020-03-13T00:45:20Z",
      "updated_at": "2020-03-18T18:36:27Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMainainer, Please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2020-05-27T02:01:23Z",
      "updated_at": "2020-05-27T02:01:23Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as stale because it has been marked as requiring author feedback but has not had any activity for **15 days**. It will be closed if no further activity occurs **within 10 days of this comment**.",
      "created_at": "2020-06-30T08:00:17Z",
      "updated_at": "2020-06-30T08:00:17Z"
    }
  ],
  "created_at": "2020-03-06T17:56:37Z",
  "number": 12058,
  "state": "closed",
  "title": "Try using bash for login startup",
  "updated_at": "2020-07-30T04:33:56Z"
}