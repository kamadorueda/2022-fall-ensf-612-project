{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10802",
  "author": "mklement0",
  "body": "`Add-Type -Assembly -PassThru` is expected to list all types loaded from the assembly (even if the assembly has already been loaded).\r\n\r\nCurrently, this fails quietly with some assemblies.\r\n\r\nThis is a regression from Windows PowerShell.\r\n\r\n# Steps to reproduce\r\n\r\nOn macOS or Windows (haven't tried on Linux):\r\n\r\n```powershell\r\nAdd-Type -AssemblyName System.Numerics -PassThru | Should -Not -BeNullOrEmpty\r\n```\r\n\r\nNote that when you inspect one of the types supposedly from this assembly with `.AssemblyName` - e.g., `[bigint].AssemblyName` - it points to a _different_ assembly, `System.Runtime.Numerics.dll`, and using the above command with _that_ works, so the problem perhaps relates to \"stub\"(?) assemblies such as `System.Numerics.dll`? \r\n\r\n_Update_: See [@0xd4d's comment below](https://github.com/PowerShell/PowerShell/issues/10802#issuecomment-542607911)\r\n\r\n# Expected behavior\r\n\r\nThe test should succeed.\r\n\r\n# Actual behavior\r\n\r\nThe test fails, because the command produces no output\r\n\r\n# Environment data\r\n\r\n```none\r\nPowerShell Core 7.0.0-preview.4 on macOS 10.15\r\nPowerShell Core 7.0.0-preview.4 on Microsoft Windows 10.0.17763\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "```c#\r\n        private void WriteTypes(Assembly assembly)\r\n        {\r\n            WriteObject(assembly.GetTypes(), true);\r\n        }\r\n```\r\nIn the code we have the assembly and `assembly.GetTypes()` returns {System.RuntimeType[0]} (debugger view) that is empty.",
      "created_at": "2019-10-16T05:20:16Z",
      "updated_at": "2019-10-16T05:20:16Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I think it is the same as our Microsoft.PowerShell.SDK.dll #3401",
      "created_at": "2019-10-16T05:27:24Z",
      "updated_at": "2019-10-16T05:27:24Z"
    },
    {
      "author": "0xd4d",
      "author_association": "NONE",
      "body": "System.Numerics (on .NET Core at least) is an assembly that only has types forwarded to other assemblies.\r\n\r\nThe types are forwarded to System.Numerics.Vectors and System.Runtime.Numerics, although that is most likely an implementation detail you shouldn't depend on.\r\n\r\nYou can get the forwarded types by calling `GetForwardedTypes()` instead of `GetTypes()`.\r\n\r\n```pwsh\r\n$asm = [reflection.assembly]::Load('System.Numerics')\r\n# empty\r\n$asm.GetTypes()\r\n# returns all types\r\n$asm.GetForwardedTypes()\r\n# Show assemblies\r\n$asm.GetForwardedTypes() | ForEach-Object { $_.Assembly.Location }\r\n```",
      "created_at": "2019-10-16T09:14:42Z",
      "updated_at": "2019-10-16T09:14:42Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "/cc @SteveL-MSFT  @daxian-dbw Should we passthru forwarded types too?",
      "created_at": "2020-01-31T10:27:47Z",
      "updated_at": "2020-01-31T10:27:47Z"
    }
  ],
  "created_at": "2019-10-16T03:35:21Z",
  "labels": [
    "Issue-Question",
    "WG-Cmdlets-Utility"
  ],
  "number": 10802,
  "state": "open",
  "title": "Add-Type -Assembly -PassThru sometimes doesn't list types",
  "updated_at": "2021-01-15T18:33:33Z"
}