{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12643",
  "author": "erenturkm",
  "body": "I am using Powershell SDK 7.0 from C#\r\n# Steps to reproduce\r\nMy C# app is running as a normal user (not elevated)\r\n```powershell\r\n(Get-CimInstance Win32_ComputerSystem).NumberOfLogicalProcessors\r\n```\r\n\r\n# Expected behavior\r\nGet the number of logical processors (4 in my test environment, validated through Windows Powershell 5.1 running as normal user.)\r\n# Actual behavior\r\nI get the following error from API\r\n{The 'Get-CimInstance' command was found in the module 'CimCmdlets', but the module could not be loaded. For more information, run 'Import-Module CimCmdlets'.}\r\n\r\nI tried adding import-module CimCmdlets in front of the command but received \"Scripting not enabled\" which leads to running executionpolicy command as elevated inside script.\r\n\r\n# Environment data\r\nPSVersion=7.0.0\r\nPSEdition=Core\r\nWSManStackVersion=3.0\r\nPSRemotingProtocolVersion=2.3\r\n",
  "closed_at": "2020-05-19T05:15:57Z",
  "comments": [
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Your command does not require elevation, and neither does changing the execution policy, as long as you use either `-Scope  CurrentUser` or `-Scope Process`.\r\nAlso, you don't need an `.AddScript()` call to invoke `Import-Module`; you can use `.AddCommand(\"Import-Module\").AddArgument(\"CimCmdlets\")`. Once you've done that, you can access the `.Error` collection on the PowerShell instance to see what went wrong.\r\n",
      "created_at": "2020-05-13T14:34:09Z",
      "updated_at": "2020-05-13T14:34:09Z"
    },
    {
      "author": "erenturkm",
      "author_association": "NONE",
      "body": "OK, this worked",
      "created_at": "2020-05-19T05:16:03Z",
      "updated_at": "2020-05-19T05:16:03Z"
    }
  ],
  "created_at": "2020-05-13T11:51:04Z",
  "number": 12643,
  "state": "closed",
  "title": "Get-CimInstance requires elevated privileges",
  "updated_at": "2020-05-19T05:16:03Z"
}