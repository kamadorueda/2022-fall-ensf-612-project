{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15970",
  "author": "PeterKW",
  "body": "### Prerequisites\n\n- [X] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\n\n### Steps to reproduce\n\n`\r\n  Start-Job -Name \"InstalledProgramsFile\" -scriptblock {\r\n    \"MS Uninstallable\" >> $InstalledProgramsFile\r\n    \"\" >> $InstalledProgramsFile\r\n    Get-ItemProperty HKLM:\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\* | Select-Object DisplayName, DisplayVersion, Publisher, InstallDate | Format-Table \u2013AutoSize > $InstalledProgramsFile\r\n    \"\" >> $InstalledProgramsFile\r\n    \r\n    #Remove-Job -Name InstalledProgramsFile\r\n  }`\r\n\r\nIf I remove the Start-Job block then the code runs fine and outputs to the file but it blocks up my terminal. I would like to be able to run this code to add lists to a file in the background but when I use the Start-Job code even after it has completed state at 'Get-Job -Name InstalledProgramsFile' the file at the file path variable has not been affected at all.\r\n\r\nIs there any way to get it working outputing a list to a file in the background? At the moment I have to comment out the Job part of the code which then blocks up use in PowerShell.\n\n### Expected behavior\n\n```console\nId     Name            PSJobTypeName   State         HasMoreData     Location\r\n--     ----            -------------   -----         -----------     --------\r\n1      InstalledProgr\u2026 BackgroundJob   Running       True            localhost\r\n\r\nLoading personal and system profiles took 1360ms.\r\nPS P:\\Documents> Get-Job -Name InstalledProgramsFile\r\n\r\nId     Name            PSJobTypeName   State         HasMoreData     Location\r\n--     ----            -------------   -----         -----------     --------\r\n1      InstalledProgr\u2026 BackgroundJob   Completed     False           localhost\r\n\r\nPS P:\\Documents> File at  $InstalledProgramsFile exists and is uptodate\n```\n\n\n### Actual behavior\n\n```console\nId     Name            PSJobTypeName   State         HasMoreData     Location\r\n--     ----            -------------   -----         -----------     --------\r\n1      InstalledProgr\u2026 BackgroundJob   Running       True            localhost\r\n\r\nLoading personal and system profiles took 1360ms.\r\nPS P:\\Documents> Get-Job -Name InstalledProgramsFile\r\n\r\nId     Name            PSJobTypeName   State         HasMoreData     Location\r\n--     ----            -------------   -----         -----------     --------\r\n1      InstalledProgr\u2026 BackgroundJob   Completed     False           localhost\r\n\r\nPS P:\\Documents> File at  $InstalledProgramsFile Does Not Exist like it is containered and not effecting device\n```\n\n\n### Error details\n\n_No response_\n\n### Environment data\n\n```powershell\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.0-preview.8\r\nPSEdition                      Core\r\nGitCommitId                    7.2.0-preview.8\r\nOS                             Microsoft Windows 10.0.22000\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\n```\n\n\n### Visuals\n\n_No response_",
  "closed_at": "2021-08-22T01:39:40Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Background jobs run in a completely separate environment, so local variables and functions are not available to them directly. YOu aren't defining `$InstalledProgramsFile` in the job itself, so those `>> $installedProgramsFile` expressions are the same as `>> $null` which just discards the data.",
      "created_at": "2021-08-22T01:01:05Z",
      "updated_at": "2021-08-22T01:01:05Z"
    },
    {
      "author": "PeterKW",
      "author_association": "NONE",
      "body": "Thank you very much. That makes a lot of sense. I've re-added in defining the variables that seems to have worked.\r\n\r\nIs there any way to remove the job automatically in the code when it has finished? \r\n`Remove-Job -Name InstalledProgramsFile`\r\n\r\n",
      "created_at": "2021-08-22T01:20:29Z",
      "updated_at": "2021-08-22T01:21:37Z"
    },
    {
      "author": "PeterKW",
      "author_association": "NONE",
      "body": "> Thank you very much. That makes a lot of sense. I've re-added in defining the variables that seems to have worked.\r\n> \r\n> Is there any way to remove the job automatically in the code when it has finished?\r\n> `Remove-Job -Name InstalledProgramsFile`\r\n\r\nGot it all working now :D \r\n\r\n`\r\n  Register-ObjectEvent -InputObject $job -EventName StateChanged -Action {\r\n    Unregister-Event $EventSubscriber.SourceIdentifier\r\n    Remove-Job $EventSubscriber.SourceIdentifier\r\n    Remove-Job -Id $EventSubscriber.SourceObject.Id\r\n} | Out-Null`\r\n\r\nThank you very much!",
      "created_at": "2021-08-22T01:39:40Z",
      "updated_at": "2021-08-22T01:39:40Z"
    }
  ],
  "created_at": "2021-08-22T00:52:16Z",
  "labels": [
    "Issue-Question",
    "Resolution-Answered",
    "WG-Cmdlets-Core"
  ],
  "number": 15970,
  "state": "closed",
  "title": "Start-Job -Name \"InstalledProgramsFile\" doesn't output to file",
  "updated_at": "2021-08-23T03:39:57Z"
}