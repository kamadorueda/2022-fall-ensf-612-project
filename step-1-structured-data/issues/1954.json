{
  "_url": "https://github.com/PowerShell/PowerShell/issues/1954",
  "author": "jalons",
  "body": "## Steps to reproduce\n\nLaunch powershell\n## Expected behavior\n\nUsable prompt in milliseconds\n## Actual behavior\n\nUsable prompt in seconds\n## Environment data\n\n``` powershell\nPS /> $PSVersionTable\n\nName                           Value\n----                           -----\nPSVersion                      6.0.0-alpha\nPSEdition                      Core\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\nBuildVersion                   3.0.0.0\nGitCommitId                    v6.0.0-alpha.9\nCLRVersion\nWSManStackVersion              3.0\nPSRemotingProtocolVersion      2.3\nSerializationVersion           1.1.0.1\n```\n\nFor example:\n\n```\n[me@ipsum] ~\n\u279c  cat test.ps1\n#!/usr/bin/powershell\nexit\n[me@ipsum] ~\n\u279c  time ./test.ps1\n./test.ps1  1.30s user 0.12s system 138% cpu 1.035 total\n```\n\nCompared to:\n\n```\n[me@ipsum] ~\n\u279c  cat test.sh\n#/bin/bash\nexit\n[me@ipsum] ~\n\u279c  time ./test.sh\n./test.sh  0.00s user 0.00s system 0% cpu 0.002 total\n```\n\nThe windows host I have available:\n\n```\nPS C:\\Users\\me> echo \"exit\" > test.ps1\nPS C:\\Users\\me> Measure-Command {.\\test.ps1}\n\n\nDays              : 0\nHours             : 0\nMinutes           : 0\nSeconds           : 0\nMilliseconds      : 7\nTicks             : 71141\nTotalDays         : 8.23391203703704E-08\nTotalHours        : 1.97613888888889E-06\nTotalMinutes      : 0.000118568333333333\nTotalSeconds      : 0.0071141\nTotalMilliseconds : 7.1141\n\n\n\nPS C:\\Users\\me> $PSVersionTable\n\nName                           Value\n----                           -----\nPSVersion                      3.0\nWSManStackVersion              3.0\nSerializationVersion           1.1.0.1\nCLRVersion                     4.0.30319.18033\nBuildVersion                   6.2.9200.16434\nPSCompatibleVersions           {1.0, 2.0, 3.0}\nPSRemotingProtocolVersion      2.2\n```\n",
  "closed_at": "2017-06-07T21:14:49Z",
  "comments": [
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "At least some of the perf issue will be addressed by #1846.\n\nNote that your example on Windows:\n\n```\nPS C:\\Users\\me> Measure-Command {.\\test.ps1}\n```\n\ndoes not accurately measure the startup costs of PowerShell because PowerShell has already started.  It would be more accurate to use:\n\n```\nPS C:\\Users\\me> Measure-Command { powershell -nop -file .\\test.ps1}\n```\n\nI did a ton of work in Windows PowerShell v5.1 on startup, and this scenario would run in the 200-300ms range, still a lot slower than I'd like, but a vast improvement over Windows PowerShell 5.0 which was closer to 900ms.\n",
      "created_at": "2016-08-20T01:43:26Z",
      "updated_at": "2016-08-20T01:43:26Z"
    },
    {
      "author": "jalons",
      "author_association": "NONE",
      "body": "Thanks for pointing that out, and you are correct. For completeness and to correct the above misleading times:\n\n```\nPS C:\\Users\\me> Measure-Command { powershell -nop -file .\\test.ps1}\n\n\nDays              : 0\nHours             : 0\nMinutes           : 0\nSeconds           : 0\nMilliseconds      : 221\nTicks             : 2218809\nTotalDays         : 2.56806597222222E-06\nTotalHours        : 6.16335833333333E-05\nTotalMinutes      : 0.003698015\nTotalSeconds      : 0.2218809\nTotalMilliseconds : 221.8809\n```\n\n222 milli is more indicative to the 'real' launch time I was seeing.  Should I close this pending that item? I'm assuming that #1846 is the equivalent of running ngen on a windows host?\n",
      "created_at": "2016-08-22T17:28:19Z",
      "updated_at": "2016-08-22T17:28:19Z"
    },
    {
      "author": "SRGOM",
      "author_association": "CONTRIBUTOR",
      "body": "Just wanted to add here for Linux. I'm on Arch using the latest AppImage. On a 5/10\r\npowerful computer, I'm getting the following \r\n\r\n`time powershell -c 'exit'  `\r\n\r\n`1.32s user 0.16s system 88% cpu 1.658 total`\r\n",
      "created_at": "2017-03-19T10:35:27Z",
      "updated_at": "2017-05-17T13:19:37Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "On my Ubuntu16.04 box:\r\n\r\n```sh\r\nsteve@slee-ubuntu16:~$ time powershell -c 'exit'\r\n\r\nreal\t0m0.602s\r\nuser\t0m0.632s\r\nsys\t0m0.076s\r\nsteve@slee-ubuntu16:~$ \r\n```\r\n\r\nhttps://github.com/PowerShell/PowerShell/pull/3787 really helped with the startup time.\r\n",
      "created_at": "2017-06-07T21:14:49Z",
      "updated_at": "2017-06-07T21:14:49Z"
    },
    {
      "author": "SRGOM",
      "author_association": "CONTRIBUTOR",
      "body": "I just downloaded Beta2 AppImage and on my system the `user` times went down from 1.6s to 1.0s- huge improvements. \r\n\r\nKeep going! \r\n\r\nPS: I'm confused by how linux time command works, I'd have thought user/sys times would be times spent in respective spaces and real would be a sum of the two. ",
      "created_at": "2017-06-08T03:49:21Z",
      "updated_at": "2017-06-08T03:49:53Z"
    }
  ],
  "created_at": "2016-08-19T13:55:10Z",
  "number": 1954,
  "state": "closed",
  "title": "Powershell initialization on linux is slow",
  "updated_at": "2017-06-08T03:49:53Z"
}