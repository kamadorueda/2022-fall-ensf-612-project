{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4306",
  "author": "TravisEz13",
  "body": "Implement Counter CmdLets using Supported APIs\r\nThe previous implementation is here:\r\nhttps://github.com/PowerShell/PowerShell/tree/master/src/Microsoft.PowerShell.Commands.Diagnostics\r\nWhich was removed due to #4272",
  "closed_at": "2018-01-31T05:34:38Z",
  "comments": [
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "I'll restate @iSazonov question which I removed.\r\n\r\n> How do I know what APIs are supported?\r\n\r\nYou can assume that APIs documented in MSDN are supported as long as you follow the requirements in MSDN.",
      "created_at": "2017-07-21T17:24:20Z",
      "updated_at": "2017-07-21T17:24:20Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "System.Diagnostics.PerformanceCounter is part of WindowsCompatibilityPack for dotnetcore so this work is being done as part of WindowsPowerShellCompatibilityPack",
      "created_at": "2018-01-31T05:34:38Z",
      "updated_at": "2018-01-31T05:34:38Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": " @SteveL-MSFT The problem is that there is no public API - MSFT can distribute the cmdlets only in  _binary package._",
      "created_at": "2018-02-09T15:40:33Z",
      "updated_at": "2018-02-09T15:40:33Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov need to figure out how to handle non-public APIs as I think only components shipped with Windows can use those APIs so even a binary package on PSGallery wouldn't be acceptable",
      "created_at": "2018-02-09T21:14:26Z",
      "updated_at": "2018-02-09T21:14:26Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "It seems the API is already ported to .Net Core and present in WCP https://github.com/dotnet/corefx/issues/3906",
      "created_at": "2018-02-10T11:24:41Z",
      "updated_at": "2018-02-10T11:24:41Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "Specifically https://www.nuget.org/packages/System.Diagnostics.PerformanceCounter, but does it have the APIs to replace https://github.com/PowerShell/PowerShell/blob/master/src/Microsoft.PowerShell.Commands.Diagnostics/PdhHelper.cs ?",
      "created_at": "2018-02-12T19:20:41Z",
      "updated_at": "2018-02-12T19:22:13Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I fast review the CoreFX code - it seems it implement only a counter reader but not file (blg) reader/writer. This is enough for `Get-Counter` but not for `Import/Export-Counter`.\r\nWe should make a request in CoreFX if we want `System.Diagnostics.Eventing.Reader` and etc.",
      "created_at": "2018-02-13T04:58:37Z",
      "updated_at": "2018-02-13T04:58:37Z"
    },
    {
      "author": "bill-long",
      "author_association": "NONE",
      "body": "Is this being considered for Powershell 7? I noticed Get-Counter still doesn't work in the preview.",
      "created_at": "2019-06-04T20:27:26Z",
      "updated_at": "2019-06-04T20:27:26Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@bill-long I think our current thought is to get the Windows Inbox module to work.  It currently works but has a naming conflict with with a PowerShell 7 module (also meaning both modules cannot be loaded at the same time).  We considering a solution that resolves the naming conflict.",
      "created_at": "2019-06-04T20:35:10Z",
      "updated_at": "2019-06-04T20:35:10Z"
    }
  ],
  "created_at": "2017-07-20T00:34:08Z",
  "number": 4306,
  "state": "closed",
  "title": "Implement Counter CmdLets using Supported APIs",
  "updated_at": "2019-06-04T20:35:10Z"
}