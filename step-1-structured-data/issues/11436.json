{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11436",
  "author": "mvelezwhiteSBS",
  "body": "The comment I'm leaving here is due to my not comprehending what the nature of this next GA release will be. As I read through all the release notes and the marketing hype, I can't find an answer to a pretty basic question. Hopefully, someone can enlighten me here. Is version 7 of PowerShell going to be a 'full' product (with IDE and all the GUI bells and whistles) or is this just going to be another 'core only' version. We've not had a new GUI since version 5. With all the announcements and talk about how great it's going to be, I thought that this upgrade would really be 'big'. I'd appreciate it immensely if someone could give me a final word on this. I feel like a complete and utter 'noob', but I really wanted to know. TIA and LLAP",
  "closed_at": "2019-12-31T00:00:12Z",
  "comments": [
    {
      "author": "mvelezwhiteSBS",
      "author_association": "NONE",
      "body": "The comment I'm leaving here is due to my not comprehending what the nature of this next GA release will be. As I read through all the release notes and the marketing hype, I can't find an answer to a pretty basic question. Hopefully, someone can enlighten me here. Is version 7 of PowerShell going to be a 'full' product (with IDE and all the GUI bells and whistles) or is this just going to be another 'core only' version. We've not had a new GUI since version 5. With all the announcements and talk about how great it's going to be, I thought that this upgrade would really be 'big'. I'd appreciate it immensely if someone could give me a final word on this. I feel like a complete and utter 'noob', but I really wanted to know. TIA and LLAP",
      "created_at": "2019-12-26T17:14:21Z",
      "updated_at": "2019-12-26T17:14:21Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "PowerShell 7 (aka PowerShell Core) is new generation of PowerShell.\r\nIt works on Windows, MacOs and some Unix-s.\r\nAll new features will be added only to PowerShell Core, not to Windows PowerShell (it is frozen).\r\n\r\n> We've not had a new GUI since version 5.\r\n\r\nWe had. VS Code has an extension with PowerShell Core support. It supports syntax highlighting, references, debugging and more https://github.com/PowerShell/PowerShellEditorServices.\r\n\r\nIn last year we get many modules being compatible with PowerShell Core from MSFT and community.   In next year I'd expect that most of popular modules will be ported to PowerShell Core if not jet.\n\n<blockquote><img src=\"https://avatars0.githubusercontent.com/u/11524380?s=400&v=4\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicon.ico\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/PowerShell/PowerShellEditorServices\">PowerShell/PowerShellEditorServices</a></strong></div><div>A common platform for PowerShell development support in any editor or application! - PowerShell/PowerShellEditorServices</div></blockquote>",
      "created_at": "2019-12-27T04:06:17Z",
      "updated_at": "2019-12-27T04:06:19Z"
    },
    {
      "author": "doctordns",
      "author_association": "COLLABORATOR",
      "body": "The question: \"Is version 7 of PowerShell going to be a 'full' product (with IDE and all the GUI bells and whistles) or is this just going to be another 'core only' version.\" suggests you may not fully understand how PowerShell is going forward.\r\n\r\n1. Windows PowerShell 5.1 and associated ISE are at end of life. They are feature complete and are only ever likely to be updated to fix bugs.\r\n2. Going forward, PowerShell is PowerShell Core or in due course PowerShell 7. That code, as such, as no GUI - the GUI is VS Code.\r\n\r\nSo the next release will be a PowerShell Core update - if you want the GUI, then use VS Code.\r\n\r\nI hope this is clear and you do not see my comments as markting.\r\n",
      "created_at": "2019-12-27T14:58:34Z",
      "updated_at": "2019-12-27T14:58:34Z"
    },
    {
      "author": "mvelezwhiteSBS",
      "author_association": "NONE",
      "body": "Yes, that\u2019s what I gathered from the other post.  I\u2019ll give the VS Code option a try.  Thank you for adding some clarity to all of that.  When Ilya messaged me that \u201cWindows PowerShell is frozen\u201d, I pretty much knew that it meant \u201cEnd of Life\u201d.\r\n\r\nQuestion:  I understand that VS Code is the \u2018GUI\u2019 now for PowerShell.  Does that also work in full Visual Studio?  If not, then I\u2019m content with VS Code, but it would be pretty awesome if that works in full Visual Studio 2019 as well.  That could open up some really creative implementations.\r\n\r\nPlease let me know if you have a  chance and thank you again for the enlightenment.\r\n\r\nLLAP \ud83d\udd96,\r\nMiguel\r\n[cid:image001.jpg@01D5BC9B.A496B2B0]\r\n\r\nFrom: Thomas Lee <notifications@github.com>\r\nSent: Friday, December 27, 2019 8:59 AM\r\nTo: PowerShell/PowerShell <PowerShell@noreply.github.com>\r\nCc: Velez-White, Miguel <miguel.velez-white@finance.alabama.gov>; State change <state_change@noreply.github.com>\r\nSubject: Re: [PowerShell/PowerShell] Distribution Support Request (#11436)\r\n\r\n\r\nThe question: \"Is version 7 of PowerShell going to be a 'full' product (with IDE and all the GUI bells and whistles) or is this just going to be another 'core only' version.\" suggests you may not fully understand how PowerShell is going forward.\r\n\r\n  1.  Windows PowerShell 5.1 and associated ISE are at end of life. They are feature complete and are only ever likely to be updated to fix bugs.\r\n  2.  Going forward, PowerShell is PowerShell Core or in due course PowerShell 7. That code, as such, as no GUI - the GUI is VS Code.\r\n\r\nSo the next release will be a PowerShell Core update - if you want the GUI, then use VS Code.\r\n\r\nI hope this is clear and you do not see my comments as markting.\r\n\r\n\u2014\r\nYou are receiving this because you modified the open/close state.\r\nReply to this email directly, view it on GitHub<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_PowerShell_PowerShell_issues_11436-3Femail-5Fsource-3Dnotifications-26email-5Ftoken-3DAMUOOAOTA7UBIDY6SCCIRPTQ2YJZXA5CNFSM4J7NCYLKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEHXJ3LA-23issuecomment-2D569286060&d=DwMCaQ&c=8K0mnSt5E4j4U_dMGxZxbA&r=KAe0ViKt0cfjYBeATFepfqz9HfFCcGHqTe68B-ZcJwuL5DXh4aQu7P3XcA9Q3eoN&m=09O0cWXRMwXpKta1OhKBKXWcE8SelPTskwWpxl_bS08&s=25V-dC9E4EYNs9WqtxOwoFoTseeKk850SST0EvoM-Hc&e=>, or unsubscribe<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_notifications_unsubscribe-2Dauth_AMUOOAOKSXDBZVQWWUSHPGLQ2YJZXANCNFSM4J7NCYLA&d=DwMCaQ&c=8K0mnSt5E4j4U_dMGxZxbA&r=KAe0ViKt0cfjYBeATFepfqz9HfFCcGHqTe68B-ZcJwuL5DXh4aQu7P3XcA9Q3eoN&m=09O0cWXRMwXpKta1OhKBKXWcE8SelPTskwWpxl_bS08&s=C9ry9l1wyaBSLjeUJMIFI_Mfx52uV7kurWYXWkqNBwM&e=>.\r\n",
      "created_at": "2019-12-27T15:54:41Z",
      "updated_at": "2019-12-27T15:54:41Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@mvelezwhiteSBS The PowerShell extension that is built and maintained by the PowerShell team themselves only works in VS Code at the present. I do not know if there are any plans to expand to Visual Studio, though I'm sure doing so would be most likely an entirely separate project.\r\n\r\nHowever, I think there are some community-maintained extensions for Visual Studio that may work for you. \ud83d\ude42 ",
      "created_at": "2019-12-27T16:44:16Z",
      "updated_at": "2019-12-27T16:44:16Z"
    },
    {
      "author": "mvelezwhiteSBS",
      "author_association": "NONE",
      "body": "@vexx32  Many thanks for that info.  I\u2019ll look into it today.\r\n\r\nMiguel Velez-White\r\nSBS\r\n334-353-0760\r\n\r\nFrom: vexx32 <notifications@github.com>\r\nSent: Friday, December 27, 2019 10:44 AM\r\nTo: PowerShell/PowerShell <PowerShell@noreply.github.com>\r\nCc: Velez-White, Miguel <miguel.velez-white@finance.alabama.gov>; Mention <mention@noreply.github.com>\r\nSubject: Re: [PowerShell/PowerShell] Distribution Support Request (#11436)\r\n\r\n\r\n@mvelezwhiteSBS<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_mvelezwhiteSBS&d=DwMFaQ&c=8K0mnSt5E4j4U_dMGxZxbA&r=KAe0ViKt0cfjYBeATFepfqz9HfFCcGHqTe68B-ZcJwuL5DXh4aQu7P3XcA9Q3eoN&m=RiENL7FRtSAzDTL1-KwQfQiCKBd4OTctfNXZv6Sqfcs&s=TXH-K2B73GuC4_duDv2b6ip7l951sq68ivJnz5RNrp8&e=> The PowerShell extension that is built and maintained by the PowerShell team themselves only works in VS Code at the present. I do not know if there are any plans to expand to Visual Studio, though I'm sure doing so would be most likely an entirely separate project.\r\n\r\nHowever, I think there are some community-maintained extensions for Visual Studio that may work for you. \ud83d\ude42\r\n\r\n\u2014\r\nYou are receiving this because you were mentioned.\r\nReply to this email directly, view it on GitHub<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_PowerShell_PowerShell_issues_11436-3Femail-5Fsource-3Dnotifications-26email-5Ftoken-3DAMUOOAJCV3OGC6LU5A4V6M3Q2YWGDA5CNFSM4J7NCYLKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEHXOJYI-23issuecomment-2D569304289&d=DwMFaQ&c=8K0mnSt5E4j4U_dMGxZxbA&r=KAe0ViKt0cfjYBeATFepfqz9HfFCcGHqTe68B-ZcJwuL5DXh4aQu7P3XcA9Q3eoN&m=RiENL7FRtSAzDTL1-KwQfQiCKBd4OTctfNXZv6Sqfcs&s=K298fnzTcHiDi2HerZ3GD4-boAmWV61YP27mv-KVmJk&e=>, or unsubscribe<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_notifications_unsubscribe-2Dauth_AMUOOANLROKVYNQO4SRLVDDQ2YWGDANCNFSM4J7NCYLA&d=DwMFaQ&c=8K0mnSt5E4j4U_dMGxZxbA&r=KAe0ViKt0cfjYBeATFepfqz9HfFCcGHqTe68B-ZcJwuL5DXh4aQu7P3XcA9Q3eoN&m=RiENL7FRtSAzDTL1-KwQfQiCKBd4OTctfNXZv6Sqfcs&s=nRaP8CsyYjbirVCF9BOjh3imOWj5CKZkC80WPOg5BzE&e=>.\r\n",
      "created_at": "2019-12-27T16:46:13Z",
      "updated_at": "2019-12-27T16:46:13Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "All MSFT product teams plan to port to PowerShell Core but these plans is not public.",
      "created_at": "2019-12-27T18:35:38Z",
      "updated_at": "2019-12-27T18:35:38Z"
    },
    {
      "author": "jhoneill",
      "author_association": "NONE",
      "body": "> 1. Windows PowerShell 5.1 and associated ISE are at end of life. They are feature complete and are only ever likely to be updated to fix bugs.\r\n\r\nUp to a point. Windows PowerShell 5 is not being enhanced any further, much like CMD or VBScript. However the plan of record is that they will continue to ship in the box with windows and be supported (meaning bug fixes). Some clients will continue to use the version which comes in the box, rather than the version which needs to be downloaded.  \r\n\r\n> 2. Going forward, PowerShell is PowerShell Core or in due course PowerShell 7. That code, as such, as no GUI - the GUI is VS Code.\r\n\r\nThe GUI editor / IDE of choice is indeed VS code. However the dropping of the word \"core\" is primarily because 7 is not the bare-bones thing which PowerShell Core 6 was. It can print. It can display windows forms, it has Out-Gridview and get-help -show Window. It's better at using 5 under the covers to provide functionality. So I think it sells 7 short to say it has no GUI - it might be a bit to marketing to call it \"best of both\" because it isn't 100%  It feels to me that 6 was only 80% and 7 is 99% but those numbers are feel, and totally unscientific. \r\n \r\n",
      "created_at": "2019-12-28T23:05:08Z",
      "updated_at": "2019-12-28T23:05:08Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@jhoneill I could be wrong, but my understanding is that only security-critical bugs warrant fixing in Windows PowerShell. There are plenty of pretty annoying bugs in WinPS that will never be fixed, but are already resolved in pwsh. \ud83d\ude42 \r\n\r\nBut yeah, I'd agree. 7 mightn't have a native IDE editor but it is decently capable where GUI is concerned, at least as much as Windows PowerShell was. And with things like GraphicalTools cropping up once in a while, it's even pretty good on Unix platforms there too. \\o/",
      "created_at": "2019-12-28T23:24:21Z",
      "updated_at": "2019-12-28T23:24:21Z"
    },
    {
      "author": "jhoneill",
      "author_association": "NONE",
      "body": "@vexx32  I think that is pretty much the _intent_. However with my ex-Microsoftie hat on I think the definition of \"supported\" hasn't changed, and means ultimately PSS can get a hotfix for a bug if it is needed. There are all sorts of dances done to say it can be worked around or isn't really a bug so a hotfix isn't needed.  And at this stage no-one should expect long standing bugs to be fixed. Windows PowerShell 5 is in the same place as CMD or VB script ... except of course CMD has had ansi support added, notepad has been updated for the first time since Windows 2000, and flight-sim is back from the dead.  But it would be a departure from the plan of record to do a Windows PowerShell 5.2\r\n\r\nThe newer .net core and the ability to support the same GUI things on windows which 5 supported means everything I care about works again. 6 was a necessary stepping stone, 7 is (I think) what people want and (I think) it will strengthen old friendships and make a whole pile of new ones. The ISE is still there when it is appropriate, but that's less and less often.\r\n",
      "created_at": "2019-12-28T23:57:05Z",
      "updated_at": "2019-12-28T23:57:05Z"
    },
    {
      "author": "he852100",
      "author_association": "NONE",
      "body": "The comment I'm leaving here is due to my not comprehending what the nature of this next GA release will be. As I read through all the release notes and the marketing hype, I can't find an answer to a pretty basic question. Hopefully, someone can enlighten me here. Is version 7 of PowerShell going to be a 'full' product (with IDE and all the GUI bells and whistles) or is this just going to be another 'core only' version. We've not had a new GUI since version 5. With all the announcements and talk about how great it's going to be, I thought that this upgrade would really be 'big'. I'd appreciate it immensely if someone could give me a final word on this. I feel like a complete and utter 'noob', but I really wanted to know. TIA and LLAP\r\n\r\nyes,It should be called powershell core 1.1. ;)",
      "created_at": "2019-12-29T12:44:35Z",
      "updated_at": "2019-12-29T12:44:35Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "/cc @joeyaiello @SteveL-MSFT Perhaps this help you to write announce for 7.0 GA.",
      "created_at": "2019-12-29T17:46:25Z",
      "updated_at": "2019-12-29T17:46:25Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2019-12-31T00:00:11Z",
      "updated_at": "2019-12-31T00:00:11Z"
    }
  ],
  "created_at": "2019-12-26T17:09:06Z",
  "labels": [
    "Issue-Question",
    "Resolution-Answered"
  ],
  "number": 11436,
  "state": "closed",
  "title": "Distribution Support Request",
  "updated_at": "2019-12-31T00:00:12Z"
}