{
  "_url": "https://github.com/PowerShell/PowerShell/issues/2926",
  "author": "NearTox",
  "body": "<!--\r\n\r\nIf it is a bug report:\r\n- make sure you are able to repro it on the latest released version. \r\nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\r\n- Search the existing issues.\r\n- Refer to the [FAQ](../docs/FAQ.md).\r\n- Refer to the [known issues](../docs/KNOWNISSUES.md).\r\n- Fill out the following repro template\r\n\r\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\r\n-->\r\n\r\nSteps to reproduce\r\n------------------\r\n1. execute:\r\n```powershell\r\n>powershell.exe -noexit -command Set-Location \"X:\\I'll do\"\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\nopen powershell in \"X:\\I'll do\" location\r\n\r\nActual behavior\r\n---------------\r\npowershell return:\r\n\r\nThe string is missing the terminator: '.\r\n    + CategoryInfo          : ParserError: (:) [], ParentContainsErrorRecordException\r\n    + FullyQualifiedErrorId : TerminatorExpectedAtEndOfString\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nCLRVersion\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nPSVersion                      6.0.0-alpha\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nGitCommitId                    v6.0.0-alpha.14\r\nPSEdition                      Core\r\nWSManStackVersion              3.0\r\nBuildVersion                   3.0.0.0\r\n```\r\n",
  "closed_at": "2016-12-26T23:37:44Z",
  "comments": [
    {
      "author": "NearTox",
      "author_association": "NONE",
      "body": "i think that the problem is from System.Management.Automation\r\na tokenizer problem (i'm not a C# programer, sorry if fail)\r\n![powershell bug 2](https://cloud.githubusercontent.com/assets/3236398/21487110/49c297c6-cb87-11e6-948c-a1fe0a25eba3.PNG)\r\n\r\n\r\nAnd Merry Christmas and new year.",
      "created_at": "2016-12-26T22:41:08Z",
      "updated_at": "2016-12-26T22:41:08Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "This is not a PowerShell bug - the command line you've passed will not contain the double quotes.\r\n\r\n```\r\nC:\\>echoargs -noexit -command Set-Location \"X:\\I'll do\"\r\narg 0: <-noexit>\r\narg 1: <-command>\r\narg 2: <Set-Location>\r\narg 3: <X:\\I'll do>\r\n\r\nCommandLine:\r\nechoargs  -noexit -command Set-Location \"X:\\I'll do\"\r\n```\r\n\r\nNotice that `arg 3` is a single argument (because you used quotes), but the actual argument does not contain the quotes.\r\n\r\nThis is how argument parsing works.\r\n\r\nPowerShell tries to be help and concatenates all of the argument after `-Command`, but in cases like this, it can be a bit confusing because values get processed by the shell you use (in your case cmd) before PowerShell gets a chance to parse the concatenated command line.\r\n\r\nHere is one possible solution (assuming your shell is `cmd`, it may work in other shells as well):\r\n\r\n```\r\npowershell -noexit -command \"Set-Location \\\"X:\\I'll do\\\"\"\r\n```",
      "created_at": "2016-12-26T23:37:44Z",
      "updated_at": "2016-12-26T23:37:44Z"
    },
    {
      "author": "NearTox",
      "author_association": "NONE",
      "body": "thanks @lzybkr",
      "created_at": "2016-12-26T23:42:54Z",
      "updated_at": "2016-12-26T23:42:54Z"
    }
  ],
  "created_at": "2016-12-22T19:25:09Z",
  "number": 2926,
  "state": "closed",
  "title": "Powershell not parse mixed single and double quotes [found via: -command Set-Location]",
  "updated_at": "2016-12-26T23:42:54Z"
}