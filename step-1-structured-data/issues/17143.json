{
  "_url": "https://github.com/PowerShell/PowerShell/issues/17143",
  "author": "zivkan",
  "body": "### Prerequisites\n\n- [X] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\n\n### Steps to reproduce\n\nOn a Windows machine with Visual Studio installed:\r\n\r\n```pwsh\r\n$vswhere = \"${Env:\\ProgramFiles(x86)}\\Microsoft Visual Studio\\Installer\\vswhere.exe\"\r\nImport-Module \"$(& $vswhere -prerelease -latest -property installationPath)\\Common7\\Tools\\Microsoft.VisualStudio.DevShell.dll\"\r\nGet-Help Enter-VsDevShell\r\nEnter-VsDevShell\r\n```\r\n\r\nThe `Get-Help Enter-VsDevShell` output is:\r\n\r\n```text\r\nNAME\r\n    Enter-VsDevShell\r\n\r\nSYNTAX\r\n    Enter-VsDevShell -VsInstallPath <string> [-SkipExistingEnvironmentVariables] [-StartInPath <string>] [-Arch {Default | x86 | amd64 | arm | arm64}] [-HostArch {Default | x86 | amd64}] [-DevCmdArguments\r\n    <string>] [-DevCmdDebugLevel {None | Basic | Detailed | Trace}] [-SkipAutomaticLocation] [-SetDefaultWindowTitle] [-ReportNewInstanceType {PowerShell | Cmd | LaunchScript}] [<CommonParameters>]\r\n\r\n    Enter-VsDevShell [-VsInstanceId] <string> [-SkipExistingEnvironmentVariables] [-StartInPath <string>] [-Arch {Default | x86 | amd64 | arm | arm64}] [-HostArch {Default | x86 | amd64}] [-DevCmdArguments\r\n    <string>] [-DevCmdDebugLevel {None | Basic | Detailed | Trace}] [-SkipAutomaticLocation] [-SetDefaultWindowTitle] [-ReportNewInstanceType {PowerShell | Cmd | LaunchScript}] [<CommonParameters>]\r\n\r\n    Enter-VsDevShell [-Arch {Default | x86 | amd64 | arm | arm64}] [-HostArch {Default | x86 | amd64}] [-Test] [-DevCmdDebugLevel {None | Basic | Detailed | Trace}] [<CommonParameters>]\r\n\r\n\r\nALIASES\r\n    None\r\n\r\n\r\nREMARKS\r\n    None\r\n```\r\n\r\n\r\nSo, we can see there are 3 overloads:\r\n\r\n1. `-VsInstallPath <string>` is mandatory\r\n2. `[-VsInstanceId] <string>` is mandatory (but `-VsInstanceId` itself is optional)\r\n3. No mandatory arguments\n\n### Expected behavior\n\n```console\nI expect `Enter-VsDevShell` to run the overload that does not have any mandatory arguments.\n```\n\n\n### Actual behavior\n\n```console\ncmdlet Enter-VsDevShell at command pipeline position 1\r\nSupply values for the following parameters:\r\n(Type !? for Help.)\r\nVsInstallPath:\n```\n\n\n### Error details\n\n_No response_\n\n### Environment data\n\n```powershell\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.2\r\nPSEdition                      Core\r\nGitCommitId                    7.2.2\r\nOS                             Microsoft Windows 10.0.22000\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\n```\n\n\n### Visuals\n\n_No response_",
  "closed_at": "2022-04-13T06:05:09Z",
  "comments": [
    {
      "author": "ThomasNieto",
      "author_association": "CONTRIBUTOR",
      "body": "Does the cmdlet/function have the default parameter set pointed to the one with no mandatory parameters?",
      "created_at": "2022-04-13T00:44:10Z",
      "updated_at": "2022-04-13T00:44:10Z"
    },
    {
      "author": "zivkan",
      "author_association": "NONE",
      "body": "I don't know. Does the `Get-Help` output I provided help answer that?",
      "created_at": "2022-04-13T01:06:50Z",
      "updated_at": "2022-04-13T01:06:50Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "This command will list the parameter sets by name and indicate which one is flagged as the default parameter set:\r\n\r\n`(Get-Command Enter-VsDevShell).ParameterSets | Format-List`\r\n\r\nIf the default set is not the set with no mandatory arguments, PowerShell cannot override that, as it is a decision made by the cmdlet or function author.",
      "created_at": "2022-04-13T02:05:10Z",
      "updated_at": "2022-04-13T02:05:10Z"
    },
    {
      "author": "zivkan",
      "author_association": "NONE",
      "body": "```text\r\nName                    IsDefault Parameters\r\n----                    --------- ----------\r\nInstallPathParameterSet      True {VsInstallPath, SkipExistingEnvironmentVariables, StartInPath, Arch...}\r\nInstanceIdParameterSet      False {VsInstanceId, SkipExistingEnvironmentVariables, StartInPath, Arch...}\r\nTestParameterSet            False {Arch, HostArch, Test, DevCmdDebugLevel...}\r\n```\r\n\r\nI'll report it to the VS team. Thanks!",
      "created_at": "2022-04-13T06:05:09Z",
      "updated_at": "2022-04-13T06:05:09Z"
    }
  ],
  "created_at": "2022-04-13T00:40:14Z",
  "labels": [],
  "number": 17143,
  "state": "closed",
  "title": "PowerShell picking non-optimal overload of cmdlet",
  "updated_at": "2022-04-13T06:05:11Z"
}