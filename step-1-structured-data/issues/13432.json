{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13432",
  "author": "xavierd",
  "body": "## Steps to reproduce\r\n\r\nOpen procmon and filter only syscall made by pwsh.exe,\r\n\r\n```powershell\r\ncd C:/a/directory/with/lots/of/files\r\ncd <tab>\r\n```\r\n\r\nNotice how pwsh.exe attempts to list all the files in C:/, then C:/a, then C:/directory, etc, for every directory present in C:/a/directory/with/lots/of/files. Assuming this is a pretty large directory, tab completion could take a very long time.\r\n\r\nScreenshot of procmon:\r\n![pwsh](https://user-images.githubusercontent.com/50892/90218176-04a71080-ddb8-11ea-8752-48dac97bf3ef.png)\r\n\r\nI have a feeling #12795 might be related to this issue.\r\n\r\n## Expected behavior\r\n\r\npwsh.exe should only be listing files/directory once in CWD to do the tab completion. This doesn't reproduce with PowerShell 5.1.\r\n\r\nScreenshot of procmon:\r\n![powershell](https://user-images.githubusercontent.com/50892/90218184-0a045b00-ddb8-11ea-9a16-3ceb04312256.png)\r\n\r\n## Environment data\r\n\r\n```\r\n% $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.3\r\nPSEdition                      Core\r\nGitCommitId                    7.0.3\r\nOS                             Microsoft Windows 10.0.19041\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@xavierd just so we cover all the bases, can you verify if this behaviour still presents in the currently released preview?",
      "created_at": "2020-08-14T12:48:53Z",
      "updated_at": "2020-08-14T12:48:53Z"
    },
    {
      "author": "xavierd",
      "author_association": "NONE",
      "body": "Yes it does reproduce with:\r\n\r\n```\r\n% $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.0-preview.5\r\nPSEdition                      Core\r\nGitCommitId                    7.1.0-preview.5\r\nOS                             Microsoft Windows 10.0.19041\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
      "created_at": "2020-08-14T15:41:38Z",
      "updated_at": "2020-08-14T15:41:38Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "/cc @daxian-dbw @SteveL-MSFT ",
      "created_at": "2020-08-21T20:59:12Z",
      "updated_at": "2020-08-21T20:59:12Z"
    },
    {
      "author": "xavierd",
      "author_association": "NONE",
      "body": "Trying to find the root cause for this, I believe that https://github.com/PowerShell/PowerShell/commit/6bc2b55fdf99bf70cf11bbc2a37ffa20aa9881d5 is what causes the issue. If I revert the change in NormalizePath tab completion is no longer quadratic. From what I can read in GetCorrectCasedPath, that function appears to list directory entries for all the directories in the passed in path, which would explain this bug.",
      "created_at": "2020-12-21T01:38:36Z",
      "updated_at": "2020-12-21T01:38:36Z"
    },
    {
      "author": "abaumgaertner",
      "author_association": "NONE",
      "body": "Still present in\r\n````\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.0-preview.4\r\nPSEdition                      Core\r\nGitCommitId                    7.2.0-preview.4\r\nOS                             Microsoft Windows 10.0.19042\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n````\r\n\r\n",
      "created_at": "2021-04-08T09:47:03Z",
      "updated_at": "2021-04-08T09:47:03Z"
    },
    {
      "author": "xavierd",
      "author_association": "NONE",
      "body": "@rjmholt, @daxian-dbw, @SteveL-MSFT. Would it be possible to get an update on this issue?",
      "created_at": "2022-05-03T16:10:03Z",
      "updated_at": "2022-05-03T16:10:03Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@xavierd I will look into the `GetCorrectCasedPath` method and reply back here some time next week.",
      "created_at": "2022-05-04T23:00:20Z",
      "updated_at": "2022-05-04T23:00:20Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@xavierd Sorry for taking so long to reply. You are right, the [GetCorrectCasedPath](https://github.com/PowerShell/PowerShell/blob/master/src/System.Management.Automation/namespaces/FileSystemProvider.cs#L119) should be the culprit that causes the recursive enumeration of all files.\r\n\r\nIn some cases, it's inevitable to call this method, such as when the user provides partial of the path like `cd /An-existing-path/<tab>` on Linux and the `/an-existing-path` folder exists. But in some other cases, such as in the repro you provided above, PowerShell should avoid calling into this method when the user does `cd <tab>`, since it's already in the current working directory and there is no point to normalize the path of the current working directory.\r\n\r\nThis is a perf issue that should be fixed.",
      "created_at": "2022-05-13T18:57:03Z",
      "updated_at": "2022-05-13T18:57:40Z"
    },
    {
      "author": "xavierd",
      "author_association": "NONE",
      "body": "@daxian-dbw, any update on this?",
      "created_at": "2022-08-16T15:43:10Z",
      "updated_at": "2022-08-16T15:43:10Z"
    }
  ],
  "created_at": "2020-08-14T05:57:47Z",
  "number": 13432,
  "state": "open",
  "title": "Quadratic behavior during tab completion",
  "updated_at": "2022-08-16T15:43:10Z"
}