{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13754",
  "author": "khoshroomahdi",
  "body": "i use this command to set-location\r\nGet-ChildItem | Out-GridView -PassThru |Set-Location\r\nbut in powershell go to \r\nMicrosoft.PowerShell.Core\\FileSystem::~\\Desktop \r\nand this make some problem for example i want to open file explorer in this location but explorer open in quick access not in this location\r\n\r\nPSVersion                      7.0.3\r\nPSEdition                      Core\r\nGitCommitId                    7.0.3\r\nOS                             Microsoft Windows 10.0.19041\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0",
  "closed_at": "2020-10-10T02:00:08Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Please share PSVersionTable as requested in the issue template.",
      "created_at": "2020-10-07T11:05:30Z",
      "updated_at": "2020-10-07T11:05:30Z"
    },
    {
      "author": "jhoneill",
      "author_association": "NONE",
      "body": "`get-item .. | select -expand fullname |  set-location ` \r\nWill work \r\n`get-item .. | set-location`  passes a directoryInfo object with a `PSPath` property, cmdlets usually prefer to use this rather name or full name,  and we don't see it . For `set-location` it's a bit ugly, but it is still the same place. \r\nSame thing on Win PowerShell 5.1 and on 7.0.3",
      "created_at": "2020-10-07T23:52:11Z",
      "updated_at": "2020-10-07T23:52:11Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "~~It is seem dup #3307.~~",
      "created_at": "2020-10-08T03:20:33Z",
      "updated_at": "2020-10-08T16:06:43Z"
    },
    {
      "author": "jhoneill",
      "author_association": "NONE",
      "body": "No,  #3307 says \"name\" <> \"fullname\",  but  `$x | cat`  uses PSPath so isn't affected. \r\n\r\nThis one is \"Set-location accepts both path and literalpath, and literalpath / pspath takes predence\" \r\nSo you can do \r\n```\r\n> Set-Location -LiteralPath (get-item .).pspath\r\n>$Pwd   \r\nPath\r\n----\r\nMicrosoft.PowerShell.Core\\FileSystem::C:\\Users\\James\\Documents\\Stuff\r\n```\r\nAnd connect to the PSProvider instead of the drive, which is  counter intuitive.   drive-less CD - for example\r\n`set-location Microsoft.PowerShell.Core\\Registry::HKEY_CLASSES_ROOT\\`\r\nIs quite legal, and useful, though not very often . It would be possible to change which property was picked up by default. \r\n",
      "created_at": "2020-10-08T14:39:27Z",
      "updated_at": "2020-10-08T14:39:27Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "That would involve changing and possibly breaking quite a few other cmdlets / use cases that work with the pspath/literalpath pipeline binding. For example, the Registry doesn't really have objects that have a FullName or similar property from memory that works quite the same way that filesystem objects do, they have a PSPath and then if you want anything else you're more or less left to construct it from pieces, which gets quite annoying.\r\n\r\nThis is as far as I ever got to fixing this, the proper \"fix\" is still not clear to me, there'a a fair bit of discussion in this old, unmerged PR: #9294\r\n\r\nThe other issue we've seen around this is #9293, which I guess this one is essentially a duplicate of. Might be more productive to continue discussion in that issue?",
      "created_at": "2020-10-08T15:34:14Z",
      "updated_at": "2020-10-08T15:36:27Z"
    },
    {
      "author": "jhoneill",
      "author_association": "NONE",
      "body": "@vexx32  Yes I think you had the the right idea in #9294 - i.e. it's not something which should be changed generally; Strictly speaking  set-location is doing the correct thing but it _feels_ wrong, and seems like a bug to the OP. ",
      "created_at": "2020-10-08T23:50:18Z",
      "updated_at": "2020-10-08T23:50:18Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Aye. In the specific case of Set-Location I do think we should fix it as best we can, but I'm unsure of the best way to approach that at the moment.",
      "created_at": "2020-10-08T23:54:27Z",
      "updated_at": "2020-10-08T23:54:27Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as duplicate and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2020-10-10T02:00:07Z",
      "updated_at": "2020-10-10T02:00:07Z"
    }
  ],
  "created_at": "2020-10-07T09:09:54Z",
  "labels": [
    "Issue-Bug",
    "Resolution-Duplicate"
  ],
  "number": 13754,
  "state": "closed",
  "title": "problem with set-location after passthru ",
  "updated_at": "2020-10-10T02:00:08Z"
}