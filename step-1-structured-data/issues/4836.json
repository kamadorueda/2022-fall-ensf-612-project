{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4836",
  "author": "iSazonov",
  "body": "Currently we changed semantic of `-version` command line parameter from \"run Windows PowerShell 2.0\" to \"show current PowerShell version\".\r\n\r\nNow we need a way to address a side-by-side scenario - to enumerate installed PowerShell versions and run needed PowerShell version.\r\n\r\n### Suggesion\r\n[ ] Enumerate installed versions:\r\n```\r\n>powershell -versions\r\n```\r\n\r\n[ ] Run needed version:\r\n```\r\npowershell -versions <ver spec>\r\n```",
  "closed_at": "2021-05-25T06:25:30Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I am ready to implement enumeration of installed versions based on https://github.com/PowerShell/vscode-powershell/blob/c3e987c9e9add273e6699972bb017ccfbc47e873/src/platform.ts#L110\r\n\r\nWhat directories we use on Linux and Mac?",
      "created_at": "2017-09-28T05:39:12Z",
      "updated_at": "2017-09-28T05:39:59Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "I totally understand the need for this, but I think that it probably shouldn't be implemented in the host binary. Ultimately, this is the job of the package manager, but I get why we might need something like [virtualenv](https://virtualenv.pypa.io/en/stable/) as well.\r\n\r\nHowever, at this point in the release cycle, it's a pretty high-risk change to bring in (and potentially get wrong), especially when you consider that there won't be any production scenarios for side-by-side 6.x's for at least a little while. \r\n\r\nWhen we do want to bring it in, we should have an RFC for it (and I think we should have some alternate designs that include a PS module that enumerates versions as well as whether it should be a native tool to support bootstrap scenarios).\r\n\r\n@iSazonov do you have a scenario today where this is critical? I think unpacking that is the first step to understanding the proper implementation here (and where having a `pwsh` alias for PS Core isn't enough). ",
      "created_at": "2017-10-04T23:13:05Z",
      "updated_at": "2017-10-04T23:13:05Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@joeyaiello I see that VS Code (see link above) discover installed PowerShell versions and allow users run desired version.\r\nAlso I know Microsoft SCOR 2012 product. It is based on PowerShell 2.0 (!!!). If users need new features they are forced to run needed version explicitly.\r\nI believe it is better to have the discover feature natively (specially on Windows) - this will make other products more stable.\r\nI'm not sure about launching, but it's also interesting, all the more so when we had `-Version 2`.\r\n",
      "created_at": "2017-10-05T03:35:30Z",
      "updated_at": "2017-10-05T03:35:30Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Any news?",
      "created_at": "2017-10-12T04:40:58Z",
      "updated_at": "2017-10-12T04:40:58Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee reviewed this and believes this is should be an RFC for a proposal that can be reviewed in its entirety with considerations for different potential design proposals.  However, until we have multiple released versions of PSCore6 and customers depending on side-by-side, we believe that the current side-by-side differentiated by file path is sufficient and may not be worth the effort to draft an RFC as well as submit an implementation PR.",
      "created_at": "2017-12-06T23:16:16Z",
      "updated_at": "2017-12-06T23:21:45Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "RFC: https://github.com/PowerShell/PowerShell-RFC/pull/202.",
      "created_at": "2019-06-21T21:14:50Z",
      "updated_at": "2019-06-21T21:14:50Z"
    }
  ],
  "created_at": "2017-09-14T17:19:20Z",
  "number": 4836,
  "state": "closed",
  "title": "Enumerate and run installed PowerShell versions",
  "updated_at": "2021-05-25T06:25:30Z"
}