{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12834",
  "author": "iSazonov",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nAddresses #9119\r\n\r\nIntention is to improve performance without changing current behavior. Later we can more easily fix already known bugs/inconsistencies and add new features.\r\n\r\nPerformance win is up to 50%.\r\nAllocations are dramatically reduces if filtering is used (now no allocations are for discarded  paths).\r\n\r\n- Use new .Net Runtime path (folder/file) enumerator in PowerShell file system provider.\r\n- Refactor existing code to one method.\r\n- Add more tests (mainly for hidden file attribute)\r\n\r\nToday the .Net API does not support:\r\n- `Depth` ([tracking issue](https://github.com/dotnet/runtime/issues/43748)) and we use a workaround in the case.\r\n- ContinueOnError predicate and we use copy-pasted and bit enhanced code from .Net.\r\n\r\n## PR Context\r\n\r\nCurrent implementation is a generic (common for all providers) enumerating code which is very expensive. New implementation uses new .Net API for file enumerating. The API is very fast and efficient, especially if filtering is used.\r\n\r\nThe follow intention is to use this approach later for `dir -recurse` too and then fix known bugs and add new features.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [ ] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@TravisEz13 @adityapatwardhan It seems Linux CI has an issue. I added obvious fail test ` 1 | Should -Be 2` to demo this. As you can see Windows CI and MacOS CI fail on the test but Linux CI passes. I guess Linux CI does not use the PR branch but master branch. Could you please look the issue?",
      "created_at": "2020-06-03T07:24:05Z",
      "updated_at": "2020-06-03T07:24:05Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as stale because it has been marked as requiring author feedback but has not had any activity for **15 days**. It will be closed if no further activity occurs **within 10 days of this comment**.",
      "created_at": "2020-06-30T08:00:09Z",
      "updated_at": "2020-06-30T08:00:09Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as stale because it has been marked as requiring author feedback but has not had any activity for **15 days**. It will be closed if no further activity occurs **within 10 days of this comment**.",
      "created_at": "2020-08-03T08:00:18Z",
      "updated_at": "2020-08-03T08:00:18Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as stale because it has been marked as requiring author feedback but has not had any activity for **15 days**. It will be closed if no further activity occurs **within 10 days of this comment**.",
      "created_at": "2020-08-31T20:00:14Z",
      "updated_at": "2020-08-31T20:00:14Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as stale because it has been marked as requiring author feedback but has not had any activity for **15 days**. It will be closed if no further activity occurs **within 10 days of this comment**.",
      "created_at": "2020-09-22T20:00:06Z",
      "updated_at": "2020-09-22T20:00:06Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as stale because it has been marked as requiring author feedback but has not had any activity for **15 days**. It will be closed if no further activity occurs **within 10 days of this comment**.",
      "created_at": "2020-11-07T20:00:05Z",
      "updated_at": "2020-11-07T20:00:05Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as stale because it has been marked as requiring author feedback but has not had any activity for **15 days**. It will be closed if no further activity occurs **within 10 days of this comment**.",
      "created_at": "2020-12-07T08:00:06Z",
      "updated_at": "2020-12-07T08:00:06Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Please wrap as Experimental Feature",
      "created_at": "2020-12-15T20:14:00Z",
      "updated_at": "2020-12-15T20:14:00Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> Please wrap as Experimental Feature\r\n\r\n@SteveL-MSFT Intention is to replace implementation and _to keep current behavior_ with one exclusion  - we could fix some minor _bugs_ and inconsistences - all this does not require Experimental Feature.\r\n\r\nCurrent status - waiting .Net to implement `-Depth` parameter. But they do not confirm the API improvement in .Net 6.0 so I think to keep old code path for `-Depth`.",
      "created_at": "2020-12-16T05:07:59Z",
      "updated_at": "2020-12-16T05:12:31Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2020-12-25T02:00:08Z",
      "updated_at": "2020-12-25T02:00:08Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2021-09-23T02:00:56Z",
      "updated_at": "2021-09-23T02:00:56Z"
    }
  ],
  "created_at": "2020-05-29T09:52:05Z",
  "number": 12834,
  "state": "open",
  "title": "Optimize Get-ChildItem -Recurse -Name",
  "updated_at": "2021-11-11T22:00:53Z"
}