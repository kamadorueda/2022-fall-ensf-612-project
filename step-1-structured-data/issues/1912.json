{
  "_url": "https://github.com/PowerShell/PowerShell/issues/1912",
  "author": "phrohdoh",
  "body": "OS X\n## Steps to reproduce\n\n```\nPS /Users/thill/projects/work> Get-Process | Sort-Object -Property CPU -Descending | Select-Object -First 5\n```\n## Expected behavior\n\nNo maximum line length.\n## Actual behavior\n\nEvidence of lines being cutoff:\n\n```\nHandles  NPM(K)    PM(K)      WS(K)     CPU(s)     Id  SI ProcessName                                                                                                                                      \n-------  ------    -----      -----     ------     --  -- -----------                                                                                                                                      \n      0       0        0     756156 ...127.183  12881   1 plugin-containe                                                                                                                                  \n      0       0        0     738004 ...219.210  12879   1 firefox                                                                                                                                          \n      0       0        0     160060 37,618.788  38707   1 Microsoft Remot                                                                                                                                  \n      0       0        0      77596  6,914.063  12899   1 iTerm                                                                                                                                            \n      0       0        0      19852  2,687.954    313   1 Flux                                                                                                                                             \n```\n## Environment data\n\n``` powershell\n> $PSVersionTable\n\nName                           Value                                                                                                                                                                       \n----                           -----                                                                                                                                                                       \nPSVersion                      6.0.0-alpha                                                                                                                                                                 \nPSEdition                      Core                                                                                                                                                                        \nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}                                                                                                                                                     \nBuildVersion                   3.0.0.0                                                                                                                                                                     \nGitCommitId                    v6.0.0-alpha.9                                                                                                                                                              \nCLRVersion                                                                                                                                                                                                 \nWSManStackVersion              3.0                                                                                                                                                                         \nPSRemotingProtocolVersion      2.3                                                                                                                                                                         \nSerializationVersion           1.1.0.1\n```\n",
  "closed_at": null,
  "comments": [
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "PowerShell asks the host how wide the display is and does formatting to fit that width.\n\nThis is normally what people want when the output is sent to the screen, otherwise tables might look bad.\n\nIf your issue is that the truncation happens when writing to a file - then I agree this is something we should fix.\n",
      "created_at": "2016-08-18T23:00:11Z",
      "updated_at": "2016-08-18T23:00:11Z"
    },
    {
      "author": "crypticgeek",
      "author_association": "NONE",
      "body": "I don't think this is a bug. This is just how Powershell tables work. Similar fields will be truncated on Windows, regardless of the window width. Try Format-Table.\n\n```\nPS> Get-Process | Sort-Object -Property CPU -Descending | Select-Object -First 5 | Format-Table                    \n\nHandles  NPM(K)    PM(K)      WS(K)     CPU(s)     Id  SI ProcessName                                                                   \n-------  ------    -----      -----     ------     --  -- -----------                                                                   \n      0       0        0    3853192 ...104.693  16063   1 prl_vm_app                                                                    \n      0       0        0     438936 ...179.407    670   1 Google Chrome                                                                 \n      0       0        0      70932 ...150.444    676 676 VTDecoderXPCSer                                                               \n      0       0        0      92120 ...417.235    675   1 Google Chrome H                                                               \n      0       0        0      64508 ...452.274   1150   1 Dropbox                                                                       \n\n\nPS> Get-Process | Sort-Object -Property CPU -Descending | Select-Object -First 5 | Format-Table -AutoSize          \n\nHandles NPM(K) PM(K)   WS(K)        CPU(s)    Id  SI ProcessName    \n------- ------ -----   -----        ------    --  -- -----------    \n      0      0     0 3853192 2,445,139.277 16063   1 prl_vm_app     \n      0      0     0  438936 2,408,189.629   670   1 Google Chrome  \n      0      0     0   70752 2,233,173.934   676 676 VTDecoderXPCSer\n      0      0     0   92120 1,863,433.605   675   1 Google Chrome H\n      0      0     0   64508   490,453.083  1150   1 Dropbox     \n\n```\n",
      "created_at": "2016-08-18T23:32:19Z",
      "updated_at": "2016-08-18T23:32:19Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "Good point - I didn't look closely at the output.\n\nWe've been tweaking the fixed column widths for the Get-Process output.  It might make sense to adjust those some more so there is no truncation in the CPU column.\n",
      "created_at": "2016-08-18T23:57:00Z",
      "updated_at": "2016-08-18T23:57:00Z"
    },
    {
      "author": "doctordns",
      "author_association": "COLLABORATOR",
      "body": "This is by design. PowerShell like Windows PowerShell uses display XML to guide the formatting ((although the XML is 'inside' the cmdlets rather than a separate XML file as with Windows PowerShell. You can see what PowerShell 7 thinkls:\r\n\r\n```powershell\r\nPSH [C:\\Foo]: $f = Get-FormatData -TypeName System.Diagnostics.Process | Select -Expand FormatViewDefinition | Where name -eq 'process' | Select -first 1 | Select -Expand control\r\n\r\nPSH [C:\\Foo]: $f.headers\r\n\r\nLabel  Alignment Width\r\n-----  --------- -----\r\nNPM(K)     Right     7\r\nPM(M)      Right     8\r\nWS(M)      Right    10\r\nCPU(s)     Right    10\r\n           Right     7\r\n           Right     3\r\n       Undefined     0\r\n```\r\nAs you can see, the width of the CPU column is 10 characters. And that is what you are seeing - PowerShell attempt to format a BIG number into those 10 characters and fails gracefully. Not what you ideally wanted but it is by design. \r\n\r\nThe solution would be to update the XML. You can do that in your PowerShell profile (create XML that overrides the system formatting defaults).  \r\n\r\nI am not sure it's worth changing the default but that is an option worth discussing. The question then is how wide to make it, given that most CPU values are adequately covered by the current implementation.\r\n\r\n",
      "created_at": "2022-04-03T11:59:13Z",
      "updated_at": "2022-04-03T11:59:13Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "> The question then is how wide to make it, given that most CPU values are adequately covered by the current implementation.\r\n\r\nI wonder if that's only the case for Windows though. If large numbers are the norm on Mac (as the OP is running) it's probably worth increasing the size of that column a few.",
      "created_at": "2022-04-04T15:09:09Z",
      "updated_at": "2022-04-04T15:09:09Z"
    },
    {
      "author": "doctordns",
      "author_association": "COLLABORATOR",
      "body": "Sure that could probably be done (adding a column or two for that field. \r\n\r\nBut as an alternative - if you just use -Auitosize it just works. \r\n\r\nChanging this default would only help a fairly small number of users. Given that -Autosize works, not sure we'd want to change this default for edge cases. ",
      "created_at": "2022-04-05T14:11:46Z",
      "updated_at": "2022-04-05T14:11:46Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "> Changing this default would only help a fairly small number of users. Given that -Autosize works, not sure we'd want to change this default for edge cases.\r\n\r\nI don't think we can make this assertion without data to back it up.\r\n\r\nBesides, the change is fairly trivial, so I don't see why the opposition here.",
      "created_at": "2022-04-05T14:35:18Z",
      "updated_at": "2022-04-05T14:35:47Z"
    }
  ],
  "created_at": "2016-08-18T21:32:42Z",
  "labels": [
    "Issue-Enhancement",
    "WG-Cmdlets",
    "Up-for-Grabs"
  ],
  "number": 1912,
  "state": "open",
  "title": "Output cutoff at 74 chars per line",
  "updated_at": "2022-04-05T14:35:47Z"
}