{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10227",
  "author": "bergmeister",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nUpdate also the out of band NuGet packages to preview7 as well except the ones that could not be updated in the past (System.ServiceProcess.ServiceController and the WindowsCompatibility package that has a dependency on it, issue #10067 is tracking that)\r\nNotes: .Net Core Runtime does not ship SOS dll any more by default (out of band now) and it seems they've removed a few localised DLLs as well (probably as part of their SDK size optimisation). The SOS dll is now an optional install addon to the dotnet cli and not a NuGet package. I'm not 100% sure if we can just stop shipping that DLL or some people have a dependency on it somehow?\r\n\r\nPreview7 now requires `<UseWpf>` and `<UseWindowsForms>` to be set to `true` in the csproj, so added them conditionally if using `WindowsDesktop` SDK.\r\n\r\nFixes #9998 (manually tested)\r\n\r\n# PR Context\r\n\r\nhttps://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-preview-7\r\nhttps://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-preview7.md\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [ ] None\r\n    - SOS DLL not shipped any more. Should we re-add it for back-compat?\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2019-08-05T16:56:30Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "We could set `<LangVersion>preview</LangVersion>`.",
      "created_at": "2019-07-26T06:11:28Z",
      "updated_at": "2019-07-26T06:11:28Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov According to the docs, this should already be the default but even if not, I'd prefer a separate PR for that as it seems unrelated\r\nhttps://docs.microsoft.com/dotnet/csharp/language-reference/configure-language-version",
      "created_at": "2019-07-26T07:38:51Z",
      "updated_at": "2019-07-26T07:38:51Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "The SOS dll is used when it's time to debug powershell using WinDbg. It's useful to keep it there.\r\n\r\n> The SOS dll is now an optional install addon to the dotnet cli and not a NuGet package.\r\n\r\nCan you please point me to the instructions about installing SOS dll?",
      "created_at": "2019-07-26T16:56:23Z",
      "updated_at": "2019-07-26T16:56:23Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "@daxian-dbw Installation instructions for SOS are here now:\r\nhttps://github.com/dotnet/diagnostics#installing-sos\r\nThe question is if we really need to still ship that DLL (naively looking at it it seems to not be needed any more).",
      "created_at": "2019-07-26T17:33:42Z",
      "updated_at": "2019-07-26T21:08:01Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "NB: I now also update the out of band NuGet packages to `preview7` as well since the tests are still green with it. This applies to all out of band Nuget packages except the ones that could not be updated in the past for `preview6` (`System.ServiceProcess.ServiceController` and the WindowsCompatibility package that has a dependency on it, issue #10067 is tracking that)",
      "created_at": "2019-07-26T21:55:47Z",
      "updated_at": "2019-07-26T21:56:18Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@bergmeister Does the service cmdlet failure still persist even with the `preview7` version of the `System.ServiceProcess.ServiceController` NuGet package?",
      "created_at": "2019-07-26T23:20:54Z",
      "updated_at": "2019-07-26T23:20:54Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "@daxian-dbw Yes, see the test build [here](https://christophbergmeister.visualstudio.com/PowerShell/_build/results?buildId=1231&view=ms.vss-test-web.build-test-results-tab). I have even tried older preview version (back to preview3) of .Net Core 3 and all those packages cause the same 2 failures. @iSazonov suspects it might be the GC: https://github.com/PowerShell/PowerShell/issues/10067#issuecomment-508948459\r\n\r\nAfter the STA commit got merged into master recently, the newly added tests is failing now for preview7, I provided lots of details in my comment [here](https://github.com/PowerShell/PowerShell/pull/10227#discussion_r307960566) and it is again not easy to isolate the problem into a simple repro that we could give the WPF team but maybe just the error message could help them find out what goes wrong",
      "created_at": "2019-07-27T11:20:08Z",
      "updated_at": "2019-07-27T11:20:08Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "The static analysis failure is fixed via https://github.com/PowerShell/PowerShell/pull/10297\r\n\r\nDoing a manual build of your branch, there is a warning that `<UseWpf>` and `<UseWindowsForms>` needs to be explicitly set to true.  This appears to be a change from Preview6 where it was implicit when using the DesktopSDK.  Adding it conditionally fixes the type exception.",
      "created_at": "2019-08-04T04:52:33Z",
      "updated_at": "2019-08-04T04:52:33Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "The static analysis failure is unrelated to this PR and a fix is coming in a separate PR.\r\n```none\r\n[-] http://powershell.com/cs/blogs/ebookv2/default.aspx should work 92ms\r\n        RuntimeException: retry of URL failed with error: \r\n        at <ScriptBlock>, /home/vsts/work/1/s/test/common/markdown/markdown-link.tests.ps1: line 111\r\n```",
      "created_at": "2019-08-05T16:42:14Z",
      "updated_at": "2019-08-05T16:42:14Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.0.0-preview.3` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.0.0-preview.3)\n",
      "created_at": "2019-08-20T22:35:57Z",
      "updated_at": "2019-08-20T22:35:57Z"
    }
  ],
  "created_at": "2019-07-25T11:51:01Z",
  "number": 10227,
  "state": "closed",
  "title": "Update .Net Core runtime from 3.0-preview6 to preview7",
  "updated_at": "2019-08-20T22:35:57Z"
}