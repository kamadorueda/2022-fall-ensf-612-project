{
  "_url": "https://github.com/PowerShell/PowerShell/issues/16518",
  "author": "stej",
  "body": "### Prerequisites\n\n- [X] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\n\n### Steps to reproduce\n\nPwsh crashes with this error:\r\n\r\n```\r\nApplication: pwsh.exe\r\nCoreCLR Version: 6.0.21.52210\r\n.NET Version: 6.0.0\r\nDescription: The process was terminated due to an unhandled exception.\r\nException Info: System.ComponentModel.Win32Exception (1816): Not enough quota is available to process this command.\r\n   at MS.Win32.UnsafeNativeMethods.PostMessage(HandleRef hwnd, WindowMessage msg, IntPtr wparam, IntPtr lparam)\r\n   at System.Windows.Interop.HwndTarget.UpdateWindowSettings(Boolean enableRenderTarget, Nullable`1 channelSet)\r\n   at System.Windows.Interop.HwndTarget.UpdateWindowPos(IntPtr lParam)\r\n   at System.Windows.Interop.HwndTarget.HandleMessage(WindowMessage msg, IntPtr wparam, IntPtr lparam)\r\n   at System.Windows.Interop.HwndSource.HwndTargetFilterMessage(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean& handled)\r\n   at MS.Win32.HwndWrapper.WndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean& handled)\r\n   at MS.Win32.HwndSubclass.DispatcherCallbackOperation(Object o)\r\n   at System.Windows.Threading.ExceptionWrapper.InternalRealCall(Delegate callback, Object args, Int32 numArgs)\r\n   at System.Windows.Threading.ExceptionWrapper.TryCatchWhen(Object source, Delegate callback, Object args, Int32 numArgs, Delegate catchHandler)\r\n   at System.Windows.Threading.Dispatcher.LegacyInvokeImpl(DispatcherPriority priority, TimeSpan timeout, Delegate method, Object args, Int32 numArgs)\r\n   at MS.Win32.HwndSubclass.SubclassWndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam)\r\n```\r\n\r\nIt happens mainly when I call some external native commands (Julia script), but I'm not sure whether it's related.\r\n\r\nHow it behaves:\r\n - In ConEmu: the tab simply disappears\r\n - In Windows terminal: the message about the quota is shown in the window and the promp disappears. I can only close the tab munually. Nothing else.\r\nThe pwsh in \n\n### Expected behavior\n\n```console\nNo crash..\n```\n\n\n### Actual behavior\n\n```console\nCrashing.\n```\n\n\n### Error details\n\n```console\nI experienced this problem in Windows Terminal, so I switched to ConEmu and it's still happening.\n```\n\n\n### Environment data\n\n```powershell\n$PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.0\r\nPSEdition                      Core\r\nGitCommitId                    7.2.0\r\nOS                             Microsoft Windows 10.0.19041\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\n```\n\n\n### Visuals\n\n![image](https://user-images.githubusercontent.com/253560/143466956-471fe723-cb5e-4777-bdf0-650a269dd533.png)\r\n",
  "closed_at": "2022-01-15T04:00:42Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "/cc @DHowett @daxian-dbw for information.",
      "created_at": "2021-11-25T18:16:27Z",
      "updated_at": "2021-11-25T18:16:27Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@stej Can you please share the specific script/command you ran that triggered this crash?\r\nThe event and the call stacks suggest the exception was thrown from the .NET runtime.\r\n\r\nIf you are able to consistently reproduce the issue, can you please collect a crash dump by following the instructions from https://docs.microsoft.com/en-us/dotnet/core/diagnostics/dumps#collect-dumps-on-crash?\r\nPlease use `MiniDumpWithFullMemory` as the dump type, by setting `DOTNET_DbgMiniDumpType` to `4`.\n\n<blockquote><img src=\"https://docs.microsoft.com/dotnet/media/dotnet-logo.png\" width=\"48\" align=\"right\"><div><strong><a href=\"https://docs.microsoft.com/en-us/dotnet/core/diagnostics/dumps\">Dumps - .NET</a></strong></div><div>An introduction to dumps in .NET.</div></blockquote>",
      "created_at": "2021-12-01T02:23:00Z",
      "updated_at": "2021-12-01T02:23:02Z"
    },
    {
      "author": "stej",
      "author_association": "NONE",
      "body": "Sure, I'll try. Meanwhile the command line looks like this:\r\n\r\n```\r\ncls; $f='c:\\temp\\values.csv';$pre=[float](Import-Csv $f)[-1].Total; C:\\util-setdateToCurrent.ps1 ; C:\\temp\\runDownloadsAndAnalysis.bat; $post=[float](Import-Csv $f)[-1].Total; $diff=\"Difference: $([int]($post-$pre))`$\"; if ($diff -match ' -') { Show-Warning $diff } else { Show-Info $diff }\r\n```\r\n(one line). \r\nWhere \r\n- `util-setdateToCurrent.ps1` calls Set-Date with some time\r\n- `runDownloadsAndAnalysis.bat` - calling pwsh (creates new process), so I don't think it's causing the problem\r\n- `Show-Warning` and `Show-Info` - this is my bet.\r\n\r\nThe body:\r\n```\r\nfunction Show-WpfMessage($title, $str, $headingBackColor, $messageBackColor, $messageColor, $height, $width)\r\n{\r\n  Add-Type -Assembly PresentationFramework\r\n  Add-Type -Assembly PresentationCore\r\n  $xaml = @\"\r\n<Window xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\r\n  Title=\"$title\" Height=\"$height\" Width=\"$width\"\r\n  Opacity=\"10\" OpacityMask=\"Green\" \r\n  Topmost=\"True\" WindowStyle=\"None\" AllowsTransparency=\"True\" Background=\"Transparent\" Padding=\"20\" Top=\"10\" Left=\"10\">\r\n  <DockPanel>\r\n    <Border DockPanel.Dock=\"Top\" CornerRadius=\"10\" BorderThickness=\"2\" BorderBrush=\"Black\" Background=\"$headingBackColor\"\r\n      Padding=\"8\" Margin=\"10\">\r\n      <TextBlock FontSize=\"52\" TextWrapping=\"Wrap\" Margin=\"20\" HorizontalAlignment=\"Center\">$title</TextBlock>\r\n    </Border>\r\n    <Border DockPanel.Dock=\"Bottom\" CornerRadius=\"10\" BorderThickness=\"1\" BorderBrush=\"Black\"\r\n      Padding=\"8\" Margin=\"10\" Background=\"$messageBackColor\">\r\n      <TextBlock Foreground=\"$messageColor\" FontSize=\"42\" Padding=\"60\" TextWrapping=\"Wrap\" HorizontalAlignment=\"Center\">$str</TextBlock>\r\n    </Border>\r\n  </DockPanel>\r\n</Window>\r\n\"@\r\n\r\n  $global:window = [Windows.Markup.XamlReader]::Load((New-Object System.Xml.XmlNodeReader ([Xml]$xaml ) ) )\r\n  $window.Add_MouseLeftButtonDown(  { $_.Handled = $true; $window.DragMove() } )\r\n  $window.Add_MouseRightButtonDown( { $_.Handled = $true; $window.Close()   } )\r\n  $window.ShowDialog()\r\n}\r\n\r\nfunction Show-Info($str) {\r\n  Show-WpfMessage \"Information\" $str -headingBackColor LightBlue -messageBackColor White -messageColor Black 400 800\r\n}\r\nfunction Show-Warning($str) {\r\n  Show-WpfMessage \"Warning\" $str -headingBackColor Yellow -messageBackColor Red -messageColor Black 600 1200\r\n}\r\n\r\n```",
      "created_at": "2021-12-03T13:10:58Z",
      "updated_at": "2021-12-03T13:10:58Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as \"Waiting on Author\" and has not had any activity for **7 day**. It has been closed for housekeeping purposes.",
      "created_at": "2022-01-15T04:00:42Z",
      "updated_at": "2022-01-15T04:00:42Z"
    }
  ],
  "created_at": "2021-11-25T15:20:55Z",
  "labels": [
    "Issue-Question",
    "WG-Engine",
    "Waiting on Author"
  ],
  "number": 16518,
  "state": "closed",
  "title": "Pwsh crashing with Not enough quota is available to process this command",
  "updated_at": "2022-01-15T04:00:42Z"
}