{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7982",
  "author": "mklement0",
  "body": "Steps to reproduce\r\n------------------\r\n\r\n```powershell\r\n'--- .Key'\r\n@{ one=1; two=2 }.GetEnumerator().Key\r\n'--- .ForEach(''Key'')'\r\n@{ one=1; two=2 }.GetEnumerator().ForEach('Key')\r\n'--- .Name'\r\n@{ one=1; two=2 }.GetEnumerator().Name\r\n```\r\n\r\nNote that `.Name` is an ETS alias property of the native `.Key` property of the dictionary entries being enumerated.\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```none\r\n--- .Key\r\ntwo\r\none\r\n--- .ForEach('Key')\r\ntwo\r\none\r\n--- .Name\r\ntwo\r\none\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n```none\r\n--- .Key\r\n--- .ForEach('Key')\r\ntwo\r\none\r\n--- .Name\r\ntwo\r\none\r\n```\r\n\r\nThat is, accessing the native `.Key` property via member enumeration yielded nothing.\r\n\r\nEnvironment data\r\n----------------\r\n\r\n```powershell\r\nPowerShell Core v6.1.0 on macOS 10.14\r\nPowerShell Core v6.1.0 on Ubuntu 16.04.5 LTS\r\nPowerShell Core v6.1.0 on Microsoft Windows 10 Pro (64-bit; Version 1803, OS Build: 17134.165)\r\nWindows PowerShell v5.1.17134.228 on Microsoft Windows 10 Pro (64-bit; Version 1803, OS Build: 17134.165)\r\n```\r\n",
  "closed_at": "2018-10-10T03:22:28Z",
  "comments": [
    {
      "author": "PetSerAl",
      "author_association": "CONTRIBUTOR",
      "body": "Note that `System.Collections.Hashtable+HashtableEnumerator` actually have `Key` property but not `Name` property. `Name` is `AliasProperty` for `System.Collections.DictionaryEntry` but not for enumerator itself.",
      "created_at": "2018-10-10T03:14:43Z",
      "updated_at": "2018-10-10T03:14:43Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "That makes sense - thank you, @PetSerAl.\r\n\r\nThe enumerator also has a `.Value` property.\r\n\r\nThe behavior is therefore consistent with member enumeration, but it is another example of where a `@.` operator to disambiguate collection-level access from element-level access could be helpful - see #7445",
      "created_at": "2018-10-10T03:22:25Z",
      "updated_at": "2018-10-10T03:22:25Z"
    }
  ],
  "created_at": "2018-10-10T03:01:45Z",
  "number": 7982,
  "state": "closed",
  "title": "Unexpected member-enumeration behavior with a hashtable's enumerator",
  "updated_at": "2018-11-22T10:45:37Z"
}