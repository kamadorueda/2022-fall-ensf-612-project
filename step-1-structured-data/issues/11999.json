{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11999",
  "author": "alexandru-mocanu",
  "body": "If validation is unsuccessful, the cmdlet returns the error before the result. If you want to handle the error returned by the cmdlet you are unable to get to the result. It should return the result first and then the error.",
  "closed_at": null,
  "comments": [
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "You can handle the non-terminating errors that `Test-Json` returns without aborting execution, so you'll still get the result.\r\n\r\nAlso, if you choose to abort execution, you don't need the result, because `$false` is implied.\r\n\r\n```powershell\r\n# Ignore errors and capture only the result.\r\n$result = Test-Json '][' -ErrorAction Ignore\r\n\r\n# Silence the error messages, but capture them in variable $err\r\n$result = Test-Json '][' -ErrorAction SilentlyContinue -ErrorVariable err\r\n```\r\n\r\nGenerally, in a cmdlet that outputs a single result after overall processing has completed, it's appropriate to emit non-terminating errors that occur in the course of processing  _before_ the result .",
      "created_at": "2020-03-04T15:07:39Z",
      "updated_at": "2020-03-04T15:07:39Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "The general usage of `Test-*` cmdlets is that they _do not error_. The only other exception currently is `Test-Connection`, primarily because that behaviour exists in utilities like `ping` as well as the original `Test-Connection` and `Test-NetConnection` cmdlets behaved that way in Windows PowerShell.\r\n\r\n`Test-Path` for example, pretty much will not error unless you pass it completely invalid input (iirc currently it can only error if you pass it `$null` which fails parameter validation).\r\n\r\nIf there's an error... it should just return False and nothing else, really.\r\n\r\n`if (Test-Json $str) { }` should just give true or false; an error implies false, there's no need for that error. Perhaps if it had a `-Details` switch and gave a thorough report on the validation errors in some kind of return object, then sure. But by default... should just be true or false imo.",
      "created_at": "2020-03-04T16:11:35Z",
      "updated_at": "2020-03-04T16:13:34Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Good point, @vexx32 - the real problem here is that _errors_ are emitted at all, _by default_, no less.\r\n\r\n@iSazonov, is changing that on the radar for your PR #11397?\r\n\r\n",
      "created_at": "2020-03-04T16:18:42Z",
      "updated_at": "2020-03-04T16:18:42Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "There is #11934 where we could discuss and address the issue. ",
      "created_at": "2020-03-04T16:28:19Z",
      "updated_at": "2020-03-04T16:28:19Z"
    }
  ],
  "created_at": "2020-03-04T14:50:53Z",
  "number": 11999,
  "state": "open",
  "title": "Test-Json returns Error before result",
  "updated_at": "2021-01-16T05:19:45Z"
}