{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7239",
  "author": "pldmgg",
  "body": "Steps to reproduce\r\n------------------\r\nOn a Windows Client running PowerShell Core v6.1.0-preview.3, create a PSSession (via SSH) to a CentOS7 host running v6.1.0-preview.2 and do the following\r\n\r\n```powershell\r\nPS C:\\Users\\zeroadmin> $CentOS7PSSession = New-PSSession -HostName 192.168.2.49 -KeyFilePath \"$HOME\\.ssh\\vagrant_unsecure_key\" -UserName vagrant\r\nPS C:\\Users\\zeroadmin> Enter-PSSession -Session $CentOS7PSSession\r\n[192.168.2.49]: PS /home/vagrant> $test = Read-Host \"Pwd\"\r\nPwd: PlainTextPwd\r\n[192.168.2.49]: PS /home/vagrant> $test2 = Read-Host \"Pwd\" -AsSecureString\r\nWARNING: A script or application on the remote computer 192.168.2.49 is sending a prompt request. When you are prompted, enter sensitive information, such as credentials or passwords, only if you trust the remote computer and the application or script that is requesting the data.\r\nPwd: ***********\r\n\r\n# Hangs indefinitely here until ctrl+c\r\n\r\nThere is an error processing data from the background process. Error reported: Object reference not set to an instance of an object..\r\nPS C:\\Users\\zeroadmin> Enter-PSSession -Session $CentOS7PSSession\r\nEnter-PSSession : Cannot enter session Runspace5 because it is not in the disconnected state or is not available for connection. Retrieve the remote session using Get-PSSession -ComputerName 192.168.2.49 -InstanceId d8e069fb-f075-432c-a394-51e50a9f86b9.\r\nAt line:1 char:1\r\n+ Enter-PSSession -Session $CentOS7PSSession\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : InvalidArgument: (:) [Enter-PSSession], ArgumentException\r\n+ FullyQualifiedErrorId : PushedRunspaceMustBeOpen,Microsoft.PowerShell.Commands.EnterPSSessionCommand\r\n\r\nPS C:\\Users\\zeroadmin>\r\n\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\nSuccessfully create the securestring in a remote session\r\n\r\nActual behavior\r\n---------------\r\nHangs indefinitely and breaks the PSSession.\r\n\r\nEnvironment data\r\n----------------\r\nWindows Client Info:\r\n\r\n```powershell\r\nPS C:\\Users\\zeroadmin> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.1.0-preview.3\r\nPSEdition                      Core\r\nGitCommitId                    v6.1.0-preview.3\r\nOS                             Microsoft Windows 10.0.16299\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\nPS C:\\Users\\zeroadmin> Get-Command ssh\r\n\r\nCommandType     Name                                               Version    Source\r\n-----------     ----                                               -------    ------\r\nApplication     ssh.exe                                            7.7.1.0    C:\\Program Files\\OpenSSH-Win64\\ssh.exe\r\n```\r\n\r\nCentOS7 Remote Host Info:\r\n\r\n```powershell\r\n[192.168.2.49]: PS /home/vagrant> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.1.0-preview.2\r\nPSEdition                      Core\r\nGitCommitId                    v6.1.0-preview.2\r\nOS                             Linux 3.10.0-862.6.3.el7.x86_64 #1 SMP Tue Jun 26 16:32:21 UTC 2018\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n[192.168.2.49]: PS /home/vagrant> sudo pwsh -Command 'Get-Content /etc/ssh/sshd_config'\r\n#       $OpenBSD: sshd_config,v 1.100 2016/08/15 12:32:04 naddy Exp $\r\n\r\n# This is the sshd server system-wide configuration file.  See\r\n# sshd_config(5) for more information.\r\n\r\n# This sshd was compiled with PATH=/usr/local/bin:/usr/bin\r\n\r\n# The strategy used for options in the default sshd_config shipped with\r\n# OpenSSH is to specify options with their default value where\r\n# possible, but leave them commented.  Uncommented options override the\r\n# default value.\r\n\r\n# If you want to change the port on a SELinux system, you have to tell\r\n# SELinux about this change.\r\n# semanage port -a -t ssh_port_t -p tcp #PORTNUMBER\r\n#\r\n#Port 22\r\n#AddressFamily any\r\n#ListenAddress 0.0.0.0\r\n#ListenAddress ::\r\n\r\nHostKey /etc/ssh/ssh_host_rsa_key\r\n#HostKey /etc/ssh/ssh_host_dsa_key\r\nHostKey /etc/ssh/ssh_host_ecdsa_key\r\nHostKey /etc/ssh/ssh_host_ed25519_key\r\n\r\n# Ciphers and keying\r\n#RekeyLimit default none\r\n\r\n# Logging\r\n#SyslogFacility AUTH\r\nSyslogFacility AUTHPRIV\r\n#LogLevel INFO\r\n\r\n# Authentication:\r\n\r\n#LoginGraceTime 2m\r\n#PermitRootLogin yes\r\n#StrictModes yes\r\n#MaxAuthTries 6\r\n#MaxSessions 10\r\n\r\n#PubkeyAuthentication yes\r\n\r\n# The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2\r\n# but this is overridden so installations will only check .ssh/authorized_keys\r\nAuthorizedKeysFile      .ssh/authorized_keys\r\n\r\n#AuthorizedPrincipalsFile none\r\n\r\n#AuthorizedKeysCommand none\r\n#AuthorizedKeysCommandUser nobody\r\n\r\n# For this to work you will also need host keys in /etc/ssh/ssh_known_hosts\r\n#HostbasedAuthentication no\r\n# Change to yes if you don't trust ~/.ssh/known_hosts for\r\n# HostbasedAuthentication\r\n#IgnoreUserKnownHosts no\r\n# Don't read the user's ~/.rhosts and ~/.shosts files\r\n#IgnoreRhosts yes\r\n\r\n# To disable tunneled clear text passwords, change to no here!\r\n#PasswordAuthentication yes\r\n#PermitEmptyPasswords no\r\nPasswordAuthentication no\r\n\r\n# Change to no to disable s/key passwords\r\n#ChallengeResponseAuthentication yes\r\nChallengeResponseAuthentication no\r\n\r\n# Kerberos options\r\n#KerberosAuthentication no\r\n#KerberosOrLocalPasswd yes\r\n#KerberosTicketCleanup yes\r\n#KerberosGetAFSToken no\r\n#KerberosUseKuserok yes\r\n\r\n# GSSAPI options\r\nGSSAPIAuthentication yes\r\nGSSAPICleanupCredentials no\r\n#GSSAPIStrictAcceptorCheck yes\r\n#GSSAPIKeyExchange no\r\n#GSSAPIEnablek5users no\r\n\r\n# Set this to 'yes' to enable PAM authentication, account processing,\r\n# and session processing. If this is enabled, PAM authentication will\r\n# be allowed through the ChallengeResponseAuthentication and\r\n# PasswordAuthentication.  Depending on your PAM configuration,\r\n# PAM authentication via ChallengeResponseAuthentication may bypass\r\n# the setting of \"PermitRootLogin without-password\".\r\n# If you just want the PAM account and session checks to run without\r\n# PAM authentication, then enable this but set PasswordAuthentication\r\n# and ChallengeResponseAuthentication to 'no'.\r\n# WARNING: 'UsePAM no' is not supported in Red Hat Enterprise Linux and may cause several\r\n# problems.\r\nUsePAM yes\r\n\r\n#AllowAgentForwarding yes\r\n#AllowTcpForwarding yes\r\n#GatewayPorts no\r\nX11Forwarding yes\r\n#X11DisplayOffset 10\r\n#X11UseLocalhost yes\r\n#PermitTTY yes\r\n#PrintMotd yes\r\n#PrintLastLog yes\r\n#TCPKeepAlive yes\r\n#UseLogin no\r\n#UsePrivilegeSeparation sandbox\r\n#PermitUserEnvironment no\r\n#Compression delayed\r\n#ClientAliveInterval 0\r\n#ClientAliveCountMax 3\r\n#ShowPatchLevel no\r\n#UseDNS yes\r\nUseDNS no\r\n#PidFile /var/run/sshd.pid\r\n#MaxStartups 10:30:100\r\n#PermitTunnel no\r\n#ChrootDirectory none\r\n#VersionAddendum none\r\n\r\n# no default banner path\r\n#Banner none\r\n\r\n# Accept locale-related environment variables\r\nAcceptEnv LANG LC_CTYPE LC_NUMERIC LC_TIME LC_COLLATE LC_MONETARY LC_MESSAGES\r\nAcceptEnv LC_PAPER LC_NAME LC_ADDRESS LC_TELEPHONE LC_MEASUREMENT\r\nAcceptEnv LC_IDENTIFICATION LC_ALL LANGUAGE\r\nAcceptEnv XMODIFIERS\r\n\r\n# override default of no subsystems\r\nSubsystem       sftp    /usr/libexec/openssh/sftp-server\r\nSubsystem powershell /bin/pwsh -sshs -NoLogo -NoProfile\r\n\r\n# Example of overriding settings on a per-user basis\r\n#Match User anoncvs\r\n#       X11Forwarding no\r\n#       AllowTcpForwarding no\r\n#       PermitTTY no\r\n#       ForceCommand cvs server\r\n[192.168.2.49]: PS /home/vagrant>\r\n```\r\n",
  "closed_at": "2018-09-27T12:49:04Z",
  "comments": [
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "Hi @pldmgg,\r\n\r\nI notice your sshd_config has the Port 22 line still disable. You need to make sure both Windows and Linux has that port available for openssh to work. \r\n\r\nAlso, make sure you don't include the path in CentOS as it will find it automatically:\r\n```\r\nSubsystem\tpowershell pwsh -sshs -NoLogo -NoProfile\r\n```\r\n:)\r\n",
      "created_at": "2018-07-06T21:32:33Z",
      "updated_at": "2018-07-06T21:32:33Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "@pldmgg, Apologies!!  I see now.  \r\n\r\nSo you're getting connected but creating the secure string hung the session. I'm trying it now with Preview.3.\r\n",
      "created_at": "2018-07-06T21:39:59Z",
      "updated_at": "2018-07-06T21:39:59Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "Yeap! I can reproduce the issue by simply doing:\r\n\r\n```\r\nEnter-PSSession -HostName mercury -UserName maxt\r\nmaxt@mercury's password:\r\n[mercury]: PS /home/maxt>\r\n[mercury]: PS /home/maxt> $test2 = Read-Host \"Pwd\" -AsSecureString\r\nWARNING: A script or application on the remote computer MERCURY is sending a prompt request. When you are prompted, enter sensitive information, such as credentials or passwords, only if you trust the remote computer and the application or script that is requesting the data.\r\nPwd: *****\r\n\r\nHung Here\r\n```\r\n![pscore_securestringhung_2018-07-06_17-42-31](https://user-images.githubusercontent.com/19892435/42402052-88b5dd1e-8146-11e8-9cb4-5b9f6307c69f.jpg)\r\n\r\nThere's the possibility that's happening in all distro of Linux (not only CentOS).\r\n\r\n",
      "created_at": "2018-07-06T22:01:46Z",
      "updated_at": "2018-07-06T22:02:16Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "Yeap! Linux CentOS to Ubuntu the same thing.\r\n\r\n![centos2ubuntu_2018-07-06_18-09-44](https://user-images.githubusercontent.com/19892435/42402336-190cdcc2-8148-11e8-89cd-e809721d1a34.jpg)\r\n",
      "created_at": "2018-07-06T22:12:13Z",
      "updated_at": "2018-07-06T22:12:13Z"
    },
    {
      "author": "pldmgg",
      "author_association": "NONE",
      "body": "@MaximoTrinidad Thanks for taking the time to reproduce. I have a feeling there might be something about this somewhere in https://github.com/PowerShell/Win32-OpenSSH/issues ... I'll try and take a look tomorrow\r\n\r\nEDIT:\r\nDidn't find anything related in https://github.com/PowerShell/Win32-OpenSSH/issues not sure what could be causing this...",
      "created_at": "2018-07-07T00:37:29Z",
      "updated_at": "2018-07-07T12:30:13Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "On the contrary! Thanks @pldmgg for catching it now.  For sure, someone will take a look at this next week.\r\n:)",
      "created_at": "2018-07-07T16:56:58Z",
      "updated_at": "2018-07-07T16:56:58Z"
    },
    {
      "author": "pldmgg",
      "author_association": "NONE",
      "body": "Dup of #1654.  Closing...",
      "created_at": "2018-09-27T12:49:04Z",
      "updated_at": "2018-09-27T12:49:04Z"
    }
  ],
  "created_at": "2018-07-06T16:52:24Z",
  "number": 7239,
  "state": "closed",
  "title": "PowerShell Core: Unable to Prompt For SecureString Over PSSession",
  "updated_at": "2018-10-30T06:05:10Z"
}