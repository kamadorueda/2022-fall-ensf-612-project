{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12120",
  "author": "nohwnd",
  "body": "# PR Summary\r\n\r\nAdd an adapter that takes invocation from InvokePesterStub in vscode, and calls Start-PSPester. On the vscode side you would need this to be added. Ideally the interface of InvokePesterStub would get a bit more refined, because this would become a public api. I can probably provide that.\r\n\r\n```powershell\r\n# this would be added to VSCode options\r\n$CustomPesterInvoker = \"build\\Start-PSPesterAdapter\"\r\n\r\nif ($CustomPesterInvoker) {\r\n    $invoker = Get-Command $CustomPesterInvoker -ErrorAction Stop\r\n\r\n    & $invoker -ScriptPath $ScriptPath -TestName $TestName -LineNumber $LineNumber -All:$All -MinimumVersion5:$MinimumVersion5 -Output $(if ($pesterModule.Version -lt \"5.0.0\") { $pester4Output } else { $Output })\r\n    return\r\n}\r\n```\r\n\r\n## PR Context\r\n\r\n@TylerLeonhardt was interested in running PowerShell repo Pester tests via VSCode code lens. \r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [ ] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2020-07-15T01:19:24Z",
  "comments": [
    {
      "author": "TylerLeonhardt",
      "author_association": "MEMBER",
      "body": "I don't _think_ we need this. We just need to [configure VS Code to use your local build of PowerShell in the Integrated Console](https://docs.microsoft.com/en-us/powershell/scripting/components/vscode/using-vscode?view=powershell-7#adding-your-own-powershell-paths-to-the-session-menu).\r\n\r\nThen CodeLens will use that local build when it runs `Invoke-Pester`.",
      "created_at": "2020-03-18T00:58:42Z",
      "updated_at": "2020-03-18T00:58:42Z"
    },
    {
      "author": "nohwnd",
      "author_association": "NONE",
      "body": "@TylerLeonhardt but how will you get all the setup that start-pspester does? For example automatically building the underlying bits and filtering tests? When invoking via Invoke-Pester all of this would be skipped.",
      "created_at": "2020-03-18T08:38:24Z",
      "updated_at": "2020-03-18T08:38:37Z"
    },
    {
      "author": "TylerLeonhardt",
      "author_association": "MEMBER",
      "body": "> For example automatically building the underlying bits and filtering tests?\r\n\r\nYeah I mean, you'll need to build the code already because you'll need to start the PowerShell extension with the built pwsh.exe so that the debugger APIs are hooked up properly.\r\n\r\nAnd from a filtering perspective the CodeLens _is_ your filter is it not? Choosing to run 1 Describe, 1 Context or 1 It block.",
      "created_at": "2020-03-20T22:08:37Z",
      "updated_at": "2020-03-20T22:08:37Z"
    },
    {
      "author": "nohwnd",
      "author_association": "NONE",
      "body": "Okay, if that works for you :) I would still rather see it work in a way that you can press the Debug button and it will build your pwsh.exe run it with the test and attach a debugger to it in a way the VSCode would understand. That way when you make changes in the compiled code you don't need to remember to run the build manually before triggering the test. But maybe I just don't fully understand the dependencies that are at play here. Feel free to abandon this PR \ud83d\ude42 ",
      "created_at": "2020-03-22T09:21:20Z",
      "updated_at": "2020-03-22T09:21:20Z"
    },
    {
      "author": "TylerLeonhardt",
      "author_association": "MEMBER",
      "body": "> I would still rather see it work in a way that you can press the Debug button and it will build your pwsh.exe run it with the test and attach a debugger to it in a way the VSCode would understand. \r\n\r\nI like this idea, but it makes it a bit more complex because now Start-PSPester will need to:\r\n\r\n* build the pwsh.exe\r\n* start the pwsh.exe (but don't run tests yet)\r\n* attach to the process and debug the runspace that will run the tests (default runspace)\r\n* start running the tests in the built pwsh.exe\r\n\r\nSo if we still want to go through with this (which I admit has value - the building is nice!) then this PR should also handle starting the pwsh.exe as another process with:\r\n\r\n```pwsh\r\nWait-Debugger\r\nInvoke-Pester ...\r\n```\r\n\r\nWhile also preserving the output of the Invoke-Pester somewhere.",
      "created_at": "2020-03-23T17:36:24Z",
      "updated_at": "2020-03-23T17:37:42Z"
    },
    {
      "author": "nohwnd",
      "author_association": "NONE",
      "body": "```powershell\r\nWait-Debugger\r\nInvoke-Pester \r\n```\r\n\r\nI tried when we started talking about this, that but it did not attach to the VSCode debugger, instead it triggered the console debugger. Do I need to load some module before waiting for debugger to allow VSCode debugger to attach? I was starting a new pwsh process in from VSCode.",
      "created_at": "2020-03-24T09:16:18Z",
      "updated_at": "2020-03-24T09:16:18Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@nohwnd Is this still being worked on?",
      "created_at": "2020-04-24T18:45:09Z",
      "updated_at": "2020-04-24T18:45:09Z"
    },
    {
      "author": "TylerLeonhardt",
      "author_association": "MEMBER",
      "body": "I need to write a bunch of stuff on this. This is waiting on me.",
      "created_at": "2020-04-24T18:55:23Z",
      "updated_at": "2020-04-24T18:55:23Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMainainer, Please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2020-05-27T02:01:20Z",
      "updated_at": "2020-05-27T02:01:20Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@TylerLeonhardt Should I assign this to you if you are working on this?",
      "created_at": "2020-05-28T20:07:48Z",
      "updated_at": "2020-05-28T20:07:48Z"
    },
    {
      "author": "TylerLeonhardt",
      "author_association": "MEMBER",
      "body": "Yeah go for it",
      "created_at": "2020-05-28T21:57:49Z",
      "updated_at": "2020-05-28T21:57:49Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMainainer, Please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2020-06-06T02:00:16Z",
      "updated_at": "2020-06-06T02:00:16Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as stale because it has been marked as requiring author feedback but has not had any activity for **15 days**. It will be closed if no further activity occurs **within 10 days of this comment**.",
      "created_at": "2020-07-14T20:00:18Z",
      "updated_at": "2020-07-14T20:00:18Z"
    },
    {
      "author": "TylerLeonhardt",
      "author_association": "MEMBER",
      "body": "It's my fault. Let's just close this for now because I need to think about it some more. If I have time, later, we can reopen.",
      "created_at": "2020-07-15T01:19:24Z",
      "updated_at": "2020-07-15T01:19:24Z"
    }
  ],
  "created_at": "2020-03-13T09:14:17Z",
  "number": 12120,
  "state": "closed",
  "title": "WIP:Add adapter to run Start-PSPester via vscode",
  "updated_at": "2020-07-15T01:19:26Z"
}