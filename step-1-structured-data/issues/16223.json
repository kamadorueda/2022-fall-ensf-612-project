{
  "_url": "https://github.com/PowerShell/PowerShell/issues/16223",
  "author": "mamidenn",
  "body": "### Prerequisites\r\n\r\n- [X] Write a descriptive title.\r\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- [X] Search the existing issues.\r\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\r\n\r\n### Steps to reproduce\r\n\r\nWhen dot-sourcing a `.ps1` file that itself (wrongly) uses `Import-Module` to import another `.ps1` file, the value of `$PSScriptRoot` in the original file becomes that of the dot-sourced file.\r\n\r\nConsider this contrived example (`test.ps1`):\r\n```pwsh\r\n# Setup\r\nNew-Item .\\includes -ItemType Directory -Force | Out-Null\r\n'Import-Module $PSScriptRoot\\include2.ps1 -Force' | Set-Content .\\includes\\include1.ps1\r\n'' | Set-Content .\\includes\\include2.ps1\r\n\r\n# Test\r\n. .\\includes\\include1.ps1\r\n$PSScriptRoot\r\n```\r\n\r\nReplacing `include2.ps1` with `include2.psm1` above yields the expected behavior.\r\n\r\nIn my opinion, there are two solutions here:\r\n1. Fix whatever causes `$PSScriptRoot` to have the wrong value.\r\n2. Display at least a warning when using `Import-Module` with `.ps1` files that it should not be used as a replacement for dot-sourcing.\r\n\r\n### Expected behavior\r\n\r\n```console\r\nPS> .\\test.ps1\r\n$PWD # wherever test.ps1 is located\r\n```\r\n\r\n\r\n### Actual behavior\r\n\r\n```console\r\nPS> .\\test.ps1\r\n$PWD\\includes\r\n```\r\n\r\n\r\n### Error details\r\n\r\n_No response_\r\n\r\n### Environment data\r\n\r\n```powershell\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.4\r\nPSEdition                      Core\r\nGitCommitId                    7.1.4\r\nOS                             Linux 5.4.72-microsoft-standard-WSL2 #1 SMP Wed Oct 28 23:40:43 UTC 2020\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\n\r\n### Visuals\r\n\r\n_No response_",
  "closed_at": null,
  "comments": [
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "The Engine Working Group discussed this in our last session and had the following thoughts:\r\n\r\n- Running Import-Module on a .ps1 is a somewhat obscure scenario; you're better off dot-sourcing or converting to a .psm1\r\n- Import-Module on .ps1 vs dot-sourcing it should behave the same way with respect to `$PSScriptRoot` (AFAICT the only difference between the two functionalities is that Import-Module should register a nominal PSModuleInfo object for the .ps1)\r\n- What the specific value of `$PSScriptRoot` should be in the dot-sourced file might be debated, but that has an established behaviour in dot-sourcing today, so Import-Module should probably just do that\r\n- From that perspective, this is a probably a bug\r\n- Someone fixing this bug will need to do further investigation to work out what the behaviour of `$PSScriptRoot` is in the various scenarios and essentially justify the fixed behaviour with that",
      "created_at": "2021-10-28T16:54:38Z",
      "updated_at": "2021-10-28T16:54:38Z"
    }
  ],
  "created_at": "2021-10-11T12:51:35Z",
  "number": 16223,
  "state": "open",
  "title": "dot-sourcing a file that is using Import-Module to import a .ps1 file leads to unexpected $PSScriptRoot",
  "updated_at": "2021-10-28T17:21:26Z"
}