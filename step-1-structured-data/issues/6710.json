{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6710",
  "author": "rjmholt",
  "body": "## PR Summary\r\n\r\nFix the cache invalidation issue from #2505.\r\n\r\nCurrently, importing a module for the second time will always import from the cache, even if the underlying file has been changed.\r\n\r\nThis change makes the cache check the last write time on the underlying file first before proceeding, and if it is different, updates the cache and returns the new module file.\r\n\r\nI have also changed the analysis cache dictionaries to use `ConcurrentDictionary` rather than needing to manually use a locking object.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [ ] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` to the beginning of the title and remove the prefix when the PR is ready.\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [x] User-facing [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed - Issue link:\r\n- **Testing - New and feature**\r\n    - [ ] Not Applicable or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n        - [x] [Add `[feature]` if the change is significant or affects feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\n\n<!-- Reviewable:start -->\n---\nThis change is\u2002[<img src=\"https://reviewable.io/review_button.svg\" height=\"34\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/powershell/powershell/6710)\n<!-- Reviewable:end -->\n",
  "closed_at": "2018-08-15T02:54:40Z",
  "comments": [
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "This code should enable a developer scenario, where I have the following script in editor:\r\n```powershell\r\nusing module F:\\tmp\\test.psm1\r\n\r\nclass Zoo { [Foo]$Param }\r\n```\r\n`F:\\tmp\\test.psm1` has the following content:\r\n```powershell\r\nclass Foo { [string]$Name }\r\n```\r\nThen I add another class to `test.psm1` as follows:\r\n```powershell\r\nclass Foo { [string]$Name }\r\nclass Bar { [string]$Path }\r\n```\r\nAnd then I modify `Zoo` in the editor to add a property `[Bar]$bar`:\r\n```powershell\r\nusing module F:\\tmp\\test.psm1\r\n\r\nclass Zoo { [Foo]$Param; [Bar]$bar }\r\n```\r\nThe `[Bar]` should be resolved in this scenario, which means the new content in `test.psm1` should be picked up by the parser.\r\nBe noted, no module is loaded in this scenario.",
      "created_at": "2018-05-01T00:53:10Z",
      "updated_at": "2018-05-01T00:53:10Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw I'm going to write another test in line with the example you give above",
      "created_at": "2018-05-01T18:50:31Z",
      "updated_at": "2018-05-01T18:50:31Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "That test failure seems to be Linux-specific, and only occurs about 10% of the time.",
      "created_at": "2018-05-14T23:35:29Z",
      "updated_at": "2018-05-14T23:35:29Z"
    },
    {
      "author": "stale[bot]",
      "author_association": "NONE",
      "body": "This PR has been automatically marked as stale because it has not had activity in the last 30 days. It will be closed if no further activity occurs within 10 days.\nThank you for your contributions.\nCommunity members are welcome to grab these works.\n",
      "created_at": "2018-07-04T18:28:09Z",
      "updated_at": "2018-07-04T18:28:09Z"
    },
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": " I don't think this should be forgotten. Is a comment enough to keep it alive?\r\n",
      "created_at": "2018-07-04T19:29:00Z",
      "updated_at": "2018-07-04T19:29:00Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "@powercode I promise I haven't forgotten about this PR... Just had to cut it short and haven't had a good reason to return to it. I'm about to get back to it - it looks like the failure is consistent on Linux, so I'm hoping to be able to get to the bottom of it,",
      "created_at": "2018-07-05T17:38:08Z",
      "updated_at": "2018-07-05T17:38:08Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "Going to close this and continue working on it in an updated branch",
      "created_at": "2018-08-15T02:53:27Z",
      "updated_at": "2018-08-15T02:53:27Z"
    }
  ],
  "created_at": "2018-04-23T23:42:35Z",
  "number": 6710,
  "state": "closed",
  "title": "Invalidate script module cache when the underlying module file is changed",
  "updated_at": "2018-08-15T02:54:40Z"
}