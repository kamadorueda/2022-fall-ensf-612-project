{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3708",
  "author": "spitfire",
  "body": "<!--\r\n\r\nIf it is a bug report:\r\n- make sure you are able to repro it on the latest released version. \r\nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\r\n- Search the existing issues.\r\n- Refer to the [FAQ](../docs/FAQ.md).\r\n- Refer to the [known issues](../docs/KNOWNISSUES.md).\r\n- Fill out the following repro template\r\n\r\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\r\n-->\r\n\r\nSteps to reproduce\r\n------------------\r\nInstall v6.0.0-alpha.18 on macOS 10.12.4 (16E195)\r\nRun:\r\n```\r\nNew-PSSession -ComputerName <computername> -Credential <domain\\account>\r\n```\r\nExpected behavior\r\n-----------------\r\nWorks like this on Windows 10 1607 x64:\r\n```\r\nId Name            ComputerName    ComputerType    State         ConfigurationName     Availability\r\n-- ----            ------------    ------------    -----         -----------------     ------------\r\n 2 WinRM2          <computername>     RemoteMachine   Opened        Microsoft.PowerShell     Available\r\n```\r\nActual behavior\r\n---------------\r\n```\r\nWindows PowerShell credential request\r\nEnter your credentials.\r\nPassword for user <domain\\account>: ************\r\nNew-PSSession : MI_RESULT_ACCESS_DENIED\r\nAt line:1 char:1\r\n+ New-PSSession -ComputerName <computername> -Credential <domain\\account>\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : InvalidOperation: (:) [New-PSSession], PSInvalidOperationException\r\n    + FullyQualifiedErrorId : InvalidOperation,Microsoft.PowerShell.Commands.NewPSSessionCommand\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.0-alpha\r\nPSEdition                      Core\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nBuildVersion                   3.0.0.0\r\nGitCommitId                    v6.0.0-alpha.18\r\nCLRVersion\r\nWSManStackVersion              3.0\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\n\r\n```",
  "closed_at": "2019-08-29T22:48:53Z",
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Mac PSRP/WSMan only supports Basic auth, please try that and see if it works.  Recommendation is to install OpenSSH on Windows and use PSRP/SSH",
      "created_at": "2017-05-06T01:08:26Z",
      "updated_at": "2017-05-06T01:08:26Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "+1 with @SteveL-MSFT \r\n\r\nAnd, after installing OpenSSH-Win32, then try using New-PSSession with the parameters: -HostName and -UserName (instead of -ComputerName and -Credential).\r\n\r\nI'm using these parameters in Enter-PSSession and it works.\r\n\r\nSee if this works for you!",
      "created_at": "2017-05-06T01:54:22Z",
      "updated_at": "2017-05-06T01:54:22Z"
    },
    {
      "author": "spitfire",
      "author_association": "NONE",
      "body": "@SteveL-MSFT if I wanted to use SSH, I would just use it. Is there a separate issue open on PSRemoting that I can subscribe to, or it's just this one?",
      "created_at": "2017-05-06T10:48:31Z",
      "updated_at": "2017-05-06T10:48:31Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "\r\n@spitfire \r\n\r\nFYI\r\n\r\nRight now it is possible to connect using Enter-PSSession with parameters -HostName and \r\n-UserName:\r\n\r\n1. Linux to Linux\r\n2. Windows to Linux\r\n3. Linux to Windows\r\n4. Windows to Windows\r\n\r\nI don't have Mac OS so I can't confirmed that one.\r\n\r\nThe documentation haven't been updated to include \"Windows to Linux\".  \r\n\r\nThis is all possible with the current version of PowerShell v6.0.0.0-alpha.18 and \r\nOpenSSH-Win32 v 0.0.12.0\r\n\r\n:)\r\n\r\n",
      "created_at": "2017-05-06T10:54:30Z",
      "updated_at": "2017-05-06T10:54:30Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "Hum!\r\n\r\nI can connect from PowerShell v6 to my Linux box using open ssh but when running PowerShell the readline gets messed up. When typing the command, it doesn't let me complete the line.  \r\n(See image)\r\n\r\n![posh_ssh _bad_2017-05-06_6-57-40](https://cloud.githubusercontent.com/assets/19892435/25771798/ad008e7a-3229-11e7-9625-3d0ba8b2697b.jpg)\r\n\r\nI got connected but is not working right with PowerShell.\r\nWhere should I post this one?\r\n\r\n:)",
      "created_at": "2017-05-06T11:02:23Z",
      "updated_at": "2017-05-06T11:02:23Z"
    },
    {
      "author": "spitfire",
      "author_association": "NONE",
      "body": "1. Why would I want to use SSH to connect to Windows?\r\n2. Why would I want to use PSRemoting to connect to Mac/Linux?\r\n\r\n\r\nIn both cases I'd have to:\r\n- Install additional software\r\n- Configure it\r\n- Open additional attack surface\r\n\r\nThat's not the point.\r\nI want to be able to connect to a Windows machine from my Mac (and I thought it should be possible, since there is Powershell 6 for everything).",
      "created_at": "2017-05-06T11:07:33Z",
      "updated_at": "2017-05-06T11:08:00Z"
    },
    {
      "author": "MartinAyla",
      "author_association": "NONE",
      "body": "It would be really nice to be able to connect from Linux/Mac to Windows, without the use of SSH, for Powershell administration.\r\n\r\nI hope this will be possible at some point.",
      "created_at": "2017-05-16T10:58:37Z",
      "updated_at": "2017-05-16T10:58:37Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@MaximoTrinidad I believe you're hitting https://github.com/PowerShell/Win32-OpenSSH/issues/252\r\n\r\n@spitfire @MartinAyla PowerShell remoting requires a transport and unfortunately there currently isn't the same one on Windows and Linux/Mac.  The newest fast lane flights of Win10 has OpenSSH (beta) as an optional feature on demand, so OpenSSH is getting inbox on Windows so you won't have to install additional software (in the future).  There are limitations that prevent us from having PowerShell remoting over WS-Man parity on Linux and Mac compared to Windows (specifically NTLM and Kerberos support).  SSH solves these problems and many customers prefer key based auth which works fine on Windows (with OpenSSH installed).\r\n",
      "created_at": "2017-05-18T22:48:55Z",
      "updated_at": "2017-05-18T22:48:55Z"
    },
    {
      "author": "spitfire",
      "author_association": "NONE",
      "body": "@SteveL-MSFT thanks for the information. Still, this seems pretty useless to me, as it does not work out of the box, and I would probably be better off running ssh session without having to install PowerShell on my Mac.",
      "created_at": "2017-05-24T12:59:09Z",
      "updated_at": "2017-05-24T12:59:09Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@spitfire you can absolutely just use PowerShell over SSH without installing PowerShell on your Mac.  The benefit of using PowerShell on both ends is that you can get objects and not text over SSH so you can process results locally (which may or may not be what you want).  We support both options.",
      "created_at": "2017-05-24T14:50:20Z",
      "updated_at": "2017-05-24T14:50:20Z"
    },
    {
      "author": "KeithGlidewell",
      "author_association": "NONE",
      "body": "Let me make sure I have this right @MaximoTrinidad, @SteveL-MSFT.\r\n\r\nRunning on Ubuntu, trying to talk to Windows.\r\n\r\n- Using \"-Hostname\" on enter-pssession causes powershell to call \"ssh hostname -p 22 -s powershell\"\r\n- Enter-PSSession from Linux to Windows supports only Basic authentication.  You can issue the command with -Computername, but it will fail with MI_RESULT_ACCESS_DENIED\r\n\r\nIs that the current state?  Kerberos not working from Linux to Windows?",
      "created_at": "2017-06-21T17:28:18Z",
      "updated_at": "2017-06-21T17:28:18Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "Hi @KeithGlidewell,\r\n\r\nIt's been awhile.  Let me try it later when I get home and give you an update.\r\n:)\r\n",
      "created_at": "2017-06-21T19:55:59Z",
      "updated_at": "2017-06-21T19:55:59Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "@KeithGlidewell,\r\n\r\nFrom Ubuntu I can connect to Windows (Workgroup environment) using OpenSSH\r\npowershell\r\nEnter-PSSession -hostname  win01 -username maxt\r\n\r\nThen, I can use from Windows, do an ssh maxt@win1, then powershell and run the above command.\r\n\r\nBut, I can't use the -computername with the -credential parameters, as I will get the error message \"MI_RESULT_ACCESS_DENIED\".\r\n\r\nI'm good using ssh!  \r\n:)\r\n\r\n\r\n\r\n",
      "created_at": "2017-06-21T23:13:15Z",
      "updated_at": "2017-06-21T23:13:15Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@KeithGlidewell WSMan from Linux also supports NTLM (not supported on MacOS) and Kerberos is not supported on Linux or Mac.  Recommendation is to use SSH which is where we are investing.",
      "created_at": "2017-06-22T05:43:47Z",
      "updated_at": "2017-06-22T05:43:47Z"
    },
    {
      "author": "giordyb",
      "author_association": "NONE",
      "body": "I'm having a hard time trying to configure a secure connection from Centos 7.3  to a windows server with the latest beta and I would like to avoid using basic/unencrypted auth.\r\n\r\nIs there a document explaining how to configure WinRM NTLM support on Linux? Does it come out of the box with Powershell or does it need OMI and PSRP packages installed as well?",
      "created_at": "2017-06-22T20:18:06Z",
      "updated_at": "2017-06-22T20:18:06Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@giordyb see https://github.com/powershell/psl-omi-provider#connecting-from-linux-to-windows\r\n",
      "created_at": "2017-06-23T05:48:21Z",
      "updated_at": "2017-06-23T05:48:21Z"
    },
    {
      "author": "KeithGlidewell",
      "author_association": "NONE",
      "body": "Thanks, Steve.  Any idea if/when we'll be able to ssh from Linux to Windows with Kerberos authentication?",
      "created_at": "2017-06-23T20:36:59Z",
      "updated_at": "2017-06-23T20:36:59Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "Beside the instructions for setting OMI/PSRP in Linux are hard to follow and leaves a lot unclear for person with no Linux experience.  You'll have to go for a lot of trial and error.  Gives a lot of headaches!!\r\n\r\nI haven't still figured out how to make it work. So, using SSH is much simpler and I can get connected faster.  The setup experience is much less tedious that OMI/PSRP. \r\n\r\n:)",
      "created_at": "2017-06-23T20:46:10Z",
      "updated_at": "2017-06-23T20:46:10Z"
    },
    {
      "author": "JumpingYang001",
      "author_association": "CONTRIBUTOR",
      "body": "@MaximoTrinidad , for OMI/PSRP, you need to install following software on Linux:\r\n\r\n- Install PowerShell from https://github.com/PowerShell/PowerShell/releases\r\n- Install OMI from https://github.com/Microsoft/omi/releases\r\n- Install PSRP from https://github.com/PowerShell/psl-omi-provider/releases\r\n\r\n For Mac, you only need to install PowerShell and it only can remote to Linux/Windows. (I mean you cannot remote to Mac using OMI/PSRP.)\r\n\r\n**But there is a bug**: \"the entry point method used to call into PowerShell for PSRP is changed\", and it is fixed only in code yesterday: https://github.com/PowerShell/psl-omi-provider/commit/d435207fe07404b7e2697d9c6f7ef35b79e73d64 , that means you cannot do any remoting through OMI/PSRP with PowerShell v6.0.0-beta.3 now except you build the latest PSRP code yourself or wait the PSRP release binaries out.\r\n\r\nFor OMI/PSRP Basic authentication, \r\n - You needn't do any configuration on Linux, but you need to run below commands using native(built-in Windows) PowerShell on your Windows Server if you want to remote to Windows Server:\r\n   ```\r\n   winrm quickconfig\r\n   Enable-PSRemoting\r\n   winrm set winrm/config/client/auth '@{Basic=\"true\"}'\r\n   winrm set winrm/config/service/auth '@{Basic=\"true\"}'\r\n   Set-Item \"wsman:\\localhost\\client\\trustedhosts\" -Value '*' \u2013Force\r\n   winrm set winrm/config/client '@{AllowUnencrypted=\"true\"}'\r\n   winrm set winrm/config/service '@{AllowUnencrypted=\"true\"}'\r\n   ```\r\n   Note: you need to use Windows Server's administrator as Credential for Enter-PSSession, and the administrator account need to enable/add to RDP.\r\n\r\nFor OMI/PSRP Negotiate authentication, \r\n - It is same setting as Basic authentication for Windows Server. For Linux, need to do lots of configuration shows in [setup-ntlm-omi](https://github.com/Microsoft/omi/blob/master/Unix/doc/setup-ntlm-omi.md).\r\n\r\nFor OMI/PSRP Kerberos authentication,\r\n -  This feature is developing in progress on https://github.com/Microsoft/omi and Kerberos configuration documents is here:[setup-kerberos-omi](https://github.com/Microsoft/omi/blob/master/Unix/doc/setup-kerberos-omi.md)",
      "created_at": "2017-06-27T07:50:24Z",
      "updated_at": "2017-06-27T07:50:24Z"
    },
    {
      "author": "giordyb",
      "author_association": "NONE",
      "body": "Just so you know, I was able to get the Negotiate authentication working on a clean Centos7 with the latest Powershell (beta4) by installing the following additional packages :\r\n\r\n- krb5-workstation\r\n- **krb5-devel**\r\n- gssntlmssp (requires epel-release to be installed beforehand) \r\n- powershell\r\n\r\n~~I don't know why krb5-devel is needed (it's not listed as a required package in the [omi instructions](https://github.com/Microsoft/omi/blob/master/Unix/doc/setup-ntlm-omi.md )  but without it I would get the following error~~\r\n\r\n~~`New-PSSession : [xx.xx.xxx.xxx] Connecting to remote server xx.xx.xxx.xxx failed with the following error message : Could not start request`~~\r\n\r\nedit: krb5-devel is needed to create a required symlink, see this issue: https://github.com/PowerShell/PowerShell/issues/3329\r\n\r\nI **did not** have to create the NTLM_USER_FILE mentioned in the omi instructions, I was able to run an enter-pssession agains both a windows 2012r2 and windows 2016 (both domain joined) without setting anything up.  \r\n",
      "created_at": "2017-07-16T13:42:00Z",
      "updated_at": "2017-07-16T21:09:58Z"
    },
    {
      "author": "lf-",
      "author_association": "NONE",
      "body": "What @giordyb said is also true on Fedora 27: either krb5-workstation or gssntlmssp (I installed both and can't get to my machine to test which one, if not both, is required) are required to avoid an unhelpful MI_ACCESS_DENIED error on connection with negotiate. Really needs a better error message.",
      "created_at": "2018-03-19T05:56:00Z",
      "updated_at": "2018-03-19T05:56:28Z"
    },
    {
      "author": "hurricanehrndz",
      "author_association": "NONE",
      "body": "Can confirm this solution works on ubuntu 18.04 with the latest preview, the exact install command was as follows:\r\n```\r\nsudo apt install krb5-multidev libkrb5-dev gss-ntlmssp\r\n```\r\nAlthough the packages are installed and work with the deb version, it doesn't work with the snap version.",
      "created_at": "2018-09-06T22:31:30Z",
      "updated_at": "2018-09-06T22:31:30Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@hurricanehrndz the snap version carries all of its dependencies with it similar to a container so it's not surprising it won't use the OS libraries and is expected",
      "created_at": "2018-09-10T21:23:19Z",
      "updated_at": "2018-09-10T21:23:19Z"
    },
    {
      "author": "CaledoniaProject",
      "author_association": "NONE",
      "body": "I have a Windows 2008 R2 server with WINRM enabled, no domain joined.\r\n\r\nThen I tried to connect from Ubuntu 16.04 + pwsh 6.2 preview.  \r\n\r\nIt works but `Enter-PSSession` takes 2min to connect, and 1min for any command to execute.\r\n\r\n```\r\nPS /tmp/powershell-6.2.0-preview.1-linux-x64> Enter-PSSession -ComputerName 172.16.177.120 -Authentication Negotiate -Credential WIN-XXXX\\admin\r\n\r\nPowerShell credential request\r\nEnter your credentials.\r\nPassword for user WIN-XXXX\\admin: *************\r\n\r\nhostname\r\n[172.16.177.120]: PS C:\\Users\\admin\\Documents> hostname\r\nWIN-XXXX\r\nhostname\r\n```\r\n\r\nIs there anything like name resolution going on?\r\n\r\n\r\n\r\n",
      "created_at": "2018-11-11T02:11:06Z",
      "updated_at": "2018-11-11T02:11:22Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "@CaledoniaProject \r\n\r\nTry a little hack on the both systems \"hosts\" file by adding the IP-Address with the Computer name. This will work on non-domain systems.\r\n\r\nKeep in mind,, in both systems changes need to be made \"as an Administrator\".\r\n\r\nIn Linux:\r\n```\r\nsudo vim /etc/hosts\r\n```\r\nIn Windows: (Open console as an Administrator)\r\n```\r\nnotepad c:\\Windows\\System32\\Drivers\\etc\\hosts\r\n```\r\n:)",
      "created_at": "2018-11-11T12:58:08Z",
      "updated_at": "2018-11-11T12:58:08Z"
    },
    {
      "author": "CaledoniaProject",
      "author_association": "NONE",
      "body": "@MaximoTrinidad Does not work ... If I connect from a Windows 2012 VM, there's no delay at all.\r\n\r\nAlso, on Ubuntu there's a notable delay after command execution, it takes ~20s to display the next command prompt, e.g\r\n\r\n![screen 2018-11-11 at 23 39 21](https://user-images.githubusercontent.com/1357701/48314916-2be11480-e60b-11e8-920c-a0b81f3f660c.jpg)\r\n\r\n\r\n\r\n ",
      "created_at": "2018-11-11T15:41:38Z",
      "updated_at": "2018-11-11T15:41:49Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "@CaledoniaProject \r\n\r\nThe hosts hack was just to get you around the name resolution issue which will let you ping using the computer name.  I normally use ssh to connect Linux to Windows.\r\n\r\n:(\r\n",
      "created_at": "2018-11-12T13:26:11Z",
      "updated_at": "2018-11-12T13:33:40Z"
    },
    {
      "author": "GoelJatin",
      "author_association": "NONE",
      "body": "Any update on when can we have support for PSRemoting from Linux to Windows?",
      "created_at": "2018-11-16T07:37:15Z",
      "updated_at": "2018-11-16T07:37:15Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@GoelJatin if you mean over WSMan, there is limited support today (Basic auth over HTTPS).  What we really need is to move away from the current native library to a new managed library https://github.com/PowerShell/PowerShell/issues/8233",
      "created_at": "2018-11-20T23:02:43Z",
      "updated_at": "2018-11-20T23:02:43Z"
    },
    {
      "author": "GoelJatin",
      "author_association": "NONE",
      "body": "@SteveL-MSFT , I'm using the WinRM service (PSRemoting) for remote management.\r\n\r\nI'm using the **Invoke-Command** cmdlet with ComputerName and Credential.\r\n\r\nAny update related to that, as currently this is a bottleneck for me to proceed further with few of my projects.\r\n\r\nI understand SSH is being brought to Windows 10, but my project is designed to run on all versions of Windows, and PowerShell is the most obvious choice as there is no extra installation required.\r\n\r\nAny help here is much appreciated!",
      "created_at": "2018-11-21T04:03:59Z",
      "updated_at": "2018-11-21T04:03:59Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Proper WSMan client support for Unix systems will take awhile as the current solution we are using is not reliable.  My recommendation is to install the Microsoft port of OpenSSH on target systems.",
      "created_at": "2018-12-21T22:02:00Z",
      "updated_at": "2018-12-21T22:02:00Z"
    },
    {
      "author": "brandonkirsch",
      "author_association": "NONE",
      "body": "Working successfully on Fedora 29 with the addition of a couple packages:\r\n\r\n`dnf install krb5-workstation gssntlmssp`\r\n\r\nThen in a PowerShell:\r\n\r\n`Enter-PSSession -ComputerName Server2012DC -Authentication Negotiate -Credential bkirsch@mydomain.com`\r\n\r\nThis works great for me.",
      "created_at": "2019-02-19T17:37:34Z",
      "updated_at": "2019-02-19T17:37:34Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@joeyaiello perhaps you can add this to the documentation you were working on for remoting support matrix?",
      "created_at": "2019-02-19T20:50:17Z",
      "updated_at": "2019-02-19T20:50:17Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "@joeyaiello \r\n\r\nI got the Kerberos working for Ubuntu 18.04.\r\n\r\nBut, I notice that (of course) it opens Windows PowerShell and there's no tab-completion enabled.\r\nI mean..  at least it works!\r\n\r\nI just did a post about it: http://www.maxtblog.com/2019/02/powerhell-core-ubuntu-18-04-psremoting-to-an-active-directory-machine/\r\n\r\n![psremotiead_03_2019-02-20_14-32-34](https://user-images.githubusercontent.com/19892435/53181334-5d338e00-35c5-11e9-9f8e-4969d59a1e1d.jpg)\r\n\r\nBy the way!  Is there a way to use PowerShell Core in a WinRm connection??\r\n\r\n:)",
      "created_at": "2019-02-21T15:44:15Z",
      "updated_at": "2019-02-21T15:44:15Z"
    },
    {
      "author": "LinoRS",
      "author_association": "NONE",
      "body": "Still not working on macOS\r\n\r\n$PSVersionTable\r\nName                           Value\r\nPSVersion                      6.1.3\r\nPSEdition                      Core\r\nGitCommitId                    6.1.3\r\nOS                             Darwin 18.2.0 Darwin Kernel Version 18.2.0: Thu Dec 20 20:46:53 PST 2018; root:xnu-4903.241.1~1/RELEASE_X86_64\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\nError:\r\nEnter-PSSession : MI_RESULT_ACCESS_DENIED\r\nAt line:2 char:1\r\n+ Enter-PSSession -ComputerName x.x.x.x `\r\n+ CategoryInfo          : InvalidArgument: (x.x.x.x:String) [Enter-PSSession], PSInvalidOperationException\r\n+ FullyQualifiedErrorId : CreateRemoteRunspaceFailed\r\n\r\nthanks",
      "created_at": "2019-03-07T23:36:57Z",
      "updated_at": "2019-03-07T23:38:55Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "@LinoRS \r\n\r\nYou are missing the steps to reproduce the issue. What's the full Enter-PSSession command line you're trying to execute?\r\n\r\nWhich Window system environment configuration?\r\n\r\nAlso, make sure WinRM service is running. At the same time, and every time after upgrading PowerShell Core you need to run the following command: (in Windows)\r\n```\r\nEnable-PSRemoting -force\r\n```\r\nThis happened to me after upgrading from 6.2.0-Preview.4 to RC1.\r\n\r\n:)\r\n\r\n",
      "created_at": "2019-03-08T00:11:42Z",
      "updated_at": "2019-03-08T00:12:14Z"
    },
    {
      "author": "LinoRS",
      "author_association": "NONE",
      "body": "@MaximoTrinidad \r\n\r\nYeah i'm trying to connect to a PEP session\r\n\r\nFull Command i'm using is:\r\n$cred = get-Credential\r\nEnter-PSSession -ComputerName x.x.x.x `\r\n-ConfigurationName PrivilegedEndpoint -Credential $cred\r\n\r\nI wont have access to these servers to run that command though.. and WinRm is running as i can connect from a Windows10 and it connects just fine to the PEP server... i was reading that mac only supports basic auth and maybe the commands dont work as well ?",
      "created_at": "2019-03-08T00:23:39Z",
      "updated_at": "2019-03-08T00:23:39Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "@LinoRS \r\n\r\nThanks for the additional information.  Yes! MacOS seems limited for now but I'm sure it will get there.\r\nMicrosoft Team is always looking at these issues and I'm sure it will be addressed soon.\r\n\r\ncc: @SteveL-MSFT / @joeyaiello ",
      "created_at": "2019-03-08T13:21:17Z",
      "updated_at": "2019-03-08T13:21:17Z"
    },
    {
      "author": "LinoRS",
      "author_association": "NONE",
      "body": "> @LinoRS\r\n> \r\n> Thanks for the additional information. Yes! MacOS seems limited for now but I'm sure it will get there.\r\n> Microsoft Team is always looking at these issues and I'm sure it will be addressed soon.\r\n> \r\n> cc: @SteveL-MSFT / @joeyaiello\r\n\r\n@MaximoTrinidad \r\n\r\nthanks, i really hope they do... ;-) and maybe someone can update us here once they do....\r\n",
      "created_at": "2019-03-09T04:00:38Z",
      "updated_at": "2019-03-09T04:00:38Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "The problem with macOS is there aren't Open Source libraries we can use for NTLM nor Kerberos.  So macOS today is limited to just Basic auth.  Recommendation is to install OpenSSH on the Windows machines and use SSH instead of WSMan based remoting.",
      "created_at": "2019-04-30T00:10:20Z",
      "updated_at": "2019-04-30T00:10:20Z"
    },
    {
      "author": "jackassplus",
      "author_association": "NONE",
      "body": "@SteveL-MSFT why not have Samba as a dependency? That will take care of the Kerberos problem.",
      "created_at": "2019-05-08T14:22:23Z",
      "updated_at": "2019-05-08T14:22:23Z"
    },
    {
      "author": "yugaa22",
      "author_association": "NONE",
      "body": "> @MaximoTrinidad Does not work ... If I connect from a Windows 2012 VM, there's no delay at all.\r\n> \r\n> Also, on Ubuntu there's a notable delay after command execution, it takes ~20s to display the next command prompt, e.g\r\n> \r\n> ![screen 2018-11-11 at 23 39 21](https://user-images.githubusercontent.com/1357701/48314916-2be11480-e60b-11e8-920c-a0b81f3f660c.jpg)\r\n\r\npls tell me how did you get that output you have shown in .in ubuntu",
      "created_at": "2019-07-19T05:26:56Z",
      "updated_at": "2019-07-19T05:26:56Z"
    },
    {
      "author": "yugaa22",
      "author_association": "NONE",
      "body": " MI_RESULT_ACCESS_DENIED as error while connecting .... What to do ? please any one help me...",
      "created_at": "2019-07-19T05:55:17Z",
      "updated_at": "2019-07-19T05:55:17Z"
    },
    {
      "author": "yugaa22",
      "author_association": "NONE",
      "body": "> > @MaximoTrinidad Does not work ... If I connect from a Windows 2012 VM, there's no delay at all.\r\n> > Also, on Ubuntu there's a notable delay after command execution, it takes ~20s to display the next command prompt, e.g\r\n> > ![screen 2018-11-11 at 23 39 21](https://user-images.githubusercontent.com/1357701/48314916-2be11480-e60b-11e8-920c-a0b81f3f660c.jpg)\r\n> \r\n> pls tell me how did you get that output you have shown in .in ubuntu\r\n\r\n",
      "created_at": "2019-07-23T05:20:06Z",
      "updated_at": "2019-07-23T05:20:06Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "@yugaa22 \r\n\r\nIf you follow my blog post: http://www.maxtblog.com/2019/02/powerhell-core-ubuntu-18-04-psremoting-to-an-active-directory-machine/\r\n\r\nIt tells you what I did to connect my Ubuntu to an AD Server. This is a Windows Server 2019 AD controller,  which security for remoting are different. Essentially, if you have an Windows Controller and allow remoting to another Windows client then it should work,  You should be able to at least ping between Ubuntu and the Windows server before you can try connecting to via winrm remoting thru AD. \r\n\r\nI currently don't have the time to setup a Windows 2012 server as my full-time job it's been very demanding lately.  So, I try it later on!\r\n\r\nI will copy again @SteveL-MSFT and @joeyaiello to see what they think about the issue you're experiencing.\r\n\r\n",
      "created_at": "2019-07-23T15:51:58Z",
      "updated_at": "2019-07-23T15:51:58Z"
    },
    {
      "author": "yugaa22",
      "author_association": "NONE",
      "body": "Thanks you very much for your reply I will follow your instructions ...once\nagain thank you...\n\nOn Tue 23 Jul, 2019, 9:23 PM Maximo Trinidad, <notifications@github.com>\nwrote:\n\n> @yugaa22 <https://github.com/yugaa22>\n>\n> If you follow my blog post:\n> http://www.maxtblog.com/2019/02/powerhell-core-ubuntu-18-04-psremoting-to-an-active-directory-machine/\n>\n> It tells you what I did to connect my Ubuntu to an AD Server. This is a\n> Windows Server 2019 AD controller, which security for remoting are\n> different. Essentially, if you have an Windows Controller and allow\n> remoting to another Windows client then it should work, You should be able\n> to at least ping between Ubuntu and the Windows server before you can try\n> connecting to via winrm remoting thru AD.\n>\n> I currently don't have the time to setup a Windows 2012 server as my\n> full-time job it's been very demanding lately. So, I try it later on!\n>\n> I will copy again @SteveL-MSFT <https://github.com/SteveL-MSFT> and\n> @joeyaiello <https://github.com/joeyaiello> to see what they think about\n> the issue you're experiencing.\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/PowerShell/PowerShell/issues/3708?email_source=notifications&email_token=AMF6IQQY2B6JPZNMMPERFRDQA4SN3A5CNFSM4DKJI2GKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD2TSMNQ#issuecomment-514270774>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AMF6IQRCIA35IZNZ4U2QBGTQA4SN3ANCNFSM4DKJI2GA>\n> .\n>\n",
      "created_at": "2019-07-24T06:21:37Z",
      "updated_at": "2019-07-24T06:21:37Z"
    },
    {
      "author": "yugaa22",
      "author_association": "NONE",
      "body": "> @yugaa22\r\n> \r\n> If you follow my blog post: http://www.maxtblog.com/2019/02/powerhell-core-ubuntu-18-04-psremoting-to-an-active-directory-machine/\r\n> \r\n> It tells you what I did to connect my Ubuntu to an AD Server. This is a Windows Server 2019 AD controller, which security for remoting are different. Essentially, if you have an Windows Controller and allow remoting to another Windows client then it should work, You should be able to at least ping between Ubuntu and the Windows server before you can try connecting to via winrm remoting thru AD.\r\n> \r\n> I currently don't have the time to setup a Windows 2012 server as my full-time job it's been very demanding lately. So, I try it later on!\r\n> \r\n> I will copy again @SteveL-MSFT and @joeyaiello to see what they think about the issue you're experiencing.\r\n\r\n\r\n\r\n",
      "created_at": "2019-07-30T07:58:49Z",
      "updated_at": "2019-07-30T08:07:29Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@yugaa22 so did following the blog post work?",
      "created_at": "2019-08-28T20:33:26Z",
      "updated_at": "2019-08-28T20:33:26Z"
    },
    {
      "author": "yugaa22",
      "author_association": "NONE",
      "body": "> @yugaa22 so did following the blog post work?\r\n\r\nyes\r\n",
      "created_at": "2019-08-29T07:33:12Z",
      "updated_at": "2019-08-29T07:33:12Z"
    },
    {
      "author": "spitfire",
      "author_association": "NONE",
      "body": "Still doesn't work for me on macOS 10.14.6 (18G95), PowerShell 6.2.0",
      "created_at": "2019-09-01T13:20:11Z",
      "updated_at": "2019-09-01T13:20:11Z"
    },
    {
      "author": "yugaa22",
      "author_association": "NONE",
      "body": "I tried in Ubuntu\n\n\nOn Sun 1 Sep, 2019, 6:50 PM Mieszko \u015alusarczyk, <notifications@github.com>\nwrote:\n\n> Still doesn't work for me on macOS 10.14.6 (18G95), PowerShell 6.2.0\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/PowerShell/PowerShell/issues/3708?email_source=notifications&email_token=AMF6IQTTYXRGO3RRNTYNMHDQHO6TVA5CNFSM4DKJI2GKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD5UCIFI#issuecomment-526918677>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AMF6IQUH7BORVSJADN2MOP3QHO6TVANCNFSM4DKJI2GA>\n> .\n>\n",
      "created_at": "2019-09-01T15:37:34Z",
      "updated_at": "2019-09-01T15:37:34Z"
    },
    {
      "author": "he852100",
      "author_association": "NONE",
      "body": "I'm confused. No one is responsible for the problem. No one official has to solve the problem. I didn't find any effective way to set it up. I'm upset\r\n\r\nThe software was installed according to the above method. But I don't know what to do next. Now it doesn't work\r\n\r\nI think the official team can just get rid of the ssh. Direct takeover of krb5, gsntlmsp open source project. Full implementation of powershell cross-platform communication. There's no need for ssh at all",
      "created_at": "2019-11-01T15:30:06Z",
      "updated_at": "2019-11-01T15:30:06Z"
    },
    {
      "author": "spitfire",
      "author_association": "NONE",
      "body": "I also believe this should be re-opened. Installing ssh server on every server may not be an option for everyone (security, attack surface, etc.). If it is supposed to work,  bundle necessary libraries/ create a working formula in homebrew, or do whatever it takes to really work out of box. Our stop bragging we have powershell on macOS/Linux if it's not functional.",
      "created_at": "2019-11-02T10:43:07Z",
      "updated_at": "2019-11-02T10:43:07Z"
    },
    {
      "author": "vinyar",
      "author_association": "NONE",
      "body": "So is the official solution to install SSH on windows? Can we all agree this is a joke?",
      "created_at": "2019-12-03T02:01:16Z",
      "updated_at": "2019-12-03T02:01:16Z"
    },
    {
      "author": "he852100",
      "author_association": "NONE",
      "body": "Regardless of the connection protocol used. The user's requirements are simple, universal, reliable and effective. It does not require any network connectivity tools to be installed.\r\n\r\nIn the operating system you produce. Even the latest version of the operating system. Sshd is not pre-installed.\r\n\r\nJust imagine. Install a winserver2019, how to connect it with ssh\uff1f\r\n2016?2012?\r\n\r\nPwershellcore has long since completely abandoned windows",
      "created_at": "2019-12-03T02:27:37Z",
      "updated_at": "2019-12-03T02:28:30Z"
    },
    {
      "author": "vinyar",
      "author_association": "NONE",
      "body": "@SteveL-MSFT - can this issue be reopened? It's been nearly 3 years, and its not solved. \r\n\r\nInstalling SSH on production unnecessarily increases the attack surface, and is absolutely not acceptable.",
      "created_at": "2019-12-12T18:45:35Z",
      "updated_at": "2019-12-12T18:45:35Z"
    }
  ],
  "created_at": "2017-05-05T19:19:00Z",
  "labels": [
    "Issue-Question",
    "Resolution-Answered",
    "WG-Remoting"
  ],
  "number": 3708,
  "state": "closed",
  "title": "New-PSSession fails to connect to Windows Server 2016 PC",
  "updated_at": "2019-12-12T18:45:36Z"
}