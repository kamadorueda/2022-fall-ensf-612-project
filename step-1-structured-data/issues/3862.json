{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3862",
  "author": "schittli",
  "body": "\r\n**On NTFS, Rename-Item just supports 254 characters** (per path-segment, I guess).\r\nIf we try to rename a Direcotry with 255 characters, Rename-Item throws an Exception (even if the underlying APS probably does not :-() _(Why is PowerShell doing the same tests which the underlying API is doing anyway? It would be less error-prone to just use the well tested API)_\r\n\r\n\r\n**The same Problem exists in Remove-Item**: it throws an exception if it has to handle 255 characters.\r\n\r\n\r\nSteps to reproduce\r\n------------------\r\n```PowerShell\r\nPS C:\\temp> New-Item -Type Directory -Path \"c:\\Temp\\$('a' * 255)\"\r\n    Directory: C:\\Temp\r\nMode                LastWriteTime         Length Name\r\n----                -------------         ------ ----\r\nd-----       25.05.2017     12:44                aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\r\n                                                 aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\r\n\r\n\r\nPS C:\\temp> Rename-Item -Path \"c:\\Temp\\$('a' * 255)\" -NewName \"c:\\Temp\\abc\"\r\nRename-Item : The specified path, file name, or both are too long. The fully qualified file name must be less than 260 characters, and the directory name must be less than 248 characters.\r\nAt line:1 char:1\r\n+ Rename-Item -Path \"c:\\Temp\\$('a' * 255)\" -NewName \"c:\\Temp\\abc\"\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : WriteError: (C:\\Temp\\aaaaaaa...aaaaaaaaaaaaaaa:String) [Rename-Item], PathTooLongException\r\n    + FullyQualifiedErrorId : RenameItemIOError,Microsoft.PowerShell.Commands.RenameItemCommand\r\n\r\nPS C:\\temp>\r\n```\r\n### Btw: 254 Characters are supported:\r\n\r\n```PowerShell\r\nPS C:\\temp> New-Item -Type Directory -Path \"c:\\Temp\\$('a' * 254)\"\r\n    Directory: C:\\Temp\r\nMode                LastWriteTime         Length Name\r\n----                -------------         ------ ----\r\nd-----       25.05.2017     12:46                aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\r\n                                                 aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\r\n\r\nPS C:\\temp> Rename-Item -Path \"c:\\Temp\\$('a' * 254)\" -NewName \"c:\\Temp\\abc\"\r\nPS C:\\temp> # Rename-Item worked perfectly\r\n```\r\n\r\n\r\nExpected behavior\r\n-----------------\r\nBecause 255 Characters are supported by NTFS, PowerShell should support 255 Characters, too.\r\n\r\nActual behavior\r\n---------------\r\nPowerShell just supports 254 Characters (per path segment, I guess)\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value\r\n----                           -----\r\nPSVersion                      5.1.14393.693\r\nPSEdition                      Desktop\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nBuildVersion                   10.0.14393.693\r\nCLRVersion                     4.0.30319.42000\r\nWSManStackVersion              3.0\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\n```\r\n",
  "closed_at": "2018-05-10T03:22:57Z",
  "comments": [
    {
      "author": "ArieHein",
      "author_association": "NONE",
      "body": "I believe this is due to the fact there is always a terminating null character in a path.\r\n\r\nAs a side note, Windows 10 Anniversary, I think, had this issue addressed by probably new API.\r\n(At least that's what I got from old MS blogs and documentations that they intend to do but haven't researched enough on the changes).\r\nI assume PowerShell can leverage those new APIs to completely remove the limit as well ?",
      "created_at": "2017-05-29T10:03:02Z",
      "updated_at": "2017-05-29T10:03:02Z"
    },
    {
      "author": "schittli",
      "author_association": "NONE",
      "body": "> I believe this is due to the fact there is always a terminating null character in a path.\r\n\r\nIt's true, that there is the terminating null character, \r\nbut the user can effectively use 255 characters for path-segments (directory- and file-names).\r\n\r\nTherefore, it's probably just an Off-by-one-Error.\r\n\r\nBtw.: If the Windows 10 Anniversary LongPaths support is enabled (Registry flag LongPathsEnabled), then PowerShell already supports long Paths.\r\n\r\nBut the long path support has the 255-characters-per-segment limit, too,\r\ntherefore, this is Bug not solved by activating the LongPathsEnabled Flag in the Registry.\r\n\r\n\r\n\r\n\r\n",
      "created_at": "2017-05-29T10:37:33Z",
      "updated_at": "2017-05-29T10:37:33Z"
    },
    {
      "author": "schittli",
      "author_association": "NONE",
      "body": "I'm not sure if I understand you the right way...\r\n\r\nUsers - and Create-Item in PowerShell(!) - can create File- and Directory-Names with 255 characters.\r\n\r\nTherefore it's not a 254 or 255 character question, because there really are Files / Directories with 255 characters.\r\n\r\nSo I'm pretty sure PowerShell has an Off-by-one-Error in Remove-Item and Rename-Item.\r\nA working reference would be Create-Item :-)",
      "created_at": "2017-05-30T07:41:25Z",
      "updated_at": "2017-05-30T07:41:25Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Has Copy-Item the same problem?",
      "created_at": "2017-05-30T08:50:11Z",
      "updated_at": "2017-05-30T08:50:11Z"
    },
    {
      "author": "schittli",
      "author_association": "NONE",
      "body": "> Has Copy-Item the same problem?\r\n\r\nNo, New-Item and Copy-Item are working as expected:\r\n```PowerShell\r\nPS C:\\temp> New-Item -Type Directory -Path \"c:\\Temp\\$('a' * 255)\"\r\n    Directory: C:\\Temp\r\nMode                LastWriteTime         Length Name\r\n----                -------------         ------ ----\r\nd-----       30.05.2017     10:52                bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\r\n                                                 bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\r\n\r\nPS C:\\temp> Copy-Item -Path \"c:\\Temp\\$('a' * 255)\" -Destination \"c:\\Temp\\$('b' * 255)\"\r\n\r\nPS C:\\temp> ls b*\r\n    Directory: C:\\temp\r\nMode                LastWriteTime         Length Name\r\n----                -------------         ------ ----\r\nd-----       30.05.2017     10:53                bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\r\n                                                 bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\r\n\r\n```\r\n\r\nI hope this is enough discussion about a real bug - which was proven in my 1st report.\r\nKind regards, Tom\r\n",
      "created_at": "2017-05-30T08:58:06Z",
      "updated_at": "2017-05-30T08:58:06Z"
    },
    {
      "author": "jeffbi",
      "author_association": "CONTRIBUTOR",
      "body": "On `6.0.0-beta` I was seeing a different error:\r\n```PowerShell\r\nPS> Rename-Item -Path \"c:\\Temp\\$('a' * 255)\" -NewName \"c:\\Temp\\abc\"\r\nRename-Item : Cannot rename because item at 'c:\\Temp\\aaaaaaaaaaaaaaaaaaaaaaaaaa\r\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\r\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\r\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa' does\r\nnot exist.\r\nAt line:1 char:1\r\n+ Rename-Item -Path \"c:\\Temp\\$('a' * 255)\" -NewName \"c:\\Temp\\abc\"\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : InvalidOperation: (:) [Rename-Item], PSInvalidOp\r\n   erationException\r\n    + FullyQualifiedErrorId : InvalidOperation,Microsoft.PowerShell.Commands.R\r\n   enameItemCommand\r\n```\r\n\r\nI believe this is now fixed by #3960. Neither error is emitted and the `Rename-Item` succeeds.",
      "created_at": "2017-06-08T01:36:11Z",
      "updated_at": "2017-06-08T01:36:11Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@schittli Can you build and confirm that the Issue is fixed? Or if you can not build waiting Beta.3.",
      "created_at": "2017-06-08T03:40:11Z",
      "updated_at": "2017-06-08T03:40:11Z"
    },
    {
      "author": "schittli",
      "author_association": "NONE",
      "body": "Hi iSazonov, great news!, I'll have to wait for Beta 3 and will test it as soon as it is released.",
      "created_at": "2017-06-08T05:41:49Z",
      "updated_at": "2017-06-08T05:41:49Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "I tried this out today and could not reproduce on my Win 10 machine. @schittli are you able to test this out?",
      "created_at": "2018-03-16T22:46:25Z",
      "updated_at": "2018-03-16T22:46:25Z"
    },
    {
      "author": "schittli",
      "author_association": "NONE",
      "body": "PSVersion 5.1 still has this bug, which is annoying, because this is the full feature and the default deployed version. \r\n\r\nPSVersion 6.0.2 has solved the issue.",
      "created_at": "2018-03-17T12:49:11Z",
      "updated_at": "2018-03-17T12:49:11Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT Could MSFT team consider the fix for Windows PowerShell 5.1?",
      "created_at": "2018-03-19T05:47:38Z",
      "updated_at": "2018-03-19T05:47:38Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "In line with the [README](https://github.com/PowerShell/PowerShell#windows-powershell-vs-powershell-core), maybe [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell) is the place to open an issue for this?",
      "created_at": "2018-03-19T19:57:17Z",
      "updated_at": "2018-03-19T19:57:17Z"
    },
    {
      "author": "schittli",
      "author_association": "NONE",
      "body": "I'm **very** sorry, but UserVoice is nothing but a grave and a great shame because customers(!) have to beg for errors(!) to be fixed(!). We have seen many times that the correction of trivial errors took 3 to 5 years and Google is usually a great witness that the \"great new feature release\" is just a bug fix for well known bugs since many years.\r\nYou can use your precious Work and Time for much more useful things. ",
      "created_at": "2018-03-19T20:16:45Z",
      "updated_at": "2018-03-19T20:16:45Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I tagged the PR to consider backporting to PS5.1, but it would only show up in latest Win10 if we do this work.",
      "created_at": "2018-03-19T21:32:03Z",
      "updated_at": "2018-03-19T21:32:03Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "If we want to support long paths we should do full review our code - seems sometimes we use APIs which don't support long paths (`FileInfo`?).",
      "created_at": "2018-05-09T16:37:49Z",
      "updated_at": "2018-05-09T16:37:49Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I forgot that we actually made a change in Windows PowerShell awhile back when .Net Framework added support for long path names.  However, it's not enabled by default because Windows doesn't enable it by default.  See https://blogs.msdn.microsoft.com/jeremykuhne/2016/07/30/net-4-6-2-and-long-paths-on-windows-10/",
      "created_at": "2018-05-10T03:22:31Z",
      "updated_at": "2018-05-10T03:22:31Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT I have fears that we use APIs that do not support long names in both Win32 (PInvoke) and C# (ex., [FileInfo](http://source.dot.net/#System.Private.CoreLib/shared/System/IO/PathHelper.Windows.cs,28))",
      "created_at": "2018-05-10T04:52:37Z",
      "updated_at": "2018-05-10T04:52:37Z"
    }
  ],
  "created_at": "2017-05-25T10:56:41Z",
  "number": 3862,
  "state": "closed",
  "title": "NTFS: Rename-Item: does not support 255 Characters",
  "updated_at": "2018-05-10T04:52:38Z"
}