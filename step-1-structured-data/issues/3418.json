{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3418",
  "author": "joeyaiello",
  "body": "This request [came in from UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell/suggestions/18689176-invoke-webrequest-should-support-noproxy-paramete), and I think it might make sense, but I'm also curious if there's a security implication here (i.e. if an admin sets a proxy globally, could a user override it with this parameter?) \r\n\r\nSteps to reproduce\r\n------------------\r\nSet up a system-wide proxy and run:\r\n\r\n```powershell\r\nInvoke-WebRequest -NoProxy www.github.com\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\nThe request doesn't go through the system-wide proxy. \r\n\r\nActual behavior\r\n---------------\r\nThe request does go through the system-wide proxy. ",
  "closed_at": "2017-04-01T07:54:23Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I believe there is not security implication here because any browser allow users to change Proxy settings.\r\n\r\nWe could use Uri = `Null` to disable proxy:\r\n```powershell\r\nInvoke-WebRequest -Proxy $null\r\n```",
      "created_at": "2017-03-25T17:23:41Z",
      "updated_at": "2017-03-25T17:23:41Z"
    },
    {
      "author": "mcwidg3t",
      "author_association": "NONE",
      "body": "In my testing, \"-Proxy $null\" does not work. The request still goes to the system proxy.",
      "created_at": "2017-03-27T15:55:58Z",
      "updated_at": "2017-03-27T15:55:58Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "It was my suggestion to implement.",
      "created_at": "2017-03-27T16:44:15Z",
      "updated_at": "2017-03-27T16:44:15Z"
    },
    {
      "author": "TheFlyingCorpse",
      "author_association": "CONTRIBUTOR",
      "body": "A downside of using `-Proxy $null` would be that it would override any DefaultWebProxy, every time, which means you would have had to specify the proxy on every request.\r\n\r\nWhat about `-Proxy $false`?",
      "created_at": "2017-03-27T20:31:02Z",
      "updated_at": "2017-03-27T20:31:22Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@TheFlyingCorpse We cannot change type (it is `Uri`) of the Proxy parameter.",
      "created_at": "2017-03-28T06:16:53Z",
      "updated_at": "2017-03-28T06:16:53Z"
    },
    {
      "author": "TheFlyingCorpse",
      "author_association": "CONTRIBUTOR",
      "body": "I see. a `-NoProxy` would be the way to go then.",
      "created_at": "2017-03-28T06:39:06Z",
      "updated_at": "2017-03-28T06:39:06Z"
    },
    {
      "author": "TheFlyingCorpse",
      "author_association": "CONTRIBUTOR",
      "body": "I have a patch right around the corner that fixes this. It introduces a `-NoProxy` parameter.",
      "created_at": "2017-03-28T18:49:39Z",
      "updated_at": "2017-03-28T18:49:39Z"
    },
    {
      "author": "thezim",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov if your workstation is under enterprise control typically you cannot change your proxy settings. Allowing so would subvert the security policy that is in place.",
      "created_at": "2017-03-28T23:13:19Z",
      "updated_at": "2017-03-28T23:13:19Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@thezim however, if they have access to powershell, they could circumvent it today calling the .Net APIs directly.  ",
      "created_at": "2017-03-29T00:24:21Z",
      "updated_at": "2017-03-29T00:24:21Z"
    },
    {
      "author": "thezim",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT if one has the means (.NET API) to enter your home would you leave the front door unlocked (-NoProxy) to make it easier?",
      "created_at": "2017-03-29T01:32:50Z",
      "updated_at": "2017-03-29T01:32:50Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Alternatively, if you want policy enforced, this should be done within corefx",
      "created_at": "2017-03-29T01:36:32Z",
      "updated_at": "2017-03-29T01:36:32Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "On Windows we can block changing of proxy setting in IE by means of GPO but users is free to change the setting in any other third party agent (Firefox, Chrome, Opera, wget and so on).",
      "created_at": "2017-03-29T03:17:11Z",
      "updated_at": "2017-03-29T03:17:11Z"
    },
    {
      "author": "TheFlyingCorpse",
      "author_association": "CONTRIBUTOR",
      "body": "Plus its possible to wipe it via reg.exe / regedit.\r\nIf you dont want your users to access the internet without proxy, you dont have 80 and 443 open to the internet from your relevant networks. Simple as that.",
      "created_at": "2017-03-29T05:08:05Z",
      "updated_at": "2017-03-29T05:08:05Z"
    },
    {
      "author": "mcwidg3t",
      "author_association": "NONE",
      "body": "The System Proxy settings in an enterprise environment are a management convenience. It's not a security setting. Security is better handled by blocking 80 and 443 at the firewall.",
      "created_at": "2017-03-29T08:04:13Z",
      "updated_at": "2017-03-29T08:04:13Z"
    },
    {
      "author": "thezim",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov GPO's exist for third party browsers as well. In my enterprise FF is locked down too. Stack on host based security system managed at the enterprise level and changing settings becomes very difficult. No installing unauthorized applications, running registry editors, etc.\r\n\r\n@TheFlyingCorpse registrys keys have ACLs on them to prevent this and is considered a best practice.\r\n\r\n@mcwidg3t I agree port blocking is be best solution but security is should be multi layered and should should never depend on a single layer. Hacker's count on admins thinking they are safe to great effectiveness.",
      "created_at": "2017-03-29T14:55:54Z",
      "updated_at": "2017-03-29T14:55:54Z"
    },
    {
      "author": "mcwidg3t",
      "author_association": "NONE",
      "body": "@thezim if you remove Powershell from the client desktop then you've removed a potential security hole, which also makes sense from a layered security approach. However, you also may be impacting productivity. It's a balancing act.\r\n\r\nIn this case, I think that any increased risk in having a -NoProxy parameter is minimal given there are more appropriate ways at handling the security. I think it's a useful feature to have so for me, I'd implement it.",
      "created_at": "2017-03-29T16:07:27Z",
      "updated_at": "2017-03-29T16:07:27Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@thezim I think enterprises can still lock this down by having a proxy function in PowerShell that doesn't expose `-noproxy`",
      "created_at": "2017-03-29T16:26:46Z",
      "updated_at": "2017-03-29T16:26:46Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "First, this is implemented in #3447 \r\n\r\nThis thread is all conjecture until someone investigates whether the proposed APIs we're using respect enterprise controls that limit proxy settings. From what I can see, we're basically just passing `false` to an instance of `HttpClientHandler.UseProxy`. \r\n\r\nIf `HttpClientHandler` doesn't respect enterprise controls, and you're not limiting PowerShell environments in any way, there's already a gaping hole. Anyone could replicate what's going on here without a cmdlet later. Creating \"convenience\" for hackers is not a sound argument (most PowerShell malware out there is highly obfuscated already, they don't care about convenience). \r\n\r\nGiving the PR my \ud83d\udc4d ",
      "created_at": "2017-03-30T22:10:58Z",
      "updated_at": "2017-03-30T22:10:58Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Someday CoreFX integrates Authorization Manager \ud83d\ude04 ",
      "created_at": "2017-03-31T03:57:35Z",
      "updated_at": "2017-03-31T03:57:35Z"
    },
    {
      "author": "mcwidg3t",
      "author_association": "NONE",
      "body": "Good news @joeyaiello. Looking forward to that being released.",
      "created_at": "2017-03-31T07:57:32Z",
      "updated_at": "2017-03-31T07:57:32Z"
    }
  ],
  "created_at": "2017-03-24T23:28:12Z",
  "number": 3418,
  "state": "closed",
  "title": "Add `-NoProxy` parameter to Invoke-WebRequest",
  "updated_at": "2017-04-01T07:54:23Z"
}