{
  "_url": "https://github.com/PowerShell/PowerShell/issues/17718",
  "author": "dasshit",
  "body": "### Prerequisites\n\n- [X] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\n\n### Steps to reproduce\n\nAn error occurs when trying to send a file through the [ICQ API](https://icq.com/botapi/) - the FILE field is not recognized in the request body\r\n\r\nThe file is sent by the following script:\r\n```\r\n$Request = [System.UriBuilder]'https://api.icq.net/bot/v1/messages/sendFile';\r\n\r\n$Parameters = [System.Web.HttpUtility]::ParseQueryString([String]::Empty)\r\n\r\n$Parameters.add('token', 'API_TOKEN')\r\n$Parameters.add('chatId', 'CHAT_ID')    \r\n\r\n$Request.Query = $Parameters.ToString();\r\n\r\n$form = @{\r\n    file      = Get-Item PATH_TO_FILE\r\n}\r\n\r\nInvoke-RestMethod -Method Post -Uri $Request.Uri -Form $form -ContentType 'multipart/form-data'\r\n```\r\n\r\nHowever, if you send the file in another way, the sending is successful:\r\n```\r\n$Parameters = [System.Web.HttpUtility]::ParseQueryString([String]::Empty)\r\n$Parameters[\"token\"] = \"API_TOKEN\"\r\n$Parameters[\"chatId\"] = \"CHAT_ID\"\r\n\t\t\r\n$Request = [System.UriBuilder]\"https://api.icq.net/bot/v1/messages/sendFile\"\r\n\r\n$Request.Query = $Parameters.ToString()\r\n\t\t\r\n$FileName = PATH_TO_FILE\r\n$FilePath = Join-Path -Path $PSScriptRoot -ChildPath $FileName\r\n\r\n$fileBytes = [System.IO.File]::ReadAllBytes($FilePath);\r\n$fileEnc = [System.Text.Encoding]::GetEncoding(\"UTF-8\").GetString($fileBytes);\r\n$boundary = [System.Guid]::NewGuid().ToString(); \r\n$LF = \"`r`n\";\r\n\r\n$bodyLines = ( \r\n\t\"--$boundary\",\r\n\t\"Content-Disposition: form-data; name=`\"file`\"; filename=`\"$FileName`\"\",\r\n\t\"Content-Type: application/octet-stream$LF\",\r\n\t$fileEnc,\r\n\t\"--$boundary--$LF\" \r\n) -join $LF\r\n\t\t\r\nInvoke-RestMethod -Uri $Request.Uri -Method Post -ContentType \"multipart/form-data; boundary=$boundary\" -Body $bodyLines\r\n```\r\n\r\nUsing the selection method, I found out that if you change the value of the LF variable from \"\\`r\\`n\" to \"\\`n\" in the second script, then the sending will also be unsuccessful\r\n\r\nIt appears that the first script also uses the character \"`n\" to break lines.\r\n\r\nAccording to MDN, [FormData](https://developer.mozilla.org/en-US/docs/Web/API/FormData) uses the \"multipart/form-data\" format, specified by [RFC 2388, section 3](https://www.rfc-editor.org/rfc/rfc2388.html#section-3) of which states:\r\n\r\n`The media-type multipart/form-data follows the rules of all multipart MIME data streams as outlined in RFC 2046.`\r\n\r\n[RFC \u00a7 4.1.1](https://www.rfc-editor.org/rfc/rfc2046#section-4.1.1), the section on line endings, states:\r\n\r\n`The canonical form of any MIME \"text\" subtype MUST always represent a line break as a CRLF sequence.`\n\n### Expected behavior\n\n```console\nRequest body lines are separated by \"`r`n\"\n```\n\n\n### Actual behavior\n\n```console\nRequest body lines are separated by \"`n\"\n```\n\n\n### Error details\n\n_No response_\n\n### Environment data\n\n```powershell\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.5\r\nPSEdition                      Core\r\nGitCommitId                    7.2.5\r\nOS                             Darwin 21.4.0 Darwin Kernel Version 21.4.0: Sat Jan 29 03:25:23 PST 2022; root:xnu-8020.100.417.0.4~31/RELEASE_X86_64\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\n```\n\n\n### Visuals\n\n_No response_",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Hmm, it seems PowerShell follow .Net and does nothing with manual mutipart encoding. But I don't see a problem in .Net code https://source.dot.net/#System.Net.Http/System/Net/Http/MultipartContent.cs,19\r\n\r\n@dasshit Can you use a sniffer and confirm that \"\\n\" instead of \"\\r\\n\" is emitted?\r\n\r\n<blockquote><div><strong><a href=\"https://source.dot.net/#System.Net.Http/System/Net/Http/MultipartContent.cs,19\">Source Browser</a></strong></div></blockquote>",
      "created_at": "2022-07-21T04:04:44Z",
      "updated_at": "2022-07-21T22:27:39Z"
    },
    {
      "author": "kasini3000",
      "author_association": "NONE",
      "body": "### This question definitely deserves further investigation.\r\ni used Invoke-RestMethod body send file when submitting multipart/form-data.\r\nI have referenced a lot of writing on stack overflow, but never succeeded. \r\nLater I used .net class method and it worked.\r\nbtw curl.exe work fine.",
      "created_at": "2022-07-21T05:09:05Z",
      "updated_at": "2022-07-21T05:10:32Z"
    },
    {
      "author": "dasshit",
      "author_association": "NONE",
      "body": "> Hmm, it seems PowerShell follow .Net and does nothing with manual mutipart encoding. But I don't see a problem in .Net code https://source.dot.net/#System.Net.Http/System/Net/Http/MultipartContent.cs,19\r\n> \r\n> @dasshit Can you use a sniffer and confirm that \"`n\" instead of \"`r`n\" is emitted?\r\n> \r\n> > **[Source Browser](https://source.dot.net/#System.Net.Http/System/Net/Http/MultipartContent.cs,19)**\r\n\r\nI'm using Charles as a sniffer, but I don't see any options for highlighting control characters.\r\n\r\nHowever, above I gave an example of a script where, when changing the line separators in the body from \\r\\n to \\n, sending a file via multipart/form-data becomes unsuccessful\r\n\r\nHere is script to reproduce error, including tokens and other required data from ICQ API\r\n\r\n```\r\n$Parameters = [System.Web.HttpUtility]::ParseQueryString([String]::Empty)\r\n$Parameters[\"token\"] = \"001.3510528113.0957533926:1004574249\"\r\n$Parameters[\"chatId\"] = \"759112306\"\r\n\t\t\r\n$Request = [System.UriBuilder]\"https://api.icq.net/bot/v1/messages/sendFile\"\r\n\r\n$Request.Query = $Parameters.ToString()\r\n\t\t\r\n$FilePath = $PSCommandPath\r\n$FileName = $(Get-ChildItem $FilePath).Name\r\n\r\n$fileBytes = [System.IO.File]::ReadAllBytes($FilePath);\r\n$fileEnc = [System.Text.Encoding]::GetEncoding(\"UTF-8\").GetString($fileBytes);\r\n$boundary = [System.Guid]::NewGuid().ToString(); \r\n$LF = \"`n\";\r\n\r\n$bodyLines = ( \r\n\t\"--$boundary\",\r\n\t\"Content-Disposition: form-data; name=`\"file`\"; filename=`\"$FileName`\"\",\r\n\t\"Content-Type: application/octet-stream$LF\",\r\n\t$fileEnc,\r\n\t\"--$boundary--$LF\" \r\n) -join $LF\r\n\t\t\r\nInvoke-RestMethod -Uri $Request.Uri -Method Post -ContentType \"multipart/form-data; boundary=$boundary\" -Body $bodyLines\r\n```\r\n\r\nAnd same script, but with the $LF = \"`r`n\" - result is success\r\n```\r\n$Parameters = [System.Web.HttpUtility]::ParseQueryString([String]::Empty)\r\n$Parameters[\"token\"] = \"001.3510528113.0957533926:1004574249\"\r\n$Parameters[\"chatId\"] = \"759112306\"\r\n\t\t\r\n$Request = [System.UriBuilder]\"https://api.icq.net/bot/v1/messages/sendFile\"\r\n\r\n$Request.Query = $Parameters.ToString()\r\n\t\t\r\n$FilePath = $PSCommandPath\r\n$FileName = $(Get-ChildItem $FilePath).Name\r\n\r\n$fileBytes = [System.IO.File]::ReadAllBytes($FilePath);\r\n$fileEnc = [System.Text.Encoding]::GetEncoding(\"UTF-8\").GetString($fileBytes);\r\n$boundary = [System.Guid]::NewGuid().ToString(); \r\n$LF = \"`n\";\r\n\r\n$bodyLines = ( \r\n\t\"--$boundary\",\r\n\t\"Content-Disposition: form-data; name=`\"file`\"; filename=`\"$FileName`\"\",\r\n\t\"Content-Type: application/octet-stream$LF\",\r\n\t$fileEnc,\r\n\t\"--$boundary--$LF\" \r\n) -join $LF\r\n\t\t\r\nInvoke-RestMethod -Uri $Request.Uri -Method Post -ContentType \"multipart/form-data; boundary=$boundary\" -Body $bodyLines\r\n```\n\n<blockquote><div><strong><a href=\"https://source.dot.net/#System.Net.Http/System/Net/Http/MultipartContent.cs,19\">Source Browser</a></strong></div></blockquote>",
      "created_at": "2022-07-21T09:15:57Z",
      "updated_at": "2022-07-21T09:16:00Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@dasshit Can you reproduce the issue with latest pwsh 7.3 preview?",
      "created_at": "2022-07-21T13:19:30Z",
      "updated_at": "2022-07-21T13:19:30Z"
    },
    {
      "author": "dasshit",
      "author_association": "NONE",
      "body": "```bash\r\n~ via \ue718 v16.15.0 via \ud83d\udc0d v3.10.0 took 7s \r\n\u276f /usr/local/microsoft/powershell/7-preview/pwsh test_3.ps1\r\n\r\n   ok description\r\n   -- -----------\r\nFalse file or fileId is required\r\n\r\n\r\n~ via \ue718 v16.15.0 via \ud83d\udc0d v3.10.0 \r\n\u276f /usr/local/microsoft/powershell/7-preview/pwsh --version \r\nPowerShell 7.3.0-preview.6\r\n```\r\n\r\nError is still there",
      "created_at": "2022-07-21T18:58:31Z",
      "updated_at": "2022-07-21T18:58:31Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> I'm using Charles as a sniffer, but I don't see any options for highlighting control characters.\r\n\r\nDo you use HTTP or HTTPS request? Try HTTP and share result. You could use tcpdump if there is a problem with Charles.\r\n\r\nOn Windows I use Wireshark and see _right_ control chars but result is\r\nfor HTTP:\r\n```\r\n   ok description\r\n   -- -----------\r\nFalse Required parameter not found\r\n```\r\nfor HTTPS:\r\n```\r\n\r\n   ok description\r\n   -- -----------\r\nFalse file or fileId is required\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/22290914/180392795-ec268247-6f14-4b9a-b784-9737e0faf347.png)\r\n",
      "created_at": "2022-07-22T08:03:34Z",
      "updated_at": "2022-07-22T08:03:34Z"
    }
  ],
  "created_at": "2022-07-20T13:10:21Z",
  "labels": [
    "Issue-Bug",
    "WG-Cmdlets-Utility",
    "Needs-Triage"
  ],
  "number": 17718,
  "state": "open",
  "title": "Invoke-RestMethod does not use \\r in the body when submitting multipart/form-data",
  "updated_at": "2022-07-22T08:03:35Z"
}