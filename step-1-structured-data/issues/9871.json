{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9871",
  "author": "SteveL-MSFT",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n\r\n-->\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\nMeasure-Command { 1..100 | % { get-service sshd } }\r\n```\r\n\r\n# Expected behavior\r\n\r\nAbout the same time on both PS7 and WinPS 5.1\r\n\r\n# Actual behavior\r\n\r\nWinPS5.1 took 100ms on my machine\r\nPS7 took 532ms on same machine\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-preview.1\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-preview.1\r\nOS                             Microsoft Windows 10.0.18362\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "My measure 526 vs 32",
      "created_at": "2019-06-13T07:21:55Z",
      "updated_at": "2019-06-13T07:21:55Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "It come from #4907 where we added  properties (BinPath, Description, UserName and Delayed Auto Start).\r\n\r\nIt seems the fix should be to move the properties to ETS and get its on demand only.",
      "created_at": "2019-06-13T09:18:00Z",
      "updated_at": "2019-06-13T09:18:00Z"
    },
    {
      "author": "kvprasoon",
      "author_association": "CONTRIBUTOR",
      "body": "mine is (pwsh)32 Vs (powershell)1 ms\r\n\r\n```\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-preview.1\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-preview.1\r\nOS                             Microsoft Windows 10.0.17134\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u0393\u00c7\u00aa}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```",
      "created_at": "2019-06-13T12:47:45Z",
      "updated_at": "2019-06-13T12:49:52Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@kvprasoon I want to have your computer :-))))",
      "created_at": "2019-06-13T14:14:20Z",
      "updated_at": "2019-06-13T14:14:20Z"
    },
    {
      "author": "kvprasoon",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov , srry, I'll have to ask my manager... \ud83d\ude1b",
      "created_at": "2019-06-13T16:08:29Z",
      "updated_at": "2019-06-13T16:08:29Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "I just came across [this code](https://github.com/PowerShell/PowerShell/blob/540737ebe1eae53fd60c6dcc5a76fe9e8b814ab9/src/Microsoft.PowerShell.Commands.Management/commands/management/Service.cs#L686-L704), where ETS types are added to `Get-Service` output, and since this issue is related, I wanted to ask a few questions:\r\n\r\n1. Why are the ETS type names prefixed with `System.Service.ServiceController` and not the actual `System.ServiceProcess.ServiceController` type? This seems incorrect.\r\n\r\n1. Why are we inserting custom type names for each added `NoteProperty`? I've used ETS very heavily over the past 12 years, and while I've identified an extended type using one custom ETS name, or perhaps several if I have a hierarchy like a class hierarchy, I've never added one ETS type name per property added. That feels redundant and unnecessary, and I think these types should either be removed or replaced with a single ETS type name of `System.ServiceProcess.ServiceController#Extended`.\r\n\r\nI know these should be logged as an additional issue or two, and I'll do that. I just want confirmation on the issues first since I don't have the background on why these were added with ETS names like this.",
      "created_at": "2019-08-29T20:06:06Z",
      "updated_at": "2019-08-29T20:06:06Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> Why are the ETS type names prefixed with System.Service.ServiceController and not the actual System.ServiceProcess.ServiceController type? This seems incorrect.\r\n\r\nIt is tricky bug :-) - no automatic display but direct access works.\r\n\r\nFor second, the intention was to use this in formatting system views. We could keep this if we make the properties \"calculate-only-by-demand\" for performance.",
      "created_at": "2019-08-30T04:49:12Z",
      "updated_at": "2019-08-30T04:49:12Z"
    }
  ],
  "created_at": "2019-06-11T18:33:02Z",
  "number": 9871,
  "state": "open",
  "title": "`Get-Service` is noticeably slower on PS7 than on WinPS5.1",
  "updated_at": "2019-08-30T04:49:13Z"
}