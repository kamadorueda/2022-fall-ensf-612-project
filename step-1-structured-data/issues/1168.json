{
  "_url": "https://github.com/PowerShell/PowerShell/issues/1168",
  "author": "daxian-dbw",
  "body": "This is part of #1118 \n[WIP] This PR doesn't enable building Activities dlls in Start-PSBuild -FullCLR due to a weird building error in building ConsoleHost.dll after making it depend on all Activities dlls. To fix it, we need to add a top-level project.json for Full PS, where we add all dependencies, so that each individual dll can only has its actual dependencies declared in its project.json.\nNote that building each Activities dll using dotnet build works fine.\n\n@vors Can you please take a look?\n",
  "closed_at": "2016-06-22T00:30:30Z",
  "comments": [
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "Other then `Resolve-Xaml` comment LGTM\n",
      "created_at": "2016-06-21T23:05:26Z",
      "updated_at": "2016-06-21T23:05:26Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@vors I updated build.psm1. Can you take another look?\n",
      "created_at": "2016-06-21T23:56:50Z",
      "updated_at": "2016-06-21T23:56:50Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "Good job, it's a big piece of functionality!\n",
      "created_at": "2016-06-22T00:30:26Z",
      "updated_at": "2016-06-22T00:30:26Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "> This PR doesn't enable building Activities dlls in Start-PSBuild -FullCLR due to a weird building error in building ConsoleHost.dll after making it depend on all Activities dlls. To fix it, we need to add a top-level project.json for Full PS, where we add all dependencies, so that each individual dll can only has its actual dependencies declared in its project.json.\n\nI think this is something we can fix. It shouldn't need another top-level `project.json`; @vors and I were planning to try this out with `src/powershell`, as it's the true top level project. This way `ConsoleHost` can only depend on SMA.\n",
      "created_at": "2016-06-22T00:57:11Z",
      "updated_at": "2016-06-22T00:57:11Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "Ah, right. @daxian-dbw I mislead you, when I said we need another `$Top` project, it would be much better to add a `net451` entry in `src\\powershell`. It would require moving `src\\Microsoft.PowerShell.ConsoleHost\\Modules` folder.\n",
      "created_at": "2016-06-22T01:47:45Z",
      "updated_at": "2016-06-22T01:47:45Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@vors @andschwa thanks for the clarification. We need to do this. I verified it's the same in razzle environment -- as soon as making ConsoleHost depend on/reference to Microsoft.PowerShell.Diagnostics.Activities.dll, build fails with the same error.\n\n> errors in directory d:\\rs\\dev\\admin\\monad\\nttargets\\assemblies\\mshexe\\dll\\latest\n> d:\\rs\\dev\\admin\\monad\\src\\host\\msh\\consolehostuserinterface.cs(236) : error CS0234: The type or namespace name '\n> Assert' does not exist in the namespace 'Microsoft.PowerShell.Diagnostics' (are you missing an assembly referenc\n> e?)\n> d:\\rs\\dev\\admin\\monad\\src\\host\\msh\\consolehostuserinterfaceprompt.cs(403) : error CS0234: The type or namespace\n> name 'Assert' does not exist in the namespace 'Microsoft.PowerShell.Diagnostics' (are you missing an assembly re\n> ference?)\n> d:\\rs\\dev\\admin\\monad\\src\\host\\msh\\consolehostuserinterfacepromptforchoice.cs(318) : error CS0234: The type or n\n> amespace name 'Assert' does not exist in the namespace 'Microsoft.PowerShell.Diagnostics' (are you missing an as\n> sembly reference?)\n> NMAKE : fatal error U1077: 'd:\\rs\\dev\\tools\\managed\\v4.0\\csc.exe' : return code '0x1'\n> d:\\rs\\dev\\tools\\amd64\\nmake.exe /nologo BUILDMSG=Stop. /nologo /f d:\\rs\\dev\\tools\\makefile.def BUILD_PASS=PASS1\n> NOLINK=1 MAKEDIR_RELATIVE_TO_BASEDIR=admin\\monad\\nttargets\\assemblies\\mshexe\\dll\\latest failed - rc = 0x00000002\n",
      "created_at": "2016-06-22T17:12:00Z",
      "updated_at": "2016-06-22T17:14:50Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw thank you for checking it! It's probaly csc problem.\n",
      "created_at": "2016-06-22T17:24:12Z",
      "updated_at": "2016-06-22T17:24:12Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Thanks for the error @daxian-dbw. That's really quite interesting, and points to a problem in my opinion. \n",
      "created_at": "2016-06-22T17:24:19Z",
      "updated_at": "2016-06-22T17:24:19Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "It's like `Microsoft.PowerShell.Diagnostics` is shadowing `System.Diagnostics`.\n",
      "created_at": "2016-06-22T17:24:42Z",
      "updated_at": "2016-06-22T17:24:42Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "I took a look at powershell/project.json. It seems \"publishOptions\" cannot be defined per framework. This will be the tricky part if we want to make powershell/project.json also the `$top` for full PS :(\n@vors @andschwa do you guys want me to open an issue for this work?\n",
      "created_at": "2016-06-22T18:22:42Z",
      "updated_at": "2016-06-22T18:23:22Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "`publishOptions`/`copyToOutput` should just be a key under to `buildOptions`, which is per-framework configurable (with the exception of `sources`). Are they perhaps running up against https://github.com/dotnet/cli/issues/3577?\n",
      "created_at": "2016-06-22T18:32:20Z",
      "updated_at": "2016-06-22T18:32:20Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@andschwa  By looking at http://json.schemastore.org/project, `copyToOutput` is a property under `buildOptions`, but `publishOptions` is not. When moving `publishOptions` to `buildOptions` under `frameworks`, it gets ignored by dotnet restore/build/publish.\n",
      "created_at": "2016-06-22T19:11:02Z",
      "updated_at": "2016-06-22T19:11:02Z"
    }
  ],
  "created_at": "2016-06-21T22:41:50Z",
  "number": 1168,
  "state": "closed",
  "title": "Add Activities.dlls to Github",
  "updated_at": "2016-06-22T19:11:02Z"
}