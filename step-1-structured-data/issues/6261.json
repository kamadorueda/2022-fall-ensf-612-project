{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6261",
  "author": "TylerLeonhardt",
  "body": "Consider the following example:\r\n```powershell\r\nSplit-Path -Parent \\\\server\\path\r\n```\r\nvs\r\n```powershell\r\nSplit-Path -Leaf \\\\server\\path\r\n```\r\n\r\nthis is really not consistent.\r\n\r\nit should be `-Parent` and `-Child` or `-Root` and `-Leaf`\r\n\r\nsince we don't want to cause breaking changes... we should have a couple of parameter aliases:\r\n`-Root` is an alias of `-Parent` and `-Child` is an alias of `-Leaf`",
  "closed_at": "2019-02-19T23:09:31Z",
  "comments": [
    {
      "author": "TylerLeonhardt",
      "author_association": "MEMBER",
      "body": "@SigFyg since you're now kinda familiar with this portion of the code, would you like to give this a try? We're here to help!\r\n\r\nHere are some docs on parameter aliases... should be a simple addition:\r\nhttps://msdn.microsoft.com/en-us/library/dd878292(v=vs.85).aspx\r\n\r\n@SigFyg is a student I met at HackIllinois.",
      "created_at": "2018-02-27T19:21:58Z",
      "updated_at": "2018-02-27T19:21:58Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I'd prefer -Root/-Leaf as parameters and -Parent/-Child as aliases.",
      "created_at": "2018-02-27T19:35:45Z",
      "updated_at": "2018-02-27T19:35:45Z"
    },
    {
      "author": "RichardSiddaway",
      "author_association": "NONE",
      "body": "The original parameters  Parent\\Leaf should remain with root\\child as appropriate aliases. Changing the original parameters will cause more problems than its worth",
      "created_at": "2018-02-27T19:59:32Z",
      "updated_at": "2018-02-27T19:59:32Z"
    },
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "+1, I don't think that fixing slight inconsistency worth the hustle of even adding the aliases, not to mention rename of the parameter with all the documentation implications. Another thing to consider is the knowledge base accumulated other the years on the internet - people will continue to use the old names because this is what google shows them on StackOverflow and such.",
      "created_at": "2018-02-27T20:16:02Z",
      "updated_at": "2018-02-27T20:16:02Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@vors certainly true for existing users.  For new users (or even some existing users...) it's very natural to assume that if `-Parent` works, the natural counter-part is `-Child`, not `-Leaf`. ",
      "created_at": "2018-02-27T22:55:10Z",
      "updated_at": "2018-02-27T22:55:10Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "I can see the appeal of the strong correlation between \"parent/child\" but for me, `-Leaf` makes a stronger statement i.e. a \"leaf node\" has no children whereas a \"child node\" can have children.  ",
      "created_at": "2018-02-27T23:20:01Z",
      "updated_at": "2018-02-27T23:20:01Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@rkeithhill that's a good point and maybe explains the current behavior:\r\n\r\n```powershell\r\nsplit-path a/b/c -parent\r\na/b\r\nsplit-path a/b/c -leaf\r\nc\r\n```\r\n\r\nIf we follow this behavior, then `-root` should return `a` and `-child` should return `b/c` I guess?  At this point, I'm tending to agree that parent/child != root/leaf",
      "created_at": "2018-02-28T05:23:48Z",
      "updated_at": "2018-02-28T05:23:48Z"
    },
    {
      "author": "AikenBM",
      "author_association": "NONE",
      "body": "I agree that `-Root` is not a correct term to use here at all.  The root directory of the path `C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\powershell.exe` isn't `C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\`.  It's `C:\\`.  The root of a path is the highest level, not one level higher.\r\n\r\n`Test-Path`'s parameters use `-Container` and `-Leaf`, but that doesn't make sense for `Split-Path`, either.  What does \"the container of `C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\`\" mean?  For that matter, what does \"the leaf of ``C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\`\" mean?  Technically, `v1.0` isn't a leaf.  `-Parent` and `-Child` is the only thing that really makes sense here.\r\n",
      "created_at": "2018-02-28T20:44:55Z",
      "updated_at": "2018-02-28T20:45:54Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@AikenBM:\r\n\r\nRe `-Root`:\r\n\r\nI agree that `-Root` is inappropriate, for the reasons you state.\r\n\r\nRe `-Leaf`:\r\n\r\n> Technically, v1.0 isn't a leaf. \r\n\r\nIt is, just in a different sense than used by `Test-Path`:\r\n\r\n* With `Split-Path`, a leaf is a property of an _abstract path_: It is a path's _last component_, irrespective of what that path represents in the real world (and whether it can have \"children\" or not). As such, _every_ path has a leaf.\r\n\r\n* By contrast, `Test-Path` examines precisely what _item type_ a path refers to and tests its _intrinsic (non-)ability_ to have child items. In this sense, there are providers that have no \"leaf\" items at all, such as the registry provider, whose items are (just) registry _keys_, and all keys can have child keys.\r\n\r\nThis conflation can be confusing, but you could argue that it is `Test-Path`'s use of the term that is less intuitive.\r\n\r\nRe `-Child`:\r\n\r\n**There is no need for symmetry of _terms_ here, because there is no symmetry of _concepts_:**\r\n\r\nThe starting point is a given path, whose components `Split-Path` extracts.\r\n\r\nAll you need are terms for the _components_ you want to extract, and _parent_ and _leaf_ are sensible names for the components in question, from a tree/path viewpoint:\r\n\r\n* `-Leaf` is the input path's last component.\r\n* `-Parent` is the input path's parent path (the path you get when you drop the leaf component)\r\n\r\nThere is no \"child\" here - only the input path _itself_ - and its components.\r\n\r\n---\r\n\r\nIn short: I don't see a need for a change here.\r\n\r\n\r\n\r\n",
      "created_at": "2018-03-03T03:27:01Z",
      "updated_at": "2018-03-03T03:27:01Z"
    }
  ],
  "created_at": "2018-02-27T19:20:52Z",
  "labels": [],
  "number": 6261,
  "state": "closed",
  "title": "`-Parent` and `-Leaf` on `Split-Path` is not consistent",
  "updated_at": "2019-02-20T04:38:09Z"
}