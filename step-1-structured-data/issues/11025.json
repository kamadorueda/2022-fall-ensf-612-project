{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11025",
  "author": "frippe75",
  "body": "# Support Question\r\n\r\nHitting the \"Stream was too long\" at 2GB. \r\nI was hoping using `AllowWriteStreamBuffering=$false`  in HttpWebRequest\r\n\r\n```PowerShell\r\nMy-Upload : Stream was too long. \r\nAt line:1 char:1\r\n+ My-Upload -File ./file.iso                                                                                                                 + ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ \r\n+ CategoryInfo          : NotSpecified: (:) [My-Upload], IOException  \r\n+ FullyQualifiedErrorId : IOException,My-Upload \r\n``` \r\n\r\nRunning under Linux and have seen document pointing out \r\ngcAllowVeryLargeObjects in the app.config file but can this be set somewhere?\r\n\r\n```PowerShell\r\nPS /home/frta/> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.2.3\r\nPSEdition                      Core\r\nGitCommitId                    6.2.3\r\nOS                             Linux 3.10.0-957.1.3.el7.x86_64 #1 SMP Thu Nov 29 14:49:43 UTC 2018\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```",
  "closed_at": "2019-11-10T17:00:19Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@frippe75 Thanks for your report. I think it is dup https://github.com/PowerShell/PowerShell/issues/4129",
      "created_at": "2019-11-09T16:21:16Z",
      "updated_at": "2019-11-09T16:21:16Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as duplicate and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2019-11-10T17:00:18Z",
      "updated_at": "2019-11-10T17:00:18Z"
    },
    {
      "author": "frippe75",
      "author_association": "NONE",
      "body": "Well... Opening an issue one day. Then a day later (on a Sunday) it closed.\r\nAlso based on a \"I think it is a dup\".\r\n\r\nNot really sure about that. Tried to look into both Invoke-RestMethod as well as Invoke-WebRequest but could not find any support for or against that claim.\r\n",
      "created_at": "2019-11-10T18:21:33Z",
      "updated_at": "2019-11-10T18:21:33Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@frippe75 see here: https://github.com/PowerShell/PowerShell/issues/4129#issuecomment-491452090\r\n\r\nWithout seeing the actual code you're using we can provide only limited advice, but it does look like you're either using one of the web cmdlets or the same API that they use.\r\n\r\nAs @daxian-dbw notes in the linked issue, .NET has limitations on the maximum memory consumed per object. The property you mentioned needs to be set in the project file itself before compiling the project, so you'd need to, build pwsh from source with the property set to workaround it if you want to use the API this way from PowerShell at the moment.\r\n\r\nI'm unsure what the possible side effects from setting that flag in a project may be, so I don't know whether it's feasible to have PowerShell set that flag then it is built normally.",
      "created_at": "2019-11-10T20:04:38Z",
      "updated_at": "2019-11-10T20:04:38Z"
    }
  ],
  "created_at": "2019-11-09T09:00:20Z",
  "labels": [
    "Resolution-Duplicate",
    "Issue-Question",
    "WG-Cmdlets-Utility"
  ],
  "number": 11025,
  "state": "closed",
  "title": "Why am I getting \"Stream too long\" when using AllowWriteStreamBuffering=$false",
  "updated_at": "2019-11-10T20:04:39Z"
}