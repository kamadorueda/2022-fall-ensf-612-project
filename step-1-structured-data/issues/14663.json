{
  "_url": "https://github.com/PowerShell/PowerShell/issues/14663",
  "author": "B4Art",
  "body": "## Summary of the new feature/enhancement\r\n\r\n$wordToComplete* filter should always be used at the end of the scriptblock, otherwise you will give unexpected result to the user.\r\n\r\nAnother suggetion is to use object embeded Where and ForEach:\r\n```\r\n(\r\n<your code>\r\n).Where( {\r\n    $_.Name -like \"$wordToComplete*\"\r\n }).ForEach( {\r\n    [System.Management.Automation.CompletionResult]::new($_.Name, $_.Name, 'ParameterValue', $_.Name)\r\n })\r\n```\r\nThis will work faster than:\r\n```\r\n(\r\n<your code>\r\n) | Where-Object {\r\n     $_.Name -like \"$wordToComplete*\"\r\n} | ForEach-Object {\r\n     [System.Management.Automation.CompletionResult]::new($_.Name, $_.Name, 'ParameterValue', $_.Name)\r\n}\r\n``` \r\n",
  "closed_at": "2021-01-26T14:12:29Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "What do you want to enhance in PowerShell Engine?",
      "created_at": "2021-01-25T14:08:25Z",
      "updated_at": "2021-01-25T14:08:25Z"
    },
    {
      "author": "B-Art",
      "author_association": "NONE",
      "body": "It is not about the Powershell enige itself. More part of the documentation. To let People know that optimization can be achiefed by another option within PowerShell.\r\n\r\nAt the same time I found a way to tabcomplete through NotePropertyNames of a previous parameter for a second parameter.\r\n\r\nI build a function:\r\n```\r\nfunction Get-Between{\r\n\t[CmdletBinding()]\r\n\tParam (\r\n\t\t[Parameter(Mandatory, ValueFromPipeline, ValueFromPipelineByPropertyName, Position = 0)]\r\n\t\t[System.Object]$List,\r\n\t\t[Parameter(Mandatory, Position = 1)]\r\n\t\t[string] $NotePropertyName,\r\n\t\t[Parameter(Position = 2)]\r\n\t\t[switch] $XorNotBetween\r\n\t)\r\n\t\r\n\tBegin {\r\n\t\t$min = ($List.$NotePropertyName | Measure-Object -Minimum).Minimum\r\n\t\t$max = ($List.$NotePropertyName | Measure-Object -Maximum).Maximum\r\n\t} Process {\r\n\t\tIf ($XorNotBetween) {\r\n\t\t\tWrite-Output $List.Where({$_.$NotePropertyName -in ($min, $max)})\r\n\t\t} else {\r\n\t\t\tWrite-Output $List.Where({$_.$NotePropertyName -notin ($min, $max)})\r\n\t\t}\r\n\t} End {\r\n\t}\r\n}\r\n#\r\n$GetNotePropertyNameCompleter = {\r\n\tparam($commandName, $parameterName, $wordToComplete, $commandAst, $fakeBoundParameter)\r\n\t( $fakeBoundParameter[\"List\"] | Get-Member -MemberType NoteProperty ).Where( {\r\n\t\t$_.Name -like \"$wordToComplete*\"\r\n\t} ).ForEach( {\r\n\t[System.Management.Automation.CompletionResult]::new($_.Name, $_.Name, 'ParameterValue', $_.Name)\r\n\t} )\r\n}\r\n\r\nRegister-ArgumentCompleter -CommandName Get-Between -ParameterName NotePropertyName -ScriptBlock $GetNotePropertyNameCompleter\r\n\r\n```\r\nIt works.\r\nThe next one is, in my opinion, better:\r\n\r\n```\r\nfunction Get-Between{\r\n\t[CmdletBinding()]\r\n\tParam (\r\n\t\t[Parameter(Mandatory, ValueFromPipeline, ValueFromPipelineByPropertyName, Position = 0)]\r\n\t\t[System.Object]$List,\r\n\t\t[Parameter(Mandatory, Position = 1)]\r\n\t\t[ValidateScript( {\r\n\t\t\tparam( $commandName, $parameterName, $wordToComplete, $commandAst, $fakeBoundParameter )\r\n\t\t\t( $fakeBoundParameter[\"List\"] | Get-Member -MemberType NoteProperty ).Where( {\r\n\t\t\t\t$_.Name -like \"$wordToComplete*\"\r\n\t\t\t} ).ForEach( {\r\n\t\t\t\t[System.Management.Automation.CompletionResult]::new($_.Name, $_.Name, 'ParameterValue', $_.Name)\r\n\t\t\t} ) \r\n\t\t} ) ]\r\n\t\t[string] $NotePropertyName,\r\n\t\t[Parameter(Position = 2)]\r\n\t\t[switch] $XorNotBetween\r\n\t)\r\n\t\r\n\tBegin {\r\n\t\t$min = ($List.$NotePropertyName | Measure-Object -Minimum).Minimum\r\n\t\t$max = ($List.$NotePropertyName | Measure-Object -Maximum).Maximum\r\n\t} Process {\r\n\t\tIf ($XorNotBetween) {\r\n\t\t\tWrite-Output $List.Where({$_.$NotePropertyName -in ($min, $max)})\r\n\t\t} else {\r\n\t\t\tWrite-Output $List.Where({$_.$NotePropertyName -notin ($min, $max)})\r\n\t\t}\r\n\t} End {\r\n\t}\r\n}\r\n```\r\nWhich breaks:\r\n```\r\nGet-Between: Cannot validate argument on parameter 'NotePropertyName'. Cannot index into a null array.\r\n```",
      "created_at": "2021-01-25T16:05:47Z",
      "updated_at": "2021-01-25T16:11:54Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@B-Art The repository is only for PowerShell Core developers. It is not right place to share your experience. Please use other resources for this.",
      "created_at": "2021-01-25T16:30:54Z",
      "updated_at": "2021-01-25T16:30:54Z"
    },
    {
      "author": "B-Art",
      "author_association": "NONE",
      "body": "Would be nice to know to which source you mean?",
      "created_at": "2021-01-25T16:41:51Z",
      "updated_at": "2021-01-25T16:41:51Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@B-Art, there are two options, which aren't mutually exclusive:\r\n\r\n* If you feel the _documentation_ is lacking / needs correction / a new topic should be created, open issues (and possible create PRs) at the _documentation_ repo, https://github.com/MicrosoftDocs/PowerShell-Docs/issues (you can also create an issue direct from an existing online help topic to suggest a correction or improvement to it, specifically.\r\n\r\n* If you (possibly in addition) want to _share PowerShell tips_, use a forum such as Stack Overflow (you can ask a question that describes your scenario and then self-answer).\r\n\r\n  * That said, you may find that such tips already exist; for instance, [this answer](https://stackoverflow.com/a/48888108/45375) discusses the relative performance of the `ForEach-Object` cmdlet vs. the `.ForEach()` array method, and [this answer](https://stackoverflow.com/a/51118870/45375) shows use of the parameter-level `[ArgumentCompleter()]` attribute.\r\n\r\n\r\n\r\nOther forums: \r\n\r\n* The [Slack](https://join.slack.com/t/powershell/shared_invite/enQtMzA3MDcxNTM5MTkxLTBmMWIyNzhkYzVjNGRiOTgxZmFlN2E0ZmVmOWU5NDczNTY2NDFhZjFlZTM1MTZiMWIzZDcwMGYzNjQ3YTRkNWM) and [Discord](https://discordapp.com/invite/AtzXnJM) community chat forums (they seamlessly talk to each other).\r\n \r\n* The [PowerShell.org](https://powershell.org/forums/) forum for searching or posting questions about PowerShell.\r\n\n\n<blockquote><img src=\"https://repository-images.githubusercontent.com/44411511/850abe80-7ca6-11e9-886f-a1b13b275ae0\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/MicrosoftDocs/PowerShell-Docs\">MicrosoftDocs/PowerShell-Docs</a></strong></div><div>The official PowerShell documentation sources. Contribute to MicrosoftDocs/PowerShell-Docs development by creating an account on GitHub.</div></blockquote>",
      "created_at": "2021-01-25T17:48:12Z",
      "updated_at": "2021-01-25T17:48:14Z"
    },
    {
      "author": "B4Art",
      "author_association": "NONE",
      "body": "Thanx again @mklement0 ",
      "created_at": "2021-01-26T14:12:29Z",
      "updated_at": "2021-01-26T14:12:29Z"
    }
  ],
  "created_at": "2021-01-25T10:08:32Z",
  "labels": [
    "Issue-Enhancement",
    "Resolution-Answered"
  ],
  "number": 14663,
  "state": "closed",
  "title": "When creating a scriptblock for Register-ArgumentCompleter Faster Result using Object imbedded Where and ForEach",
  "updated_at": "2021-01-26T14:12:29Z"
}