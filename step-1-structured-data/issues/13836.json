{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13836",
  "author": "mklement0",
  "body": "## Summary of the new feature/enhancement\r\n\r\nAs a user, I want to be notified when a cast doesn't work as intended:\r\n\r\n```powershell\r\n# OK - a statement-terminating error occurs if the operand cannot be cast to [int]\r\nPS> [int] 'Not a number.'\r\nInvalidArgument: Cannot convert value \"Not a number.\" to type \"System.Int32\". Error: \"Input string was not in a correct format.\"\r\n```\r\n\r\nHowever, this doesn't currently work as intended with a `[pscustomobject]` cast:\r\n\r\n```powershell\r\n# A meaningless cast:\r\n# !! Seemingly quietly ignored - in reality, the operand is simply wrapped in [psobject](!)\r\nPS> [pscustomobject] 42\r\n42\r\n```\r\n\r\nUnexpectedly, the above is equivalent to `[psobject] 42` and wraps the operand  in a large largely invisible `[psobject]` instance (except it isn't _always_ invisible - see #5579).\r\nWhile the utility of such a cast with `[psobject]` is questionably in itself, with `[pscustomobject]` it is downright puzzling (and even though _both_ type accelerators refer to `System.Management.Automation.PSObject`, PowerShell can and does treat them differently with a hashtable operand (see below)).\r\n\r\nThe only meaningful use of a `[pscustomobject]` cast is (currently) the _syntactic sugar_ supported with a single (ordered) `[hashtable]` operand, to convert a hash table to a custom object; e.g., `[pscustomobject] @{ one = 1; two = 2 }` (Sadly,  it doesn't work with  a generic ``Dictionary`2`` instance, though #13727 may change that; it also doesn't currently work as an _array_ cast - see #13838).\r\n\r\nAll other uses should report a statement-terminating error.\r\n\r\nNote: While this is technically a breaking change, existing instances of such casts amount to already broken code.\r\n\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> Unexpectedly, the above is equivalent to [psobject] 42 and wraps the operand in a large largely invisible [psobject] instance (except it isn't always invisible - see #5579).\r\n\r\nOh, I guess it is fundamental PowerShell behavior. It seems there was very old (rejected) PR for this.",
      "created_at": "2020-10-26T07:45:40Z",
      "updated_at": "2020-10-26T07:46:01Z"
    }
  ],
  "created_at": "2020-10-22T19:53:42Z",
  "number": 13836,
  "state": "open",
  "title": "Make meaningless [pscustomobject] casts report an error",
  "updated_at": "2020-10-26T07:46:21Z"
}