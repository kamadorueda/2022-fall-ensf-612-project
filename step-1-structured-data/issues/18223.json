{
  "_url": "https://github.com/PowerShell/PowerShell/issues/18223",
  "author": "aronweiler",
  "body": "### Prerequisites\r\n\r\n- [X] Write a descriptive title.\r\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- [X] Search the existing issues.\r\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\r\n\r\n### Steps to reproduce\r\n\r\nWhen I attempt to sign a PowerShell script using the following command from within the `mcr.microsoft.com/dotnet/sdk:6.0` docker image, I receive an unexpected exception.\r\n\r\n```\r\n$signingParameters = @{\r\n            FilePath      = <path to .ps1 here>\r\n            Certificate   = <successfully loaded certificate here>\r\n            HashAlgorithm = 'SHA256'\r\n            TimestampServer = <timestamp server>\r\n            IncludeChain  = 'Signer'\r\n        }\r\n\r\nSet-AuthenticodeSignature @signingParameters\r\n```\r\n\r\nThe certificate mentioned above is successfully loaded from a PFX file using the following command:\r\n``` powershell\r\nNew-Object System.Security.Cryptography.X509Certificates.X509Certificate2(<path to PFX>,<certificate password>,'DefaultKeySet')    \r\n```\r\n\r\nHere is the full PowerShell script I am using that contains the above code: [SignPowerShellScripts.txt](https://github.com/PowerShell/PowerShell/files/9718358/SignPowerShellScripts.txt)\r\n\r\n\r\n### Expected behavior\r\n\r\nI expect the `Set-AuthenticodeSignature` to successfully create and append the authenticode signature to the target .PS1 file.\r\n\r\nMy understanding of PowerShell Core is that this should work, since the runtime environment is Windows 10 (see environment data).  Likewise, the Set-AuthenticodeSignature commandlet exists, so it should function.\r\n\r\n\r\n### Actual behavior\r\n\r\nI get the following exception: \r\n```console\r\nSet-AuthenticodeSignature: C:\\temp\\SignPowerShellScripts.ps1:42\r\nLine |\r\n  42 |          Set-AuthenticodeSignature @signingParameters\r\n     |          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n     | Unable to load DLL 'cryptUI.dll' or one of its dependencies:\r\n     | The specified module could not be found. (0x8007007E)\r\n```\r\n\r\n### Error details\r\n\r\nGet-Error seems to be returning an odd result, as well: \r\n```console\r\nPS C:\\temp> Get-Error\r\nGet-Error\r\n\r\nException             :\r\n    Type           : System.Management.Automation.MethodInvocationException\r\n    ErrorRecord    :\r\n        Exception             :\r\n            Type    :\r\nSystem.Management.Automation.ParentContainsErrorRecordException\r\n            Message : Exception calling \"ReadLine\" with \"2\" argument(s):\r\n\"Specified method is not supported.\"\r\n            HResult : -2146233087\r\n        CategoryInfo          : NotSpecified: (:) [],\r\nParentContainsErrorRecordException\r\n        FullyQualifiedErrorId : NotSupportedException\r\n        InvocationInfo        :\r\n            ScriptLineNumber : 4\r\n            OffsetInLine     : 5\r\n            HistoryId        : -1\r\n            ScriptName       : C:\\program files\\powershell\\.store\\powershell.wi\r\nndows.x64\\7.2.5\\powershell.windows.x64\\7.2.5\\tools\\net6.0\\any\\Modules\\PSReadLin\r\ne\\PSReadLine.psm1\r\n            Line             :\r\n[Microsoft.PowerShell.PSConsoleReadLine]::ReadLine($host.Runspace,\r\n$ExecutionContext)\r\n\r\n            PositionMessage  : At C:\\program files\\powershell\\.store\\powershell\r\n.windows.x64\\7.2.5\\powershell.windows.x64\\7.2.5\\tools\\net6.0\\any\\Modules\\PSRead\r\nLine\\PSReadLine.psm1:4 char:5\r\n                               +\r\n[Microsoft.PowerShell.PSConsoleReadLine]::ReadLine($host.Runspace \u2026\r\n                               +\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n            PSScriptRoot     : C:\\program files\\powershell\\.store\\powershell.wi\r\nndows.x64\\7.2.5\\powershell.windows.x64\\7.2.5\\tools\\net6.0\\any\\Modules\\PSReadLin\r\ne\r\n            PSCommandPath    : C:\\program files\\powershell\\.store\\powershell.wi\r\nndows.x64\\7.2.5\\powershell.windows.x64\\7.2.5\\tools\\net6.0\\any\\Modules\\PSReadLin\r\ne\\PSReadLine.psm1\r\n            CommandOrigin    : Internal\r\n        ScriptStackTrace      : at PSConsoleHostReadLine, C:\\program files\\powe\r\nrshell\\.store\\powershell.windows.x64\\7.2.5\\powershell.windows.x64\\7.2.5\\tools\\n\r\net6.0\\any\\Modules\\PSReadLine\\PSReadLine.psm1: line 4\r\n    TargetSite     :\r\n        Name          : ConvertToMethodInvocationException\r\n        DeclaringType : System.Management.Automation.ExceptionHandlingOps,\r\nSystem.Management.Automation, Version=7.2.5.500, Culture=neutral,\r\nPublicKeyToken=31bf3856ad364e35\r\n        MemberType    : Method\r\n        Module        : System.Management.Automation.dll\r\n    Message        : Exception calling \"ReadLine\" with \"2\" argument(s):\r\n\"Specified method is not supported.\"\r\n    Data           : System.Collections.ListDictionaryInternal\r\n    InnerException :\r\n        Type       : System.NotSupportedException\r\n        TargetSite :\r\n            Name          : ReadLine\r\n            DeclaringType : Microsoft.PowerShell.PSConsoleReadLine\r\n            MemberType    : Method\r\n            Module        : Microsoft.PowerShell.PSReadLine2.dll\r\n        Message    : Specified method is not supported.\r\n        Source     : Microsoft.PowerShell.PSReadLine2\r\n        HResult    : -2146233067\r\n        StackTrace :\r\n   at Microsoft.PowerShell.PSConsoleReadLine.ReadLine(Runspace runspace,\r\nEngineIntrinsics engineIntrinsics, CancellationToken cancellationToken)\r\n   at Microsoft.PowerShell.PSConsoleReadLine.ReadLine(Runspace runspace,\r\nEngineIntrinsics engineIntrinsics)\r\n   at CallSite.Target(Closure , CallSite , Type , Object , Object )\r\n    Source         : System.Management.Automation\r\n    HResult        : -2146233087\r\n    StackTrace     :\r\n   at System.Management.Automation.ExceptionHandlingOps.ConvertToMethodInvocati\r\nonException(Exception exception, Type typeToThrow, String methodName, Int32\r\nnumArgs, MemberInfo memberInfo)\r\n   at CallSite.Target(Closure , CallSite , Type , Object , Object )\r\n   at System.Management.Automation.Interpreter.DynamicInstruction`4.Run(Interpr\r\netedFrame frame)\r\n   at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.\r\nRun(InterpretedFrame frame)\r\nCategoryInfo          : NotSpecified: (:) [], MethodInvocationException\r\nFullyQualifiedErrorId : NotSupportedException\r\nInvocationInfo        :\r\n    ScriptLineNumber : 4\r\n    OffsetInLine     : 5\r\n    HistoryId        : -1\r\n    ScriptName       : C:\\program files\\powershell\\.store\\powershell.windows.x6\r\n4\\7.2.5\\powershell.windows.x64\\7.2.5\\tools\\net6.0\\any\\Modules\\PSReadLine\\PSRead\r\nLine.psm1\r\n    Line             :\r\n[Microsoft.PowerShell.PSConsoleReadLine]::ReadLine($host.Runspace,\r\n$ExecutionContext)\r\n\r\n    PositionMessage  : At C:\\program files\\powershell\\.store\\powershell.windows\r\n.x64\\7.2.5\\powershell.windows.x64\\7.2.5\\tools\\net6.0\\any\\Modules\\PSReadLine\\PSR\r\neadLine.psm1:4 char:5\r\n                       +\r\n[Microsoft.PowerShell.PSConsoleReadLine]::ReadLine($host.Runspace \u2026\r\n                       +\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    PSScriptRoot     : C:\\program files\\powershell\\.store\\powershell.windows.x6\r\n4\\7.2.5\\powershell.windows.x64\\7.2.5\\tools\\net6.0\\any\\Modules\\PSReadLine\r\n    PSCommandPath    : C:\\program files\\powershell\\.store\\powershell.windows.x6\r\n4\\7.2.5\\powershell.windows.x64\\7.2.5\\tools\\net6.0\\any\\Modules\\PSReadLine\\PSRead\r\nLine.psm1\r\n    CommandOrigin    : Internal\r\nScriptStackTrace      : at PSConsoleHostReadLine, C:\\program files\\powershell\\.\r\nstore\\powershell.windows.x64\\7.2.5\\powershell.windows.x64\\7.2.5\\tools\\net6.0\\an\r\ny\\Modules\\PSReadLine\\PSReadLine.psm1: line 4\r\n```\r\n\r\n### Environment data\r\n\r\n```powershell\r\nPS C:\\temp> $PSVersionTable\r\n$PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.5\r\nPSEdition                      Core\r\nGitCommitId                    7.2.5\r\nOS                             Microsoft Windows 10.0.17763\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\n\r\n### Visuals\r\n\r\n_No response_",
  "closed_at": null,
  "comments": [],
  "created_at": "2022-10-05T19:23:48Z",
  "labels": [
    "Needs-Triage"
  ],
  "number": 18223,
  "state": "open",
  "title": "PowerShell Set-AuthenticodeSignature breaks when attempting to sign a .ps1 file from inside a Windows (dotnet/sdk:6.0) docker container",
  "updated_at": "2022-10-05T19:30:40Z"
}