{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3225",
  "author": "WernerMairl",
  "body": "Steps to reproduce\r\n------------------\r\nexecute the following script (as ps1 file)\r\n\r\n```powershell\r\n\r\nfunction Get-Sample\r\n{\r\n    [cmdletbinding()]\r\n    param\r\n    (\r\n       [parameter(Mandatory = $true)][string[]]$Data \r\n    )\r\n    Write-Verbose \"$($Data.Length)\";\r\n}\r\n\r\n$ErrorActionPreference = \"Stop\";\r\nGet-Sample -Data @(\"\",\"xx\");\r\n\r\n```\r\n\r\n\r\n\r\n\r\nExpected behavior\r\n-----------------\r\nscript execution without exception\r\nthe (mandatory) argument exists and is not empty, ther is no \"ValidateNotNullOrEmpty\" Validation so i expect that the argument is accepted as valid.\r\n\r\nWorkaround: if you set Mandatory to \"false\" the sample is working and the argument-array contains 2 items!\r\n\r\n\r\nActual behavior\r\n---------------\r\nException:\r\nGet-Sample : Cannot bind argument to parameter 'Data' because it is an empty string.\r\n\r\nEnvironment data\r\n----------------\r\n\r\n\r\n```powershell\r\nName                           Value                                                                                                                                                                                               \r\n----                           -----                                                                                                                                                                                               \r\nPSVersion                      5.1.14393.693                                                                                                                                                                                       \r\nPSEdition                      Desktop                                                                                                                                                                                             \r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}                                                                                                                                                                             \r\nBuildVersion                   10.0.14393.693                                                                                                                                                                                      \r\nCLRVersion                     4.0.30319.42000                                                                                                                                                                                     \r\nWSManStackVersion              3.0                                                                                                                                                                                                 \r\nPSRemotingProtocolVersion      2.3                                                                                                                                                                                                 \r\nSerializationVersion           1.1.0.1                                                                                                                                                                                             \r\n\r\n\r\n```\r\n",
  "closed_at": "2017-03-01T18:31:50Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Usually  we use unary operator `,` with arrays:\r\n```powershell\r\nGet-Sample -Data (,@(\"\",\"xx\"))\r\n```\r\nI believe that this is \"by design\". Samples https://rkeithhill.wordpress.com/2007/09/24/effective-powershell-item-8-output-cardinality-scalars-collections-and-empty-sets-oh-my/\r\n",
      "created_at": "2017-02-28T14:12:53Z",
      "updated_at": "2017-02-28T14:12:53Z"
    },
    {
      "author": "WernerMairl",
      "author_association": "NONE",
      "body": "Ilya, thank you!\r\ntechnically that sounds logically.\r\nFor me that means that i change the arguments of my function so that it works/looks better.\r\n\r\nfeedback usability: it was a unexpected behavior and i takes some time to find the reason for the exception... so any improvement here can be helpful for a lot of people.\r\n\r\n",
      "created_at": "2017-03-01T05:15:30Z",
      "updated_at": "2017-03-01T05:15:30Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "This is by design.\r\n\r\nCmdlets typically accept parameters of type `string[]` so that they can process objects via the pipeline in the same way that they would if not passed in the pipeline.\r\n\r\nTo be concrete, consider: \r\n\r\n```PowerShell\r\n$jobNames = \"Job1\",\"Job2\"\r\n<#1#> $jobNames | Get-Job | Receive-Job\r\n<#2#> Get-Job -Name $jobNames | Receive-Job\r\n```\r\n\r\nJob objects should stream to `Receive-Job` either way - so a cmdlet accepts a `string[]` and prcoesses each element in it's `Process` block/method even though in the pipeline scenario - that array will have a single element.\r\n\r\nBecause of this - and the desire to validate parameters - we must validate the elements of the array.",
      "created_at": "2017-03-01T18:31:50Z",
      "updated_at": "2017-03-01T18:31:50Z"
    }
  ],
  "created_at": "2017-02-28T06:30:19Z",
  "labels": [
    "Resolution-By Design"
  ],
  "number": 3225,
  "state": "closed",
  "title": "Parameter Binding String Array",
  "updated_at": "2017-03-01T18:31:56Z"
}