{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5588",
  "author": "axelheer",
  "body": "Building and debugging a Cmdlet based on .NET Standard and PowerShell Standard doesn't work very well as soon as the module has any external dependency, since there doesn't seem to be any support for \"Microsoft.Extensions.DependencyModel\" (a.k.a. the .deps file).\r\n\r\nIt's even not possible to initialize a DependencyContext in some more or less hacky way, since the \"Microsoft.Extensions.DependencyModel\" package is a dependency itself. It would be nice, if PowerShell checks for any DependencyModel during module load or something like that.\r\n\r\n**Example:**\r\n\r\nPowerShell.DependencyModelIssue.csproj\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netstandard2.0</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"NeinLinq.Queryable\" Version=\"2.2.0\" />\r\n    <PackageReference Include=\"PowerShellStandard.Library\" Version=\"3.0.0-preview-01\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\nTestDependency.cs (doesn't make much sense, just to reproduce this issue)\r\n```cs\r\nusing System.Management.Automation;\r\nusing NeinLinq;\r\n\r\nnamespace PowerShell.DependencyModelIssue\r\n{\r\n    [Cmdlet(VerbsDiagnostic.Test, \"Dependency\")]\r\n    public class TestDependency : Cmdlet\r\n    {\r\n        [Parameter]\r\n        public SwitchParameter Switch { get; set; }\r\n\r\n        protected override void ProcessRecord()\r\n        {\r\n            var predicate = DynamicQuery.CreatePredicate<TestDependency>(\"Switch\", DynamicCompare.NotEqual, null);\r\n\r\n            WriteObject($\"Look what I've done: {predicate.Compile()(this)}.\");\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nlaunchSettings.json\r\n```js\r\n{\r\n  \"profiles\": {\r\n    \"PowerShell.DependencyModelIssue\": {\r\n      \"commandName\": \"Executable\",\r\n      \"executablePath\": \"C:\\\\Program Files\\\\PowerShell\\\\6.0.0-rc\\\\pwsh.exe\",\r\n      \"commandLineArgs\": \"-ExecutionPolicy Unrestricted -NoExit -Command \\\"Import-Module .\\\\PowerShell.DependencyModelIssue.dll\\\"\",\r\n      \"workingDirectory\": \"$(TargetDir)\"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n**Workaround:**\r\n\r\nPowerShell.DependencyModelIssue.csproj\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netstandard2.0</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <PropertyGroup>\r\n    <!-- Copy all the deps so PowerShell is able to find them... -->\r\n    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"NeinLinq.Queryable\" Version=\"2.2.0\" />\r\n    <PackageReference Include=\"PowerShellStandard.Library\" Version=\"3.0.0-preview-01\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n",
  "closed_at": "2021-01-15T05:03:35Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw Could you please comment?",
      "created_at": "2017-11-30T10:50:39Z",
      "updated_at": "2017-11-30T10:50:39Z"
    },
    {
      "author": "Jaykul",
      "author_association": "CONTRIBUTOR",
      "body": "Is this fixed with the new changes to PowerShell's assembly load context?",
      "created_at": "2018-03-08T06:38:17Z",
      "updated_at": "2018-03-08T06:38:17Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Close as stale issue. Feel free to continue discussion.",
      "created_at": "2021-01-15T05:03:31Z",
      "updated_at": "2021-01-15T05:03:31Z"
    }
  ],
  "created_at": "2017-11-30T10:19:11Z",
  "number": 5588,
  "state": "closed",
  "title": "Support for DependencyModel",
  "updated_at": "2021-01-15T05:03:35Z"
}