{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3234",
  "author": "JPBlanc",
  "body": "Steps to reproduce\r\n------------------\r\nJust try to execute : \r\n\r\n`[Environment]::OSVersion`\r\n\r\nExpected behavior\r\n-----------------\r\nI expect to receive the actual Linux version.\r\n\r\nActual behavior\r\n---------------\r\n\r\n```\r\nOSVersion's call to GetVersionEx failed.\r\nAt line:1 char:1\r\n+ [Environment]::OSVersion\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : OperationStopped: (:) [], InvalidOperationException\r\n    + FullyQualifiedErrorId : System.InvalidOperationException\r\n```\r\n\r\n\r\nEnvironment data\r\n----------------\r\n<!-- provide the output of $PSVersionTable -->\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value                                                                                                                           \r\n----                           -----                                                                                                                           \r\nPSVersion                      6.0.0-alpha                                                                                                                     \r\nPSEdition                      Core                                                                                                                            \r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}                                                                                                         \r\nBuildVersion                   3.0.0.0                                                                                                                         \r\nGitCommitId                    v6.0.0-alpha.16                                                                                                                 \r\nCLRVersion                                                                                                                                                     \r\nWSManStackVersion              3.0                                                                                                                             \r\nPSRemotingProtocolVersion      2.3                                                                                                                             \r\nSerializationVersion           1.1.0.1 \r\n```\r\n\r\nI test on CentOs 7 : \r\n\r\n```\r\n  Static hostname: jpbcentos7.localdomain\r\n         Icon name: computer-vm\r\n           Chassis: vm\r\n        Machine ID: 71700907a32f43cfa9848b194cb4d2f5\r\n           Boot ID: f18814da980f418c85e3229904c01d03\r\n    Virtualization: vmware\r\n  Operating System: CentOS Linux 7 (Core)\r\n       CPE OS Name: cpe:/o:centos:centos:7\r\n            Kernel: Linux 3.10.0-514.6.1.el7.x86_64\r\n      Architecture: x86-64\r\n```\r\n\r\n\r\n\r\n",
  "closed_at": "2017-03-01T19:40:13Z",
  "comments": [
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "This will get fixed when System.Environment.OSVersion is brought back into .NET Core (in 2.0). Tracking this work right now at #1635",
      "created_at": "2017-03-01T19:40:13Z",
      "updated_at": "2017-03-01T19:40:13Z"
    }
  ],
  "created_at": "2017-03-01T17:39:00Z",
  "number": 3234,
  "state": "closed",
  "title": "Getting environment variable OSVersion generate an exception",
  "updated_at": "2017-03-01T19:40:24Z"
}