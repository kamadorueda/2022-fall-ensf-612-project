{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4295",
  "author": "mi-hol",
  "body": "Steps to reproduce\r\n------------------\r\nthe script error.ps1 is attached.\r\n\r\n1. download WinSCP .Net assembly from [https://winscp.net/download/WinSCP-5.9.6-Automation.zip](url)\r\n2. unzip in a directory named  `C:\\PS_B4`)\r\n**Note:**\r\nin case a different directory name is choosen, script code below needs to be adapted before running it!\r\n$WinSCPnet_dll = (\"C:\\PS_B4\\WinSCPnet.dll\")\r\n3. copy attached script: error.ps1 inthe the same directory\r\n4. run powershell.exe\r\n.\\error.ps1 \r\n\r\nExpected behavior\r\n-----------------\r\n\r\nno error\r\n\r\nand text:\r\nscript: ended successfully\r\n\r\nActual behavior\r\n---------------\r\n\r\nerror gets \r\n\r\nthrown:\r\n\r\nException calling \".ctor\" with \"0\" argument(s): \"Could not load type 'System.Diagnostics.PerformanceCounter' from assembly 'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.\"\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.0-beta\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.0-beta.4\r\nOS                             Microsoft Windows 10.0.14393\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n```\r\n",
  "closed_at": "2017-07-20T16:27:15Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@mi-hol Thanks for your report! Please add a _sample_ script to repo the error.",
      "created_at": "2017-07-19T18:09:54Z",
      "updated_at": "2017-07-19T18:09:54Z"
    },
    {
      "author": "mi-hol",
      "author_association": "NONE",
      "body": "@iSazonov  [error.ps1.txt](https://github.com/PowerShell/PowerShell/files/1160140/error.ps1.txt) is now available to repo bug\r\n",
      "created_at": "2017-07-19T18:55:58Z",
      "updated_at": "2017-07-19T18:58:57Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@mi-hol Thanks! \r\nI tried WinSCP module https://github.com/dotps1/WinSCP - it use the same dll and loads well. I manually load the dll from the module - loads well. I download WinSCP-5.9.6-Automation.zip and mannually load the dll from the package - loads well.\r\n\r\nCalling a WinSCP cmdlet raise an exception:\r\n```powershell\r\nException             : System.Management.Automation.MethodInvocationException:\r\n                         Exception calling \".ctor\" with \"0\" argument(s):\r\n                        \"Could not load type\r\n                        'System.Diagnostics.PerformanceCounter' from assembly\r\n                        'System, Version=4.0.0.0, Culture=neutral,\r\n                        PublicKeyToken=b77a5c561934e089'.\" --->\r\n                        System.TypeLoadException: Could not load type\r\n                        'System.Diagnostics.PerformanceCounter' from assembly\r\n                        'System, Version=4.0.0.0, Culture=neutral,\r\n                        PublicKeyToken=b77a5c561934e089'.\r\n                           at WinSCP.Logger..ctor()\r\n                           at WinSCP.Session..ctor()\r\n                           --- End of inner exception stack trace ---\r\n                           at System.Management.Automation.DotNetAdapter.Auxili\r\n                        aryConstructorInvoke(MethodInformation\r\n                        methodInformation, Object[] arguments, Object[]\r\n                        originalArguments) in C:\\Users\\sie\\Documents\\GitHub\\iSa\r\n                        zonov\\PowerShell\\src\\System.Management.Automation\\engin\r\n                        e\\CoreAdapter.cs:line 3776\r\n                           at System.Management.Automation.DotNetAdapter.Invoke\r\n                        ResolvedConstructor(MethodInformation bestMethod,\r\n                        Object[] newArguments, Object[] arguments) in C:\\Users\\\r\n                        sie\\Documents\\GitHub\\iSazonov\\PowerShell\\src\\System.Man\r\n                        agement.Automation\\engine\\CoreAdapter.cs:line 3940\r\n                           at System.Management.Automation.DotNetAdapter.Constr\r\n                        uctorInvokeDotNet(Type type, ConstructorInfo[]\r\n                        constructors, Object[] arguments) in C:\\Users\\sie\\Docum\r\n                        ents\\GitHub\\iSazonov\\PowerShell\\src\\System.Management.A\r\n                        utomation\\engine\\CoreAdapter.cs:line 3930\r\n                           at Microsoft.PowerShell.Commands.NewObjectCommand.Ca\r\n                        llConstructor(Type type, ConstructorInfo[]\r\n                        constructors, Object[] args) in C:\\Users\\sie\\Documents\\\r\n                        GitHub\\iSazonov\\PowerShell\\src\\Microsoft.PowerShell.Com\r\n                        mands.Utility\\commands\\utility\\new-object.cs:line 71\r\nTargetObject          :\r\nCategoryInfo          : InvalidOperation: (:) [New-Object],\r\n                        MethodInvocationException\r\nFullyQualifiedErrorId : ConstructorInvokedThrowException,Microsoft.PowerShell.C\r\n                        ommands.NewObjectCommand\r\nErrorDetails          :\r\nInvocationInfo        : System.Management.Automation.InvocationInfo\r\nScriptStackTrace      : at New-WinSCPSession, C:\\Program Files\\WindowsPowerShel\r\n                        l\\Modules\\winscp\\Public\\New-WinSCPSession.ps1: line 128\r\n                        at <ScriptBlock>, <No file>: line 1\r\nPipelineIterationInfo : {}\r\n\r\n```",
      "created_at": "2017-07-20T07:41:45Z",
      "updated_at": "2017-07-20T12:14:55Z"
    },
    {
      "author": "mi-hol",
      "author_association": "NONE",
      "body": "@iSazonov do the comments mean that you can't reproduce the error using my error.ps1 script?",
      "created_at": "2017-07-20T10:16:16Z",
      "updated_at": "2017-07-20T10:16:16Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@mi-hol I edited my message.\r\n\r\nIt seems CoreFX don't implement `System.Diagnostics.PerformanceCounter` \r\nSee https://github.com/dotnet/corefx/issues/3906\r\nand https://github.com/dotnet/corefx/pull/17898 - \"Only refs adjusted!\"\r\n\r\n/cc @daxian-dbw Is it problem for PowerShell Core RTM?",
      "created_at": "2017-07-20T12:22:48Z",
      "updated_at": "2017-07-20T12:22:48Z"
    },
    {
      "author": "mi-hol",
      "author_association": "NONE",
      "body": "Also #4272 & #4303 seem related to the same issue.\r\nFrom my view PerformanceCounter is frequently used and all metrics are defined in\r\nPowerShell/src/Microsoft.PowerShell.Commands.Diagnostics/CoreCLR/Stubs.cs\r\ni.e. to calculate\r\n\r\n'        /// A difference timer that shows the total time between when the component\r\n        /// or process started and the time when this value is calculated.\r\n        /// </summary>\r\n        ElapsedTime = 807666944,'",
      "created_at": "2017-07-20T13:33:45Z",
      "updated_at": "2017-07-20T13:51:45Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "https://github.com/dotnet/corefx/issues/3906 is labelled with `Future` milestone, so it won't be available in .NET Core 2.0.\r\n@mi-hol please feel free to leave comments in that corefx issue, so as to let them know the user demands.",
      "created_at": "2017-07-20T16:22:46Z",
      "updated_at": "2017-07-20T16:23:11Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I wonder what is plans for our counter cmdlets? Should we make a workaround in the repo until we have CoreFX implementations? Have we a tracking Issue?\r\n\r\n/cc @TravisEz13",
      "created_at": "2017-07-20T17:28:52Z",
      "updated_at": "2017-07-20T17:28:52Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "#4306 is tracking the lack of counter CmdLets.\r\nI'm not aware of a workaround.",
      "created_at": "2017-07-20T17:36:38Z",
      "updated_at": "2017-07-20T17:36:38Z"
    },
    {
      "author": "mi-hol",
      "author_association": "NONE",
      "body": "@daxian-dbw in light of Joey Aiello's public community request to 'tell us what does and doesn\u2019t work for you on github'  I'm a bit puzzled by the unexpected close of a confirmed incompatibility.\r\nWe have been told numerous times that user feedback counts, now #4306 doesn't mention the error message a user will receive due to this incompatibly, hence I wonder how user feedback for this specific issue will be properly gathered?\r\n",
      "created_at": "2017-07-20T18:53:39Z",
      "updated_at": "2017-07-20T18:55:19Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@mi-hol We do welcome feedbacks and I appreciate you brought up this issue.\r\nThis issue was closed because the problem was understood and the resolution is out of the scope of powershell. The API/assembly it depends on is not available in `.NET Core 2.0` and `netstandard2.0`, and thus nothing can be done on the powershell side unless dotnet/corefx#3906 is fixed.",
      "created_at": "2017-07-20T20:43:17Z",
      "updated_at": "2017-07-20T20:43:39Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@mi-hol I edited your comment related to this issue in #4062 to add the root cause of this issue. That will help get all information we need in one place. See https://github.com/PowerShell/PowerShell/issues/4062#issuecomment-316414190",
      "created_at": "2017-07-20T21:04:31Z",
      "updated_at": "2017-07-20T21:04:53Z"
    },
    {
      "author": "mi-hol",
      "author_association": "NONE",
      "body": "@daxian-dbw Thanks! Hopefully the effort I put into opening & reproducing this bug is not wasted.",
      "created_at": "2017-07-20T23:20:02Z",
      "updated_at": "2017-07-20T23:20:02Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@mi-hol Your effort is truly appreciated. When reviewing comments reported in #4062, people can easily get here via the link to learn more information about the issue.\r\n\r\nThanks for bringing up your concern about this issue being closed. I should have better explained the \"why\" when closing it. Lesson learned :)",
      "created_at": "2017-07-21T00:46:15Z",
      "updated_at": "2017-07-21T00:46:15Z"
    }
  ],
  "created_at": "2017-07-19T16:31:25Z",
  "number": 4295,
  "state": "closed",
  "title": "bug: Could not load type 'System.Diagnostics.PerformanceCounter'",
  "updated_at": "2017-07-21T00:46:15Z"
}