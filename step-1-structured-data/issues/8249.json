{
  "_url": "https://github.com/PowerShell/PowerShell/issues/8249",
  "author": "iSazonov",
  "body": "## PR Summary\r\n\r\nSee https://github.com/PowerShell/PowerShell/pull/8237#issuecomment-438261700\r\n\r\n(Also there can be a race condition if some processes access the config file. I don't now how to fix.)\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` to the beginning of the title and remove the prefix when the PR is ready.\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] User-facing [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed - Issue link:\r\n- **Testing - New and feature**\r\n    - [x] Not Applicable or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n        - [ ] [Add `[feature]` if the change is significant or affects feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\r\n",
  "closed_at": "2018-11-28T18:09:57Z",
  "comments": [
    {
      "author": "anmenaga",
      "author_association": "CONTRIBUTOR",
      "body": "Restarted builds because of \"Get-PSGalleryApiAvailability : PowerShell Gallery is currently unavailable.  Please try again later.\"",
      "created_at": "2018-11-13T21:54:56Z",
      "updated_at": "2018-11-13T21:54:56Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@rjmholt A problem I indicated is that we don't process an exception if file is locked for read. Scenario: run two pwsh-s, one lock the config file, second is trying to access the file and - what? Wait and stop whole process? Currently we'll crash. On a system where many PowerShell processes run, this can cause unpredictable (rarely) crashes. (At minimum, we could not put an exclusive write lock.)",
      "created_at": "2018-11-14T04:16:56Z",
      "updated_at": "2018-11-14T04:16:56Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "Hmmmm. Well given that the config file is changed at runtime by `Set-ExecutionPolicy` (and possibly others), maybe it should crash (more gracefully) -- given that config files may be changed by the PowerShell session, maybe they are session specific?\r\n\r\nOtherwise we are forced to use some OS-level lock to get an atomic interleaving of PowerShell config writes?",
      "created_at": "2018-11-14T06:37:50Z",
      "updated_at": "2018-11-14T06:37:50Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I added a simple file unlock wait. I think it will resolve the inter process race condition in most of cases. Of cause an admin user can still exclusively open the file with read lock and crash pwsh processes. Seems it is an edge case.",
      "created_at": "2018-11-14T07:13:33Z",
      "updated_at": "2018-11-14T07:13:33Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "MSFT team please review new commit.",
      "created_at": "2018-11-14T09:35:41Z",
      "updated_at": "2018-11-14T09:35:41Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@anmenaga @TravisEz13 @SteveL-MSFT @adityapatwardhan @daxian-dbw @rjmholt \r\nPlease review last commit. The PR block  #8237 and my follow work.",
      "created_at": "2018-11-15T04:30:53Z",
      "updated_at": "2018-11-15T04:30:53Z"
    },
    {
      "author": "anmenaga",
      "author_association": "CONTRIBUTOR",
      "body": "I'm not a fan of this `WaitForFile` addition (and looped wait timers in general unless they are absolutely necessary).\r\nOriginal problem was intermittently sharing read access to the file between PS processes. `FileShare.ReadWrite` is good enough for this. I would remove `WaitForFile` addition (especially considering that it only partially addresses the issue that it's trying to address).\r\n",
      "created_at": "2018-11-15T18:58:20Z",
      "updated_at": "2018-11-15T18:58:20Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "Yes, sorry, only meant to discuss rather than request changes (couldn't find a good issue to discuss in)",
      "created_at": "2018-11-15T19:08:41Z",
      "updated_at": "2018-11-15T19:08:41Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> Original problem was intermittently sharing read access to the file between PS processes. \r\n\r\nOriginal problem is a bug that is _in-process_ race condition. It is hosting scenarios. Fixed by first commit.\r\nSecond commit is for _inter-process_ race condition. It is scenarios with many powershell processes (like background scheduled tasks). Fixed by second commit.\r\n\r\nI think both commits is important because pwsh crashed.\r\n\r\n>  looped wait timers in general unless they are absolutely necessary\r\n\r\nThe solution looks good for me because it is _very_ rare race condition and we will never block a process for long especially since we cache `powershell.config.json`.",
      "created_at": "2018-11-16T03:39:44Z",
      "updated_at": "2018-11-16T03:40:15Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "The looped wait timer approach I think looks good in comparison to the alternative: a corrupt powershell.config.json which ideally leads to a crash, but otherwise leads to one of the PowerShell processes incorrectly picking up a new configuration.\r\n\r\nI get the impression though that perhaps a shared mutable configuration between processes is something we should reconsider as an idea?",
      "created_at": "2018-11-16T04:11:14Z",
      "updated_at": "2018-11-16T04:11:14Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> I get the impression though that perhaps a __shared mutable configuration__ between processes is something we should reconsider as an idea?\r\n\r\nThis could be addressed by https://github.com/PowerShell/PowerShell-RFC/pull/111 too. ",
      "created_at": "2018-11-16T04:22:50Z",
      "updated_at": "2018-11-16T04:23:18Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@daxian-dbw Can you have a look at this?",
      "created_at": "2018-11-21T00:57:10Z",
      "updated_at": "2018-11-21T00:57:10Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@adityapatwardhan @daxian-dbw The PR block sequence of other PRs. Could you please continue?",
      "created_at": "2018-11-22T04:30:19Z",
      "updated_at": "2018-11-22T04:30:19Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@adityapatwardhan Please merge the PR.",
      "created_at": "2018-11-27T03:14:17Z",
      "updated_at": "2018-11-27T03:14:17Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@iSazonov Can you fix the two CodeFactor issues? Then the PR can be merged.",
      "created_at": "2018-11-27T18:09:23Z",
      "updated_at": "2018-11-27T18:09:23Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@adityapatwardhan CodeFactor issues was fixed.",
      "created_at": "2018-11-28T03:55:23Z",
      "updated_at": "2018-11-28T03:55:23Z"
    }
  ],
  "created_at": "2018-11-13T15:32:04Z",
  "number": 8249,
  "state": "closed",
  "title": "Fix race condition to access powershell.config.json",
  "updated_at": "2018-11-29T03:06:47Z"
}