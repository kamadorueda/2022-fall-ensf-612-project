{
  "_url": "https://github.com/PowerShell/PowerShell/issues/2571",
  "author": "raghushantha",
  "body": "I am attempting to build PowerShell in microsoft/windowsservercore:latest docker image. The version of Win10SDK downloaded from chocolatey does not install. We need to ensure that Start-PSBootstrap works across all images.\r\n\r\n@brycem has already reported this on [Chocolatey](https://chocolatey.org/packages/windows-sdk-10.0)\r\n\r\nI am opening this issue to to make sure we update the package name (if required), when a new version is available on chocolatey.\r\n\r\nSteps to reproduce\r\n------------------\r\n```\r\ndocker pull microsoft/windowsservercore\r\ndocker run -it microsoft/windowsservercore:latest\r\n\r\n#git clone PowerShell/PowerShell to c:\\PowerShell\r\nPS C:\\powershell> ipmo .\\build.psm1\r\nPS C:\\powershell> Start-PSBootStrap -Package -Force\r\n```\r\nExpected behavior\r\n-----------------\r\nbootstrapping succeeds\r\n\r\nActual behavior\r\n---------------\r\n```\r\nInstalling windows-sdk-10.0...\r\nERROR: Running [\"C:\\Users\\ContainerAdministrator\\AppData\\Local\\Temp\\chocolatey\\windows-sdk-10.0\\10.0.26624\\sdksetup.exe\" /Quiet /NoRestart /Log \"C:\\Users\\ContainerAdministrator\\AppData\\Local\\Temp\\chocolatey\\windows-sdk-10.0.log\" ] was not successful. Exit code was '-2147023293'. See log for possible error messages.\r\nThe install of windows-sdk-10.0 was NOT successful.\r\nError while running 'C:\\ProgramData\\chocolatey\\lib\\windows-sdk-10.0\\tools\\chocolateyInstall.ps1'.\r\n See log for details.\r\n\r\nChocolatey installed 0/1 packages. 1 packages failed.\r\n See the log for details (C:\\ProgramData\\chocolatey\\logs\\chocolatey.log).\r\n See the log for details (C:\\ProgramData\\chocolatey\\logs\\chocolatey.log).\r\nFailures\r\n - windows-sdk-10.0 (exited -2147023293) - Error while running 'C:\\ProgramData\\chocolatey\\lib\\windows-sdk-10.0\\tools\\chocolateyInstall.ps1'.(exited -2147023293) - Error while running 'C:\\ProgramData\\chocolatey\\lib\\windows-sdk-10.1\\tools\\ch\r\n See log for details.                                                                                                  o\r\nExecution of { choco install windows-sdk-10.0 -y } failed with exit code -2147023293\r\nAt C:\\powershell\\build.psm1:2074 char:13\r\n+             throw \"Execution of {$sb} failed with exit code $LASTEXIT ...\r\n+             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : OperationStopped: (Execution of { ...ode -2147023293:String) [], RuntimeException\r\n    + FullyQualifiedErrorId : Execution of { choco install windows-sdk-10.0 -y } failed with exit code -2147023293\r\n\r\n\r\n```\r\n\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\nPS C:\\powershell> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      5.1.14393.206\r\nPSEdition                      Desktop\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nBuildVersion                   10.0.14393.206\r\nCLRVersion                     4.0.30319.42000\r\nWSManStackVersion              3.0\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\n\r\n```\r\n",
  "closed_at": "2017-01-13T07:04:13Z",
  "comments": [
    {
      "author": "brycem",
      "author_association": "CONTRIBUTOR",
      "body": "I think we'd be well-served to switch to verifiable links to authoritative sources...  Chocolatey is a pretty soft target to upload malicious scripts that pass virus scans to...  Chocolatey is also not Nano-friendly. \n",
      "created_at": "2016-10-31T23:18:15Z",
      "updated_at": "2016-10-31T23:18:15Z"
    },
    {
      "author": "TSEO1",
      "author_association": "NONE",
      "body": "Hi, raghushantha. \nAre you slove problem? \nI have a same problem. But I downloaded standalone Windows 10 SDK from Microsoft.com.\n\nHere my Dockerfile:\n\n```\nFROM microsoft/windowsservercore:10.0.14393.321\nLABEL Description=\"Windows Server Core WinSDK\" Vendor=\"My\" Version=\"0.1.0\"\nADD distrib/StandaloneSDK.10.0.10240.0 /distrib\nRUN C:\\distrib\\sdksetup.exe /features OptionId.WindowsSoftwareDevelopmentKit /q /norestart\nRUN pushd \"C:\\ProgramData\\Package Cache\" && (rd /s /q \"C:\\ProgramData\\Package Cache\" 2>nul & popd)\nRUN pushd \"C:\\distrib\" && (rd /s /q \"C:\\distrib\" 2>nul & popd)\n```\n\nP.S.\nStandaloneSDK.10.0.10240.0 installed correctly on Windows Server Core 2016\nStandaloneSDK.10.0.14393.33 not installed even on Windows Server Core 2016\n",
      "created_at": "2016-11-09T10:00:57Z",
      "updated_at": "2016-11-09T11:00:10Z"
    },
    {
      "author": "brycem",
      "author_association": "CONTRIBUTOR",
      "body": "Looks like the reason 10.0.10240.0 installs is because it doesn't contain the 'Windows IP Over USB-x86_en-us.msi' feature which is what is failing and rolling everything back...  Where are you downloading it from?\n",
      "created_at": "2016-11-10T02:08:22Z",
      "updated_at": "2016-11-10T02:08:22Z"
    },
    {
      "author": "TSEO1",
      "author_association": "NONE",
      "body": "Hello, brycem.\nI previously downloaded SDKSETUP.EXE from Microsoft.com and saved SDK locally. But now I can't find a link for version 10.240.0.\nYes you are right about 'Windows IP Over USB-x86_en-us.msi' for version 10.0.14393.33.\nAnd for version 10240.0 in docker container package \"WindowsDesktopExtensionSDK_x86_en_us\" fails with error:\n\n```\nMSI (s) (6C:EC) [14:38:41:770]: Executing op: ActionStart(Name=GenUnionWinMD,,)\nMSI (s) (6C:EC) [14:38:41:770]: Executing op: CustomActionSchedule(Action=GenUnionWinMD,ActionType=3073,Source=BinaryData,Target=CAQuietExec,CustomActionData=\"C:\\Windows\\SysWOW64\\cmd.exe\" /C \"C:\\Program Files (x86)\\Windows Kits\\10\\bin\\x86\\GenerateUnionWinMD.cmd\")\nMSI (s) (6C:24) [14:38:41:800]: Invoking remote custom action. DLL: C:\\Windows\\Installer\\MSI2C5D.tmp, Entrypoint: CAQuietExec\nMSI (s) (6C:E8) [14:38:41:800]: Generating random cookie.\nMSI (s) (6C:E8) [14:38:41:808]: Created Custom Action Server with PID 880 (0x370).\nMSI (s) (6C:F4) [14:38:41:874]: Running as a service.\nMSI (s) (6C:F4) [14:38:41:879]: Hello, I'm your 32bit Elevated Non-remapped custom action server.\nCAQuietExec:  Microsoft (R) Generate UnionWinMD Tool version 10.0.2\nCAQuietExec:  Copyright (c) Microsoft Corporation\nCAQuietExec:  All rights reserved.\nCAQuietExec:  Error: You must run this script from an elevated command prompt.\nCAQuietExec:  Error 0x80070002: Command line returned an error.\nCAQuietExec:  Error 0x80070002: CAQuietExec Failed\nCustomAction GenUnionWinMD returned actual error code 1603 (note this may not be 100% accurate if translation happened inside sandbox)\nMSI (s) (6C:EC) [14:38:42:385]: Note: 1: 2265 2:  3: -2147287035 \n```\n\nI deleted \"package_WindowsDesktopExtensionSDK_x86_en_us\" entry in \"UserExperienceManifest.xml\" and SDK was successfully installed without this package.\n\nAlso I read page [https://social.msdn.microsoft.com/Forums/sqlserver/en-US/bfe645b4-2cec-4550-9b7d-c61bc9562bfd/docker-container-users-other-than-containeradministrator-in-tp5](url). But command \"runas\" has not worked in docker container.\n",
      "created_at": "2016-11-10T11:55:06Z",
      "updated_at": "2016-11-10T11:55:06Z"
    },
    {
      "author": "brycem",
      "author_association": "CONTRIBUTOR",
      "body": "I found the download (though my workaround for the desktop extension failure was less elegant :-) - https://raw.githubusercontent.com/brycem/PowerShell/docker/docker/nightly/windowsservercore/Dockerfile \n\nAll prerequisites are getting met for build, but I'm getting a build failure still, but we're getting close:\n\n  C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\bin\\amd64\\CL.exe /c /I\"C:\\PowerShell\\src\\powershell-native\\nati\nvemsh\\pwrshcommon\" /Zi /nologo /W3 /WX- /O1 /Ob2 /Oi /Oy- /GL /D WIN32 /D _WINDOWS /D NDEBUG /D CORECLR /D _AMD64_ /D _W\nIN64 /D AMD64 /D BIT64=1 /D _TARGET_AMD64_=1 /D WIN32 /D _WIN32 /D WINVER=0x0602 /D _WIN32_WINNT=0x0602 /D WIN32_LEAN_AN\nD_MEAN=1 /D _CRT_SECURE_NO_WARNINGS /D EnC_SUPPORTED /D UNICODE /D _UNICODE /D \"CMAKE_INTDIR=\\\"Release\\\"\" /D _UNICODE /D\n UNICODE /U_MT /GF /Gm- /EHa /MT /Zp8 /GS /Gy /fp:precise /Zc:wchar_t- /Zc:forScope /Zc:inline /GR- /Fo\"pwrshcommon.dir\\\nRelease\\\" /Fd\"pwrshcommon.dir\\Release\\pwrshcommon.pdb\" /Gd /TP /FC /Zl /errorReport:queue  /d2Zi+ /Zm200 /ZH:SHA_256 /g\nuard:cf \"C:\\PowerShell\\src\\powershell-native\\nativemsh\\pwrshcommon\\pwrshcommon.cpp\" \"C:\\PowerShell\\src\\powershell-native\n\\nativemsh\\pwrshcommon\\WinSystemCallFacade.cpp\" \"C:\\PowerShell\\src\\powershell-native\\nativemsh\\pwrshcommon\\ConfigFileRea\nder.cpp\"\n  pwrshcommon.cpp\nc:\\powershell\\src\\powershell-native\\nativemsh\\pwrshcommon\\nativemsh.h(14): fatal error C1083: Cannot open include file:\n'stdio.h': No such file or directory [C:\\PowerShell\\src\\powershell-native\\nativemsh\\pwrshcommon\\pwrshcommon.vcxproj]\n  WinSystemCallFacade.cpp\nc:\\powershell\\src\\powershell-native\\nativemsh\\pwrshcommon\\systemcallfacade.h(14): fatal error C1083: Cannot open include\n file: 'stdio.h': No such file or directory [C:\\PowerShell\\src\\powershell-native\\nativemsh\\pwrshcommon\\pwrshcommon.vcxpr\noj]\n  ConfigFileReader.cpp\nc:\\powershell\\src\\powershell-native\\nativemsh\\pwrshcommon\\configfilereader.cpp(1): fatal error C1083: Cannot open includ\ne file: 'iostream': No such file or directory [C:\\PowerShell\\src\\powershell-native\\nativemsh\\pwrshcommon\\pwrshcommon.vcx\nproj]\nDone Building Project \"C:\\PowerShell\\src\\powershell-native\\nativemsh\\pwrshcommon\\pwrshcommon.vcxproj\" (default targets)\n-- FAILED.\nDone Building Project \"C:\\PowerShell\\src\\powershell-native\\nativemsh\\pwrshexe\\powershell.vcxproj\" (default targets) -- F\nAILED.\nDone Building Project \"C:\\PowerShell\\src\\powershell-native\\ALL_BUILD.vcxproj\" (default targets) -- FAILED.\n\nBuild FAILED.\n\n\"C:\\PowerShell\\src\\powershell-native\\ALL_BUILD.vcxproj\" (default target) (1) ->\n\"C:\\PowerShell\\src\\powershell-native\\nativemsh\\pwrshexe\\powershell.vcxproj\" (default target) (3) ->\n\"C:\\PowerShell\\src\\powershell-native\\nativemsh\\pwrshcommon\\pwrshcommon.vcxproj\" (default target) (4) ->\n(ClCompile target) ->\n  c:\\powershell\\src\\powershell-native\\nativemsh\\pwrshcommon\\nativemsh.h(14): fatal error C1083: Cannot open include file\n: 'stdio.h': No such file or directory [C:\\PowerShell\\src\\powershell-native\\nativemsh\\pwrshcommon\\pwrshcommon.vcxproj]\n  c:\\powershell\\src\\powershell-native\\nativemsh\\pwrshcommon\\systemcallfacade.h(14): fatal error C1083: Cannot open inclu\nde file: 'stdio.h': No such file or directory [C:\\PowerShell\\src\\powershell-native\\nativemsh\\pwrshcommon\\pwrshcommon.vcx\nproj]\n  c:\\powershell\\src\\powershell-native\\nativemsh\\pwrshcommon\\configfilereader.cpp(1): fatal error C1083: Cannot open incl\nude file: 'iostream': No such file or directory [C:\\PowerShell\\src\\powershell-native\\nativemsh\\pwrshcommon\\pwrshcommon.v\ncxproj]\n\n```\n0 Warning(s)\n3 Error(s)\n```\n\nTime Elapsed 00:00:05.93\nExecution of { Invoke-Expression -Command:$command } failed with exit code 1\nAt C:\\PowerShell\\build.psm1:2091 char:13\n-             throw \"Execution of {$sb} failed with exit code $LASTEXIT ...\n-             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  - CategoryInfo          : OperationStopped: (Execution of { ...ith exit co\n    de 1:String) [], RuntimeException\n  - FullyQualifiedErrorId : Execution of { Invoke-Expression -Command:$comma\n    nd } failed with exit code 1\n",
      "created_at": "2016-11-11T19:49:59Z",
      "updated_at": "2016-11-11T19:50:22Z"
    },
    {
      "author": "TSEO1",
      "author_association": "NONE",
      "body": "Hello, brycem.\nI think than enviroment variable \"**Include**\" not set.\n\nTo build project you can try:\n\n1) Add path to \"**cl.exe**\" to enviroment variable \"**path**\". \nMay use \"**.ps1**\" script like this:\n\n```\necho \"Set enviroment vars for current session and current User ...\"\n$path = $env:path\nIf ($path.EndsWith(\";\")  -eq $False) {$path = [System.String]::Concat($path,\";\")} \n$path =  [System.String]::Concat($path,\"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\bin\")\n$env:path = $path\n[System.Environment]::SetEnvironmentVariable('path',$path,'User')\necho \"Done.\"\n```\n\n2) Go to the root folder with your **.cpp** files\n3) Create the \"**.bat**\" file like this:\n\n```\necho \"save current directory ...\"\nset curpath=%cd%\ncall \"C:\\Program Files (x86)\\Microsoft Visual C++ Build Tools\\vcbuildtools.bat\" amd64\necho \"change directory ...\"\ncd \"%curpath%\"\ncl.exe simple_test.cpp\n\n```\n\n4) Run \"**.bat**\" file\n",
      "created_at": "2016-11-17T06:58:02Z",
      "updated_at": "2016-11-17T06:58:02Z"
    },
    {
      "author": "StefanScherer",
      "author_association": "NONE",
      "body": "@brycem Thank you for your Dockerfile to install the Windows 10 SDK. I just solved building a [NanoServerApiScan Docker image](https://github.com/StefanScherer/dockerfiles-windows/tree/master/nanoserverapiscan) with it.",
      "created_at": "2016-11-25T23:29:00Z",
      "updated_at": "2016-11-25T23:29:00Z"
    },
    {
      "author": "brycem",
      "author_association": "CONTRIBUTOR",
      "body": "I've verified that I'm now getting all of the needed includes installed and that my build environment variables are getting properly populated, but I'm still seeing issues in my VC++ Build Tools environment...  Here's the docker command to install the image:  \r\n\r\ndocker build https://raw.githubusercontent.com/brycem/PowerShell/master/docker/nightly/windowsservercore/Dockerfile\r\n\r\nIt takes a few minutes to pull the baseimage (it's 16gb) the first time, but a lot less time than installing that whole mess from scratch :-)  Here's the current output I'm getting from Start-PSBuild:\r\n\r\n`Build FAILED.\r\n\"C:\\PowerShell\\src\\powershell-native\\ALL_BUILD.vcxproj\" (default target) (1) ->\r\n\"C:\\PowerShell\\src\\powershell-native\\nativemsh\\pwrshexe\\powershell.vcxproj\" (default target) (3) ->\r\n\"C:\\PowerShell\\src\\powershell-native\\nativemsh\\pwrshcommon\\pwrshcommon.vcxproj\" (default target) (4) ->\r\n(ClCompile target) ->\r\n  c:\\powershell\\src\\powershell-native\\nativemsh\\pwrshcommon\\pwrshcommon.cpp(12): fatal error C1083: Cannot open include\r\nfile: 'corerror.h': No such file or directory [C:\\PowerShell\\src\\powershell-native\\nativemsh\\pwrshcommon\\pwrshcommon.vcx\r\nproj]\r\n    0 Warning(s)\r\n    1 Error(s)\r\nTime Elapsed 00:00:12.61\r\nExecution of { Invoke-Expression -Command:$command } failed with exit code 1\r\nAt C:\\PowerShell\\build.psm1:2225 char:13\r\n  throw \"Execution of {$sb} failed with exit code $LASTEXIT ...\r\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : OperationStopped: (Execution of { ...ith exit co\r\n   de 1:String) [], RuntimeException\r\n    + FullyQualifiedErrorId : Execution of { Invoke-Expression -Command:$command } failed with exit code 1\r\n[buildlog.txt](https://github.com/PowerShell/PowerShell/files/691351/buildlog.txt)\r\n`",
      "created_at": "2017-01-07T06:54:37Z",
      "updated_at": "2017-01-08T04:09:22Z"
    },
    {
      "author": "brycem",
      "author_association": "CONTRIBUTOR",
      "body": "The missing 'corerror.h' header can be found under 'C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6.1\\Include\\um' and that path is in the INCLUDE path:\r\n\r\n`INCLUDE=C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\INCLUDE\r\n;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\ATLMFC\\INCLUDE\r\n;C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.14393.0\\ucrt\r\n;C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6.1\\include\\um\r\n;c:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.14393.0\\shared\r\n;c:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.14393.0\\um\r\n;c:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.14393.0\\winrt`\r\n\r\n`C:\\>dir \"Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6.1\\Include\\um\" /b\r\nalink.h\r\nasmparse.grammar\r\nclrdata.h\r\nclrdata.idl\r\ncor.h\r\ncordebug.h\r\ncordebug.idl\r\nCorError.h\r\nCorHdr.h\r\ncorhlpr.cpp\r\ncorhlpr.h\r\ncorprof.h\r\ncorprof.idl\r\ncorpub.h\r\ncorpub.idl\r\ncorsym.h\r\nCorSym.idl\r\nfusion.h\r\ngchost.h\r\ngchost.idl\r\nICeeFileGen.h\r\nisolation.h\r\nivalidator.h\r\nivalidator.idl\r\nivehandler.h\r\nIVEHandler.idl\r\nmetahost.h\r\nmscoree.h\r\nopcode.def\r\nopenum.h\r\nStrongName.h\r\ntlbref.h\r\ntlbref.idl\r\nVerError.h`",
      "created_at": "2017-01-07T07:05:27Z",
      "updated_at": "2017-01-07T07:05:27Z"
    },
    {
      "author": "StefanScherer",
      "author_association": "NONE",
      "body": "@brycem Interesting image. I had a look at the layers and for some reason it uses not the official (foreign) Windows base images. That's why someone has to download the first two layers of 4.8 GByte. This could be saved if the image is directly derived `FROM microsoft/windowsservercore` from the Docker Hub. So the download size would go down from 8 GByte to 3.2 GByte.\r\n\r\n```\r\nPS C:\\> docker run stefanscherer/winspector brycem/msbuild\r\nImage name: brycem/msbuild\r\nTag: latest\r\nNumber of layers: 27\r\nSizes of layers:\r\n  sha256:c480435b7cbad5a6ade1a89fa1e133618b0ad4d5f3ef542318330e6aa051a60b - 4175157401 byte\r\n  sha256:34236d34e62437a094777c475360c01a0e35bce00eb110f5c1d23efad369d729 - 861744788 byte\r\n  sha256:8a593722c24de028da15492b0bdd009d8918b50bd0b23fb58c82c213644be26b - 1214 byte\r\n  sha256:1e02b4158ec298f03b35db322b6fa2a5755d88decfd439e512cece060cfc7601 - 1216 byte\r\n  sha256:eb667104ecb0e9df9c323f1827b8ab1a351edc52679efb8bff8e95ba635ad69d - 1216 byte\r\n  sha256:208c611b9463c3c80a2ba36369a55a941426d9f21a8a1e70f62cc330b603d7f3 - 1223 byte\r\n  sha256:5907f800aa21afb72770997364ea1ed327d4c35247f5861edff3993a58648d59 - 1220 byte\r\n  sha256:9240eb95468ef9da8f20e13b70632837d683f059b3a1baf05eabea1d1b7e12b3 - 1219 byte\r\n  sha256:fcaabc7943aa80cda572f613f7bc237944646d64b27226f88c062a21a9747aaa - 1221 byte\r\n  sha256:eb6ff87d96cdd75a11d336401a04ec29d6a29113dbd0385769592f27ce8b9bd9 - 1217 byte\r\n  sha256:7fe014b5aa7bc7d104674207618de2657b4551518e2e04f033ff3e5c99f3cea1 - 1218 byte\r\n  sha256:7478165d821ccd24b718cbb6976284f103132106fce69b6cb9669303ca322f1c - 740973 byte\r\n  sha256:016fab8099ecbed4bb98db39225aa5dfe7b479449b447ad6fa2a92399c33e97e - 357653819 byte\r\n  sha256:04a51b13d6086a36d6be67278e594a522de5377c8e92f0b76aa0b9547e89144b - 2954146 byte\r\n  sha256:2c5f3ea6208fe824652ecda0076464ba3e5b4eeb3cc3c1ae344c2ea82919a82a - 3005 byte\r\n  sha256:57ef71a5e22f6bceb5653e82670457135bbb688d875b16f7586d9eded7dd9a46 - 2321023663 byte\r\n  sha256:34f8316c35d4ae311f7b850b423aae0507d20b42b642a90f5399311d6267fc11 - 1218 byte\r\n  sha256:2f3a7a06893b4d9acb9d82ad4913eb0ce5d22a6b1e08459d171a1735c7e26900 - 343102825 byte\r\n  sha256:105e67733055d25a8adca1ade281c55fd6845d979314577de86e863119ca3aa8 - 1214 byte\r\n  sha256:16a55606cea5e4f263e6722b490b34dd5f1e38b9cf3d5c742680da4d85b2ded9 - 1211 byte\r\n  sha256:d507949f2561c2e31626a0db6e83ce76d54e75d1461d1177ccf615717027070b - 1212 byte\r\n  sha256:5061ca3c7ae9b60f509b86922c11cf801981557bbd4369d83b3c493fb595f2e6 - 1213 byte\r\n  sha256:5d3a0ae2ab84201fa6699dae61dc2814cfc53eff138f342d4aa731bdd860dcb7 - 1209 byte\r\n  sha256:307b1914bb025f6fa0ea0e90305361c78b1af6613cf173611fa4812984c4f591 - 1215 byte\r\n  sha256:b7217039fbfe360d21ad0ec6190672ccdd8490d8337c9d465d5b57d9b0ae65cc - 286601 byte\r\n  sha256:eff306e2094c7b0f79477dc5814ff92e5c9ab8bfbf93695457aa55d0819f5e37 - 1214 byte\r\n  sha256:58d43e184362cfcdb42ee2d292eb7793e1e67dbccf19e15a5c7d4d9ee4ef45a9 - 1213 byte\r\nTotal size (including Windows base layers): 8062689104 byte\r\nApplication size (w/o Windows base layers): 8062689104 byte\r\nWindows base image used:\r\n```",
      "created_at": "2017-01-07T13:30:37Z",
      "updated_at": "2017-01-07T13:30:37Z"
    },
    {
      "author": "brycem",
      "author_association": "CONTRIBUTOR",
      "body": "Interesting - It was built on a Win10 desktop rather than a server OS, so that would likely explain it.  I'll rebuild it on server and see if that improves it.  Thanks @StefanScherer!",
      "created_at": "2017-01-08T02:24:49Z",
      "updated_at": "2017-01-08T02:24:49Z"
    },
    {
      "author": "brycem",
      "author_association": "CONTRIBUTOR",
      "body": "Rebuilt on matching build of server with dockerd 1.12.2-cs2-ws-beta, and @TSEO1 's trick to delete the 'C:\\ProgramData\\Package Cache\\' - A wee bit slimmer :-)\r\n\r\nlatest: digest: sha256:c1e3def332f9a8e56678717a82e9531220c2c8031045f64efb33e65ce87fba44 size: 3668\r\n\r\nPowershell is now building, but I'm now getting an error when using the pscore exe:\r\n\r\nPS C:\\>\r\nOops, something went wrong.  Please report this bug with the details below.\r\nReport on GitHub: https://github.com/lzybkr/PSReadLine/issues/new\r\n-----------------------------------------------------------------------\r\nLast 1 Keys:\r\n p\r\n\r\nException:\r\nSystem.ComponentModel.Win32Exception: Incorrect function\r\n-----------------------------------------------------------------------\r\n\r\n",
      "created_at": "2017-01-11T09:13:49Z",
      "updated_at": "2017-01-11T09:13:49Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "I've seen other reports of that exception - but I don't know what's going on.\r\n\r\nI think our ideal solution for building in a container will rely on the [VS 2017 Build Tools](https://blogs.msdn.microsoft.com/vcblog/2016/11/16/introducing-the-visual-studio-build-tools/) as they have a silent install option.  I experimented some with it already and it didn't feel quite ready, hopefully it will be by RTM.",
      "created_at": "2017-01-11T21:23:45Z",
      "updated_at": "2017-01-11T21:23:45Z"
    },
    {
      "author": "StefanScherer",
      "author_association": "NONE",
      "body": "@brycem About the problem pushing the two microsoft/windowsservercore base images to Docker Hub: I also managed to do this by rebuilding winspector today. Scratching my head why this could happend. But it is logged in AppVeyor https://ci.appveyor.com/project/StefanScherer/winspector/build/1.0.23#L194\r\nI'll have a deeper look and probably file an issue in docker/docker repo.",
      "created_at": "2017-01-11T23:17:11Z",
      "updated_at": "2017-01-11T23:17:11Z"
    },
    {
      "author": "brycem",
      "author_association": "CONTRIBUTOR",
      "body": "@lzybkr , I've bugged the PSReadLine in https://github.com/lzybkr/PSReadLine/issues/492",
      "created_at": "2017-01-13T07:01:27Z",
      "updated_at": "2017-01-13T07:01:27Z"
    },
    {
      "author": "brycem",
      "author_association": "CONTRIBUTOR",
      "body": "Closing this issue as we have workarounds - Hopefully the next version of the Windows 10 StandaloneSDK will have this addressed.  They have an internal bug tracking this as well (OS:9651133)",
      "created_at": "2017-01-13T07:04:13Z",
      "updated_at": "2017-01-13T07:04:13Z"
    }
  ],
  "created_at": "2016-10-31T23:00:37Z",
  "labels": [
    "Area-Maintainers-Build",
    "Resolution-External"
  ],
  "number": 2571,
  "state": "closed",
  "title": "Version of Windows10 SDK downloaded from Chocolatey does not install on microsoft/windowsservercore:latest docker image",
  "updated_at": "2017-03-15T06:30:30Z"
}