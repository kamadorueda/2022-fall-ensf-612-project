{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15806",
  "author": "mklement0",
  "body": "### Prerequisites\r\n\r\n- [X] Write a descriptive title.\r\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- [X] Search the existing issues.\r\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\r\n\r\n### Steps to reproduce\r\n\r\n`[pscustomobject]` is a _reference_ type without overridden equality-comparison behavior, so testing for equality performs _reference_ equality, i.e. the test only succeeds if to values point to the very same instance.\r\n\r\nSuch types usually use the _default_ (inherited) `.GetHashCode()` implementation, which for reference types means a value that is derived from the instance's identity.\r\n\r\nUnexpectedly, _all_ `[pscustomobject]` instances return the _same_ from their `.GetHashCode()` method, which makes `[pscustomobject]` unsuitable as a hashtable key, for instance.\r\n\r\n\r\n### Expected behavior\r\n\r\n```powershell\r\nPS> ([pscustomobject] @{ foo=1 }).GetHashCode() -eq ([pscustomobject] @{ foo=1 }).GetHashCode()\r\nFalse # Two distinct [pscustomobject] instances that compare unequally should have distinct hash codes.\r\n```\r\n\r\n\r\n### Actual behavior\r\n\r\nThe above returns `$true`, even though `[pscustomobject] @{ foo=1 } -eq [pscustomobject] @{ foo=1 }` returns `$false` (due to _reference_ equality being tested).\r\n\r\n\r\n### Error details\r\n\r\n_No response_\r\n\r\n### Environment data\r\n\r\n```powershell\r\nPowerShell Core 7.2.0-preview.7\r\n```\r\n\r\n\r\n### Visuals\r\n\r\n_No response_",
  "closed_at": null,
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "I'm wondering if we should define a hash code based on the identifying components of a PSCustomObject \ud83e\udd14 \r\n\r\nI'm thinking perhaps something combining hashcode values from:\r\n\r\n- Property names\r\n- Property values\r\n- PSTypeNames\r\n- Any other added member names / type signatures(?)",
      "created_at": "2021-07-20T20:01:37Z",
      "updated_at": "2021-07-20T20:01:37Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "It's typically advised to not make hash codes based on members if they aren't immutable (messes with dictionary look ups).\r\n\r\n`PSObject.GetHashCode` should be something like this:\r\n\r\n```csharp\r\npublic override int GetHashCode()\r\n{\r\n    return BaseObject is PSCustomObject ? base.GetHashCode() : BaseObject.GetHashCode();\r\n}\r\n```",
      "created_at": "2021-07-21T01:59:16Z",
      "updated_at": "2021-07-21T01:59:52Z"
    }
  ],
  "created_at": "2021-07-20T18:22:45Z",
  "number": 15806,
  "state": "open",
  "title": ".GetHashCode() should not report the same value for all instances of [pscustomobject]",
  "updated_at": "2022-08-23T19:22:40Z"
}