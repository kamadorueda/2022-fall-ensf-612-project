{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5282",
  "author": "rkeithhill",
  "body": "I'm finding the output of Python's mplatform command more useful in helping me determine which distro I'm running on.  I see no reason why PowerShell's `$PSVersionTable.OS` property couldn't be just as useful.\r\n\r\nSteps to reproduce\r\n------------------\r\nRun these two commands\r\n```powershell\r\n$PSVersionTable.OS\r\npython3 -mplatform\r\n```\r\nThe output is respectively:\r\n```\r\nLinux 4.4.0-43-Microsoft #1-Microsoft Wed Dec 31 14:42:53 PST 2014\r\nLinux-4.4.0-43-Microsoft-x86_64-with-Ubuntu-16.04-xenial\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\nI was hoping from PowerShell's `$PSVersionTable.OS` I could easily tell that I'm on A) Ubuntu and B) the version of Ubuntu.  Like I can with Python.\r\n\r\nActual behavior\r\n---------------\r\nPowerShell gives me the kernel release version number only.\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.0-beta.9\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.0-beta.9\r\nOS                             Linux 4.4.0-43-Microsoft #1-Microsoft Wed Dec 31 14:42:53 PST 2014\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2017-10-31T18:29:16Z",
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "`$PSVersionTable.OS` is simply `[System.Runtime.InteropServices.RuntimeInformation]::OSDescription`.  Perhaps you can open an issue in [corefx repo](https://github.com/dotnet/corefx) so that `OSDescription` is more like `python3 -mplatform`?  It seems like all the information is available via `lsb_release` and they just need to stitch it together.",
      "created_at": "2017-10-31T18:29:16Z",
      "updated_at": "2017-10-31T18:29:34Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "Hum! In my opinion, you'll probably use \"python -mplatform\" command as Python 2.7 is the main and default version use by the OS. All other versions of Python (ie. 3.5, 3.6 (Anaconda)) exist, or installed separately, add value to develop on a updated version.\r\n\r\nI notice on my system executing both \"python -mplatform\" and \"python3 -mplatform\" give me the same result.  \r\n```\r\nLinux-4.10.0-38-generic-x86_64-with-Ubuntu-16.04-xenial\r\n```\r\nBut, when I change my python environment to Anaconda (Python 3.6) using \"update-alternative\" I'll get different results:\r\n```\r\nLinux-4.10.0-38-generic-x86_64-with-debian-stretch-sid\r\n```\r\nUsing \"python -mplatform\" could give mix results when working with different versions of Python.\r\n\r\n:)\r\n\r\n",
      "created_at": "2017-10-31T18:31:34Z",
      "updated_at": "2017-10-31T18:32:04Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "Perhaps PowerShell should instead use what you are already using in `build.psm1`:\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/1c446c1be4ac10dd53a1f822e78801dc3da361d0/build.psm1#L130-L146",
      "created_at": "2017-10-31T18:45:38Z",
      "updated_at": "2017-10-31T18:46:10Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@rkeithhill we could certainly construct it ourselves, but it seems that it would be better relying on corefx for consistency particularly as we support more and more distros",
      "created_at": "2017-10-31T18:55:17Z",
      "updated_at": "2017-10-31T18:55:17Z"
    }
  ],
  "created_at": "2017-10-31T16:41:15Z",
  "labels": [
    "Resolution-External"
  ],
  "number": 5282,
  "state": "closed",
  "title": "Tweak to $PSVersionTable.OS to make it more useful",
  "updated_at": "2017-10-31T18:55:17Z"
}