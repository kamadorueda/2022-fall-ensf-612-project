{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10785",
  "author": "0xd4d",
  "body": "# Steps to reproduce\r\n\r\n```powershell\r\nabcdefg\r\nabcdefgh\r\nabcdefg\r\n```\r\n\r\n# Expected behavior\r\n\r\nIt should show a suggestion after all three commands above\r\n\r\n# Actual behavior\r\n\r\nThe suggestion is only shown after the first unknown command\r\n\r\n```\r\nPS C:\\> abcdefg\r\nabcdefg : The term 'abcdefg' is not recognized as the name of a cmdlet, function, script file, or operable program.\r\nCheck the spelling of the name, or if a path was included, verify that the path is correct and try again.\r\nAt line:1 char:1\r\n+ abcdefg\r\n+ ~~~~~~~\r\n+ CategoryInfo          : ObjectNotFound: (abcdefg:String) [], CommandNotFoundException\r\n+ FullyQualifiedErrorId : CommandNotFoundException\r\n\r\n\r\nSuggestion [4,General]: The most similar commands are: cd, del, ac, clear, diff, cd.., cd\\, alg.exe, at.exe, calc.exe.\r\nPS C:\\> abcdefgh\r\nabcdefgh : The term 'abcdefgh' is not recognized as the name of a cmdlet, function, script file, or operable program.\r\nCheck the spelling of the name, or if a path was included, verify that the path is correct and try again.\r\nAt line:1 char:1\r\n+ abcdefgh\r\n+ ~~~~~~~~\r\n+ CategoryInfo          : ObjectNotFound: (abcdefgh:String) [], CommandNotFoundException\r\n+ FullyQualifiedErrorId : CommandNotFoundException\r\n\r\nPS C:\\> abcdefg\r\nabcdefg : The term 'abcdefg' is not recognized as the name of a cmdlet, function, script file, or operable program.\r\nCheck the spelling of the name, or if a path was included, verify that the path is correct and try again.\r\nAt line:1 char:1\r\n+ abcdefg\r\n+ ~~~~~~~\r\n+ CategoryInfo          : ObjectNotFound: (abcdefg:String) [], CommandNotFoundException\r\n+ FullyQualifiedErrorId : CommandNotFoundException\r\n\r\nPS C:\\>\r\n```\r\n\r\n# Environment data\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-preview.4\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-preview.4\r\nOS                             Microsoft Windows 10.0.18362\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "kvprasoon",
      "author_association": "CONTRIBUTOR",
      "body": "This happens only if the commands are copy pasted together to console.",
      "created_at": "2019-10-14T07:22:13Z",
      "updated_at": "2019-10-14T07:23:43Z"
    },
    {
      "author": "0xd4d",
      "author_association": "NONE",
      "body": "> This happens only if the commands are copy pasted together to console.\r\n\r\nYou don't need to copy and paste the commands to repro this.",
      "created_at": "2019-10-14T11:34:24Z",
      "updated_at": "2019-10-14T11:34:24Z"
    },
    {
      "author": "kvprasoon",
      "author_association": "CONTRIBUTOR",
      "body": "@0xd4d Can you elaborate on how you executed those invalid expressions. When I execute it one by one or with semicolons in a line, I get suggestions for all.",
      "created_at": "2019-10-14T15:22:13Z",
      "updated_at": "2019-10-14T15:22:43Z"
    },
    {
      "author": "0xd4d",
      "author_association": "NONE",
      "body": "Did you try typing them in? Did you try longer strings?\r\n\r\n- 7 chars: `abcdefg` works, `abcdefgh` doesn't\r\n- 6 chars: `aaaaaa` works, `aaaaaaa` doesn't",
      "created_at": "2019-10-14T18:03:33Z",
      "updated_at": "2019-10-14T18:03:33Z"
    },
    {
      "author": "0xd4d",
      "author_association": "NONE",
      "body": "I debugged it and stopped when an ArgumentNullException was thrown and found this script block on the stack. Looks like `Get-Command $lastError...` returns null.\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/master/src/System.Management.Automation/engine/hostifaces/HostUtilities.cs#L68-L73",
      "created_at": "2019-10-14T19:09:33Z",
      "updated_at": "2019-10-14T19:10:10Z"
    },
    {
      "author": "kvprasoon",
      "author_association": "CONTRIBUTOR",
      "body": "Interesting, as you mentioned it fails for long strings, but not for all long strings(`gabcdefs`,`getcommand` works). I think its not finding a match for those strings, hence nothing is printed.\r\n\r\nCc: @SteveL-MSFT",
      "created_at": "2019-10-15T02:54:49Z",
      "updated_at": "2019-10-15T02:55:52Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "The current \"suggestion framework\" is pretty primitive.  We have an open issue to fix this so that suggestions are part of ErrorRecords rather than scrub later.  In this case, it seems that line 72 should check if anything was returned.  Since the current algorithm uses fuzzy matching, repro depends on what is on your system and what results get returned from the fuzzy matching.  It seems reasonable that after a certain length of characters, it wouldn't actually match anything reasonable on your system.",
      "created_at": "2019-10-15T19:08:22Z",
      "updated_at": "2019-10-15T19:08:22Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "I have a mostly-working WIP implementation of Suggestions-on-ErrorRecord over in #9115\r\n\r\nIt's largely functional, just stuck on some test failures. If there's interest in having that available for PS7 I can look at bumping it up my priority list. Might need a hand with some of the odder failures that are cropping up, though. \ud83d\ude42 \r\n\r\nBut as Steve says... suggestions can only really do so much. We can always expand the fuzzy matching to be more \"clever\" in various ways, I'm sure, but at the end of the day we would want to restrict what it can do to reasonable levels so we don't have any hanging when errors occur.",
      "created_at": "2019-10-16T02:29:43Z",
      "updated_at": "2019-10-16T02:32:11Z"
    }
  ],
  "created_at": "2019-10-13T20:35:26Z",
  "labels": [
    "Issue-Question",
    "WG-Interactive-IntelliSense"
  ],
  "number": 10785,
  "state": "open",
  "title": "PSCommandNotFoundSuggestion stops working if unknown command is too long",
  "updated_at": "2021-01-15T18:30:29Z"
}