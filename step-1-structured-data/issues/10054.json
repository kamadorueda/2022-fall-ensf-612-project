{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10054",
  "author": "iSazonov",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nFollow up on #10020 to add another fast path for `WildcardPattern.IsMatch` when an pattern ends with asterisk like `text*`.\r\nIn case of patterns like `text*`, `StartsWith(...)` method is used to check for if it's a match.\r\n\r\n## PR Context\r\n\r\nThe main motivation was to complete the optimization of this code once we touched it.\r\nHowever, this is a public code and should be improved.\r\n\r\nAs for the hot ways, my most important expectation was for path processing like `dir *`. In reality, test below shows a perf win of only about 1%.\r\n```powershell\r\n$a = dir -Recurse C:\\Windows\\System32\\p*\r\n```\r\nDebug shows that globbing code does all works and then send filtered list child items to WindcardPattern.IsMatch() ! \r\nThis way the engine almost always works with small collections and we don't see huge wins from fixes in WindcardPattern.IsMatch().\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [ ] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n",
  "closed_at": "2019-07-10T16:15:18Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Would it also be worth mirroring this optimization for `.EndsWith()` i.e., `*pattern`?",
      "created_at": "2019-07-03T13:37:15Z",
      "updated_at": "2019-07-03T13:37:15Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@vexx32 I found many places in our code where we use a pattern like \"text*\" so the PR will speed up the engine. But I don't see \"*text\" pattern. Although this is a public API and your proposal may be helpful for external applications.\r\n",
      "created_at": "2019-07-03T14:00:06Z",
      "updated_at": "2019-07-03T14:00:06Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Yeah, I was more thinking just to speed up general usage. Definitely a good call to optimize the engine's usage, though! \ud83d\udc96 ",
      "created_at": "2019-07-03T14:04:07Z",
      "updated_at": "2019-07-03T14:04:07Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "I would like to see some numbers that showcase the improvement of this change.\r\nI think for all perf PRs, we should have some sort of evidence to show the effectiveness of the changes (make sure we are guided by profiling).\r\nIn case you don't have a specific scenario that gets noticeable improvement, at least show what code paths will hit this change and why it's a change that we want to have.",
      "created_at": "2019-07-03T19:38:54Z",
      "updated_at": "2019-07-03T19:38:54Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "The main motivation was to complete the optimization of this code once we touched it.\r\nHowever, this is a public code and should be improved.\r\n\r\nAs for the hot ways, my most important expectation was for path processing like `dir *`. In reality, test below shows a perf win of only about 1%.\r\n```powershell\r\n$a = dir -Recurse C:\\Windows\\System32\\p*\r\n```\r\nDebug shows that globbing code does all works and then send filtered list child items to WindcardPattern.IsMatch() ! \r\nThis way the engine almost always works with small collections and we don't see huge wins from fixes in WindcardPattern.IsMatch().",
      "created_at": "2019-07-04T08:05:56Z",
      "updated_at": "2019-07-04T08:05:56Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Can you please move your comment in https://github.com/PowerShell/PowerShell/pull/10054#issuecomment-508384193 to the PR description?\r\nAlso, can you elaborate more about your following statements? I'm not very clear what you mean by, for example, `works with small collections`.\r\n> Debug shows that globbing code does all works and then send filtered list child items to WindcardPattern.IsMatch() !\r\nThis way the engine almost always works with small collections and we don't see huge wins from fixes in WindcardPattern.IsMatch().",
      "created_at": "2019-07-05T16:25:35Z",
      "updated_at": "2019-07-05T16:25:35Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@iSazonov The PR looks good, but can you please respond to my comment here: https://github.com/PowerShell/PowerShell/pull/10054#issuecomment-508808988\r\nI would like to understand why this change only show 1% improvement to `dir -Recurse C:\\Windows\\System32\\p*`.",
      "created_at": "2019-07-09T20:38:17Z",
      "updated_at": "2019-07-09T20:38:17Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw When we send a path like `C:\\Windows\\System32\\p*` to engine our globbing code does all work - parse and expand `p*` to a collection with leaves. Then the already filtered leaves (in the example, all started with \"p\") is passed to a code which again filters the leaves by WindcardPattern.IsMatch(). So (1) we don't filter large, all full path list, only small collection of leaves  - that's why we get so little acceleration, (2) we do duplicated work that we would address, I believe it is common problem in globbing code - there is many places where it happens.",
      "created_at": "2019-07-10T03:31:19Z",
      "updated_at": "2019-07-10T03:31:19Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@iSazonov I opened #10093 to track this, so we don't lose your analysis.",
      "created_at": "2019-07-10T16:13:34Z",
      "updated_at": "2019-07-10T16:13:34Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.0.0-preview.2` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.0.0-preview.2)\n",
      "created_at": "2019-07-17T20:55:52Z",
      "updated_at": "2019-07-17T20:55:52Z"
    }
  ],
  "created_at": "2019-07-03T13:25:58Z",
  "number": 10054,
  "state": "closed",
  "title": "Speed up WildcardPattern.IsMatch if an pattern ends with asterisk",
  "updated_at": "2019-07-17T20:55:52Z"
}