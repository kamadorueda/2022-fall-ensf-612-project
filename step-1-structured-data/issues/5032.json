{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5032",
  "author": "arturaz",
  "body": "Steps to reproduce\r\n------------------\r\n\r\n```powershell\r\nPS > cat test.ps1                                                                                                                                                                                           \r\nParam(\r\n  [Parameter(Mandatory=$true)][string[]][ValidateSet(\"a\", \"b\")] $arrParam\r\n)\r\n\r\nBegin {\r\n  $arrParam\r\n}\r\nPS > powershell ./test.ps1 -arrParam a                                                                                                                                                                      \r\na\r\nPS > powershell ./test.ps1 -arrParam b                                                                                                                                                                      \r\nb\r\nPS > powershell ./test.ps1                                                                                                                                                                                  \r\n\r\ncmdlet test.ps1 at command pipeline position 1\r\nSupply values for the following parameters:\r\narrParam[0]: a\r\narrParam[1]: b\r\narrParam[2]: \r\na\r\nb\r\nPS > powershell ./test.ps1 -arrParam a,b                                                                                                                                                                    \r\n./test.ps1 : Cannot validate argument on parameter 'arrParam'. The argument \"a,b\" does not belong to the set \"a,b\" specified by the ValidateSet attribute. Supply an argument that is in the set and then tr\r\ny the command again.\r\n    + CategoryInfo          : InvalidData: (:) [test.ps1], ParentContainsErrorRecordException\r\n    + FullyQualifiedErrorId : ParameterArgumentValidationError,test.ps1\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```powershell\r\nPS > powershell ./test.ps1 -arrParam a,b \r\na\r\nb\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value                                                                                                                                                                                                                                           \r\n----                           -----                                                                                                                                                                                                                                           \r\nPSVersion                      6.0.0-beta.8                                                                                                                                                                                                                                    \r\nPSEdition                      Core                                                                                                                                                                                                                                            \r\nGitCommitId                    v6.0.0-beta.8                                                                                                                                                                                                                                   \r\nOS                             Darwin 16.6.0 Darwin Kernel Version 16.6.0: Fri Apr 14 16:21:16 PDT 2017; root:xnu-3789.60.24~6/RELEASE_X86_64                                                                                                                                  \r\nPlatform                       Unix                                                                                                                                                                                                                                            \r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}                                                                                                                                                                                                                         \r\nPSRemotingProtocolVersion      2.3                                                                                                                                                                                                                                             \r\nSerializationVersion           1.1.0.1                                                                                                                                                                                                                                         \r\nWSManStackVersion              3.0    \r\n```\r\n",
  "closed_at": "2017-10-06T16:56:31Z",
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "If you call your script from within PowerShell, it works as expected.  When using `-File` with `PowerShell.exe` the arguments are passed as string literals (although $true and $false are special cased) to the script as arg values.  This is currently `by design`(see https://github.com/PowerShell/PowerShell/issues/4036#issuecomment-311759499).  Workaround is to use:\r\n\r\n```bash\r\npowershell -c ./test.ps1 -arrParam a,b\r\n```\r\n\r\nThis works as you expect.",
      "created_at": "2017-10-06T16:56:31Z",
      "updated_at": "2017-10-06T16:56:31Z"
    },
    {
      "author": "arturaz",
      "author_association": "NONE",
      "body": "Why does it then differ from the behavior on Windows?\n\nOn Oct 6, 2017 19:56, \"Steve Lee\" <notifications@github.com> wrote:\n\n> If you call your script from within PowerShell, it works as expected. When\n> using -File with PowerShell.exe the arguments are passed as string\n> literals (although $true and $false are special cased) to the script as arg\n> values. This is currently by design(see #4036 (comment)\n> <https://github.com/PowerShell/PowerShell/issues/4036#issuecomment-311759499>).\n> Workaround is to use:\n>\n> powershell -c ./test.ps1 -arrParam a,b\n>\n> This works as you expect.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/PowerShell/PowerShell/issues/5032#issuecomment-334811606>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAAygxxNec8qBtVxPgYoxoqLN316VKIxks5splvZgaJpZM4PwKXK>\n> .\n>\n",
      "created_at": "2017-10-06T18:20:51Z",
      "updated_at": "2017-10-06T18:20:51Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I'm seeing the same behavior on Windows PowerShell and PSCore6 on Win10.  Can you provide more details?",
      "created_at": "2017-10-06T18:25:34Z",
      "updated_at": "2017-10-06T18:25:34Z"
    },
    {
      "author": "arturaz",
      "author_association": "NONE",
      "body": "On Windows I have: PSVersion                      5.1.15063.608\r\n\r\nI guess that explains the difference.",
      "created_at": "2017-10-09T10:55:37Z",
      "updated_at": "2017-10-09T10:55:37Z"
    }
  ],
  "created_at": "2017-10-06T08:34:53Z",
  "number": 5032,
  "state": "closed",
  "title": "Array parameters do not work on OS X v6.0.0-beta8",
  "updated_at": "2017-10-09T10:55:37Z"
}