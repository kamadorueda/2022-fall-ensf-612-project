{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7141",
  "author": "DarwinJS",
  "body": "@TravisEz13 - doing 'yum search powershell' on a system that is already setup with Microsoft yum repos does not show any powershell packages with new ids.\r\n\r\nCan you post to this issue when this is available and if there is more to than just listing the current repos to find the preview packages?",
  "closed_at": "2019-10-15T00:00:36Z",
  "comments": [
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "`yum search powershell-preview` should show the new preview packages, `yum search powershell` should only show stable packages.  I'm not sure if we remembered to delete the older preview packages using the stable name.",
      "created_at": "2018-06-25T17:42:03Z",
      "updated_at": "2018-06-25T17:43:01Z"
    },
    {
      "author": "DarwinJS",
      "author_association": "CONTRIBUTOR",
      "body": "\r\n@TravisEz13,\r\nInstall-powershell.sh uses the tar ball when a package manager is not available.  How should it operate in order to accomplish a pre-release?\r\n\r\nShould it simply not do the symlink to /usr/bin/pwsh ?\r\n\r\nThanks for any guidance.",
      "created_at": "2018-06-26T10:32:12Z",
      "updated_at": "2018-06-26T10:32:12Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "I think we can leave it as is until we get feedback",
      "created_at": "2018-06-26T18:30:07Z",
      "updated_at": "2018-06-26T18:30:07Z"
    },
    {
      "author": "DarwinJS",
      "author_association": "CONTRIBUTOR",
      "body": "Seems a little weird that they behavior will vary according to distro.  On non-package managed distros installing a pre-release will make it the primary version - not side-by-side.  Seems like a direct anti-pattern of the benefit sought by establishing two package ids?  And unlikely anyone would notice in order to give feedback.\r\n\r\nRelated to this - way back I left SUSE as non-package managed because of the unautomatability of that question it throws.",
      "created_at": "2018-06-26T18:55:57Z",
      "updated_at": "2018-06-26T18:56:52Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "Agreed, but creating the shortcut is important.  If we can detect that we care installing preview, we should create the preview shortcut.  /usr/bin/pwsh-preview",
      "created_at": "2018-06-26T21:53:57Z",
      "updated_at": "2018-06-26T21:53:57Z"
    },
    {
      "author": "DarwinJS",
      "author_association": "CONTRIBUTOR",
      "body": "Ah that's actually the answer I was looking for!",
      "created_at": "2018-06-26T22:34:45Z",
      "updated_at": "2018-06-26T22:34:45Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "Is this question answered?",
      "created_at": "2018-06-27T22:39:08Z",
      "updated_at": "2018-06-27T22:39:08Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2019-10-15T00:00:35Z",
      "updated_at": "2019-10-15T00:00:35Z"
    }
  ],
  "created_at": "2018-06-22T10:03:20Z",
  "number": 7141,
  "state": "closed",
  "title": "How to list preview packages with new package id",
  "updated_at": "2019-10-15T00:00:36Z"
}