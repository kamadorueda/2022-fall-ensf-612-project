{
  "_url": "https://github.com/PowerShell/PowerShell/issues/17403",
  "author": "JustinGrote",
  "body": "### Prerequisites\r\n\r\n- [X] Write a descriptive title.\r\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- [X] Search the existing issues.\r\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\r\n\r\n### Steps to reproduce\r\n\r\n**Apologies if this is a dupe, I couldn't find one in the issues**\r\n\r\nI see this \"mistake\" made pretty commonly, but it feels like this should be caught as a runtime error or, at the very least, a PSSA rule.\r\n\r\n```powershell\r\nfunction GetSomething () {\r\n  Write-Verbose \"I failed to get something and returned null\"\r\n}\r\n\r\nfunction Test {\r\n  param(\r\n    [Parameter()][ValidateNotNullOrEmpty]$EmptyDefault = $(GetSomething -Verbose)\r\n  )\r\n  \"EmptyDefault is null: $($null -eq $emptyDefault)\"\r\n}\r\n```\r\n\r\n### Expected behavior\r\n\r\n```console\r\nNotNullOrEmpty Validation Error\r\n```\r\n\r\n\r\n### Actual behavior\r\n\r\n```console\r\nVERBOSE: I failed to get something and returned null\r\nEmptyDefault is null: True\r\n```\r\n\r\n### Environment data\r\n\r\n```powershell\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.3\r\nPSEdition                      Core\r\nGitCommitId                    7.2.3\r\nOS                             Microsoft Windows 10.0.22621\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```",
  "closed_at": "2022-05-23T15:07:52Z",
  "comments": [
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "It's come up before, but I can't find the thread for the life of me. I believe the conclusion was that it was by design to allow folks to use a default value that otherwise wouldn't be permitted. e.g.\r\n\r\n```powershell\r\nfunction test {\r\n    param(\r\n        [ValidateRange(0, [int]::MaxValue)] $Count = -1\r\n    )\r\n}\r\n```\r\n\r\nI can't remember if it was marked by design or if it was just marked wontfix to not break folks doing that",
      "created_at": "2022-05-23T14:31:19Z",
      "updated_at": "2022-05-23T14:31:19Z"
    },
    {
      "author": "JustinGrote",
      "author_association": "CONTRIBUTOR",
      "body": "PSSA rule it is then :)",
      "created_at": "2022-05-23T15:07:52Z",
      "updated_at": "2022-05-23T15:07:52Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Some related issues:\r\n\r\n- https://github.com/PowerShell/PowerShell/issues/8795\r\n- https://github.com/PowerShell/PowerShell/issues/10614\r\n- https://github.com/PowerShell/PowerShell/issues/8778\r\n\r\nLooking at these issues, there does not appear to have been any kind of conclusion here, at least as far as I can find. I've tagged one of them for WG-Language to follow up on; I think having some kind of parse time error is a good idea, myself. PSSA rules are an okay standin but I think there's a lot we can do at parse time that we aren't doing to prevent very obvious foot-gun scenarios.",
      "created_at": "2022-05-23T15:23:47Z",
      "updated_at": "2022-05-23T15:23:47Z"
    }
  ],
  "created_at": "2022-05-21T15:30:25Z",
  "number": 17403,
  "state": "closed",
  "title": "Validation Attributes do not apply to default values",
  "updated_at": "2022-05-23T15:23:48Z"
}