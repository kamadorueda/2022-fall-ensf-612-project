{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9282",
  "author": "ghost",
  "body": "# Steps to reproduce\r\n\r\n```                    \r\n        public void Process(out string error)\r\n        {\r\n            using (var ps = PowerShell.Create())\r\n            {\r\n                ps.AddScript(\"Get-Module -ListAvailable -Name MSOnline\");\r\n\r\n                var results = ps.Invoke();\r\n\r\n                if (results.Count == 0)\r\n                {\r\n                    error = \"You do not have the PowerShell MSOnline module installed.  Please run Install-Module MSOnline in PowerShell, then restart this app.\";\r\n                }\r\n                else\r\n                {\r\n                    error = null;\r\n                }\r\n            }\r\n        }\r\n\r\n```\r\n\r\nI can run the same command directly in PowerShell & it lists MSOnline without an issue.  However, when run from within my .NET project, I get nothing.\r\n\r\nI have NuGet packages installed:\r\nMicrosoft.PowerShell.SDK 6.2.0\r\nMicrosoft.PowerShell.Commands.Diagnostics 6.2.0\r\nMicrosoft.WSMan.Management 6.2.0\r\n\r\nI have also attempted this in a clean console application with the above code only, on another machine and see the same results!\r\n\r\n# Expected behavior\r\n\r\nResults should contain one result listing MSOnline.\r\n\r\n# Actual behavior\r\n\r\nResults is an empty collection",
  "closed_at": "2019-10-01T00:00:41Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "I believe this is down to $env:PSModulePath not being defined in this kind of setup. No assumptions are made about PowerShell actually being installed here, nor where modules might be. You're going to have to set that value appropriately first. :)",
      "created_at": "2019-04-03T10:22:05Z",
      "updated_at": "2019-04-03T10:22:05Z"
    },
    {
      "author": "ghost",
      "author_association": "NONE",
      "body": "Hmm, interesting.  I have just run $env:PSModulePath from the C# app and can see it does have some path variables set, and those folders contain some modules.\r\n\r\nI've tried running Get-Module -ListAvailable from the console app and also get no results.  Considering I do have some module paths, surely I should get at least something?",
      "created_at": "2019-04-03T10:28:48Z",
      "updated_at": "2019-04-03T10:28:48Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Assuming they're compatible with PowerShell Core 6.2 I think so.\r\n\r\nThis kind of issue came up once before, but I can't find the issue right now. I'm sure someone else here has a better idea of where it is, but if not I'll keep looking a bit later.",
      "created_at": "2019-04-03T10:42:41Z",
      "updated_at": "2019-04-03T10:42:41Z"
    },
    {
      "author": "ghost",
      "author_association": "NONE",
      "body": "Thanks :)\r\n\r\nJust to add to this, I have checked the ps.Stream.Errors (and other) collections and am not seeing any errors or warnings or anything else.\r\n\r\nEDIT\r\n\r\nOk, so I'm now getting output with the following:\r\n\r\n```\r\n        public void Process(out string error)\r\n        {\r\n            using (var runspace = RunspaceFactory.CreateRunspace())\r\n            {\r\n                runspace.Open();\r\n\r\n                var proxy = runspace.SessionStateProxy;\r\n                var psModulePath = proxy.GetVariable(\"env:PSModulePath\");\r\n                proxy.SetVariable(\"env:PSModulePath\", $@\"{psModulePath};C:\\Program Files\\WindowsPowerShell\\Modules\");\r\n\r\n                using (var ps = PowerShell.Create())\r\n                {\r\n                    ps.Runspace = runspace;\r\n\r\n                    ps.AddScript(\"Get-Module -ListAvailable -Name MSOnline\");\r\n\r\n                    var results = ps.Invoke();\r\n\r\n                    if (results.Count == 0)\r\n                    {\r\n                        error = \"You do not have the PowerShell MSOnline module installed.  Please run Install-Module MSOnline in PowerShell, then restart this app.\";\r\n                    }\r\n                    else\r\n                    {\r\n                        error = null;\r\n                    }\r\n                } \r\n            }\r\n        }\r\n```\r\n\r\nWhat I still don't understand though is why Get-Module -ListAvailable on its own didn't return anything, despite some paths being set! Maybe I'm missing something here, but it doesn't seem quite right to me.",
      "created_at": "2019-04-03T10:46:01Z",
      "updated_at": "2019-04-03T10:48:36Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2019-10-01T00:00:40Z",
      "updated_at": "2019-10-01T00:00:40Z"
    },
    {
      "author": "toddalbers",
      "author_association": "NONE",
      "body": "Why was this issue marked as answered?  I don't see any entries above that even come close to answering it.  Others were able to recreate the issue above, but were just as perplexed as the original poster above.  I am experiencing this exact same issue, 2 years after the posts above.  I have not been able to find a solution to it.  It works fine within the PowerShell app and in PowerShell add-in is MS Code.  But, calling it from C# returns 0 results.  I respectfully request that this thread be reopened and that the \"Answered\" designation be removed.  I am trying to find the solution or explanation for this issue.  If I find it, I will come back here and post it, if I can.  Not even sure if this message will post.",
      "created_at": "2021-05-12T23:31:55Z",
      "updated_at": "2021-05-12T23:31:55Z"
    },
    {
      "author": "eturgeon123",
      "author_association": "NONE",
      "body": "still no answer ?",
      "created_at": "2022-05-22T15:19:38Z",
      "updated_at": "2022-05-22T15:19:38Z"
    }
  ],
  "created_at": "2019-04-03T10:16:19Z",
  "labels": [
    "Issue-Question",
    "Resolution-Answered"
  ],
  "number": 9282,
  "state": "closed",
  "title": "Get-Module -ListAvailable -Name MSOnline always returns an empty collection when run from .NET Core C#",
  "updated_at": "2022-05-22T15:19:38Z"
}