{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7575",
  "author": "vexx32",
  "body": "## PR Summary\r\n\r\nThis has been split off of #7509 at request of @iSazonov as that PR has become overly complex, and this portion of the PR was already approved by Powershell Committee.\r\n\r\nAdds the following numeric literal suffixes:\r\n\r\n* 'u' suffix (uint32)\r\n* 's' suffix (short)\r\n* 'ul' suffix (ulong)\r\n* 'us' suffix (ushort)\r\n\r\nAdds the following type accelerators:\r\n\r\n* `[short]`\r\n* `[ushort]`\r\n* `[uint]`\r\n* `[ulong]`\r\n\r\nAnd of course, adds tests for all the above.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` to the beginning of the title and remove the prefix when the PR is ready.\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [x] User-facing [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed - Issue link:\r\n- **Testing - New and feature**\r\n    - [ ] Not Applicable or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n        - [ ] [Add `[feature]` if the change is significant or affects feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\r\n",
  "closed_at": "2018-09-18T17:11:34Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "I don't intend to fix the code factor issues here. I'll address them during the parser refactor that will come after this. (Much of the code causing the majority of the issues will be replaced anyhow; see #7509).",
      "created_at": "2018-08-20T19:42:42Z",
      "updated_at": "2018-08-20T22:08:05Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "PowerShell Committee approved this in #7509.",
      "created_at": "2018-08-21T12:20:09Z",
      "updated_at": "2018-08-21T12:20:09Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "OK, pretty sure I got that short parsing sorted. I can understand doing operations in the console types can be freely converted, but if you're gonna specify `s` and get an int32, there's not much of a point!",
      "created_at": "2018-08-21T14:33:53Z",
      "updated_at": "2018-08-21T14:33:53Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov I've added the review tag back, since @BrucePay added back in the other PR.\r\n\r\nI think the scope of these changes are larger than the committee originally thought, and since they are pretty fundamental changes to some core functionality, they probably deserve some scrutiny and a holistic consideration.",
      "created_at": "2018-08-21T22:45:57Z",
      "updated_at": "2018-08-21T22:45:57Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@rjmholt The PR only add new suffixes and prefixes and doesn't change current behavior - this was approved by PowerShell Committee. \r\nIn #7509  @BrucePay ask PowerShell Committee again because we consider changing current numeric type convertion behavior.",
      "created_at": "2018-08-22T04:23:44Z",
      "updated_at": "2018-08-22T04:23:44Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@vexx32 Thanks for adding new test but they do not cover all code paths. Also we will add other code paths in the subsequent PR. That's why I suggested using a loop for suffixes.\r\nAfter that the PR looks ready to review MSFT experts and to merge.",
      "created_at": "2018-08-24T04:00:14Z",
      "updated_at": "2018-08-24T04:01:21Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Hmm, I see your point there, but as mentioned that will cause its own issues. I'll comb through the code paths and put together some more thorough tests from the beginning, should be a bit simpler than trying to squint at all the tests and see what's missing. \ud83d\ude04 ",
      "created_at": "2018-08-24T13:28:09Z",
      "updated_at": "2018-08-24T13:28:09Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@vexx32 We pass a string in `ExecuteCommand` and call AddScript there - I don't see side effects. Then we directly return a result object - again we shouldn't catch side effects. ",
      "created_at": "2018-08-24T18:26:28Z",
      "updated_at": "2018-08-24T18:26:28Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Sorry, poor choice of words @iSazonov.\r\n\r\nI'm thinking on it... I need to expand the tests and organise them a bit regardless, but as long as I don't add cases for the `short` or `ushort` type-d literal tests we should be fine. (Multipliers above `kb` will fail if applied to `(u)short` values because they are outside the value range of those data types.)\r\n\r\nBut isn't programmatically creating the tests like this going to yield only results that are self-consistent? If I changed the parser to behave in an unexpected way, it's going to parse the same for calculating the test as it will for actually testing the value. It's just checking its own work at that point, without us being able to actually check it properly.",
      "created_at": "2018-08-24T18:40:54Z",
      "updated_at": "2018-08-24T18:49:32Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "My understanding is that in ExecuteCommand a test string will be parsed. If we would wanted to test only parser we would not call ExecuteCommand at all. So we test not only parsing but conversion to value too.\r\nAs for multipliers above kb - if we expected a fail we should check it too. I think it is very useful if we plan add new custom ToInt()-like methods (without throw). It allow us to check all edge cases (overflows). We could add new parameter \"ExpectedThrow\" in the test.",
      "created_at": "2018-08-24T19:12:39Z",
      "updated_at": "2018-08-24T19:12:39Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Hmm. Might be a bit janky determining programmatically which cases are meant to fail. I'll keep looking at it, but I think you might be on a good track there.",
      "created_at": "2018-08-24T19:18:55Z",
      "updated_at": "2018-08-24T19:18:55Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov So I did give what you recommended a shot, but I ran into a *lot* of issues trying to handle edge cases, where it should convert up to (u)long values, where it shouldn't convert up, where it should/shouldn't error.\r\n\r\nI hope what I've got here is a happy medium between 'holy mother of test cases, Batman!' and 'what the hell is that weird loop doing'. \ud83d\ude09 \r\n\r\nLet me know if you'd like me to expand it any; with all the edge cases on the numerals, handling it programmatically is liable to be just another painful piece of code to try to upkeep. At least with explicit declaration we know exactly what it's testing, why, and how. \ud83d\ude04 ",
      "created_at": "2018-08-24T20:41:04Z",
      "updated_at": "2018-08-24T20:41:04Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov Added! \ud83d\ude04 \r\n\r\nAnd fixed those real `0.0` cases that I apparently didn't notice.",
      "created_at": "2018-08-27T11:10:26Z",
      "updated_at": "2018-08-27T11:10:38Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@rjmholt @SteveL-MSFT @daxian-dbw @BrucePay Please review the PR.",
      "created_at": "2018-08-27T11:14:15Z",
      "updated_at": "2018-08-27T11:14:15Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "*Pretty* sure that last test failing has nothing to do with this. \ud83d\ude04 But I did check it out, just in case.",
      "created_at": "2018-09-05T20:24:02Z",
      "updated_at": "2018-09-05T20:24:02Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee re-reviewed this and maintains the same recommendation to move forward with this PR",
      "created_at": "2018-09-05T22:35:59Z",
      "updated_at": "2018-09-05T22:35:59Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Closed&Reopened to get CIs to restart.\r\n\r\nHmm, haven't seen *that* error yet. Looks like an unrelated timeout issue, though. \ud83d\ude04 \r\n",
      "created_at": "2018-09-17T14:15:53Z",
      "updated_at": "2018-09-17T14:16:22Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@vexx32 Please rebase to fix CIs.",
      "created_at": "2018-09-18T05:04:10Z",
      "updated_at": "2018-09-18T05:04:10Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@vexx32 \r\nFor rebase you could do:\r\n```\r\n# rebase pull request on top of master\r\ngit chechout <branch>\r\ngit fetch PowerShell master\r\ngit pull --rebase PowerShell master\r\ngit push -f\r\n```",
      "created_at": "2018-09-18T08:24:15Z",
      "updated_at": "2018-09-18T08:24:15Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Attempting... this always seems far messier than it should be.",
      "created_at": "2018-09-18T08:33:13Z",
      "updated_at": "2018-09-18T08:33:13Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Okay... @iSazonov apologies about the mess. Not sure what it is with me and rebasing, but I've yet to manage to figure it out and get it done cleanly. The Linux build seems to be failing on some kind of permissions issue with that build environment, not sure what that's about.\r\n\r\nEverything else looks green, though. :) ",
      "created_at": "2018-09-18T09:13:11Z",
      "updated_at": "2018-09-18T09:13:11Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "You should reset to your last commit and then rebase.\r\nOr create new branch, copy your commits and open new PR.",
      "created_at": "2018-09-18T09:47:48Z",
      "updated_at": "2018-09-18T09:47:48Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov yeah, point taken. Rebasing is something I've yet to get to grips with. CLosing this for now, let's continue from a cleaner slate in #7813, where everything's all ready. :D",
      "created_at": "2018-09-18T17:11:33Z",
      "updated_at": "2018-09-18T17:11:33Z"
    }
  ],
  "created_at": "2018-08-20T16:57:45Z",
  "number": 7575,
  "state": "closed",
  "title": "Add C#-style type accelerators and suffixes for ushort, uint, ulong, and short literals.",
  "updated_at": "2018-09-19T22:59:59Z"
}