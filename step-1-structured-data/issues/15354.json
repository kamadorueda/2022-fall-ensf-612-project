{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15354",
  "author": "BinaryWizard904",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 and PowerShell 7+ issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6).\r\n\r\n-->\r\nIn PowerShell v7.1.3, `Write-Error` fails with an `InvalidOperation` error when the Category is ParserError and the ErrorAction is Continue or SilentlyContinue.\r\n\r\n## Steps to reproduce\r\n\r\n```powershell\r\nWrite-Error -Message \"Testing 123\" -Category ParserError -ErrorAction Continue\r\n$Error\r\n```\r\n\r\n## Expected behavior\r\nThe specified error is output to the Error Stream and/or console.\r\n```none\r\nWrite-Error:\r\nLine |\r\n   1 |  Write-Error -Message \"Testing123\" -Category ParserError -ErrorAction  \u2026\r\n     |  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n     | Testing123\r\n```\r\n*The example output above is taken from the output of `Write-Error` when ErrorAction is set to Stop.\r\n## Actual behavior\r\nWrite-Error fails and outputs the following error to the Error Stream.  Nothing is output to console.\r\n```none\r\nInvalidOperation:\r\nLine |\r\n 110 |  \u2026                      $line = $positionMessage[1].Substring(1) # skip  \u2026\r\n     |                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n     | You cannot call a method on a null-valued expression.\r\n\r\nInvalidOperation: An error occurred while enumerating through a collection: Collection was modified; enumeration operation may not execute..\r\n```\r\n\r\n## Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.3\r\nPSEdition                      Core\r\nGitCommitId                    7.1.3\r\nOS                             Microsoft Windows 10.0.19041\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "I think this is probably intentional. ParserErrors are only supposed to be utilised from the PowerShell parser itself, and they are by definition terminating errors. If a script can't be parsed, it can't be executed, period.",
      "created_at": "2021-05-05T17:44:08Z",
      "updated_at": "2021-05-05T17:44:08Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "The error is thrown from the formatting script for the Concise error view: https://github.com/PowerShell/PowerShell/blob/f38c97e4f44b06304e5ce34aa879034c4639ac19/src/System.Management.Automation/FormatAndOutput/DefaultFormatters/PowerShellCore_format_ps1xml.cs#L1158-L1159\r\n\r\n@SteveL-MSFT can you please take a look?",
      "created_at": "2021-05-05T20:57:51Z",
      "updated_at": "2021-05-05T20:57:51Z"
    },
    {
      "author": "BinaryWizard904",
      "author_association": "NONE",
      "body": "> \r\n> \r\n> I think this is probably intentional. ParserErrors are only supposed to be utilised from the PowerShell parser itself, and they are by definition terminating errors. If a script can't be parsed, it can't be executed, period.\r\n\r\nIt worked in older versions of PowerShell, though I haven't narrowed down the latest version it did so (probably before the new error output style, though).  Even assuming nobody intended for this category to ever be manually invoked as done in the reproduction steps, the ease with which it can be tells me this should be handled better.  `Write-Error` is not the sort of thing that should cryptically and silently fail when invoked in such a simplistic manner.  That's just asking for people (especially newcomers) to get into bad error handling habits to workaround the 'unreliable' `Write-Error`.",
      "created_at": "2021-05-06T06:26:43Z",
      "updated_at": "2021-05-06T06:26:43Z"
    }
  ],
  "created_at": "2021-05-05T17:34:28Z",
  "number": 15354,
  "state": "open",
  "title": "Write-Error Fails When Category = ParserError",
  "updated_at": "2021-05-06T06:26:43Z"
}