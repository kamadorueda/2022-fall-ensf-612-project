{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15556",
  "author": "hez2010",
  "body": "## Details of the Distribution\r\n\r\n- Name of the Distribution: Android\r\n- Version of the Distribution: Android 11\r\n- Package Types\r\n    - [ ] Deb\r\n    - [ ] RPM\r\n    - [ ] Tar.gz\r\n    - [x] apk\r\n- Processor Architecture (One per request): ARMv8\r\n- The following is a requirement for supporting a distribution **without exception.**\r\n    - [ ] The version and architecture of the Distribution is [supported by .NET Core](https://github.com/dotnet/core/blob/master/release-notes/5.0/5.0-supported-os.md#linux).\r\n- The following are requirements for supporting a distribution.\r\n  Please write a justification for any exception where these criteria are not met and\r\n  the PowerShell committee will review the request.\r\n    - [x] The version of the Distribution is supported for at least one year.\r\n    - [x] The version of the Distribution is not an [interim release](https://ubuntu.com/about/release-cycle) or equivalent.\r\n\r\n## Progress\r\n\r\n- [ ] ~An issues has been filed to create a Docker image in https://github.com/powershell/powershell-docker~ Docker images are not needed\r\n\r\n### For PowerShell Team **ONLY**\r\n\r\n- [ ] Docker image created\r\n- [ ] Docker image published\r\n- [ ] Distribution tested\r\n- [ ] Update `packages.microsoft.com` deployment\r\n- [ ] [Lifecycle](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/docs-conceptual/PowerShell-Support-Lifecycle.md) updated\r\n- [ ] Documentation Updated\r\n",
  "closed_at": "2022-04-26T20:00:47Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Please use Distribution Support Request template to create such request.",
      "created_at": "2021-06-10T13:59:13Z",
      "updated_at": "2021-06-10T13:59:13Z"
    },
    {
      "author": "hez2010",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov Done. Should I create separate issues for Android and iOS? ",
      "created_at": "2021-06-10T14:08:09Z",
      "updated_at": "2021-06-10T14:08:09Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Yes, please create separate issues.",
      "created_at": "2021-06-10T16:14:17Z",
      "updated_at": "2021-06-10T16:14:17Z"
    },
    {
      "author": "hez2010",
      "author_association": "CONTRIBUTOR",
      "body": "Done",
      "created_at": "2021-06-11T12:23:32Z",
      "updated_at": "2021-06-11T12:23:32Z"
    },
    {
      "author": "fMichaleczek",
      "author_association": "NONE",
      "body": "@iSazonov \r\nI had success there is one year one on Android with a modified SMA. (when I was testing WASM)\r\n\r\n![alt text](https://pbs.twimg.com/media/EcmQiByXYAAm9xM?format=png&name=large)\r\n\r\nThe problem is ... there is no Console at all.\r\n\r\nPossible workaround : \r\n- use XtermJS as a Blazor Hybrid app (so same code base as WASM) but had a lot of bugs because XtermJS in a process or in a browser is not the same \r\n- use termux (I haven't any idea how to mix it with Xamarian Forms) \r\n\r\n@hez2010 Do you work on the subject ? \r\n\r\nFor iOS, it doesn't work : \"Since applications using Xamarin.iOS are compiled to static code, it is not possible to use any facilities that require code generation at runtime.\"\r\nsource : https://docs.microsoft.com/en-us/xamarin/ios/internals/limitations\r\n\r\n\n\n<blockquote><img src=\"https://docs.microsoft.com/en-us/media/logos/logo-ms-social.png\" width=\"48\" align=\"right\"><div><strong><a href=\"https://docs.microsoft.com/en-us/xamarin/ios/internals/limitations\">Limitations of Xamarin.iOS - Xamarin</a></strong></div><div>This document describes the limitations of Xamarin.iOS, discussing generics, generic subclasses of NSObjects, P/Invokes in generic objects, and more.</div></blockquote>",
      "created_at": "2021-06-17T21:13:36Z",
      "updated_at": "2021-06-17T21:13:38Z"
    },
    {
      "author": "hez2010",
      "author_association": "CONTRIBUTOR",
      "body": "@fMichaleczek I found a C# port (Xamarin) of XtermJS may work on Android: https://github.com/xamarin/XtermSharp",
      "created_at": "2021-07-12T11:58:12Z",
      "updated_at": "2021-07-12T11:59:15Z"
    },
    {
      "author": "fMichaleczek",
      "author_association": "NONE",
      "body": "@hez2010 I will have a look. \n\nThere is 3 ways : Blazor or Maui or a mix of both. \nBecause I am working on the wasm port, I am more interested by Blazor Shared  Components. \n\nBut there is limitation until net7.0/8.0 on the Blazor/Maui gateway, so the standalobe Maui port is the better candidate for tomorrow.\n",
      "created_at": "2021-07-12T12:11:32Z",
      "updated_at": "2021-07-12T12:11:32Z"
    },
    {
      "author": "fMichaleczek",
      "author_association": "NONE",
      "body": "@hez2010 It's not a port of Xterm.JS, it's a port of TerminalUI on top on an existant PTY. Android is a web OS, so pty is not a native API, so embedded XtermJS in a Blazor Shared Component exposed to Maui is still the roadmap for me. I'm still monitor the progression of aspnet teams, but it's still in experimental features (the MAUI/Blazor  samples)",
      "created_at": "2021-07-12T12:19:18Z",
      "updated_at": "2021-07-12T12:19:18Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "This does not meet the distribution support requirements in the template.  Specifically .NET does not support this.",
      "created_at": "2022-04-26T20:00:47Z",
      "updated_at": "2022-04-26T20:00:47Z"
    }
  ],
  "created_at": "2021-06-10T13:51:11Z",
  "labels": [
    "Distribution-Declined"
  ],
  "number": 15556,
  "state": "closed",
  "title": "Distribution Support Request: PowerShell for Android",
  "updated_at": "2022-04-26T20:00:58Z"
}