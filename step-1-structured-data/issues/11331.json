{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11331",
  "author": "rjmholt",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nI hit an issue trying to delete a directory under OneDrive like this:\r\n\r\n```\r\nAt C:\\Users\\roholt\\OneDrive - Microsoft\\Dev\\PowerShellEditorServices\\PowerShellEditorServices.build.ps1:126 char:5\r\n+     Remove-Item $PSScriptRoot\\.tmp -Recurse -Force -ErrorAction Ignor \u2026\r\n+     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\roholt\\OneDrive - Microsoft\\Dev\\PowerShellEditorServices [master \u2261 +0 ~2 -0 !] [DBG]>> s\r\nAt C:\\Users\\roholt\\OneDrive - Microsoft\\Dev\\PowerShellEditorServices\\PowerShellEditorServices.build.ps1:127 char:5\r\n+     Remove-Item $PSScriptRoot\\module\\PowerShellEditorServices\\bin -Re \u2026\r\n+     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\roholt\\OneDrive - Microsoft\\Dev\\PowerShellEditorServices [master \u2261 +0 ~2 -0 !] [DBG]>> Remove-Item \"$root/module/PowerShellEditorServices/bin\" -Recurse -Force -Verbose\r\nRemove-Item: Index (zero based) must be greater than or equal to zero and less than the size of the argument list.\r\n```\r\n\r\nExpanding the error revealed this:\r\n\r\n```\r\n\r\nProviderInvocationException :\r\n    ProviderInfo   : Microsoft.PowerShell.Core\\FileSystem\r\n    ErrorRecord    :\r\n        Exception             :\r\n            TargetSite :\r\n                Name          : AppendFormatHelper\r\n                DeclaringType : System.Text.StringBuilder\r\n                MemberType    : Method\r\n                Module        : System.Private.CoreLib.dll\r\n            StackTrace :\r\n   at System.Text.StringBuilder.AppendFormatHelper(IFormatProvider provider, String format, ParamsArray args)\r\n   at System.String.FormatHelper(IFormatProvider provider, String format, ParamsArray args)\r\n   at System.Management.Automation.Internal.StringUtil.Format(String formatSpec, Object o)\r\n   at Microsoft.PowerShell.Commands.FileSystemProvider.RemoveDirectoryInfoItem(DirectoryInfo directory, Boolean recurse, Boolean force, Boolean rootOfRemoval)\r\n   at Microsoft.PowerShell.Commands.FileSystemProvider.RemoveItem(String path, Boolean recurse)\r\n   at System.Management.Automation.SessionStateInternal.RemoveItem(CmdletProvider providerInstance, String path, Boolean recurse, CmdletProviderContext context)\r\n            Message    : Index (zero based) must be greater than or equal to zero and less than the size of the argument list.\r\n            Source     : System.Private.CoreLib\r\n            HResult    : -2146233033\r\n        CategoryInfo          : InvalidOperation: (:) [], FormatException\r\n        FullyQualifiedErrorId : RemoveItemProviderException\r\n    Message        : Attempting to perform the RemoveItem operation on the 'FileSystem' provider failed for path 'C:\\Users\\roholt\\OneDrive - Microsoft\\Dev\\PowerShellEditorServices\\module\\PowerShellEditorServices\\bin'. Index (zero based) must be greater than or equal to zero and less than the size of the argument\r\nlist.\r\n    TargetSite     :\r\n        Name          : RemoveItem\r\n        DeclaringType : System.Management.Automation.SessionStateInternal\r\n        MemberType    : Method\r\n        Module        : System.Management.Automation.dll\r\n    StackTrace     :\r\n   at System.Management.Automation.SessionStateInternal.RemoveItem(CmdletProvider providerInstance, String path, Boolean recurse, CmdletProviderContext context)\r\n   at System.Management.Automation.SessionStateInternal.RemoveItem(String providerId, String path, Boolean recurse, CmdletProviderContext context)\r\n   at Microsoft.PowerShell.Commands.RemoveItemCommand.ProcessRecord()\r\n   at System.Management.Automation.CommandProcessor.ProcessRecord()\r\n    InnerException :\r\n        TargetSite :\r\n            Name          : AppendFormatHelper\r\n            DeclaringType : System.Text.StringBuilder\r\n            MemberType    : Method\r\n            Module        : System.Private.CoreLib.dll\r\n        StackTrace :\r\n   at System.Text.StringBuilder.AppendFormatHelper(IFormatProvider provider, String format, ParamsArray args)\r\n   at System.String.FormatHelper(IFormatProvider provider, String format, ParamsArray args)\r\n   at System.Management.Automation.Internal.StringUtil.Format(String formatSpec, Object o)\r\n   at Microsoft.PowerShell.Commands.FileSystemProvider.RemoveDirectoryInfoItem(DirectoryInfo directory, Boolean recurse, Boolean force, Boolean rootOfRemoval)\r\n   at Microsoft.PowerShell.Commands.FileSystemProvider.RemoveItem(String path, Boolean recurse)\r\n   at System.Management.Automation.SessionStateInternal.RemoveItem(CmdletProvider providerInstance, String path, Boolean recurse, CmdletProviderContext context)\r\n        Message    : Index (zero based) must be greater than or equal to zero and less than the size of the argument list.\r\n        Source     : System.Private.CoreLib\r\n        HResult    : -2146233033\r\n    Source         : System.Management.Automation\r\n    HResult        : -2146233087\r\nProviderInfo                : Microsoft.PowerShell.Core\\FileSystem\r\nErrorRecord                 :\r\n    Exception             :\r\n        TargetSite :\r\n            Name          : AppendFormatHelper\r\n            DeclaringType : System.Text.StringBuilder\r\n            MemberType    : Method\r\n            Module        : System.Private.CoreLib.dll\r\n        StackTrace :\r\n   at System.Text.StringBuilder.AppendFormatHelper(IFormatProvider provider, String format, ParamsArray args)\r\n   at System.String.FormatHelper(IFormatProvider provider, String format, ParamsArray args)\r\n   at System.Management.Automation.Internal.StringUtil.Format(String formatSpec, Object o)\r\n   at Microsoft.PowerShell.Commands.FileSystemProvider.RemoveDirectoryInfoItem(DirectoryInfo directory, Boolean recurse, Boolean force, Boolean rootOfRemoval)\r\n   at Microsoft.PowerShell.Commands.FileSystemProvider.RemoveItem(String path, Boolean recurse)\r\n   at System.Management.Automation.SessionStateInternal.RemoveItem(CmdletProvider providerInstance, String path, Boolean recurse, CmdletProviderContext context)\r\n        Message    : Index (zero based) must be greater than or equal to zero and less than the size of the argument list.\r\n        Source     : System.Private.CoreLib\r\n        HResult    : -2146233033\r\n    CategoryInfo          : NotSpecified: (:) [Remove-Item], FormatException\r\n    FullyQualifiedErrorId : System.FormatException,Microsoft.PowerShell.Commands.RemoveItemCommand\r\n    InvocationInfo        :\r\n        MyCommand        : Remove-Item\r\n        ScriptLineNumber : 1\r\n        OffsetInLine     : 1\r\n        HistoryId        : 34\r\n        Line             : Remove-Item \"$root/module/PowerShellEditorServices/bin\" -Recurse -Force -Verbose\r\n        PositionMessage  : At line:1 char:1\r\n                           + Remove-Item \"$root/module/PowerShellEditorServices/bin\" -Recurse -For \u2026\r\n                           + ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n        InvocationName   : Remove-Item\r\n        CommandOrigin    : Internal\r\n    ScriptStackTrace      : at <ScriptBlock>, C:\\Users\\roholt\\OneDrive - Microsoft\\Dev\\PowerShellEditorServices\\PowerShellEditorServices.build.ps1: line 127\r\n                            at *Task, C:\\Users\\roholt\\Documents\\PowerShell\\Modules\\InvokeBuild\\5.4.1\\Invoke-Build.ps1: line 526\r\n                            at <ScriptBlock><End>, C:\\Users\\roholt\\Documents\\PowerShell\\Modules\\InvokeBuild\\5.4.1\\Invoke-Build.ps1: line 684\r\n                            at <ScriptBlock>, <No file>: line 1\r\n    PipelineIterationInfo :\r\n\r\n\r\n\r\nTargetSite                  :\r\n    Name          : Invoke\r\n    DeclaringType : System.Management.Automation.Runspaces.PipelineBase\r\n    MemberType    : Method\r\n    Module        : System.Management.Automation.dll\r\nStackTrace                  :\r\n   at System.Management.Automation.Runspaces.PipelineBase.Invoke(IEnumerable input)\r\n   at System.Management.Automation.PowerShell.Worker.ConstructPipelineAndDoWork(Runspace rs, Boolean performSyncInvoke)\r\n   at System.Management.Automation.PowerShell.CoreInvokeHelper[TInput,TOutput](PSDataCollection`1 input, PSDataCollection`1 output, PSInvocationSettings settings)\r\n   at System.Management.Automation.PowerShell.CoreInvoke[TInput,TOutput](PSDataCollection`1 input, PSDataCollection`1 output, PSInvocationSettings settings)\r\n   at System.Management.Automation.PowerShell.InvokeWithDebugger(IEnumerable`1 input, IList`1 output, PSInvocationSettings settings, Boolean invokeMustRun)\r\n   at System.Management.Automation.ScriptDebugger.ProcessCommand(PSCommand command, PSDataCollection`1 output)\r\n   at Microsoft.PowerShell.ConsoleHost.InputLoop.ProcessDebugCommand(String cmd, Exception& e)\r\nMessage                     : Index (zero based) must be greater than or equal to zero and less than the size of the argument list.\r\nData                        : System.Collections.ListDictionaryInternal\r\nInnerException              :\r\n    TargetSite :\r\n        Name          : AppendFormatHelper\r\n        DeclaringType : System.Text.StringBuilder\r\n        MemberType    : Method\r\n        Module        : System.Private.CoreLib.dll\r\n    StackTrace :\r\n   at System.Text.StringBuilder.AppendFormatHelper(IFormatProvider provider, String format, ParamsArray args)\r\n   at System.String.FormatHelper(IFormatProvider provider, String format, ParamsArray args)\r\n   at System.Management.Automation.Internal.StringUtil.Format(String formatSpec, Object o)\r\n   at Microsoft.PowerShell.Commands.FileSystemProvider.RemoveDirectoryInfoItem(DirectoryInfo directory, Boolean recurse, Boolean force, Boolean rootOfRemoval)\r\n   at Microsoft.PowerShell.Commands.FileSystemProvider.RemoveItem(String path, Boolean recurse)\r\n   at System.Management.Automation.SessionStateInternal.RemoveItem(CmdletProvider providerInstance, String path, Boolean recurse, CmdletProviderContext context)\r\n    Message    : Index (zero based) must be greater than or equal to zero and less than the size of the argument list.\r\n    Source     : System.Private.CoreLib\r\n    HResult    : -2146233033\r\nSource                      : System.Management.Automation\r\nHResult                     : -2146233087\r\n\r\n```\r\n\r\nThe directory looked like this:\r\n\r\n```\r\n gi \"$root/module/PowerShellEditorServices/bin\"  | fl * -force\r\n\r\nPSPath              : Microsoft.PowerShell.Core\\FileSystem::C:\\Users\\roholt\\OneDrive - Microsoft\\Dev\\PowerShellEditorServices\\module\\PowerShellEditorServices\\bin\r\nPSParentPath        : Microsoft.PowerShell.Core\\FileSystem::C:\\Users\\roholt\\OneDrive - Microsoft\\Dev\\PowerShellEditorServices\\module\\PowerShellEditorServices\r\nPSChildName         : bin\r\nPSDrive             : C\r\nPSProvider          : Microsoft.PowerShell.Core\\FileSystem\r\nPSIsContainer       : True\r\nMode                : la---\r\nModeWithoutHardLink : la---\r\nBaseName            : bin\r\nTarget              :\r\nLinkType            :\r\nParent              : C:\\Users\\roholt\\OneDrive - Microsoft\\Dev\\PowerShellEditorServices\\module\\PowerShellEditorServices\r\nRoot                : C:\\\r\nFullName            : C:\\Users\\roholt\\OneDrive - Microsoft\\Dev\\PowerShellEditorServices\\module\\PowerShellEditorServices\\bin\r\nExtension           :\r\nName                : bin\r\nExists              : True\r\nCreationTime        : 12/10/2019 3:41:06 PM\r\nCreationTimeUtc     : 12/10/2019 11:41:06 PM\r\nLastAccessTime      : 12/12/2019 9:49:09 AM\r\nLastAccessTimeUtc   : 12/12/2019 5:49:09 PM\r\nLastWriteTime       : 12/10/2019 3:41:06 PM\r\nLastWriteTimeUtc    : 12/10/2019 11:41:06 PM\r\nAttributes          : Directory, Archive, ReparsePoint\r\n\r\n```\r\n\r\nI've tried writing tests that look like this:\r\n\r\n```\r\n    Describe -Name \"Symbolic links\" -Tag \"RequireAdminOnWindows\" {\r\n        BeforeEach {\r\n            $testDir = New-Item -Path $TestDrive -Name \"testdir\" -ItemType Directory\r\n        }\r\n\r\n        AfterEach {\r\n            if (Test-Path $testDir)\r\n            {\r\n                Remove-Item $testDir -Force -Recurse\r\n            }\r\n        }\r\n\r\n        It \"Should be able to delete a symlink to the directory\" {\r\n            $subDir = New-Item -ItemType Directory -Path $testDir -Name \"subdir\"\r\n            New-Item -ItemType File -Path $subDir -Name \"txt\" -Value \"nothing to see here\"\r\n            $symlink = New-Item -Name \"kwyjibo\" -Path $TestDrive -ItemType SymbolicLink -Target $testDir\r\n\r\n            Remove-Item $symlink -Recurse -Force\r\n\r\n            Test-Path $testDir | Should -BeTrue\r\n            Get-ChildItem $testDir | Should -HaveCount 0\r\n        }\r\n\r\n        It \"Should fail properly when a symlink cannot be deleted\" {\r\n            $subDir = New-Item -ItemType Directory -Path $testDir -Name \"subdir\"\r\n            New-Item -ItemType File -Path $subDir -Name \"txt\" -Value \"nothing to see here\" -Force\r\n            $file = New-Item -ItemType File -Path $subDir -Name \"txt\" -Value \"nothing to see here\"\r\n            $symlink = New-Item -Name \"kwyjibo\" -Path $TestDrive -ItemType SymbolicLink -Target $testDir\r\n\r\n            $file = [System.IO.File]::Open($file, 'open', 'read', 'none')\r\n            try\r\n            {\r\n                Remove-Item $symlink -Recurse -Force\r\n\r\n                Test-Path $testDir | Should -BeTrue\r\n                Get-ChildItem $testDir | Should -HaveCount 0\r\n            }\r\n            finally\r\n            {\r\n                $file.Close()\r\n                $file.Dispose()\r\n            }\r\n        }\r\n    }\r\n```\r\n\r\nHowever, they don't fail like OneDrive symlinks do and I'm not sure how to emulate this behaviour.\r\n\r\nThis is a very simple fix though: the recurse parameter needed to be passed to `Delete()` and the error message needed its second argument passed through.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2020-01-30T22:46:45Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I do not review in depth but I have concerns because there is old history:\r\nhttps://github.com/PowerShell/PowerShell/issues/621\r\nhttps://github.com/PowerShell/PowerShell/pull/3637\r\nhttps://github.com/PowerShell/PowerShell/issues/3674",
      "created_at": "2019-12-13T07:21:00Z",
      "updated_at": "2019-12-13T07:21:00Z"
    },
    {
      "author": "anmenaga",
      "author_association": "CONTRIBUTOR",
      "body": "after looking at those linked items, I agree with @iSazonov . We need more info before we can safely merge this. Specifically:\r\n1) what happens before and after this change when target directory is not empty; this change is adding `recurse=true` argument to `DirectoryInfo.Delete(Boolean)` and looking at linked items that may end as a breaking change.\r\n2) what is so special about OneDrive symlinks\r\n3) maybe we can separate fixing the error message into a separate PR; as far as I understand that does not depend on `DirectoryInfo.Delete(Boolean)` modification?",
      "created_at": "2020-01-24T21:09:50Z",
      "updated_at": "2020-01-24T21:09:50Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "> maybe we can separate fixing the error message into a separate PR; as far as I understand that does not depend on DirectoryInfo.Delete(Boolean) modification?\r\n\r\nI'm happy with that.\r\n\r\n> what is so special about OneDrive symlinks\r\n\r\nWell the answer to that seems to be \"they require recurse set to delete\". But I would like to know the full answer as well.",
      "created_at": "2020-01-27T17:44:51Z",
      "updated_at": "2020-01-27T17:44:51Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "But agreed. I think the bottom line is that if different symlinks behave differently, we need a way to differentiate them and get the right behaviour for each and this PR doesn't do that. I'll reduce it back to the error message fix.",
      "created_at": "2020-01-27T17:50:26Z",
      "updated_at": "2020-01-27T17:50:26Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.1.0-preview.1` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.1.0-preview.1)\n",
      "created_at": "2020-03-26T17:46:57Z",
      "updated_at": "2020-03-26T17:46:57Z"
    }
  ],
  "created_at": "2019-12-12T19:04:40Z",
  "number": 11331,
  "state": "closed",
  "title": "Fix error message during symlink deletion",
  "updated_at": "2020-03-26T17:46:57Z"
}