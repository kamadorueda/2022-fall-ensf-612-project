{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12509",
  "author": "ThePieMonster",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 and PowerShell 7+ issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n\r\n-->\r\n\r\n# Steps to reproduce\r\n\r\nRun a Get-Counter job providing a variable that contains the string of the counter you wish to capture for the \"-Counter\" parameter as per the below example.\r\n\r\n```powershell\r\n$t = \"\\LogicalDisk(C:)\\% Free Space\"\r\n$diskJob = Start-Job -ScriptBlock {Get-Counter -Counter \"$t\" -SampleInterval 10 -MaxSamples 25 | foreach {$_.CounterSamples} }\r\n```\r\n\r\n# Expected behavior\r\nSame behavior as if a string was typed out such as the below.\r\n```none\r\n$diskJob = Start-Job -ScriptBlock {Get-Counter -Counter \"\\LogicalDisk(C:)\\% Free Space\" -SampleInterval 10 -MaxSamples 25 | foreach {$_.CounterSamples} }\r\n```\r\n\r\n# Actual behavior\r\nJob shows completed immediately. \r\n![image](https://user-images.githubusercontent.com/11359134/80458380-8a747e00-88e5-11ea-8a45-ab384ca623d5.png)\r\n\r\n\r\n\r\n# Environment data\r\n```\r\nName                           Value                                                                                                                                                                                                                             \r\n----                           -----                                                                                                                                                                                                                             \r\nPSVersion                      5.1.14393.2430                                                                                                                                                                                                                    \r\nPSEdition                      Desktop                                                                                                                                                                                                                           \r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}                                                                                                                                                                                                           \r\nBuildVersion                   10.0.14393.2430                                                                                                                                                                                                                   \r\nCLRVersion                     4.0.30319.42000                                                                                                                                                                                                                   \r\nWSManStackVersion              3.0                                                                                                                                                                                                                               \r\nPSRemotingProtocolVersion      2.3                                                                                                                                                                                                                               \r\nSerializationVersion           1.1.0.1                                                                                                                                                                                                                           \r\n\r\n```\r\n```none\r\n\r\n```\r\n",
  "closed_at": "2020-04-28T17:04:28Z",
  "comments": [
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "Jobs run in a different process and don't inherit variables automatically.  If you use the `using` modifier, the value will be retrieved from the parent process (though it will be serialized).\r\n\r\n```powershell\r\n$t = \"\\LogicalDisk(C:)\\% Free Space\"\r\n$diskJob = Start-Job -ScriptBlock {\r\n    Get-Counter -Counter $using:t -SampleInterval 10 -MaxSamples 25 |\r\n        ForEach-Object { $_.CounterSamples }\r\n}\r\n```",
      "created_at": "2020-04-28T12:36:02Z",
      "updated_at": "2020-04-28T12:36:02Z"
    },
    {
      "author": "ThePieMonster",
      "author_association": "NONE",
      "body": "> Jobs run in a different process and don't inherit variables automatically. If you use the `using` modifier, the value will be retrieved from the parent process (though it will be serialized).\r\n> \r\n> ```powershell\r\n> $t = \"\\LogicalDisk(C:)\\% Free Space\"\r\n> $diskJob = Start-Job -ScriptBlock {\r\n>     Get-Counter -Counter $using:t -SampleInterval 10 -MaxSamples 25 |\r\n>         ForEach-Object { $_.CounterSamples }\r\n> }\r\n> ```\r\n\r\nOh wow, that is indeed the solution. Very interesting that Jobs run in a different process, I didn't see that mentioned in the docs anywhere when I was researching. Thanks!",
      "created_at": "2020-04-28T17:04:28Z",
      "updated_at": "2020-04-28T17:04:28Z"
    }
  ],
  "created_at": "2020-04-28T07:19:49Z",
  "labels": [
    "Issue-Question",
    "Resolution-Answered"
  ],
  "number": 12509,
  "state": "closed",
  "title": "PowerShell Job Shows \"Completed\" Immediately After Starting When Using A Variable As The -Counter Parameter",
  "updated_at": "2020-04-28T17:04:28Z"
}