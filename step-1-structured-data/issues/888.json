{
  "_url": "https://github.com/PowerShell/PowerShell/issues/888",
  "author": "JumpingYang001",
  "body": "$FormatEnumerationLimit = 1\n$result=Format-Table -inputobject @{'test'= 1, 2}\nExpect:test                           {1...}\nActual:test                           {1, 2}\n\n$FormatEnumerationLimit = \"abc\"\n$result=Format-Table -inputobject @{'test'= 1, 2}\nExpect: throw exception?\nActual:test                           {1, 2}\n\n$FormatEnumerationLimit = 2\nRemove-Variable FormatEnumerationLimit\n$result=Format-Table -inputobject @{'test'= 1, 2}\nExpect:throw exception?\nActual:test                           {1, 2}\n\nAbove cases is from UT:https://github.com/PowerShell/psl-monad/blob/master/monad/tests/monad/DRT/commands/utility/UnitTests/FormatAndOutputTests.cs#L512\n",
  "closed_at": null,
  "comments": [
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "The first issue is that only a _global_ variable by that name is respected (similar issue: #3645):\r\n\r\n```powershell\r\n# Variable created in child scope: FAILS\r\n> & { $FormatEnumerationLimit = 1; Format-Table -inputobject @{'test'= 1, 2} }\r\nName                           Value                                                                                                                                               \r\n----                           -----                                                                                                                                               \r\ntest                           {1, 2}                                                                                                                                              \r\n\r\n# Variable created in global scoe: OK\r\n> & { $global:FormatEnumerationLimit = 1; Format-Table -inputobject @{'test'= 1, 2} }\r\nName                           Value                                                                                                                                               \r\n----                           -----                                                                                                                                               \r\ntest                           {1...}                                                                                                                                              \r\n```\r\n\r\nThe 2nd issue is that the `$FormatEnumerationLimit` is not type-constrained, not even in the global scope.\r\n\r\nOn a related note: Other preference variables are type-constrained in the global scope (e.g., `$ErrorActionPreference`, but aren't predefined in descendant scopes, which makes them effectively unconstrained there; some preference variables aren't predefined at all, also making them unconstrained on creation - see #3483 and #3644 \r\n\r\nThe 3rd issue raises the general question whether preference variables should be _removable_.\r\nArguably, there's no harm in removing them, as long as they have implicit default values - which appears to be the case here (default value is `4`, as documented); run in the global scope:\r\n\r\n```powershell\r\n> Remove-Variable FormatEnumerationLimit; Format-Table -inputobject @{'test'= 1, 2,3,4,5}\r\nName                           Value                                                                                                                                               \r\n----                           -----                                                                                                                                               \r\ntest                           {1, 2, 3, 4...}                                                                                                                                     \r\n```\r\n\r\nThat said, if all preference variables were tagged as such, not only would their discovery be much easier, but removal could easily be prevented too; making preference variables programmatically discoverable has been suggested before, on [uservoice.com](https://windowsserver.uservoice.com/forums/301869-powershell/suggestions/17407222-powershell-and-collections-in-particular-collect)\r\nOn a related note, #4394 suggests improving the discoverability of variables of _automatic_ variables.\r\n\r\n",
      "created_at": "2017-08-12T03:43:26Z",
      "updated_at": "2017-08-12T03:45:15Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "There doesn't seem to be any pending action for this issue. Can we close it?",
      "created_at": "2019-09-14T02:32:09Z",
      "updated_at": "2019-09-14T02:32:09Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Having just come across this again: \r\n\r\nThere's clearly a bug here that's worth fixing: the `$FormatEnumerationLimit` value _in effect in the calling scope_ should be respected - you shouldn't have to modify the _global_ instance of the variable.\r\n\r\n\r\n",
      "created_at": "2020-02-18T14:12:30Z",
      "updated_at": "2020-02-18T14:12:30Z"
    },
    {
      "author": "doctordns",
      "author_association": "COLLABORATOR",
      "body": "I hit this bug last week. \r\n\r\nBump?",
      "created_at": "2021-11-02T17:37:52Z",
      "updated_at": "2021-11-02T17:37:52Z"
    }
  ],
  "created_at": "2016-04-21T09:15:26Z",
  "number": 888,
  "state": "open",
  "title": "$FormatEnumerationLimit with Format-Table not works well on some cases",
  "updated_at": "2021-11-02T17:37:52Z"
}