{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12215",
  "author": "viralmodi",
  "body": "I have spend quite a lot of time looking for answer to this question but could not find it. While this might not be the correct forum for this type of question but I couldn't find any other forum to ask this. I really need some help here since I couldn't even find an answer on reading Microsoft Powershell docs.\r\nI want to know the relation between Powershell versions (windows powershell and powershell core) and .Net Standard (Core and Framework) versions.\r\nAs a concrete example, If I have a powershell cmdlet built for target framework .Net Standard 2.0, how do I find which powershell versions (both windows powershell and powershell core), will it work on?\r\nMy understanding was as long as .Net Standard 2.0 or higher based implementation of .Net Core or .Net framework is installed on users machine, it doesn't matter which powershell version the user uses. The cmdlet should work. But then, users don't explicitly install these .NET versions on their machines. They are installed by default on Windows or as part of powershell core(?) on cross platform OSes. Can someone please help understand this relation and answer my question?",
  "closed_at": "2020-03-29T12:00:06Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> They are installed by default on Windows or as part of powershell core(?) on cross platform OSes.\r\n\r\nFirst look about \"self-contained\" and \" runtime-dependent\" .Net Core applications\r\nhttps://docs.microsoft.com/en-us/dotnet/core/deploying/\n\n<blockquote><img src=\"https://docs.microsoft.com/en-us/media/logos/logo-ms-social.png\" width=\"48\" align=\"right\"><div><strong><a href=\"https://docs.microsoft.com/en-us/dotnet/core/deploying/\">Application publishing - .NET Core</a></strong></div><div>Learn about the ways to publish a .NET Core application. .NET Core can publish platform-specific or cross-platform apps. You can publish an app as self-contained or as runtime-dependent. Each mode affects how a user runs your app.</div></blockquote>",
      "created_at": "2020-03-27T09:40:27Z",
      "updated_at": "2020-03-27T09:40:29Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "In addition to what @iSazonov mentioned, Windows PowerShell is always runtime dependent.  For a netstandard2.0 library to work within Windows PowerShell, the user will need at least net framework 4.7.1 installed (or I think 4.6.2 if you ship the netfx version of the netstandard.dll shim with your library)\r\n\r\nMore simply put, if you target netstandard2.0 it will work:\r\n\r\n1. In Windows PowerShell if net framework 4.7.1 is installed on the machine\r\n1. In PowerShell Core/PowerShell 7+.  Core can be runtime dependent too but any version should be compatible with netstandard2.0 iirc",
      "created_at": "2020-03-27T14:32:17Z",
      "updated_at": "2020-03-27T14:32:17Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Also see https://github.com/PowerShell/PowerShell/issues/6475#issuecomment-375798893\r\nhttps://docs.microsoft.com/en-us/powershell/scripting/learn/writing-portable-modules?view=powershell-7\n\n<blockquote><div><strong><a href=\"https://docs.microsoft.com/en-us/powershell/scripting/learn/writing-portable-modules\">Writing Portable Modules - PowerShell</a></strong></div></blockquote>",
      "created_at": "2020-03-27T16:49:40Z",
      "updated_at": "2020-03-27T16:49:42Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "The doc that @iSazonov linked to is expected to answer this question.  If there's anything unclear or missing, please open as a doc bug in https://github.com/MicrosoftDocs/PowerShell-Docs\n\n<blockquote><img src=\"https://repository-images.githubusercontent.com/44411511/850abe80-7ca6-11e9-886f-a1b13b275ae0\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicon.ico\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/MicrosoftDocs/PowerShell-Docs\">MicrosoftDocs/PowerShell-Docs</a></strong></div><div>The official PowerShell documentation sources. Contribute to MicrosoftDocs/PowerShell-Docs development by creating an account on GitHub.</div></blockquote>",
      "created_at": "2020-03-27T20:23:37Z",
      "updated_at": "2020-03-27T20:23:39Z"
    },
    {
      "author": "viralmodi",
      "author_association": "NONE",
      "body": "Thanks folks. I do have some follow on questions but first will read the docs pointed by you and see if they get answered there. Will respond back after that.",
      "created_at": "2020-03-27T20:32:03Z",
      "updated_at": "2020-03-27T20:32:03Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@viralmodi If you have an interest please document and share you experience. ",
      "created_at": "2020-03-28T10:22:43Z",
      "updated_at": "2020-03-28T10:22:43Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2020-03-29T12:00:05Z",
      "updated_at": "2020-03-29T12:00:05Z"
    },
    {
      "author": "viralmodi",
      "author_association": "NONE",
      "body": "@iSazonov @SeeminglyScience @SteveL-MSFT \r\nI read the links and while they were useful; they couldn't answer all my questions. Here are my follow-on questions. Let's say I have a powershell cmdlet with target framework of .NET Standard 2.0 (run-time dependent and not self-contained)\r\n1) Will it work with Windows powershell 2.0, 3.0, 4.0, 5.0, 5.1?\r\n2) Will it work with Powershell core versions 5.0, 6.0 and 7.0?\r\n3) If I have powershell 3.0 installed which as per this link (https://docs.microsoft.com/en-us/powershell/scripting/install/windows-powershell-system-requirements?view=powershell-7) requires .NET framework 4, will my cmdlet work on it?\r\n4) Same condition as #3 question above but let's say if I externally install .NET framework 4.6.1 (or 4.7.x) from MSFT website on my machine, will it work with powershell 3.0 now? \r\n5) #4 question above is to understand that if it even matters what version of powershell I have to run my cmdlet. Does the only thing that matters is if I have a .NET Core or .Net Framework corresponding to .NET standard 2.0 installed on my client machine?\r\n\r\nPerhaps a table which has the following column with all combinations would help:\r\n(1) Cmdlet target framework, \r\n(2) Powershell version being used, \r\n(3) .NET framework or core version installed on the client\r\n(4) Will work or not\r\n\r\nThe issue seems closed. Let me know if I need to open a new issue to get my questions answered.\r\n<blockquote><div><strong><a href=\"https://docs.microsoft.com/en-us/powershell/scripting/install/windows-powershell-system-requirements\">Windows PowerShell System Requirements - PowerShell</a></strong></div></blockquote>",
      "created_at": "2020-03-30T01:00:29Z",
      "updated_at": "2020-03-30T01:04:58Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "> Let's say I have a powershell cmdlet with target framework of .NET Standard 2.0 (run-time dependent and not self-contained)\r\n\r\nThe choice of run time dependent vs self contained is up to the host application, which in this case is PowerShell. This would only be your decision if you were running outside of PowerShell, or if you were hosting it.  I'm being a little pedantic here admittedly, but it can be an important distinction.\r\n\r\n> 1. Will it work with Windows powershell 2.0, 3.0, 4.0, 5.0, 5.1?\r\n\r\nNot 2.0, that specifically requires a much older CLR version which is only supported by net framework 3.5 and below.  Everything else, depends on if netfx 4.7.1 (or 4.6.2 if you ship the shim) is installed on the target machine. That said the version of `PowerShellStandard.Library` built for 3.0 hasn't seen a lot of love (or adoption).  YMMV for anything under 5.1.\r\n\r\n> 2. Will it work with Powershell core versions 5.0, 6.0 and 7.0?\r\n\r\nDefinitely 6.0 and 7.0.  If by 5.0 you mean the version of PS core that was in nano I'm not sure, but probably not. iirc that had a really early build of .NET core which almost definitely wasn't netstandard2.0 compliant.  Is that still available through something? cc @SteveL-MSFT \r\n\r\n> 3. If I have powershell 3.0 installed which as per this link (https://docs.microsoft.com/en-us/powershell/scripting/install/windows-powershell-system-requirements?view=powershell-7) requires .NET framework 4, will my cmdlet work on it?\r\n> 4. Same condition as #3 question above but let's say if I externally install .NET framework 4.6.1 (or 4.7.x) from MSFT website on my machine, will it work with powershell 3.0 now?\r\n> 5. #4 question above is to understand that if it even matters what version of powershell I have to run my cmdlet. Does the only thing that matters is if I have a .NET Core or .Net Framework corresponding to .NET standard 2.0 installed on my client machine?\r\n\r\nSee response to `#1` for answers to above.\r\n\r\n<blockquote><div><strong><a href=\"https://docs.microsoft.com/en-us/powershell/scripting/install/windows-powershell-system-requirements\">Windows PowerShell System Requirements - PowerShell</a></strong></div></blockquote>",
      "created_at": "2020-03-30T01:31:31Z",
      "updated_at": "2020-03-30T01:31:54Z"
    },
    {
      "author": "viralmodi",
      "author_association": "NONE",
      "body": "Thanks @SeeminglyScience That answers a bunch of my questions. While you have mentioned that answers to my other questions is same as what you mentioned in #1. \r\nI want an explicit answer to these ones:\r\n1) Powershell cmdlet targetted for .NET Standard 2.0 being run in Windows Powershell 5.0 (or 4.0) - will it work? I read your answer to this as YMMV but why is it YMMV is what I don't understand.\r\n2) Powershell cmdlet targetted for .NET Standard 2.0 being run in Windows Powershell 5.0 (or 4.0) and let's say I have .NET Framework 4.7.1 separately installed (I don't know if this scenario makes sense or is possible) - will it work?\r\nThe above questions only reinforce some confusion in my understanding about relation between Powershell version, Cmdlet target framework and .NET version installed on my client machine. Perhaps, a re-take on my 5th question above which I don't see an answer to or may be, I couldn't infer from your answers, might better help my understanding. Repeating again:\r\n5) if it even matters what version of powershell I am running my cmdlet on. Does the only thing that matters is if I have a .NET Core or .Net Framework corresponding to .NET standard 2.0 installed on my client machine? i.e. can I direct my host application for my cmdlet, Powershell in this case, to use any installed .Net Framework on my client machine?\r\nThanks for patiently answering all my questions and that too pretty fast.",
      "created_at": "2020-03-30T04:41:55Z",
      "updated_at": "2020-03-30T04:41:55Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> will my cmdlet work on it?\r\n\r\n\"Will\" says that you plan new project. Strategic recommendations from .Net Core team is to start new project only on .Net Core.\r\n\r\nYou can find .Net Standard compatibility table in docs https://docs.microsoft.com/en-us/dotnet/standard/net-standard#net-implementation-support\n\n<blockquote><img src=\"https://docs.microsoft.com/en-us/media/logos/logo-ms-social.png\" width=\"48\" align=\"right\"><div><strong><a href=\"https://docs.microsoft.com/en-us/dotnet/standard/net-standard\">.NET Standard</a></strong></div><div>Learn about .NET Standard, its versions and the .NET implementations that support it.</div></blockquote>",
      "created_at": "2020-03-30T05:32:24Z",
      "updated_at": "2020-03-30T05:32:26Z"
    },
    {
      "author": "viralmodi",
      "author_association": "NONE",
      "body": "@iSazonov  Yes that is correct. It's a new project I am working on.\r\nBased on MSFT and Azure doc reading, I realized that its better to target .NET Standard compared to .NET framework or .NET Core if the product is targeted towards Windows and other OSes. \r\nI had referred that table earlier as well. It had helped me understand the relation between .NET standard, .NET Core and .NET framework.\r\nI am still looking to get answers to my questions above. This is to get better grasp on relation between Powershell version, .NET version/s installed on the machine and my product's target framework. Can you please answer my questions above?\r\n\r\n\r\n\r\n",
      "created_at": "2020-03-30T06:16:02Z",
      "updated_at": "2020-03-30T06:16:02Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "MSFT supports only Windows PowerShell 5.1 (maybe still 5.0) and it is only _servicing_ support (critical and security fixes). The same is true for .Net Framework - 4.7 and 4.8 has only servicing support.\r\nIf you do not have to support old versions like Windows 7 you have no need to invest in compatibility with .Net Framework.\r\nAlso PowerShell Core has not compatibility with Windows PowerShell 2.0 and 3.0 at all.\r\n",
      "created_at": "2020-03-30T06:37:42Z",
      "updated_at": "2020-03-30T06:37:42Z"
    },
    {
      "author": "viralmodi",
      "author_association": "NONE",
      "body": "@iSazonov Thanks for the input. In that case, what is the latest version of Powershell that can be used on Windows? Can we use Powershell 6.0/7.0 based on .NET Core implementation on windows as well?",
      "created_at": "2020-03-30T06:46:03Z",
      "updated_at": "2020-03-30T06:46:31Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Current PowerShell version is 7.0. It is LTS (supported as .Net Core 3.1).\r\n(6.2 is still supported some months)\r\n\r\nSo if your project is targeted to .Net Standard 2.0 and reference PowerShell Standard library your application will works on all supported systems (Windows and Unix-s) and Windows PowerShell 5 too.",
      "created_at": "2020-03-30T07:06:32Z",
      "updated_at": "2020-03-30T07:06:32Z"
    },
    {
      "author": "viralmodi",
      "author_association": "NONE",
      "body": "@iSazonov Thanks.\r\nAt this point, I do not have information on whether we need to support old versions. But I am going to go with support for Windows Powershell 5.1 (with .NET Framework 4.7.2 installed), Powershell Core 6.0+ which based on this thread will work with target framework .NET Standard 2.0 for my project.",
      "created_at": "2020-03-30T17:35:04Z",
      "updated_at": "2020-03-30T17:35:04Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@viralmodi On top of the GitHub page you can find \"Used by\" button - this helps you to find sample projects.",
      "created_at": "2020-03-30T17:40:54Z",
      "updated_at": "2020-03-30T17:40:54Z"
    },
    {
      "author": "viralmodi",
      "author_association": "NONE",
      "body": "Sure. Thanks. This discussion was very helpful",
      "created_at": "2020-03-31T19:49:10Z",
      "updated_at": "2020-03-31T19:49:10Z"
    }
  ],
  "created_at": "2020-03-27T04:12:58Z",
  "labels": [
    "Issue-Question",
    "Resolution-Answered",
    "WG-DevEx-SDK"
  ],
  "number": 12215,
  "state": "closed",
  "title": "Powershell version relation to .Net Standard, Core and/or framework versions",
  "updated_at": "2020-03-31T19:49:10Z"
}