{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7757",
  "author": "vexx32",
  "body": "This is potentially problematic, as it can make developing scripts or modules with module dependencies like Exchange or other similar modules, which may not necessarily be installed locally on the development machine, a bit frustrating at times.\r\n\r\nSteps to reproduce\r\n------------------\r\nCreate and save a script file with the following contents:\r\n```powershell\r\n#requires -modules nonexistentModule1\r\nparam(\r\n    $Param1,\r\n\r\n    $SecretParam\r\n)\r\n```\r\n\r\nOpen a PowerShell console and attempt to tab complete parameters:\r\n```powershell\r\nPS> .\\test.ps1 -{tab}\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```none\r\nPS> .\\test.ps1 -Param1\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\nTab completion does not work at all.\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.1.0-rc.1\r\nPSEdition                      Core\r\nGitCommitId                    6.1.0-rc.1\r\nOS                             Microsoft Windows 10.0.17134\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2022-05-25T09:00:43Z",
  "comments": [
    {
      "author": "theJasonHelmick",
      "author_association": "CONTRIBUTOR",
      "body": "Thank you @vexx32.  This is by design.  If the requirements are not met, the script is not executed.  https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_requires?view=powershell-7.2\r\n\r\nProviding tab completion for some parts of the script, while not providing others (such as commands from modules not loaded) would provide a confusing (at best) experience -  My hope is that the error message is clear enough for someone to understand why their script is not working expected, including tab completion.\r\n\".\\test.ps1: The script 'test.ps1' cannot be run because the following modules that are specified by the \"#requires\" statements of the script are missing: nonexistentModule1.\"\r\n\n\n<blockquote><img src=\"https://docs.microsoft.com/media/logos/logo-powershell-social.png\" width=\"48\" align=\"right\"><div><strong><a href=\"https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_requires\">about Requires - PowerShell</a></strong></div><div>Prevents a script from running without the required elements.</div></blockquote>",
      "created_at": "2022-05-23T17:53:21Z",
      "updated_at": "2022-05-23T17:53:24Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@theJasonHelmick I think you misunderstand. This is about _tab completion_, not runtime errors.\r\n\r\nIf you have a module like Exchange (or, really, anything else) that happens to not be installed on the machine that you are currently writing code on, you don't get very basic usability.\r\n\r\nLike a tab completion for scripts. If I have a script I'm writing code around and can't tab complete any of the parameters because a module isn't presently loaded, PowerShell is _actively_ hampering DevX features. The module being loaded doesn't truly matter until runtime, which is when that error will actually show up. \r\n\r\nMy suggestion is mainly that requirements for parsing specifically for dev-time features like tab completion can be relaxed around some uses of `#Requires`. Currently, because PowerShell adamantly refuses to parse the script, editor tooling is effectively rendered mostly useless. A better solution might be to have two parsing modes; one that is strict and used when the intention is to then run the script, and one that is a little more lax and mainly used for tab completion suggestions and other dev time concerns where running the script isn't a priority.",
      "created_at": "2022-05-23T19:58:33Z",
      "updated_at": "2022-05-23T20:09:01Z"
    },
    {
      "author": "theJasonHelmick",
      "author_association": "CONTRIBUTOR",
      "body": ">A better solution might be to have two parsing modes; one that is strict and used when the intention is to then run the script, and one that is a little more lax and mainly used for tab completion suggestions and other dev time concerns where running the script isn't a priority.\r\n\r\nHow would these parsing modes be specified by the user?",
      "created_at": "2022-05-23T20:30:54Z",
      "updated_at": "2022-05-23T20:30:54Z"
    },
    {
      "author": "theJasonHelmick",
      "author_association": "CONTRIBUTOR",
      "body": "@vexx32 - I do appreciate your point and am happy to discuss further.  In the immediate future, I'm going to mark this as a doc issue.  @sdwheeler, see if you agree. In the long description of About_Requires;\r\n\r\n> \"The #Requires statement prevents a script from running unless the PowerShell version, modules (and version), or snap-ins (and version), and edition prerequisites are met. If the prerequisites aren't met, PowerShell doesn't run the script.\"\r\n\r\nwe should add \"This includes PowerShell features such as tab completion.\"",
      "created_at": "2022-05-23T20:56:59Z",
      "updated_at": "2022-05-23T20:56:59Z"
    },
    {
      "author": "sdwheeler",
      "author_association": "COLLABORATOR",
      "body": "@theJasonHelmick or @vexx32 Please files a docs issue at https://github.com/MicrosoftDocs/PowerShell-Docs/issues/new/choose.\n\n<blockquote><img src=\"https://github.githubassets.com/images/modules/open_graph/github-logo.png\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com\">Build software better, together</a></strong></div><div>GitHub is where people build software. More than 83 million people use GitHub to discover, fork, and contribute to over 200 million projects.</div></blockquote>",
      "created_at": "2022-05-23T21:03:45Z",
      "updated_at": "2022-05-23T21:03:47Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "I don't think the _end_ user need specify in general. I would imagine an additional overload / optional parameter be added to the parsing methods on the Parser class which can skip some checks of this nature when parsing. Editor tooling, tab completion, and similar scenarios can use the newer overload for parsing methods instead of the typical parsing method to allow tab completion, command discovery, help information, etc. to be used.\r\n\r\nThen, when a script actually needs to be run in PowerShell, the code paths in that case would continue to use the existing methods which hard-stop at unsatisfied #Requires statements.\r\n\r\nThere is possibly an edge case where someone deliberately tries to use an AST compiled from this new overload to invoke the code; perhaps we could return some kind of non-invokable AST (where `GetScriptBlock()` from the AST just throws instead of returning a scriptblock) from the new method to avoid those cases.\r\n\r\nIMO things like command discovery, help discovery, and tab completion don't need the safety checks that #Requires promises in the same capacity that the parser uses for scripts that are intended to be invoked.",
      "created_at": "2022-05-23T21:05:54Z",
      "updated_at": "2022-05-23T21:05:54Z"
    },
    {
      "author": "theJasonHelmick",
      "author_association": "CONTRIBUTOR",
      "body": "Could the workaround be as simple as to comment out the requires?  ",
      "created_at": "2022-05-23T21:18:14Z",
      "updated_at": "2022-05-23T21:18:14Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as by-design and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2022-05-25T09:00:42Z",
      "updated_at": "2022-05-25T09:00:42Z"
    }
  ],
  "created_at": "2018-09-11T14:10:09Z",
  "labels": [
    "Issue-Enhancement",
    "Resolution-By Design",
    "Documentation Needed"
  ],
  "number": 7757,
  "state": "closed",
  "title": "#Requires statement breaks script parameter tab completion if modules aren't loaded",
  "updated_at": "2022-05-25T09:00:43Z"
}