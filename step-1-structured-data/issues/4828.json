{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4828",
  "author": "iSazonov",
  "body": "New-TemporaryFile returns a native .Net FileInfo object without extended PowerShell filesystem provider properties.\r\n\r\nThe problem is in PowerShell Core 6 but not in Windows PowerShell.\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\n$temp =  New-TemporaryFile\r\n$temp | Select-Object PS*\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```none\r\nPSPath        : Microsoft.PowerShell.Core\\FileSystem::C:\\Users\\username\\AppData\\Local\\Temp\\tmpE88E.tmp\r\nPSParentPath  : Microsoft.PowerShell.Core\\FileSystem::C:\\Users\\username\\AppData\\Local\\Temp\r\nPSChildName   : tmpE88E.tmp\r\nPSDrive       : C\r\nPSProvider    : Microsoft.PowerShell.Core\\FileSystem\r\nPSIsContainer : False\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n```none\r\n<empty>\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.0-beta\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.0-beta.6-60-g4ad313aafb1a1b747aaec0f975dcc823e4c907fc-dirty\r\nOS                             Microsoft Windows 10.0.10240\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2021-05-25T06:24:53Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I don't see how we can fix this in a simple way so maybe Won't fix.",
      "created_at": "2017-09-13T12:56:14Z",
      "updated_at": "2017-09-13T12:56:14Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "One way to fix this is to call `Get-Item` on it and the FileSystemProvider will decorate it and return that object.",
      "created_at": "2017-09-13T22:27:03Z",
      "updated_at": "2017-09-13T22:27:03Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT I tried to do it, but I was having troubles. (1) We should create `GetItemCommand` for every new temp file - it seems looks not good. (2) I can not create `GetItemCommand` in the New-TemporaryFile cmdlet - unresolved name. If we have to add reference from Utility assembly to Management assembly - it seems looks not good?",
      "created_at": "2017-09-14T04:25:03Z",
      "updated_at": "2017-09-14T04:25:03Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Maybe this is an opportunity to revisit https://github.com/PowerShell/PowerShell/issues/4347#issuecomment-318098122 (making these properties part of the ETS rather than having the filesystem provider add it)?",
      "created_at": "2017-09-14T14:20:36Z",
      "updated_at": "2017-09-14T14:20:36Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@mklement0 yes, I think doing this as part of ETS makes sense, perhaps we should resolve this as dupe of that one",
      "created_at": "2017-09-14T14:56:00Z",
      "updated_at": "2017-09-14T14:56:00Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Good catch about ETS! Thanks!\r\n\r\nWhat is right place for the fix?\r\n",
      "created_at": "2017-09-14T15:09:48Z",
      "updated_at": "2017-09-14T15:09:48Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT:\r\n\r\nGlad to hear it.\r\n\r\nRe dupe:\r\n\r\nGiven that #4347 was just framed as a  _question_, I suggest creating a new, focused issue that reflects the intent to actually implement this (note that @lzybkr's original comments suggest that there may be conceptual problems).\r\n\r\n@iSazonov:\r\n\r\nFrom what I can tell, the relevant ETS members are defined here:\r\n\r\nSystem.IO.FileInfo:\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/master/src/System.Management.Automation/engine/Types_Ps1Xml.cs#L192\r\n\r\nSystem.IO.DirectoryInfo:\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/master/src/System.Management.Automation/engine/Types_Ps1Xml.cs#L180\r\n",
      "created_at": "2017-09-14T16:51:28Z",
      "updated_at": "2017-09-14T16:51:28Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@mklement0 Thanks for clarify!\r\n\r\nI'm afraid I don't see all the side effects. Maybe @jeffbi can fix this?",
      "created_at": "2017-09-14T17:29:17Z",
      "updated_at": "2017-09-14T17:29:17Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov @jeffbi was a vendor we hired to do some work, he's no longer on the project unless he wants to contribute personally",
      "created_at": "2017-09-14T18:03:22Z",
      "updated_at": "2017-09-14T18:03:22Z"
    }
  ],
  "created_at": "2017-09-13T11:10:50Z",
  "number": 4828,
  "state": "closed",
  "title": " New-TemporaryFile returns a object without extended filesystem provider properties",
  "updated_at": "2021-05-25T06:24:53Z"
}