{
  "_url": "https://github.com/PowerShell/PowerShell/issues/8814",
  "author": "kilasuit",
  "body": "You currently have a script for helping install PowerShell as per https://github.com/PowerShell/PowerShell/blob/master/tools/install-powershell.ps1\r\n\r\nThis script is not signed - could you please sign this and others if you are sharing them to be used in production environments by users :-)",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Perhaps @TravisEz13 could address the question.",
      "created_at": "2019-02-02T14:34:56Z",
      "updated_at": "2019-02-02T14:34:56Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "I'm assuming you are asking to sign with a Microsoft Certificate.  I'd have to investigate any other option.\r\n\r\nWhat is the goal for us signing it (there are different certificates with different amounts of engineering work on our part for each scenario)?\r\n\r\n1. Know that it comes from Microsoft and has not been tampered with.\r\n1. The First option plus knowing it is safe (secure, even in device guard or AppLocker scenarios) to use.\r\n\r\nIt would be impractical to sign scripts that are simply checked into the repo and under development.  Anything we sign falls under additional requirements that sample code we have in the repo.  \r\n\r\nTo solve this, we would have to create a release mechanism such as releasing it as a script on the gallery.  \r\n\r\n@SteveL-MSFT \tCan you give feedback?",
      "created_at": "2019-02-02T21:54:13Z",
      "updated_at": "2019-02-03T20:33:37Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "One scenario is an enterprise where environment is locked with AppLocker (allow run only signed apps and scripts)",
      "created_at": "2019-02-03T06:11:50Z",
      "updated_at": "2019-02-03T06:11:50Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@iSazonov \tThat would be scenario 2. Windows Defender Application Control (formerly Device guard) is similar.",
      "created_at": "2019-02-03T20:35:38Z",
      "updated_at": "2019-02-03T20:35:38Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "The scripts are (hopefully) a temporary problem on Windows (we're looking at different options).  On Linux, and macOS, I believe it's easy enough to install using apt/yum/brew.  In the interim, we could sign the install-powershell.ps1 script and publish to PSGallery.",
      "created_at": "2019-02-04T16:52:23Z",
      "updated_at": "2019-02-04T16:52:23Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "We have a request to have Update-PowerShell cmdlet. We could replace install-powershell.ps1 with the cmdlet which could download a signed manifest from persistent link and use the manifest to download new PowerShell version or updates.\r\n\r\nAnd we have https://github.com/PowerShell/PowerShell-RFC/pull/97",
      "created_at": "2019-02-05T03:47:08Z",
      "updated_at": "2019-02-05T03:59:38Z"
    }
  ],
  "created_at": "2019-02-02T03:34:36Z",
  "labels": [
    "Issue-Enhancement",
    "Area-Maintainers-Build"
  ],
  "number": 8814,
  "state": "open",
  "title": "Please sign any .ps1 scripts in this repository",
  "updated_at": "2019-02-05T03:59:38Z"
}