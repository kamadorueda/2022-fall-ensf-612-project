{
  "_url": "https://github.com/PowerShell/PowerShell/issues/1719",
  "author": "TravisEz13",
  "body": "<!--\n\nIf it is a bug report:\n- make sure you are able to repro it on the latest released version. \nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\n- Search the existing issues.\n- Refer to the [FAQ](../docs/FAQ.md).\n- Refer to the [known issues](../docs/KNOWNISSUES.md).\n- Fill out the following repro template\n\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\n-->\n## Steps to reproduce\n\n`$env:psmodulePath`\n## Expected behavior\n\nIt should contain %windir%\\system32\\WindowsPowerShell\\v1.0\\Modules so that we can try to load any modules there that work, such as `nettcpip`\n## Actual behavior\n\nIt does not contain %windir%\\system32\\WindowsPowerShell\\v1.0\\Modules\nTherefore `nettcpip` will not load except is specified by path\n## Environment data\n\nRepro's both through remoting and locally on Nano\n\n<!-- provide the output of $PSVersionTable -->\n\n``` powershell\n> $PSVersionTable\n\nName                           Value\n----                           -----\nPSEdition                      Core\nWSManStackVersion              3.0\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\nPSVersion                      6.0.0-alpha\nSerializationVersion           1.1.0.1\nGitCommitId                    v6.0.0-alpha.7-378-g86c5d3e4c88fe1489dcb657132e64dd8535da6a1\nBuildVersion                   3.0.0.0\nPSRemotingProtocolVersion      2.3\nCLRVersion\n```\n",
  "closed_at": "2016-08-11T21:39:27Z",
  "comments": [
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "/cc @mirichmo @daxian-dbw \n",
      "created_at": "2016-08-11T16:32:53Z",
      "updated_at": "2016-08-11T16:32:53Z"
    },
    {
      "author": "mirichmo",
      "author_association": "MEMBER",
      "body": "This is \"working as designed.\" You can add that to the module path if you want access to those modules, but PowerShell Core, by default, only points to itself and PowerShell Core locations.\n",
      "created_at": "2016-08-11T16:47:33Z",
      "updated_at": "2016-08-17T05:55:27Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "If it's side-by-side scenario, then this is by design. However, if you were replacing inbox nano ps binaries with PowerShell Core binaries, the inbox ps by default should continue to use `%windir%\\system32\\WindowsPowerShell\\v1.0\\Modules` in the module path.\n",
      "created_at": "2016-08-11T16:49:20Z",
      "updated_at": "2016-08-17T05:55:45Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "Decided in triage this is by design for PowerShell\n",
      "created_at": "2016-08-11T21:38:45Z",
      "updated_at": "2016-08-11T21:38:45Z"
    }
  ],
  "created_at": "2016-08-11T02:09:26Z",
  "number": 1719,
  "state": "closed",
  "title": "On Nano, %windir%\\system32\\WindowsPowerShell\\v1.0\\Modules does not get added to PSModulePath ",
  "updated_at": "2016-08-17T05:55:45Z"
}