{
  "_url": "https://github.com/PowerShell/PowerShell/issues/8539",
  "author": "totkeks",
  "body": "# Summary of the new feature/enhancement\r\n\r\nAs a user I want to have an option to hide the file extensions for executables and executable scripts known to the system, when using the tab expansion feature of Powershell.\r\nThis would allow me to use them like I'm used to, because I do not care about the file extension.\r\n\r\n# Proposed technical implementation details (optional)\r\n\r\nHide the file extension when using tab expansion to expand commands located in $env:PATH that have extensions listed in the $env:PATHEXT.\r\nThis would make the behavior similar to how the search for executable scripts work.\r\n\r\nExample 1:\r\n* I have a script called `My-Function.ps1` in a folder in my $env:PATH\r\n* I can run it by typing `My-Function` as the search inside the path includes .ps1 files\r\n* When I type `My<tab>`, it expands to `My-Function.ps1`\r\n* Instead `My<tab>` should expand to `My-Function` as the extension is redundant / not needed\r\n\r\nExample 2:\r\n* I type `powersh<tab>` and it expands to `powershell` and not `powershell.exe`",
  "closed_at": null,
  "comments": [
    {
      "author": "kvprasoon",
      "author_association": "CONTRIBUTOR",
      "body": "How the extension can be ignored ? what if there a folder with the same name ?",
      "created_at": "2018-12-25T17:41:55Z",
      "updated_at": "2018-12-25T17:42:13Z"
    },
    {
      "author": "totkeks",
      "author_association": "NONE",
      "body": "@kvprasoon powershell already works like this. You don't have to write the extension and it still works. Hence tab completion should work the same way.\r\n\r\nJust try it with `cmd`. You can run it like this, but if you press `<tab>`, you get `cmd.exe`, which is the same.",
      "created_at": "2018-12-25T17:56:45Z",
      "updated_at": "2018-12-25T17:56:45Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "That applies to executables located via `$env:Path`, but I don't know that it applies to all commands or scripts in arbitrary locations?",
      "created_at": "2018-12-25T19:10:09Z",
      "updated_at": "2018-12-25T19:10:09Z"
    },
    {
      "author": "totkeks",
      "author_association": "NONE",
      "body": "@vexx32 Actually, that's what I meant. I guess I was not precise enough, going to update the original post.",
      "created_at": "2018-12-25T19:52:39Z",
      "updated_at": "2018-12-25T19:52:39Z"
    },
    {
      "author": "kvprasoon",
      "author_association": "CONTRIBUTOR",
      "body": "> I type powersh<tab> and it expands to powershell and not powershell.exe\r\n\r\nPowerShell do tab complete it to `PowerShell.exe` . What is your PowerShell version ?",
      "created_at": "2018-12-26T13:03:02Z",
      "updated_at": "2018-12-26T13:03:17Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@kvprasoon that's the request at hand; he _wants_ it to expand to only `powershell`, not completing the extension, since it will _run_ just fine without it.",
      "created_at": "2018-12-26T13:07:40Z",
      "updated_at": "2018-12-26T13:07:40Z"
    },
    {
      "author": "kvprasoon",
      "author_association": "CONTRIBUTOR",
      "body": "So the ask is to change tab completion. @vexx32 do you see any ROI for this ?",
      "created_at": "2018-12-26T15:50:34Z",
      "updated_at": "2018-12-26T15:50:34Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "I suppose it might make some sense in terms of increasing UX consistency between what tab completes and what actually can be executed?\r\n\r\nI don't think it's _overly_ complicated to implement, but I'm not sure exactly how this argumentcompleter is handled, so it might wind up being more complicated depending on the existing implementation... Hard to say without digging up the code, unfortunately. \ud83d\ude04 ",
      "created_at": "2018-12-26T16:09:11Z",
      "updated_at": "2018-12-26T16:09:11Z"
    },
    {
      "author": "kilasuit",
      "author_association": "COLLABORATOR",
      "body": "What's the actual real benefit here? Because TabCompletion is for completing to `Full Command names` which in this case includes the `.exe` or `.ps1` whilst the engine will look to the command values you can see with the below you could technically brake all scripts that don't reference the full `powershell.exe` with the following\r\n\r\n``` powershell\r\nfunction powershell { \"Whoops you broke using PowerShell for PowerShell.exe in the terminal due to command preference - for more info run 'Get-Help about_Command_Precedence'\"}\r\n```\r\n\r\nThen tab complete and you would have a PowerShell Function as well as the PowerShell Application `powershell.exe`\r\nfor more info on command preference have a look at ` Get-Help about_Command_Precedence`\r\n\r\nAlso - `This would make the behavior similar to how the search for executable scripts work.` - technically this is incorrect as per the below tabcompletion for slmgr.vbs which is an executable script and also shows the extension as per mentioned above (and IMO always should)\r\n```Powershell \r\nCd C:\\\r\nslmg\r\n```\r\n\r\nThe reason at the prompt I think that you should always be shown the file extension is that you may have scripts in different languages but are still executable scripts and share the same file name - build scripts are like this on xPlat projects\r\n\r\nTake the following (in an admin prompt if you have v6 installed then this will work as it's a location on $env:Path)\r\n``` powershell\r\nNew-Item \"C:\\Program Files\\PowerShell\\6\\slmgr.ps1\" -Value 'Write-Host \"This is not the Slmgr vb executable script\"'\r\n```\r\nnow in the console type slm and tab complete\r\n\r\nThat's when you need to have the file extension and why I can't see any real benefit behind removing the extension from the returned completed commands and IMO actually hampers the UX - yes the extension may be surplus to most requirements but as it doesn't impact performance by doing what it's intended to do, whereas your suggested change would add lots of overhead with potential perf losses and be of marginal gain to not only the everyday Windows Scripter but also be a possible downturn on the xPlat ones as well.\r\n\r\nJust my thoughts on this :-)\r\n\r\n",
      "created_at": "2018-12-26T16:59:14Z",
      "updated_at": "2018-12-26T16:59:14Z"
    }
  ],
  "created_at": "2018-12-25T14:25:21Z",
  "number": 8539,
  "state": "open",
  "title": "Option to exclude file extensions from tab completion/expansion results",
  "updated_at": "2018-12-28T03:34:20Z"
}