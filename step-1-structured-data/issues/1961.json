{
  "_url": "https://github.com/PowerShell/PowerShell/issues/1961",
  "author": "astegmaier",
  "body": "I'm super excited about the release of PowerShell for Mac and Linux--congrats!\n\nHowever, I ran into some trouble trying to use Nuget commands. Lots of documentation on NuGet packages seems to assume that you're using Windows and the VS Package Manager Console, so I was looking forward to being able to follow these sorts of examples in a straightforward manner when developing for ASP.Net on OSX (example: adding a package to my project through the command line, like `Install-Package <Package-Name>`)\n\nHere's what I did, hoping it would work...\n- Installed PowerShell using .pkg installer on OS X\n- Opened a terminal and entered `powershell`\n- Typed `Install-Package -ListAvailable`, which was [suggested ](https://docs.nuget.org/consume/package-manager-console) as something you could do with the Package Manager Console.\n- Got this error:\n  `Get-Package : A parameter cannot be found that matches parameter name 'ListAvailable'.`\n\nSo it looks like the `Get-Package`command is something that PowerShell recognizes, but it doesn't behave the same way as it does in the VS Package Manager Console.\n\n@vors commented on this issue at @shanselman's [blog](http://www.hanselman.com/blog/CommentView.aspx?guid=0AB211CC-3B11-4FA9-8B04-774F1BF62B77#4b96c0a9-07f7-4789-9bad-4604df0f3d5a):\n\n> PowerShell nuget package manager (the one from Visual Studio) has cmdlet's name collisions with PowerShellGet (PS package manager), which you run in PowerShell on OS X. They essentially provide the same functionality for different scopes (project vs the whole system), but available parameters are different. It's indeed confusing, we are sorry.\n\nI'm kind of new to PowerShell, so I don't know if making this work would require changes with PowerShell itself, or if there is something I can do to my configuration let it know that I want to behave similar to the VS Package Manager Console. Any ideas?\n",
  "closed_at": "2016-09-29T21:45:10Z",
  "comments": [
    {
      "author": "gavinelder",
      "author_association": "NONE",
      "body": "Hi the VS Nuget packet manager does not operate the same as it does within PowerShell and this is the same for all versions. \n\nYou will need to set up a nuget profile in order for this to work. \n\nHere is a discussion on stack overflow describing the subject http://stackoverflow.com/questions/12884282/use-nuget-powershell-commandlets-from-outside-visual-studio\n\nHere is a quick guide on how it is used in powershell. \n\nhttps://docs.nuget.org/consume/Setting-up-NuGet-PowerShell-Profile.md\n\nHere is another windows 10 guide but works on MACOSX minus an issue with the powershell version being 6.0.0a vs 5 which is the latest release \n",
      "created_at": "2016-08-19T18:24:34Z",
      "updated_at": "2016-08-19T18:24:34Z"
    },
    {
      "author": "dunxd",
      "author_association": "NONE",
      "body": "Link to https://docs.nuget.org/consume/Setting-up-NuGet-PowerShell-Profile.md doesn't go anywhere.  There is no link to the Windows 10 guide mentioned.\n\nSearching on docs.nuget.org for powershell profile gives a doc at https://docs.nuget.org/ndocs/tools/package-manager-console#setting-up-a-nuget-powershell-profile which describes that you might use a Powershell profile for nuget, but just links to an explanation of powershell profiles and doesn't give any hints to a powershelll newbie.\n\nRight now I am trying to get my Mac set up to manage Azure using Powershell and it is a dependancy nightmare.  I'm unable to find a document that will take me all the way to this goal.\n\nSo far, I've installed powershell, which works but I can't install packages.  Then I install nuget, which requires mono.  I've installed both those.  But powershell can't use nuget to get anything without further configuration or something I'm missing.  Is there any guidance to get someone up and running quickly without them having first to learn _everything_?\n",
      "created_at": "2016-11-15T12:32:55Z",
      "updated_at": "2016-11-15T12:32:55Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@dunxd I looked at the nuget PowerShell profile doc and it isn't about setting up PowerShell to work with nuget, but rather using a general PowerShell feature within the Visual Studio PowerShell console.\n\nI also looked at the stackoverflow thread and it relies on Windows tools so that won't work on a Mac.  \n\nTry following this tutorial on writing asp.net on Mac: https://docs.microsoft.com/en-us/aspnet/core/tutorials/your-first-mac-aspnet\n\nAs far as I know, the nuget cmdlets in Visual Studio won't work in just PowerShell on Mac/Linux and the unfortunate naming makes this confusing.\n",
      "created_at": "2016-11-15T18:31:22Z",
      "updated_at": "2016-11-15T18:31:22Z"
    },
    {
      "author": "dunxd",
      "author_association": "NONE",
      "body": "The thing is, I don't want to write code. I'm a sysadmin who needs to admin\nAzure VMs using powershell. I don't need an ide etc. I just need to be able\nto execute commands. Right now I need to learn about so many things in\norder to do something  very simple. The onramp is vertical!\n\nOn Tue, 15 Nov 2016 6:32 pm Steve Lee, notifications@github.com wrote:\n\n> @dunxd https://github.com/dunxd I looked at the nuget PowerShell\n> profile doc and it isn't about setting up PowerShell to work with nuget,\n> but rather using a general PowerShell feature within the Visual Studio\n> PowerShell console.\n> \n> I also looked at the stackoverflow thread and it relies on Windows tools\n> so that won't work on a Mac.\n> \n> Try following this tutorial on writing asp.net on Mac:\n> https://docs.microsoft.com/en-us/aspnet/core/tutorials/your-first-mac-aspnet\n> \n> As far as I know, the nuget cmdlets in Visual Studio won't work in just\n> PowerShell on Mac/Linux and the unfortunate naming makes this confusing.\n> \n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/PowerShell/PowerShell/issues/1961#issuecomment-260725514,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/AP1tHT-lT36gQHGmdCGNyaAGBMfar0y2ks5q-fqEgaJpZM4JopUh\n> .\n",
      "created_at": "2016-11-15T18:49:58Z",
      "updated_at": "2016-11-15T18:49:58Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "My suggestion is to open an issue here to port the nuget cmdlets to work in PowerShell Core instead of just the Visual Studio console: https://github.com/nuget/home/issues\n",
      "created_at": "2016-11-15T18:54:27Z",
      "updated_at": "2016-11-15T18:54:27Z"
    },
    {
      "author": "gavinelder",
      "author_association": "NONE",
      "body": "Hi Please use the following tutorial.\n\nhttps://blogs.technet.microsoft.com/jessicadeen/azure/getting-started-with-powershell-core-and-azurerm-modules-on-ubuntu-and-os-x/\n\nThe Azure PS modules have not been released for .net core / powershell core\nas it still alpha however this will let you use the preview modules.\n\nPowershell .net core is still alpha and does not have all the features\nyou're looking for.\n\nNuget works in power shell core however it is different syntax than Visual\nStudio ( You might get visual studio on the Mac tomorrow and be able to use\nNuget but I doubt it also as this will be alpha )\n\nRegardless if you need powershell in a prod environment spin up a windows\nVM as thats the only currently supported solution\n\nOn Tue, Nov 15, 2016 at 6:54 PM, Steve Lee notifications@github.com wrote:\n\n> My suggestion is to open an issue here to port the nuget cmdlets to work\n> in PowerShell Core instead of just the Visual Studio console:\n> https://github.com/nuget/home/issues\n> \n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> https://github.com/PowerShell/PowerShell/issues/1961#issuecomment-260731919,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/ABK1dDk5sahmoXouOBYqCF5QphA-yxK0ks5q-f_xgaJpZM4JopUh\n> .\n",
      "created_at": "2016-11-15T19:06:00Z",
      "updated_at": "2016-11-15T19:06:00Z"
    },
    {
      "author": "dunxd",
      "author_association": "NONE",
      "body": "I followed that tutorial from the outset, but running the Install-Package\ncommand as specified requires nuget is already working. That is where I am\nstuck.\n\nSomeone has obviously got this working - I guess someone that needs nuget\ndaily, and by the time they installed powershell on their Mac installing\nnuget was a distant memory.\n\nI probably only need it this once, so I can admin Azure from my home Mac. I\nwouldn't class that as production - I have Windows 10 at work. Still, it's\nfrustrating to get stuck at this stage. It's alpha, so I'm sure it will get\nthere eventually.\n\nThanks,\n\nDunxd\n\nOn Tue, 15 Nov 2016 7:09 pm Gavin, notifications@github.com wrote:\n\n> Hi Please use the following tutorial.\n> \n> https://blogs.technet.microsoft.com/jessicadeen/azure/getting-started-with-powershell-core-and-azurerm-modules-on-ubuntu-and-os-x/\n> \n> The Azure PS modules have not been released for .net core / powershell core\n> as it still alpha however this will let you use the preview modules.\n> \n> Powershell .net core is still alpha and does not have all the features\n> you're looking for.\n> \n> Nuget works in power shell core however it is different syntax than Visual\n> Studio ( You might get visual studio on the Mac tomorrow and be able to use\n> Nuget but I doubt it also as this will be alpha )\n> \n> Regardless if you need powershell in a prod environment spin up a windows\n> VM as thats the only currently supported solution\n> \n> On Tue, Nov 15, 2016 at 6:54 PM, Steve Lee notifications@github.com\n> wrote:\n> \n> > My suggestion is to open an issue here to port the nuget cmdlets to work\n> > in PowerShell Core instead of just the Visual Studio console:\n> > https://github.com/nuget/home/issues\n> > \n> > \u2014\n> > You are receiving this because you commented.\n> > Reply to this email directly, view it on GitHub\n> > <\n> > https://github.com/PowerShell/PowerShell/issues/1961#issuecomment-260731919\n> > ,\n> > or mute the thread\n> > <\n> > https://github.com/notifications/unsubscribe-auth/ABK1dDk5sahmoXouOBYqCF5QphA-yxK0ks5q-f_xgaJpZM4JopUh\n> > \n> > .\n> \n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/PowerShell/PowerShell/issues/1961#issuecomment-260735164,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/AP1tHXRZqpCQf6VXvU9fY2EqGMn_8wAeks5q-gKtgaJpZM4JopUh\n> .\n",
      "created_at": "2016-11-15T20:20:05Z",
      "updated_at": "2016-11-15T20:20:05Z"
    }
  ],
  "created_at": "2016-08-19T16:39:28Z",
  "number": 1961,
  "state": "closed",
  "title": "VS Nuget Package Manager commands on OSX",
  "updated_at": "2016-11-15T20:20:05Z"
}