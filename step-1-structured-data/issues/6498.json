{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6498",
  "author": "rjmholt",
  "body": "## PR Summary\r\n\r\nResolves #6444. Many error messages in PowerShell currently use a LINQ expression to pass both the name of the error and the message through in the error processing. This PR uses the `nameof` feature to carry the error name/ID and gets rid of LINQ expression reflection, hopefully improving performance, especially in editor scenarios.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` to the beginning of the title and remove the prefix when the PR is ready.\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] User-facing [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed - Issue link:\r\n- **Testing - New and feature**\r\n    - [ ] Not Applicable or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n        - [x] [Add `[feature]` if the change is significant or affects feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\r\n",
  "closed_at": "2018-03-28T23:21:26Z",
  "comments": [
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov, I've fixed up the parameters I didn't newline. There were a couple that were parameters in a method call that was itself a parameter to `ReportError`, so I've pulled out the whole expression and assigned it to a variable, which hopefully improves clarity without polluting the namespace too much. Also did the `out` variable thing -- much better than Tuples as you say.",
      "created_at": "2018-03-26T16:23:25Z",
      "updated_at": "2018-03-26T16:23:25Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "@lzybkr I had the same thought about macros",
      "created_at": "2018-03-26T18:27:58Z",
      "updated_at": "2018-03-26T18:27:58Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "The outstanding problem is: there are a couple of freeform errors, and all the others come from at least three resource files. The whole point of all the work here is making sure that the resource files track all the error IDs and messages and ideally we'd make an assertion for that.\r\n\r\nSo, should we:\r\n- [ ] Move all the errors passed into `SaveError` into `ParserStrings.resx`?\r\n- [ ] Add a generic catchall error into `ParserStrings.resx` to deal with the hardcoded error strings?\r\n- [ ] Use complex assertion to look up all the error messages and make sure they all come from a resource file and have a corresponding key/value?",
      "created_at": "2018-03-26T21:40:37Z",
      "updated_at": "2018-03-26T21:40:37Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "I want to bring up the comment https://github.com/PowerShell/PowerShell/pull/6498#discussion_r177223334 again. \r\nErrors like this one could easily happen in other places in a PR with so many changes. I suggest you to go through your changes again and make sure this is the only wrong case.\r\n\r\nAlso, please add [feature] tag to your last commit, to trigger the full tests.",
      "created_at": "2018-03-26T21:59:24Z",
      "updated_at": "2018-03-26T21:59:24Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "I've now read through all the changes to make sure all the errorIDs have a corresponding errorMsg, and that the errorMsg is the right one.\r\n\r\nI'll also have another look to see if `ReportIncompleteInput`, `ReportError` or `SaveError` is used anywhere else that might send through an errorID or errorMsg that doesn't come from ParserStrings.resx.",
      "created_at": "2018-03-26T22:50:45Z",
      "updated_at": "2018-03-26T22:50:45Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Strings like `ParameterAlreadyBound` and `InvalidPSSnapInName` should really stay in `ParameterBinderStrings.resx` and `MshSnapInCmdletResources.resx`.\r\n\r\nTalked to @rjmholt offline. We think it's better to keep the resource strings in their existing resource files.\r\nRob will implement a comparison method with `ConditionalAttribute(\"Debug\")` that searches string id from candidate resource types, and use it for the assertion.",
      "created_at": "2018-03-27T00:17:35Z",
      "updated_at": "2018-03-27T00:17:35Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "@lzybkr: After discussing with @daxian-dbw, I think that moving strings out of their resource files and into `ParserStrings.resx` so that we can support the assertion is going to end up with all resource strings in one big file. Just on the basis that I started touching strings in `MshSnapInCmdletResources.resx` and `ParameterBinderStrings.resx` which were rightly owned by those resource files.\r\n\r\nInstead, I'm going to write a lookup method and wrap it in a `[System.Diagnostics.Conditional(\"DEBUG\")]` attribute (and possibly an `\"ASSERTIONS_TRACE\"` one as well?) and use that in a `Diagnostics.Assert()` call. There's concern that we're not building debug builds to catch assertion failures often enough, but I imagine the answer to that problem isn't to stop writing assertions.\r\n\r\nHopefully this is the right way to go.",
      "created_at": "2018-03-27T00:20:52Z",
      "updated_at": "2018-03-27T00:20:52Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Maybe we merge the PR and continue in new PR to keep PRs as simple as possible?",
      "created_at": "2018-03-27T04:01:37Z",
      "updated_at": "2018-03-27T04:01:37Z"
    }
  ],
  "created_at": "2018-03-26T05:49:24Z",
  "number": 6498,
  "state": "closed",
  "title": "Change Parser SaveError to use `nameof` instead of LINQ expressions",
  "updated_at": "2018-06-22T22:55:20Z"
}