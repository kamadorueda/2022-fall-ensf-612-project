{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3717",
  "author": "erwinwildenburg",
  "body": "Steps to reproduce\r\n------------------\r\nStart a new project with the following packages:\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp1.1</TargetFramework>\r\n    <PreserveCompilationContext>true</PreserveCompilationContext>\r\n    <DebugType>portable</DebugType>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.PowerShell.SDK\" Version=\"6.0.0-alpha18\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\nThe packages restore normally.\r\n\r\nActual behavior\r\n---------------\r\nErrors which block using powershell alpha18 with .NET:\r\n```\r\nC:\\Program Files\\dotnet\\sdk\\1.0.3\\NuGet.targets(97,5): error : Unable to resolve 'Microsoft.PowerShell.ConsoleHost (>= 6.0.0)' for '.NETCoreApp,Version=v1.1'. [C:\\Users\\x\\Source\\Repos\\x\\src\\BuildEntry\\BuildEntry.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\1.0.3\\NuGet.targets(97,5): error : Unable to resolve 'Microsoft.PowerShell.Security (>= 6.0.0)' for '.NETCoreApp,Version=v1.1'. [C:\\Users\\x\\Source\\Repos\\x\\src\\BuildEntry\\BuildEntry.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\1.0.3\\NuGet.targets(97,5): error : Unable to resolve 'Microsoft.PowerShell.Commands.Utility (>= 6.0.0)' for '.NETCoreApp,Version=v1.1'. [C:\\Users\\x\\Source\\Repos\\x\\src\\BuildEntry\\BuildEntry.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\1.0.3\\NuGet.targets(97,5): error : Unable to resolve 'Microsoft.PowerShell.Commands.Management (>= 6.0.0)' for '.NETCoreApp,Version=v1.1'. [C:\\Users\\x\\Source\\Repos\\x\\src\\BuildEntry\\BuildEntry.csproj]\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n```\r\nName                           Value\r\n----                           -----\r\nPSEdition                      Core\r\nWSManStackVersion              3.0\r\nCLRVersion\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nSerializationVersion           1.1.0.1\r\nGitCommitId                    v6.0.0-alpha.18\r\nPSVersion                      6.0.0-alpha\r\nBuildVersion                   3.0.0.0\r\nPSRemotingProtocolVersion      2.3\r\n```",
  "closed_at": "2017-05-11T00:04:09Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "We are moving to .Net Core 2.0. So you can build based on this repo sources or wait Alfa.19 or Beta1. Docs isn't still updated too.",
      "created_at": "2017-05-06T19:36:19Z",
      "updated_at": "2017-05-06T19:36:19Z"
    },
    {
      "author": "gorankor",
      "author_association": "NONE",
      "body": "I have the same issue, but I am trying to do this on Linux. I am following this document:\r\n\r\nhttps://github.com/PowerShell/PowerShell/tree/master/docs/host-powershell\r\n\r\nThe errors I get are very similar:\r\n\r\n/disk/dotnet/sdk/2.0.0-preview1-005952/NuGet.targets(97,5): error : Unable to resolve 'Microsoft.PowerShell.Commands.Management (>= 6.0.0)' for '.NETCoreApp,Version=v2.0'. [/disk/PowerShell/test/Logic/Logic.csproj]\r\n...\r\n/disk/dotnet/sdk/2.0.0-preview1-005952/NuGet.targets(97,5): error : Unable to resolve 'Microsoft.WSMan.Runtime (>= 6.0.0)' for '.NETCoreApp,Version=v2.0'. [/disk/PowerShell/test/Logic/Logic.csproj]\r\n\r\nI tried editing the _Logic.csproj_ file and using various target framework specifications (\"netcoreapp2.0\" and \"netstandard1.6\"), but to no avail. I also tried specifying the required versions as \"6.*\", but that also does not help. Previously this worked OK.\r\n\r\nHow can one do this now without having to wait for the mentioned releases?",
      "created_at": "2017-05-10T08:26:53Z",
      "updated_at": "2017-05-10T08:26:53Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Beta.1 is already out! Please download and test.",
      "created_at": "2017-05-10T10:08:56Z",
      "updated_at": "2017-05-10T10:08:56Z"
    },
    {
      "author": "gorankor",
      "author_association": "NONE",
      "body": "If you mean Beta.1 of PowerShell, then I can add this: I have cloned the repository today (May 10th at about 09:20), built it myself and version shows as:\r\n\r\n```\r\nPS /disk/PowerShell>      $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.0-beta\r\nPSEdition                      Core\r\nBuildVersion                   3.0.0.0\r\nCLRVersion\r\nGitCommitId                    v6.0.0-beta.1\r\nOS                             Linux 3.10.0-327.el7.x86_64 #1 SMP Thu Nov 19...\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\nAnd I still have the issue.",
      "created_at": "2017-05-10T10:17:53Z",
      "updated_at": "2017-05-10T10:18:14Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@gorankor Thanks for clarify!\r\nI don't still see that new packages is published. https://powershell.myget.org/gallery/powershell-core\r\n\r\n/cc @daxian-dbw ",
      "created_at": "2017-05-10T10:39:13Z",
      "updated_at": "2017-05-10T10:40:13Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "This is a known issue and should be fixed by #3678 \r\nBasically, `dotnet pack` stopped applying version suffix to referenced projects since it moved to MSBuild. We didn't know this issue until finding out alpha.18 nuget packages were broken.\r\nRelevant dotnet issues: https://github.com/NuGet/Home/issues/4337 and https://github.com/NuGet/Home/issues/3953",
      "created_at": "2017-05-10T16:51:25Z",
      "updated_at": "2017-05-10T16:51:25Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "BTW, we will publish nuget packages for beta.1 release soon, but it requires dotnet-cli 2.0 preview to use those packages because they target `netcoreapp2.0`. If you want to target `netcoreapp1.1`, please use `alpha.17` package for now.",
      "created_at": "2017-05-10T16:53:31Z",
      "updated_at": "2017-05-10T16:53:31Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@erwinwildenburg the `6.0.0-beta.1` NuGet packages are now published to powershell-core feed.",
      "created_at": "2017-05-10T23:51:44Z",
      "updated_at": "2017-05-10T23:51:44Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Given the provided information, I'm closing this issue. Feel free to comment if you have any concerns/questions.",
      "created_at": "2017-05-11T00:04:09Z",
      "updated_at": "2017-05-11T00:04:09Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "> I have the same issue, but I am trying to do this on Linux.\r\n\r\n@gorankor Sorry that I missed your comments. It's an unfortunate known issue that the published NuGet packages don't work on Unix plats. The NuGet packages on powershell-core feed so far only contain windows runtime assemblies. We are actively working on resolving this, and it's tracked by #3417. Feel free to leave comments/discuss in that issue.",
      "created_at": "2017-05-11T00:10:32Z",
      "updated_at": "2017-05-11T00:10:32Z"
    },
    {
      "author": "gorankor",
      "author_association": "NONE",
      "body": "Thank you - I will post anything else in #3417 if needed.",
      "created_at": "2017-05-11T05:04:17Z",
      "updated_at": "2017-05-11T05:04:17Z"
    }
  ],
  "created_at": "2017-05-06T11:39:51Z",
  "labels": [
    "Issue-Question",
    "Resolution-Answered"
  ],
  "number": 3717,
  "state": "closed",
  "title": "Can't update to alpha18 in .NET project",
  "updated_at": "2017-05-11T05:04:17Z"
}