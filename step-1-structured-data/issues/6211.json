{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6211",
  "author": "MichaelSimons",
  "body": "Steps to reproduce\r\n------------------\r\n\r\n0. Start on a Windows 1709 compatible Docker host environment\r\n1. Run `docker run -it --rm --user ContainerAdministrator microsoft/powershell:6.0.1-nanoserver-1709`\r\n\r\nExpected behavior\r\n-----------------\r\n\r\nPowershell Docker container is started at a PS cmd prompt.\r\n\r\nActual behavior\r\n---------------\r\n\r\nDocker run fails with the following\r\n\r\n```\r\nC:\\Program Files\\Docker\\Docker\\Resources\\bin\\docker.exe: Error response from daemon: container 65d8e1ad32b1caf850bdad45ae08b41475f3a2252b4c3e65977bd118593bcd78 encountered an error during CreateProcess: failure in a Windows system call: The system cannot find the file specified. (0x2) extra info: {\"CommandLine\":\"pwsh.exe\",\"User\":\"ContainerAdministrator\",\"WorkingDirectory\":\"C:\\\\\",\"Environment\":{\"PSCORE\":\"C:\\\\Program Files\\\\PowerShell\\\\pwsh.exe\",\"ProgramFiles\":\"C:\\\\Program Files\"},\"EmulateConsole\":true,\"CreateStdInPipe\":true,\"CreateStdOutPipe\":true,\"ConsoleSize\":[93,189]}.\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\ndocker version\r\n\r\n```\r\nClient:\r\n Version:       17.12.0-ce\r\n API version:   1.35\r\n Go version:    go1.9.2\r\n Git commit:    c97c6d6\r\n Built: Wed Dec 27 20:05:22 2017\r\n OS/Arch:       windows/amd64\r\n\r\nServer:\r\n Engine:\r\n  Version:      17.12.0-ce\r\n  API version:  1.35 (minimum version 1.24)\r\n  Go version:   go1.9.2\r\n  Git commit:   c97c6d6\r\n  Built:        Wed Dec 27 20:15:52 2017\r\n  OS/Arch:      windows/amd64\r\n  Experimental: true\r\n```\r\n\r\ndocker info\r\n\r\n```\r\nContainers: 47\r\n Running: 1\r\n Paused: 0\r\n Stopped: 46\r\nImages: 859\r\nServer Version: 17.12.0-ce\r\nStorage Driver: windowsfilter\r\n Windows:\r\nLogging Driver: json-file\r\nPlugins:\r\n Volume: local\r\n Network: ics l2bridge l2tunnel nat null overlay transparent\r\n Log: awslogs etwlogs fluentd gelf json-file logentries splunk syslog\r\nSwarm: inactive\r\nDefault Isolation: hyperv\r\nKernel Version: 10.0 16299 (16299.15.amd64fre.rs3_release.170928-1534)\r\nOperating System: Windows 10 Enterprise\r\nOSType: windows\r\nArchitecture: x86_64\r\nCPUs: 8\r\nTotal Memory: 31.79GiB\r\nName: msimons-primary\r\nID: INYZ:JJC3:ZE7V:IPVD:DRSZ:C7Z4:XYE3:IKYD:J3DK:OG3C:DYBL:BGA4\r\nDocker Root Dir: C:\\ProgramData\\Docker\r\nDebug Mode (client): false\r\nDebug Mode (server): true\r\n File Descriptors: -1\r\n Goroutines: 46\r\n System Time: 2018-02-21T15:03:02.393883-06:00\r\n EventsListeners: 1\r\nRegistry: https://index.docker.io/v1/\r\nLabels:\r\nExperimental: true\r\nInsecure Registries:\r\n 127.0.0.0/8\r\nLive Restore Enabled: false\r\n```\r\n",
  "closed_at": "2020-03-14T17:33:31Z",
  "comments": [
    {
      "author": "MichaelSimons",
      "author_association": "NONE",
      "body": "It looks like the source of this issue is that `pwsh.exe` is not in the machine path (https://github.com/PowerShell/PowerShell/blob/master/docker/release/nanoserver/Dockerfile#L55)\r\n\r\nI would expect this to be the following so that any user can run the image.\r\n```\r\nUSER ContainerAdministrator\r\nRUN setx /M PATH \"%PATH%;C:\\Program Files\\PowerShell\"\r\n```\r\n",
      "created_at": "2018-02-21T21:24:17Z",
      "updated_at": "2018-02-21T21:24:17Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "ContainerAdministrator is no longer supposed to be used.  the container team won't fix issues with the use of this user for us.",
      "created_at": "2020-03-08T23:31:38Z",
      "updated_at": "2020-03-08T23:31:38Z"
    },
    {
      "author": "MichaelSimons",
      "author_association": "NONE",
      "body": "@TravisEz13 - I'm not sure what you mean by `ContainerAdministrator is no longer supposed to be used`.  There are scenarios in which users need to run as the ContainerAdministrator.  Is this documented somewhere?\r\n\r\nI see the underlying issue of the path not getting set at the machine level has been addressed in the latest image therefore I am fine with closing the issue.",
      "created_at": "2020-03-09T14:01:11Z",
      "updated_at": "2020-03-09T14:01:11Z"
    }
  ],
  "created_at": "2018-02-21T21:22:33Z",
  "labels": [
    "Issue-Question",
    "Area-Maintainers-Build",
    "Resolution-Answered",
    "Resolution-External"
  ],
  "number": 6211,
  "state": "closed",
  "title": "CMD in NanoServer Docker image is not compatible with non-default users",
  "updated_at": "2020-03-14T17:33:31Z"
}