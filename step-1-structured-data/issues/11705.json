{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11705",
  "author": "mklement0",
  "body": "Using the source identifier passed to a prior `Register-ObjectEvent` call doesn't seem to work in later `Get-Event -SourceIdentifier $id` calls.\r\n\r\nBy contrast, `Wait-Event -SourceIdentifier $id` works, and so does `Get-Event | Where SourceIdentifier -eq $id`\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\ntry {\r\n  # Create and initialize a watcher.\r\n $watcher = [System.IO.FileSystemWatcher] [ordered] @{\r\n   Filter                = '*.tmp'\r\n   Path                  = $HOME\r\n   EnableRaisingEvents   = $true\r\n }\r\n\r\n # Register for (subscribe to) creation events:\r\n # Determine a unique event-source ID...\r\n [string] $sourceId = 'GetEventTest'\r\n # ... and register for the watcher's Created event with it.\r\n Register-ObjectEvent $watcher -EventName Created -SourceIdentifier $sourceId\r\n\r\n # This works.\r\n { Wait-Event -SourceIdentifier $sourceId -Timeout 0  } | Should -Not -Throw\r\n\r\n # This too.\r\n { Get-Event | where SourceIdentifier -eq $sourceId } | Should -Not -Throw\r\n\r\n # !! This fails.\r\n { Get-Event -SourceIdentifier $sourceId } | Should -Not -Throw\r\n\r\n} finally {\r\n Unregister-Event -SourceIdentifier $sourceId\r\n $watcher.Dispose()\r\n}\r\n```\r\n\r\n# Expected behavior\r\n\r\nThe tests should pass.\r\n\r\n# Actual behavior\r\n\r\nThe 3rd test fails:\r\n\r\n```none\r\nEvent with source identifier 'GetEventTest' does not exist.\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nPowerShell Core 7.0.0-rc.2\r\n```\r\n",
  "closed_at": null,
  "comments": [],
  "created_at": "2020-01-28T18:55:40Z",
  "number": 11705,
  "state": "open",
  "title": "Get-Event -SourceIdentifier doesn't work, unlike Wait-Event -SourceIdentifier",
  "updated_at": "2020-01-29T14:38:33Z"
}