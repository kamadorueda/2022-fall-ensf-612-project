{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5794",
  "author": "TylerLeonhardt",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\n- Windows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nIf it is a bug report:\r\n- make sure you are able to repro it on the latest released version. \r\nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://github.com/PowerShell/PowerShell/blob/master/docs/KNOWNISSUES.md).\r\n- Fill out the following repro template:\r\n\r\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\r\n-->\r\n\r\n`Enter-PSSession -ContainerId $id` returns `Object reference not set to an instance of an object.`.\r\n\r\nSteps to reproduce\r\n------------------\r\n1. Create a windows docker container like: `microsoft/powershell:windowsservercore` from https://hub.docker.com/r/microsoft/powershell/\r\n\r\n2. open PSCore and run:\r\n```powershell\r\nEnter-PSSession -ContainerId $theContainersId\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\nWe see the prompt of the remote machine\r\n\r\nActual behavior\r\n---------------\r\n\r\n```none\r\nEnter-PSSession : Object reference not set to an instance of an object.\r\nAt line:1 char:1\r\n+ Enter-PSSession -ContainerId (Get-Container adoring_gates).ID\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : InvalidOperation: (:) [Enter-PSSession], PSInvalidOperationException\r\n+ FullyQualifiedErrorId : CreateRemoteRunspaceForContainerFailed,Microsoft.PowerShell.Commands.EnterPSSessionCommand\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.0-rc.2\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.0-rc.2\r\nOS                             Microsoft Windows 10.0.16299\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2018-10-09T21:24:25Z",
  "comments": [
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "This is not happening any more, but now I get `Enter-PSSession : The input ContainerId 95e675615810aa55373b61270e710f3dd8d5e6aeab8d8aa51194cd3d22046f4b does not exist, or the corresponding container is not running.` in 6.0.2 and the daily build although the container is definitely running. I did:\r\n```powershell\r\ndocker run -it microsoft/windowsservercore powershell # in any shell\r\ndocker ps --no-trunc # to get full container id\r\n# Open pwsh in a new shell\r\nEnter-PSSession -ContainerId $theContainersId\r\n```\r\nDid I do anything wrong?\r\n```powershell\r\n> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.1.0-preview.731\r\nPSEdition                      Core\r\nGitCommitId                    v6.1.0-preview.731\r\nOS                             Microsoft Windows 10.0.17134\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```",
      "created_at": "2018-07-05T22:17:27Z",
      "updated_at": "2018-07-05T22:17:54Z"
    },
    {
      "author": "Jaykul",
      "author_association": "CONTRIBUTOR",
      "body": "You have to be running elevated, or it won't work. This seems very ... broken.",
      "created_at": "2018-09-27T19:00:19Z",
      "updated_at": "2018-09-27T19:00:19Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Looks like the Hyper-V team changed the namespace and schema of a dependent hyper-v type without telling us.  I'll have this fixed.\r\n\r\nHyper-V is the one requiring elevation as the container is started with elevation so connecting to it requires elevation.  I agree that more things in Windows should not require elevation.",
      "created_at": "2018-09-27T21:19:22Z",
      "updated_at": "2018-09-27T21:19:22Z"
    },
    {
      "author": "Jaykul",
      "author_association": "CONTRIBUTOR",
      "body": "Yeah, but `docker exec` commands against the container don't require elevation, so ...",
      "created_at": "2018-09-28T04:36:42Z",
      "updated_at": "2018-09-28T04:36:42Z"
    },
    {
      "author": "BartBourgeois",
      "author_association": "NONE",
      "body": "Hello,\r\n\r\nI have the exact similar problem in the latest 7.0 version.\r\n\r\n```\r\nPS C:\\Windows\\System32> New-PSSession -ContainerId 562f5119c59fb4f014665126345be0b37499267dfccd3efd4bd19b0b82af6adc -RunAsAdministrator\r\nNew-PSSession: Object reference not set to an instance of an object. \r\n```\r\n\r\n```\r\nPS C:\\Windows\\System32> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0\r\nOS                             Microsoft Windows 10.0.17763\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\nThe same command on the same server with Powershell.Core 3.0 runs fine. \r\n\r\nKind regards,\r\n\r\nBart Bourgeois",
      "created_at": "2020-04-14T20:26:14Z",
      "updated_at": "2020-04-14T20:26:14Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@BartBourgeois The fix was included in 7.0.0, so I'm not sure why you are seeing the issue again. /cc @SteveL-MSFT \r\n\r\n> The same command on the same server with Powershell.Core 3.0 runs fine.\r\n\r\nWhat do you mean by `Powershell.Core 3.0`? ",
      "created_at": "2020-04-16T23:05:23Z",
      "updated_at": "2020-04-16T23:05:23Z"
    },
    {
      "author": "BartBourgeois",
      "author_association": "NONE",
      "body": "Dear @daxian-dbw ,\r\n\r\nI did find the solution for this! Although it was quite a ride.\r\nI need a fix quick, so decided to convert my application to Full dotnet standard instead of Core, expected it to work. But on that exact system I got an entirely different error.\r\n\r\n```\r\nNew-PSSession : Unable to load DLL 'vmcompute.dll': The specified module could not be found. (Exception from HRESULT: 0x8007007E)\r\n```\r\n\r\nAfter searching for this obscure error, I was able to to find a tread that provided the solution.\r\nhttps://github.com/Microsoft/AL/issues/2715#issuecomment-400237137\r\n\r\nAfter unstalling the \"Containers\" Windows feature, rebooting, installing \"Containers\" again and rebooting, the obscure  vmcompute error was solved.\r\n\r\nWith this fix, decided to go back to the dotnet Core version of my application, which also works now!\r\n**So it seems the problem was with the \"Containers\" windows feature all along.** \r\n\r\n```\r\n**Solution:**\r\n- Remove windows feature \"Containers\"\r\n- Reboot server\r\n- Install windows feature \"Containers\"\r\n- Reboot server\r\n```\r\n\r\nHopefully this information can help out others.\r\n\r\nKind regards,\r\n",
      "created_at": "2020-04-17T08:56:19Z",
      "updated_at": "2020-04-17T08:56:19Z"
    }
  ],
  "created_at": "2018-01-05T02:07:58Z",
  "labels": [
    "WG-Remoting"
  ],
  "number": 5794,
  "state": "closed",
  "title": "`Enter-PSSession -ContainerId $id` returns `Object reference not set to an instance of an object.`",
  "updated_at": "2020-04-17T08:56:20Z"
}