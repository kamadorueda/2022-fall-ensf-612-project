{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5758",
  "author": "mklement0",
  "body": "\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\n# Define an advanced function that outputs a string as well as \r\n# stdout output from an external utility:\r\nfunction get-foo { [CmdletBinding()] param() 'hi'; whoami }\r\n\r\n# Invoke the function and also collect its output in variable $var.\r\n# Output the variable afterwards.\r\nget-foo -OutVariable var; '---'; $var\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```none\r\nhi\r\njdoe\r\n---\r\nhi\r\njdoe\r\n```\r\n\r\nThat is, all of the direct output should be reflected in `$var` too.\r\n\r\nActual behavior\r\n---------------\r\n\r\n```none\r\nhi\r\njdoe\r\n---\r\nhi\r\n```\r\n\r\nNote how `$var` collected only `'hi'`, and not also the `whoami` utility's output.\r\n\r\nCuriously, the problem goes away if you either assign the `get-foo` call to a variable or pipe to another cmdlet; e.g., the following variations do NOT exhibit the problem:\r\n\r\n```powershell\r\nget-foo -OutVariable var | Out-Host; '---'; $var  # OK\r\n$null = get-foo -OutVariable var; '---'; $var  # OK (direct output won't show)\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n```powershell\r\nPowerShell Core v6.0.0-rc.2 on macOS 10.13\r\nPowerShell Core v6.0.0-rc.2 on Ubuntu 16.04.3 LTS\r\nPowerShell Core v6.0.0-rc.2 on Microsoft Windows 10 Pro (64-bit; v10.0.15063)\r\nWindows PowerShell v5.1.15063.674 on Microsoft Windows 10 Pro (64-bit; v10.0.15063)\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "PetSerAl",
      "author_association": "CONTRIBUTOR",
      "body": "Without piping (or with piping to `Out-Default`) native command [qualify for condition](https://github.com/PowerShell/PowerShell/blob/master@%7B2017-12-30%7D/src/System.Management.Automation/engine/NativeCommandProcessor.cs#L1201-L1224) to be patched directly to console (PowerShell's own standard output). Thus, its output not passed thru PowerShell and not captured in `-OutVariable` parameter.\r\nSimilar to how `cmd /c \"echo Error>&2\"` work in console, but produce `ErrorRecord`, when invoked in `ISE`, as job or in remote session.",
      "created_at": "2017-12-30T05:11:31Z",
      "updated_at": "2017-12-30T05:11:31Z"
    }
  ],
  "created_at": "2017-12-29T18:42:23Z",
  "labels": [
    "WG-Engine",
    "Issue-Discussion"
  ],
  "number": 5758,
  "state": "open",
  "title": "-OutVariable common parameter doesn't capture external-utility output in advanced functions",
  "updated_at": "2017-12-30T17:40:03Z"
}