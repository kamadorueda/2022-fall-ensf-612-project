{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3674",
  "author": "jeffbi",
  "body": "Part of the resolution of issue #621 was to have the `-Recurse` option be ignored when removing a symlink to a directory with a command such as `Remove-Item -Recurse -Path linktodir`, to be more in line with the unix Unix `rm` command.\r\n\r\nHowever, on Unix the `rm` command, when given as `rm -r linktodir/', with the trailing slash on the pathname, *will* recurse into the target directory and delete its contents, then remove the link, leaving the target directory behind. Without the trailing slash `rm -r linktodir` simply removes the link.\r\n\r\nSteps to reproduce\r\n------------------\r\n```PowerShell\r\nNew-Item -ItemType Directory subdir\r\nNew-Item subdir/file.txt\r\nNew-Item -ItemType SymbolicLink link-to-sub -value subdir\r\nRemove-Item -Recurse link-to-sub/\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\nSymbolic link `link-to-sub` should be deleted, directory `subdir` should still exist but be empty.\r\n\r\nActual behavior\r\n---------------\r\nOn Linux, the directory `subdir` is emptied and remains, but an error is emitted and the symbolic link is not deleted. Error is `Not a directory`.\r\n\r\nOn Windows, the symbolic link is deleted but the directory `subdir` and its contents remain.\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nBuildVersion                   3.0.0.0\r\nCLRVersion\r\nGitCommitId                    v6.0.0-alpha.18-33-ged4e77d65809ed8ee2589fd50...\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSEdition                      Core\r\nPSRemotingProtocolVersion      2.3\r\nPSVersion                      6.0.0-alpha\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Using the Unix utilities, I actually get slightly different behavior, and also differing behavior between platforms:\r\n\r\n```sh\r\n# Set up a temp dir. with subfolder 'subd' and symlink 'subdl' that points to it.\r\nmkdir -p /tmp/$$ && cd /tmp/$$ && rm -rf subd && rm -f subdl && mkdir -p subd && touch subd/file{1..2}.txt && ln -s subd subdl && ls -l\r\n\r\n# Try to remove the symlink with -r and trailing /\r\nrm -r subdl/\r\n```\r\n\r\n### macOS 10.12.4:  \r\n\r\n* The command succeeds (no error message, exit code `0`).\r\n* The _target_ folder is completely removed, and a `subdl` is left behind as a _broken symlink_.\r\n\r\nIn other words: `rm -r subdl/` behaves as if the symlink's _target_ had been passed to `rm -r` (`rm -r subd`).\r\n\r\n### Ubuntu 16.04: \r\n\r\n* The command fails (error message `rm: cannot remove 'subdl/': Not a directory`, exit code `1`).\r\n* `subd`'s _content_ is removed, but the folder itself is retained, as is the symlink.\r\n\r\n---\r\n\r\nFrom what I can tell, both behaviors are in violation of [`rm`'s POSIX spec](http://pubs.opengroup.org/onlinepubs/9699919799/utilities/rm.html):\r\n\r\n> The rm utility removes symbolic links themselves, not the files they refer to, as a consequence of the dependence on the unlink() functionality, per the DESCRIPTION. When removing hierarchies with -r or -R, the prohibition on following symbolic links has to be made explicit.\r\n\r\nI read this to mean: When given a symlink to a directory _on the command line_ with `-r` at least _warn_ that the symlink won't be followed.\r\n\r\n**There's nothing in the spec about how the presence/absence of a trailing `/` affects the behavior, but given that you can usually refer to a directory _interchangeably with or without a trailing `/` (e.g., `ls subd` is the same as `ls subd/`)_, I think the existing Unix behaviors are questionable and not worth adopting in PowerShell.**\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
      "created_at": "2017-05-07T18:26:49Z",
      "updated_at": "2017-05-07T18:28:56Z"
    },
    {
      "author": "xeijin",
      "author_association": "NONE",
      "body": "Was there any progress on this issue? It prevents me from clearing out a directory...",
      "created_at": "2018-06-23T17:51:19Z",
      "updated_at": "2018-06-23T17:51:19Z"
    }
  ],
  "created_at": "2017-05-01T21:24:58Z",
  "number": 3674,
  "state": "open",
  "title": "Remove-Item -Recurse on symlink should recurse when path ends with path separator",
  "updated_at": "2021-12-01T07:43:14Z"
}