{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3011",
  "author": "0byt3",
  "body": "<!--\r\n\r\nIf it is a bug report:\r\n- make sure you are able to repro it on the latest released version. \r\nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\r\n- Search the existing issues.\r\n- Refer to the [FAQ](../docs/FAQ.md).\r\n- Refer to the [known issues](../docs/KNOWNISSUES.md).\r\n- Fill out the following repro template\r\n\r\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\r\n-->\r\n\r\nSteps to reproduce\r\n------------------\r\ncreate ./local/share/powershell/Modules directory in user's home to avoid errors from that\r\n(also need to give it permissions to the account)\r\nsudo -i -u cacti powershell -command Write-Host \"hello\"\r\n\r\nExpected behavior\r\n-----------------\r\nOutput the text \"hello\"\r\n\r\nActual behavior\r\n---------------\r\n```\r\nWrite-Host : The term 'Write-Host' is not recognized as the name of a cmdlet,\r\nfunction, script file, or operable program. Check the spelling of the name, or\r\nif a path was included, verify that the path is correct and try again.\r\nAt line:1 char:1\r\n+ Write-Host hello\r\n+ ~~~~~~~~~~\r\n    + CategoryInfo          : ObjectNotFound: (Write-Host:String) [], CommandN\r\n   otFoundException\r\n    + FullyQualifiedErrorId : CommandNotFoundException\r\n```\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n```\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.0-alpha\r\nPSEdition                      Core\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nBuildVersion                   3.0.0.0\r\nGitCommitId                    v6.0.0-alpha.14\r\nCLRVersion\r\nWSManStackVersion              3.0\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\n```",
  "closed_at": "2017-03-06T06:05:14Z",
  "comments": [
    {
      "author": "0byt3",
      "author_association": "NONE",
      "body": "I am running a Cacti server and would like to use powershell scripts seeing as powershell is pretty awesome, however I have found that the scripts fail, because there seems to be some environment stuff preventing them from working.",
      "created_at": "2017-01-17T23:29:43Z",
      "updated_at": "2017-01-17T23:29:43Z"
    },
    {
      "author": "0byt3",
      "author_association": "NONE",
      "body": "I edited /etc/passwd and changed the default shell from /sbin/nologin to /usr/bin/powershell . When I enter the context of that user:\r\n`sudo -i -u cacti`\r\nI get the following error message:\r\n\r\n> Cannot load PSReadline module.  Console is running without PSReadline.\r\n",
      "created_at": "2017-01-17T23:31:59Z",
      "updated_at": "2017-01-17T23:31:59Z"
    },
    {
      "author": "mirichmo",
      "author_association": "MEMBER",
      "body": "This seems like a module import issue rather a \"can't run scripts issue.\" PowerShell resolves (and auto-loads) PS modules based on the PSModulePath. Within PowerShell, you can view it with this command: `$env:psmodulepath`. The default installation will set up the core modules (Commands.Management, Commands.Utility, PSReadline, etc) so that they auto-load when PowerShell starts. \r\n\r\nCan you confirm that your alternate account (service/daemon) has access to the directories listed on the PSModulePath?",
      "created_at": "2017-01-18T01:20:44Z",
      "updated_at": "2017-01-18T01:20:44Z"
    },
    {
      "author": "0byt3",
      "author_association": "NONE",
      "body": "$env:PSMODULEPATH is the following \r\n>/usr/share/cacti/.local/share/powershell/Modules:/usr/local/share/powershell/Modules:/opt/microsoft/powershell/6.0.0-alpha.14/Modules\r\n\r\n- /usr/local/share/Modules doesn't exist.\r\n- /usr/share/cacti/.local/share/powershell/Modules didn't exist to start (makes sense that it wouldn't). This was an issue at first that kept powershell from running, so I created the folder. Now powershell loads, but I get the PSReadline error\r\n- /opt/microsoft/powershell/6.0.0-alpha.14/Modules has 775 root:root permissions on it and it's files. I even `chmod -R 775 /opt/microsoft` to be sure that 'other' has read and execute permissions.\r\n\r\n",
      "created_at": "2017-01-18T18:47:58Z",
      "updated_at": "2017-01-18T18:48:30Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "PSReadline is just another module, but one that PowerShell console tries to load for the interactive experience.  The issue as @mirichmo pointed out is that modules aren't being found.  I tried to repro this locally but not familiar with Cacti.  I installed it via apt-get on my Ubuntu 16.04 VM, but it didn't create the cacti user account.  @0byt3 how did you create that user?",
      "created_at": "2017-01-19T17:41:42Z",
      "updated_at": "2017-01-19T17:41:42Z"
    },
    {
      "author": "0byt3",
      "author_association": "NONE",
      "body": "You can do this with any service/daemon account. Do it with the apache account. Edit the /etc/passwd file, so that apache's shell is /usr/bin/bash instead of /sbin/nologin . Then enter the apache user context with\r\n`sudo -i -u apache`\r\n You could also enter the context of that user with\r\n`su apache`\r\nThen load powershell and you'll find that PSReadline cannot be loaded. If I create a normal user with useradd I can load powershell with no errors in the context of that user.\r\n\r\nI don't know how to make it load or what to do to determine why it isn't loading. The environment variable $env:PSMODULEPATH exists and includes /opt/microsoft/powershell/6.0.0-alpha.14/Modules in the context of the user, yet it doesn't load.\r\nI'm using CentOS 7 (3.10.0-327.36.2.el7.x86_64) if that helps you suggest troubleshooting steps.",
      "created_at": "2017-01-19T19:52:50Z",
      "updated_at": "2017-01-19T19:57:32Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@0byt3 I wasn't able to get your exact repro, but I did hit an issue trying to start powershell under the sshd account.  I made a change in my fork: https://github.com/stevel-msft/powershell, can you try building powershell from my fork and see if that resolves your issue?",
      "created_at": "2017-01-25T00:04:06Z",
      "updated_at": "2017-01-25T00:04:06Z"
    },
    {
      "author": "0byt3",
      "author_association": "NONE",
      "body": "Sorry, that didn't help me. I think I'll have to make a video to show how I come across the problem.  Since no one seems to be able to re-create it, yet I'm doing this with fresh installs of Ubuntu 16.04.1 and CentOS 7.",
      "created_at": "2017-01-25T16:16:35Z",
      "updated_at": "2017-01-25T16:16:35Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I think I have a closer repro as I can now start powershell with the sshd account, but the psmodulepath is not correct, so write-host isn't found.  I'll continue to work on this.",
      "created_at": "2017-01-25T16:49:48Z",
      "updated_at": "2017-01-25T16:49:48Z"
    },
    {
      "author": "0byt3",
      "author_association": "NONE",
      "body": "Thanks for all the help so far.",
      "created_at": "2017-01-30T16:16:38Z",
      "updated_at": "2017-01-30T16:16:38Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I looked into this and the problem appears to be that the analysiscache tries to write to disk the cache which defaults to a folder under the user home directory.  Service accounts don't have a home directory and thus this disk activity fails and throws an exception and then everything else fails to work correctly as PowerShell at this point has no idea how to find commands/modules.  Currently, this doesn't look like a simple fix.  Will get someone to look at this later, but at this time I don't see this as `must have` for 6.0.0",
      "created_at": "2017-02-07T22:54:58Z",
      "updated_at": "2017-02-07T22:54:58Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "Perhaps a workaround would be to not have PSReadline load if `-NonInteractive` is specified.  In that case, someone could configure the service/daemon to run without PSReadline being loaded.  If there are other ways to prevent PSReadline from opening in this scenario, that'd be cool too.  :-)",
      "created_at": "2017-02-07T23:10:56Z",
      "updated_at": "2017-02-07T23:27:19Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Found a workaround.  We could either add a new switch or append to -NoProfile or -NonInteractive to make this nicer, but maybe this just needs to be documented.  PowerShell does try to create a folder for the user modules if it doesn't find it as well as serializing the analysis cache to a file within the user's home directory.  Luckily, it also looks at some existing environmental variables we can use to redirect where it looks:\r\n\r\n```bash\r\nmkdir /tmp/xdgdata\r\nXDG_DATA_HOME=/tmp/xdgdata\r\nexport XDG_DATA_HOME\r\nmkdir /tmp/xdgconfig\r\nXDG_CONFIG_HOME=/tmp/xdgconfig\r\nexport XDG_CONFIG_HOME\r\nmkdir /tmp/xdgcache\r\nXDG_CACHE_HOME=/tmp/xdgcache\r\nexport XDG_CACHE_HOME\r\npowershell\r\n```",
      "created_at": "2017-02-07T23:15:07Z",
      "updated_at": "2017-02-07T23:17:19Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@0byt3 if you can confirm this works for you, I'll add it to the documentation",
      "created_at": "2017-02-07T23:18:26Z",
      "updated_at": "2017-02-07T23:18:26Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "There are few things we do to avoid loading PSReadline if it doesn't make sense (like -NonInteractive), so maybe the is another scenario to handle.\r\n\r\nThere is also an environment variable to control the path to the analysis cache, I think `/dev/null` might even work to disable use of a cache.",
      "created_at": "2017-02-08T18:56:27Z",
      "updated_at": "2017-02-08T18:56:27Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@lzybkr tried pointing XDG_CACHE_HOME to /dev/null and powershell starts, but nothing works as the type initializer for analysiscache throws an exception (probably when it tries to create the folder for the cache)\r\n",
      "created_at": "2017-02-10T17:16:06Z",
      "updated_at": "2017-02-10T17:16:14Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Been thinking about this and see no reason PowerShell can't just start if it can't create folders in the home directory.  I'll make a change.",
      "created_at": "2017-02-11T15:40:48Z",
      "updated_at": "2017-02-11T15:40:48Z"
    },
    {
      "author": "0byt3",
      "author_association": "NONE",
      "body": "Making sure I have the process down correctly to use powershell from your fork:\r\nI created a folder /opt/Microsoft\r\ncd /opt/Microsoft\r\ngit clone --recurse https://github.com/stevel-msft/powershell\r\ncd powershell\r\n./build.sh\r\nln -s /opt/Microsoft/powershell/bin/powershell /usr/bin/powershell\r\n\r\nDid I figure this out correctly?",
      "created_at": "2017-02-26T23:45:53Z",
      "updated_at": "2017-02-26T23:45:53Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@0byt3 didn't complete the work yet, but that is how you would do it once I get a fix.  I'll work on a fix this week.",
      "created_at": "2017-02-27T19:03:10Z",
      "updated_at": "2017-02-27T19:03:10Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@0byt3 PR submitted, you can build private off my branch if you want to try it",
      "created_at": "2017-03-03T01:43:29Z",
      "updated_at": "2017-03-03T01:43:29Z"
    }
  ],
  "created_at": "2017-01-17T23:27:30Z",
  "number": 3011,
  "state": "closed",
  "title": "\"Cannot load PSReadline module\" when powershell is run with a service/daemon account",
  "updated_at": "2017-03-06T06:05:57Z"
}