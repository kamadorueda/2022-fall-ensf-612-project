{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10864",
  "author": "jvierrajrv",
  "body": "# Product Issue\r\n\r\n_>> Platform: V7-preview 64Bit (STA) (Forced)\r\n\r\n> Exception setting \"Location\": \"Cannot convert the \"0, 24\" value of type \"System.String\" to type \"System.Drawing.Point\".\"\r\nAt C:\\temp\\MainForm.Run.ps1:413 char:2\r\n+     $datagridview1.Location = '0, 24'\r\n+     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n\r\n**All properties that accept point objects can be assigned with strings like \"10,10\" and the property assignment is correctly converted by PowerShell V2 thru V5.1 - PS 7 does not handle this correctly.  There are millions of lines of PS code that uses this so it needs to be addressed.**\r\n\r\n",
  "closed_at": "2019-10-23T15:00:37Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I can not repo on PowerShell\r\n\r\n@jvierrajrv Please move the issue to https://github.com/PowerShell/GraphicalTools\r\n\r\n/cc @TylerLeonhardt For information\r\n\r\n<blockquote><img src=\"https://avatars0.githubusercontent.com/u/11524380?s=400&v=4\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicon.ico\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/PowerShell/GraphicalTools\">PowerShell/GraphicalTools</a></strong></div><div>A module that mixes PowerShell and GUIs! - built on Avalonia - PowerShell/GraphicalTools</div></blockquote>",
      "created_at": "2019-10-22T06:48:23Z",
      "updated_at": "2019-10-22T07:13:19Z"
    },
    {
      "author": "jvierrajrv",
      "author_association": "NONE",
      "body": "In any version of PowerShell 5.1 or earlier paste the following code:\r\n\r\n**Add-Type -AssemblyName System.Windows.Forms\r\n$control = [System.Windows.Forms.Textbox]::New()\r\n$control.Location = '10,10'**\r\n\r\nNow do the same in PowerShell 7 Preview 4. You will see the exact failure.  PS 7 needs to function this way to support WinForms and WinForms designers as well as legacy PS code.\r\n",
      "created_at": "2019-10-22T07:03:05Z",
      "updated_at": "2019-10-22T07:04:25Z"
    },
    {
      "author": "jvierrajrv",
      "author_association": "NONE",
      "body": "To make this more explicit the following works in all previous versions of PowerShell:\r\n\r\n**[system.drawing.point]'10,10'**\r\n'\r\nIt does not work in PS7.  Almost no uses like this fail in PS7 and yet are native to earlier versions of PowerShell.\r\n",
      "created_at": "2019-10-22T07:10:43Z",
      "updated_at": "2019-10-22T07:10:43Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@jvierrajrv Thanks! Please add repo steps in the issue description.",
      "created_at": "2019-10-22T07:10:58Z",
      "updated_at": "2019-10-22T07:10:58Z"
    },
    {
      "author": "jvierrajrv",
      "author_association": "NONE",
      "body": "ISazonov Thank you for your response and rethink -\r\n\r\nI posted a one line example that shows the issue clearly.  Her eit is agai9n.  Run the following line in PS 5.1 and PS 7 to see the error in PS 7.\r\n\r\n**[system.drawing.point]'10,10'**\r\n\r\nThe issue affects many types including all of System.Drawing and System.Windows.Forms namespaces. Other namespaces that allow this are also affected but I have not spent time searching for more examples.  All issues of this type are likely due to a parser extension that is missing as it was likely added in PS3. (just a guess).  PS1 didn't have this.  The Win 7 version of PS2 does have this capability.\r\n",
      "created_at": "2019-10-22T07:30:42Z",
      "updated_at": "2019-10-22T07:38:23Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "It seems it is .Net Core issue.\r\n.Net Framework assigns [`PointConverter`](https://referencesource.microsoft.com/#System.Drawing/commonui/System/Drawing/PointConverter.cs,0e3a4309646c3111) to Point class by [attribute](https://referencesource.microsoft.com/#System.Drawing/commonui/System/Drawing/Point.cs,26)\r\nbut .Net Core haven't this https://source.dot.net/#System.Drawing.Primitives/System/Drawing/Point.cs,14\r\n\n\n<blockquote><div><strong><a href=\"https://source.dot.net/#System.Drawing.Primitives/System/Drawing/Point.cs,14\">Source Browser</a></strong></div></blockquote>",
      "created_at": "2019-10-22T07:34:11Z",
      "updated_at": "2019-10-22T07:34:12Z"
    },
    {
      "author": "jvierrajrv",
      "author_association": "NONE",
      "body": "> It seems it is .Net Core issue.\r\n> .Net Framework assigns PointConverter to Point class by attribute\r\n> but .Net Core haven't this https://source.dot.net/#System.Drawing.Primitives/System/Drawing/Point.cs,14\r\n> Source Browser\r\n\r\nI reported this at Preview 1 and it was ignored or maybe on the back burner.  Ca you check and be sure it gets addressed?\r\n\r\nThankyou.\r\n\r\n<blockquote><div><strong><a href=\"https://source.dot.net/#System.Drawing.Primitives/System/Drawing/Point.cs,14\">Source Browser</a></strong></div></blockquote>",
      "created_at": "2019-10-22T07:39:46Z",
      "updated_at": "2019-10-22T07:40:11Z"
    },
    {
      "author": "jvierrajrv",
      "author_association": "NONE",
      "body": "Yes - the code does show that it is Net COre.  My issue is that PS 7 cannot reach a release state until this is addressed and the PS 7 team needs to take ownership of the issue to get the product released.  I see that Net Core 3.1 is in preview and PS 7 seems to be using Core 4.0 with some assemblies showing RC1.  I wonder if Core 3.1 will finally have this bit added?  \r\n\r\nI really would like to test many WinForms against 7 as soon as possible.  Anticipation is killing me.\r\n\r\nThe whole PS 7 project is moving extremely well.  It will be an excellent upgrade to PS 5.1 when ready.  Keep up the good work.\r\n\r\nNext WPF.",
      "created_at": "2019-10-22T08:02:00Z",
      "updated_at": "2019-10-22T08:02:00Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@jvierrajrv Please open the feature request in .Net Core and reference the issue so that we see and can vote too. All reference existence issue if you already have it.",
      "created_at": "2019-10-22T08:44:12Z",
      "updated_at": "2019-10-22T08:44:12Z"
    },
    {
      "author": "jvierrajrv",
      "author_association": "NONE",
      "body": "@iSazonov I posted this to Net Core at PS Preview 1.  They seemed to think it was a PS issue and apparently didn't act.\r\n\r\nCan you have this moved to Net Core.  I hoped to tickle the system to get someone to take ownership.  The discussion here may get the Core people to understand the issue and understand why it has not been addressed.\r\n",
      "created_at": "2019-10-22T13:35:01Z",
      "updated_at": "2019-10-22T13:35:57Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@jvierrajrv  Please add reference on your issue.",
      "created_at": "2019-10-22T13:38:17Z",
      "updated_at": "2019-10-22T13:38:17Z"
    },
    {
      "author": "jvierrajrv",
      "author_association": "NONE",
      "body": "Sorry - I finally found the new navigation her and found the old issue.\r\n\r\nhttps://github.com/PowerShell/PowerShell/issues/9815\r\n\r\nThe last response was June and suggested Core 3.0 would have the fix.\r\n\r\n",
      "created_at": "2019-10-22T13:51:40Z",
      "updated_at": "2019-10-22T13:51:40Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "See also reference here #9863\r\n\r\nBasically,  .NET Core have altered their design, and our type converters need to be updated. @SteveL-MSFT, any chance of #9863 getting resolved in 7.0 timeframe? \ud83d\ude42 ",
      "created_at": "2019-10-22T13:54:38Z",
      "updated_at": "2019-10-22T13:54:38Z"
    },
    {
      "author": "jvierrajrv",
      "author_association": "NONE",
      "body": "I see there is still more discussion and no resolution yet.  Hopefully we can get it in 3.1 before it ships.  There is really no way around this for testing existing PS scripts that use WinForms.\r\n\r\nAt least the notes seem to agree that it is critical to a PS7 final.\r\n\r\nThanks and good luck.  ",
      "created_at": "2019-10-22T14:00:12Z",
      "updated_at": "2019-10-22T14:00:12Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Ok, let's tracking in #9863",
      "created_at": "2019-10-22T14:02:01Z",
      "updated_at": "2019-10-22T14:02:01Z"
    },
    {
      "author": "jvierrajrv",
      "author_association": "NONE",
      "body": "I didn't have that \"watched\" but am there now - thank you.\r\n",
      "created_at": "2019-10-22T14:29:43Z",
      "updated_at": "2019-10-22T14:29:43Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as duplicate and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2019-10-23T15:00:35Z",
      "updated_at": "2019-10-23T15:00:35Z"
    }
  ],
  "created_at": "2019-10-22T06:27:28Z",
  "number": 10864,
  "state": "closed",
  "title": "WinForms behavior differs in PS7 Preview 4",
  "updated_at": "2019-10-23T15:00:37Z"
}