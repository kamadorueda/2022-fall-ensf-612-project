{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10763",
  "author": "chriskuech",
  "body": "# Summary of the new feature/enhancement\r\n\r\nPowerShell provides a variety of POSIX command aliases mapped to cmdlets.  Ex: `ls` is a POSIX command, but in PowerShell it is an alias of `Get-ChildItem`.  I propose adding another alias to this set of POSIX aliases, mapping `which` to `Get-Command`.  Both POSIX `which` and PowerShell `Get-Command` serve the same purpose to users.\r\n\r\nIf this feature request is rejected, please explain how you determine whether an alias should ship with PowerShell or not.\r\n\r\n<!-- \r\nA clear and concise description of what the problem is that the new feature would solve.\r\nTry formulating it in user story style (if applicable):\r\n'As a user I want X so that Y.' with X being the being the action and Y being the value of the action.\r\n-->\r\n",
  "closed_at": "2019-10-10T19:13:18Z",
  "comments": [
    {
      "author": "ThomasNieto",
      "author_association": "CONTRIBUTOR",
      "body": "If they were to add the alias, it would only be on Windows since it would mask the binary on non-Windows.",
      "created_at": "2019-10-10T18:36:22Z",
      "updated_at": "2019-10-10T18:36:22Z"
    },
    {
      "author": "chriskuech",
      "author_association": "NONE",
      "body": "You are very correct and I was not aware.  Is there a document on how aliases are chosen?  Comparing aliases on Windows vs WSL, I'm not seeing a pattern.\r\n\r\nIn this vein, another alias I would like is `touch` => `New-Item`",
      "created_at": "2019-10-10T18:47:37Z",
      "updated_at": "2019-10-10T18:47:37Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Basically any alias that might conflict with a common or default Linux command will be disabled on Linux. They initially had many aliases that masked the native linux commands in 6.0.0, but Linux users didn't like it, so they were removed.\r\n\r\nYou of course can simply add some `New-Alias` calls to your profile script to set them for yourself.",
      "created_at": "2019-10-10T19:02:35Z",
      "updated_at": "2019-10-10T19:03:58Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@vexx32 is correct.  Originally Windows PowerShell had many aliases that were common Linux commands to make it easier for Linux users to use Windows PowerShell.  However, this created a problem once we made PowerShell Core cross platform.  The common alias to use on Windows and non-Windows is `gcm` which is the alias for `Get-Command`.  With this, you don't need to use `which` or `where` (depending on what OS you are on).  As noted by @vexx32 you can always add your favorite aliases to your `$profile`.",
      "created_at": "2019-10-10T19:13:17Z",
      "updated_at": "2019-10-10T19:13:17Z"
    }
  ],
  "created_at": "2019-10-10T18:33:49Z",
  "labels": [
    "Issue-Enhancement",
    "Resolution-Answered"
  ],
  "number": 10763,
  "state": "closed",
  "title": "Feature Request: alias `which` => `Get-Command`",
  "updated_at": "2019-10-10T19:13:23Z"
}