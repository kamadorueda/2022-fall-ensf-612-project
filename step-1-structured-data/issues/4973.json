{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4973",
  "author": "mklement0",
  "body": "Related: #4966\r\n\r\nCurrently, _any_ script block you pass to an external utility from within PowerShell translates translation of the script block into `-encodedCommand <base64-encoded-script-block-string> -inputFormat xml -outputFormat text` (you can override the `-inputFormat` and `-outputFormat` values by passing them explicitly, however), even though that only makes sense when invoking (another instance of) _PowerShell_.\r\n\r\n@PetSerAl has noted that it may be non-trivial to robustly detect when PowerShell is being called and that passing a script block to something other than PowerShell is generally not useful, but the current behavior is surprising and should at least be documented.\r\n\r\nAn easy improvement would be to restrict the implicit Base64-encoding to commands where `-Command` (or an unambiguous prefix) precedes the script block.\r\n\r\nAs for what should happen when it is _not_ PowerShell that is targeted: arguably, a script block should be _stringified_ and the result passed as an argument (e.g., `{ \"hi\" }` -> ` \"hi\" `).\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\nRun _from PowerShell_ on a Unix platform:\r\n\r\n```powershell\r\npowershell -noprofile -command { \"hi\" }\r\n/bin/echo { \"hi\" }\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```none\r\nhi\r\n \"hi\"   # surrounded by a space on either side - the result of { \"hi\" }.ToString()\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n```none\r\nhi\r\n-encodedCommand IAAiAGgAaQAiACAA -inputFormat xml -outputFormat text\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\nPowerShell Core v6.0.0-beta.7 on macOS 10.12.6\r\nPowerShell Core v6.0.0-beta.7 on Ubuntu 16.04.3 LTS\r\nPowerShell Core v6.0.0-beta.7 on Microsoft Windows 10 Pro (64-bit; v10.0.15063)\r\nWindows PowerShell v5.1.15063.502 on Microsoft Windows 10 Pro (64-bit; v10.0.15063)\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "PetSerAl",
      "author_association": "CONTRIBUTOR",
      "body": "Nitpicking, but it not always `-inputFormat xml -outputFormat text`:\r\n```powershell\r\ncmd /c echo { } -I T | echo\r\n```",
      "created_at": "2017-10-02T18:15:22Z",
      "updated_at": "2017-10-02T18:15:22Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks, @PetSerAl - I've updated the original post to clarify that you can override `-inputFormat` and `-outputFormat`.",
      "created_at": "2017-10-02T18:28:47Z",
      "updated_at": "2017-10-02T18:28:47Z"
    }
  ],
  "created_at": "2017-10-02T13:34:57Z",
  "number": 4973,
  "state": "open",
  "title": "Passing a script block to an external utility should only trigger Base64 encoding if the target is `powershell -command`",
  "updated_at": "2017-10-02T18:28:47Z"
}