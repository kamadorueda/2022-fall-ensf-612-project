{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15477",
  "author": "daxian-dbw",
  "body": "## Summary of the new feature/enhancement\r\n\r\nOriginated from #15323\r\n\r\nFor a hidden file `C:\\arena\\tmp\\hiddenFile.xml`, both `Get-Item` and `Get-ChildItem` cannot find the file even if the path to the file is explicitly specified:\r\n```\r\nPS:1> Get-Item C:\\arena\\tmp\\hiddenFile.xml\r\nGet-Item: Could not find item C:\\arena\\tmp\\hiddenFile.xml.\r\nPS:2> Get-ChildItem C:\\arena\\tmp\\hiddenFile.xml\r\nGet-ChildItem: Could not find item C:\\arena\\tmp\\hiddenFile.xml.\r\n```\r\n\r\nToday, `-Force` parameter is required for the above commands to work.\r\n\r\nHowever, on the other hand:\r\n1. tab completion on the hidden file works fine for those cmdlets.\r\n  ```\r\n       PS:1> Get-Item hiddenF<tab> # => Get-Item .\\hiddenFile.xml\r\n  ```\r\n2. `Get-ChildItem` works on hidden folders. \r\n  ```\r\n        PS:1> Get-ChildItem -Hidden\r\n\r\n            Directory: C:\\arena\\tmp\r\n\r\n        Mode                 LastWriteTime         Length Name\r\n        ----                 -------------         ------ ----\r\n        d--h-           5/27/2021  7:07 PM                hiddenFolder\r\n        -a-h-           5/18/2021  9:15 PM          63571 hiddenFile.xml\r\n\r\n        PS:2> Get-ChildItem .\\hiddenFolder\r\n\r\n            Directory: C:\\arena\\tmp\\hiddenFolder\r\n\r\n        Mode                 LastWriteTime         Length Name\r\n        ----                 -------------         ------ ----\r\n        -a---           5/27/2021  7:07 PM              0 abc.txt\r\n  ```\r\n\r\nThe inconsistency add confusion to the current behavior. It would be good to make the `FileSystemProvider` able to find a hidden file without requiring `-Force`, if the path to the file is explicitly specified.\r\n\r\n## Proposed technical implementation details (optional)\r\n\r\nThe proposed the behavior change is:\r\n__when the path to a hidden file is explicitly specified (no wildcards in play), `Get-Item` and `Get-ChildItem` should be able to find that file without requiring the `-Force` parameter.__\r\n\r\nThe change would be in the `FileSystemProvider` code. This behavior change should kick in only when the specified path is an explicit path to a hidden file. When the specified path contains wildcards, the current behavior should be kept -- hidden files are not returned without the `-Force` parameter.\r\n\r\nAlso, see @mklement0's thoughts on the fix: https://github.com/PowerShell/PowerShell/issues/15323#issuecomment-831991311",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "What is _hidden_ flag for? Hidden conception is \"_exclude file system objects from file system tree (not content!) manipulations_\".\r\nSo the PowerShell behavior:\r\n> For a hidden file C:\\arena\\tmp\\hiddenFile.xml, both Get-Item and Get-ChildItem cannot find the file even if the path to the file is explicitly specified\r\n\r\nis consistent with this concept and is correct.",
      "created_at": "2021-05-28T04:41:33Z",
      "updated_at": "2021-05-28T04:41:33Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "On Linux, dot-prefixed files are hidden and not shown by `ls` by default.  But if I specify `ls .profile`, ls will show the file even though it is hidden.  Ditto for `ls .local` - the contents of the hidden dir are shown.  On Windows, File Explorer may not show AppData or ProgramData by default but if I type that path into the address bar, File Explorer will then happily show the contents of the \"hidden\" dir.",
      "created_at": "2021-05-28T05:16:12Z",
      "updated_at": "2021-05-28T05:17:42Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "In both cases it is an established behavior that has been there for many years.\r\nWhy not then change the behavior of ls? It is the one that raises more doubts. The references to ls look like speculation.\r\n\r\nAs far as PowerShell is concerned, this is a breaking change which is dangerous. And the right question here is what types of business scripts are blocked or forced to be expensive? I don't know of any and can't think of any.\r\n\r\nThe PowerShell behavior seems conceptually correct and safer.\r\n",
      "created_at": "2021-05-28T07:23:15Z",
      "updated_at": "2021-05-28T07:23:15Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "To me, if you know a hidden file is there and you target it specifically by name, I see no reason you should _also_ be required to use -Force.\r\n\r\nIf you enter `%userprofile%\\appdata` under windows explorer you can still open the folder even though it's hidden, it doesn't tell you to \"please ask nicely first\". If you know it's there and you target it explicitly, requiring `-Force` is a bit of a silly additional requirement IMO.\r\n\r\nAs for \"why not change `ls`\", if you wanna do that, discussing it _here_ is pointless; head over to the folks maintaining those tools and ask them. \ud83d\ude02 ",
      "created_at": "2021-05-28T14:59:46Z",
      "updated_at": "2021-05-28T15:00:30Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> To me, if you know a hidden file is there and you target it specifically by name, I see no reason you should also be required to use -Force.\r\n\r\nIn this case, there is no need to set the hidden attribute. _If you set this attribute you have made it clear that you want to exclude this file._\r\nYou can hide a file by security permission. How would you get an access to the file again? You should adjust security permissions. The same is true for Hidden attribute.\r\n\r\n> As for \"why not change ls\", if you wanna do that, discussing it here is pointless; head over to the folks maintaining those tools and ask them. \r\n\r\nFor me, _PowerShell is first class citizen_. I am sufficiently aware that Unix as a whole and in any its part is a pile of historical misunderstandings. \ud83d\ude04 ",
      "created_at": "2021-05-28T16:00:41Z",
      "updated_at": "2021-05-28T16:00:41Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "cmd.exe doesn't show hidden files by default.",
      "created_at": "2021-11-30T06:33:24Z",
      "updated_at": "2021-11-30T06:33:24Z"
    }
  ],
  "created_at": "2021-05-28T04:19:56Z",
  "number": 15477,
  "state": "open",
  "title": "File system provider should find a hidden file if the path to the file is explicitly specified",
  "updated_at": "2021-11-30T06:34:03Z"
}