{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4235",
  "author": "mklement0",
  "body": "\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\nGet-FormatData NoSuch.Type.Exists.Or.IsLoaded\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\nAn error that indicates that the type does not exist (in the current session).\r\n\r\nActual behavior\r\n---------------\r\n\r\nA quiet no-op. No output, `$?` reports `$True`.\r\n\r\nEnvironment data\r\n----------------\r\n\r\n```powershell\r\nPowerShell Core v6.0.0-beta.3 on macOS 10.12.5\r\nPowerShell Core v6.0.0-beta.3 on Ubuntu 16.04.1 LTS\r\nPowerShell Core v6.0.0-beta.3 on Microsoft Windows 10 Pro (64-bit; v10.0.14393)\r\nWindows PowerShell v5.1.15063.413 on Microsoft Windows 10 Pro (64-bit; v10.0.15063)\r\n```\r\n",
  "closed_at": "2018-08-10T04:34:03Z",
  "comments": [
    {
      "author": "faraazahmad",
      "author_association": "CONTRIBUTOR",
      "body": "I would like to work on this",
      "created_at": "2018-07-27T16:35:34Z",
      "updated_at": "2018-07-27T16:35:34Z"
    },
    {
      "author": "faraazahmad",
      "author_association": "CONTRIBUTOR",
      "body": "@mklement0 @SteveL-MSFT  What should the `ErrorCategory` be?",
      "created_at": "2018-07-28T07:48:32Z",
      "updated_at": "2018-07-28T07:48:32Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@faraazahmad:\r\n\r\nThanks for your willingness to take this on.\r\n\r\nI'm not the best person to ask, but looking at the enumeration values at https://docs.microsoft.com/en-us/dotnet/api/system.management.automation.errorcategory?view=powershellsdk-1.1.0, perhaps `ResourceUnavailable`?",
      "created_at": "2018-07-29T02:59:14Z",
      "updated_at": "2018-07-29T02:59:14Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@faraazahmad consider it yours!  Thanks!",
      "created_at": "2018-07-30T23:01:22Z",
      "updated_at": "2018-07-30T23:01:22Z"
    },
    {
      "author": "faraazahmad",
      "author_association": "CONTRIBUTOR",
      "body": "So my code now outputs this: \r\n```\r\nPS /home/faraaz> Get-FormatData yolo\r\nGet-FormatData : No such type\r\nAt line:1 char:1\r\n+ Get-FormatData yolo\r\n+ ~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : ResourceUnavailable: (System.String[]:String[]) [Get-FormatData], Exception\r\n+ FullyQualifiedErrorId : SPECIFIED_TYPE_NOT_FOUND,Microsoft.PowerShell.Commands.GetFormatDataCommand\r\n```\r\nIs this all right? And should I just check for `$?` in the test or something more?\r\n:)",
      "created_at": "2018-07-31T19:50:23Z",
      "updated_at": "2018-08-02T05:57:55Z"
    },
    {
      "author": "Jaykul",
      "author_association": "CONTRIBUTOR",
      "body": "HANG ON ... This is a **breaking** change to the function!!! \r\n\r\nDoes `-ErrorAction SilentlyContinue` work, or are you now forcing everyone to wrap this in a try/catch block?\r\n\r\nI understand the desire to have this produce an error, but we can't make existing commands throw exceptions in use cases that *used* to just return nothing.\r\n\r\nYou're breaking every instance of existing code that looks like this, right?\r\n\r\n```powershell\r\nif(!(Get-FormatData $Type)) {\r\n   Update-FormatData -TypeName $Type ...\r\n}\r\n```",
      "created_at": "2018-08-09T16:19:55Z",
      "updated_at": "2018-08-09T16:24:11Z"
    }
  ],
  "created_at": "2017-07-12T21:59:40Z",
  "number": 4235,
  "state": "closed",
  "title": "Get-FormatData quietly ignores non-existing type-name arguments",
  "updated_at": "2018-08-16T09:18:36Z"
}