{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5791",
  "author": "daxian-dbw",
  "body": "## PR Summary\r\nFix #5695\r\n\r\nEnable ScriptBlockLogging on Linux/macOS by moving the GroupPolicy configurations to the configuration file `PowerShellProperties.json`. Including the following tasks:\r\n1. Enable the logging via `MshLog.cs` on Unix platforms. (**the 1st commit**)\r\n2. Refactor `PropertyAccessor.cs`. (**the 2nd commit**)\r\n    - Remove the unneeded base type\r\n    - Rename 'ConfigPropertyAccessor' to `PowerShellConfig`\r\n    - Move `PowerShellConfig` to the namespace `System.Management.Automation.Configuration`\r\n3. Rename the enum `PropertyScope` to `ConfigScope`. (**the 3rd commit**)\r\n4. Rename file `PropertyAccessor.cs` to `PSConfiguration.cs`. (**the 4th commit**)\r\n5. Refactor GroupPolicy setting related code to use the configuration file. (**the 5th commit**)\r\n    - Followings are the policy settings that are moved to the configuration file.\r\n       - ScriptExecution settings (used in `SecuritySupport.cs`)\r\n       - ScriptBlockLogging settings (used in `CompiledScriptBlock.cs`)\r\n       - ModuleLogging settings (used in `ModuleCmdletBase.cs`)\r\n       - ProtectedEventLogging settings (used in `CompiledScriptBlock.cs`)\r\n       - Transcription settings (used in `MshHostUserInterface.cs`)\r\n       - UpdatableHelp setting (used in `UpdatableHelpSystem.cs`)\r\n       - ConsoleSessionConfiguration settings (used in `CommandLineParameterParser.cs`)\r\n    - In `PSConfiguration.cs`, updated `ReadValueFromFile<T>` to make it flexible to allow a custom `JsonObject` parsing implementation delegate passed in.\r\n    - In `PSConfiguration.cs`, added `GetPowerShellPolicies(ConfigScope scope)` and make `DefaultSourcePath` setting part of the new policy settings because it is part of the group policy on windows powershell.\r\n    - In `Utils.cs`, replace the method `GetGroupPolicySetting` with `T GetPolicySetting<T>(ConfigScope[] preferenceOrder) where T : PolicyBase`. The old method was for reading from Registry, while the new one is for reading from configuration file.\r\n    - Changes in other files are the corresponding changes due to `GetGroupPolicySetting` being replaced.\r\n6. Add xUnit tests to test reading policy settings from the configuration files in different scenarios. (**the 6th commit**)\r\n    - The xUnit tests are running in parallel by default. Tests for reading policy settings manipulate the configuration file and thus are in conflict with other xUnit tests. So the existing xUnit tests are moved to the namespace `PSTests.Parallel` and the new tests are moved to `PSTests.Sequential` and the corresponding build scripts are updated to run sequential xUnit tests first and then run other xUnit tests in parallel.\r\n7. A minor change to fix an issue in xUnit test and another minor change to `SysLogProvider` to make ScriptBlock logging not ignored on Unix platforms. (**the 7th commit**)\r\n8. Re-enable GPO support on Windows. On Windows, we first query GPO from registry, if the required policy is not defined, then we query policies from the configuration file. (**the 9th commit**)\r\n9. Rename `PowerShellProperties.json` to `powershell.config.json`. (**the 10th commit**)\r\n\r\n### An example of the configuration file `powershell.config.json`\r\n\r\n```\r\n{\r\n  \"Microsoft.PowerShell:ExecutionPolicy\": \"RemoteSigned\",\r\n  \"PowerShellPolicies\": {\r\n    \"ScriptExecution\": {\r\n      \"ExecutionPolicy\": \"RemoteSigned\",\r\n      \"EnableScripts\": true\r\n    },\r\n    \"ScriptBlockLogging\": {\r\n      \"EnableScriptBlockInvocationLogging\": true,\r\n      \"EnableScriptBlockLogging\": true\r\n    },\r\n    \"ModuleLogging\": {\r\n      \"EnableModuleLogging\": false,\r\n      \"ModuleNames\": [\r\n        \"PSReadline\",\r\n        \"PowerShellGet\"\r\n      ]\r\n    },\r\n    \"ProtectedEventLogging\": {\r\n      \"EnableProtectedEventLogging\": false,\r\n      \"EncryptionCertificate\": [\r\n        \"Joe\"\r\n      ]\r\n    },\r\n    \"Transcription\": {\r\n      \"EnableTranscripting\": true,\r\n      \"EnableInvocationHeader\": true,\r\n      \"OutputDirectory\": \"F:\\\\tmp\\\\new\"\r\n    },\r\n    \"UpdatableHelp\": {\r\n      \"DefaultSourcePath\": \"f:\\\\temp\"\r\n    },\r\n    \"ConsoleSessionConfiguration\": {\r\n      \"EnableConsoleSessionConfiguration\": false,\r\n      \"ConsoleSessionConfigurationName\": \"name\"\r\n    }\r\n  },\r\n  \"LogLevel\": \"verbose\"\r\n}\r\n```\r\n\r\n### Limitation that needs to be documented\r\n\r\nOn Unix platform, the default logging level filter is `information`, while the logging of script block execution writes out `verbose` level logging. So the configuration entry `\"LogLevel\": \"verbose\"` is needed along with the settings in `\"ScriptBlockLogging\"`. This needs to be documented.\r\n\r\n### Documentation needed\r\n\r\nWe need documentation to clarify how logging works in PowerShell. Not sure if we already have some docs about it. Issue https://github.com/PowerShell/PowerShell-Docs/issues/2017 is opened.\r\n\r\n## PR Checklist\r\n\r\nNote: Please mark anything not applicable to this PR `NA`.\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - [x] Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] User facing [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - [x] Issue filed - Issue link:\r\n- [ ] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n    - [x] [Add `[feature]` if the change is significant or affectes feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` to the beginning of the title and remove the prefix when the PR is ready.\r\n\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  ",
  "closed_at": "2018-01-08T20:03:24Z",
  "comments": [
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "There are a lot of changes in this PR. When reviewing this PR, I recommend you review each commit because I intentionally group logically related changes into separate commits.",
      "created_at": "2018-01-04T20:36:03Z",
      "updated_at": "2018-01-04T20:36:03Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@dantraMSFT @SteveL-MSFT @iSazonov @TravisEz13 I think all comments have been addressed (code updated, or question answered, or issue opened). Can you please take another look to see if the PR is ready to merge?",
      "created_at": "2018-01-08T00:51:50Z",
      "updated_at": "2018-01-08T00:51:50Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Thanks all for the reviews!",
      "created_at": "2018-01-08T19:52:26Z",
      "updated_at": "2018-01-08T19:52:26Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@TravisEz13 can you open an issue to track the GPO tests?",
      "created_at": "2018-01-08T22:09:53Z",
      "updated_at": "2018-01-08T22:09:53Z"
    }
  ],
  "created_at": "2018-01-04T20:29:09Z",
  "number": 5791,
  "state": "closed",
  "title": "Make PowerShell able to enable logging of script block execution on Unix platforms",
  "updated_at": "2018-01-08T22:09:53Z"
}