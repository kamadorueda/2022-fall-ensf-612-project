{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15119",
  "author": "krishnayalavarthi",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\n<!-- Summarize your PR between here and the checklist. -->\r\nOpenSubKey() is seen throwing exceptions. This could be because of permissions for some users to the access to some part of registry. Exceptions are now being caught.\r\n\r\n## PR Context\r\n\r\n<!-- Provide a little reasoning as to why this Pull Request helps and why you have opened it. -->\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [ ] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and opened an issue in the relevant tool repository. This may include:\r\n        - [ ] Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode\r\n        (which runs in a different PS Host).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n",
  "closed_at": "2021-04-30T18:00:06Z",
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Can you update the description showing what the user was doing, the expected result, and the actual result?",
      "created_at": "2021-03-29T19:23:37Z",
      "updated_at": "2021-03-29T19:23:37Z"
    },
    {
      "author": "krishnayalavarthi",
      "author_association": "CONTRIBUTOR",
      "body": "> Can you update the description showing what the user was doing, the expected result, and the actual result?\r\n\r\nUnfortunately, we don't have details on what the users are doing for this exception to cause. But there have been many exceptions seen in the Watson crash dumps, at this line of code.\r\n\r\n`result = resultRoot.OpenSubKey(remainingPath, writeAccess);`",
      "created_at": "2021-03-29T19:29:38Z",
      "updated_at": "2021-03-29T19:29:38Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@krishnayalavarthi Please fix a test  https://dev.azure.com/powershell/PowerShell/_build/results?buildId=75680&view=logs&j=99798060-e5bf-55b9-b3b5-109e6acacce3&t=0050f0b1-14ee-5c4d-b4b0-da6405e3eaf0&l=452\r\n```\r\n     [-] Verify Get-Item on inaccessible path 94ms\r\n        Expected an exception, with FullyQualifiedErrorId 'System.Security.SecurityException,Microsoft.PowerShell.Commands.GetItemCommand' to be thrown, but the FullyQualifiedErrorId was 'GetDynamicParametersException,Microsoft.PowerShell.Commands.GetItemCommand'. from D:\\a\\1\\s\\test\\powershell\\Modules\\Microsoft.PowerShell.Management\\Registry.Tests.ps1:63 char:15\r\n            +             { Get-Item HKLM:\\SAM\\SAM -ErrorAction Stop } | Should -Th \u2026\r\n            +               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n        63:             { Get-Item HKLM:\\SAM\\SAM -ErrorAction Stop } | Should -Throw -ErrorId \"System.Security.SecurityException,Microsoft.PowerShell.Commands.GetItemCommand\"\r\n        at <ScriptBlock>, D:\\a\\1\\s\\test\\powershell\\Modules\\Microsoft.PowerShell.Management\\Registry.Tests.ps1: line 63\r\n```",
      "created_at": "2021-03-31T03:08:13Z",
      "updated_at": "2021-03-31T03:19:40Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I have reviewed all code paths to GetRegkeyForPath() and see **two ones which are not wrapped in try-catch**.\r\nThe rest of the paths are already handling this exception. Before the PR we already have:\r\n```powershell\r\nPS C:\\> Get-Item HKLM:\\SAM\\SAM -ErrorAction Stop\r\n\r\nGet-Item: Requested registry access is not allowed.\r\n\r\nPS C:\\> Get-Error\r\n\r\nType        : System.Management.Automation.ActionPreferenceStopException\r\nErrorRecord :\r\n    Exception             :\r\n        Type       : System.Security.SecurityException\r\n        TargetSite :\r\n            Name          : InternalOpenSubKeyCore\r\n            DeclaringType : Microsoft.Win32.RegistryKey\r\n            MemberType    : Method\r\n            Module        : Microsoft.Win32.Registry.dll\r\n        StackTrace :\r\n   at Microsoft.Win32.RegistryKey.InternalOpenSubKeyCore(String name, Boolean writable)\r\n   at Microsoft.Win32.RegistryKey.OpenSubKey(String name, Boolean writable)\r\n   at Microsoft.PowerShell.Commands.RegistryWrapper.OpenSubKey(String name, Boolean writable) in C:\\Users\\1\\Documents\\G\r\nitHub\\iSazonov\\PowerShell\\src\\System.Management.Automation\\namespaces\\RegistryWrapper.cs:line 177\r\n   at Microsoft.PowerShell.Commands.RegistryProvider.GetRegkeyForPath(String path, Boolean writeAccess) in C:\\Users\\1\\D\r\nocuments\\GitHub\\iSazonov\\PowerShell\\src\\System.Management.Automation\\namespaces\\RegistryProvider.cs:line 3555\r\n   at Microsoft.PowerShell.Commands.RegistryProvider.GetRegkeyForPathWriteIfError(String path, Boolean writeAccess) in\r\nC:\\Users\\1\\Documents\\GitHub\\iSazonov\\PowerShell\\src\\System.Management.Automation\\namespaces\\RegistryProvider.cs:line 34\r\n41\r\n        Message    : Requested registry access is not allowed.\r\n        Source     : Microsoft.Win32.Registry\r\n        HResult    : -2146233078\r\n    TargetObject          : HKEY_LOCAL_MACHINE\\SAM\\SAM\r\n    CategoryInfo          : PermissionDenied: (HKEY_LOCAL_MACHINE\\SAM\\SAM:String) [Get-Item], SecurityException\r\n    FullyQualifiedErrorId : System.Security.SecurityException,Microsoft.PowerShell.Commands.GetItemCommand\r\n    InvocationInfo        :\r\n        MyCommand        : Get-Item\r\n        ScriptLineNumber : 1\r\n        OffsetInLine     : 1\r\n        HistoryId        : 6\r\n        Line             : Get-Item HKLM:\\SAM\\SAM -ErrorAction Stop\r\n        PositionMessage  : At line:1 char:1\r\n                           + Get-Item HKLM:\\SAM\\SAM -ErrorAction Stop\r\n                           + ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n        InvocationName   : Get-Item\r\n        CommandOrigin    : Internal\r\n    ScriptStackTrace      : at <ScriptBlock>, <No file>: line 1\r\n    PipelineIterationInfo :\r\n```\r\n\r\nThis suggests that the PR fix is \u200b\u200bnot correct and we need to investigate the problem deeper into the original application.\r\nI guess a root of the issue is in one from two code paths to GetRegkeyForPath() which are not wrapped in try-catch.",
      "created_at": "2021-03-31T03:28:46Z",
      "updated_at": "2021-03-31T03:28:46Z"
    },
    {
      "author": "krishnayalavarthi",
      "author_association": "CONTRIBUTOR",
      "body": "I guess we will wait and investigate further.",
      "created_at": "2021-03-31T04:13:52Z",
      "updated_at": "2021-03-31T04:13:52Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I convert the PR to Draft until we get more information about original issue.",
      "created_at": "2021-04-02T06:46:14Z",
      "updated_at": "2021-04-02T06:46:14Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as stale because it has been marked as requiring author feedback but has not had any activity for **15 days**. It will be closed if no further activity occurs **within 10 days of this comment**.",
      "created_at": "2021-04-20T08:00:05Z",
      "updated_at": "2021-04-20T08:00:05Z"
    }
  ],
  "created_at": "2021-03-29T18:54:20Z",
  "number": 15119,
  "state": "closed",
  "title": "Registry access exception caught",
  "updated_at": "2021-04-30T18:00:06Z"
}