{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5416",
  "author": "MaximoTrinidad",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\n- Windows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nIf it is a bug report:\r\n- make sure you are able to repro it on the latest released version. \r\nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://github.com/PowerShell/PowerShell/blob/master/docs/KNOWNISSUES.md).\r\n- Fill out the following repro template:\r\n\r\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\r\n-->\r\nI'm building an scenario where I want to use \"Invoke-Item\" cmdlet with credentials but is not taking it Windows.\r\n\r\nAlthough, I don't expect to use this in Linux, I did try it and gave me the same error message.\r\n\r\nSteps to reproduce\r\n------------------\r\nCreate the following credential object:\r\n```powershell\r\n## In Windwows\r\n\t$MyUserName = \"MyAdminName\";\r\n\t$MyPassword = ConvertTo-SecureString '!myPassword$' -asplaintext -force;\r\n\t$MyCredentials2 = new-object -typename System.Management.Automation.PSCredential `\r\n\t\t\t\t\t\t\t\t -argumentlist $MyUserName, $MyPassword;\r\n\tWrite-Host \"Executing PowerShell Core\" -foreground 'yellow';\r\n\tInvoke-Item 'notepad.exe' -Credential $MyCredentials2;\r\n```\r\nTry it in Linux (Ubuntu 16.04)\r\n```\r\n\t$MyUserName = \"MyAdminName\";\r\n\t$MyPassword = ConvertTo-SecureString '!myPassword$' -asplaintext -force;\r\n\t$MyCredentials2 = new-object -typename System.Management.Automation.PSCredential `\r\n\t\t\t\t\t\t\t\t -argumentlist $MyUserName, $MyPassword;\r\n\tWrite-Host \"Executing PowerShell Core\" -foreground 'yellow';\r\n\tInvoke-Item 'gedit' -Credential $MyCredentials2;\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\nIt will open the application with the credential provided.\r\n```none\r\n\r\n```\r\n\r\nActual behavior\r\n---------------\r\nUsing PowerShell Core and Windows PowerShell in both OS's (Windows and Linux)\r\ngetting the following error messsage:\r\n```PowerShell Core\r\nPowerShell v6.0.0-beta.9\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nPS C:\\Program Files\\PowerShell\\6.0.0-beta.9> $MyUserName = \"max_t\";\r\nPS C:\\Program Files\\PowerShell\\6.0.0-beta.9> $MyPassword = ConvertTo-SecureString 'xxxxxx' -asplaintext -force;\r\nPS C:\\Program Files\\PowerShell\\6.0.0-beta.9> $MyCredentials2 = new-object -typename System.Management.Automation.PSCrede\r\nntial `\r\n>>  -argumentlist $MyUserName, $MyPassword;\r\nPS C:\\Program Files\\PowerShell\\6.0.0-beta.9> Write-Host \"Executing PowerShell Core\" -foreground 'yellow';\r\nExecuting PowerShell Core\r\nPS C:\\Program Files\\PowerShell\\6.0.0-beta.9> Invoke-Item 'notepad.exe' -Credential $MyCredentials2;\r\nThe FileSystem provider supports credentials only on the New-PSDrive cmdlet. Perform the operation again without\r\nspecifying credentials.\r\nAt line:1 char:1\r\n+ Invoke-Item 'notepad.exe' -Credential $MyCredentials2;\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : NotImplemented: (:) [], PSNotSupportedException\r\n    + FullyQualifiedErrorId : NotSupported\r\n```\r\nIn Linux\r\n```\r\nPS /home/maxt> $MyUserName = \"maxt\";                                            \r\nPS /home/maxt> $MyPassword = ConvertTo-SecureString 'xxxxxxxxx' -asplaintext -force;                                                                         \r\nPS /home/maxt> $MyCredentials2 = new-object -typename System.Management.Automation.PSCredential `                                                               >>  -argumentlist $MyUserName, $MyPassword;                                     \r\nPS /home/maxt> \r\nPS /home/maxt> invoke-item 'gedit' -Credential $MyCredentials2;                 \r\nThe FileSystem provider supports credentials only on the New-PSDrive cmdlet. \r\nPerform the operation again without specifying credentials.\r\nAt line:1 char:1\r\n+ invoke-item 'gedit' -Credential $MyCredentials2;\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : NotImplemented: (:) [], PSNotSupportedException\r\n    + FullyQualifiedErrorId : NotSupported\r\n \r\nPS /home/maxt> \r\n```\r\n\r\nEnvironment data\r\n----------------\r\nWindows 10 Insider Build 17035\r\nUbuntu 16.04.3\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell - Linux\r\nPS /home/maxt> $PSVersionTable                                                  \r\n\r\nName                           Value                                           \r\n----                           -----                                           \r\nPSVersion                      6.0.0-beta.9                                    \r\nPSEdition                      Core                                            \r\nGitCommitId                    v6.0.0-beta.9                                   \r\nOS                             Linux 4.10.0-38-generic #42~16.04.1-Ubuntu SM...\r\nPlatform                       Unix                                            \r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}                         \r\nPSRemotingProtocolVersion      2.3                                             \r\nSerializationVersion           1.1.0.1                                         \r\nWSManStackVersion              3.0  \r\n```\r\n``` PowerShell Core - Windows\r\nPS C:\\Program Files\\PowerShell\\6.0.0-beta.9> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.0-beta.9\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.0-beta.9\r\nOS                             Microsoft Windows 10.0.17035\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n![ii_01_2017-11-10_17-23-53](https://user-images.githubusercontent.com/19892435/32681870-94d77e9e-c63f-11e7-9fe3-e4c11206aaaf.png)\r\n\r\n![ii_02_2017-11-10_17-23-53](https://user-images.githubusercontent.com/19892435/32681730-e1f88ce6-c63e-11e7-8718-23d76e6bf022.png)\r\n\r\n\r\n",
  "closed_at": "2017-11-10T23:03:58Z",
  "comments": [
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "FYI - It's happening in all versions of PowerShell\r\nWindows PowerShell - Windows 10 Insider Build 17035\r\n```Windows PowerShell\r\n\t$MyUserName = \"max_t\";\r\n\t$MyPassword = ConvertTo-SecureString 'xxxxxxx' -asplaintext -force;\r\n\t$MyCredentials2 = new-object -typename System.Management.Automation.PSCredential `\r\n\t\t\t\t\t\t\t\t -argumentlist $MyUserName, $MyPassword;\r\n         Invoke-Item 'notepad.exe' -Credential $MyCredentials2;\r\n```\r\n```\r\nPS C:\\Users\\max_t> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      5.1.17035.1000\r\nPSEdition                      Desktop\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nBuildVersion                   10.0.17035.1000\r\nCLRVersion                     4.0.30319.42000\r\nWSManStackVersion              3.0\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\n```\r\n\r\n![ii_03_2017-11-10_17-23-53](https://user-images.githubusercontent.com/19892435/32681930-eee06914-c63f-11e7-81f4-648fd218ab62.png)\r\n\r\n\r\n",
      "created_at": "2017-11-10T22:51:49Z",
      "updated_at": "2017-11-10T22:52:59Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "I will write up the issue in UserVoice for the Windows PowerShell.\r\n:)",
      "created_at": "2017-11-10T22:53:57Z",
      "updated_at": "2017-11-10T22:53:57Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@MaximoTrinidad \r\n\r\nThis is the documented behavior https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.management/invoke-item?view=powershell-5.1\r\n\r\nFrom the  `-Credential` parameter description:\r\n\r\n> This parameter is not supported by any providers installed with Windows PowerShell.\r\n\r\nThe `FileSystem` PSProvider you are using `Invoke-Item` on to run a file is one of the providers installed with PowerShell. This parameter is provided for use with custom PSProviders which may require credentials to perform actions such as `Invoke-Item`",
      "created_at": "2017-11-10T23:03:05Z",
      "updated_at": "2017-11-10T23:04:30Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "@markekraus,\r\n\r\nHum! You're eager to close this incident and provide a link (which I already have previously checked) without providing any room for a brief discussion.\r\n\r\nThis is a vague note! \r\n```\r\nInvoke-Item\r\nParameter\r\n:\r\n-Credential\r\n:\r\nThis parameter is not supported by any providers installed with Windows PowerShell.\"\r\n:\r\n```\r\nAs, I'm trying to use the Invoke-Item cmdlet, to open either an app or a file which suppose to let use the credential parameter to accomplished my task.  And, getting the same error:\r\n\r\n```\r\nPS C:\\Users\\max_t> ii 'c:\\Windows\\System32\\notepad.exe' -Credential\r\nInvoke-Item : Missing an argument for parameter 'Credential'. Specify a parameter of type\r\n'System.Management.Automation.PSCredential' and try again.\r\nAt line:1 char:38\r\n+ ii 'c:\\Windows\\System32\\notepad.exe' -Credential\r\n+                                      ~~~~~~~~~~~\r\n    + CategoryInfo          : InvalidArgument: (:) [Invoke-Item], ParameterBindingException\r\n    + FullyQualifiedErrorId : MissingArgument,Microsoft.PowerShell.Commands.InvokeItemCommand\r\n\r\nPS C:\\Users\\max_t> ii 'c:\\Windows\\System32\\drivers\\etc\\hosts' -credential\r\nInvoke-Item : Missing an argument for parameter 'Credential'. Specify a parameter of type\r\n'System.Management.Automation.PSCredential' and try again.\r\nAt line:1 char:44\r\n+ ii 'c:\\Windows\\System32\\drivers\\etc\\hosts' -credential\r\n+                                            ~~~~~~~~~~~\r\n    + CategoryInfo          : InvalidArgument: (:) [Invoke-Item], ParameterBindingException\r\n    + FullyQualifiedErrorId : MissingArgument,Microsoft.PowerShell.Commands.InvokeItemCommand\r\n\r\nPS C:\\Users\\max_t>\r\n```\r\n\r\nNow, I've tried using this parameter to try open both an app (\"notepad\") and a file (\"hosts\") with user credentials (in this case as Admin).\r\n\r\nSo, I'm guessing (because there was no discussion), that this is a  documentation bug and this parameter should be removed from this cmdlet.  Is this the case?\r\n\r\nLook, if I'm wrong in using this cmdlet, then fine! I just want to understand why not, as I think, I should be able to open a file using different credentials.  \r\n\r\n:)\r\n\r\n\r\n\r\n",
      "created_at": "2017-11-11T03:50:56Z",
      "updated_at": "2017-11-11T03:50:56Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@MaximoTrinidad  I apologize if my response seems rushed or odd. However, this is the documented behavior of the `-Credentials` parameter on the `Invoke-Item` cmdlet, It is neither bug nor a documentation issue but `by design`. The parameter does not work with any of  built-in PSProviders and is available on the cmdlet as a compatibility with 3rd-party and custom PSProviders that may require credential to invoke an item. \r\n\r\nYou may want to read up on PSProviders:\r\n\r\n https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_providers?view=powershell-5.1\r\n\r\nThis includes a list of built in providers. One of which is the `FileSystem` provider which provide access to the files and folders on your system and remote systems through File Shares. Provider commands, such as `Invoke-Item` are generalized to work with whatever the PSProvider is abstracting, be it files, certificates, registry entries, etc.\r\n\r\nThe built-in providers are not the only providers available. In fact, [SHiPS](https://github.com/PowerShell/SHiPS) was recently announced which makes it even easier to create custom PSProvders. And example PSProvder that is not built-in and is widely used is the `AD:` PSDrive that is created when you import the Active Directory module. \r\n\r\nThere may be a need in a custom PSProvder for credentials to be supplied for various provider action concerning Items. In order to accommodate those PSProviders, the `*-Item*` cmdlets all expose a `-Credential` parameter, even though it is not used or supported in the built-in providers, such as `FileSystem` and `Registry`.\r\n\r\nIf your goal is to launch an application as another user you can use `Start-Process -Credential` See [`Start-Process`](https://docs.microsoft.com/en-us/powershell/module/Microsoft.PowerShell.Management/Start-Process?view=powershell-6).\r\n\r\nIf you think the documentation should be made more clear, you may open an issue on [PowerShell/PowerShell-Docs](https://github.com/PowerShell/PowerShell-Docs).\r\n\r\nWhile this Repository is open to general questions and support, its primary purpose is for reporting bugs, tracking work, and requesting features with PowerShell Core. When a documented behavior is presented as a problem the issue will be closed unless the suer is making a proposal to change the behavior. I don't believe changing the behavior in this instance is possible or desireable as there are other better means launch an application as another user.\r\n\r\nIf you would like general help with PowerShell you can use [Gitter](https://gitter.im/PowerShell/PowerShell?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge), [Slack](http://slack.poshcode.org/), [Reddit](https://www.reddit.com/r/PowerShell), and [StackOverflow](https://stackoverflow.com/questions/tagged/powershell) where people like myself hang out and help with any questions you might have.",
      "created_at": "2017-11-11T13:29:25Z",
      "updated_at": "2017-11-11T13:29:25Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "@markekraus,\r\n\r\nAwesome!  Greatly Appreciate your response.  Sorry for the rant!\r\n\r\nYes! Last night I went and looked at another route using the Start-Process, and for my surprise, the credential parameter didn't work neither.\r\n\r\nI ended up using the \"-Verb RunAs\" parameter to accomplished what I needed. This time there were no notes like Invoke-Item. But, there's always a possibility that its a doc bug.\r\n\r\nWell, I appreciate your comments.\r\n\r\nThank again,\r\nMax",
      "created_at": "2017-11-11T16:41:49Z",
      "updated_at": "2017-11-11T16:41:49Z"
    }
  ],
  "created_at": "2017-11-10T22:45:16Z",
  "number": 5416,
  "state": "closed",
  "title": "Beta.9 - Invoke-Item not accepting Credentials ends in error.",
  "updated_at": "2017-11-11T16:41:50Z"
}