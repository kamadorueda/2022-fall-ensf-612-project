{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4750",
  "author": "timparkinson",
  "body": "With reference to #4264 first reported by @chuanjiao10 - on further examination there are a number of UFormats outputs which diverge from the output under Linux. Because the UFormat parameter is supposed to be UNIX format, the output should match that of the date command (i.e. strftime) on Linux.\r\n\r\nIt's clear that some of the divergences are simple format issues, for instance leading zeros. Others are down to following the ISO 8601 week date specification (https://en.wikipedia.org/wiki/ISO_week_date). And others appear to be differences between locale data on Linux and .Net. In these latter cases it looks like the C locale is followed, which may actually be the best that can be done given the lack of Linux locale data.\r\n\r\n# %c\r\n\r\n- [x] (PR #4805) The preferred date and time representation for the current locale.\r\n\r\n### en-US\r\n\r\n#### PowerShell\r\n```powershell\r\n[System.Threading.Thread]::CurrentThread.CurrentCulture = [System.Globalization.CultureInfo]::GetCultureInfo('en-US') \r\nget-date -Year 2005 -Month 1 -Day 1 -Hour 1 -Minute 0 -Second 0  -UFormat %c                                                   \r\n```\r\n\r\n```none                                                       \r\nSat Jan  1 01:00:00 2005\r\n```\r\n\r\n#### Linux\r\n```bash\r\nLC_TIME=\"en_US.UTF-8\" date -d 2005-01-01T01:00:00 +%c\r\n```\r\n```none                                                       \r\nSat 01 Jan 2005 01:00:00 AM GMT\r\n```\r\n\r\n### C\r\n\r\n#### PowerShell\r\n```powershell\r\n[System.Threading.Thread]::CurrentThread.CurrentCulture = [System.Globalization.CultureInfo]::GetCultureInfo('en-US') \r\nget-date -Year 2005 -Month 1 -Day 1 -Hour 1 -Minute 0 -Second 0  -UFormat %c                                                   \r\n```\r\n\r\n```none                                                       \r\nSat Jan  1 01:00:00 2005\r\n```\r\n\r\n#### Linux\r\n```bash\r\nLC_TIME=\"C.UTF-8\" date -d 2005-01-01T01:00:00 +%c\r\n```\r\n\r\n```none\r\nSat Jan  1 01:00:00 2005\r\n```\r\n\r\n---\r\n# %g\r\n\r\n- [x] (PR #14555) Like %G, but without century, that is, with a 2-digit year (00-99).\r\n\r\n### en-US\r\n\r\n#### PowerShell\r\n```powershell\r\n[System.Threading.Thread]::CurrentThread.CurrentCulture = [System.Globalization.CultureInfo]::GetCultureInfo('en-US') \r\nget-date -Year 2005 -Month 1 -Day 1 -Hour 1 -Minute 0 -Second 0  -UFormat %g                                                     \r\n```\r\n\r\n```none                                                       \r\n05\r\n```\r\n\r\n#### Linux\r\n```bash\r\nLC_TIME=\"en_US.UTF-8\" date -d 2005-01-01T01:00:00 +%g\r\n```\r\n\r\n```none\r\n04\r\n```\r\n\r\n---\r\n# %G\r\n\r\n- [x] (PR #14555) The ISO 8601 week-based year ... with century as a decimal number.\r\n\r\n### en-US\r\n\r\n#### PowerShell\r\n```powershell\r\n[System.Threading.Thread]::CurrentThread.CurrentCulture = [System.Globalization.CultureInfo]::GetCultureInfo('en-US') \r\nget-date -Year 2005 -Month 1 -Day 1 -Hour 1 -Minute 0 -Second 0  -UFormat %g                                                     \r\n```\r\n\r\n```none                                                       \r\n2005\r\n```\r\n\r\n#### Linux\r\n```bash\r\nLC_TIME=\"en_US.UTF-8\" date -d 2005-01-01T01:00:00 +%G\r\n```\r\n\r\n```none\r\n2004\r\n```\r\n\r\n---\r\n# %j\r\n\r\n- [x] (PR #4805) The day of the year as a decimal number (range 001 to 366).\r\n\r\n### en-US\r\n\r\n#### PowerShell\r\n```powershell\r\n[System.Threading.Thread]::CurrentThread.CurrentCulture = [System.Globalization.CultureInfo]::GetCultureInfo('en-US') \r\nget-date -Year 2005 -Month 1 -Day 1 -Hour 1 -Minute 0 -Second 0  -UFormat %j                                                    \r\n```\r\n\r\n```none                                                       \r\n1\r\n```\r\n\r\n#### Linux\r\n```bash\r\nLC_TIME=\"en_US.UTF-8\" date -d 2005-01-01T01:00:00 +%j\r\n```\r\n\r\n```none\r\n001\r\n```\r\n\r\n---\r\n## %k\r\n\r\n- [x] (PR #4805) The hour (24-hour clock) as a decimal number (range 0 to 23); single digits are preceded by a blank.\r\n\r\n### en-US\r\n\r\n#### PowerShell\r\n```powershell\r\n[System.Threading.Thread]::CurrentThread.CurrentCulture = [System.Globalization.CultureInfo]::GetCultureInfo('en-US') \r\nget-date -Year 2005 -Month 1 -Day 1 -Hour 1 -Minute 0 -Second 0  -UFormat %k                                                    \r\n```\r\n\r\n```none                                                       \r\n01\r\n```\r\n\r\n#### Linux\r\n```bash\r\nLC_TIME=\"en_US.UTF-8\" date -d 2005-01-01T01:00:00 +%k\r\n```\r\n\r\n```none\r\n 1\r\n```\r\n\r\n---\r\n# %l\r\n\r\n- [x] (PR #4805) The hour (12-hour clock) as a decimal number (range 1 to 12); single digits are preceded by a blank.\r\n\r\n### en-US\r\n\r\n#### PowerShell\r\n```powershell\r\n[System.Threading.Thread]::CurrentThread.CurrentCulture = [System.Globalization.CultureInfo]::GetCultureInfo('en-US') \r\nget-date -Year 2005 -Month 1 -Day 1 -Hour 1 -Minute 0 -Second 0  -UFormat %l                                                   \r\n```\r\n\r\n```none                                                       \r\n01\r\n```\r\n\r\n#### Linux\r\n```bash\r\nLC_TIME=\"en_US.UTF-8\" date -d 2005-01-01T01:00:00 +%l\r\n```\r\n\r\n```none\r\n 1\r\n```\r\n\r\n---\r\n# %s\r\n\r\n- [x] (PR #4805) The number of seconds since the Epoch, 1970-01-01 00:00:00+0000 (UTC).\r\n\r\n### en-US\r\n\r\n#### PowerShell\r\n```powershell\r\n[System.Threading.Thread]::CurrentThread.CurrentCulture = [System.Globalization.CultureInfo]::GetCultureInfo('en-US') \r\nget-date -Year 2005 -Month 1 -Day 1 -Hour 1 -Minute 0 -Second 0 -Millisecond 0  -UFormat %s                                                 \r\n```\r\n\r\n```none                                                       \r\n1104541200\r\n```\r\n\r\n#### Linux\r\n```bash\r\nLC_TIME=\"en_US.UTF-8\" date -d 2005-01-01T01:00:00 +%s\r\n```\r\n\r\n```none\r\n1104541200\r\n```\r\n\r\n```powershell\r\n[System.Threading.Thread]::CurrentThread.CurrentCulture = [System.Globalization.CultureInfo]::GetCultureInfo('en-US') \r\nget-date -Year 2005 -Month 1 -Day 1 -Hour 1 -Minute 0 -Second 0 -Millisecond 1 -UFormat %s                                                 \r\n```\r\n\r\n```none                                                       \r\n1104541200.001\r\n```\r\n\r\n#### Linux\r\n```bash\r\nLC_TIME=\"en_US.UTF-8\" date -d 2005-01-01T01:00:00.001 +%s\r\n```\r\n\r\n```none\r\n 1104541200\r\n```\r\n\r\n---\r\n# %u\r\n\r\n- [x] (PR #14549) The ISO 8601 day of the week 1-7 (M-Su).\r\n\r\n### en-US\r\n\r\n#### PowerShell\r\n\r\n```powershell\r\n[System.Threading.Thread]::CurrentThread.CurrentCulture = [System.Globalization.CultureInfo]::GetCultureInfo('en-US') \r\nget-date -Year 2005 -Month 1 -Day 2 -Hour 1 -Minute 0 -Second 0  -UFormat %u\r\n```\r\n\r\n```\r\n0\r\n```\r\n\r\n#### Linux\r\n\r\n```bash\r\nLC_TIME=\"en_US.UTF-8\" date -d 2005-01-02T01:00:00 +%u\r\n```\r\n\r\n```\r\n7\r\n```\r\n\r\n---\r\n# %U\r\n\r\n- [ ] The week number of the current year as a decimal number, range 00 to 53, starting with the first Sunday as the first day of week 01.\r\n\r\n### en-US\r\n\r\n#### PowerShell\r\n```powershell\r\n[System.Threading.Thread]::CurrentThread.CurrentCulture = [System.Globalization.CultureInfo]::GetCultureInfo('en-US') \r\nget-date -Year 2005 -Month 1 -Day 1 -Hour 1 -Minute 0 -Second 0  -UFormat %U                                                   \r\n```\r\n\r\n```none                                                       \r\n0\r\n```\r\n\r\n#### Linux\r\n```bash\r\nLC_TIME=\"en_US.UTF-8\" date -d 2005-01-01T01:00:00 +%U\r\n```\r\n\r\n```none\r\n00\r\n```\r\n\r\n---\r\n# %V\r\n\r\n- [ ] The ISO 8601 week number ... of the current year as a decimal number, range 01 to 53, where week 1 is the first week that has at least 4 days in the new year.\r\n\r\n### en-US\r\n\r\n#### PowerShell\r\n```powershell\r\n[System.Threading.Thread]::CurrentThread.CurrentCulture = [System.Globalization.CultureInfo]::GetCultureInfo('en-US') \r\nget-date -Year 2005 -Month 1 -Day 1 -Hour 1 -Minute 0 -Second 0  -UFormat %V                                                   \r\n```\r\n\r\n```none                                                       \r\n1\r\n```\r\n\r\n#### Linux\r\n```bash\r\nLC_TIME=\"en_US.UTF-8\" date -d 2005-01-01T01:00:00 +%V\r\n```\r\n\r\n```none\r\n53\r\n```\r\n\r\n---\r\n# %W\r\n\r\n- [ ] The week number of the current year as a decimal number, range 00 to 53, starting with the first Monday as the first day of week 01.\r\n\r\n### en-US\r\n\r\n#### PowerShell\r\n```powershell\r\n[System.Threading.Thread]::CurrentThread.CurrentCulture = [System.Globalization.CultureInfo]::GetCultureInfo('en-US') \r\nget-date -Year 2005 -Month 1 -Day 1 -Hour 1 -Minute 0 -Second 0  -UFormat %W                                                   \r\n```\r\n\r\n```none                                                       \r\n0\r\n```\r\n\r\n#### Linux\r\n```bash\r\nLC_TIME=\"en_US.UTF-8\" date -d 2005-01-01T01:00:00 +%W\r\n```\r\n```none                                                       \r\n00\r\n```\r\n\r\n---\r\n# %x\r\n\r\n- [ ] The preferred date representation for the current locale without the time.\r\n\r\n### en-US\r\n\r\n#### PowerShell\r\n```powershell\r\n[System.Threading.Thread]::CurrentThread.CurrentCulture = [System.Globalization.CultureInfo]::GetCultureInfo('en-US') \r\nget-date -Year 2005 -Month 1 -Day 1 -Hour 1 -Minute 0 -Second 0  -UFormat %x                                                 \r\n```\r\n\r\n```none                                                       \r\n01/01/05\r\n```\r\n\r\n#### Linux\r\n```bash\r\nLC_TIME=\"en_US.UTF-8\" date -d 2005-01-01T01:00:00 +%x\r\n```\r\n```none                                                       \r\n01/01/2005\r\n```\r\n\r\n### C\r\n\r\n#### PowerShell\r\n```powershell\r\n[System.Threading.Thread]::CurrentThread.CurrentCulture = [System.Globalization.CultureInfo]::GetCultureInfo('en-US') \r\nget-date -Year 2005 -Month 1 -Day 1 -Hour 1 -Minute 0 -Second 0  -UFormat %x                                                 \r\n```\r\n\r\n```none                                                       \r\n01/01/05\r\n```\r\n\r\n#### Linux\r\n```bash\r\nLC_TIME=\"C.UTF-8\" date -d 2005-01-01T01:00:00 +%x\r\n```\r\n```none                                                       \r\n01/01/05\r\n```\r\n\r\n---\r\n# %X\r\n\r\n- [ ] The preferred date representation for the current locale without the time.\r\n\r\n### en-US\r\n\r\n#### PowerShell\r\n```powershell\r\n[System.Threading.Thread]::CurrentThread.CurrentCulture = [System.Globalization.CultureInfo]::GetCultureInfo('en-US') \r\nget-date -Year 2005 -Month 1 -Day 1 -Hour 1 -Minute 0 -Second 0  -UFormat %X                                                 \r\n```\r\n\r\n```none                                                       \r\n01:00:00\r\n```\r\n\r\n#### Linux\r\n```bash\r\nLC_TIME=\"en_US.UTF-8\" date -d 2005-01-01T01:00:00 +%X\r\n```\r\n```none                                                       \r\n01:00:00 AM\r\n```\r\n\r\n### C\r\n\r\n#### PowerShell\r\n```powershell\r\n[System.Threading.Thread]::CurrentThread.CurrentCulture = [System.Globalization.CultureInfo]::GetCultureInfo('en-US') \r\nget-date -Year 2005 -Month 1 -Day 1 -Hour 1 -Minute 0 -Second 0  -UFormat %X                                                 \r\n```\r\n\r\n```none                                                       \r\n01:00:00\r\n```\r\n\r\n#### Linux\r\n```bash\r\nLC_TIME=\"C.UTF-8\" date -d 2005-01-01T01:00:00 +%X\r\n```\r\n```none                                                       \r\n01:00:00\r\n```\r\n\r\n---\r\n# %Z\r\n\r\n- [ ] The timezone name or abbreviation.\r\n\r\n### en-US\r\n\r\n#### PowerShell\r\n```powershell\r\n[System.Threading.Thread]::CurrentThread.CurrentCulture = [System.Globalization.CultureInfo]::GetCultureInfo('en-US') \r\nget-date -Year 2005 -Month 1 -Day 1 -Hour 1 -Minute 0 -Second 0  -UFormat %Z                                                \r\n```\r\n\r\n```none                                                       \r\n+00\r\n```\r\n\r\n#### Linux\r\n```bash\r\nLC_TIME=\"en_US.UTF-8\" date -d 2005-01-01T01:00:00 +%Z\r\n```\r\n```none                                                       \r\nGMT\r\n```\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value                                           \r\n----                           -----                                           \r\nPSVersion                      6.0.0-beta                                      \r\nPSEdition                      Core                                            \r\nGitCommitId                    v6.0.0-beta.5                                   \r\nOS                             Linux 4.10.0-32-generic #36~16.04.1-Ubuntu SM...\r\nPlatform                       Unix                                            \r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}                         \r\nPSRemotingProtocolVersion      2.3                                             \r\nSerializationVersion           1.1.0.1                                         \r\nWSManStackVersion              3.0  \r\n```\r\n\r\nI initially, naively, made PR #4508 for #4264 which simply used the **GetWeekOfYear** method from the Gregorian Calendar. Unfortunately that is too simplistic, and the [formula](https://en.wikipedia.org/wiki/ISO_week_date) needs to be followed to determine the correct week number. I suggest that PR be closed and new PRs to be created against this tracking issue. My suggestion is that the Pester tests be broken out into a test per UFormat to make this easier (with the failing tests commented until they can be addressed).",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "It seems the formatting can differ between different Linux distributions (I tested on WSL) so I would exclude such points from the Issue.\r\n\r\nPlease reformat the Issue.",
      "created_at": "2017-09-04T12:11:54Z",
      "updated_at": "2017-09-04T12:12:16Z"
    },
    {
      "author": "timparkinson",
      "author_association": "NONE",
      "body": "I've checked on Ubuntu 14.04, Ubuntu 16.04 and CentOS 7 machines and the formatting is consistent between them. I don't have a machine with WSL on it handy at the moment to test. Furthermore, the descriptions of the format codes in the strftime man pages do specify format. For instance %k - Get-Date current behaviour is to output with a leading zero, whereas per stfrtime man page:\r\n\r\n> The hour (24-hour clock) as a decimal number (range 0 to 23); single digits are preceded by a blank.\r\n\r\nWhat formatting changes do you want me to make to the issue?",
      "created_at": "2017-09-04T15:20:48Z",
      "updated_at": "2017-09-04T15:20:48Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": ">What formatting changes do you want me to make to the issue?\r\n\r\nIt is difficult to read the Issue description \ud83d\ude15 \r\n\r\n@SteveL-MSFT Should we fix the formattings? Do PowerShell-Committee conclusion in #4508 cover this?",
      "created_at": "2017-09-04T17:40:27Z",
      "updated_at": "2017-09-04T17:40:27Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Is there a RFC or something more canonical than specific distro implementations we can refer to?",
      "created_at": "2017-09-04T20:59:58Z",
      "updated_at": "2017-09-04T20:59:58Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I found https://tools.ietf.org/html/rfc3339#page-12",
      "created_at": "2017-09-05T04:41:42Z",
      "updated_at": "2017-09-05T04:41:42Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Regarding formatting of the issue, I can read each format and the comparison between PowerShell and Linux, so it seems readable enough to me.  @iSazonov if you have a suggestion on how to make this more readable, feel free to offer it.  It's just long which makes it difficult, but probably better than having multiple separate issues.  Per the ietf link, I believe we should be prefixing with zeros so that there's always two digits, but I'm no expert on this topic.",
      "created_at": "2017-09-05T05:06:08Z",
      "updated_at": "2017-09-05T05:06:08Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I slightly reformatted.\r\nI agree that we only need the one Issue. Based on #4508 long discussion it seems better to fix each position in a separate PR where discuss, fix and add tests.\r\n\r\n",
      "created_at": "2017-09-05T07:47:54Z",
      "updated_at": "2017-09-05T07:47:54Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov agree that it would be better to have separate PRs making it easier to review.  Also, are these all things we should change in PowerShell or should they be changes in corefx?  Some formats I believe the cmdlet implements, but some come from corefx.",
      "created_at": "2017-09-05T15:46:59Z",
      "updated_at": "2017-09-05T15:48:00Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I don't analyze all but it seems most should be fixed in PowerShell repo.",
      "created_at": "2017-09-05T18:28:59Z",
      "updated_at": "2017-09-05T18:28:59Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Open #4796 to fix %c.",
      "created_at": "2017-09-07T15:06:48Z",
      "updated_at": "2017-09-07T15:06:48Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Open #4805  to fix %j.",
      "created_at": "2017-09-11T14:25:09Z",
      "updated_at": "2017-09-11T14:25:09Z"
    },
    {
      "author": "brianary",
      "author_association": "CONTRIBUTOR",
      "body": "The `%u` format specifier should also be included. ISO says Sunday is 7, not 0.\r\n\r\n# %u\r\n\r\nThe ISO 8601 day of the week 1-7 (M-Su).\r\n\r\n### en-US\r\n\r\n#### PowerShell\r\n\r\n```powershell\r\n[System.Threading.Thread]::CurrentThread.CurrentCulture = [System.Globalization.CultureInfo]::GetCultureInfo('en-US') \r\nget-date -Year 2005 -Month 1 -Day 2 -Hour 1 -Minute 0 -Second 0  -UFormat %u\r\n```\r\n\r\n```\r\n0\r\n```\r\n\r\n#### Linux\r\n\r\n```bash\r\nLC_TIME=\"en_US.UTF-8\" date -d 2005-01-02T01:00:00 +%u\r\n```\r\n\r\n```\r\n7\r\n```\r\n\r\n- - -\r\n\r\nThis is important in order to format an accurate [ISO8601 week date](https://en.wikipedia.org/wiki/ISO_week_date) [\ud83d\udcfa](https://youtu.be/D3jxx8Yyw1c \"Tom Scott: Why 2020 Started On December 30th\"), using `%G-W%V-%u`, which all have to work consistently with each other.\r\n\r\n# %G-W%V-%u\r\n\r\nThe ISO 8601 week-based date.\r\n\r\n### en-US\r\n\r\n#### PowerShell\r\n\r\n```powershell\r\n[System.Threading.Thread]::CurrentThread.CurrentCulture = [System.Globalization.CultureInfo]::GetCultureInfo('en-US') \r\nget-date -Year 2021 -Month 1 -Day 3 -Hour 1 -Minute 0 -Second 0  -UFormat %G-W%V-%u\r\n```\r\n\r\n```\r\n2021-W53-0\r\n```\r\n\r\n#### Linux\r\n\r\n```bash\r\nLC_TIME=\"en_US.UTF-8\" date -d 2021-01-03T01:00:00 +%G-W%V-%u\r\n```\r\n\r\n```\r\n2020-W53-7\r\n```",
      "created_at": "2021-01-05T03:24:13Z",
      "updated_at": "2021-01-05T03:24:13Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@brianary (anybody else?) Do you want to pull PR(s)? We started new milestone and it is good time for fixing minor inconsistencies. I am ready to help.",
      "created_at": "2021-01-05T05:14:02Z",
      "updated_at": "2021-01-05T05:14:02Z"
    },
    {
      "author": "brianary",
      "author_association": "CONTRIBUTOR",
      "body": "Sure, I'll put a PR together\n",
      "created_at": "2021-01-05T07:08:22Z",
      "updated_at": "2021-01-05T07:08:26Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> Sure, I'll put a PR together\r\n\r\nThanks! Please keep the PR as small as possible (one change per PR).",
      "created_at": "2021-01-05T14:36:24Z",
      "updated_at": "2021-01-05T14:36:24Z"
    },
    {
      "author": "brianary",
      "author_association": "CONTRIBUTOR",
      "body": "Which branch would you prefer the PR to use?",
      "created_at": "2021-01-05T22:48:18Z",
      "updated_at": "2021-01-05T22:48:18Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> Which branch would you prefer the PR to use?\r\n\r\nYou should fork the repo and create PR branch based on master.",
      "created_at": "2021-01-06T06:48:00Z",
      "updated_at": "2021-01-06T06:48:00Z"
    },
    {
      "author": "brianary",
      "author_association": "CONTRIBUTOR",
      "body": "That's what I ended up doing\n",
      "created_at": "2021-01-06T06:50:49Z",
      "updated_at": "2021-01-06T06:50:52Z"
    }
  ],
  "created_at": "2017-09-04T10:56:38Z",
  "number": 4750,
  "state": "open",
  "title": "Get-Date -UFormat inconsistencies compared to Linux strftime",
  "updated_at": "2021-03-03T05:04:26Z"
}