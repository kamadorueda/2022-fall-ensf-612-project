{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13924",
  "author": "xtqqczze",
  "body": "Promote CA18XX rules with suggestion severity to warning:\r\n\r\n* [CA1821](https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1821): Remove empty Finalizers\r\n* [CA1824](https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1824): Mark assemblies with NeutralResourcesLanguageAttribute\r\n* [CA1826](https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1826): Do not use Enumerable methods on indexable collections\r\n* [CA1828](https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1828): Do not use CountAsync() or LongCountAsync() when AnyAsync() can be used\r\n* [CA1832](https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1832): Use AsSpan or AsMemory instead of Range-based indexers when appropriate\r\n* [CA1833](https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1833): Use AsSpan or AsMemory instead of Range-based indexers when appropriate\r\n\r\nCriteria used to select rules for this PR:\r\n* currently at suggestion severity\r\n* within the CA18XX range\r\n* no existing violations.\r\n",
  "closed_at": "2020-11-05T02:59:14Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I suppose our goal is to make the **existing** codebase modern. If there is no code that falls under these rules, we can save time and leave the default values \u200b\u200bfor such rules. Moreover, the default value is \"suggestion\" so we will see these recommendations anyway.\r\n\r\n",
      "created_at": "2020-10-30T05:54:25Z",
      "updated_at": "2020-10-30T05:54:25Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "> I suppose our goal is to make the **existing** codebase modern. If there is no code that falls under these rules, we can save time and leave the default values \u200b\u200bfor such rules. Moreover, the default value is \"suggestion\" so we will see these recommendations anyway.\r\n\r\nBy setting these rules to `warning` we can ensure regressions do not pass CI.\r\n\r\nWe cannot rely on `suggestion` severity because contributors may not be using an IDE with live analysis available. For example, the default in VS Code is for live analysis not to be enabled.",
      "created_at": "2020-10-30T14:27:40Z",
      "updated_at": "2020-10-30T14:27:40Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I mean today (before next milestone start) we can fix many style and formatting issues with small commits and postpone a rest of the work.",
      "created_at": "2020-10-30T16:23:45Z",
      "updated_at": "2020-10-30T16:23:45Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "> I mean today (before next milestone start) we can fix many style and formatting issues with small commits and postpone a rest of the work.\r\n\r\n@iSazonov OK, I see your point. For future PRs I can focus on style and formatting issues. We may as well merge this PR though.",
      "created_at": "2020-10-30T16:47:31Z",
      "updated_at": "2020-10-30T16:47:31Z"
    },
    {
      "author": "anmenaga",
      "author_association": "CONTRIBUTOR",
      "body": "@xtqqczze can you please tell if my understanding is correct:\r\n1) With `severity = warning` (unlike `severity = suggestion`) a rule will generate a build failure?\r\n2) The fact that CIs for this PR passed means that we currently do Not have violations of rules that are changed by this PR?\r\n3) Why these specific CA18XX rules were changed in this PR (and not other rules)? What is special about these CA18XX rules so that they were chosen to be updated?\r\n\r\nThank you.",
      "created_at": "2020-11-04T00:33:26Z",
      "updated_at": "2020-11-04T00:33:26Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "@anmenaga\r\n> 1. With `severity = warning` (unlike `severity = suggestion`) a rule will generate a build failure?\r\n\r\nCorrect, with `TreatErrorsAsWarnings` enabled (which it is), a rule with warning severity will generate a build failure.\r\n\r\n> 2. The fact that CIs for this PR passed means that we currently do Not have violations of rules that are changed by this PR?\r\n\r\nCorrect, there no existing violations of these rules.\r\n\r\n> 3. Why these specific CA18XX rules were changed in this PR (and not other rules)? What is special about these CA18XX rules so that they were chosen to be updated?\r\n\r\nThe rules were chosen from the CA18XX range that were already at `suggestion` severity, and did not generate any build failures. There is nothing special about the CA18XX range other than it is easier to test and submit a PR for a smaller number of rules at a time.\r\n",
      "created_at": "2020-11-04T00:43:25Z",
      "updated_at": "2020-11-04T00:43:25Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> What is special about these CA18XX rules so that they were chosen to be updated?\r\n\r\nIt is a best practice from .Net team and forcing these rules helps us to avoid bad patterns. If there is any edge cases, we can always suppress these rules locally with the directive.\r\n",
      "created_at": "2020-11-04T03:53:47Z",
      "updated_at": "2020-11-04T03:53:47Z"
    }
  ],
  "created_at": "2020-10-29T16:13:41Z",
  "number": 13924,
  "state": "closed",
  "title": "Enable CA18XX rules with suggestion severity",
  "updated_at": "2020-11-05T16:34:44Z"
}