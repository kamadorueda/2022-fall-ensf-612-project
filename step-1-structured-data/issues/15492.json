{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15492",
  "author": "rkeithhill",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 and PowerShell 7+ issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6).\r\n\r\n-->\r\n\r\n## Steps to reproduce\r\n\r\n```powershell\r\n(mkdir foo && new-item foo\\bar.txt) > $null\r\nRemove-Item -Recurse .\\foo\\\r\n```\r\n\r\n## Expected behavior\r\n\r\nI expect this to work as it does wok in v7.1.3\r\n\r\n```none\r\nC:\\Users\\Keith\\Code\\dotnet\r\n05-29 14:48:34 7> Remove-Item -Recurse .\\foo\\\r\nC:\\Users\\Keith\\Code\\dotnet\r\n```\r\n\r\n## Actual behavior\r\n\r\nIt fails on v7.2.0-preview.5 but only if the path ends with a slash.  The bummer is that PowerShell's tab-completion on the path is what adds the trailing slash.\r\n\r\n```none\r\nC:\\Users\\Keith\\Code\\dotnet\r\n05-29 14:50:45 94> Remove-Item -Recurse .\\foo\\\r\nRemove-Item: Cannot remove item C:\\Users\\Keith\\Code\\dotnet\\foo\\: The directory is not empty. : 'C:\\Users\\Keith\\Code\\dotnet\\foo\\'\r\nC:\\Users\\Keith\\Code\\dotnet\r\n```\r\n\r\nIf you remove the trailing slash, v7.2.0-preview.5 works:\r\n\r\n```none\r\nC:\\Users\\Keith\\Code\\dotnet\r\n05-29 14:53:25 97> Remove-Item -Recurse .\\foo\r\nC:\\Users\\Keith\\Code\\dotnet\r\n```\r\n\r\n## Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.0-preview.5\r\nPSEdition                      Core\r\nGitCommitId                    7.2.0-preview.5\r\nOS                             Microsoft Windows 10.0.19043\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2021-06-01T20:00:08Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I can not reproduce with build from master branch.",
      "created_at": "2021-05-30T16:27:19Z",
      "updated_at": "2021-05-30T16:27:19Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "That's good news.  Does it repro for you in preview.6?  I'm waiting for the PSRL update before I upgrade to preview.6.",
      "created_at": "2021-05-30T18:51:33Z",
      "updated_at": "2021-05-30T18:51:33Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "preview.5 and preview.6 from my local builds work well.",
      "created_at": "2021-05-31T06:51:00Z",
      "updated_at": "2021-05-31T06:51:00Z"
    },
    {
      "author": "jborean93",
      "author_association": "COLLABORATOR",
      "body": "Anything special about the files or directories in that path? Could you have a special reparse point that needs special handling?",
      "created_at": "2021-05-31T08:50:25Z",
      "updated_at": "2021-05-31T08:50:25Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "Other than the path is under my home dir, no.  I just tried doing this in my `C:\\Temp` dir (no reparse points) and get the same results.\r\n\r\n![image](https://user-images.githubusercontent.com/5177512/120225140-ece33080-c201-11eb-8c50-f3e2b88d368f.png)\r\n\r\n\r\n",
      "created_at": "2021-05-31T17:22:10Z",
      "updated_at": "2021-05-31T17:22:10Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Could you please try Preview.6 from zip distributive?",
      "created_at": "2021-05-31T17:30:31Z",
      "updated_at": "2021-05-31T17:30:31Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "OK, tried on another laptop.  preview.5 exhibits the problem but preview.6 does not.  I think we can close this as fixed.  I wonder if a regression test should be added for this scenario?",
      "created_at": "2021-05-31T18:20:00Z",
      "updated_at": "2021-05-31T18:20:38Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Fixed in #15260 (`string fullPath = Path.TrimEndingDirectorySeparator(fileInfo.FullName);` was added). Dup #15248.",
      "created_at": "2021-05-31T19:07:43Z",
      "updated_at": "2021-05-31T19:07:43Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as duplicate and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2021-06-01T20:00:07Z",
      "updated_at": "2021-06-01T20:00:07Z"
    }
  ],
  "created_at": "2021-05-29T20:55:55Z",
  "number": 15492,
  "state": "closed",
  "title": "Remove-Item regression from 7.1.3 - fails to recursively delete dir when path ends with a slash",
  "updated_at": "2021-06-01T20:00:08Z"
}