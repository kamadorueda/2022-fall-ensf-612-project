{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4599",
  "author": "DarwinJS",
  "body": "I have been running PowerShell Core under Jenkins on Linux.\r\n\r\nWhile troubleshooting another problem I did a yum update and the system was pleasantly updated to beta **5** installed side-by-side to /opt/microsoft/powershell/6.0.0-beta.**5**/ . \r\n\r\nHowever, when I went to use an optional module I had installed before the update it was not found because the previous version was under /opt/microsoft/powershell/6.0.0-beta.**4**/Modules.\r\n\r\nInstall-Module appears to default to this location - but this causes automatic loss of access to installed modules when doing a simple 'yum update -y'\r\n\r\nSpecifying \"-Scope AllUsers\" causes an install to the same folder - so it seems PowerShell Core considers this the \"allusers\" location.\r\n\r\nI think the default \"install-module\" behavior should be to install to /usr/local/share/powershell/Modules or a new location like /opt/microsoft/powershell/Modules.\r\nEspecially since:\r\n* modules shouldn't go missing because PowerShell was updated.\r\n* This seems to be an artifact of support for multiple concurrent PowerShell versions and should not interfere with defacto expected behavior for machine level installed extensions.\r\n* The experience is unnecessarily different from the defacto expectations created by Windows PowerShell (it has no equivalent to a version specific modules folder).\r\n\r\nIf this is not an artifact, but purposely designed for version specific modules, then I would propose adding a new configuration value for -scope.\r\n\r\nIn addition, it would be helpful if \"Install-Module\" could take something like -InstallationFolder so that when necessary, I can have complete control and use custom locations when desired.",
  "closed_at": "2022-01-08T04:01:19Z",
  "comments": [
    {
      "author": "michaeltlombardi",
      "author_association": "CONTRIBUTOR",
      "body": "Would it make sense for this to be handled as a scope for `Install-Module` - ie, what we're seeing now is `Install-Module -Scope Version` and what we _want_ as the default is `Install-Module -Scope Global` or `Install-Module -Scope CurrentUser`",
      "created_at": "2018-02-22T17:19:11Z",
      "updated_at": "2018-02-22T17:19:11Z"
    },
    {
      "author": "RandomNoun7",
      "author_association": "CONTRIBUTOR",
      "body": "+1, the default should be an all users, all version scope. If a module turns out to be an issue for other versions then perhaps use the ```-Scope Version``` parameter.",
      "created_at": "2018-02-22T17:21:34Z",
      "updated_at": "2018-02-22T17:21:34Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@DarwinJS Is the issue still actual?",
      "created_at": "2020-02-01T19:51:46Z",
      "updated_at": "2020-02-01T19:51:46Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Close as stale issue. Feel free to continue discussion.",
      "created_at": "2021-01-15T05:01:51Z",
      "updated_at": "2021-01-15T05:01:51Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as \"Waiting on Author\" and has not had any activity for **7 day**. It has been closed for housekeeping purposes.",
      "created_at": "2022-01-08T04:01:18Z",
      "updated_at": "2022-01-08T04:01:18Z"
    }
  ],
  "created_at": "2017-08-16T19:52:04Z",
  "labels": [
    "Issue-Question",
    "Area-Maintainers-Build",
    "Area-SideBySide",
    "Waiting on Author"
  ],
  "number": 4599,
  "state": "closed",
  "title": "Install-Module Default Modules Path is Under Versioned PowerShell Folder",
  "updated_at": "2022-01-08T04:01:19Z"
}