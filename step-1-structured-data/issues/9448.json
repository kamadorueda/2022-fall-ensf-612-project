{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9448",
  "author": "dmitriyse",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n\r\n-->\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\nfunction PipelineArgWorks{\r\n    param($Option)\r\n    process{\r\n        Write-Host \"$Option $_\"\r\n    }\r\n}\r\n\r\nfunction PipelineArgError{\r\n    param([Parameter()]$Option)\r\n    process{\r\n        Write-Host \"$Option $_\"\r\n    }\r\n}\r\n\r\n\"World!\" | PipelineArgWorks -Option \"Hello\" # <- prints \"Hello world!\"\r\n\r\n# raises \"The input object cannot be bound to any parameters for the command\r\n# either because the command does not take pipeline input or the input and its\r\n# properties do not match any of the parameters that take pipeline input.\"\r\n\"World!\" | PipelineArgError\r\n```\r\n\r\n# Expected behavior\r\n\r\n```none\r\nHello World!\r\nHello World!\r\n```\r\n\r\n# Actual behavior\r\n\r\n```none\r\nHello World!\r\nPipelineArgError : The input object cannot be bound to any parameters for the command either because the command does no\r\nt take pipeline input or the input and its properties do not match any of the parameters that take pipeline input.\r\nAt /mnt/c/Projects/Test.ps1:20 char:12\r\n+ \"World!\" | PipelineArgError\r\n+            ~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : InvalidArgument: (World!:String) [PipelineArgError], ParameterBindingException\r\n+ FullyQualifiedErrorId : InputObjectNotBound,PipelineArgError\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.2.0\r\nPSEdition                      Core\r\nGitCommitId                    6.2.0\r\nOS                             Linux 4.4.0-17763-Microsoft #379-Microsoft Wed Mar 06 19:16:00 PST 2019\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2019-05-01T06:04:04Z",
  "comments": [
    {
      "author": "kvprasoon",
      "author_association": "CONTRIBUTOR",
      "body": "IMO, Error is expected, but I never expect first expression to execute.",
      "created_at": "2019-04-23T03:29:47Z",
      "updated_at": "2019-04-23T03:29:47Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "the first expression behaves somewhat like an unnamed scriptblock. Pipeline input is bound to `$_` during the `process` block and to none of the parameters.\r\n\r\nWhen you apply either `[CmdletBinding()]` or a `[Parameter()]` attribute, PS switches from the loose function execution to the stricter PSScriptCmdlet mode.\r\n\r\nThis means you don't get parameters for free, you _must_ define pipeline input parameters if the function is going to use pipeline input. This is done by providing the `ValueFromPipeline` property value to a `[Parameter()]` attribute.",
      "created_at": "2019-04-23T04:30:34Z",
      "updated_at": "2019-04-23T04:31:30Z"
    }
  ],
  "created_at": "2019-04-23T03:05:37Z",
  "labels": [
    "Issue-Question",
    "Resolution-Answered"
  ],
  "number": 9448,
  "state": "closed",
  "title": "Strange behavior of parameters with the pipeline input",
  "updated_at": "2019-05-01T06:04:04Z"
}