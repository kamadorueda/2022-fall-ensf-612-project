{
  "_url": "https://github.com/PowerShell/PowerShell/issues/560",
  "author": "vors",
  "body": "## Motivation\n\nI'm trying to do an equivalent of bash `alias grep='grep --color=auto'`\nSince, Set-Alias [doesn't support parameters](https://github.com/vors/ParamAlias), I'm doing it with a function\n## Repro\n\n``` powershell\nfunction grep\n{\n    grep --color=auto $args\n}\n'123' | grep 1\n```\n### Expected\n\n123 with red 1\n### Actual\n\n```\nUnhandled Exception: System.Management.Automation.ScriptCallDepthException: The script failed due to call depth overflow.\n   at System.Management.Automation.Runspaces.PipelineBase.Invoke(IEnumerable input)\n   at System.Management.Automation.Runspaces.Pipeline.Invoke()\n   at System.Management.Automation.PowerShell.Worker.ConstructPipelineAndDoWork(Runspace rs, Boolean performSyncInvoke)\n   at System.Management.Automation.PowerShell.Worker.CreateRunspaceIfNeededAndDoWork(Runspace rsToUse, Boolean isSync)\n   at System.Management.Automation.PowerShell.CoreInvokeHelper[TInput,TOutput](PSDataCollection`1 input, PSDataCollection`1 output, PSInvocationSettings settings)\n   at System.Management.Automation.PowerShell.CoreInvoke[TInput,TOutput](PSDataCollection`1 input, PSDataCollection`1 output, PSInvocationSettings settings)\n   at System.Management.Automation.PowerShell.CoreInvoke[TOutput](IEnumerable input, PSDataCollection`1 output, PSInvocationSettings settings)\n   at System.Management.Automation.PowerShell.Invoke(IEnumerable input, PSInvocationSettings settings)\n   at Microsoft.PowerShell.Linux.Host.Listener.ExecuteHelper(String cmd, Object input)\n   at Microsoft.PowerShell.Linux.Host.Listener.Execute(String cmd)\n   at Microsoft.PowerShell.Linux.Host.Listener.Run()\n   at Microsoft.PowerShell.Linux.Host.Program.Main(String[] args)\n```\n",
  "closed_at": "2016-05-19T21:27:58Z",
  "comments": [
    {
      "author": "vors",
      "author_association": "COLLABORATOR",
      "body": "\"Expected\" is probably incorrect: we should get some other error, but not a crash.\n",
      "created_at": "2016-02-19T09:02:29Z",
      "updated_at": "2016-02-19T09:02:29Z"
    },
    {
      "author": "palladia",
      "author_association": "CONTRIBUTOR",
      "body": "Is this a valid test?  Functions have precedence over native commands, so it will recursively call itself until you get the depth overflow error?\n\nEven on Windows (FullCLR), I see this:\n\n$PS > function nslookup\n\n> > {\n> > nslookup $args\n> > }\n> >  PS >> \"localhost\" | nslookup\n> >  The script failed due to call depth overflow.\n> >      + CategoryInfo          : InvalidOperation: (0:Int32) [],  ParentContainsErrorRecordException\n> >      + FullyQualifiedErrorId : CallDepthOverflow\n> >  PS >> gcm nslookup\n\nCommandType     Name                                               Version    Source\n\n---\n\nFunction                   nslookup\n",
      "created_at": "2016-03-04T18:51:05Z",
      "updated_at": "2016-03-04T18:53:02Z"
    },
    {
      "author": "palladia",
      "author_association": "CONTRIBUTOR",
      "body": "Sorry about the formatting.  Waffle seems to interpret >> weirdly.\n",
      "created_at": "2016-03-04T18:53:40Z",
      "updated_at": "2016-03-04T18:53:40Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "This was resolved, I will add a regression test:\n\n``` powershell\n> function grep                                                                          >> {                                                                                         >>     grep --color=auto $args                                                               >> }\n> '123' | grep 1\nThe script failed due to call depth overflow.\n    + CategoryInfo          : InvalidOperation: (0:Int32) [], ParentContainsErrorRecordExce\n   ption\n    + FullyQualifiedErrorId : CallDepthOverflow\n> $PSVersionTable\n\nName                           Value\n----                           -----\nPSVersion                      5.1.10032.0\nPSEdition                      Linux\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\nCLRVersion                     4.0.30319.34011\nBuildVersion                   3.0.0.0\nWSManStackVersion              1.0\nPSRemotingProtocolVersion      2.3\nSerializationVersion           1.1.0.1\n\n\n```\n",
      "created_at": "2016-05-19T17:14:31Z",
      "updated_at": "2016-05-19T17:14:31Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "I should clarify: @palladia is correct; this will never result in the first expected scenario, but the host should fail gracefully.\n",
      "created_at": "2016-05-19T17:37:05Z",
      "updated_at": "2016-05-19T17:37:05Z"
    }
  ],
  "created_at": "2016-02-19T08:59:12Z",
  "number": 560,
  "state": "closed",
  "title": "Unhandled ScriptCallDepthException",
  "updated_at": "2016-05-19T21:28:02Z"
}