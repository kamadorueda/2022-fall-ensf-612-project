{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11994",
  "author": "jzabroski",
  "body": "\r\nWhen a `BinaryCmdlet.psd1` file specifies a `RootModule = 'BinaryCmdlet.dll'`, `Import-Module BinaryCmdlet.psd1` fails because the assemblies for `Microsoft.PowerShell.SDK` nuget package are \"reference assemblies\" and not copied directly to the publish output.  This behavior worked fine for netcoreapp2.1 target framework moniker with Microsoft.PowerShell.SDK 6.2.1.\r\n\r\nNote that in other .NET application entry point contexts, such as ASP.NET Core, the `<PreserveCompilationContext>true</PreserveCompilationContext>` csproj setting can be enabled to copy reference assemblies to `publish/refs` folder, but then there still needs to be a way to load the reference assemblies.  The generated `.deps.json` file does not seem to be able to instruct the PowerShell executable/.NET Core runtime to load these files.  I've searched around for how to resolve this problem, and feel I am very close to finding the solution, but perhaps just missing the \"last detail\" required to solve the problem.\r\n\r\n**This issue includes a full, fairly minimal repro below.**\r\n\r\n# Did you do the following?\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases) \u2714\ufe0f \r\n- Search the existing issues. \u2714\ufe0f \r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md). \u2714\ufe0f \r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6). \u2714\ufe0f \r\n\r\n# Steps to reproduce\r\n\r\n1. Clone https://github.com/jzabroski/Microsoft.PowerShell.SDK.Issue\r\n2. Change Directory (`cd`) to repository root.\r\n3. Run `dotnet publish .\\Microsoft.PowerShell.SDK.Issue\\Microsoft.PowerShell.SDK.Issue.sln`\r\n4. Open PwSh.exe and run: \r\n    ```powershell\r\n    Import-Module .\\Microsoft.PowerShell.SDK.Issue\\bin\\Debug\\netcoreapp3.1\\Microsoft.PowerShell.SDK.Issue.psd1\r\n    ```\r\n    Note that directly importing the dll-as-a-module also fails:\r\n    ```powershell\r\n    Import-Module .\\Microsoft.PowerShell.SDK.Issue\\bin\\Debug\\netcoreapp3.1\\Microsoft.PowerShell.SDK.Issue.dll\r\n    ```\r\n# Expected behavior\r\n\r\nI expect the command to succeed and load the module without error.\r\n\r\n# Actual behavior\r\n\r\n```none\r\nImport-Module : Could not load file or assembly 'System.Runtime, Version=4.2.2.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'. The system cannot find the file specified.\r\nAt line:1 char:1\r\n+ Import-Module D:\\source\\GitHub\\Microsoft.PowerShell.SDK.Issue\\Microso ...\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : NotSpecified: (:) [Import-Module], FileNotFoundException\r\n+ FullyQualifiedErrorId : System.IO.FileNotFoundException,Microsoft.PowerShell.Commands.ImportModuleCommand\r\n```\r\n\r\n# Environment data\r\n\r\n$PSVersionTable\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.2.1\r\nPSEdition                      Core\r\nGitCommitId                    6.2.1\r\nOS                             Microsoft Windows 10.0.17763\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2020-03-03T18:09:55Z",
  "comments": [
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "@jzabroski With this change it works:\r\n\r\n```diff\r\ndiff --git a/Microsoft.PowerShell.SDK.Issue/Microsoft.PowerShell.SDK.Issue.csproj b/Microsoft.PowerShell.SDK.Issue/Microsoft.PowerShell.SDK.Issue.csproj\r\nindex c2217ce..bdb272e 100644\r\n--- a/Microsoft.PowerShell.SDK.Issue/Microsoft.PowerShell.SDK.Issue.csproj\r\n+++ b/Microsoft.PowerShell.SDK.Issue/Microsoft.PowerShell.SDK.Issue.csproj\r\n@@ -3,8 +3,6 @@\r\n   <PropertyGroup>\r\n     <TargetFramework>netcoreapp3.1</TargetFramework>\r\n     <OutputType>library</OutputType>\r\n-    <PreserveCompilationContext>true</PreserveCompilationContext>\r\n-    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>\r\n     <GenerateAssemblyInfo>true</GenerateAssemblyInfo>\r\n   </PropertyGroup>\r\n \r\n@@ -17,8 +15,8 @@\r\n   </ItemGroup>\r\n \r\n   <ItemGroup>\r\n-    <PackageReference Include=\"Microsoft.Management.Infrastructure\" Version=\"2.0.0\" />\r\n-    <PackageReference Include=\"Microsoft.PowerShell.SDK\" Version=\"6.2.1\" />\r\n+    <PackageReference Include=\"Microsoft.Management.Infrastructure\" Version=\"2.0.0\" PrivateAssets=\"all\" />\r\n+    <PackageReference Include=\"Microsoft.PowerShell.SDK\" Version=\"6.2.1\" PrivateAssets=\"all\" />\r\n   </ItemGroup>\r\n \r\n-</Project>\r\n\\ No newline at end of file\r\n+</Project>\r\n```\r\n\r\nYou don't need to actually ship any of that in a PowerShell module because it'll all already be loaded in the AppDomain. If you try to ship your own version then it'll try to load them and fail because a newer version is already present.\r\n\r\n**Edit:** Marking as outdated.  It does work in PS7, but so does the original. See comment below.",
      "created_at": "2020-03-03T17:26:26Z",
      "updated_at": "2020-03-03T17:40:25Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "Are you trying to load a module targeting `netcoreapp3.1` in PowerShell 6.2.1?  If so, because PowerShell ships with it's own version of the framework, you can't load a newer version.  If you want `netcoreapp3.1`, you need to require PowerShell 7.",
      "created_at": "2020-03-03T17:36:04Z",
      "updated_at": "2020-03-03T17:40:41Z"
    },
    {
      "author": "jzabroski",
      "author_association": "NONE",
      "body": "@SeeminglyScience  Thank you for your efforts. It worked! You are on the \"I owe a beer to this person\" list.",
      "created_at": "2020-03-03T18:09:55Z",
      "updated_at": "2020-03-03T18:09:55Z"
    }
  ],
  "created_at": "2020-03-03T16:39:03Z",
  "number": 11994,
  "state": "closed",
  "title": "Import-Module BinaryCmdlet.psd1 doesn't work in .netcoreapp3.1",
  "updated_at": "2020-03-03T18:34:49Z"
}