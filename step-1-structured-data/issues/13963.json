{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13963",
  "author": "xtqqczze",
  "body": "Add Roslyn analyzers `StyleCop.Analyzers` to build and live analysis.\r\n\r\nAll rules have been disabled except for `SA1518`.",
  "closed_at": "2020-11-18T18:13:10Z",
  "comments": [
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "CodeQL failure see #13959",
      "created_at": "2020-11-02T04:05:54Z",
      "updated_at": "2020-11-02T21:36:13Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov What do you think about adding `StyleCop.Analyzers` to build and to live analysis?",
      "created_at": "2020-11-02T21:31:09Z",
      "updated_at": "2020-11-02T21:31:09Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "We could set `SA1518` severity to warning to prevent regressions from #13574.",
      "created_at": "2020-11-11T17:41:37Z",
      "updated_at": "2020-11-11T17:41:37Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I think we could do the same as we do for analyzers. Only my concern is increasing time of the build so we could consider to move this (Roslyn analyzers and StyleCop.Analyzers) to separate GitHub check.",
      "created_at": "2020-11-11T18:15:53Z",
      "updated_at": "2020-11-11T18:15:53Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "> I think we could do the same as we do for analyzers. Only my concern is increasing time of the build so we could consider to move this (Roslyn analyzers and StyleCop.Analyzers) to separate GitHub check.\r\n\r\nWe should monitor build times, but there is value in running analyzers as part of each build rather then a separate check. One reason is conditionals in the pre-processor, we would need to run the analyzers for each combination of symbols, `UNIX`, `CORECLR` etc if we did not run during build.",
      "created_at": "2020-11-12T06:54:32Z",
      "updated_at": "2020-11-12T06:54:32Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "> > I think we could do the same as we do for analyzers. Only my concern is increasing time of the build so we could consider to move this (Roslyn analyzers and StyleCop.Analyzers) to separate GitHub check.\r\n> \r\n> We should monitor build times, but there is value in running analyzers as part of each build rather then a separate check. One reason is conditionals in the pre-processor, we would need to run the analyzers for each combination of symbols, `UNIX`, `CORECLR` etc if we did not run during build.\r\n\r\nRunning analyzers during local build also allows contributors to fix issues before submitting a PR.",
      "created_at": "2020-11-12T09:34:25Z",
      "updated_at": "2020-11-12T09:34:25Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> we would need to run the analyzers for each combination of symbols, `UNIX`, `CORECLR` etc if we did not run during build.\r\n\r\nWe use only UNIX and WINDOWS.",
      "created_at": "2020-11-12T10:34:37Z",
      "updated_at": "2020-11-12T10:34:37Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov Once this PR is merged I can move forward with SAXXXX drafts PRs. If the changes cause issues with build time we can deal with this in the first instance.",
      "created_at": "2020-11-18T08:44:49Z",
      "updated_at": "2020-11-18T08:44:49Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@xtqqczze How much are we slowing down the build?",
      "created_at": "2020-11-18T14:15:03Z",
      "updated_at": "2020-11-18T14:15:03Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov It seems build on `PowerShell-CI-Windows` currently takes around 6 minutes, I've opened test PR #14122 with all analyzers disabled to see whether there is a difference.",
      "created_at": "2020-11-18T14:41:59Z",
      "updated_at": "2020-11-18T14:41:59Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov It appears build time is quite variable, and having analyzers enabled does not measurably slow the build.\r\n\r\nIn this PR (161ccea) build time was 9m 1s\r\nIn #14122 (b0f6e3d) build time was 13m 33s\r\nIn #14122 (ddc3a70) build time was 9m 22s\r\n\r\nThe measurement I have used is the total for `PowerShell-CI-windows (Build for Windows Windows Build)` (so as to include xUnit build too).\r\n\r\n\r\n\r\n",
      "created_at": "2020-11-18T17:58:48Z",
      "updated_at": "2020-11-18T17:58:48Z"
    },
    {
      "author": "xtqqczze",
      "author_association": "CONTRIBUTOR",
      "body": "> Three 3 SA1507 violations were fixed in this PR, but CodeFactor has only reported one issue fixed. If we ignore the fix in tests, it is clear CodeFactor is not checking inside of `if UNIX` directive.\r\n> \r\n> So if we want to enforce style rules through the entire codebase, we need to keep the `StyleCop.Analyzers` package that was added in #13963.\r\n\r\n_Originally posted by @xtqqczze in https://github.com/PowerShell/PowerShell/issues/14136#issuecomment-731139044_",
      "created_at": "2020-11-20T12:23:01Z",
      "updated_at": "2020-11-20T12:23:01Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.2.0-preview.2` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.2.0-preview.2)\n",
      "created_at": "2020-12-15T21:37:23Z",
      "updated_at": "2020-12-15T21:37:23Z"
    }
  ],
  "created_at": "2020-11-02T03:59:43Z",
  "number": 13963,
  "state": "closed",
  "title": "Add StyleCop.Analyzers package",
  "updated_at": "2020-12-15T21:37:23Z"
}