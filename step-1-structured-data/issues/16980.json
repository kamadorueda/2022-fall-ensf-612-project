{
  "_url": "https://github.com/PowerShell/PowerShell/issues/16980",
  "author": "jshin47",
  "body": "### Prerequisites\r\n\r\n- [X] Write a descriptive title.\r\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- [X] Search the existing issues.\r\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\r\n\r\n### Steps to reproduce\r\n\r\nInstall the following in this order:\r\n\r\n* .NET Core 3.1 SDK\r\n* .NET Core 5 SDK\r\n* .NET Core 3.1 Runtime\r\n* PowerShell 7.2.0\r\n\r\nTry running a .NET Core 3.1 test suite or application that has a fairly deep stack. I don't have easy to reproduce code, but I do know that the problem was fixed by removing PowerShell 7.2.0. Basically, the installer includes a DLL called `Microsoft_DiaSymReader_Native_amd64` that is used by the runtime to read PDB files when encountering Exceptions. But this included version of that library either does not work, or more likely, is not compatible with this scenario, and so what happens is that (non deterministically) you get exceptions being thrown from exception handlers leading to an infinite stack of exceptions. Typically seen as either `AccessViolationException` or `StackOverflowException`.\r\n\r\nNote this occurs even when running from Release configuration.\r\n\r\n### Expected behavior\r\n\r\n```console\r\nInstalling PowerShell 7.2.0 does not break my .NET Core 3.1 applications.\r\n```\r\n\r\n\r\n### Actual behavior\r\n\r\nInstalling PowerShell 7.2.0 causes my .NET Core 3.1 applications to nondeterministically crash in deep call stacks at exception handlers.\r\n\r\nHere is one such stack trace\r\n\r\n```console\r\nSystem.AccessViolationException: Attempted to read or write protected memory. This is often an indication that other memory is corrupt.\r\n   at System.Diagnostics.StackTrace.GetStackFramesInternal(System.Diagnostics.StackFrameHelper, Int32, Boolean, System.Exception)\r\n   at System.Diagnostics.StackFrameHelper.InitializeSourceInfo(Int32, Boolean, System.Exception)\r\n   at System.Diagnostics.StackTrace.CaptureStackTrace(Int32, Boolean, System.Exception)\r\n   at System.Diagnostics.StackTrace..ctor(System.Exception, Boolean)\r\n   at System.Exception.get_StackTrace()\r\n   at System.Exception.ToString()\r\n   at System.Exception.ToString()\r\n   at System.AggregateException.ToString()\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw(System.Exception)\r\n   at System.Threading.Tasks.Parallel.ThrowSingleCancellationExceptionOrOtherException(System.Collections.ICollection, System.Threading.CancellationToken, System.Exception)\r\n   at System.Threading.Tasks.Parallel.ForWorker[[System.__Canon, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]](Int32, Int32, System.Threading.Tasks.ParallelOptions,\r\nSystem.Action1<Int32>, System.Action2<Int32,System.Threading.Tasks.ParallelLoopState>, System.Func4<Int32,System.Threading.Tasks.ParallelLoopState,System.__Canon,System.__Canon>, System.Func1<System.__Canon>\r\n, \r\n```\r\n\r\n\r\n### Error details\r\n\r\n```console\r\nRun a .NET Core 3.1 Application from WinDbg and look for\r\n`Microsoft_DiaSymReader_Native_amd64`\r\n```\r\n\r\n\r\n### Environment data\r\n\r\n```powershell\r\nN/A\r\n```\r\n\r\n\r\n### Visuals\r\n\r\n_No response_",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Perhaps https://github.com/dotnet/runtime/issues/59077",
      "created_at": "2022-03-10T05:37:43Z",
      "updated_at": "2022-03-10T05:37:43Z"
    },
    {
      "author": "nickgermyn",
      "author_association": "NONE",
      "body": "I can confirm that I experienced the exact issue described after installing PowerShell 7.2.1. I uninstalled and went back to PowerShell 7.1.6, and the issue no longer occurs.",
      "created_at": "2022-04-11T21:37:37Z",
      "updated_at": "2022-04-11T21:37:37Z"
    }
  ],
  "created_at": "2022-03-09T20:31:19Z",
  "number": 16980,
  "state": "open",
  "title": "PowerShell 7.2.0 Installer (and possibly others) cause .NET Core 3.1 apps (and possibly others) to crash with AccessViolationException / StackOverflowException",
  "updated_at": "2022-04-11T21:37:37Z"
}