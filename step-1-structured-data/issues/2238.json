{
  "_url": "https://github.com/PowerShell/PowerShell/issues/2238",
  "author": "afscrome",
  "body": "## Steps to reproduce\n\n``` Powershell\n#Run with progress reporting disabled\n$ProgressPreference = 'SilentlyContinue'\nMeasure-Command {\n    Invoke-RestMethod https://archive.apache.org/dist/lucene/solr/6.2.0/solr-6.2.0.zip -OutFile 2.zip\n} | select TotalSeconds\n\n#Now run with the default Progress Preference value\n$ProgressPreference = 'Continue'\nMeasure-Command {\n    Invoke-RestMethod https://archive.apache.org/dist/lucene/solr/6.2.0/solr-6.2.0.zip -OutFile 1.zip\n} | select TotalSeconds\n```\n## Expected behavior\n\nI'd expect progress reporting to have a small overhead, but not a significant one\n## Actual behavior\n\n$ProgressPreference = 'Continue' is about 70 times slower than 'SilentlyContinue'.  (On PS 5.1 in the latest Win 10 preview it is about 120x slower)\n\n```\nTotalSeconds\n------------\n    8.471039\n  589.319871\n```\n## Environment data\n\n``` powershell\n> $PSVersionTable\nName                           Value\n----                           -----\nSerializationVersion           1.1.0.1\nPSEdition                      Core\nPSVersion                      6.0.0-alpha\nWSManStackVersion              3.0\nBuildVersion                   3.0.0.0\nGitCommitId                    v6.0.0-alpha.9\nPSRemotingProtocolVersion      2.3\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\nCLRVersion\n```\n",
  "closed_at": "2016-10-16T20:41:46Z",
  "comments": [
    {
      "author": "nightroman",
      "author_association": "NONE",
      "body": "It is a proper issue. But the real culprit here is probably the implementation of console host `WriteProgress()`. It can be improved for all cmdlets, including `Invoke-RestMethod`.\n\nhttps://connect.microsoft.com/PowerShell/feedback/details/337323\n",
      "created_at": "2016-09-12T14:16:58Z",
      "updated_at": "2016-09-12T14:16:58Z"
    },
    {
      "author": "oising",
      "author_association": "CONTRIBUTOR",
      "body": "@nightroman I get the point of that connect item, but it seems to be putting the onus on powershell to ignore too many calls to `WriteProgress` instead of - imo rightfully - blaming the caller for making too many calls :)  That said, the base performance could likely be improved, absolutely.\n",
      "created_at": "2016-09-12T20:35:04Z",
      "updated_at": "2016-09-12T20:35:04Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "I'm surprised that it is _faster_ in PS 6 than in PS 5.1. Wow.\n",
      "created_at": "2016-09-19T20:02:00Z",
      "updated_at": "2016-09-19T20:02:00Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "This is dupe of https://github.com/PowerShell/PowerShell/issues/2138\n",
      "created_at": "2016-10-16T16:48:09Z",
      "updated_at": "2016-10-16T16:48:09Z"
    }
  ],
  "created_at": "2016-09-12T13:45:18Z",
  "number": 2238,
  "state": "closed",
  "title": "Progress Reporting makes Invoke-RestMethod 70x slower",
  "updated_at": "2016-10-16T20:41:46Z"
}