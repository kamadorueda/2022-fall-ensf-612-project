{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4885",
  "author": "OpsTalkJordan",
  "body": "PSEdit is currently the best way to edit files on Nano Server but it requires opening ISE and creating a PSSession there. ISE has it's own drawbacks which makes switching between sessions inconvenient when moving between working directories and trying to edit files. I would like to see PSEdit compatibility added to the standard PowerShell host. The ideal scenario would be to edit the file directly in the console similar to many Linux terminal based text editors. A less ideal but potentially more approachable solution would allowing PSEdit to be used in a non-ISE session that then opens an ISE process on the local machine similar to how PSEdit currently behaves in ISE. ",
  "closed_at": null,
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "You can use any console based editor, but if you want a remote GUI editing experience, perhaps @daviwil can help",
      "created_at": "2017-09-21T00:54:33Z",
      "updated_at": "2017-09-21T00:54:33Z"
    },
    {
      "author": "OpsTalkJordan",
      "author_association": "NONE",
      "body": "My concern would be needing to install the console based editor on every remote host. I guess I'm not sure if I installed something like VIM on my admin machine if I would be able to access the binary from a remote host as it is installed locally.  ",
      "created_at": "2017-09-21T01:09:01Z",
      "updated_at": "2017-09-21T01:09:01Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@Nezbourn I see, that's a valid scenario that you may not be able to install anything on the target.  I would think this can be solved with VSCode, PowerShell remoting, and PowerShell Editor Services",
      "created_at": "2017-09-21T01:25:28Z",
      "updated_at": "2017-09-21T01:25:28Z"
    },
    {
      "author": "thecliguy",
      "author_association": "NONE",
      "body": "@SteveL-MSFT Would an editor agnostic solution be possible? EG:\r\n- On the source computer, run `pwsh`.\r\n- `Enter-PSSession` to the target computer.\r\n- Run `psEdit`:\r\n  - Behind the scenes, create a temporary file on the source computer.\r\n  - Open the temporary file in a local editor _(the editor of choice could perhaps be defined in an Automatic Variable or Environment Variable)_.\r\n  - Upon closing the editor, return control to PowerShell and _behind the scenes_ upload the temporary file to the target computer.",
      "created_at": "2017-11-18T19:46:29Z",
      "updated_at": "2017-11-18T19:48:36Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@thecliguy it's possible, but we should think through a proper design.  I think a common convention is to use an environmental variable called `Editor` that we could invoke on the client side when `psedit` is invoked on the target side.  The difficulty will be handling cases where you've lost connection.",
      "created_at": "2017-11-19T01:07:45Z",
      "updated_at": "2017-11-19T01:07:45Z"
    },
    {
      "author": "thecliguy",
      "author_association": "NONE",
      "body": "@SteveL-MSFT Thanks for the swift response, appreciate it. \r\n\r\nAgreed, it needs a proper design. My thoughts were merely an extension to how I believe `PSedit` in ISE currently works _(Read the content of the remote file, write it to a local file, edit the local file and then replace the content of the remote file)_.\r\n\r\nSimple but effective, I've found `PSedit` to be a most useful tool since it was introduced in PowerShell 5.0.\r\n\r\nI do hope this feature request gets some attention.",
      "created_at": "2017-11-19T01:50:43Z",
      "updated_at": "2017-11-19T01:50:43Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "PSEdit works from VSCode so deferring this",
      "created_at": "2018-01-31T05:36:52Z",
      "updated_at": "2018-01-31T05:36:52Z"
    }
  ],
  "created_at": "2017-09-21T00:35:01Z",
  "labels": [
    "Issue-Enhancement"
  ],
  "number": 4885,
  "state": "open",
  "title": "PSEdit support from non-ISE PowerShell sessions",
  "updated_at": "2018-06-21T21:04:21Z"
}