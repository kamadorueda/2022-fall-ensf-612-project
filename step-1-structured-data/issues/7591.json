{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7591",
  "author": "dantraMSFT",
  "body": "The current implementation is processing parameters in BeginProcessing. While this works for parameters that are explicitly passed to the cmdlet, it fails for parameters that are populated form properties of the pipeline object because parameters are not set until the pipeline object is sent to ProcessRecord.\r\n\r\nThe logic for parameters bound from the pipleline needs to be moved to ProcessRecord.\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\n$object = [PSCustomObject]@{To = $address; From = $address;  Subject = $subject;  Body = $body; SmtpServer = '127.0.0.1'}\r\n$object | Send-MailMessage\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\nThe mail is sent.\r\n\r\nActual behavior\r\n---------------\r\nSystem.ArgumentNullException: Value cannot be null\r\nParameter name: address\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "ThreeFive-O",
      "author_association": "CONTRIBUTOR",
      "body": "`Send-MailMessage` in its current implemented code logic only supports piping attachment file paths into the cmdlet:\r\n```powershell\r\nfile1.txt, file2.txt | Send-MailMessage -To $address -From $address -SmtpServer 127.0.0.1 -Subject \"Mail with attachments\"\r\n```\r\n\r\nIn this case, the file paths `file1.txt` and `file2.txt` are added to the mail message in the `ProcessRecord` block of the cmdlet and the mail is sent in the `EndProcessing` block.\r\n\r\nUsing named parameter pipeline binding, the mail has to be sent within the `ProcessRecord` block, because the pipeline may contain several input objects with named parameters:\r\n```powershell\r\n$objects  = [PSCustomObject]@{Subject = \"First mail\"; To = $address; From = $address; SmtpServer = '127.0.0.1'}, [PSCustomObject]@{Subject = \"Second mail\"; To = $address; From = $address; SmtpServer = '127.0.0.1'}\r\n$objects | Send-MailMessage\r\n```\r\n**Small problem:**\r\nSince `Attachments` is the default pipeline input and it's type is `string[]` the named parameter objects would be bound as well to Attachments.\r\nFor the case above, the Attachments property would still be set like this:\r\n```csharp\r\nAttachments[0] = \"@{Subject = \"First mail\"; To = $address; From = $address; SmtpServer = '127.0.0.1'}\"\r\nAttachments[1] = \"@{Subject = \"Second mail\"; To = $address; From = $address; SmtpServer = '127.0.0.1'}\"\r\n```\r\nSince those are not valid file paths, the mail message would throw. \r\n\r\nTherefore the two cases have to be differentiated:\r\n\r\n1. Attachment file paths as pipeline input: Send a single mail message in the `EndProcessing` block (current behavior)\r\n2. Objects with named parameters as pipeline input: Send a mail message per pipeline item in `ProcessRecord` block (described above)",
      "created_at": "2018-09-15T19:23:58Z",
      "updated_at": "2018-09-15T19:23:58Z"
    }
  ],
  "created_at": "2018-08-21T21:13:35Z",
  "number": 7591,
  "state": "open",
  "title": "Send-MailMessage incorrectly handling ValueFromPipelineByPropertyName parameters",
  "updated_at": "2018-09-15T19:23:58Z"
}