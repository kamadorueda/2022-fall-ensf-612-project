{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13674",
  "author": "SeeminglyScience",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 and PowerShell 7+ issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6).\r\n\r\n-->\r\n\r\nPowerShell doesn't have the `default` keyword, so the only way to create a zeroed instance of a struct is `new()` (which likely just gets translated to `default` in `SLE.Expression` trees) and `[Activator]::CreateInstance([type])`/`New-Object`.  The best way would be `new()` but it is currently inconsistent.  If the struct has defined any constructors, the binder will throw.\r\n\r\n## Steps to reproduce\r\n\r\n```powershell\r\n# This struct has no defined constructors\r\n[RuntimeMethodHandle]::new()\r\n\r\n# This type several\r\n[IntPtr]::new()\r\n```\r\n\r\n## Expected behavior\r\n\r\n```powershell\r\n# [RuntimeMethodHandle]::new()\r\nValue\r\n-----\r\n    0\r\n\r\n# [IntPtr]::new()\r\n0\r\n```\r\n\r\n## Actual behavior\r\n\r\n```powershell\r\n# [RuntimeMethodHandle]::new()\r\nValue\r\n-----\r\n    0\r\n\r\n# [IntPtr]::new()\r\nMethodException: Cannot find an overload for \"new\" and the argument count: \"0\".\r\n```\r\n\r\n## Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.0-preview.7\r\nPSEdition                      Core\r\nGitCommitId                    7.1.0-preview.7\r\nOS                             Microsoft Windows 10.0.18362\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\n## Fix\r\n\r\nThis:\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/3effa204103460c996a8612aa70718fdf924047d/src/System.Management.Automation/engine/runtime/Binding/Binders.cs#L7620-L7624\r\n\r\nNeeds to be:\r\n\r\n```csharp\r\nif (_callInfo.ArgumentCount == 0 && instanceType.IsValueType)\r\n{\r\n    // No ctors, just call the default ctor\r\n    return new DynamicMetaObject(Expression.New(instanceType).Cast(this.ReturnType), restrictions).WriteToDebugLog(this);\r\n}\r\n```",
  "closed_at": null,
  "comments": [
    {
      "author": "dkaszews",
      "author_association": "CONTRIBUTOR",
      "body": "If the fix has been known for 2 years, why no PR? Are there any breaking changes we need to discuss? Or can I just create the PR myself and get the glory like with `'1' | Test-Json`? ",
      "created_at": "2022-09-11T05:36:37Z",
      "updated_at": "2022-09-11T05:36:37Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "> Are there any breaking changes we need to discuss? Or can I just create the PR myself and get the glory like with `'1' | Test-Json`?\r\n\r\nGood question! I can't think of any but I'll open it up for triage with the engine WG to discuss.",
      "created_at": "2022-09-13T20:59:35Z",
      "updated_at": "2022-09-13T20:59:35Z"
    }
  ],
  "created_at": "2020-09-22T17:44:59Z",
  "labels": [
    "Issue-Question",
    "WG-Engine",
    "Needs-Triage"
  ],
  "number": 13674,
  "state": "open",
  "title": "Calling `::new()` on a struct only works if there are no defined constructors",
  "updated_at": "2022-09-13T20:59:35Z"
}