{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6471",
  "author": "andot",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\n- Windows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nIf it is a bug report:\r\n- make sure you are able to repro it on the latest released version. \r\nYou can install the latest version from https://github.com/PowerShell/PowerShell/releases\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://github.com/PowerShell/PowerShell/blob/master/docs/KNOWNISSUES.md).\r\n- Fill out the following repro template:\r\n\r\nIf it's not a bug, please remove the template and elaborate the issue in your own words.\r\n-->\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\nGet-ChildItem | Format-Wide -AutoSize | Out-String\r\n```\r\n\r\nor\r\n```powershell\r\nGet-ChildItem | Format-Wide -AutoSize | Out-String -Stream\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```none\r\n\r\n\r\n    Directory: C:\\Users\\andot\\Documents\\WindowsPowerShell\\Modules\\lolcat\\1.0.1\r\n\r\n\r\n\r\n.git                        LICENSE\r\nlolcat.psd1                        lolcat.psm1\r\nOut-Rainbow.psm1                   Out-StripAnsi.psm1\r\nREADME.md                   screenshot.png\r\n\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n```none\r\nout-lineoutput : Array dimensions exceeded supported range.\r\nAt line:1 char:1\r\n+ Get-ChildItem | Format-Wide -AutoSize | Out-String -Stream\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : NotSpecified: (:) [out-lineoutput], OutOfMemoryException\r\n+ FullyQualifiedErrorId : System.OutOfMemoryException,Microsoft.PowerShell.Commands.OutLineOutputCommand\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.1\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.1\r\nOS                             Microsoft Windows 10.0.16299\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\n```powershell\r\n> $PSVersionTable                                                 \r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.2\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.2\r\nOS                             Linux 4.4.0-43-Microsoft #1-Microsoft Wed Dec...\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\nIf no ` -AutoSize` param, the result will be fine. And it works well in WindowsPowerShell  5.1 with or without ` -AutoSize` param.",
  "closed_at": "2018-04-03T18:17:06Z",
  "comments": [
    {
      "author": "stknohg",
      "author_association": "CONTRIBUTOR",
      "body": "Hi, I found an another workaround.\r\n\r\n### Workaround\r\n\r\nSpecify `Out-String -Width` parameter explicitly and set the appropriate value.\r\n\r\ne.g.\r\n\r\n```powershell\r\nGet-ChildItem | Format-Wide -AutoSize | Out-String -Width $Host.UI.RawUI.WindowSize.Width\r\n```\r\n\r\n### Cause\r\n\r\nWhen specify `Format-Wide -AutoSize` parameter, display items per row is decided from output width.\r\nIn this case, output width is depend on `Out-String -Width` value.\r\n\r\nWhen `-Width` parameter is not specified, `int.MaxValue` is adopted as output width.   \r\n(This behavior is from PowerShell Core 6.0. #5193)\r\n\r\nWhen initializing `WideOutputContext`, `itemsPerRow` value(=items per row) reaches `int.MaxValue`.\r\nTherefore, creation of the `_buffer` buffer fails, resulting in an error.\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/36b71ba39e36be3b86854b3551ef9f8e2a1de5cc/src/System.Management.Automation/FormatAndOutput/common/BaseOutputtingCommand.cs#L1135-L1170",
      "created_at": "2018-03-23T05:40:31Z",
      "updated_at": "2018-03-23T07:58:46Z"
    },
    {
      "author": "andot",
      "author_association": "NONE",
      "body": "Thank you! Now on with Powershell 6.x, my lolcat Module can works well.",
      "created_at": "2018-03-23T09:57:29Z",
      "updated_at": "2018-03-23T09:57:29Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Could we use `int.MaxValue-1` as init value?",
      "created_at": "2018-03-24T18:47:30Z",
      "updated_at": "2018-03-24T18:47:30Z"
    },
    {
      "author": "stknohg",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov No, but we can use ` Console.WindowWidth` same as `TableOutputContext`.\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/36b71ba39e36be3b86854b3551ef9f8e2a1de5cc/src/System.Management.Automation/FormatAndOutput/common/BaseOutputtingCommand.cs#L923-L939",
      "created_at": "2018-03-24T21:00:27Z",
      "updated_at": "2018-03-24T21:00:27Z"
    }
  ],
  "created_at": "2018-03-23T02:59:25Z",
  "labels": [
    "Issue-Bug",
    "WG-Engine",
    "Resolution-Fixed"
  ],
  "number": 6471,
  "state": "closed",
  "title": "\"Get-ChildItem | Format-Wide -AutoSize | Out-String\" can't work on Powershell 6.0.1 & 6.0.2",
  "updated_at": "2018-04-04T05:16:03Z"
}