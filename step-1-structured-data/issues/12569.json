{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12569",
  "author": "prcdpr",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 and PowerShell 7+ issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n\r\n-->\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\n$bearer = \".\" * 242\r\nInvoke-RestMethod -Uri \"https://httpbin.org/bearer\" -Authentication Bearer -Token $bearer\r\n```\r\n\r\n# Expected behavior\r\n\r\nIt throws an exception when string is 241 characters or less\r\n\r\n> Cannot bind parameter 'Token'. Cannot convert the value of type \"System.String\" to type \"System.Security.SecureString\".\r\n\r\n# Actual behavior\r\n\r\nNo exception thrown\r\n```none\r\nProcess finished with exit code 0.\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0\r\nOS                             Microsoft Windows 10.0.18362\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2020-05-12T20:31:36Z",
  "comments": [
    {
      "author": "fMichaleczek",
      "author_association": "NONE",
      "body": "@prcdpr I don't understand your issue. Could you explain more ?\r\n\r\nToken parameter take a SecureString and not String  :\r\n```\r\n$bearer = \".\" * 242\r\nInvoke-RestMethod -Uri \"https://httpbin.org/bearer\" -Authentication Bearer -Token ( ConvertTo-SecureString -String $bearer -AsPlainText  )\r\n```\r\n\r\nThen this code work too :\r\n```\r\n$bearer = \".\" * 5\r\nInvoke-RestMethod -Uri \"https://httpbin.org/bearer\" -Authentication Bearer -Token ( ConvertTo-SecureString -String $bearer -AsPlainText  )\r\n```\r\n\r\n",
      "created_at": "2020-05-04T19:05:46Z",
      "updated_at": "2020-05-04T19:05:46Z"
    },
    {
      "author": "prcdpr",
      "author_association": "NONE",
      "body": "I know this.\r\n\r\nThe issue I'm pointing out is that PowerShell behaves differently and doesn't throw an exception when you supply the long string by mistake instead of SecureString. Today I spent 15 minutes investigating why is my PowerShell code simply terminating without exception.\r\n\r\nWith trial and error I found out that it's possible to get an exception using try catch block, but when the supplied string is shorter it actually throws a meaningful error instead of silently terminating.\r\n\r\n\r\n",
      "created_at": "2020-05-04T19:09:49Z",
      "updated_at": "2020-05-04T19:09:49Z"
    },
    {
      "author": "prcdpr",
      "author_association": "NONE",
      "body": "Following example\r\n```powershell\r\n$bearer = \".\" * 241\r\nInvoke-RestMethod -Uri \"https://httpbin.org/bearer\" -Authentication Bearer -Token $bearer\r\n```\r\nthrows an exception\r\n\r\n```\r\nCannot bind parameter 'Token'. Cannot convert the value of type \"System.String\" to type \"System.Security.SecureString\".\r\n```\r\n\r\n\r\nHowever this code\r\n\r\n```powershell\r\n$bearer = \".\" * 242\r\nInvoke-RestMethod -Uri \"https://httpbin.org/bearer\" -Authentication Bearer -Token $bearer\r\n```\r\nterminates silently without any error and with 0 exit code\r\n\r\n",
      "created_at": "2020-05-04T19:12:27Z",
      "updated_at": "2020-05-04T19:12:27Z"
    },
    {
      "author": "fMichaleczek",
      "author_association": "NONE",
      "body": "@prcdpr on my machine, this code throw an error : \r\n```\r\n$bearer = \".\" * 242\r\nInvoke-RestMethod -Uri \"https://httpbin.org/bearer\" -Authentication Bearer -Token $bearer\r\n\r\nInvoke-RestMethod: Cannot bind parameter 'Token'. Cannot convert the \"..................................................................................................................................................................................................................................................\" value of type \"System.String\" to type \"System.Security.SecureString\".\r\n```\r\n\r\nI can't reproduce",
      "created_at": "2020-05-04T19:14:39Z",
      "updated_at": "2020-05-04T19:14:39Z"
    },
    {
      "author": "fMichaleczek",
      "author_association": "NONE",
      "body": "```\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0\r\nOS                             Microsoft Windows 10.0.18363\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n```",
      "created_at": "2020-05-04T19:15:23Z",
      "updated_at": "2020-05-04T19:15:23Z"
    },
    {
      "author": "fMichaleczek",
      "author_association": "NONE",
      "body": "Could you try without loading your profile ? \r\n`pwsh -NoProfile`",
      "created_at": "2020-05-04T19:17:29Z",
      "updated_at": "2020-05-04T19:17:29Z"
    },
    {
      "author": "prcdpr",
      "author_association": "NONE",
      "body": "@fMichaleczek can you try putting repro code inside file `repro.ps1` and running \r\n\r\n```\r\npwsh.exe .\\repro.ps1\r\n```\r\n\r\nPlease try different string lengths from 1-1000 (for example every hundred)",
      "created_at": "2020-05-04T19:20:06Z",
      "updated_at": "2020-05-04T19:20:06Z"
    },
    {
      "author": "fMichaleczek",
      "author_association": "NONE",
      "body": "@prcdpr Understood. Nothing relate your code, more how pwsh.exe works.\r\n\r\nYou should read this : \r\nhttps://stackoverflow.com/questions/36943318/how-to-get-the-error-code-errorlevel-from-powershell-into-windows-command-prom\r\n\r\n```\r\ntry { \r\n    $bearer = \".\" * 242\r\n    Invoke-RestMethod -Uri \"https://httpbin.org/bearer\" -Authentication Bearer -Token $bearer\r\n    ...\r\n} \r\ncatch {\r\n    exit 22\r\n}\r\n```\r\n",
      "created_at": "2020-05-04T19:34:10Z",
      "updated_at": "2020-05-04T19:38:26Z"
    },
    {
      "author": "prcdpr",
      "author_association": "NONE",
      "body": "Nope, it's not that \ud83d\ude04 \r\n\r\nSorry I was not clear enough. Please have look at this recording.\r\n\r\n![whatisgoingonfdgfg](https://user-images.githubusercontent.com/43776797/81006661-21928600-8e50-11ea-918b-7d9df95256b6.gif)\r\n\r\n\r\n",
      "created_at": "2020-05-04T19:42:50Z",
      "updated_at": "2020-05-04T19:42:50Z"
    },
    {
      "author": "fMichaleczek",
      "author_association": "NONE",
      "body": "It's a bug relative to the new concise ErrorView\r\n\r\nI can't reproduce if I add $ErrorView = 'NormalView' on top of the script.\r\n\r\n/cc @SteveL-MSFT \r\n\r\n\r\n",
      "created_at": "2020-05-04T20:13:36Z",
      "updated_at": "2020-05-12T21:55:45Z"
    },
    {
      "author": "fMichaleczek",
      "author_association": "NONE",
      "body": "@prcdpr It's an bug of display, note that in all cases, ERRORLEVEL is always 0. You should handle it, see the stackoverflow link.",
      "created_at": "2020-05-04T20:17:10Z",
      "updated_at": "2020-05-04T20:17:10Z"
    },
    {
      "author": "krokofant",
      "author_association": "NONE",
      "body": "Duplicate of #12191?",
      "created_at": "2020-05-12T19:35:32Z",
      "updated_at": "2020-05-12T19:35:32Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Yeah, it is. I'll close this one in favor of that since that one's older. Feel free to continue the discussion over in #12191 folks, and don't hesitate to add any missing information from here into that issue thread. Thanks! \ud83d\ude0a ",
      "created_at": "2020-05-12T20:31:36Z",
      "updated_at": "2020-05-12T20:31:36Z"
    },
    {
      "author": "krokofant",
      "author_association": "NONE",
      "body": "@vexx32 Maybe it's just semantics but the other issue only has the _Issue-Question_ label while this had _Area-Engine_ and _Issue-Bug_. Do they get different priority or something?",
      "created_at": "2020-05-14T23:04:04Z",
      "updated_at": "2020-05-14T23:04:04Z"
    }
  ],
  "created_at": "2020-05-04T14:17:07Z",
  "number": 12569,
  "state": "closed",
  "title": "\ud83e\udd14 Exception swallowed when string is longer than 241 characters",
  "updated_at": "2020-05-14T23:04:04Z"
}