{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7242",
  "author": "daxian-dbw",
  "body": "## PR Summary\r\n\r\nRFC: https://github.com/PowerShell/PowerShell-RFC/pull/114\r\n\r\nGoals:\r\n- Allow experimental features to be declared by PowerShell engine and modules.\r\n- Allow experimental features to be enabled via `powershell.config.json`\r\n- Allow `Function`, `Cmdlet`, parameters and parameter sets to be shown to the user or hiden from the user depending on whether the associated experimetnal feature is on or off.\r\n- Allow discover experimental features using cmdlet `Get-ExperimentalFeature`\r\n\r\nNo Goals:\r\n- Allow declaring and handling of experimental feature dependencies.\r\n- Show or hide PowerShell class depending on an experimental is on or off.\r\n\r\n### Engine Experimental Feature\r\nEngine experimental features are required to register to the `ExperimentalFeature` type, by adding an `ExperimentalFeature` instance to `ExperimentalFeature.EngineExperimentalFeatures` in the type initailizer.\r\n\r\n### Module Experimental Feature\r\nModule experimetnal features can declared by adding `ExperimentalFeatures = @(..)` to the `PSData` section of `PrivateData` in the module manifest. Example:\r\n```powershell\r\nPrivateData = @{\r\n    PSData = @{\r\n        ExperimentalFeatures = @(\r\n            @{ Name = 'ExpTest.FeatureOne'; Description = \"Test feature number one.\" }\r\n            @{ Name = 'ExpTest.FeatureTwo'; Description = \"Test feature number two.\" }\r\n        )\r\n    }\r\n}\r\n```\r\n\r\n### Enable Experimental Features\r\n\r\nExperimental features are enabled by declaring them in the `powershell.config.json` file. The enabled experimetnal features are fixed after powershell starts, and cannot be changed at run time.\r\n\r\n```json\r\n{\r\n  \"Microsoft.PowerShell:ExecutionPolicy\":\"RemoteSigned\",\r\n  \"ExperimentalFeatures\": [\r\n    \"PSFileSystemProviderV2\"\r\n    \"ExpTest.FeatureOne\"\r\n  ]\r\n}\r\n```\r\n\r\n### Exposed Public APIs\r\n\r\n- `System.Management.Automation.ExperimentalAttribute`. An attribute that can be applied to types or properties or fields. The attribute is used to support showing or hiding a command (Function, Cmdlet), or a command parameter.\r\n- A new constructor for `ParameterAttribute`: `Parameter(string experimentalFeatureName, ExperimentAction)`. This constructor is used to support showing or hiding a parameter set.\r\n- `System.Management.Automation.ExperimentAction`. An enum with 3 members: \"None\", \"Show\", \"Hide\". This enum is used when creating an instance of `ExperimentalAttribute`, or `ParameterAttribute` with the new constructor. It indicate the action to take for a command or parameter when the associated feature is on or off.\r\n- `System.Management.Automation.ExperimentalFeature`. It represents an experimental feature, and it also exposes a static method `bool HasEnabled(string featureName)` for users to check if a given experimental feature is on.\r\n\r\n### New Type Accelerators\r\n- `ExperimentAction` for `System.Management.Automation.ExperimentAction`\r\n- `Experimental` for `System.Management.Automation.ExperimentalAttribute`\r\n- `ExperimentalFeature` for `System.Management.Automation.ExperimentalFeature`\r\n\r\n### New Cmdlet\r\n\r\nAdd `Get-ExperimentalFeature [[-Name] <string[]>] [-ListAvailable] [<CommonParameters>]` to retrieve information about experimental features from engine or modules. `Name` takes wildcards. When `-ListAvailable` is not specified, `Get-ExperimentalFeature` only returns the enabled experimental features (mimic `Get-Module`). When `-ListAvailable` is specified, `Get-ExperimentalFeature` returns all available experimental features from engine and modules in module paths.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` to the beginning of the title and remove the prefix when the PR is ready.\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [x] User-facing [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed - Issue link:\r\n- **Testing - New and feature**\r\n    - [ ] Not Applicable or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n        - [x] [Add `[feature]` if the change is significant or affects feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\r\n",
  "closed_at": "2018-07-12T22:52:05Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "The PR contains many style issues in old and new code which divert attention. I opened PR #7246 to fix style issues in old code - I suggest merge it and then rebase in the PR.",
      "created_at": "2018-07-09T06:31:35Z",
      "updated_at": "2018-07-09T06:31:35Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@iSazonov I didn't make many style changes (maybe `CommandProcessor.cs` is the only outstanding file).\r\nBut there are many comments for style issues (`var` vs. explicit type, using named arguments for boolean values and etc.), so I push a separate commit to address most of the style related comments.",
      "created_at": "2018-07-10T01:01:15Z",
      "updated_at": "2018-07-10T01:01:15Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@iSazonov About the style rules, @TravisEz13, @adityapatwardhan and I went through all issues reported from CodeFactor a few weeks back, and we got a list of rules that we think should be turned off. Here is the list:\r\n[1305: SA1305FieldNamesMustNotUseHungarianNotation](https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1305.md)\r\n[1502: SA1502ElementMustNotBeOnSingleLine](https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1502.md)\r\n[1310: SA1310FieldNamesMustNotContainUnderscore](https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1310.md),\r\n[1204: SA1204StaticElementsMustAppearBeforeInstanceElements](https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1204.md)\r\n[1009: SA1009ClosingParenthesisMustBeSpacedCorrectly](https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1009.md)\r\n[1501:SA1501StatementMustNotBeOnSingleLine](https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1501.md)\r\n[1513:SA1513ClosingBraceMustBeFollowedByBlankLine](https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1513.md)\r\n[1306:SA1306FieldNamesMustBeginWithLowerCaseLetter](https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1306.md)\r\n[1308:SA1308VariableNamesMustNotBePrefixed](https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1308.md)\r\n[1013:SA1013ClosingBracesMustBeSpacedCorrectly](https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1013.md)\r\n[1500:SA1500BracesForMultiLineStatementsMustNotShareLine](https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1500.md)\r\n[1010:SA1010OpeningSquareBracketsMustBeSpacedCorrectly](https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1010.md)\r\n[1026:SA1026CodeMustNotContainSpaceAfterNewKeywordInImplicitlyTypedArrayAllocation](https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1026.md)\r\n[1008:SA1008OpeningParenthesisMustBeSpacedCorrectly](https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1008.md)\r\n[1311:SA1311StaticReadonlyFieldsMustBeginWithUpperCaseLetter](https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1311.md)\r\n[1025:SA1025CodeMustNotContainMultipleWhitespaceInARow](https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1025.md)\r\n[1012:SA1012OpeningBracesMustBeSpacedCorrectly](https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1012.md)\r\n[1215:SA1215InstanceReadonlyElementsMustAppearBeforeInstanceNonReadonlyElements](https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1215.md)\r\n[1214:SA1214ReadonlyElementsMustAppearBeforeNonReadonlyElements](https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1214.md)\r\n[1210:SA1210UsingDirectivesMustBeOrderedAlphabeticallyByNamespace](https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1210.md)\r\n[1609:SA1609PropertyDocumentationMustHaveValue](https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1609.md)\r\n\r\nThe rules about \"one parameter per line\" for method definition or invocation is not in this list, but in my opinion, we probably should disable that rule because 1) it doesn't bring much benefit -- as long as the parameters are well aligned, there is no readability issue; 2) there are too many instances in our existing code base that are violating that rule, and fixing all doesn't worth the time.\r\n\r\nThe following document rules make sense for public members, but they are applied to non-public members too, which causes a lot of noise data.\r\n\r\n[1611:SA1611ElementParametersMustBeDocumented](https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1611.md)\r\n[1615:SA1615ElementReturnValueMustBeDocumented](https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1615.md)\r\n[1606:SA1606ElementDocumentationMustHaveSummaryText](https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1606.md)\r\n",
      "created_at": "2018-07-10T20:45:17Z",
      "updated_at": "2018-07-10T20:45:17Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw I moved your style comment in Issue #4708.",
      "created_at": "2018-07-11T05:00:09Z",
      "updated_at": "2018-07-11T05:00:09Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@iSazonov Thanks for moving it to the right place. I will spend more time refining the rules for CodeFactor after finishing the first check-in of the experimental feature work.",
      "created_at": "2018-07-11T05:13:18Z",
      "updated_at": "2018-07-11T05:13:18Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@TravisEz13 is on vacation. I assigned this PR to @adityapatwardhan ",
      "created_at": "2018-07-12T21:46:30Z",
      "updated_at": "2018-07-12T21:46:30Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw Congratulations on this great work! :+1: ",
      "created_at": "2018-07-13T03:55:17Z",
      "updated_at": "2018-07-13T03:55:17Z"
    }
  ],
  "created_at": "2018-07-06T22:30:54Z",
  "number": 7242,
  "state": "closed",
  "title": "Add support to experimental features",
  "updated_at": "2018-10-15T21:44:57Z"
}