{
  "_url": "https://github.com/PowerShell/PowerShell/issues/16565",
  "author": "kasini3000",
  "body": "### Prerequisites\n\n- [X] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\n\n### Steps to reproduce\n\ncopy-item -tosession $a -path 'd:\\a.txt' -Destination 'D:\\nush\\' #problem  ,both source and target are drive letter \"D\"\r\ncopy-item -tosession $a -path 'e:\\a.txt' -Destination 'D:\\nush\\' #normal\r\n\r\nCause of problem:\r\nThe drive letter of the source directory is the same as that of the target directory.\r\nIf the drive letter of the source directory difference target directory, normal.\r\n\n\n### Expected behavior\n\n```console\nThe copy succeeds without error messages and .Net exceptions\n```\n\n\n### Actual behavior\n\n```console\nThe copy succeeds with error messages and .Net exceptions\n```\n\n\n### Error details\n\n```console\nget-error:\r\nException             :\r\n    Type            : System.ComponentModel.Win32Exception\r\n    NativeErrorCode : 87\r\n    ErrorCode       : -2147467259\r\n    TargetSite      :\r\n        Name          : GetStreams\r\n        DeclaringType : System.Management.Automation.Internal.AlternateDataStreamUtilities\r\n        MemberType    : Method\r\n        Module        : System.Management.Automation.dll\r\n    Message         : \u53c2\u6570\u9519\u8bef\u3002\r\n    Source          : System.Management.Automation\r\n    HResult         : -2147467259\r\n    StackTrace      :\r\n   at System.Management.Automation.Internal.AlternateDataStreamUtilities.GetStreams(String path)\r\n   at Microsoft.PowerShell.Commands.FileSystemProvider.PerformCopyFileToRemoteSession(FileInfo file, String destination\r\nPath, PowerShell ps)\r\n   at Microsoft.PowerShell.Commands.FileSystemProvider.CopyFileInfoItem(FileInfo file, String destinationPath, Boolean\r\nforce, PowerShell ps)\r\n   at Microsoft.PowerShell.Commands.FileSystemProvider.CopyItemLocalOrToSession(String path, String destinationPath, Bo\r\nolean recurse, Boolean Force, PowerShell ps)\r\n   at Microsoft.PowerShell.Commands.FileSystemProvider.CopyItem(String path, String destinationPath, Boolean recurse)\r\n   at System.Management.Automation.SessionStateInternal.CopyItem(CmdletProvider providerInstance, String path, String c\r\nopyPath, Boolean recurse, CmdletProviderContext context)\r\nCategoryInfo          : NotSpecified: (:) [Copy-Item], Win32Exception\r\nFullyQualifiedErrorId : System.ComponentModel.Win32Exception,Microsoft.PowerShell.Commands.CopyItemCommand\r\nInvocationInfo        :\r\n    MyCommand        : Copy-Item\r\n    ScriptLineNumber : 1\r\n    OffsetInLine     : 1\r\n    HistoryId        : 8\r\n    Line             : copy-item -Path 'D:\\h.txt' -Destination 'D:\\j' -ToSession $a\r\n    PositionMessage  : At line:1 char:1\r\n                       + copy-item -Path 'D:\\h.txt' -Destination 'D:\\j' -ToSession $a\r\n                       + ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    InvocationName   : copy-item\r\n    CommandOrigin    : Internal\r\nScriptStackTrace      : at <ScriptBlock>, <No file>: line 1\n```\n\n\n### Environment data\n\n```powershell\nall version\r\n\r\nlocal pc\uff1acopy files source\r\npowershell 5.1.18362.1801 on win10\r\npowershell 7.2.0 on win10\r\n\r\n\r\n\r\ntarget pc1\uff1acopy files target\r\npowershell 5.1.19043 on win10\r\n\r\ntarget pc2\uff1acopy files target\r\npowershell 5.1 on win11\n```\n\n\n### Visuals\n\nThe [copyto node script] of KASINI3000 is a copy-item -tosession package based on PowerShell.\r\nI always hear people report that copying files failed. To this end, I added try and re copy, but someone still reported this.\r\nAfter analyzing the log, I found the problem.Looks like a bug.\r\n\r\nAlthough the file was copied successfully, KASINI3000 can't stand this exception. \r\nBecause I wrote some code. If it is abnormal, script will copy it again and Exit 1.\r\n\r\n\r\n## Problem phenomenon:\r\n* copy files succeeded.\r\n* Report \"parameter error\"\uff08\u53c2\u6570\u9519\u8bef\uff09\r\n* Throw an exception.\r\n* only for -tosession.It has nothing to do with -fromsession\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "kasini3000",
      "author_association": "NONE",
      "body": "![16565](https://user-images.githubusercontent.com/65390418/145017594-e29e7227-1ac7-4ce4-b5d8-14a3eb2a5b75.jpg)\r\n",
      "created_at": "2021-12-07T11:02:28Z",
      "updated_at": "2021-12-07T11:02:28Z"
    },
    {
      "author": "jborean93",
      "author_association": "COLLABORATOR",
      "body": "I cannot replicate this normally, I'm able to copy a file to the exact same path on the remote PSSession so I think your error is due to another problem.\r\n\r\nJudging by the error message it seems like the failure is when calling `AlternateDataStreamUtilities.GetStreams(String path)`. The fact that the error is `ERROR_INVALID_PARAMETER` seems to indicate either your `D:` drive on the local does not support alternate data streams. For example if the partition is formatted with something other than NTFS then alternate data streams would not be supported. This could explain why it works when you target a different drive on the local side it is fine.\r\n\r\nAs a side note, you are best testing this with PowerShell 7.2 and not Windows PowerShell. The problem could have been fixed already.",
      "created_at": "2021-12-07T19:43:47Z",
      "updated_at": "2021-12-07T19:44:59Z"
    },
    {
      "author": "kasini3000",
      "author_association": "NONE",
      "body": "![16565_2](https://user-images.githubusercontent.com/65390418/145151001-4d5b7b13-f9ce-4835-a56e-e44b0ca48c4b.png)\r\nsource=win10+ps7.2\r\ntarget=new win11 vm\r\ndrive d on win11 vm =ntfs format",
      "created_at": "2021-12-08T05:01:58Z",
      "updated_at": "2021-12-08T05:01:58Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> HResult         : -2147467259\r\n\r\nIt is \"file being opened or locked\"",
      "created_at": "2021-12-08T17:44:30Z",
      "updated_at": "2021-12-09T11:59:59Z"
    },
    {
      "author": "jborean93",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov the key one in particular is `NativeErrorCode: 87` which refers to [ERROR_INVALID_PARAMETER 0x00000057](https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-erref/18d8fbe8-a967-4f1c-ae50-99ca8e491d2d). The actual function in question here that is raising the `Win32Exception` is this https://github.com/PowerShell/PowerShell/blob/7dc4587014bfa22919c933607bf564f0ba53db2e/src/System.Management.Automation/namespaces/FileSystemProvider.cs#L8568-L8628\r\n\r\nEssentially either [FindFirstStream](https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-findfirststreamw) or [FindNextStream](https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-findnextstreamw) is the function that's failing and the only explicit mention about this is `FindFirstStream` where it states\r\n\r\n> If the filesystem does not support streams, the function fails and GetLastError returns ERROR_INVALID_PARAMETER (87).\r\n\r\n@kasini3000 you said that drive D on the Win 11 (what you said is the target) is NTFS but in reality the error is PowerShell trying to get the streams of drive `D:` on your source (Win 10). Can you verify that is also NTFS or some other file system format. Can you try running\r\n\r\n```powershell\r\nGet-Item -Path D:\\h.txt -Stream *\r\n```",
      "created_at": "2021-12-08T19:18:12Z",
      "updated_at": "2021-12-08T19:18:12Z"
    },
    {
      "author": "kasini3000",
      "author_association": "NONE",
      "body": "@jborean93  oh,my drive \"d\" is fat32 partition, looks like you're close to the truth\r\nIn fact, I don't know whether the problem at the source or the target.\r\nnobody open file ,no lock\r\n\r\n```\r\nPS C:\\ProgramData\\kasini3000> Get-Item -Path D:\\h.txt -Stream *\r\nGet-Item: \u53c2\u6570\u9519\u8bef\u3002\r\n```",
      "created_at": "2021-12-09T09:30:57Z",
      "updated_at": "2021-12-09T09:40:18Z"
    },
    {
      "author": "jborean93",
      "author_association": "COLLABORATOR",
      "body": "Thanks for confirming it\u2019s definitely the source. Are you able to update the title of the ticket to reflect that Copy-Item -ToSession doesn\u2019t work for a source on Windows that isn\u2019t on NTFS?",
      "created_at": "2021-12-09T09:41:51Z",
      "updated_at": "2021-12-09T09:41:51Z"
    }
  ],
  "created_at": "2021-12-07T10:58:02Z",
  "labels": [
    "Issue-Bug",
    "WG-Cmdlets-Management",
    "Needs-Triage",
    "Area-FileSystem-Provider"
  ],
  "number": 16565,
  "state": "open",
  "title": "Copy-item -tosession returns an exception when source on Windows that isn\u2019t on NTFS?",
  "updated_at": "2021-12-09T12:01:44Z"
}