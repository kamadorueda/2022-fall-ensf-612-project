{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6520",
  "author": "jianyunt",
  "body": "On my Linux VM, start pwsh, remove psreadline module, and press left or right arrow key and hold, you will see below screen shot.  \r\n\r\n![image](https://user-images.githubusercontent.com/10171679/37999446-b8e9d878-31d7-11e8-82e3-de1ab83c6503.png)\r\n\r\npwsh does not seem to interprets left, right arrow keys well (^[OD or ^[[D ^[[C or ^[OC)  . Instead, it inserts OC, OD into the input text.  It kept looping through the code from [line 1593](https://github.com/PowerShell/PowerShell/blob/master/src/Microsoft.PowerShell.ConsoleHost/host/msh/ConsoleHostUserInterface.cs#L1593) to the [line 1808](https://github.com/PowerShell/PowerShell/blob/master/src/Microsoft.PowerShell.ConsoleHost/host/msh/ConsoleHostUserInterface.cs#L1808). Eventually receives escape key, sets ['s' to empty](https://github.com/PowerShell/PowerShell/blob/master/src/Microsoft.PowerShell.ConsoleHost/host/msh/ConsoleHostUserInterface.cs#L1776). Then in the next round of do-while loop, crashes at [line 1798](https://github.com/PowerShell/PowerShell/blob/master/src/Microsoft.PowerShell.ConsoleHost/host/msh/ConsoleHostUserInterface.cs#L1798).\r\n\r\n\r\nWe are encountering the very same behavior in the pwsh bash cloudshell. On the bash, I do not remove psreadline module. Instead, we call register-eventobject or other start-job commands that may make OS busy. After that, OC, OD will be inserted while press and hold L-, R- arrow keys.  \r\n\r\nIn the above two cases, symptom is the same. They may caused by the same issue in pwsh.\r\n\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\nSee above.\r\n\r\n\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n1) Key strokes should be deciphered properly. \r\n2) No crashes\r\n\r\nActual behavior\r\n---------------\r\n1) garbage gets inserted into input text.\r\n2) the pwsh process crashes.\r\n\r\nEnvironment data\r\n----------------\r\n\r\n![image](https://user-images.githubusercontent.com/10171679/38000444-74add2a4-31dc-11e8-95c0-f85cfe774fc3.png)\r\n\r\n### env $TERM\r\nxterm-256color\r\n\r\n\r\n### uname -a:\r\n4.4.0-116-generic #140-UBuntu\r\nUBuntu  16.04.1 LTS\r\n\r\n",
  "closed_at": "2018-09-18T17:51:25Z",
  "comments": [
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "Hey @jianyunt, is there a reason why you're needing to remove PSReadline. AFAIK, PSReadline is our de facto Readline on non-Windows, there's no supported fallback. ",
      "created_at": "2018-03-28T00:16:40Z",
      "updated_at": "2018-03-28T00:16:40Z"
    },
    {
      "author": "jianyunt",
      "author_association": "CONTRIBUTOR",
      "body": "I am seeing the same behavior on pwsh-bash clouldshell as on Linux without psreadline. That's the reason.",
      "created_at": "2018-03-28T00:20:30Z",
      "updated_at": "2018-03-28T00:20:30Z"
    },
    {
      "author": "JamesWTruher",
      "author_association": "MEMBER",
      "body": "what is the value of $env:TERM?",
      "created_at": "2018-03-28T00:59:45Z",
      "updated_at": "2018-03-28T00:59:45Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I was able to repro this, but it looks like an issue in coreclr\r\n\r\n```none\r\n#0  0x00007ffff6d80428 in __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:54\r\n#1  0x00007ffff6d8202a in __GI_abort () at abort.c:89\r\n#2  0x00007ffff659e1fc in PROCAbort () from /opt/microsoft/powershell/6.1.0~preview.1/libcoreclr.so\r\n#3  0x00007ffff659d0eb in PROCEndProcess(void*, unsigned int, int) ()\r\n   from /opt/microsoft/powershell/6.1.0~preview.1/libcoreclr.so\r\n#4  0x00007ffff62420d3 in SafeExitProcess(unsigned int, int, ShutdownCompleteAction) ()\r\n   from /opt/microsoft/powershell/6.1.0~preview.1/libcoreclr.so\r\n#5  0x00007ffff62436f1 in EEPolicy::HandleFatalError(unsigned int, unsigned long, char16_t const*, _EXCEPTION_POINTERS*) () from /opt/microsoft/powershell/6.1.0~preview.1/libcoreclr.so\r\n#6  0x00007ffff651fa06 in SystemNative::GenericFailFast(StringObject*, ExceptionObject*, unsigned long, unsigned int) () from /opt/microsoft/powershell/6.1.0~preview.1/libcoreclr.so\r\n#7  0x00007ffff652019e in SystemNative::FailFastWithException(StringObject*, ExceptionObject*) ()\r\n   from /opt/microsoft/powershell/6.1.0~preview.1/libcoreclr.so\r\n#8  0x00007fff7f08670b in ?? ()\r\n#9  0x00007fff7f086700 in ?? ()\r\n#10 0x00007fff7d1f7df6 in ?? ()\r\n#11 0x00007fffffffc170 in ?? ()\r\n#12 0x00007fff5855c930 in ?? ()\r\n#13 0x00007fffffff90a0 in ?? ()\r\n#14 0x00007ffff630090d in ExceptionTracker::CallCatchHandler(_CONTEXT*, bool*) ()\r\n   from /opt/microsoft/powershell/6.1.0~preview.1/libcoreclr.so\r\n#15 0x00007fff7d1504c8 in ?? ()\r\n#16 0x0000000000000000 in ?? ()\r\n```\r\n\r\nNeed some symbols to see all the stack frames",
      "created_at": "2018-03-28T01:08:46Z",
      "updated_at": "2018-03-28T01:08:46Z"
    },
    {
      "author": "jianyunt",
      "author_association": "CONTRIBUTOR",
      "body": "Potentially this problem might be caused by the screen buffer size in the Linux container for the bash cloudshell case. Still under investigation.",
      "created_at": "2018-03-28T18:51:57Z",
      "updated_at": "2018-03-28T19:08:26Z"
    },
    {
      "author": "raghushantha",
      "author_association": "MEMBER",
      "body": "Key bindings work as expected when xterm is set to \"xterm-256color\" (xterm 3.2.0) in https://rc.portal.azure.com\r\n\r\nWhat are the other issues when using xterm-256color?",
      "created_at": "2018-03-30T16:58:50Z",
      "updated_at": "2018-03-30T16:58:50Z"
    },
    {
      "author": "jianyunt",
      "author_association": "CONTRIBUTOR",
      "body": "By pressing and holding  left or right arrow keys you will see ascii key code (OC, OD) gets inserted into your input string. It happens on xterm-color or xterm-256color and the latest bits of xterm.js. ",
      "created_at": "2018-03-30T17:02:31Z",
      "updated_at": "2018-03-30T17:02:31Z"
    },
    {
      "author": "jianyunt",
      "author_association": "CONTRIBUTOR",
      "body": "After digging it further, I think the problem about the gabbled data likely come from PSReadline. See https://github.com/lzybkr/PSReadLine/issues/658",
      "created_at": "2018-03-31T01:41:59Z",
      "updated_at": "2018-03-31T01:41:59Z"
    },
    {
      "author": "jianyunt",
      "author_association": "CONTRIBUTOR",
      "body": "This fix gets fixed by corefx https://github.com/dotnet/corefx/issues/29669 and fix is in GA 6.1",
      "created_at": "2018-09-18T17:51:25Z",
      "updated_at": "2018-09-18T17:51:25Z"
    }
  ],
  "created_at": "2018-03-27T23:41:55Z",
  "labels": [
    "Issue-Discussion",
    "Resolution-External"
  ],
  "number": 6520,
  "state": "closed",
  "title": "Garbage characters get inserted and eventually pwsh crashes on Linux VM",
  "updated_at": "2018-10-30T06:10:38Z"
}