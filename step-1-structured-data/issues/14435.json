{
  "_url": "https://github.com/PowerShell/PowerShell/issues/14435",
  "author": "rjmholt",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 and PowerShell 7+ issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6).\r\n\r\n-->\r\n\r\n## Simple repro\r\n\r\n```\r\nWrite-Verbose -verbose \"verbose\";Write-Output \"out\"\r\n```\r\n\r\n## expected output\r\n\r\n![image](https://user-images.githubusercontent.com/10873629/106670455-e7cae900-6561-11eb-89b5-651fefb64e0d.png)\r\n\r\n## Actual results\r\n\r\n![image](https://user-images.githubusercontent.com/10873629/106670499-fca77c80-6561-11eb-8bcc-5f71b64be524.png)\r\n\r\n\r\n## VSCode reproduce\r\n\r\n```powershell\r\n$PSVersionTable\r\n```\r\n\r\n```\r\n$PSStyle.Formatting.Warning = $PSStyle.Background.Magenta + $PSStyle.Foreground.Yellow + $PSStyle.Bold + $PSStyle.Italic\r\nWrite-Warning \"Colours!\"\r\n```\r\n\r\n## Expected behavior\r\n\r\n![image](https://user-images.githubusercontent.com/7009879/102310645-412e7880-3f20-11eb-973d-4822c3453b15.png)\r\n\r\nand something like this:\r\n\r\n![image](https://user-images.githubusercontent.com/7009879/102310657-4ab7e080-3f20-11eb-8010-38dddabe2faa.png)\r\n\r\n## Actual behavior\r\n\r\nNotice the yellow:\r\n\r\n![image](https://user-images.githubusercontent.com/7009879/102310845-a08c8880-3f20-11eb-8575-3513e96ee437.png)\r\n\r\n![image](https://user-images.githubusercontent.com/7009879/102310875-b306c200-3f20-11eb-8d34-4d5f7cfd48d2.png)\r\n\r\n\r\n## Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.0-preview.2\r\nPSEdition                      Core\r\nGitCommitId                    7.2.0-preview.2\r\nOS                             Microsoft Windows 10.0.19042\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}       \r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2021-08-04T23:24:51Z",
  "comments": [
    {
      "author": "TylerLeonhardt",
      "author_association": "MEMBER",
      "body": "Also worth looking at .NET Interactive - another pshost.",
      "created_at": "2020-12-16T06:58:54Z",
      "updated_at": "2020-12-16T06:58:54Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "~~Hmm I can't repro the color leaking.~~ (**Edit:** Didn't have the experimental feature enabled)  As for the style not taking effect, yeah every custom host will need to implement this themselves.\r\n\r\nIt would be nice if `ConsoleHost` was redesigned somewhat to be inheritable. That doesn't really help PSES and such right now unless it's polyfilled but it would save a lot of headache in the future.",
      "created_at": "2020-12-16T15:41:08Z",
      "updated_at": "2021-02-04T14:36:24Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "> As for the style not taking effect, yeah every custom host will need to implement this themselves.\r\n\r\nI think we need a bit more platform-oriented thinking here",
      "created_at": "2020-12-16T17:14:46Z",
      "updated_at": "2020-12-16T17:14:46Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "> I think we need a bit more platform-oriented thinking here\r\n\r\nYeah I'm with ya there. I'm not really sure how though, those streams don't make it to anything like the formatter where this could be processed in a host agnostic way.  In most cases `MshCommandRuntime.WriteVerbose` goes directly to `PSHostUserInterface.WriteVerboseLine`.\r\n\r\nAnother challenge is that escape sequences do not do much to describe what a GUI host should do.  I didn't see the PR at the time, but if I did I would have recommended removing the customizations of the other streams until this was fleshed out a little bit more.",
      "created_at": "2020-12-16T17:37:09Z",
      "updated_at": "2020-12-16T17:37:09Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "This seems to be working fine with 7.2-preview.8",
      "created_at": "2021-08-04T21:29:06Z",
      "updated_at": "2021-08-04T21:29:06Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I think this is a dupe of https://github.com/PowerShell/PowerShell/issues/14506 which was already fixed",
      "created_at": "2021-08-04T22:17:39Z",
      "updated_at": "2021-08-04T22:17:39Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "> ```\r\n> $PSStyle.Formatting.Warning = $PSStyle.Background.Magenta + $PSStyle.Foreground.Yellow + $PSStyle.Bold + $PSStyle.Italic\r\n> Write-Warning \"Colours!\"\r\n> ```\r\n\r\nThis doesn't produce the magenta background, but otherwise things seem to be working.\r\n\r\n![image](https://user-images.githubusercontent.com/7009879/128268035-de777b17-3590-40d7-ad98-124e817a9377.png)\r\n",
      "created_at": "2021-08-04T23:24:45Z",
      "updated_at": "2021-08-04T23:24:45Z"
    }
  ],
  "created_at": "2020-12-16T05:59:30Z",
  "labels": [
    "Issue-Bug",
    "Resolution-Duplicate",
    "WG-Interactive-Console"
  ],
  "number": 14435,
  "state": "closed",
  "title": "$PSStyle cause issues in the PowerShell  Console",
  "updated_at": "2021-08-04T23:24:51Z"
}