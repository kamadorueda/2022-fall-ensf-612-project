{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6947",
  "author": "alx9r",
  "body": "This works in PowerShell 5.1 but not in 6.0.\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n[AddTypeTest.zip](https://github.com/PowerShell/PowerShell/files/2043201/AddTypeTest.zip)\r\n\r\n### addType.ps1\r\n```powershell\r\nAdd-Type \"$PSScriptRoot\\file1.cs\",\"$PSScriptRoot\\file2.cs\"\r\n```\r\n\r\n### file1.cs\r\n\r\n```csharp\r\nusing System;\r\nnamespace SomeNamespace {}\r\n```\r\n\r\n### file1.cs\r\n\r\n```csharp\r\nusing System;\r\nnamespace SomeNamespace {}\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\nCall to `Add-Type` succeeds.\r\n\r\nActual behavior\r\n---------------\r\n\r\n```none\r\nAdd-Type : (4) : A using clause must precede all other elements defined in the namespace except extern alias declarations\r\nAt C:\\users\\un1\\Desktop\\AddTypeTest\\addType.ps1:1 char:1\r\n+ Add-Type \"$PSScriptRoot\\file1.cs\",\"$PSScriptRoot\\file2.cs\"\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : InvalidData: (Microsoft.Power...peCompilerError:AddTypeCompilerError) [Add-Type], Exception\r\n+ FullyQualifiedErrorId : SOURCE_CODE_ERROR,Microsoft.PowerShell.Commands.AddTypeCommand\r\n\r\nAdd-Type : Cannot add type. Compilation errors occurred.\r\nAt C:\\users\\un1\\Desktop\\AddTypeTest\\addType.ps1:1 char:1\r\n+ Add-Type \"$PSScriptRoot\\file1.cs\",\"$PSScriptRoot\\file2.cs\"\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : InvalidData: (:) [Add-Type], InvalidOperationException\r\n\r\n+ FullyQualifiedErrorId : COMPILER_ERRORS,Microsoft.PowerShell.Commands.AddTypeCommand\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\n\r\nName                           Value                                            \r\n----                           -----                                            \r\nPSVersion                      6.0.2                                            \r\nPSEdition                      Core                                             \r\nGitCommitId                    v6.0.2                                           \r\nOS                             Microsoft Windows 6.3.9600                       \r\nPlatform                       Win32NT                                          \r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}                          \r\nPSRemotingProtocolVersion      2.3                                              \r\nSerializationVersion           1.1.0.1                                          \r\nWSManStackVersion              3.0                                              \r\n```\r\n",
  "closed_at": "2018-05-31T13:56:02Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Windows PowerShell Add-Type is based on CodeDom, PowerShell Core Add-Type was fully reimplemented based on Roslyn and we can not expect that they will have the same behavior. Right questions is - should this sample work in PowerShell Core? And yes, this works for me with latest builds.",
      "created_at": "2018-05-28T17:46:40Z",
      "updated_at": "2018-05-28T17:46:40Z"
    },
    {
      "author": "alx9r",
      "author_association": "NONE",
      "body": ">And yes, this works for me with latest builds.\r\n\r\nThanks @iSazonov.  It looks like the \"fix\" occurred between 6.1.0-preview.2 and 6.1.0-preview.688.\r\n\r\n>Right questions is - should this sample work in PowerShell Core?\r\n\r\nSo, I'm wondering, should this work?  It's the best way I have found to add small custom .net types to PowerShell modules.  Without support for multiple .cs files, having implementations for such types becomes painful when they span multiple files.  I'm wondering whether I should expect to rely on `Add-Type` handling multiple .cs files like this in future.\r\n\r\n",
      "created_at": "2018-05-28T21:15:33Z",
      "updated_at": "2018-05-28T21:15:33Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": ":-) I asked and answered - yes. We specially add support compiling many files in batch.\r\nMain idea was - to support as many Roslyn features as possible.",
      "created_at": "2018-05-29T03:14:30Z",
      "updated_at": "2018-05-29T03:15:24Z"
    },
    {
      "author": "alx9r",
      "author_association": "NONE",
      "body": "I see.  That sounds pretty great.  Thanks @iSazonov. ",
      "created_at": "2018-05-31T13:56:02Z",
      "updated_at": "2018-05-31T13:56:02Z"
    }
  ],
  "created_at": "2018-05-28T00:49:48Z",
  "labels": [
    "Issue-Question",
    "Resolution-Answered",
    "WG-Cmdlets-Utility"
  ],
  "number": 6947,
  "state": "closed",
  "title": "Add-Type fails for a list of .cs files",
  "updated_at": "2018-05-31T13:56:03Z"
}