{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9328",
  "author": "DanAtkinson",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n\r\n-->\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\n(Get-WebRequest).Count\r\n```\r\n\r\n# Expected behavior\r\n\r\n```none\r\nAn integer value indicating the number of active IIS requests that are currently being run.\r\n```\r\n\r\n# Actual behavior\r\n\r\n```none\r\nGet-WebRequest : The term 'Get-WebRequest' is not recognized as the name of a cmdlet, function, script file, or operable program. \r\nCheck the spelling of the name, or if a path was included, verify that the path is correct and try again.                         \r\nAt line:1 char:2                                                                                                                  \r\n+ (Get-WebRequest).Count                                                                                                          \r\n+  ~~~~~~~~~~~~~~                                                                                                                 \r\n+ CategoryInfo          : ObjectNotFound: (Get-WebRequest:String) [], CommandNotFoundException                                    \r\n+ FullyQualifiedErrorId : CommandNotFoundException                                                                                \r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.2.0\r\nPSEdition                      Core\r\nGitCommitId                    6.2.0\r\nOS                             Microsoft Windows 10.0.17763\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\nAs per the [documentation](https://docs.microsoft.com/en-us/powershell/module/webadministration/get-webrequest), `Get-WebRequest` should be valid. I appreciate that PowerShell core should be OS agnostic but there is no information on when it was dropped, why, or what to replace it with.\r\n\r\nI think I understand the problem in that the `WebAdministration` module is not installed and, as such, this doesn't work.\r\n\r\nI have tried installing the missing module with `Import-Module WebAdministration` but get the below error:\r\n```none\r\nImport-Module : Module 'C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules\\WebAdministration\\WebAdministration.psd1' does not support current PowerShell edition 'Core'. Its supported editions are 'Desktop'. Use 'Import-Module -SkipEditionCheck' to ignore the compatibility of this module.                                                                                                                                 \r\nAt line:1 char:1                                                                                                                           \r\n+ Import-Module WebAdministration                                                                                                          \r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                          \r\n+ CategoryInfo          : ResourceUnavailable: (C:\\WINDOWS\\system32\\u2026Administration.psd1:String) [Import-Module], InvalidOperationExcep\r\ntion                                                                                                                                       \r\n+ FullyQualifiedErrorId : Modules_PSEditionNotSupported,Microsoft.PowerShell.Commands.ImportModuleCommand                                  \r\n```\r\nDoing `Import-Module WebAdministration -SkipEditionCheck` results in the following error:\r\n\r\n```none\r\nImport-Module : Could not load type 'System.Management.Automation.PSSnapIn' from assembly 'System.Management.Automation, Version=6.2.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.\r\nAt line:1 char:1\r\n+ Import-Module WebAdministration -SkipEditionCheck\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : NotSpecified: (:) [Import-Module], TypeLoadException\r\n+ FullyQualifiedErrorId : System.TypeLoadException,Microsoft.PowerShell.Commands.ImportModuleCommand\r\n```\r\n\r\nSo is there really no way to access the [`WebAdministration`](https://docs.microsoft.com/en-us/powershell/module/webadministration) modules from Windows PowerShell in PowerShell Core?\r\n\r\nThanks\r\n\r\n",
  "closed_at": "2019-04-11T03:20:31Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "PSSnapIns _predate_ PowerShell Modules by quite literal years and aren't supported anymore. I'm pretty sure they were deprecated with PS... version 2? Something along those lines?\r\n\r\nPS Core isn't able to support them, as far as I'm aware.. and whoever makes that module should ideally have rectified that in the intervening decade since their deprecation. :confused:",
      "created_at": "2019-04-09T12:41:08Z",
      "updated_at": "2019-04-09T12:41:44Z"
    },
    {
      "author": "DanAtkinson",
      "author_association": "NONE",
      "body": "@vexx32 The problem is that I can find no documentation on it either way. I've also had a look at the [`IISAdministration`](https://blogs.iis.net/iisteam/introducing-iisadministration-in-the-powershell-gallery) cmdlet which was only introduced a couple of years ago but with similar problems. Either this or `WebAdministration` would be fine but both have the same problems.\r\n\r\n",
      "created_at": "2019-04-09T12:49:15Z",
      "updated_at": "2019-04-09T12:49:39Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "You're right, I'm seeing plenty of documentation on how to use them even up to 5.1, and I was under the impression they were supposed to be deprecated and replaced with modules since v2 or v3 of PowerShell.\r\n\r\nPerhaps @SteveL-MSFT would know the history here. \ud83d\ude04 ",
      "created_at": "2019-04-09T12:56:21Z",
      "updated_at": "2019-04-09T12:56:21Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> I have tried installing the missing module with Import-Module WebAdministration but get the below error\r\n\r\nYou need to install RSAT. And I'm not sure that this module is compatible with PowerShell Core. Although MSFT team announced that the next milestone will aim for even greater compatibility (over 90% of modules). Until that you could use https://github.com/PowerShell/WindowsCompatibility",
      "created_at": "2019-04-09T18:05:59Z",
      "updated_at": "2019-04-09T18:06:18Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Specifically, the `WebAdministration` module is likely one that will not be compatible with PSCore6 nor PS7.  The reason is that the namespaces used by this module is not part of .NET Core 3.0.  Workaround is to use [WindowsCompatibility module](https://github.com/powershell/windowscompatibility)",
      "created_at": "2019-04-11T03:20:26Z",
      "updated_at": "2019-04-11T03:20:26Z"
    },
    {
      "author": "DanAtkinson",
      "author_association": "NONE",
      "body": "@iSazonov @SteveL-MSFT Thank you for the suggestion. I have tried using the WindowsCompatibility module but it doesn't appear to work. I have raised an issue on the WindowsCompatibility github.\r\n\r\nThank you anyway.",
      "created_at": "2019-04-11T09:07:21Z",
      "updated_at": "2019-04-11T09:07:51Z"
    }
  ],
  "created_at": "2019-04-09T11:51:21Z",
  "number": 9328,
  "state": "closed",
  "title": "Get-WebRequest is not recognized",
  "updated_at": "2019-04-11T09:07:51Z"
}