{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10331",
  "author": "SteveL-MSFT",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nAdd support to detect IO_REPARSE_TAG_APPEXECLINK as a type of link so that the target is displayed when using Get-ChildItem.  Also refactored the helper which used to have the more confusing but technically correct name IsNamedSurrogateReparsePoint() to IsReparsePointWithTarget() making it a bit more understandable.\r\n\r\nBefore\r\n\r\n```powershell\r\nPS> dir pwsh.exe\r\n\r\n\r\n    Directory: C:\\Users\\slee\\AppData\\Local\\Microsoft\\WindowsApps\r\n\r\nMode                LastWriteTime         Length Name\r\n----                -------------         ------ ----\r\n-a---l         4/15/2019  9:37 PM              0 pwsh.exe\r\n```\r\n\r\nAfter\r\n```powershell\r\nPS> dir pwsh.exe\r\n\r\n\r\n    Directory: C:\\Users\\slee\\AppData\\Local\\Microsoft\\WindowsApps\r\n\r\nMode                 LastWriteTime         Length Name\r\n----                 -------------         ------ ----\r\nla---           4/15/2019  9:37 PM              0 pwsh.exe -> C:\\Program Files\\WindowsApps\\Microsoft.PowerShell_6.2.0.1\r\n                                                  _neutral__8wekyb3d8bbwe\\pwsh.exe\r\n```\r\n\r\n## PR Context\r\n\r\nSome users complain that dir shows a 0 byte size file when it clearly is not.  Fix here doesn't include getting the real file size since this is not a symlink.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2019-08-14T00:45:41Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Will the PR fix #9970?",
      "created_at": "2019-08-09T11:08:05Z",
      "updated_at": "2019-08-09T11:08:05Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov this doens't fix https://github.com/PowerShell/PowerShell/issues/9970 but the change here could be used to fix that since we can detect this type of reparse point now",
      "created_at": "2019-08-09T19:20:00Z",
      "updated_at": "2019-08-09T19:20:00Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov let me add a test with some tracing to see if AzDO's has a default installed AppX that comes with Windows we can test against.  Ignore next commit for now.",
      "created_at": "2019-08-13T16:13:58Z",
      "updated_at": "2019-08-13T16:13:58Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov as expected, the Windows image on AzDevOps doesn't have any Windows Apps installed.  I added a test that will work locally on Windows if it finds an app installed.",
      "created_at": "2019-08-13T19:08:58Z",
      "updated_at": "2019-08-13T19:08:58Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Static analysis failure is due to Coveralls.io outage",
      "created_at": "2019-08-13T22:45:45Z",
      "updated_at": "2019-08-13T22:45:45Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.0.0-preview.3` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.0.0-preview.3)\n",
      "created_at": "2019-08-20T22:36:45Z",
      "updated_at": "2019-08-20T22:36:45Z"
    },
    {
      "author": "sba923",
      "author_association": "CONTRIBUTOR",
      "body": "How come I don't see the expected behavior with PowerShell 7.1.2?\r\n\r\n![image](https://user-images.githubusercontent.com/12860484/108848271-15df9e00-75e1-11eb-95cb-c1be01995025.png)\r\n\r\nDid I miss something?",
      "created_at": "2021-02-23T13:12:15Z",
      "updated_at": "2021-02-23T13:12:15Z"
    },
    {
      "author": "KalleOlaviNiemitalo",
      "author_association": "NONE",
      "body": "@sba923, the same works fine for me in PowerShell 7.1.1 and 7.1.2. Perhaps you'd better file a new issue with your operating system version and the output of `fsutil reparsepoint query C:\\Users\\steph\\AppData\\Local\\Microsoft\\WindowsApps\\wt.exe`.",
      "created_at": "2021-02-23T13:51:30Z",
      "updated_at": "2021-02-23T13:51:30Z"
    },
    {
      "author": "KalleOlaviNiemitalo",
      "author_association": "NONE",
      "body": "Also, I'm not getting the colors that you have in your screen shot. Perhaps the component that adds those colors does not support displaying the targets of links.",
      "created_at": "2021-02-23T13:54:15Z",
      "updated_at": "2021-02-23T13:54:15Z"
    },
    {
      "author": "sba923",
      "author_association": "CONTRIBUTOR",
      "body": "Before I go on with opening a new issue: do you confirm that what I'm seeing is incorrect?\r\n\r\nI'm seeing this on both 10.0.18363.1316 and 10.0.19042.804.",
      "created_at": "2021-02-23T13:54:17Z",
      "updated_at": "2021-02-23T13:54:17Z"
    },
    {
      "author": "KalleOlaviNiemitalo",
      "author_association": "NONE",
      "body": "If the following command displays the target OK, then it proves that PowerShell successfully parses the app execution alias reparse point, and the target info is instead lost in output formatting.\r\n\r\n```\r\nPS C:\\> Get-Item -LiteralPath:\"${Env:LOCALAPPDATA}\\Microsoft\\WindowsApps\\wt.exe\" | Format-List\r\n\r\n    Directory: C:\\Users\\REDACTED\\AppData\\Local\\Microsoft\\WindowsApps\r\n\r\nName           : wt.exe\r\nLength         : 0\r\nCreationTime   : 22.2.2021 13.07.47\r\nLastWriteTime  : 22.2.2021 13.07.47\r\nLastAccessTime : 22.2.2021 13.07.47\r\nMode           : la---\r\nLinkType       : AppExeCLink\r\nTarget         : C:\\Program Files\\WindowsApps\\Microsoft.WindowsTerminalPreview_1.6.10412.0_x64__8wekyb3d8bbwe\\wt.exe\r\nVersionInfo    : File:             C:\\Users\\REDACTED\\AppData\\Local\\Microsoft\\WindowsApps\\wt.exe\r\n                 InternalName:\r\n                 OriginalFilename:\r\n                 FileVersion:\r\n                 FileDescription:\r\n                 Product:\r\n                 ProductVersion:\r\n                 Debug:            False\r\n                 Patched:          False\r\n                 PreRelease:       False\r\n                 PrivateBuild:     False\r\n                 SpecialBuild:     False\r\n                 Language:\r\n```",
      "created_at": "2021-02-23T13:58:10Z",
      "updated_at": "2021-02-23T13:58:10Z"
    },
    {
      "author": "sba923",
      "author_association": "CONTRIBUTOR",
      "body": "> Also, I'm not getting the colors that you have in your screen shot. Perhaps the component that adds those colors does not support displaying the targets of links.\r\n\r\nBingo! I get this from `pwsh -noprofile`:\r\n\r\n![image](https://user-images.githubusercontent.com/12860484/108853753-6659fa00-75e7-11eb-9a52-2d7519cb1265.png)\r\n\r\n\r\nAnd then this:\r\n\r\n![image](https://user-images.githubusercontent.com/12860484/108853994-a620e180-75e7-11eb-9174-2c5ad9293a62.png)\r\n\r\nNow I now where to the report the issue, thanks!\r\n\r\nEdit: Opened https://github.com/Davlind/PSColor/issues/29 ",
      "created_at": "2021-02-23T13:59:31Z",
      "updated_at": "2021-02-23T14:02:51Z"
    },
    {
      "author": "sba923",
      "author_association": "CONTRIBUTOR",
      "body": "> If the following command displays the target OK, then it proves that PowerShell successfully parses the app execution alias reparse point, and the target info is instead lost in output formatting.\r\n> \r\n\r\nConfirmation:\r\n\r\n````\r\nPS> Get-Item -LiteralPath:\"${Env:LOCALAPPDATA}\\Microsoft\\WindowsApps\\wt.exe\" | Format-List\r\n\r\n    Directory: C:\\Users\\sbarizien\\AppData\\Local\\Microsoft\\WindowsApps\r\n\r\nName           : wt.exe\r\nLength         : 0\r\nCreationTime   : 2020-12-09 21:00:36\r\nLastWriteTime  : 2021-02-12 08:31:30\r\nLastAccessTime : 2021-02-12 08:31:30\r\nMode           : la---\r\nLinkType       : AppExeCLink\r\nTarget         : C:\\Program Files\\WindowsApps\\Microsoft.WindowsTerminal_1.5.10411.0_x64__8wekyb3d8bbwe\\wt.exe\r\nVersionInfo    : File:             C:\\Users\\sbarizien\\AppData\\Local\\Microsoft\\WindowsApps\\wt.exe\r\n                 InternalName:\r\n                 OriginalFilename:\r\n                 FileVersion:\r\n                 FileDescription:\r\n                 Product:\r\n                 ProductVersion:\r\n                 Debug:            False\r\n                 Patched:          False\r\n                 PreRelease:       False\r\n                 PrivateBuild:     False\r\n                 SpecialBuild:     False\r\n                 Language:\r\n````\r\n\r\nBTW, I think the `VersionInfo` property for such an item should not contain a valid object containing dummy values, but `$null`. But that's another issue....\r\n",
      "created_at": "2021-02-23T14:54:59Z",
      "updated_at": "2021-02-23T14:54:59Z"
    },
    {
      "author": "thorstenbutz",
      "author_association": "NONE",
      "body": "Support for the appx execution aliases (AppExecLink) are gone in 7.2.0 and later. Worked fine in 7.1.x. I could not find any change log entry or discussion. Is that behaviour intentional? \r\n\r\nCheck yourself: \r\nGet-Item \"$home\\AppData\\Local\\Microsoft\\WindowsApps\\*.exe\" | Select-Object -Property Name,Target",
      "created_at": "2022-02-07T17:04:38Z",
      "updated_at": "2022-02-07T17:04:38Z"
    },
    {
      "author": "sba923",
      "author_association": "CONTRIBUTOR",
      "body": "This could be what breaks my `whatis.ps1`:\r\n\r\n![image](https://user-images.githubusercontent.com/12860484/152837637-bdcb17a9-61e5-42ac-a0ee-66fbc277bcc9.png)\r\n\r\n\r\n[whatis.zip](https://github.com/PowerShell/PowerShell/files/8017283/whatis.zip)\r\n\r\n",
      "created_at": "2022-02-07T17:14:36Z",
      "updated_at": "2022-02-07T17:14:36Z"
    },
    {
      "author": "KalleOlaviNiemitalo",
      "author_association": "NONE",
      "body": "@thorstenbutz the appx link target feature was apparently removed in <https://github.com/PowerShell/PowerShell/pull/16044> because the AppX team did not want to document the reparse point data format and the PowerShell team did not want to depend on undocumented aspects.",
      "created_at": "2022-02-07T17:36:57Z",
      "updated_at": "2022-02-07T17:39:17Z"
    },
    {
      "author": "sba923",
      "author_association": "CONTRIBUTOR",
      "body": "The side effect of this change is that one can no longer determine the `VersionInfo` for the AppX reparse point's target see now-broken code in my \r\n[whatis.zip](https://github.com/PowerShell/PowerShell/files/8017749/whatis.zip)\r\n ",
      "created_at": "2022-02-07T18:23:55Z",
      "updated_at": "2022-02-07T18:23:55Z"
    }
  ],
  "created_at": "2019-08-09T03:05:30Z",
  "number": 10331,
  "state": "closed",
  "title": "Add support for AppX reparse points",
  "updated_at": "2022-02-07T18:23:55Z"
}