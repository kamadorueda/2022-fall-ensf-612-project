{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5153",
  "author": "ghost",
  "body": ".NET Remoting proxy objects do not work in PowerShell (version 5.1.15063.608). \r\n\r\nThe following C# code, where `APx500` is an API that uses .NET Remoting, and inherits from `MarshalByRefObject` works flawlessly:\r\n\r\n```\r\n// using AudioPrecision.API;\r\nvar ap = new APx500(false);\r\nap.Visible = true;\r\nap.OpenProject(\"file.approjx\");\r\nap.ShowMeasurement(0, \"Stepped Frequency Sweep\");\r\nISteppedFrequencySweepMeasurement sweep = ap.SteppedFrequencySweep;\r\nISteppedFrequencySweepGenerator generator = sweep.Generator;\r\n```\r\n\r\nThe equivalent PowerShell call fails when we attempt to use objects from `ap` properties:\r\n\r\n```\r\n[System.Reflection.Assembly]::LoadWithPartialName(\"AudioPrecision.API\")\r\n$ap = New-Object AudioPrecision.API.APx500 -ArgumentList $false\r\n$ap.Visible = $true\r\n$ap.OpenProject(\"file.approjx\")\r\n$ap.ShowMeasurement(0, \"Stepped Frequency Sweep\") \r\n$sweep = $ap.SteppedFrequencySweep #$sweep is populated with a generic MarshalByRefObject\r\n$generator = $sweep.Generator #generator is populated with null\r\n```\r\n\r\nInstead of getting a proxy for `ISteppedFrequencySweepMeasurement`, the `$sweep` object is a generic `MarshalByRefObject`. Calling Get-Member on the $sweep object:\r\n```\r\nTypeName   : System.MarshalByRefObject\r\nName       : CreateObjRef\r\nMemberType : Method\r\nDefinition : System.Runtime.Remoting.ObjRef CreateObjRef(type requestedType)\r\n\r\nTypeName   : System.MarshalByRefObject\r\nName       : Equals\r\nMemberType : Method\r\nDefinition : bool Equals(System.Object obj)\r\n\r\nTypeName   : System.MarshalByRefObject\r\nName       : GetHashCode\r\nMemberType : Method\r\nDefinition : int GetHashCode()\r\n\r\nTypeName   : System.MarshalByRefObject\r\nName       : GetLifetimeService\r\nMemberType : Method\r\nDefinition : System.Object GetLifetimeService()\r\n\r\nTypeName   : System.MarshalByRefObject\r\nName       : GetType\r\nMemberType : Method\r\nDefinition : type GetType()\r\n\r\nTypeName   : System.MarshalByRefObject\r\nName       : InitializeLifetimeService\r\nMemberType : Method\r\nDefinition : System.Object InitializeLifetimeService()\r\n\r\nTypeName   : System.MarshalByRefObject\r\nName       : ToString\r\nMemberType : Method\r\nDefinition : string ToString()\r\n```\r\n\r\nYou also cannot cast the proxy objects back to their appropriate type:\r\n```\r\n$sweep = [AudioPrecision.API.ISteppedFrequencySweepMeasurement] $ap.SteppedFrequencySweep\r\n\r\nCannot convert the \"AudioPrecision.APx500.UserModel.SteppedFrequencySweepMeasurement\" value of type \"System.MarshalByRefObject\" \r\nto type \"AudioPrecision.API.ISteppedFrequencySweepMeasurement\".\r\nAt C:\\GitProjects\\APScriptingTests\\PowershellTest\\altScript2.ps1:6 char:1\r\n+ $sweep = [AudioPrecision.API.ISteppedFrequencySweepMeasurement] $ap.S ...\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : InvalidArgument: (:) [], RuntimeException\r\n    + FullyQualifiedErrorId : ConvertToFinalInvalidCastException\r\n\r\n```",
  "closed_at": "2017-10-18T02:30:03Z",
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "This repo is only for PSCore6 issues.  However, I don't think this was ever supported.",
      "created_at": "2017-10-18T02:30:03Z",
      "updated_at": "2017-10-18T02:30:03Z"
    },
    {
      "author": "ghost",
      "author_association": "NONE",
      "body": "Quick note for other people to hit this, you can work around the issue using late binding:\r\n```\r\n$ap.ShowMeasurement(0, \"Stepped Frequency Sweep\") \r\n$sweep = [AudioPrecision.API.APx500].GetProperty(\"SteppedFrequencySweep\").GetValue($ap)\r\n$generator = [AudioPrecision.API.ISteppedFrequencySweepMeasurementBase].GetProperty(\"Generator\").GetValue($sweep)\r\n```",
      "created_at": "2017-10-18T02:47:32Z",
      "updated_at": "2017-10-18T02:47:32Z"
    },
    {
      "author": "fjf2002",
      "author_association": "NONE",
      "body": "@SZ-MSFT That tip with reflection helped a lot, thanks!",
      "created_at": "2020-01-10T09:02:09Z",
      "updated_at": "2020-01-10T09:02:09Z"
    }
  ],
  "created_at": "2017-10-18T01:14:08Z",
  "labels": [
    "Resolution-Won't Fix"
  ],
  "number": 5153,
  "state": "closed",
  "title": "PowerShell does not work with .NET Remoting Proxy Objects (MarshalByRefObject)",
  "updated_at": "2020-01-10T09:02:09Z"
}