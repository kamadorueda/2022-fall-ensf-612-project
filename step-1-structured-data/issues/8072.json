{
  "_url": "https://github.com/PowerShell/PowerShell/issues/8072",
  "author": "mklement0",
  "body": "<sup>Follow-up from a conversation with @SteveL-MSFT in #7989.</sup>\r\n\r\nPowerShell's existing CLI has a number of problems, relating to:\r\n\r\n* (a) unconditionally dot-sourcing `$PROFILE`, making for unpredictable execution environments - see #992\r\n* (b) parameter syntax and parsing, both in general and with respect to fitting into the Unix world - see #3743\r\n* (c) unhelpful mapping of PowerShell's output streams to the outside world's standard streams - see #7989\r\n\r\nThe existing CLI cannot be fixed so as not to break backward compatibility, but [it was agreed that (a) would be fixed by way of a _new, separate executable/symlink_](https://github.com/PowerShell/PowerShell/issues/992#issuecomment-384455760), notably for use in shebang lines of stand-alone shell scripts on Unix-like platforms.\r\n\r\nMore broadly, however, this new CLI is an opportunity to fix (b) and (c) as well, which would go a long way toward endearing PowerShell to CLI-savvy Unix users.\r\n\r\nEssentially, it would provide a new CLI that is a well-behaved cross-platform citizen with sane defaults. \r\n(As such the profile-loading behavior should mimic Bash's - only load `$PROFILE` in _interactive_ shells by default).\r\n\r\nNote: The new behavior needn't be a separate _binary_: The behavior variation could be triggered by invocation via _symlink_ whose name indicates the need to apply alternate behavior, at least on Unix-like platforms. (Invoking .NET Core executables via symlinks on Windows is not yet supported, but will hopefully come in .NET Core 3.0 - see https://github.com/dotnet/core-setup/issues/4080)\r\n\r\nGiven the then-broader scope, the originally proposed name `pwsh-np` needs revising, however.\r\n\r\nEnvironment data\r\n----------------\r\n\r\nWritten as of:\r\n\r\n```powershell\r\nPowerShell Core 6.1.0\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Whatever name we choose, we also need to consider `pwsh-np-preview`",
      "created_at": "2018-10-19T00:53:21Z",
      "updated_at": "2018-10-19T00:53:21Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "I don't understand, @SteveL-MSFT: why `*-preview`?",
      "created_at": "2018-10-19T02:46:44Z",
      "updated_at": "2018-10-19T02:46:44Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@mklement0 we want to maintain a consistent separation of the stable and preview releases so I would think we'd have `pwsh`, `pwsh-preview` like we have today, along with `pwsh-np` and `pwsh-np-preview`",
      "created_at": "2018-10-19T05:17:02Z",
      "updated_at": "2018-10-19T05:17:02Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Ah, of course, thanks @SteveL-MSFT.\r\n\r\nAny thoughts on a suitable new name that reflects the scope and intent of the changes?\r\n\r\n`psh`, perhaps? (OK, just kidding).\r\n\r\nNaming is tricky, because the name should be kept short, so I fear it'll come down to documenting things well.\r\n\r\n`pwshc`? (with the `c` standing for (a proper) CLI).\r\n\r\n\r\n\r\n",
      "created_at": "2018-10-21T02:45:21Z",
      "updated_at": "2018-10-21T21:36:02Z"
    },
    {
      "author": "tbakerweb",
      "author_association": "NONE",
      "body": "Hey @SteveL-MSFT,  It isn't clear in this issue, could you please specify if/when/where the Streams output to the associated File Descriptors from #7989 will show up.  I'm very interested in this feature and was quite sad when I realized it didn't already exist :(.\r\n\r\nThanks for your contributions!",
      "created_at": "2020-02-02T21:39:03Z",
      "updated_at": "2020-02-02T21:39:03Z"
    }
  ],
  "created_at": "2018-10-18T19:54:30Z",
  "number": 8072,
  "state": "open",
  "title": "Make the new, future no-profile CLI for use in shebang lines implement other CLI fixes too",
  "updated_at": "2020-02-02T21:39:03Z"
}