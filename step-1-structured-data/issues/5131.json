{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5131",
  "author": "markekraus",
  "body": "In most situations, the default behavior of `Export-Csv` is undesirable. Its usage as an object Import and Export is limited to begin with. What it is more commonly used for (in my experience, anyway) is to produce CSV files either to be  parsed by other automated processes outside the PowerShell ecosystem or to be used in Excel as human parsable reports. The initial line with the type information is undesirable in those situations. \r\n\r\nThis is a common \"gotcha\" for PowerShell novices. It violates the Principle of least astonishment.\r\n\r\nI'm curious how many profiles have this `$PSDefaultParameterValues['Export-CSV:NoTypeInformation'] = $true`.  I know I have that in my work profile and at the top of so many scripts.\r\n\r\nIt's a minor annoyance and a breaking change, but I just don't think the default behavior is actually useful.\r\n\r\nMy tentative proposal is to leave `-NoTypeInformation` in for backwards compatibility but make it default and add a `-IncludeTypeInformation` switch to revert to legacy behavior per request.\r\n\r\nThis issue is for discussion, yays, nays, and possible alternatives for a proposed solution.",
  "closed_at": "2017-10-21T09:41:47Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Do anybody use the type information?",
      "created_at": "2017-10-16T10:38:45Z",
      "updated_at": "2017-10-16T10:38:45Z"
    },
    {
      "author": "ww40",
      "author_association": "NONE",
      "body": "I can't say I've had a use for the type information in my outputs when I use `Export-Csv`",
      "created_at": "2017-10-16T10:50:12Z",
      "updated_at": "2017-10-16T10:50:12Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov I have only ever used it for academic purposes, just to see what it does. It doesn't even re-serialize objects upon import, even simple objects like a hashtable. \r\n\r\nMaybe it's useful to know what the object was before it was exported? But I've never personally seen it used in that manner. Usually when a user wants to export and import objects and attempt to preserve type data they will used `*-Clixml` cmdlets, JSON, or a custom serializer.",
      "created_at": "2017-10-16T11:17:15Z",
      "updated_at": "2017-10-16T11:17:15Z"
    },
    {
      "author": "Jawz84",
      "author_association": "CONTRIBUTOR",
      "body": "Agree fully with @markekraus here. Having -NoTypeinformation as default would be a good breaking change. ++ For -WithTypeInformation",
      "created_at": "2017-10-16T11:54:28Z",
      "updated_at": "2017-10-16T11:54:28Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I believe the design was with PSObject type in mind to export/import. For other types it seems there's no point in doing that.",
      "created_at": "2017-10-16T12:05:46Z",
      "updated_at": "2017-10-16T12:05:46Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov maybe, but it doesn't even preserve custom PSTypeNames:\r\n\r\n```powershell\r\n[PSCustomObject]@{\r\n    PSTypeName = 'My.Custom.Object'\r\n    Column1 = 'values1'\r\n} | Export-Csv C:\\temp\\csv.csv\r\n$import = Import-Csv C:\\temp\\csv.csv\r\n$import.PSObject.TypeNames\r\n```\r\n\r\n```none\r\nCSV:My.Custom.Object\r\n```\r\n\r\nIt already pulls in as a PSCustomObject:\r\n\r\n```powershell\r\n$import[0].GetType().fullname\r\n```\r\n\r\n```none\r\nSystem.Management.Automation.PSCustomObject\r\n```\r\n\r\nI should note it does that for all objects exported and imported through `*-Csv`\r\n\r\n```powershell\r\n@{\r\n    Column1 = 'values1'\r\n} | Export-Csv C:\\temp\\csv.csv\r\n$import = Import-Csv C:\\temp\\csv.csv\r\n$import.PSObject.TypeNames\r\n$import[0].GetType().fullname\r\n```\r\n\r\n```none\r\nCSV:System.Collections.Hashtable\r\nSystem.Management.Automation.PSCustomObject\r\n```\r\n\r\nso I'm still left wondering what the use-case is.",
      "created_at": "2017-10-16T12:13:28Z",
      "updated_at": "2017-10-16T12:15:28Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@markekraus By the way, it might make sense to fix. Could you please open new Issue?",
      "created_at": "2017-10-16T12:20:00Z",
      "updated_at": "2017-10-16T12:20:35Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov Fix in which way?",
      "created_at": "2017-10-16T12:23:12Z",
      "updated_at": "2017-10-16T12:23:12Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "To recover correct object types in your type.",
      "created_at": "2017-10-16T12:33:18Z",
      "updated_at": "2017-10-16T12:33:18Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov agreed, it might be worth making that breaking change in addition to switching the default behavior.",
      "created_at": "2017-10-16T12:38:11Z",
      "updated_at": "2017-10-16T12:38:11Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I think it's an independent case.",
      "created_at": "2017-10-16T12:48:34Z",
      "updated_at": "2017-10-16T12:48:34Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov agreed. I meant that it should be tracked as a separate issue but was worth also doing, IMO.",
      "created_at": "2017-10-16T12:55:15Z",
      "updated_at": "2017-10-16T12:55:15Z"
    },
    {
      "author": "ArtisanByteCrafter",
      "author_association": "NONE",
      "body": "Agreed. If wanted, I'd suggest a -IncludeTypeInformation switch.",
      "created_at": "2017-10-16T14:33:37Z",
      "updated_at": "2017-10-16T14:33:37Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@artvandelay440 agreed. That is a better switch name and matches other switch parameters.",
      "created_at": "2017-10-16T15:18:32Z",
      "updated_at": "2017-10-16T15:18:32Z"
    },
    {
      "author": "Jawz84",
      "author_association": "CONTRIBUTOR",
      "body": "@artvandelay440 I think that is a better switch name. Good suggestion.",
      "created_at": "2017-10-16T15:23:27Z",
      "updated_at": "2017-10-16T15:23:27Z"
    },
    {
      "author": "megamorf",
      "author_association": "CONTRIBUTOR",
      "body": "+1\r\n\r\nIt's always been an annoyance. Whenever you wanted to post-process a csv export and forgot to disable the type information you were forced to export it again or manually edit the file, urgh.",
      "created_at": "2017-10-16T17:51:31Z",
      "updated_at": "2017-10-16T19:57:55Z"
    },
    {
      "author": "amdove",
      "author_association": "NONE",
      "body": "Definitely needs to be removed as the default behavior. I know to add -NoTypeInformation, and it is frustrating every time I forget. ",
      "created_at": "2017-10-16T18:00:18Z",
      "updated_at": "2017-10-16T18:00:18Z"
    },
    {
      "author": "Pome-ro",
      "author_association": "NONE",
      "body": "This trips me up all the time. I would like to put my hat in the ring for `-notypeinformation` being default",
      "created_at": "2017-10-16T18:34:38Z",
      "updated_at": "2017-10-16T18:34:38Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov #5134 for the import and PSTypeName issue",
      "created_at": "2017-10-16T19:59:35Z",
      "updated_at": "2017-10-16T19:59:35Z"
    },
    {
      "author": "murrahjm",
      "author_association": "NONE",
      "body": "I am 100% behind this change. Simpler is better. ",
      "created_at": "2017-10-16T20:10:36Z",
      "updated_at": "2017-10-16T20:10:36Z"
    },
    {
      "author": "smooochy",
      "author_association": "NONE",
      "body": "+1\r\n\r\nMaybe just extend the functionality of -Verbose to include the type information instead of adding a separate -IncludeTypeInformation switch? Just a thought.",
      "created_at": "2017-10-16T20:15:27Z",
      "updated_at": "2017-10-16T20:15:27Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@smooochy `-Verbose` is usually intended for verbose console output. I think using it to add the type information to the output file would be a bit anti-pattern.",
      "created_at": "2017-10-16T20:29:34Z",
      "updated_at": "2017-10-16T20:29:34Z"
    },
    {
      "author": "Alcon835",
      "author_association": "NONE",
      "body": "+1 ",
      "created_at": "2017-10-16T21:09:19Z",
      "updated_at": "2017-10-16T21:09:19Z"
    },
    {
      "author": "91jme",
      "author_association": "NONE",
      "body": "+1\r\n\r\nThis extra information shouldn't be part of the default output. Agreed on adding switch to include it if needed.",
      "created_at": "2017-10-16T21:39:41Z",
      "updated_at": "2017-10-16T21:39:41Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "I have some demo code available if anyone wants to see the changes:\r\n\r\nhttps://github.com/PowerShell/PowerShell/compare/master...markekraus:ExportCsvNoTypeInformation\r\n\r\nNote: this also affects `ConvertTo-Csv` but I can't see the original default behavior being any more useful in that command either. If it is, it can easily be adjusted.",
      "created_at": "2017-10-16T22:00:48Z",
      "updated_at": "2017-10-16T22:00:48Z"
    },
    {
      "author": "jongross4",
      "author_association": "NONE",
      "body": "+1\r\n\r\nSuggest adding the includetypeinfo switch.  Ignore existing notypeinfo switches.",
      "created_at": "2017-10-17T01:05:44Z",
      "updated_at": "2017-10-17T01:05:44Z"
    },
    {
      "author": "thannett",
      "author_association": "NONE",
      "body": "I'd love to see this changed.  Is there any use case for having the type information?  I've never used it personally.",
      "created_at": "2017-10-17T02:59:40Z",
      "updated_at": "2017-10-17T02:59:40Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Wow, 137 votes - Flash mob?\r\n/cc @SteveL-MSFT ",
      "created_at": "2017-10-17T03:25:30Z",
      "updated_at": "2017-10-17T03:25:30Z"
    },
    {
      "author": "thannett",
      "author_association": "NONE",
      "body": "@iSazonov This got posted to /r/Powershell.  So yeah, kindof a flash mob :)",
      "created_at": "2017-10-17T04:22:34Z",
      "updated_at": "2017-10-17T04:22:34Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I appreciate the enthusiasm by the community :) ",
      "created_at": "2017-10-17T05:18:20Z",
      "updated_at": "2017-10-17T05:18:20Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Interesting, can we add a label to automatic post to Reddit for chosen discussions?",
      "created_at": "2017-10-17T05:29:38Z",
      "updated_at": "2017-10-17T05:29:38Z"
    },
    {
      "author": "thannett",
      "author_association": "NONE",
      "body": "Great idea.  You've got a very passionate community in Reddit.  It would be great to have the open source movement of Powershell extend to a larger community.",
      "created_at": "2017-10-17T05:43:08Z",
      "updated_at": "2017-10-17T05:43:08Z"
    },
    {
      "author": "evilmaverick",
      "author_association": "NONE",
      "body": "+1 \r\nIf you needed to know, you would know how to add the additional flag for type info.",
      "created_at": "2017-10-17T06:51:43Z",
      "updated_at": "2017-10-17T06:51:43Z"
    },
    {
      "author": "WithHolm",
      "author_association": "NONE",
      "body": "+1\r\nits a good thought when you think about it (serialisation of data, so you know what type to get back), but even then a jsonobject is better for this subject (or even clixml), but csv is in my book, mostly used to get data out as reports to be filled into another system or excel, so there is really no need for this.",
      "created_at": "2017-10-17T07:25:08Z",
      "updated_at": "2017-10-17T19:23:51Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov I could do that. ;) I think this one got traction because I advertised it on Reddit and twitter.. and.. because it is almost universally disliked feature of the language. I wanted to advertise it in the hopes that someone would provide feedback on how they actually use the default behavior.  So far, I guess no one does?\r\n\r\nAs for a label and auto-Reddit-Post, That would be something I could do. seems like the perfect job for PowerShell and [PSRAW](https://github.com/markekraus/PSRAW). \ud83d\ude04 ",
      "created_at": "2017-10-17T08:41:19Z",
      "updated_at": "2017-10-17T08:41:19Z"
    },
    {
      "author": "GHRoss",
      "author_association": "NONE",
      "body": "In my early experiences with PowerShell, I didn't know about -NoTypeInformation.\r\n\r\nI ended up including in my script something that would remove the first line of the exported CSV file to get rid of the type information!!\r\n\r\nI could not agree with this more.",
      "created_at": "2017-10-17T11:25:34Z",
      "updated_at": "2017-10-17T11:25:34Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee reviewed this and agree that the default behavior should be `-NoTypeInformation`.  However, we need to retain `-NoTypeInformation` to not break scripts already using it and document the change in behavior for scripts that haven't been using that switch.  We should also introduce a new switch to retain previous behavior.  `-IncludeTypeInformation` seems reasonable.  Documentation and new script analyzer rules will help mitigate existing scripts that may have been skipping or removing the type information line which will now no longer work correctly.\r\n",
      "created_at": "2017-10-19T05:27:46Z",
      "updated_at": "2017-10-19T05:27:46Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "For those following the thread: PR #5164",
      "created_at": "2017-10-19T09:45:26Z",
      "updated_at": "2017-10-19T09:45:26Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "`-NoTypeInformation:$false` should probably be equivalent to `-IncludeTypeInformation`.\r\n\r\nAnd maybe the we don't need the new option, a confusing double negative is hardly obvious, but if nobody uses it, then is adding a new option helping anyone?",
      "created_at": "2017-10-19T17:38:21Z",
      "updated_at": "2017-10-19T17:38:21Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "We could make an enhance to restore native type.",
      "created_at": "2017-10-19T17:57:47Z",
      "updated_at": "2017-10-19T17:57:47Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@lzybkr see #5134  may not be used now... but.. it could be improved so that it would be useful for light weight PSCustomObject Import/Export serialization. ",
      "created_at": "2017-10-19T18:05:06Z",
      "updated_at": "2017-10-19T18:05:06Z"
    },
    {
      "author": "shiftybit",
      "author_association": "NONE",
      "body": "I think this is a great idea. I'm constantly having to add the -NoTypeInformation switch every time I use Export-CSV",
      "created_at": "2017-10-20T19:17:19Z",
      "updated_at": "2017-10-20T19:17:19Z"
    }
  ],
  "created_at": "2017-10-16T09:24:57Z",
  "labels": [
    "Issue-Enhancement",
    "Issue-Discussion",
    "Resolution-Fixed",
    "Breaking-Change",
    "Committee-Reviewed",
    "WG-Cmdlets-Utility"
  ],
  "number": 5131,
  "state": "closed",
  "title": "-NoTypeInformation should be default on Export-Csv",
  "updated_at": "2017-10-21T09:42:12Z"
}