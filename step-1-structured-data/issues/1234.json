{
  "_url": "https://github.com/PowerShell/PowerShell/issues/1234",
  "author": "andschwa",
  "body": "- [ ] Remove unnecessary imports per #521\n- [x] Figure out better way to handle \"fake\" dependencies of ConsoleHost #1477\n- [ ] Use SMA reference assembly instead of project for better incremental recompilation\n- [ ] Fixup whitespace in new `project.json` files\n- [x] Rename `LINUX` to `UNIX` #1483 \n- [x] Remove unnecessary package installs in `Start-PSBootstrap` #1279\n- [x] Remove hard dependency on PowerShell caused by resgen #1344 \n- [x] ~~Ensure optimization is enabled~~\n- [ ] Rename build module functions #1233\n- [ ] Update manual step documentation\n- [x] OS specific modules #1701\n",
  "closed_at": "2016-10-04T20:17:12Z",
  "comments": [
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "@vors we talked about this briefly a week or two ago; what else was there?\n",
      "created_at": "2016-06-29T01:54:14Z",
      "updated_at": "2016-06-29T01:54:14Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "We are going to need a properly built SMA reference library. It's blocking the PSReadLine export as well.\n\n/cc @lzybkr \n",
      "created_at": "2016-06-29T20:44:40Z",
      "updated_at": "2016-06-29T20:44:40Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "@JamesWTruher built the reference assemblies for full that we publish to NuGet - hopefully we can reuse some of that process for PowerShell Core.\n",
      "created_at": "2016-06-29T20:50:13Z",
      "updated_at": "2016-08-17T05:31:16Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "For the rename from `LINUX` to `UNIX`, while not everyone is happy with the choice (some preferring `NIX`), I'll posit that [.NET Core](https://github.com/dotnet/coreclr/blob/c1181048d92afa49043cdd4ef50962eb2a949007/Documentation/building/unix-test-instructions.md) has been using \"Unix\" to mean Linux/OS X/FreeBSD etc., and so it would be more than reasonable to follow their example.\n",
      "created_at": "2016-07-15T17:40:01Z",
      "updated_at": "2016-07-15T17:40:01Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "I tested out the various `dotnet` options (`optimize`, `debugType`, etc.) and the only that made any real difference (on Windows) was compiling in `Debug` or `Release` configurations, where the latter was about 30% faster with `Get-Command`.\n\nFor reference, [this](https://github.com/dotnet/cli/blob/04f40f906dce2678d80fb9787e68de76ee6bf57e/src/dotnet/commands/dotnet-compile-csc/Program.cs) is how `dotnet` is passing options to Roslyn, and [this](https://github.com/dotnet/roslyn/blob/master/docs/compilers/CSharp/CommandLine.md) is what they mean.\n",
      "created_at": "2016-07-18T23:38:12Z",
      "updated_at": "2016-07-18T23:38:12Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "I've also verified that the Linux configuration does _not_ define `DEBUG` (we don't do it explicitly, and nothing is implicitly doing so), thus assertions are not performed, making every Linux build equivalent to a Release configuration on Windows.\n",
      "created_at": "2016-07-18T23:40:26Z",
      "updated_at": "2016-07-18T23:40:26Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "For what it's worth, the [default Release configuration](https://github.com/dotnet/cli/blob/04f40f906dce2678d80fb9787e68de76ee6bf57e/src/Microsoft.DotNet.ProjectModel/ProjectReader.cs#L363) created by `dotnet` _does_ enable optimizations.\n",
      "created_at": "2016-07-18T23:53:51Z",
      "updated_at": "2016-07-18T23:53:51Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "This was a meta issue that is no longer required, closing.\n",
      "created_at": "2016-10-04T20:17:12Z",
      "updated_at": "2016-10-04T20:17:12Z"
    }
  ],
  "created_at": "2016-06-29T01:51:35Z",
  "number": 1234,
  "state": "closed",
  "title": "Clean up build dependencies",
  "updated_at": "2016-10-04T20:17:12Z"
}