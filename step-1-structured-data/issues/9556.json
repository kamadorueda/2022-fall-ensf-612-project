{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9556",
  "author": "vexx32",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n\r\n-->\r\n\r\n# Brief Summary\r\n\r\nWhen there are no standard validation / other parameter attributes that are defined in S.M.A applied to a function parameter, the parameter does not record _any_ attributes. (The exception is `[Parameter()]`, which does not change the behaviour even if it is added.)\r\n\r\n# Steps to reproduce\r\n\r\n## Setup\r\n\r\n```powershell\r\n# Define attribute classes\r\nclass PSTagsAttribute : Attribute {\r\n    [string[]] $Tags\r\n    PSTagsAttribute([string[]] $Tags) {\r\n        $this.Tags = $Tags\r\n    }\r\n\r\n    PSTagsAttribute() {}\r\n}\r\n\r\nAdd-Type -TypeDefinition @\"\r\nusing System;\r\n\r\npublic class TagsAttribute : Attribute\r\n{\r\n    public TagsAttribute(string[] tags)\r\n    {\r\n        this.Tags = tags;\r\n    }\r\n    public TagsAttribute()\r\n    {\r\n    }\r\n\r\n    public string[] Tags { get; set; }\r\n}\r\n\"@\r\n# Define functions\r\n\r\nfunction Get-PSTagsA {\r\n    [CmdletBinding()]\r\n    param(\r\n        [Parameter()]\r\n        [PSTags('Tag1')]\r\n        $Tags\r\n    )\r\n    Get-Variable -Name Tags | Select-Object -Property *\r\n}\r\n\r\nfunction Get-PSTagsB {\r\n    [CmdletBinding()]\r\n    param(\r\n        [Parameter()]\r\n        [PSTags('Tag1')]\r\n        [ValidateSet('a','b','c')]\r\n        $Tags\r\n    )\r\n    Get-Variable -Name Tags | Select-Object -Property *\r\n}\r\n\r\nfunction Get-TagsA {\r\n    [CmdletBinding()]\r\n    param(\r\n        [Parameter()]\r\n        [Tags('Tag1')]\r\n        $Tags\r\n    )\r\n    Get-Variable -Name Tags | Select-Object -Property *\r\n}\r\n\r\nfunction Get-TagsB {\r\n    [CmdletBinding()]\r\n    param(\r\n        [Parameter()]\r\n        [Tags('Tag1')]\r\n        [ValidateSet('a','b','c')]\r\n        $Tags\r\n    )\r\n    Get-Variable -Name Tags | Select-Object -Property *\r\n}\r\n```\r\n\r\n## Test\r\n\r\n```powershell\r\nWrite-Host -ForegroundColor Blue \"PS Attribute Class\"\r\nGet-PSTagsA \"a\"\r\nWrite-Host -ForegroundColor Blue \"PS Attribute Class AND ValidateSet\"\r\nGet-PSTagsB \"a\"\r\nWrite-Host -ForegroundColor Blue \"C# Attribute Class\"\r\nGet-TagsA \"b\"\r\nWrite-Host -ForegroundColor Blue \"C# Attribute Class AND ValidateSet\"\r\nGet-TagsB \"b\"\r\n```\r\n\r\n# Expected behavior\r\n\r\nWe should see the PS and C# class-based attributes applied to the parameter.\r\n\r\n```none\r\nPS Attribute Class\r\n\r\nOptions     : None\r\nValue       : a\r\nName        : Tags\r\nDescription :\r\nVisibility  : Public\r\nModule      :\r\nModuleName  :\r\nAttributes  : {System.Management.Automation.ValidateSetAttribute, PSTagsAttribute, __AllParameterSets}\r\n\r\nPS Attribute Class AND ValidateSet\r\nName        : Tags\r\nDescription :\r\nValue       : a\r\nVisibility  : Public\r\nModule      :\r\nModuleName  :\r\nOptions     : None\r\nAttributes  : {System.Management.Automation.ValidateSetAttribute, PSTagsAttribute, __AllParameterSets}\r\n\r\nC# Attribute Class\r\nOptions     : None\r\nValue       : b\r\nName        : Tags\r\nDescription :\r\nVisibility  : Public\r\nModule      :\r\nModuleName  :\r\nAttributes  : {System.Management.Automation.ValidateSetAttribute, TagsAttribute, __AllParameterSets}\r\n\r\nC# Attribute Class AND ValidateSet\r\nName        : Tags\r\nDescription :\r\nValue       : b\r\nVisibility  : Public\r\nModule      :\r\nModuleName  :\r\nOptions     : None\r\nAttributes  : {System.Management.Automation.ValidateSetAttribute, TagsAttribute, __AllParameterSets}\r\n```\r\n\r\n# Actual behavior\r\n\r\nWhen there are no validation / standard parameter attributes applied, _no attributes are recorded for the parameter variable_. (`[Parameter()]` itself does not appear to change anything, for whatever reason; behaviour is the same without applying that attribute too.)\r\n\r\n```none\r\nPS Attribute Class\r\n\r\nOptions     : None\r\nValue       : a\r\nName        : Tags\r\nDescription :\r\nVisibility  : Public\r\nModule      :\r\nModuleName  :\r\nAttributes  : {}\r\n\r\nPS Attribute Class AND ValidateSet\r\nName        : Tags\r\nDescription :\r\nValue       : a\r\nVisibility  : Public\r\nModule      :\r\nModuleName  :\r\nOptions     : None\r\nAttributes  : {System.Management.Automation.ValidateSetAttribute, PSTagsAttribute, __AllParameterSets}\r\n\r\nC# Attribute Class\r\nOptions     : None\r\nValue       : b\r\nName        : Tags\r\nDescription :\r\nVisibility  : Public\r\nModule      :\r\nModuleName  :\r\nAttributes  : {}\r\n\r\nC# Attribute Class AND ValidateSet\r\nName        : Tags\r\nDescription :\r\nValue       : b\r\nVisibility  : Public\r\nModule      :\r\nModuleName  :\r\nOptions     : None\r\nAttributes  : {System.Management.Automation.ValidateSetAttribute, TagsAttribute, __AllParameterSets}\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.2.0\r\nPSEdition                      Core\r\nGitCommitId                    6.2.0\r\nOS                             Microsoft Windows 10.0.17763\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\n/cc @Romero126, who showed me the bug.",
  "closed_at": null,
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Shorter Pester test that can also be used to test the behaviour:\r\n\r\n```powershell\r\nclass TagAttribute : Attribute {\r\n    [string]$Tag\r\n    TagAttribute([string]$Tag) { $this.Tag = $Tag }\r\n}\r\n\r\nfunction Get-ParamAttribute {\r\n    [CmdletBinding()]\r\n    param(\r\n        [Parameter()]\r\n        [Tag('TestTag')]\r\n        $Tag\r\n    )\r\n\r\n    Get-Variable -Name Tag | Select-Object -Property *\r\n}\r\n\r\n(Get-ParamAttribute).Attributes | Should -Not -BeNullOrEmpty\r\n```",
      "created_at": "2019-05-08T02:47:18Z",
      "updated_at": "2019-05-08T02:47:18Z"
    }
  ],
  "created_at": "2019-05-08T02:40:45Z",
  "labels": [
    "Issue-Question",
    "WG-Engine"
  ],
  "number": 9556,
  "state": "open",
  "title": "Custom Parameter Attributes aren't always recognized for function parameters",
  "updated_at": "2021-01-15T10:20:27Z"
}