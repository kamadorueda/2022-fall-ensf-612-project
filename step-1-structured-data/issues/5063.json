{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5063",
  "author": "kwint",
  "body": "Currently this script:\r\n```\r\nStart-Transcript D:\\temp.txt\r\n\r\n$script = { Write-Host \"Write-Host\"; Write-Warning \"Write-Warning\"; Write-Verbose \"Write-Verbose\" -Verbose}\r\nInvoke-Command -ComputerName RemoteComputer -ScriptBlock $script\r\n\r\nStop-Transcript\r\n```\r\nProduces this output in the shell/host (which is expected):\r\n```\r\nTranscript started, output file is D:\\temp.txt\r\nWrite-Host\r\nWARNING: Write-Warning\r\nVERBOSE: Write-Verbose\r\nTranscript stopped, output file is D:\\temp.txt\r\n```\r\nBut the transcription doesn't capture the warning and verbose output:\r\n```\r\nTranscript started, output file is D:\\temp.txt\r\nINFO: Write-Host\r\n```\r\n\r\n\r\n",
  "closed_at": "2017-10-09T16:03:19Z",
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "This doesn't repro for me on PSCore6 beta.8, need more info:\r\n\r\n```powershell\r\nPS C:\\> Start-Transcript .\\test.log\r\nTranscript started, output file is .\\test.log\r\nPS C:\\> & $script\r\nWrite-Host\r\nWARNING: Write-Warning\r\nVERBOSE: Write-Verbose\r\nPS C:\\> stop-transcript\r\nTranscript stopped, output file is C:\\test.log\r\nPS C:\\> cat test.log\r\n**********************\r\nPowerShell transcript start\r\nStart time: 20171009090103\r\nConfiguration Name:\r\nHost Application: C:\\Program Files\\PowerShell\\6.0.0-beta.8\\powershell.dll\r\nProcess ID: 3040\r\nPSVersion: 6.0.0-beta.8\r\nPSEdition: Core\r\nGitCommitId: v6.0.0-beta.8\r\nOS: Microsoft Windows 10.0.17010\r\nPlatform: Win32NT\r\nPSCompatibleVersions: 1.0, 2.0, 3.0, 4.0, 5.0, 5.1.10032.0, 6.0.0\r\nPSRemotingProtocolVersion: 2.3\r\nSerializationVersion: 1.1.0.1\r\nWSManStackVersion: 3.0\r\n**********************\r\nTranscript started, output file is .\\test.log\r\nPS C:\\> & $script\r\nWrite-Host\r\nWARNING: Write-Warning\r\nVERBOSE: Write-Verbose\r\nPS C:\\> stop-transcript\r\n**********************\r\nPowerShell transcript end\r\nEnd time: 20171009090111\r\n**********************\r\n```\r\n",
      "created_at": "2017-10-09T16:03:19Z",
      "updated_at": "2017-10-09T16:03:19Z"
    },
    {
      "author": "poshcodebear",
      "author_association": "NONE",
      "body": "I know this was opened (and closed) 3 years ago, but I'm able to reproduce it in 7.0.3:\r\n\r\n```powershell\r\nPS C:\\Users\\<username>\\Desktop\\test> Start-Transcript temp.txt\r\nTranscript started, output file is temp.txt\r\nPS C:\\Users\\<username>\\Desktop\\test>\r\nPS C:\\Users\\<username>\\Desktop\\test> $script = { Write-Host \"Write-Host\"; Write-Warning \"Write-Warning\"; Write-Verbose \"Write-Verbose\" -Verbose}\r\nPS C:\\Users\\<username>\\Desktop\\test> Invoke-Command -ComputerName <remote-machine> -ScriptBlock $script\r\nWrite-Host\r\nWARNING: Write-Warning\r\nVERBOSE: Write-Verbose\r\nPS C:\\Users\\<username>\\Desktop\\test>\r\nPS C:\\Users\\<username>\\Desktop\\test> Stop-Transcript\r\nTranscript stopped, output file is C:\\Users\\<username>\\Desktop\\test\\temp.txt\r\n```\r\n\r\nAnd here's the transcript:\r\n\r\n```powershell\r\n**********************\r\nPowerShell transcript start\r\nStart time: 20200831102919\r\nUsername: <DOMAIN>\\<username>\r\nRunAs User: <DOMAIN>\\<username>\r\nConfiguration Name: \r\nMachine: <localmachine> (Microsoft Windows NT 10.0.17763.0)\r\nHost Application: C:\\Program Files\\PowerShell\\7\\pwsh.dll -NoProfile\r\nProcess ID: 1016\r\nPSVersion: 7.0.3\r\nPSEdition: Core\r\nGitCommitId: 7.0.3\r\nOS: Microsoft Windows 10.0.17763\r\nPlatform: Win32NT\r\nPSCompatibleVersions: 1.0, 2.0, 3.0, 4.0, 5.0, 5.1.10032.0, 6.0.0, 6.1.0, 6.2.0, 7.0.3\r\nPSRemotingProtocolVersion: 2.3\r\nSerializationVersion: 1.1.0.1\r\nWSManStackVersion: 3.0\r\n**********************\r\nTranscript started, output file is temp.txt\r\nPS C:\\Users\\<username>\\Desktop\\test> $script = { Write-Host \"Write-Host\"; Write-Warning \"Write-Warning\"; Write-Verbose \"Write-Verbose\" -Verbose}\r\nPS C:\\Users\\<username>\\Desktop\\test> Invoke-Command -ComputerName <remotemachine>> -ScriptBlock $script\r\nWrite-Host\r\nPS C:\\Users\\<username>\\Desktop\\test> Stop-Transcript\r\n**********************\r\nPowerShell transcript end\r\nEnd time: 20200831102922\r\n**********************\r\n```\r\n\r\nI came across this issue specifically because I was tracking down why I couldn't redirect Warning output from Exchange, the only thing it seemed to respect was -WarningAction which let me suppress warnings, though what I was really looking for was to capture them so I could address them.  I suspect it's happening for the same reason this is, that it has to do with the fact that Exchange is a remote PS connection and remote connections are having this issue.  It appears to be putting Warning data into the Warning stream (it shows up like that's where it is), but it cannot be manipulated like the Warning stream (even redirecting all streams does not affect Warnings).\r\n\r\nAdditional information that might prove useful for replicating the problem: the remote systems I replicated it with were an Exchange server running on Server 2016 (1607), and a Windows 10 (1909) desktop, using both PowerShell 7.0.3 (and 7.0.2; I need to update one of my systems) and PowerShell 5.1.  The PS 7 test against the Win10 box is the one that ran on 7.0.2.\r\n\r\nI don't have any machines left running PS 6 to test to see if it behaved differently with that release.\r\n\r\nThis appears to generally affect data streams 3, 4, and 5 when they come from a remote session.  Streams 1, 2, and 6 appear to redirect as expected.  A much easier way to replicate this is just try using direct stream redirection, like this `icm -comp <remote>  -ScriptBlock {Write-warning 'test'} 3> warn.txt`.  If you leave out -ComputerName, redirection of streams 3, 4 ,and 5 work as expected, but not when received from a remote connection.\r\n\r\nThis also affects -<Stream>Variable: the affected streams still display on the host console but are not added to the variable as requested.  -<Stream>ActionPreference works as expected.\r\n\r\nLet me know if you need any more help replicating this issue; it breaks the stream model in PowerShell and is generally frustrating, and makes certain things impossible to automate.",
      "created_at": "2020-08-31T18:04:19Z",
      "updated_at": "2020-08-31T18:04:19Z"
    }
  ],
  "created_at": "2017-10-09T12:35:07Z",
  "number": 5063,
  "state": "closed",
  "title": "Transcript doesn't capture warnings and verbose output when remoting with invoke-command",
  "updated_at": "2020-08-31T18:04:20Z"
}