{
  "_url": "https://github.com/PowerShell/PowerShell/issues/2349",
  "author": "daxian-dbw",
  "body": "There are 2 issues to address here\r\n- [ ] The usage of `FindFirstFileName` and `FindNextFileName` is disabled in powershell core at https://github.com/PowerShell/PowerShell/blob/master/src/System.Management.Automation/namespaces/FileSystemProvider.cs#L7928. Now they are available in NanoServer and IoT in the API set `api-ms-win-core-file-l1-2-2`, so maybe now it's the time to enable them in powershell core. Note that this API set is not available in .net core packages by default, so we basically need to verify if the `kernel32` forwarder on NanoServer and IoT can correctly forward the call to the right API set.\r\n- [x]  (Fixed in #7655) `FileSystemProvider.cs` needs to be refactored. I spot 2 things -- (1) `GetTarget` and `InternalGetTarget` needs to be refactored as `Platform.NonWindowsInternalGetTarget` won't be reached at all. (2) runtime checks should be converted to compilation time checks as much as possible.\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "It appears that this will enable retrieving file attributes if a file is in use.\n\n``` powershell\nPS C:\\> dir -Hidden .\\pagefile.sys\n\n\n    Directory: C:\\\n\n\nMode                LastWriteTime         Length Name\n----                -------------         ------ ----\n              11/2/2016   5:46 PM     5637144576 pagefile.sys\n```\n\nExpected is Mode column has attribute information\n",
      "created_at": "2016-11-04T21:04:37Z",
      "updated_at": "2016-11-04T21:04:37Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw I reviewed point one and debug for windows reparse points (symlink and mount point) - this works well and we get ETS Target property for FileSystemInfo objects. So the code with FindFirstFileName (currently disabled) looks unnecessary. I think we could remove it. Do I skip something?",
      "created_at": "2018-08-30T10:33:44Z",
      "updated_at": "2018-08-30T10:33:44Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw Could you please look my previous comment? Seems we could remove the dead code.",
      "created_at": "2018-09-08T19:42:55Z",
      "updated_at": "2018-09-08T19:42:55Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@iSazonov Will look at the uses of those native APIs again.",
      "created_at": "2018-09-10T22:13:47Z",
      "updated_at": "2018-09-10T22:13:47Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw @SteveL-MSFT Can we close the issue? ",
      "created_at": "2019-09-29T08:45:05Z",
      "updated_at": "2019-09-29T08:45:05Z"
    }
  ],
  "created_at": "2016-09-23T00:53:03Z",
  "labels": [
    "Issue-Enhancement",
    "WG-Engine",
    "Up-for-Grabs"
  ],
  "number": 2349,
  "state": "open",
  "title": "FindFirstFileName and FindNextFileName are available in NanoServer and IoT now, so we should enable the usage of them in powershell core",
  "updated_at": "2019-09-29T08:45:05Z"
}