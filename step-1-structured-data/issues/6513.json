{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6513",
  "author": "bmkaiser",
  "body": "`$PSVersionTable` is returning an incorrect platform for macOS High Sierra 10.13.3.\r\n\r\nSource: [Engine Update Release Notes for PowerShell Core 6.0](https://docs.microsoft.com/en-us/powershell/scripting/whats-new/what-s-new-in-powershell-core-60?view=powershell-6#engine-updates).\r\n\r\nSteps to reproduce\r\n------------------\r\n\r\n```powershell\r\n> $PSVersionTable.Platform\r\n```\r\n\r\nExpected behavior\r\n-----------------\r\n\r\n```none\r\nMacOSX\r\n```\r\n\r\nActual behavior\r\n---------------\r\n\r\n```none\r\nUnix\r\n```\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\n\r\nName                           Value                                                                                                                                                     \r\n----                           -----                                                                                                                                                     \r\nPSVersion                      6.0.2                                                                                                                                                     \r\nPSEdition                      Core                                                                                                                                                      \r\nGitCommitId                    v6.0.2                                                                                                                                                    \r\nOS                             Darwin 17.4.0 Darwin Kernel Version 17.4.0: Sun Dec 17 09:19:54 PST 2017; root:xnu-4570.41.2~1/RELEASE_X86_64                                             \r\nPlatform                       Unix                                                                                                                                                      \r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}                                                                                                                                   \r\nPSRemotingProtocolVersion      2.3                                                                                                                                                       \r\nSerializationVersion           1.1.0.1                                                                                                                                                   \r\nWSManStackVersion              3.0              \r\n\r\n> $IsMacOS\r\n\r\nTrue                                                                                           \r\n```\r\n```bash\r\n$ system_profiler SPSoftwareDataType | grep \"System Version\"\r\n      System Version: macOS 10.13.3 (17D102)\r\n```",
  "closed_at": "2018-03-27T21:46:46Z",
  "comments": [
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Unfortunately, the release notes are incorrect.\r\n\r\nWhat is correct is that PowerShell takes the information from `[System.Environment]::OSVersion.Platform`, i.e., from CoreFX and there, \r\nperhaps confusingly, **the behavior is by design** (from https://github.com/dotnet/platform-compat/issues/29, emphasis added):\r\n\r\n> My main concern is with PlatformID.MacOSX. Back in the Silverlight days, `Environment.OSVersion.Platform` returned `PlatformID.MacOSX` on OSX. **However, on .NET Core it returns `PlatformID.Unix` on macOS to match Mono's behavior.**\r\n\r\n> Code that compares Environment.OSVersion.Platform to PlatformID.MacOSX should use the newer RuntimeInformation.IsOSPlatform(OSPlatform.OSX) API instead.\r\n\r\nMore backstory at https://github.com/dotnet/corefx/issues/19694\r\n\r\n--- \r\n\r\nThe unfortunate thing is that the `[System.PlatformID]` enum that `[System.Environment]::OSVersion.Platform` return values are instances of  still contains `MacOSX` as a value, but only for historical reasons.\r\n\r\nThe upshot is:\r\n\r\n* `[System.Environment]::OSVersion.Platform` is only useful to contrast platforms with Unix _heritage in the abstract_ with Windows - i.e., to distinguish Linux and macOS on the one hand from Windows on the other.\r\n\r\n   * Perhaps we should therefore also introduce an automatic `$IsUnix` variable to reflect this distinction.\r\n\r\n* `$IsMacOs` is therefore the best way to determine if you're running on macOS.\r\n\r\n* `$PSVersionTable.OS` - which contains the value of  `[System.Runtime.InteropServices.RuntimeInformation]::OSDescription`- also reflects the specific platform, but only in a semi-structured way that furthermore refers to macOS as _Darwin_, the open-source OS on which macOS is based.\r\n\r\n\r\n\r\n\r\n\r\n",
      "created_at": "2018-03-27T21:21:03Z",
      "updated_at": "2018-03-28T13:11:47Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Thanks for noticing this.  I submitted a fix: https://github.com/PowerShell/PowerShell-Docs/pull/2227\r\n\r\nNote that you can always click the `Edit` link on the doc page which will take you to GitHub and submit a fix yourself.  Thanks!",
      "created_at": "2018-03-27T21:46:46Z",
      "updated_at": "2018-03-27T21:46:46Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT: \r\n\r\nThanks - hadn't even realized that it was a living document.\r\n\r\nI think it's also important to document the behavior in `about_Automatic_Variables`, so I've created https://github.com/PowerShell/PowerShell-Docs/issues/2229",
      "created_at": "2018-03-27T22:24:23Z",
      "updated_at": "2018-03-27T22:24:23Z"
    }
  ],
  "created_at": "2018-03-27T19:20:07Z",
  "labels": [
    "Area-Maintainers-Documentation",
    "Resolution-Answered"
  ],
  "number": 6513,
  "state": "closed",
  "title": "Wrong Platform in $PSVersionTable for macOS High Sierra",
  "updated_at": "2018-03-28T13:11:47Z"
}