{
  "_url": "https://github.com/PowerShell/PowerShell/issues/14960",
  "author": "LDSpits",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 and PowerShell 7+ issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6).\r\n\r\n-->\r\n\r\nWhen attempting to create a hardlink with special characters in powershell 7.1, the command fails with the message \r\n```New-Item: Cannot find path 'D:\\debugging\\[name] with special chars.txt' because it does not exist.```\r\nfor items with the special characters ``[]``\r\n\r\nI have attempted to create a hardlink with the ``mklink /H`` command on the commandpromt, Which is able to accept targets with special characters.\r\n\r\nSince the commandprompt is able to do this, I would expect to be able to do the same with powershell\r\n\r\n## Steps to reproduce\r\n\r\n```powershell\r\n# Validating being able to create normal hardlinks\r\nNew-Item -ItemType HardLink -Target (Resolve-Path .\\test.txt) -Path \"./test-hard.txt\"\r\nNew-Item -ItemType HardLink -Target (Resolve-Path '.\\test name.txt') -Path \"./test-hard spaced.txt\"\r\n\r\n# attempting to create a hardlink with `[]` in the name\r\nNew-Item -ItemType HardLink -Target (Resolve-Path '.\\`[name`] with special chars.txt') -Path \"./test-hard spaced 2.txt\"\r\n```\r\n\r\n## Expected behavior\r\nPowershell creates a hardlink named `test-hard spaced 2.txt` in the current directory.\r\n```none\r\n    Directory: D:\\debugging\r\n\r\nMode                 LastWriteTime         Length Name\r\n----                 -------------         ------ ----\r\n-a---            7-3-2021    15:21              0 test-hard spaced 2.txt\r\n```\r\n\r\n## Actual behavior\r\nThe Cmdlet fails with the following message\r\n```none\r\nNew-Item: Cannot find path 'D:\\debugging\\[name] with special chars.txt' because it does not exist.\r\n```\r\nI have validated that the target file actually exists in the file explorer, and the command prompt is able to handle this case just fine with the ``mklink`` tool. Provided you escape the name correctly.\r\n\r\n```none\r\nD:\\debugging>mklink /H \"test-hard spaced 2.txt\" \"[name] with special chars.txt\"\r\nHardlink created for test-hard spaced 2.txt <<===>> [name] with special chars.txt\r\n```\r\n\r\n\r\n## Environment data\r\n```none\r\nPSVersion                      7.1.2\r\nPSEdition                      Core\r\nGitCommitId                    7.1.2\r\nOS                             Microsoft Windows 10.0.19042\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "p0W3RH311",
      "author_association": "NONE",
      "body": "try to execute Resolve-Path with -LiteralPath ",
      "created_at": "2021-03-07T21:12:04Z",
      "updated_at": "2021-03-07T21:12:04Z"
    },
    {
      "author": "LDSpits",
      "author_association": "CONTRIBUTOR",
      "body": "> \r\n> \r\n> try to execute Resolve-Path with -LiteralPath\r\n\r\nThis still gives me a failure \r\n```powershell\r\nNew-Item -ItemType HardLink -Target (Resolve-Path -LiteralPath '.\\[name] with special chars.txt') -Path \"./test-hard spaced 2.txt\"\r\nNew-Item: Cannot find path 'D:\\debugging\\[name] with special chars.txt' because it does not exist.\r\n```",
      "created_at": "2021-03-07T21:14:55Z",
      "updated_at": "2021-03-07T21:14:55Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Please see #14534",
      "created_at": "2021-03-07T21:39:30Z",
      "updated_at": "2021-03-07T21:39:30Z"
    },
    {
      "author": "237dmitry",
      "author_association": "NONE",
      "body": "It works for me:\r\n![hl](https://user-images.githubusercontent.com/78153320/110256805-fb77ce00-7fab-11eb-8de9-c2805faa2857.png)\r\n",
      "created_at": "2021-03-07T22:18:28Z",
      "updated_at": "2021-03-07T22:18:28Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@237dmitry, this is about the `-Target` parameter, not the `-Name` parameter.",
      "created_at": "2021-03-07T22:21:38Z",
      "updated_at": "2021-03-07T22:21:38Z"
    },
    {
      "author": "237dmitry",
      "author_association": "NONE",
      "body": "> this is about the -Target parameter, not the -Name parameter.\r\n\r\nI'm sorry, I'm always inattentive. mklink is of course easier.\r\n```\r\n$item = Get-Item '.\\`[test`] test `[1`].txt'\r\nNew-Item -ItemType HardLink -Name file.txt -Target $($item -replace '(?=[\\[\\]])','``')\r\n```\r\n\r\nDouble `` as escapes\r\n```\r\nNew-Item -ItemType HardLink -Name file.txt -Target 'C:\\Path\\To\\file ``[123``].txt'\r\n```",
      "created_at": "2021-03-08T00:02:39Z",
      "updated_at": "2021-03-08T00:09:46Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@237dmitry, while it's good to know about _workarounds_, this is ultimately about _fixing PowerShell's behavior_, as discussed in #14534.\r\n\r\nSpecifically:\r\n\r\n* `mklink` is not only Windows-specific, it is a command _internal to `cmd.exe`_.\r\n\r\n* While _doubly_ escaping the `[` and `]` characters with _two_ `` ` `` characters _happens to work_, that in itself is a bug - see #7999\r\n\r\n",
      "created_at": "2021-03-08T01:51:16Z",
      "updated_at": "2021-03-08T01:51:48Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Another way of putting it:\r\n\r\n* If we accepted the - questionable - premise that the `-Value` / `-Target` argument should be interpreted as a _wildcard pattern_:\r\n  * Then `[WildcardPattern]::Escape('C:\\Path\\To\\file [123].txt')` - i.e. ``'C:\\Path\\To\\file `[123`].txt'`` -  should work: _one_ verbatim `` ` `` to escape each metacharacter.\r\n\r\n* We _shouldn't_ accept this premise, however, because that argument should be interpreted as a _literal_ (verbatim) path.\r\n",
      "created_at": "2021-03-08T02:09:05Z",
      "updated_at": "2021-03-08T02:11:52Z"
    },
    {
      "author": "abaumgaertner",
      "author_association": "NONE",
      "body": "similar issue #6232 ",
      "created_at": "2021-04-05T18:29:05Z",
      "updated_at": "2021-04-05T18:29:05Z"
    }
  ],
  "created_at": "2021-03-07T20:55:15Z",
  "number": 14960,
  "state": "open",
  "title": "``new-item`` cannot create hardlinks with ``[]`` in the name on win10",
  "updated_at": "2021-04-05T18:29:05Z"
}