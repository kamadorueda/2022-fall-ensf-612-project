{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4215",
  "author": "mklement0",
  "body": "<sup>Related: #3442</sup>\r\n\r\nCurrently, `New-TemporaryFile` invariably creates temp. files with extension `.tmp`.\r\n\r\nSometimes, however, it is helpful to create temp. files with a specific filename extension.\r\n\r\nAdding an `-Extension` parameter could provide that:\r\n\r\nDesired behavior\r\n------------------\r\n\r\n```powershell\r\n> New-TemporaryFile -Extension .ps1\r\n\r\n    Directory: C:\\Users\\jdoe\\AppData\\Local\\Temp\r\n\r\nMode                LastWriteTime         Length Name\r\n----                -------------         ------ ----\r\n-a----        7/10/2017   9:53 PM              0 tmpE3B8.ps1\r\n\r\n```\r\n\r\n\r\n\r\nEnvironment data\r\n----------------\r\n\r\n```powershell\r\nPowerShell Core v6.0.0-beta.3\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "What practical scenarios exist when do we need to change the extention?",
      "created_at": "2017-07-11T14:44:53Z",
      "updated_at": "2017-07-11T14:44:53Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Whenever you need to create a temporary file to be processed by a utility that requires a specific filename extension.\r\n\r\nUsing PowerShell itself as an example, say you want to create a throw-away script dynamically, whose path you want to pass to another PowerShell instance via the CLI (`powershell -File ...`).  \r\nSuch a throw-away script only works if it has extension `*.ps1`.",
      "created_at": "2017-07-11T15:03:54Z",
      "updated_at": "2017-07-11T15:03:54Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@mklement0 with a recent PR, if you use -File, it doesn't have to have a .ps1 extension :)",
      "created_at": "2017-07-13T21:56:58Z",
      "updated_at": "2017-07-13T21:56:58Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT: Good point; I should have used a different example, such as `*.csv` for files to be processed by Excel, for instance.",
      "created_at": "2017-07-13T22:02:20Z",
      "updated_at": "2017-07-13T22:02:20Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "I opened the pull request above for it. Please ignore the commits above except for the last one as I squashed the commits in my branch into one commit at the end.",
      "created_at": "2017-08-18T11:53:32Z",
      "updated_at": "2017-08-18T11:53:32Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks, @bergmeister!",
      "created_at": "2017-08-18T12:52:13Z",
      "updated_at": "2017-08-18T12:52:13Z"
    },
    {
      "author": "SimonWahlin",
      "author_association": "CONTRIBUTOR",
      "body": "PR #4612 was closed, waiting for functionality in CoreFX.\r\nWill this cover both extension and total number of files cap?\r\nWhere can I vote for the API mentioned in [https://github.com/PowerShell/PowerShell/pull/4612#issuecomment-367381354](https://github.com/PowerShell/PowerShell/pull/4612#issuecomment-367381354)?\r\n",
      "created_at": "2018-03-07T17:54:49Z",
      "updated_at": "2018-03-07T17:54:49Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "@SimonWahlin  The corefx issue is here:\r\nhttps://github.com/dotnet/corefx/issues/24001\r\nThe file cap limit is due to the limitation of the Windows API being used (and the short file name) for legacy reasons to avoid breaking changes. One would hope so that the new overload does not make use of that API any more, but please discuss this in the corefx repo/issue.",
      "created_at": "2018-03-07T18:22:43Z",
      "updated_at": "2018-03-07T18:23:29Z"
    },
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT Can I recommend a new tag that relates to awaiting upstream features and fixes in CoreFX? The closest we have is Waiting-Netstandard20 which isn't necessarily accurate for proposed but not-yet schedule changes such as the one this PR is pending.",
      "created_at": "2018-03-07T18:41:39Z",
      "updated_at": "2018-03-07T18:41:39Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "We have sufficient issues waiting on fixes from corefx that I like something more descriptive for this case.  I think I'll rename `Waiting-Netstandard20` to `Waiting-DotNetCore` which is more accurate now and still applies to the older issues that have already been marked.\r\n\r\ncc @joeyaiello ",
      "created_at": "2018-03-08T01:34:54Z",
      "updated_at": "2018-03-08T01:34:54Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Yes, please rename.",
      "created_at": "2018-03-12T06:37:17Z",
      "updated_at": "2018-03-12T06:37:17Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Label has been renamed.",
      "created_at": "2018-03-15T20:53:12Z",
      "updated_at": "2018-03-15T20:53:12Z"
    },
    {
      "author": "AspenForester",
      "author_association": "NONE",
      "body": "Given that I just had a situation where this functionality would have helped me, I would say that this is still relevant in in June 2020",
      "created_at": "2020-06-04T13:14:48Z",
      "updated_at": "2020-06-04T13:14:48Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "Well it's currently on track for .Net 5, meaning we could get it maybe at the end of this year for PS 7.1 if the API arrives in time (the change in PowerShell should be quite small once the API is there)\r\nhttps://github.com/dotnet/runtime/issues/2048",
      "created_at": "2020-06-04T13:25:36Z",
      "updated_at": "2020-06-04T13:28:45Z"
    },
    {
      "author": "Zian",
      "author_association": "NONE",
      "body": "Since .Net 5 and PS 7.1 have already shipped while https://github.com/dotnet/runtime/issues/2048 is still \"Open\" with a milestone of \"Future\", does that mean this issue is effectively closed with the GitHub equivalent of WONTFIX?",
      "created_at": "2021-08-30T01:07:50Z",
      "updated_at": "2021-08-30T01:07:50Z"
    }
  ],
  "created_at": "2017-07-11T01:56:31Z",
  "number": 4215,
  "state": "open",
  "title": "Add ability to create a temporary file with a specific extension to New-TemporaryFile",
  "updated_at": "2021-08-30T01:07:50Z"
}