{
  "_url": "https://github.com/PowerShell/PowerShell/issues/18528",
  "author": "penalvch",
  "body": "### Prerequisites\r\n\r\n- [X] Write a descriptive title.\r\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- [X] Search the existing issues.\r\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\r\n\r\n### Steps to reproduce\r\n\r\nAttempt to download a file with the same filename as a directory, in the same folder as this directory. For example, macOS:\r\nInvoke-WebRequest -Uri 'https://github.com/ros2/choco-packages/releases/download/2022-03-15/asio.1.12.1.nupkg' -OutFile \"$home/Downloads\"\r\n\r\nWindows:\r\nInvoke-WebRequest -Uri 'https://github.com/ros2/choco-packages/releases/download/2022-03-15/asio.1.12.1.nupkg' -OutFile \"$home\\Downloads\"\r\n\r\nWORKAROUND: Ensure the filename is different then any directroy in the same folder one is saving the file to. For example, macOS:\r\nInvoke-WebRequest -Uri 'https://github.com/ros2/choco-packages/releases/download/2022-03-15/asio.1.12.1.nupkg' -OutFile \"$home/asio.1.12.1.nupkg\"\r\n\r\nWORKAROUND: macOS use curl.\r\n\r\nAdditional details:\r\nIn macOS PWSH has Full Disk Access as per Apple System Preferences (see below screenshot). However, I can make a directory called temp1 and curl the same file with no problem via built-in macOS terminal using the default user. AV Bitdefender is completely disabled during command execution attempts.\r\n\r\nSame thing with Windows 11, ran Visual Studio Code as Administrator with Powershell extension, same thing same problem.\r\n\r\nmacOS:\r\n```\r\nInvoke-WebRequest -Uri 'https://github.com/ros2/choco-packages/releases/download/2022-03-15/asio.1.12.1.nupkg' -OutFile \"$home/Downloads/temp1\" -verbose\r\nVERBOSE: HTTP/1.1 GET with 0-byte payload\r\nVERBOSE: received 810467-byte response of content type application/octet-stream\r\nInvoke-WebRequest: Access to the path '/Users/username/Downloads/temp1' is denied.\r\n\r\nsw_vers                        \r\nProductName:            macOS\r\nProductVersion:         13.0\r\nBuildVersion:           22A380\r\n\r\nsysctl -n machdep.cpu.brand_string\r\nApple M1\r\n```\r\n![image](https://user-images.githubusercontent.com/115644052/201224374-92a17059-7700-4b73-8fda-c304881323a6.png)\r\n![image](https://user-images.githubusercontent.com/115644052/201223873-232e0ffd-118d-4cdd-92d6-646927d367d2.png)\r\n\r\n\r\nWindows:\r\n```\r\n([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] \"Administrator\")\r\nTrue\r\n\r\nInvoke-WebRequest -Uri 'https://github.com/ros2/choco-packages/releases/download/2022-03-15/asio.1.12.1.nupkg' -OutFile 'C:\\Users\\username\\Downloads'\r\n\r\nInvoke-WebRequest : Access to the path 'C:\\Users\\username\\Downloads' is denied.\r\nAt line:1 char:1\r\n+ Invoke-WebRequest -Uri 'https://github.com/ros2/choco-packages/releas ...\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : NotSpecified: (:) [Invoke-WebRequest], UnauthorizedAccessException\r\n    + FullyQualifiedErrorId : System.UnauthorizedAccessException,Microsoft.PowerShell.Commands.InvokeWebRequestCommand\r\n\r\n[environment]::OSVersion\r\n\r\nPlatform ServicePack Version      VersionString\r\n-------- ----------- -------      -------------\r\n Win32NT             10.0.25227.0 Microsoft Windows NT 10.0.25227.0\r\n\r\n(Get-CimInstance Win32_operatingsystem).OSArchitecture\r\nARM 64-bit Processor\r\n\r\n$psversiontable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      5.1.25227.1000\r\nPSEdition                      Desktop\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nBuildVersion                   10.0.25227.1000\r\nCLRVersion                     4.0.30319.42000\r\nWSManStackVersion              3.0\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\n\r\n(get-acl 'c:\\users\\username\\downloads').access\r\n\r\nFileSystemRights  : FullControl\r\nAccessControlType : Allow\r\nIdentityReference : NT AUTHORITY\\SYSTEM\r\nIsInherited       : True\r\nInheritanceFlags  : ContainerInherit, ObjectInherit\r\nPropagationFlags  : None\r\n\r\nFileSystemRights  : FullControl\r\nAccessControlType : Allow\r\nIdentityReference : BUILTIN\\Administrators\r\nIsInherited       : True\r\nInheritanceFlags  : ContainerInherit, ObjectInherit\r\nPropagationFlags  : None\r\n\r\nFileSystemRights  : FullControl\r\nAccessControlType : Allow\r\nIdentityReference : hostname\\username\r\nIsInherited       : True\r\nInheritanceFlags  : ContainerInherit, ObjectInherit\r\nPropagationFlags  : None\r\n```\r\n\r\n### Expected behavior\r\n\r\n```console\r\nSEE ABOVE\r\n```\r\n\r\n\r\n### Actual behavior\r\n\r\n```console\r\nSEE ABOVE\r\n```\r\n\r\n\r\n### Error details\r\n\r\n```console\r\nget-error                       \r\n\r\nException             : \r\n    Type           : System.UnauthorizedAccessException\r\n    TargetSite     : \r\n        Name          : ThrowExceptionForIoErrno\r\n        DeclaringType : Interop, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\r\n        MemberType    : Method\r\n        Module        : System.Private.CoreLib.dll\r\n    Message        : Access to the path '/Users/moniker/Downloads/temp1' is denied.\r\n    InnerException : \r\n        Type    : System.IO.IOException\r\n        Message : Permission denied\r\n        HResult : 13\r\n    Source         : System.Private.CoreLib\r\n    HResult        : -2147024891\r\n    StackTrace     : \r\n   at Interop.ThrowExceptionForIoErrno(ErrorInfo errorInfo, String path, Boolean isDirError)\r\n   at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String fullPath, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, \r\nUnixFileMode openPermissions, Int64& fileLength, UnixFileMode& filePermissions, Func`4 createOpenException)\r\n   at System.IO.Strategies.OSFileStreamStrategy..ctor(String path, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, Nullable`1 \r\nunixCreateMode)\r\n   at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share)\r\n   at Microsoft.PowerShell.Commands.StreamHelper.SaveStreamToFile(Stream stream, String filePath, PSCmdlet cmdlet, CancellationToken cancellationToken)\r\n   at Microsoft.PowerShell.Commands.InvokeWebRequestCommand.ProcessResponse(HttpResponseMessage response)\r\n   at Microsoft.PowerShell.Commands.WebRequestPSCmdlet.ProcessRecord()\r\n   at System.Management.Automation.Cmdlet.DoProcessRecord()\r\n   at System.Management.Automation.CommandProcessor.ProcessRecord()\r\nCategoryInfo          : NotSpecified: (:) [Invoke-WebRequest], UnauthorizedAccessException\r\nFullyQualifiedErrorId : System.UnauthorizedAccessException,Microsoft.PowerShell.Commands.InvokeWebRequestCommand\r\nInvocationInfo        : \r\n    MyCommand        : Invoke-WebRequest\r\n    ScriptLineNumber : 1\r\n    OffsetInLine     : 1\r\n    HistoryId        : 28\r\n    Line             : Invoke-WebRequest -Uri 'https://github.com/ros2/choco-packages/releases/download/2022-03-15/asio.1.12.1.nupkg' -OutFile \"$home/Downloads/temp1\"\r\n    PositionMessage  : At line:1 char:1\r\n                       + Invoke-WebRequest -Uri 'https://github.com/ros2/choco-packages/releas \u2026\r\n                       + ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    InvocationName   : Invoke-WebRequest\r\n    CommandOrigin    : Internal\r\nScriptStackTrace      : at <ScriptBlock>, <No file>: line 1\r\n```\r\n\r\n\r\n### Environment data\r\n\r\n```powershell\r\n$PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.3.0\r\nPSEdition                      Core\r\nGitCommitId                    7.3.0\r\nOS                             Darwin 22.1.0 Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:30 PDT 2022; root:xnu-8792.41.9~2/RELEASE_ARM64_T8103\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\n\r\n### Visuals\r\n\r\nSEE ABOVE",
  "closed_at": null,
  "comments": [
    {
      "author": "237dmitry",
      "author_association": "NONE",
      "body": "You have to specify the file name `-OutFile /path/to/asio.1.12.1.nupkg`",
      "created_at": "2022-11-11T00:48:54Z",
      "updated_at": "2022-11-11T00:48:54Z"
    },
    {
      "author": "penalvch",
      "author_association": "NONE",
      "body": "@237dmitry, thanks for the quick response!\r\n\r\nWhile the documentation does confirm -OutFile requires a filename, the command did specify a filename called download, although with no extension. As is known, one can have a file with no extension in both Windows and macOS. The documentation does not advise having an extension is required:\r\nhttps://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/invoke-webrequest?view=powershell-7.3\r\n\r\nmacOS:\r\n![image](https://user-images.githubusercontent.com/115644052/201237269-c773919a-92ad-4949-b647-9c274388ee80.png)\r\n\r\nWindows:\r\n![image](https://user-images.githubusercontent.com/115644052/201237640-b3121438-0372-4f7f-9dd7-a6141e8e1d39.png)\r\n\r\nAny problem with the docs being updated to advise having an extension is required, or would a FR be more appropriate here?\n\n<blockquote><img src=\"https://learn.microsoft.com/media/logos/logo-powershell-social.png\" width=\"48\" align=\"right\"><div><strong><a href=\"https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/invoke-webrequest\">Invoke-WebRequest (Microsoft.PowerShell.Utility) - PowerShell</a></strong></div><div>The Invoke-WebRequest cmdlet sends HTTP and HTTPS requests to a web page or web service. It parses the response and returns collections of links, images, and other significant HTML elements. This cmdlet was introduced in PowerShell 3.0. Beginning in PowerShell 7.0, Invoke-WebRequest supports proxy configuration defined by environment variables. See the Notes section of this article.  Important The examples in this article reference hosts in the contoso.com domain. This is a fictitious domain used by Microsoft for examples. The examples are designed to show how to use the cmdlets. However, since the contoso.com sites don't exist, the examples don't work. Adapt the examples to hosts in your environment.  </div></blockquote>",
      "created_at": "2022-11-11T01:02:30Z",
      "updated_at": "2022-11-11T01:02:32Z"
    },
    {
      "author": "237dmitry",
      "author_association": "NONE",
      "body": "Is temp1 an existing directory?\r\n```powershell\r\n$ Invoke-WebRequest -Uri 'https://github.com/ros2/choco-packages/releases/download/2022-03-15/asio.1.12.1.nupkg' -OutFile ./Desktop/filewithoutextension\r\n\r\n$  dir ./Desktop/\r\n\r\n    Directory: ~/Desktop\r\n\r\nUnixMode     Num    User   Group      LastWriteTime    Size Name\r\n--------     ---    ----   -----      -------------    ---- ----\r\ndrwxr-xr-x   755    herz    herz   11.11.2022 04:13         $x\r\n-rw-r--r--   644    herz    herz   10.11.2022 23:34      68 0.ps1\r\n-rw-r--r--   644    herz    herz   11.11.2022 03:31   52,2K 1.png\r\n-rw-r--r--   644    herz    herz   19.10.2022 21:30    1,7K 1.ps1\r\n-rw-r--r--   644    herz    herz   08.11.2022 18:03     999 cl.ps1\r\n-rw-r--r--   644    herz    herz   11.11.2022 04:21  791,5K filewithoutextension\r\n```",
      "created_at": "2022-11-11T01:23:52Z",
      "updated_at": "2022-11-11T01:23:52Z"
    },
    {
      "author": "penalvch",
      "author_association": "NONE",
      "body": "Hi @237dmitry, yes, temp1 is an existing directory on both OSes.",
      "created_at": "2022-11-11T01:41:23Z",
      "updated_at": "2022-11-11T01:41:23Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "This issue isn't specific to `Invoke-WebRequest` and boils down to the fact that you cannot save file data to a _directory_ path.\r\n\r\nYou can provoke the symptom as follows: `'hi' > .`\r\n\r\nThat said, `-OutFile` _should_ allow passing a _directory_ path, in which case the name of the file being downloaded should _implicitly_ be used as the output file name inside that directory. See the following issue; @SteveL-MSFT has agreed to allowing this to be implemented as an _experimental_ feature first, but no one has stepped up yet:\r\n\r\n  * #11671",
      "created_at": "2022-11-12T02:50:51Z",
      "updated_at": "2022-11-12T02:50:51Z"
    }
  ],
  "created_at": "2022-11-11T00:02:01Z",
  "labels": [
    "Needs-Triage"
  ],
  "number": 18528,
  "state": "open",
  "title": "Invoke-WebRequest: Access to the path 'PATH' is denied.",
  "updated_at": "2022-11-12T03:39:56Z"
}