{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9774",
  "author": "pinecones-sx",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n\r\n-->\r\nGet-Random is the cmdlet to produce a random number.  You can also use it to produce multiple random selections from an input set.\r\n\r\nThe issue is that in this scenario, its behavior is not random.  Instead it will select individual objects from the input object a maximum of 1 time.\r\n\r\nWhile this is a nice feature to have, it is not truly random and is unexpected behavior.  I am recommending to make the results truly random and to add unique selection as an optional switch.  (such as -Unique)\r\n\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\n$sourceSet = 0..1\r\nWhile ($sourceSet[0] -ne $sourceSet[1]){\r\n    $sourceSet = Get-Random -InputObject @(0..1) -Count 2\r\n}\r\n```\r\n\r\n# Expected behavior\r\n\r\n```none\r\nLoop ends with $sourceSet -eq 1,1 or $sourceSet -eq 0,0\r\n```\r\n\r\n# Actual behavior\r\n\r\n```none\r\nLoop runs indefinitely.\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value                                                                                                                                                               \r\n----                           -----                                                                                                                                                               \r\nPSVersion                      5.1.17763.503                                                                                                                                                       \r\nPSEdition                      Desktop                                                                                                                                                             \r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}                                                                                                                                             \r\nBuildVersion                   10.0.17763.503                                                                                                                                                      \r\nCLRVersion                     4.0.30319.42000                                                                                                                                                     \r\nWSManStackVersion              3.0                                                                                                                                                                 \r\nPSRemotingProtocolVersion      2.3                                                                                                                                                                 \r\nSerializationVersion           1.1.0.1    \r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "kvprasoon",
      "author_association": "CONTRIBUTOR",
      "body": "Provided the `-Count` option, this scenario is valid and should give non unique values. As suggested, `-Unique` switch will be an add-on.\r\n\r\n\r\n@iSazonov - Am I good to go ahead with the PR ?",
      "created_at": "2019-06-04T17:31:51Z",
      "updated_at": "2019-06-11T03:02:40Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@kvprasoon I feel the issue is more difficult. Original behavior is \"randomize an entire collection\", and the proposal is \"random selection from a collection\". Current parameter sets and names do not clarify this enough. I'd want to see more use-cases and more analysis. Also proposal Unique is a breaking change.\r\n\r\n\r\n",
      "created_at": "2019-06-11T04:13:41Z",
      "updated_at": "2019-06-11T04:13:41Z"
    },
    {
      "author": "kvprasoon",
      "author_association": "CONTRIBUTOR",
      "body": "I would say it should be _random selection from a collection_ than _randomize an entire collection_\r\n\r\nFrom documentation.\r\n\r\n> The Get-Random cmdlet gets a randomly selected number. If you submit a collection of objects to Get-Random, it gets one or more randomly selected objects from the collection.\r\n\r\n@SteveL-MSFT @vexx32  Thoughts ?",
      "created_at": "2019-06-11T07:54:07Z",
      "updated_at": "2019-06-11T07:54:44Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "That phrasing does seem more accurate. Given the wording in the current documentation it sounds as though the current behaviour was somewhat intentional for whatever reason\r\n\r\nWe can avoid this being a breaking change if we invert the logic and name the switch something like `-AllowDuplicate` perhaps? The default stays the same, but users can opt in to the new behaviour if they want it?",
      "created_at": "2019-06-11T11:10:09Z",
      "updated_at": "2019-06-11T11:10:18Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "AllowDuplicate does not make the behavior intuitive.\r\nCurrent behavior is \"randomize collection from pipeline or InputObject\". So parameter name for this could be `RandomizeCollection`/`RandomizeInput`/`Randomize`. But we need _another_ behavior - I don't know that is right (math) term would be. `RandomAccess`/`RandomInputAccess` or `AsRandomSet`. I like the last",
      "created_at": "2019-06-11T11:49:12Z",
      "updated_at": "2019-06-11T11:49:12Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "I don't think any of those appropriately describe what's going on here, though, unfortunately. @SteveL-MSFT any naming suggestions, perhaps? I'm not coming up with much at the moment. \ud83d\ude04 ",
      "created_at": "2019-06-11T15:46:55Z",
      "updated_at": "2019-06-11T15:46:55Z"
    },
    {
      "author": "pinecones-sx",
      "author_association": "NONE",
      "body": "I really think real random selection should be a switch, and just call it a day.\r\n\r\nThat keeps it from being a breaking change and makes it discoverable.",
      "created_at": "2019-06-11T17:46:51Z",
      "updated_at": "2019-06-11T17:46:51Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "So I understand the problem correctly, `-Count` today selects n number of items at once so you will never get duplicates.  Useful for drawing raffles, for example.\r\n\r\nHowever, the ask is a way to have a switch to allow selecting n number of items where each draw is distinct such that you could end up with duplicates.  And you don't want to do this with an outer loop calling the cmdlet.  I guess `-AllowDuplicate` would be the first thing I can think of.\r\n\r\n",
      "created_at": "2019-07-08T22:31:30Z",
      "updated_at": "2019-07-08T22:31:30Z"
    },
    {
      "author": "pinecones-sx",
      "author_association": "NONE",
      "body": "Correct.\r\n\r\nThe issue is that it isn't just returning a random selection, it is returning a random selection and removing it from the collection.  (i'm not sure if it is actually operating like that under the hood, but the end result is similar)\r\n\r\nIt's not just about not wanting to get results in a different way, it is that the cmdlet itself works in a way that is misleading.  If you are using it with a collection of objects, it isn't operating in a truly random way.",
      "created_at": "2019-07-08T22:39:00Z",
      "updated_at": "2019-07-08T22:39:38Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "[here](https://github.com/PowerShell/PowerShell/blob/aba3bd5df1ea9d97790e7b232e50995e9f3d1e37/src/Microsoft.PowerShell.Commands.Utility/commands/utility/GetRandomCommand.cs#L534) in the code is where it explicitly removes the selected item from being considered next time.  This is how Windows PowerShell also works, so if the current behavior is not documented well, we should update the documentation.  If there is a need to add a switch to change this behavior, that would be acceptable as well.",
      "created_at": "2019-07-09T00:47:53Z",
      "updated_at": "2019-07-09T00:47:53Z"
    }
  ],
  "created_at": "2019-05-30T23:52:32Z",
  "labels": [
    "Issue-Enhancement"
  ],
  "number": 9774,
  "state": "open",
  "title": "Get-Random will not select an object from the input set more than once",
  "updated_at": "2019-07-09T00:47:54Z"
}