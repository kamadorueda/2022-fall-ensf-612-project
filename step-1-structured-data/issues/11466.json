{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11466",
  "author": "iSazonov",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nAddress #5385 \r\n\r\nAdd Git commit Id to ETW events to indicate pwsh version in SxS scenario.\r\n\r\n## PR Context\r\n\r\n<!-- Provide a little reasoning as to why this Pull Request helps and why you have opened it. -->\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [ ] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2020-01-29T17:47:59Z",
  "comments": [
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "I am not sure if we need this change. The PSVersion information is already available in the context. Have a look at snippet below. It also has the path to the pwsh executable.\r\n\r\n```\r\nContext:\r\n        Severity = Warning\r\n        Host Name = Default Host\r\n        Host Version = 6.2.3\r\n        Host ID = 0a5b0b2f-bc91-4277-855e-8e515428266a\r\n        Host Application = C:\\Program Files\\PowerShell\\6\\pwsh.dll -NoProfile -NonInteractive -ExecutionPolicy Bypass -Command & 'c:\\Users\\adityap\\.vscode\\extensions\\ms-vscode.powershell-2019.11.0\\modules\\PowerShellEditorServices\\Start-EditorServices.ps1' -HostName 'Visual Studio Code Host' -HostProfileId 'Microsoft.VSCode' -HostVersion '2019.11.0' -AdditionalModules @('PowerShellEditorServices.VSCode') -BundledModulesPath 'c:\\Users\\adityap\\.vscode\\extensions\\ms-vscode.powershell-2019.11.0\\modules' -EnableConsoleRepl -LogLevel 'Normal' -LogPath 'c:\\Users\\adityap\\.vscode\\extensions\\ms-vscode.powershell-2019.11.0\\logs\\1576801082-b176810b-eb30-4a56-bf5c-a2e937a83b7b1576178394502\\EditorServices.log' -SessionDetailsPath 'c:\\Users\\adityap\\.vscode\\extensions\\ms-vscode.powershell-2019.11.0\\sessions\\PSES-VSCode-14272-664832' -FeatureFlags @()\r\n        Engine Version = 6.2.3\r\n        Runspace ID = b39bde2f-2465-40e0-a480-fb31f624fa8b\r\n        Pipeline ID = 578\r\n        Command Name = Invoke-ScriptAnalyzer\r\n        Command Type = Cmdlet\r\n        Script Name = \r\n        Command Path = \r\n        Sequence Number = 638\r\n        User = REDMOND\\adityap\r\n        Connected User = \r\n        Shell ID = Microsoft.PowerShell\r\n\r\n```",
      "created_at": "2020-01-09T21:12:18Z",
      "updated_at": "2020-01-09T21:12:18Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@adityapatwardhan pwsh path makes no sense for SxS scenario.\r\n\r\n If I understand right \"Host Version\" and \"Engine Version\" expose PSVersion, not GitCommitId.\r\nDo we need the GitCommitId? ",
      "created_at": "2020-01-10T11:57:26Z",
      "updated_at": "2020-01-10T11:57:26Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "The original issue is being able to filter events where you have multiple versions of pwsh installed.  Seems like GitCommitId may be overkill and not needed.",
      "created_at": "2020-01-28T21:58:25Z",
      "updated_at": "2020-01-28T21:58:25Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT Close the PR and issue?",
      "created_at": "2020-01-29T03:29:46Z",
      "updated_at": "2020-01-29T03:29:46Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov yeah, I think so",
      "created_at": "2020-01-29T17:47:58Z",
      "updated_at": "2020-01-29T17:47:58Z"
    }
  ],
  "created_at": "2020-01-01T13:46:14Z",
  "number": 11466,
  "state": "closed",
  "title": "Add Git commit Id to ETW events",
  "updated_at": "2020-01-30T03:01:49Z"
}