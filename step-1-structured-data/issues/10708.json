{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10708",
  "author": "mklement0",
  "body": "When using WinRM-based remoting, the `-ScriptBlock` argument can be passed _positionally_; e.g.:\r\n\r\n```powershell\r\nInvoke-Command -ComputerName . { 'hi' } \r\n# Implied: Invoke-Command -ComputerName . -ScriptBlock { 'hi' } \r\n```\r\n\r\nCurrently, this doesn't work for the equivalent SSH-based remoting commands:\r\n\r\n# Steps to reproduce\r\n\r\nThis assumes that the local machine is set up for SSH-based remoting.\r\n\r\n```powershell\r\n{ Invoke-Command -HostName . { 'hi' } } | Should -Not -Throw\r\n{ Invoke-Command -SSHConnection @{ HostName = '.' }  { 'hi' } } | Should -Not -Throw\r\n```\r\n\r\n# Expected behavior\r\n\r\nBoth tests should pass.\r\n\r\n# Actual behavior\r\n\r\nBoth tests fail as follows:\r\n\r\n```\r\nExpected no exception to be thrown, but an exception\r\n\"A positional parameter cannot be found that accepts argument ' 'hi' '.\" was thrown from line:1 char:3\r\n```\r\n\r\nThat is, positional use of the `-ScriptBlock` parameter is not supported.\r\n\r\n# Environment data\r\n\r\n```none\r\nPowerShell Core 7.0.0-preview.4\r\n```\r\n",
  "closed_at": "2019-10-10T18:29:32Z",
  "comments": [
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:This issue was addressed in #10721, which has now been successfully released as `v7.0.0-preview.5`.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.0.0-preview.5)\n",
      "created_at": "2019-10-23T19:07:44Z",
      "updated_at": "2019-10-23T19:07:44Z"
    }
  ],
  "created_at": "2019-10-05T02:40:39Z",
  "number": 10708,
  "state": "closed",
  "title": "Invoke-Command -Hostname / -SSHConnection should accept the script block as the (first) positional argument",
  "updated_at": "2019-10-23T19:07:44Z"
}