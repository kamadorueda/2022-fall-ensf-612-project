{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11750",
  "author": "scotthardwick",
  "body": "It would be useful for Get-Content to have \r\n-Skip <Int32>\r\n-SkipLast <Int32>\r\nin the same fashion that Select-Object has.\r\n\r\nThis would allow you to skip over initial lines you did not want, rather than take the performance and memory hit of loading the entire file into an initial variable and then doing a select.\r\n$Content = Get-content $myTextFile | select-object -skip 500\r\n\r\nCurrently both Get-Content and Select-Object have a -First and -Last.  But only Select-Object has -Skip and -SkipLast.\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "bpayette",
      "author_association": "CONTRIBUTOR",
      "body": "Hi @scotthardwick, by default, `Get-Content` reads a file line by line and streams each line into the pipeline. Since the lines are streamed, `Get-Content | Select -first 10` will only read 10 lines from file so it more or less already does what you want.",
      "created_at": "2020-02-02T01:36:23Z",
      "updated_at": "2020-02-02T01:36:23Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "It's true that there's no _memory-usage_ concern with combining `Get-Content` with `Select-Object`, but there is a _performance_ concern, due to the processing overhead that the pipeline introduces.\r\n\r\nI presume that performance concerns led to the implementation of the `-Head` aka `-First` and `-Tail` aka `-Last` parameters _directly on `Get-Content`_ to begin with - even though they duplicate `Select-Object` functionality.\r\n\r\nIt sounds like you, @scotthardwick, are looking to make this for-performance duplication of functionality _complete_, by also implementing `-Skip` and `-SkipLast` directly on `Get-Content`, correct?\r\n\r\nHere's an example that shows that the performance difference can be dramatic:\r\n\r\n```powershell\r\ntry { \r\n  # Create a large (temporary) file.\r\n  $tempFile = [IO.Path]::GetTempFileName()\r\n  1..1e5 > $tempFile\r\n\r\n  # Warm up the cache.\r\n  Get-Content $tempFile | Out-Null\r\n\r\n  (Measure-Command { $lines = Get-Content -Last 5 $tempFile }).TotalSeconds\r\n  (Measure-Command { $lines = Get-Content $tempFile | Select-Object -Last 5 }).TotalSeconds\r\n\r\n} finally {\r\n  Remove-Item $tempFile\r\n}\r\n```\r\n\r\nSample results from my machine (seconds):\r\n\r\n```powershell\r\n0.046115   # Get-Content -Last\r\n2.2028236  # Get-Content | Select-Object -Last\r\n```\r\n\r\nThat is, with a text file of 100,000 (very short) lines, `Get-Content -Last` outperformed `Get-Content | Select -Last` by a factor of about 47(!).\r\n\r\n(As @vexx32 points out below, the discrepancy isn't just explained by pipeline overhead; `-Last` as part of `Get-Content` is presumably efficiently implemented by reading from the _end_ of the file.)",
      "created_at": "2020-02-02T13:24:40Z",
      "updated_at": "2020-02-02T17:57:56Z"
    },
    {
      "author": "scotthardwick",
      "author_association": "NONE",
      "body": "@mklement0 \r\n\r\n> It sounds like you, @scotthardwick, are looking to make this for-performance duplication of functionality complete, by also implementing -Skip and -SkipLast directly on Get-Content, correct?\r\n\r\nCorrect!\r\n\r\n",
      "created_at": "2020-02-02T15:10:15Z",
      "updated_at": "2020-02-02T15:10:15Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Doesn't Get-Content -Tail also read the file differently? I think it's more than just the pipeline overhead there. But yeah if we can add parameters to Get-Content in order to reduce what we actually need to read from disk, it will indeed be much faster to read. ",
      "created_at": "2020-02-02T17:48:21Z",
      "updated_at": "2020-02-02T17:48:21Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Another `Select-Object` parameter worth porting: `-Index` (line selection by index / indices).",
      "created_at": "2020-02-05T03:44:30Z",
      "updated_at": "2020-02-05T03:44:30Z"
    }
  ],
  "created_at": "2020-02-01T16:22:11Z",
  "labels": [
    "Issue-Enhancement"
  ],
  "number": 11750,
  "state": "open",
  "title": "Additional Parameters for Get-Content",
  "updated_at": "2020-02-05T03:44:30Z"
}