{
  "_url": "https://github.com/PowerShell/PowerShell/issues/8968",
  "author": "IISResetMe",
  "body": "Fix #3082\r\n\r\n<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nThe parsing rules for `using ...` statements already support type alias notation a la:\r\n\r\n```powershell\r\nusing type MyString = System.String\r\n[string]::Empty -eq [MyString]::Empty\r\n```\r\n\r\nThis PR:\r\n - Changes the SemanticChecks visitor to no longer treat [this valid syntax](https://github.com/PowerShell/PowerShell/issues/3082) as a parser error\r\n - Adds a type alias table to `TypeResolutionState`\r\n - Adds type alias resolution to `ResolveTypeWithContext()`\r\n\r\n<strike>TO FIX:\r\n - [ ] Tab completion for static members no longer work in PSReadLine</strike>\r\n\r\nTO DO:\r\n - [ ] Tests\r\n\r\n<!-- Summarize your PR between here and the checklist. -->\r\n\r\n## PR Context\r\n\r\nThis feature might be useful in situations where type name collisions exist between namespaces:\r\n\r\n```powershell\r\nusing namespace System.Threading\r\nusing namespace System.Timers\r\n\r\n# Ambiguous type name\r\n[Timer]\r\n```\r\n\r\n```powershell\r\nusing namespace System.Threading\r\nusing type MyTimer = System.Timers.Timer\r\n\r\n# System.Threading.Timer\r\n[Timer]\r\n# System.Timers.Timer\r\n[MyTimer]\r\n```\r\n\r\n<!-- Provide a little reasoning as to why this Pull Request helps and why you have opened it. -->\r\n\r\n## PR Checklist\r\n\r\n- [X] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [X] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [X] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [ ] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [X] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n        - [ ] [Add `[feature]` to your commit messages if the change is significant or affects feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\r\n",
  "closed_at": "2019-04-22T01:00:22Z",
  "comments": [
    {
      "author": "IISResetMe",
      "author_association": "COLLABORATOR",
      "body": "@lzybkr @SteveL-MSFT looks like tab-completion for the static member operator on translated type literals doesn't work in PSReadLine:\r\n\r\n```powershell\r\nusing type mystring = string\r\n[mystring]:: # [TAB] does nothing when PSReadLine is imported\r\n```\r\n\r\nThis also applies to implicit namespace prefixes:\r\n\r\n```powershell\r\nusing namespace System.Security.Cryptography.X509Certificates\r\n[X509Certificate2]:: # [TAB] does nothing when PSReadLine is imported\r\n```\r\n\r\nIs this a known bug, or something I should take into account here? I should note that when I run `Remove-Module PSReadLine`, native tab completion works fine with the translated type literals...",
      "created_at": "2019-02-25T10:54:01Z",
      "updated_at": "2019-02-25T11:07:39Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "@IISResetMe \r\n\r\n> Is this a known bug, or something I should take into account here? I should note that when I run `Remove-Module PSReadLine`, native tab completion works fine with the translated type literals...\r\n\r\nDo you have a custom PSRL key handler for <kbd>Tab</kbd>? Or a custom `TabExpansion2`? Your second example works for me in PSRL (though I had to fix my custom `TabExpansion2` first)",
      "created_at": "2019-02-25T13:06:29Z",
      "updated_at": "2019-02-25T13:06:29Z"
    },
    {
      "author": "IISResetMe",
      "author_association": "COLLABORATOR",
      "body": "@SeeminglyScience PSRL 2.0.0, no customization of either PSRL nor `TabExpansion2` \ud83d\ude16 \r\n\r\n![using_psrl](https://user-images.githubusercontent.com/7413755/53341777-bf192e00-390c-11e9-9553-556d5cf58d57.gif)\r\n\r\nYou obviously can't hear it from this gif, but I'm TAB'ing furiously prior to removing PSRL",
      "created_at": "2019-02-25T13:52:38Z",
      "updated_at": "2019-02-25T13:52:38Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@IISResetMe @SeeminglyScience I have the same issue with tab-completion when doing `using namespace`... I'm pretty sure I don't have any customizations in TabCompleter2 either.",
      "created_at": "2019-02-25T14:33:13Z",
      "updated_at": "2019-02-25T14:33:13Z"
    },
    {
      "author": "IISResetMe",
      "author_association": "COLLABORATOR",
      "body": "If this is a well-known/accepted issue with PSRL I'll just move ahead without that being a concern, but I've just never noticed this before and was wondering if this is expected and/or on anyones radar :) ",
      "created_at": "2019-02-25T14:41:48Z",
      "updated_at": "2019-02-25T14:41:48Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "Oh that, right.  I thought you meant having the `using namespace ...` line in the same prompt e.g  `using namespace System.Security.Cryptography.X509Certificates; [X509Certificate2]::<tab>` which does work.\r\n\r\nHonestly I thought that was by design so profile `using` statements wouldn't affect editor intellisense. Didn't know it worked without PSRL, but it's discussed a little bit in #8281",
      "created_at": "2019-02-25T15:29:51Z",
      "updated_at": "2019-02-26T13:52:01Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "It'd be nice if that worked, tbh. Intellisense is extremely handy. But yeah, probably out of scope for the PR.",
      "created_at": "2019-02-25T15:34:52Z",
      "updated_at": "2019-02-25T15:34:52Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@powercode Perhaps you could help with the tab completion issue.",
      "created_at": "2019-02-25T17:32:59Z",
      "updated_at": "2019-02-25T17:32:59Z"
    },
    {
      "author": "Jaykul",
      "author_association": "CONTRIBUTOR",
      "body": "Does it support removing the ambiguity, and not just aliasing another name?\r\n\r\nThat is, does this work:\r\n\r\n```powershell\r\nusing namespace System.Threading\r\nusing namespace System.Timers\r\nusing type Timer = System.Threading.Timer\r\n\r\n[Timer]\r\n```",
      "created_at": "2019-03-04T21:07:31Z",
      "updated_at": "2019-03-04T21:07:31Z"
    },
    {
      "author": "IISResetMe",
      "author_association": "COLLABORATOR",
      "body": "@Jaykul yes, this would also make the `TypeResolver` try (and return) explicitly aliased type names before attempting to resolve sing-label type names qualified by `using` namespaces",
      "created_at": "2019-03-05T03:01:55Z",
      "updated_at": "2019-03-05T03:01:55Z"
    },
    {
      "author": "stale[bot]",
      "author_association": "NONE",
      "body": "This PR has been automatically marked as stale because it has not had activity in the last 30 days. It will be closed if no further activity occurs within 10 days.\nThank you for your contributions.\nCommunity members are welcome to grab these works.\n",
      "created_at": "2019-04-12T00:50:24Z",
      "updated_at": "2019-04-12T00:50:24Z"
    },
    {
      "author": "stale[bot]",
      "author_association": "NONE",
      "body": "This PR has been automatically closed because it is stale. If you wish to continue working on the PR, please first update the PR, then reopen it.\nThanks again for your contribution.\nCommunity members are welcome to grab these works.\n",
      "created_at": "2019-04-22T01:00:21Z",
      "updated_at": "2019-04-22T01:00:21Z"
    }
  ],
  "created_at": "2019-02-24T14:35:28Z",
  "number": 8968,
  "state": "closed",
  "title": "WIP: Resolve \"using type alias = typename\"",
  "updated_at": "2019-04-22T01:00:22Z"
}