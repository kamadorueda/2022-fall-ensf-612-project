{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11057",
  "author": "SteveL-MSFT",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nSince `$env:PSModulePath` is shared across all instances of PowerShell, PowerShell 7 needs to ensure it inherits the env var, but put its paths in front.  If starting Windows PowerShell, it will special case `powershell.exe` and `powershell_ise.exe` removing PowerShell 7 specific paths creating a new environment for the new process.\r\n\r\nThis is a breaking change as previously, if `pwsh` detects it is started from PowerShell, it will clear out `$env:PSModulePath` and create it from scratch.  This change will preserve additions from the system or user env vars but not all have the complicated logic in Windows PowerShell.  It will always add user module path, shared module path, and $PSHome module path if it's not already there on startup.\r\n\r\n## PR Context\r\n\r\nFix #9957\r\nFix #9921\r\nFix #7082\r\nFix #6850\r\nFix #10620\r\n\r\nImplement https://github.com/PowerShell/PowerShell-RFC/pull/233\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [ ] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2019-11-16T01:29:07Z",
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee reviewed this and agree to accept these changes for Preview.6",
      "created_at": "2019-11-14T00:41:43Z",
      "updated_at": "2019-11-14T00:41:43Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PoshChan please retry windows",
      "created_at": "2019-11-15T21:55:15Z",
      "updated_at": "2019-11-15T21:55:15Z"
    },
    {
      "author": "PoshChan",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT, successfully started retry of `PowerShell-CI-Windows`",
      "created_at": "2019-11-15T21:55:54Z",
      "updated_at": "2019-11-15T21:55:54Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "Why does this close https://github.com/PowerShell/PowerShell/issues/7082?\r\n",
      "created_at": "2019-11-16T05:54:40Z",
      "updated_at": "2019-11-16T05:54:40Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.0.0-preview.6` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.0.0-preview.6)\n",
      "created_at": "2019-11-21T22:36:01Z",
      "updated_at": "2019-11-21T22:36:01Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "FYI this PR did not fix https://github.com/PowerShell/PowerShell/issues/9921",
      "created_at": "2019-12-10T23:03:32Z",
      "updated_at": "2019-12-10T23:03:32Z"
    }
  ],
  "created_at": "2019-11-13T00:50:24Z",
  "number": 11057,
  "state": "closed",
  "title": "Allow `pwsh` to inherit `$env:PSModulePath` and enable `powershell.exe` to start correctly",
  "updated_at": "2020-06-06T02:29:59Z"
}