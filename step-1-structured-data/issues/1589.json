{
  "_url": "https://github.com/PowerShell/PowerShell/issues/1589",
  "author": "mirichmo",
  "body": "## Steps to reproduce\n\n$s = New-PSSession .\n## Expected behavior\n## Actual behavior\n\nnsn : [10.123.170.144] Connecting to remote server 10.123.170.144 failed with the following error message : The WSMan provider host process did not return a proper response.  A provider in the host process may have behaved improperly.\nFor more information, see the about_Remote_Troubleshooting Help topic.\nAt line:1 char:6\n- $s = nsn -ComputerName .\n-      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  - CategoryInfo          : OpenError: (System.Manageme....RemoteRunspace:RemoteRunspace) [New-PSSession], PSRemotin\n    gTransportException\n  - FullyQualifiedErrorId : 1726,PSSessionOpenFailed\n## Environment data\n\n6.0.0-alpha8\n## Root cause:\n\nPSRP does not support serialization and deserialization of SemanticVersion.\n",
  "closed_at": "2016-08-03T21:09:50Z",
  "comments": [
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "Maybe fixed with: https://github.com/lzybkr/PowerShell/commit/eba7fc9331e9adb695792d47f18dabb18d3ece14?\n",
      "created_at": "2016-08-01T20:59:39Z",
      "updated_at": "2016-08-01T20:59:39Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@lzybkr PSPrimitiveDirectionary.VerifyValue(object value) would throw ArgumentException for SemanticVersion value when the server side is running ServerRunspacePoolDriver.SendApplicationPrivateDataToClient(), so SemanticVersion should be added to \"handshakeFriendlyTypes\"\n\nHowever, this won't solve the problem of \"downlevel client remotes to new PowerShell Core\", since the downlevel client doesn't know how to deserialize a SemanticVesion string.\n",
      "created_at": "2016-08-01T22:06:13Z",
      "updated_at": "2016-08-17T07:41:35Z"
    },
    {
      "author": "mirichmo",
      "author_association": "MEMBER",
      "body": "Aren't all shipped versions of PowerShell downlevel clients since they don't include support for SemanticVersion? By that logix, since this change only exists in PowerShell Core, so Server 2016 and NanoServer are downlevel.\n",
      "created_at": "2016-08-01T22:15:58Z",
      "updated_at": "2016-08-17T07:41:56Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@mirichmo Yes, exactly.\n",
      "created_at": "2016-08-01T22:17:24Z",
      "updated_at": "2016-08-01T22:17:24Z"
    },
    {
      "author": "raghushantha",
      "author_association": "MEMBER",
      "body": "Interesting. So, what is our version compat story?\n\nCan PowerShell Core manage downlevel instances? (i.e PSVersion <=5.1)\n\nAnd downlevel clients connecting to PowerShell Core instances?\n",
      "created_at": "2016-08-02T03:52:57Z",
      "updated_at": "2016-08-17T07:42:27Z"
    },
    {
      "author": "mirichmo",
      "author_association": "MEMBER",
      "body": "Yes and yes. PowerShell Core 6.0 needs to maintain compatibility with all supported downlevel versions of PS. That would mean PS 3.0+ (Windows 8+). Win7 will require a WMF to work, but not necessarily WMF 5.1 (WMF 3.0+)\n",
      "created_at": "2016-08-02T15:34:29Z",
      "updated_at": "2016-08-17T05:28:15Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "Fixed with 2b70837\n",
      "created_at": "2016-08-03T21:09:50Z",
      "updated_at": "2016-08-03T21:09:50Z"
    }
  ],
  "created_at": "2016-08-01T18:09:11Z",
  "labels": [],
  "number": 1589,
  "state": "closed",
  "title": "Use of SemanticVersion in $PSVersionTable Breaks Remoting",
  "updated_at": "2016-08-17T07:42:27Z"
}