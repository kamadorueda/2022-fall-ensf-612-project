{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3128",
  "author": "JoesCrepes",
  "body": "Steps to reproduce\r\n------------------\r\nModify the ACL of a test object so that it contains two entries:\r\n1. Allow full control to System\r\n2. Deny full control to your user object\r\nThen run:\r\nGet-ACL -path \"\\\\path\\to\\object\"\r\n\r\nExpected behavior\r\n-----------------\r\nI'd expect either the unauthorized access exception received in PS4.0 or a message stating that I don't have rights to read this object.\r\n\r\nActual behavior\r\n---------------\r\nThis returns an ACL containing one entry - a denial to myself. This is inaccurate, but since it returns a technically valid ACL object, if I were to parse this to try to determine what permissions System has, I would get an inaccurate response. \r\n\r\nEnvironment data\r\n----------------\r\n```\r\nName                           Value                                           \r\n----                           -----                                           \r\nPSVersion                      5.0.10586.117                                   \r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}                         \r\nBuildVersion                   10.0.10586.117                                  \r\nCLRVersion                     4.0.30319.42000                                 \r\nWSManStackVersion              3.0                                             \r\nPSRemotingProtocolVersion      2.3                                             \r\nSerializationVersion           1.1.0.1     \r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "[File.GetAccessControl Method](https://msdn.microsoft.com/en-us/library/8e1fc3b8(v=vs.110).aspx) has UnauthorizedAccessException \r\n\r\nWe must understand why PS 5 changed the behavior because reverting it back is a breaking change.",
      "created_at": "2017-02-10T18:39:58Z",
      "updated_at": "2017-02-10T18:39:58Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT Could you ping anybody to get understanding is the regression or not?",
      "created_at": "2018-08-29T15:20:48Z",
      "updated_at": "2018-08-29T15:20:48Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov looking at the cmdlet code, it just enables SeSecurityPrivilege and creates new instance of FileSecurity instance with the file path.  I don't see any changes in this in the PowerShell code but .NET could have changed something.\r\n\r\n@JoesCrepes can you repro the same thing using [this](http://www.leeholmes.com/blog/2010/09/24/adjusting-token-privileges-in-powershell/) to enable SeSecurityPrivilege then create FileSecurity instance like:\r\n\r\n```powershell\r\n[System.Security.AccessControl.FileSecurity]::new($filePath, [System.Security.Access\r\nControl.AccessControlSections]::All)\r\n```",
      "created_at": "2018-08-29T21:02:01Z",
      "updated_at": "2018-08-29T21:02:01Z"
    }
  ],
  "created_at": "2017-02-10T17:02:50Z",
  "labels": [
    "WG-Cmdlets",
    "Issue-Discussion"
  ],
  "number": 3128,
  "state": "open",
  "title": "Inaccurate results for Get-ACL due to lack of exception",
  "updated_at": "2018-08-29T21:02:11Z"
}