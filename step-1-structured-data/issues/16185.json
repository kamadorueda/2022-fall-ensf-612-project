{
  "_url": "https://github.com/PowerShell/PowerShell/issues/16185",
  "author": "IISResetMe",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n## PR Context\r\n\r\nAs originally propoesd in #12305, this PR adds a new `-Duration` parameter to the `Start-Sleep` cmdlet: \r\n\r\n```powershell\r\n$duration = New-TimeSpan -Seconds 2\r\n\r\n# -Duration accepts a [timespan] value\r\nStart-Sleep -Duration $duration\r\n\r\n# Supports positional binding\r\nStart-Sleep $duration\r\n\r\n# As well as pipeline binding\r\n$duration |Start-Sleep\r\n```\r\n\r\nThe existing parameter sets of `Start-Sleep` remain the same, and I have not changed the `DefaultParameterSetName`, but the pipeline binding _does_ interferes with the existing (buggy/counter-intuitive) binding behavior:\r\n```\r\n$ts = New-TimeSpan -Seconds 62 \r\n$ts |Start-Sleep \r\n```\r\n\r\nThis PR also adds range validation support for `[timespan]` values via `[ValidateRange()]`:\r\n```powershell\r\nfunction Test-TimeMachine {\r\n  param(\r\n    # The time machine can only go back in time\r\n    [ValidateRange('NonPositive')]\r\n    [timespan]$Distance\r\n  )\r\n  \r\n  # time-travel $Distance and back again\r\n}\r\n```\r\n\r\nStrict range validation is not of much immediate use, but in a possible future with timespan literals we could do:\r\n```powershell\r\nfunction Request-Vacation {\r\n  param(\r\n    [ValidateRange(1d, 60d)]\r\n    [timespan]$Duration\r\n  )\r\n  \r\n  # ...\r\n}\r\n```\r\n\r\n<!-- Summarize your PR between here and the checklist. -->\r\n\r\n## PR Context\r\n\r\nI believe this change is reasonable to make **without wrapping in an Experimental Feature** - the behavior that we're breaking (\"piped `[timespan]` values are interpreted as seconds % 60\") is rather counter-intuitive and deceptive. \r\n\r\n<!-- Provide a little reasoning as to why this Pull Request helps and why you have opened it. -->\r\n\r\n## PR Checklist\r\n\r\n- [X] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [X] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [ ] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [X] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [X] Issue filed: https://github.com/MicrosoftDocs/PowerShell-Docs/issues/8485\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [X] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [X] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and opened an issue in the relevant tool repository. This may include:\r\n        - [ ] Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode\r\n        (which runs in a different PS Host).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n",
  "closed_at": "2022-01-14T01:39:54Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "My understanding of PowerShell Committee conclusion in https://github.com/PowerShell/PowerShell/issues/12305#issuecomment-794481365 is that we need to implement something like\r\n```powershell\r\nStart-Sleep 3sec\r\nStart-Sleep 1.5min\r\n```\r\nThe PR is not follow the conclusion.",
      "created_at": "2021-10-02T12:48:53Z",
      "updated_at": "2021-10-02T12:49:23Z"
    },
    {
      "author": "IISResetMe",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov In order for that to ever work consistently, this change is needed. Without an option for binding `[timespan]` values the following would produce unexpected results:\r\n\r\n```\r\n# this would return after only 5 seconds\r\n1m5sec |Start-Sleep\r\n\r\n# ... for the same reason that this _currently_ returns after only 5 seconds\r\nNew-TimeSpan -Minutes 1 -Seconds 5 |Start-Sleep\r\n```",
      "created_at": "2021-10-02T21:57:25Z",
      "updated_at": "2021-10-02T21:58:18Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2021-10-10T02:00:39Z",
      "updated_at": "2021-10-10T02:00:39Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2021-12-06T02:00:43Z",
      "updated_at": "2021-12-06T02:00:43Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as stale because it has been marked as requiring author feedback but has not had any activity for **15 days**. It will be closed if no further activity occurs **within 10 days of this comment**.",
      "created_at": "2021-12-21T23:00:39Z",
      "updated_at": "2021-12-21T23:00:39Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2022-01-07T02:00:43Z",
      "updated_at": "2022-01-07T02:00:43Z"
    },
    {
      "author": "pull-request-quantifier[bot]",
      "author_association": "NONE",
      "body": "### ![](https://img.shields.io/static/v1?label=Quantified&message=Medium&color=yellow)\r\n\r\nThis PR has `185` quantified lines of changes. In general, a change size of upto `200` lines is ideal for the best PR experience!\r\n\r\n------\r\n\r\n<details >\r\n    <summary display=\"inline\"> <strong>Quantification details</strong></summary>\r\n    <p />\r\n\r\n```\r\nLabel      : Medium\r\nSize       : +185 -0\r\nPercentile : 57%\r\n\r\nTotal files changed: 4\r\n\r\nChange summary by file extension:\r\n.cs : +58 -0\r\n.resx : +112 -0\r\n.ps1 : +15 -0\r\n```\r\n> Change counts above are quantified counts, based on the [PullRequestQuantifier customizations](https://github.com/microsoft/PullRequestQuantifier/blob/main/docs/prquantifier-yaml.md).\r\n    \r\n</details>\r\n\r\n\r\n<details>\r\n    <summary display=\"inline\"> <strong>Why proper sizing of changes matters</strong> </summary>\r\n    <p/>\r\n    <p/>\r\n\r\nOptimal pull request sizes drive a better predictable PR flow as they strike a\r\nbalance between between PR complexity and PR review overhead. PRs within the\r\noptimal size (typical small, or medium sized PRs) mean:\r\n\r\n- Fast and predictable releases to production:\r\n  - Optimal size changes are more likely to be reviewed faster with fewer\r\niterations.\r\n  - Similarity in low PR complexity drives similar review times.\r\n- Review quality is likely higher as complexity is lower:\r\n  - Bugs are more likely to be detected.\r\n  - Code inconsistencies are more likely to be detetcted.\r\n- Knowledge sharing is improved within the participants:\r\n  - Small portions can be assimilated better.\r\n- Better engineering practices are exercised:\r\n  - Solving big problems by dividing them in well contained, smaller problems.\r\n  - Exercising separation of concerns within the code changes.\r\n\r\n#### What can I do to optimize my changes\r\n\r\n- Use the PullRequestQuantifier to quantify your PR accurately\r\n  - Create a context profile for your repo using the [context generator](https://github.com/microsoft/PullRequestQuantifier/releases)\r\n  - Exclude files that are not necessary to be reviewed or do not increase the review complexity. Example: Autogenerated code, docs, project IDE setting files, binaries, etc. Check out the `Excluded` section from your `prquantifier.yaml` context profile. \r\n  - Understand your typical change complexity, drive towards the desired complexity by adjusting the label mapping in your `prquantifier.yaml` context profile.\r\n  - Only use the labels that matter to you, [see context specification](./docs/prquantifier-yaml.md) to customize your `prquantifier.yaml` context profile.\r\n- Change your engineering behaviors\r\n  - For PRs that fall outside of the desired spectrum, review the details and check if:\r\n    - Your PR could be split in smaller, self-contained PRs instead\r\n    - Your PR only solves one particular issue. (For example, don't refactor and code new features in the same PR).\r\n\r\n#### How to interpret the change counts in git diff output\r\n\r\n- One line was added: `+1 -0`\r\n- One line was deleted: `+0 -1`\r\n- One line was modified: `+1 -1` (git diff doesn't know about modified, it will\r\ninterpret that line like one addition plus one deletion)\r\n- Change percentiles: Change characteristics (addition, deletion, modification)\r\nof this PR in relation to all other PRs within the repository.\r\n\r\n</details>\r\n\r\n<p />\r\n\r\n------\r\n\r\nWas this comment helpful? <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoiSUlTUmVzZXRNZSIsIlJlcG9zaXRvcnlMaW5rIjoiaHR0cHM6Ly9naXRodWIuY29tL1Bvd2VyU2hlbGwvUG93ZXJTaGVsbCIsIlB1bGxSZXF1ZXN0TGluayI6Imh0dHBzOi8vZ2l0aHViLmNvbS9Qb3dlclNoZWxsL1Bvd2VyU2hlbGwvcHVsbC8xNjE4NSIsIkV2ZW50VHlwZSI6IlRodW1ic1VwIn0=&amp;anonymous=True\" target=\"_blank\" title=\"Thumbs up\"><strong>:thumbsup:</strong></a> <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoiSUlTUmVzZXRNZSIsIlJlcG9zaXRvcnlMaW5rIjoiaHR0cHM6Ly9naXRodWIuY29tL1Bvd2VyU2hlbGwvUG93ZXJTaGVsbCIsIlB1bGxSZXF1ZXN0TGluayI6Imh0dHBzOi8vZ2l0aHViLmNvbS9Qb3dlclNoZWxsL1Bvd2VyU2hlbGwvcHVsbC8xNjE4NSIsIkV2ZW50VHlwZSI6Ik5ldXRyYWwifQ==&amp;anonymous=True\" target=\"_blank\" title=\"Neutral\"><strong>&nbsp;:ok_hand:</strong></a> <a href=\"https://pullrequestquantifierfeedback.azurewebsites.net/feedback?payload=eyJBdXRob3JOYW1lIjoiSUlTUmVzZXRNZSIsIlJlcG9zaXRvcnlMaW5rIjoiaHR0cHM6Ly9naXRodWIuY29tL1Bvd2VyU2hlbGwvUG93ZXJTaGVsbCIsIlB1bGxSZXF1ZXN0TGluayI6Imh0dHBzOi8vZ2l0aHViLmNvbS9Qb3dlclNoZWxsL1Bvd2VyU2hlbGwvcHVsbC8xNjE4NSIsIkV2ZW50VHlwZSI6IlRodW1ic0Rvd24ifQ==&amp;anonymous=True\" target=\"_blank\" title=\"Thumbs down\"><strong>&nbsp;:thumbsdown:</strong></a> (<a href=\"MAILTO:prquantifier@microsoft.com\" title=\"Mail to prquantifier@microsoft.com\">Email</a>)\r\n[Customize PullRequestQuantifier](https://github.com/PowerShell/PowerShell/blob/master/.github/prquantifier.yaml) for this repository.\r\n\r\n",
      "created_at": "2022-01-13T23:18:32Z",
      "updated_at": "2022-01-13T23:18:32Z"
    },
    {
      "author": "IISResetMe",
      "author_association": "COLLABORATOR",
      "body": "> @IISResetMe Can you please address the CodeFactor issues? No need to address all, but just those issue related to your new changes.\r\n\r\nThanks @daxian-dbw, I believe you already fixed all the relevant ones \ud83d\ude05  - the remaining issues all complain about documentation and I ignored those on purpose since it would break with the description convention in the existing comment docs (the property summaries all start with \"Allows sleep time to be ...\").\r\n\r\nI'm not sure why it says \"1 issue\", when I click through there's 5 and they all appear to be non-critical",
      "created_at": "2022-01-14T00:42:06Z",
      "updated_at": "2022-01-14T00:43:31Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "I guess the other 4 are known to CodeRefactor and the remaining one is new :)\r\nIf I understand correctly, this PR doesn't mean to close #12305, but just one building step toward the ask in that issue, right?",
      "created_at": "2022-01-14T01:41:10Z",
      "updated_at": "2022-01-14T01:42:05Z"
    },
    {
      "author": "IISResetMe",
      "author_association": "COLLABORATOR",
      "body": "> I guess the other 4 are known to CodeRefactor and the remaining one is new :) \r\n\r\nThat must be the one for the property I added then, all good!\r\n\r\n> [...] If I understand correctly, this PR doesn't mean to close #12305, but just one building step toward the ask in that issue, right?\r\n\r\nThat's exactly right! \r\n\r\nThe other half of the puzzle in #12305 is implementing tokenization and parsing logic for timespan literals so we can do:\r\n\r\n```\r\n5sec374ms |Start-Sleep\r\n```\r\n\r\nI intend to pick this up too :) ",
      "created_at": "2022-01-14T01:54:31Z",
      "updated_at": "2022-01-14T01:54:31Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.3.0-preview.2` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.3.0-preview.2)\n",
      "created_at": "2022-02-24T23:33:43Z",
      "updated_at": "2022-02-24T23:33:43Z"
    }
  ],
  "created_at": "2021-10-01T20:55:14Z",
  "number": 16185,
  "state": "closed",
  "title": "New Parameter: Start-Sleep [-Duration] <timespan>",
  "updated_at": "2022-02-24T23:33:43Z"
}