{
  "_url": "https://github.com/PowerShell/PowerShell/issues/1914",
  "author": "mcraveiro",
  "body": "Hi Powershellers,\n\nThanks for a fantastic project. I just tried using Powershell on Linux (Debian Testing) and it runs fine on a terminal so that is great news! Now, on Windows, I normally consume Powershell from within Emacs thanks to the amazing Powershell Mode[1]. On Linux, this did not work so well, with the shell failing to start. Whilst trying to get to the bottom of this, I decided to start Powershell within Emacs via bash and I got the following rather strange behaviour:\n\n```\n $ /usr/bin/powershell\nPowerShell \nCopyright (C) 2016 Microsoft Corporation. All rights reserved.\n\n\u001b[6n\u001b[6nPS /home/marco> \u001b[6n\u001b[6n\n\nOops, something went wrong.  Please report this bug with the details below.\nReport on GitHub: https://github.com/lzybkr/PSReadLine/issues/new\n-----------------------------------------------------------------------\nLast 0 Keys:\n\n\nException:\nSystem.DivideByZeroException: Attempted to divide by zero.\n   at Microsoft.PowerShell.PSConsoleReadLine.Initialize(Runspace runspace, EngineIntrinsics engineIntrinsics)\n   at Microsoft.PowerShell.PSConsoleReadLine.ReadLine(Runspace runspace, EngineIntrinsics engineIntrinsics)\n-----------------------------------------------------------------------\n\u001b[6n\u001b[\u001b[6n\n```\n\nCharacters such as `\u001b[6n\u001b[6n` appear without any key presses. Not really sure what could be causing this?\n\nMany thanks for your time.\n\nMarco\n\n[1] https://www.emacswiki.org/emacs/Powershell.el \n",
  "closed_at": "2016-11-09T20:43:31Z",
  "comments": [
    {
      "author": "kilasuit",
      "author_association": "COLLABORATOR",
      "body": "Firstly I think this may be to do with PSReadline so I'm adding in @lzybkr \n\nDoes it happen when you try running powershell with the -noprofile switch ?\n",
      "created_at": "2016-08-18T21:56:03Z",
      "updated_at": "2016-08-18T21:56:03Z"
    },
    {
      "author": "mcraveiro",
      "author_association": "NONE",
      "body": "Hi @kilasuit,\n\nThanks for the prompt reply. I'm afraid I get the exact same behaviour even with `-noprofile`. I get these spurious characters appearing after a few seconds or so - not sure if it makes any difference. They stop after a while and then I get the above exception.\n\nCheers  \n",
      "created_at": "2016-08-18T22:00:18Z",
      "updated_at": "2016-08-18T22:00:18Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "Hello! I just want to say that it makes me _incredibly_ happy to see someone using PowerShell under Emacs!\n\nI just want to give a quick hypothesis: this looks to me like an `System.Console` API we're depending on unexpectedly returned 0 (because of the Emacs `TERM` it's running under); probably something like `BufferWidth`; which of course isn't very useful.\n\nAlso, the `\ufffd[6n\ufffd[6n` you're seeing are _likely_ just the ASCII colors (again, a guess; I'm not an termcap code expert, I'd have to look it up).\n",
      "created_at": "2016-08-18T22:17:59Z",
      "updated_at": "2016-08-18T22:17:59Z"
    },
    {
      "author": "mcraveiro",
      "author_association": "NONE",
      "body": "Aha, great theory @andschwa! So if I use Emacs' ansi-term then suddenly Powershell behaves just like it does in a regular terminal. Sadly, this is not a solution for Powershell Mode. \n",
      "created_at": "2016-08-18T22:28:29Z",
      "updated_at": "2016-08-18T22:28:29Z"
    },
    {
      "author": "mcraveiro",
      "author_association": "NONE",
      "body": "Also, FWIW, when in regular shell (within Emacs):\n\n```\n$ echo $TERM\ndumb\n```\n",
      "created_at": "2016-08-18T22:30:12Z",
      "updated_at": "2016-08-24T11:05:55Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "90% chance if you set TERM to dumb even in a proper emulator like xterm, the same problems will arise. We might be able to be outsmart System.Console; but really we should file a bug with CoreFX.\n\n@mcraveiro are you using this particular fork of [PowerShell mode](https://github.com/jschaf/powershell.el)?\n",
      "created_at": "2016-08-24T14:13:11Z",
      "updated_at": "2016-08-24T14:13:11Z"
    },
    {
      "author": "mcraveiro",
      "author_association": "NONE",
      "body": "@andschwa good point - I installed it from ELPA/MELPA/etc (`package-list-packages`), without paying too much attention. Didn't realise it had been forked.\n",
      "created_at": "2016-08-25T21:56:56Z",
      "updated_at": "2016-08-25T21:56:56Z"
    },
    {
      "author": "andschwa",
      "author_association": "MEMBER",
      "body": "As far as I could tell, there half a dozen forks floating around. That appears to be the most recently maintained one.\n",
      "created_at": "2016-08-25T22:03:38Z",
      "updated_at": "2016-08-25T22:03:38Z"
    },
    {
      "author": "mcraveiro",
      "author_association": "NONE",
      "body": "By the by, tried using `dumb` within a regular gnome terminal. Not quite the same behaviour as Emacs, but a certain amount of oddness to it:\n\n```\n$ export TERM=dumb\n$ echo $TERM      \ndumb\n$ powershell      \nPowerShell \nCopyright (C) 2016 Microsoft Corporation. All rights reserved.\n\nPS /home/marco> PS /home/marco> l\n                                PS /home/marco> ls  \n<snip>\nPS /home/marco> \nPS /home/marco> PS /home/marco> e\n                                PS /home/marco> ex\n                                PS /home/marco> exi\n                                PS /home/marco> exit\n```\n\nCheers\n\nMarco\n",
      "created_at": "2016-08-25T22:13:08Z",
      "updated_at": "2016-08-25T22:13:51Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "This issue was moved to lzybkr/PSReadLine#467\n",
      "created_at": "2016-11-09T20:43:30Z",
      "updated_at": "2016-11-09T20:43:30Z"
    }
  ],
  "created_at": "2016-08-18T21:51:29Z",
  "number": 1914,
  "state": "closed",
  "title": "Running powershell under emacs results in an error",
  "updated_at": "2016-11-29T20:59:15Z"
}