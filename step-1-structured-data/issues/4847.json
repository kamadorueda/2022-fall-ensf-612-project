{
  "_url": "https://github.com/PowerShell/PowerShell/issues/4847",
  "author": "daxian-dbw",
  "body": "Fix #4812 \r\n\r\nSummary\r\n-----------\r\n\r\nWhen handling file redirection for CommandExpression, we don't call 'DoComplete' on the underlying `PipelineProcessor` of the `FileRedirection` object, and thus the `EndProcessing` method is not called on `Out-File`, which causes different behaviors between `<expr> > out.txt` and `<expr> | Out-File out.txt`.\r\n\r\nThe fix is to make sure 'DoComplete' is called after the stream output has been written to the redirection pipe.\r\n\r\nAlso fix another issue\r\n------------------------\r\nThis PR also fixes an issue that could mess up restoring the original pipes. Here is the repro:\r\n```\r\nPS> 1 *> b.txt > a.txt; 123\r\nCannot perform operation because object \"PipelineProcessor\" has already been disposed\r\n```\r\nThe root cause is that we don't always restore pipes in the correct order. Please see the code changes in `Compiler.cs` for more details.\r\n\r\n/cc @mklement0",
  "closed_at": "2017-09-20T21:39:03Z",
  "comments": [
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@lzybkr Can you please take a look when you have time? Thanks!",
      "created_at": "2017-09-19T20:28:20Z",
      "updated_at": "2017-09-19T20:28:20Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@lzybkr I opened the issue #4879 to tracking the effort to revisit the implementation of this method.",
      "created_at": "2017-09-20T20:27:50Z",
      "updated_at": "2017-09-20T20:28:20Z"
    }
  ],
  "created_at": "2017-09-15T23:45:24Z",
  "number": 4847,
  "state": "closed",
  "title": "Call 'DoComplete' when handling FileRedirection for CommandExpression",
  "updated_at": "2017-09-25T00:34:10Z"
}