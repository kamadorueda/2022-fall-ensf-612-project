{
  "_url": "https://github.com/PowerShell/PowerShell/issues/17683",
  "author": "maettu-this",
  "body": "### Summary of the new feature / enhancement\n\nIn the attached script a variable accidentally got forgotten to be assigned to, resulting in a value of `$null` being sent down the pipeline.\r\n\r\n[ResultWithAccidentalNull.ps1.txt](https://github.com/PowerShell/PowerShell/files/9113575/ResultWithAccidentalNull.ps1.txt)\r\n\r\nConsequently, the result of the script accidentally is an array of `[$null, 1]`, but:\r\n```\r\nPS C:\\<PATH> .\\ResultWithAccidentalNull.ps1\r\n1                               <= seems to look good\r\n```\r\n\r\nBut when assigning the result to a variable it gets queerish:\r\n```\r\nPS C:\\<PATH> $result = .\\ResultWithAccidentalNull.ps1\r\nPS C:\\<PATH> $result\r\n1                               <= still seems good\r\nPS C:\\<PATH> $result.Length\r\n2                               <= what ?!?\r\nPS C:\\<PATH> $result[0]         <= nothing ?!?\r\nPS C:\\<PATH> $result[1]\r\n1                               <= only now it becomes apparent where the intended result went to\r\n```\r\n\r\nThis behavior is rather confusing:\r\nThe `$null` value exists but is not indicated in any way.\r\n\r\nThis behavior is also inconsistent:\r\nA `result[1]` of an array with 2 or more items is expected to be indicated on the second line.\r\n\n\n### Proposed technical implementation details (optional)\n\nThe real world script of course is much bigger. Can you imagine how long it took us to find the root cause of this issue? I think there would be an obvious fix to improve this situation.\r\n\r\nIdeal result of this script:\r\n```\r\nPS C:\\<PATH> $result = .\\ResultWithAccidentalNull.ps1\r\nPS C:\\<PATH> $result\r\n                                <= result[0] is $null\r\n1                               <= result[1] is 1\r\n```",
  "closed_at": null,
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "`$null` when written to the host needs to be converted to a string, so it becomes an empty string:\r\n\r\n```powershell\r\n($null | out-string) -eq \"\"\r\n```\r\n\r\nReplacing it with a newline would certainly be a breaking change and can cause confusion in the other direction.\r\n\r\nIn your example, `$result[0]` returns `$null` which is an empty string so nothing is written out.  You can check that `$null -eq $result[0]` is `$true`.\r\n\r\nSince `$null` is a valid value in an array, some folks are likely depending on this behavior.",
      "created_at": "2022-07-18T20:24:02Z",
      "updated_at": "2022-07-18T20:24:02Z"
    },
    {
      "author": "JamesWTruher",
      "author_association": "MEMBER",
      "body": "> `$null` when written to the host needs to be converted to a string, so it becomes an empty string:\r\n> \r\n> ```powershell\r\n> ($null | out-string) -eq \"\"\r\n> ```\r\n\r\nit's also not necessary to `($null | out-string) -eq \"\"` as `\"$null\" -eq \"\"` gives the same result",
      "created_at": "2022-07-18T20:47:13Z",
      "updated_at": "2022-07-18T20:47:13Z"
    },
    {
      "author": "maettu-this",
      "author_association": "NONE",
      "body": "> `$null` when written to the host needs to be converted to a string, so it becomes an empty string:\r\n> \r\n> ```powershell\r\n> ($null | out-string) -eq \"\"\r\n> ```\r\nThis is fine, no need to change anything on this behavior.\r\n\r\nHowever, I think it is inconsistent behavior when outputting an array containing `$null`. Why? If `\"$null\" -eq \"\"`, outputting an array containing `\"$null\"` **or** `\"\"` should result in the same. But it doesn't. Array values of `\"\"` result in empty lines, whereas array values of `\"$null\"` result in nothing.\r\nThis doesn't make sense. The fact that lines are broken, i.e. an array value per line is output, is the behavior of outputting an array. It should have nothing to do with the value of the respective array item. The value of an array item should only define the content of the line, but not the fact that a line is output.\r\n\r\nOf course I do understand the compatibility / breaking change related considerations. Still, I think such inconsistency in behavior should also be considered to get fixed in the long run, in order to prevent people falling into (unecessary) traps.",
      "created_at": "2022-07-19T06:11:09Z",
      "updated_at": "2022-07-19T06:11:09Z"
    },
    {
      "author": "alxfnd",
      "author_association": "NONE",
      "body": "Why don't you try assigning the values into a hash table and reading from the table?\r\n\r\n$result = .\\ResultWithAccidentalNull.ps1\r\n$table = @{\r\nA = $result[0]\r\nB = $result[1]\r\n}\r\n$table\r\n\r\nThis should print out your null value and makes it easier to reference specific values later on.",
      "created_at": "2022-07-19T11:11:41Z",
      "updated_at": "2022-07-19T11:16:39Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "> `$null` when written to the host needs to be converted to a string, so it becomes an empty string:\r\n\r\nI believe they're saying that formatting shouldn't skip `$null`, but instead treat it the same way it does an empty string:\r\n\r\n![image](https://user-images.githubusercontent.com/24977523/179785769-f8701eb0-41f7-4c34-aec2-4b88f739a1b9.png)\r\n\r\nNot weighing in on if it should be done, just clarifying the request.",
      "created_at": "2022-07-19T15:15:38Z",
      "updated_at": "2022-07-19T15:15:38Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Yeah, it can be quite confusing to track down null values as it is, and this behaviour makes it even more confusing at times. \r\n\r\nI'd even be open to us writing out `$null` or `NULL` or something to make them easier to spot, but a blank entry instead of skipping the entry would be a good step forward nonetheless.",
      "created_at": "2022-07-19T17:56:24Z",
      "updated_at": "2022-07-19T17:56:24Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as by-design and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2022-07-20T21:01:13Z",
      "updated_at": "2022-07-20T21:01:13Z"
    },
    {
      "author": "maettu-this",
      "author_association": "NONE",
      "body": "> This issue has been marked as by-design and has not had any activity for **1 day**. It has been closed for housekeeping purposes.\r\n\r\nHmm... msftbot... Closing after just a day of inactivity? What if there is inactivity over a weekend? What if the `by-design` tag was applied a bit too early and no real resolution is there yet? Besides PowerShell handling `$null` values within an array, MS should also consider refining the configuration of the msftbot...",
      "created_at": "2022-07-22T11:46:09Z",
      "updated_at": "2022-07-22T11:46:09Z"
    },
    {
      "author": "maettu-this",
      "author_association": "NONE",
      "body": "Even more so that apparently I am not the only to question the handling of `$null`, see comments and #17701.",
      "created_at": "2022-07-22T11:47:53Z",
      "updated_at": "2022-07-22T11:47:53Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "If the request is purely changing how it is formatted, then formatting changes are not considered breaking changes (from a scripting point of view anyways).  Since `$true` is represented as `True`, then it may make sense for `$null` to be represented as `NULL`.  ",
      "created_at": "2022-08-01T21:43:45Z",
      "updated_at": "2022-08-01T21:43:45Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Tangentially related but possibly also potentially warranting a specific display usecase would be `[dbnull]::Value` which is currently indistinguishable in console output from `$null`.",
      "created_at": "2022-08-01T22:20:53Z",
      "updated_at": "2022-08-01T22:21:01Z"
    }
  ],
  "created_at": "2022-07-14T16:28:41Z",
  "number": 17683,
  "state": "open",
  "title": "$null should be indicated by a blank line, especially when within an array",
  "updated_at": "2022-08-01T22:21:01Z"
}