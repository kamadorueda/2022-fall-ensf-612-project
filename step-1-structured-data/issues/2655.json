{
  "_url": "https://github.com/PowerShell/PowerShell/issues/2655",
  "author": "Liturgist",
  "body": "In most of the languages I know, parentheses serve to provide subexpression evaluation related to the heirarchy of operators. Take the following Where-Object expression for example.\r\n\r\n`Get-ChildItem .\\t\\ | ? Name -Match \".*\\.txt\" # SUCCESSFUL`\r\n\r\nAdding parentheses around the expression causes failure\r\n\r\n`Get-ChildItem ./t/ | ? (Name -Match '.*\\.txt') # FAIL`\r\n\r\nCreating a ScriptBlock works, but the object must be referred to using $_. Why is that?\r\n\r\n`Get-ChildItem ./t/ | ? {Name -Match '.*\\.txt'} # FAIL`\r\n\r\nIt also appears that if I have multiple conditions to evaluate, that a ScriptBlock must be used. Is that correct? Parentheses can be used inside the ScriptBlock for operator precedence control.\r\n\r\n```\r\nGet-ChildItem ./t/ | ? {$_.Name -Match '.*\\.txt'} # SUCCESSFUL\r\nGet-ChildItem ./t/ | ? {($_.Name -Match '.*\\.txt')} # SUCCESSFUL\r\n```\r\n\r\nIf this is not a good place for this post, please suggest a better place. Thanks.",
  "closed_at": "2017-10-29T22:13:23Z",
  "comments": [],
  "created_at": "2016-11-09T22:54:56Z",
  "number": 2655,
  "state": "closed",
  "title": "Expression grouping operator precedence",
  "updated_at": "2017-10-29T22:13:23Z"
}