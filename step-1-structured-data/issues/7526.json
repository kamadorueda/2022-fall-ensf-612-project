{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7526",
  "author": "felixfbecker",
  "body": "To enable colored output in output formats, I can write a Format.ps1xml file that uses ANSI color codes like so:\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<Configuration>\r\n    <ViewDefinitions>\r\n        <!-- Resembles the git log output with format=medium (default) -->\r\n        <View>\r\n            <Name>Medium</Name>\r\n            <ViewSelectedBy>\r\n                <TypeName>PowerGit.CommitInfo</TypeName>\r\n            </ViewSelectedBy>\r\n            <ListControl>\r\n                <ListEntries>\r\n                    <ListEntry>\r\n                        <ListItems>\r\n                            <ListItem>\r\n                                <!-- Yellow -->\r\n                                <Label>&#27;[33mSha</Label>\r\n                                <ScriptBlock>\"$($_.Sha)$([char]0x001b)[0m\"</ScriptBlock>\r\n                            </ListItem>\r\n                            <ListItem>\r\n                                <Label>Author</Label>\r\n                                <PropertyName>Author</PropertyName>\r\n                            </ListItem>\r\n                            <ListItem>\r\n                                <Label>Date</Label>\r\n                                <ScriptBlock>\"$($_.Author.When)\"</ScriptBlock>\r\n                            </ListItem>\r\n                            <ListItem>\r\n                                <Label>Message</Label>\r\n                                <PropertyName>Message</PropertyName>\r\n                            </ListItem>\r\n                        </ListItems>\r\n                    </ListEntry>\r\n                </ListEntries>\r\n            </ListControl>\r\n        </View>\r\n    </ViewDefinitions>\r\n</Configuration>\r\n```\r\n\r\nNote the `&#27;[33m`, which is `ESC[33m`, which is the ANSI code for yellow, and `$([char]0x001b)[0m`, which is `ESC[0m`, which is the ANSI reset code.\r\nTogether, this will color the whole line yellow:\r\n\r\n<img width=\"452\" alt=\"image\" src=\"https://user-images.githubusercontent.com/10532611/44112434-6167e756-a005-11e8-8c14-895d27beba56.png\">\r\n\r\njust like in `git log` output:\r\n\r\n<img width=\"345\" alt=\"image\" src=\"https://user-images.githubusercontent.com/10532611/44112448-6b503818-a005-11e8-88da-5e6dabca365d.png\">\r\n\r\nHOWEVER this is actually not valid XML. Every good XML parser will rightfully complain:\r\n\r\n<img width=\"378\" alt=\"image\" src=\"https://user-images.githubusercontent.com/10532611/44112545-9eedc992-a005-11e8-8aab-0b435ab94fa1.png\">\r\n\r\nSee https://en.wikipedia.org/wiki/Valid_characters_in_XML#XML_1.0\r\n\r\nWhich means these format files cannot be statically checked, generated, codemodded, etc.\r\n\r\nIt _is_ valid in XML 1.1: https://en.wikipedia.org/wiki/Valid_characters_in_XML#XML_1.1\r\n\r\nBut if I change the parsing instruction to\r\n\r\n```xml\r\n<?xml version=\"1.1\" encoding=\"utf-8\"?>\r\n```\r\n\r\nPowerShell errors:\r\n```powershell\r\nImport-Module : Errors occurred while loading the format data file:\r\n/Users/felix/src/github.com/felixfbecker/PowerGit/PowerGit/Formats/PowerGit.CommitInfo.formats.ps1xml, Error in file /Users/felix/src/github.com/felixfbecker/PowerGit/PowerGit/Formats/PowerGit.CommitInfo.formats.ps1xml: Version number '1.1' is invalid. Line 1, position 16.\r\nAt /Users/felix/src/github.com/felixfbecker/PowerGit/PowerGit/Import-PowerGit.ps1:32 char:1\r\n+ Import-Module -Name (Join-Path -Path $PSScriptRoot -ChildPath 'PowerG ...\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : InvalidOperation: (:) [Import-Module], RuntimeException\r\n+ FullyQualifiedErrorId : FormatXmlUpdateException,Microsoft.PowerShell.Commands.ImportModuleCommand\r\n```\r\n\r\nIt effectively already parses XML 1.1 fine though, it just complains about the version.\r\n",
  "closed_at": "2021-07-08T21:00:50Z",
  "comments": [
    {
      "author": "felixfbecker",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT responding to https://github.com/PowerShell/PowerShell/issues/7749#issuecomment-428669573\r\n\r\n> unfortunately, the best I can tell, the .NET XmlDocument type only supports XML 1.0.\r\n\r\nIt seems like the parser is parsing XML 1.1 just fine though, it just rejects the 1.1 processing instruction. Could we just regex replace the version in the processing instruction before handing the string to the parser? It\u2019s just the first line and not full XML, so should be safe to transform with a regex.",
      "created_at": "2018-10-18T07:59:28Z",
      "updated_at": "2018-10-18T07:59:28Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@felixfbecker a bit hacky, but it might be acceptable.  Need someone more of an expert with XML to indicate if there are any unanticipated side effects",
      "created_at": "2018-10-19T01:38:26Z",
      "updated_at": "2018-10-19T01:38:26Z"
    },
    {
      "author": "JamesWTruher",
      "author_association": "MEMBER",
      "body": "it seems like 1.1 added new capabilities which PowerShell may not be able to understand. At this point, we think it should remain xml version 1.0.",
      "created_at": "2021-06-01T19:32:47Z",
      "updated_at": "2021-06-01T19:32:47Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as by-design and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2021-07-08T21:00:49Z",
      "updated_at": "2021-07-08T21:00:49Z"
    }
  ],
  "created_at": "2018-08-14T19:08:32Z",
  "labels": [
    "Issue-Enhancement",
    "Resolution-By Design",
    "WG-Cmdlets-Core"
  ],
  "number": 7526,
  "state": "closed",
  "title": "Allow .ps1xml files in XML 1.1",
  "updated_at": "2021-07-08T21:00:50Z"
}