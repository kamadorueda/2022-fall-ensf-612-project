{
  "_url": "https://github.com/PowerShell/PowerShell/issues/8019",
  "author": "constantinhager",
  "body": "\r\nHello,\r\n\r\nI want to edit a gist in github via PowerShell. The gist is a private gist.\r\nThe PAT Token has the right to create gists. I have tried It with the stable build of PowerShell Core 6.1.\r\nI read the documentation and Produced the following PowerShell:\r\n\r\n```powershell\r\n$Uri = \"https://api.github.com/gists/xxxx\"\r\n\r\n[HashTable]$Body = @{\r\n      description = \"Description\"\r\n      files       = @{\r\n          \"Test.txt\" = @{\r\n               content  = \"Test Content\"\r\n               filename = \"Test.txt\"\r\n          }\r\n      }\r\n}\r\n\r\n$base64AuthInfo = [Convert]::ToBase64String([Text.Encoding]::ASCII.GetBytes((\"{0}:{1}\" -f $UserName, $PATToken)))\r\n$Header = @{\"Authorization\" = (\"Basic {0}\" -f $base64AuthInfo)}\r\n$ApiBody = ConvertTo-Json -InputObject $Body -Compress\r\n$result = Invoke-RestMethod -Uri $Uri -Method \"PATCH\" -Headers $Header -Body $ApiBody -ContentType \"application/json\"\r\n```\r\n\r\nI do not get any result back and the gist isn't changing either. If I try It with for example Postman the gist gets updated. \r\n\r\nAny help would be appreciated.\r\n\r\nThanks\r\nConstantin",
  "closed_at": "2018-10-15T07:33:24Z",
  "comments": [
    {
      "author": "thezim",
      "author_association": "CONTRIBUTOR",
      "body": "Try converting the body to JSON first with 'ConvertTo-JSON' and use that as the `-Body` parameter. I think the Body as hashtable is only one level deep. At least that is what I get from the documentation but that could be wrong too.",
      "created_at": "2018-10-13T14:25:33Z",
      "updated_at": "2018-10-13T14:25:33Z"
    },
    {
      "author": "constantinhager",
      "author_association": "NONE",
      "body": "i did that\r\n```PowerShell\r\n$ApiBody = ConvertTo-Json -InputObject $Body -Compress\r\n```\r\n\r\nand then I assigned It to the Body parameter \r\n```PowerShell\r\nInvoke-RestMethod -Uri $Uri -Method \"PATCH\" -Headers $Header -Body $ApiBody -ContentType \"application/json\"\r\n```",
      "created_at": "2018-10-13T17:04:13Z",
      "updated_at": "2018-10-13T17:04:13Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@constantinhager: I assume you're saying that explicitly passing a JSON string to `-Body` solved your problem, correct?\r\nIf so, could you please close this issue?\r\n\r\n@thezim: I'm not too familiar with `Invoke-RestMethod`, but, based on my brief experiments and  the following excerpt from the docs:\r\n\r\n> When the input is a GET request, and the body is an IDictionary (typically, a hash table), the body is added to the URI as query parameters. For other request types (such as POST), the body is set as the value of the request body in the standard name=value format.\r\n\r\nI'd say that a hashtable passed to `-Body` is _never_ converted to a JSON string, even with <br>`-ContentType application/json`.\r\n\r\nFrom what I gather, the `-Body` parameter's from-hashtable conversion is only useful for:\r\n\r\n* GET requests that you want to submit via a query string appended to the URL.\r\n\r\n* Other requests such as POST that use content type `application/x-www-form-urlencoded`.\r\n\r\nIn all other cases you're expected to pass a string that matches the format specified via `-ContentType`.\r\n\r\n",
      "created_at": "2018-10-13T20:13:44Z",
      "updated_at": "2018-10-13T20:13:44Z"
    },
    {
      "author": "constantinhager",
      "author_association": "NONE",
      "body": "i did that\r\n\r\n`$ApiBody = ConvertTo-Json -InputObject $Body -Compress`\r\n\r\nand then I assigned It to the Body parameter\r\n`Invoke-RestMethod -Uri $Uri -Method \"PATCH\" -Headers $Header -Body $ApiBody -ContentType \"application/json\"`\r\n\r\nI get nothing back and the gist does not change. So that does not solve my problem",
      "created_at": "2018-10-14T06:52:13Z",
      "updated_at": "2018-10-14T06:52:13Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks, @constantinhager. In the future, please include the _outcome_ of what (else) you've tried up front, so this back and forth can be avoided.\r\n",
      "created_at": "2018-10-14T16:42:01Z",
      "updated_at": "2018-10-14T16:42:01Z"
    },
    {
      "author": "thezim",
      "author_association": "CONTRIBUTOR",
      "body": "I could not repro the issue, the below worked for me with a private `gist` and the appropriate API token with `Create gists` permission.\r\n\r\n```powershell\r\n$Uri = \"https://api.github.com/gists/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\r\n\r\n[HashTable]$Body = @{\r\n      description = \"New Description\"\r\n      files       = @{\r\n          \"gistfile1.txt\" = @{\r\n               content  = \"New Test Content\"\r\n               filename = \"gistfile1.txt\"\r\n          }\r\n      }\r\n}\r\n$UserName = \"thezim\"\r\n$PATToken = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\r\n$base64AuthInfo = [Convert]::ToBase64String([Text.Encoding]::ASCII.GetBytes((\"{0}:{1}\" -f $UserName, $PATToken)))\r\n$Header = @{\"Authorization\" = (\"Basic {0}\" -f $base64AuthInfo)}\r\n$ApiBody = ConvertTo-Json -InputObject $Body -Compress\r\n$result = Invoke-RestMethod -Uri $Uri -Method \"PATCH\" -Headers $Header -Body $ApiBody -ContentType \"application/json\"\r\n```\r\n\r\n```\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.1.0\r\nPSEdition                      Core\r\nGitCommitId                    6.1.0\r\nOS                             Darwin 17.7.0 Darwin Kernel Version 17.7.0: Thu Jun 21 22:53:14 PDT 2018; root:xnu-4570.71.2~1/RELEASE_X86_64\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```",
      "created_at": "2018-10-14T17:09:10Z",
      "updated_at": "2018-10-14T17:09:10Z"
    },
    {
      "author": "constantinhager",
      "author_association": "NONE",
      "body": "Thank you. That worked. Strange. I called the invoke-restmethod out of another function. This is not working. Thank you for the assistance.",
      "created_at": "2018-10-15T07:33:24Z",
      "updated_at": "2018-10-15T07:33:24Z"
    }
  ],
  "created_at": "2018-10-13T13:40:00Z",
  "number": 8019,
  "state": "closed",
  "title": "Problems with Invoke-Restmethod and the PATCH method ",
  "updated_at": "2018-10-30T05:51:22Z"
}