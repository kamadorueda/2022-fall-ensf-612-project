{
  "_url": "https://github.com/PowerShell/PowerShell/issues/14668",
  "author": "mccarrm",
  "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 and PowerShell 7+ issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6).\r\n\r\n-->\r\n\r\n## Steps to reproduce\r\n\r\n```powershell\r\n\r\nGet-ChildItem -LiteralPath '\\\\?\\D:\\'\r\nGet-ChildItem -LiteralPath '\\\\?\\UNC\\server\\share'\r\n\r\n```\r\n\r\n## Expected behavior\r\n\r\n```none\r\nGets the items in the specified location.\r\n```\r\n\r\n## Actual behavior\r\n\r\n```none\r\nGets the items in the root of the current drive (e.g. C:\\).  Same cmdlet in PSVersion 5.1 gets the items in the specified location.\r\n```\r\n\r\n## Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.1\r\nPSEdition                      Core\r\nGitCommitId                    7.1.1\r\nOS                             Microsoft Windows 10.0.14393\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Related: #10805\r\n\r\nThe short of it:\r\n\r\n* In PowerShell Core, long paths are supported _by default_, so the `\\\\?` opt-in prefixes are never _needed_.\r\n\r\n* However, they should still be _supported_, not least for the sake of cross-edition code - and currently, they're mostly not.\r\n\r\n\r\n\r\n",
      "created_at": "2021-01-26T16:24:51Z",
      "updated_at": "2021-01-26T16:25:16Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Definitely a bug that needs to be fixed in my opinion. #14078 doesn't seem to include the specific problem this issue is about -- `Get-ChildItem -LiteralPath '\\\\?\\D:\\'` shows files/folders under `C:\\` instead, so I think we should not close this issue as a dup.\r\n\r\n@SteveL-MSFT mentioned in https://github.com/PowerShell/PowerShell/issues/10805#issuecomment-579516971\r\n> I get that users may want to use the \\\\?\\ legacy syntax, but it's not clear to me how impactful that is to motivate spending the time to fix this.\r\n\r\nI'm not sure if that statement also applies to this issue. Happy to see other people's thoughts.",
      "created_at": "2021-01-27T18:06:12Z",
      "updated_at": "2021-01-27T18:19:43Z"
    },
    {
      "author": "AlphaR3C0N",
      "author_association": "NONE",
      "body": "Another use case for this old syntax is working with volumes in Windows that don't have drive letters (I know it's easy enough to assign letters but in some cases, you don't want to).\r\n\r\nIn the attached screenshot, both outputs should be the same (PS7.1.3 left, WPS5.1 right), instead PS7 returns the contents of C: for each volume (There are only 2 sets of results on the right cause the third volume was empty).\r\n\r\nThe path returned by ```$volume.UniqueId``` is the same in both versions (In format: ```\\\\?\\Volume{0297bb38-1cf2-40db-abd1-8f7cb8539b8a}\\```) but after being passed through ```Get-ChildItem```, it always ends up being ```C:``` in PS7.\r\n\r\nThis was run on Windows 10 Enterprise 21H1.\r\n\r\n![Screenshot 2021-06-09 170018](https://user-images.githubusercontent.com/58408155/121303444-309b1000-c94f-11eb-858d-e1a6108582d7.png)\r\n",
      "created_at": "2021-06-09T06:19:39Z",
      "updated_at": "2021-06-09T07:26:08Z"
    }
  ],
  "created_at": "2021-01-26T16:16:19Z",
  "labels": [
    "Issue-Bug",
    "WG-Cmdlets-Management",
    "WG-Engine-Providers",
    "Area-FileSystem-Provider"
  ],
  "number": 14668,
  "state": "open",
  "title": "GCI of extended-length path \"\\\\?\\\" returns incorrect items",
  "updated_at": "2021-11-30T07:39:23Z"
}