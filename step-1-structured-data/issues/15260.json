{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15260",
  "author": "iSazonov",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\nBetter to review commit by commit:\r\n1. First commit comes from #14902\r\n2. Second commit fix #15248 (see also #15253)\r\n3. Third commit reformat old tests\r\n4. Fourth commit add new test\r\n\r\n--------\r\n\r\nAbout second commit.\r\n\r\nPartial regression in #14902. Partial because there are other code paths (a path comes from public with trailing backslash) which can raise an issue in the place.\r\n\r\n[Docs](https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-findfirstfileexw#parameters) say that  FindFirstFileEx does not accept a path with a trailing backslash (\\\\).\r\n\r\nThe fix is always removing a trailing backslash from path string before calling FindFirstFileEx.\r\n\r\n--------\r\n\r\nBefore the fix only enumeration (Get-ChildItem) worked on OneDrive. \r\nNow Remove-Item correctly removes folders and files on OneDrive too.\r\n\r\n1. Enhance IsReparsePointLikeSymlink() method so that exclude non named surrogates from reparse points. As result PowerShell recurse into such reparse points which is a OneDrive entities.\r\n1.  Use updated IsReparsePointLikeSymlink() method in RemoveDirectoryInfoItem() and NameString() methods \r\n1. Add new tests and a test hook to emulate old PowerShell behavior and test new PowerShell behavior on OneDrive.\r\n1. Add small perf improvement in Dir() and IsReparsePointLikeSymlink() methods to exclude extra p/invoke in most scenarios. \r\n\r\n## PR Context\r\n\r\nReplace #14860 and #14902 (reverted in #15253)\r\n\r\nRelated #9246\r\n\r\n<!-- Provide a little reasoning as to why this Pull Request helps and why you have opened it. -->\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [ ] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [ ] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and opened an issue in the relevant tool repository. This may include:\r\n        - [ ] Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode\r\n        (which runs in a different PS Host).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n        - [ ] Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n            - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n",
  "closed_at": "2021-04-27T19:31:13Z",
  "comments": [
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "/azp list",
      "created_at": "2021-04-19T18:43:10Z",
      "updated_at": "2021-04-28T20:44:35Z"
    },
    {
      "author": "azure-pipelines[bot]",
      "author_association": "NONE",
      "body": "<samp>\nCI/CD Pipelines for this repository:<br>\r\n<ul type=\"none\"><li><a href=\"https://dev.azure.com/powershell/2972bb5c-f20c-4a60-8bd9-00ffe9987edc/_build/definition?definitionId=14\">PowerShell-CI-macos</a></li><li><a href=\"https://dev.azure.com/powershell/2972bb5c-f20c-4a60-8bd9-00ffe9987edc/_build/definition?definitionId=17\">PowerShell-CI-linux</a></li><li><a href=\"https://dev.azure.com/powershell/2972bb5c-f20c-4a60-8bd9-00ffe9987edc/_build/definition?definitionId=19\">PowerShell-CI-windows</a></li><li><a href=\"https://dev.azure.com/powershell/2972bb5c-f20c-4a60-8bd9-00ffe9987edc/_build/definition?definitionId=22\">PowerShell-CI-static-analysis</a></li><li><a href=\"https://dev.azure.com/powershell/2972bb5c-f20c-4a60-8bd9-00ffe9987edc/_build/definition?definitionId=32\">PowerShell-CI-Windows-daily</a></li><li><a href=\"https://dev.azure.com/powershell/2972bb5c-f20c-4a60-8bd9-00ffe9987edc/_build/definition?definitionId=33\">PowerShell-CI-install-ps</a></li><li><a href=\"https://dev.azure.com/powershell/2972bb5c-f20c-4a60-8bd9-00ffe9987edc/_build/definition?definitionId=85\">PowerShell-CI-SSH</a></li><li><a href=\"https://dev.azure.com/powershell/2972bb5c-f20c-4a60-8bd9-00ffe9987edc/_build/definition?definitionId=92\">SSH-Tests</a></li><li><a href=\"https://dev.azure.com/powershell/2972bb5c-f20c-4a60-8bd9-00ffe9987edc/_build/definition?definitionId=97\">PowerShell-Windows-Packaging-CI</a></li></ul>\n</samp>",
      "created_at": "2021-04-19T18:43:16Z",
      "updated_at": "2021-04-28T20:44:30Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "/azp run  PowerShell-CI-Windows-daily",
      "created_at": "2021-04-19T18:43:34Z",
      "updated_at": "2021-04-19T18:43:34Z"
    },
    {
      "author": "azure-pipelines[bot]",
      "author_association": "NONE",
      "body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>",
      "created_at": "2021-04-19T18:43:47Z",
      "updated_at": "2021-04-19T18:43:47Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@rjmholt See how to run the CI that tests the issue here:  https://github.com/PowerShell/PowerShell/pull/15260#issuecomment-822691420",
      "created_at": "2021-04-19T18:46:15Z",
      "updated_at": "2021-04-19T18:46:15Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2021-04-27T02:00:07Z",
      "updated_at": "2021-04-27T02:00:07Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "/azp run PowerShell-CI-Windows-daily\r\n\r\n",
      "created_at": "2021-04-27T16:29:23Z",
      "updated_at": "2021-04-27T16:29:23Z"
    },
    {
      "author": "azure-pipelines[bot]",
      "author_association": "NONE",
      "body": "<samp>\nAzure Pipelines successfully started running 1 pipeline(s).<br>\r\n\n</samp>",
      "created_at": "2021-04-27T16:29:32Z",
      "updated_at": "2021-04-27T16:29:32Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "Ok this seems to be passing CI so I'm going to merge, but we'll just need to keep an eye out for CI failures later on",
      "created_at": "2021-04-27T19:31:06Z",
      "updated_at": "2021-04-27T19:31:06Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "Verified this passed CI after merge: \r\nhttps://dev.azure.com/powershell/PowerShell/_build/results?buildId=77087&view=results",
      "created_at": "2021-04-28T20:44:06Z",
      "updated_at": "2021-04-28T20:44:06Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "We've picked up a test failure during release testing that we think is caused by this change.\r\n\r\nThe failing tests are these:\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/dd5cf8670a49dec25ce5763814efaf2092e321f8/test/powershell/Modules/Microsoft.PowerShell.Management/FileSystem.Tests.ps1#L960-L999\r\n\r\nAnd the error message is this:\r\n\r\n```\r\nPS:31> Remove-Item -Path $longFilePath\r\nRemove-Item: The system cannot find the path specified.\r\n```\r\n\r\nException:\r\n```\r\nNativeErrorCode : 3\r\nErrorCode       : -2147467259\r\nTargetSite      : Boolean IsReparsePointLikeSymlink(System.IO.FileSystemInfo)\r\nStackTrace      :    at Microsoft.PowerShell.Commands.InternalSymbolicLinkLinkCodeMethods.IsReparsePointLikeSymlink(Fil\r\n                  eSystemInfo fileInfo) in System.Management.Automation.dll:token 0x60016f5+0x97\r\n                     at Microsoft.PowerShell.Commands.RemoveItemCommand.ProcessRecord() in\r\n                  Microsoft.PowerShell.Commands.Management.dll:token 0x60004dd+0x2e2\r\n                     at System.Management.Automation.CommandProcessor.ProcessRecord() in\r\n                  System.Management.Automation.dll:token 0x60020f6+0x1ae\r\nMessage         : The system cannot find the path specified.\r\nData            : {}\r\nInnerException  :\r\nHelpLink        :\r\nSource          : System.Management.Automation\r\nHResult         : -2147467259\r\n```\r\n\r\nThe error is thrown here:\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/dd5cf8670a49dec25ce5763814efaf2092e321f8/src/System.Management.Automation/namespaces/FileSystemProvider.cs#L8248-L8254\r\n\r\nIt appears that using [`FindFirstFileExW`](https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-findfirstfileexw), we need to:\r\n\r\n- Ensure the path exists before calling the Windows API\r\n- Ensure that long paths are converted to the long path format appropriately\r\n\r\nIt also seems that the long path tests to catch this did not in our daily builds and we need to investigate why.\r\n\r\n<blockquote><img src=\"https://repository-images.githubusercontent.com/49609581/aad0ad80-cdec-11ea-8248-a37bc0571bfd\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/PowerShell/PowerShell\">PowerShell/PowerShell</a></strong></div><div>PowerShell for every system! Contribute to PowerShell/PowerShell development by creating an account on GitHub.</div></blockquote>",
      "created_at": "2021-05-26T22:23:15Z",
      "updated_at": "2021-05-26T22:25:08Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> We've picked up a test failure during **release testing** that we think is caused by this change.\r\n\r\nI wonder CIs was passed successfully.",
      "created_at": "2021-05-27T06:24:01Z",
      "updated_at": "2021-05-27T06:24:01Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.2.0-preview.6` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.2.0-preview.6)\n",
      "created_at": "2021-05-27T17:32:20Z",
      "updated_at": "2021-05-27T17:32:20Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "I discussed this with @daxian-dbw, @adityapatwardhan and @anmenaga in a maintainer review and rather than trying to fix this as is, we think the previous bug is easier to live with than the new bug and that we need to revert it. We can accept a full solution later.",
      "created_at": "2021-06-08T21:29:20Z",
      "updated_at": "2021-06-08T21:33:28Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.2.0-preview.7` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.2.0-preview.7)\n",
      "created_at": "2021-06-17T16:58:57Z",
      "updated_at": "2021-06-17T16:58:57Z"
    }
  ],
  "created_at": "2021-04-17T14:48:28Z",
  "number": 15260,
  "state": "closed",
  "title": "Enhance Remove-Item to work with OneDrive (Second)",
  "updated_at": "2022-06-07T19:48:52Z"
}