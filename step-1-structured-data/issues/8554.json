{
  "_url": "https://github.com/PowerShell/PowerShell/issues/8554",
  "author": "ghost",
  "body": "# Summary of the new feature/enhancement\r\n\r\nAs as user, I want the same 'clear' experience in PowerShell on *nix, as I have in Windows. Currently, if I use 'clear' in Windows, this clears the buffer. Currently, in *nix, it appears to create a gap of blank lines and leaves the buffer mostly intact; so, I can scroll up to see the history.\r\n\r\nI _believe_ that this is because pwsh is leveraging terminal and when clear is input by the user, it is passed to the terminal. However, the behaviour one would expect should be the equivalent of 'tput reset' in the terminal window - as this would be the same experience seen in PowerShell in Windows.\r\n\r\n# Proposed technical implementation details (optional)\r\n\r\nInstead of allowing 'clear' to pass to the terminal, translate the command to 'tput reset' and pass that to the terminal.",
  "closed_at": "2019-01-08T17:38:57Z",
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "`Clear-Host` is just a function that calls the `clear` application.  I don't see any reason not to change it to call `tput reset` instead as it would be consistent with Windows.",
      "created_at": "2018-12-28T08:29:18Z",
      "updated_at": "2018-12-28T08:29:18Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Interestingly, on macOS, `tput reset` doesn't clear the scrollback buffer.  However, if I follow it with \"`e[3J\" to explicitly clear the scrollback buffer, I believe the result is the desired behavior.  cc @mklement0 who is more of an expert on this",
      "created_at": "2018-12-28T08:36:34Z",
      "updated_at": "2018-12-28T08:36:34Z"
    },
    {
      "author": "ghost",
      "author_association": "NONE",
      "body": "I wonder if the session manager for OSX is different. If so, you could use something like:\r\n\r\n`if($Env:SESSION_MANAGER.Contains(\"unix\")){ tput reset}`\r\n\r\nAnd then case another if statement for OSX. \r\n\r\nI haven't an OSX device, so I can't test what the environment variables would be, to help any further.",
      "created_at": "2018-12-28T11:40:04Z",
      "updated_at": "2018-12-28T11:40:04Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "To get a consistent clear-screen-and-scrollback-buffer experience, I suggest using ``tput clear; $host.ui.Write(\"`e[3J\")``, as suggested in my review comments - this works with both iTerm2.app and Terminal.app on macOS and the standard terminal app on Ubuntu.\r\n\r\nThat said: While consistency across platforms is nice, do note that macOS / Linux users may expect the scrollback buffer NOT to be cleared with `clear`, given that's what the native `/usr/bin/clear` utility does.\r\n\r\nSo I wonder whether we should simply defer to the native utility on Unix-like platforms (i.e., remove the alias on Unix-like platforms).\r\n\r\nIf we do that, users who want the Windows clear-screen-and-scrollback-buffer behavior on Unix must - as they currently do:\r\n\r\n* use `tput reset` on Ubuntu\r\n* use keyboard shortcut <kbd>Command-K</kbd> on macOS (both iTerm2.app and Terminal.app), because on macOS `tput reset` only clears the screen, without clearing the scrollback buffer.\r\n\r\n\r\n\r\n\r\n",
      "created_at": "2018-12-28T13:33:05Z",
      "updated_at": "2018-12-28T13:43:31Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Assuming that cls is also an alias for Clear-Host currently, we could use that selectively to implement the clear-screen-and-buffer logic on Unix, while making `clear` defer to the native utility ",
      "created_at": "2018-12-28T15:43:37Z",
      "updated_at": "2018-12-28T15:43:37Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@mklement0 you make a good point that Unix users may expect the scroll back buffer not to be cleared since that is the default behavior of `clear`.  Removing the `clear` alias might be the right thing to do while having `cls` aliased to `clear-host` which clears the scrollback buffer to have consistency with Windows.",
      "created_at": "2018-12-28T22:42:46Z",
      "updated_at": "2018-12-28T22:42:46Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee reviewed this and agrees to remove `clear` alias on non-Windows, but the cmdlet should only be calling [Console]::Clear() and depend on .NET CoreFX to do the \"right thing\" which is currently terminal specific.",
      "created_at": "2019-01-07T21:48:39Z",
      "updated_at": "2019-01-07T21:48:39Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT: It would still be nice to at least allow opt-in via a  switch to also clearing the scrollback buffer on Unix-like platforms - please see #8606",
      "created_at": "2019-01-08T11:33:55Z",
      "updated_at": "2019-01-08T11:33:55Z"
    }
  ],
  "created_at": "2018-12-28T08:07:49Z",
  "number": 8554,
  "state": "closed",
  "title": "'clear' should leverage tput reset on *nix",
  "updated_at": "2019-01-19T07:59:44Z"
}