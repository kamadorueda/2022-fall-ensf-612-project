{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6164",
  "author": "mklement0",
  "body": "**Wishful thinking**:\r\n\r\n```powershell\r\n# Script block as replacement operand allows dynamic substitutions.\r\n# TBD: how to refer to the match at hand in the script block.\r\n> 'Increment these numbers: 1 2 3' -replace '\\d+', { [int] $Args.Value + 1 }   \r\nIncrement these numbers: 2 3 4\r\n```\r\n\r\nSometimes string replacements need to be _dynamic_, i.e., the replacement string must be _derived from the match at hand_.\r\n\r\nConsider the following (contrived example):\r\n\r\nYou want to increment all numbers in an input string; e.g.:  \r\n\r\n`'Increment these numbers: 1 2 3'` -> `'Increment these numbers: 2 3 4'`\r\n\r\nCurrently, `-replace` doesn't support this type of replacement, because the replacement operand can only _statically_ refer to the match at hand (`$&` for the match in full, `$1` for the 1st capture group's match (if any), ...).\r\n\r\nThus, to achieve this kind of substitution the .NET Framework must currently be used:\r\n\r\n```powershell\r\n> [regex]::Replace('Increment these numbers: 1 2 3', '\\d+', { param($match) [int] $match.Value + 1 })\r\nIncrement these numbers: 2 3 4\r\n```\r\n\r\nNeedless to say, this is neither PowerShell-like nor simple.\r\n\r\n---\r\n\r\nSupporting the syntax as proposed at the top would greatly simplify such operations.\r\n\r\n### Syntax details\r\n\r\nThe simplest approach is to use `[regex]::Replace()` as-is behind the scenes, and let  the script block reference the match at hand - which is passed as a `[System.Text.RegularExpressions.Match]` instance - via `$Args` (or, optionally, an explicitly defined parameter via `param()`).\r\n\r\nThe alternative is to stick with the `$&`, `$1`, ... syntax, but that would require behind-the-scenes manipulation of the script block.\r\n\r\n### Backward-compatibility considerations\r\n\r\nCurrently, attempting to use a script block as the replacement operand simply _stringifies_ that block (i.e., uses its _string contents_ as the replacement string).\r\n\r\nSince this behavior isn't useful, it's hard to imagine anyone relying on it, so this change probably falls into [Bucket 3: Unlikely Grey Area](https://github.com/PowerShell/PowerShell/blob/master/docs/dev-process/breaking-change-contract.md#bucket-3-unlikely-grey-area)\r\n\r\n\r\nEnvironment data\r\n----------------\r\n\r\nWritten as of  PowerShell Core v6.0.1\r\n",
  "closed_at": "2018-03-14T16:43:59Z",
  "comments": [
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "This is approved in in review, see https://github.com/PowerShell/PowerShell/pull/6029",
      "created_at": "2018-02-16T00:47:45Z",
      "updated_at": "2018-02-16T00:47:45Z"
    },
    {
      "author": "LaurentDardenne",
      "author_association": "NONE",
      "body": "To allow [this call](https://msdn.microsoft.com/en-us/library/ms149474(v=vs.110).aspx) would also be appreciated :\r\n```powershell\r\n'Increment these numbers: 1 2 3' -replace '\\d +', {[int] $ Args.Value + 1}, $Count, $StartAt\r\n```\r\n",
      "created_at": "2018-02-16T08:43:43Z",
      "updated_at": "2018-02-16T08:43:43Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@LaurentDardenne Please open new issue for your suggestion.",
      "created_at": "2018-02-20T05:26:03Z",
      "updated_at": "2018-02-20T05:26:03Z"
    }
  ],
  "created_at": "2018-02-15T17:08:51Z",
  "number": 6164,
  "state": "closed",
  "title": "Enhancement: support a script block as the replacement operand of the -replace operator to enable dynamic substitutions ",
  "updated_at": "2018-03-15T05:37:24Z"
}