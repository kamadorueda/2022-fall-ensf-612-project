{
  "_url": "https://github.com/PowerShell/PowerShell/issues/16870",
  "author": "kborowinski",
  "body": "### Prerequisites\r\n\r\n- [X] Write a descriptive title.\r\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- [X] Search the existing issues.\r\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\r\n\r\n### Steps to reproduce\r\n\r\nI have complex in-house module that started to fail to import on recent daily builds of PS 7.3. It is working correctly on PS 5.1 and PS 7.2.1 and on older daily builds of PS 7.3. I was able to narrow the offending code to the following:\r\n```powershell\r\nGet-CimInstance -ClassName 'Win32_NetworkAdapterConfiguration' |\r\n\tWhere-Object -Property IPEnabled |\r\n\tForEach-Object {\r\n\t\t[IPAddress]::Parse(\r\n\t\t\t$_.IPSubnet[\r\n\t\t\t\t[Array]::IndexOf($_.IPAddress, $_.IPAddress[0])\r\n\t\t\t]\r\n\t\t)\r\n\t}\r\n```\r\n\r\nError:\r\n```powershell\r\nParserError: D:\\Users\\Bukem\\Documents\\PowerShell\\SCRIPTS\\Test.ps1:6\r\nLine |\r\n   6 |                  [Array]::IndexOf($_.IPAddress, $_.IPAddress[0])\r\n     |                        ~\r\n     | Missing ] at end of type token.\r\n\r\n```\r\n\r\nThe *fix* is to enclose the ` [Array]::IndexOf($_.IPAddress, $_.IPAddress[0])` in extra pair of parentheses. Like so:\r\n```powershell\r\nGet-CimInstance -ClassName 'Win32_NetworkAdapterConfiguration' |\r\n\tWhere-Object -Property IPEnabled |\r\n\tForEach-Object {\r\n\t\t[IPAddress]::Parse(\r\n\t\t\t$_.IPSubnet[\r\n\t\t\t\t([Array]::IndexOf($_.IPAddress, $_.IPAddress[0]))\r\n\t\t\t]\r\n\t\t)\r\n\t}\r\n```\r\nBut as I mentioned before the original code is working on PS 5.1, PS 7.2.1 and older daily builds of PS 7.3 so it has to be a recent change in the PS 7.3 code that is causing this.\r\n\r\n### Expected behavior\r\n\r\n```console\r\n. .\\Test.ps1\r\n\r\nAddressFamily      : InterNetwork\r\nScopeId            :\r\nIsIPv6Multicast    : False\r\nIsIPv6LinkLocal    : False\r\nIsIPv6SiteLocal    : False\r\nIsIPv6Teredo       : False\r\nIsIPv6UniqueLocal  : False\r\nIsIPv4MappedToIPv6 : False\r\nAddress            : 16777215\r\nIPAddressToString  : 255.255.255.0\r\n```\r\n\r\n\r\n### Actual behavior\r\n\r\n```console\r\n. .\\Test.ps1\r\nParserError: D:\\Users\\Bukem\\Documents\\PowerShell\\SCRIPTS\\Test.ps1:6\r\nLine |\r\n   6 |                  [Array]::IndexOf($_.IPAddress, $_.IPAddress[0])\r\n     |                        ~\r\n     | Missing ] at end of type token.\r\n```\r\n\r\n\r\n### Error details\r\n\r\n```console\r\nException             :\r\n    Type        : System.Management.Automation.ParseException\r\n    Errors      :\r\n        Extent  :\r\n        ErrorId : EndSquareBracketExpectedAtEndOfType\r\n        Message : Missing ] at end of type token.\r\n\r\n        Extent  :\r\n        ErrorId : MissingEndParenthesisInMethodCall\r\n        Message : Missing ')' in method call.\r\n\r\n        Extent  : ]\r\n        ErrorId : UnexpectedToken\r\n        Message : Unexpected token ']' in expression or statement.\r\n\r\n        Extent  : {\r\n        ErrorId : MissingEndCurlyBrace\r\n        Message : Missing closing '}' in statement block or type definition.\r\n\r\n        Extent  : )\r\n        ErrorId : UnexpectedToken\r\n        Message : Unexpected token ')' in expression or statement.\r\n\r\n        Extent  : }\r\n        ErrorId : UnexpectedToken\r\n        Message : Unexpected token '}' in expression or statement.\r\n    Message     : At D:\\Users\\Bukem\\Documents\\PowerShell\\SCRIPTS\\Test.ps1:6 char:11\r\n                  +                 [Array]::IndexOf($_.IPAddress, $_.IPAddress[0])\r\n                  +                       ~\r\n                  Missing ] at end of type token.\r\n\r\n                  At D:\\Users\\Bukem\\Documents\\PowerShell\\SCRIPTS\\Test.ps1:6 char:52\r\n                  +                 [Array]::IndexOf($_.IPAddress, $_.IPAddress[0])\r\n                  +                                                                ~\r\n                  Missing ')' in method call.\r\n\r\n                  At D:\\Users\\Bukem\\Documents\\PowerShell\\SCRIPTS\\Test.ps1:7 char:4\r\n                  +             ]\r\n                  +             ~\r\n                  Unexpected token ']' in expression or statement.\r\n\r\n                  At D:\\Users\\Bukem\\Documents\\PowerShell\\SCRIPTS\\Test.ps1:3 char:17\r\n                  +     ForEach-Object {\r\n                  +                    ~\r\n                  Missing closing '}' in statement block or type definition.\r\n\r\n                  At D:\\Users\\Bukem\\Documents\\PowerShell\\SCRIPTS\\Test.ps1:8 char:3\r\n                  +         )\r\n                  +         ~\r\n                  Unexpected token ')' in expression or statement.\r\n\r\n                  At D:\\Users\\Bukem\\Documents\\PowerShell\\SCRIPTS\\Test.ps1:9 char:2\r\n                  +     }\r\n                  +     ~\r\n                  Unexpected token '}' in expression or statement.\r\n    ErrorRecord :\r\n        Exception             :\r\n            Type    : System.Management.Automation.ParentContainsErrorRecordException\r\n            Message : At D:\\Users\\Bukem\\Documents\\PowerShell\\SCRIPTS\\Test.ps1:6 char:11\r\n                      +                 [Array]::IndexOf($_.IPAddress, $_.IPAddress[0])\r\n                      +                       ~\r\n                      Missing ] at end of type token.\r\n\r\n                      At D:\\Users\\Bukem\\Documents\\PowerShell\\SCRIPTS\\Test.ps1:6 char:52\r\n                      +                 [Array]::IndexOf($_.IPAddress, $_.IPAddress[0])\r\n                      +                                                                ~\r\n                      Missing ')' in method call.\r\n\r\n                      At D:\\Users\\Bukem\\Documents\\PowerShell\\SCRIPTS\\Test.ps1:7 char:4\r\n                      +             ]\r\n                      +             ~\r\n                      Unexpected token ']' in expression or statement.\r\n\r\n                      At D:\\Users\\Bukem\\Documents\\PowerShell\\SCRIPTS\\Test.ps1:3 char:17\r\n                      +     ForEach-Object {\r\n                      +                    ~\r\n                      Missing closing '}' in statement block or type definition.\r\n\r\n                      At D:\\Users\\Bukem\\Documents\\PowerShell\\SCRIPTS\\Test.ps1:8 char:3\r\n                      +         )\r\n                      +         ~\r\n                      Unexpected token ')' in expression or statement.\r\n\r\n                      At D:\\Users\\Bukem\\Documents\\PowerShell\\SCRIPTS\\Test.ps1:9 char:2\r\n                      +     }\r\n                      +     ~\r\n                      Unexpected token '}' in expression or statement.\r\n            HResult : -2146233087\r\n        CategoryInfo          : ParserError: (:) [], ParentContainsErrorRecordException\r\n        FullyQualifiedErrorId : EndSquareBracketExpectedAtEndOfType\r\n        InvocationInfo        :\r\n            ScriptLineNumber : 6\r\n            OffsetInLine     : 11\r\n            HistoryId        : -1\r\n            ScriptName       : D:\\Users\\Bukem\\Documents\\PowerShell\\SCRIPTS\\Test.ps1\r\n            Line             : [Array]::IndexOf($_.IPAddress, $_.IPAddress[0])\r\n\r\n            PositionMessage  : At D:\\Users\\Bukem\\Documents\\PowerShell\\SCRIPTS\\Test.ps1:6 char:11\r\n                               +                 [Array]::IndexOf($_.IPAddress, $_.IPAddress[0])\r\n                               +                       ~\r\n            PSScriptRoot     : D:\\Users\\Bukem\\Documents\\PowerShell\\SCRIPTS\r\n            PSCommandPath    : D:\\Users\\Bukem\\Documents\\PowerShell\\SCRIPTS\\Test.ps1\r\n            CommandOrigin    : Internal\r\n        ScriptStackTrace      : at <ScriptBlock>, <No file>: line 1\r\n    TargetSite  :\r\n        Name          : Create\r\n        DeclaringType : scriptblock\r\n        MemberType    : Method\r\n        Module        : System.Management.Automation.dll\r\n    Data        : System.Collections.ListDictionaryInternal\r\n    Source      : System.Management.Automation\r\n    HResult     : -2146233087\r\n    StackTrace  :\r\n   at System.Management.Automation.ScriptBlock.Create(Parser parser, String fileName, String fileContents) in\r\nD:\\DEVELOPMENT\\PowerShellCore\\src\\System.Management.Automation\\engine\\runtime\\CompiledScriptBlock.cs:line 660\r\n   at System.Management.Automation.ExternalScriptInfo.ParseScriptContents(Parser parser, String fileName, String fileContents, Nullable`1 definingLanguageMode) in\r\nD:\\DEVELOPMENT\\PowerShellCore\\src\\System.Management.Automation\\engine\\ExternalScriptInfo.cs:line 263\r\n   at System.Management.Automation.ExternalScriptInfo.get_ScriptBlock() in D:\\DEVELOPMENT\\PowerShellCore\\src\\System.Management.Automation\\engine\\ExternalScriptInfo.cs:line 224\r\n   at System.Management.Automation.CommandDiscovery.CreateCommandProcessorForScript(ExternalScriptInfo scriptInfo, ExecutionContext context, Boolean useNewScope, SessionStateInternal sessionState) in\r\nD:\\DEVELOPMENT\\PowerShellCore\\src\\System.Management.Automation\\engine\\CommandDiscovery.cs:line 660\r\n   at System.Management.Automation.CommandDiscovery.CreateScriptProcessorForSingleShell(ExternalScriptInfo scriptInfo, ExecutionContext context, Boolean useLocalScope, SessionStateInternal sessionState) in\r\nD:\\DEVELOPMENT\\PowerShellCore\\src\\System.Management.Automation\\engine\\CommandDiscovery.cs:line 340\r\n   at System.Management.Automation.CommandDiscovery.LookupCommandProcessor(CommandInfo commandInfo, CommandOrigin commandOrigin, Nullable`1 useLocalScope, SessionStateInternal sessionState) in\r\nD:\\DEVELOPMENT\\PowerShellCore\\src\\System.Management.Automation\\engine\\CommandDiscovery.cs:line 584\r\n   at System.Management.Automation.ExecutionContext.CreateCommand(String command, Boolean dotSource) in D:\\DEVELOPMENT\\PowerShellCore\\src\\System.Management.Automation\\engine\\ExecutionContext.cs:line 666\r\n   at System.Management.Automation.PipelineOps.AddCommand(PipelineProcessor pipe, CommandParameterInternal[] commandElements, CommandBaseAst commandBaseAst, CommandRedirection[] redirections, ExecutionContext\r\ncontext) in D:\\DEVELOPMENT\\PowerShellCore\\src\\System.Management.Automation\\engine\\runtime\\Operations\\MiscOps.cs:line 311\r\n   at System.Management.Automation.PipelineOps.InvokePipeline(Object input, Boolean ignoreInput, CommandParameterInternal[][] pipeElements, CommandBaseAst[] pipeElementAsts, CommandRedirection[][]\r\ncommandRedirections, FunctionContext funcContext) in D:\\DEVELOPMENT\\PowerShellCore\\src\\System.Management.Automation\\engine\\runtime\\Operations\\MiscOps.cs:line 510\r\n   at System.Management.Automation.Interpreter.ActionCallInstruction`6.Run(InterpretedFrame frame) in\r\nD:\\DEVELOPMENT\\PowerShellCore\\src\\System.Management.Automation\\engine\\interpreter\\CallInstruction.Generated.cs:line 608\r\n   at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.Run(InterpretedFrame frame) in\r\nD:\\DEVELOPMENT\\PowerShellCore\\src\\System.Management.Automation\\engine\\interpreter\\ControlFlowInstructions.cs:line 341\r\nCategoryInfo          : ParserError: (:) [], ParseException\r\nFullyQualifiedErrorId : EndSquareBracketExpectedAtEndOfType\r\nInvocationInfo        :\r\n    ScriptLineNumber : 6\r\n    OffsetInLine     : 11\r\n    HistoryId        : -1\r\n    ScriptName       : D:\\Users\\Bukem\\Documents\\PowerShell\\SCRIPTS\\Test.ps1\r\n    Line             : [Array]::IndexOf($_.IPAddress, $_.IPAddress[0])\r\n\r\n    PositionMessage  : At D:\\Users\\Bukem\\Documents\\PowerShell\\SCRIPTS\\Test.ps1:6 char:11\r\n                       +                 [Array]::IndexOf($_.IPAddress, $_.IPAddress[0])\r\n                       +                       ~\r\n    PSScriptRoot     : D:\\Users\\Bukem\\Documents\\PowerShell\\SCRIPTS\r\n    PSCommandPath    : D:\\Users\\Bukem\\Documents\\PowerShell\\SCRIPTS\\Test.ps1\r\n    CommandOrigin    : Internal\r\nScriptStackTrace      : at <ScriptBlock>, <No file>: line 1\r\n```\r\n\r\n\r\n### Environment data\r\n\r\n```powershell\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.3.0-preview.1\r\nPSEdition                      Core\r\nGitCommitId                    7.3.0-preview.1-56-g30eac0a11e3479cf4feac76c7fa4b8d621eaabe2\r\nOS                             Microsoft Windows 10.0.19044\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\nEnabled experimental features:\r\n```powershell\r\nGet-ExperimentalFeature | Select-Object Name, Enabled\r\n\r\nName                                          Enabled\r\n----                                          -------\r\nPSAMSIMethodInvocationLogging                   False\r\nPSAnsiRenderingFileInfo                         False\r\nPSCleanBlock                                     True\r\nPSCommandNotFoundSuggestion                     False\r\nPSExec                                          False\r\nPSLoadAssemblyFromNativeCode                     True\r\nPSNativeCommandArgumentPassing                   True\r\nPSNativeCommandErrorActionPreference             True\r\nPSNativePSPathResolution                         True\r\nPSRemotingSSHTransportErrorHandling              True\r\nPSStrictModeAssignment                           True\r\nPSSubsystemPluginModel                           True\r\nPSDesiredStateConfiguration.InvokeDscResource    True\r\n```\r\n\r\n### Visuals\r\n\r\n_No response_",
  "closed_at": "2022-03-03T17:21:22Z",
  "comments": [
    {
      "author": "kborowinski",
      "author_association": "NONE",
      "body": "I've just did quick test on the PS **7.3.0-preview.1** *vanilla* version and original code works. So it's definitely caused by a change in the recent builds. \r\n\r\n```powershell\r\nPS D:\\Users\\Bukem\\Documents\\PowerShell\\SCRIPTS> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.3.0-preview.1\r\nPSEdition                      Core\r\nGitCommitId                    7.3.0-preview.1\r\nOS                             Microsoft Windows 10.0.19044\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\nPS D:\\Users\\Bukem\\Documents\\PowerShell\\SCRIPTS> gc .\\Test.ps1\r\nGet-CimInstance -ClassName 'Win32_NetworkAdapterConfiguration' |\r\n        Where-Object -Property IPEnabled |\r\n        ForEach-Object {\r\n                [IPAddress]::Parse(\r\n                        $_.IPSubnet[\r\n                                [Array]::IndexOf($_.IPAddress, $_.IPAddress[0])\r\n                        ]\r\n                )\r\n        }\r\nPS D:\\Users\\Bukem\\Documents\\PowerShell\\SCRIPTS> . .\\Test.ps1\r\n\r\nAddressFamily      : InterNetwork\r\nScopeId            :\r\nIsIPv6Multicast    : False\r\nIsIPv6LinkLocal    : False\r\nIsIPv6SiteLocal    : False\r\nIsIPv6Teredo       : False\r\nIsIPv6UniqueLocal  : False\r\nIsIPv4MappedToIPv6 : False\r\nAddress            : 16777215\r\nIPAddressToString  : 255.255.255.0\r\n\r\n```",
      "created_at": "2022-02-11T09:34:37Z",
      "updated_at": "2022-02-11T09:34:37Z"
    },
    {
      "author": "kborowinski",
      "author_association": "NONE",
      "body": "@vexx32  Probably I'm wrong, but can it be due to recent change allowing for [invoking methods with generic type arguments](https://github.com/PowerShell/PowerShell/commit/8c532529693dbccb46fb4edf9d69b0667f524630)?",
      "created_at": "2022-02-11T10:06:27Z",
      "updated_at": "2022-02-11T10:06:27Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "/cc @daxian-dbw ",
      "created_at": "2022-02-11T12:45:10Z",
      "updated_at": "2022-02-11T12:45:10Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Yeah I'd wager that PR did it. The combination of indexing with the type-static method access probably confused the heck out of that parsing code, that's a great test case that I don't think any of us thought of. \ud83d\ude02 ",
      "created_at": "2022-02-11T14:10:19Z",
      "updated_at": "2022-02-11T14:10:19Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@vexx32 Will you be able to take a look at this parsing issue at some time? Thanks in advance!",
      "created_at": "2022-02-17T18:08:48Z",
      "updated_at": "2022-02-17T18:08:48Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "It turns out there are some more issues with the generic argument parsing. Another regression:\r\n```\r\n## Before the generic argument change:\r\n$a = [pscustomobject]@{ b = @{} }\r\n$a.b.Add([string], \"YEAH\")\r\n$a.b.Add(\"another-key\", \"HA\")\r\n$a.b[[string]]   ## <-- indexing the Hashtable using the type `[string]`\r\n> YEAH\r\n\r\n## After the change\r\nPS:29> $a = [pscustomobject]@{ b = @{} }\r\n>> $a.b.Add([string], \"YEAH\")\r\n>> $a.b.Add(\"another-key\", \"HA\")\r\n>> $a.b[[string]]  ## <-- parsed to a member expression `$a.b` with generic arg `[string]`\r\n\r\nName                           Value\r\n----                           -----\r\nanother-key                    HA\r\nSystem.String                  YEAH\r\n```\r\n\r\nAnd allowing to declare generic arguments for property causes unexpected behaviors:\r\n\r\n```\r\nPS:32> \"string\".ToString[nonExist]\r\n\r\nOverloadDefinitions\r\n-------------------\r\nstring ToString()\r\nstring ToString(System.IFormatProvider provider)\r\nstring IConvertible.ToString(System.IFormatProvider provider)\r\n\r\nPS:33> \"string\".Length[nonexis]\r\n6\r\n```\r\n\r\nI submitted the PR #16937 to fix the issues.",
      "created_at": "2022-03-01T00:27:21Z",
      "updated_at": "2022-03-01T00:27:21Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:This issue was addressed in #16937, which has now been successfully released as `v7.3.0-preview.3`.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.3.0-preview.3)\n",
      "created_at": "2022-03-21T21:57:14Z",
      "updated_at": "2022-03-21T21:57:14Z"
    }
  ],
  "created_at": "2022-02-11T08:58:42Z",
  "number": 16870,
  "state": "closed",
  "title": "Parser error on daily PowerShell 7.3. build",
  "updated_at": "2022-03-21T21:57:15Z"
}