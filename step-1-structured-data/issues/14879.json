{
  "_url": "https://github.com/PowerShell/PowerShell/issues/14879",
  "author": "pakrym",
  "body": "Often PowerShell scripts use external executables to accomplish their tasks.\r\n\r\nEven more often authors of these scripts do not check or log a readable message when the executable is not available. \r\n\r\nBeing able to declare which external tool the script expects on the PATH and have good error messages provided when the script starts would improve customer experience in these cases.\r\n\r\nExample:\r\n\r\n```powershell\r\n#requires -Executable \"npx\" -Description \"npx is required to do something, please install nodejs\"\r\n```\r\n\r\nWould replace:\r\n\r\n![image](https://user-images.githubusercontent.com/1697911/108751447-13a11500-74f7-11eb-8d1e-2e698281704b.png)\r\n\r\nand similar variations\r\n\r\n",
  "closed_at": "2021-05-06T17:47:51Z",
  "comments": [
    {
      "author": "jborean93",
      "author_association": "COLLABORATOR",
      "body": "Just an FYI you can \"simplify\" you check with\r\n\r\n```powershell\r\nif (-not (Get-Command -Name npx -ErrorAction SilentlyContinue)) {\r\n    Write-Error -Message \"blah\"\r\n    exit 1\r\n}\r\n```",
      "created_at": "2021-02-22T19:36:16Z",
      "updated_at": "2021-02-22T19:36:16Z"
    },
    {
      "author": "p0W3RH311",
      "author_association": "NONE",
      "body": "@jborean93 \r\n\r\nfor checking more faster\r\n```\r\n\r\nif (-not (Get-Command -Name npx -CommandType Application -ErrorAction SilentlyContinue)) {\r\n    Write-Error -Message \"blah\"\r\n    exit 1\r\n}\r\n```",
      "created_at": "2021-02-23T02:39:21Z",
      "updated_at": "2021-02-23T02:39:21Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Language working group:\r\nThe existing solution (@p0W3RH311's answer above) looks sufficient and simple enough for checking whether an executable is available at run time. It seems what you really need is a command `Test-Command -Name <string> [-Type <CommandTypes>] [-Message <string>]`. You can easily wrap the solution code above into such a command.",
      "created_at": "2021-05-06T17:47:51Z",
      "updated_at": "2021-05-06T17:47:51Z"
    }
  ],
  "created_at": "2021-02-22T18:18:48Z",
  "labels": [
    "Issue-Enhancement",
    "WG-Language",
    "Resolution-Declined"
  ],
  "number": 14879,
  "state": "closed",
  "title": "Add support for specifying external tools in #requires statements (-Executable \"external_tool\" )",
  "updated_at": "2021-05-06T17:48:11Z"
}