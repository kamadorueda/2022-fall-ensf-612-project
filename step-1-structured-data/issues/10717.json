{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10717",
  "author": "KirkMunro",
  "body": "# Steps to reproduce\r\n\r\n```powershell\r\n$true ?\r\n\r\n\r\n\r\n\r\n'It is true.'\r\n\r\n\r\n\r\n\r\n:\r\n\r\n\r\n\r\n\r\n\r\n'Nope, it''s false!'\r\n```\r\n\r\n# Expected behavior\r\n\r\nA parser error should be raised. Comments should be supported, but there is no need to allow blank lines in ternary. That just opens the door for sloppy code.\r\n\r\n# Actual behavior\r\n\r\n```none\r\nIt is true.\r\n```\r\n\r\n# Environment data\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-preview.4\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-preview.4\r\nOS                             Microsoft Windows 10.0.17763\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "But PowerShell is a \"whitespace insignificant\" language (unlike Python), well, except for newlines.  Someone could do the following too and like you, I would not recommend that folks use this style:\r\n```\r\n>> if ($true) {\r\n>>                                                                                                                      \r\n>>\r\n>>\r\n>> 'It is true.'\r\n>>                                                                                                                      \r\n>>\r\n>>\r\n>> } else {\r\n>>                                                                                                                      \r\n>>\r\n>>\r\n>> 'Nope, it''s false!'\r\n>> }                                                                                                                    \r\nIt is true.\r\n```\r\nBut I would not go so far as to want to change the language's whitespace handling.  This is why we have style guidelines and tools like PSScriptAnalyzer to help folks enforce their chosen style.\r\n\r\nAlso, what exactly do you mean by inline comments?  Comments like this work:\r\n\r\n![image](https://user-images.githubusercontent.com/5177512/66273195-f058c580-e82e-11e9-9a83-edc91cbd42d2.png)\r\n\r\nAs well as: \r\n\r\n![image](https://user-images.githubusercontent.com/5177512/66273206-226a2780-e82f-11e9-982c-9def2750f960.png)\r\n",
      "created_at": "2019-10-06T17:55:17Z",
      "updated_at": "2019-10-06T17:55:17Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "I think @KirkMunro is coming from the perspective of:\r\n\r\n1. This is an operator\r\n2. All existing operators do not permit entire blank lines between their output (try `5 + <enter><enter>`; a parsing exception is raised when inputting the second newline, even if you use Shift+Enter)\r\n3. Therefore, this operator should behave the same way existing operators do.\r\n\r\nThat said, if this operator _did_ allow comment-only lines in the midst of the arguments, it would also be the only operator to allow it. Try the above example and insert a comment after the first newline, then try to continue writing something else on another newline after that; same deal, instant parsing exception.",
      "created_at": "2019-10-06T19:26:58Z",
      "updated_at": "2019-10-06T19:27:35Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "?? \r\n![image](https://user-images.githubusercontent.com/5177512/66274845-c956bf80-e83f-11e9-95b7-05ce3e6ddc18.png)\r\n\r\nOr put this in a ps1 file and run it:\r\n```\r\n5 +\r\n\r\n5 -\r\n\r\n10\r\n```\r\nRuns just fine.",
      "created_at": "2019-10-06T19:49:57Z",
      "updated_at": "2019-10-06T19:49:57Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "_Very_ interesting.\r\n\r\nWhat are you running on in terms of PSReadline version, PS version, and OS?\r\n\r\nW10, PSReadLine 2.0.0-beta5, and pwsh7-preview4 that doesn't work in VS Code or the Windows Terminal.... very odd. Though I do see it work from a file and from the default PowerShell terminal.\r\n\r\nOK, gonna chalk that up to a PSReadline bug. Objection withdrawn!",
      "created_at": "2019-10-06T19:56:00Z",
      "updated_at": "2019-10-06T19:56:00Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "Well ... this is a trick/workaround that I discovered a while back.  Start your command with `@'` then edit the following lines as desired. Before executing, get rid of the `@'` e.g.:\r\n\r\nWhen you start the multiline command:\r\n```\r\n10-06 13:49:18 14ms 63> @'                                                                                              \r\n>> 5 +\r\n>>\r\n>>\r\n>>\r\n>> 5\r\n```\r\n\r\nThen right before executing:\r\n```\r\n10-06 13:49:18 14ms 63> \r\n>> 5 +\r\n>>\r\n>>\r\n>>\r\n>> 5\r\n```",
      "created_at": "2019-10-06T20:15:13Z",
      "updated_at": "2019-10-06T20:15:35Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Interesting. Filed issue on PSRL to see if we can get to the bottom of it one way or another: https://github.com/PowerShell/PSReadLine/issues/1088\r\n\r\nThanks for the workaround!",
      "created_at": "2019-10-06T20:19:59Z",
      "updated_at": "2019-10-06T20:19:59Z"
    },
    {
      "author": "KirkMunro",
      "author_association": "CONTRIBUTOR",
      "body": "@rkeithhill: By inline comments, I meant regular comments like you showed in your example. I expect those to work when I wrap commands or statements, and they do work.\r\n\r\nFor the blank lines though, just because existing keywords and operators allow blank lines (which IMHO they shoud never have allowed in the first place) doesn't mean (to me at least) that new syntax should continue to persist such things when they serve no purpose.",
      "created_at": "2019-10-06T23:23:32Z",
      "updated_at": "2019-10-06T23:24:48Z"
    }
  ],
  "created_at": "2019-10-05T23:19:34Z",
  "number": 10717,
  "state": "open",
  "title": "The ternary operator should support inline comments but not blank lines",
  "updated_at": "2019-10-07T00:03:03Z"
}