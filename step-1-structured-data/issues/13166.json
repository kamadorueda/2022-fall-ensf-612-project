{
  "_url": "https://github.com/PowerShell/PowerShell/issues/13166",
  "author": "mskadu",
  "body": "Hello!\r\n\r\nI am running pwsh v7.0.2 on RHEL 7.6 (maipo). I have a script that examines and manipulates a large number of XML files. Until recently the same script on a windows 10 machine without issues. But recently we moved to a beefier linux machine for compliance reasons. \r\n\r\nAnd since then I am seeing the following error message interspersed with normal messages:\r\n\r\n_Failed to create CoreCLR, HRESULT: 0x8000405_\r\n\r\nI can't seem to find anything useful anywhere else that tells me why this is happening?\r\n\r\n## Steps to reproduce\r\n\r\n```powershell\r\nnohup find /data/input/lot001/ -name '*.xml' -exec pwsh -File ./MyScript.ps1 {} \\; 2>&1 > /data/logs/lot001.log &\r\n```\r\n\r\n## Expected behavior\r\n\r\n* regular output messages\r\n* script completes execution\r\n\r\n## Actual behavior\r\n\r\n* regular output messages interspersed with the error message - _Failed to create CoreCLR, HRESULT: 0x8000405_\r\n\r\n## Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\nName                                      Value\r\n-----                                        -------\r\nPSVersion                               7.0.2\r\nPSEdition                                Core\r\nGitCommitId                           7.0.2\r\nOS                                           Linux 3.10.0-957.1.3.el7.x86_64 #1 SMP Thu Nov 15 17:36:42 UTC 2018\r\nPlatform                                  Unix\r\nPSCompatibleVersions            {1.0, 2,0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion   2.3\r\nSerializationVersion                1.1.0.1\r\nWSManStackVersion               3.0\r\n```\r\n",
  "closed_at": "2020-07-23T00:00:17Z",
  "comments": [
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@mskadu Can you please collect the CoreCLR start-up traces and share with us?\r\nYou need to set the environment variables `COREHOST_TRACE=1` and `COREHOST_TRACEFILE=<path>`, see https://docs.microsoft.com/en-us/dotnet/core/dependency-loading/default-probing#how-do-i-debug-the-probing-properties-construction.\r\n\r\nI suggest to reduce the number of xml files when collecting the traces, so that there won't be a large number of `pwsh` spun up which may result in to much traces.\n\n<blockquote><img src=\"https://docs.microsoft.com/en-us/media/logos/logo-ms-social.png\" width=\"48\" align=\"right\"><div><strong><a href=\"https://docs.microsoft.com/en-us/dotnet/core/dependency-loading/default-probing\">Default probing - .NET Core</a></strong></div><div>Overview of .NET Core's System.Runtime.Loader.AssemblyLoadContext.Default probing logic to locate dependencies.</div></blockquote>",
      "created_at": "2020-07-13T16:16:40Z",
      "updated_at": "2020-07-13T16:16:42Z"
    },
    {
      "author": "mskadu",
      "author_association": "NONE",
      "body": "Am in the process of doing this .. should be back shortly. In the meanwhile, I am seeing the following message in the trace file\r\n\r\n> -- Begin breadcrumb write\r\n> Directory core breadcrumbs [] was not specified or found\r\n> Fallback directory core breadcrumbs at [opt/breadcrumbs] was not found\r\n> Breadcrumb store was not obtained... skipping write.\r\n\r\nIs this safe to ignore? Or am i doing something wrong?\r\n",
      "created_at": "2020-07-14T11:08:14Z",
      "updated_at": "2020-07-14T11:08:14Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "I'm not very sure about what the breadcrumb thread is supposed to log, but it looks benign. We can ignore this for now.",
      "created_at": "2020-07-14T16:54:35Z",
      "updated_at": "2020-07-14T16:54:35Z"
    },
    {
      "author": "mskadu",
      "author_association": "NONE",
      "body": "Here you go:\r\n\r\n[13166_coretrace.log](https://github.com/PowerShell/PowerShell/files/4938326/13166_coretrace.log)\r\n\r\nPlease let me know if you have further questions or need more information",
      "created_at": "2020-07-17T14:29:04Z",
      "updated_at": "2020-07-17T14:29:04Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@mskadu At startup, CoreCLR tries to create named pipes for debugging and profiling of the process in `/tmp/`. It could be that the pipe creation fails intermittently when `pwsh` gets started so frequently.\r\nCan you please try disabling CoreCLR diagnostics by setting the environment variable `export COMPlus_EnableDiagnostics=0` (as [instructed here](https://github.com/dotnet/coreclr/pull/15878)), and then try running your repro step again to see if that helps?",
      "created_at": "2020-07-17T22:10:42Z",
      "updated_at": "2020-07-17T22:10:55Z"
    },
    {
      "author": "mskadu",
      "author_association": "NONE",
      "body": "Thanks. I am checking this and will confirm back shortly.",
      "created_at": "2020-07-20T14:48:56Z",
      "updated_at": "2020-07-20T14:48:56Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@mskadu Any luck?",
      "created_at": "2020-07-21T22:35:56Z",
      "updated_at": "2020-07-21T22:35:56Z"
    },
    {
      "author": "mskadu",
      "author_association": "NONE",
      "body": "Not yet, I am afraid. Got side-lined by another unrelated issue. \n\nPlease bear with me. I hope to get back to you soon.",
      "created_at": "2020-07-21T23:07:53Z",
      "updated_at": "2020-07-21T23:07:53Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2020-07-23T00:00:15Z",
      "updated_at": "2020-07-23T00:00:15Z"
    },
    {
      "author": "mskadu",
      "author_association": "NONE",
      "body": "I know this is closed. But thought I'd let you know this suggestion worked. For people who find this after. Thank you!",
      "created_at": "2020-07-23T09:28:36Z",
      "updated_at": "2020-07-23T09:29:08Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@mskadu Good to know that! Thanks for getting back to us.",
      "created_at": "2020-07-23T17:17:14Z",
      "updated_at": "2020-07-23T17:17:14Z"
    },
    {
      "author": "jcoutch",
      "author_association": "NONE",
      "body": "I just ran into this with a Alpine container on WSL2.  Adding `COMPlus_EnableDiagnostics=0` worked for me as well.  I happened to search for that environment variable, and ran across this issue:\r\nhttps://github.com/dotnet/docs/issues/10217\r\n\r\nMy container is read-only, so it makes sense that disabling diagnostics would fix the issue (if it's writing diagnostics to a read-only folder).",
      "created_at": "2020-10-20T17:52:52Z",
      "updated_at": "2020-10-20T17:52:52Z"
    },
    {
      "author": "alexei-matveev",
      "author_association": "NONE",
      "body": "I bet inodes ran out because of many pwsh-invokations, see comments in https://github.com/dotnet/runtime/issues/46462",
      "created_at": "2021-04-23T14:55:28Z",
      "updated_at": "2021-04-23T14:55:28Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@mazhar10 Please move your comment to the issue that you opened. This issue is already resolved.",
      "created_at": "2021-11-15T21:30:51Z",
      "updated_at": "2021-11-15T21:30:51Z"
    },
    {
      "author": "mazhar10",
      "author_association": "NONE",
      "body": "> \r\n> \r\n> @mazhar10 Please move your comment to the issue that you opened. This issue is already resolved.\r\n\r\nThanks - I need to pay more attention to the links in notification emails!",
      "created_at": "2021-11-16T03:41:53Z",
      "updated_at": "2021-11-16T03:41:53Z"
    }
  ],
  "created_at": "2020-07-13T14:23:47Z",
  "number": 13166,
  "state": "closed",
  "title": "Failed to create CoreCLR, HRESULT: 0x80004005",
  "updated_at": "2021-11-16T03:41:53Z"
}