{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10896",
  "author": "bergmeister",
  "body": "# PR Summary\r\n\r\nFixes #10895\r\n\r\nImportant Note: I have not tested this and based the fix purely on this blog post:\r\nhttps://www.advancedinstaller.com/allow-elevation-msix-packages.html\r\n\r\nCan you please test/verify this manually @SteveL-MSFT or by reviewing documentation if this option is deemed OK?\r\nIt might also require a change to the EXE's manifest as detailed in the blog but I think we should in theory already have everything the manifest that we need.\r\n\r\n## PR Context\r\n\r\nFixing the referenced issue for MSIX distribution\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2019-10-28T16:00:08Z",
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@bergmeister ~~you should be able to use use the packaging module under tools folder with `start-pspackage -type msix` to build it.  Then if you are in dev mode, `Add-AppxPackage` should install it locally to test.~~ Looks like `Add-AppxPackage` requires the msix to be signed.  In anycase, reading about this config in the manifest it seems that it's for apps that require elevation at launch time?",
      "created_at": "2019-10-28T03:33:40Z",
      "updated_at": "2019-10-28T04:24:14Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "I am not sure if this will make it work, hence the ask for the manual test. Otherwise we'll need have code to avoid adding the jumplist for an msix deployed app (not sure what the best is to detect that PowerShell is running from within an MSIX installation)",
      "created_at": "2019-10-28T11:12:15Z",
      "updated_at": "2019-10-28T11:12:15Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@bergmeister the $PSHOME path is pretty predictable for AppX.  I think removing the jumplist and relying on Windows `Run As Admin` seems to be best option here.",
      "created_at": "2019-10-28T15:25:41Z",
      "updated_at": "2019-10-28T15:25:41Z"
    },
    {
      "author": "bergmeister",
      "author_association": "CONTRIBUTOR",
      "body": "Ok, I suggest then to add some custom code either in the `TaskbarJumpList.CreateRunAsAdministratorJumpList` function or where it is being called to skip its execution:\r\nhttps://github.com/PowerShell/PowerShell/blob/8f5b2c241ec1bc0e9c97176b591cf342dcc10da2/src/Microsoft.PowerShell.ConsoleHost/WindowsTaskbarJumpList/TaskbarJumpList.cs#L22\r\nIt's sad to see it go (because of its convenience) and I think a few people might be confused by the missing menu, so I definitely recommend pointing it out in the next preview blog post to avoid that many people start raising issues about it.\r\nIt would be great if you could talk to the MSIX or Windows team about this and if they could maybe do something about it in the future. Maybe the Windows team can add a registry key option to bring the native 'Run as Admin' menu into the main taskbar menu on right-click, which would benefit quite a few other application users like e.g. Visual Studio",
      "created_at": "2019-10-28T15:59:34Z",
      "updated_at": "2019-10-28T15:59:34Z"
    }
  ],
  "created_at": "2019-10-25T19:44:11Z",
  "number": 10896,
  "state": "closed",
  "title": "MSIX Allow elevation via JumpList",
  "updated_at": "2019-10-28T16:00:08Z"
}