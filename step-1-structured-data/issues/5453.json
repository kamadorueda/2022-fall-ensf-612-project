{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5453",
  "author": "SteveL-MSFT",
  "body": "There were several issues:\r\n\r\nIn vscode, depending on where you started it from, it may not get the git commit id so it ends up empty.  Add a default value to use.\r\n\r\nFrom the console, the commit id was typically in a form that is not parse-able as a fileversion.  Fix is to chop off everything right of the dash.\r\n\r\nIt also seems that building from the console and building from vscode, the output path may or may not include `pwsh`, however, rcedit needs the actual executable in the path.  \r\n\r\nFix https://github.com/PowerShell/PowerShell/issues/5440\r\n\r\n<!--\r\n\r\nIf you are a PowerShell Team member, please make sure you choose the Reviewer(s) and Assignee for your PR.\r\nIf you are not from the PowerShell Team, you can leave the fields blank and the Maintainers will choose them for you. If you are familiar with the team, feel free to mention some Reviewers yourself.\r\n\r\nFor more information about the roles of Reviewer and Assignee, refer to [CONTRIBUTING.md](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md).\r\n\r\n-->\r\n",
  "closed_at": "2017-11-15T19:40:50Z",
  "comments": [
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "You might want to try this tasks.json:\r\n```json\r\n{\r\n    \"version\": \"2.0.0\",\r\n\r\n    \"windows\": {\r\n        \"options\": {\r\n            \"shell\": {\r\n                \"executable\": \"C:\\\\Windows\\\\System32\\\\WindowsPowerShell\\\\v1.0\\\\powershell.exe\",\r\n                \"args\": [\r\n                    \"-NoProfile\",\r\n                    \"-ExecutionPolicy\",\r\n                    \"Bypass\",\r\n                    \"-Command\"\r\n                ]\r\n            }\r\n        }\r\n    },\r\n    \"linux\": {\r\n        \"options\": {\r\n            \"shell\": {\r\n                \"executable\": \"/usr/bin/pwsh\",\r\n                \"args\": [\r\n                    \"-NoProfile\",\r\n                    \"-Command\"\r\n                ]\r\n            }\r\n        }\r\n    },\r\n    \"osx\": {\r\n        \"options\": {\r\n            \"shell\": {\r\n                \"executable\": \"/usr/local/bin/pwsh\",\r\n                \"args\": [\r\n                    \"-NoProfile\",\r\n                    \"-Command\"\r\n                ]\r\n            }\r\n        }\r\n    },\r\n\r\n    \"tasks\": [\r\n        {\r\n            \"label\": \"Bootstrap\",\r\n            \"type\": \"shell\",\r\n            \"command\": \"Import-Module ${workspaceFolder}/build.psm1; Start-PSBootstrap\",\r\n            \"problemMatcher\": []\r\n        },\r\n        {\r\n            \"label\": \"Clean Build\",\r\n            \"type\": \"shell\",\r\n            \"command\": \"Import-Module ${workspaceFolder}/build.psm1; Start-PSBuild -Clean\",\r\n            \"problemMatcher\": []\r\n        },\r\n        {\r\n            \"label\": \"Build\",\r\n            \"type\": \"shell\",\r\n            \"command\": \"Import-Module ${workspaceFolder}/build.psm1; Start-PSBuild -Output ${workspaceFolder}/debug\",\r\n            \"group\": {\r\n                \"kind\": \"build\",\r\n                \"isDefault\": true\r\n            },\r\n            \"problemMatcher\": \"$msCompile\"\r\n        },\r\n        {\r\n            \"label\": \"Test\",\r\n            \"type\": \"shell\",\r\n            \"command\": \"Import-Module ${workspaceFolder}/build.psm1; Start-PSPester -Path ${workspaceFolder}/test -Tag CI\",\r\n            \"group\": {\r\n                \"kind\": \"test\",\r\n                \"isDefault\": true\r\n            },\r\n            \"problemMatcher\": \"$pester\"\r\n        }\r\n    ]\r\n}\r\n```\r\nThere seems to be an issue with the `$msCompile` problem matcher at the moment but that's an issue for VSCode.  BTW why does the build task specify `-Output ./debug`?  Doesn't it put the output in a reasonable location by default?  Also, any reason not to use `Windows PowerShell` on Windows?  If so, we can always set the executable to `pwsh.exe` on Windows.\r\n\r\nAlso, I wonder if we should specify a tag for testing within VSCode - perhaps `CI`?  I think using CI would get rid of the failures I see due to not running VSCode as admin.\r\n\r\nI can submit this as a PR if you'd like or if you just want to take it and run - that's fine too.\r\n",
      "created_at": "2017-11-15T03:17:33Z",
      "updated_at": "2017-11-15T03:26:38Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I'll add a slightly modified version of @rkeithhill 's tasks.json.  Thanks for that!",
      "created_at": "2017-11-15T03:43:13Z",
      "updated_at": "2017-11-15T03:43:13Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@rkeithhill to answer some of your questions:\r\n\r\n1. the `debug` folder is used as it's included in `.gitignore`\r\n2. since this tasks.json is only used to build pwsh, I think it's preferable to depend on pwsh rather than Windows PowerShell (the rest of the tooling expects it)\r\n3. `-Clean` cleans then builds",
      "created_at": "2017-11-15T04:04:18Z",
      "updated_at": "2017-11-15T04:04:18Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "I think I'm caught up to your version of tasks.json but when I execute the `Rebuild`  task (formerly `Clean Build`), I'm getting this error:\r\n```\r\nPowerShell output: c:\\Users\\Keith\\GitHub\\rkeithhill\\PowerShell\\debug\r\nWARNING: Run Sync-PSTags to update tags\r\nUnable to load file: \"c:\\Users\\Keith\\GitHub\\rkeithhill\\PowerShell\\debug\"\r\nExecution of { & \"~/.rcedit/rcedit-x64.exe\" \"$($Options.Output)\" --set-icon \"$PSScriptRoot\\assets\\Powershell_black.ico\" `\r\n            --set-file-version $ReleaseVersion --set-product-version $ReleaseVersion --set-version-string \"ProductName\" \"PowerShell Core 6\" `\r\n            --set-requested-execution-level \"asInvoker\" --set-version-string \"LegalCopyright\" \"(C) Microsoft Corporation.  All Rights Reserved.\" } failed with exit code 1\r\n```\r\nAre you getting this error?  FWIW I get this error from the command line so maybe my source is in a bad state.\r\n\r\n**UPDATE:** Ah nevermind, I see you're making a tweak to that very part of build.psm1.  I'll hang tight for the PR to be merged.",
      "created_at": "2017-11-15T05:12:26Z",
      "updated_at": "2017-11-15T05:16:38Z"
    }
  ],
  "created_at": "2017-11-14T23:47:43Z",
  "number": 5453,
  "state": "closed",
  "title": "fix build in vscode",
  "updated_at": "2018-10-26T21:34:15Z"
}