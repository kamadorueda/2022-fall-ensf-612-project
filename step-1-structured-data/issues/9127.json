{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9127",
  "author": "mklement0",
  "body": "PR  #8783 addressed #3500, which brought the ability to define symlinks whose targets are defined as _relative_ paths.\r\n\r\nOn Unix-like platforms, symlinks aren't _typed_; the symlink behaves as if it were the same type (file or directory) of whatever type its _target_ is.\r\n\r\nOn Windows, by contrast, you must explicitly match the target type at symlink creation time for symlinks to _directories_ to act like directories.\r\nSince `New-Item` currently does _not_ allow you to specify a symlink type - enum value `SymbolicLink` is currently the only option - it must itself _infer_ the appropriate type based on the specified _target_.\r\n\r\nAs an aside: Since this inference requires that the target already _exist_, creating symlinks to non-existing targets - which is a legitimate use case - presents a conceptual problem that must be solved separately - see #9067\r\n\r\nCurrently, the inference doesn't work if the target is specified as a _relative_ path to an existing target _directory_.\r\n\r\n# Steps to reproduce (on Windows)\r\n\r\nNote: If you don't have developer mode enabled, run the tests as admin (elevated).\r\n\r\n```powershell\r\nDescribe \"New-Item: symlink with relative path test\" {\r\n  BeforeAll {\r\n    Push-Location TestDrive:/\r\n    # Create a directory...\r\n    $null = New-Item -Type Directory someDir\r\n    # ... and a symlink to that directory, as a sibling, using a *relative* path.\r\n    New-Item -Type SymbolicLink someDirLinkRelative -Target someDir\r\n    # ... and a symlink to that directory, as a sibling, using a *relative* path.\r\n    New-Item -Type SymbolicLink someDirLinkAbsolute -Target (Convert-Path someDir)\r\n    # Echo the symlink target information.\r\n    Get-Item someDirLinkRelative, someDirLinkAbsolute | Select LinkType, Target | Out-String | write-verbose -vb\r\n  }\r\n  AfterAll {\r\n    Pop-Location\r\n  }\r\n  \r\n  It \"Symlink with absolute path to existing directory behaves like a directory.\" {\r\n    (Get-Item someDirLinkAbsolute) | Should -BeOfType System.IO.DirectoryInfo\r\n  }\r\n\r\n  It \"Symlink with relative path to existing directory behaves like a directory.\" {\r\n    (Get-Item someDirLinkRelative) | Should -BeOfType System.IO.DirectoryInfo\r\n  }\r\n  \r\n}\r\n```\r\n\r\n# Expected behavior\r\n\r\nBoth tests should succeed.\r\n\r\n# Actual behavior\r\n\r\nThe test with the relative target path fails.\r\nThat is, a _file_ symlink rather than a directory symlink was mistakenly created.\r\n\r\n# Environment data\r\n\r\n```none\r\nPowerShell Core v6.2.0-rc.1 on Microsoft Windows 10 Pro (64-bit; Version 1803, OS Build: 17134.590)\r\n```\r\n",
  "closed_at": "2020-06-01T20:12:28Z",
  "comments": [
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:This issue was addressed in #12797, which has now been successfully released as `v7.1.0-preview.4`.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.1.0-preview.4)\n",
      "created_at": "2020-06-25T19:06:50Z",
      "updated_at": "2020-06-25T19:06:50Z"
    }
  ],
  "created_at": "2019-03-12T21:05:01Z",
  "labels": [
    "Issue-Enhancement",
    "Issue-Discussion",
    "Resolution-Fixed",
    "WG-Cmdlets-Core"
  ],
  "number": 9127,
  "state": "closed",
  "title": "New-Item -Type SymbolicLink doesn't define symlinks with relative directory targets as directory symlinks",
  "updated_at": "2020-06-25T19:06:50Z"
}