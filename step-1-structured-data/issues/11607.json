{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11607",
  "author": "mklement0",
  "body": "# Summary of the new feature/enhancement\r\n\r\n`Compare-Object`'s `-Property` parameter already supports calculated properties, but doesn't allow them to be _named_.\r\n\r\nThis is unfortunate, because the calculated property is currently invariably named for the script _block's literal text_ (key name `e` is short for `Expression`):\r\n\r\n```powershell\r\nPS> Compare-Object @{p=1} @{p=2} -property @{ Expression = { $_.p % 2 } }\r\n\r\n $_.p % 2  SideIndicator\r\n---------- -------------\r\n         0 =>\r\n         1 <=\r\n```\r\n\r\nNote how `$_.p % 2` became the property name.\r\n\r\nAs with other commands that support calculated properties - e.g., `Select-Object` - it should be possible to name the property, via a `Name` or `Label` key (or prefix abbreviation thereof):\r\n\r\n```powershell\r\n# WISHFUL THINKING\r\nPS> Compare-Object @{p=1}, @{p=2}  @{p=2}, @{p=4} -property @{ n = 'Mod2'; e = { $_.p % 2 } }\r\n\r\nMod2        SideIndicator\r\n---------- -------------\r\n         0 =>\r\n         1 <=\r\n```\r\n\r\nWritten as of PowerShell Core 7.0.0-rc.1.\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "MshParameter -> PSPropertyExpression\r\nI think it is here\r\nhttps://github.com/PowerShell/PowerShell/blob/70d4a899310f5460700f0be8cba5a2af1d4a0305/src/Microsoft.PowerShell.Commands.Utility/commands/utility/Compare-Object.cs#L347\r\n\r\nDo we lost the same for Sort-Object/Select-Object https://github.com/PowerShell/PowerShell/issues/6855#issuecomment-389684616 ?",
      "created_at": "2020-01-17T08:34:29Z",
      "updated_at": "2020-01-17T08:34:29Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks, @iSazonov. I don't think `Sort-Object` needs fixing, it already supports the `expression` and `ascending` / `descending` hashtable keys, which is all that is needed, given that this \"property\" is used solely to facilitate sorting, and doesn't appear in the output (and therefore needs no name).\r\n\r\nhttps://github.com/MicrosoftDocs/PowerShell-Docs/issues/3383#issuecomment-445467300 summarizes what hashtable keys are supported by what cmdlets.\r\n\r\n",
      "created_at": "2020-01-17T15:52:16Z",
      "updated_at": "2020-01-17T15:52:16Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "P.S.: At least _functionally_ `Sort-Object` works fine; don't remember whether there is a good reason to modify the _implementation_.\r\n\r\nCome to think of it, the `Measure-Object` implementation actually falls short:\r\n\r\n* It currently accepts only a _script block_ and not also a _hashtable_ with the scriptblock stored  in the `Expression` entry.\r\n\r\n* Aside from this asymmetry with `Sort-Object`, for instance, `Measure-Object` could also benefit from supporting the `Name` entry, given that the property name is part of the output too.\r\n\r\nI'll open a new issue.",
      "created_at": "2020-01-17T16:00:20Z",
      "updated_at": "2020-01-17T16:00:20Z"
    },
    {
      "author": "mklement0",
      "author_association": "CONTRIBUTOR",
      "body": "I've opened an issue for `Measure-Object`: #11617",
      "created_at": "2020-01-17T17:35:45Z",
      "updated_at": "2020-01-17T17:35:45Z"
    }
  ],
  "created_at": "2020-01-16T20:50:07Z",
  "labels": [
    "Issue-Enhancement",
    "WG-Cmdlets"
  ],
  "number": 11607,
  "state": "open",
  "title": "Compare-Object should support named calculated properties ",
  "updated_at": "2020-01-17T17:35:45Z"
}