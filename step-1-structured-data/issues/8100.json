{
  "_url": "https://github.com/PowerShell/PowerShell/issues/8100",
  "author": "SeeminglyScience",
  "body": "## PR Summary\r\n\r\nImprove type inference for `foreach` statement variables by:\r\n\r\n1. Inferring strongly typed arrays from explicit array and array literal expressions when elements are of the same inferred type\r\n\r\n1. Fix detection of `foreach` variable declaration.  The previous logic was to check if the variable expression's start offset was *after* the end offset of the `foreach` statement, which will never be true in the body\r\n\r\n1. Improve inference of what type the \"Condition\" of a `foreach` statement will enumerate as\r\n\r\nHere's some examples of scenarios that now work correctly:\r\n\r\n```powershell\r\nforeach ($i in 0, 1, 2) { $i.<tab> }\r\n# CompareTo    GetType      ToByte       ToDecimal    ToInt32      ToSingle     ToUInt16     TryFormat\r\n# Equals       GetTypeCode  ToChar       ToDouble     ToInt64      ToString     ToUInt32\r\n# GetHashCode  ToBoolean    ToDateTime   ToInt16      ToSByte      ToType       ToUInt64\r\nforeach ($i in @{}.GetEnumerator()) { $i.<tab> }\r\n# Key          Name         Value        Deconstruct  Equals       GetHashCode  GetType      ToString\r\n$dict = [System.Collections.Generic.Dictionary[string, string]]::new()\r\nforeach ($i in $dict.GetEnumerator()) { $i.<tab> }\r\n# Key          Value        Deconstruct  Equals       GetHashCode  GetType      ToString\r\nforeach ($i in $dict.GetEnumerator()) { $i.Key.<tab> }\r\n# Length            GetType           PadLeft           ToChar            ToLowerInvariant  ToUpperInvariant\r\n# Clone             GetTypeCode       PadRight          ToCharArray       ToSByte           Trim\r\n# CompareTo         IndexOf           Remove            ToDateTime        ToSingle          TrimEnd\r\n# Contains          IndexOfAny        Replace           ToDecimal         ToString          TrimStart\r\n# CopyTo            Insert            Split             ToDouble          ToType\r\n# EndsWith          IsNormalized      StartsWith        ToInt16           ToUInt16\r\n# Equals            LastIndexOf       Substring         ToInt32           ToUInt32\r\n# GetEnumerator     LastIndexOfAny    ToBoolean         ToInt64           ToUInt64\r\n# GetHashCode       Normalize         ToByte            ToLower           ToUpper\r\n```\r\n\r\n~~**Note:** I specifically avoided testing for `IEnumerable<>` directly because some types like `string` are not enumerated by PowerShell.  I know there's more types than `string`, if someone could point me to a full list of types that implement `IEnumerable` but PowerShell doesn't enumerate, I'll add in testing for that as well.~~ Found it, I used [PSEnumerableBinder](https://github.com/PowerShell/PowerShell/blob/0a4f33a872ab811d55ff0f255d87035dbf137fb2/src/System.Management.Automation/engine/runtime/Binding/Binders.cs#L514) for reference.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` to the beginning of the title and remove the prefix when the PR is ready.\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] User-facing [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed - Issue link:\r\n- **Testing - New and feature**\r\n    - [ ] Not Applicable or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n        - [ ] [Add `[feature]` if the change is significant or affects feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\r\n",
  "closed_at": "2019-03-19T20:36:28Z",
  "comments": [
    {
      "author": "stale[bot]",
      "author_association": "NONE",
      "body": "This PR has been automatically marked as stale because it has not had activity in the last 30 days. It will be closed if no further activity occurs within 10 days.\nThank you for your contributions.\nCommunity members are welcome to grab these works.\n",
      "created_at": "2018-12-26T20:27:59Z",
      "updated_at": "2018-12-26T20:27:59Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@BrucePay @TravisEz13 (when you guys get back from the holiday break) was there something pending on this PR? \ud83d\ude42 ",
      "created_at": "2018-12-26T20:31:56Z",
      "updated_at": "2018-12-26T20:31:56Z"
    },
    {
      "author": "stale[bot]",
      "author_association": "NONE",
      "body": "This PR has been automatically marked as stale because it has not had activity in the last 30 days. It will be closed if no further activity occurs within 10 days.\nThank you for your contributions.\nCommunity members are welcome to grab these works.\n",
      "created_at": "2019-02-04T15:10:31Z",
      "updated_at": "2019-02-04T15:10:31Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "I got caught up in other projects. I'm planning to address feedback this weekend.",
      "created_at": "2019-02-06T13:14:37Z",
      "updated_at": "2019-02-06T13:14:37Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@SeeminglyScience \tI think this is complete, but I'm going to hold this PR until 6.3.  We are really close to starting lock down for release and I want to make sure a change like this has plenty of time to get feedback before the release.\r\n\r\nMy primary reasoning is that there maybe script that make assumptions about our type inferences and break because of this change.  Although this change shouldn't be a breaking change, I think we should be a little cautious.",
      "created_at": "2019-02-11T22:02:30Z",
      "updated_at": "2019-02-11T22:02:30Z"
    },
    {
      "author": "stale[bot]",
      "author_association": "NONE",
      "body": "This PR has been automatically marked as stale because it has not had activity in the last 30 days. It will be closed if no further activity occurs within 10 days.\nThank you for your contributions.\nCommunity members are welcome to grab these works.\n",
      "created_at": "2019-03-13T22:28:35Z",
      "updated_at": "2019-03-13T22:28:35Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "@TravisEz13 @iSazonov Is it possible to disable stale bot since this is waiting on 6.2 GA?",
      "created_at": "2019-03-14T12:40:52Z",
      "updated_at": "2019-03-14T12:40:52Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Nevermind. Any comment removes the mark.",
      "created_at": "2019-03-14T13:35:11Z",
      "updated_at": "2019-03-14T13:35:11Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "We have already forked for GA.  ",
      "created_at": "2019-03-19T20:36:46Z",
      "updated_at": "2019-03-19T20:36:46Z"
    }
  ],
  "created_at": "2018-10-21T20:06:49Z",
  "number": 8100,
  "state": "closed",
  "title": "Improve type inference of array literals and foreach statement variables",
  "updated_at": "2019-03-19T23:32:31Z"
}