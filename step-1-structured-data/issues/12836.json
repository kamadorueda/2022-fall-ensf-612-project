{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12836",
  "author": "andreasgottwald",
  "body": "Hey Guys, \r\n\r\nI just installed both PS 7.0.1 LTS and 7.1.0 RC for testing my scripts against those versions.\r\nFirst thing I had to notice is the absence of the WindowsIdenity.Impersonate Method. I know you guys are building PS on top of the .net Core - but is it on purpose you left out impersonate?\r\n\r\n-->\r\n\r\n# Steps to reproduce\r\n\r\n```powershell, \r\nadd new-object System.Security.Principal.WindowsIdentity\r\nTry to run .impersonate() \r\n```\r\n\r\n# Expected behavior\r\n\r\n```\r\nNo error, 7.0 is supposed to be backward compatible.\r\n```\r\n\r\n# Actual behavior\r\n\r\n```\r\nUnhandled error: Method invocation failed because [System.Security.Principal.WindowsIdentity] does not contain a method named 'Impersonate'.\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.1\r\nPSEdition                      Core\r\nGitCommitId                    7.0.1\r\nOS                             Microsoft Windows 10.0.19041\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n```\r\n",
  "closed_at": "2020-05-29T13:12:48Z",
  "comments": [
    {
      "author": "KalleOlaviNiemitalo",
      "author_association": "NONE",
      "body": "[WindowsIdentity.RunImpersonated](https://docs.microsoft.com/en-us/dotnet/api/system.security.principal.windowsidentity.runimpersonated?view=netcore-3.1) seems to be the replacement; see <https://github.com/dotnet/runtime/issues/35389> and <https://github.com/dotnet/runtime/issues/20647#issuecomment-454860914>.\r\n\r\nBe careful to get the first argument from the WindowsIdentity.AccessToken property rather than WindowsIdentity.Token, which returns an IntPtr and can cause the token handle to be closed too early if PowerShell helpfully converts the IntPtr to a SafeAccessTokenHandle.",
      "created_at": "2020-05-29T11:24:24Z",
      "updated_at": "2020-05-29T11:24:24Z"
    },
    {
      "author": "andreasgottwald",
      "author_association": "NONE",
      "body": "> \r\n> \r\n> [WindowsIdentity.RunImpersonated](https://docs.microsoft.com/en-us/dotnet/api/system.security.principal.windowsidentity.runimpersonated?view=netcore-3.1) seems to be the replacement; see [dotnet/runtime#35389](https://github.com/dotnet/runtime/issues/35389) and [dotnet/runtime#20647 (comment)](https://github.com/dotnet/runtime/issues/20647#issuecomment-454860914).\r\n> \r\n> Be careful to get the first argument from the WindowsIdentity.AccessToken property rather than WindowsIdentity.Token, which returns an IntPtr and can cause the token handle to be closed too early if PowerShell helpfully converts the IntPtr to a SafeAccessTokenHandle.\r\n\r\nThe problem with this is, that you can only call SafeAccessTokenHandle in PS7 - but not before. So using this script on several thousand computers at the same time is nearly impossible. OK - making a workaround with a second import shouldn't be that much trouble, but it's inconvenient, that it is not compatible.\r\n\r\nThank you for your fast reply, Kalle :)",
      "created_at": "2020-05-29T13:12:28Z",
      "updated_at": "2020-05-29T13:12:28Z"
    },
    {
      "author": "KalleOlaviNiemitalo",
      "author_association": "NONE",
      "body": "> The problem with this is, that you can only call SafeAccessTokenHandle in PS7 - but not before.\r\n\r\nWindowsIdentity.RunImpersonated seems to be working OK on Windows PowerShell 5.1 with .NET Framework 4.8:\r\n\r\n```\r\nPS C:\\> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      5.1.18362.752\r\nPSEdition                      Desktop\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nBuildVersion                   10.0.18362.752\r\nCLRVersion                     4.0.30319.42000\r\nWSManStackVersion              3.0\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\n\r\n\r\nPS C:\\> Set-StrictMode -Version 5.1\r\nPS C:\\> $identity = [System.Security.Principal.WindowsIdentity]::GetCurrent()\r\nPS C:\\> [System.Security.Principal.WindowsIdentity]::RunImpersonated($identity.AccessToken, {})\r\n```\r\n\r\nAccording to [Windows PowerShell System Requirements](<https://docs.microsoft.com/powershell/scripting/windows-powershell/install/windows-powershell-system-requirements?view=powershell-5.1#microsoft-net-framework-requirements> \"Windows PowerShell System Requirements - PowerShell | Microsoft Docs\"), Windows PowerShell 5.1 requires .NET Framework 4.5. The [WindowsIdentity.RunImpersonated](<https://docs.microsoft.com/dotnet/api/system.security.principal.windowsidentity.runimpersonated?view=netframework-4.6> \"WindowsIdentity.RunImpersonated Method (System.Security.Principal) | Microsoft Docs\") methods were added in .NET Framework 4.6, so I suppose you cannot rely on them being available on infrequently-updated computers. .NET Framework 4.5.2 on Windows Server 2012 or 2012 R2 seems to remain supported for few years still.",
      "created_at": "2020-05-29T13:35:16Z",
      "updated_at": "2020-05-29T13:35:16Z"
    }
  ],
  "created_at": "2020-05-29T10:46:48Z",
  "labels": [
    "Issue-Question",
    "Resolution-Answered"
  ],
  "number": 12836,
  "state": "closed",
  "title": "WindowsIdentity.Impersonate Method missing",
  "updated_at": "2020-05-29T13:35:16Z"
}