{
  "_url": "https://github.com/PowerShell/PowerShell/issues/18159",
  "author": "MatejKafka",
  "body": "### Summary of the new feature / enhancement\n\nThere's an official article describing how to invoke a `Cmdlet` from another cmdlet: https://learn.microsoft.com/en-us/powershell/scripting/developer/cmdlet/how-to-invoke-a-cmdlet-from-within-a-cmdlet?view=powershell-7.2\r\nHowever, it does not describe any way to do the same for `PSCmdlet`, which I believe is a much more common request, given that most of builtin cmdlets inherit from `PSCmdlet`. On Stack Overflow, one can find guides how to do that, but at least some of them are either wrong, or grossly inefficient (e.g. spawning a new `PowerShell` instance just to run a single cmdlet).\r\n\r\nI'd appreciate an official documentation on how to invoke `PSCmdlet`-deriving cmdlets, and ideally a new, discoverable, type-safe method on `PSCmdlet` to do that without extra workarounds.\n\n### Proposed technical implementation details (optional)\n\n_No response_",
  "closed_at": "2022-09-29T17:10:57Z",
  "comments": [
    {
      "author": "jborean93",
      "author_association": "COLLABORATOR",
      "body": "~A [PSCmdlet](https://learn.microsoft.com/en-us/dotnet/api/System.Management.Automation.PSCmdlet?view=powershellsdk-7.0.0) inherits from [Cmdlet](https://learn.microsoft.com/en-us/dotnet/api/system.management.automation.cmdlet?view=powershellsdk-7.0.0) so whatever you can do with `Cmdlet` should be possible from `PSCmdlet`. You can see `PSCMdlet.Invoke<T> in the main doc page for that class (although it just redirects to the `Cmdlet` one due to inheritance.~\r\n\r\nEdit: This is wrong, see reply below.",
      "created_at": "2022-09-26T19:01:36Z",
      "updated_at": "2022-09-26T20:32:05Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "> A [PSCmdlet](https://learn.microsoft.com/en-us/dotnet/api/System.Management.Automation.PSCmdlet?view=powershellsdk-7.0.0) inherits from [Cmdlet](https://learn.microsoft.com/en-us/dotnet/api/system.management.automation.cmdlet?view=powershellsdk-7.0.0) so whatever you can do with `Cmdlet` should be possible from `PSCmdlet`. You can see `PSCmdlet.Invoke<T>` in the main doc page for that class (although it just redirects to the `Cmdlet` one due to inheritance.\r\n\r\nNah it throws at runtime for `PSCmdlet`. The only way to invoke another command from a binary cmdlet is with the `SMA.PowerShell` API",
      "created_at": "2022-09-26T20:23:30Z",
      "updated_at": "2022-09-26T20:23:30Z"
    },
    {
      "author": "jborean93",
      "author_association": "COLLABORATOR",
      "body": "Ah ok, good to know, did not realise that was the case",
      "created_at": "2022-09-26T20:31:53Z",
      "updated_at": "2022-09-26T20:31:53Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@sdwheeler Should this issue be moved to the doc repo?",
      "created_at": "2022-09-27T20:29:27Z",
      "updated_at": "2022-09-27T20:29:27Z"
    },
    {
      "author": "BrucePay",
      "author_association": "COLLABORATOR",
      "body": "The linked document already calls out the fact that this doesn't work. Historically, this feature only existed to satisfy some early requirements imposed on the PowerShell team.  In practice, any cmdlet (i.e. almost all of them) that uses engine (runspace) services must derive from PSCmdlet to get those services. Broadly speaking, the only practical way to do cmdlets calling cmdlets is to use the Pipeline API.",
      "created_at": "2022-09-27T23:47:49Z",
      "updated_at": "2022-09-27T23:47:49Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "Opened https://github.com/MicrosoftDocs/PowerShell-Docs/issues/9250",
      "created_at": "2022-09-29T17:10:57Z",
      "updated_at": "2022-09-29T17:10:57Z"
    }
  ],
  "created_at": "2022-09-26T18:01:22Z",
  "labels": [
    "Resolution-External"
  ],
  "number": 18159,
  "state": "closed",
  "title": "Provide/document an official way to run a PSCmdlet from another PSCmdlet",
  "updated_at": "2022-09-29T17:11:17Z"
}