{
  "_url": "https://github.com/PowerShell/PowerShell/issues/17937",
  "author": "daxian-dbw",
  "body": "### Summary of the new feature / enhancement\n\n### `VTUtility` is sortof broken today\r\n\r\nToday, the type `System.Management.Automation.VTUtility` contains 2 static methods only:\r\n```\r\nPS> [System.Management.Automation.VTUtility]::GetEscapeSequence\r\n\r\nOverloadDefinitions\r\n-------------------\r\nstatic string GetEscapeSequence(System.ConsoleColor color)\r\nstatic string GetEscapeSequence(System.Management.Automation.VTUtility+VT vt)\r\n```\r\nThe method `GetEscapeSequence(System.ConsoleColor color)` has the assumption that the specified `ConsoleColor` is for foreground color, and therefore it doesn't work for background colors, or a combination of foreground and background colors.\r\n\r\nThe method `GetEscapeSequence(System.Management.Automation.VTUtility+VT vt)` only works for getting escape sequences for `Reset` and `Inverse`, which are now defined within `$PSStyle` as `$PSStyle.Reset` and `$PSStyle.Reverse`.\r\n\r\nAdditionally, the current 2 methods are not scripting friendly. They are overload methods that both take one parameter, which results in ambiguity in method resolution with the following usages: \r\n\r\n![image](https://user-images.githubusercontent.com/127450/185676481-c748ec38-200e-4760-b689-6c97ba6b420f.png)\r\n\r\nSo, you will have to explicitly use `[ConsoleColor]::Red` and `[System.Management.Automation.VTUtility+VT]::Inverse` instead, which is a lot more typing, and of course, you will likely run into the above error first.\r\n\r\n### Real need for mapping `ConsoleColor` to VT escape sequences\r\n\r\nWe are using `$PSStyle.Formatting` to replace formatting color settings in `$Host.PrivateData` (see docs [here](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_ansi_terminals#:~:text=FromRgb(0xf5f5dc)-,%24PSStyle.,It%20replaces%20%24Host.)). Users of `$Host.PrivateData` has been familiar with using the `ConsoleColor` like this: `$Host.PrivateData.ErrorForegroundColor = 'green'`, but they cannot use `$PSStyle.Formatting.Error = 'green'` because that property expects VT escape sequence, so we need an easy way for users to convert `ConsoleColor` to VT escape sequences for foreground color, background color, and foreground/background combined color.\n\n### Proposed technical implementation details (optional)\n\n### Proposal\r\nProposing replace the current `GetEscapeSequence` methods with the following 3 methods:\r\n\r\n```\r\nstatic string MapForegroundColorToEscapeSequence(System.ConsoleColor foregroundColor)\r\nstatic string MapBackgroundColorToEscapeSequence(System.ConsoleColor backgroundColor)\r\nstatic string MapColorPairToEscapeSequence(System.ConsoleColor foregroundColor, System.ConsoleColor backgroundColor)\r\n```\r\n\r\n```\r\nPS:1> [System.Management.Automation.VTUtility] | gm -Static\r\n\r\n   TypeName: System.Management.Automation.VTUtility\r\n\r\nName                               MemberType Definition\r\n----                               ---------- ----------\r\nEquals                             Method     static bool Equals(System.Object objA, System.Object objB)\r\nMapBackgroundColorToEscapeSequence Method     static string MapBackgroundColorToEscapeSequence(System.ConsoleColor backgroundColor)\r\nMapColorPairToEscapeSequence       Method     static string MapColorPairToEscapeSequence(System.ConsoleColor foregroundColor, System.ConsoleColor ba\u2026\r\nMapForegroundColorToEscapeSequence Method     static string MapForegroundColorToEscapeSequence(System.ConsoleColor foregroundColor)\r\nReferenceEquals                    Method     static bool ReferenceEquals(System.Object objA, System.Object objB)\r\n```\r\n\r\nTheir names are explicitly reflecting their functionalities, and they are friendly to scripting:\r\n\r\n![image](https://user-images.githubusercontent.com/127450/185685334-e0c06047-8fb6-44b1-ba93-62d3fe5df027.png)\r\n\r\n### Breaking change\r\n\r\nThis will be a breaking change because the proposal is to replace the existing `GetEscapeSequence` methods.\r\nSearches on GitHub shows that they are only used by PowerShell itself, which can be easily fixed. So, I would consider this breaking change falls into the bucket 3 -- [Unlikely Grey Area](https://github.com/PowerShell/PowerShell/blob/7dc4587014bfa22919c933607bf564f0ba53db2e/docs/dev-process/breaking-change-contract.md#bucket-3-unlikely-grey-area)\r\n\r\nhttps://grep.app/search?q=VTUtility%5D%3A%3AGetEscapeSequence\r\n![image](https://user-images.githubusercontent.com/127450/185685763-dcdd6027-cec6-4e8c-b1c3-f5494ad6b298.png)\r\n\r\nhttps://grep.app/search?q=VTUtility.GetEscapeSequence\r\n![image](https://user-images.githubusercontent.com/127450/185685859-49302e2a-6c3d-4e3a-9acf-7dda8a202804.png)\r\n",
  "closed_at": "2022-08-24T18:11:21Z",
  "comments": [
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "/cc @SteveL-MSFT for comments.",
      "created_at": "2022-08-19T18:52:32Z",
      "updated_at": "2022-08-19T18:52:32Z"
    }
  ],
  "created_at": "2022-08-19T18:45:42Z",
  "number": 17937,
  "state": "closed",
  "title": "Update `VTUtility` to support mapping foreground/background `ConsoleColor` values to VT escape sequences",
  "updated_at": "2022-08-24T18:11:29Z"
}