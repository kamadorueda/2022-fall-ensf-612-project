{
  "_url": "https://github.com/PowerShell/PowerShell/issues/15582",
  "author": "FrankCarius",
  "body": "I used a PowerShell Code segment from https://docs.microsoft.com/de-de/azure/information-protection/requirements#firewalls-and-network-infrastructure to test connectivity to a AIP remote host\r\n\r\n```\r\n$request = [System.Net.HttpWebRequest]::Create(\"https://admin.na.aadrm.com/admin/admin.svc\")\r\n$request.GetResponse()\r\n$request.ServicePoint.Certificate.Issuer\r\n```\r\nIt works fine with PowerShell 5 but not with 7.1.3\r\n\r\n## Steps to reproduce\r\n\r\nRund these three lines in PSWH.EXE and PowerShell.exe\r\n\r\nPS7: The Property \"$request.ServicePoint.Certificate\" is \"$null\"\r\nPS5: the Property is a \"System.Security.Cryptography.X509Certificates.X509Certificate\"\r\nAnd the output is \"CN=Microsoft Secure Server CA 2011, O=Microsoft Corporation, L=Redmond, S=Washington, C=US\"\r\n\r\n## Expected behavior\r\n\r\nPowershell 7+ should fill this Property and return the Issuer\r\n\r\n## Actual behavior\r\n\r\nThe property is a $null-object, so a script cannot verify the certificate\r\n\r\n## Environment data\r\n\r\nWorking environment\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nPS C:\\Users\\fcarius> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      5.1.19041.906\r\nPSEdition                      Desktop\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nBuildVersion                   10.0.19041.906\r\nCLRVersion                     4.0.30319.42000\r\nWSManStackVersion              3.0\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\n```\r\n\r\nNot working environment\r\n```\r\nPS C:\\Users\\fcarius> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.1.3\r\nPSEdition                      Core\r\nGitCommitId                    7.1.3\r\nOS                             Microsoft Windows 10.0.19043\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```",
  "closed_at": "2021-06-15T13:04:53Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "This is a .NET type, so if there's a difference here between .NET Framework and .NET Core / .NET 5, PowerShell can't do anything about it.",
      "created_at": "2021-06-15T12:21:49Z",
      "updated_at": "2021-06-15T12:21:49Z"
    },
    {
      "author": "FrankCarius",
      "author_association": "NONE",
      "body": "Thanks for that hint.\r\nhttps://docs.microsoft.com/en-us/dotnet/api/system.net.servicepoint.certificate?view=netcore-3.1 contains the details:\r\n\r\n> Starting in .NET Core 1.0 and later including .NET 5.0 and later, the Certificate property always returns null. The ServerCertificateCustomValidationCallback is the recomendded way to access the server certificate.\r\n\r\nI will close that bug. So even as a consultant, i have to dig deeper into the classes.  Thanks\r\n\n\n<blockquote><img src=\"https://docs.microsoft.com/en-us/media/logos/logo-ms-social.png\" width=\"48\" align=\"right\"><div><strong><a href=\"https://docs.microsoft.com/en-us/dotnet/api/system.net.servicepoint.certificate\">ServicePoint.Certificate Property (System.Net)</a></strong></div><div>Gets the certificate received for this ServicePoint object. </div></blockquote>",
      "created_at": "2021-06-15T13:04:53Z",
      "updated_at": "2021-06-15T13:04:55Z"
    }
  ],
  "created_at": "2021-06-15T11:59:15Z",
  "number": 15582,
  "state": "closed",
  "title": "Different behaviour calling [System.Net.HttpWebRequest] and certificate property between PS7 and PS5",
  "updated_at": "2021-06-15T13:04:55Z"
}