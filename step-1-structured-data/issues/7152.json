{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7152",
  "author": "b3nt0",
  "body": "Steps to reproduce\r\n------------------\r\nChange location to a folder synchronized with OneDrive where files or directories have not been accessed. This is represented in the UI by having a \"cloud\" icon in the \"status\" column in explorer. Run get-childitem for a listing of the contents. Any items that had a cloud icon in status now have a green check mark indicating that they have been downloaded. This can be verified in the OneDrive UI. \r\n\r\nExpected behavior\r\n-----------------\r\nFiles are not downloaded until they are accessed.\r\n\r\nActual behavior\r\n---------------\r\nFiles are downloaded without accessing contents. \r\n\r\nEnvironment data\r\n----------------\r\n\r\n```powershell\r\n> $PSVersionTable\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.2\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.2\r\nOS                             Microsoft Windows 10.0.17134\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2019-07-08T06:40:54Z",
  "comments": [
    {
      "author": "markekraus",
      "author_association": "CONTRIBUTOR",
      "body": "Hmm. this doesn't repro for me.\r\n\r\nI created a folder with a a few files in it, set them to be FODed, then `set-location` and `get-childitem`. the items remain FODed.",
      "created_at": "2018-06-23T15:36:39Z",
      "updated_at": "2018-06-23T15:36:50Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Currently we haven't special code for processing the sparse type. \r\nAlthough it seems a question about this has already arisen.",
      "created_at": "2018-06-23T19:24:54Z",
      "updated_at": "2018-06-23T19:24:54Z"
    },
    {
      "author": "b3nt0",
      "author_association": "NONE",
      "body": "@markekraus I was able to verify that pwsh.exe would behave this way no matter which host I ran it from. 5.1 didn't behave that way.",
      "created_at": "2018-06-25T00:16:34Z",
      "updated_at": "2018-06-25T00:16:34Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "It's possible that corefx is doing something different that accesses the contents.  Needs to be investigated.",
      "created_at": "2018-06-27T00:05:31Z",
      "updated_at": "2018-06-27T00:05:31Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "There is a special reparse point type for OneDrive on Wondows 10.\r\nhttps://github.com/dotnet/corefx/issues/26310#issuecomment-358420799",
      "created_at": "2018-06-27T05:59:29Z",
      "updated_at": "2018-06-27T05:59:29Z"
    },
    {
      "author": "craiglandis",
      "author_association": "NONE",
      "body": "It repros for me with PowerShell 6.1/Win10 RS4/OneDrive Version 2018 (Build 18.172.0826.0010).\r\n\r\nI run get-childitem <my onedrive folder> in PS 6.1 and it downloads all files in that folder that haven't been downloaded. PS 5.1 doesn't do that, nor does a \"dir\" in CMD.exe. ",
      "created_at": "2018-09-16T21:53:50Z",
      "updated_at": "2018-09-16T21:53:50Z"
    },
    {
      "author": "sba923",
      "author_association": "CONTRIBUTOR",
      "body": "Did you check what you get with PowerShell 6.2.0?\r\n\r\n#8745 might have some effect.",
      "created_at": "2019-05-12T08:10:20Z",
      "updated_at": "2019-05-12T08:10:20Z"
    },
    {
      "author": "iamakulov",
      "author_association": "NONE",
      "body": "Just checked with 6.2.0; files are still downloaded with `Get-ChildItem`:\r\n\r\n![image](https://user-images.githubusercontent.com/2953267/57580357-1745e200-74b1-11e9-893a-1e3ec2ad09d2.png)\r\n\r\n\r\n",
      "created_at": "2019-05-12T09:28:01Z",
      "updated_at": "2019-05-12T09:28:01Z"
    },
    {
      "author": "sba923",
      "author_association": "CONTRIBUTOR",
      "body": "What your screenshot shows is that `pwsh.exe` triggers the download of something called `WinDivert.dll` (part of some module?), not of any of the online-only files in the `Clumsy` folder!\r\n",
      "created_at": "2019-05-12T10:15:36Z",
      "updated_at": "2019-05-12T10:15:36Z"
    },
    {
      "author": "iamakulov",
      "author_association": "NONE",
      "body": "`WinDivert.dll` is there:\r\n\r\n![image](https://user-images.githubusercontent.com/2953267/57580904-457af000-74b8-11e9-8d26-4828565124e3.png)\r\n\r\nThe reason `WinDivert.dll` is not present in the screenshot is that `Get-ChildItem` _waits for the file to get downloaded_ and lists it only after that. Here, I added a few more files and recorded how it looks:\r\n\r\n[<img width=\"480\" alt=\"msedge_2019-05-12_13-45-53\" src=\"https://user-images.githubusercontent.com/2953267/57581151-49a90c80-74bc-11e9-83b1-128145892bff.png\">](https://www.youtube.com/watch?v=DJv91aNUINw)",
      "created_at": "2019-05-12T10:47:18Z",
      "updated_at": "2019-05-12T10:47:18Z"
    },
    {
      "author": "sba923",
      "author_association": "CONTRIBUTOR",
      "body": "Weird. After the \"download\" the files are still marked (as far as the output from `Get-ChildItem` goes) as \"online-only.\"\r\n\r\nHow did you add the files? Via the website?\r\n\r\nI see you're running an Insider build of 19H1 / 1903. Which build exactly?\r\n\r\nHave you tried reproducing this on RS5 / 1809?",
      "created_at": "2019-05-12T11:23:11Z",
      "updated_at": "2019-05-12T11:23:11Z"
    },
    {
      "author": "iamakulov",
      "author_association": "NONE",
      "body": "> Weird. After the \"download\" the files are still marked (as far as the output from Get-ChildItem goes) as \"online-only.\"\r\n\r\nYup, that\u2019s weird. In the explorer, however, they do get marked as downloaded after the command finishes running. Here\u2019s another recording (26 sec): https://www.youtube.com/watch?v=jxaKL6u1i2k\r\n\r\nProbably `Get-ChildItem` reports the status that it read _before_ the file got downloaded?\r\n\r\n> I see you're running an Insider build of 19H1 / 1903. Which build exactly?\r\n\r\n18362.113.\r\n\r\n> Have you tried reproducing this on RS5 / 1809?\r\n\r\nNope.",
      "created_at": "2019-05-29T20:33:26Z",
      "updated_at": "2019-05-29T20:33:26Z"
    },
    {
      "author": "iamakulov",
      "author_association": "NONE",
      "body": "> Probably `Get-ChildItem` reports the status that it read before the file got downloaded?\r\n\r\nActually, yes. Here\u2019s another `Get-ChildItem` that I ran right after I finished recording the video:\r\n\r\n![image](https://user-images.githubusercontent.com/2953267/58589322-435fb200-826a-11e9-8dc3-68659164c648.png)\r\n\r\nAs you can see from the video, during the first `ls`, online-only files get downloaded, but `ls` still reports them as online-only. By the time the second `ls` runs, files are already downloaded, so it marks them appropriately.",
      "created_at": "2019-05-29T20:35:31Z",
      "updated_at": "2019-05-29T20:35:31Z"
    },
    {
      "author": "sba923",
      "author_association": "CONTRIBUTOR",
      "body": "This really beats me\u2026 FWIW, have you checked that `ls` _is_ the standard alias to `Get-ChildItem` / that you get the same behavior when invoking `Get-ChildItem` directly?\r\n\r\nNext to that, I would capture Process Monitor traces of `Get-ChildItem` running in Windows PowerShell 5.1 and in PowerShell Core 6.2.0. Maybe they would reveal something.\r\n\r\nHave you tried upgrading to PowerShell Core 6.2.1?\r\n\r\nHave you tried uninstalling and reinstalling PowerShell Core and (all bits and pieces of) .NET Core everywhere on your system?\r\n\r\nCan you repro this on another system?",
      "created_at": "2019-05-30T05:43:28Z",
      "updated_at": "2019-05-30T05:43:28Z"
    },
    {
      "author": "michevnew",
      "author_association": "NONE",
      "body": "Any reason this is still not fixed in the 7.0 preview? I thought one of the main focuses of 7.0 was better integration/compatibility with Windows...",
      "created_at": "2019-06-12T06:16:01Z",
      "updated_at": "2019-06-12T06:16:01Z"
    },
    {
      "author": "sba923",
      "author_association": "CONTRIBUTOR",
      "body": "@michevnew shall I infer you have a repro on your system? If so, can you please give as much detail as you can about your system and how you're triggering the problem?\r\n",
      "created_at": "2019-06-12T06:37:51Z",
      "updated_at": "2019-06-12T06:37:51Z"
    },
    {
      "author": "michevnew",
      "author_association": "NONE",
      "body": "Yes, the steps to reproduce havent changed from what's described in the original post. I have a W10 machine with files on demand configured, with most of the relevant files set to \"Online\". I installed the PS7 preview, navigated to the OneDrive directory where all my PS scripts reside, run a simple \"dir\" and had to wait for OneDrive to fully download the entire content of the directory. The screenshot below illustrates it for another, smaller dir\r\n![PS7-filesondemand](https://user-images.githubusercontent.com/38553333/59329096-b7806800-8cf6-11e9-98d0-98d2598093f2.png)\r\n\r\n\r\nPS C:\\> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-preview.1\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-preview.1\r\nOS                             Microsoft Windows 10.0.17134\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\nLet me know if you need more info.",
      "created_at": "2019-06-12T06:45:24Z",
      "updated_at": "2019-06-12T06:45:24Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@michevnew Can you prepare a repo on C#? I guess it come from .Net Core.",
      "created_at": "2019-06-13T03:59:03Z",
      "updated_at": "2019-06-13T03:59:03Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Took a look at this, I have a fix.",
      "created_at": "2019-06-13T22:56:23Z",
      "updated_at": "2019-06-13T22:56:23Z"
    },
    {
      "author": "sba923",
      "author_association": "CONTRIBUTOR",
      "body": "@SteveL-MSFT just curious: it seems I have never seen this issue with 6.x. Your explanation in #9895 gives me the feeling everyone should be affected. What am I missing?",
      "created_at": "2019-06-14T04:46:25Z",
      "updated_at": "2019-06-14T04:46:55Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@sba923 I don't know if it depends on a specific version of Win10 or OneDrive client, but it repros easily on my desktop machine.",
      "created_at": "2019-06-14T05:23:28Z",
      "updated_at": "2019-06-14T05:23:28Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:This issue was addressed in #9895, which has now been successfully released as `v7.0.0-preview.2`.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.0.0-preview.2)\n",
      "created_at": "2019-07-17T20:56:07Z",
      "updated_at": "2019-07-17T20:56:07Z"
    }
  ],
  "created_at": "2018-06-23T13:54:09Z",
  "labels": [
    "Issue-Discussion",
    "Resolution-Fixed",
    "WG-Cmdlets-Management"
  ],
  "number": 7152,
  "state": "closed",
  "title": "OneDrive \"files on demand\" (sparse files) being downloaded without contents being accessed. ",
  "updated_at": "2019-07-18T03:47:28Z"
}