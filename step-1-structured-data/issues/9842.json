{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9842",
  "author": "jonstelly",
  "body": "I'm not sure if this is a snap-specific issue, but if so, I see discussion here about only providing powershell core for non-lts systems as a snap: https://github.com/PowerShell/PowerShell/issues/7310\r\n\r\n<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n\r\n-->\r\n\r\n# Steps to reproduce\r\n\r\n- Configure `/snap/bin/pwsh` as default shell for active directory users in `/etc/sssd/sssd.conf`.\r\n  - `default_shell = /snap/bin/pwsh`\r\n- Attempt to ssh from one machine to another\r\n\r\n```\r\nssh -v target\r\n```\r\n\r\n# Expected behavior\r\n\r\nTo get a powershell prompt on the remote machine\r\n\r\n# Actual behavior\r\n\r\nssh session spits out some snap information and immediately disconnects\r\n\r\n# Troubleshooting steps / workarounds\r\n\r\nI tried just specifying -t, `ssh -t laptop` but that has the same behavior.\r\n\r\nIf I specify 'pwsh' as a command for ssh like `ssh -t laptop pwsh` then I do get a powershell prompt (`ssh -t laptop /snap/bin/pwsh` also works).  But it would be really nice not to have to specify pwsh.\r\n\r\n```\r\n/home/jon> ssh -t laptop pwsh\r\nPowerShell 6.2.1\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\n\r\nhttps://aka.ms/pscore6-docs\r\nType 'help' to get help.\r\n\r\n/home/jon> hostname\r\nlaptop\r\n```\r\n\r\n\r\n# Environment data\r\n\r\nUbuntu 19.04, Active Directory authentication enabled per [this doc](https://help.ubuntu.com/lts/serverguide/sssd-ad.html.en)\r\nPowershell installed via [this Powershell Snap](https://snapcraft.io/powershell)\r\n\r\n$PSVersionTable\r\n```\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.2.1\r\nPSEdition                      Core\r\nGitCommitId                    6.2.1\r\nOS                             Linux 5.0.0-16-generic #17-Ubuntu SMP Wed May 15 10:52:21 UTC 2019\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\nSSH Verbose Logging\r\n```\r\n/home/jon> ssh -v laptop\r\nOpenSSH_7.9p1 Ubuntu-10, OpenSSL 1.1.1b  26 Feb 2019\r\ndebug1: Reading configuration data /etc/ssh/ssh_config\r\ndebug1: /etc/ssh/ssh_config line 19: Applying options for *\r\ndebug1: Connecting to laptop [2600:.....] port 22.\r\ndebug1: connect to address 2600:..... port 22: No route to host\r\ndebug1: Connecting to laptop [192......] port 22.\r\ndebug1: Connection established.\r\ndebug1: identity file /home/jon/.ssh/id_rsa type 0\r\ndebug1: identity file /home/jon/.ssh/id_rsa-cert type -1\r\ndebug1: identity file /home/jon/.ssh/id_dsa type -1\r\ndebug1: identity file /home/jon/.ssh/id_dsa-cert type -1\r\ndebug1: identity file /home/jon/.ssh/id_ecdsa type -1\r\ndebug1: identity file /home/jon/.ssh/id_ecdsa-cert type -1\r\ndebug1: identity file /home/jon/.ssh/id_ed25519 type -1\r\ndebug1: identity file /home/jon/.ssh/id_ed25519-cert type -1\r\ndebug1: identity file /home/jon/.ssh/id_xmss type -1\r\ndebug1: identity file /home/jon/.ssh/id_xmss-cert type -1\r\ndebug1: Local version string SSH-2.0-OpenSSH_7.9p1 Ubuntu-10\r\ndebug1: Remote protocol version 2.0, remote software version OpenSSH_7.9p1 Ubuntu-10\r\ndebug1: match: OpenSSH_7.9p1 Ubuntu-10 pat OpenSSH* compat 0x04000000\r\ndebug1: Authenticating to laptop:22 as 'jon'\r\ndebug1: SSH2_MSG_KEXINIT sent\r\ndebug1: SSH2_MSG_KEXINIT received\r\ndebug1: kex: algorithm: curve25519-sha256\r\ndebug1: kex: host key algorithm: ecdsa-sha2-nistp256\r\ndebug1: kex: server->client cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none\r\ndebug1: kex: client->server cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none\r\ndebug1: expecting SSH2_MSG_KEX_ECDH_REPLY\r\ndebug1: Server host key: ecdsa-sha2-nistp256 SHA256:.....\r\ndebug1: Host 'laptop' is known and matches the ECDSA host key.\r\ndebug1: Found key in /home/jon/.ssh/known_hosts:7\r\ndebug1: rekey after 134217728 blocks\r\ndebug1: SSH2_MSG_NEWKEYS sent\r\ndebug1: expecting SSH2_MSG_NEWKEYS\r\ndebug1: SSH2_MSG_NEWKEYS received\r\ndebug1: rekey after 134217728 blocks\r\ndebug1: Will attempt key: /home/jon/.ssh/id_rsa RSA SHA256:..... agent\r\ndebug1: Will attempt key: /home/jon/.ssh/id_dsa \r\ndebug1: Will attempt key: /home/jon/.ssh/id_ecdsa \r\ndebug1: Will attempt key: /home/jon/.ssh/id_ed25519 \r\ndebug1: Will attempt key: /home/jon/.ssh/id_xmss \r\ndebug1: SSH2_MSG_EXT_INFO received\r\ndebug1: kex_input_ext_info: server-sig-algs=<ssh-ed25519,ssh-rsa,rsa-sha2-256,rsa-sha2-512,ssh-dss,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521>\r\ndebug1: SSH2_MSG_SERVICE_ACCEPT received\r\ndebug1: Authentications that can continue: publickey,password\r\ndebug1: Next authentication method: publickey\r\ndebug1: Offering public key: /home/jon/.ssh/id_rsa RSA SHA256:..... agent\r\ndebug1: Server accepts key: /home/jon/.ssh/id_rsa RSA SHA256:..... agent\r\ndebug1: Authentication succeeded (publickey).\r\nAuthenticated to laptop ([192......]:22).\r\ndebug1: channel 0: new [client-session]\r\ndebug1: Requesting no-more-sessions@openssh.com\r\ndebug1: Entering interactive session.\r\ndebug1: pledge: network\r\ndebug1: client_input_global_request: rtype hostkeys-00@openssh.com want_reply 0\r\ndebug1: Remote: /home/jon/.ssh/authorized_keys:1: key options: agent-forwarding port-forwarding pty user-rc x11-forwarding\r\ndebug1: Remote: /home/jon/.ssh/authorized_keys:1: key options: agent-forwarding port-forwarding pty user-rc x11-forwarding\r\ndebug1: Sending environment.\r\ndebug1: Sending env LANG = en_US.UTF-8\r\nWelcome to Ubuntu 19.04 (GNU/Linux 5.0.0-16-generic x86_64)\r\n\r\n * Documentation:  https://help.ubuntu.com\r\n * Management:     https://landscape.canonical.com\r\n * Support:        https://ubuntu.com/advantage\r\n\r\n * Ubuntu's Kubernetes 1.14 distributions can bypass Docker and use containerd\r\n   directly, see https://bit.ly/ubuntu-containerd or try it now with\r\n\r\n     snap install microk8s --classic\r\n\r\n0 updates can be installed immediately.\r\n0 of these updates are security updates.\r\n\r\nLast login: Thu Jun  6 10:05:45 2019 from 192.168.10.102\r\nThe snap command lets you install, configure, refresh and remove snaps.\r\nSnaps are packages that work across many different Linux distributions,\r\nenabling secure delivery and operation of the latest apps and utilities.\r\n\r\nUsage: snap <command> [<options>...]\r\n\r\nCommands can be classified as follows:\r\n\r\n         Basics: find, info, install, list, remove\r\n        ...more: refresh, revert, switch, disable, enable\r\n        History: changes, tasks, abort, watch\r\n        Daemons: services, start, stop, restart, logs\r\n       Commands: alias, aliases, unalias, prefer\r\n  Configuration: get, set, wait\r\n        Account: login, logout, whoami\r\n    Permissions: connections, interface, connect, disconnect\r\n      Snapshots: saved, save, check-snapshot, restore, forget\r\n          Other: version, warnings, okay, ack, known\r\n    Development: run, pack, try, download, prepare-image\r\n\r\nFor more information about a command, run 'snap help <command>'.\r\ndebug1: client_input_channel_req: channel 0 rtype exit-status reply 0\r\ndebug1: client_input_channel_req: channel 0 rtype eow@openssh.com reply 0\r\nFor a short summary of all commands, run 'snap help --all'.\r\ndebug1: channel 0: free: client-session, nchannels 1\r\nConnection to laptop closed.\r\nTransferred: sent 3060, received 4584 bytes, in 0.2 seconds\r\nBytes per second: sent 14002.7, received 20976.6\r\ndebug1: Exit status 0\r\n/home/jon>\r\n```\r\n\r\n",
  "closed_at": "2021-12-16T20:03:12Z",
  "comments": [
    {
      "author": "jonstelly",
      "author_association": "NONE",
      "body": "The easiest workaround was to set bash as my default shell then launch powershell from `~/.bashrc`:\r\n\r\n```\r\n/snap/bin/pwsh -i\r\n```\r\n\r\nBut it would still be nice if I could skip bash and use pwsh as my default shell.  Now I've got to exit out of two levels of shells and it's just a bit clunky.\r\n\r\nTo add to the initial report, SSHing with pwsh as the default shell fails, so does trying to log in from one of the other consoles (`ctrl+alt+f1` etc...) when pwsh is the default shell, but launching one of the gui terminal apps works fine.\r\n\r\nI don't know a lot of the internals of Linux but I know that ssh and logging in at a console result in a login shell but the gui terminal wouldn't be a login shell.  Is it possible that one of the files that gets run during a login like `/etc/profile` or `~/.profile` is causing an error and causing pwsh to crash/exit?",
      "created_at": "2019-06-15T19:07:26Z",
      "updated_at": "2019-06-17T14:36:55Z"
    },
    {
      "author": "thlac",
      "author_association": "CONTRIBUTOR",
      "body": "I also ran into this today, so I investigated it a bit, and figured that maybe it was a parsing error that it printed the snap output, but as it turn out `/snap/bin/pwsh` is symlinked to `/snap/bin/powershell` which is symlinked to `/usr/bin/snap`.\r\n\r\nSo my conclusion is that it is somehow related to how symlinks are processed either by the process calling `/snap/bin/powershell` or snap itself. But I don't know enough about Linux or snap to comment on that.\r\n\r\nKnowing the above it was fairly easy to work around it myself by finding the proper path to the executable, which happens to be `/snap/powershell/current/opt/powershell/pwsh\r\n`. I am not sure if that's really a stable option to run it with all of snap's redirection trickery, but it worked when I tested it out just now.",
      "created_at": "2019-08-02T14:52:33Z",
      "updated_at": "2019-08-02T14:52:33Z"
    },
    {
      "author": "jonstelly",
      "author_association": "NONE",
      "body": "Good find and that makes sense.  I've changed my setup once more to run tmux which then launches powershell.  It feels a bit 'wrong' having my default shell as `/bin/bash` which fires up tmux (if it's not already running) which fires up powershell, but it works reliably, even across SSHing to another host (with the same config).\r\n\r\nIf I get some time I may look at using your solution, but one of the drawbacks of having pwsh as the default shell is that the ~/.bashrc stuff doesn't get run, so things like the `grep --color=auto` alias wouldn't get set up.\r\n\r\nHere's my new config in case anyone wants a similar setup with tmux and pwsh:\r\n\r\n~/.bashrc (at the end)\r\n```bash\r\nif command -v tmux &> /dev/null && [ -n \"$PS1\" ] && [[ ! \"$TERM\" =~ screen ]] && [[ ! \"$TERM\" =~ tmux ]] && [ -z \"$TMUX\" ]; then\r\n  exec tmux\r\nelse\r\n  pwsh -i\r\n  exit\r\nfi\r\n```\r\n\r\n~/.tmux.conf\r\n```conf\r\nset-option -g default-command /snap/bin/pwsh\r\n```\r\n",
      "created_at": "2019-08-02T15:09:24Z",
      "updated_at": "2019-08-02T15:09:24Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "Seems like it might be snap specific, would be good to know if PS7 (non-Snap) has the same issue.  cc @TravisEz13 ",
      "created_at": "2019-12-10T02:20:34Z",
      "updated_at": "2019-12-10T02:20:34Z"
    },
    {
      "author": "jonstelly",
      "author_association": "NONE",
      "body": "I just spun up a new dev machine and have the same issue with Ubuntu 21.10 in WSL and powershell 7.2 installed via https://docs.microsoft.com/en-us/powershell/scripting/install/install-ubuntu?view=powershell-7.2\r\n\r\nThis is not using snap and the error is slightly different but there's a similar WSL issue [#5000](https://github.com/microsoft/WSL/issues/5000)\r\n\r\n`chsh -s /usr/bin/pwsh jon`\r\nstart a new shell:\r\n\r\n```\r\nAn error occurred mounting one of your file systems. Please run 'dmesg' for more details.\r\n: 6: export: (x86)/NVIDIA: bad variable name\r\n\r\n[process exited with code 2]\r\n```\r\n\r\nThe .bashrc and tmux workarounds I listed above both create different problems so I'd really prefer to just set pwsh as my default shell and not have to hack it.\r\n\r\n<blockquote><img src=\"https://docs.microsoft.com/media/logos/logo-powershell-social.png\" width=\"48\" align=\"right\"><div><strong><a href=\"https://docs.microsoft.com/en-us/powershell/scripting/install/install-ubuntu\">Installing PowerShell on Ubuntu - PowerShell</a></strong></div><div>Information about installing PowerShell on Ubuntu</div></blockquote>",
      "created_at": "2021-11-22T19:41:03Z",
      "updated_at": "2021-11-25T10:26:11Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@jonstelly Could you grab and share env variables for both (bash and pwsh) cases? Instead of pwsh you could use a simple custom application (C/C#/Rust)",
      "created_at": "2021-11-23T03:13:33Z",
      "updated_at": "2021-11-25T10:26:02Z"
    },
    {
      "author": "jonstelly",
      "author_association": "NONE",
      "body": "Quick C# Console app I put together to dump incoming args and environment.  After launching environment/args it launches pwsh which works as expected.  It's only when pwsh is the direct shell that I get the error.\r\n\r\nOne interesting note, this only happens if I install powershell using dpkg/apt.  If I use dotnet to install powershell as a global tool then use that global tool as my shell, I do not have this issue.  `dotnet tool install -g powershell`.  I've also included below how I've installed powershell and dotnet in WSL...\r\n\r\nI'm going to try and compile powershell to see if I can debug a bit more.  \r\n\r\nC# Console App/Shell\r\n```c#\r\nvar rawArgs = Environment.GetCommandLineArgs();\r\n\r\nConsole.WriteLine(\"ARGS: {0}\\r\\nRAW ARGS: {1}\", \r\n    String.Join(\", \", args.Select(a => $\"'{a}'\")),\r\n    String.Join(\", \", rawArgs.Select(ra => $\"'{ra}'\")));\r\n\r\nvar rawEnvironmentVariables = Environment.GetEnvironmentVariables();\r\nvar environmentVariables = rawEnvironmentVariables.Keys.Cast<string>()\r\n    .ToDictionary(k => k, \r\n                  k => (string)rawEnvironmentVariables[k]);\r\nvar environmentText = String.Join(\"\\r\\n\", environmentVariables.OrderBy(ev => ev.Key)\r\n    .Select(ev => $\"\\t{ev.Key}={ev.Value}\"));\r\n\r\nConsole.WriteLine(\"ENVIRONMENT:\\r\\n{0}\", environmentText);\r\nThread.Sleep(3000);\r\ntry\r\n{\r\n    Console.WriteLine(\"LAUNCHING POWERSHELL\");\r\n    var process = Process.Start(\"pwsh\");\r\n    process.WaitForExit();\r\n    Console.WriteLine(\"FINISHED\");\r\n}\r\ncatch(Exception ex)\r\n{\r\n    Console.WriteLine(\"ERROR:\\r\\n{0}\", ex);\r\n    Thread.Sleep(3000);\r\n}\r\nfinally\r\n{\r\n    Thread.Sleep(10000);\r\n}\r\n```\r\n\r\nOutput from above:\r\n```log\r\nARGS:\r\nRAW ARGS: '/usr/local/bin/shelldump'\r\nENVIRONMENT:\r\n        DISPLAY=:0\r\n        HOME=/home/jon\r\n        HOSTTYPE=x86_64\r\n        LANG=C.UTF-8\r\n        LOGNAME=jon\r\n        NAME=Codor\r\n        PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/Windows/system32:/mnt/c/Windows:/mnt/c/Windows/System32/Wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Git/cmd:/mnt/c/Program Files/PowerShell/7/:/mnt/c/Program Files/Docker/Docker/resources/bin:/mnt/c/ProgramData/DockerDesktop/version-bin:/mnt/c/Program Files (x86)/Microsoft SQL Server/150/DTS/Binn/:/mnt/c/Program Files/Azure Data Studio/bin:/mnt/c/Users/jon/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/jon/AppData/Local/Programs/Microsoft VS Code/bin\r\n        PULSE_SERVER=/mnt/wslg/PulseServer\r\n        SHELL=/usr/local/bin/shelldump\r\n        TERM=xterm-256color\r\n        USER=jon\r\n        WAYLAND_DISPLAY=wayland-0\r\n        WSL_DISTRO_NAME=shelltests\r\n        WSL_INTEROP=/run/WSL/9203_interop\r\n        WSLENV=WT_SESSION::WT_PROFILE_ID\r\n        WT_PROFILE_ID={a20c7769-29c6-5d99-87b2-3e62578047b9}\r\n        WT_SESSION=c1d7c800-e915-433f-954c-a1f6149db7d5\r\n        XDG_RUNTIME_DIR=/mnt/wslg/runtime-dir\r\nLAUNCHING POWERSHELL\r\nPowerShell 7.2.0\r\nCopyright (c) Microsoft Corporation.\r\n\r\nhttps://aka.ms/powershell\r\nType 'help' to get help.\r\n\r\nPS /mnt/c/Users/jon> exit\r\nFINISHED\r\n```\r\n\r\nFresh Ubuntu install from Microsoft Store then:\r\n\r\n```pwsh\r\nwget https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb;\r\nsudo dpkg -i ./packages-microsoft-prod.deb;\r\nsudo apt-get update; sudo apt-get install -y apt-transport-https curl;\r\nsudo apt-get install -y dotnet-sdk-6.0 aspnetcore-runtime-5.0 git git-lfs vim make gcc g++ powershell;\r\n```\r\n\r\nThen edit `/etc/shells` to add `/usr/bin/pwsh.`  I've tested setting my shell to both `/usr/bin/pwsh` and `/opt/microsoft/powershell/7/pwsh` but both throw the error mentioned above.",
      "created_at": "2021-11-24T23:20:56Z",
      "updated_at": "2021-11-25T10:25:51Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@jonstelly Thanks for your investigations! Please run `dir env:` after run pwsh from you application - key here is to compare env variables before and after. (The test application should be assigned as login shell.)",
      "created_at": "2021-11-25T03:39:32Z",
      "updated_at": "2021-11-25T10:25:42Z"
    },
    {
      "author": "jonstelly",
      "author_association": "NONE",
      "body": "This is the output from using my c# fake shell.  I tried adding `gci env:` to my profile and tried to set pwsh as the shell again, It seems like I get the error about export before my profile executes.\r\n\r\nIt's somewhat interesting to me that the dotnet global tool works (though I can't use Start-Job with the dotnet tool) while the ubuntu package doesn't.  I just looked at the ubuntu package and I don't see anything special going on there.\r\n\r\nI've got powershell building locally and I see the same behavior when I use the local build as my shell so I'm going to try and debug further.\r\n\r\n```\r\nARGS:\r\nRAW ARGS: '/usr/local/bin/shelldump'\r\nENVIRONMENT:\r\n        DISPLAY=:0\r\n        HOME=/home/jon\r\n        HOSTTYPE=x86_64\r\n        LANG=C.UTF-8\r\n        LOGNAME=jon\r\n        NAME=Codor\r\n        PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/Windows/system32:/mnt/c/Windows:/mnt/c/Windows/System32/Wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Git/cmd:/mnt/c/Program Files/PowerShell/7/:/mnt/c/Program Files/Docker/Docker/resources/bin:/mnt/c/ProgramData/DockerDesktop/version-bin:/mnt/c/Program Files (x86)/Microsoft SQL Server/150/DTS/Binn/:/mnt/c/Program Files/Azure Data Studio/bin:/mnt/c/Users/jon/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/jon/AppData/Local/Programs/Microsoft VS Code/bin\r\n        PULSE_SERVER=/mnt/wslg/PulseServer\r\n        SHELL=/usr/local/bin/shelldump\r\n        TERM=xterm-256color\r\n        USER=jon\r\n        WAYLAND_DISPLAY=wayland-0\r\n        WSL_DISTRO_NAME=shelltests\r\n        WSL_INTEROP=/run/WSL/9362_interop\r\n        WSLENV=WT_SESSION::WT_PROFILE_ID\r\n        WT_PROFILE_ID={a20c7769-29c6-5d99-87b2-3e62578047b9}\r\n        WT_SESSION=c12862c6-898d-4ad3-9192-97acc11876d3\r\n        XDG_RUNTIME_DIR=/mnt/wslg/runtime-dir\r\nLAUNCHING POWERSHELL\r\nPowerShell 7.2.0\r\nCopyright (c) Microsoft Corporation.\r\n\r\nhttps://aka.ms/powershell\r\nType 'help' to get help.\r\n\r\nPS /mnt/c/Users/jon> gci env:\r\n\r\nName                           Value\r\n----                           -----\r\nDISPLAY                        :0\r\nHOME                           /home/jon\r\nHOSTTYPE                       x86_64\r\nLANG                           C.UTF-8\r\nLOGNAME                        jon\r\nNAME                           Codor\r\nPATH                           /opt/microsoft/powershell/7:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/Windows/system32:/mnt/c/Windows:/mnt/c/Windows/System32/Wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mn\u2026\r\nPSModulePath                   /home/jon/.local/share/powershell/Modules:/usr/local/share/powershell/Modules:/opt/microsoft/powershell/7/Modules\r\nPULSE_SERVER                   /mnt/wslg/PulseServer\r\nSHELL                          /usr/local/bin/shelldump\r\nTERM                           xterm-256color\r\nUSER                           jon\r\nWAYLAND_DISPLAY                wayland-0\r\nWSL_DISTRO_NAME                shelltests\r\nWSL_INTEROP                    /run/WSL/9362_interop\r\nWSLENV                         WT_SESSION::WT_PROFILE_ID\r\nWT_PROFILE_ID                  {a20c7769-29c6-5d99-87b2-3e62578047b9}\r\nWT_SESSION                     c12862c6-898d-4ad3-9192-97acc11876d3\r\nXDG_RUNTIME_DIR                /mnt/wslg/runtime-dir\r\n```",
      "created_at": "2021-11-25T06:07:08Z",
      "updated_at": "2021-11-25T10:25:29Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@jonstelly Really your issue is another than that and dup #12020. See https://github.com/PowerShell/PowerShell/issues/12020#issuecomment-599774853\r\n",
      "created_at": "2021-11-25T10:25:08Z",
      "updated_at": "2021-11-25T10:25:08Z"
    },
    {
      "author": "jonstelly",
      "author_association": "NONE",
      "body": "Ahhh, you got it.  Changing line 6 of `/etc/profile.d/apps-bin-path.sh` from\r\n\r\n```\r\n    export PATH=$PATH:${snap_bin_path}\r\n```\r\n\r\nto\r\n\r\n```\r\n    export PATH=\"$PATH:${snap_bin_path}\"\r\n```\r\n\r\nfixed my issue.  Thanks a lot for the help.\r\n\r\nEDIT: sed to fix apps-bin-path.sh: `sudo sed -i 's/export PATH=$PATH:${snap_bin_path}/export PATH=\\\"$PATH:${snap_bin_path}\\\"/g' /etc/profile.d/apps-bin-path.sh`",
      "created_at": "2021-11-25T16:01:10Z",
      "updated_at": "2021-11-26T20:33:32Z"
    }
  ],
  "created_at": "2019-06-06T15:35:01Z",
  "number": 9842,
  "state": "closed",
  "title": "Immediate disconnect when sshing to host with /snap/bin/pwsh set as default shell",
  "updated_at": "2021-12-16T20:03:12Z"
}