{
  "_url": "https://github.com/PowerShell/PowerShell/issues/7129",
  "author": "iSazonov",
  "body": "## PR Summary\r\n\r\nContinue #6929\r\nReplace #7100 \r\n\r\nCleanup code to replace Utils.FileExists(), Utils.DirectoryExists() and Utils.ItemExists() methods with .Net Core methods.\r\n\r\n## PR Checklist\r\n\r\n- [ ] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [ ] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [ ] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [ ] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [ ] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` to the beginning of the title and remove the prefix when the PR is ready.\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [ ] User-facing [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed - Issue link:\r\n- **Testing - New and feature**\r\n    - [ ] Not Applicable or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n        - [ ] [Add `[feature]` if the change is significant or affects feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\n\n<!-- Reviewable:start -->\n---\nThis change is\u2002[<img src=\"https://reviewable.io/review_button.svg\" height=\"34\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/powershell/powershell/7129)\n<!-- Reviewable:end -->\n",
  "closed_at": "2018-07-25T17:02:10Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "WIP - still 6 commits upcoming...",
      "created_at": "2018-06-21T15:44:46Z",
      "updated_at": "2018-06-21T15:44:46Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw Please look the issue with Unix compiling.\r\n```\r\n843/home/travis/build/PowerShell/PowerShell/src/System.Management.Automation/help/UpdatableHelpSystem.cs(1650,106): error CS0117: 'EnumerationOptions' does not contain a definition for 'MatchCasing' [/home/travis/build/PowerShell/PowerShell/src/System.Management.Automation/System.Management.Automation.csproj]\r\n```\r\nYesterday the commit (UpdatableHelpSystem.cs) was compiled without errors. Today it failed. I tryed compile the code on CI Appveyor and get the same error.\r\nMaybe we get updated version of .Net Core with a bug?\r\n\r\nLocally I can compile without problem and IntelliSense works well in VS Code.\r\n\r\nTracking Issue https://github.com/dotnet/corefx/issues/30626",
      "created_at": "2018-06-22T09:47:32Z",
      "updated_at": "2018-06-25T04:55:31Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I have only one commit related to Unix but can not push it until travis-ci problem will be resolved.",
      "created_at": "2018-06-22T15:49:05Z",
      "updated_at": "2018-06-22T15:49:05Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I tested locally all versions - msi and zip packages - 2.1.300 and 2.1.301 and the project is compiled well.\r\nSo problem is somewhere else.\r\nI wonder how and why the problem is arised on both CIs.",
      "created_at": "2018-06-25T07:22:04Z",
      "updated_at": "2018-06-25T07:22:04Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Rebased to move to .Net Core 2.1.1.",
      "created_at": "2018-06-29T06:32:57Z",
      "updated_at": "2018-06-29T06:32:57Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "> 'EnumerationOptions' does not contain a definition for 'MatchCasing'\r\n\r\nAh, this is probably because the compiler resolves `EnumerationOptions` to `System.Management.EnumerationOptions` instead of `System.IO.EnumerationOptions`. Reference to the package `System.Management` was added to `System.Management.Automation` project some time back.\r\n\r\n You can use the full type name `System.IO.EnumerationOptions` and it should work.\r\n\r\nThe CI failure now is different though, it's complaining about `Utils.FileExists` not being present.",
      "created_at": "2018-07-01T07:25:51Z",
      "updated_at": "2018-07-01T07:25:51Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw Thanks for help!\r\n\r\nThe PR is ready for review.",
      "created_at": "2018-07-02T11:39:10Z",
      "updated_at": "2018-07-02T11:39:10Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Rebased to resolve a merge conflict.",
      "created_at": "2018-07-06T03:59:12Z",
      "updated_at": "2018-07-06T03:59:12Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw Can we merge the PR?",
      "created_at": "2018-07-11T07:26:09Z",
      "updated_at": "2018-07-11T07:26:09Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@iSazonov Let me quickly go through the changes.",
      "created_at": "2018-07-12T06:01:10Z",
      "updated_at": "2018-07-12T06:01:10Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw Could you please continue?",
      "created_at": "2018-07-17T05:56:36Z",
      "updated_at": "2018-07-17T05:56:36Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "\n\n\n\n___\n*[src/System.Management.Automation/engine/SessionStateDriveAPIs.cs, line 966 at r1](https://reviewable.io/reviews/powershell/powershell/7129#-LHipQN46-frdEEmsyE5:-LHipQN46-frdEEmsyE6:b-nrmmp5) ([raw file](https://github.com/powershell/powershell/blob/5b04c073f16fd311a034a27fee8c9683052a42d2/src/System.Management.Automation/engine/SessionStateDriveAPIs.cs#L966)):*\n> ```Smalltalk\n>                         if (systemDriveInfo.DriveType == DriveType.NoRootDirectory)\n>                         {\n>                             if (!Directory.Exists(drive.Root))\n> ```\n\nIs this going to suppress IO and UnAuthorized Exceptions like the old code?\n\n\n<!-- Sent from Reviewable.io -->\n",
      "created_at": "2018-07-18T19:20:46Z",
      "updated_at": "2018-07-18T19:20:46Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "\n\n\n\n___\n*[src/System.Management.Automation/namespaces/FileSystemProvider.cs, line 136 at r1](https://reviewable.io/reviews/powershell/powershell/7129#-LHiqEnlBrPTUf3-0i6K:-LHiqEnlBrPTUf3-0i6L:b-o2g79i) ([raw file](https://github.com/powershell/powershell/blob/5b04c073f16fd311a034a27fee8c9683052a42d2/src/System.Management.Automation/namespaces/FileSystemProvider.cs#L136)):*\n> ```Smalltalk\n>                 if (isContainer)\n>                 {\n>                     return new DirectoryInfo(path);\n> ```\n\nWhy don't you cast fsinfo to a `DirectoryInfo` like you do in a later line?\n\n`Dir((DirectoryInfo)fsinfo, recurse, depth, nameOnly, returnContainers, tracker);`\n\n\n<!-- Sent from Reviewable.io -->\n",
      "created_at": "2018-07-18T19:24:43Z",
      "updated_at": "2018-07-18T19:24:43Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": ">Is this going to suppress IO and UnAuthorized Exceptions like the old code?\r\n\r\nYes, we preserve old code logic.\r\n\r\n>Why don't you cast fsinfo to a DirectoryInfo like you do in a later line?\r\n\r\nHere we create objects of _different_ types.\r\nIn Dir() you referenced we have above `if (isContainer)` so we really have DirectoryInfo object and can cast to the type.",
      "created_at": "2018-07-19T14:31:10Z",
      "updated_at": "2018-07-19T14:31:10Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "@iSazonov ~Will do today~. Sorry for being tardy in reviewing this PR (need to spend much time on releasing this week). Didn't get to it today \u2639\ufe0f Tomorrow for sure.",
      "created_at": "2018-07-19T16:51:04Z",
      "updated_at": "2018-07-20T06:43:42Z"
    }
  ],
  "created_at": "2018-06-21T05:05:43Z",
  "number": 7129,
  "state": "closed",
  "title": "Cleanup Utils.FileExists(), Utils.DirectoryExists() and Utils.ItemExists() methods",
  "updated_at": "2018-07-26T03:19:56Z"
}