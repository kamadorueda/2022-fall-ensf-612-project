{
  "_url": "https://github.com/PowerShell/PowerShell/issues/2051",
  "author": "jsoref",
  "body": "Spelling of referenced to be fixed later\n\nThis is an attempt to test the waters of your review system.\n\nI have a >700 commit series which would come after this (I'm not done writing it, and would need to remove a commit which is there to help my tooling, but you can peek at my repo to see it).\n",
  "closed_at": "2016-08-31T18:01:11Z",
  "comments": [
    {
      "author": "msftclas",
      "author_association": "NONE",
      "body": "Hi **@jsoref**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    <span>You've already signed the contribution license agreement. Thanks!</span>\n        <p>The agreement was validated by Microsoft and real humans are currently evaluating your PR.</p>\n\nTTYL, MSBOT;\n",
      "created_at": "2016-08-24T17:00:26Z",
      "updated_at": "2016-08-24T17:00:26Z"
    },
    {
      "author": "jianyunt",
      "author_association": "CONTRIBUTOR",
      "body": "Please fix the 'referencd'  too. thx\n",
      "created_at": "2016-08-24T20:28:32Z",
      "updated_at": "2016-08-24T20:30:00Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "@jsoref - I took a peek at some of the commits in your fork.  We like fixing typos, but 650+ commits is a bit much, you could squash those, or we'd probably squash before merging.\n\nI did notice changing a resource name. Often that seems like a safe change (not a public api), but we do use some of those names in error messages. Again, that also seems like a safe change, but it can be useful to leave the typo as is assuming the error has been posted somewhere, e.g. Stack Overflow - that way searching for an error isn't as dependent on what version of PowerShell you used.\n\nIf you do submit a bigger PR, consider submitting a single PR for fixes to comments only, maybe another that changes code, and you could break the changes in code up a bit too, e.g. changing assertion text, changing resource names, etc.\n",
      "created_at": "2016-08-24T21:27:35Z",
      "updated_at": "2016-08-24T21:27:35Z"
    },
    {
      "author": "jsoref",
      "author_association": "CONTRIBUTOR",
      "body": "@jianyunt : can I please get a pass on fixing the other thing? I promise it's in the bigger series (it's closer to 1000 at this point).\n\n@lzybkr : I have done splits like that in the past. It's definitely doable. And I can definitely squash things once people decide what/how. I prefer not to squash initially because it makes it painful to handle rebases. And yes, I understand the idea of keeping errors searchable. I'm not sure the best approach for that. I do not have the resources to search all of \"The Internet\" and all \"Knowledgebases\" / \"Wikis\" to find things that people have referenced. I'd personally rather leave that bikeshed to the people who are going to maintain the system -- I'm happy to try to split out the commits likely to require such opinions.\n\nIt'd be helpful if you gave me some definite sense of what split you want (preferably with a specific ordering), I'm pretty close to being done w/ the fixes (I ended up doing two passes, and then I'll have to do at least one rebase to current).\n\nNote that one problem I have is that if a word is both misspelled in code and in a comment referencing that code, it doesn't really work to fix the comment first -- it has to actually wait until the code is fixed. For smaller repos and smaller series, this is more tractable, but your repo is surprisingly heavy in errors (I've submitted fixes to chakracore which isn't tiny either...).\n\nHere's a list that I could work from (it's similar to what I've done in the past):\n- comments \n- debug text\n- variables\n- internal functions\n- public text\n- resource keys\n- public APIs (typically, I'd create a commit for this and never submit it -- having the commit makes my tools happy)\n\nOh, one warning: I've excluded your subrepos from consideration. If your APIs are incestuous with them, then I expect that your tooling will complain, and someone else will have to figure out how to cross that bridge (I'd just drop the items from a PR).\n",
      "created_at": "2016-08-25T01:00:16Z",
      "updated_at": "2016-08-25T01:00:16Z"
    },
    {
      "author": "jsoref",
      "author_association": "CONTRIBUTOR",
      "body": "@lzybkr : it'd also be helpful if you could identify a list of things I shouldn't bother changing.\n\n``` cs\nsrc/Microsoft.PowerShell.Commands.Utility/commands/utility/AddType.cs:\n            strongNames[\"CustomMarshalers\"] = \"CustomMarshalers, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\";\n```\n\n_marshallers_\n\nI'm assuming that things like this shouldn't be changed.\n",
      "created_at": "2016-08-25T01:33:10Z",
      "updated_at": "2016-08-25T01:33:10Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "Mostly I just want to keep the review manageable. If it's too time consuming to review, then we wouldn't bother accepting the risk of breaking something.\n\nThe GitHub UI has difficulty with big PRs - but we do have an internal tool that should help, but I haven't used it when there are a large number of commits.\n\nYour list looks like a good breakdown, we can see how that goes.\n\nAnd yeah, if we're naming something external like an assembly, don't change that. :)\nAs mentioned previously, I think we'd reject most resource name changes, but you can submit a PR for those to consider if you like.\n",
      "created_at": "2016-08-25T17:48:21Z",
      "updated_at": "2016-08-25T17:48:21Z"
    },
    {
      "author": "jsoref",
      "author_association": "CONTRIBUTOR",
      "body": "I certainly want to ensure the review is manageable. Otherwise, I've just wasted my time.\nFWIW, no tool handles large things well, I'm well aware of this. One reason I do things like this is to find edges and polish them (I've improved my personal tools with each project they clean, and I'm improving the VCS tooling each time as well).\n\nok.\nassembly names -> no (beyond where I ask for reviews)\nresource names -> maybe (near the last things I'll ask about)\n\nfwiw, the tooling I tried to use to split up the changes choked when I asked, so instead I'm trying to do a few directories first:\n1. demos #2060 \n2. docs #2061 \n3. test #2063\n",
      "created_at": "2016-08-25T18:03:23Z",
      "updated_at": "2016-08-25T18:03:23Z"
    },
    {
      "author": "jianyunt",
      "author_association": "CONTRIBUTOR",
      "body": "As @jsoref mentioned he will fix the 'referencd' typo in his next fix. I am fine. so signoff. :shipit:  Please merge his change. thx\n",
      "created_at": "2016-08-31T17:24:24Z",
      "updated_at": "2016-08-31T17:24:24Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "Closing, this change was already merged: d3f4eac6c1a54978d2c446fcf93750773147ce7c\n",
      "created_at": "2016-08-31T18:01:11Z",
      "updated_at": "2016-08-31T18:01:11Z"
    }
  ],
  "created_at": "2016-08-24T17:00:23Z",
  "number": 2051,
  "state": "closed",
  "title": "remove extra 'not' in error message",
  "updated_at": "2016-08-31T18:01:11Z"
}