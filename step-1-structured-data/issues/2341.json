{
  "_url": "https://github.com/PowerShell/PowerShell/issues/2341",
  "author": "rjstone",
  "body": "## Steps to reproduce\n\nDefine this function:\n\n``` powershell\nfunction su { Start-Process PowerShell -Verb RunAs }\n```\n\nType `su` at the prompt.\n## Expected behavior\n\nIt should either:\n1. launch a new powershell widow running as Administrator or\n2. Suspend the current shell and run an Administrator shell in the same window \n## Actual behavior\n\nIt seems like it's trying to run both processes in the same console where possibly both are getting stdin and outputting to stderr. It looks similar to trying to run an interactive process in using with `&` (background).\n\n![animated gif](https://dl.dropboxusercontent.com/u/57161259/ShareX/201609/2016-09-22_15-11-57.gif)\n\nUsing `-Verb open` makes no difference.\n## Environment data\n\n``` powershell\nC:\\Program Files\\PowerShell\\6.0.0.10> $PSVersionTable\n\nName                           Value\n----                           -----\nPSEdition                      Core\nSerializationVersion           1.1.0.1\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\nPSRemotingProtocolVersion      2.3\nWSManStackVersion              3.0\nGitCommitId                    v6.0.0-alpha.10\nCLRVersion\nBuildVersion                   3.0.0.0\nPSVersion                      6.0.0-alpha\n\n```\n",
  "closed_at": "2016-12-08T00:57:03Z",
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "This works on Windows PowerShell, not clear yet if cmdlet or engine issue\n",
      "created_at": "2016-09-22T19:53:51Z",
      "updated_at": "2016-09-22T19:53:51Z"
    },
    {
      "author": "rjstone",
      "author_association": "NONE",
      "body": "@SteveL-MSFT  Did you define a function as shown and execute the function from the shell? If I type `Start-Process PowerShell -Verb RunAs` into the shell then it works. But if I define a function as described above and execute the function from the shell I get the odd behavior.\n\nSo **it doesn't work in Windows PowerShell for me.** It pretty much does the same thing. Here's the info from \"Windows PowerShell\" on my Win10 system just updated with the anniversary update:\n\n``` powershell\nName                           Value\n----                           -----\nPSVersion                      5.1.14393.187\nPSEdition                      Desktop\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\nBuildVersion                   10.0.14393.187\nCLRVersion                     4.0.30319.42000\nWSManStackVersion              3.0\nPSRemotingProtocolVersion      2.3\nSerializationVersion           1.1.0.1\n```\n",
      "created_at": "2016-09-23T05:06:36Z",
      "updated_at": "2016-09-23T05:10:16Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@rjstone I cut and pasted your repro into Windows PowerShell.  Calling 'su' brings up UAC to run elevated PowerShell as expected.  I'm running the same version of Windows PowerShell as you.  In alpha.10 on Windows, I see it not working.\n",
      "created_at": "2016-09-23T16:00:19Z",
      "updated_at": "2016-09-23T16:00:19Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "Its work well on:\n1.\nPS C:> $PSVersionTable\n\nName                           Value\n\n---\n\nPSVersion                      5.1.14926.1000\nPSEdition                      Desktop\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\nBuildVersion                   10.0.14926.1000\nCLRVersion                     4.0.30319.42000\nWSManStackVersion              3.0\nPSRemotingProtocolVersion      2.3\nSerializationVersion           1.1.0.1\n\n2.\nPS C:> $PSVersionTable\n\nName                           Value\n\n---\n\nPSVersion                      5.0.10240.17113\nWSManStackVersion              3.0\nSerializationVersion           1.1.0.1\nCLRVersion                     4.0.30319.42000\nBuildVersion                   10.0.10011.16384\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\nPSRemotingProtocolVersion      2.3\n",
      "created_at": "2016-09-27T08:57:53Z",
      "updated_at": "2016-09-27T08:57:53Z"
    },
    {
      "author": "rjstone",
      "author_association": "NONE",
      "body": "Ok, I'll clean out my profile and such to make sure that this isn't being caused by a module import or something similar. I really should have done that in the first place.\n",
      "created_at": "2016-09-27T23:40:54Z",
      "updated_at": "2016-09-27T23:40:54Z"
    },
    {
      "author": "rjstone",
      "author_association": "NONE",
      "body": "Ok, cleaned out my profiles and modules folders. Still have problems with alpha but different:\n\n![screenshot](https://dl.dropboxusercontent.com/u/57161259/ShareX/201609/2016-09-28_03-33-20.gif)\n\nActually, the same thing happens even if I run it directly rather than in a function.\n\nWorks fine in WindowsPowerShell now.\n\nThe first PowerShell.exe in my path is WindowsPowerShell. If I try to invoke alpha with start-process using the full path then something else happens. (For this test I didn't use RunAs.) The window appears but wont respond to keyboard input.\n",
      "created_at": "2016-09-28T08:07:55Z",
      "updated_at": "2016-09-28T08:07:55Z"
    },
    {
      "author": "joeyaiello",
      "author_association": "CONTRIBUTOR",
      "body": "In the latest PowerShell Core alpha (6.0.0-alpha.12) we explicitly don't allow `Start-Process -Verb`, but the problem does not appear to exist without -Verb (a new console is launched as you'd expect). \n\n#1691 is there to support `-Verb`\n",
      "created_at": "2016-11-04T20:56:37Z",
      "updated_at": "2016-11-04T20:56:37Z"
    }
  ],
  "created_at": "2016-09-22T19:16:28Z",
  "labels": [
    "Resolution-Duplicate",
    "WG-Cmdlets"
  ],
  "number": 2341,
  "state": "closed",
  "title": "start-process doesn't work properly in functions invoked from REPL",
  "updated_at": "2016-12-08T00:57:03Z"
}