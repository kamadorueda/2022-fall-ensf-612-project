{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6270",
  "author": "jherby2k",
  "body": "Steps to reproduce\r\n------------------\r\n\r\n1. Download https://github.com/jherby2k/AudioWorks.git\r\n2. Update AudioWorks.Commands.Tests project's nuget package from Microsoft.PowerShell.SDK 6.0.1 to 6.0.1.1\r\n3. Run tests\r\n\r\nExpected behavior\r\n-----------------\r\n\r\nTests pass\r\n\r\nActual behavior\r\n---------------\r\n\r\nPowerShell tests all fail with:\r\n\r\n> One or more errors occurred. (Could not load file or assembly 'System.Management.Automation, Version=6.0.1.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'. The system cannot find the file specified.\r\n\r\nEnvironment data\r\n----------------\r\n\r\nPSVersion                      6.0.1\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.1\r\nOS                             Microsoft Windows 10.0.16299\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n```\r\n",
  "closed_at": "2018-03-20T15:49:47Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "/cc @adityapatwardhan Could you please comment the Issue?",
      "created_at": "2018-02-28T18:45:30Z",
      "updated_at": "2018-02-28T18:45:30Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@jherby2k Did you upgrade versions for `Microsoft.PowerShell.Commands.Diagnostics` and `Microsoft.WSMan.Management` to `6.0.1.1` as well?\r\n\r\nYou can remove those from 6.0.1.1+ since the `Microsoft.PowerShell.SDK` includes them as a dependency.",
      "created_at": "2018-02-28T20:08:23Z",
      "updated_at": "2018-02-28T20:08:23Z"
    },
    {
      "author": "jherby2k",
      "author_association": "NONE",
      "body": "I did upgrade all 3, and then noticed the dependencies were added (thanks!), so removed them. Regardless, same issue.\n\nI made sure my build directories were clean, etc.\n\n",
      "created_at": "2018-02-28T20:14:29Z",
      "updated_at": "2018-02-28T20:14:29Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "@jherby2k After running the tests on upgrading to `6.0.1.1` I am seeing these errors:\r\n```\r\n System.AggregateException : One or more errors occurred. (Object reference not set to an instance of an object.) (The following constructor parameters did not have matching fixture data: ModuleFixture moduleFixture)\r\n      ---- System.NullReferenceException : Object reference not set to an instance of an object.\r\n      ---- The following constructor parameters did not have matching fixture data: ModuleFixture moduleFixture\r\n      Stack Trace:\r\n\r\n        ----- Inner Stack Trace #1 (System.NullReferenceException) -----\r\n        D:\\OpenPowershell\\aditya\\AudioWorks\\AudioWorks\\AudioWorks.Commands.Tests\\ModuleFixture.cs(19,0): at AudioWorks.Commands.Tests.ModuleFixture..ctor()\r\n        ----- Inner Stack Trace #2 (Xunit.Sdk.TestClassException) -----\r\n```\r\n\r\nIs this what you see?",
      "created_at": "2018-02-28T23:05:46Z",
      "updated_at": "2018-02-28T23:05:46Z"
    },
    {
      "author": "jherby2k",
      "author_association": "NONE",
      "body": "Mmm, sort of. Are you using dotnet xunit? There is a known issue (i'm not sure how to fix) when running tests that way, regardless of PS SDK version. Using dotnet test, or Visual Studio, I get the following:\r\n\r\nSystem.AggregateException : One or more errors occurred. (Could not load file or assembly 'System.Management.Automation, Version=6.0.1.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'. The system cannot find the file specified.) (The following constructor parameters did not have matching fixture data: ModuleFixture moduleFixture)\r\n---- System.IO.FileNotFoundException : Could not load file or assembly 'System.Management.Automation, Version=6.0.1.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'. The system cannot find the file specified.\r\n---- The following constructor parameters did not have matching fixture data: ModuleFixture moduleFixture\r\n\r\nI use an xunit test fixture \u201cModulefixture\u201d to create the PSCore runspace and load my module, and the constructor is failing because it can\u2019t find System.Management.Automation version 6.0.1.0:\r\n\r\n            var state = InitialSessionState.CreateDefault();\r\n            state.ImportPSModule(new[]\r\n            {\r\n                Path.Combine(new DirectoryInfo(Directory.GetCurrentDirectory()).FullName, $\"{_moduleProject}.dll\")\r\n            });\r\n            Runspace = RunspaceFactory.CreateRunspace(state);\r\n            Runspace.Open();",
      "created_at": "2018-02-28T23:47:35Z",
      "updated_at": "2018-02-28T23:51:33Z"
    },
    {
      "author": "twitchax",
      "author_association": "NONE",
      "body": "I am having the same issue.\r\n\r\nI think this is due to the fact that `Microsoft.PowerShell.SDK` references `System.Management.Automation` at 6.0.1.1, but the _actual_ version of `System.Management.Automation` in the NuGet package appears to be 6.0.1.0.",
      "created_at": "2018-03-10T08:47:05Z",
      "updated_at": "2018-03-10T08:47:05Z"
    },
    {
      "author": "jherby2k",
      "author_association": "NONE",
      "body": "Indeed, if i look in the nuget package 6.0.1.1, all the System.Management.Automation.dll libs are version 6.0.1.0. Surprised this got past QC.",
      "created_at": "2018-03-10T20:58:40Z",
      "updated_at": "2018-03-10T20:58:40Z"
    },
    {
      "author": "twitchax",
      "author_association": "NONE",
      "body": "@jherby2k, despite the version issue, you might want to try looking around your dependencies and targets files.  I found a rogue `<PackageReference Include=\"System.Management.Automation\" Version=\"6.0.0\" />` that caused problems.  Fixed that, and everything was good.",
      "created_at": "2018-03-11T02:08:08Z",
      "updated_at": "2018-03-11T02:08:08Z"
    },
    {
      "author": "jherby2k",
      "author_association": "NONE",
      "body": "Found the problem - the project referencing Microsoft.PowerShell.SDK is a test project, which is testing a binary module that uses the PowerShell Standard 5.1 (preview) library. That includes its own stub version of System.Management.Automation. Not sure why this is only a problem as of 6.0.1.1, but whatever. Since its not really a compile-time dependency (i'm importing the module into the runspace), I changed it to an after-build xcopy, and now everthing is fine. In case anyone else encounters this.",
      "created_at": "2018-03-20T15:49:47Z",
      "updated_at": "2018-03-20T15:49:47Z"
    }
  ],
  "created_at": "2018-02-28T15:48:08Z",
  "number": 6270,
  "state": "closed",
  "title": "Upgraded to Microsoft.PowerShell.SDK 6.0.1.1, now can't find System.Management.Automation, Version=6.0.1.0,",
  "updated_at": "2018-03-21T06:05:27Z"
}