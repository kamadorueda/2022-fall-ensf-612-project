{
  "_url": "https://github.com/PowerShell/PowerShell/issues/17641",
  "author": "rashil2000",
  "body": "### Summary of the new feature / enhancement\r\n\r\nMany modern shells like elvish, tcsh, fish, zsh, xonsh, cmd (through Clink) have a feature to display text/information on the far right side of the input line (which disappears if you type a long command). This big and useful feature is missing from PowerShell.\r\n\r\nHere's an example gif of the Cmd shell (with Clink) showing right prompt printed at the far end of input line:\r\n\r\n![cursor2](https://user-images.githubusercontent.com/46838874/177708539-2ff725fa-e722-4ad6-8408-788b38fd852f.gif)\r\n\r\nThe right prompt reappears if you erase the long command.\r\n\r\n\r\n---\r\nLink to documentation of various shells:\r\n\r\n- **elvish**: https://elv.sh/ref/edit.html#prompts\r\n- **xonsh**: https://xon.sh/envvars.html#right-prompt\r\n- **fish**: https://fishshell.com/docs/current/cmds/fish_right_prompt.html\r\n- **cmd**: https://chrisant996.github.io/clink/clink.html#right-side-prompt\r\n- **zsh**: https://zsh.sourceforge.io/Doc/Release/Parameters.html#:~:text=This%20prompt%20is%20displayed%20on%20the%20right%2Dhand%20side%20of%20the%20screen%20when%20the%20primary%20prompt%20is%20being%20displayed%20on%20the%20left.\r\n- **tcsh**: https://linux.die.net/man/1/tcsh#:~:text=The%20string%20to%20print%20on%20the%20right%2Dhand%20side%20of%20the%20screen%20(after%20the%20command%20input)%20when%20the%20prompt%20is%20being%20displayed%20on%20the%20left.\r\n\r\n### Proposed technical implementation details (optional)\r\n\r\nThis is my current rudimentary workaround:\r\n\r\n```powershell\r\n$curr_prompt_func = $Function:prompt\r\n\r\nfunction global:rprompt {\r\n  param($text)\r\n  $oc = $Host.UI.RawUI.CursorPosition\r\n  $Host.UI.RawUI.CursorPosition = New-Object System.Management.Automation.Host.Coordinates ($Host.UI.RawUI.WindowSize.Width - $text.Length),$Host.UI.RawUI.CursorPosition.Y\r\n  $Host.UI.Write($text)\r\n  $Host.UI.RawUI.CursorPosition = $oc\r\n}\r\n\r\nfunction global:prompt {\r\n    rprompt (Get-Date -Format \"HH:mm:ss\")\r\n    return $curr_prompt_func.Invoke()\r\n}\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "237dmitry",
      "author_association": "NONE",
      "body": "> This big and useful feature is missing from PowerShell.\r\n\r\nYou can write your own prompt function.\r\n\r\n![ss-20220707130122](https://user-images.githubusercontent.com/78153320/177748351-a626985d-9cd8-4bd4-87ca-fb2ee231c0e1.png)\r\n",
      "created_at": "2022-07-07T10:06:01Z",
      "updated_at": "2022-07-07T10:06:01Z"
    },
    {
      "author": "rashil2000",
      "author_association": "NONE",
      "body": "> > This big and useful feature is missing from PowerShell.\r\n> \r\n> You can write your own prompt function.\r\n> \r\n> ![ss-20220707130122](https://user-images.githubusercontent.com/78153320/177748351-a626985d-9cd8-4bd4-87ca-fb2ee231c0e1.png)\r\n\r\nNo, I'm talking about right-hand-side (w.r.t. the input line) prompt. Your example shows left side prompt.\r\n\r\n\r\nThe current workaround I use quite hacky and is not built into PowerShell (unlike other shells).",
      "created_at": "2022-07-07T10:09:40Z",
      "updated_at": "2022-07-07T10:09:40Z"
    },
    {
      "author": "237dmitry",
      "author_association": "NONE",
      "body": "> No, I'm talking about right-hand-side (w.r.t. the input line) prompt.\r\n\r\nSorry, I did not think about this aspect",
      "created_at": "2022-07-07T10:12:51Z",
      "updated_at": "2022-07-07T10:12:51Z"
    },
    {
      "author": "jhoneill",
      "author_association": "NONE",
      "body": "As someone who tries to reduce the amount of stuff which is competing for my eye, this request baffles me - more text jumping about in more places - no thanks. But, hey, different work styles,   -  as a quick way you can do this\r\n```\r\nfunction prompt {\"PS>{0,$($Host.UI.RawUI.WindowSize.Width - 4 )}     `e[1A\"-f $executionContext.SessionState.Path.CurrentLocation} \r\n````\r\nThis makes the prompt text <host width -1> characters wide, and adds  enough spaces at then to put the cursor after PS> and moves up one row. \r\n\r\nThe text on the right gets overwritten but it isn't cleanly tidied up - that would need something added to psreadline. \r\n \r\n",
      "created_at": "2022-07-07T12:47:02Z",
      "updated_at": "2022-07-07T12:47:02Z"
    },
    {
      "author": "rashil2000",
      "author_association": "NONE",
      "body": "> This makes the prompt text <host width -1> characters wide, and adds enough spaces at then to put the cursor after PS> and moves up one row.\r\n> The text on the right gets overwritten but it isn't cleanly tidied up - that would need something added to psreadline.\r\n\r\nThanks for the workaround! But I do feel something more robust for this should be in built.",
      "created_at": "2022-07-07T14:32:15Z",
      "updated_at": "2022-07-07T14:32:47Z"
    },
    {
      "author": "237dmitry",
      "author_association": "NONE",
      "body": ">> I'm talking about right-hand-side (w.r.t. the input line) prompt. Your example shows left side prompt.\r\n\r\n> Thanks for the workaround!\r\n\r\nIf you want the input text not to overwrite the information on the right side of prompt line you can do blank prompt (then you press enter without command).\r\n\r\n![ss-20220707180650](https://user-images.githubusercontent.com/78153320/177807480-32e62eee-2c04-4f25-94f5-b2c1dfad8cd0.png)\r\n\r\n",
      "created_at": "2022-07-07T15:08:52Z",
      "updated_at": "2022-07-07T15:08:52Z"
    },
    {
      "author": "kasini3000",
      "author_association": "NONE",
      "body": ">function prompt {\"PS>{0,$($Hos\r\n\r\nvvvvvvvvvvery good, good for my command line mahjong game. it\u2018s not start devel yet.",
      "created_at": "2022-07-08T02:14:17Z",
      "updated_at": "2022-07-08T02:14:17Z"
    }
  ],
  "created_at": "2022-07-07T08:28:08Z",
  "number": 17641,
  "state": "open",
  "title": "Support for `$global:rprompt` function",
  "updated_at": "2022-07-08T02:14:17Z"
}