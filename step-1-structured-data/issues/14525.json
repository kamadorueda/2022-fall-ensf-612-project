{
  "_url": "https://github.com/PowerShell/PowerShell/issues/14525",
  "author": "MartinGC94",
  "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\n<!-- Summarize your PR between here and the checklist. -->\r\nFixes: https://github.com/PowerShell/PowerShell/issues/12771\r\nFixes issue where tab completion for attribute parameters only works for the first parameter due to the comma(s) required for the following parameters.\r\n## PR Context\r\nIf you are using an attribute like [Parameter()] you need to remember the full list of parameters because tab completion/intellisense doesn't work unless you are writing the first parameter.\r\n<!-- Provide a little reasoning as to why this Pull Request helps and why you have opened it. -->\r\n\r\n## PR Checklist\r\n\r\n- [X] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [X] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [X] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [X] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [X] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [X] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
  "closed_at": "2021-01-14T04:30:17Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I'd expect follow works but it doesn't:\r\n```powershell\r\nfunction bar { [parameter(Position,<Tab>\r\n```",
      "created_at": "2021-01-01T07:36:54Z",
      "updated_at": "2021-01-01T07:36:54Z"
    },
    {
      "author": "MartinGC94",
      "author_association": "CONTRIBUTOR",
      "body": "Agreed, that would be nice but I don't know how I would implement that.  \r\nIncomplete input like `[ValidateSet(` doesn't get any ASTs of type AttributeAst and the completionContext doesn't contain the tokens that would otherwise let me know about an attribute.\r\n\r\nDo I update completionContext to also include the tokens? Do I parse the input again to get the tokens? Use regex to determine if the text looks like an attribute?",
      "created_at": "2021-01-01T15:46:37Z",
      "updated_at": "2021-01-01T15:46:37Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> Agreed, that would be nice but I don't know how I would implement that.\r\n\r\nYes, it would be nice. I don't know if even that is possible (all we have is an ErrorAst). It would be a sad limitation. If so this could be addressed by prediction feature (not in the PR).\r\nPerhaps @daxian-dbw and @rjmholt could advice something.\r\nPerhaps it is useful for PES.",
      "created_at": "2021-01-01T16:59:56Z",
      "updated_at": "2021-01-06T07:33:34Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
      "created_at": "2021-01-13T14:00:09Z",
      "updated_at": "2021-01-13T14:00:09Z"
    },
    {
      "author": "rjmholt",
      "author_association": "COLLABORATOR",
      "body": "> Agreed, that would be nice but I don't know how I would implement that.\r\nIncomplete input like [ValidateSet( doesn't get any ASTs of type AttributeAst and the completionContext doesn't contain the tokens that would otherwise let me know about an attribute.\r\n> \r\n> Do I update completionContext to also include the tokens? Do I parse the input again to get the tokens? Use regex to determine if the text looks like an attribute?\r\n\r\nDefinitely better in a separate PR.\r\n\r\nI don't have a total picture of how to achieve this, but:\r\n\r\n- Regex should not be used -- the tokeniser is built for this purpose\r\n- The completer should probably have as much information as exists in order to generate good completions. This includes tokens.\r\n- You may encounter complexity with composite tokens, which are ones that in my opinion the tokeniser doesn't handle very well. But you should still have enough information in the token string to do the right thing given enough determination.\r\n\r\nI believe the current token is available here:\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/c909541b7797b60462188a4abe9592a8763c1fbb/src/System.Management.Automation/engine/CommandCompletion/CompletionAnalysis.cs#L22-L24\r\n\r\nand the full token array is available here:\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/c909541b7797b60462188a4abe9592a8763c1fbb/src/System.Management.Automation/engine/CommandCompletion/CompletionAnalysis.cs#L62\r\n\r\nIt should be possible to search backward through the token array if need be.\r\n\r\nIf the token up to that point isn't available, I don't think there's a way of piercing through the tokeniser abstraction to see the raw input currently, but the right way to do that would be to expose it as a token anyway.",
      "created_at": "2021-01-13T19:26:14Z",
      "updated_at": "2021-01-13T19:26:14Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@MartinGC94 Thanks for your contribution!",
      "created_at": "2021-01-14T11:17:09Z",
      "updated_at": "2021-01-14T11:17:09Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": ":tada:`v7.2.0-preview.3` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.2.0-preview.3)\n",
      "created_at": "2021-02-12T02:06:58Z",
      "updated_at": "2021-02-12T02:06:58Z"
    }
  ],
  "created_at": "2020-12-31T20:39:05Z",
  "number": 14525,
  "state": "closed",
  "title": "Improve completion of parameters for attributes",
  "updated_at": "2022-06-05T08:27:03Z"
}