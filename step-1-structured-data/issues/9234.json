{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9234",
  "author": "HumanEquivalentUnit",
  "body": "`Get-ComputerInfo` returns 183 properties in 7 seconds.\r\n\r\n`Get-ComputerInfo -Property TimeZone` returns 1 property in .. 7 seconds.\r\n\r\n`Get-TimeZone` runs in 0.0015 seconds. and returns more detailed information.\r\n\r\nCan it run faster, if asked for less data?\r\n\r\nEnvironment:\r\n\r\n```powershell\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.1.0\r\nPSEdition                      Core\r\nGitCommitId                    6.1.0\r\nOS                             Microsoft Windows 10.0.14393 \r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "tlsalex",
      "author_association": "NONE",
      "body": "Agree with you , I also want to know the answer , maybe we need to use WMI ",
      "created_at": "2019-03-27T11:20:56Z",
      "updated_at": "2019-03-27T11:20:56Z"
    },
    {
      "author": "RichardSiddaway",
      "author_association": "NONE",
      "body": "Looking at the data returned I think its already using WMI.  I suspect the speed issue is because its gathering all the data and then filtering down to the properties you asked for",
      "created_at": "2019-03-27T11:54:36Z",
      "updated_at": "2019-03-27T11:54:36Z"
    },
    {
      "author": "jeffbi",
      "author_association": "CONTRIBUTOR",
      "body": "@RichardSiddaway It is using WMI (well, CIM if I recall correctly). At the time the cmdlet was originally written, the mandate was to collect and display _all_ the data. The ability to report a single property was added kind of at the last minute and the decision at the time was to continue collecting all, then select to one to report.",
      "created_at": "2019-03-27T20:34:03Z",
      "updated_at": "2019-03-27T20:34:03Z"
    },
    {
      "author": "RichardSiddaway",
      "author_association": "NONE",
      "body": "WMI was Microsoft's first CIM implementation.  CIM (in PowerShell terms) was the methodology introduced in PowerShell v3 including CIM sessions\r\nThese days CIM and WMI are interchangeable unless you're talking about the WMI or CIM cmdlets ",
      "created_at": "2019-03-28T11:05:19Z",
      "updated_at": "2019-03-28T11:05:19Z"
    },
    {
      "author": "powercode",
      "author_association": "COLLABORATOR",
      "body": "I'm not sure why the designers of the cmdlet added property filtering capabilities. That is already available in Select-Object, so it seems like something that shouldn't have been there in there first place. If you read the source, it just gets everything, and if you only want a subset of the properties, it creates a psobject and populates it with those. \r\n\r\nFeature creep in my book.",
      "created_at": "2019-04-01T13:27:05Z",
      "updated_at": "2019-04-01T13:27:05Z"
    }
  ],
  "created_at": "2019-03-27T09:16:30Z",
  "number": 9234,
  "state": "open",
  "title": "Get-ComputerInfo - takes as long to get 1 property as 183 properties",
  "updated_at": "2019-04-01T13:27:05Z"
}