{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3810",
  "author": "luctalpe",
  "body": "Steps to reproduce\r\n------------------\r\n```console\r\nPS C:\\Users\\luct\\Downloads\\PowerShell-6.0.0-beta.1-win10-win2016-x64> cd \\temp\r\nPS C:\\temp> .\\1.ps1\r\nDEBUG: Is it a problem ?\r\n\r\nConfirm\r\nContinue with this operation?\r\n[Y] Yes  [A] Yes to All  [H] Halt Command  [S] Suspend  [?] Help (default is \"Y\"): S\r\nPS C:\\temp>> type 1.ps1\r\n[CmdletBinding()]\r\nparam()\r\n\r\n$TestArray = @(1..10)\r\nwrite-debug -Debug \"Is it a problem ?\"\r\n\r\n\r\nPS C:\\temp>> $testarray\r\n1\r\n2\r\n3\r\n4\r\n5\r\n6\r\n7\r\n8\r\n9\r\n10\r\n```\r\n\r\nEven if we are able to display the $testarray variable but entering the complete name, tab completion doesn't work. The problem is only visible with powershell.exe and not for powershell_ISE.exe\r\n\r\nExpected behavior\r\n-----------------\r\n\r\nBe able to autocomplete testarray variable for inner scope (0,...) in nested mode \r\n\r\nActual behavior\r\n---------------\r\nAutocompletion \r\n\r\n\r\nEnvironment data\r\n----------------\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```powershell\r\n> $PSVersionTable\r\n\r\nS C:\\temp>> $psversiontable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.0-beta\r\nPSEdition                      Core\r\nBuildVersion                   3.0.0.0\r\nCLRVersion\r\nGitCommitId                    v6.0.0-beta.1\r\nOS                             Microsoft Windows 10.0.14393\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "luctalpe",
      "author_association": "NONE",
      "body": "Actual behavior:\r\nAutocompletion doesn't work for $testarray variable",
      "created_at": "2017-05-18T12:01:15Z",
      "updated_at": "2017-05-18T12:01:15Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "Hi @luctalpe,\r\n\r\nLooking at the sample you provided, seems to me you are trying to access the array variable after the script has executed.  If this is the case, then $testarray won't be available any more.\r\n\r\nYou may need to use $global:testarray in order for the variable to be accessible after the script has ended. Only then the autocompletion should work.\r\n\r\nI'm hoping this makes sense. \r\n\r\n![posh_array_2017-05-18_8-54-19](https://cloud.githubusercontent.com/assets/19892435/26203041/ae945e06-3ba7-11e7-8f9d-fe2f460ee210.jpg)\r\n\r\n\r\n\r\n\r\n\r\n",
      "created_at": "2017-05-18T12:55:55Z",
      "updated_at": "2017-05-18T12:55:55Z"
    },
    {
      "author": "luctalpe",
      "author_association": "NONE",
      "body": "Hi Maximo,\r\n\r\nThanks but there is a misunderstanding . The issue is during script execution, not after script execution.\r\n\r\nWhen we are in the nested mode ( see >> prompt), you can display the variable typing $testarray, but if you try to expand it at this point (and not after script  has executed), tab completion doesn't work.\r\n\r\n",
      "created_at": "2017-05-18T17:01:45Z",
      "updated_at": "2017-05-18T17:01:45Z"
    },
    {
      "author": "MaximoTrinidad",
      "author_association": "NONE",
      "body": "@luctalpe,\r\n\r\nMy apologies! Now I understand what you're talking about. I haven't had the need for it but I gave it a test. \r\nTab completion won't work!\r\n\r\nBy the way, the behavior is in both Windows PowerShell (Ver. 5.1.16193.1001) and PowerShell Core (Ver. 6.0.0-beta.1).  I'm on Windows Insider Build 16193.\r\n\r\nI may suggest to also post this incident at Windows PowerShell UserVoice site at: https://windowsserver.uservoice.com/forums/301869-powershell/category/148044-powershell-engine\r\n\r\n![nestedtab_2017-05-18_13-45-48](https://cloud.githubusercontent.com/assets/19892435/26216084/cff5d8c6-3bd0-11e7-8996-fda2bf1b1082.jpg)\r\n",
      "created_at": "2017-05-18T17:51:39Z",
      "updated_at": "2017-05-18T17:52:13Z"
    },
    {
      "author": "davidBar-On",
      "author_association": "CONTRIBUTOR",
      "body": "I am trying to resolve this issue, and I believe I understand what is causing the problem but I would **appreciate some direction on were to look** to resolve it.\r\n\r\nWhat I found so far is that normally with command prompt, the `global` and `local` (and `script`) **variables scopes** are the same.  However, when a script is run, a separate `local` variables scope is used.  Therefore, in the suspend mode of `Write-Debug`, the command prompt is using **separate** `local` and `global` scopes.\r\n\r\nIt seems that when `ReadLine` is called, a **new** `local` variable scope and the `global` scope are passed to it.  Therefore, `ReadLine` does **not** have access to the local variables defined by the script.\r\n\r\nSince the **tab-completion** is done **from `ReadLine`**, it also does **not** have access to the script's `local` variables.\r\n\r\nMy issue is that I am not able to find where the `local` variables scope for `ReadLine` is defined, assuming that this is where a change can be done to resolve this issue.  **Any help in identifying where this is done will be appreciated**.",
      "created_at": "2021-05-26T15:58:03Z",
      "updated_at": "2021-05-26T15:58:03Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> Since the **tab-completion** is done **from `ReadLine`**\r\n\r\nThere are two code paths - PowerShell implementation and PSReadline implementation - see using TryInvokeUserDefinedReadLine method.\r\n",
      "created_at": "2021-05-26T18:28:45Z",
      "updated_at": "2021-05-26T18:28:45Z"
    },
    {
      "author": "davidBar-On",
      "author_association": "CONTRIBUTOR",
      "body": "> There are two code paths - PowerShell implementation and PSReadline implementation - see using TryInvokeUserDefinedReadLine method.\r\n\r\nThanks for the help.  I believe I found the root cause of the issue and submitted PR #15529 with a suggested fix.",
      "created_at": "2021-06-07T10:12:09Z",
      "updated_at": "2021-06-07T10:12:09Z"
    }
  ],
  "created_at": "2017-05-18T11:59:19Z",
  "number": 3810,
  "state": "open",
  "title": "TAB Completion in nested mode doesn't work for some variables",
  "updated_at": "2021-08-05T18:43:06Z"
}