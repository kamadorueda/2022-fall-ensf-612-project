{
  "_url": "https://github.com/PowerShell/PowerShell/issues/8382",
  "author": "IISResetMe",
  "body": "## PR Summary\r\n\r\nTypeBuilder.GetInterfaces(), as introduced in #8303 returns only the interfaces that was explicitly passed to its constructor, so the current implementation doesn't work for inherited interfaces:\r\n\r\n```powershell\r\n  Add-Type 'public interface ITestBase { string Base {get;} }\r\n            public interface ITest : ITestBase { string Test {get;} }'\r\n  class MyClass : ITest\r\n  {\r\n    [string]$Test\r\n    [string]$Base\r\n  }\r\n```\r\n\r\nIn this example, ShouldImplementProperty() won't resolve ITestBase.Base and type definition fails because `get_Base()` isn't `virtual`.  \r\nDuring compilation the interface hierarchy is flattened, so we only need to resolve one level of ancestral interfaces.\r\n\r\n## PR Checklist\r\n\r\n- [X] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [X] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [X] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` to the beginning of the title and remove the prefix when the PR is ready.\r\n- **User-facing changes**\r\n    - [X] Not Applicable\r\n    - **OR**\r\n    - [ ] User-facing [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed - Issue link:\r\n- **Testing - New and feature**\r\n    - [ ] Not Applicable or can only be tested interactively\r\n    - **OR**\r\n    - [X] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n        - [ ] [Add `[feature]` if the change is significant or affects feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\r\n",
  "closed_at": "2019-02-19T23:02:35Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@IISResetMe Please add a commit with `[Feature]` in title to run feature tests.",
      "created_at": "2018-12-03T04:16:53Z",
      "updated_at": "2018-12-03T04:16:53Z"
    },
    {
      "author": "IISResetMe",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov I think we'll need to push an empty commit (or close-reopen pr) to trigger the tests again",
      "created_at": "2018-12-03T16:42:45Z",
      "updated_at": "2018-12-03T16:42:45Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@IISResetMe push an empty commit that contains the tag `[Feature]` in the commit message itself, yep! \ud83d\ude04 ",
      "created_at": "2018-12-03T16:47:13Z",
      "updated_at": "2018-12-03T16:47:13Z"
    },
    {
      "author": "stale[bot]",
      "author_association": "NONE",
      "body": "This PR has been automatically marked as stale because it has not had activity in the last 30 days. It will be closed if no further activity occurs within 10 days.\nThank you for your contributions.\nCommunity members are welcome to grab these works.\n",
      "created_at": "2019-01-06T06:22:02Z",
      "updated_at": "2019-01-06T06:22:02Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@IISResetMe @daxian-dbw Could you please continue? ",
      "created_at": "2019-01-06T12:09:41Z",
      "updated_at": "2019-01-06T12:09:41Z"
    },
    {
      "author": "IISResetMe",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov I believe I've addressed all of @daxian-dbw's remarks, the only thing left was to run the feature tests.\r\n\r\nAm I expected to remove the `Invoke-Expression` statement from the test? \ud83d\ude15 ",
      "created_at": "2019-01-12T22:30:49Z",
      "updated_at": "2019-01-12T22:30:49Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@IISResetMe I think using `Invoke-Expression` haven't a security risk. The Codacy report is for custom scripts not tests. We have to align the settings.\r\n\r\n@daxian-dbw Seems the PR is ready to merge. Please update your code review.",
      "created_at": "2019-01-13T12:00:13Z",
      "updated_at": "2019-01-13T12:02:41Z"
    },
    {
      "author": "IISResetMe",
      "author_association": "COLLABORATOR",
      "body": "> [...] The Codacy report is for custom scripts not tests. We have to align the settings.\r\n\r\nYeah, looks like we might want to include it only if `.ps1` files that don't match `*.tests?.ps1$` are changed",
      "created_at": "2019-01-13T15:02:48Z",
      "updated_at": "2019-01-13T15:02:48Z"
    },
    {
      "author": "stale[bot]",
      "author_association": "NONE",
      "body": "This PR has been automatically marked as stale because it has not had activity in the last 30 days. It will be closed if no further activity occurs within 10 days.\nThank you for your contributions.\nCommunity members are welcome to grab these works.\n",
      "created_at": "2019-02-12T15:10:40Z",
      "updated_at": "2019-02-12T15:10:40Z"
    },
    {
      "author": "IISResetMe",
      "author_association": "COLLABORATOR",
      "body": "@daxian-dbw had a chance to update this? :) ",
      "created_at": "2019-02-15T20:36:35Z",
      "updated_at": "2019-02-15T20:36:35Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "As for the Codacy report about `Invoke-Expression`, the `Invoke-Expression` command is needed as the interfaces are defined at runtime.",
      "created_at": "2019-02-19T22:55:47Z",
      "updated_at": "2019-02-19T22:55:47Z"
    }
  ],
  "created_at": "2018-12-02T23:17:56Z",
  "number": 8382,
  "state": "closed",
  "title": "Update ShouldImplementProperty() to flatten interface hierarchy",
  "updated_at": "2019-02-20T04:26:46Z"
}