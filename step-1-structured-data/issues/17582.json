{
  "_url": "https://github.com/PowerShell/PowerShell/issues/17582",
  "author": "ajeetdsouza",
  "body": "### Summary of the new feature / enhancement\r\n\r\nBash, fish, and zsh all have a completions directory on Linux, where applications can add their completion files. Does PowerShell have anything similar? If not, consider this a feature request.\r\n\r\nBash: `/usr/share/bash-completion/completions/`\r\nFish: `/usr/share/fish/completions/`\r\nZsh: `/usr/share/zsh/vendor-completions/`\r\n\r\n### Proposed technical implementation details (optional)\r\n\r\n_No response_",
  "closed_at": "2022-06-27T12:01:14Z",
  "comments": [
    {
      "author": "kasini3000",
      "author_association": "NONE",
      "body": "For powershell modules, cmdlets, and ps1 scripts, functions: no and no special completion files are required. This is the function of the psreadline module. And this feature is cross-platform.\r\n\r\nOther binary command line programs, because they are not developed according to the powershell specification. Completion files are required to guide the psreadline module for completion.\r\n\r\nIn my opinion, this should be a Q&A issue, not an enhancement.",
      "created_at": "2022-06-25T13:44:16Z",
      "updated_at": "2022-06-25T13:44:16Z"
    },
    {
      "author": "ajeetdsouza",
      "author_association": "NONE",
      "body": "@kasini3000 is there a directory where one can put completion files so that they are loaded by default, like the other shells I mentioned?",
      "created_at": "2022-06-25T15:04:43Z",
      "updated_at": "2022-06-25T15:04:43Z"
    },
    {
      "author": "ThomasNieto",
      "author_association": "CONTRIBUTOR",
      "body": "To add PowerShell argument completers `Register-ArgumentCompleter` [cmdlet](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/register-argumentcompleter?view=powershell-7.2) is used and is usually shipped via PowerShell modules and imported in the session with a [profile](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_profiles?view=powershell-7.2) script.\r\n\r\nFor Unix completers the PowerShell team created the `Microsoft.PowerShell.UnixTabCompletion` [module](https://github.com/PowerShell/UnixCompleters) that uses native completers from zsh and bash.",
      "created_at": "2022-06-25T16:02:29Z",
      "updated_at": "2022-06-25T16:06:05Z"
    },
    {
      "author": "237dmitry",
      "author_association": "NONE",
      "body": "Load scripts from your `$profile` (analog of `~/.bashrc`)\r\n\r\n```powershell\r\n > (gi $profile).ToString()\r\n/home/user/.config/powershell/Microsoft.PowerShell_profile.ps1\r\n```\r\nModules:\r\n```powershell\r\n > $env:PSModulePath -split ':'      \r\n/home/user/.local/share/powershell/Modules\r\n/usr/local/share/powershell/Modules\r\n/opt/microsoft/powershell/7/Modules \r\n```\r\n",
      "created_at": "2022-06-25T16:04:08Z",
      "updated_at": "2022-06-25T16:04:08Z"
    },
    {
      "author": "kasini3000",
      "author_association": "NONE",
      "body": "Why not talk about your usage scenarios and ideas?\r\n\r\nPowerShell scripts, and modules, don't need autocomplete files, and don't need such directories.\r\nIs the advantage of powershell over other shells. It is also the reason why businesses and users use powershell.\r\n\r\n----\r\n\r\nhttps://gitee.com/chuanjiao10/kasini3000/blob/master/k_run_ip.ps1\r\n\r\nYou can think of autocomplete files for ps1 scripts, is in ps1 files, \r\ndefined by the parameter keyword inside param().\r\n\r\n\r\n",
      "created_at": "2022-06-25T16:12:36Z",
      "updated_at": "2022-06-25T16:25:35Z"
    },
    {
      "author": "ajeetdsouza",
      "author_association": "NONE",
      "body": "The reason I'm asking is -- I have PowerShell installed on Linux. I use a bunch of command line tools. Some of these binaries have shell completions available in their GitHub repositories. For bash, fish, or zsh, I can simply move these completion files to the required directories and it just works. However, I don't think PowerShell supports something like this, which is why I've raised a feature request.",
      "created_at": "2022-06-25T20:48:42Z",
      "updated_at": "2022-06-25T20:48:42Z"
    },
    {
      "author": "237dmitry",
      "author_association": "NONE",
      "body": "For these purposes, I use auto-completion of the command history. As a rule, frequently used commands are found very quickly, even if they are long (multiline too).\r\n\r\n```powershell\r\n\r\n  >  Get-PSReadLineKeyHandler | ? Key -match '(Up|Down)Arrow' | fl\r\n\r\nKey         : UpArrow\r\nFunction    : HistorySearchBackward\r\nDescription : Search for the previous item in the history that starts with the current input - like PreviousHistory if the input is empty\r\nGroup       : History\r\n\r\nKey         : DownArrow\r\nFunction    : HistorySearchForward\r\nDescription : Search for the next item in the history that starts with the current input - like NextHistory if the input is empty\r\nGroup       : History\r\n```\r\n\r\nIf command in the PSReadline history then `UpArrow` and `DownArrow` will search matching by input of text.\r\n\r\n```powershell\r\n  >  help Set-PSReadLineKeyHandler\r\n```\r\nAdd to $profile:\r\n```\r\nSet-PSReadlineKeyHandler -Key UpArrow -Function HistorySearchBackward\r\nSet-PSReadlineKeyHandler -Key DownArrow -Function HistorySearchForward\r\n```\r\nThe PSReadline history file is `~/.local/share/powershell/PSReadline/ConsoleHost_history.txt`",
      "created_at": "2022-06-25T21:49:43Z",
      "updated_at": "2022-06-25T21:58:18Z"
    },
    {
      "author": "jhoneill",
      "author_association": "NONE",
      "body": "> The reason I'm asking is -- I have PowerShell installed on Linux. I use a bunch of command line tools. Some of these binaries have shell completions available in their GitHub repositories. For bash, fish, or zsh, I can simply move these completion files to the required directories and it just works. However, I don't think PowerShell supports something like this, which is why I've raised a feature request.\r\n\r\n\r\nYou have two routes. \r\n(1) PowerShell native completers \r\n(2) As Thomas said above the PowerShell team created the Microsoft.PowerShell.UnixTabCompletion [module](https://github.com/PowerShell/UnixCompleters) that uses native completers from zsh and bash. So configure your binaries to complete in those, load the module, away you go.\r\n",
      "created_at": "2022-06-26T10:55:40Z",
      "updated_at": "2022-06-26T10:55:40Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2022-06-27T12:01:13Z",
      "updated_at": "2022-06-27T12:01:13Z"
    },
    {
      "author": "kasini3000",
      "author_association": "NONE",
      "body": "(3) use my \u300apoweralias\u300b \uff0cit is  a TUI interface alias ps1 script \uff0c\r\nfor win\uff0clinux \uff0cps51\uff0cpsv7\r\nhttps://gitee.com/chuanjiao10/powershell/tree/master/win-linux%E9%80%9A%E7%94%A8/poweralias\r\n\n\n<blockquote><img src=\"no_portrait.png#chuanjiao10-chuanjiao10\" width=\"48\" align=\"right\"><div>Gitee</div><div><strong><a href=\"http://gitee.com/chuanjiao10/powershell/tree/master/win-linux%E9%80%9A%E7%94%A8/poweralias\">chuanjiao10/powershell\u811a\u672c\u5927\u5168</a></strong></div><div>powershell\u811a\u672c\u5927\u5168</div></blockquote>",
      "created_at": "2022-06-28T07:23:35Z",
      "updated_at": "2022-06-28T07:23:38Z"
    }
  ],
  "created_at": "2022-06-25T12:22:15Z",
  "number": 17582,
  "state": "closed",
  "title": "Completions directory for PowerShell on Linux",
  "updated_at": "2022-06-28T07:23:58Z"
}