{
  "_url": "https://github.com/PowerShell/PowerShell/issues/11906",
  "author": "jazzdelightsme",
  "body": "When a command is not found, pwsh helpfully tries to suggest other commands (\"Suggestion [4,General]: The most similar commands are: blah blah blah\"). That's cool. But if I'm suppressing the error, then I probably don't want that suggestion to show up, either. I.e. I've written a script that does something where the command might not exist, so I've used `-ErrorAction Ignore`, and so the user runs my script, and things seem to mostly work, but they end up with this weird, \"random\" suggestion text in the output, which confuses and worries them.\r\n\r\nAnd side note, I thought `-ErrorAction Ignore` should also make the error not show up in `$error`... but it is... is that specific to just this cmdlet that I ran into it with (-PSRepository commands), or is my expectation wrong, or what?\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\n$error.clear()\r\nUnregister-PSRepository asdfadsfadsf -ErrorAction Ignore\r\n$error\r\n```\r\n\r\n# Expected behavior\r\n\r\n```none\r\n<no output>\r\n```\r\n\r\n# Actual behavior\r\n\r\n```none\r\nGet-Command: C:\\tools\\pwsh\\7\\Modules\\PowerShellGet\\PSModule.psm1:12812\r\n Line |\r\n12812 |  \u2026 $nugetCmd = Microsoft.PowerShell.Core\\Get-Command -Name $script:NuGet \u2026\r\n      |                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n      | The term 'NuGet.exe' is not recognized as the name of a cmdlet, function, script file, or operable program. Check the spelling of the name, or if a path was included, verify that the path is correct and try again.\r\n\r\nSuggestion [4,General]: The most similar commands are: net.exe, net1.exe, nltest.exe, quser.exe, reset.exe, subst.exe, git.exe, alg.exe, at.exe, CCG.exe.\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n(this is actually the most recent CI build that I could find--very fresh!)\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-preview.7\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-preview.7\r\nOS                             Microsoft Windows 10.0.19570\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "This looks like the issue here isn't actually the suggestion being shown... Suggestions are shown if any errors show up in `$error`.\r\n\r\nI suspect the reason the error turns up is to do with how common parameters like -ErrorAction are handled when a command inside a module calls a command from another module. If I'm not mistaken, it might be a known issue that such parameters aren't always passed properly when calling commands in this way?\r\n\r\nDon't see the issue right now, but I'm sure I've seen it before somewhere...",
      "created_at": "2020-02-20T21:37:29Z",
      "updated_at": "2020-02-20T21:37:29Z"
    },
    {
      "author": "jazzdelightsme",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks vexx32.\r\n\r\n> Suggestions are shown if any errors show up in $error\r\n\r\nThat doesn't seem like the right way to do it. For example, if I instead use `-ErrorAction SilentlyContinue`, I **do** expect the error to go into `$error`, but *not* show up in output. And if the error is not showing up in output, then I don't know why we'd want to show the suggestion--there's no context for the user to understand why in the world this suggestion is being given.",
      "created_at": "2020-02-20T23:55:48Z",
      "updated_at": "2020-02-20T23:55:48Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Yep, I'd definitely agree. \ud83d\ude42 \r\n\r\nI have a WIP PR #9115 that addresses that by adding a Suggestion property onto the ErrorRecord itself and having the suggestion be shown as part of the error message formatting itself. I've not had time to finish it, but @SteveL-MSFT has expressed interest in continuing that work. ",
      "created_at": "2020-02-21T00:03:56Z",
      "updated_at": "2020-02-21T00:03:56Z"
    }
  ],
  "created_at": "2020-02-20T19:47:30Z",
  "number": 11906,
  "state": "open",
  "title": "\"Command not found\" suggestion text shows up even when -ErrorAction Ignore",
  "updated_at": "2020-02-21T19:16:24Z"
}