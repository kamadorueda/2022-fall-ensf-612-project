{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5759",
  "author": "lzybkr",
  "body": "## PR Summary\r\nInstead of building PSReadLine from this repo, pull it from the gallery.\r\n\r\nThis pulls v2.0 of PSReadLine which does have documented breaking changes from v1.2, but the risk is small - the features that have changed are typically only used in a profile and aren't used all that often anyway.\r\n\r\nFix #996\r\n\r\nHardcodes version of modules pulled from PSGallery\r\n\r\n## PR Checklist\r\n\r\nNote: Please mark anything not applicable to this PR `NA`.\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - [x] Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] **NA** User facing [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - [x] **NA** Issue filed - Issue link:\r\n- [ ] [Change is not breaking](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)\r\n- [x] **NA** [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n    - [x] **NA** [Add `[feature]` if the change is significant or affectes feature tests](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md#requesting-additional-tests-for-a-pr)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` to the beginning of the title and remove the prefix when the PR is ready.\r\n\r\n  ",
  "closed_at": "2018-01-20T02:15:10Z",
  "comments": [
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "I tested these changes locally and had no problems building (I didn't run tests though.)\r\n\r\nThe CI failures show 2 problems:\r\n\r\n1. If restoring a modules fails, tests probably should not run.\r\n1. We rely on `PowerShellGet` to build. This is unnecessary, we could use `nuget` directly.\r\n\r\nI'd like some feedback on `2` - should we update `PowerShellGet` as part of the build, or just use `nuget`?",
      "created_at": "2017-12-29T22:17:32Z",
      "updated_at": "2018-01-02T19:53:22Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "It is very difficult to use NuGet directly across platforms.  Please update `PowerShellGet`",
      "created_at": "2018-01-02T20:07:57Z",
      "updated_at": "2018-01-02T20:07:57Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I think we can take this early for 6.1.0, but we should stick with the released version of PSReadline for 6.0.0-GA",
      "created_at": "2018-01-02T20:32:54Z",
      "updated_at": "2018-01-02T20:32:54Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "@TravisEz13 - I tried updating PowerShellGet, but in the end it was easier to use nuget (indirectly, via a csproj) and copy out of the nuget cache.\r\n\r\nIt looks like everything passes now, so I think this can be merged.\r\n\r\nNote that PSReadLine will no longer be cross-gen'd after this PR, so if you merge, I'd open an issue to track adding a call to crossgen for PSReadLine - I'm not sure when I'll get a chance to do that.",
      "created_at": "2018-01-08T17:30:04Z",
      "updated_at": "2018-01-08T17:30:04Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "What was the issue with PowerShellGet?  Can we investigate and fix that issue?",
      "created_at": "2018-01-11T00:53:19Z",
      "updated_at": "2018-01-11T00:53:19Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "PowerShellGet would update successfully, but I would get errors from PackageManagement, presumably because it is a binary module and the newly installed version wasn't being picked up.\r\n\r\nI considered \"fixing\" that by running the update in a child process, but:\r\n* Running in a child process can be harder to debug, harder to pass parameters (no live objects e.g.)\r\n* I just think it's cleaner to use nuget for the package restore, e.g. the packages are cached, so you don't pull the package every time you build.",
      "created_at": "2018-01-11T01:22:11Z",
      "updated_at": "2018-01-11T01:22:11Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "I updated to address the feedback.\r\n\r\nI don't plan on changing back to using PowerShellGet - I think this approach could be turned on by default - we can rely on the nuget cache instead of fetching from the network on every build.\r\n\r\nAlso regarding this approach versus using PowerShellGet - in my opinion:\r\n* Either way, we need some logic to remove something, PowerShellGet artifacts or nuget artifacts\r\n* The build fails quickly this way if the package is missing - the previous way the build succeeds and you don't discover a missing module until running tests, assuming there are tests.\r\n* With a csproj, the dependencies are easier to express, maybe not in the SDK csproj, but the dependency is more discoverable than being hidden in build.psm1.",
      "created_at": "2018-01-11T18:16:43Z",
      "updated_at": "2018-01-11T18:16:43Z"
    },
    {
      "author": "adityapatwardhan",
      "author_association": "MEMBER",
      "body": "Reverting this change as Console tests are failing on non-windows. The failure is: `An error has occurred that was not properly handled. Additional information is shown below. The PowerShell process will exit.`\r\n",
      "created_at": "2018-01-22T22:26:23Z",
      "updated_at": "2018-01-22T22:26:23Z"
    }
  ],
  "created_at": "2017-12-29T20:20:30Z",
  "number": 5759,
  "state": "closed",
  "title": "Pull PSReadLine from PSGallery",
  "updated_at": "2018-06-15T15:59:11Z"
}