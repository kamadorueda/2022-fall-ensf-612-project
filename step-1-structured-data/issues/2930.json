{
  "_url": "https://github.com/PowerShell/PowerShell/issues/2930",
  "author": "jianglibo",
  "body": "The lines bellow should catch an exception?\r\nI had wrote Powershell for months, It's not Powershell way.\r\n\r\n```\r\ntry {\r\n  \"/opt/oozie-build/oozie/bin/mkdistro.sh -DskipTests >/tmp/tmpJylOol.tmp 2>&1\" | Invoke-Expression\r\n}\r\n catch {\r\n            $Error | Write-HostIfInTesting\r\n }\r\n\r\nOr\r\n\r\ntry {\r\n  \"/opt/oozie-build/oozie/bin/mkdistro.sh -DskipTests\" | Invoke-Expression\r\n}\r\n catch {\r\n            $Error | Write-HostIfInTesting\r\n }\r\n```\r\n\r\nEven invoke code like this, it won't throw an exception. Does Powershell handle Java thread special?\r\n```\r\ntry { \"bash xx\" | Invoke-Expression} catch { \"yyy\"}\r\n```\r\n",
  "closed_at": "2017-10-08T09:50:37Z",
  "comments": [
    {
      "author": "BrucePay",
      "author_association": "COLLABORATOR",
      "body": "External commands can't throw exceptions. They can only write to the error stream and return an exit code. If the exit code is non-zero then the value of $? will be false. The specific exit code is available in the variable $EXITCODE. Also, you don't need to use Invoke-Expression to execute an external command. You can execute them directly as in\r\n`bash -c \"exit 1\" ; if ( -not $?) { \"Cmd exited with an error status\" }`\r\n(NOTE: In general, Invoke-Expression should be avoided except for a few rare cases since it opens the doors to script injection attacks.)",
      "created_at": "2017-02-18T00:13:33Z",
      "updated_at": "2017-02-18T00:13:33Z"
    }
  ],
  "created_at": "2016-12-26T13:51:43Z",
  "number": 2930,
  "state": "closed",
  "title": "Will invoking of external bash command throw exception?",
  "updated_at": "2017-10-08T09:50:37Z"
}