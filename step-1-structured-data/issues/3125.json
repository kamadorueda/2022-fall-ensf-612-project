{
  "_url": "https://github.com/PowerShell/PowerShell/issues/3125",
  "author": "tibmeister",
  "body": "This is a revamp of my earlier Pull Request for adding Test-Connection cmdlet capability for Non-Windows platforms.",
  "closed_at": "2017-03-17T18:06:04Z",
  "comments": [
    {
      "author": "msftclas",
      "author_association": "NONE",
      "body": "Hi __@tibmeister__, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\r\n    <span>You've already signed the contribution license agreement. Thanks!</span>\r\n        <p>The agreement was validated by Microsoft and real humans are currently evaluating your PR.</p>\r\n\r\nTTYL, MSBOT;\r\n",
      "created_at": "2017-02-10T05:14:37Z",
      "updated_at": "2017-02-10T05:14:37Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "I don't see the changes mention in the comments.\r\n\r\nAlso, would it be better to merge the code into the windows CmdLet?",
      "created_at": "2017-02-17T21:04:07Z",
      "updated_at": "2017-02-17T21:04:07Z"
    },
    {
      "author": "tibmeister",
      "author_association": "NONE",
      "body": "Interesting, I did squash down to a single commit, but I'm seeing what I would expect as far as the changes.  The squashing down to a single commit is throwing me a little so maybe that blew something up? I am seeing something a little off so gonna re-push that up, hopefully doing the squash doesn't kill anything.\r\n\r\nMerging the code into the Windows cmdlet could get very messy I think since it would be a cobble of compiler directives.  I would worry it would become unwieldy to maintain; I'm a fan of keep it clean, keep it separate.  It would require changing the project.json to no longer exclude the code file from core builds, but not terribly difficult.\r\n",
      "created_at": "2017-02-18T01:49:49Z",
      "updated_at": "2017-02-18T01:49:49Z"
    },
    {
      "author": "tibmeister",
      "author_association": "NONE",
      "body": "Looking more closely I see a lot missing so back to the drawing board!\r\nMore on the merging in the same module, I don't know how well it would work because of the return type for the Computer.cs version is based on a WMI Class for it's return object.  This wouldn't exist on non-Windows platforms so I am creating a rough implementation of that return type, which is what didn't get uploaded.",
      "created_at": "2017-02-18T02:27:27Z",
      "updated_at": "2017-02-18T02:27:27Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "We don't need every property, just the ones you do provide should be similar to the ones on windows.  This way it's easier to make scripts portable between windows and Linux.",
      "created_at": "2017-02-18T03:06:13Z",
      "updated_at": "2017-02-18T03:06:13Z"
    },
    {
      "author": "tibmeister",
      "author_association": "NONE",
      "body": "Yeah, looking at between 16 and 20 properties overall.  Did a gm on one of the ping responses and using that as a template with the MSDN Win32_PingStatus documentation as a reference.  \r\n\r\nLike I said, had this all done once, did the squash, and back down to square one :(",
      "created_at": "2017-02-18T03:13:08Z",
      "updated_at": "2017-02-18T03:13:08Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "It seems to us it is better to leave this based on WMI cmdlet just as Windows cmdlet for backward compatibility.\r\nMaybe better develop and port based on .Net amd CIM module `NetTCPIP` and cmdlet `Test-NetConnection`.\r\nI believe we must obtain the conclusion  from the @Powershell-Committee. /cc @lzybkr ",
      "created_at": "2017-02-18T10:19:01Z",
      "updated_at": "2017-02-22T03:25:15Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "This would not be testing a TCP connection, so the proposed name of `Test-TCPConnection` is inappropriate.  It would be testing an ICMP connection like `Test-Connection` does.  I don't think we should create a new CmdLet because the output is not exactly the same.",
      "created_at": "2017-02-21T22:22:25Z",
      "updated_at": "2017-02-21T22:23:21Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@TravisEz13 Thanks! Sorry for typo, I meant `Test-NetConnection`.\r\nYes, the output is other. Nevertheless, this cmdlet performs \"ping\". So maybe it will be able to replace `Test-Connection`.",
      "created_at": "2017-02-22T03:30:56Z",
      "updated_at": "2017-02-22T03:30:56Z"
    },
    {
      "author": "tibmeister",
      "author_association": "NONE",
      "body": "As of right now I would say it's 99% there.  The huge piece that alludes me is how to get the output to default to table format like the Test-Connection on Windows platforms works.  Can't seem to find that anywhere.",
      "created_at": "2017-02-22T05:57:19Z",
      "updated_at": "2017-02-22T05:57:19Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "Table formatting of Test-Connection comes from:\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/d8b4200f6f6b30c5d452aba19f5be2e8871b5f1b/src/System.Management.Automation/commands/utility/FormatAndOutput/common/DefaultFormatters/DotNetTypes_format_ps1xml.cs#L798",
      "created_at": "2017-02-22T20:40:51Z",
      "updated_at": "2017-02-22T20:40:51Z"
    },
    {
      "author": "tibmeister",
      "author_association": "NONE",
      "body": "I was wondering if a format file was being used!  So, with that, is it acceptable for me to throw the new format into that file for this implementation of PingStatus since the namespace is different?",
      "created_at": "2017-02-23T04:41:20Z",
      "updated_at": "2017-02-23T04:41:20Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "Yes.",
      "created_at": "2017-02-23T06:28:46Z",
      "updated_at": "2017-02-23T06:28:46Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@PowerShell/powershell-committee reviewed this and since the existing test-connection has limited capability, it would make sense to have a new module that can support testing multiple protocols and can be extended.  This should be an RFC.  Supporting parallel tests (fan-out) is something that needs to be considered.",
      "created_at": "2017-03-02T00:34:56Z",
      "updated_at": "2017-03-02T00:34:56Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@SteveL-MSFT Thanks! \r\nThe conclusion raises many questions - \"new module\", \"multiple protocols\", what about `Test-NetConnection`...\r\n\r\nCould you please clarify in a new RFC issue or you have already started new RFC?",
      "created_at": "2017-03-02T03:32:09Z",
      "updated_at": "2017-03-02T03:32:09Z"
    },
    {
      "author": "tibmeister",
      "author_association": "NONE",
      "body": "So that would be great as an enhancement, but what about the massive amount of scripts that already call Test-Connection?  Are those to be left in the dark if not running on Windows or will those using Test-Connection today be forced to change their code if not running on Windows?\r\n",
      "created_at": "2017-03-02T03:38:26Z",
      "updated_at": "2017-03-02T03:38:26Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@tibmeister Good question! \r\nI believe this issue should be addressed in new RFC too. If we can make it an alias of the new cmdlet, it will be the best solution.\r\n\r\nAnd please don't remove your code - it can be re-used in new cmdlet on 99.99%.",
      "created_at": "2017-03-02T03:51:25Z",
      "updated_at": "2017-03-02T03:52:15Z"
    },
    {
      "author": "tibmeister",
      "author_association": "NONE",
      "body": "So I guess this leaves one to wonder where this PR stands?  Is it not going to be accepted?",
      "created_at": "2017-03-03T05:06:05Z",
      "updated_at": "2017-03-03T05:06:05Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@tibmeister We must first obtain an approved RFC then align the PR with the RFC.\r\n\r\n@SteveL-MSFT Please could you clarify @PowerShell/powershell-committee conclusion as I asked above? And who starts the RFC?",
      "created_at": "2017-03-03T05:26:20Z",
      "updated_at": "2017-03-03T05:26:20Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@iSazonov anyone can start the RFC, it is not required that the author of this PR draft the RFC.\r\n\r\n@tibmeister until we sign-off on the RFC, @PowerShell/powershell-committee would not accept this PR as it would introduce compatibility problems in the future.  we do appreciate your contribution and expect the code you've already written to be reused to implement part of the RFC.  thanks!",
      "created_at": "2017-03-03T16:58:56Z",
      "updated_at": "2017-03-03T16:58:56Z"
    },
    {
      "author": "tibmeister",
      "author_association": "NONE",
      "body": "I am confused on where this stand.  I am getting lost in the back-and-forth on this one.  Do I need to write the RFC and what would the subject of the RFC be?  Never wrote an RFC before so kinda exciting there.",
      "created_at": "2017-03-06T04:41:28Z",
      "updated_at": "2017-03-06T04:41:28Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@tibmeister the request from the committee is to think of what test-connection should be as a portable (cross-platform) and extendable (enable supporting more protocols) module instead of trying to port the currently limited test-connection module.  Just write up a draft for the RFC on what you think test-connection should be used for and the parameters it would expose.  ",
      "created_at": "2017-03-06T04:46:49Z",
      "updated_at": "2017-03-06T04:46:49Z"
    },
    {
      "author": "tibmeister",
      "author_association": "NONE",
      "body": "Ok, is there a template and/or examples that I can look at?",
      "created_at": "2017-03-06T04:49:25Z",
      "updated_at": "2017-03-06T04:49:25Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "http://github.com/powershell/powershell-rfc\r\n\r\nRFC0001 explains the process and includes the template\r\n\r\nLook in the Drafts folder for samples",
      "created_at": "2017-03-06T05:03:15Z",
      "updated_at": "2017-03-06T05:03:15Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I suppose `NMAP` is a good example for start.",
      "created_at": "2017-03-06T05:07:27Z",
      "updated_at": "2017-03-06T05:07:27Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "@tibmeister Do you want to leave this open?  I think if you close it you can reopen it if you need our attention.",
      "created_at": "2017-03-15T19:16:52Z",
      "updated_at": "2017-03-15T19:16:52Z"
    },
    {
      "author": "TravisEz13",
      "author_association": "MEMBER",
      "body": "Closing, feel free to reopen or ping me if you cannot reopen to and need to.",
      "created_at": "2017-03-17T18:06:04Z",
      "updated_at": "2017-03-17T18:06:04Z"
    }
  ],
  "created_at": "2017-02-10T05:14:33Z",
  "number": 3125,
  "state": "closed",
  "title": "Implementation of Test-Connection for Non-Windows platforms(#2537)",
  "updated_at": "2017-03-27T05:48:59Z"
}