{
  "_url": "https://github.com/PowerShell/PowerShell/issues/17623",
  "author": "leoleoasd",
  "body": "### Prerequisites\r\n\r\n- [X] Write a descriptive title.\r\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- [X] Search the existing issues.\r\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\r\n\r\n### Steps to reproduce\r\n\r\n```\r\n /mnt/c/Program\\ Files/PowerShell/7/pwsh.exe -noninteractive -executionpolicy unrestricted -file ./xxx.ps1\r\n```\r\n\r\n### Expected behavior\r\n\r\nruns successfully since there is a `-executionpolicy unrestricted` flag\r\n\r\n\r\n### Actual behavior\r\n\r\n```console\r\nSecurityError: AuthorizationManager check failed.\r\n```\r\n\r\n\r\n### Error details\r\n\r\nI don't know how to provide this since I'm starting a `.ps1` file and the session ends before the file's execution\r\n\r\n\r\n### Environment data\r\n\r\n```powershell\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.5\r\nPSEdition                      Core\r\nGitCommitId                    7.2.5\r\nOS                             Microsoft Windows 10.0.22000\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\n### Visuals\r\n\r\n![image](https://user-images.githubusercontent.com/37735580/177119903-eec6e9bb-31a3-4135-88a6-075851835f5a.png)\r\n",
  "closed_at": "2022-07-07T00:01:17Z",
  "comments": [
    {
      "author": "fMichaleczek",
      "author_association": "NONE",
      "body": "I can't reproduce it.\r\n\r\n![image](https://user-images.githubusercontent.com/6187529/177236742-4ba56234-eaa9-436a-b75b-9bac6ef5fb11.png)\r\n\r\nCould you try with -noprofile argument ?\r\n` ` ` \r\n/mnt/c/Program\\ Files/PowerShell/7/pwsh.exe -noninteractive -executionpolicy unrestricted -noprofile -file test.ps1\r\n` ` ` \r\n\r\nCould you try to unblock your script file ?\r\nhttps://support.servicenow.com/kb?id=kb_article_view&sysparm_article=KB0713009",
      "created_at": "2022-07-05T02:23:14Z",
      "updated_at": "2022-07-05T02:23:14Z"
    },
    {
      "author": "leoleoasd",
      "author_association": "NONE",
      "body": "doesn't work either.\r\n```\r\n(win/x64)  \u279c  ~ echo \"Write-Host Test\" > test.ps1\r\n(win/x64)  \u279c  ~ /mnt/c/Program\\ Files/PowerShell/7/pwsh.exe -noninteractive -executionpolicy unrestricted -file ./test.ps1\r\nSecurityError: AuthorizationManager check failed.\r\n(win/x64)  \u279c  ~ /mnt/c/Program\\ Files/PowerShell/7/pwsh.exe -noninteractive -executionpolicy unrestricted -noprofile -file ./test.ps1\r\nSecurityError: AuthorizationManager check failed.\r\n(win/x64)  \u279c  ~ unblock-file\r\nzsh: command not found: unblock-file\r\n(win/x64)  \u279c  ~ /mnt/c/Program\\ Files/PowerShell/7/pwsh.exe\r\nPowerShell 7.2.5\r\nCopyright (c) Microsoft Corporation.\r\n\r\nhttps://aka.ms/powershell\r\nType 'help' to get help.\r\n\r\nPS Microsoft.PowerShell.Core\\FileSystem::\\\\wsl.localhost\\Distrod\\home\\leo> Unblock-File .\\test.ps1\r\nPS Microsoft.PowerShell.Core\\FileSystem::\\\\wsl.localhost\\Distrod\\home\\leo> .\\test.ps1\r\n.\\test.ps1: File \\\\wsl.localhost\\Distrod\\home\\leo\\test.ps1 cannot be loaded. The file \\\\wsl.localhost\\Distrod\\home\\leo\\test.ps1 is not digitally signed. You cannot run this script on the current system. For more information about running scripts and setting execution policy, see about_Execution_Policies at https://go.microsoft.com/fwlink/?LinkID=135170.\r\nPS Microsoft.PowerShell.Core\\FileSystem::\\\\wsl.localhost\\Distrod\\home\\leo> ^C\r\nPS Microsoft.PowerShell.Core\\FileSystem::\\\\wsl.localhost\\Distrod\\home\\leo> exit\r\n(win/x64)  \u279c  ~ /mnt/c/Program\\ Files/PowerShell/7/pwsh.exe -noninteractive -executionpolicy unrestricted -noprofile -file ./test.ps1\r\nSecurityError: AuthorizationManager check failed.\r\n```",
      "created_at": "2022-07-05T13:41:38Z",
      "updated_at": "2022-07-05T13:41:38Z"
    },
    {
      "author": "leoleoasd",
      "author_association": "NONE",
      "body": "My WSL version:\r\n```\r\n(win/x64)  \u279c  ~ wsl.exe --version\r\nWSL \u7248\u672c\uff1a 0.61.4.0\r\n\u5185\u6838\u7248\u672c\uff1a 5.10.102.1\r\nWSLg \u7248\u672c\uff1a 1.0.39\r\nMSRDC \u7248\u672c\uff1a 1.2.3213\r\nDirect3D \u7248\u672c\uff1a 1.601.0\r\nDXCore \u7248\u672c\uff1a 10.0.25131.1002-220531-1700.rs-onecore-base2-hyp\r\nWindows\u7248\u672c\uff1a 10.0.22000.739\r\n```",
      "created_at": "2022-07-05T13:42:22Z",
      "updated_at": "2022-07-05T13:42:22Z"
    },
    {
      "author": "suntt2019",
      "author_association": "NONE",
      "body": "I can reproduce.\r\n<img width=\"936\" alt=\"image\" src=\"https://user-images.githubusercontent.com/55178038/177357939-6cc340dd-a85a-41b5-9d1d-f42ac603fdfa.png\">\r\n```\r\nsun123t2@G15:~/code/tries/ps$ /mnt/c/Program\\ Files/PowerShell/7/pwsh.exe -noninteractive -executionpolicy unrestricted -file ./test.ps1\r\nSecurityError: AuthorizationManager check failed.\r\nsun123t2@G15:~/code/tries/ps$ /mnt/c/Program\\ Files/PowerShell/7/pwsh.exe -noninteractive -executionpolicy unrestricted -noprofile -file ./test.ps1\r\nSecurityError: AuthorizationManager check failed.\r\nsun123t2@G15:~/code/tries/ps$ unblock-file\r\n-bash: unblock-file: command not found\r\nsun123t2@G15:~/code/tries/ps$ /mnt/c/Program\\ Files/PowerShell/7/pwsh.exe\r\nPowerShell 7.2.5\r\nCopyright (c) Microsoft Corporation.\r\n\r\nhttps://aka.ms/powershell\r\nType 'help' to get help.\r\n\r\nPS Microsoft.PowerShell.Core\\FileSystem::\\\\wsl.localhost\\Distrod\\home\\sun123t2\\code\\tries\\ps> Unblock-File .\\test.ps1\r\nPS Microsoft.PowerShell.Core\\FileSystem::\\\\wsl.localhost\\Distrod\\home\\sun123t2\\code\\tries\\ps> .\\test.ps1\r\n.\\test.ps1: File \\\\wsl.localhost\\Distrod\\home\\sun123t2\\code\\tries\\ps\\test.ps1 cannot be loaded. The file \\\\wsl.localhost\\Distrod\\home\\sun123t2\\code\\tries\\ps\\test.ps1 is not digitally signed. You cannot run this script on the current system. For more information about running scripts and setting execution policy, see about_Execution_Policies at https://go.microsoft.com/fwlink/?LinkID=135170.\r\nPS Microsoft.PowerShell.Core\\FileSystem::\\\\wsl.localhost\\Distrod\\home\\sun123t2\\code\\tries\\ps> exit\r\nsun123t2@G15:~/code/tries/ps$ /mnt/c/Program\\ Files/PowerShell/7/pwsh.exe -noninteractive -executionpolicy unrestricted -noprofile -file ./test.ps1\r\nSecurityError: AuthorizationManager check failed.\r\nsun123t2@G15:~/code/tries/ps$\r\n```",
      "created_at": "2022-07-05T15:04:13Z",
      "updated_at": "2022-07-05T15:04:13Z"
    },
    {
      "author": "fMichaleczek",
      "author_association": "NONE",
      "body": "The PR https://github.com/PowerShell/PowerShell/pull/13120 declared \\\\\\wsl$ as a security zone when analysing a script.\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/b5277c0fb771edca57e98b0ebb6faa1ad256f852/src/System.Management.Automation/engine/Utils.cs#L736\r\n\r\nBut starting WSL Build 20175, they change the \\\\\\wsl$ prefix to \\\\\\wsl \r\n[WSL/release-notes#build-20175](https://docs.microsoft.com/en-us/windows/wsl/release-notes#build-20175)\r\n\r\nBut starting WSL Build 21354, they change the \\\\\\wsl prefix to \\\\\\wsl.localhost\r\n[WSL/release-notes#build-21354](https://docs.microsoft.com/en-us/windows/wsl/release-notes#build-21354)\r\n\r\nSo the issue https://github.com/PowerShell/PowerShell/issues/13106 is came back.\r\n\r\nThe WSL >20175 need a improvement to declare the new path and handle security (don't trust \\\\\\wslfake by example)\r\n",
      "created_at": "2022-07-05T15:20:51Z",
      "updated_at": "2022-07-05T15:24:56Z"
    },
    {
      "author": "fMichaleczek",
      "author_association": "NONE",
      "body": "/cc @daxian-dbw ",
      "created_at": "2022-07-05T15:22:21Z",
      "updated_at": "2022-07-05T15:22:21Z"
    },
    {
      "author": "leoleoasd",
      "author_association": "NONE",
      "body": "Is there any temporary workaround for this?",
      "created_at": "2022-07-05T15:24:15Z",
      "updated_at": "2022-07-05T15:24:15Z"
    },
    {
      "author": "leoleoasd",
      "author_association": "NONE",
      "body": "Piping script into pwsh's stdin seems working. Is there any way to disable the prompt (version, path, help, etc.) when piping, just like opening it with `-file`?",
      "created_at": "2022-07-05T15:31:27Z",
      "updated_at": "2022-07-05T15:31:27Z"
    },
    {
      "author": "fMichaleczek",
      "author_association": "NONE",
      "body": "@leoleoasd the \\\\\\WSL$ is still working, so if you force the path, PowerShell should be OK with that.\r\n```\r\nhome> echo \"Write-Host Test\" > test.ps1\r\nhome> /mnt/c/Program\\ Files/PowerShell/7/pwsh.exe -noninteractive -executionpolicy unrestricted -file '\\\\wsl$\\Ubuntu-20.04\\home\\flavien\\test.ps1'\r\n```",
      "created_at": "2022-07-05T15:40:54Z",
      "updated_at": "2022-07-05T15:40:54Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "> /mnt/c/Program\\ Files/PowerShell/7/pwsh.exe\r\n\r\nYou are running powershell built for Windows on Linux, and I'm afraid you will get undefined behaviors. Different code paths are enabled when building for Unix platforms, and thus the Windows build powershell is bound to have issues when running in Linux environment. The recommendation is to install PowerShell in WSL and use that instead.",
      "created_at": "2022-07-05T16:46:26Z",
      "updated_at": "2022-07-05T16:46:26Z"
    },
    {
      "author": "fMichaleczek",
      "author_association": "NONE",
      "body": "> > /mnt/c/Program\\ Files/PowerShell/7/pwsh.exe\r\n> \r\n> You are running powershell built for Windows on Linux, and I'm afraid you will get undefined behaviors. Different code paths are enabled when building for Unix platforms, and thus the Windows build powershell is bound to have issues when running in Linux environment. The recommendation is to install PowerShell in WSL and use that instead.\r\n\r\nI Agree with you but the issue is related to specific PR https://github.com/PowerShell/PowerShell/pull/13120 , do you want another PR to remove the 13120 ? I don't understand. ",
      "created_at": "2022-07-05T16:58:48Z",
      "updated_at": "2022-07-05T16:58:48Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "I think it's different. https://github.com/PowerShell/PowerShell/pull/13120 is to address an issue that happened when running `pwsh.exe` from Windows within the WSL file system. But this issue is about running `pwsh.exe` directly in WSL.",
      "created_at": "2022-07-05T17:11:16Z",
      "updated_at": "2022-07-05T17:11:44Z"
    },
    {
      "author": "fMichaleczek",
      "author_association": "NONE",
      "body": "> I think it's different. #13120 is to address an issue that happened when running `pwsh.exe` from Windows within the WSL file system. But this issue is about running `pwsh.exe` directly in WSL.\r\n\r\nYes but the new default WSL Host has been changed, so the PR13120 need an update to declare the new set (\\\\\\\\wsl\\\\, \\\\\\wsl.localhost\\\\) for Windows Build > 20175. (\\\\\\wsl$\\  is still present for retro-compatible)\r\n\r\nI could create a new issue if you prefer, showing that I can't execute a script if the path is  '\\\\wsl.localhost\\Ubuntu-20.04\\home\\flavien\\test.ps1 on the last Windows Version, because it's not declared in the security zone. (I haven't test)\r\n\r\nAnd after, it will maybe solve the current issue :\r\n```\r\n/mnt/c/Program\\ Files/PowerShell/7/pwsh.exe -noninteractive -executionpolicy unrestricted -file '\\\\wsl\\Ubuntu-20.04\\home\\flavien\\test.ps1' => KO, path is not trusted\r\n/mnt/c/Program\\ Files/PowerShell/7/pwsh.exe -noninteractive -executionpolicy unrestricted -file '\\\\wsl.localhost\\Ubuntu-20.04\\home\\flavien\\test.ps1' => KO, path is not trusted\r\n/mnt/c/Program\\ Files/PowerShell/7/pwsh.exe -noninteractive -executionpolicy unrestricted -file '\\\\wsl$\\Ubuntu-20.04\\home\\flavien\\test.ps1' => OK, path is trusted\r\n```\r\n",
      "created_at": "2022-07-05T17:31:54Z",
      "updated_at": "2022-07-05T17:31:54Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2022-07-07T00:01:16Z",
      "updated_at": "2022-07-07T00:01:16Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "> for Windows Build > 20175. (\\\\wsl$\\ is still present for retro-compatible)\r\n\r\n@fMichaleczek Is that Windows 11? Please open a new issue for that, thanks!",
      "created_at": "2022-07-07T00:14:04Z",
      "updated_at": "2022-07-07T00:14:04Z"
    },
    {
      "author": "fMichaleczek",
      "author_association": "NONE",
      "body": "@daxian-dbw At this moment, it think it's Windows 10 Insider and Windows 11. ",
      "created_at": "2022-07-07T00:55:59Z",
      "updated_at": "2022-07-07T00:55:59Z"
    }
  ],
  "created_at": "2022-07-04T08:56:23Z",
  "number": 17623,
  "state": "closed",
  "title": "Running script from WSL with noninteractive flag will show \"SecurityError: AuthorizationManager check failed.\"",
  "updated_at": "2022-07-07T00:55:59Z"
}