{
  "_url": "https://github.com/PowerShell/PowerShell/issues/16493",
  "author": "MSP-Greg",
  "body": "### Prerequisites\n\n- [X] Write a descriptive title.\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\n- [X] Search the existing issues.\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\n\n### Steps to reproduce\n\nGitHub Actions windows images recently upgraded from 7.1.5 to 7.2.0.  I've got a few repos with ps1 scripts that use ANSI color codes.  The code has worked since Feb-2020.\r\n\r\nWhen Actions switched to 7.2.0, the color text was rendered monochrome.  Note that a custom action (js) does render color, along with a Ruby script.  Also, I noticed no changes locally when upgrading.  The script displaying color can be run locally.\r\n\r\nAny ideas?  With Actions, the following line is monochrome:\r\n```ps1\r\nWrite-Host \"`nThis is not color..\"; Write-Host \"`e[93mIs this color?`e[0m\"; Write-Host \"This is not color..\"\r\n```\n\n### Expected behavior\n\n```console\nna\n```\n\n\n### Actual behavior\n\n```console\nna\n```\n\n\n### Error details\n\n```console\nna\n```\n\n\n### Environment data\n\n```powershell\nGitHub Actions windows images\n```\n\n\n### Visuals\n\n_No response_",
  "closed_at": "2021-12-19T04:00:44Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "/cc @SteveL-MSFT ",
      "created_at": "2021-11-19T16:53:55Z",
      "updated_at": "2021-11-19T16:53:55Z"
    },
    {
      "author": "daxian-dbw",
      "author_association": "MEMBER",
      "body": "This is likely because pwsh.exe is redirected in GitHub Action, and in 7.2, when the host is redirected, pwsh uses 'PlainText' as the output rendering style:\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/fd4117e14552b6a8fa0bef6cc3c34bc67d4f8f0e/src/System.Management.Automation/engine/hostifaces/MshHostUserInterface.cs#L379-L382\r\n\r\nHowever, there should be a way to force using ANSI even if the host is redirected, but that seems impossible today.",
      "created_at": "2021-11-19T18:40:57Z",
      "updated_at": "2021-11-19T18:40:57Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": "> there should be a way to force using ANSI even if the host is redirected\r\n\r\nAgreed.  Our Jenkins build logs contain ANSI sequences from various different build tools and within Jenkins web UI those display with the appropriate colors.  Whenever I need to view the log raw, I use a browser extension (RetroTxt) to render the ANSI seqs.",
      "created_at": "2021-11-19T19:01:33Z",
      "updated_at": "2021-11-19T19:01:33Z"
    },
    {
      "author": "MSP-Greg",
      "author_association": "NONE",
      "body": "@daxian-dbw\r\n\r\nThanks.  So it could be considered an 'edge case' breaking change?  Regardless, I'm ok to close...",
      "created_at": "2021-11-19T19:14:13Z",
      "updated_at": "2021-11-19T19:14:13Z"
    },
    {
      "author": "ClaudiuSchuster",
      "author_association": "NONE",
      "body": "Same for Azure Pipelines....\r\n\r\nwith 7.1.5 ansi colors got displayed correctly, from 7.2.0 no colors in Azure DevOps Pipelines...",
      "created_at": "2021-11-24T11:57:43Z",
      "updated_at": "2021-11-24T11:57:43Z"
    },
    {
      "author": "ThomasPiskol",
      "author_association": "NONE",
      "body": "Please don't close this issue. It's affecting valid and important use cases. \r\nWe know so far that this issue impacts basically all major CI platforms and more likely to come:\r\n\r\n- GitHub Actions\r\n- Azure DevOps Pipelines\r\n- Jenkins\r\n\r\nFrom my point of view this is not an 'edge case', unless you consider CI/CD pipelines as not important.\r\nPlease also consider that this issue is present in a LTS version.",
      "created_at": "2021-11-24T13:10:28Z",
      "updated_at": "2021-11-24T13:10:28Z"
    },
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "I think the correct thing here is to NOT deliberately suppress ANSI if `pwsh` is redirected and instead rely on users to set the appropriate env vars that control this behavior if they don't want ANSI",
      "created_at": "2021-11-30T20:25:04Z",
      "updated_at": "2021-11-30T20:25:04Z"
    },
    {
      "author": "rkeithhill",
      "author_association": "COLLABORATOR",
      "body": ">  env vars that control this behavior\r\n\r\nAnd/or add a new pwsh command line switch e.g. `-NoAnsi`.",
      "created_at": "2021-11-30T20:40:48Z",
      "updated_at": "2021-11-30T20:41:05Z"
    },
    {
      "author": "ClaudiuSchuster",
      "author_association": "NONE",
      "body": "I can confirm that with PowerShell 7.2.1 ANSI Colors in Azure DevOps Pipelines are displayed correctly again. \r\n(Without any change from our site since 7.1.5 when it worked last)\r\n\r\nThanks! :-)",
      "created_at": "2021-12-17T12:52:56Z",
      "updated_at": "2021-12-17T12:52:56Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> I can confirm that with PowerShell 7.2.1 ANSI Colors in Azure DevOps Pipelines are displayed correctly again. (Without any change from our site since 7.1.5 when it worked last)\r\n> \r\n> Thanks! :-)\r\n\r\nIt wasn't a solution-just going around in circles. \ud83d\ude3a \r\n\r\nAll of this would have to be tested in an experimental feature, not in release...",
      "created_at": "2021-12-17T13:10:24Z",
      "updated_at": "2021-12-17T13:10:24Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as fixed and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
      "created_at": "2021-12-19T04:00:43Z",
      "updated_at": "2021-12-19T04:00:43Z"
    },
    {
      "author": "ClaudiuSchuster",
      "author_association": "NONE",
      "body": "I want to mention that with pwsh 7.2.1 something new happens related to ANSI color codes:\r\n\r\nWith pwsh 7.1.5 and 7.2.0 you could do a \r\n```\r\n$adUserString = Get-ADUser xxxx | Out-String\r\n$adUserString -match \"UserPrincipalName\\s*:\\s*([^\\s]*)\" | Out-Null\r\n$emailAddress = $matches[1]\r\n```\r\nand you would get a fine EmailAddress what could be used with Send-MailMessage e.g.\r\n\r\nwith pwsh 7.2.1 this is not more working.\r\nAs $matches[1] will start with \r\n```\r\n`e[0\r\n``` \r\nand cmdlets like Send-MailMessage will crash if you use that match as to-address.\r\nWith pwsh 7.2.1 this is necessary now:\r\n```\r\n$emailAddress = $matches[1] -replace '\\x1b\\[[0-9;]*m',''\r\n```\r\n\r\n",
      "created_at": "2021-12-20T08:57:30Z",
      "updated_at": "2021-12-20T08:57:30Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@ClaudiuSchuster  Please open new issue.",
      "created_at": "2021-12-20T12:57:22Z",
      "updated_at": "2021-12-20T12:57:22Z"
    }
  ],
  "created_at": "2021-11-19T15:29:50Z",
  "labels": [
    "WG-Interactive-Console",
    "Resolution-Fixed"
  ],
  "number": 16493,
  "state": "closed",
  "title": "7.2.0 & ANSI escape sequences (color) not working in GitHub Actions",
  "updated_at": "2021-12-20T12:57:22Z"
}