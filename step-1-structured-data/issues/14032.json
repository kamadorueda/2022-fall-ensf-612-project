{
  "_url": "https://github.com/PowerShell/PowerShell/issues/14032",
  "author": "leonardder",
  "body": "I have an asp.net core application that uses out of process PowerShell.\r\n\r\n## Steps to reproduce\r\nCreate a project with the following code:\r\n\r\n```c#\r\nusing System;\r\nusing System.Management.Automation.Runspaces;\r\n\r\nPowerShellProcessInstance instance = new PowerShellProcessInstance(\r\n                powerShellVersion: new Version(5, 1),\r\n                credential: null,\r\n                initializationScript: null,\r\n                useWow64: false\r\n);\r\nvar runspace = RunspaceFactory.CreateOutOfProcessRunspace(null, instance);\r\nrunspace.Open();\r\n```\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>net5.0</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"system.management.automation\" Version=\"7.0.3\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\nNote, also happens w ith System.Management.Automation 7.1.0 (most recent rc)\r\n\r\n## Expected behavior\r\nRunspace opens properly.\r\n\r\n## Actual behavior\r\nAn exception is raised:\r\n\r\n> An error has occurred which PowerShell cannot handle. A remote session might have ended.\r\n\r\nInner exception:\r\n\r\n> BinaryFormatter serialization and deserialization are disabled within this application. See https://aka.ms/binaryformatter for more information.\r\n\r\n## Additional details\r\n1. The issue does not occur when using the default project sdk (not the web one)\r\n2. BinaryFormatter should probably not be used, see https://github.com/dotnet/designs/pull/141",
  "closed_at": "2020-11-12T12:06:29Z",
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "/cc @PaulHigin Have you any thoughts about the issue?",
      "created_at": "2020-11-11T12:07:50Z",
      "updated_at": "2020-11-11T12:07:50Z"
    },
    {
      "author": "fMichaleczek",
      "author_association": "NONE",
      "body": "### Summary : \r\n- **The issue occurs only with asp.net core SDK**, not with the dot.net core SDK\r\n- **The issue is only related to RunspaceFactory.CreateOutOfProcessRunspace** , CreateOutOfProcessRunspace(null) had the same error\r\n- The main message error is **BinaryFormatter serialization and deserialization are disabled within this application**\r\n\r\n### Solution : \r\nAdd a property **EnableUnsafeBinaryFormatterSerialization** set to **true** in your project\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n\t<PropertyGroup>\r\n\t\t<TargetFramework>net5.0</TargetFramework>\r\n\t\t<OutputType>Exe</OutputType>\r\n\t\t<EnableUnsafeBinaryFormatterSerialization>true</EnableUnsafeBinaryFormatterSerialization>\r\n\t</PropertyGroup>\r\n\t<ItemGroup>\r\n\t\t<PackageReference Include=\"system.management.automation\" Version=\"7.0.3\" />\r\n\t</ItemGroup>\r\n</Project>\r\n```\r\n\r\n@PaulHigin I think PS Team should add the property EnableUnsafeBinaryFormatterSerialization to every project in this repo which depends on Binary Formatter Serialization.  I don't know if PowerShell depends on EnableUnsafeUTF7Encoding too. See this post, if you want to see all new properties in net5.0\r\nhttps://github.com/PowerShell/PowerShell/issues/13755#issuecomment-704948203",
      "created_at": "2020-11-12T03:09:34Z",
      "updated_at": "2020-11-12T03:09:34Z"
    },
    {
      "author": "leonardder",
      "author_association": "NONE",
      "body": "@fMichaleczek Thanks a lot for providing these directions, it works like a charm here.\r\n\r\n> @PaulHigin I think PS Team should add the property EnableUnsafeBinaryFormatterSerialization to every project in this repo which depends on Binary Formatter Serialization. I don't know if PowerShell depends on EnableUnsafeUTF7Encoding too. See this post, if you want to see all new properties in net5.0\r\n> [#13755 (comment)](https://github.com/PowerShell/PowerShell/issues/13755#issuecomment-704948203)\r\n\r\nGiven the security vulnerabilities noted, wouldn't it be better not to use the Binary Formatter serialization at all? Or is this simply not possible? If not, I guess the .NET team should be aware of PowerShell being impacted by this.",
      "created_at": "2020-11-12T09:03:50Z",
      "updated_at": "2020-11-12T09:04:05Z"
    },
    {
      "author": "fMichaleczek",
      "author_association": "NONE",
      "body": "@leonardder Good news ! Nothing is deprecrated, it's only to force people to know what they do. I think it's better to separate this issue from the BinaryFormatter security discussion, could you : \r\n- change the title to something more precise like \"PowerShell Remoting isn't working in the Asp.Net Core SDK 5.0 \" and close it.\r\n- open a new one to ask PSTeam about PowerShell and BinaryFormatter security guide\r\nhttps://docs.microsoft.com/en-us/dotnet/standard/serialization/binaryformatter-security-guide\r\n\r\n@PaulHigin I confirm it will break too in dotnet sdk in the future\r\nsee https://github.com/dotnet/sdk/pull/12434#issuecomment-657867794\n\n<blockquote><img src=\"https://docs.microsoft.com/en-us/media/logos/logo-ms-social.png\" width=\"48\" align=\"right\"><div><strong><a href=\"https://docs.microsoft.com/en-us/dotnet/standard/serialization/binaryformatter-security-guide\">BinaryFormatter security guide</a></strong></div><div>This article describes the security risks inherent in the BinaryFormatter type and recommendations for different serializers to use.</div></blockquote>",
      "created_at": "2020-11-12T10:26:16Z",
      "updated_at": "2020-11-12T10:26:18Z"
    },
    {
      "author": "leonardder",
      "author_association": "NONE",
      "body": "> @leonardder Good news ! Nothing is deprecrated, it's only to force people to know what they do. \r\n\r\n\r\nFrom https://github.com/dotnet/designs/pull/141#issue-448990656\r\n\r\n> Eventually all code within the dotnet repo is to be migrated fully off of BinaryFormatter, at which point the implementation is to be removed from the runtime.\r\n\r\nI hear your request to close the current issue, but I think there are still two outstanding points:\r\n\r\n1. Your idea in https://github.com/PowerShell/PowerShell/issues/14032#issuecomment-725800387 to add this to all projects.\r\n2. The fact that this is currently not documented on PowerSHell's end. Or do you think that falls in scope of another issue to be created?",
      "created_at": "2020-11-12T10:35:46Z",
      "updated_at": "2020-11-12T10:35:46Z"
    },
    {
      "author": "fMichaleczek",
      "author_association": "NONE",
      "body": "@leonardder \r\n> 1. Your idea in [#14032 (comment)](https://github.com/PowerShell/PowerShell/issues/14032#issuecomment-725800387) to add this to all projects.\r\n\r\nAfter reading the document [BinaryFormatter Obsoletion Strategy](https://github.com/dotnet/designs/blob/main/accepted/2020/better-obsoletion/binaryformatter-obsoletion.md), it's wrong. BinaryFormatter will be disabled by default across all project types for .NET 7  (Nov 2022).\r\n\r\n> 2. The fact that this is currently not documented on PowerSHell's end. Or do you think that falls in scope of another issue to be created?\r\n\r\nI created issues to ask : \r\n- to define a PowerShell BinaryFormatter Obsoletion Strategy https://github.com/PowerShell/PowerShell/issues/14054\r\n- to document this issue https://github.com/MicrosoftDocs/PowerShell-Docs/issues/6879\r\n\r\n",
      "created_at": "2020-11-12T12:03:27Z",
      "updated_at": "2020-11-12T12:03:27Z"
    },
    {
      "author": "leonardder",
      "author_association": "NONE",
      "body": "Thanks for this. Closing as requested.",
      "created_at": "2020-11-12T12:06:29Z",
      "updated_at": "2020-11-12T12:06:29Z"
    }
  ],
  "created_at": "2020-11-11T08:59:34Z",
  "number": 14032,
  "state": "closed",
  "title": "By default, PowerShell Remoting isn't working in Asp.Net Core SDK 5.0 projects due to use of BinaryFormatter serialization",
  "updated_at": "2020-11-12T12:06:29Z"
}