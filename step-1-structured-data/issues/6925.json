{
  "_url": "https://github.com/PowerShell/PowerShell/issues/6925",
  "author": "iSazonov",
  "body": "Currently our code detects names of standard devices:\r\nhttps://github.com/PowerShell/PowerShell/blob/master/src/System.Management.Automation/engine/Utils.cs#L1042-L1070\r\n\r\nReally it doesn't work in Windows PowerShell 5.1 and PowerShell Core too.\r\nSimple test:\r\n```powershell\r\ncopy .\\README.md CON\r\ncopy : Cannot process path 'C:\\Users\\1\\Documents\\GitHub\\iSazonov\\PowerShell\\CON' because the target represents a reserv\r\ned device name.\r\nAt line:1 char:1\r\n+ copy .\\README.md CON\r\n+ ~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : WriteError: (C:\\Users\\1\\Docu...\\PowerShell\\CON:String) [Copy-Item], IOException\r\n    + FullyQualifiedErrorId : CopyError,Microsoft.PowerShell.Commands.CopyItemCommand\r\n\r\n\r\ncopy .\\README.md CON:\r\ncopy : Cannot find drive. A drive with the name 'CON' does not exist.\r\nAt line:1 char:1\r\n+ copy .\\README.md CON:\r\n+ ~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : ObjectNotFound: (CON:String) [Copy-Item], DriveNotFoundException\r\n    + FullyQualifiedErrorId : DriveNotFound,Microsoft.PowerShell.Commands.CopyItemCommand\r\n```\r\n\r\nI guess it comes from PowerShell 2.0.\r\nI suggest to remove the code.\r\n\r\nPS: the sample works in cmd.exe\r\n\r\n/cc @lzybkr @BrucePay @SteveL-MSFT \r\n\r\n",
  "closed_at": "2018-05-24T07:46:10Z",
  "comments": [
    {
      "author": "BrucePay",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov What do you mean by \"it doesn't work\"? In your first example, you get the intended error when you try to access a device name. In the second example 'con:' is not a device name, its a drive and you get the correct error for that. Checking for the devices allows us to produce a more reasonable error message. Note that we don't do it everywhere. For example:\r\n```\r\nPSCore (1:50) >  ls > con\r\nout-file : FileStream was asked to open a device that was not a file. For support for devices like 'com1:' or 'lpt1:', call CreateFile, then use the FileStream constructors that take an OS handle as an IntPtr.\r\nAt line:1 char:1\r\n+ ls > con\r\n+ ~~~~~~~~\r\n+ CategoryInfo          : OpenError: (:) [Out-File], NotSupportedException\r\n+ FullyQualifiedErrorId : FileOpenFailure,Microsoft.PowerShell.Commands.OutFileCommand\r\n```\r\nAs you can see, without the check , you get a much more obscure error message. Now ideally, it would be nice if it actually did work and write to the terminal, but that wasn't implemented in V1 and has never, as far as I know, come up in all the years since then. ",
      "created_at": "2018-05-23T19:38:16Z",
      "updated_at": "2018-05-23T19:38:16Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "The `cmd` behavior is questionable, e.g. all of the following copy output to the console:\r\n\r\n```cmd\r\ncopy file.txt con\r\ncopy file.txt con:\r\ncopy file.txt con.txt\r\ncopy file.txt con.exe\r\n```\r\n\r\nThe extension is ignored. This is not specific to `cmd` - it's specific to Win32.\r\n\r\nI believe the error message was introduced to avoid confusing errors when you **don't** get the behavior you thought you should (like my last 2 examples).",
      "created_at": "2018-05-23T19:52:16Z",
      "updated_at": "2018-05-23T19:52:16Z"
    },
    {
      "author": "BrucePay",
      "author_association": "COLLABORATOR",
      "body": "@lzybkr Exactly.",
      "created_at": "2018-05-23T20:01:15Z",
      "updated_at": "2018-05-23T20:01:15Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "> What do you mean by \"it doesn't work\"? In your first example, you get the intended error when you try to access a device name.\r\n\r\n1. A reserved device name is CON not `C:\\Users\\1\\Documents\\GitHub\\iSazonov\\PowerShell\\CON`\r\n2. If I use other tools I can copy (create/rename/delete) to file `C:\\Users\\1\\Documents\\GitHub\\iSazonov\\PowerShell\\CON` \r\n\r\nAs I understood Win32 behavior is not desirable.\r\n\r\nOpen question is -  should this file (`C:\\Users\\1\\Documents\\GitHub\\iSazonov\\PowerShell\\CON`) be created instead of reporting the error?",
      "created_at": "2018-05-24T03:55:20Z",
      "updated_at": "2018-05-24T03:55:20Z"
    },
    {
      "author": "lzybkr",
      "author_association": "MEMBER",
      "body": "@iSazonov - See [here](https://msdn.microsoft.com/en-us/library/windows/desktop/aa365247(v=vs.85).aspx) and [here](https://googleprojectzero.blogspot.com/2016/02/the-definitive-guide-on-win32-to-nt.html) for some background, but the short answer is - those names (with/without a path and/or extension) are special and there's nothing any Windows application can do about it.",
      "created_at": "2018-05-24T04:37:20Z",
      "updated_at": "2018-05-24T04:37:20Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "I was able to create files/directories with the reserved names by means of Far Manager (unlike Explorer.exe). This is misleading.\r\n\r\nSo I agree that current behaviour is right but we need still fix messages (1) for `ls > con` and (2) replace `C:\\Users\\1\\Documents\\GitHub\\iSazonov\\PowerShell\\CON` with `CON`.\r\n\r\nThanks for great comments!",
      "created_at": "2018-05-24T07:46:07Z",
      "updated_at": "2018-05-24T10:05:34Z"
    }
  ],
  "created_at": "2018-05-23T17:55:44Z",
  "labels": [
    "Resolution-Answered",
    "WG-Engine-Providers",
    "Issue-Code Cleanup"
  ],
  "number": 6925,
  "state": "closed",
  "title": "Should we remove standard device detection code?",
  "updated_at": "2018-05-26T18:19:25Z"
}