{
  "_url": "https://github.com/PowerShell/PowerShell/issues/9782",
  "author": "mkht",
  "body": "When I tried to read a file using a pipeline, edit the contents, and save it, I got unexpected behavior. \r\nIs this correct behavior by design ?\r\n\r\n```PowerShell\r\n# Create a text file for testing\r\nPS> 'A' | Out-File -FilePath C:\\test.txt\r\n\r\n# Read file , modified, overwrite\r\nPS> Get-Content -Path C:\\test.txt -Raw | ForEach-Object {$_ + 'B'} | Out-File -FilePath C:\\test.txt\r\n\r\n# I expect that the output is 'AB', but it outputs nothing\r\nPS> Get-Content -Path C:\\test.txt -Raw\r\n\r\n```",
  "closed_at": "2019-05-31T14:48:35Z",
  "comments": [
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Yeah this is what you can call by design. Because `Get-Content` passes items along the pipeline one at a time, it's not going to be done reading the file by the time the `Out-File` cmdlet is called. In fact, the way the cmdlet is designed, the file handle isn't released until the pipeline is completed, so you can't read _and_ write to a file in the same pipeline.\r\n\r\nThe short solution is to force all the input to be pulled before sending it along the pipe; this can be done pretty simply with some parentheses:\r\n\r\n```powershell\r\n$Path = 'C:\\Test.txt'\r\n'A' | Set-Content -Path $Path\r\n(Get-Content -Path $Path -Raw) | ForEach-Object { $_ + 'B' } | Set-Content -Path $Path\r\nGet-Content -Path $Path -Raw\r\n```\r\n\r\nGiven the behaviour of `-Raw` I don't see why it wouldn't be able to release the file handle early in that particular situation, since it's reading the whole file in one go anyway. That would be a possible feature enhancement, I would think. \ud83d\ude42 ",
      "created_at": "2019-05-31T12:36:05Z",
      "updated_at": "2019-05-31T12:36:05Z"
    },
    {
      "author": "SeeminglyScience",
      "author_association": "COLLABORATOR",
      "body": "@vexx32 This is a little off topic but this is a great example of why it'd be nice if commands were disposed directly after `EndProcessing`.  You could place an `Out-String` before `Set-Content` and the whole thing would just work.",
      "created_at": "2019-05-31T13:06:57Z",
      "updated_at": "2019-05-31T13:07:08Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@SeeminglyScience Good point! I guess this will be a bit easier moving forward. I have a couple PRs to put in first, though. \ud83d\ude04 ",
      "created_at": "2019-05-31T14:29:51Z",
      "updated_at": "2019-05-31T14:29:51Z"
    },
    {
      "author": "mkht",
      "author_association": "NONE",
      "body": "Thanks @vexx32\r\nI understood about the behavior. I appreciate your good solution. \ud83d\ude04 \r\nMay I close this issue ?",
      "created_at": "2019-05-31T14:43:38Z",
      "updated_at": "2019-05-31T14:43:38Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "Of course! \ud83d\ude04 ",
      "created_at": "2019-05-31T14:47:10Z",
      "updated_at": "2019-05-31T14:47:22Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@vexx32 Please open new tracking issue if you plan to pull a fix.",
      "created_at": "2019-06-28T13:07:33Z",
      "updated_at": "2019-06-28T13:07:33Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@iSazonov a true fix is pretty dicey but some of the changes necessary for #9900 will make this much less tricky to handle, as the file handle should be closed as soon as the command is done with its output. \r\n\r\nI'll have to see if that actually is the case or there needs to be changes in `Get-Content` specifically. I'll open a tracking issue. \ud83d\udc4d ",
      "created_at": "2019-06-28T13:16:54Z",
      "updated_at": "2019-06-28T13:16:54Z"
    }
  ],
  "created_at": "2019-05-31T12:00:43Z",
  "number": 9782,
  "state": "closed",
  "title": "Can not overwrite files in the pipeline. Is it by design?",
  "updated_at": "2019-06-28T13:16:54Z"
}