{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12258",
  "author": "AjayKMehta",
  "body": "# Summary\r\n\r\nIt would be great if an optional **Prefix** (dynamic?) parameter could be added to `Select-Object` when **ExpandProperty** and **Property** are specified to avoid errors when there are duplicate property names. \r\n\r\n# Problem\r\n\r\n```powershell\r\nGet-Module -ListAvailable | \r\n   select -Property Name -ExpandProperty RequiredModules\r\n```\r\n\r\nThis results in an error:\r\n\r\n> **Select-Object: The property cannot be processed because the property \"Name\" already exists.**\r\n\r\n\r\n# Existing Solution\r\n\r\nThe workaround is simple:\r\n\r\n```powershell\r\nGet-Module -ListAvailable | \r\n   select -Property @{L = 'Module'; E = {$_.Name}} -ExpandProperty RequiredModules  |\r\n   select Module, Name, Version\r\n```\r\n\r\n(**NOTE:** I added second `select` to reduce clutter in output)\r\n\r\n**Output:**\r\n\r\n```shell\r\nModule                     Name              Version\r\n------                     ----              -------\r\nPowerShellGet              PackageManagement 1.4.4\r\nTerminal-Icons             Configuration\r\n```\r\n\r\nThis is fine IMHO if there is only 1 duplicate. It would be real annoying if there are several properties that have the same name.\r\n\r\n# Proposed Solution\r\n\r\nAdd a **Prefix** parameter to `Select-Object`:\r\n\r\n```powershell\r\nGet-Module -ListAvailable | \r\n   select -Property Name -ExpandProperty RequiredModules -Property -Prefix 'Module'  |\r\n   select ModuleName, Name, Version\r\n```\r\n\r\n**Output:**\r\n\r\n```shell\r\nModuleName  Name  Version\r\n------                ----      -------\r\nPowerShellGet   PackageManagement 1.4.4\r\nTerminal-Icons   Configuration\r\n```\r\n\r\nAdding a prefix has an added benefit that you can distinguish between properties resulting from **ExpandProperty** and **Property** parameters.",
  "closed_at": null,
  "comments": [
    {
      "author": "scriptingstudio",
      "author_association": "NONE",
      "body": "@AjayKMehta what do we do if \\<prefix>\\<propertyname> already exists?\r\n",
      "created_at": "2020-04-05T06:54:37Z",
      "updated_at": "2020-04-05T06:54:37Z"
    },
    {
      "author": "AjayKMehta",
      "author_association": "NONE",
      "body": "@scriptingstudio Throw an exception",
      "created_at": "2020-04-05T16:48:12Z",
      "updated_at": "2020-04-05T16:48:12Z"
    },
    {
      "author": "scriptingstudio",
      "author_association": "NONE",
      "body": "It is called recursion: prefix of prefix of prefix... exception of exception of exception...",
      "created_at": "2020-04-05T18:51:45Z",
      "updated_at": "2020-04-05T18:51:45Z"
    },
    {
      "author": "vexx32",
      "author_association": "COLLABORATOR",
      "body": "@scriptingstudio gonna have to explain what you mean there. \r\n\r\n@AjayKMehta I'm not very clear on what the expected behavior is. Are you suggesting the prefix only be applied in the case of a property name collision?",
      "created_at": "2020-04-06T12:00:39Z",
      "updated_at": "2020-04-06T12:00:39Z"
    },
    {
      "author": "scriptingstudio",
      "author_association": "NONE",
      "body": "To avoid name conflict and terminating errors I would suggest switch `-NoClobber` to exclude duplicates as cmdlet `import-module` does.",
      "created_at": "2020-04-06T13:56:10Z",
      "updated_at": "2020-04-06T13:56:10Z"
    },
    {
      "author": "AjayKMehta",
      "author_association": "NONE",
      "body": "@vexx32 No, the prefix should always be applied if specified. Throw an exception if **\\<Prefix\\>\\<PropertyName\\>** already exists.\r\n",
      "created_at": "2020-04-06T15:01:12Z",
      "updated_at": "2020-04-06T15:01:12Z"
    },
    {
      "author": "AjayKMehta",
      "author_association": "NONE",
      "body": "`-NoClobber` helps to **exclude** duplicates but my stated problem is to **include** properties with the same name without error. Also, if you know *beforehand*, there is a property name conflict as there would be when dealing with a recursive data type, it would be much simpler to omit the property name from `-Property` parameter than specify `-NoClobber`.\r\n\r\nIf you want to include duplicates (which I do), `-NoClobber` doesn't change the status quo. \r\n\r\nCompare\r\n\r\n```powershell\r\nGet-Module -ListAvailable | \r\n   select -Property Name, Version -ExpandProperty RequiredModules -Prefix 'Module'  |\r\n   select ModuleName, ModuleVersion, Name, Version\r\n```\r\n\r\nto\r\n\r\n```powershell\r\nGet-Module -ListAvailable | \r\n   select -Property @{L = 'ModuleName'; E = {$_.Name}}, @{L = 'ModuleVersion'; E = {$_.Version}} -ExpandProperty RequiredModules -NoClobber |\r\n   select ModuleName, ModuleVersion, Name, Version\r\n```\r\n",
      "created_at": "2020-04-06T16:12:06Z",
      "updated_at": "2020-04-06T16:12:06Z"
    }
  ],
  "created_at": "2020-04-05T04:34:01Z",
  "labels": [
    "Issue-Enhancement",
    "WG-Cmdlets-Utility"
  ],
  "number": 12258,
  "state": "open",
  "title": "Add Prefix dynamic parameter to Select-Object when ExpandProperty and Property are specified.",
  "updated_at": "2020-04-06T16:12:06Z"
}