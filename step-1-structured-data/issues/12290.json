{
  "_url": "https://github.com/PowerShell/PowerShell/issues/12290",
  "author": "tats-u",
  "body": "# Summary of the new feature/enhancement\r\n\r\n<!-- \r\nA clear and concise description of what the problem is that the new feature would solve.\r\nTry formulating it in user story style (if applicable):\r\n'As a user I want X so that Y.' with X being the being the action and Y being the value of the action.\r\n-->\r\n\r\nWe used to be able to save images in the clipboard as files by following in Windows Powershell 5:\r\n\r\n```powershell\r\n(gcb -format image).save(\"foo.png\")\r\n```\r\n\r\nAs you know, `Get-Clipboard` went somewhere in PowerShell Core 6 but came back in 7.  The remaining problem is that only text is supported and we can't fetch images (and audio).  ~~Windows lacks the feature to save an image in the clipboard as a file.  I don't want to run Paint 3D or something, paste one, and save it.~~ (I found we can paste a medium in clipboard to Explorer)\r\nPowerShell 7 is said to be compatible with 5, but this absence gives me an opportunity to run the legacy PowerShell 5.\r\n\r\n# Proposed technical implementation details (optional)\r\n\r\n<!-- \r\nA clear and concise description of what you want to happen.\r\nConsider providing an example PowerShell experience with expected result.\r\n-->\r\n",
  "closed_at": null,
  "comments": [
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "If I remember right it was a design conclusion to have consistent behavior over all supported systems but we do not consider such scenario.\r\n\r\n/cc @SteveL-MSFT @mklement0 ",
      "created_at": "2020-04-11T07:52:42Z",
      "updated_at": "2020-04-11T07:52:42Z"
    },
    {
      "author": "thedavecarroll",
      "author_association": "NONE",
      "body": "I would like to add that a method capable of outputting the image into different size chunks, such as the following, would be a welcomed addition.\r\n\r\n```powershell\r\n$MediaFileInfo = Get-ChildItem $Path\r\n$BufferSize = 900000\r\n$Buffer = [Byte[]]::new($BufferSize)\r\n$Reader = [System.IO.File]::OpenRead($MediaFileInfo.FullName)\r\n$Media = [ArrayList]::new()\r\ndo {\r\n    $BytesRead = $Reader.Read($Buffer, 0 , $BufferSize)\r\n    $null = $Media.Add([Convert]::ToBase64String($Buffer, 0, $BytesRead))\r\n} while ($BytesRead -eq $BufferSize)\r\n$Reader.Dispose()\r\n```\r\n\r\nPerhaps something like `ConvertToBase64()` with a default or configurable buffer size?\r\n\r\nThank you,\r\nDave\r\n",
      "created_at": "2020-06-05T05:57:31Z",
      "updated_at": "2020-06-05T05:57:31Z"
    }
  ],
  "created_at": "2020-04-10T02:36:12Z",
  "number": 12290,
  "state": "open",
  "title": "Feature Request:  Restore -Format option in Get-Clipboard",
  "updated_at": "2020-06-05T05:57:32Z"
}