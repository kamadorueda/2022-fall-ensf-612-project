{
  "_url": "https://github.com/PowerShell/PowerShell/issues/16292",
  "author": "wm2015email",
  "body": "### Prerequisites\r\n\r\n- [X] Write a descriptive title.\r\n- [X] Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- [X] Search the existing issues.\r\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\r\n\r\n### Steps to reproduce\r\n\r\n\r\n    $s = New-PSSession -computer \"remotecomputer1\"  \r\n    Enter-PSSesion -Session $s    #<<-Why not at a new powershell flag  here called \"-wait\"??\r\n    # I assume at this point there are two thread running...\r\n    # one thread for the main script, and the other for PSSession\r\n    #  Wait-PSSession -Session $s <== THE MISSING COMMAND THAT IS NONE EXISTENT IN POWERSHELL\r\n    # Now the main thread falls though and doesn't wait!!!!! because there's no command to stop this????\r\n    write-host \"Shouldn't get here until user types \"exit\" in session on \"remotecomputer1\"\r\n    exit\r\n\r\nIf this isn't a bug, then it needs to have an example of how to \"Wait-PSSession  -Session\" is implemented in the PowerShell documention for \"Enter-PSSession -Session\" command.\r\n\r\nWhy this matters?  Because what happens if I call this from WSL:\r\n\r\n    $ powershell.exe -nologo -File MyRemoting.ps1\r\n\r\nIt kills the interactive session because it doesn't block the main thread until the interactive session remoting session finishes.\r\n\r\nI can get around this by doing\r\n\r\n    $ powershell.exe -nologo -noexit -File MyRemoting.ps1\r\n\r\nBut, then i need to type exit everytime to get out of powershell also!  Then, I want to throw away all my windows computers and install linux instead.\r\n\r\n### Expected behavior\r\n\r\n```console\r\nA command for block the execution of \"Enter-PSSession -Session\".. but it doesn't exist!\r\n```\r\n\r\n\r\n### Actual behavior\r\n\r\n```console\r\nEnter-PSSession falls through as non-blocking and powershell keeps running the main powershell thread... (Bad/Wrong behavior)\r\n```\r\n\r\n\r\n### Error details\r\n\r\n```console\r\nNone...\r\n```\r\n\r\n\r\n### Environment data\r\n\r\n```powershell\r\nNone.\r\n```\r\n\r\n\r\n### Visuals\r\n\r\nNone.",
  "closed_at": "2021-11-02T03:08:31Z",
  "comments": [
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": ">It kills the interactive session ...\r\n\r\nThis repro description is not very clear but it sounds like the command run in the remote interactive session, `$ powershell.exe -nologo -File MyRemoting.ps1`, is causing the remote session to end.  If this is the case, then this only happens if there is a unrecoverable error in the remote session or the remote session host process crashes.  You can look at the session object on the client for more information:\r\n\r\n```powershell\r\nPS C:\\> $s\r\n\r\n Id Name            Transport ComputerName    ComputerType    State         ConfigurationName     Availability\r\n -- ----            --------- ------------    ------------    -----         -----------------     ------------\r\n  3 Runspace2       SSH       localhost       RemoteMachine   Broken        DefaultShell                  None\r\n\r\nPS C:\\> $s.Runspace.RunspaceStateInfo.Reason\r\n\r\nErrorCode                   : 0\r\nTransportMessage            :\r\nErrorRecord                 : The SSH client session has ended with error message: The SSH transport process has\r\n                              abruptly terminated causing this remote session to break.\r\nWasThrownFromThrowStatement : False\r\n...\r\n```\r\n",
      "created_at": "2021-10-22T16:33:09Z",
      "updated_at": "2021-10-22T16:33:09Z"
    },
    {
      "author": "jborean93",
      "author_association": "COLLABORATOR",
      "body": "@PaulHigin I believe the issue is OP wants `Enter-PSSession` to act like a blocking command when run from the script. That is they want to have a script that opens the PSSession and waits until the user has explicitly exited it before the script continues. As mentioned they can do\r\n\r\n```\r\npowershell.exe -nologo -noexit -File MyRemoting.ps1\r\n```\r\n\r\nBut that will still exit the PSSession and move onto the next comand or wait for further input once it reaches the end.",
      "created_at": "2021-10-22T21:44:34Z",
      "updated_at": "2021-10-22T21:44:34Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "Oh I see.  That is an incorrect use of `Enter-PSSession`.  It extends the client interactive shell to a remote session, and is intended for interactive use only.  For non-interactive script you should use `Invoke-Command` on a remote session.",
      "created_at": "2021-10-22T22:06:49Z",
      "updated_at": "2021-10-22T22:06:49Z"
    },
    {
      "author": "mrmeszaros",
      "author_association": "NONE",
      "body": "@PaulHigin I have a pretty similar use case, where I want to acquire an interactive session in the middle of a script.\r\nWhat other means exist to achieve that, beside `Enter-PSSession`?\r\n\r\nIn detail I have a utility script that sets up a remote session, and I would like to have the tear-down part after it. Like\r\n\r\n```powershell\r\n# Set up parts\r\n# ...\r\n# Enter the interactive session, command execution is yielded to the user (me)\r\nEnter-PSSession $pss\r\n# Enter-PSSession does not return, until exit/Exit-PSSession is called\r\n# Tear down that I have to do manually currently\r\n# finally exit pwsh\r\nexit\r\n```\r\n\r\nI suggest, that if it is unfeasible to implement a blocking way to call `Enter-PSSession` (with a flag like `-Wait` or `-Block` or `-Interactive`), it could put up a warning that calling the command from a script will not result in what a user could expect.",
      "created_at": "2021-11-01T21:04:04Z",
      "updated_at": "2021-11-01T21:04:04Z"
    },
    {
      "author": "PaulHigin",
      "author_association": "COLLABORATOR",
      "body": "Why do you want to convert a running script into an interactive session?  You can have PowerShell prompt for input, if that is needed.  But currently the only way for a running script to allow interactive access to the session is through the script debugger.\r\n\r\nIf you really need to do this, you can add a `Wait-Debugger` command in your script where you want the script to stop running and break into the script debugger, where you can have interactive access to the session.  But you need to be careful because if there is no terminal the script will wait indefinitely for a debugger attach.",
      "created_at": "2021-11-01T22:41:53Z",
      "updated_at": "2021-11-01T22:50:13Z"
    },
    {
      "author": "mrmeszaros",
      "author_association": "NONE",
      "body": "I have a pretty special use case.\r\nI want to connect to windows machines from a linux machine in a single step. There are many machines, so I have populated my `/etc/hosts` file for shell autocompletion purposes.\r\n\r\n```fish\r\n#!/usr/bin/env fish\r\nfunction pwsh-remote --argument host --description 'Open Powershell to remote...'\r\n  pwsh -NoExit -Command \"\r\n  \\$creds = Get-Credential -UserName the-doctor\r\n  \\$pss = New-PSSession -ComputerName $host -Authentication Negotiate -Credential \\$creds\r\n  Enter-PSSession \\$pss\r\n  # This should run after exiting the remote and exit the main pwsh\r\n  exit\r\n  \"\r\nend\r\ncomplete -c pwsh-remote -x -d \"Remote\" -a \"(__fish_complete_user_at_hosts)\"\r\n```\r\n\r\nI have tried using `Register-EngineEvent` with `-SourceIdentifier PowerShell.Exiting` (and `-Forward` on the remote) hoping to catch the event of exiting the remote PSSession but with no avail.\r\n(Sadly [my stackoverflow question](https://stackoverflow.com/questions/69782883/how-to-forward-powershell-exiting-event-when-remoting-on-linux) did not provide a satisfying answer yet.)\r\n\r\nBasically, I would like to have callbacks on exiting the remote session.\r\nNow I know this is an issue tracker and no Q/A forum so should it bother You, please nudge me towards the right forum/person?",
      "created_at": "2021-11-03T15:10:18Z",
      "updated_at": "2021-11-03T15:12:01Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@mrmeszaros Please open new question in our Discussions.",
      "created_at": "2021-11-03T18:30:03Z",
      "updated_at": "2021-11-03T18:30:03Z"
    },
    {
      "author": "kasini3000",
      "author_association": "NONE",
      "body": "hi mrm:\r\n[kasini3000](https://gitee.com/chuanjiao10/kasini3000)    \r\nwin,linux devops automation batch script framework.(It is similar to ansible) \r\nOpen source, free, cross-platform \r\n\r\nEnglish manual: https://gitee.com/chuanjiao10/kasini3000/blob/master/docs/kasini3000_manual.xlsx\r\nscript dependencies \u3010c:\\ProgramData\\kasini3000\\nodelist.csv\u3011\r\n\r\n1 Multi-process batch execution. k-commit.ps1\r\n2 Multi-threaded batch execution. k-commit-rs.ps1 #need powershell module poshrsjob\r\nsetup:\r\ncopy files from\r\nc:\\ProgramData\\kasini3000\\lib\\kasini3000\\ProgramFiles_WindowsPowerShell_Modules\r\nto\r\n$psmodulepath\r\n\r\n----\r\nc:\\ProgramData\\kasini3000\\k_run_ip_port_l2w_user_pwd.ps1\r\nor \r\n/etc/kasini3000/k_run_ip_port_l2w_user_pwd.ps1 #linux \r\nthis script not dependencies \u3010c:\\ProgramData\\kasini3000\\nodelist.csv\u3011,but need parameter username ,password.\r\n\r\n**From linux master to win node, no support is provided.**\n\n<blockquote><img src=\"https://gitee.com/static/images/logo_themecolor.png\" width=\"48\" align=\"right\"><div>Gitee</div><div><strong><a href=\"http://gitee.com/chuanjiao10/kasini3000/blob/master/docs/kasini3000_manual.xlsx\">docs/kasini3000_manual.xlsx \u00b7 chuanjiao10/kasini3000 - Gitee.com</a></strong></div><div>\u7c7b\u4f3c\u4e8ePuppet\uff0cAnsible\uff0cpipeline\u3002\u53f7\u79f0\u6bd4ansible\u597d10\u500d\uff0c\u5177\u6709\u6279\u91cf\u8fdc\u7a0b\u63a8\u9001\u811a\u672c\uff0c\u6267\u884c\u811a\u672c\uff0c\u8fdc\u7a0b\u4f20\u9012\u4ee3\u7801\u5757\uff0c\u5b9a\u65f6\u6267\u884c\u7684\uff0cdevops\u8fd0\u7ef4\u5de5\u5177\u3002</div></blockquote>",
      "created_at": "2021-12-02T05:49:19Z",
      "updated_at": "2021-12-02T05:49:23Z"
    }
  ],
  "created_at": "2021-10-22T14:13:22Z",
  "labels": [
    "Issue-Question",
    "Resolution-Answered",
    "WG-Remoting",
    "Needs-Repro"
  ],
  "number": 16292,
  "state": "closed",
  "title": "There's no way for \"Enter-PSSesion -Session\" to block the calling process until user types \"exit\"",
  "updated_at": "2021-12-02T05:49:23Z"
}