{
  "_url": "https://github.com/PowerShell/PowerShell/issues/17827",
  "author": "robert-matusewicz",
  "body": "### Prerequisites\r\n\r\n- [X] Write a descriptive title.\r\n- [X] Make sure you can repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- [X] Search the existing issues.\r\n- [X] Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- [X] Refer to [Differences between Windows PowerShell 5.1 and PowerShell](https://docs.microsoft.com/powershell/scripting/whats-new/differences-from-windows-powershell).\r\n\r\n### Steps to reproduce\r\n\r\nI think I found a problem installing the npm package with at least X version in PowerShell.\r\n\r\nWhen you run this command in PowerShell 7.2.5 or PowerShell 7.3.0-preview.6:\r\n`npm install \"express@>=5.0.0-beta.1\"`\r\n\r\nInstead of installing express with at least 5.0.0-beta.1 version installs the latest stable version (4.18.1) and redirects the output to a file named \"5.0.0-beta.1\"\r\n\r\nI also tested that in cmd, and it works as expected - express@5.0.0-beta.1 is installed.\r\n\r\n### Expected behaviour\r\n\r\n```console\r\n`npm install \"express@>=5.0.0-beta.1\"` should install express@5.0.0-beta.1 or newer version\r\n```\r\n\r\n\r\n### Actual behaviour\r\n\r\n```console\r\n`npm install \"express@>=5.0.0-beta.1\" installs the latest stable version of express (express@4.18.1 at the time of writing this text)\r\n`npm install \"express@>=5.0.0-beta.1\" creates a file \"5.0.0-beta.1\" with the content of npm install output\r\n```\r\n\r\n\r\n### Error details\r\n\r\n```console\r\nIn this scenario, PowerShell does not return any error\r\n```\r\n\r\n\r\n### Environment data\r\n\r\n```powershell\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.5\r\nPSEdition                      Core\r\nGitCommitId                    7.2.5\r\nOS                             Microsoft Windows 10.0.22000\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\nFor preview:\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.3.0-preview.6\r\nPSEdition                      Core\r\nGitCommitId                    7.3.0-preview.6\r\nOS                             Microsoft Windows 10.0.22000\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\n\r\n### Visuals\r\n\r\n_No response_",
  "closed_at": "2022-08-03T09:39:47Z",
  "comments": [
    {
      "author": "robert-matusewicz",
      "author_association": "NONE",
      "body": "I think I was too fast with raising the issue here. Yarn install works as expected.\r\n\r\n`yarn add express@>=5.0.0-beta.1`\r\n\r\ninstalls express@5.0.0-beta.1",
      "created_at": "2022-08-03T09:29:49Z",
      "updated_at": "2022-08-03T09:29:49Z"
    },
    {
      "author": "robert-matusewicz",
      "author_association": "NONE",
      "body": "Closing at that was npm issue. Seems to be fixed in npm@18.5.1",
      "created_at": "2022-08-03T09:39:47Z",
      "updated_at": "2022-08-03T09:39:47Z"
    }
  ],
  "created_at": "2022-08-03T09:27:46Z",
  "labels": [],
  "number": 17827,
  "state": "closed",
  "title": "'npm install \"package-name@>=version\"' redirect npm install output to file named 'version'",
  "updated_at": "2022-08-03T09:39:47Z"
}