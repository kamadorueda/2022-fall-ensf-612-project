{
  "_url": "https://github.com/PowerShell/PowerShell/issues/5462",
  "author": "chunqingchen",
  "body": "This is to resolve #3730 \r\n\r\nWhen -LiteralPath is specified, filter is never applied. The fix is to adding filter even if user set -LiteralPath as true\r\n\r\nBefore fix:\r\nGet-childitem -LiteralPath $PSHOME -exclude * \r\nwill return all the files under $pshome as filter is not working\r\n\r\nAfter fix:\r\nInclude/Exclude filters work as expected.\r\n",
  "closed_at": "2018-03-02T22:34:54Z",
  "comments": [
    {
      "author": "chunqingchen",
      "author_association": "CONTRIBUTOR",
      "body": "@iSazonov Is it good to go?",
      "created_at": "2017-11-20T23:47:23Z",
      "updated_at": "2017-11-20T23:47:23Z"
    },
    {
      "author": "iSazonov",
      "author_association": "COLLABORATOR",
      "body": "@chunqingchen I have one comment above https://github.com/PowerShell/PowerShell/pull/5462#discussion_r151317412\r\n>I expect a symmetric in tests. Previous test use -Path. If we replace -Path with '-LiteralPath' we get symmetric test. This makes it easy to understand these tests. The test with $PSHOME could be additional test. But what do it really test? What is difference? If it test another code path(s) it is better to be explicit and create a test directory tree for these cases - $PSHOME doesn't make it clear which code path we're really checking.",
      "created_at": "2017-11-21T08:52:56Z",
      "updated_at": "2017-11-21T08:52:56Z"
    }
  ],
  "created_at": "2017-11-15T14:35:17Z",
  "number": 5462,
  "state": "closed",
  "title": "get-childitem -LiteralPath should accept 'Include' or 'Exclude' filter",
  "updated_at": "2018-03-02T22:34:54Z"
}