{
  "_url": "https://github.com/PowerShell/PowerShell/issues/10729",
  "author": "jiasli",
  "body": "# Steps to reproduce\r\n\r\nWrite a Python script color.py using [colorama](https://github.com/tartley/colorama):\r\n\r\n```py\r\nimport sys\r\nfrom colorama import Fore, init, deinit\r\n \r\ninit()\r\nsys.stderr.write(Fore.RED + \"something\" + Fore.RESET)\r\nprint(\"deinit\")\r\ndeinit()\r\nprint(\"python end\")\r\n\r\n```\r\nRun in VS Code PowerShell terminal (this also happens with PowerShell's default terminal):\r\n```powershell\r\npython .\\color.py \r\n$a = python .\\color.py \r\n```\r\n\r\n# Expected behavior\r\n\r\nColor is reset correctly. \r\n\r\n# Actual behavior\r\n\r\nWithout variable assignment, it works as expected. But with `$a=`, PowerShell can\u2019t reset its color and the color is set to black instead.\r\n\r\n![Screenshot_25](https://user-images.githubusercontent.com/4003950/66366994-ebc61580-e9c4-11e9-9764-8ef29a3257b9.png)\r\n\r\n# Environment data\r\n\r\n```powershell\r\n$PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.2.3\r\nPSEdition                      Core\r\nGitCommitId                    6.2.3\r\nOS                             Microsoft Windows 10.0.18362 \r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0\u2026}        \r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
  "closed_at": "2019-10-11T17:00:28Z",
  "comments": [
    {
      "author": "SteveL-MSFT",
      "author_association": "MEMBER",
      "body": "@jiasli it seems that the behavior is consistent between PowerShell and cmd and that python is setting the console foregroundcolor.  In which case, it seems that the shell should not simply set it back.\r\n\r\n```cmd\r\npython color.py > out\r\n```\r\n\r\nWhen redirecting either in PowerShell or cmd, the foreground color (as well as the background color) is changed to black.  A user using a native command that changes the console colors should be respected.  Looks like colorama is calling the win32 api SetConsoleTextAttribute and probably not setting it back correctly.",
      "created_at": "2019-10-10T16:51:24Z",
      "updated_at": "2019-10-10T16:51:24Z"
    },
    {
      "author": "msftbot[bot]",
      "author_association": "NONE",
      "body": "This issue has been marked as external and has not had any activity for **1 day**. It has been be closed for housekeeping purposes.",
      "created_at": "2019-10-11T17:00:27Z",
      "updated_at": "2019-10-11T17:00:27Z"
    }
  ],
  "created_at": "2019-10-08T04:16:12Z",
  "number": 10729,
  "state": "closed",
  "title": "With variable assignment, PowerShell can\u2019t reset color when colored message appears in stderr",
  "updated_at": "2019-10-11T17:00:28Z"
}