[
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "Perhaps related: #9293\r\n\r\n# Steps to reproduce\r\n\r\nRun the following on Windows (works analogously on Unix):\r\n\r\n```powershell\r\nSet-Location Microsoft.PowerShell.Core\\FileSystem::C:\\Windows\r\n\"$PWD\" | Should -Be C:\\Windows\r\n```\r\n\r\nNote: A real-life scenario in which this could occur is if you pipe the output from a `New-Item -Type Directory` call to `Set-Location`, e.g.:\r\n\r\n```powershell\r\nNew-Item -Type Directory $HOME -Force | Set-Location\r\n```\r\n\r\n# Expected behavior\r\n\r\nThe test should pass.\r\n\r\n# Actual behavior\r\n\r\nThe test fails:\r\n\r\n```none\r\nExpected strings to be the same, but they were different.\r\nExpected length: 10\r\nActual length:   48\r\nStrings differ at index 0.\r\nExpected: 'C:\\Windows'\r\nBut was:  'Microsoft....'\r\n```\r\n\r\nThat is, `$PWD` stringified (via `.Path`) to `'Microsoft.PowerShell.Core\\FileSystem::C:\\Windows'`, not the expected `C:\\Windows`, as also reflected in the prompt string afterwards (via `$executionContext.SessionState.Path.CurrentLocation`).\r\n\r\nWhile `$PWD.ProviderPath` does reflect the _unprefixed_ (but always native) fileysystem path, relying on `\"$PWD\"` or `$PWD.Path` to do that too is very common.\r\n\r\n# Environment data\r\n\r\n```none\r\nPowerShell Core 7.0.0-preview.3\r\n```\r\n",
    "closed_at": null,
    "comments": 17,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10522/comments",
    "created_at": "2019-09-12T17:25:45Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10522/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10522",
    "id": 492934305,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "ideally support can be provided via other mechanisms, but sometimes folks do open an issue to get a",
        "id": 311043053,
        "name": "Issue-Question",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNTM=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Question"
      },
      {
        "color": "5319e7",
        "default": false,
        "description": "cmdlets in the Microsoft.PowerShell.Management module",
        "id": 552752388,
        "name": "WG-Cmdlets-Management",
        "node_id": "MDU6TGFiZWw1NTI3NTIzODg=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/WG-Cmdlets-Management"
      },
      {
        "color": "5319e7",
        "default": false,
        "description": "specific to the FileSystem provider",
        "id": 3070094586,
        "name": "Area-FileSystem-Provider",
        "node_id": "MDU6TGFiZWwzMDcwMDk0NTg2",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Area-FileSystem-Provider"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10522/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0OTI5MzQzMDU=",
    "number": 10522,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10522/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10522/timeline",
    "title": "Passing a provider-name-prefixed path to Set-Location makes $PWD retain the prefix",
    "updated_at": "2022-09-19T22:40:53Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10522",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "# Steps to reproduce\r\n\r\n```powershell\r\nNew-Item -Type Directory M:\\Test\\New | Set-Location -Path\r\nNew-Item -Type File a, b, c, d, e | Out-Null\r\n$a = [PSCustomObject]@{ Path = '*' }\r\n$b = [PSCustomObject]@{ LiteralPath = 'c' }\r\n($a, $b | Get-Item | % Name) -join ', '\r\n($b, $a | Get-Item | % Name) -join ', '\r\n```\r\n\r\n# Expected behavior\r\n\r\n```none\r\na, b, c, d, e, c\r\nc, a, b, c, d, e\r\n```\r\n\r\n# Actual behavior\r\n\r\n```none\r\na, b, c, d, e, c\r\n#Error: Cannot find path '*' because it does not exist.\r\nc\r\n```\r\n\r\n# Environment data\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-preview.3\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-preview.3-37-gf69f30ba49c13ddd601724b35634bf4d1f44e31d\r\nOS                             Microsoft Windows 10.0.18362\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0, 5.0, 5.1.10032.0, 6.0.0, 6.1.0, 6.2.0, 7.0.0-preview.3}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
    "closed_at": null,
    "comments": 1,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10521/comments",
    "created_at": "2019-09-12T15:39:31Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10521/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10521",
    "id": 492884855,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "Issue has been identified as a bug in the product",
        "id": 311043048,
        "name": "Issue-Bug",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNDg=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Bug"
      },
      {
        "color": "5319e7",
        "default": false,
        "description": "cmdlets in the Microsoft.PowerShell.Management module",
        "id": 552752388,
        "name": "WG-Cmdlets-Management",
        "node_id": "MDU6TGFiZWw1NTI3NTIzODg=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/WG-Cmdlets-Management"
      },
      {
        "color": "5319e7",
        "default": false,
        "description": "",
        "id": 2694193862,
        "name": "WG-Engine-ParameterBinder",
        "node_id": "MDU6TGFiZWwyNjk0MTkzODYy",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/WG-Engine-ParameterBinder"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10521/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0OTI4ODQ4NTU=",
    "number": 10521,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10521/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10521/timeline",
    "title": "Get-Item does not resolve wildcard patterns after seeing `LiteralPath` from previous pipeline item",
    "updated_at": "2021-12-01T09:16:05Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10521",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/17184058?v=4",
      "events_url": "https://api.github.com/users/PetSerAl/events{/privacy}",
      "followers_url": "https://api.github.com/users/PetSerAl/followers",
      "following_url": "https://api.github.com/users/PetSerAl/following{/other_user}",
      "gists_url": "https://api.github.com/users/PetSerAl/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/PetSerAl",
      "id": 17184058,
      "login": "PetSerAl",
      "node_id": "MDQ6VXNlcjE3MTg0MDU4",
      "organizations_url": "https://api.github.com/users/PetSerAl/orgs",
      "received_events_url": "https://api.github.com/users/PetSerAl/received_events",
      "repos_url": "https://api.github.com/users/PetSerAl/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/PetSerAl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PetSerAl/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/PetSerAl"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "# Steps to reproduce\r\n```\r\n1. Install PowerShell 6.2.2 on Windows 10\r\n(Download  URL: **PowerShell-6.2.2-win-x64.msi**\r\n https://github.com/PowerShell/PowerShell/releases/tag/v6.2.2)\r\n2. Run Update-Help in the PS6 console (Administrator mode)\r\nAlternatively I tried **Update-Help -Force**  also, but i got the same error\r\n```\r\n# Expected behavior\r\n```\r\nSuccessful Help update\r\n```\r\n\r\n# Actual behavior\r\n\r\n```\r\nReceived the following error\r\n```\r\n![image](https://user-images.githubusercontent.com/29583197/64778711-fcc46800-d579-11e9-872d-e01cbb8881ba.png)\r\n\r\n\r\n# Environment data\r\n\r\n![image](https://user-images.githubusercontent.com/29583197/64778313-83c51080-d579-11e9-85f3-e27922e8037c.png)\r\n\r\n\r\n\r\n",
    "closed_at": "2019-09-13T07:01:15Z",
    "comments": 3,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10520/comments",
    "created_at": "2019-09-12T10:58:54Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10520/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10520",
    "id": 492734152,
    "labels": [
      {
        "color": "ffffff",
        "default": false,
        "description": "The issue is a duplicate.",
        "id": 311043049,
        "name": "Resolution-Duplicate",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNDk=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Resolution-Duplicate"
      },
      {
        "color": "fc2929",
        "default": false,
        "description": "ideally support can be provided via other mechanisms, but sometimes folks do open an issue to get a",
        "id": 311043053,
        "name": "Issue-Question",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNTM=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Question"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10520/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0OTI3MzQxNTI=",
    "number": 10520,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10520/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10520/timeline",
    "title": "Failed to update Help",
    "updated_at": "2019-09-13T07:01:15Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10520",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/29583197?v=4",
      "events_url": "https://api.github.com/users/jamessingh007/events{/privacy}",
      "followers_url": "https://api.github.com/users/jamessingh007/followers",
      "following_url": "https://api.github.com/users/jamessingh007/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamessingh007/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jamessingh007",
      "id": 29583197,
      "login": "jamessingh007",
      "node_id": "MDQ6VXNlcjI5NTgzMTk3",
      "organizations_url": "https://api.github.com/users/jamessingh007/orgs",
      "received_events_url": "https://api.github.com/users/jamessingh007/received_events",
      "repos_url": "https://api.github.com/users/jamessingh007/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jamessingh007/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamessingh007/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jamessingh007"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": {
      "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
      "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
      "followers_url": "https://api.github.com/users/TravisEz13/followers",
      "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
      "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/TravisEz13",
      "id": 10873629,
      "login": "TravisEz13",
      "node_id": "MDQ6VXNlcjEwODczNjI5",
      "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
      "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
      "repos_url": "https://api.github.com/users/TravisEz13/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/TravisEz13"
    },
    "assignees": [
      {
        "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
        "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
        "followers_url": "https://api.github.com/users/TravisEz13/followers",
        "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
        "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/TravisEz13",
        "id": 10873629,
        "login": "TravisEz13",
        "node_id": "MDQ6VXNlcjEwODczNjI5",
        "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
        "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
        "repos_url": "https://api.github.com/users/TravisEz13/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/TravisEz13"
      }
    ],
    "author_association": "MEMBER",
    "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nUpdate to use the latest version of PowerShell.Native module\r\n\r\n## PR Context\r\n\r\n<!-- Provide a little reasoning as to why this Pull Request helps and why you have opened it. -->\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
    "closed_at": "2019-09-12T21:39:47Z",
    "comments": 2,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10519/comments",
    "created_at": "2019-09-11T23:14:52Z",
    "draft": false,
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10519/events",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10519",
    "id": 492509539,
    "labels": [
      {
        "color": "fbca04",
        "default": false,
        "description": "Indicates that a PR should be marked as a build or packaging change in the Change Log",
        "id": 1126735745,
        "name": "CL-BuildPackaging",
        "node_id": "MDU6TGFiZWwxMTI2NzM1NzQ1",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/CL-BuildPackaging"
      },
      {
        "color": "fbca04",
        "default": false,
        "description": "informs the bot to automerge the PR",
        "id": 1336162835,
        "name": "AutoMerge",
        "node_id": "MDU6TGFiZWwxMzM2MTYyODM1",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/AutoMerge"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10519/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": "2019-09-22T18:49:57Z",
      "closed_issues": 39,
      "created_at": "2019-08-19T21:02:56Z",
      "creator": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
        "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
        "followers_url": "https://api.github.com/users/TravisEz13/followers",
        "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
        "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/TravisEz13",
        "id": 10873629,
        "login": "TravisEz13",
        "node_id": "MDQ6VXNlcjEwODczNjI5",
        "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
        "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
        "repos_url": "https://api.github.com/users/TravisEz13/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/TravisEz13"
      },
      "description": "",
      "due_on": null,
      "html_url": "https://github.com/PowerShell/PowerShell/milestone/69",
      "id": 4587190,
      "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/milestones/69/labels",
      "node_id": "MDk6TWlsZXN0b25lNDU4NzE5MA==",
      "number": 69,
      "open_issues": 0,
      "state": "closed",
      "title": "7.0.0-preview.4",
      "updated_at": "2019-09-22T18:49:57Z",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/milestones/69"
    },
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzE2NjY5OTU2",
    "number": 10519,
    "performed_via_github_app": null,
    "pull_request": {
      "diff_url": "https://github.com/PowerShell/PowerShell/pull/10519.diff",
      "html_url": "https://github.com/PowerShell/PowerShell/pull/10519",
      "merged_at": "2019-09-12T21:39:47Z",
      "patch_url": "https://github.com/PowerShell/PowerShell/pull/10519.patch",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/pulls/10519"
    },
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10519/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10519/timeline",
    "title": "Update version of `Microsoft.PowerShell.Native`",
    "updated_at": "2019-09-19T17:51:21Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10519",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/12820925?v=4",
      "events_url": "https://api.github.com/users/adityapatwardhan/events{/privacy}",
      "followers_url": "https://api.github.com/users/adityapatwardhan/followers",
      "following_url": "https://api.github.com/users/adityapatwardhan/following{/other_user}",
      "gists_url": "https://api.github.com/users/adityapatwardhan/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/adityapatwardhan",
      "id": 12820925,
      "login": "adityapatwardhan",
      "node_id": "MDQ6VXNlcjEyODIwOTI1",
      "organizations_url": "https://api.github.com/users/adityapatwardhan/orgs",
      "received_events_url": "https://api.github.com/users/adityapatwardhan/received_events",
      "repos_url": "https://api.github.com/users/adityapatwardhan/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/adityapatwardhan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adityapatwardhan/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/adityapatwardhan"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "https://powershell.visualstudio.com/PowerShell/_build/results?buildId=32295&view=ms.vss-test-web.build-test-results-tab&runId=1185382&resultId=100014&paneView=debug\r\n\r\n```\r\nAt /Users/vsts/agent/2.155.1/work/1/s/test/powershell/Language/Operators/TernaryOperator.Tests.ps1:15 char:37\r\n+ @{ Script = { $true ? 1 : 2 }; ExpectedValue = 1 }\r\n+ ~\r\nUnexpected token '?' in expression or statement.\r\n\r\nAt /Users/vsts/agent/2.155.1/work/1/s/test/powershell/Language/Operators/TernaryOperator.Tests.ps1:16 char:38\r\n+ @{ Script = { $true? ?1 :2 }; ExpectedValue = 2 }\r\n+ ~~\r\nUnexpected token '?1' in expression or statement.\r\n\r\nAt /Users/vsts/agent/2.155.1/work/1/s/test/powershell/Language/Operators/TernaryOperator.Tests.ps1:17 char:38\r\n+ @{ Script = { ${true}?1:2 }; ExpectedValue = 1 }\r\n+ ~~~~\r\nUnexpected token '?1:2' in expression or statement.\r\n\r\nAt /Users/vsts/agent/2.155.1/work/1/s/test/powershell/Language/Operators/TernaryOperator.Tests.ps1:18 char:33\r\n+ @{ Script = { 1 ? 1kb : 0xf }; ExpectedValue = 1kb }\r\n+ ~\r\nUnexpected token '?' in expression or statement.\r\n\r\nAt /Users/vsts/agent/2.155.1/work/1/s/test/powershell/Language/Operators/TernaryOperator.Tests.ps1:19 char:33\r\n+ @{ Script = { 0 ?1kb:0xf }; ExpectedValue = 15 }\r\n+ ~~~~~~~~\r\nUnexpected token '?1kb:0xf' in expression or statemen\r\n```",
    "closed_at": null,
    "comments": 0,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10518/comments",
    "created_at": "2019-09-11T21:29:30Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10518/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10518",
    "id": 492476357,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "ideally support can be provided via other mechanisms, but sometimes folks do open an issue to get a",
        "id": 311043053,
        "name": "Issue-Question",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNTM=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Question"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10518/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0OTI0NzYzNTc=",
    "number": 10518,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10518/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10518/timeline",
    "title": "Ternary Operators tests expect experimental feature to be on",
    "updated_at": "2019-09-11T21:29:30Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10518",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
      "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
      "followers_url": "https://api.github.com/users/TravisEz13/followers",
      "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
      "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/TravisEz13",
      "id": 10873629,
      "login": "TravisEz13",
      "node_id": "MDQ6VXNlcjEwODczNjI5",
      "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
      "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
      "repos_url": "https://api.github.com/users/TravisEz13/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/TravisEz13"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "Bumps PSDesiredStateConfiguration from 2.0 to 2.0.3.\n\n[![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=PSDesiredStateConfiguration&package-manager=nuget&previous-version=2.0&new-version=2.0.3)](https://dependabot.com/compatibility-score.html?dependency-name=PSDesiredStateConfiguration&package-manager=nuget&previous-version=2.0&new-version=2.0.3)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot badge me` will comment on this PR with code to add a \"Dependabot enabled\" badge to your readme\n\nAdditionally, you can set the following in the `.dependabot/config.yml` file in this repo:\n- Update frequency\n- Automerge options (never/patch/minor, and dev/runtime dependencies)\n- Out-of-range updates (receive only lockfile updates, if desired)\n- Security updates (receive only security updates, if desired)\n\nFinally, you can contact us by mentioning @dependabot.\n\n</details>",
    "closed_at": "2019-09-11T22:51:53Z",
    "comments": 2,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10517/comments",
    "created_at": "2019-09-11T21:15:06Z",
    "draft": false,
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10517/events",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10517",
    "id": 492470602,
    "labels": [
      {
        "color": "fbca04",
        "default": false,
        "description": "Indicates that a PR should be marked as a build or packaging change in the Change Log",
        "id": 1126735745,
        "name": "CL-BuildPackaging",
        "node_id": "MDU6TGFiZWwxMTI2NzM1NzQ1",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/CL-BuildPackaging"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10517/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzE2NjM4MDU2",
    "number": 10517,
    "performed_via_github_app": null,
    "pull_request": {
      "diff_url": "https://github.com/PowerShell/PowerShell/pull/10517.diff",
      "html_url": "https://github.com/PowerShell/PowerShell/pull/10517",
      "merged_at": null,
      "patch_url": "https://github.com/PowerShell/PowerShell/pull/10517.patch",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/pulls/10517"
    },
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10517/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10517/timeline",
    "title": "Bump PSDesiredStateConfiguration from 2.0 to 2.0.3",
    "updated_at": "2019-09-11T22:52:03Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10517",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/in/2141?v=4",
      "events_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/events{/privacy}",
      "followers_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/apps/dependabot-preview",
      "id": 27856297,
      "login": "dependabot-preview[bot]",
      "node_id": "MDM6Qm90Mjc4NTYyOTc=",
      "organizations_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/orgs",
      "received_events_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/received_events",
      "repos_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/subscriptions",
      "type": "Bot",
      "url": "https://api.github.com/users/dependabot-preview%5Bbot%5D"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": {
      "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
      "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
      "followers_url": "https://api.github.com/users/TravisEz13/followers",
      "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
      "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/TravisEz13",
      "id": 10873629,
      "login": "TravisEz13",
      "node_id": "MDQ6VXNlcjEwODczNjI5",
      "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
      "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
      "repos_url": "https://api.github.com/users/TravisEz13/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/TravisEz13"
    },
    "assignees": [
      {
        "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
        "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
        "followers_url": "https://api.github.com/users/TravisEz13/followers",
        "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
        "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/TravisEz13",
        "id": 10873629,
        "login": "TravisEz13",
        "node_id": "MDQ6VXNlcjEwODczNjI5",
        "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
        "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
        "repos_url": "https://api.github.com/users/TravisEz13/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/TravisEz13"
      }
    ],
    "author_association": "MEMBER",
    "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nUpdate PSDesiredStateConfiguration to 2.0.3 and bring new tests.\r\n\r\n## PR Context\r\n\r\nAdds Invoke-DscResource as an experimental feature and fixes to Get-DscResource\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [x] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [x] Issue filed: https://github.com/MicrosoftDocs/PowerShell-Docs/issues/4780\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
    "closed_at": "2019-09-12T21:39:12Z",
    "comments": 7,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10516/comments",
    "created_at": "2019-09-11T21:11:38Z",
    "draft": false,
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10516/events",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10516",
    "id": 492469248,
    "labels": [
      {
        "color": "fbca04",
        "default": false,
        "description": "Indicates that a PR should be marked as an Experimental Feature in the Change Log",
        "id": 1220786556,
        "name": "CL-Experimental",
        "node_id": "MDU6TGFiZWwxMjIwNzg2NTU2",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/CL-Experimental"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10516/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": "2019-09-22T18:49:57Z",
      "closed_issues": 39,
      "created_at": "2019-08-19T21:02:56Z",
      "creator": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
        "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
        "followers_url": "https://api.github.com/users/TravisEz13/followers",
        "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
        "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/TravisEz13",
        "id": 10873629,
        "login": "TravisEz13",
        "node_id": "MDQ6VXNlcjEwODczNjI5",
        "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
        "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
        "repos_url": "https://api.github.com/users/TravisEz13/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/TravisEz13"
      },
      "description": "",
      "due_on": null,
      "html_url": "https://github.com/PowerShell/PowerShell/milestone/69",
      "id": 4587190,
      "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/milestones/69/labels",
      "node_id": "MDk6TWlsZXN0b25lNDU4NzE5MA==",
      "number": 69,
      "open_issues": 0,
      "state": "closed",
      "title": "7.0.0-preview.4",
      "updated_at": "2019-09-22T18:49:57Z",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/milestones/69"
    },
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzE2NjM2OTYx",
    "number": 10516,
    "performed_via_github_app": null,
    "pull_request": {
      "diff_url": "https://github.com/PowerShell/PowerShell/pull/10516.diff",
      "html_url": "https://github.com/PowerShell/PowerShell/pull/10516",
      "merged_at": "2019-09-12T21:39:12Z",
      "patch_url": "https://github.com/PowerShell/PowerShell/pull/10516.patch",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/pulls/10516"
    },
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10516/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10516/timeline",
    "title": "Update PSDesiredStateConfiguration to 2.0.3 and bring new tests.",
    "updated_at": "2019-09-19T17:52:11Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10516",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
      "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
      "followers_url": "https://api.github.com/users/TravisEz13/followers",
      "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
      "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/TravisEz13",
      "id": 10873629,
      "login": "TravisEz13",
      "node_id": "MDQ6VXNlcjEwODczNjI5",
      "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
      "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
      "repos_url": "https://api.github.com/users/TravisEz13/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/TravisEz13"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "PR #10324 is merged and now we can use `-WorkingDirectory` when starting a job for background invocation operator. \r\n\r\nThe following code can be replaced:\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/f69f30ba49c13ddd601724b35634bf4d1f44e31d/src/System.Management.Automation/engine/runtime/Operations/MiscOps.cs#L529-L532\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\n\r\n```\r\n\r\n# Expected behavior\r\n\r\n```none\r\n\r\n```\r\n\r\n# Actual behavior\r\n\r\n```none\r\n\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-daily.20190906\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-daily.20190906\r\nOS                             Microsoft Windows 10.0.18978\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0…}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n```\r\n",
    "closed_at": "2022-02-21T18:02:30Z",
    "comments": 1,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10515/comments",
    "created_at": "2019-09-11T17:58:07Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10515/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10515",
    "id": 492383167,
    "labels": [
      {
        "color": "5319e7",
        "default": false,
        "description": "core PowerShell engine, interpreter, and runtime",
        "id": 401720735,
        "name": "WG-Engine",
        "node_id": "MDU6TGFiZWw0MDE3MjA3MzU=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/WG-Engine"
      },
      {
        "color": "ffffff",
        "default": false,
        "description": "The issue is fixed.",
        "id": 423534444,
        "name": "Resolution-Fixed",
        "node_id": "MDU6TGFiZWw0MjM1MzQ0NDQ=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Resolution-Fixed"
      },
      {
        "color": "fc2929",
        "default": false,
        "description": "the issue is for cleaning up the code with no impact on functionality",
        "id": 617835845,
        "name": "Issue-Code Cleanup",
        "node_id": "MDU6TGFiZWw2MTc4MzU4NDU=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Code%20Cleanup"
      },
      {
        "color": "d93f0b",
        "default": false,
        "description": "Accepted to participate in Hacktoberfest",
        "id": 2420946966,
        "name": "Hacktoberfest-Accepted",
        "node_id": "MDU6TGFiZWwyNDIwOTQ2OTY2",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Hacktoberfest-Accepted"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10515/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0OTIzODMxNjc=",
    "number": 10515,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10515/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10515/timeline",
    "title": "`&` background invocation operator should `-WorkingDirectory` when starting a job",
    "updated_at": "2022-02-21T18:02:34Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10515",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/12820925?v=4",
      "events_url": "https://api.github.com/users/adityapatwardhan/events{/privacy}",
      "followers_url": "https://api.github.com/users/adityapatwardhan/followers",
      "following_url": "https://api.github.com/users/adityapatwardhan/following{/other_user}",
      "gists_url": "https://api.github.com/users/adityapatwardhan/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/adityapatwardhan",
      "id": 12820925,
      "login": "adityapatwardhan",
      "node_id": "MDQ6VXNlcjEyODIwOTI1",
      "organizations_url": "https://api.github.com/users/adityapatwardhan/orgs",
      "received_events_url": "https://api.github.com/users/adityapatwardhan/received_events",
      "repos_url": "https://api.github.com/users/adityapatwardhan/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/adityapatwardhan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adityapatwardhan/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/adityapatwardhan"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "# Summary of the new feature/enhancement\r\nParameters used interactively should be validated immediately and allow/require the user to provide valid input. That is what the user must do anyway.\r\n# Proposed technical implementation details (optional)\r\nIt would be helpful if parameter validation would lead the interactive user to success sooner rather than later.\r\n\r\nThe following script requuires a two (2) valid paths. If the paths are entered interactively, the user does not know of a failed validation until after ALL parameters are entered.\r\n\r\n```\r\nPS C:\\src\\t> Get-Content -Path '.\\parammessage.ps1'\r\n[cmdletbinding()]\r\nParam (\r\n    [Parameter(Mandatory=$true, HelpMessage='Enter a valid path 1')]\r\n    [ValidateScript({ Test-Path $_ })]\r\n    [string]$Path1\r\n    ,[Parameter(Mandatory=$true, HelpMessage='Enter a valid path 2')]\r\n    [ValidateScript({ Test-Path $_ })]\r\n    [string]$Path2\r\n)\r\n\r\nWrite-Host \"+++$Path1===\"\r\nWrite-Host \"+++$Path2===\"\r\nPS C:\\src\\t> ($PSVersionTable.PSVersion).ToString()\r\n7.0.0-preview.3\r\nPS C:\\src\\t> .\\parammessage.ps1\r\n\r\ncmdlet parammessage.ps1 at command pipeline position 1\r\nSupply values for the following parameters:\r\n(Type !? for Help.)\r\nPath1: asdf\r\nPath2: C:\\\r\nC:\\src\\t\\parammessage.ps1 : Cannot validate argument on parameter 'Path1'. The \" Test-Path $_ \" validation script for the argument with value \"asdf\" did not return a result of True. Determine why the validation script failed, and then try the command again.\r\nAt line:1 char:1\r\n+ .\\parammessage.ps1\r\n+ ~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : InvalidData: (:) [parammessage.ps1], ParameterBindingValidationException\r\n+ FullyQualifiedErrorId : ParameterArgumentValidationError,parammessage.ps1\r\n```\r\nWhat I would like to see is the interactive prompt use the HelpMessage specified and give the user an opportunity to enter valid information if needed.\r\n```\r\nPS C:\\src\\t> .\\parammessage.ps1\r\n\r\ncmdlet parammessage.ps1 at command pipeline position 1\r\nEnter a valid path 1\r\nPath1: asdf\r\nEntry is not valid.\r\nEnter a valid path 1\r\nPath1:\r\n```\r\nIf the entry for Path1 is not valid, the script will fail. I do not see benefit in requiring ALL parameters to be entered before informing the user that one will not pass validation.",
    "closed_at": null,
    "comments": 16,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10514/comments",
    "created_at": "2019-09-11T17:17:35Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10514/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10514",
    "id": 492364250,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "the issue is more of a feature request than a bug",
        "id": 311043050,
        "name": "Issue-Enhancement",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNTA=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Enhancement"
      },
      {
        "color": "5319e7",
        "default": false,
        "description": "tab completion",
        "id": 401720778,
        "name": "WG-Interactive-IntelliSense",
        "node_id": "MDU6TGFiZWw0MDE3MjA3Nzg=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/WG-Interactive-IntelliSense"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10514/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0OTIzNjQyNTA=",
    "number": 10514,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10514/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10514/timeline",
    "title": "Validate interactive parameter values after they are entered",
    "updated_at": "2019-09-21T20:09:28Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10514",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2530958?v=4",
      "events_url": "https://api.github.com/users/Liturgist/events{/privacy}",
      "followers_url": "https://api.github.com/users/Liturgist/followers",
      "following_url": "https://api.github.com/users/Liturgist/following{/other_user}",
      "gists_url": "https://api.github.com/users/Liturgist/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/Liturgist",
      "id": 2530958,
      "login": "Liturgist",
      "node_id": "MDQ6VXNlcjI1MzA5NTg=",
      "organizations_url": "https://api.github.com/users/Liturgist/orgs",
      "received_events_url": "https://api.github.com/users/Liturgist/received_events",
      "repos_url": "https://api.github.com/users/Liturgist/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/Liturgist/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Liturgist/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/Liturgist"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Add  `System.Collections.Specialized.OrderedDictionary` as  `Ordered` to the PowerShell type accelerators <sub>(not sure if this request is related or similar to: #9512)</sub>.\r\n\r\nCurrently the the`-is` operator returns an error for the `Ordered` type although I am able to use it in the constructor:\r\n\r\n```PowerShell\r\n$Ordered = [Ordered]@{a=1}\r\n$Ordered -is [Ordered]\r\n\r\nUnable to find type [Ordered].\r\nAt line:1 char:14\r\n+ $Ordered -is [Ordered]\r\n+              ~~~~~~~~~\r\n+ CategoryInfo          : InvalidOperation: (Ordered:TypeName) [], RuntimeException\r\n+ FullyQualifiedErrorId : TypeNotFound\r\n```\r\n\r\nAs with e.g. the `semver` type, I would expect to be able to use the same type (accelerator) for comparison as for the constructor:\r\n\r\n```PowerShell\r\n$Semver = [semver]'1.2.3'\r\n$Semver -is [semver]\r\nTrue\r\n```",
    "closed_at": "2022-08-01T16:15:15Z",
    "comments": 2,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10513/comments",
    "created_at": "2019-09-11T17:13:36Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10513/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10513",
    "id": 492362438,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "the issue is more of a feature request than a bug",
        "id": 311043050,
        "name": "Issue-Enhancement",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNTA=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Enhancement"
      },
      {
        "color": "5319e7",
        "default": false,
        "description": "core PowerShell engine, interpreter, and runtime",
        "id": 401720735,
        "name": "WG-Engine",
        "node_id": "MDU6TGFiZWw0MDE3MjA3MzU=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/WG-Engine"
      },
      {
        "color": "50D383",
        "default": false,
        "description": "Up-for-grabs issues are not high priorities, and may be opportunities for external contributors",
        "id": 401721267,
        "name": "Up-for-Grabs",
        "node_id": "MDU6TGFiZWw0MDE3MjEyNjc=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Up-for-Grabs"
      },
      {
        "color": "ffffff",
        "default": false,
        "description": "The issue is fixed.",
        "id": 423534444,
        "name": "Resolution-Fixed",
        "node_id": "MDU6TGFiZWw0MjM1MzQ0NDQ=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Resolution-Fixed"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10513/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0OTIzNjI0Mzg=",
    "number": 10513,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 6,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 6,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10513/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10513/timeline",
    "title": "Feature Request: add [Ordered] type accelerator",
    "updated_at": "2022-08-12T00:01:02Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10513",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/8080834?v=4",
      "events_url": "https://api.github.com/users/iRon7/events{/privacy}",
      "followers_url": "https://api.github.com/users/iRon7/followers",
      "following_url": "https://api.github.com/users/iRon7/following{/other_user}",
      "gists_url": "https://api.github.com/users/iRon7/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iRon7",
      "id": 8080834,
      "login": "iRon7",
      "node_id": "MDQ6VXNlcjgwODA4MzQ=",
      "organizations_url": "https://api.github.com/users/iRon7/orgs",
      "received_events_url": "https://api.github.com/users/iRon7/received_events",
      "repos_url": "https://api.github.com/users/iRon7/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iRon7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iRon7/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iRon7"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "Closely related: #4002\r\n\r\nNormally, immediately after execution of an external program, `$?` and `$LASTEXITCODE -eq 0` can be used interchangeably to test for success.\r\n\r\nHowever, under the following conditions `$?` is _invariably_ set to `$false`, even if `$LASTEXITCODE` contains `0` and therefore indicates success:\r\n\r\n* If a `2>` or `*>` redirection is involved\r\n* _and_ actual stderr output is produced by the external program.\r\n\r\nNote that you generally cannot and shouldn't infer success vs. failure of an external program from the presence of stderr output - many CLIs use stderr to emit _status_ information; only the process exit code should be consulted.\r\n\r\n# Steps to reproduce\r\n\r\nRun the following on Windows, which produces both stderr and stdout output and reports `0` as the process exit code:\r\n\r\n```powershell\r\n& { cmd /c 'nosuch & ver' *>$null; $?; $LASTEXITCODE } | Should -Be $true, 0\r\n```\r\n\r\n# Expected behavior\r\n\r\nThe test should succeed.\r\n\r\n# Actual behavior\r\n\r\nThe test fails:\r\n\r\n```none\r\nExpected @($true, 0), but got @($false, 0).\r\n```\r\n\r\nThat is, `$?` was `$false`, even though `$LASTEXITCODE` was `0`.\r\n\r\n# Environment data\r\n\r\n```none\r\nPowerShell Core 7.0.0-preview.3\r\nWindows PowerShell v5.1.18362.145\r\n```\r\n",
    "closed_at": "2020-08-02T15:53:08Z",
    "comments": 1,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10512/comments",
    "created_at": "2019-09-11T14:38:47Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10512/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10512",
    "id": 492280675,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "ideally support can be provided via other mechanisms, but sometimes folks do open an issue to get a",
        "id": 311043053,
        "name": "Issue-Question",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNTM=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Question"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10512/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0OTIyODA2NzU=",
    "number": 10512,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 2,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10512/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10512/timeline",
    "title": "Redirection of stderr output from external programs sets $? invariably to $false, no longer reflecting whether $LASTEXITCODE equals 0",
    "updated_at": "2020-08-02T15:53:08Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10512",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "# Steps to reproduce\r\n1. Open an ssh connection using PuTTY (keypad setting is \"Normal\", login shell is bash)\r\n2. Ensure the numeric keypad works (`0`-`9`, `/*-+.` and `Enter`)\r\n3. Run pwsh\r\n4. Try the numeric keypad keys again\r\n5. Exit pwsh (whether via `Ctrl-D` or `exit`)\r\n6. Try the numeric keypad keys once more\r\n\r\n# Expected behavior\r\n\r\n1. Keypad keys work the same in pwsh as in bash (just like they do in ksh, dash, ...)\r\n2. Keypad keys still work when returning to bash from pwsh\r\n\r\n# Actual behavior\r\n\r\n1. Only the `Enter` key works normally. `/*-` do nothing, `+` inserts `l`, and `0`-`9` insert `p`-`y`.\r\n2. All keypad keys (including `Enter` are non-functional in bash when returning from pwsh.\r\n\r\nThat PowerShell doesn't handle the keypad is one thing, but that it messes it up for everyone else is Real Bad(tm). It also means that it's not a case of just reading things differently - it seems to be changing the tty's mode without changing it back on exit.\r\n\r\n# Environment data\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.2.2\r\nPSEdition                      Core\r\nGitCommitId                    6.2.2\r\nOS                             Linux 4.19.0-5-amd64 #1 SMP Debian 4.19.37-3 (2019-05-15)\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0…}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
    "closed_at": "2020-02-01T22:00:12Z",
    "comments": 4,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10511/comments",
    "created_at": "2019-09-11T13:50:37Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10511/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10511",
    "id": 492251381,
    "labels": [
      {
        "color": "5319e7",
        "default": false,
        "description": "PSReadline related issues",
        "id": 390282363,
        "name": "WG-Interactive-PSReadLine",
        "node_id": "MDU6TGFiZWwzOTAyODIzNjM=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/WG-Interactive-PSReadLine"
      },
      {
        "color": "ffffff",
        "default": false,
        "description": "The issue is caused by external component(s).",
        "id": 427077877,
        "name": "Resolution-External",
        "node_id": "MDU6TGFiZWw0MjcwNzc4Nzc=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Resolution-External"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10511/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0OTIyNTEzODE=",
    "number": 10511,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10511/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10511/timeline",
    "title": "PowerShell on (Debian) Linux messes up numeric keypad support",
    "updated_at": "2020-02-01T22:00:12Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10511",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/13708975?v=4",
      "events_url": "https://api.github.com/users/Zastai/events{/privacy}",
      "followers_url": "https://api.github.com/users/Zastai/followers",
      "following_url": "https://api.github.com/users/Zastai/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zastai/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/Zastai",
      "id": 13708975,
      "login": "Zastai",
      "node_id": "MDQ6VXNlcjEzNzA4OTc1",
      "organizations_url": "https://api.github.com/users/Zastai/orgs",
      "received_events_url": "https://api.github.com/users/Zastai/received_events",
      "repos_url": "https://api.github.com/users/Zastai/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/Zastai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zastai/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/Zastai"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Using the latest PowerShell 6.2.2:\r\n```\r\nC:\\Test>pwsh -File Test.ps1 -\r\nC:\\Test\\Test.ps1 : Cannot process argument because the value of argument \"name\" is not valid. Change the value of the \"name\" argument and run the operation again.\r\n+ CategoryInfo          : InvalidArgument: (:) [Test.ps1], PSArgumentException\r\n+ FullyQualifiedErrorId : Argument,Test.ps1\r\n```\r\n\r\nThe `Test.ps1` is simple\r\n\r\n```sh\r\necho \"foo\"\r\n```\r\n\r\nThe error does not make any sense to me. I suspect it's a bug in command-line parsing.\r\n\r\n---\r\n\r\nPowerShell 5.1 also processes the dash strangely (although it manifests differently):\r\n[What does hyphen/dash parameter mean to PowerShell?](https://stackoverflow.com/q/57199565/850848)\r\n\r\nPowerShell 2.0 works as expected.",
    "closed_at": "2019-09-14T12:00:37Z",
    "comments": 8,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10510/comments",
    "created_at": "2019-09-11T07:39:44Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10510/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10510",
    "id": 492069588,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "ideally support can be provided via other mechanisms, but sometimes folks do open an issue to get a",
        "id": 311043053,
        "name": "Issue-Question",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNTM=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Question"
      },
      {
        "color": "ffffff",
        "default": false,
        "description": "The question is answered.",
        "id": 423531321,
        "name": "Resolution-Answered",
        "node_id": "MDU6TGFiZWw0MjM1MzEzMjE=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Resolution-Answered"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10510/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0OTIwNjk1ODg=",
    "number": 10510,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10510/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10510/timeline",
    "title": "Using hyphen/dash parameter produces \"Cannot process argument because the value of argument “name” is not valid\"",
    "updated_at": "2019-09-16T04:11:01Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10510",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1632297?v=4",
      "events_url": "https://api.github.com/users/martinprikryl/events{/privacy}",
      "followers_url": "https://api.github.com/users/martinprikryl/followers",
      "following_url": "https://api.github.com/users/martinprikryl/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinprikryl/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/martinprikryl",
      "id": 1632297,
      "login": "martinprikryl",
      "node_id": "MDQ6VXNlcjE2MzIyOTc=",
      "organizations_url": "https://api.github.com/users/martinprikryl/orgs",
      "received_events_url": "https://api.github.com/users/martinprikryl/received_events",
      "repos_url": "https://api.github.com/users/martinprikryl/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/martinprikryl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinprikryl/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/martinprikryl"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "# Summary of the new feature/enhancement\r\n\r\nPowerShell aims to be cross-platform, but I have been having many issues operating on paths across both Windows and Linux.  I understand the need to support `\\` in Windows for the foreseeable future, but I would at least like the default path character to be the same on both Windows and *nix, presumably by setting the default path delimiter to `/`.  The current alternative is forcing users to normalize paths themselves with `-replace \"\\\\\", \"/\"` in their paths.\r\n",
    "closed_at": "2020-06-30T15:18:17Z",
    "comments": 96,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10509/comments",
    "created_at": "2019-09-10T22:57:34Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10509/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10509",
    "id": 491936656,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "the issue is more of a feature request than a bug",
        "id": 311043050,
        "name": "Issue-Enhancement",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNTA=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Enhancement"
      },
      {
        "color": "ffffff",
        "default": false,
        "description": "The reported behavior is by design.",
        "id": 423443278,
        "name": "Resolution-By Design",
        "node_id": "MDU6TGFiZWw0MjM0NDMyNzg=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Resolution-By%20Design"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10509/labels{/name}",
    "locked": true,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0OTE5MzY2NTY=",
    "number": 10509,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 53,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 53,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10509/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10509/timeline",
    "title": "Use forward slashes by default in Windows",
    "updated_at": "2021-12-25T08:57:56Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10509",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3680671?v=4",
      "events_url": "https://api.github.com/users/chriskuech/events{/privacy}",
      "followers_url": "https://api.github.com/users/chriskuech/followers",
      "following_url": "https://api.github.com/users/chriskuech/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriskuech/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/chriskuech",
      "id": 3680671,
      "login": "chriskuech",
      "node_id": "MDQ6VXNlcjM2ODA2NzE=",
      "organizations_url": "https://api.github.com/users/chriskuech/orgs",
      "received_events_url": "https://api.github.com/users/chriskuech/received_events",
      "repos_url": "https://api.github.com/users/chriskuech/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/chriskuech/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriskuech/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/chriskuech"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "# Summary of the new feature/enhancement\r\n\r\n<!-- \r\nA clear and concise description of what the problem is that the new feature would solve.\r\nTry formulating it in user story style (if applicable):\r\n'As a user I want X so that Y.' with X being the being the action and Y being the value of the action.\r\n-->\r\n\r\nCurrenly, we can only create alias to a cmdlet name only, it would be nice to be able to create alias to the cmdlet and with its params also.\r\n\r\nThe workaround that I could find till now is to create in advance a new custom cmdlet (via function{}) which calls the target cmdlet with the expected params, and then create an alias that points to this new cmdlet.\r\n\r\n```powershell\r\n# The workaround by creating a new cmdlet, \r\n# ok for complexe functions, \r\n# but not cool for calling just a cmdlet with params in one line.\r\n\r\nfunction Out-StringWithStream {\r\n    Out-String -Stream\r\n}\r\n\r\nSet-Alias oss Out-StringWithStream\r\n```\r\n\r\n# Proposed technical implementation details (optional)\r\n\r\n```powershell\r\nSet-Alias oss Out-String -Stream\r\n\r\n# or with ScriptBlock\r\nSet-Alias oss {Out-String -Stream}\r\n```\r\n\r\n\r\n<!-- \r\nA clear and concise description of what you want to happen.\r\nConsider providing an example PowerShell experience with expected result.\r\n-->\r\n",
    "closed_at": "2019-09-13T12:00:39Z",
    "comments": 10,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10508/comments",
    "created_at": "2019-09-10T21:12:39Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10508/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10508",
    "id": 491901291,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "the issue is more of a feature request than a bug",
        "id": 311043050,
        "name": "Issue-Enhancement",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNTA=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Enhancement"
      },
      {
        "color": "ffffff",
        "default": false,
        "description": "The question is answered.",
        "id": 423531321,
        "name": "Resolution-Answered",
        "node_id": "MDU6TGFiZWw0MjM1MzEzMjE=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Resolution-Answered"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10508/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0OTE5MDEyOTE=",
    "number": 10508,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10508/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10508/timeline",
    "title": "Feature Request / enable the creation of alias with cmdlet and its params together",
    "updated_at": "2019-09-13T18:43:11Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10508",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/13083856?v=4",
      "events_url": "https://api.github.com/users/copdips/events{/privacy}",
      "followers_url": "https://api.github.com/users/copdips/followers",
      "following_url": "https://api.github.com/users/copdips/following{/other_user}",
      "gists_url": "https://api.github.com/users/copdips/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/copdips",
      "id": 13083856,
      "login": "copdips",
      "node_id": "MDQ6VXNlcjEzMDgzODU2",
      "organizations_url": "https://api.github.com/users/copdips/orgs",
      "received_events_url": "https://api.github.com/users/copdips/received_events",
      "repos_url": "https://api.github.com/users/copdips/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/copdips/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/copdips/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/copdips"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": {
      "avatar_url": "https://avatars.githubusercontent.com/u/12820925?v=4",
      "events_url": "https://api.github.com/users/adityapatwardhan/events{/privacy}",
      "followers_url": "https://api.github.com/users/adityapatwardhan/followers",
      "following_url": "https://api.github.com/users/adityapatwardhan/following{/other_user}",
      "gists_url": "https://api.github.com/users/adityapatwardhan/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/adityapatwardhan",
      "id": 12820925,
      "login": "adityapatwardhan",
      "node_id": "MDQ6VXNlcjEyODIwOTI1",
      "organizations_url": "https://api.github.com/users/adityapatwardhan/orgs",
      "received_events_url": "https://api.github.com/users/adityapatwardhan/received_events",
      "repos_url": "https://api.github.com/users/adityapatwardhan/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/adityapatwardhan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adityapatwardhan/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/adityapatwardhan"
    },
    "assignees": [
      {
        "avatar_url": "https://avatars.githubusercontent.com/u/12820925?v=4",
        "events_url": "https://api.github.com/users/adityapatwardhan/events{/privacy}",
        "followers_url": "https://api.github.com/users/adityapatwardhan/followers",
        "following_url": "https://api.github.com/users/adityapatwardhan/following{/other_user}",
        "gists_url": "https://api.github.com/users/adityapatwardhan/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/adityapatwardhan",
        "id": 12820925,
        "login": "adityapatwardhan",
        "node_id": "MDQ6VXNlcjEyODIwOTI1",
        "organizations_url": "https://api.github.com/users/adityapatwardhan/orgs",
        "received_events_url": "https://api.github.com/users/adityapatwardhan/received_events",
        "repos_url": "https://api.github.com/users/adityapatwardhan/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/adityapatwardhan/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/adityapatwardhan/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/adityapatwardhan"
      }
    ],
    "author_association": "COLLABORATOR",
    "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nAdd new test for #3724 to exclude a regression.\r\n\r\n## PR Context\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [ ] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
    "closed_at": "2019-10-04T00:15:42Z",
    "comments": 2,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10507/comments",
    "created_at": "2019-09-10T03:41:48Z",
    "draft": false,
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10507/events",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10507",
    "id": 491432760,
    "labels": [
      {
        "color": "fbca04",
        "default": false,
        "description": "Indicates that a PR should be marked as a test change in the Change Log",
        "id": 1126736452,
        "name": "CL-Test",
        "node_id": "MDU6TGFiZWwxMTI2NzM2NDUy",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/CL-Test"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10507/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": "2019-10-24T04:50:52Z",
      "closed_issues": 78,
      "created_at": "2019-09-12T21:38:19Z",
      "creator": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
        "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
        "followers_url": "https://api.github.com/users/TravisEz13/followers",
        "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
        "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/TravisEz13",
        "id": 10873629,
        "login": "TravisEz13",
        "node_id": "MDQ6VXNlcjEwODczNjI5",
        "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
        "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
        "repos_url": "https://api.github.com/users/TravisEz13/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/TravisEz13"
      },
      "description": "",
      "due_on": null,
      "html_url": "https://github.com/PowerShell/PowerShell/milestone/71",
      "id": 4655520,
      "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/milestones/71/labels",
      "node_id": "MDk6TWlsZXN0b25lNDY1NTUyMA==",
      "number": 71,
      "open_issues": 0,
      "state": "closed",
      "title": "7.0.0-preview.5",
      "updated_at": "2019-10-24T05:09:29Z",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/milestones/71"
    },
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzE1ODAwNzA1",
    "number": 10507,
    "performed_via_github_app": null,
    "pull_request": {
      "diff_url": "https://github.com/PowerShell/PowerShell/pull/10507.diff",
      "html_url": "https://github.com/PowerShell/PowerShell/pull/10507",
      "merged_at": "2019-10-04T00:15:41Z",
      "patch_url": "https://github.com/PowerShell/PowerShell/pull/10507.patch",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/pulls/10507"
    },
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10507/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10507/timeline",
    "title": "Add `Get-ChildItem` test",
    "updated_at": "2019-10-23T19:06:49Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10507",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "Bumps PSDesiredStateConfiguration from 2.0 to 2.0.2.\n\n[![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=PSDesiredStateConfiguration&package-manager=nuget&previous-version=2.0&new-version=2.0.2)](https://dependabot.com/compatibility-score.html?dependency-name=PSDesiredStateConfiguration&package-manager=nuget&previous-version=2.0&new-version=2.0.2)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot badge me` will comment on this PR with code to add a \"Dependabot enabled\" badge to your readme\n\nAdditionally, you can set the following in the `.dependabot/config.yml` file in this repo:\n- Update frequency (including time of day and day of week)\n- Automerge options (never/patch/minor, and dev/runtime dependencies)\n- Pull request limits (per update run and/or open at any time)\n- Out-of-range updates (receive only lockfile updates, if desired)\n- Security updates (receive only security updates, if desired)\n\nFinally, you can contact us by mentioning @dependabot.\n\n</details>",
    "closed_at": "2019-09-10T22:42:27Z",
    "comments": 1,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10506/comments",
    "created_at": "2019-09-09T23:24:34Z",
    "draft": false,
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10506/events",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10506",
    "id": 491372491,
    "labels": [
      {
        "color": "fbca04",
        "default": false,
        "description": "Indicates that a PR should be marked as a build or packaging change in the Change Log",
        "id": 1126735745,
        "name": "CL-BuildPackaging",
        "node_id": "MDU6TGFiZWwxMTI2NzM1NzQ1",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/CL-BuildPackaging"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10506/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzE1NzUzNzM2",
    "number": 10506,
    "performed_via_github_app": null,
    "pull_request": {
      "diff_url": "https://github.com/PowerShell/PowerShell/pull/10506.diff",
      "html_url": "https://github.com/PowerShell/PowerShell/pull/10506",
      "merged_at": null,
      "patch_url": "https://github.com/PowerShell/PowerShell/pull/10506.patch",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/pulls/10506"
    },
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10506/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10506/timeline",
    "title": "Bump PSDesiredStateConfiguration from 2.0 to 2.0.2",
    "updated_at": "2019-09-10T22:42:36Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10506",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/in/2141?v=4",
      "events_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/events{/privacy}",
      "followers_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/apps/dependabot-preview",
      "id": 27856297,
      "login": "dependabot-preview[bot]",
      "node_id": "MDM6Qm90Mjc4NTYyOTc=",
      "organizations_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/orgs",
      "received_events_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/received_events",
      "repos_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/subscriptions",
      "type": "Bot",
      "url": "https://api.github.com/users/dependabot-preview%5Bbot%5D"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "Bumps PSDesiredStateConfiguration from 2.0 to 2.0.1.\n\n[![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=PSDesiredStateConfiguration&package-manager=nuget&previous-version=2.0&new-version=2.0.1)](https://dependabot.com/compatibility-score.html?dependency-name=PSDesiredStateConfiguration&package-manager=nuget&previous-version=2.0&new-version=2.0.1)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot badge me` will comment on this PR with code to add a \"Dependabot enabled\" badge to your readme\n\nAdditionally, you can set the following in the `.dependabot/config.yml` file in this repo:\n- Update frequency (including time of day and day of week)\n- Automerge options (never/patch/minor, and dev/runtime dependencies)\n- Pull request limits (per update run and/or open at any time)\n- Out-of-range updates (receive only lockfile updates, if desired)\n- Security updates (receive only security updates, if desired)\n\nFinally, you can contact us by mentioning @dependabot.\n\n</details>",
    "closed_at": "2019-09-09T19:39:49Z",
    "comments": 2,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10505/comments",
    "created_at": "2019-09-09T19:04:23Z",
    "draft": false,
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10505/events",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10505",
    "id": 491271164,
    "labels": [
      {
        "color": "fbca04",
        "default": false,
        "description": "Indicates that a PR should be marked as a build or packaging change in the Change Log",
        "id": 1126735745,
        "name": "CL-BuildPackaging",
        "node_id": "MDU6TGFiZWwxMTI2NzM1NzQ1",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/CL-BuildPackaging"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10505/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzE1NjcxOTE5",
    "number": 10505,
    "performed_via_github_app": null,
    "pull_request": {
      "diff_url": "https://github.com/PowerShell/PowerShell/pull/10505.diff",
      "html_url": "https://github.com/PowerShell/PowerShell/pull/10505",
      "merged_at": null,
      "patch_url": "https://github.com/PowerShell/PowerShell/pull/10505.patch",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/pulls/10505"
    },
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10505/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10505/timeline",
    "title": "Bump PSDesiredStateConfiguration from 2.0 to 2.0.1",
    "updated_at": "2019-09-09T19:40:07Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10505",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/in/2141?v=4",
      "events_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/events{/privacy}",
      "followers_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/apps/dependabot-preview",
      "id": 27856297,
      "login": "dependabot-preview[bot]",
      "node_id": "MDM6Qm90Mjc4NTYyOTc=",
      "organizations_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/orgs",
      "received_events_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/received_events",
      "repos_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/subscriptions",
      "type": "Bot",
      "url": "https://api.github.com/users/dependabot-preview%5Bbot%5D"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Suppress the error on the `-is` operator when the type is supplied as a string:\r\n\r\n`$a -is 'UndefinedType'`\r\n\r\n```\r\nCannot convert the \"UndefinedType\" value of type \"System.String\" to type \"System.Type\".\r\nAt line:1 char:1\r\n+ $a -is 'UndefinedType'\r\n+ ~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : NotSpecified: (:) [], RuntimeException\r\n+ FullyQualifiedErrorId : RuntimeException\r\n```\r\n\r\nIf \"strict\" programming is required, the system.type (square brackets) should be used instead:\r\n\r\n`$a -is [UndefinedType]`\r\n\r\n```\r\nUnable to find type [UndefinedType].\r\nAt line:1 char:8\r\n+ $a -is [UndefinedType]\r\n+        ~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : InvalidOperation: (UndefinedType:TypeName) [], RuntimeException\r\n+ FullyQualifiedErrorId : TypeNotFound\r\n```\r\n\r\n<sub>(Were the error is actually generated by the type casting and not the `-is`operator.)/sub>\r\n\r\nThis would allow for easier type checking on types that might not exist in certain environments (like `[semver]` that doesn't exist in Windows PowerShell, see also: Stackoverflow: [How to test a (possible) unknown type?](https://stackoverflow.com/q/57805460/1701026)\r\n\r\nBesides, I think this is more in line with the general PowerShell behavor set by the PowerShell team: [\"Type Conversion in PowerShell is, without question, one of the most useful ingredients in its \"Magic Sauce\" of administrator effectiveness.\"](https://devblogs.microsoft.com/powershell/understanding-powershells-type-conversion-magic/) and looking to other comparison operators, there aren't many operators that can produce an error.\r\n\r\nIn other words, from my perspective:\r\n`$a -is 'UndefinedType'` should just return `$False` without error and `$a -isnot 'UndefinedType'` should just return `$True` without error. ",
    "closed_at": "2019-09-12T12:00:34Z",
    "comments": 13,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10504/comments",
    "created_at": "2019-09-09T17:28:36Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10504/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10504",
    "id": 491226899,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "the issue is more of a feature request than a bug",
        "id": 311043050,
        "name": "Issue-Enhancement",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNTA=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Enhancement"
      },
      {
        "color": "ffffff",
        "default": false,
        "description": "The question is answered.",
        "id": 423531321,
        "name": "Resolution-Answered",
        "node_id": "MDU6TGFiZWw0MjM1MzEzMjE=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Resolution-Answered"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10504/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0OTEyMjY4OTk=",
    "number": 10504,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10504/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10504/timeline",
    "title": "Feature Request: -Is operator: suppress \"Cannot convert\"error",
    "updated_at": "2019-09-13T07:17:44Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10504",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/8080834?v=4",
      "events_url": "https://api.github.com/users/iRon7/events{/privacy}",
      "followers_url": "https://api.github.com/users/iRon7/followers",
      "following_url": "https://api.github.com/users/iRon7/following{/other_user}",
      "gists_url": "https://api.github.com/users/iRon7/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iRon7",
      "id": 8080834,
      "login": "iRon7",
      "node_id": "MDQ6VXNlcjgwODA4MzQ=",
      "organizations_url": "https://api.github.com/users/iRon7/orgs",
      "received_events_url": "https://api.github.com/users/iRon7/received_events",
      "repos_url": "https://api.github.com/users/iRon7/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iRon7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iRon7/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iRon7"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": {
      "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
      "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
      "followers_url": "https://api.github.com/users/TravisEz13/followers",
      "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
      "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/TravisEz13",
      "id": 10873629,
      "login": "TravisEz13",
      "node_id": "MDQ6VXNlcjEwODczNjI5",
      "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
      "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
      "repos_url": "https://api.github.com/users/TravisEz13/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/TravisEz13"
    },
    "assignees": [
      {
        "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
        "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
        "followers_url": "https://api.github.com/users/TravisEz13/followers",
        "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
        "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/TravisEz13",
        "id": 10873629,
        "login": "TravisEz13",
        "node_id": "MDQ6VXNlcjEwODczNjI5",
        "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
        "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
        "repos_url": "https://api.github.com/users/TravisEz13/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/TravisEz13"
      }
    ],
    "author_association": "CONTRIBUTOR",
    "body": "# PR Summary\r\n\r\nFixes #10167.\r\n\r\nPrior to this fix, if you created, modified, or removed a breakpoint in a nested debugger or inside of a job debugger, whatever change you made would be applied to the breakpoint with the corresponding breakpoint ID in the host runspace debugger. This fix removes the event handler that was causing breakpoint changes to be erroneously replicated to the host runspace debugger.\r\n\r\n## PR Context\r\n\r\nSee discussion with @PaulHigin in #10167.\r\n\r\n## PR Checklist\r\n\r\n- [X] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [X] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [X] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [X] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [X] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [X] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
    "closed_at": "2019-09-10T22:47:51Z",
    "comments": 2,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10503/comments",
    "created_at": "2019-09-09T17:25:31Z",
    "draft": false,
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10503/events",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10503",
    "id": 491225543,
    "labels": [
      {
        "color": "fbca04",
        "default": false,
        "description": "Indicates that a PR should be marked as a general cmdlet change in the Change Log",
        "id": 1126735368,
        "name": "CL-General",
        "node_id": "MDU6TGFiZWwxMTI2NzM1MzY4",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/CL-General"
      },
      {
        "color": "fbca04",
        "default": false,
        "description": "informs the bot to automerge the PR",
        "id": 1336162835,
        "name": "AutoMerge",
        "node_id": "MDU6TGFiZWwxMzM2MTYyODM1",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/AutoMerge"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10503/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": "2019-09-22T18:49:57Z",
      "closed_issues": 39,
      "created_at": "2019-08-19T21:02:56Z",
      "creator": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
        "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
        "followers_url": "https://api.github.com/users/TravisEz13/followers",
        "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
        "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/TravisEz13",
        "id": 10873629,
        "login": "TravisEz13",
        "node_id": "MDQ6VXNlcjEwODczNjI5",
        "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
        "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
        "repos_url": "https://api.github.com/users/TravisEz13/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/TravisEz13"
      },
      "description": "",
      "due_on": null,
      "html_url": "https://github.com/PowerShell/PowerShell/milestone/69",
      "id": 4587190,
      "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/milestones/69/labels",
      "node_id": "MDk6TWlsZXN0b25lNDU4NzE5MA==",
      "number": 69,
      "open_issues": 0,
      "state": "closed",
      "title": "7.0.0-preview.4",
      "updated_at": "2019-09-22T18:49:57Z",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/milestones/69"
    },
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzE1NjM2NDEw",
    "number": 10503,
    "performed_via_github_app": null,
    "pull_request": {
      "diff_url": "https://github.com/PowerShell/PowerShell/pull/10503.diff",
      "html_url": "https://github.com/PowerShell/PowerShell/pull/10503",
      "merged_at": "2019-09-10T22:47:51Z",
      "patch_url": "https://github.com/PowerShell/PowerShell/pull/10503.patch",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/pulls/10503"
    },
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10503/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10503/timeline",
    "title": "Remove the event handler that was causing breakpoint changes to be erroneously replicated to the host runspace debugger",
    "updated_at": "2019-09-19T17:51:58Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10503",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "COLLABORATOR",
    "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n\r\n-->\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\n$namedTuple = [Range]::new(0, 0).GetOffsetAndLength(0)\r\n$namedTuple.Offset\r\n$namedTuple.Length\r\n```\r\n\r\n# Expected behavior\r\n\r\n`Offset` is translated to `Item1` and `Length` is translated to `Item2`\r\n\r\n```none\r\n0\r\n0\r\n```\r\n\r\n# Actual behavior\r\n\r\nTuple items must be referred to by their real property names (e.g. `Item1` and `Item2`).\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-preview.3\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-preview.3\r\nOS                             Microsoft Windows 10.0.18362\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0…}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\n# Notes\r\n\r\nNamed tuples are implemented in metadata.  The method that returns the tuple is annotated with the `TupleElementNames` attribute.  In the example, the method is annotated with this attribute:\r\n\r\n```csharp\r\n[return: TupleElementNames(new string[] { \"Offset\", \"Length\" })]\r\npublic ValueTuple<int, int> GetOffsetAndLength(int length);\r\n```\r\n\r\nThe item names cannot be inferred from the value itself, but `PSInvokeMemberBinder` could attach `PSAliasProperty`'s to the tuple after invocation.\r\n\r\nCurrently this probably isn't all that important. In the version of Core included in7.0.0-preview.3, there are only two public API's in the BCL that return named tuples (the other is `Enumerable.Zip<,>(IEnumerable<>,IEnumerable<>)`).",
    "closed_at": null,
    "comments": 2,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10502/comments",
    "created_at": "2019-09-09T15:10:50Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10502/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10502",
    "id": 491157520,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "ideally support can be provided via other mechanisms, but sometimes folks do open an issue to get a",
        "id": 311043053,
        "name": "Issue-Question",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNTM=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Question"
      },
      {
        "color": "5319e7",
        "default": false,
        "description": "core PowerShell engine, interpreter, and runtime",
        "id": 401720735,
        "name": "WG-Engine",
        "node_id": "MDU6TGFiZWw0MDE3MjA3MzU=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/WG-Engine"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10502/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0OTExNTc1MjA=",
    "number": 10502,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10502/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10502/timeline",
    "title": "Named tuples from C# methods do not retain their names",
    "updated_at": "2021-01-15T14:34:44Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10502",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n\r\n-->\r\n\r\n# Steps to reproduce\r\nThe code is aim to set time timeout for back ground jobs. I removed unrelated code here. The behavior is strange for me. Here is the code.\r\n```powershell\r\nfunction JobWithTimeout {\r\n    param(\r\n        [System.Management.Automation.Job]\r\n        [parameter(\r\n            Mandatory = $true,\r\n            ValueFromPipeline = $true)]\r\n        [ValidateNotNull()]\r\n        $Job,\r\n\r\n        [parameter(Mandatory = $true)]\r\n        [ValidateNotNull()]\r\n        [int]\r\n        $TimeoutInSec\r\n    )\r\n    \r\n    Process {\r\n        $Job | Wait-Job -Timeout $TimeoutInSec\r\n        if ($(Get-Job -Id $Job.Id).State -eq \"Running\") {\r\n            Write-Warning \"Job timeout.\"\r\n        }\r\n\r\n        $Job| Stop-Job\r\n        $Job| Receive-Job\r\n        $Job| Remove-Job\r\n    }\r\n}\r\n\r\nStart-Job -ScriptBlock {\r\n    Write-Warning \"res\"\r\n    $aaaa = 1   # <-- remove this line cause timeout\r\n} | JobWithTimeout -Timeout 10\r\n\r\n\r\n```\r\n\r\n# Expected behavior\r\nAlways get \"WARNING: res\"\r\n\r\n# Actual behavior\r\n\r\nThis code works fine and get result “Warning: res”. But if I remove L30, which is meaningless, the job always timeout while `Wait-Job`. Is this a expected behavior? Could you explain the underlying mechanisms to me?\r\n![image](https://user-images.githubusercontent.com/43633998/64499235-d4730a00-d2ea-11e9-8c5c-642d882faf06.png)\r\n\r\n\r\n# Environment data\r\nTested on both Windows Powershell and Powershell Core\r\n![image](https://user-images.githubusercontent.com/43633998/64499198-a2fa3e80-d2ea-11e9-8d2b-1ea4ecdf62d8.png)\r\n![image](https://user-images.githubusercontent.com/43633998/64499341-2ae04880-d2eb-11e9-95f3-20f0de895e4b.png)\r\n\r\n\r\n",
    "closed_at": null,
    "comments": 2,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10501/comments",
    "created_at": "2019-09-09T02:20:37Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10501/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10501",
    "id": 490845256,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "Issue has been identified as a bug in the product",
        "id": 311043048,
        "name": "Issue-Bug",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNDg=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Bug"
      },
      {
        "color": "5319e7",
        "default": false,
        "description": "cmdlets in the Microsoft.PowerShell.Core module",
        "id": 552752480,
        "name": "WG-Cmdlets-Core",
        "node_id": "MDU6TGFiZWw1NTI3NTI0ODA=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/WG-Cmdlets-Core"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10501/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0OTA4NDUyNTY=",
    "number": 10501,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10501/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10501/timeline",
    "title": "Wait-Job behavior with timeout",
    "updated_at": "2021-01-15T14:34:18Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10501",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/43633998?v=4",
      "events_url": "https://api.github.com/users/kaisxu/events{/privacy}",
      "followers_url": "https://api.github.com/users/kaisxu/followers",
      "following_url": "https://api.github.com/users/kaisxu/following{/other_user}",
      "gists_url": "https://api.github.com/users/kaisxu/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/kaisxu",
      "id": 43633998,
      "login": "kaisxu",
      "node_id": "MDQ6VXNlcjQzNjMzOTk4",
      "organizations_url": "https://api.github.com/users/kaisxu/orgs",
      "received_events_url": "https://api.github.com/users/kaisxu/received_events",
      "repos_url": "https://api.github.com/users/kaisxu/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/kaisxu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kaisxu/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/kaisxu"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "This test was removed\r\ncc @TravisEz13 ",
    "closed_at": "2019-09-13T17:33:56Z",
    "comments": 2,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10500/comments",
    "created_at": "2019-09-08T18:46:22Z",
    "draft": false,
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10500/events",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10500",
    "id": 490788898,
    "labels": [],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10500/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzE1Mjk3NzM1",
    "number": 10500,
    "performed_via_github_app": null,
    "pull_request": {
      "diff_url": "https://github.com/PowerShell/PowerShell/pull/10500.diff",
      "html_url": "https://github.com/PowerShell/PowerShell/pull/10500",
      "merged_at": null,
      "patch_url": "https://github.com/PowerShell/PowerShell/pull/10500.patch",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/pulls/10500"
    },
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10500/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10500/timeline",
    "title": "Remove markdownlint config",
    "updated_at": "2019-09-13T17:33:58Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10500",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/34555510?v=4",
      "events_url": "https://api.github.com/users/RDIL/events{/privacy}",
      "followers_url": "https://api.github.com/users/RDIL/followers",
      "following_url": "https://api.github.com/users/RDIL/following{/other_user}",
      "gists_url": "https://api.github.com/users/RDIL/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/RDIL",
      "id": 34555510,
      "login": "RDIL",
      "node_id": "MDQ6VXNlcjM0NTU1NTEw",
      "organizations_url": "https://api.github.com/users/RDIL/orgs",
      "received_events_url": "https://api.github.com/users/RDIL/received_events",
      "repos_url": "https://api.github.com/users/RDIL/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/RDIL/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RDIL/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/RDIL"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "According to the documentation, Foreach -Parallel passes variables by _reference_ with $using: while the rest of PowerShell passes variables by _value_.\r\nThis is a dangerous feature, having the exact same syntax for such different mechanics can cause unintended effects, and could even slip by experienced developers.\r\n\r\nIf these values are to pass by reference, then I suggest the syntax be changed to $ref:\r\nThat will force people to do it with intention, and know exactly what they're looking at at all times. This would be similar to how it is done in C#.",
    "closed_at": "2019-10-23T22:56:53Z",
    "comments": 15,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10499/comments",
    "created_at": "2019-09-08T16:34:35Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10499/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10499",
    "id": 490774722,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "the issue is more of a feature request than a bug",
        "id": 311043050,
        "name": "Issue-Enhancement",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNTA=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Enhancement"
      },
      {
        "color": "0e5a16",
        "default": false,
        "description": "PS-Committee has reviewed this and made a decision",
        "id": 483158128,
        "name": "Committee-Reviewed",
        "node_id": "MDU6TGFiZWw0ODMxNTgxMjg=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Committee-Reviewed"
      },
      {
        "color": "5319e7",
        "default": false,
        "description": "cmdlets in the Microsoft.PowerShell.Core module",
        "id": 552752480,
        "name": "WG-Cmdlets-Core",
        "node_id": "MDU6TGFiZWw1NTI3NTI0ODA=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/WG-Cmdlets-Core"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10499/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0OTA3NzQ3MjI=",
    "number": 10499,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10499/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10499/timeline",
    "title": "Address Dangerous $using: in Foreach-Object -Parallel",
    "updated_at": "2019-10-24T04:30:16Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10499",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/14933926?v=4",
      "events_url": "https://api.github.com/users/pearsonsjp/events{/privacy}",
      "followers_url": "https://api.github.com/users/pearsonsjp/followers",
      "following_url": "https://api.github.com/users/pearsonsjp/following{/other_user}",
      "gists_url": "https://api.github.com/users/pearsonsjp/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/pearsonsjp",
      "id": 14933926,
      "login": "pearsonsjp",
      "node_id": "MDQ6VXNlcjE0OTMzOTI2",
      "organizations_url": "https://api.github.com/users/pearsonsjp/orgs",
      "received_events_url": "https://api.github.com/users/pearsonsjp/received_events",
      "repos_url": "https://api.github.com/users/pearsonsjp/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/pearsonsjp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pearsonsjp/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/pearsonsjp"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "# Summary of the new feature/enhancement\r\n\r\n`Get-Command <a cmdlet alias>` should return the same info as to `Get-Command <cmdlet full name>`.\r\n\r\nBut currently, `Get-Command <a cmdlet alias>` only returns the cmdlet full name.\r\n\r\n# Demo on Invoke-WebRequest and its alias iwr\r\n\r\n```powershell\r\n\r\n# Get-Command without any params\r\n\r\n6.2.2> gcm iwr\r\n\r\nCommandType     Name                                               Version    Source\r\n-----------     ----                                               -------    ------\r\nAlias           iwr -> Invoke-WebRequest\r\n\r\n\r\n6.2.2> gcm Invoke-WebRequest\r\n\r\nCommandType     Name                                               Version    Source\r\n-----------     ----                                               -------    ------\r\nCmdlet          Invoke-WebRequest                                  6.1.0.0    Microsoft.PowerShell.Utility\r\n\r\n# Get-Command with the param -Syntax\r\n\r\n6.2.2> gcm iwr -Syntax\r\nInvoke-WebRequest\r\n\r\n6.2.2> gcm Invoke-WebRequest -Syntax\r\n\r\nInvoke-WebRequest [-Uri] <uri> [-UseBasicParsing] [-WebSession <WebRequestSession>] [-SessionVariable <string>] [-AllowUnencryptedAuthentication] [-Authentication <WebAuthenticationType>] [-Credential <pscredential>] [-UseDefaultCredentials] [-CertificateThumbprint <string>] [-Certificate <X509Certificate>] [-SkipCertificateCheck] [-SslProtocol <WebSslProtocol>] [-Token <securestring>] [-UserAgent <string>] [-DisableKeepAlive] [-TimeoutSec <int>] [-Headers <IDictionary>] [-MaximumRedirection <int>] [-MaximumRetryCount <int>] [-RetryIntervalSec <int>] [-Method <WebRequestMethod>] [-Proxy <uri>] [-ProxyCredential <pscredential>] [-ProxyUseDefaultCredentials] [-Body <Object>] [-Form <IDictionary>] [-ContentType <string>] [-TransferEncoding <string>] [-InFile <string>] [-OutFile <string>] [-PassThru] [-Resume] [-PreserveAuthorizationOnRedirect] [-SkipHeaderValidation] [<CommonParameters>]\r\n```\r\n\r\n# Proposed technical implementation details (optional)\r\n\r\nWe expect to see exactly the same info between `Get-Command iwr` and `Get-Command Invoke-WebRequest`. And the same for all the params.\r\n\r\n",
    "closed_at": null,
    "comments": 8,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10498/comments",
    "created_at": "2019-09-08T08:45:47Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10498/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10498",
    "id": 490728011,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "the issue is more of a feature request than a bug",
        "id": 311043050,
        "name": "Issue-Enhancement",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNTA=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Enhancement"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10498/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0OTA3MjgwMTE=",
    "number": 10498,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10498/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10498/timeline",
    "title": "Feature Request / Get-Command <a cmdlet alias> should return the full info.",
    "updated_at": "2019-09-27T18:46:56Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10498",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/13083856?v=4",
      "events_url": "https://api.github.com/users/copdips/events{/privacy}",
      "followers_url": "https://api.github.com/users/copdips/followers",
      "following_url": "https://api.github.com/users/copdips/following{/other_user}",
      "gists_url": "https://api.github.com/users/copdips/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/copdips",
      "id": 13083856,
      "login": "copdips",
      "node_id": "MDQ6VXNlcjEzMDgzODU2",
      "organizations_url": "https://api.github.com/users/copdips/orgs",
      "received_events_url": "https://api.github.com/users/copdips/received_events",
      "repos_url": "https://api.github.com/users/copdips/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/copdips/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/copdips/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/copdips"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "# Steps to reproduce\r\n\r\nOn Ubuntu 18.04.3 VM on Windows 10 Insiders, PowerShell 7 beta 3 only remains open for about 20 seconds before it closes with no indication as to why.   The shell is usable while its open, but when the time runs out, it closes, whether or not any commands have been entered.\r\n\r\nI have a console with PowerShell 6.2.2 open at the same time, and it remains open without incident.\r\n\r\nI am NOT an avid Linux user, so I don't know much about how it works.",
    "closed_at": "2019-11-03T04:18:09Z",
    "comments": 5,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10497/comments",
    "created_at": "2019-09-07T06:04:23Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10497/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10497",
    "id": 490597040,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "ideally support can be provided via other mechanisms, but sometimes folks do open an issue to get a",
        "id": 311043053,
        "name": "Issue-Question",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNTM=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Question"
      },
      {
        "color": "ffffff",
        "default": false,
        "description": "The question is answered.",
        "id": 423531321,
        "name": "Resolution-Answered",
        "node_id": "MDU6TGFiZWw0MjM1MzEzMjE=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Resolution-Answered"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10497/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0OTA1OTcwNDA=",
    "number": 10497,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10497/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10497/timeline",
    "title": "Powershell 7 beta 3 closes after 20 seconds on Ubuntu 18.04",
    "updated_at": "2019-11-03T17:55:15Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10497",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/26179051?v=4",
      "events_url": "https://api.github.com/users/msftrncs/events{/privacy}",
      "followers_url": "https://api.github.com/users/msftrncs/followers",
      "following_url": "https://api.github.com/users/msftrncs/following{/other_user}",
      "gists_url": "https://api.github.com/users/msftrncs/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/msftrncs",
      "id": 26179051,
      "login": "msftrncs",
      "node_id": "MDQ6VXNlcjI2MTc5MDUx",
      "organizations_url": "https://api.github.com/users/msftrncs/orgs",
      "received_events_url": "https://api.github.com/users/msftrncs/received_events",
      "repos_url": "https://api.github.com/users/msftrncs/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/msftrncs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/msftrncs/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/msftrncs"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Hello,\r\n\r\nDo I need to define where PS should look for the default PATH?\r\n\r\nI just followed the instructions provided for installs using Snap on Debian based ElementaryOS.\r\n\r\nPlease advise\r\n\r\n![PS snap install unable to open 2019-09-07 03 52 11](https://user-images.githubusercontent.com/25548438/64469514-f91c8580-d122-11e9-993d-6dc227673f97.png)\r\n",
    "closed_at": "2020-02-01T00:00:27Z",
    "comments": 2,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10496/comments",
    "created_at": "2019-09-07T03:54:12Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10496/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10496",
    "id": 490587419,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "ideally support can be provided via other mechanisms, but sometimes folks do open an issue to get a",
        "id": 311043053,
        "name": "Issue-Question",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNTM=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Question"
      },
      {
        "color": "ffffff",
        "default": false,
        "description": "The question is answered.",
        "id": 423531321,
        "name": "Resolution-Answered",
        "node_id": "MDU6TGFiZWw0MjM1MzEzMjE=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Resolution-Answered"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10496/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0OTA1ODc0MTk=",
    "number": 10496,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10496/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10496/timeline",
    "title": "Unable to open PowerShell on new Snap install",
    "updated_at": "2020-02-01T00:00:27Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10496",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/25548438?v=4",
      "events_url": "https://api.github.com/users/LibraryofV/events{/privacy}",
      "followers_url": "https://api.github.com/users/LibraryofV/followers",
      "following_url": "https://api.github.com/users/LibraryofV/following{/other_user}",
      "gists_url": "https://api.github.com/users/LibraryofV/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/LibraryofV",
      "id": 25548438,
      "login": "LibraryofV",
      "node_id": "MDQ6VXNlcjI1NTQ4NDM4",
      "organizations_url": "https://api.github.com/users/LibraryofV/orgs",
      "received_events_url": "https://api.github.com/users/LibraryofV/received_events",
      "repos_url": "https://api.github.com/users/LibraryofV/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/LibraryofV/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LibraryofV/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/LibraryofV"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Please allow installation on macOS via `brew cask install powershell` without requiring a password during the install.\r\n\r\nI just read that PowerShell is available on macOS. How cool! But after typing `brew cask install powershell`, I was greeted with a `Password:` prompt:\r\n<img width=\"830\" alt=\"image\" src=\"https://user-images.githubusercontent.com/984080/64465063-79110400-d0bf-11e9-8643-eb7662b06c66.png\">\r\n\r\nI have _never_ had a homebrew package ask me for my password. (I currently have about 60 packages installed.) This makes me feel really uncomfortable... I've decided not to install it after all.",
    "closed_at": "2019-09-11T00:13:27Z",
    "comments": 10,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10495/comments",
    "created_at": "2019-09-06T23:04:59Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10495/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10495",
    "id": 490554118,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "ideally support can be provided via other mechanisms, but sometimes folks do open an issue to get a",
        "id": 311043053,
        "name": "Issue-Question",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNTM=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Question"
      },
      {
        "color": "5319e7",
        "default": false,
        "description": "specific to affecting the build",
        "id": 332202934,
        "name": "Area-Maintainers-Build",
        "node_id": "MDU6TGFiZWwzMzIyMDI5MzQ=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Area-Maintainers-Build"
      },
      {
        "color": "ffffff",
        "default": false,
        "description": "The question is answered.",
        "id": 423531321,
        "name": "Resolution-Answered",
        "node_id": "MDU6TGFiZWw0MjM1MzEzMjE=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Resolution-Answered"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10495/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0OTA1NTQxMTg=",
    "number": 10495,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10495/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10495/timeline",
    "title": "Install on macOS without requiring a password",
    "updated_at": "2020-04-16T22:22:19Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10495",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/984080?v=4",
      "events_url": "https://api.github.com/users/RoyTinker/events{/privacy}",
      "followers_url": "https://api.github.com/users/RoyTinker/followers",
      "following_url": "https://api.github.com/users/RoyTinker/following{/other_user}",
      "gists_url": "https://api.github.com/users/RoyTinker/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/RoyTinker",
      "id": 984080,
      "login": "RoyTinker",
      "node_id": "MDQ6VXNlcjk4NDA4MA==",
      "organizations_url": "https://api.github.com/users/RoyTinker/orgs",
      "received_events_url": "https://api.github.com/users/RoyTinker/received_events",
      "repos_url": "https://api.github.com/users/RoyTinker/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/RoyTinker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RoyTinker/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/RoyTinker"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "Related: #2993\r\n\r\n# Summary of the new feature/enhancement\r\n\r\n`Get-Location` already supports a `-PSProvider` parameter that allows you to specify the provider context explicitly rather than relying on the provider that happens to underlie the current location.\r\n\r\n`Convert-Path` / `Resolve-Path` should  support this parameter too, so that full native / full PS paths can be obtained relative to a _given provider's_ current location without having to rely on the current location.\r\n\r\nIf this parameter were added, the following tests should pass:\r\n\r\n```powershell\r\n# Set the current filesystem location.\r\nPush-Location Temp:\\\r\n$null > ($tmpFile = \"$PID.txt\")\r\n\r\n# Switch to a different provider\r\nPush-Location Env:\\\r\n\r\n# Resolve a path relative to the filesystem provider to an absolute native path. \r\nConvert-Path -LiteralPath $tmpFile -PSProvider FileSystem | \r\n  Should -Be (Join-Path (Get-Location -PSProvider FileSystem).ProviderPath $tmpFile)\r\n\r\n# Resolve a path relative to the filesystem provider to an absolute PS path.\r\nResolve-Path -LiteralPath $tmpFile -PSProvider FileSystem | \r\n  Should -Be (Join-Path (Get-Location -PSProvider FileSystem).Path $tmpFile)\r\n\r\nPop-Location\r\nRemove-Item $tmpFile\r\nPop-Location\r\n```\r\n\r\n\r\n# Proposed technical implementation details (optional)\r\n\r\nI presume there's potential for reuse of the existing code in `Get-Location`.\r\n",
    "closed_at": null,
    "comments": 0,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10494/comments",
    "created_at": "2019-09-06T14:30:04Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10494/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10494",
    "id": 490359374,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "the issue is more of a feature request than a bug",
        "id": 311043050,
        "name": "Issue-Enhancement",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNTA=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Enhancement"
      },
      {
        "color": "5319e7",
        "default": false,
        "description": "cmdlets in the Microsoft.PowerShell.Management module",
        "id": 552752388,
        "name": "WG-Cmdlets-Management",
        "node_id": "MDU6TGFiZWw1NTI3NTIzODg=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/WG-Cmdlets-Management"
      },
      {
        "color": "5319e7",
        "default": false,
        "description": "specific to the FileSystem provider",
        "id": 3070094586,
        "name": "Area-FileSystem-Provider",
        "node_id": "MDU6TGFiZWwzMDcwMDk0NTg2",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Area-FileSystem-Provider"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10494/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0OTAzNTkzNzQ=",
    "number": 10494,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10494/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10494/timeline",
    "title": "Add a -PSProvider parameter to Convert-Path and Resolve-Path, for symmetry with Get-Location",
    "updated_at": "2021-12-03T12:53:28Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10494",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "three functions do not work:\r\n\r\nGet-WinDefaultInputMethodOverride\r\nSet-WinDefaultInputMethodOverride \"0419:00000419\"\r\nSet-WinSystemLocale -SystemLocale ru-RU\r\n\r\nnote i have the languages installed ! an using powershell 5.1 and commands were run using admin powershell.\r\n\r\nGet-WinDefaultInputMethodOverride throws an exception\r\nnevermind suddenly Get-WinDefaultInputMethodOverride started working\r\n\r\nSet-WinDefaultInputMethodOverride  \"0419:00000419\"(4019 is russian) correctly sets the registry values located at HKEY_CURRENT_USER\\Keyboard Layout\\Preload and also it correctly shows the language it was supposed to switch so in \"Advanced keyboard settings\" but this dose not change the keyboard language as expected:\r\n\r\nSet-WinSystemLocale -SystemLocale ru-RU doesn't seem to do anything, i call Get-WinSystemLocale and it just returns and says am english no matter how many times i do the command.\r\n\r\nnote \"Set-WinUserLanguageList ru-RU -Force\" successfully changes the keyboard language but is slow and removes all other languages installed.\r\n![bug](https://user-images.githubusercontent.com/28570401/64428665-3a258300-d0ac-11e9-9a68-01a374bc1330.png)\r\n",
    "closed_at": "2019-09-06T13:09:59Z",
    "comments": 1,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10493/comments",
    "created_at": "2019-09-06T12:43:02Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10493/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10493",
    "id": 490306894,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "ideally support can be provided via other mechanisms, but sometimes folks do open an issue to get a",
        "id": 311043053,
        "name": "Issue-Question",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNTM=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Question"
      },
      {
        "color": "ffffff",
        "default": false,
        "description": "The question is answered.",
        "id": 423531321,
        "name": "Resolution-Answered",
        "node_id": "MDU6TGFiZWw0MjM1MzEzMjE=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Resolution-Answered"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10493/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0OTAzMDY4OTQ=",
    "number": 10493,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10493/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10493/timeline",
    "title": "3 non working keyboard setting commands",
    "updated_at": "2019-09-06T13:10:06Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10493",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/28570401?v=4",
      "events_url": "https://api.github.com/users/MrLiamMcQ/events{/privacy}",
      "followers_url": "https://api.github.com/users/MrLiamMcQ/followers",
      "following_url": "https://api.github.com/users/MrLiamMcQ/following{/other_user}",
      "gists_url": "https://api.github.com/users/MrLiamMcQ/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/MrLiamMcQ",
      "id": 28570401,
      "login": "MrLiamMcQ",
      "node_id": "MDQ6VXNlcjI4NTcwNDAx",
      "organizations_url": "https://api.github.com/users/MrLiamMcQ/orgs",
      "received_events_url": "https://api.github.com/users/MrLiamMcQ/received_events",
      "repos_url": "https://api.github.com/users/MrLiamMcQ/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/MrLiamMcQ/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MrLiamMcQ/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/MrLiamMcQ"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": {
      "avatar_url": "https://avatars.githubusercontent.com/u/12820925?v=4",
      "events_url": "https://api.github.com/users/adityapatwardhan/events{/privacy}",
      "followers_url": "https://api.github.com/users/adityapatwardhan/followers",
      "following_url": "https://api.github.com/users/adityapatwardhan/following{/other_user}",
      "gists_url": "https://api.github.com/users/adityapatwardhan/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/adityapatwardhan",
      "id": 12820925,
      "login": "adityapatwardhan",
      "node_id": "MDQ6VXNlcjEyODIwOTI1",
      "organizations_url": "https://api.github.com/users/adityapatwardhan/orgs",
      "received_events_url": "https://api.github.com/users/adityapatwardhan/received_events",
      "repos_url": "https://api.github.com/users/adityapatwardhan/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/adityapatwardhan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adityapatwardhan/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/adityapatwardhan"
    },
    "assignees": [
      {
        "avatar_url": "https://avatars.githubusercontent.com/u/12820925?v=4",
        "events_url": "https://api.github.com/users/adityapatwardhan/events{/privacy}",
        "followers_url": "https://api.github.com/users/adityapatwardhan/followers",
        "following_url": "https://api.github.com/users/adityapatwardhan/following{/other_user}",
        "gists_url": "https://api.github.com/users/adityapatwardhan/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/adityapatwardhan",
        "id": 12820925,
        "login": "adityapatwardhan",
        "node_id": "MDQ6VXNlcjEyODIwOTI1",
        "organizations_url": "https://api.github.com/users/adityapatwardhan/orgs",
        "received_events_url": "https://api.github.com/users/adityapatwardhan/received_events",
        "repos_url": "https://api.github.com/users/adityapatwardhan/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/adityapatwardhan/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/adityapatwardhan/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/adityapatwardhan"
      }
    ],
    "author_association": "CONTRIBUTOR",
    "body": "# PR Summary\r\n\r\n- Adds an experimental `-Runspace` parameter `Get-PSBreakpoint`, `Set-PSBreakpoint`, `Enable-PSBreakpoint`, `Disable-PSBreakpoint`, and `Remove-PSBreakpoint`. This parameter is added to the \"Microsoft.PowerShell.Utility.PSManageBreakpointsInRunspace\" experimental flag that was added in PR #10338. \r\n- Refactors the classes behind the `*-PSBreakpoint` cmdlets so that they all work consistently. This refactoring did not change the behavior of these cmdlets beyond adding support for runspace breakpoint management, with one exception:\r\n    - Changed the default parameter set for `Enable-PSBreakpoint` so that it is more performant when passed in breakpoints via a pipeline. The previous configuration for this cmdlet would always result in the \"Id\" parameter set being used, even when you pipe in a breakpoint. This change does not impact the functionality of the cmdlet -- it still accepts pipeline input and command line input with named or unnamed parameters the same way. The only visible impact is that this cmdlet will prompt users for a breakpoint instead of an ID now. See Issue #10188 for a discussion related to this.\r\n\r\n## PR Context\r\n\r\nNow that the SDK has been enhanced to support breakpoint management in runspaces (see PR #10338), this PR builds on that work, exposing a common `-Runspace` parameter in all `*-PSBreakpoint` cmdlets so that users can use the same cmdlets to manage breakpoints in their local session or in a remote runspace.\r\n\r\n## PR Checklist\r\n\r\n- [X] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [X] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [X] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [X] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [X] Issue filed: [Docs Issue #6259](https://github.com/MicrosoftDocs/PowerShell-Docs/issues/6259)\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [X] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [X] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
    "closed_at": "2020-07-21T18:48:56Z",
    "comments": 19,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10492/comments",
    "created_at": "2019-09-06T03:29:19Z",
    "draft": false,
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10492/events",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10492",
    "id": 490108771,
    "labels": [
      {
        "color": "0e5a16",
        "default": false,
        "description": "PS-Committee has reviewed this and made a decision",
        "id": 483158128,
        "name": "Committee-Reviewed",
        "node_id": "MDU6TGFiZWw0ODMxNTgxMjg=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Committee-Reviewed"
      },
      {
        "color": "fbca04",
        "default": false,
        "description": "Indicates that a PR should be marked as an Experimental Feature in the Change Log",
        "id": 1220786556,
        "name": "CL-Experimental",
        "node_id": "MDU6TGFiZWwxMjIwNzg2NTU2",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/CL-Experimental"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10492/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": "2020-08-18T18:04:38Z",
      "closed_issues": 71,
      "created_at": "2020-06-30T22:14:29Z",
      "creator": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
        "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
        "followers_url": "https://api.github.com/users/TravisEz13/followers",
        "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
        "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/TravisEz13",
        "id": 10873629,
        "login": "TravisEz13",
        "node_id": "MDQ6VXNlcjEwODczNjI5",
        "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
        "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
        "repos_url": "https://api.github.com/users/TravisEz13/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/TravisEz13"
      },
      "description": "",
      "due_on": null,
      "html_url": "https://github.com/PowerShell/PowerShell/milestone/92",
      "id": 5602898,
      "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/milestones/92/labels",
      "node_id": "MDk6TWlsZXN0b25lNTYwMjg5OA==",
      "number": 92,
      "open_issues": 0,
      "state": "closed",
      "title": "7.1.0-preview.6",
      "updated_at": "2020-08-18T18:04:38Z",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/milestones/92"
    },
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzE0Nzc5MTEy",
    "number": 10492,
    "performed_via_github_app": null,
    "pull_request": {
      "diff_url": "https://github.com/PowerShell/PowerShell/pull/10492.diff",
      "html_url": "https://github.com/PowerShell/PowerShell/pull/10492",
      "merged_at": "2020-07-21T18:48:56Z",
      "patch_url": "https://github.com/PowerShell/PowerShell/pull/10492.patch",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/pulls/10492"
    },
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10492/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10492/timeline",
    "title": "Add -Runspace parameter to all *-PSBreakpoint cmdlets",
    "updated_at": "2020-08-17T22:21:22Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10492",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n\r\n-->\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\nParam (\r\n[Parameter(Mandatory=$true)]\r\n[string[]] $t\r\n)\r\n\r\nFunction test {\r\n$empty = @()\r\n\r\n$t += $empty\r\n\r\nWrite-Host $t\r\n}\r\n\r\ntest\r\n```\r\n\r\n# Expected behavior\r\n\r\n```none\r\nshould append input arguments with empty array\r\n```\r\n\r\n# Actual behavior\r\n\r\n```none\r\nassigns empty array instead of appending the empty array\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nPSVersion                      5.1.18362.145\r\n```\r\n",
    "closed_at": "2019-09-08T00:00:32Z",
    "comments": 2,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10491/comments",
    "created_at": "2019-09-05T20:58:56Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10491/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10491",
    "id": 489998560,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "ideally support can be provided via other mechanisms, but sometimes folks do open an issue to get a",
        "id": 311043053,
        "name": "Issue-Question",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNTM=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Question"
      },
      {
        "color": "ffffff",
        "default": false,
        "description": "The question is answered.",
        "id": 423531321,
        "name": "Resolution-Answered",
        "node_id": "MDU6TGFiZWw0MjM1MzEzMjE=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Resolution-Answered"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10491/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0ODk5OTg1NjA=",
    "number": 10491,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10491/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10491/timeline",
    "title": "Shorthand Operator does not work inside function",
    "updated_at": "2019-09-08T00:00:32Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10491",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/31710630?v=4",
      "events_url": "https://api.github.com/users/SanthoshBonala/events{/privacy}",
      "followers_url": "https://api.github.com/users/SanthoshBonala/followers",
      "following_url": "https://api.github.com/users/SanthoshBonala/following{/other_user}",
      "gists_url": "https://api.github.com/users/SanthoshBonala/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SanthoshBonala",
      "id": 31710630,
      "login": "SanthoshBonala",
      "node_id": "MDQ6VXNlcjMxNzEwNjMw",
      "organizations_url": "https://api.github.com/users/SanthoshBonala/orgs",
      "received_events_url": "https://api.github.com/users/SanthoshBonala/received_events",
      "repos_url": "https://api.github.com/users/SanthoshBonala/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SanthoshBonala/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SanthoshBonala/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SanthoshBonala"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": {
      "avatar_url": "https://avatars.githubusercontent.com/u/19415881?v=4",
      "events_url": "https://api.github.com/users/sdwheeler/events{/privacy}",
      "followers_url": "https://api.github.com/users/sdwheeler/followers",
      "following_url": "https://api.github.com/users/sdwheeler/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdwheeler/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/sdwheeler",
      "id": 19415881,
      "login": "sdwheeler",
      "node_id": "MDQ6VXNlcjE5NDE1ODgx",
      "organizations_url": "https://api.github.com/users/sdwheeler/orgs",
      "received_events_url": "https://api.github.com/users/sdwheeler/received_events",
      "repos_url": "https://api.github.com/users/sdwheeler/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/sdwheeler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdwheeler/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/sdwheeler"
    },
    "assignees": [
      {
        "avatar_url": "https://avatars.githubusercontent.com/u/19415881?v=4",
        "events_url": "https://api.github.com/users/sdwheeler/events{/privacy}",
        "followers_url": "https://api.github.com/users/sdwheeler/followers",
        "following_url": "https://api.github.com/users/sdwheeler/following{/other_user}",
        "gists_url": "https://api.github.com/users/sdwheeler/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/sdwheeler",
        "id": 19415881,
        "login": "sdwheeler",
        "node_id": "MDQ6VXNlcjE5NDE1ODgx",
        "organizations_url": "https://api.github.com/users/sdwheeler/orgs",
        "received_events_url": "https://api.github.com/users/sdwheeler/received_events",
        "repos_url": "https://api.github.com/users/sdwheeler/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/sdwheeler/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sdwheeler/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/sdwheeler"
      }
    ],
    "author_association": "NONE",
    "body": "When running the command\r\n\r\nGet-Help <insert command name here>-online\r\n\r\nfrom PSCore 6.2.2, it opens the web page for the Powershell **5.0** documentation for the command.  One would think this should open the version-specific version of the documentation.  Not only has this caused issues for me, but I've also had experience where Microsoft support personnel were quoting from the wrong version of documentation because they didn't realize what was happening.\r\n",
    "closed_at": "2019-09-06T14:49:12Z",
    "comments": 8,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10490/comments",
    "created_at": "2019-09-05T20:53:36Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10490/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10490",
    "id": 489996290,
    "labels": [
      {
        "color": "5319e7",
        "default": false,
        "description": "help infrastructure and formatting of help",
        "id": 418959842,
        "name": "WG-Interactive-HelpSystem",
        "node_id": "MDU6TGFiZWw0MTg5NTk4NDI=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/WG-Interactive-HelpSystem"
      },
      {
        "color": "ffffff",
        "default": false,
        "description": "The issue is caused by external component(s).",
        "id": 427077877,
        "name": "Resolution-External",
        "node_id": "MDU6TGFiZWw0MjcwNzc4Nzc=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Resolution-External"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10490/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0ODk5OTYyOTA=",
    "number": 10490,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10490/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10490/timeline",
    "title": "PowerShell Core get-help online points to wrong version",
    "updated_at": "2019-09-16T10:35:18Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10490",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/17556410?v=4",
      "events_url": "https://api.github.com/users/towerbe/events{/privacy}",
      "followers_url": "https://api.github.com/users/towerbe/followers",
      "following_url": "https://api.github.com/users/towerbe/following{/other_user}",
      "gists_url": "https://api.github.com/users/towerbe/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/towerbe",
      "id": 17556410,
      "login": "towerbe",
      "node_id": "MDQ6VXNlcjE3NTU2NDEw",
      "organizations_url": "https://api.github.com/users/towerbe/orgs",
      "received_events_url": "https://api.github.com/users/towerbe/received_events",
      "repos_url": "https://api.github.com/users/towerbe/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/towerbe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/towerbe/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/towerbe"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": {
      "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
      "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
      "followers_url": "https://api.github.com/users/TravisEz13/followers",
      "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
      "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/TravisEz13",
      "id": 10873629,
      "login": "TravisEz13",
      "node_id": "MDQ6VXNlcjEwODczNjI5",
      "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
      "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
      "repos_url": "https://api.github.com/users/TravisEz13/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/TravisEz13"
    },
    "assignees": [
      {
        "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
        "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
        "followers_url": "https://api.github.com/users/TravisEz13/followers",
        "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
        "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/TravisEz13",
        "id": 10873629,
        "login": "TravisEz13",
        "node_id": "MDQ6VXNlcjEwODczNjI5",
        "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
        "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
        "repos_url": "https://api.github.com/users/TravisEz13/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/TravisEz13"
      }
    ],
    "author_association": "MEMBER",
    "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nThis makes it so that you don't install the same Daily build that you already have.\r\n\r\n## PR Context\r\n\r\nI want to include a single line in my profile like:\r\n\r\n```pwsh\r\niex \"& {$(irm aka.ms/install-powershell.ps1)} -Daily\"\r\n```\r\n\r\nWithout having to check if I already have the latest Daily installed.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
    "closed_at": "2019-09-12T18:25:31Z",
    "comments": 5,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10489/comments",
    "created_at": "2019-09-05T18:29:43Z",
    "draft": false,
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10489/events",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10489",
    "id": 489928652,
    "labels": [
      {
        "color": "fbca04",
        "default": false,
        "description": "Indicates that a PR should be marked as a tools change in the Change Log",
        "id": 1126734813,
        "name": "CL-Tools",
        "node_id": "MDU6TGFiZWwxMTI2NzM0ODEz",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/CL-Tools"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10489/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": "2019-09-22T18:49:57Z",
      "closed_issues": 39,
      "created_at": "2019-08-19T21:02:56Z",
      "creator": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
        "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
        "followers_url": "https://api.github.com/users/TravisEz13/followers",
        "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
        "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/TravisEz13",
        "id": 10873629,
        "login": "TravisEz13",
        "node_id": "MDQ6VXNlcjEwODczNjI5",
        "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
        "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
        "repos_url": "https://api.github.com/users/TravisEz13/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/TravisEz13"
      },
      "description": "",
      "due_on": null,
      "html_url": "https://github.com/PowerShell/PowerShell/milestone/69",
      "id": 4587190,
      "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/milestones/69/labels",
      "node_id": "MDk6TWlsZXN0b25lNDU4NzE5MA==",
      "number": 69,
      "open_issues": 0,
      "state": "closed",
      "title": "7.0.0-preview.4",
      "updated_at": "2019-09-22T18:49:57Z",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/milestones/69"
    },
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzE0NjQwNzIx",
    "number": 10489,
    "performed_via_github_app": null,
    "pull_request": {
      "diff_url": "https://github.com/PowerShell/PowerShell/pull/10489.diff",
      "html_url": "https://github.com/PowerShell/PowerShell/pull/10489",
      "merged_at": "2019-09-12T18:25:31Z",
      "patch_url": "https://github.com/PowerShell/PowerShell/pull/10489.patch",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/pulls/10489"
    },
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10489/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10489/timeline",
    "title": "Prevent the installation of the same version we have.",
    "updated_at": "2019-09-19T18:58:44Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10489",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2644648?v=4",
      "events_url": "https://api.github.com/users/TylerLeonhardt/events{/privacy}",
      "followers_url": "https://api.github.com/users/TylerLeonhardt/followers",
      "following_url": "https://api.github.com/users/TylerLeonhardt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TylerLeonhardt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/TylerLeonhardt",
      "id": 2644648,
      "login": "TylerLeonhardt",
      "node_id": "MDQ6VXNlcjI2NDQ2NDg=",
      "organizations_url": "https://api.github.com/users/TylerLeonhardt/orgs",
      "received_events_url": "https://api.github.com/users/TylerLeonhardt/received_events",
      "repos_url": "https://api.github.com/users/TylerLeonhardt/repos",
      "site_admin": true,
      "starred_url": "https://api.github.com/users/TylerLeonhardt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TylerLeonhardt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/TylerLeonhardt"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Hi!\r\n\r\nI have a module that instantiates a web service proxy object (through `New-WebServiceProxy`) generated based on a fairly large WSDL definition. Within that definition there some methods that contain optional parameters, i.e.:\r\n```\r\n<xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"SomeParameter\" nillable=\"true\" type=\"xsd:string\" />\r\n```\r\n\r\nThe problem is that when I invoke those methods without specifying anything for the optional parameters, they get serialized as:\r\n```\r\n<SomeParameter xsi:nil=\"true\" xmlns=\"\" />\r\n```\r\n…which, in turn is being interpreted by the server as if it was set to Null and acted accordingly. Imagine So in order to call a method that updates some object in a database, I have to know all its property values in advance before and populate them accordingly to avoid them being overwritten by nulls.\r\n\r\nWhat I'd like to have instead is an ability to control whether certain properties should be serialized or not. Is this possible?\r\n\r\nWhile googling around, I came across a suggestion to override EmitDefaultValue attribute, but I can't figure out how that can be done at runtime and not even sure it is applicable to the class generated by New-WebServiceProxy. Another suggestions were to use ShouldSerialize methods and XMLIgnore attributes, but I couldn't figure out how to apply that. Does anyone have any idea?\r\n\r\nThanks!",
    "closed_at": "2019-09-07T00:00:35Z",
    "comments": 4,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10488/comments",
    "created_at": "2019-09-05T13:06:36Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10488/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10488",
    "id": 489739252,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "ideally support can be provided via other mechanisms, but sometimes folks do open an issue to get a",
        "id": 311043053,
        "name": "Issue-Question",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNTM=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Question"
      },
      {
        "color": "ffffff",
        "default": false,
        "description": "The question is answered.",
        "id": 423531321,
        "name": "Resolution-Answered",
        "node_id": "MDU6TGFiZWw0MjM1MzEzMjE=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Resolution-Answered"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10488/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0ODk3MzkyNTI=",
    "number": 10488,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10488/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10488/timeline",
    "title": "New-WebServiceProxy and calling methods with optional parameters ",
    "updated_at": "2019-09-07T00:00:35Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10488",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/18121861?v=4",
      "events_url": "https://api.github.com/users/Glober777/events{/privacy}",
      "followers_url": "https://api.github.com/users/Glober777/followers",
      "following_url": "https://api.github.com/users/Glober777/following{/other_user}",
      "gists_url": "https://api.github.com/users/Glober777/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/Glober777",
      "id": 18121861,
      "login": "Glober777",
      "node_id": "MDQ6VXNlcjE4MTIxODYx",
      "organizations_url": "https://api.github.com/users/Glober777/orgs",
      "received_events_url": "https://api.github.com/users/Glober777/received_events",
      "repos_url": "https://api.github.com/users/Glober777/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/Glober777/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Glober777/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/Glober777"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    },
    "assignees": [
      {
        "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
        "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
        "followers_url": "https://api.github.com/users/daxian-dbw/followers",
        "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
        "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/daxian-dbw",
        "id": 127450,
        "login": "daxian-dbw",
        "node_id": "MDQ6VXNlcjEyNzQ1MA==",
        "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
        "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
        "repos_url": "https://api.github.com/users/daxian-dbw/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/daxian-dbw"
      }
    ],
    "author_association": "CONTRIBUTOR",
    "body": "# PR Summary\r\n\r\nFlag the `switch` statement condition clause `default` token as a keyword\r\ntoken to facilitate (PSReadLine) highlighting it as a keyword.  Closes #10470.\r\n\r\nThis change is to treat the `default` clause keyword as a full keyword token, and as such token based highlighters will see it as a keyword.\r\n\r\n## PR Context\r\n\r\nFlagging the `default` condition clause token of the `switch` statement as a keyword will facilitate highlighting of the keyword to better contrast against other bareword string literal conditions.\r\n\r\nA simple (partial) example:\r\n```PowerShell\r\n# return simple element value (need to check for Boolean datatype, and process value accordingly)\r\nswitch ($node.Name) {\r\n    true { $true; continue } # return a Boolean TRUE value\r\n    false { $false; continue } # return a Boolean FALSE value\r\n    default { $node.Value } # return the element value\r\n}\r\n```\r\nHighlighting of the `default` keyword in the above example makes it easier to distinguish the special condition clause from the other bareword conditions.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [X] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
    "closed_at": "2020-06-09T17:22:39Z",
    "comments": 10,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10487/comments",
    "created_at": "2019-09-05T06:21:54Z",
    "draft": false,
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10487/events",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10487",
    "id": 489550307,
    "labels": [
      {
        "color": "fbca04",
        "default": false,
        "description": "Indicates that a PR should be marked as a general cmdlet change in the Change Log",
        "id": 1126735368,
        "name": "CL-General",
        "node_id": "MDU6TGFiZWwxMTI2NzM1MzY4",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/CL-General"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10487/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": "2020-06-29T18:01:15Z",
      "closed_issues": 99,
      "created_at": "2020-05-14T19:27:46Z",
      "creator": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
        "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
        "followers_url": "https://api.github.com/users/TravisEz13/followers",
        "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
        "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/TravisEz13",
        "id": 10873629,
        "login": "TravisEz13",
        "node_id": "MDQ6VXNlcjEwODczNjI5",
        "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
        "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
        "repos_url": "https://api.github.com/users/TravisEz13/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/TravisEz13"
      },
      "description": "",
      "due_on": null,
      "html_url": "https://github.com/PowerShell/PowerShell/milestone/88",
      "id": 5424549,
      "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/milestones/88/labels",
      "node_id": "MDk6TWlsZXN0b25lNTQyNDU0OQ==",
      "number": 88,
      "open_issues": 0,
      "state": "closed",
      "title": "7.1.0-preview.4",
      "updated_at": "2020-07-14T23:29:14Z",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/milestones/88"
    },
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzE0MzQzNjg0",
    "number": 10487,
    "performed_via_github_app": null,
    "pull_request": {
      "diff_url": "https://github.com/PowerShell/PowerShell/pull/10487.diff",
      "html_url": "https://github.com/PowerShell/PowerShell/pull/10487",
      "merged_at": "2020-06-09T17:22:38Z",
      "patch_url": "https://github.com/PowerShell/PowerShell/pull/10487.patch",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/pulls/10487"
    },
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10487/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10487/timeline",
    "title": "Flag `default` switch statement condition clause as keyword",
    "updated_at": "2020-08-18T18:01:53Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10487",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/26179051?v=4",
      "events_url": "https://api.github.com/users/msftrncs/events{/privacy}",
      "followers_url": "https://api.github.com/users/msftrncs/followers",
      "following_url": "https://api.github.com/users/msftrncs/following{/other_user}",
      "gists_url": "https://api.github.com/users/msftrncs/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/msftrncs",
      "id": 26179051,
      "login": "msftrncs",
      "node_id": "MDQ6VXNlcjI2MTc5MDUx",
      "organizations_url": "https://api.github.com/users/msftrncs/orgs",
      "received_events_url": "https://api.github.com/users/msftrncs/received_events",
      "repos_url": "https://api.github.com/users/msftrncs/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/msftrncs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/msftrncs/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/msftrncs"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "COLLABORATOR",
    "body": "# Summary of the new feature/enhancement\r\n\r\nAdd a `-Wait` parameter to `Restart-Service` so that it blocks until the service has restarted.",
    "closed_at": "2019-10-24T20:47:32Z",
    "comments": 5,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10486/comments",
    "created_at": "2019-09-05T01:05:55Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10486/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10486",
    "id": 489475627,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "the issue is more of a feature request than a bug",
        "id": 311043050,
        "name": "Issue-Enhancement",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNTA=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Enhancement"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10486/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0ODk0NzU2Mjc=",
    "number": 10486,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10486/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10486/timeline",
    "title": "Add -Wait parameter to Restart-Service (and other applicable *-Service cmdlets)",
    "updated_at": "2019-10-29T18:15:11Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10486",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7009879?v=4",
      "events_url": "https://api.github.com/users/rjmholt/events{/privacy}",
      "followers_url": "https://api.github.com/users/rjmholt/followers",
      "following_url": "https://api.github.com/users/rjmholt/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjmholt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rjmholt",
      "id": 7009879,
      "login": "rjmholt",
      "node_id": "MDQ6VXNlcjcwMDk4Nzk=",
      "organizations_url": "https://api.github.com/users/rjmholt/orgs",
      "received_events_url": "https://api.github.com/users/rjmholt/received_events",
      "repos_url": "https://api.github.com/users/rjmholt/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rjmholt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjmholt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rjmholt"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    },
    "assignees": [
      {
        "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
        "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
        "followers_url": "https://api.github.com/users/daxian-dbw/followers",
        "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
        "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/daxian-dbw",
        "id": 127450,
        "login": "daxian-dbw",
        "node_id": "MDQ6VXNlcjEyNzQ1MA==",
        "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
        "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
        "repos_url": "https://api.github.com/users/daxian-dbw/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/daxian-dbw"
      }
    ],
    "author_association": "MEMBER",
    "body": "Reverts PowerShell/PowerShell#10454\r\n\r\nIt turns out this optimization brings in a breaking change (see https://github.com/PowerShell/PowerShell/issues/10477#issuecomment-527655997): `$MyInvocation` is different comparing to before the optimization change. I tried to fix the breaking change, but couldn't without introducing more hacky code. Given that, that PR should be reverted.",
    "closed_at": "2019-09-05T05:12:31Z",
    "comments": 0,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10485/comments",
    "created_at": "2019-09-04T23:56:47Z",
    "draft": false,
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10485/events",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10485",
    "id": 489461064,
    "labels": [
      {
        "color": "fbca04",
        "default": false,
        "description": "Indicates that a PR is reverted and not part of the build.",
        "id": 1149051592,
        "name": "CL-NotInBuild",
        "node_id": "MDU6TGFiZWwxMTQ5MDUxNTky",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/CL-NotInBuild"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10485/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": "2019-09-22T18:49:57Z",
      "closed_issues": 39,
      "created_at": "2019-08-19T21:02:56Z",
      "creator": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
        "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
        "followers_url": "https://api.github.com/users/TravisEz13/followers",
        "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
        "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/TravisEz13",
        "id": 10873629,
        "login": "TravisEz13",
        "node_id": "MDQ6VXNlcjEwODczNjI5",
        "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
        "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
        "repos_url": "https://api.github.com/users/TravisEz13/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/TravisEz13"
      },
      "description": "",
      "due_on": null,
      "html_url": "https://github.com/PowerShell/PowerShell/milestone/69",
      "id": 4587190,
      "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/milestones/69/labels",
      "node_id": "MDk6TWlsZXN0b25lNDU4NzE5MA==",
      "number": 69,
      "open_issues": 0,
      "state": "closed",
      "title": "7.0.0-preview.4",
      "updated_at": "2019-09-22T18:49:57Z",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/milestones/69"
    },
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzE0Mjc0Njk1",
    "number": 10485,
    "performed_via_github_app": null,
    "pull_request": {
      "diff_url": "https://github.com/PowerShell/PowerShell/pull/10485.diff",
      "html_url": "https://github.com/PowerShell/PowerShell/pull/10485",
      "merged_at": "2019-09-05T05:12:31Z",
      "patch_url": "https://github.com/PowerShell/PowerShell/pull/10485.patch",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/pulls/10485"
    },
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10485/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10485/timeline",
    "title": "Revert the PR \"Make `ForEach-Object` faster for its commonly used scenarios\"",
    "updated_at": "2019-09-05T20:11:20Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10485",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": {
      "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
      "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
      "followers_url": "https://api.github.com/users/TravisEz13/followers",
      "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
      "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/TravisEz13",
      "id": 10873629,
      "login": "TravisEz13",
      "node_id": "MDQ6VXNlcjEwODczNjI5",
      "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
      "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
      "repos_url": "https://api.github.com/users/TravisEz13/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/TravisEz13"
    },
    "assignees": [
      {
        "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
        "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
        "followers_url": "https://api.github.com/users/TravisEz13/followers",
        "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
        "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/TravisEz13",
        "id": 10873629,
        "login": "TravisEz13",
        "node_id": "MDQ6VXNlcjEwODczNjI5",
        "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
        "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
        "repos_url": "https://api.github.com/users/TravisEz13/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/TravisEz13"
      }
    ],
    "author_association": "CONTRIBUTOR",
    "body": "# PR Summary\r\n\r\nUpdate to .Net Core 3.0-preview9, including out of band NuGet packages\r\ncc @SteveL-MSFT \r\n\r\n## PR Context\r\n\r\nhttps://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-preview-9/\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
    "closed_at": "2019-09-06T19:15:49Z",
    "comments": 2,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10484/comments",
    "created_at": "2019-09-04T21:14:46Z",
    "draft": false,
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10484/events",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10484",
    "id": 489402017,
    "labels": [
      {
        "color": "fbca04",
        "default": false,
        "description": "Indicates that a PR should be marked as a build or packaging change in the Change Log",
        "id": 1126735745,
        "name": "CL-BuildPackaging",
        "node_id": "MDU6TGFiZWwxMTI2NzM1NzQ1",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/CL-BuildPackaging"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10484/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": "2019-09-22T18:49:57Z",
      "closed_issues": 39,
      "created_at": "2019-08-19T21:02:56Z",
      "creator": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
        "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
        "followers_url": "https://api.github.com/users/TravisEz13/followers",
        "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
        "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/TravisEz13",
        "id": 10873629,
        "login": "TravisEz13",
        "node_id": "MDQ6VXNlcjEwODczNjI5",
        "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
        "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
        "repos_url": "https://api.github.com/users/TravisEz13/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/TravisEz13"
      },
      "description": "",
      "due_on": null,
      "html_url": "https://github.com/PowerShell/PowerShell/milestone/69",
      "id": 4587190,
      "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/milestones/69/labels",
      "node_id": "MDk6TWlsZXN0b25lNDU4NzE5MA==",
      "number": 69,
      "open_issues": 0,
      "state": "closed",
      "title": "7.0.0-preview.4",
      "updated_at": "2019-09-22T18:49:57Z",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/milestones/69"
    },
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzE0MjMxNDg0",
    "number": 10484,
    "performed_via_github_app": null,
    "pull_request": {
      "diff_url": "https://github.com/PowerShell/PowerShell/pull/10484.diff",
      "html_url": "https://github.com/PowerShell/PowerShell/pull/10484",
      "merged_at": "2019-09-06T19:15:49Z",
      "patch_url": "https://github.com/PowerShell/PowerShell/pull/10484.patch",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/pulls/10484"
    },
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10484/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10484/timeline",
    "title": "Upgrade to Netcoreapp3.0 preview9",
    "updated_at": "2019-09-19T17:51:20Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10484",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/9250262?v=4",
      "events_url": "https://api.github.com/users/bergmeister/events{/privacy}",
      "followers_url": "https://api.github.com/users/bergmeister/followers",
      "following_url": "https://api.github.com/users/bergmeister/following{/other_user}",
      "gists_url": "https://api.github.com/users/bergmeister/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/bergmeister",
      "id": 9250262,
      "login": "bergmeister",
      "node_id": "MDQ6VXNlcjkyNTAyNjI=",
      "organizations_url": "https://api.github.com/users/bergmeister/orgs",
      "received_events_url": "https://api.github.com/users/bergmeister/received_events",
      "repos_url": "https://api.github.com/users/bergmeister/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/bergmeister/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bergmeister/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/bergmeister"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": {
      "avatar_url": "https://avatars.githubusercontent.com/u/12820925?v=4",
      "events_url": "https://api.github.com/users/adityapatwardhan/events{/privacy}",
      "followers_url": "https://api.github.com/users/adityapatwardhan/followers",
      "following_url": "https://api.github.com/users/adityapatwardhan/following{/other_user}",
      "gists_url": "https://api.github.com/users/adityapatwardhan/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/adityapatwardhan",
      "id": 12820925,
      "login": "adityapatwardhan",
      "node_id": "MDQ6VXNlcjEyODIwOTI1",
      "organizations_url": "https://api.github.com/users/adityapatwardhan/orgs",
      "received_events_url": "https://api.github.com/users/adityapatwardhan/received_events",
      "repos_url": "https://api.github.com/users/adityapatwardhan/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/adityapatwardhan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adityapatwardhan/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/adityapatwardhan"
    },
    "assignees": [
      {
        "avatar_url": "https://avatars.githubusercontent.com/u/12820925?v=4",
        "events_url": "https://api.github.com/users/adityapatwardhan/events{/privacy}",
        "followers_url": "https://api.github.com/users/adityapatwardhan/followers",
        "following_url": "https://api.github.com/users/adityapatwardhan/following{/other_user}",
        "gists_url": "https://api.github.com/users/adityapatwardhan/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/adityapatwardhan",
        "id": 12820925,
        "login": "adityapatwardhan",
        "node_id": "MDQ6VXNlcjEyODIwOTI1",
        "organizations_url": "https://api.github.com/users/adityapatwardhan/orgs",
        "received_events_url": "https://api.github.com/users/adityapatwardhan/received_events",
        "repos_url": "https://api.github.com/users/adityapatwardhan/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/adityapatwardhan/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/adityapatwardhan/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/adityapatwardhan"
      }
    ],
    "author_association": "CONTRIBUTOR",
    "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nThis PR is to add `-SecurityDescriptorSDDL` parameter to `New-Service` cmdlet so that its in par with `Set-Service` in setting sddl for a service.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [x] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: https://github.com/MicrosoftDocs/PowerShell-Docs/pull/4735\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
    "closed_at": "2019-10-04T00:12:18Z",
    "comments": 5,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10483/comments",
    "created_at": "2019-09-04T16:53:22Z",
    "draft": false,
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10483/events",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10483",
    "id": 489277686,
    "labels": [
      {
        "color": "fbca04",
        "default": false,
        "description": "Indicates that a PR should be marked as a general cmdlet change in the Change Log",
        "id": 1126735368,
        "name": "CL-General",
        "node_id": "MDU6TGFiZWwxMTI2NzM1MzY4",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/CL-General"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10483/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": "2019-10-24T04:50:52Z",
      "closed_issues": 78,
      "created_at": "2019-09-12T21:38:19Z",
      "creator": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
        "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
        "followers_url": "https://api.github.com/users/TravisEz13/followers",
        "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
        "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/TravisEz13",
        "id": 10873629,
        "login": "TravisEz13",
        "node_id": "MDQ6VXNlcjEwODczNjI5",
        "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
        "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
        "repos_url": "https://api.github.com/users/TravisEz13/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/TravisEz13"
      },
      "description": "",
      "due_on": null,
      "html_url": "https://github.com/PowerShell/PowerShell/milestone/71",
      "id": 4655520,
      "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/milestones/71/labels",
      "node_id": "MDk6TWlsZXN0b25lNDY1NTUyMA==",
      "number": 71,
      "open_issues": 0,
      "state": "closed",
      "title": "7.0.0-preview.5",
      "updated_at": "2019-10-24T05:09:29Z",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/milestones/71"
    },
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzE0MTMxMzk5",
    "number": 10483,
    "performed_via_github_app": null,
    "pull_request": {
      "diff_url": "https://github.com/PowerShell/PowerShell/pull/10483.diff",
      "html_url": "https://github.com/PowerShell/PowerShell/pull/10483",
      "merged_at": "2019-10-04T00:12:18Z",
      "patch_url": "https://github.com/PowerShell/PowerShell/pull/10483.patch",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/pulls/10483"
    },
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10483/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10483/timeline",
    "title": "Adding New-Service to -SecurityDescriptorSDDL parameter like Set-Service",
    "updated_at": "2019-10-23T19:07:31Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10483",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/12897753?v=4",
      "events_url": "https://api.github.com/users/kvprasoon/events{/privacy}",
      "followers_url": "https://api.github.com/users/kvprasoon/followers",
      "following_url": "https://api.github.com/users/kvprasoon/following{/other_user}",
      "gists_url": "https://api.github.com/users/kvprasoon/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/kvprasoon",
      "id": 12897753,
      "login": "kvprasoon",
      "node_id": "MDQ6VXNlcjEyODk3NzUz",
      "organizations_url": "https://api.github.com/users/kvprasoon/orgs",
      "received_events_url": "https://api.github.com/users/kvprasoon/received_events",
      "repos_url": "https://api.github.com/users/kvprasoon/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/kvprasoon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kvprasoon/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/kvprasoon"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "COLLABORATOR",
    "body": "Tab-complete is finding files from somewhere (not sure where).\r\n\r\n\r\n![PS7AutoCompleteBroken](https://user-images.githubusercontent.com/5177512/64272073-d197a400-cefb-11e9-947a-e163b655d717.gif)\r\n\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\n1. dotnet new console -o HelloWorld\r\n2. dotnet run\r\n3. bi<tab>\r\n4. <tab>\r\n```\r\n\r\n# Expected behavior\r\n\r\n```none\r\nComplete to `.\\bin\\Debug`\r\n```\r\n\r\n# Actual behavior\r\n\r\n```none\r\ncompletes to `B:` or other odd files:\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-preview.3\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-preview.3\r\nOS                             Microsoft Windows 10.0.18362\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0…}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
    "closed_at": null,
    "comments": 10,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10482/comments",
    "created_at": "2019-09-04T16:07:54Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10482/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10482",
    "id": 489256900,
    "labels": [
      {
        "color": "5319e7",
        "default": false,
        "description": "tab completion",
        "id": 401720778,
        "name": "WG-Interactive-IntelliSense",
        "node_id": "MDU6TGFiZWw0MDE3MjA3Nzg=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/WG-Interactive-IntelliSense"
      },
      {
        "color": "fc2929",
        "default": false,
        "description": "the issue may not have a clear classification yet. The issue may generate an RFC or may be reclassif",
        "id": 423526741,
        "name": "Issue-Discussion",
        "node_id": "MDU6TGFiZWw0MjM1MjY3NDE=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Discussion"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10482/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0ODkyNTY5MDA=",
    "number": 10482,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10482/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10482/timeline",
    "title": "Tab complete changed in inconvenient way for PS7 Preview3",
    "updated_at": "2020-10-19T00:17:40Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10482",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/5177512?v=4",
      "events_url": "https://api.github.com/users/rkeithhill/events{/privacy}",
      "followers_url": "https://api.github.com/users/rkeithhill/followers",
      "following_url": "https://api.github.com/users/rkeithhill/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkeithhill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rkeithhill",
      "id": 5177512,
      "login": "rkeithhill",
      "node_id": "MDQ6VXNlcjUxNzc1MTI=",
      "organizations_url": "https://api.github.com/users/rkeithhill/orgs",
      "received_events_url": "https://api.github.com/users/rkeithhill/received_events",
      "repos_url": "https://api.github.com/users/rkeithhill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rkeithhill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkeithhill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rkeithhill"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "# Steps to reproduce\r\n\r\nInstalled PowerShell Core on a Windows 10 that did not come with it pre-installed.\r\n\r\n# Expected behavior\r\n\r\nExpected normal typing (had to go back and erase the inserted `@`):\r\n![image](https://user-images.githubusercontent.com/6992464/64210767-7bcee780-ce7a-11e9-9704-4fca087ea346.png)\r\n\r\n# Actual behavior\r\n\r\nWhenever I try to `Shift + '` to add quotes, it first inserts an `@` and after pressing `Space` it inserts the actual `\"` quotemark. Also happens with single quotes, and any kind of accents like `~`, `^` and so on. If I try to type both quotes without pressing space, it'll give me both quotes and a single `@`. If I press space on the fist then try to type another quote, it'll give me another `@`.\r\n\r\n![image](https://user-images.githubusercontent.com/6992464/64210786-8be6c700-ce7a-11e9-92ac-c46ceb9868e5.png)\r\n![image](https://user-images.githubusercontent.com/6992464/64210861-bf295600-ce7a-11e9-8790-028e4966868a.png)\r\n\r\nI'm brazilian, and I'm on a US keyboard, using \"English International\" layout, to allow for accents. I also have oh-my-posh and posh-git installed, but I disabled both of them prior to these screenshots.\r\n\r\n# Environment data\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.2.2\r\nPSEdition                      Core\r\nGitCommitId                    6.2.2\r\nOS                             Microsoft Windows 10.0.18362\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0…}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
    "closed_at": "2019-09-05T14:16:26Z",
    "comments": 6,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10481/comments",
    "created_at": "2019-09-03T21:47:08Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10481/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10481",
    "id": 488840294,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "ideally support can be provided via other mechanisms, but sometimes folks do open an issue to get a",
        "id": 311043053,
        "name": "Issue-Question",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNTM=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Question"
      },
      {
        "color": "ffffff",
        "default": false,
        "description": "The question is answered.",
        "id": 423531321,
        "name": "Resolution-Answered",
        "node_id": "MDU6TGFiZWw0MjM1MzEzMjE=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Resolution-Answered"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10481/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0ODg4NDAyOTQ=",
    "number": 10481,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10481/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10481/timeline",
    "title": "PowerShell adds \"@\" when typing accents and quotes",
    "updated_at": "2019-09-05T14:48:06Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10481",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6992464?v=4",
      "events_url": "https://api.github.com/users/matheusgrieger/events{/privacy}",
      "followers_url": "https://api.github.com/users/matheusgrieger/followers",
      "following_url": "https://api.github.com/users/matheusgrieger/following{/other_user}",
      "gists_url": "https://api.github.com/users/matheusgrieger/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/matheusgrieger",
      "id": 6992464,
      "login": "matheusgrieger",
      "node_id": "MDQ6VXNlcjY5OTI0NjQ=",
      "organizations_url": "https://api.github.com/users/matheusgrieger/orgs",
      "received_events_url": "https://api.github.com/users/matheusgrieger/received_events",
      "repos_url": "https://api.github.com/users/matheusgrieger/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/matheusgrieger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matheusgrieger/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/matheusgrieger"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Hi, I noticed that Invoke-RestMethod has a cap on how many items it can return. This is not listed anywhere in the documentation. Can you please either confirm that this is the case and update the documentation or that this is a bug in the implementation of the command?",
    "closed_at": "2019-09-07T00:00:37Z",
    "comments": 4,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10480/comments",
    "created_at": "2019-09-03T21:23:20Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10480/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10480",
    "id": 488831496,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "ideally support can be provided via other mechanisms, but sometimes folks do open an issue to get a",
        "id": 311043053,
        "name": "Issue-Question",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNTM=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Question"
      },
      {
        "color": "5319e7",
        "default": false,
        "description": "specific to documentation in this repo",
        "id": 341492760,
        "name": "Area-Maintainers-Documentation",
        "node_id": "MDU6TGFiZWwzNDE0OTI3NjA=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Area-Maintainers-Documentation"
      },
      {
        "color": "ffffff",
        "default": false,
        "description": "The question is answered.",
        "id": 423531321,
        "name": "Resolution-Answered",
        "node_id": "MDU6TGFiZWw0MjM1MzEzMjE=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Resolution-Answered"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10480/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0ODg4MzE0OTY=",
    "number": 10480,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10480/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10480/timeline",
    "title": "Documentation Issue",
    "updated_at": "2019-09-07T00:00:37Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10480",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/35728378?v=4",
      "events_url": "https://api.github.com/users/crshovrd41/events{/privacy}",
      "followers_url": "https://api.github.com/users/crshovrd41/followers",
      "following_url": "https://api.github.com/users/crshovrd41/following{/other_user}",
      "gists_url": "https://api.github.com/users/crshovrd41/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/crshovrd41",
      "id": 35728378,
      "login": "crshovrd41",
      "node_id": "MDQ6VXNlcjM1NzI4Mzc4",
      "organizations_url": "https://api.github.com/users/crshovrd41/orgs",
      "received_events_url": "https://api.github.com/users/crshovrd41/received_events",
      "repos_url": "https://api.github.com/users/crshovrd41/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/crshovrd41/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/crshovrd41/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/crshovrd41"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "# Steps to reproduce\r\n\r\nDownload `PowerShell-6.2.2-win-x64.msi` and install it.\r\n\r\nRun this.\r\n\r\n```\r\nPS C:\\Users\\lukep> Connect-AzAccount\r\n```\r\n\r\n# Expected behavior\r\n\r\nPrompt to open browser at a URL and enter a code, I think.\r\n\r\n# Actual behavior\r\n\r\n```none\r\nConnect-AzAccount : The term 'Connect-AzAccount' is not recognized as the name of a cmdlet, function, script file, or operable program.\r\nCheck the spelling of the name, or if a path was included, verify that the path is correct and try again.\r\nAt line:1 char:1\r\n+ Connect-AzAccount\r\n+ ~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : ObjectNotFound: (Connect-AzAccount:String) [], CommandNotFoundException\r\n+ FullyQualifiedErrorId : CommandNotFoundException\r\n```\r\n\r\n# Environment data\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.2.2\r\nPSEdition                      Core\r\nGitCommitId                    6.2.2\r\nOS                             Microsoft Windows 10.0.18362\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0…}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\n## Get-Command\r\n\r\nNote that I'd expect to see a load of `Az.` sources.\r\n\r\n```none\r\nPS C:\\Program Files\\PowerShell\\6> Get-Command | select -ExpandProperty Source -Unique | sort\r\n\r\nAppBackgroundTask\r\nAppx\r\nAssignedAccess\r\nBitLocker\r\nBranchCache\r\nCimCmdlets\r\nDefender\r\nDeliveryOptimization\r\nDirectAccessClientComponents\r\nDism\r\nDnsClient\r\nEventTracingManagement\r\nInternational\r\nMicrosoft.PowerShell.Archive\r\nMicrosoft.PowerShell.Core\r\nMicrosoft.PowerShell.Diagnostics\r\nMicrosoft.PowerShell.Host\r\nMicrosoft.PowerShell.LocalAccounts\r\nMicrosoft.PowerShell.Management\r\nMicrosoft.PowerShell.Security\r\nMicrosoft.PowerShell.Utility\r\nMicrosoft.WSMan.Management\r\nMMAgent\r\nNetAdapter\r\nNetConnection\r\nNetEventPacketCapture\r\nNetLbfo\r\nNetNat\r\nNetQos\r\nNetSecurity\r\nNetSwitchTeam\r\nNetTCPIP\r\nNetworkConnectivityStatus\r\nNetworkSwitchManager\r\nNetworkTransition\r\nPackageManagement\r\nPcsvDevice\r\nPnpDevice\r\nPowerShellGet\r\nPrintManagement\r\nProcessMitigations\r\nPSDesiredStateConfiguration\r\nPSDiagnostics\r\nPSReadLine\r\nScheduledTasks\r\nSecureBoot\r\nSmbShare\r\nSmbWitness\r\nStartLayout\r\nStorage\r\nThreadJob\r\nTroubleshootingPack\r\nTrustedPlatformModule\r\nVpnClient\r\nWdac\r\nWhea\r\nWindowsDeveloperLicense\r\nWindowsErrorReporting\r\nWindowsSearch\r\nWindowsUpdate\r\nWindowsUpdateProvider\r\n\r\nPS C:\\Program Files\\PowerShell\\6> Get-Module\r\n\r\nModuleType Version    Name                                ExportedCommands\r\n---------- -------    ----                                ----------------\r\nManifest   6.1.0.0    Microsoft.PowerShell.Management     {Add-Content, Clear-Content, Clear-Item, Clear-ItemProperty…}\r\nManifest   6.1.0.0    Microsoft.PowerShell.Utility        {Add-Member, Add-Type, Clear-Variable, Compare-Object…}\r\nScript     2.0.0      PSReadLine                          {Get-PSReadLineKeyHandler, Get-PSReadLineOption, Remove-PSReadLineKeyHandler, Set-PSReadLineKeyHandler…}\r\n\r\nPS C:\\Program Files\\PowerShell\\6>\r\n```",
    "closed_at": "2019-09-03T21:17:36Z",
    "comments": 2,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10479/comments",
    "created_at": "2019-09-03T21:06:23Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10479/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10479",
    "id": 488825149,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "ideally support can be provided via other mechanisms, but sometimes folks do open an issue to get a",
        "id": 311043053,
        "name": "Issue-Question",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNTM=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Question"
      },
      {
        "color": "ffffff",
        "default": false,
        "description": "The question is answered.",
        "id": 423531321,
        "name": "Resolution-Answered",
        "node_id": "MDU6TGFiZWw0MjM1MzEzMjE=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Resolution-Answered"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10479/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0ODg4MjUxNDk=",
    "number": 10479,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10479/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10479/timeline",
    "title": "Installing 6.2.2 from MSI does not install Azure PowerShell \"Az\" module",
    "updated_at": "2019-09-16T10:35:50Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10479",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/5802524?v=4",
      "events_url": "https://api.github.com/users/lukepuplett/events{/privacy}",
      "followers_url": "https://api.github.com/users/lukepuplett/followers",
      "following_url": "https://api.github.com/users/lukepuplett/following{/other_user}",
      "gists_url": "https://api.github.com/users/lukepuplett/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lukepuplett",
      "id": 5802524,
      "login": "lukepuplett",
      "node_id": "MDQ6VXNlcjU4MDI1MjQ=",
      "organizations_url": "https://api.github.com/users/lukepuplett/orgs",
      "received_events_url": "https://api.github.com/users/lukepuplett/received_events",
      "repos_url": "https://api.github.com/users/lukepuplett/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lukepuplett/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lukepuplett/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lukepuplett"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": {
      "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
      "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
      "followers_url": "https://api.github.com/users/TravisEz13/followers",
      "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
      "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/TravisEz13",
      "id": 10873629,
      "login": "TravisEz13",
      "node_id": "MDQ6VXNlcjEwODczNjI5",
      "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
      "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
      "repos_url": "https://api.github.com/users/TravisEz13/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/TravisEz13"
    },
    "assignees": [
      {
        "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
        "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
        "followers_url": "https://api.github.com/users/TravisEz13/followers",
        "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
        "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/TravisEz13",
        "id": 10873629,
        "login": "TravisEz13",
        "node_id": "MDQ6VXNlcjEwODczNjI5",
        "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
        "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
        "repos_url": "https://api.github.com/users/TravisEz13/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/TravisEz13"
      },
      {
        "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
        "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
        "followers_url": "https://api.github.com/users/iSazonov/followers",
        "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
        "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/iSazonov",
        "id": 22290914,
        "login": "iSazonov",
        "node_id": "MDQ6VXNlcjIyMjkwOTE0",
        "organizations_url": "https://api.github.com/users/iSazonov/orgs",
        "received_events_url": "https://api.github.com/users/iSazonov/received_events",
        "repos_url": "https://api.github.com/users/iSazonov/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/iSazonov"
      }
    ],
    "author_association": "COLLABORATOR",
    "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\n1. ~~Replaces all `WriteInformation()` calls with `WriteVerbose()`~~ **Removes** all verbose and progress output. We will revisit verbose output in a later PR.\r\n2. Refactors ping implementation to create only a single `Ping` object which is reused for all `Send()` calls.\r\n3. Implements `IDisposable` for `Test-Connection` so that it can dispose of the `Ping` object when it is no longer needed.\r\n\r\n## PR Context\r\n\r\nPart 2 of #10044, refactor of `Test-Connection` cmdlet.\r\nFixes #6768\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [x] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
    "closed_at": "2019-10-03T19:04:55Z",
    "comments": 12,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10478/comments",
    "created_at": "2019-09-03T20:24:12Z",
    "draft": false,
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10478/events",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10478",
    "id": 488805110,
    "labels": [
      {
        "color": "fbca04",
        "default": false,
        "description": "Indicates that a PR should be marked as a general cmdlet change in the Change Log",
        "id": 1126735368,
        "name": "CL-General",
        "node_id": "MDU6TGFiZWwxMTI2NzM1MzY4",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/CL-General"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10478/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": "2019-10-24T04:50:52Z",
      "closed_issues": 78,
      "created_at": "2019-09-12T21:38:19Z",
      "creator": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
        "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
        "followers_url": "https://api.github.com/users/TravisEz13/followers",
        "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
        "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/TravisEz13",
        "id": 10873629,
        "login": "TravisEz13",
        "node_id": "MDQ6VXNlcjEwODczNjI5",
        "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
        "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
        "repos_url": "https://api.github.com/users/TravisEz13/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/TravisEz13"
      },
      "description": "",
      "due_on": null,
      "html_url": "https://github.com/PowerShell/PowerShell/milestone/71",
      "id": 4655520,
      "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/milestones/71/labels",
      "node_id": "MDk6TWlsZXN0b25lNDY1NTUyMA==",
      "number": 71,
      "open_issues": 0,
      "state": "closed",
      "title": "7.0.0-preview.5",
      "updated_at": "2019-10-24T05:09:29Z",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/milestones/71"
    },
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzEzNzUxMjIw",
    "number": 10478,
    "performed_via_github_app": null,
    "pull_request": {
      "diff_url": "https://github.com/PowerShell/PowerShell/pull/10478.diff",
      "html_url": "https://github.com/PowerShell/PowerShell/pull/10478",
      "merged_at": "2019-10-03T19:04:55Z",
      "patch_url": "https://github.com/PowerShell/PowerShell/pull/10478.patch",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/pulls/10478"
    },
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 1,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10478/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10478/timeline",
    "title": "Test-Connection - Remove informational output, consolidate Ping usage",
    "updated_at": "2019-10-23T19:07:29Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10478",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n\r\n-->\r\n**Issue description:**\r\nUnable to use $MyInvocation.MyCommand.Name in Where-Object block as it becomes null. ForEach and For-EachObject works fine. I see this only with Where-Object.\r\n\r\nI understand there are workarounds but just want to know if this is expected behavior or not as I was not able to find document that describes scope in Where-Object. \r\n\r\n# Steps to reproduce\r\n\r\nCopy the following script to `test.ps1`\r\n```powershell\r\n1 | Where-Object{\r\n    Write-Host('MyInvocation in Where-Object: ' + $MyInvocation.MyCommand.Name)\r\n}\r\n\r\n1 | ForEach-Object{\r\n    Write-Host('MyInvocation in ForEach-Object: ' + $MyInvocation.MyCommand.Name)\r\n}\r\n\r\nForEach($FileName in 1){\r\n    Write-Host('MyInvocation in ForEach: ' + $MyInvocation.MyCommand.Name)\r\n}\r\n```\r\nThen run\r\n```powershell\r\n.\\test.ps1\r\n```\r\n\r\n# Expected behavior\r\n\r\n```powershell\r\n## Expected output in case script name is test.ps1.\r\n\r\nMyInvocation in Where-Object: test.ps1\r\nMyInvocation in ForEach-Object: test.ps1\r\nMyInvocation in ForEach: test.ps1\r\n\r\n```\r\n\r\n# Actual behavior\r\n\r\n```powershell\r\n## Expected output in case script name is test.ps1.\r\n\r\nMyInvocation in Where-Object:       <-------- $MyInvocation.MyCommand.Name becomes null \r\nMyInvocation in ForEach-Object: test.ps1\r\nMyInvocation in ForEach: test.ps1\r\n\r\n\r\n```\r\n\r\n# Environment data\r\n```\r\n> $PSVersionTable\r\n\r\nName Value\r\n---- -----\r\nPSVersion 6.2.1\r\nPSEdition Core\r\nGitCommitId 6.2.1\r\nOS Microsoft Windows 10.0.18362\r\nPlatform Win32NT\r\nPSCompatibleVersions {1.0, 2.0, 3.0, 4.0…}\r\nPSRemotingProtocolVersion 2.3\r\nSerializationVersion 1.1.0.1\r\nWSManStackVersion 3.0\r\n```\r\n\r\n```\r\n",
    "closed_at": null,
    "comments": 16,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10477/comments",
    "created_at": "2019-09-03T12:55:39Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10477/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10477",
    "id": 488589318,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "Issue has been identified as a bug in the product",
        "id": 311043048,
        "name": "Issue-Bug",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNDg=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Bug"
      },
      {
        "color": "50D383",
        "default": false,
        "description": "Up-for-grabs issues are not high priorities, and may be opportunities for external contributors",
        "id": 401721267,
        "name": "Up-for-Grabs",
        "node_id": "MDU6TGFiZWw0MDE3MjEyNjc=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Up-for-Grabs"
      },
      {
        "color": "0e5a16",
        "default": false,
        "description": "PS-Committee has reviewed this and made a decision",
        "id": 483158128,
        "name": "Committee-Reviewed",
        "node_id": "MDU6TGFiZWw0ODMxNTgxMjg=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Committee-Reviewed"
      },
      {
        "color": "5319e7",
        "default": false,
        "description": "cmdlets in the Microsoft.PowerShell.Core module",
        "id": 552752480,
        "name": "WG-Cmdlets-Core",
        "node_id": "MDU6TGFiZWw1NTI3NTI0ODA=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/WG-Cmdlets-Core"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10477/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0ODg1ODkzMTg=",
    "number": 10477,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10477/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10477/timeline",
    "title": "$MyInvocation.MyCommand.Name becomes null in Where-Object block",
    "updated_at": "2021-01-15T14:32:33Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10477",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/29964207?v=4",
      "events_url": "https://api.github.com/users/ryhayash/events{/privacy}",
      "followers_url": "https://api.github.com/users/ryhayash/followers",
      "following_url": "https://api.github.com/users/ryhayash/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryhayash/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/ryhayash",
      "id": 29964207,
      "login": "ryhayash",
      "node_id": "MDQ6VXNlcjI5OTY0MjA3",
      "organizations_url": "https://api.github.com/users/ryhayash/orgs",
      "received_events_url": "https://api.github.com/users/ryhayash/received_events",
      "repos_url": "https://api.github.com/users/ryhayash/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/ryhayash/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryhayash/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/ryhayash"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "Note that the symptom only occurs when redirecting to _another stream_, either via `2>&1` or `*>&1`.\r\n\r\nBy contrast, redirecting to a _file_ works as expected.\r\n\r\n# Steps to reproduce\r\n\r\nRun the following Pester test:\r\n\r\n```powershell\r\n# Create a string with a command that writes to all streams.\r\n$cmd = '1; write-error 2; write-warning 3; write-verbose -vb 4; write-debug -debug 5; write-information -infa continue 6'\r\n# Make sure that all streams can be directed to the success output stream (1).\r\n(Invoke-Expression $cmd *>&1).Count | Should -Be 6\r\n```\r\n\r\n# Expected behavior\r\n\r\nThe test should pass - all 6 streams should show up in the success output stream.\r\n\r\n# Actual behavior\r\n\r\n```none\r\nExpected 6, but got 5.\r\n```\r\n\r\nThat is, the error output was _quietly discarded_, as you 'll see if you run the command inside `(...)` in isolation\r\n\r\n# Environment data\r\n\r\n```none\r\nPowerShell Core 7.0.0-preview.3\r\nWindows PowerShell v5.1.18362.145 on Microsoft Windows 10 Pro (64-bit; Version 1903, OS Build: 18362.295)\r\n```\r\n",
    "closed_at": null,
    "comments": 8,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10476/comments",
    "created_at": "2019-09-02T16:25:45Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10476/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10476",
    "id": 488261027,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "ideally support can be provided via other mechanisms, but sometimes folks do open an issue to get a",
        "id": 311043053,
        "name": "Issue-Question",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNTM=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Question"
      },
      {
        "color": "5319e7",
        "default": false,
        "description": "core PowerShell engine, interpreter, and runtime",
        "id": 401720735,
        "name": "WG-Engine",
        "node_id": "MDU6TGFiZWw0MDE3MjA3MzU=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/WG-Engine"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10476/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0ODgyNjEwMjc=",
    "number": 10476,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 2,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 4,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10476/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10476/timeline",
    "title": "Invoke-Expression: redirecting the error stream to the success stream discards error output",
    "updated_at": "2021-01-12T00:01:52Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10476",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "## Support for the \"-Version 2\" parameter\r\n\r\nHello, I hope that I'm right here.\r\n\r\nI wrote a powershell script in Version 2 for controlling the CAD system Catia v5.\r\nI updated to Powershell 5 and the script didn't work anymore.\r\n\r\nIt's still okay, if I use the \"-Version 2\" parameter.\r\n\r\n**How long is this option supported?**\r\n\r\nThank you for your help.\r\n\r\nKind regards\r\nKevin",
    "closed_at": "2019-09-06T12:00:32Z",
    "comments": 8,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10475/comments",
    "created_at": "2019-09-02T08:19:40Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10475/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10475",
    "id": 488061551,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "ideally support can be provided via other mechanisms, but sometimes folks do open an issue to get a",
        "id": 311043053,
        "name": "Issue-Question",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNTM=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Question"
      },
      {
        "color": "ffffff",
        "default": false,
        "description": "The question is answered.",
        "id": 423531321,
        "name": "Resolution-Answered",
        "node_id": "MDU6TGFiZWw0MjM1MzEzMjE=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Resolution-Answered"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10475/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0ODgwNjE1NTE=",
    "number": 10475,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10475/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10475/timeline",
    "title": "Support for -Version 2 option",
    "updated_at": "2019-09-06T12:00:32Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10475",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/54795854?v=4",
      "events_url": "https://api.github.com/users/inno-kd/events{/privacy}",
      "followers_url": "https://api.github.com/users/inno-kd/followers",
      "following_url": "https://api.github.com/users/inno-kd/following{/other_user}",
      "gists_url": "https://api.github.com/users/inno-kd/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/inno-kd",
      "id": 54795854,
      "login": "inno-kd",
      "node_id": "MDQ6VXNlcjU0Nzk1ODU0",
      "organizations_url": "https://api.github.com/users/inno-kd/orgs",
      "received_events_url": "https://api.github.com/users/inno-kd/received_events",
      "repos_url": "https://api.github.com/users/inno-kd/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/inno-kd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/inno-kd/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/inno-kd"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n\r\n-->\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\nPS >function TestValidate {\r\n>> [CmdletBinding(SupportsShouldProcess, ConfirmImpact = 'High')]\r\n>> param (\r\n>> [Parameter(Mandatory = $true, ValueFromPipelineByPropertyName)]\r\n>> [ValidateNotNullOrEmpty]\r\n>> [string]$DisplayName\r\n>> )\r\n>>\r\n>> if ($PSCmdlet.ShouldProcess(\"$DisplayName\", \"Delete\")) {\r\n>> Write-Host \"Why Triggered?\"\r\n>> }\r\n>> }\r\nPS> $obj = @{ Test = 123 }\r\nPS> $obj | TestValidate\r\nTestValidate : The input object cannot be bound to any parameters for the command either because the command does not take pipeline input or the input and its properties do not match any of the parameters that take pipeline input.\r\nAt line:1 char:8\r\n+ $obj | TestValidate\r\n+        ~~~~~~~~~~~~\r\n+ CategoryInfo          : InvalidArgument: (System.Collections.Hashtable:Hashtable) [TestValidate], ParameterBindingException\r\n+ FullyQualifiedErrorId : InputObjectNotBound,TestValidate\r\n\r\n\r\nConfirm\r\nAre you sure you want to perform this action?\r\nPerforming the operation \"Delete\" on target \"\".\r\n[Y] Yes  [A] Yes to All  [N] No  [L] No to All  [S] Suspend  [?] Help (default is \"Y\"): y\r\nWhy Triggered?\r\nPS >\r\n\r\n```\r\n\r\n# Expected behavior\r\n\r\n```none\r\nFunction should not continue if parameter validation has failed\r\n\r\n```\r\n\r\n# Actual behavior\r\n\r\n```none\r\nFunction continues running\r\n\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n*Reproducible in Powershell 5 & 6 & 7\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-preview.3\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-preview.3\r\nOS                             Darwin 18.7.0 Darwin Kernel Version 18.7.0: Tue Aug 20 16:57:14 PDT 2019; root:xnu-4903.271.2~2/RELEASE_X86_64\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0…}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n```\r\n",
    "closed_at": null,
    "comments": 0,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10474/comments",
    "created_at": "2019-09-01T18:22:17Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10474/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10474",
    "id": 487916180,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "Issue has been identified as a bug in the product",
        "id": 311043048,
        "name": "Issue-Bug",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNDg=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Bug"
      },
      {
        "color": "5319e7",
        "default": false,
        "description": "core PowerShell engine, interpreter, and runtime",
        "id": 401720735,
        "name": "WG-Engine",
        "node_id": "MDU6TGFiZWw0MDE3MjA3MzU=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/WG-Engine"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10474/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0ODc5MTYxODA=",
    "number": 10474,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10474/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10474/timeline",
    "title": "Parameter Validation not terminating function when using pipeline.",
    "updated_at": "2021-01-15T14:31:07Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10474",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2661819?v=4",
      "events_url": "https://api.github.com/users/M1kep/events{/privacy}",
      "followers_url": "https://api.github.com/users/M1kep/followers",
      "following_url": "https://api.github.com/users/M1kep/following{/other_user}",
      "gists_url": "https://api.github.com/users/M1kep/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/M1kep",
      "id": 2661819,
      "login": "M1kep",
      "node_id": "MDQ6VXNlcjI2NjE4MTk=",
      "organizations_url": "https://api.github.com/users/M1kep/orgs",
      "received_events_url": "https://api.github.com/users/M1kep/received_events",
      "repos_url": "https://api.github.com/users/M1kep/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/M1kep/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/M1kep/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/M1kep"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n\r\n-->\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\n\r\nafter importing AzureAd module and Calling the Connect-AzureAd Cmdlet\r\nan interactive form opens to supply credentials and provide MFA authentication \r\n\r\nInstall-Module -Name \"AzureAD\" -Verbose -Force -AllowClobber\r\nImport-Module -Name \"AzureAD\" -Verbose -Force\r\nGet-Module -Name \"AzureAD\"-ListAvailable | Select-object Name, Version\r\nConnect-AzureAD\r\n\r\n```\r\n\r\n# Expected behavior\r\n\r\n```none\r\n\r\nThe Connect-AzureAd Cmdlet should continue successfully and establish a connection with Azure AD\r\n\r\n\r\n```\r\n\r\n# Actual behavior\r\n\r\n```none\r\n\r\nconnect-azuread : One or more errors occurred. (Could not load type 'System.Security.Cryptography.SHA256Cng' from assembly 'System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.): Could not load type 'System.Security.Cryptography.SHA256Cng' from assembly 'System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.\r\nAt line:1 char:1\r\n+ connect-azuread\r\n+ ~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : AuthenticationError: (:) [Connect-AzureAD], AadAuthenticationFailedException\r\n+ FullyQualifiedErrorId : Connect-AzureAD,Microsoft.Open.Azure.AD.CommonLibrary.ConnectAzureAD\r\n\r\nconnect-azuread : One or more errors occurred. (Could not load type 'System.Security.Cryptography.SHA256Cng' from assembly 'System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.)\r\nAt line:1 char:1\r\n+ connect-azuread\r\n+ ~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : AuthenticationError: (:) [Connect-AzureAD], AggregateException\r\n+ FullyQualifiedErrorId : Connect-AzureAD,Microsoft.Open.Azure.AD.CommonLibrary.ConnectAzureAD\r\n\r\nconnect-azuread : Could not load type 'System.Security.Cryptography.SHA256Cng' from assembly 'System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.\r\nAt line:1 char:1\r\n+ connect-azuread\r\n+ ~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : AuthenticationError: (:) [Connect-AzureAD], TypeLoadException\r\n+ FullyQualifiedErrorId : Connect-AzureAD,Microsoft.Open.Azure.AD.CommonLibrary.ConnectAzureAD\r\n\r\nconnect-azuread : One or more errors occurred. (Could not load type 'System.Security.Cryptography.SHA256Cng' from assembly 'System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.): Could not load type 'System.Security.Cryptography.SHA256Cng' from assembly 'System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.\r\nAt line:1 char:1\r\n+ connect-azuread\r\n+ ~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : NotSpecified: (:) [Connect-AzureAD], AadAuthenticationFailedException\r\n+ FullyQualifiedErrorId : Microsoft.Open.Azure.AD.CommonLibrary.AadAuthenticationFailedException,Microsoft.Open.Azure.AD.CommonLibrary.ConnectAzureAD\r\n\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-preview.3\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-preview.3\r\nOS                             Microsoft Windows 10.0.18362\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0…}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n```\r\n",
    "closed_at": "2019-09-04T05:00:26Z",
    "comments": 48,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10473/comments",
    "created_at": "2019-09-01T18:17:44Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10473/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10473",
    "id": 487915777,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "ideally support can be provided via other mechanisms, but sometimes folks do open an issue to get a",
        "id": 311043053,
        "name": "Issue-Question",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNTM=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Question"
      },
      {
        "color": "ffffff",
        "default": false,
        "description": "The issue is caused by external component(s).",
        "id": 427077877,
        "name": "Resolution-External",
        "node_id": "MDU6TGFiZWw0MjcwNzc4Nzc=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Resolution-External"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10473/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0ODc5MTU3Nzc=",
    "number": 10473,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 18,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 18,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10473/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10473/timeline",
    "title": "Connect-AzureAD Could not load type 'System.Security.Cryptography.SHA256Cng' from assembly",
    "updated_at": "2021-03-05T01:39:04Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10473",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32661802?v=4",
      "events_url": "https://api.github.com/users/aollivierre/events{/privacy}",
      "followers_url": "https://api.github.com/users/aollivierre/followers",
      "following_url": "https://api.github.com/users/aollivierre/following{/other_user}",
      "gists_url": "https://api.github.com/users/aollivierre/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/aollivierre",
      "id": 32661802,
      "login": "aollivierre",
      "node_id": "MDQ6VXNlcjMyNjYxODAy",
      "organizations_url": "https://api.github.com/users/aollivierre/orgs",
      "received_events_url": "https://api.github.com/users/aollivierre/received_events",
      "repos_url": "https://api.github.com/users/aollivierre/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/aollivierre/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aollivierre/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/aollivierre"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "How to add records in nisNetgroup Triple using Syntax IA5-String\r\n\r\nSet-ADObject -Identity \"OU=A,OU=B,OU=netgroup,OU=BLA,DC=BLA,DC=com\" -Add @{'nisNetgroupTriple'=\"(,bla@domain.com,DOMAIN.COM)\"} \r\n\r\nThis is not working. How to correctly add a record ?\r\n\r\nEasy to create :\r\n\r\nNew-ADObject -Name MYNAME -Type \"nisNetgroup\" -ProtectedFromAccidentalDeletion $Trueb -Path \"OU=A,OU=B,OU=netgroup,OU=BLA,DC=BLA,DC=com\" -OtherAttributes @{'nisNetgroupTriple'=\"(,bla@domain.com,DOMAIN.COM)\"}\r\n \r\nBut the update of records is not documented.\r\n",
    "closed_at": "2019-09-03T05:15:55Z",
    "comments": 1,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10472/comments",
    "created_at": "2019-09-01T10:37:54Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10472/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10472",
    "id": 487869394,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "ideally support can be provided via other mechanisms, but sometimes folks do open an issue to get a",
        "id": 311043053,
        "name": "Issue-Question",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNTM=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Question"
      },
      {
        "color": "5319e7",
        "default": false,
        "description": "specific to documentation in this repo",
        "id": 341492760,
        "name": "Area-Maintainers-Documentation",
        "node_id": "MDU6TGFiZWwzNDE0OTI3NjA=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Area-Maintainers-Documentation"
      },
      {
        "color": "ffffff",
        "default": false,
        "description": "The question is answered.",
        "id": 423531321,
        "name": "Resolution-Answered",
        "node_id": "MDU6TGFiZWw0MjM1MzEzMjE=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Resolution-Answered"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10472/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0ODc4NjkzOTQ=",
    "number": 10472,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10472/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10472/timeline",
    "title": "How to add records in nisNetgroup Triple using Syntax IA5-String",
    "updated_at": "2019-09-03T05:16:02Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10472",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/908425?v=4",
      "events_url": "https://api.github.com/users/bmonteiro/events{/privacy}",
      "followers_url": "https://api.github.com/users/bmonteiro/followers",
      "following_url": "https://api.github.com/users/bmonteiro/following{/other_user}",
      "gists_url": "https://api.github.com/users/bmonteiro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/bmonteiro",
      "id": 908425,
      "login": "bmonteiro",
      "node_id": "MDQ6VXNlcjkwODQyNQ==",
      "organizations_url": "https://api.github.com/users/bmonteiro/orgs",
      "received_events_url": "https://api.github.com/users/bmonteiro/received_events",
      "repos_url": "https://api.github.com/users/bmonteiro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/bmonteiro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bmonteiro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/bmonteiro"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "For a real-life case of the behavior described being problematic, see [this StackOverflow question](https://stackoverflow.com/q/57734162/45375), where a user puzzles over ashorcut-file-launched PowerShell window instantly closing, despite use of `-NoExit`.\r\n\r\nNote: The correct behavior is debatable, but to me it makes more sense to give more weight to `-NoExit` -  i.e. to the request to open _an interactive shell_ - over erroring out due to not being able to find the script file targeted (as long as the command line is otherwise _syntactically_ correct).\r\n\r\nNote that passing a broken _command_ with `-Command` already behaves that way; e.g.:\r\n\r\n```\r\npwsh -nop -noexit -c '1 / '  # new session is still entered, despite broken command.\r\n```\r\n\r\n# Steps to reproduce\r\n\r\nEnter interactively, one line after the other:\r\n\r\n```powershell\r\n$PID\r\npwsh -noprofile -noexit -file ./nosuchscript.ps1\r\n$PID\r\n```\r\n\r\n# Expected behavior\r\n\r\n```none\r\n<PID of calling shell>\r\n<error message about not finding the script>\r\n<PID of *new* shell>\r\n```\r\n\r\nThat is, a new shell should _always_ be entered, since the command line was _syntactically_ correct and `-NoExit` was specified.\r\n\r\n# Actual behavior\r\n\r\n```none\r\n<PID of calling shell>\r\n<error message about not finding the script>\r\n<PID of calling shell>\r\n```\r\n\r\n**That is, despite `-NoExit`, the new process _exited unconditionally_**, due to not finding the script specified as the `-File` argument.\r\n\r\nNote that, by contrast, if the script _can_ be found and throws a terminating error, the shell is (rightfully) _not_ exited.\r\n\r\n# Environment data\r\n\r\n```none\r\nPowerShell Core 7.0.0-preview.3\r\nWindows PowerShell v5.1.18362.145 on Microsoft Windows 10 Pro (64-bit; Version 1903, OS Build: 18362.295)\r\n```\r\n",
    "closed_at": null,
    "comments": 0,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10471/comments",
    "created_at": "2019-08-31T20:55:21Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10471/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10471",
    "id": 487810663,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "the issue is more of a feature request than a bug",
        "id": 311043050,
        "name": "Issue-Enhancement",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNTA=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Enhancement"
      },
      {
        "color": "5319e7",
        "default": false,
        "description": "core PowerShell engine, interpreter, and runtime",
        "id": 401720735,
        "name": "WG-Engine",
        "node_id": "MDU6TGFiZWw0MDE3MjA3MzU=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/WG-Engine"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10471/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0ODc4MTA2NjM=",
    "number": 10471,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10471/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10471/timeline",
    "title": "CLI: -NoExit doesn't keep the shell open if the -File argument (script file path) cannot be found",
    "updated_at": "2019-09-03T05:18:44Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10471",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "# Summary of the new feature/enhancement\r\n\r\nIn PowerShell ISE and with PSReadLine, the `default` clause condition keyword of the `switch` statement receives only 'bareword' treatment, making it hard to spot relative to other bareword conditions.\r\n\r\n(PowerShell 7 with custom PSReadLine theme)\r\n![image](https://user-images.githubusercontent.com/26179051/64058374-e37ded80-cb6f-11e9-91d8-f4e73f6e80e8.png)\r\n\r\n(Example shown here with https://github.com/PowerShell/EditorSyntax/pull/156 (which marks the bareword conditions as unquoted strings) and a custom theme in VS Code, with the keyword highlighted)\r\n\r\n![image](https://user-images.githubusercontent.com/26179051/64058337-1b386580-cb6f-11e9-9e7a-a6116ab398b2.png)\r\n\r\n# Proposed technical implementation details (optional)\r\n\r\nI would propose a change to `Parser.GetCommandArgument()` that would mark the token as a keyword when it meets the criteria for being the `default` clause condition keyword.\r\n\r\nI can include a commit to PR https://github.com/PowerShell/PowerShell/pull/10295 that demonstrates this change.\r\n\r\n![image](https://user-images.githubusercontent.com/26179051/64058453-e6c5a900-cb70-11e9-973e-41bcab6ca691.png)\r\n",
    "closed_at": "2020-06-09T17:22:38Z",
    "comments": 2,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10470/comments",
    "created_at": "2019-08-31T02:57:29Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10470/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10470",
    "id": 487722735,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "the issue is more of a feature request than a bug",
        "id": 311043050,
        "name": "Issue-Enhancement",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNTA=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Enhancement"
      },
      {
        "color": "5319e7",
        "default": false,
        "description": "parser, language semantics",
        "id": 401720878,
        "name": "WG-Language",
        "node_id": "MDU6TGFiZWw0MDE3MjA4Nzg=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/WG-Language"
      },
      {
        "color": "ffffff",
        "default": false,
        "description": "The issue is fixed.",
        "id": 423534444,
        "name": "Resolution-Fixed",
        "node_id": "MDU6TGFiZWw0MjM1MzQ0NDQ=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Resolution-Fixed"
      },
      {
        "color": "0e5a16",
        "default": false,
        "description": "PS-Committee has reviewed this and made a decision",
        "id": 483158128,
        "name": "Committee-Reviewed",
        "node_id": "MDU6TGFiZWw0ODMxNTgxMjg=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Committee-Reviewed"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10470/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0ODc3MjI3MzU=",
    "number": 10470,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10470/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10470/timeline",
    "title": "`switch` statement  `default` clause condition keyword should be flagged as keyword token",
    "updated_at": "2020-06-25T19:07:02Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10470",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/26179051?v=4",
      "events_url": "https://api.github.com/users/msftrncs/events{/privacy}",
      "followers_url": "https://api.github.com/users/msftrncs/followers",
      "following_url": "https://api.github.com/users/msftrncs/following{/other_user}",
      "gists_url": "https://api.github.com/users/msftrncs/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/msftrncs",
      "id": 26179051,
      "login": "msftrncs",
      "node_id": "MDQ6VXNlcjI2MTc5MDUx",
      "organizations_url": "https://api.github.com/users/msftrncs/orgs",
      "received_events_url": "https://api.github.com/users/msftrncs/received_events",
      "repos_url": "https://api.github.com/users/msftrncs/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/msftrncs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/msftrncs/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/msftrncs"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "# Support Question\r\n\r\nHi. I want to try the new `PowerShell-7.0.0-preview.3-win-x64.msix`, but I got a `This app package is not supported for installation by App Installer because it uses certain restricted capabilities.`\r\n\r\nHow to solve this? I have googled it but get nothing. Thanks.\r\n\r\n![图片](https://user-images.githubusercontent.com/24759802/64056400-84e35e80-cbc5-11e9-8ab8-ae340c1cbc47.png)\r\n\r\n",
    "closed_at": "2019-11-01T00:00:27Z",
    "comments": 16,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10469/comments",
    "created_at": "2019-08-31T00:04:04Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10469/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10469",
    "id": 487707455,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "the issue is more of a feature request than a bug",
        "id": 311043050,
        "name": "Issue-Enhancement",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNTA=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Enhancement"
      },
      {
        "color": "5319e7",
        "default": false,
        "description": "specific to affecting the build",
        "id": 332202934,
        "name": "Area-Maintainers-Build",
        "node_id": "MDU6TGFiZWwzMzIyMDI5MzQ=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Area-Maintainers-Build"
      },
      {
        "color": "ffffff",
        "default": false,
        "description": "The question is answered.",
        "id": 423531321,
        "name": "Resolution-Answered",
        "node_id": "MDU6TGFiZWw0MjM1MzEzMjE=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Resolution-Answered"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10469/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": "2020-11-11T20:12:07Z",
      "closed_issues": 69,
      "created_at": "2019-02-19T21:25:21Z",
      "creator": {
        "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
        "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
        "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
        "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
        "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/SteveL-MSFT",
        "id": 11859881,
        "login": "SteveL-MSFT",
        "node_id": "MDQ6VXNlcjExODU5ODgx",
        "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
        "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
        "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/SteveL-MSFT"
      },
      "description": "Issues (not PRs) we are considering as part of 7.0 release",
      "due_on": null,
      "html_url": "https://github.com/PowerShell/PowerShell/milestone/54",
      "id": 4070967,
      "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/milestones/54/labels",
      "node_id": "MDk6TWlsZXN0b25lNDA3MDk2Nw==",
      "number": 54,
      "open_issues": 0,
      "state": "closed",
      "title": "7.0-Consider",
      "updated_at": "2020-11-11T20:12:07Z",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/milestones/54"
    },
    "node_id": "MDU6SXNzdWU0ODc3MDc0NTU=",
    "number": 10469,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 18,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 18,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10469/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10469/timeline",
    "title": "Can't install msix",
    "updated_at": "2020-05-21T00:43:39Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10469",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24759802?v=4",
      "events_url": "https://api.github.com/users/imba-tjd/events{/privacy}",
      "followers_url": "https://api.github.com/users/imba-tjd/followers",
      "following_url": "https://api.github.com/users/imba-tjd/following{/other_user}",
      "gists_url": "https://api.github.com/users/imba-tjd/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/imba-tjd",
      "id": 24759802,
      "login": "imba-tjd",
      "node_id": "MDQ6VXNlcjI0NzU5ODAy",
      "organizations_url": "https://api.github.com/users/imba-tjd/orgs",
      "received_events_url": "https://api.github.com/users/imba-tjd/received_events",
      "repos_url": "https://api.github.com/users/imba-tjd/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/imba-tjd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/imba-tjd/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/imba-tjd"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": {
      "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
      "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
      "followers_url": "https://api.github.com/users/TravisEz13/followers",
      "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
      "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/TravisEz13",
      "id": 10873629,
      "login": "TravisEz13",
      "node_id": "MDQ6VXNlcjEwODczNjI5",
      "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
      "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
      "repos_url": "https://api.github.com/users/TravisEz13/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/TravisEz13"
    },
    "assignees": [
      {
        "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
        "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
        "followers_url": "https://api.github.com/users/TravisEz13/followers",
        "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
        "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/TravisEz13",
        "id": 10873629,
        "login": "TravisEz13",
        "node_id": "MDQ6VXNlcjEwODczNjI5",
        "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
        "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
        "repos_url": "https://api.github.com/users/TravisEz13/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/TravisEz13"
      }
    ],
    "author_association": "CONTRIBUTOR",
    "body": "# PR Summary\r\nGroup Policy tools (e.g. `gpedit.msc`) use administrative template files (.admx, .adml) to populate policy settings in their user interface. This allows administrators to manage registry-based policy settings for PowerShell Core.\r\nThis PR:\r\n1) Adds GroupPolicy definitions (.admx, .adml) for PowerShell Core.\r\n2) Adds an installation script that admins can use to install PowerShell Core GroupPolicy definitions.\r\n3) Adds `Policy settings Fall-Back` functionality described in [PowerShell Core Policy RFC](https://github.com/PowerShell/PowerShell-RFC/blob/master/2-Draft-Accepted/RFC0041-Policy.md#policy-settings-setting-fall-back).\r\n4) Adds tests for:\r\n*) registry-based PS Core policy settings;\r\n*) `Fall-Back to Windows PS policy settings` functionality.\r\n\r\n\r\n<!-- Summarize your PR between here and the checklist. -->\r\n\r\n## PR Context\r\n\r\n[PowerShell Core Policy RFC](https://github.com/PowerShell/PowerShell-RFC/blob/master/2-Draft-Accepted/RFC0041-Policy.md) was recently accepted, so UX related to PowerShell Core GroupPolicy settings has to me adjusted accordingly.\r\n\r\n## PR Checklist\r\n\r\n- [X] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [X] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [X] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [X] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [X] Issue filed: [Add group policy settings to doc for powershell.config.json #4216](https://github.com/MicrosoftDocs/PowerShell-Docs/issues/4216)\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [X] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [X] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
    "closed_at": "2019-09-12T20:42:00Z",
    "comments": 5,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10468/comments",
    "created_at": "2019-08-30T22:53:19Z",
    "draft": false,
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10468/events",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10468",
    "id": 487696533,
    "labels": [
      {
        "color": "fbca04",
        "default": false,
        "description": "Indicates that a PR should be marked as a general cmdlet change in the Change Log",
        "id": 1126735368,
        "name": "CL-General",
        "node_id": "MDU6TGFiZWwxMTI2NzM1MzY4",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/CL-General"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10468/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": "2019-09-22T18:49:57Z",
      "closed_issues": 39,
      "created_at": "2019-08-19T21:02:56Z",
      "creator": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
        "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
        "followers_url": "https://api.github.com/users/TravisEz13/followers",
        "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
        "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/TravisEz13",
        "id": 10873629,
        "login": "TravisEz13",
        "node_id": "MDQ6VXNlcjEwODczNjI5",
        "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
        "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
        "repos_url": "https://api.github.com/users/TravisEz13/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/TravisEz13"
      },
      "description": "",
      "due_on": null,
      "html_url": "https://github.com/PowerShell/PowerShell/milestone/69",
      "id": 4587190,
      "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/milestones/69/labels",
      "node_id": "MDk6TWlsZXN0b25lNDU4NzE5MA==",
      "number": 69,
      "open_issues": 0,
      "state": "closed",
      "title": "7.0.0-preview.4",
      "updated_at": "2019-09-22T18:49:57Z",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/milestones/69"
    },
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzEyOTA0NzQ4",
    "number": 10468,
    "performed_via_github_app": null,
    "pull_request": {
      "diff_url": "https://github.com/PowerShell/PowerShell/pull/10468.diff",
      "html_url": "https://github.com/PowerShell/PowerShell/pull/10468",
      "merged_at": "2019-09-12T20:42:00Z",
      "patch_url": "https://github.com/PowerShell/PowerShell/pull/10468.patch",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/pulls/10468"
    },
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10468/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10468/timeline",
    "title": "Adding PSCore group policy definitions",
    "updated_at": "2019-09-19T17:52:06Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10468",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11860095?v=4",
      "events_url": "https://api.github.com/users/anmenaga/events{/privacy}",
      "followers_url": "https://api.github.com/users/anmenaga/followers",
      "following_url": "https://api.github.com/users/anmenaga/following{/other_user}",
      "gists_url": "https://api.github.com/users/anmenaga/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/anmenaga",
      "id": 11860095,
      "login": "anmenaga",
      "node_id": "MDQ6VXNlcjExODYwMDk1",
      "organizations_url": "https://api.github.com/users/anmenaga/orgs",
      "received_events_url": "https://api.github.com/users/anmenaga/received_events",
      "repos_url": "https://api.github.com/users/anmenaga/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/anmenaga/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anmenaga/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/anmenaga"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "Certain exceptions prevent PowerShell from properly setting the `HistoryId` property in the `InvocationInfo` of the `ErrorRecord` that gets recorded in `$error`. This makes it difficult to associate errors with their appropriate history command that was invoked.\r\n\r\nIn cases when `HistoryId` is not set, it produces a value of `-1`.\r\n\r\n# Steps to reproduce\r\n\r\nRun the following commands, one at a time, in a new PowerShell session:\r\n\r\n```powershell\r\nfunction Test-ErrorHistoryId {\r\n    [CmdletBinding()]\r\n    param(\r\n        [Parameter(Mandatory)]\r\n        [ScriptBlock]\r\n        $ScriptBlock\r\n    )\r\n    $global:LastHistoryId = $MyInvocation.HistoryId\r\n    . $ScriptBlock\r\n}\r\nTest-ErrorHistoryId -ScriptBlock {1/0}\r\n$error[0].InvocationInfo.HistoryId -eq $global:LastHistoryId\r\nTest-ErrorHistoryId -ScriptBlock {[CmdletBinding(InvalidArg=$true)]param(); 'What?'}\r\n$error[0].InvocationInfo.HistoryId -eq $global:LastHistoryId\r\nTest-ErrorHistoryId -ScriptBlock {try {1/0} catch {Write-Error 'Divided by Zero'}}\r\n$error[0].InvocationInfo.HistoryId -eq $global:LastHistoryId\r\n```\r\n\r\n# Expected behavior\r\n\r\n```none\r\nTrue\r\nTrue\r\nTrue\r\n```\r\n\r\n# Actual behavior\r\n\r\n```none\r\nFalse\r\nFalse\r\nTrue\r\n```\r\n\r\n# Environment data\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-preview.3\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-preview.3\r\nOS                             Microsoft Windows 10.0.17763\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0…}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
    "closed_at": null,
    "comments": 0,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10467/comments",
    "created_at": "2019-08-30T18:06:30Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10467/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10467",
    "id": 487607895,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "ideally support can be provided via other mechanisms, but sometimes folks do open an issue to get a",
        "id": 311043053,
        "name": "Issue-Question",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNTM=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Question"
      },
      {
        "color": "5319e7",
        "default": false,
        "description": "core PowerShell engine, interpreter, and runtime",
        "id": 401720735,
        "name": "WG-Engine",
        "node_id": "MDU6TGFiZWw0MDE3MjA3MzU=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/WG-Engine"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10467/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0ODc2MDc4OTU=",
    "number": 10467,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10467/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10467/timeline",
    "title": "Fix `HistoryId` in ErrorRecords",
    "updated_at": "2019-09-03T05:24:01Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10467",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": {
      "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
      "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
      "followers_url": "https://api.github.com/users/TravisEz13/followers",
      "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
      "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/TravisEz13",
      "id": 10873629,
      "login": "TravisEz13",
      "node_id": "MDQ6VXNlcjEwODczNjI5",
      "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
      "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
      "repos_url": "https://api.github.com/users/TravisEz13/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/TravisEz13"
    },
    "assignees": [
      {
        "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
        "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
        "followers_url": "https://api.github.com/users/TravisEz13/followers",
        "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
        "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/TravisEz13",
        "id": 10873629,
        "login": "TravisEz13",
        "node_id": "MDQ6VXNlcjEwODczNjI5",
        "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
        "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
        "repos_url": "https://api.github.com/users/TravisEz13/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/TravisEz13"
      }
    ],
    "author_association": "CONTRIBUTOR",
    "body": "# PR Summary\r\nFix #5555\r\nFix #9769\r\n\r\nThis PR adds a  -SkipHttpErrorCheck flag to Invoke-WebRequest and Invoke-RestMethod, and adds a -ResponseStatusVariable option to Invoke-RestMethod. The -SkipHttpErrorCheck flag causes the cmdlets to ignore HTTP error statuses and continue to process the responses and write to the pipeline as if these had been successful. The -ResponseStatusVariable assigns the integer value of the status code to the variable named. It can be used with or without -SkipHttpErrorCheck.\r\n\r\n## PR Context\r\n\r\nThese cmdlets as they are currently written will throw an exception when the HTTP status is not considered a success. The error handling code will extract the body of the response and modify its contents to assign to the exception, but will leave the original body contents inaccessible. This isn't feasible with web APIs and other sites that return useful diagnostic messages in the body that would be modified by the error handling code.\r\n\r\n## PR Checklist\r\n\r\n- [X] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [X] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [X] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [X] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [X] Issue filed: https://github.com/MicrosoftDocs/PowerShell-Docs/issues/4724\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [X] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
    "closed_at": "2019-11-07T20:38:26Z",
    "comments": 7,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10466/comments",
    "created_at": "2019-08-30T15:35:42Z",
    "draft": false,
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10466/events",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10466",
    "id": 487547873,
    "labels": [
      {
        "color": "fbca04",
        "default": false,
        "description": "Indicates that a PR should be marked as a general cmdlet change in the Change Log",
        "id": 1126735368,
        "name": "CL-General",
        "node_id": "MDU6TGFiZWwxMTI2NzM1MzY4",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/CL-General"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10466/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": "2019-11-22T01:15:25Z",
      "closed_issues": 77,
      "created_at": "2019-10-24T04:38:03Z",
      "creator": {
        "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
        "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
        "followers_url": "https://api.github.com/users/iSazonov/followers",
        "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
        "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/iSazonov",
        "id": 22290914,
        "login": "iSazonov",
        "node_id": "MDQ6VXNlcjIyMjkwOTE0",
        "organizations_url": "https://api.github.com/users/iSazonov/orgs",
        "received_events_url": "https://api.github.com/users/iSazonov/received_events",
        "repos_url": "https://api.github.com/users/iSazonov/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/iSazonov"
      },
      "description": "",
      "due_on": null,
      "html_url": "https://github.com/PowerShell/PowerShell/milestone/74",
      "id": 4779196,
      "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/milestones/74/labels",
      "node_id": "MDk6TWlsZXN0b25lNDc3OTE5Ng==",
      "number": 74,
      "open_issues": 0,
      "state": "closed",
      "title": "7.0.0-preview.6",
      "updated_at": "2020-01-18T00:57:41Z",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/milestones/74"
    },
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzEyNzkwNTQz",
    "number": 10466,
    "performed_via_github_app": null,
    "pull_request": {
      "diff_url": "https://github.com/PowerShell/PowerShell/pull/10466.diff",
      "html_url": "https://github.com/PowerShell/PowerShell/pull/10466",
      "merged_at": "2019-11-07T20:38:25Z",
      "patch_url": "https://github.com/PowerShell/PowerShell/pull/10466.patch",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/pulls/10466"
    },
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 1,
      "hooray": 1,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10466/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10466/timeline",
    "title": "Allow Web Cmdlets to Ignore HTTP Error Statuses",
    "updated_at": "2019-11-21T22:35:22Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10466",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1229236?v=4",
      "events_url": "https://api.github.com/users/vdamewood/events{/privacy}",
      "followers_url": "https://api.github.com/users/vdamewood/followers",
      "following_url": "https://api.github.com/users/vdamewood/following{/other_user}",
      "gists_url": "https://api.github.com/users/vdamewood/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vdamewood",
      "id": 1229236,
      "login": "vdamewood",
      "node_id": "MDQ6VXNlcjEyMjkyMzY=",
      "organizations_url": "https://api.github.com/users/vdamewood/orgs",
      "received_events_url": "https://api.github.com/users/vdamewood/received_events",
      "repos_url": "https://api.github.com/users/vdamewood/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vdamewood/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vdamewood/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vdamewood"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    },
    "assignees": [
      {
        "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
        "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
        "followers_url": "https://api.github.com/users/iSazonov/followers",
        "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
        "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/iSazonov",
        "id": 22290914,
        "login": "iSazonov",
        "node_id": "MDQ6VXNlcjIyMjkwOTE0",
        "organizations_url": "https://api.github.com/users/iSazonov/orgs",
        "received_events_url": "https://api.github.com/users/iSazonov/received_events",
        "repos_url": "https://api.github.com/users/iSazonov/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/iSazonov"
      }
    ],
    "author_association": "CONTRIBUTOR",
    "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\n<!-- Summarize your PR between here and the checklist. -->\r\nEdited a word\r\n\r\n## PR Context\r\n\r\n<!-- Provide a little reasoning as to why this Pull Request helps and why you have opened it. -->\r\n\r\nThis PR edits a word in the Telemetry Section of the README.md file.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [ ] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
    "closed_at": "2019-08-30T19:05:27Z",
    "comments": 2,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10465/comments",
    "created_at": "2019-08-29T22:36:58Z",
    "draft": false,
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10465/events",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10465",
    "id": 487205817,
    "labels": [
      {
        "color": "fbca04",
        "default": false,
        "description": "Indicates that a PR should be marked as a documentation change in the Change Log",
        "id": 1126736123,
        "name": "CL-Docs",
        "node_id": "MDU6TGFiZWwxMTI2NzM2MTIz",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/CL-Docs"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10465/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": "2019-09-22T18:49:57Z",
      "closed_issues": 39,
      "created_at": "2019-08-19T21:02:56Z",
      "creator": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
        "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
        "followers_url": "https://api.github.com/users/TravisEz13/followers",
        "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
        "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/TravisEz13",
        "id": 10873629,
        "login": "TravisEz13",
        "node_id": "MDQ6VXNlcjEwODczNjI5",
        "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
        "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
        "repos_url": "https://api.github.com/users/TravisEz13/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/TravisEz13"
      },
      "description": "",
      "due_on": null,
      "html_url": "https://github.com/PowerShell/PowerShell/milestone/69",
      "id": 4587190,
      "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/milestones/69/labels",
      "node_id": "MDk6TWlsZXN0b25lNDU4NzE5MA==",
      "number": 69,
      "open_issues": 0,
      "state": "closed",
      "title": "7.0.0-preview.4",
      "updated_at": "2019-09-22T18:49:57Z",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/milestones/69"
    },
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzEyNTE4ODc5",
    "number": 10465,
    "performed_via_github_app": null,
    "pull_request": {
      "diff_url": "https://github.com/PowerShell/PowerShell/pull/10465.diff",
      "html_url": "https://github.com/PowerShell/PowerShell/pull/10465",
      "merged_at": "2019-08-30T19:05:27Z",
      "patch_url": "https://github.com/PowerShell/PowerShell/pull/10465.patch",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/pulls/10465"
    },
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10465/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10465/timeline",
    "title": "Fix a typo in README.md",
    "updated_at": "2019-09-19T17:51:07Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10465",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/20634421?v=4",
      "events_url": "https://api.github.com/users/vedhasp/events{/privacy}",
      "followers_url": "https://api.github.com/users/vedhasp/followers",
      "following_url": "https://api.github.com/users/vedhasp/following{/other_user}",
      "gists_url": "https://api.github.com/users/vedhasp/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vedhasp",
      "id": 20634421,
      "login": "vedhasp",
      "node_id": "MDQ6VXNlcjIwNjM0NDIx",
      "organizations_url": "https://api.github.com/users/vedhasp/orgs",
      "received_events_url": "https://api.github.com/users/vedhasp/received_events",
      "repos_url": "https://api.github.com/users/vedhasp/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vedhasp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vedhasp/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vedhasp"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": {
      "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
      "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
      "followers_url": "https://api.github.com/users/TravisEz13/followers",
      "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
      "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/TravisEz13",
      "id": 10873629,
      "login": "TravisEz13",
      "node_id": "MDQ6VXNlcjEwODczNjI5",
      "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
      "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
      "repos_url": "https://api.github.com/users/TravisEz13/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/TravisEz13"
    },
    "assignees": [
      {
        "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
        "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
        "followers_url": "https://api.github.com/users/TravisEz13/followers",
        "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
        "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/TravisEz13",
        "id": 10873629,
        "login": "TravisEz13",
        "node_id": "MDQ6VXNlcjEwODczNjI5",
        "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
        "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
        "repos_url": "https://api.github.com/users/TravisEz13/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/TravisEz13"
      }
    ],
    "author_association": "MEMBER",
    "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nMake sure the daily coordinated build, knows it is a daily build\r\n\r\n## PR Context\r\n\r\n<!-- Provide a little reasoning as to why this Pull Request helps and why you have opened it. -->\r\n\r\n## PR Checklist\r\n\r\n- [ ] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [ ] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [ ] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [ ] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [ ] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [ ] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
    "closed_at": "2019-08-29T21:42:03Z",
    "comments": 1,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10464/comments",
    "created_at": "2019-08-29T21:40:11Z",
    "draft": false,
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10464/events",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10464",
    "id": 487188656,
    "labels": [
      {
        "color": "fbca04",
        "default": false,
        "description": "Indicates that a PR should be marked as a build or packaging change in the Change Log",
        "id": 1126735745,
        "name": "CL-BuildPackaging",
        "node_id": "MDU6TGFiZWwxMTI2NzM1NzQ1",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/CL-BuildPackaging"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10464/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": "2019-09-22T18:49:57Z",
      "closed_issues": 39,
      "created_at": "2019-08-19T21:02:56Z",
      "creator": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
        "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
        "followers_url": "https://api.github.com/users/TravisEz13/followers",
        "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
        "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/TravisEz13",
        "id": 10873629,
        "login": "TravisEz13",
        "node_id": "MDQ6VXNlcjEwODczNjI5",
        "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
        "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
        "repos_url": "https://api.github.com/users/TravisEz13/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/TravisEz13"
      },
      "description": "",
      "due_on": null,
      "html_url": "https://github.com/PowerShell/PowerShell/milestone/69",
      "id": 4587190,
      "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/milestones/69/labels",
      "node_id": "MDk6TWlsZXN0b25lNDU4NzE5MA==",
      "number": 69,
      "open_issues": 0,
      "state": "closed",
      "title": "7.0.0-preview.4",
      "updated_at": "2019-09-22T18:49:57Z",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/milestones/69"
    },
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzEyNTA0NzY0",
    "number": 10464,
    "performed_via_github_app": null,
    "pull_request": {
      "diff_url": "https://github.com/PowerShell/PowerShell/pull/10464.diff",
      "html_url": "https://github.com/PowerShell/PowerShell/pull/10464",
      "merged_at": "2019-08-29T21:42:03Z",
      "patch_url": "https://github.com/PowerShell/PowerShell/pull/10464.patch",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/pulls/10464"
    },
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10464/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10464/timeline",
    "title": "Make sure the daily coordinated build, knows it is a daily build",
    "updated_at": "2019-09-19T17:51:18Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10464",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
      "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
      "followers_url": "https://api.github.com/users/TravisEz13/followers",
      "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
      "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/TravisEz13",
      "id": 10873629,
      "login": "TravisEz13",
      "node_id": "MDQ6VXNlcjEwODczNjI5",
      "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
      "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
      "repos_url": "https://api.github.com/users/TravisEz13/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/TravisEz13"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "# Summary of the new feature/enhancement\r\n\r\nSince version 1, the implementation of the formatting layer in PowerShell has included many challenging limitations, some of which include the following:\r\n\r\n* `Format-*` cmdlets output custom format data objects that are then rendered in the console once they are passed into `Out-Default` for processing. e.g. `Get-Process -Id $PID | Format-Table | Get-Member`.\r\n* Since these cmdlets convert PSObjects into format data objects, you cannot pipe their results to other commands to do something meaningful. e.g. `Get-Process -Id $PID | Format-Table | Stop-Process -WhatIf`\r\n* Other than `Format-List`, `Format-*` is not respected when you output heterogeneous types that are not compatible with one another. e.g. `& {Get-Process -Id $PID; Get-Item C:\\} | Format-Table`.\r\n* To create a command that produces objects that render in a specific format by default, you must define the format using format ps1xml files, and you must ensure that the PSTypeNames of objects returned from your command have a PSTypeName that matches the specific format you want. This would require a much more complicated example involving ps1xml format files, so I have left that out for now.\r\n\r\nI have attempted to eliminate many of these limitations in PowerShell 5.1 and earlier with my [FormatPx module](https://github.com/KirkMunro/FormatPx], and while that worked out quite well, I also discovered several issues with the FormatPx approach, namely:\r\n\r\n* Producing output formatted in a specific way from a command is easy with FormatPx, but capturing that output in such a way that it maintains the desired format when that output data may also be captured as reference and output via other means (e.g. `$Error` for errors) where you don't want the same format is a difficult problem to solve without some redesign.\r\n* Rendering formatted output when formatted output is not needed (e.g. when you are capturing output or piping a command to another command) is a processing expense that must be avoided until it is needed. Otherwise you may be spending CPU cycles formatting data, only to then have that format replaced with other formats.\r\n* When outputting some data with truly out of band data (e.g. errors, warnings, etc.) in the middle of the output, it is desirable to show that out of band data and then continue the output that you previously started rather than close off the output and then start output anew with headers, etc. being shown again.\r\n\r\nNow I have some users who would like to use `FormatPx` in PowerShell (Core) on Linux, and even though that only requires some relatively minor changes, there are issues I would like to deal with and I believe it would be much more valuable for the community if I take the knowledge gained through my `FormatPx` work and apply it natively to PowerShell 7, since it is open source after all.\r\n\r\n# Proposed technical implementation details\r\n\r\nThe specific problems I would like to solve in PowerShell 7 are as follows:\r\n\r\n1. Make it much easier for scripters to select the format that they want for data output from any command that they author.\r\n\r\n    By \"much easier\", I mean without having to unnecessarily muck around with the PSTypeNames array on non-custom objects that are output, and being able to easily select existing, named format views or identify new, command-specific formats that should be used as the default format for the objects output by the command, all while still just outputting objects that can be captured, output, used in expressions, or piped to other commands.\r\n\r\n1. Fix output processing such that heterogeneous types can be output to `Format-Table`, `Format-Wide`, or `Format-Custom` (but that's hardly used) with PowerShell rendering that output in tabular, wide, or custom formats, respectively, without implicitly treating objects with different types as out of band objects.\r\n\r\n    This differs from today's behavior, in which the Formatting engine identifies the current \"shape\" to use when rendering formatted data, and any object whose type does not match the type(s) used in formatting data in the current shape are marked as out of band and shown as if they were output with Format-List if they are non-value, non-string types or shown as their string representation if they are value types or strings.\r\n\r\n    This is a breaking change, because commands that output multiple heterogeneous types would render differently if they are piped to `Format-Table`, `Format-Wide`, or `Format-Custom`, and scripts that capture that formatted output and do something with it may have issues; however, it is not very likely that there are many scripts out there that produce heterogeneous data types with different formats that then have their data captured in string format and processed. For this reason, I believe it is worth the break, because it corrects a long-standing issue in PowerShell and makes PowerShell `Format-*` cmdlets function in a WYSIWYG fashion, as they should.\r\n\r\nTo solve these problems, I would like to make the following changes:\r\n\r\n1. Extend the `OutputType` attribute such that it includes a new `Format` property.\r\n\r\n    For example, consider this command:\r\n\r\n    ```powershell\r\n    function Get-ProcessByStartTime {\r\n        [CmdletBinding()]\r\n        [OutputType([System.Diagnostics.Process], Format='Table', FormatParameters=@{\r\n            View = 'StartTime'\r\n        })]\r\n        Get-Process | Where-Object StartTime | Sort-Object StartTime\r\n    }\r\n    ```\r\n\r\n    While that is a contrived example, it demonstrates how a command could be written to apply a specific, named view to the objects that it outputs.\r\n\r\n    Now consider this example, which would likely be a much more common approach to specifying custom formatting to use:\r\n\r\n    ```powershell\r\n    function Get-Something {\r\n        [CmdletBinding()]\r\n        [OutputType([System.ServiceProcess.ServiceController], Format='Table', FormatParameters=@{\r\n            Property = 'Name','DisplayName'\r\n            GroupBy = 'Status'\r\n        })]\r\n        Get-Service | Sort-Object -Property Status,Name\r\n    }\r\n    ```\r\n\r\n    That example shows how you can define a default format for a command without having to create a custom format data entry: you simply specify the desired default format using the `OutputType` attribute.\r\n\r\n    Here's one more example to show how it could work with custom objects:\r\n\r\n    ```powershell\r\n    function Get-OperatingSystem {\r\n        [CmdletBinding()]\r\n        [OutputType('MyModule.OperatingSystem', Format='List')]\r\n        $osData = Get-CimInstance -Class Win32_OperatingSystem\r\n        [pscustomobject]@{\r\n            PSTypeName = 'MyModule.OperatingSystem'\r\n            Name = $osData.Caption\r\n            Version = $osData.Version\r\n            Architecture = $osData.OSArchitecture\r\n        }\r\n    }\r\n    ```\r\n\r\n    In all cases, what I envision would happen behind the scenes is that the returned objects would be wrapped in a lightweight `PSFormatObject` type that is derived from `PSObject`. This type would capture the desired format as specified in the `OutputType` attribute, but it wouldn't actually render the data in that format -- rendering would be deferred until `Out-Default`, allowing the command output to be piped to other commands like normal and saving the time required to render the data until it is needed. If you pipe the output from these commands to any `Format-*` command, the data would immediately be rendered in the desired format. If you show the data output from these commands without using a `Format-*` command, the data would render using the format information that was attached to the `PSFormatObject` objects.\r\n\r\n    Note that commands that return multiple object types could define the desired format for each object type.\r\n\r\n1. Fix the heterogeneous output type problem.\r\n\r\n    To solve this problem, the formatting engine would be updated such that a new \"shape\" doesn't result in out of band processing. Instead, if the object was not a scalar nor a string (and perhaps other simple types -- I would need to double-check the code to ensure I'm covering the proper types), and if the object was output on the standard output stream, it would result in the closing of the current group/shape, and a new format would be started with the changed, incompatible, heterogeneous type. Non-standard output data as well as scalars and strings would still result in out of band data rendering.\r\n\r\n# Alternate proposals and considerations\r\n\r\n## Alternate proposal: Change how `Format-*` cmdlets work, such that formatting is always deferred until `Out-Default`\r\n\r\nInstead of extending `OutputType`, we could update `Format-*` cmdlets to do the same thing (create a `PSFormatObject` that contains a shared format object reference for each object processed). This would allow piping beyond `Format-*`, and `Format-*` cmdlets would be used to define the format you want when the data is output rather than to convert the data to the desired format output.\r\n\r\nOn the plus side, this would allow scripters to just use `Format-*` where they want, even without dealing with custom type names.\r\n\r\nThere are several downsides to just changing `Format-*` behavior, including the following:\r\n* It would result in functions that return format data in downlevel versions, and object data in current + future versions, which would be confusing.\r\n* It would require users to use the same `Format-*` invocation anywhere that objects are returned from a function or script, which is more difficult than defining the returned format as part of `OutputType`.\r\n* It is less declarative than an `OutputType` format, and less discoverable (`OutputType` has the added benefit of being easily parsed and discovered via programmatic inspection).\r\n\r\nFor these reasons, I would stay away from this approach, and stick with the proposal of extending `OutputType`.\r\n\r\n## Alternate proposal: use something like @lzybkr's PSMore module\r\n\r\n@lzybkr started a [PSMore module](https://github.com/lzybkr/PSMore) a few years ago to address some of PowerShell's formatting issues. That module is a side project that has not seen much movement.\r\n\r\nRegardless of how that module proceeds going forward, I believe the proposal documented herein to be worth the investment because it is additive, and it solves some significant formatting issues without changing how formatting is defined in configuration and without changing how formatting is rendered in PowerShell today. I also don't believe that these changes get in the way of what could be done in the PSMore module going forward.\r\n\r\n## Consideration: Define a `Format-Default` cmdlet\r\n\r\nWith support for more easily customizable formatting without breaking the pipeline-ability of commands, I would also advocate for defining a `Format-Default` cmdlet. This cmdlet would simply replace any `PSFormatObject` objects that were passed into it with their `PSObject` counterparts that do not have format data associated with them, allowing objects to have custom formatting stripped from them.\r\n\r\n## Consideration: Deferring output may result in named formats being unavailable if they are defined in modules that are unloaded\r\n\r\nConsider this scenario:\r\n1. You have a module with a command that returns data configured to use a specific named format.\r\n1. The named format is loaded as part of the same module.\r\n1. You invoke that command and capture the results in a variable.\r\n1. You then unload that module.\r\n1. You then pass your captured data to `Out-Default`.\r\n\r\nBy the time the data reaches `Out-Default`, the desired format that was specified in the command will not be available in memory anymore because it will have unloaded with the module.\r\n\r\nIn this case, the data would fallback to the default output for that data, as if it did not have associated `PSFormatObject` information to work with.\r\n\r\n## Consideration: Use a new `System.Management.Automation.OutputAttribute` instead of extending `OutputType`\r\n\r\nThe name `OutputType` indicates that the attribute is used to define the output type. Instead of extending that to include formatting information as well, it may be better to define a new `Output` attribute (`System.Management.Automation.OutputAttribute`) that supercedes `OutputType`, and use that attribute to define the type of objects that are output, the format used to render the objects that are output, which parameter sets return those type/format details, and leave the door open for additional future properties that could be added to the `Output` attribute (e.g. `Contract=$true` to indicate that output is contractual in a function, which would result in errors if an object that does not match an output type was returned from that function).\r\n\r\nCreating a new attribute in place of extending the `OutputType` attribute has two benefits:\r\n\r\n1. Downlevel users will not be confused when they see `OutputType` used with different syntax and get errors. Instead they will see a new attribute that they haven't used before. They'll still get errors, but at least those errors won't be related to an attribute that is supported/documented in the version they are using.\r\n1. Since this makes output attribution about much more than a type, having a new attribute for that with a different name may bring more clarity to what is being done. The old attribute would still be supported, so backwards compatibility would persist, but the Parser should probably raise an error if both attributes are used in the same command (see additional comments about Parser improvements when it comes to attributes below).\r\n\r\n## Consideration: New attributes and attribute extensions would result in runtime errors in downlevel versions\r\n\r\nIt is worth pointing out that it doesn't matter if you extend an attribute with additional properties or if you define a new attribute -- both result in _runtime_ errors, not parse errors. I'm not surprised for the latter since attributes can be defined in modules, but I'm a little surprised for the former. I feel it would be better if attribute extensions via additional properties resulted in parse errors, but there may be a valid reason that they don't that I am not aware of. At any rate, I call this out as a consideration because scripts written with attribute changes will result in runtime errors, not parse errors, in downlevel versions of PowerShell.\r\n\r\nI think it is also worth updating the PowerShell parser to return parse errors if attributes are used that do not exist in a version of PowerShell, or if properties within those attributes that are used do not exist in a version of PowerShell. That is something that can be determined at parse time, and having a parser error would help guide users towards finding a version of PowerShell where those attributes and their properties are defined/supported. This work should be done as a separate PR (and a separate issue will be logged to track this need if we have consensus on this point).\r\n",
    "closed_at": null,
    "comments": 6,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10463/comments",
    "created_at": "2019-08-29T20:37:32Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10463/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10463",
    "id": 487164650,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "the issue is more of a feature request than a bug",
        "id": 311043050,
        "name": "Issue-Enhancement",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNTA=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Enhancement"
      },
      {
        "color": "5319e7",
        "default": false,
        "description": "core PowerShell engine, interpreter, and runtime",
        "id": 401720735,
        "name": "WG-Engine",
        "node_id": "MDU6TGFiZWw0MDE3MjA3MzU=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/WG-Engine"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10463/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0ODcxNjQ2NTA=",
    "number": 10463,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 8,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 8,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10463/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10463/timeline",
    "title": "Addressing the Format challenges in PowerShell",
    "updated_at": "2019-09-30T14:39:52Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10463",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "TLDR; I'm unhappy with the view for `gci` on my Mac so I did something about it\r\n\r\n# Summary of the new feature/enhancement\r\n\r\nI've been thinking that the `Get-ChildItem` experience on Linux/Mac is not providing as much information as I would like. We don't report user, group or a real mode, and size for directories is not reported.\r\n\r\n# Proposed technical implementation details (optional)\r\n\r\nConsider the difference between `ls -ld /opt` and `Get-Item /opt` (this is the same for files, but I am attempting to avoid a large amount of output).\r\n```bash\r\nPS> /bin/ls -ld /opt\r\ndrwxr-xr-x  3 root  wheel  96 Mar 16 14:14 /opt\r\n```\r\n\r\n```powershell\r\nPS> gi /opt\r\n\r\n\r\n    Directory: /\r\n\r\nMode                 LastWriteTime         Length Name\r\n----                 -------------         ------ ----\r\nd-r--           3/16/2019  2:14 PM                opt\r\n```\r\n\r\nThere's a _useful_ mode description, as well as owner/group info. The LastWriteTime is a bit tidier (imo) and then there's a length reported for a directory. All that extra info is down to the `stat` API which provides all this information. Unfortunately, the `stat` API is _way_ different between platforms; the struct property layout is different, some of the properties are different types (inode can be an int or a long), etc), so it's a bit of a mess and you can't just simply wrap stat in c# and be portable.\r\n\r\nI spent a little time in constructing a common stat structure which could smooth out the underlying differences between platforms and present useful data which could be used in the filesystem provider and provide a better (to me, anyway) experience.\r\n\r\nHere's what I've got so far:\r\n\r\n```powershell\r\nPS> gi /opt | ft -view childrenWithUnixStat\r\n\r\n\r\n    Directory: /\r\n\r\nUnixMode   User       Group       LastWriteTime           Size Name\r\n--------   ----       -----       -------------           ---- ----\r\ndrwxr-xr-x root       wheel        Mar 16 02:14             96 opt\r\n```\r\nIt handles the usual pipes, char/block devices\r\n``` powershell\r\nPS> ls /dev/zero\r\n\r\n\r\n    Directory: /dev\r\n\r\nMode                 LastWriteTime         Length Name\r\n----                 -------------         ------ ----\r\n-----           8/14/2019  5:31 PM              0 zero\r\n\r\nPS> ls /dev/zero | ft -view childrenWithUnixStat\r\n\r\n\r\n    Directory: /dev\r\n\r\nUnixMode   User       Group       LastWriteTime           Size Name\r\n--------   ----       -----       -------------           ---- ----\r\ncrw-rw-rw- root       wheel        Aug 14 05:31              0 zero\r\n```\r\n\r\nMy implementation leads to some cool side effects:\r\n\r\n```powershell\r\nPS> gci /dev | group group\r\n\r\nCount Name                      Group\r\n----- ----                      -----\r\n    1 _windowserver             {/dev/xcpm}\r\n   43 operator                  {/dev/disk0, /dev/disk0s1, /dev/disk0s2, /dev/disk1…}\r\n    1 staff                     {/dev/console}\r\n   12 tty                       {/dev/ptmx, /dev/ttys000, /dev/ttys001, /dev/ttys002…}\r\n  301 wheel                     {/dev/fd, /dev/afsc_type5, /dev/auditpipe, /dev/auditsessions…}\r\n\r\nPS> gci /dev | group unixmode\r\n\r\nCount Name                      Group\r\n----- ----                      -----\r\n   17 brw-r-----                {/dev/disk0, /dev/disk0s1, /dev/disk0s2, /dev/disk1…}\r\n    1 cr--r--r--                {/dev/io8logmt}\r\n   17 crw-------                {/dev/afsc_type5, /dev/auditpipe, /dev/autofs, /dev/autofs_control…}\r\n   11 crw--w----                {/dev/ttys000, /dev/ttys001, /dev/ttys002, /dev/ttys003…}\r\n   17 crw-r-----                {/dev/rdisk0, /dev/rdisk0s1, /dev/rdisk0s2, /dev/rdisk1…}\r\n    2 crw-r--r--                {/dev/auditsessions, /dev/fsevents}\r\n    1 crw-rw----                {/dev/xcpm}\r\n  288 crw-rw-rw-                {/dev/autofs_homedirmounter, /dev/autofs_notrigger, /dev/autofs_nowait, /dev/cu.Bluetooth-Incoming-Port…}\r\n    1 dr-xr-xr-x                {/dev/fd}\r\n    3 lr-xr-xr-x                {/dev/stderr, /dev/stdin, /dev/stdout}\r\n\r\nPS> gci / | group { $_.UnixStat.HardLinkCount}\r\n\r\nCount Name                      Group\r\n----- ----                      -----\r\n    1 3                         {/opt}\r\n    1 5                         {/System}\r\n    1 6                         {/Users}\r\n    1 65                        {/Library}\r\n    1 84                        {/Applications}\r\n\r\n```\r\n\r\nI have done the _barest_ of performance analysis, but I'm not seeing much impact.\r\n\r\nImplementation wise, I did this in PowerShell-Native where I smoothed out stat to be x-plat and then extended the native calls in CorePsPlatform, and called them from ProviderBase,  extended types in Types_Ps1Xml and created a new format in FileSystem_format_ps1xml.\r\n\r\nMy question to you all: Do you think this has legs? Should I spend more time on it? I'm already _personally_ finding it useful, but not sure whether anyone really cares.\r\n\r\n",
    "closed_at": null,
    "comments": 6,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10462/comments",
    "created_at": "2019-08-29T20:31:12Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10462/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10462",
    "id": 487162026,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "the issue is more of a feature request than a bug",
        "id": 311043050,
        "name": "Issue-Enhancement",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNTA=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Enhancement"
      },
      {
        "color": "fef2c0",
        "default": false,
        "description": null,
        "id": 317642289,
        "name": "OS-macOS",
        "node_id": "MDU6TGFiZWwzMTc2NDIyODk=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/OS-macOS"
      },
      {
        "color": "fef2c0",
        "default": false,
        "description": null,
        "id": 325406346,
        "name": "OS-Linux",
        "node_id": "MDU6TGFiZWwzMjU0MDYzNDY=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/OS-Linux"
      },
      {
        "color": "5319e7",
        "default": false,
        "description": "",
        "id": 2694191184,
        "name": "WG-Engine-Format",
        "node_id": "MDU6TGFiZWwyNjk0MTkxMTg0",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/WG-Engine-Format"
      },
      {
        "color": "5319e7",
        "default": false,
        "description": "specific to the FileSystem provider",
        "id": 3070094586,
        "name": "Area-FileSystem-Provider",
        "node_id": "MDU6TGFiZWwzMDcwMDk0NTg2",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Area-FileSystem-Provider"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10462/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0ODcxNjIwMjY=",
    "number": 10462,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 9,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 1,
      "total_count": 10,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10462/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10462/timeline",
    "title": "Feature Request - Provide more UNIX-like view of files/directories",
    "updated_at": "2021-11-30T11:07:51Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10462",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/10214008?v=4",
      "events_url": "https://api.github.com/users/JamesWTruher/events{/privacy}",
      "followers_url": "https://api.github.com/users/JamesWTruher/followers",
      "following_url": "https://api.github.com/users/JamesWTruher/following{/other_user}",
      "gists_url": "https://api.github.com/users/JamesWTruher/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/JamesWTruher",
      "id": 10214008,
      "login": "JamesWTruher",
      "node_id": "MDQ6VXNlcjEwMjE0MDA4",
      "organizations_url": "https://api.github.com/users/JamesWTruher/orgs",
      "received_events_url": "https://api.github.com/users/JamesWTruher/received_events",
      "repos_url": "https://api.github.com/users/JamesWTruher/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/JamesWTruher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JamesWTruher/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/JamesWTruher"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11860095?v=4",
      "events_url": "https://api.github.com/users/anmenaga/events{/privacy}",
      "followers_url": "https://api.github.com/users/anmenaga/followers",
      "following_url": "https://api.github.com/users/anmenaga/following{/other_user}",
      "gists_url": "https://api.github.com/users/anmenaga/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/anmenaga",
      "id": 11860095,
      "login": "anmenaga",
      "node_id": "MDQ6VXNlcjExODYwMDk1",
      "organizations_url": "https://api.github.com/users/anmenaga/orgs",
      "received_events_url": "https://api.github.com/users/anmenaga/received_events",
      "repos_url": "https://api.github.com/users/anmenaga/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/anmenaga/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anmenaga/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/anmenaga"
    },
    "assignees": [
      {
        "avatar_url": "https://avatars.githubusercontent.com/u/11860095?v=4",
        "events_url": "https://api.github.com/users/anmenaga/events{/privacy}",
        "followers_url": "https://api.github.com/users/anmenaga/followers",
        "following_url": "https://api.github.com/users/anmenaga/following{/other_user}",
        "gists_url": "https://api.github.com/users/anmenaga/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/anmenaga",
        "id": 11860095,
        "login": "anmenaga",
        "node_id": "MDQ6VXNlcjExODYwMDk1",
        "organizations_url": "https://api.github.com/users/anmenaga/orgs",
        "received_events_url": "https://api.github.com/users/anmenaga/received_events",
        "repos_url": "https://api.github.com/users/anmenaga/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/anmenaga/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/anmenaga/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/anmenaga"
      }
    ],
    "author_association": "MEMBER",
    "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nFixes #10301 #10362 #10184 \r\n\r\n1. Fix issue where `pwsh` command line options were not passed.\r\n1. Fix issue where the location where the global tool was installed could not have spaces in them\r\n1. Fix issue where the return code was not returned.\r\n\r\n## PR Context\r\n\r\n<!-- Provide a little reasoning as to why this Pull Request helps and why you have opened it. -->\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
    "closed_at": "2019-08-30T22:55:49Z",
    "comments": 6,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10461/comments",
    "created_at": "2019-08-29T18:44:59Z",
    "draft": false,
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10461/events",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10461",
    "id": 487117901,
    "labels": [
      {
        "color": "fbca04",
        "default": false,
        "description": "Indicates that a PR should be marked as a general cmdlet change in the Change Log",
        "id": 1126735368,
        "name": "CL-General",
        "node_id": "MDU6TGFiZWwxMTI2NzM1MzY4",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/CL-General"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10461/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": "2020-02-04T01:03:15Z",
      "closed_issues": 4,
      "created_at": "2019-09-22T18:50:20Z",
      "creator": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
        "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
        "followers_url": "https://api.github.com/users/TravisEz13/followers",
        "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
        "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/TravisEz13",
        "id": 10873629,
        "login": "TravisEz13",
        "node_id": "MDQ6VXNlcjEwODczNjI5",
        "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
        "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
        "repos_url": "https://api.github.com/users/TravisEz13/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/TravisEz13"
      },
      "description": "PRs merged into the 6.2.4 branch",
      "due_on": null,
      "html_url": "https://github.com/PowerShell/PowerShell/milestone/72",
      "id": 4680598,
      "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/milestones/72/labels",
      "node_id": "MDk6TWlsZXN0b25lNDY4MDU5OA==",
      "number": 72,
      "open_issues": 0,
      "state": "closed",
      "title": "6.2.4",
      "updated_at": "2020-02-04T01:03:15Z",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/milestones/72"
    },
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzEyNDQ2MzI5",
    "number": 10461,
    "performed_via_github_app": null,
    "pull_request": {
      "diff_url": "https://github.com/PowerShell/PowerShell/pull/10461.diff",
      "html_url": "https://github.com/PowerShell/PowerShell/pull/10461",
      "merged_at": "2019-08-30T22:55:49Z",
      "patch_url": "https://github.com/PowerShell/PowerShell/pull/10461.patch",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/pulls/10461"
    },
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10461/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10461/timeline",
    "title": "Fix global tool issues around exit code, command line parameters and path with spaces",
    "updated_at": "2020-06-08T18:24:04Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10461",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/12820925?v=4",
      "events_url": "https://api.github.com/users/adityapatwardhan/events{/privacy}",
      "followers_url": "https://api.github.com/users/adityapatwardhan/followers",
      "following_url": "https://api.github.com/users/adityapatwardhan/following{/other_user}",
      "gists_url": "https://api.github.com/users/adityapatwardhan/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/adityapatwardhan",
      "id": 12820925,
      "login": "adityapatwardhan",
      "node_id": "MDQ6VXNlcjEyODIwOTI1",
      "organizations_url": "https://api.github.com/users/adityapatwardhan/orgs",
      "received_events_url": "https://api.github.com/users/adityapatwardhan/received_events",
      "repos_url": "https://api.github.com/users/adityapatwardhan/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/adityapatwardhan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adityapatwardhan/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/adityapatwardhan"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "# Steps to reproduce\r\n\r\n```powershell\r\n[System.Net.WebRequest]::DefaultWebProxy.Credentials = [System.Net.CredentialCache]::DefaultNetworkCredentials\r\n\r\n(Invoke-WebRequest -Uri 'https://google.com').StatusCode\r\n```\r\n\r\n# Expected behavior\r\n\r\n```powershell\r\n200\r\n```\r\n\r\n# Actual behavior\r\n\r\n```none\r\nError message being thrown from network proxy\r\n\r\nAuthentication Required\r\nYou must be authenticated to access this URL.\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-preview.3\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-preview.3\r\nOS                             Microsoft Windows 10.0.17763\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0…}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\nThis works fine on the same machine using Windows PowerShell but doesn't work in PowerShell 6 or above.",
    "closed_at": "2021-01-15T14:24:44Z",
    "comments": 10,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10460/comments",
    "created_at": "2019-08-29T14:28:24Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10460/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10460",
    "id": 486993357,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "ideally support can be provided via other mechanisms, but sometimes folks do open an issue to get a",
        "id": 311043053,
        "name": "Issue-Question",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNTM=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Question"
      },
      {
        "color": "ffffff",
        "default": false,
        "description": "The issue is caused by external component(s).",
        "id": 427077877,
        "name": "Resolution-External",
        "node_id": "MDU6TGFiZWw0MjcwNzc4Nzc=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Resolution-External"
      },
      {
        "color": "5319e7",
        "default": false,
        "description": "cmdlets in the Microsoft.PowerShell.Utility module",
        "id": 552752310,
        "name": "WG-Cmdlets-Utility",
        "node_id": "MDU6TGFiZWw1NTI3NTIzMTA=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/WG-Cmdlets-Utility"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10460/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0ODY5OTMzNTc=",
    "number": 10460,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10460/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10460/timeline",
    "title": "Proxy Authentication using logged on network credentials, works fine in Windows PowerShell",
    "updated_at": "2021-01-29T23:37:59Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10460",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/17131194?v=4",
      "events_url": "https://api.github.com/users/SwarfegaGit/events{/privacy}",
      "followers_url": "https://api.github.com/users/SwarfegaGit/followers",
      "following_url": "https://api.github.com/users/SwarfegaGit/following{/other_user}",
      "gists_url": "https://api.github.com/users/SwarfegaGit/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SwarfegaGit",
      "id": 17131194,
      "login": "SwarfegaGit",
      "node_id": "MDQ6VXNlcjE3MTMxMTk0",
      "organizations_url": "https://api.github.com/users/SwarfegaGit/orgs",
      "received_events_url": "https://api.github.com/users/SwarfegaGit/received_events",
      "repos_url": "https://api.github.com/users/SwarfegaGit/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SwarfegaGit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SwarfegaGit/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SwarfegaGit"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Compare-Object returns incorrect results\r\n\r\n# Steps to reproduce\r\nI have run through several permutations of the steps below, but no matter how I change things around, I keep getting the wrong results from the Compare-Object cmdlet. \r\n```powershell\r\nImport-Module -Name MicrosoftPowerBIMgmt -MaximumVersion 1.0.613;\r\nGet-Command -Module MicrosoftPowerBIMgmt* -CommandType Cmdlet | SELECT Name, Source |\r\nExport-Excel Import-Excel C:\\temp\\PowerBI_Commands.xlsx -WorksheetName 1.0.613;\r\nRemove-Module MicrosoftPowerBIMgmt*\r\n\r\nImport-Module -Name MicrosoftPowerBIMgmt -MinimumVersion 1.0.726;\r\nGet-Command -Module MicrosoftPowerBIMgmt* -CommandType Cmdlet | SELECT Name, Source |\r\nExport-Excel Import-Excel C:\\temp\\PowerBI_Commands.xlsx -WorksheetName 1.0.726\r\n\r\n\r\n$613Commands = Import-Excel C:\\temp\\PowerBI_Commands.xlsx -WorksheetName 1.0.613 | SELECT Name\r\n$726Commands = Import-Excel C:\\temp\\PowerBI_Commands.xlsx -WorksheetName 1.0.726 | SELECT Name\r\n\r\n$Diffs = Compare-Object -ReferenceObject $613Commands -DifferenceObject $726Commands -PassThru\r\n\r\n$Diffs\r\n```\r\n\r\n# Expected behavior\r\n\r\n```powershell\r\nExport-PowerBIDataflow\r\nGet-PowerBIDataflow\r\nGet-PowerBIDataflowDatasource\r\nSet-PowerBIDataset\r\nGet-PowerBIWorkspaceMigrationStatus\r\n```\r\n\r\n# Actual behavior\r\n\r\n```powershell\r\nName                             SideIndicator\r\n----                             -------------\r\nSet-PowerBICapacityEncryptionKey =>\r\nSet-PowerBIDataset               =>\r\nSet-PowerBITable                 =>\r\nSet-PowerBIWorkspace             =>\r\nSwitch-PowerBIEncryptionKey      =>\r\n```\r\n\r\n# Environment data\r\n\r\nI can repro this on both PSCore 6.2.2 & PSCore 7-Preview3\r\n\r\n```powershell\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-preview.3\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-preview.3\r\nOS                             Microsoft Windows 10.0.18362\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0ΓÇª}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
    "closed_at": "2019-08-29T17:59:18Z",
    "comments": 2,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10459/comments",
    "created_at": "2019-08-29T14:20:02Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10459/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10459",
    "id": 486988324,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "ideally support can be provided via other mechanisms, but sometimes folks do open an issue to get a",
        "id": 311043053,
        "name": "Issue-Question",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNTM=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Question"
      },
      {
        "color": "ffffff",
        "default": false,
        "description": "The question is answered.",
        "id": 423531321,
        "name": "Resolution-Answered",
        "node_id": "MDU6TGFiZWw0MjM1MzEzMjE=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Resolution-Answered"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10459/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0ODY5ODgzMjQ=",
    "number": 10459,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10459/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10459/timeline",
    "title": "Compare-Object returns incorrect results",
    "updated_at": "2019-09-16T10:36:26Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10459",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/18595280?v=4",
      "events_url": "https://api.github.com/users/SQLvariant/events{/privacy}",
      "followers_url": "https://api.github.com/users/SQLvariant/followers",
      "following_url": "https://api.github.com/users/SQLvariant/following{/other_user}",
      "gists_url": "https://api.github.com/users/SQLvariant/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SQLvariant",
      "id": 18595280,
      "login": "SQLvariant",
      "node_id": "MDQ6VXNlcjE4NTk1Mjgw",
      "organizations_url": "https://api.github.com/users/SQLvariant/orgs",
      "received_events_url": "https://api.github.com/users/SQLvariant/received_events",
      "repos_url": "https://api.github.com/users/SQLvariant/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SQLvariant/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SQLvariant/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SQLvariant"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n\r\n-->\r\n\r\n# Steps to reproduce\r\n\r\nIssue\r\n    Copy-Item behavior is inconsistent and produces unexpected results\r\n    In some cases rerunning the same command produces different results\r\n    The results are different than what cmd copy, xcopy, and robocopy would produce\r\n\r\nSetUp\r\n    For each example the following setup is to start with a clean slate\r\n    Before EACH of the tests in EACH example the environment is reset\r\n    (so before each Copy-Item, cmd copy tests, xcopy, or robocopy test)\r\n\r\n    SetUp-PSCopyTest.ps1\r\n\r\n        rm -r -force \\test\r\n        rm -r -force \\test2\r\n\r\n        md \\test\r\n\r\n        echo 'a' > \\test\\a.txt\r\n        echo 'b' > \\test\\b.txt\r\n        echo 'c' > \\test\\c.txt\r\n        echo 'd' > \\test\\d.txt\r\n\r\n        md \\test\\1\r\n\r\n        echo '1d' > \\test\\1\\d.txt\r\n\r\n    Which produces the following folders and files\r\n\r\n        \\test\\a.txt\r\n        \\test\\b.txt\r\n        \\test\\c.txt\r\n        \\test\\d.txt\r\n        \\test\\1\r\n        \\test\\1\\d.txt\r\n\r\nExample 1  - Destination does not exist and recurse not specified\r\n    Setup\r\n        SetUp-PSCopyTest.ps1\r\n\r\n    Test\r\n        Copy-Item test test2\r\n\r\n    Expected Result\r\n        \\test2          directory created\r\n        \\test2\\a.txt    file copied\r\n        \\test2\\b.txt    file copied\r\n        \\test2\\c.txt    file copied\r\n        \\test2\\d.txt    file copied\r\n\r\n    Copy-Item Result (UnExpected)\r\n        \\test2          directory created but is empty\r\n        No files in \\test were copied\r\n\r\n    Copy-Item ReRun Result (UnExpected AND different)\r\n        \\test2\\test     directory created\r\n        No files in \\test were copied and no files exist in test2 or test2\\test\r\n\r\n    cmd copy test test2 Result (Not desired but expected)\r\n        \\test2 FILE created which contains the contents of\r\n            \\test\\a.txt\r\n            \\test\\b.txt\r\n            \\test\\c.txt\r\n            \\test\\d.txt\r\n\r\n        Not the desired result but expected since \\test2 directory did not exist\r\n\r\n    xcopy test test2 Result (Expected)\r\n        The expected results occur if you respond D for directory to the prompt\r\n        asking if test2 is File or Directory\r\n\r\n    robocopy test test2 Result (Expected)\r\n        The expected results occur\r\n\r\nExample 2  - Destination does not exist and recurse was specified\r\n    Setup\r\n        SetUp-PSCopyTest.ps1\r\n\r\n    Test\r\n        Copy-Item test test2 -r\r\n\r\n    Expected Result\r\n        \\test2                  directory created\r\n        \\test2\\a.txt            file copied\r\n        \\test2\\b.txt            file copied\r\n        \\test2\\c.txt            file copied\r\n        \\test2\\d.txt            file copied\r\n        \\test\\1                 directory created\r\n        \\test\\1\\d.txt           file copied\r\n\r\n    Copy-Item Result (Expected)\r\n        The expected results occur\r\n\r\n    Copy-Item ReRun Result (UnExpected AND different)\r\n        Note when rerun the results are different since the \\test2 directory exists\r\n        This makes Copy-Item difficult to use in a script that is scheduled to run\r\n        on a reoccurring basis\r\n\r\n        \\test2\\test             directory created\r\n        \\test2\\test\\a.txt       file copied\r\n        \\test2\\test\\b.txt       file copied\r\n        \\test2\\test\\c.txt       file copied\r\n        \\test2\\test\\d.txt       file copied\r\n\r\n        \\test2\\test\\1           directory created\r\n        \\test2\\test\\1\\d.txt     file copied\r\n\r\n    Copy-Item 2nd Rerun Result (UnExpected AND different again from previous 2 runs)\r\n        Error: CopyItem : An item with the specified name \\test2\\test already exists\r\n\r\n        If -Force is specified then the results are the same as the Copy-Item ReRun results,\r\n        however, that demonstrates how Copy-Item cannot be used to produce the same results\r\n        for a rerun command. It also only seems to care when a destination directory\r\n        exists and as other tests show does not care if it would overwrite a file.\r\n\r\n    cmd copy Result (Not Supported)\r\n        cmd copy does not support recursion so test not applicable\r\n\r\n    xcopy test test2 /s /e Result (Expected)\r\n        The expected results occur if you respond D for directory to the prompt\r\n        asking if test2 is File or Directory\r\n\r\n    robocopy test test2 /s /e Result (Expected)\r\n        The expected results occur\r\n\r\nExample 3  - Destination exists but is empty and recurse not specified\r\n    Setup\r\n        SetUp-PSCopyTest.ps1\r\n        md \\test2\r\n\r\n    Test\r\n        Copy-Item test test2\r\n\r\n    Expected Result\r\n        \\test2\\a.txt            file copied\r\n        \\test2\\b.txt            file copied\r\n        \\test2\\c.txt            file copied\r\n        \\test2\\d.txt            file copied\r\n\r\n    Copy-Item Result (UnExpected)\r\n        \\test2\\test             directory created\r\n        No files in \\test were copied\r\n\r\n    Copy-Item ReRun Result (UnExpected and different)\r\n        Error: copy-item : An item with the specified name \\test2\\test already exists.\r\n\r\n        If -Force is specified then the results are the same as the Copy-Item results\r\n\r\n    cmd copy test test2 Result (Expected)\r\n        The expected results occur\r\n\r\n    xcopy test test2 Result (Expected)\r\n        The expected results occur\r\n\r\n    robocopy test test2 Result (Expected)\r\n        The expected results occur\r\n\r\nExample 4  - Destination exists but is empty and recurse was specified\r\n    Setup\r\n        SetUp-PSCopyTest.ps1\r\n        md \\test2\r\n\r\n    Test\r\n        Copy-Item test test2 -r\r\n\r\n    Expected Result\r\n        \\test2\\a.txt            file copied\r\n        \\test2\\b.txt            file copied\r\n        \\test2\\c.txt            file copied\r\n        \\test2\\d.txt            file copied\r\n        \\test2\\1                directory created\r\n        \\test2\\1\\d.txt          file copied\r\n\r\n    Copy-Item Result (UnExpected)\r\n        \\test2\\test\\a.txt       file copied\r\n        \\test2\\test\\b.txt       file copied\r\n        \\test2\\test\\c.txt       file copied\r\n        \\test2\\test\\d.txt       file copied\r\n        \\test2\\test\\1           directory created\r\n        \\test2\\test\\1\\d.txt     file copied\r\n\r\n    Copy-Item ReRun Result (UnExpected)\r\n        Error: Copy-Item : An item with the specified name \\test2\\test already exists.\r\n\r\n        If -Force is specified then the results are the same as the Copy-Item results, but\r\n        those are not the expected or desired results\r\n\r\n    cmd copy Result (Not Supported)\r\n        cmd copy does not support recursion so test not applicable\r\n\r\n    xcopy test test2 /s /e Result (Expected)\r\n        The expected results occur\r\n\r\n    robocopy test test2 /s /e Result (Expected)\r\n        The expected results occur\r\n\r\nExample 5  - Destination does not exist, using * with the source and recurse not specified\r\n    Setup\r\n        SetUp-PSCopyTest.ps1\r\n\r\n    Test\r\n        Copy-Item test\\* test2\r\n\r\n    Expected Result\r\n        \\test2                  directory created\r\n        \\test2\\a.txt            file copied\r\n        \\test2\\b.txt            file copied\r\n        \\test2\\c.txt            file copied\r\n        \\test2\\d.txt            file copied\r\n\r\n    Copy-Item Result (Expected)\r\n        The expected results occur\r\n\r\n    Copy-Item ReRun Result (UnExpected and different)\r\n        \\test2\\1                directory created and empty\r\n\r\n        No confirmation for overwriting files occur\r\n\r\n    Copy-Item 2nd ReRun Result (UnExpected and different)\r\n        Error: Copy-Item : An item with the specified name \\test2\\1 already exists.\r\n\r\n        Interesting no issue with overwritting the files\r\n\r\n        If -Force is specified then the results are the same as the Copy-Item rerun results, but\r\n        those are not the expected or desired results\r\n\r\n    cmd copy test\\* test2 Result (Not desired but expected)\r\n        \\test2 FILE created which contains the contents of\r\n            \\test\\a.txt\r\n            \\test\\b.txt\r\n            \\test\\c.txt\r\n            \\test\\d.txt\r\n\r\n        Not the desired result but expected since \\test2 directory did not exist\r\n\r\n    xcopy test\\* test2 Result (Expected)\r\n        The expected results occur if you respond D for directory to the prompt\r\n        asking if test2 is File or Directory\r\n\r\n    robocopy test\\* test2 Result (Not supported - but alternative available)\r\n        Robocopy works with directories so this syntax is not valid\r\n        This is not really an issue since robocopy test test2 produces the expected results\r\n\r\nExample 6  - Destination does not exist, using * with the source and recurse was specified\r\n    Setup\r\n        SetUp-PSCopyTest.ps1\r\n\r\n    Test\r\n        Copy-Item test\\* test2 -r\r\n\r\n    Expected Result\r\n        \\test2                  directory created\r\n        \\test2\\a.txt            file copied\r\n        \\test2\\b.txt            file copied\r\n        \\test2\\c.txt            file copied\r\n        \\test2\\d.txt            file copied\r\n        \\test2\\1                directory created\r\n        \\test2\\1\\d.txt          file copied\r\n\r\n    Copy-Item Result (UnExpected)\r\n        \\test2                  directory created\r\n        \\test2\\a.txt            file copied\r\n        \\test2\\b.txt            file copied\r\n        \\test2\\c.txt            file copied\r\n        \\test2\\d.txt            file copied\r\n\r\n        Despite specifying recurse the following were not created\r\n            \\test2\\1            directory not created\r\n            \\test2\\1\\d.txt      file not copied\r\n\r\n    Copy-Item ReRun Result (Expected BUT different)\r\n        The expected results occur but this differs from the initial run which shows that\r\n        you cannot run the same command and get the same results.\r\n\r\n    cmd copy Result (Not Supported)\r\n        cmd copy does not support recursion so test not applicable\r\n\r\n    xcopy test\\* test2 /s /e Result (Expected)\r\n        The expected results occur if you respond D for directory to the prompt\r\n        asking if test2 is File or Directory\r\n\r\n    robocopy test\\* test2 /s /e Result (Not supported - but alternative available)\r\n        Robocopy works with directories so this syntax is not valid\r\n        This is not really an issue since robocopy test test2 /s /e produces the expected results\r\n\r\nExample 7  - Destination exists, using * with the source and recurse not specified\r\n    Setup\r\n        SetUp-PSCopyTest.ps1\r\n        md \\test2\r\n\r\n    Test\r\n        Copy-Item test\\* test2\r\n\r\n    Expected Result\r\n        \\test2\\a.txt            file copied\r\n        \\test2\\b.txt            file copied\r\n        \\test2\\c.txt            file copied\r\n        \\test2\\d.txt            file copied\r\n\r\n    Copy-Item Result (UnExpected)\r\n        \\test2\\a.txt            file copied\r\n        \\test2\\b.txt            file copied\r\n        \\test2\\c.txt            file copied\r\n        \\test2\\d.txt            file copied\r\n        \\test2\\1                directory created but empty\r\n\r\n    Copy-Item ReRun Result (UnExpected and different)\r\n        Error: Copy-Item : An item with the specified name \\test2\\1 already exists.\r\n\r\n        Interesting no issue with overwriting the files\r\n\r\n        If -Force is specified then the results are the same as the Copy-Item  results, but\r\n        those are not the expected or desired results\r\n\r\n    cmd copy test\\* test2 Result (Expected)\r\n        The expected results occur\r\n\r\n    xcopy test\\* test2 Result (Expected)\r\n        The expected results occur\r\n\r\n    robocopy test\\* test2 Result (Not supported - but alternative available)\r\n        Robocopy works with directories so this syntax is not valid\r\n        This is not really an issue since robocopy test test2 produces the expected results\r\n\r\nExample 8  - Destination exists, using * with the source and recurse was specified\r\n    Setup\r\n        SetUp-PSCopyTest.ps1\r\n        md \\test2\r\n\r\n    Test\r\n        Copy-Item test\\* test2 -r\r\n\r\n    Expected Result\r\n     \\test2\\a.txt               file copied\r\n     \\test2\\b.txt               file copied\r\n     \\test2\\c.txt               file copied\r\n     \\test2\\d.txt               file copied\r\n     \\test2\\1                   directory created\r\n     \\test2\\1\\d.txt             file copied\r\n\r\n    Copy-Item Result (Expected)\r\n        The expected results occur\r\n\r\n    Copy-Item ReRun Result (Expected If -Force is also used)\r\n        Error: Copy-Item : An item with the specified name \\test2\\1 already exists.\r\n\r\n        If -Force is specifed then the expected results occur\r\n\r\n    cmd copy Result (Not Supported)\r\n        cmd copy does not support recursion so test not applicable\r\n\r\n    xcopy test\\* test2 /s /e Result (Expected)\r\n        The expected results occur\r\n\r\n    robocopy test\\* test2 /s /e Result (Not supported - but alternative available)\r\n        Robocopy works with directories so this syntax is not valid\r\n        This is not really an issue since robocopy test test2 /s /e produces the expected results\r\n\r\nExample 9  - Destination does not exist, using *.* with the source and recurse not specified\r\n    Setup\r\n        SetUp-PSCopyTest.ps1\r\n\r\n    Test\r\n        Copy-Item test\\*.* test2\r\n\r\n    Expected Result\r\n     \\test2                     directory created\r\n     \\test2\\a.txt               file copied\r\n     \\test2\\b.txt               file copied\r\n     \\test2\\c.txt               file copied\r\n     \\test2\\d.txt               file copied\r\n\r\n    Copy-Item Result (UnExpected but similar to what cmd copy did in prior test)\r\n        test2 FILE created with the contents of \\test\\d.txt only\r\n\r\n    Copy-Item ReRun Result (UnExpected)\r\n        Same results as Copy-Item Result, however, interesting that no confirmation prompt\r\n        displayed to overwrite the file\r\n\r\n    cmd copy test\\*.* test2 Result (Not desired but expected)\r\n        \\test2 FILE created which contains the contents of\r\n            \\test\\a.txt\r\n            \\test\\b.txt\r\n            \\test\\c.txt\r\n            \\test\\d.txt\r\n\r\n    xcopy test\\*.* test2 Result (Expected)\r\n        The expected results occur if you respond D for directory to the prompt\r\n        asking if test2 is File or Directory\r\n\r\n    robocopy test\\*.* test2 Result (Not supported - but alternative available)\r\n        Robocopy works with directories so this syntax is not valid\r\n        This is not really an issue since robocopy test test2 produces the expected results\r\n\r\nExample 10 - Destination does not exist, using *.* with the source and recurse was specified\r\n    Setup\r\n        SetUp-PSCopyTest.ps1\r\n\r\n    Test\r\n        Copy-Item test\\*.* test2 -r\r\n\r\n    Expected Result\r\n        \\test2                  directory created\r\n        \\test2\\a.txt            file copied\r\n        \\test2\\b.txt            file copied\r\n        \\test2\\c.txt            file copied\r\n        \\test2\\d.txt            file copied\r\n        \\test2\\1                directory created\r\n        \\test2\\1\\d.txt          file copied\r\n\r\n    Copy-Item Result (UnExpected but similar to what cmd copy did in prior test)\r\n        \\test2 FILE created which contains the contents of \\test\\d.txt\r\n\r\n    Copy-Item ReRun Result (UnExpected)\r\n        Same as Copy-Item Result but no overwrite prompt\r\n\r\n    cmd copy Result (Not Supported)\r\n        cmd copy does not support recursion so test not applicable\r\n\r\n    xcopy test\\*.* test2 /s /e Result (Expected)\r\n        The expected results occur if you respond D for directory to the prompt\r\n        asking if test2 is File or Directory\r\n\r\n    robocopy test\\*.* test2 /s /e Result (Not supported - but alternative available)\r\n        Robocopy works with directories so this syntax is not valid\r\n        This is not really an issue since robocopy test test2 /s /e produces the expected results\r\n\r\nExample 11 - Destination exists, using *.* with the source and recurse not specified\r\n    Setup\r\n        SetUp-PSCopyTest.ps1\r\n        md \\test2\r\n\r\n    Test\r\n        Copy-Item test\\*.* test2\r\n\r\n    Expected Result\r\n        \\test2\\a.txt            file copied\r\n        \\test2\\b.txt            file copied\r\n        \\test2\\c.txt            file copied\r\n        \\test2\\d.txt            file copied\r\n\r\n    Copy-Item Result (Expected)\r\n        The expected results occur\r\n\r\n    Copy-Item ReRun Result (Expected)\r\n        The expected results occur, however, there is no warning about overwritting files\r\n\r\n    cmd copy test\\*.* test2 Result (Expected)\r\n        The expected results occur\r\n\r\n    xcopy test\\*.* test2 Result (Expected)\r\n        The expected results occur\r\n\r\n    robocopy test\\*.* test2 Result (Not supported - but alternative available)\r\n        Robocopy works with directories so this syntax is not valid\r\n        This is not really an issue since robocopy test test2 produces the expected results\r\n\r\nExample 12 - Destination exists, using *.* with the source and recurse was specified\r\n    Setup\r\n        SetUp-PSCopyTest.ps1\r\n        md \\test2\r\n\r\n    Test\r\n        Copy-Item test\\*.* test2 -r\r\n\r\n    Expected Result\r\n    \\test2\\a.txt                file copied\r\n    \\test2\\b.txt                file copied\r\n    \\test2\\c.txt                file copied\r\n    \\test2\\d.txt                file copied\r\n    \\test2\\1                    directory created\r\n    \\test2\\1\\d.txt              file copied\r\n\r\n    Copy-Item Result (UnExpected)\r\n        \\test2\\a.txt            file copied\r\n        \\test2\\b.txt            file copied\r\n        \\test2\\c.txt            file copied\r\n        \\test2\\d.txt            file copied\r\n\r\n        Despite specifying recurse the following were not created\r\n            \\test2\\1            directory not created\r\n            \\test2\\1\\d.txt      file not copied\r\n\r\n    Copy-Item ReRun Result (UnExpected)\r\n        Same results as Copy-Item, however, there is no warning about overwritting files\r\n\r\n        Despite specifying recurse the following were not created\r\n            \\test2\\1            directory not created\r\n            \\test2\\1\\d.txt      file not copied\r\n\r\n    cmd copy Result (Not Supported)\r\n        cmd copy does not support recursion so test not applicable\r\n\r\n    xcopy test\\*.* test2 /s /e Result (Expected)\r\n        The expected results occur\r\n\r\n    robocopy test\\*.* test2 /s /e Result (Not supported - but alternative available)\r\n        Robocopy works with directories so this syntax is not valid\r\n        This is not really an issue since robocopy test test2 /s /e produces the expected results\r\n\r\n--\r\n-- Comparison of copy method results\r\n--\r\n\r\n    Copy-Item\r\n        1   UnExpected result and different results when rerun\r\n        2   Expected result   but different results when rerun\r\n        3   UnExpected result and different results when rerun\r\n        4   UnExpected result and different results when rerun\r\n        5   Expected result   but different results when rerun\r\n        6   UnExpected result initially and Expected Result when rerun\r\n        7   UnExpected result and different results when rerun\r\n        8   Expected result   and same result when rerun if -Force used\r\n        9   UnExpected result and same result when rerun\r\n        10  UnExpected result and same result when rerun\r\n        11  Expected result   and same result when rerun\r\n        12  UnExpected result and same result when rerun\r\n\r\n    cmd copy\r\n        1   Not desired but expected result\r\n        2   Does not support recursion\r\n        3   Expected result\r\n        4   Does not support recursion\r\n        5   Not desired but expected result\r\n        6   Does not support recursion\r\n        7   Expected result\r\n        8   Does not support recursion\r\n        9   Not desired but expected result\r\n        10  Does not support recursion\r\n        11  Expected result\r\n        12  Does not support recursion\r\n\r\n    xcopy\r\n        1   Expected result\r\n        2   Expected result\r\n        3   Expected result\r\n        4   Expected result\r\n        5   Expected result\r\n        6   Expected result\r\n        7   Expected result\r\n        8   Expected result\r\n        9   Expected result\r\n        10  Expected result\r\n        11  Expected result\r\n        12  Expected result\r\n\r\n    robocopy\r\n        1   Expected result\r\n        2   Expected result\r\n        3   Expected result\r\n        4   Expected result\r\n        5   Not Supported but alternative syntax works\r\n        6   Not Supported but alternative syntax works\r\n        7   Not Supported but alternative syntax works\r\n        8   Not Supported but alternative syntax works\r\n        9   Not Supported but alternative syntax works\r\n        10  Not Supported but alternative syntax works\r\n        11  Not Supported but alternative syntax works\r\n        12  Not Supported but alternative syntax works\r\n\r\n--\r\n-- Conclusion\r\n--\r\n\r\nWhen I first started using PowerShell back in the 2.0 days I noticed these and similar issues\r\nbut figured they would be addressed as the product matured, therefore I reverted  to using\r\ncmd copy, xcopy, and robocopy, however, I wanted to use Copy-Item since in theory it provided\r\nthe capabilites of cmd copy and xcopy all in one.\r\n\r\nIt is disappointing to see that we have version 7.0 out now in beta and they still have not been\r\naddressed basic functionality.\r\n\r\nCopy-Item produces the expected results only 33% of the time and if rerun then it only produces\r\nthe same results 16% of the time.\r\n\r\nIf it was just a matter of learning a different syntax that would be one thing, however,\r\nwhen considering common use cases (destination exists, destination does not exist, recurse\r\nthe source directory tree, don't recurse the source directory tree), there does not appear\r\nto be a syntax which handles all of those cases AND can produce the same results when rerun.\r\n\r\nThis makes Copy-Item pretty much unusable excpet for all but the most simple types\r\nof copy operations.\r\n\r\nComparing Copy-Item to the other options, cmd copy generally works (with the exception of the\r\nnot supporting recursive and a few other cases), xcopy always works, and robocopy always\r\nworks OR works with a tweak to the syntax.\r\n\r\nBack in the PS 2.0 days I considered writing my own Copy-Item replacement but wanted to use\r\nbuilt in functionality as much as possible so I did not do that.\r\n\r\nAre there any plans to address these issues?\r\n\r\nThere seem to be several key issues:\r\n\r\n1)  When the destination does not exist and you are copying more than one item it should\r\n    prompt to ask if the destination should or not the destination should be a container.\r\n    That covers both use cases where you want to copy multiple items to a single item or\r\n    where you want to copy multiple items to a container.\r\n\r\n2)  Recurse needs to be fixed so that when you specify recurse it recurses and when you\r\n    don't specify recurse it does not create empty containers/folders.\r\n\r\n3)  Why does it produce an error if a destination directory exists but not when a destination\r\n    file exists?  Based on PowerShell guidelines since overwritting a file is a destructive\r\n    operation there should be a confirmation before doing so.  Having the user change their\r\n    $ConfirmationPreference from the default of 'High' is not the solution here because\r\n    that would cause all sorts of other confirmations that do not currently occur.  Since\r\n    this constitutes destructive behavior the cmdlet should be changed to confirm.\r\n\r\nI'm sure there are other examples, but those seem to be the key areas causing the problems.\r\n\r\nThis basic functionality in the product really needs to be fixed so that we do not have\r\nto restore to using external tools to accomplish these basic tasks.\r\n\r\nAll the above was reproduced on PS 7 Preview 3 \r\n\r\n# Expected behavior\r\n\r\n```Documented with each example\r\n\r\n```\r\n\r\n# Actual behavior\r\n\r\n```Documented with each example\r\n\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-preview.3\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-preview.3\r\nOS                             Microsoft Windows 10.0.18362\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0…}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\n```none\r\n\r\n```\r\n",
    "closed_at": null,
    "comments": 14,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10458/comments",
    "created_at": "2019-08-28T20:20:38Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10458/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10458",
    "id": 486589100,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "ideally support can be provided via other mechanisms, but sometimes folks do open an issue to get a",
        "id": 311043053,
        "name": "Issue-Question",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNTM=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Question"
      },
      {
        "color": "fc2929",
        "default": false,
        "description": "an issue used to track multiple issues",
        "id": 361599511,
        "name": "Issue-Meta",
        "node_id": "MDU6TGFiZWwzNjE1OTk1MTE=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Meta"
      },
      {
        "color": "5319e7",
        "default": false,
        "description": "cmdlets in the Microsoft.PowerShell.Management module",
        "id": 552752388,
        "name": "WG-Cmdlets-Management",
        "node_id": "MDU6TGFiZWw1NTI3NTIzODg=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/WG-Cmdlets-Management"
      },
      {
        "color": "5319e7",
        "default": false,
        "description": "built-in PowerShell providers such as FileSystem, Certificates, Registry, etc.",
        "id": 552752833,
        "name": "WG-Engine-Providers",
        "node_id": "MDU6TGFiZWw1NTI3NTI4MzM=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/WG-Engine-Providers"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10458/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0ODY1ODkxMDA=",
    "number": 10458,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 3,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10458/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10458/timeline",
    "title": "Copy-Item incorrect behavior and also inconsistent results when rerun",
    "updated_at": "2022-06-03T14:38:39Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10458",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/42005271?v=4",
      "events_url": "https://api.github.com/users/JoeSalmeri/events{/privacy}",
      "followers_url": "https://api.github.com/users/JoeSalmeri/followers",
      "following_url": "https://api.github.com/users/JoeSalmeri/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoeSalmeri/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/JoeSalmeri",
      "id": 42005271,
      "login": "JoeSalmeri",
      "node_id": "MDQ6VXNlcjQyMDA1Mjcx",
      "organizations_url": "https://api.github.com/users/JoeSalmeri/orgs",
      "received_events_url": "https://api.github.com/users/JoeSalmeri/received_events",
      "repos_url": "https://api.github.com/users/JoeSalmeri/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/JoeSalmeri/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoeSalmeri/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/JoeSalmeri"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "COLLABORATOR",
    "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n\r\n-->\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\ntry { } finally {\r\n    Write-Host Press ctrl c now\r\n    Start-Sleep 5\r\n    Write-Host You`'ll never see this one\r\n}\r\n```\r\n\r\nEvaluate the above script and press <kbd>CTRL</kbd> + <kbd>C</kbd> after the message is displayed.\r\n\r\n# Expected behavior\r\n\r\nThe entire `finally` block to complete.\r\n\r\n# Actual behavior\r\n\r\nThe finally block is cancelled when <kbd>CTRL</kbd> + <kbd>C</kbd> is pressed.\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-preview.3\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-preview.3\r\nOS                             Microsoft Windows 10.0.18362\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0…}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\nThis also occurs on Windows PowerShell 5.1\r\n\r\n# Notes\r\n\r\nIf <kbd>CTRL</kbd> + <kbd>C</kbd> is pressed *in the `try` block*, additional key presses in the `finally` block will be correctly ignored. e.g.\r\n\r\n```powershell\r\ntry {\r\n    Write-Host Press ctrl c now\r\n    Start-Sleep 5\r\n} finally {\r\n    Write-Host Try pressing it a bunch, won`'t do anything\r\n    Start-Sleep 5\r\n    Write-Host You`'ll actually see this one\r\n}\r\n```",
    "closed_at": null,
    "comments": 5,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10457/comments",
    "created_at": "2019-08-28T16:23:57Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10457/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10457",
    "id": 486483223,
    "labels": [
      {
        "color": "5319e7",
        "default": false,
        "description": "core PowerShell engine, interpreter, and runtime",
        "id": 401720735,
        "name": "WG-Engine",
        "node_id": "MDU6TGFiZWw0MDE3MjA3MzU=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/WG-Engine"
      },
      {
        "color": "fc2929",
        "default": false,
        "description": "the issue may not have a clear classification yet. The issue may generate an RFC or may be reclassif",
        "id": 423526741,
        "name": "Issue-Discussion",
        "node_id": "MDU6TGFiZWw0MjM1MjY3NDE=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Discussion"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10457/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": null,
      "closed_issues": 87,
      "created_at": "2018-06-18T16:11:40Z",
      "creator": {
        "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
        "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
        "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
        "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
        "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/SteveL-MSFT",
        "id": 11859881,
        "login": "SteveL-MSFT",
        "node_id": "MDQ6VXNlcjExODU5ODgx",
        "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
        "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
        "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/SteveL-MSFT"
      },
      "description": "Issues (no PRs) in this milestone indicate that the team believes it's something that should be fixed within the next two releases, but no commitments as to when it will be addressed.",
      "due_on": null,
      "html_url": "https://github.com/PowerShell/PowerShell/milestone/48",
      "id": 3432686,
      "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/milestones/48/labels",
      "node_id": "MDk6TWlsZXN0b25lMzQzMjY4Ng==",
      "number": 48,
      "open_issues": 268,
      "state": "open",
      "title": "Future",
      "updated_at": "2022-10-04T17:12:45Z",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/milestones/48"
    },
    "node_id": "MDU6SXNzdWU0ODY0ODMyMjM=",
    "number": 10457,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 1,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10457/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10457/timeline",
    "title": "Finally clause can be canceled with CTRL + C",
    "updated_at": "2019-08-29T12:32:39Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10457",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "I'm running a net core console application with PowerShell SDK version 7.0.0-preview.2. The application is self-contained.\r\nFor testing, this application shall start another .exe with the start-process command. \r\nRunning this application on windows 10 works great. The exe opens as expected. \r\n\r\nRunning this application on windows 7 does not work. The error (in the streams.error) containes the message \"Cannot find drive. A drive with the name 'C' does not exist. \r\n\r\nTo reproduce. \r\nCreate a net core 3 console application and add the Microsoft.PowerShell.SDK 7.0.0-preview.3 nuget packages. \r\nThe code running in main: \r\n\r\n                using (var runspace = RunspaceFactory.CreateRunspace())\r\n                {\r\n                    runspace.Open();\r\n\r\n                    var proxy = runspace.SessionStateProxy;\r\n\r\n                    using (var ps = PowerShell.Create())\r\n                    {\r\n                        ps.Runspace = runspace;\r\n\r\n                        ps.AddScript(\"start-process notepad.exe -wait\");\r\n                        \r\n                        ps.Invoke().ToList();\r\n\r\n                        foreach(var error in ps.Streams.Error)\r\n                        {\r\n                            Console.WriteLine(error);\r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n\r\nEDIT: \r\n\r\nI can also see that when using Get-PSDrive from my console application the C drive is not found. Running the same command from both powershell installed with windows 7 and PowerShell 7 the c drive is listed. \r\nTopwindow is the console application, rest is powershell window in the image below.\r\n\r\n\r\n![drivenotfound](https://user-images.githubusercontent.com/618919/63930016-c9022200-ca52-11e9-8a0d-9a29be375caf.png)\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "closed_at": "2020-02-01T00:00:31Z",
    "comments": 3,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10456/comments",
    "created_at": "2019-08-28T09:49:02Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10456/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10456",
    "id": 486272898,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "ideally support can be provided via other mechanisms, but sometimes folks do open an issue to get a",
        "id": 311043053,
        "name": "Issue-Question",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNTM=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Question"
      },
      {
        "color": "ffffff",
        "default": false,
        "description": "The question is answered.",
        "id": 423531321,
        "name": "Resolution-Answered",
        "node_id": "MDU6TGFiZWw0MjM1MzEzMjE=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Resolution-Answered"
      },
      {
        "color": "5319e7",
        "default": false,
        "description": "hosting PowerShell as a runtime, PowerShell's APIs, PowerShell Standard, or development of modules",
        "id": 1108905835,
        "name": "WG-DevEx-SDK",
        "node_id": "MDU6TGFiZWwxMTA4OTA1ODM1",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/WG-DevEx-SDK"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10456/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0ODYyNzI4OTg=",
    "number": 10456,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10456/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10456/timeline",
    "title": "SDK issues on window 7 - can not find a drive with the name 'c'",
    "updated_at": "2020-02-01T00:00:31Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10456",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/618919?v=4",
      "events_url": "https://api.github.com/users/xGord/events{/privacy}",
      "followers_url": "https://api.github.com/users/xGord/followers",
      "following_url": "https://api.github.com/users/xGord/following{/other_user}",
      "gists_url": "https://api.github.com/users/xGord/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/xGord",
      "id": 618919,
      "login": "xGord",
      "node_id": "MDQ6VXNlcjYxODkxOQ==",
      "organizations_url": "https://api.github.com/users/xGord/orgs",
      "received_events_url": "https://api.github.com/users/xGord/received_events",
      "repos_url": "https://api.github.com/users/xGord/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/xGord/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xGord/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/xGord"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": {
      "avatar_url": "https://avatars.githubusercontent.com/u/12820925?v=4",
      "events_url": "https://api.github.com/users/adityapatwardhan/events{/privacy}",
      "followers_url": "https://api.github.com/users/adityapatwardhan/followers",
      "following_url": "https://api.github.com/users/adityapatwardhan/following{/other_user}",
      "gists_url": "https://api.github.com/users/adityapatwardhan/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/adityapatwardhan",
      "id": 12820925,
      "login": "adityapatwardhan",
      "node_id": "MDQ6VXNlcjEyODIwOTI1",
      "organizations_url": "https://api.github.com/users/adityapatwardhan/orgs",
      "received_events_url": "https://api.github.com/users/adityapatwardhan/received_events",
      "repos_url": "https://api.github.com/users/adityapatwardhan/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/adityapatwardhan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adityapatwardhan/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/adityapatwardhan"
    },
    "assignees": [
      {
        "avatar_url": "https://avatars.githubusercontent.com/u/12820925?v=4",
        "events_url": "https://api.github.com/users/adityapatwardhan/events{/privacy}",
        "followers_url": "https://api.github.com/users/adityapatwardhan/followers",
        "following_url": "https://api.github.com/users/adityapatwardhan/following{/other_user}",
        "gists_url": "https://api.github.com/users/adityapatwardhan/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/adityapatwardhan",
        "id": 12820925,
        "login": "adityapatwardhan",
        "node_id": "MDQ6VXNlcjEyODIwOTI1",
        "organizations_url": "https://api.github.com/users/adityapatwardhan/orgs",
        "received_events_url": "https://api.github.com/users/adityapatwardhan/received_events",
        "repos_url": "https://api.github.com/users/adityapatwardhan/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/adityapatwardhan/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/adityapatwardhan/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/adityapatwardhan"
      }
    ],
    "author_association": "COLLABORATOR",
    "body": "# PR Summary\r\n\r\nThis is a fix for the ForEach-Object perf Issue: #10450.  \r\n\r\n```powershell\r\nmeasure-command { 1..254 | foreach -Parallel {ping \"192.168.0.$_\" -n 1 | where {$_ -match \"ttl=\"}} -ThrottleLimit 300 }\r\n\r\n# Time for ThreadJob and ForEach -Parallel -AsJob is around 8 seconds\r\n# Time for ForEach -Parallel is around 60 seconds\r\n```\r\n\r\n## PR Context\r\n\r\nThe problem was that the number of concurrent runspaces was being limited to around 40-50, even though the ThrottleLimit was set to 300.  It turns out it was the Cmdlet input processing thread that was causing the bottleneck.  I don't know what the conflict is while spinning up runspaces, but the fix is to now do this on a dedicated thread similar to how it currently works for -AsJob.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
    "closed_at": "2019-09-05T18:27:21Z",
    "comments": 5,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10455/comments",
    "created_at": "2019-08-27T22:32:43Z",
    "draft": false,
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10455/events",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10455",
    "id": 486066411,
    "labels": [
      {
        "color": "fbca04",
        "default": false,
        "description": "Indicates that a PR should be marked as a performance improvement in the Change Log",
        "id": 1431257976,
        "name": "CL-Performance",
        "node_id": "MDU6TGFiZWwxNDMxMjU3OTc2",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/CL-Performance"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10455/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": "2019-09-22T18:49:57Z",
      "closed_issues": 39,
      "created_at": "2019-08-19T21:02:56Z",
      "creator": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
        "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
        "followers_url": "https://api.github.com/users/TravisEz13/followers",
        "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
        "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/TravisEz13",
        "id": 10873629,
        "login": "TravisEz13",
        "node_id": "MDQ6VXNlcjEwODczNjI5",
        "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
        "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
        "repos_url": "https://api.github.com/users/TravisEz13/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/TravisEz13"
      },
      "description": "",
      "due_on": null,
      "html_url": "https://github.com/PowerShell/PowerShell/milestone/69",
      "id": 4587190,
      "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/milestones/69/labels",
      "node_id": "MDk6TWlsZXN0b25lNDU4NzE5MA==",
      "number": 69,
      "open_issues": 0,
      "state": "closed",
      "title": "7.0.0-preview.4",
      "updated_at": "2019-09-22T18:49:57Z",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/milestones/69"
    },
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzExNTk0NjAy",
    "number": 10455,
    "performed_via_github_app": null,
    "pull_request": {
      "diff_url": "https://github.com/PowerShell/PowerShell/pull/10455.diff",
      "html_url": "https://github.com/PowerShell/PowerShell/pull/10455",
      "merged_at": "2019-09-05T18:27:21Z",
      "patch_url": "https://github.com/PowerShell/PowerShell/pull/10455.patch",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/pulls/10455"
    },
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10455/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10455/timeline",
    "title": "Fix for ForEach-Object -Parallel perf problem with many runspaces",
    "updated_at": "2019-09-19T17:52:13Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10455",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/14019529?v=4",
      "events_url": "https://api.github.com/users/PaulHigin/events{/privacy}",
      "followers_url": "https://api.github.com/users/PaulHigin/followers",
      "following_url": "https://api.github.com/users/PaulHigin/following{/other_user}",
      "gists_url": "https://api.github.com/users/PaulHigin/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/PaulHigin",
      "id": 14019529,
      "login": "PaulHigin",
      "node_id": "MDQ6VXNlcjE0MDE5NTI5",
      "organizations_url": "https://api.github.com/users/PaulHigin/orgs",
      "received_events_url": "https://api.github.com/users/PaulHigin/received_events",
      "repos_url": "https://api.github.com/users/PaulHigin/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/PaulHigin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PaulHigin/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/PaulHigin"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": {
      "avatar_url": "https://avatars.githubusercontent.com/u/12820925?v=4",
      "events_url": "https://api.github.com/users/adityapatwardhan/events{/privacy}",
      "followers_url": "https://api.github.com/users/adityapatwardhan/followers",
      "following_url": "https://api.github.com/users/adityapatwardhan/following{/other_user}",
      "gists_url": "https://api.github.com/users/adityapatwardhan/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/adityapatwardhan",
      "id": 12820925,
      "login": "adityapatwardhan",
      "node_id": "MDQ6VXNlcjEyODIwOTI1",
      "organizations_url": "https://api.github.com/users/adityapatwardhan/orgs",
      "received_events_url": "https://api.github.com/users/adityapatwardhan/received_events",
      "repos_url": "https://api.github.com/users/adityapatwardhan/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/adityapatwardhan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adityapatwardhan/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/adityapatwardhan"
    },
    "assignees": [
      {
        "avatar_url": "https://avatars.githubusercontent.com/u/12820925?v=4",
        "events_url": "https://api.github.com/users/adityapatwardhan/events{/privacy}",
        "followers_url": "https://api.github.com/users/adityapatwardhan/followers",
        "following_url": "https://api.github.com/users/adityapatwardhan/following{/other_user}",
        "gists_url": "https://api.github.com/users/adityapatwardhan/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/adityapatwardhan",
        "id": 12820925,
        "login": "adityapatwardhan",
        "node_id": "MDQ6VXNlcjEyODIwOTI1",
        "organizations_url": "https://api.github.com/users/adityapatwardhan/orgs",
        "received_events_url": "https://api.github.com/users/adityapatwardhan/received_events",
        "repos_url": "https://api.github.com/users/adityapatwardhan/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/adityapatwardhan/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/adityapatwardhan/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/adityapatwardhan"
      }
    ],
    "author_association": "MEMBER",
    "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\n**NOTE:** mark the PR as WIP because the rewriting causes some issues to stepping during debugging. Looking into that.\r\n\r\nA follow-up PR for #10047\r\nMake `ForEach-Object` faster for its commonly used scenarios by rewriting the command into a filter-like script block execution in the pipeline.\r\nFor the follow `ForEach-Object` usages, they will be rewritten to `... | . { process { ... } } | ...` when constructing the pipeline.\r\n\r\n```powershell\r\n... | % { ... } | ...\r\n... | % -process { ... } | ...\r\n... | % -process:{ ... } | ...\r\n```\r\n\r\nBy doing this rewriting, we are able to eliminate all unnecessary overheads from:\r\n1. parameter binding\r\n2. invoking a script block with `ScriptBlock.InvokeUsingCmdlet` for every incoming object, which has to do the setting-up/tearing-down every time executing the script block.\r\n\r\nThis PR targets to improve the performance of `ForEach-Object` for the most common usages. It's not a goal to cover all possible scenarios, such as `% -pro:{...}` or `% { ... } { ... } { ... }`\r\n\r\n| Script | Before | After |\r\n|-|-|-|\r\n| `1..100kb \\| % { }` | 290ms | 37ms |\r\n|`1..100kb \\| . { process {} }`| 37ms | 37ms |\r\n| `foreach ($i in 1..100kb) { }` | 28ms | 28ms |\r\n\r\nThis optimization will be turned off automatically in the following cases:\r\n1. when debugger is enabled, namely when any breakpoint is set in the session. This is to make the debugger works as expected in case a breakpoint is set on `ForEach-Object`, e.g `Set-PSBreakpoint -Command ForEach-Object`.\r\n2. when 'ConstrainedLanguageMode' has been used for the current Runspace. The language mode transition is tricky. It's better to stick with the same old code path for safety.\r\n\r\n## PR Context\r\n\r\nhttps://github.com/PowerShell/PowerShell/issues/9731#issuecomment-496721086\r\nDraft PR: #10153 \r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [x] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
    "closed_at": "2019-08-30T19:09:20Z",
    "comments": 9,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10454/comments",
    "created_at": "2019-08-27T17:59:13Z",
    "draft": false,
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10454/events",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10454",
    "id": 485951260,
    "labels": [
      {
        "color": "fbca04",
        "default": false,
        "description": "Indicates that a PR should be marked as a performance improvement in the Change Log",
        "id": 1431257976,
        "name": "CL-Performance",
        "node_id": "MDU6TGFiZWwxNDMxMjU3OTc2",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/CL-Performance"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10454/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": "2019-09-22T18:49:57Z",
      "closed_issues": 39,
      "created_at": "2019-08-19T21:02:56Z",
      "creator": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
        "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
        "followers_url": "https://api.github.com/users/TravisEz13/followers",
        "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
        "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/TravisEz13",
        "id": 10873629,
        "login": "TravisEz13",
        "node_id": "MDQ6VXNlcjEwODczNjI5",
        "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
        "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
        "repos_url": "https://api.github.com/users/TravisEz13/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/TravisEz13"
      },
      "description": "",
      "due_on": null,
      "html_url": "https://github.com/PowerShell/PowerShell/milestone/69",
      "id": 4587190,
      "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/milestones/69/labels",
      "node_id": "MDk6TWlsZXN0b25lNDU4NzE5MA==",
      "number": 69,
      "open_issues": 0,
      "state": "closed",
      "title": "7.0.0-preview.4",
      "updated_at": "2019-09-22T18:49:57Z",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/milestones/69"
    },
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzExNDk5MDgw",
    "number": 10454,
    "performed_via_github_app": null,
    "pull_request": {
      "diff_url": "https://github.com/PowerShell/PowerShell/pull/10454.diff",
      "html_url": "https://github.com/PowerShell/PowerShell/pull/10454",
      "merged_at": "2019-08-30T19:09:20Z",
      "patch_url": "https://github.com/PowerShell/PowerShell/pull/10454.patch",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/pulls/10454"
    },
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 1,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10454/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10454/timeline",
    "title": "Make `ForEach-Object` faster for its commonly used scenarios",
    "updated_at": "2019-09-19T17:52:15Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10454",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "I have a script that works perfectly fine in PS 5.1, however, in version 6.2.2  and 7.0.0 (binary archive) I get...\r\n```Exception calling \"ExecuteQuery\" with \"0\" argument(s): \"The remote server returned an error: (400) Bad Request.\"```\r\n\r\nThe script creates a CSV file and then uploads that data into a SharePoint list.\r\n\r\n# Steps to reproduce\r\nPart of the script that uploads data to sharepoint...\r\n```\r\nAdd-Type -Path '.\\Microsoft.SharePoint.Client.dll'\r\nAdd-Type -Path '.\\Microsoft.SharePoint.Client.Runtime.dll'\r\n\r\n$csv = import-csv -Path $output\r\n$siteUrl = \"https://enterpriseuse.sharepoint.com/sites/MySite/\"\r\n$listName = \"List Name\"\r\n$userName  = Read-Host -Prompt \"Enter Email\" \r\n$password = Read-Host -Prompt \"Enter password\" -AsSecureString\r\n$ctx = New-Object Microsoft.SharePoint.Client.ClientContext($siteUrl)\r\n$credentials = New-Object Microsoft.SharePoint.Client.SharePointOnlineCredentials($userName, $password)\r\n$context = New-Object Microsoft.SharePoint.Client.ClientContext($siteUrl)\r\n$context.Credentials = $credentials\r\n\r\n[Microsoft.SharePoint.Client.Web]$web = $context.Web\r\n[Microsoft.SharePoint.Client.List]$list = $web.Lists.GetByTitle($listName)\r\n \r\n$ListItems = $List.GetItems([Microsoft.SharePoint.Client.CamlQuery]::CreateAllItemsQuery())\r\n$Context.Load($ListItems)\r\n$Context.ExecuteQuery()      \r\n\r\nforeach ($row in $csv) {\r\n    [Microsoft.SharePoint.Client.ListItemCreationInformation]$itemCreateInfo = New-Object Microsoft.SharePoint.Client.ListItemCreationInformation;\r\n    [Microsoft.SharePoint.Client.ListItem]$item = $list.AddItem($itemCreateInfo);\r\n    \r\n    $Item[\"Item1\"] = $row.Item1;\r\n    $item[\"Item2\"] = $row.Item2;\r\n    $item[\"Item3\"] = $row.\"Item3\";\r\n\r\n    $item.Update();\r\n    $context.ExecuteQuery();    \r\n   \r\n}\r\n```\r\n\r\n# Expected behavior\r\n\r\n```\r\nNo Exception, script works as intended in PS 5.1 just not in Core\r\n```\r\n\r\n# Actual behavior\r\n\r\n```\r\nException calling \"ExecuteQuery\" with \"0\" argument(s): \"The remote server returned an error: (400) Bad Request.\"\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.2.2\r\nPSEdition                      Core\r\nGitCommitId                    6.2.2\r\nOS                             Microsoft Windows 10.0.18362\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0…}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
    "closed_at": "2019-08-27T18:09:47Z",
    "comments": 3,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10453/comments",
    "created_at": "2019-08-27T15:52:02Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10453/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10453",
    "id": 485893630,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "ideally support can be provided via other mechanisms, but sometimes folks do open an issue to get a",
        "id": 311043053,
        "name": "Issue-Question",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNTM=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Question"
      },
      {
        "color": "ffffff",
        "default": false,
        "description": "The issue is caused by external component(s).",
        "id": 427077877,
        "name": "Resolution-External",
        "node_id": "MDU6TGFiZWw0MjcwNzc4Nzc=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Resolution-External"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10453/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0ODU4OTM2MzA=",
    "number": 10453,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10453/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10453/timeline",
    "title": "Exception calling \"ExecuteQuery\" with \"0\" argument(s)",
    "updated_at": "2019-09-16T10:36:58Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10453",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/54589256?v=4",
      "events_url": "https://api.github.com/users/cbcomins/events{/privacy}",
      "followers_url": "https://api.github.com/users/cbcomins/followers",
      "following_url": "https://api.github.com/users/cbcomins/following{/other_user}",
      "gists_url": "https://api.github.com/users/cbcomins/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/cbcomins",
      "id": 54589256,
      "login": "cbcomins",
      "node_id": "MDQ6VXNlcjU0NTg5MjU2",
      "organizations_url": "https://api.github.com/users/cbcomins/orgs",
      "received_events_url": "https://api.github.com/users/cbcomins/received_events",
      "repos_url": "https://api.github.com/users/cbcomins/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/cbcomins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cbcomins/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/cbcomins"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "# Summary of the new feature/enhancement\r\n\r\nAs a C# developer, when writing a PowerShell frontend to my .NET Standard or Core libraries, I would like to expose my library's existing logging to PowerShell's output streams - Verbose, Debug, Progress, etc. This is already easy to do with synchronous methods, but any `async` method causes threading problems that PowerShell cannot handle.\r\n\r\nCurrently, when Cmdlet.Write* is called from a background thread, an error message is thrown:\r\n\r\n```\r\nThe WriteObject and WriteError methods cannot be called from outside the overrides of the BeginProcessing, ProcessRecord, and EndProcessing methods, and they can only be called from within the same thread. Validate that the cmdlet makes these calls correctly, or contact Microsoft Customer Support Services.\r\n```\r\n\r\nI would like the Cmdlet.Write* methods to allow writing on background threads, and handle marshalling data back to the primary thread as necessary.\r\n\r\n# Proposed technical implementation details (optional)\r\n\r\nHere is a simple reproduction:\r\n\r\n```csharp\r\npublic interface ILogger\r\n    {\r\n        void Debug(string message);\r\n        void Info(string message);\r\n        // ...etc\r\n    }\r\n\r\n    public class PwshLogger : ILogger\r\n    {\r\n        public Cmdlet Cmdlet { get; }\r\n\r\n        public PwshLogger(Cmdlet cmdlet) { this.Cmdlet = cmdlet; }\r\n\r\n        // ILogger implementation\r\n        public void Debug(string message) => this.Cmdlet.WriteDebug(message);\r\n        public void Info(string message) => this.Cmdlet.WriteVerbose(message);\r\n    }\r\n\r\n    public class Widget\r\n    {\r\n        public ILogger Logger { get; set; }\r\n\r\n        public int PerformTest()\r\n        {\r\n            Logger?.Info(\"Beginning test\");\r\n            Thread.Sleep(3000);\r\n            Logger?.Info(\"Completing test\");\r\n            return 0;\r\n        }\r\n\r\n        public async Task<int> PerformTestAsync()\r\n        {\r\n            // Contrived example - normally, this would have some awaits in it\r\n            var task = Task.Run(() => {\r\n                Logger?.Info(\"Beginning async test\");\r\n                Thread.Sleep(3000);\r\n                Logger?.Info(\"Completing async test\");\r\n            });\r\n            task.GetAwaiter().GetResult();\r\n\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    [Cmdlet(VerbsDiagnostic.Test, \"Widget\")]\r\n    public class TestWidget : PSCmdlet\r\n    {\r\n        private PwshLogger _logger;\r\n        private Widget _widget;\r\n\r\n        protected override void BeginProcessing()\r\n        {\r\n            base.BeginProcessing();\r\n            _logger = new PwshLogger(this);\r\n            _widget = new Widget { Logger = _logger };\r\n        }\r\n\r\n        protected override void ProcessRecord()\r\n        {\r\n            base.ProcessRecord();\r\n\r\n            // Works - run this cmdlet with -Verbose to see output\r\n            _widget.PerformTest();\r\n\r\n            // Does not work - throws the error detailed above\r\n            Task.Run(() => _widget.PerformTestAsync()).GetAwaiter().GetResult();\r\n        }\r\n    }\r\n```\r\n\r\nRunning the command provides this output:\r\n\r\n```\r\nPS> ipmo C:\\Users\\myUser\\source\\repos\\PowerShellTest\\PowerShellTest\\bin\\Debug\\PowerShellTest.dll\r\n\r\nPS> Test-Widget -Verbose\r\nVERBOSE: Beginning test\r\nVERBOSE: Completing test\r\nTest-Widget : The WriteObject and WriteError methods cannot be called from outside the overrides of the BeginProcessing, ProcessRecord, and EndProcessing methods, and they can only be called from within the same thread. Validate that the cmdlet makes these calls correctly, or contact Microsoft Customer Support Services.\r\nAt line:1 char:1\r\n+ Test-Widget -Verbose\r\n+ ~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : InvalidOperation: (:) [Test-Widget], PSInvalidOperationException\r\n+ FullyQualifiedErrorId : InvalidOperation,PowerShellTest.TestWidget\r\n```\r\n\r\nI have confirmed this behavior on Windows PowerShell 5.1, PowerShell 6.2.2, and PowerShell 7.0.0 preview 3.\r\n\r\nI've seen a few [questions](https://stackoverflow.com/questions/38405770/reporting-powershell-progress-from-event-handler) [about](https://stackoverflow.com/questions/12852494/best-way-to-update-cmdlet-progress-from-a-separate-thread) [this](https://stackoverflow.com/questions/40537019/cmdlet-verbose-stream), with various proposed solutions, but they all require the entire structure of the cmdlet class to be built around their solutions.\r\n\r\nOne could argue that a PowerShell frontend shouldn't be exposing the internal logging from the module, but I'd argue that PowerShell's native output streams are perfect for that sort of thing. The user can see no logging info if they want, or they can pass `-Verbose` and/or `-Debug` if they want detailed logging data displayed.\r\n\r\nWith the popularity of asynchronous programming, I believe it would be appropriate for PowerShell to handle this case gracefully in order to better integrate with the rest of .NET.",
    "closed_at": null,
    "comments": 16,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10452/comments",
    "created_at": "2019-08-27T15:24:22Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10452/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10452",
    "id": 485878365,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "the issue is more of a feature request than a bug",
        "id": 311043050,
        "name": "Issue-Enhancement",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNTA=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Enhancement"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10452/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0ODU4NzgzNjU=",
    "number": 10452,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10452/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10452/timeline",
    "title": "Feature Request: Allow writing to output streams from other threads",
    "updated_at": "2022-08-31T17:15:46Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10452",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11758809?v=4",
      "events_url": "https://api.github.com/users/replicaJunction/events{/privacy}",
      "followers_url": "https://api.github.com/users/replicaJunction/followers",
      "following_url": "https://api.github.com/users/replicaJunction/following{/other_user}",
      "gists_url": "https://api.github.com/users/replicaJunction/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/replicaJunction",
      "id": 11758809,
      "login": "replicaJunction",
      "node_id": "MDQ6VXNlcjExNzU4ODA5",
      "organizations_url": "https://api.github.com/users/replicaJunction/orgs",
      "received_events_url": "https://api.github.com/users/replicaJunction/received_events",
      "repos_url": "https://api.github.com/users/replicaJunction/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/replicaJunction/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/replicaJunction/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/replicaJunction"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "# Steps to reproduce\r\n\r\n```powershell\r\n$error.Clear()\r\ngcm Get-InvalidCommand\r\n$error.Count\r\n```\r\n\r\n# Expected behavior\r\n\r\n```none\r\n1\r\n```\r\n\r\n# Actual behavior\r\n\r\n```none\r\n2\r\n```\r\n\r\n# Root cause\r\n\r\nThis bug is caused by [this line of code](https://github.com/PowerShell/PowerShell/blob/bd6fdae73520931f0d27a29d6290e18761772141/src/System.Management.Automation/engine/hostifaces/HostUtilities.cs#L72). That was written to assume that matches would be found, but matches are not always found. The script needs to capture the results of the fuzzy search first, and it should only return a string if it found matches.\r\n\r\n# Environment data\r\n\r\nThis was actually done using a build of preview 3. I just haven't updated my tags, but this is using the latest version available at the time of posting.\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-preview.2\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-preview.2-79-g3943f18c28e9df8369ef17776467c732648747b8\r\nOS                             Microsoft Windows 10.0.17763\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0…}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
    "closed_at": null,
    "comments": 2,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10451/comments",
    "created_at": "2019-08-27T15:01:16Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10451/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10451",
    "id": 485865327,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "Issue has been identified as a bug in the product",
        "id": 311043048,
        "name": "Issue-Bug",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNDg=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Bug"
      },
      {
        "color": "5319e7",
        "default": false,
        "description": "core PowerShell engine, interpreter, and runtime",
        "id": 401720735,
        "name": "WG-Engine",
        "node_id": "MDU6TGFiZWw0MDE3MjA3MzU=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/WG-Engine"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10451/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0ODU4NjUzMjc=",
    "number": 10451,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10451/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10451/timeline",
    "title": "`PSCommandNotFoundSuggestion` generates an error when it fails to find a match.",
    "updated_at": "2019-09-03T12:34:42Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10451",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": {
      "avatar_url": "https://avatars.githubusercontent.com/u/14019529?v=4",
      "events_url": "https://api.github.com/users/PaulHigin/events{/privacy}",
      "followers_url": "https://api.github.com/users/PaulHigin/followers",
      "following_url": "https://api.github.com/users/PaulHigin/following{/other_user}",
      "gists_url": "https://api.github.com/users/PaulHigin/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/PaulHigin",
      "id": 14019529,
      "login": "PaulHigin",
      "node_id": "MDQ6VXNlcjE0MDE5NTI5",
      "organizations_url": "https://api.github.com/users/PaulHigin/orgs",
      "received_events_url": "https://api.github.com/users/PaulHigin/received_events",
      "repos_url": "https://api.github.com/users/PaulHigin/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/PaulHigin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PaulHigin/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/PaulHigin"
    },
    "assignees": [
      {
        "avatar_url": "https://avatars.githubusercontent.com/u/14019529?v=4",
        "events_url": "https://api.github.com/users/PaulHigin/events{/privacy}",
        "followers_url": "https://api.github.com/users/PaulHigin/followers",
        "following_url": "https://api.github.com/users/PaulHigin/following{/other_user}",
        "gists_url": "https://api.github.com/users/PaulHigin/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/PaulHigin",
        "id": 14019529,
        "login": "PaulHigin",
        "node_id": "MDQ6VXNlcjE0MDE5NTI5",
        "organizations_url": "https://api.github.com/users/PaulHigin/orgs",
        "received_events_url": "https://api.github.com/users/PaulHigin/received_events",
        "repos_url": "https://api.github.com/users/PaulHigin/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/PaulHigin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/PaulHigin/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/PaulHigin"
      }
    ],
    "author_association": "NONE",
    "body": "It was reported here https://github.com/PowerShell/PowerShell-RFC/pull/194 by @Ayanmullick  \r\nthat\r\n\r\n> The below script runs faster without -parallel than with.\r\n> \r\n```\r\n(Get-WinEvent -ListLog * -EA SilentlyContinue).Where({$PSItem.recordcount -ne '0'}).Logname|\r\n                ForEach-Object -Parallel {Get-WinEvent -FilterHashtable @{logname = \"$PSItem\";Starttime ='8/24/2019 11:00:00';Endtime ='8/24/2019 11:09:00';Level=1,2,3} -EA SilentlyContinue }\r\n```\r\n> It took 18 secs to finish with -parallel and only 5 without.\r\n\r\nThomas Lee put up this case where it was slower. https://twitter.com/doctordns/status/1164461929093566465\r\n\r\n**It is understood that  parallelizing trivial code in will more overhead than the time saved**\r\n\r\nUsing Start-Parallel from the PowerShell Gallery I ran this to ping every machine on my local subnet. 200 addresses are not used, so in sequence it would take 800-1000 seconds. \r\n\r\n`1..254 | Start-Parallel -Scriptblock {param ($P) ping \"192.168.0.$p\" -n 1 | where {$_ -match \"ttl=\"}} -MaxThreads 300`\r\n\r\nit took **9 seconds**\r\n\r\nThe new equivalent is\r\n`1..254 | foreach -Parallel {ping \"192.168.0.$_\" -n 1 | where {$_ -match \"ttl=\"}} -ThrottleLimit 300`\r\n\r\nWhich takes **31 seconds**; I would expect broadly similar performance with the cmdlet slightly faster. \r\n\r\nUsing threadjob which ships with PS 6 and 7 I created this \r\n```\r\n$j = 1..254 | foreach {  \r\n   $sb=[scriptblock]::Create(\"ping -n 1 192.168.0.$_ | where {`$_ -match 'TTL=' } \")                                    \r\n    Start-ThreadJob -ScriptBlock $sb -ThrottleLimit 300 }\r\n while ($j.state -eq \"running\" -or $j.hasmoredata -eq $true) {\r\nforeach ($finished in $j.where({$_.state -eq \"completed\"})){ receive-job -Id $finished.id; }                       } \r\n\r\n```\r\nWhich runs in 11 seconds.\r\nThe cmdlet should be doing something very similar to this but not taking 3 times as long\r\n\r\n\r\n\r\n\r\n\r\n",
    "closed_at": "2019-12-17T17:44:11Z",
    "comments": 2,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10450/comments",
    "created_at": "2019-08-27T09:12:04Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10450/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10450",
    "id": 485685684,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "ideally support can be provided via other mechanisms, but sometimes folks do open an issue to get a",
        "id": 311043053,
        "name": "Issue-Question",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNTM=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Question"
      },
      {
        "color": "5319e7",
        "default": false,
        "description": "core PowerShell engine, interpreter, and runtime performance",
        "id": 401720900,
        "name": "WG-Engine-Performance",
        "node_id": "MDU6TGFiZWw0MDE3MjA5MDA=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/WG-Engine-Performance"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10450/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0ODU2ODU2ODQ=",
    "number": 10450,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10450/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10450/timeline",
    "title": "Poor Performance in Foreach -Parallel",
    "updated_at": "2019-12-17T17:44:12Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10450",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": {
      "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
      "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
      "followers_url": "https://api.github.com/users/TravisEz13/followers",
      "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
      "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/TravisEz13",
      "id": 10873629,
      "login": "TravisEz13",
      "node_id": "MDQ6VXNlcjEwODczNjI5",
      "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
      "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
      "repos_url": "https://api.github.com/users/TravisEz13/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/TravisEz13"
    },
    "assignees": [
      {
        "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
        "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
        "followers_url": "https://api.github.com/users/TravisEz13/followers",
        "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
        "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/TravisEz13",
        "id": 10873629,
        "login": "TravisEz13",
        "node_id": "MDQ6VXNlcjEwODczNjI5",
        "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
        "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
        "repos_url": "https://api.github.com/users/TravisEz13/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/TravisEz13"
      }
    ],
    "author_association": "MEMBER",
    "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nUpdate the combined package build to release the daily builds\r\n\r\n## PR Context\r\n\r\n<!-- Provide a little reasoning as to why this Pull Request helps and why you have opened it. -->\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
    "closed_at": "2019-08-28T16:44:02Z",
    "comments": 2,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10449/comments",
    "created_at": "2019-08-26T23:00:14Z",
    "draft": false,
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10449/events",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10449",
    "id": 485494537,
    "labels": [
      {
        "color": "fbca04",
        "default": false,
        "description": "Indicates that a PR should be marked as a build or packaging change in the Change Log",
        "id": 1126735745,
        "name": "CL-BuildPackaging",
        "node_id": "MDU6TGFiZWwxMTI2NzM1NzQ1",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/CL-BuildPackaging"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10449/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": "2019-09-22T18:49:57Z",
      "closed_issues": 39,
      "created_at": "2019-08-19T21:02:56Z",
      "creator": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
        "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
        "followers_url": "https://api.github.com/users/TravisEz13/followers",
        "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
        "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/TravisEz13",
        "id": 10873629,
        "login": "TravisEz13",
        "node_id": "MDQ6VXNlcjEwODczNjI5",
        "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
        "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
        "repos_url": "https://api.github.com/users/TravisEz13/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/TravisEz13"
      },
      "description": "",
      "due_on": null,
      "html_url": "https://github.com/PowerShell/PowerShell/milestone/69",
      "id": 4587190,
      "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/milestones/69/labels",
      "node_id": "MDk6TWlsZXN0b25lNDU4NzE5MA==",
      "number": 69,
      "open_issues": 0,
      "state": "closed",
      "title": "7.0.0-preview.4",
      "updated_at": "2019-09-22T18:49:57Z",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/milestones/69"
    },
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzExMTI5MTQ2",
    "number": 10449,
    "performed_via_github_app": null,
    "pull_request": {
      "diff_url": "https://github.com/PowerShell/PowerShell/pull/10449.diff",
      "html_url": "https://github.com/PowerShell/PowerShell/pull/10449",
      "merged_at": "2019-08-28T16:44:02Z",
      "patch_url": "https://github.com/PowerShell/PowerShell/pull/10449.patch",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/pulls/10449"
    },
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10449/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10449/timeline",
    "title": "Update the combined package build to release the daily builds",
    "updated_at": "2020-05-14T22:29:52Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10449",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
      "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
      "followers_url": "https://api.github.com/users/TravisEz13/followers",
      "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
      "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/TravisEz13",
      "id": 10873629,
      "login": "TravisEz13",
      "node_id": "MDQ6VXNlcjEwODczNjI5",
      "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
      "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
      "repos_url": "https://api.github.com/users/TravisEz13/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/TravisEz13"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "I'm looking at bringing some of the functionality from the most popular modules I have written into native PowerShell when it is appropriate to do so.\r\n\r\n`Wait-Debugger` and DebugPx's `Enter-Debugger` command were both built at the same time, independently of one another. I always expected the native `Wait-Debugger` command would supercede `Enter-Debugger` at some point, but the way it entered the debugger on the statement following the `Wait-Debugger` command prevented it from supporting certain functionality. That limitation was removed when PR #8205 was merged. The debugger now stops on the `Wait-Debugger` command itself rather than on the statement following that command. With that in place, now is a good time to catch it up so that it supercedes `Enter-Debugger` in PowerShell 7 and later releases.\r\n\r\n# Summary of the new feature/enhancement\r\n\r\nAs a script author\r\nI want to use `Wait-Debugger` in a pipeline\r\nSo that I can attach a debugger in the location most appropriate for my needs.\r\n\r\nAs a script author\r\nI want to use a conditional scriptblock in a `Wait-Debugger` call\r\nSo that I can conditionally attach a debugger to a script.\r\n\r\nAs a script author\r\nI want to write a custom message to the host as I enter the debugger when a certain condition is met\r\nSo that I am reminded what happened when I attach a debugger to a script.\r\n\r\n# Proposed technical implementation details\r\n\r\nThis PR would add additional parameters to the `Wait-Debugger` command, and update that command for use in the pipeline. The parameters to consider adding include:\r\n\r\n```none\r\n[-ConditionScript] <scriptblock>\r\n[-Message <string>]\r\n[-InputObject <PSObject>]\r\n```\r\n\r\nThe code for these parameters is already in use in `Enter-Debugger` in DebugPx. It would simply be ported from that command in an appropriate way into `Wait-Debugger`, and hidden behind an experimental feature while people try it out.\r\n\r\n## Example 1: Using `Wait-Debugger` in a pipeline\r\n\r\nThis example demonstrates using `Wait-Debugger` in a pipeline, where the debugger will break automatically on each object as it passes through the pipeline.\r\n\r\n```powershell\r\nGet-Process | Wait-Debugger | Stop-Process -WhatIf\r\n```\r\n\r\nYou would most likely use `Wait-Debugger` in a pipeline with a condition, which you can see in the next example.\r\n\r\n## Example 2: Using `Wait-Debugger` with a condition script block\r\n\r\nThis example demonstrates using `Wait-Debugger` with a conditional script block. It will only wait for a debugger to attach if the condition has been met.\r\n\r\n```PowerShell\r\nWait-Debugger -ConditionScript {$x -eq $null}\r\n\r\nGet-Process | Wait-Debugger {$_.Id -eq $PID} | Stop-Process -WhatIf\r\n```\r\n\r\nThe first command will wait for a debugger to attach (or enter a breakpoint immediately if run locally), but only if `$x -eq $null` returns true.\r\n\r\nThe second command will wait for a debugger to attach (or enter a breakpoint immediately if run locally) if the current pipeline process ID is `$PID`. `-ConditionScript` is positional, allowing it to be used in the middle of a pipeline with great ease.\r\n\r\n## Example 3: Outputting a message in the host when a debugger is attached.\r\n\r\n```PowerShell\r\nforeach ($value in $myCollection) {\r\n    Wait-Debugger {$value.Name -eq $null} -Message 'It happened! The name of a collection item is null!'\r\n    # Do more things with $value here\r\n}\r\n```\r\n\r\n# Additional changes to consider:\r\n\r\n## Breakpoint alias\r\n\r\nIt would also be appropriate to add `breakpoint` as an alias for `Wait-Debugger`. Since `Wait-Debugger` is a command that you typically add temporarily to a script and then later remove it, and since the intent of that command is to trigger an on-demand breakpoint at that location, causing the debugger to wait for a remote debugger to attach, or entering the debugger immediately if the script is run locally, the `breakpoint` alias is appropriate to facilitate easier and more expressive use of this command. This alias is supported by DebugPx for `Enter-Debugger` already, and it makes it very convenient to work with the debugger.\r\n\r\nThere is an additional alias for `Enter-Debugger` in DebugPx: `bp`. While I love the simplicity of that alias, and while that alias gets heavy use by me personally (I don't have telemetry data from others at this time), I decided not to propose it be brought forward because we're cross platform and Linux has a `bp` command already. I don't want that conflict with existing commands.\r\n\r\n## Discoverability and the potential benefit in renaming `Wait-Debugger` as `Enter-Breakpoint`\r\n\r\nThere are some challenges with the `Wait-Debugger` name, as follows:\r\n\r\n* `Wait-Debugger` is not a very discoverable command name, because it's the only command that ships with PowerShell with a noun of `Debugger`.\r\n* It uses the verb `Wait`, which met the original intent well because it would cause a remote script to wait for a debugger to attach to it, but it also works in local scripts, in which case there is no wait, and that makes it a little confusing.\r\n* Non-developers are much less familiar with the concept of attaching a debugger.\r\n* From an end user's perspective, given the behavior in local and remote scripts, it seems like this command simply acts as a dynamic breakpoint that is declared in the script itself -- i.e. the command itself is a breakpoint. It seems less about waiting for and attaching a debugger -- that's what you do once you hit a breakpoint, but only with a remote script.\r\n\r\nSimilarly, `Enter-Debugger` shares a few of those challenges. I chose the verb `Enter` for `Enter-Debugger` because it felt more descriptive (it causes PowerShell to enter the debugger in the current location), but it also shares the discoverability issues since it is a \"lone\" `Debugger` command (although that makes two, there should only be one going forward).\r\n\r\nWith those thoughts in mind, I find myself wondering If the command would be better named as `Enter-Breakpoint`, with aliases of `breakpoint` and `etbp` (that isn't a Linux command, and it follows the recommended alias naming making it easy to use and remember). This would of course have a `Wait-Debugger` alias for backwards compatibility.\r\n\r\nThis may not seem necessary, but renaming the command could provide the following benefits:\r\n\r\n* It groups the command with other like commands (the `Breakpoint` noun commands), which is a significant benefit for discoverability.\r\n* It focuses a learner's attention on one concept: breakpoints.\r\n* It describes what the command does from an end user's perspective.\r\n* It doesn't confuse folks with the verb `Wait`, because all breakpoints work the same way, and waiting only comes into play when a script is running remotely. When local, they trigger according to their definition/action. When remote, when they trigger you need to attach a debugger to the remote process using `Debug-Job`, `Debug-Runspace`, etc.\r\n\r\nYou might ask yourself why you would ever use an `Enter-Breakpoint` command in a script when you can actually set breakpoints. The answer to that question is simple: it may be conceptually easier for folks to drop a breakpoint into a script as a command, especially if you want that break to be conditional, than it is to set up a breakpoint to stop in the right location under the right conditions using an IDE.",
    "closed_at": null,
    "comments": 1,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10448/comments",
    "created_at": "2019-08-26T20:35:43Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10448/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10448",
    "id": 485438476,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "the issue is more of a feature request than a bug",
        "id": 311043050,
        "name": "Issue-Enhancement",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNTA=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Enhancement"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10448/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0ODU0Mzg0NzY=",
    "number": 10448,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10448/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10448/timeline",
    "title": "Bring forward `Enter-Debugger` features into `Wait-Debugger`",
    "updated_at": "2019-10-25T09:32:39Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10448",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "While developing custom assertions in Pester, I ran into an issue after adding more and more custom assertions . After adding the overall 33th asserting, this leads to a 33th dynamic parameter set, the parameter binding within PowerShell does not work as expected. The first parameter set gets somehow connected to the 33th parameter set. As there is an internal cache for 32 parameter sets which has an overflow.\r\n\r\n- https://github.com/pester/Pester/issues/1355\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\n# Up to 32 entries, it works. Starting with 33 it will not work anymore\r\n$count = 32\r\n\r\nfunction Test-DynamicParam\r\n{\r\n    # Remove the cmdlet binding, so not using an advanced funtion, all is fine\r\n    [CmdletBinding()]\r\n    param ()\r\n\r\n    dynamicparam\r\n    {\r\n        $parameterDictionary = New-Object System.Management.Automation.RuntimeDefinedParameterDictionary\r\n        for ($i = 0; $i -lt $count; $i++) {\r\n            $name = \"Demo$i\"\r\n            $attribute = New-Object Management.Automation.ParameterAttribute\r\n            $attribute.ParameterSetName = $name\r\n            $attribute.Position = $i\r\n            $attribute.Mandatory = $true\r\n            $attributeCollection = New-Object System.Collections.ObjectModel.Collection[System.Attribute]\r\n            $attributeCollection.Add($attribute)\r\n            $parameter = New-Object System.Management.Automation.RuntimeDefinedParameter($name, [System.Boolean], $attributeCollection)\r\n            $parameterDictionary.Add($name, $parameter)\r\n        }\r\n        return $parameterDictionary\r\n    }\r\n}\r\n\r\nfor ($i = 0; $i -lt $count; $i++) {\r\n    $parameterSplat = @{\r\n        \"Demo$i\" = $true\r\n    }\r\n    Write-Host \"Test-DynamicParam -Demo$i\"\r\n    Test-DynamicParam @parameterSplat\r\n}\r\n```\r\n\r\n# Expected behavior\r\n\r\nEvery parameter set works for itself.\r\n\r\n```none\r\nPS C:\\> .\\pester-issue.ps1 \r\nTest-DynamicParam -Demo0                                                                                                Test-Test-DynamicParam -Demo1\r\nTest-DynamicParam -Demo2\r\nTest-DynamicParam -Demo3\r\nTest-DynamicParam -Demo4\r\nTest-DynamicParam -Demo5\r\nTest-DynamicParam -Demo6\r\nTest-DynamicParam -Demo7\r\nTest-DynamicParam -Demo8\r\nTest-DynamicParam -Demo9\r\nTest-DynamicParam -Demo10\r\nTest-DynamicParam -Demo11\r\nTest-DynamicParam -Demo12\r\nTest-DynamicParam -Demo13\r\nTest-DynamicParam -Demo14\r\nTest-DynamicParam -Demo15\r\nTest-DynamicParam -Demo16\r\nTest-DynamicParam -Demo17\r\nTest-DynamicParam -Demo18\r\nTest-DynamicParam -Demo19\r\nTest-DynamicParam -Demo20\r\nTest-DynamicParam -Demo21\r\nTest-DynamicParam -Demo22\r\nTest-DynamicParam -Demo23\r\nTest-DynamicParam -Demo24\r\nTest-DynamicParam -Demo25\r\nTest-DynamicParam -Demo26\r\nTest-DynamicParam -Demo27\r\nTest-DynamicParam -Demo28\r\nTest-DynamicParam -Demo29\r\nTest-DynamicParam -Demo30\r\nTest-DynamicParam -Demo31\r\nTest-DynamicParam -Demo32\r\n```\r\n\r\n# Actual behavior\r\n\r\nThe 1st (`-Demo0`) is connected to the 33th (`-Demo32`).\r\n\r\n```none\r\nPS C:\\> .\\pester-issue.ps1 \r\nTest-DynamicParam -Demo0                                                                                                \r\n\r\ncmdlet Test-DynamicParam at command pipeline position 1\r\nSupply values for the following parameters:\r\nDemo32:\r\n```\r\n\r\n# Environment data\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.2.2\r\nPSEdition                      Core\r\nGitCommitId                    6.2.2\r\nOS                             Microsoft Windows 10.0.18362\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0…}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
    "closed_at": "2019-08-27T03:50:44Z",
    "comments": 3,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10447/comments",
    "created_at": "2019-08-26T19:15:03Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10447/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10447",
    "id": 485398770,
    "labels": [
      {
        "color": "ffffff",
        "default": false,
        "description": "The issue is a duplicate.",
        "id": 311043049,
        "name": "Resolution-Duplicate",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNDk=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Resolution-Duplicate"
      },
      {
        "color": "fc2929",
        "default": false,
        "description": "ideally support can be provided via other mechanisms, but sometimes folks do open an issue to get a",
        "id": 311043053,
        "name": "Issue-Question",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNTM=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Question"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10447/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0ODUzOTg3NzA=",
    "number": 10447,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10447/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10447/timeline",
    "title": "(Dynamic) Parameter Sets are limited to 32 entries",
    "updated_at": "2019-08-27T03:59:58Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10447",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1934246?v=4",
      "events_url": "https://api.github.com/users/claudiospizzi/events{/privacy}",
      "followers_url": "https://api.github.com/users/claudiospizzi/followers",
      "following_url": "https://api.github.com/users/claudiospizzi/following{/other_user}",
      "gists_url": "https://api.github.com/users/claudiospizzi/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/claudiospizzi",
      "id": 1934246,
      "login": "claudiospizzi",
      "node_id": "MDQ6VXNlcjE5MzQyNDY=",
      "organizations_url": "https://api.github.com/users/claudiospizzi/orgs",
      "received_events_url": "https://api.github.com/users/claudiospizzi/received_events",
      "repos_url": "https://api.github.com/users/claudiospizzi/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/claudiospizzi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/claudiospizzi/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/claudiospizzi"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "# Steps to reproduce\r\n\r\ngiven files / folders:\r\n\r\n```\r\n./foo.psd1\r\n./foo.psm1\r\n./bar/bar.psm1\r\n```\r\n\r\nfoo.psd1 (snippet)\r\n```\r\nNestedModules = @(\r\n    'bar'\r\n)\r\n```\r\n\r\n```powershell\r\nImport-Module ./foo\r\n```\r\n\r\n# Expected behavior\r\n\r\nbar is imported\r\n\r\n# Actual behavior\r\n\r\n```none\r\nImport-Module : The module to process '<snipped>/bar', listed in field 'NestedModules' of module manifest '<snipped>/foo.psd1' was not processed because no valid module was found in any module directory.\r\n```\r\n\r\n# Workaround\r\n\r\nIf instead of using `NestedModules`, I import it inside `foo.psm1`, then it works:\r\n\r\nfoo.psm1\r\n```powershell\r\nImport-Module ./bar\r\n```\r\n\r\n# Environment data\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.2.2\r\nPSEdition                      Core\r\nGitCommitId                    6.2.2\r\nOS                             Darwin 18.7.0 Darwin Kernel Version 18.7.0: Thu Jun 20 18:42:21 PDT 2019; root:xnu-4903.270.47~4/RELEASE_X86_64\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0…}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\nalso occurs on 7.0.0-preview.3",
    "closed_at": "2021-01-15T14:19:15Z",
    "comments": 2,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10446/comments",
    "created_at": "2019-08-26T18:41:04Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10446/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10446",
    "id": 485382313,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "ideally support can be provided via other mechanisms, but sometimes folks do open an issue to get a",
        "id": 311043053,
        "name": "Issue-Question",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNTM=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Question"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10446/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0ODUzODIzMTM=",
    "number": 10446,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10446/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10446/timeline",
    "title": "Import-Module bar works but NestedModules bar does not",
    "updated_at": "2021-01-15T14:19:15Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10446",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/34585329?v=4",
      "events_url": "https://api.github.com/users/eedwards-sk/events{/privacy}",
      "followers_url": "https://api.github.com/users/eedwards-sk/followers",
      "following_url": "https://api.github.com/users/eedwards-sk/following{/other_user}",
      "gists_url": "https://api.github.com/users/eedwards-sk/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/eedwards-sk",
      "id": 34585329,
      "login": "eedwards-sk",
      "node_id": "MDQ6VXNlcjM0NTg1MzI5",
      "organizations_url": "https://api.github.com/users/eedwards-sk/orgs",
      "received_events_url": "https://api.github.com/users/eedwards-sk/received_events",
      "repos_url": "https://api.github.com/users/eedwards-sk/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/eedwards-sk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eedwards-sk/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/eedwards-sk"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": {
      "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
      "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
      "followers_url": "https://api.github.com/users/TravisEz13/followers",
      "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
      "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/TravisEz13",
      "id": 10873629,
      "login": "TravisEz13",
      "node_id": "MDQ6VXNlcjEwODczNjI5",
      "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
      "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
      "repos_url": "https://api.github.com/users/TravisEz13/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/TravisEz13"
    },
    "assignees": [
      {
        "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
        "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
        "followers_url": "https://api.github.com/users/TravisEz13/followers",
        "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
        "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/TravisEz13",
        "id": 10873629,
        "login": "TravisEz13",
        "node_id": "MDQ6VXNlcjEwODczNjI5",
        "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
        "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
        "repos_url": "https://api.github.com/users/TravisEz13/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/TravisEz13"
      }
    ],
    "author_association": "CONTRIBUTOR",
    "body": "Not sure what I was waiting for on this one but here",
    "closed_at": "2019-08-27T17:26:43Z",
    "comments": 3,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10445/comments",
    "created_at": "2019-08-25T22:42:30Z",
    "draft": false,
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10445/events",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10445",
    "id": 484984770,
    "labels": [
      {
        "color": "fbca04",
        "default": false,
        "description": "Indicates that a PR should be marked as a build or packaging change in the Change Log",
        "id": 1126735745,
        "name": "CL-BuildPackaging",
        "node_id": "MDU6TGFiZWwxMTI2NzM1NzQ1",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/CL-BuildPackaging"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10445/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": "2019-09-22T18:49:57Z",
      "closed_issues": 39,
      "created_at": "2019-08-19T21:02:56Z",
      "creator": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
        "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
        "followers_url": "https://api.github.com/users/TravisEz13/followers",
        "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
        "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/TravisEz13",
        "id": 10873629,
        "login": "TravisEz13",
        "node_id": "MDQ6VXNlcjEwODczNjI5",
        "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
        "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
        "repos_url": "https://api.github.com/users/TravisEz13/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/TravisEz13"
      },
      "description": "",
      "due_on": null,
      "html_url": "https://github.com/PowerShell/PowerShell/milestone/69",
      "id": 4587190,
      "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/milestones/69/labels",
      "node_id": "MDk6TWlsZXN0b25lNDU4NzE5MA==",
      "number": 69,
      "open_issues": 0,
      "state": "closed",
      "title": "7.0.0-preview.4",
      "updated_at": "2019-09-22T18:49:57Z",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/milestones/69"
    },
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzEwNzIwNjQw",
    "number": 10445,
    "performed_via_github_app": null,
    "pull_request": {
      "diff_url": "https://github.com/PowerShell/PowerShell/pull/10445.diff",
      "html_url": "https://github.com/PowerShell/PowerShell/pull/10445",
      "merged_at": "2019-08-27T17:26:43Z",
      "patch_url": "https://github.com/PowerShell/PowerShell/pull/10445.patch",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/pulls/10445"
    },
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10445/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10445/timeline",
    "title": "Remove yet another appveyor reference",
    "updated_at": "2019-09-19T17:51:16Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10445",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/34555510?v=4",
      "events_url": "https://api.github.com/users/RDIL/events{/privacy}",
      "followers_url": "https://api.github.com/users/RDIL/followers",
      "following_url": "https://api.github.com/users/RDIL/following{/other_user}",
      "gists_url": "https://api.github.com/users/RDIL/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/RDIL",
      "id": 34555510,
      "login": "RDIL",
      "node_id": "MDQ6VXNlcjM0NTU1NTEw",
      "organizations_url": "https://api.github.com/users/RDIL/orgs",
      "received_events_url": "https://api.github.com/users/RDIL/received_events",
      "repos_url": "https://api.github.com/users/RDIL/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/RDIL/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RDIL/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/RDIL"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": {
      "avatar_url": "https://avatars.githubusercontent.com/u/12820925?v=4",
      "events_url": "https://api.github.com/users/adityapatwardhan/events{/privacy}",
      "followers_url": "https://api.github.com/users/adityapatwardhan/followers",
      "following_url": "https://api.github.com/users/adityapatwardhan/following{/other_user}",
      "gists_url": "https://api.github.com/users/adityapatwardhan/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/adityapatwardhan",
      "id": 12820925,
      "login": "adityapatwardhan",
      "node_id": "MDQ6VXNlcjEyODIwOTI1",
      "organizations_url": "https://api.github.com/users/adityapatwardhan/orgs",
      "received_events_url": "https://api.github.com/users/adityapatwardhan/received_events",
      "repos_url": "https://api.github.com/users/adityapatwardhan/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/adityapatwardhan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adityapatwardhan/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/adityapatwardhan"
    },
    "assignees": [
      {
        "avatar_url": "https://avatars.githubusercontent.com/u/12820925?v=4",
        "events_url": "https://api.github.com/users/adityapatwardhan/events{/privacy}",
        "followers_url": "https://api.github.com/users/adityapatwardhan/followers",
        "following_url": "https://api.github.com/users/adityapatwardhan/following{/other_user}",
        "gists_url": "https://api.github.com/users/adityapatwardhan/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/adityapatwardhan",
        "id": 12820925,
        "login": "adityapatwardhan",
        "node_id": "MDQ6VXNlcjEyODIwOTI1",
        "organizations_url": "https://api.github.com/users/adityapatwardhan/orgs",
        "received_events_url": "https://api.github.com/users/adityapatwardhan/received_events",
        "repos_url": "https://api.github.com/users/adityapatwardhan/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/adityapatwardhan/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/adityapatwardhan/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/adityapatwardhan"
      }
    ],
    "author_association": "CONTRIBUTOR",
    "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\nNew-Service cmdlet's output doesn't have all properties when assigned to a variable or using -OutVariable.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [x] Issue filed: #10443\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [x] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [ ] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
    "closed_at": "2019-09-03T18:11:15Z",
    "comments": 6,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10444/comments",
    "created_at": "2019-08-25T11:04:53Z",
    "draft": false,
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10444/events",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10444",
    "id": 484918335,
    "labels": [
      {
        "color": "fbca04",
        "default": false,
        "description": "Indicates that a PR should be marked as a general cmdlet change in the Change Log",
        "id": 1126735368,
        "name": "CL-General",
        "node_id": "MDU6TGFiZWwxMTI2NzM1MzY4",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/CL-General"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10444/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": "2019-09-22T18:49:57Z",
      "closed_issues": 39,
      "created_at": "2019-08-19T21:02:56Z",
      "creator": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
        "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
        "followers_url": "https://api.github.com/users/TravisEz13/followers",
        "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
        "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/TravisEz13",
        "id": 10873629,
        "login": "TravisEz13",
        "node_id": "MDQ6VXNlcjEwODczNjI5",
        "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
        "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
        "repos_url": "https://api.github.com/users/TravisEz13/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/TravisEz13"
      },
      "description": "",
      "due_on": null,
      "html_url": "https://github.com/PowerShell/PowerShell/milestone/69",
      "id": 4587190,
      "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/milestones/69/labels",
      "node_id": "MDk6TWlsZXN0b25lNDU4NzE5MA==",
      "number": 69,
      "open_issues": 0,
      "state": "closed",
      "title": "7.0.0-preview.4",
      "updated_at": "2019-09-22T18:49:57Z",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/milestones/69"
    },
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzEwNjc2MjEy",
    "number": 10444,
    "performed_via_github_app": null,
    "pull_request": {
      "diff_url": "https://github.com/PowerShell/PowerShell/pull/10444.diff",
      "html_url": "https://github.com/PowerShell/PowerShell/pull/10444",
      "merged_at": "2019-09-03T18:11:15Z",
      "patch_url": "https://github.com/PowerShell/PowerShell/pull/10444.patch",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/pulls/10444"
    },
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10444/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10444/timeline",
    "title": "Fix wrong output for `New-Service` in variable assignment and `-OutVariable`",
    "updated_at": "2019-09-19T17:51:54Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10444",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/12897753?v=4",
      "events_url": "https://api.github.com/users/kvprasoon/events{/privacy}",
      "followers_url": "https://api.github.com/users/kvprasoon/followers",
      "following_url": "https://api.github.com/users/kvprasoon/following{/other_user}",
      "gists_url": "https://api.github.com/users/kvprasoon/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/kvprasoon",
      "id": 12897753,
      "login": "kvprasoon",
      "node_id": "MDQ6VXNlcjEyODk3NzUz",
      "organizations_url": "https://api.github.com/users/kvprasoon/orgs",
      "received_events_url": "https://api.github.com/users/kvprasoon/received_events",
      "repos_url": "https://api.github.com/users/kvprasoon/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/kvprasoon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kvprasoon/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/kvprasoon"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "`New-Service` cmdlet's output doesn't have all properties when assigned to a variable or using `-OutVariable`\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\n♥->New-Service -Name TestService -BinaryPathName C:\\windows\\system32\\cmd.exe -DisplayName test1 -Description test1 -StartupType Manual  -OutVariable r\r\n\r\nStatus   Name               DisplayName\r\n------   ----               -----------\r\nStopped  TestService        test1\r\n\r\n♥->$r\r\n\r\n#And \r\n\r\n♥->$r = New-Service -Name TestService -BinaryPathName C:\\windows\\system32\\cmd.exe -DisplayName test1 -Description test1 -StartupType Manual\r\n♥->$r\r\n```\r\n\r\n# Expected behavior\r\n\r\n```none\r\n♥->$r\r\n\r\nStatus   Name               DisplayName\r\n------   ----               -----------\r\nStopped  TestService        test1\r\n\r\n#And \r\n\r\n♥->$r\r\n\r\nStatus   Name               DisplayName\r\n------   ----               -----------\r\nStopped  TestService        test1\r\n```\r\n\r\n# Actual behavior\r\n\r\n```none\r\n♥->$r\r\n\r\nStatus   Name               DisplayName\r\n------   ----               -----------\r\n         TestService        test1\r\n\r\n#And\r\n\r\n♥->$r\r\n\r\nStatus   Name               DisplayName\r\n------   ----               -----------\r\n\r\n```\r\n\r\n# Environment data\r\n\r\n```none\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-preview.3\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-preview.3\r\nOS                             Microsoft Windows 10.0.18956\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0ΓÇª}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
    "closed_at": "2019-10-23T03:07:07Z",
    "comments": 0,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10443/comments",
    "created_at": "2019-08-25T11:02:04Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10443/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10443",
    "id": 484918083,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "ideally support can be provided via other mechanisms, but sometimes folks do open an issue to get a",
        "id": 311043053,
        "name": "Issue-Question",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNTM=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Question"
      },
      {
        "color": "ffffff",
        "default": false,
        "description": "The issue is fixed.",
        "id": 423534444,
        "name": "Resolution-Fixed",
        "node_id": "MDU6TGFiZWw0MjM1MzQ0NDQ=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Resolution-Fixed"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10443/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0ODQ5MTgwODM=",
    "number": 10443,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10443/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10443/timeline",
    "title": "Wrong output for New-Service in variable assignment and -OutVariable",
    "updated_at": "2019-10-29T14:28:30Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10443",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/12897753?v=4",
      "events_url": "https://api.github.com/users/kvprasoon/events{/privacy}",
      "followers_url": "https://api.github.com/users/kvprasoon/followers",
      "following_url": "https://api.github.com/users/kvprasoon/following{/other_user}",
      "gists_url": "https://api.github.com/users/kvprasoon/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/kvprasoon",
      "id": 12897753,
      "login": "kvprasoon",
      "node_id": "MDQ6VXNlcjEyODk3NzUz",
      "organizations_url": "https://api.github.com/users/kvprasoon/orgs",
      "received_events_url": "https://api.github.com/users/kvprasoon/received_events",
      "repos_url": "https://api.github.com/users/kvprasoon/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/kvprasoon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kvprasoon/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/kvprasoon"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "I was looking to stop searching a file after the first match, expecting `Select-String -First 1`.\r\n\r\n`Select-String | Select-Object -First 1` can stop the pipeline, and skip searching the rest of the file. This is fine, but later I found there *is* a parameter to Select-String which stops after the first match, and outputs the match information, it just has the not-obvious name `-List` (where did that come from?).\r\n\r\nIt is the only cmdlet in Core, Management, Utility modules with a `-List` parameter, difficult to guess what it does by analogy with other cmdlets. There are only two with a `-First` parameter (Select-Object and Import-CliXml), but one of them  is used very often, so that's probably what set my expectation.\r\n\r\nSuggestion: could it be aliased to `-First` (and maybe `-First $Num`) for easier discoverability and easier guessing what it might do?",
    "closed_at": "2019-08-29T22:53:05Z",
    "comments": 6,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10442/comments",
    "created_at": "2019-08-24T14:35:23Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10442/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10442",
    "id": 484825820,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "the issue is more of a feature request than a bug",
        "id": 311043050,
        "name": "Issue-Enhancement",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNTA=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Enhancement"
      },
      {
        "color": "5319e7",
        "default": false,
        "description": "specific to documentation in this repo",
        "id": 341492760,
        "name": "Area-Maintainers-Documentation",
        "node_id": "MDU6TGFiZWwzNDE0OTI3NjA=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Area-Maintainers-Documentation"
      },
      {
        "color": "ffffff",
        "default": false,
        "description": "The issue is caused by external component(s).",
        "id": 427077877,
        "name": "Resolution-External",
        "node_id": "MDU6TGFiZWw0MjcwNzc4Nzc=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Resolution-External"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10442/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0ODQ4MjU4MjA=",
    "number": 10442,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10442/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10442/timeline",
    "title": "Could Select-String -List be aliased to Select-String -First [$Num] ?",
    "updated_at": "2019-08-29T22:53:20Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10442",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/187787?v=4",
      "events_url": "https://api.github.com/users/HumanEquivalentUnit/events{/privacy}",
      "followers_url": "https://api.github.com/users/HumanEquivalentUnit/followers",
      "following_url": "https://api.github.com/users/HumanEquivalentUnit/following{/other_user}",
      "gists_url": "https://api.github.com/users/HumanEquivalentUnit/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/HumanEquivalentUnit",
      "id": 187787,
      "login": "HumanEquivalentUnit",
      "node_id": "MDQ6VXNlcjE4Nzc4Nw==",
      "organizations_url": "https://api.github.com/users/HumanEquivalentUnit/orgs",
      "received_events_url": "https://api.github.com/users/HumanEquivalentUnit/received_events",
      "repos_url": "https://api.github.com/users/HumanEquivalentUnit/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/HumanEquivalentUnit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/HumanEquivalentUnit/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/HumanEquivalentUnit"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n\r\n-->\r\n\r\n# Steps to reproduce\r\nI know PowerShell is mostly case insensitive, but when using both `-AsHashTable` and `-CaseSensitive` I expected to end up with a case sensitive hashtable.\r\n```powershell\r\n$capitonyms = @(\r\n    [PSCustomObject]@{\r\n        Capitonym = 'Bill'\r\n    }\r\n    [PSCustomObject]@{\r\n        Capitonym = 'bill'\r\n    }\r\n)\r\n\r\n$capitonyms | Group-Object Capitonym -AsHashTable -CaseSensitive\r\n```\r\n\r\n# Expected behavior\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nBill                           {@{Capitonym=Bill}}\r\nbill                           {@{Capitonym=bill}}\r\n```\r\n\r\n# Actual behavior\r\n\r\n```none\r\nGroup-Object : The objects grouped by this property cannot be expanded because there is a key duplication. Provide a valid value for the property, and then try again.\r\nAt line:1 char:15\r\n+ $capitonyms | Group-Object Capitonym -AsHashTable -CaseSensitive\r\n+               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : InvalidArgument: (:) [Group-Object], Exception\r\n+ FullyQualifiedErrorId : The objects grouped by this property cannot be expanded because there is a key duplication. Provide a valid value for the property, and then try again.,Microsoft.PowerShell.Commands.GroupObjectCommand\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-preview.3\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-preview.3\r\nOS                             Microsoft Windows 10.0.18362\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0…}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
    "closed_at": "2019-11-13T04:16:46Z",
    "comments": 10,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10441/comments",
    "created_at": "2019-08-24T10:38:28Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10441/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10441",
    "id": 484803839,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "the issue is more of a feature request than a bug",
        "id": 311043050,
        "name": "Issue-Enhancement",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNTA=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Enhancement"
      },
      {
        "color": "50D383",
        "default": false,
        "description": "Up-for-grabs issues are not high priorities, and may be opportunities for external contributors",
        "id": 401721267,
        "name": "Up-for-Grabs",
        "node_id": "MDU6TGFiZWw0MDE3MjEyNjc=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Up-for-Grabs"
      },
      {
        "color": "ffffff",
        "default": false,
        "description": "The issue is fixed.",
        "id": 423534444,
        "name": "Resolution-Fixed",
        "node_id": "MDU6TGFiZWw0MjM1MzQ0NDQ=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Resolution-Fixed"
      },
      {
        "color": "b60205",
        "default": false,
        "description": "breaking change that may affect users",
        "id": 474781609,
        "name": "Breaking-Change",
        "node_id": "MDU6TGFiZWw0NzQ3ODE2MDk=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Breaking-Change"
      },
      {
        "color": "5319e7",
        "default": false,
        "description": "cmdlets in the Microsoft.PowerShell.Utility module",
        "id": 552752310,
        "name": "WG-Cmdlets-Utility",
        "node_id": "MDU6TGFiZWw1NTI3NTIzMTA=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/WG-Cmdlets-Utility"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10441/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0ODQ4MDM4Mzk=",
    "number": 10441,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 3,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10441/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10441/timeline",
    "title": "Return casesensitive hashtable with Group-Object",
    "updated_at": "2019-11-22T08:53:54Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10441",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/47929663?v=4",
      "events_url": "https://api.github.com/users/lahell/events{/privacy}",
      "followers_url": "https://api.github.com/users/lahell/followers",
      "following_url": "https://api.github.com/users/lahell/following{/other_user}",
      "gists_url": "https://api.github.com/users/lahell/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lahell",
      "id": 47929663,
      "login": "lahell",
      "node_id": "MDQ6VXNlcjQ3OTI5NjYz",
      "organizations_url": "https://api.github.com/users/lahell/orgs",
      "received_events_url": "https://api.github.com/users/lahell/received_events",
      "repos_url": "https://api.github.com/users/lahell/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lahell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lahell/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lahell"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "# Steps to reproduce\r\n\r\n```powershell\r\nbash '-c' 'echo \"hello world\"'\r\n```\r\n\r\n# Expected behavior\r\n\r\n```none\r\nhello world\r\n```\r\n\r\n# Actual behavior\r\n\r\n```none\r\nhello\r\n```\r\n\r\n# Environment data\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.2.2\r\nPSEdition                      Core\r\nGitCommitId                    6.2.2\r\nOS                             Darwin 18.7.0 Darwin Kernel Version 18.7.0: Thu Jun 20 18:42:21 PDT 2019; root:xnu-4903.270.47~4/RELEASE_X86_64\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0…}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
    "closed_at": "2021-01-20T06:34:57Z",
    "comments": 4,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10440/comments",
    "created_at": "2019-08-24T09:01:19Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10440/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10440",
    "id": 484796205,
    "labels": [
      {
        "color": "ffffff",
        "default": false,
        "description": "The issue is a duplicate.",
        "id": 311043049,
        "name": "Resolution-Duplicate",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNDk=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Resolution-Duplicate"
      },
      {
        "color": "fc2929",
        "default": false,
        "description": "ideally support can be provided via other mechanisms, but sometimes folks do open an issue to get a",
        "id": 311043053,
        "name": "Issue-Question",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNTM=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Question"
      },
      {
        "color": "5319e7",
        "default": false,
        "description": "the console experience",
        "id": 401720556,
        "name": "WG-Interactive-Console",
        "node_id": "MDU6TGFiZWw0MDE3MjA1NTY=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/WG-Interactive-Console"
      },
      {
        "color": "5319e7",
        "default": false,
        "description": "core PowerShell engine, interpreter, and runtime",
        "id": 401720735,
        "name": "WG-Engine",
        "node_id": "MDU6TGFiZWw0MDE3MjA3MzU=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/WG-Engine"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10440/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0ODQ3OTYyMDU=",
    "number": 10440,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10440/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10440/timeline",
    "title": "calling bash -c with powershell incorrectly parses arguments with quotes",
    "updated_at": "2021-01-20T06:34:57Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10440",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/34585329?v=4",
      "events_url": "https://api.github.com/users/eedwards-sk/events{/privacy}",
      "followers_url": "https://api.github.com/users/eedwards-sk/followers",
      "following_url": "https://api.github.com/users/eedwards-sk/following{/other_user}",
      "gists_url": "https://api.github.com/users/eedwards-sk/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/eedwards-sk",
      "id": 34585329,
      "login": "eedwards-sk",
      "node_id": "MDQ6VXNlcjM0NTg1MzI5",
      "organizations_url": "https://api.github.com/users/eedwards-sk/orgs",
      "received_events_url": "https://api.github.com/users/eedwards-sk/received_events",
      "repos_url": "https://api.github.com/users/eedwards-sk/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/eedwards-sk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eedwards-sk/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/eedwards-sk"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": {
      "avatar_url": "https://avatars.githubusercontent.com/u/12820925?v=4",
      "events_url": "https://api.github.com/users/adityapatwardhan/events{/privacy}",
      "followers_url": "https://api.github.com/users/adityapatwardhan/followers",
      "following_url": "https://api.github.com/users/adityapatwardhan/following{/other_user}",
      "gists_url": "https://api.github.com/users/adityapatwardhan/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/adityapatwardhan",
      "id": 12820925,
      "login": "adityapatwardhan",
      "node_id": "MDQ6VXNlcjEyODIwOTI1",
      "organizations_url": "https://api.github.com/users/adityapatwardhan/orgs",
      "received_events_url": "https://api.github.com/users/adityapatwardhan/received_events",
      "repos_url": "https://api.github.com/users/adityapatwardhan/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/adityapatwardhan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adityapatwardhan/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/adityapatwardhan"
    },
    "assignees": [
      {
        "avatar_url": "https://avatars.githubusercontent.com/u/12820925?v=4",
        "events_url": "https://api.github.com/users/adityapatwardhan/events{/privacy}",
        "followers_url": "https://api.github.com/users/adityapatwardhan/followers",
        "following_url": "https://api.github.com/users/adityapatwardhan/following{/other_user}",
        "gists_url": "https://api.github.com/users/adityapatwardhan/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/adityapatwardhan",
        "id": 12820925,
        "login": "adityapatwardhan",
        "node_id": "MDQ6VXNlcjEyODIwOTI1",
        "organizations_url": "https://api.github.com/users/adityapatwardhan/orgs",
        "received_events_url": "https://api.github.com/users/adityapatwardhan/received_events",
        "repos_url": "https://api.github.com/users/adityapatwardhan/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/adityapatwardhan/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/adityapatwardhan/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/adityapatwardhan"
      }
    ],
    "author_association": "COLLABORATOR",
    "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nStyle pass only as part of #10044 \r\n\r\n## PR Context\r\n\r\nRewriting the Test-Connection Command a good bit. @iSazonov suggested I split it up into stages to make reviewing the PR changes much easier.\r\n\r\nThis is part 1, only containing style fixes. There are no functional changes.\r\n\r\nFeel free to review commit-by-commit for easier diffs. 🙂 \r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
    "closed_at": "2019-09-03T18:36:32Z",
    "comments": 4,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10439/comments",
    "created_at": "2019-08-24T05:11:48Z",
    "draft": false,
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10439/events",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10439",
    "id": 484779917,
    "labels": [
      {
        "color": "fbca04",
        "default": false,
        "description": "Indicates that a PR should be marked as a Code Cleanup change in the Change Log",
        "id": 1126733813,
        "name": "CL-CodeCleanup",
        "node_id": "MDU6TGFiZWwxMTI2NzMzODEz",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/CL-CodeCleanup"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10439/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": "2019-09-22T18:49:57Z",
      "closed_issues": 39,
      "created_at": "2019-08-19T21:02:56Z",
      "creator": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
        "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
        "followers_url": "https://api.github.com/users/TravisEz13/followers",
        "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
        "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/TravisEz13",
        "id": 10873629,
        "login": "TravisEz13",
        "node_id": "MDQ6VXNlcjEwODczNjI5",
        "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
        "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
        "repos_url": "https://api.github.com/users/TravisEz13/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/TravisEz13"
      },
      "description": "",
      "due_on": null,
      "html_url": "https://github.com/PowerShell/PowerShell/milestone/69",
      "id": 4587190,
      "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/milestones/69/labels",
      "node_id": "MDk6TWlsZXN0b25lNDU4NzE5MA==",
      "number": 69,
      "open_issues": 0,
      "state": "closed",
      "title": "7.0.0-preview.4",
      "updated_at": "2019-09-22T18:49:57Z",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/milestones/69"
    },
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzEwNTg0Nzgz",
    "number": 10439,
    "performed_via_github_app": null,
    "pull_request": {
      "diff_url": "https://github.com/PowerShell/PowerShell/pull/10439.diff",
      "html_url": "https://github.com/PowerShell/PowerShell/pull/10439",
      "merged_at": "2019-09-03T18:36:32Z",
      "patch_url": "https://github.com/PowerShell/PowerShell/pull/10439.patch",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/pulls/10439"
    },
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10439/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10439/timeline",
    "title": "Cleanup TestConnectionCommand",
    "updated_at": "2019-09-19T17:51:38Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10439",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "Note: The `[datetime]::ParseExact()` method used below is the only one I've seen the problem with - I have no idea what underlies this symptom and how general the problem is.\r\n\r\nIf you run the code below in the following environments:\r\n\r\n* (a) as PowerShell code\r\n\r\n* (b) as C# code compiled on demand with `Add-Type`\r\n\r\n* (c) as C# code compiled to a .NET Core 2.1 / 3.0-preview8 console application\r\n\r\nonly (c) works as expected.\r\n\r\n# Steps to reproduce\r\n\r\nThe following code should yield `1921`:\r\n\r\n```powershell\r\n# Set the 2-digit-year threshold to 2020, so that '21' is interpreted as *19*21\r\n($c = [CultureInfo]::InvariantCulture.Clone()).Calendar.TwoDigitYearMax = 2020; [datetime]::ParseExact('21', 'yy', $c).Year\r\n\r\n# Run the equivalent C# code via Add-Type\r\nAdd-Type @'\r\n    using System;\r\n    using System.Globalization;\r\n\r\n    public static class Program\r\n    {\r\n        public static void Main(string[] args)\r\n        {\r\n            var cc = (CultureInfo)CultureInfo.InvariantCulture.Clone();\r\n            cc.Calendar.TwoDigitYearMax = 2020;\r\n            Console.WriteLine(DateTime.ParseExact(\"21\", \"yy\", cc).Year);\r\n        }\r\n    }\r\n'@\r\n\r\n[Program]::Main(@())\r\n```\r\n\r\n# Expected behavior\r\n\r\n```none\r\n1921\r\n1921\r\n```\r\n\r\n# Actual behavior\r\n\r\n```none\r\n2021\r\n2021\r\n```\r\n\r\nThat is, the modified `.TwoDigitYearMax` property value was ignored.\r\n\r\nNote:\r\n\r\n* If you run the exact same code as passed to `Add-Type` above as a .NET Core application, the result is as expected.\r\n\r\n* The problem may be related to calling `.Clone()` on the static `[CultureInfo]::InvariantCulture` property, because it goes away if you obtain the invariant culture with `[CultureInfo] ''` or `[CultureInfo]::GetCultureInfo('')` instead (while the resulting  object _looks_ the same, there's no reference equality)\r\n\r\n# Environment data\r\n\r\n```none\r\nPowerShell Core 7.0.0-preview.2\r\nWindows PowerShell 5.1.17763.592\r\n```\r\n",
    "closed_at": "2019-09-09T20:15:31Z",
    "comments": 5,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10438/comments",
    "created_at": "2019-08-23T19:59:50Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10438/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10438",
    "id": 484689055,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "ideally support can be provided via other mechanisms, but sometimes folks do open an issue to get a",
        "id": 311043053,
        "name": "Issue-Question",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNTM=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Question"
      },
      {
        "color": "5319e7",
        "default": false,
        "description": "core PowerShell engine, interpreter, and runtime",
        "id": 401720735,
        "name": "WG-Engine",
        "node_id": "MDU6TGFiZWw0MDE3MjA3MzU=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/WG-Engine"
      },
      {
        "color": "ffffff",
        "default": false,
        "description": "The issue is caused by external component(s).",
        "id": 427077877,
        "name": "Resolution-External",
        "node_id": "MDU6TGFiZWw0MjcwNzc4Nzc=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Resolution-External"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10438/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0ODQ2ODkwNTU=",
    "number": 10438,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10438/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10438/timeline",
    "title": "Method call behaves differently in PowerShell than in a compiled C# application",
    "updated_at": "2019-09-16T10:40:56Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10438",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "# Steps to reproduce\r\n\r\n```powershell\r\nPS C:\\> ${test?} = 2\r\nPS C:\\> ${testA} = 3\r\nPS C:\\> Get-Variable -Name 'test?'    # this acts as a wildcard but there's no -LiteralName\r\n\r\nName                           Value\r\n----                           -----\r\ntest?                          2\r\ntestA                          3\r\n```\r\n\r\nSimilar behaviour with `Get-Member -Name 'Test?'` acting as a wildcard with no -LiteralName to avoid that:\r\n\r\n```powershell\r\nPS C:\\> $o=[pscustomobject]@{\r\n>>  'test?' = 1\r\n>>  'testA' = 2\r\n>> }\r\nPS C:\\> $o | get-member -name 'test?'    # should get 1 property, exact match, \r\n                                         # or have a way to do that\r\n\r\n   TypeName: System.Management.Automation.PSCustomObject\r\nName  MemberType   Definition\r\n----  ----------   ----------\r\ntest? NoteProperty int test?=1\r\ntestA NoteProperty int testA=2\r\n```\r\n\r\nUnexpectedly, putting a backtick escape by the question mark gets the first variable, but backtick in a single quoted string is  literal backtick, so that's not the variable's name. This broken(?) workaround does not behave the same for Get-Member:\r\n\r\n```powershell\r\nPS C:\\> Get-Variable -Name 'test`?'    # does get 1 match, but should get 0\r\n\r\nName                           Value\r\n----                           -----\r\ntest?                          2\r\n\r\nPS C:\\> PS C:\\> $o | get-member -name 'test`?'    # correctly does not, \r\n                                                  # but inconsistent with get-variable\r\nPS C:\\>\r\n```\r\n\r\n----\r\n\r\nRelated to backticks in variable names, but perhaps a separate issue, setting a variable with a backtick in the name behaves strangely:\r\n\r\n```powershell\r\nPS C:\\> ${test`?} = 5\r\nPS C:\\> get-variable test*\r\n\r\nName                           Value\r\n----                           -----\r\ntest?                          5               # name missing backtick?\r\n\r\nPS C:\\> New-Variable -Name 'test`?' -Value 6    # this does keep backtick in the name\r\nPS C:\\> get-variable te*\r\n\r\nName                           Value\r\n----                           -----\r\ntest?                          5\r\ntest`?                         6        # from new-variable \r\n\r\nPS C:\\> ${test`?}    \r\n5                            # wrong value, should be 6?\r\n```\r\n\r\n # Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nPS C:\\> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-preview.1\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-preview.1\r\nOS                             Microsoft Windows 10.0.17763\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0…}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
    "closed_at": null,
    "comments": 2,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10437/comments",
    "created_at": "2019-08-23T19:31:49Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10437/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10437",
    "id": 484679733,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "the issue may not have a clear classification yet. The issue may generate an RFC or may be reclassif",
        "id": 423526741,
        "name": "Issue-Discussion",
        "node_id": "MDU6TGFiZWw0MjM1MjY3NDE=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Discussion"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10437/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0ODQ2Nzk3MzM=",
    "number": 10437,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 1,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10437/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10437/timeline",
    "title": "Get-Variable and Get-Member don't handle names with \"?\" because of wildcarding",
    "updated_at": "2019-08-29T23:53:14Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10437",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/187787?v=4",
      "events_url": "https://api.github.com/users/HumanEquivalentUnit/events{/privacy}",
      "followers_url": "https://api.github.com/users/HumanEquivalentUnit/followers",
      "following_url": "https://api.github.com/users/HumanEquivalentUnit/following{/other_user}",
      "gists_url": "https://api.github.com/users/HumanEquivalentUnit/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/HumanEquivalentUnit",
      "id": 187787,
      "login": "HumanEquivalentUnit",
      "node_id": "MDQ6VXNlcjE4Nzc4Nw==",
      "organizations_url": "https://api.github.com/users/HumanEquivalentUnit/orgs",
      "received_events_url": "https://api.github.com/users/HumanEquivalentUnit/received_events",
      "repos_url": "https://api.github.com/users/HumanEquivalentUnit/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/HumanEquivalentUnit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/HumanEquivalentUnit/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/HumanEquivalentUnit"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "Property names ending with `?` character can't be used unless the property name is quoted, but autocomplete with TAB does not quote them. (Related to discussion in #3240)\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\n$o = [PSCustomObject]@{\r\n    'test?' = 1\r\n    'test|' = 2\r\n}\r\n\r\nPS C:\\> $o.test{TAB}\r\n# cycles through\r\n# $o.test?      # this won't work without quotes around the property name\r\n# $o.'test|'\r\n```\r\n\r\n# Expected behavior\r\n\r\n```powershell\r\nPS C:\\> $o.test{TAB}\r\n# cycles through\r\n# $o.'test?'                # expected, this one is quoted\r\n# $o.'test|'\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nPS C:\\> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-preview.1\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-preview.1\r\nOS                             Microsoft Windows 10.0.17763\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0…}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
    "closed_at": null,
    "comments": 3,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10436/comments",
    "created_at": "2019-08-23T17:41:51Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10436/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10436",
    "id": 484640039,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "ideally support can be provided via other mechanisms, but sometimes folks do open an issue to get a",
        "id": 311043053,
        "name": "Issue-Question",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNTM=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Question"
      },
      {
        "color": "5319e7",
        "default": false,
        "description": "tab completion",
        "id": 401720778,
        "name": "WG-Interactive-IntelliSense",
        "node_id": "MDU6TGFiZWw0MDE3MjA3Nzg=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/WG-Interactive-IntelliSense"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10436/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0ODQ2NDAwMzk=",
    "number": 10436,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10436/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10436/timeline",
    "title": "Autocomplete should quote property names ending in \"?\"",
    "updated_at": "2021-01-15T14:14:32Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10436",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/187787?v=4",
      "events_url": "https://api.github.com/users/HumanEquivalentUnit/events{/privacy}",
      "followers_url": "https://api.github.com/users/HumanEquivalentUnit/followers",
      "following_url": "https://api.github.com/users/HumanEquivalentUnit/following{/other_user}",
      "gists_url": "https://api.github.com/users/HumanEquivalentUnit/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/HumanEquivalentUnit",
      "id": 187787,
      "login": "HumanEquivalentUnit",
      "node_id": "MDQ6VXNlcjE4Nzc4Nw==",
      "organizations_url": "https://api.github.com/users/HumanEquivalentUnit/orgs",
      "received_events_url": "https://api.github.com/users/HumanEquivalentUnit/received_events",
      "repos_url": "https://api.github.com/users/HumanEquivalentUnit/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/HumanEquivalentUnit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/HumanEquivalentUnit/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/HumanEquivalentUnit"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": {
      "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
      "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
      "followers_url": "https://api.github.com/users/TravisEz13/followers",
      "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
      "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/TravisEz13",
      "id": 10873629,
      "login": "TravisEz13",
      "node_id": "MDQ6VXNlcjEwODczNjI5",
      "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
      "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
      "repos_url": "https://api.github.com/users/TravisEz13/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/TravisEz13"
    },
    "assignees": [
      {
        "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
        "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
        "followers_url": "https://api.github.com/users/TravisEz13/followers",
        "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
        "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/TravisEz13",
        "id": 10873629,
        "login": "TravisEz13",
        "node_id": "MDQ6VXNlcjEwODczNjI5",
        "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
        "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
        "repos_url": "https://api.github.com/users/TravisEz13/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/TravisEz13"
      }
    ],
    "author_association": "CONTRIBUTOR",
    "body": "# PR Summary\r\n\r\nI'm opening this PR to capture the refactoring work I did last night for the `ErrorRecord` custom formatting. This work, combined with the work I'm doing in #10430, allows you to pull up different error views on demand using `Format-Custom -View $viewName`. Without #10430 in place, you currently have to use `-Force` to see the different view.\r\n\r\n## PR Context\r\n\r\nThis PR dramatically cleans up the `ErrorRecord` formatting logic that is written using PowerShell, improving performance and simplifying the logic substantially while retaining all existing functionality.\r\n\r\nIt also sets things up so that `ErrorRecord` views can be referenced in `Format-Custom` by name.\r\n\r\nOne possible point of contention with these changes: they allow you to use or discard the `View` suffix that is applied to whatever value you assign to `$ErrorView`. For the view names that you can reference in `Format-Custom -View $viewName`, those names are not suffixed with `View`.\r\n\r\nI'm sharing this logic because of the open RFC about error views, so that it can be leveraged as part of that work if desired.\r\n\r\n## PR Checklist\r\n\r\n- [X] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [X] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [ ] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [X] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [ ] Not Applicable\r\n    - **OR**\r\n    - [X] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [X] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
    "closed_at": "2020-01-03T00:00:05Z",
    "comments": 1,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10435/comments",
    "created_at": "2019-08-23T17:36:29Z",
    "draft": false,
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10435/events",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10435",
    "id": 484638080,
    "labels": [
      {
        "color": "bfd4f2",
        "default": false,
        "description": "",
        "id": 486893129,
        "name": "Stale",
        "node_id": "MDU6TGFiZWw0ODY4OTMxMjk=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Stale"
      },
      {
        "color": "ededed",
        "default": false,
        "description": "The PR was reviewed and requires changes or comments from the author before being accept",
        "id": 1389022155,
        "name": "Waiting on Author",
        "node_id": "MDU6TGFiZWwxMzg5MDIyMTU1",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Waiting%20on%20Author"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10435/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": "2020-04-01T23:04:03Z",
      "closed_issues": 117,
      "created_at": "2019-11-13T00:42:39Z",
      "creator": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
        "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
        "followers_url": "https://api.github.com/users/TravisEz13/followers",
        "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
        "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/TravisEz13",
        "id": 10873629,
        "login": "TravisEz13",
        "node_id": "MDQ6VXNlcjEwODczNjI5",
        "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
        "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
        "repos_url": "https://api.github.com/users/TravisEz13/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/TravisEz13"
      },
      "description": "PRs targeted for the first release after 7.0.0",
      "due_on": null,
      "html_url": "https://github.com/PowerShell/PowerShell/milestone/75",
      "id": 4840542,
      "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/milestones/75/labels",
      "node_id": "MDk6TWlsZXN0b25lNDg0MDU0Mg==",
      "number": 75,
      "open_issues": 0,
      "state": "closed",
      "title": "7.1.0-preview.1",
      "updated_at": "2020-10-19T17:11:18Z",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/milestones/75"
    },
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzEwNDc0NTYw",
    "number": 10435,
    "performed_via_github_app": null,
    "pull_request": {
      "diff_url": "https://github.com/PowerShell/PowerShell/pull/10435.diff",
      "html_url": "https://github.com/PowerShell/PowerShell/pull/10435",
      "merged_at": null,
      "patch_url": "https://github.com/PowerShell/PowerShell/pull/10435.patch",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/pulls/10435"
    },
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 1,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10435/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10435/timeline",
    "title": "WIP: Refactor ErrorRecord formatting",
    "updated_at": "2020-01-03T00:00:06Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10435",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n\r\n-->\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\nInvoke-WebRequest -Uri 'https://aka.ms/powershell' -MaximumRedirection 0 -ErrorAction SilentlyContinue\r\n```\r\n\r\n# Expected behavior\r\n\r\n```none\r\nStatusCode        : 301\r\nStatusDescription : Moved Permanently\r\nContent           : {}\r\nRawContent        : HTTP/1.1 301 Moved Permanently\r\n                    Request-Context: appId=cid-v1:b47e5e27-bf85-45ba-a97c-0377ce0e5779\r\n                    X-Response-Cache-Status: True\r\n                    Pragma: no-cache\r\n                    Connection: keep-alive\r\n                    Strict-Transport-Security: ...\r\nHeaders           : {[Request-Context, appId=cid-v1:b47e5e27-bf85-45ba-a97c-0377ce0e5779], [X-Response-Cache-Status,\r\n                    True], [Pragma, no-cache], [Connection, keep-alive]...}\r\nRawContentLength  : 0\r\n```\r\n\r\n# Actual behavior\r\n\r\n```none\r\nInvoke-WebRequest : Response status code does not indicate success: 301 (Moved Permanently).\r\nAt line:1 char:7\r\n+ $wr = Invoke-WebRequest -Uri 'https://aka.ms/powershell' -MaximumRedi ...\r\n+       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : InvalidOperation: (Method: GET, Reques…ontent-Length: 0\r\n}:HttpRequestMessage) [Invoke-WebRequest], HttpResponseException\r\n+ FullyQualifiedErrorId : WebCmdletWebResponseException,Microsoft.PowerShell.Commands.InvokeWebRequestCommand\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-preview.3\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-preview.3\r\nOS                             Linux 5.0.0-1016-azure #17-Ubuntu SMP Thu Aug 15 15:39:27 UTC 2019\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0…}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
    "closed_at": "2019-10-18T19:34:38Z",
    "comments": 1,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10434/comments",
    "created_at": "2019-08-23T13:44:52Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10434/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10434",
    "id": 484538823,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "ideally support can be provided via other mechanisms, but sometimes folks do open an issue to get a",
        "id": 311043053,
        "name": "Issue-Question",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNTM=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Question"
      },
      {
        "color": "5319e7",
        "default": false,
        "description": "cmdlets in the Microsoft.PowerShell.Utility module",
        "id": 552752310,
        "name": "WG-Cmdlets-Utility",
        "node_id": "MDU6TGFiZWw1NTI3NTIzMTA=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/WG-Cmdlets-Utility"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10434/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0ODQ1Mzg4MjM=",
    "number": 10434,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10434/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10434/timeline",
    "title": "My bug report",
    "updated_at": "2019-10-18T19:34:38Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10434",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/4130125?v=4",
      "events_url": "https://api.github.com/users/arnisg/events{/privacy}",
      "followers_url": "https://api.github.com/users/arnisg/followers",
      "following_url": "https://api.github.com/users/arnisg/following{/other_user}",
      "gists_url": "https://api.github.com/users/arnisg/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/arnisg",
      "id": 4130125,
      "login": "arnisg",
      "node_id": "MDQ6VXNlcjQxMzAxMjU=",
      "organizations_url": "https://api.github.com/users/arnisg/orgs",
      "received_events_url": "https://api.github.com/users/arnisg/received_events",
      "repos_url": "https://api.github.com/users/arnisg/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/arnisg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arnisg/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/arnisg"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "I'm not able to run the command _Get-CimInstance_ from a net core console application with PowerShell 7 sdk (preview 3). The error I get is \r\n\r\n> System.Management.Automation.CommandNotFoundException: The term 'Get-CimInstance' is not recognized as the name of a cmdlet, function, script file, or operable program.\r\n> Check the spelling of the name, or if a path was included, verify that the path is correct and try again.\r\n\r\nTo reproduce create a net core 3.0 preview 8 console application.  Add nuget Microsoft.PowerShell.SDK and System.Management.Automation. \r\nThis is the code running\r\n\r\n    using (PowerShell powerShell = PowerShell.Create())\r\n    {\r\n     powerShell.AddCommand(\"Get-CimInstance\").AddArgument(\"win32_PnPSignedDriver\");\r\n     var drivers = powerShell.Invoke().ToList();\r\n     foreach (var driver in drivers)\r\n     {\r\n       Console.WriteLine(driver.Members[\"Description\"].Value);\r\n     }\r\n    }\r\n\r\nWhen adding powershell referenceassemblies for version 5 this runs perfect. \r\n\r\nAnyone one what the problem is?\r\n",
    "closed_at": "2021-02-03T19:03:06Z",
    "comments": 10,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10433/comments",
    "created_at": "2019-08-23T13:08:15Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10433/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10433",
    "id": 484521593,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "ideally support can be provided via other mechanisms, but sometimes folks do open an issue to get a",
        "id": 311043053,
        "name": "Issue-Question",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNTM=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Question"
      },
      {
        "color": "5319e7",
        "default": false,
        "description": "hosting PowerShell as a runtime, PowerShell's APIs, PowerShell Standard, or development of modules",
        "id": 1108905835,
        "name": "WG-DevEx-SDK",
        "node_id": "MDU6TGFiZWwxMTA4OTA1ODM1",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/WG-DevEx-SDK"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10433/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0ODQ1MjE1OTM=",
    "number": 10433,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10433/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10433/timeline",
    "title": "Get-CimInstance is not recognized as the name of a cmdlet -PowerShell 7 SDK",
    "updated_at": "2021-02-03T19:03:07Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10433",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/618919?v=4",
      "events_url": "https://api.github.com/users/xGord/events{/privacy}",
      "followers_url": "https://api.github.com/users/xGord/followers",
      "following_url": "https://api.github.com/users/xGord/following{/other_user}",
      "gists_url": "https://api.github.com/users/xGord/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/xGord",
      "id": 618919,
      "login": "xGord",
      "node_id": "MDQ6VXNlcjYxODkxOQ==",
      "organizations_url": "https://api.github.com/users/xGord/orgs",
      "received_events_url": "https://api.github.com/users/xGord/received_events",
      "repos_url": "https://api.github.com/users/xGord/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/xGord/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xGord/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/xGord"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "# Summary of the new feature/enhancement\r\n\r\n<!-- \r\nA clear and concise description of what the problem is that the new feature would solve.\r\nTry formulating it in user story style (if applicable):\r\n'As a user I want X so that Y.' with X being the being the action and Y being the value of the action.\r\n-->\r\n\r\n# Proposed technical implementation details (optional)\r\n\r\n<!-- \r\nA clear and concise description of what you want to happen.\r\nConsider providing an example PowerShell experience with expected result.\r\n-->\r\n",
    "closed_at": "2019-08-26T11:01:30Z",
    "comments": 0,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10432/comments",
    "created_at": "2019-08-23T09:05:52Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10432/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10432",
    "id": 484417006,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "the issue is more of a feature request than a bug",
        "id": 311043050,
        "name": "Issue-Enhancement",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNTA=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Enhancement"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10432/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0ODQ0MTcwMDY=",
    "number": 10432,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10432/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10432/timeline",
    "title": "Feature Request",
    "updated_at": "2019-08-26T11:01:30Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10432",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/45297750?v=4",
      "events_url": "https://api.github.com/users/solorio1omar/events{/privacy}",
      "followers_url": "https://api.github.com/users/solorio1omar/followers",
      "following_url": "https://api.github.com/users/solorio1omar/following{/other_user}",
      "gists_url": "https://api.github.com/users/solorio1omar/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/solorio1omar",
      "id": 45297750,
      "login": "solorio1omar",
      "node_id": "MDQ6VXNlcjQ1Mjk3NzUw",
      "organizations_url": "https://api.github.com/users/solorio1omar/orgs",
      "received_events_url": "https://api.github.com/users/solorio1omar/received_events",
      "repos_url": "https://api.github.com/users/solorio1omar/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/solorio1omar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/solorio1omar/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/solorio1omar"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    },
    "assignees": [
      {
        "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
        "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
        "followers_url": "https://api.github.com/users/iSazonov/followers",
        "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
        "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/iSazonov",
        "id": 22290914,
        "login": "iSazonov",
        "node_id": "MDQ6VXNlcjIyMjkwOTE0",
        "organizations_url": "https://api.github.com/users/iSazonov/orgs",
        "received_events_url": "https://api.github.com/users/iSazonov/received_events",
        "repos_url": "https://api.github.com/users/iSazonov/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/iSazonov"
      }
    ],
    "author_association": "COLLABORATOR",
    "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nReparse tag consts is absolute numbers, not flags so we should use a comparison instead of bit operations\r\n\r\n## PR Context\r\n\r\n<!-- Provide a little reasoning as to why this Pull Request helps and why you have opened it. -->\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [ ] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
    "closed_at": "2019-09-17T05:48:08Z",
    "comments": 6,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10431/comments",
    "created_at": "2019-08-23T07:08:00Z",
    "draft": false,
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10431/events",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10431",
    "id": 484365394,
    "labels": [
      {
        "color": "fbca04",
        "default": false,
        "description": "Indicates that a PR should be marked as an engine change in the Change Log",
        "id": 1126733297,
        "name": "CL-Engine",
        "node_id": "MDU6TGFiZWwxMTI2NzMzMjk3",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/CL-Engine"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10431/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": "2019-10-24T04:50:52Z",
      "closed_issues": 78,
      "created_at": "2019-09-12T21:38:19Z",
      "creator": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
        "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
        "followers_url": "https://api.github.com/users/TravisEz13/followers",
        "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
        "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/TravisEz13",
        "id": 10873629,
        "login": "TravisEz13",
        "node_id": "MDQ6VXNlcjEwODczNjI5",
        "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
        "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
        "repos_url": "https://api.github.com/users/TravisEz13/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/TravisEz13"
      },
      "description": "",
      "due_on": null,
      "html_url": "https://github.com/PowerShell/PowerShell/milestone/71",
      "id": 4655520,
      "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/milestones/71/labels",
      "node_id": "MDk6TWlsZXN0b25lNDY1NTUyMA==",
      "number": 71,
      "open_issues": 0,
      "state": "closed",
      "title": "7.0.0-preview.5",
      "updated_at": "2019-10-24T05:09:29Z",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/milestones/71"
    },
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzEwMjU3OTQ1",
    "number": 10431,
    "performed_via_github_app": null,
    "pull_request": {
      "diff_url": "https://github.com/PowerShell/PowerShell/pull/10431.diff",
      "html_url": "https://github.com/PowerShell/PowerShell/pull/10431",
      "merged_at": "2019-09-17T05:48:07Z",
      "patch_url": "https://github.com/PowerShell/PowerShell/pull/10431.patch",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/pulls/10431"
    },
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10431/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10431/timeline",
    "title": "Refactor reparse tag checks",
    "updated_at": "2020-12-12T06:41:55Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10431",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": {
      "avatar_url": "https://avatars.githubusercontent.com/u/12820925?v=4",
      "events_url": "https://api.github.com/users/adityapatwardhan/events{/privacy}",
      "followers_url": "https://api.github.com/users/adityapatwardhan/followers",
      "following_url": "https://api.github.com/users/adityapatwardhan/following{/other_user}",
      "gists_url": "https://api.github.com/users/adityapatwardhan/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/adityapatwardhan",
      "id": 12820925,
      "login": "adityapatwardhan",
      "node_id": "MDQ6VXNlcjEyODIwOTI1",
      "organizations_url": "https://api.github.com/users/adityapatwardhan/orgs",
      "received_events_url": "https://api.github.com/users/adityapatwardhan/received_events",
      "repos_url": "https://api.github.com/users/adityapatwardhan/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/adityapatwardhan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adityapatwardhan/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/adityapatwardhan"
    },
    "assignees": [
      {
        "avatar_url": "https://avatars.githubusercontent.com/u/12820925?v=4",
        "events_url": "https://api.github.com/users/adityapatwardhan/events{/privacy}",
        "followers_url": "https://api.github.com/users/adityapatwardhan/followers",
        "following_url": "https://api.github.com/users/adityapatwardhan/following{/other_user}",
        "gists_url": "https://api.github.com/users/adityapatwardhan/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/adityapatwardhan",
        "id": 12820925,
        "login": "adityapatwardhan",
        "node_id": "MDQ6VXNlcjEyODIwOTI1",
        "organizations_url": "https://api.github.com/users/adityapatwardhan/orgs",
        "received_events_url": "https://api.github.com/users/adityapatwardhan/received_events",
        "repos_url": "https://api.github.com/users/adityapatwardhan/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/adityapatwardhan/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/adityapatwardhan/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/adityapatwardhan"
      }
    ],
    "author_association": "CONTRIBUTOR",
    "body": "# PR Summary\r\n\r\nThe intent of this PR is to allow objects that have a custom default `outOfBand` format to be displayed in other formats without requiring users to use `-Force`.\r\n\r\nThe `outOfBand` format flag is used to identify formatting that should be used when rendering objects in PowerShell, even if other objects are being rendered in a completely different format. For example, if you invoke a command that is returning objects that are rendered by default in a table format, and within that command you have data sent on non-standard output streams (verbose, warning, debug, or information messages, or errors), those objects are considered out of band, but their default format is used regardless.\r\n\r\nTo solve this problem and allow objects with default, explicit, `outOfBand` custom formats to be formatted in other ways when piping those objects to `Format-List`, `Format-Table`, etc. cmdlets without using the `-Force` parameter, PowerShell needs to have an extra conditional check: if the objects use an explicit `outOfBand` format, _and_ if those objects are being written in standard output (i.e. not in the verbose, debug, warning, error, information, or progress streams), then treat those objects as if they are not out of band.\r\n\r\n## PR Context\r\n\r\nFixes #10408.\r\n\r\n## PR Checklist\r\n\r\n- [X] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [X] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [X] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [X] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [X] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [X] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [X] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
    "closed_at": "2020-05-03T18:00:09Z",
    "comments": 13,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10430/comments",
    "created_at": "2019-08-23T01:44:06Z",
    "draft": false,
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10430/events",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10430",
    "id": 484289286,
    "labels": [
      {
        "color": "bfd4f2",
        "default": false,
        "description": "",
        "id": 486893129,
        "name": "Stale",
        "node_id": "MDU6TGFiZWw0ODY4OTMxMjk=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Stale"
      },
      {
        "color": "fbca04",
        "default": false,
        "description": "Indicates that a PR should be marked as a general cmdlet change in the Change Log",
        "id": 1126735368,
        "name": "CL-General",
        "node_id": "MDU6TGFiZWwxMTI2NzM1MzY4",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/CL-General"
      },
      {
        "color": "ededed",
        "default": false,
        "description": "The PR was reviewed and requires changes or comments from the author before being accept",
        "id": 1389022155,
        "name": "Waiting on Author",
        "node_id": "MDU6TGFiZWwxMzg5MDIyMTU1",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Waiting%20on%20Author"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10430/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzEwMjAwODkz",
    "number": 10430,
    "performed_via_github_app": null,
    "pull_request": {
      "diff_url": "https://github.com/PowerShell/PowerShell/pull/10430.diff",
      "html_url": "https://github.com/PowerShell/PowerShell/pull/10430",
      "merged_at": null,
      "patch_url": "https://github.com/PowerShell/PowerShell/pull/10430.patch",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/pulls/10430"
    },
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10430/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10430/timeline",
    "title": "Allow types that have a default `outOfBand` custom format to be displayed in other formats without `-Force`",
    "updated_at": "2020-05-03T18:00:09Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10430",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "<!--\r\n\r\nFor Windows PowerShell 5.1 issues, suggestions, or feature requests please use the following link instead:\r\nWindows PowerShell [UserVoice](https://windowsserver.uservoice.com/forums/301869-powershell)\r\n\r\nThis repository is **ONLY** for PowerShell Core 6 issues.\r\n\r\n- Make sure you are able to repro it on the [latest released version](https://github.com/PowerShell/PowerShell/releases)\r\n- Search the existing issues.\r\n- Refer to the [FAQ](https://github.com/PowerShell/PowerShell/blob/master/docs/FAQ.md).\r\n- Refer to the [known issues](https://docs.microsoft.com/powershell/scripting/whats-new/known-issues-ps6?view=powershell-6).\r\n\r\n-->\r\n\r\nForeach-Object -Parallel doesn't recognize available commands when imported using the WindowsCompatibility module. This likely has to do with how those commands are imported using local remoting, but I haven't dug into the -Parallel implementation yet to see where the failure is.\r\n\r\n# Steps to reproduce\r\n\r\n```powershell\r\n# Import a windows module, doesn't matter which one. Here I'm importing WMI commands\r\nImport-WinModule Microsoft.Powershell.Management -Force\r\n# Can validate that commands imported with 'Get-Command Get-WMIObject'\r\nGet-Command Get-WMIObject\r\nCommandType     Name                                               Version    Source\r\n-----------     ----                                               -------    ------\r\nFunction        Get-WmiObject                                      1.0        Microsoft.PowerShell.Management.WinModule\r\n# Set a variable to iterate through\r\n$service = 'W32Time','WManSvc','PlugPlay'\r\n# Attempt to use new -Parallel flag\r\n$service | ForEach-Object -Parallel {Get-WmiObject -Class win32_service -Filter (\"Name = '{0}'\" -f $_)}\r\n\r\n# Output error (repeated 3 times)\r\nGet-WmiObject : The term 'Get-WmiObject' is not recognized as the name of a cmdlet, function, script file, or operable program.\r\nCheck the spelling of the name, or if a path was included, verify that the path is correct and try again.\r\nAt line:1 char:1\r\n+ Get-WmiObject -Class win32_service -Filter (\"Name = '{0}'\" -f $_)\r\n+ ~~~~~~~~~~~~~\r\n+ CategoryInfo          : ObjectNotFound: (Get-WmiObject:String) [], CommandNotFoundException\r\n+ FullyQualifiedErrorId : CommandNotFoundException\r\n```\r\n\r\n# Expected behavior\r\n\r\n```powershell\r\n# Should work like it does with the -Process flag:\r\n$service | ForEach-Object -Process {Get-WmiObject -Class win32_service -Filter (\"Name = '{0}'\" -f $_)} \r\n\r\nExitCode  : 0\r\nName      : W32Time\r\nProcessId : 1736\r\nStartMode : Manual\r\nState     : Running\r\nStatus    : OK\r\n\r\nExitCode  : 1077\r\nName      : WManSvc\r\nProcessId : 0\r\nStartMode : Manual\r\nState     : Stopped\r\nStatus    : OK\r\n\r\nExitCode  : 0\r\nName      : PlugPlay\r\nProcessId : 1036\r\nStartMode : Manual\r\nState     : Running\r\nStatus    : OK\r\n```\r\n\r\n# Actual behavior\r\n\r\n```powershell\r\n# Returns an error stating the command doesn't exist-\r\nGet-WmiObject : The term 'Get-WmiObject' is not recognized as the name of a cmdlet, function, script file, or operable program.\r\nCheck the spelling of the name, or if a path was included, verify that the path is correct and try again.\r\nAt line:1 char:1\r\n+ Get-WmiObject -Class win32_service -Filter (\"Name = '{0}'\" -f $_)\r\n+ ~~~~~~~~~~~~~\r\n+ CategoryInfo          : ObjectNotFound: (Get-WmiObject:String) [], CommandNotFoundException\r\n+ FullyQualifiedErrorId : CommandNotFoundException\r\n```\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.0.0-preview.3\r\nPSEdition                      Core\r\nGitCommitId                    7.0.0-preview.3\r\nOS                             Microsoft Windows 10.0.18362\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0…}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
    "closed_at": "2019-08-25T00:00:31Z",
    "comments": 4,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10429/comments",
    "created_at": "2019-08-22T22:08:16Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10429/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10429",
    "id": 484239390,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "ideally support can be provided via other mechanisms, but sometimes folks do open an issue to get a",
        "id": 311043053,
        "name": "Issue-Question",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNTM=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Question"
      },
      {
        "color": "ffffff",
        "default": false,
        "description": "The question is answered.",
        "id": 423531321,
        "name": "Resolution-Answered",
        "node_id": "MDU6TGFiZWw0MjM1MzEzMjE=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Resolution-Answered"
      },
      {
        "color": "5319e7",
        "default": false,
        "description": "cmdlets in the Microsoft.PowerShell.Core module",
        "id": 552752480,
        "name": "WG-Cmdlets-Core",
        "node_id": "MDU6TGFiZWw1NTI3NTI0ODA=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/WG-Cmdlets-Core"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10429/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0ODQyMzkzOTA=",
    "number": 10429,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10429/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10429/timeline",
    "title": "Foeach-Object -Parallel problems with functions imported by WindowsCompatibility module",
    "updated_at": "2019-08-25T00:00:31Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10429",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/8900272?v=4",
      "events_url": "https://api.github.com/users/awakun/events{/privacy}",
      "followers_url": "https://api.github.com/users/awakun/followers",
      "following_url": "https://api.github.com/users/awakun/following{/other_user}",
      "gists_url": "https://api.github.com/users/awakun/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/awakun",
      "id": 8900272,
      "login": "awakun",
      "node_id": "MDQ6VXNlcjg5MDAyNzI=",
      "organizations_url": "https://api.github.com/users/awakun/orgs",
      "received_events_url": "https://api.github.com/users/awakun/received_events",
      "repos_url": "https://api.github.com/users/awakun/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/awakun/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/awakun/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/awakun"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": {
      "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
      "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
      "followers_url": "https://api.github.com/users/TravisEz13/followers",
      "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
      "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/TravisEz13",
      "id": 10873629,
      "login": "TravisEz13",
      "node_id": "MDQ6VXNlcjEwODczNjI5",
      "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
      "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
      "repos_url": "https://api.github.com/users/TravisEz13/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/TravisEz13"
    },
    "assignees": [
      {
        "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
        "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
        "followers_url": "https://api.github.com/users/TravisEz13/followers",
        "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
        "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/TravisEz13",
        "id": 10873629,
        "login": "TravisEz13",
        "node_id": "MDQ6VXNlcjEwODczNjI5",
        "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
        "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
        "repos_url": "https://api.github.com/users/TravisEz13/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/TravisEz13"
      }
    ],
    "author_association": "MEMBER",
    "body": "# PR Summary\r\n\r\nTest (and build) changes to run validation on alpine 8, 9, and 10\r\n\r\n## PR Context\r\n\r\nAlpine has different behavior for some native tools (ping and date) which causes validation to fail.\r\nAlso when building test executables for alpine, using `-runtime linux-x64` will not build executable binaries, you must use `-runtime alpine-x64`.\r\nI've also created a new function in the common test helper to return platform information that is more granular than IsLinux/IsMacOS/IsWindows as we need to know when we're running on alpine as some tests are not going to work until libmi is delivered. so all of the session cmdlets aren't going to work.\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [ ] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
    "closed_at": "2019-08-24T18:35:34Z",
    "comments": 1,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10428/comments",
    "created_at": "2019-08-22T21:56:18Z",
    "draft": false,
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10428/events",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10428",
    "id": 484235608,
    "labels": [
      {
        "color": "fbca04",
        "default": false,
        "description": "Indicates that a PR should be marked as a test change in the Change Log",
        "id": 1126736452,
        "name": "CL-Test",
        "node_id": "MDU6TGFiZWwxMTI2NzM2NDUy",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/CL-Test"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10428/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": "2019-09-22T18:49:57Z",
      "closed_issues": 39,
      "created_at": "2019-08-19T21:02:56Z",
      "creator": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
        "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
        "followers_url": "https://api.github.com/users/TravisEz13/followers",
        "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
        "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/TravisEz13",
        "id": 10873629,
        "login": "TravisEz13",
        "node_id": "MDQ6VXNlcjEwODczNjI5",
        "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
        "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
        "repos_url": "https://api.github.com/users/TravisEz13/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/TravisEz13"
      },
      "description": "",
      "due_on": null,
      "html_url": "https://github.com/PowerShell/PowerShell/milestone/69",
      "id": 4587190,
      "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/milestones/69/labels",
      "node_id": "MDk6TWlsZXN0b25lNDU4NzE5MA==",
      "number": 69,
      "open_issues": 0,
      "state": "closed",
      "title": "7.0.0-preview.4",
      "updated_at": "2019-09-22T18:49:57Z",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/milestones/69"
    },
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzEwMTU5MzEw",
    "number": 10428,
    "performed_via_github_app": null,
    "pull_request": {
      "diff_url": "https://github.com/PowerShell/PowerShell/pull/10428.diff",
      "html_url": "https://github.com/PowerShell/PowerShell/pull/10428",
      "merged_at": "2019-08-24T18:35:34Z",
      "patch_url": "https://github.com/PowerShell/PowerShell/pull/10428.patch",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/pulls/10428"
    },
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10428/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10428/timeline",
    "title": "Alpine validation changes",
    "updated_at": "2019-09-19T17:51:29Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10428",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/10214008?v=4",
      "events_url": "https://api.github.com/users/JamesWTruher/events{/privacy}",
      "followers_url": "https://api.github.com/users/JamesWTruher/followers",
      "following_url": "https://api.github.com/users/JamesWTruher/following{/other_user}",
      "gists_url": "https://api.github.com/users/JamesWTruher/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/JamesWTruher",
      "id": 10214008,
      "login": "JamesWTruher",
      "node_id": "MDQ6VXNlcjEwMjE0MDA4",
      "organizations_url": "https://api.github.com/users/JamesWTruher/orgs",
      "received_events_url": "https://api.github.com/users/JamesWTruher/received_events",
      "repos_url": "https://api.github.com/users/JamesWTruher/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/JamesWTruher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JamesWTruher/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/JamesWTruher"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "# Steps to reproduce\r\n\r\n```|bash\r\npwsh-preview\r\n```\r\n\r\n# Expected behavior\r\n\r\nPowershell preview launches\r\n\r\n# Actual behavior\r\n\r\n```none\r\nError:\r\n  An assembly specified in the application dependencies manifest (pwsh.deps.json) was not found: \r\n    package: 'runtimepack.Microsoft.NETCore.App.Runtime.linux-arm64', version: '3.0.0-preview8-28405-07'\r\n    path: 'SOS_README.md'\r\n```\r\n\r\n# Environment data\r\n\r\nUsing `powershell-7.0.0-preview.3-linux-arm64.tar.gz` on Gentoo linux. \r\nPrevious preview2 and Powershell 6.2.2 releases work fine.",
    "closed_at": "2019-08-22T22:16:56Z",
    "comments": 1,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10427/comments",
    "created_at": "2019-08-22T20:42:13Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10427/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10427",
    "id": 484206694,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "ideally support can be provided via other mechanisms, but sometimes folks do open an issue to get a",
        "id": 311043053,
        "name": "Issue-Question",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNTM=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Question"
      },
      {
        "color": "ffffff",
        "default": false,
        "description": "The question is answered.",
        "id": 423531321,
        "name": "Resolution-Answered",
        "node_id": "MDU6TGFiZWw0MjM1MzEzMjE=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Resolution-Answered"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10427/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0ODQyMDY2OTQ=",
    "number": 10427,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10427/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10427/timeline",
    "title": "Cannot launch pwsh-preview 7 release 3 on arm64",
    "updated_at": "2019-08-23T10:52:18Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10427",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16889643?v=4",
      "events_url": "https://api.github.com/users/zigford/events{/privacy}",
      "followers_url": "https://api.github.com/users/zigford/followers",
      "following_url": "https://api.github.com/users/zigford/following{/other_user}",
      "gists_url": "https://api.github.com/users/zigford/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/zigford",
      "id": 16889643,
      "login": "zigford",
      "node_id": "MDQ6VXNlcjE2ODg5NjQz",
      "organizations_url": "https://api.github.com/users/zigford/orgs",
      "received_events_url": "https://api.github.com/users/zigford/received_events",
      "repos_url": "https://api.github.com/users/zigford/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/zigford/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zigford/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/zigford"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "# Steps to reproduce\r\n\r\n```powershell\r\n# OK: convert via cast (assigns $true)\r\n$b = [bool] [pscustomobject]::new()\r\n\r\n# !! BROKEN: convert via type constraint\r\n[bool] $b = [pscustomobject]::new()\r\n```\r\n\r\n# Expected behavior\r\n\r\nNo output. Both assignments should succeed.\r\n\r\n# Actual behavior\r\n\r\nThe 2nd statement causes the following error:\r\n\r\n```none\r\nCannot convert value \"System.Management.Automation.PSCustomObject\" to type \"System.Boolean\". \r\nBoolean parameters accept only Boolean values and numbers, such as $True, $False, 1 or 0\r\n```\r\n\r\n# Environment data\r\n\r\n```none\r\nPowerShell Core 7.0.0-preview.3\r\n```\r\n",
    "closed_at": null,
    "comments": 6,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10426/comments",
    "created_at": "2019-08-22T20:23:41Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10426/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10426",
    "id": 484194509,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "ideally support can be provided via other mechanisms, but sometimes folks do open an issue to get a",
        "id": 311043053,
        "name": "Issue-Question",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNTM=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Question"
      },
      {
        "color": "5319e7",
        "default": false,
        "description": "core PowerShell engine, interpreter, and runtime",
        "id": 401720735,
        "name": "WG-Engine",
        "node_id": "MDU6TGFiZWw0MDE3MjA3MzU=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/WG-Engine"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10426/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0ODQxOTQ1MDk=",
    "number": 10426,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10426/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10426/timeline",
    "title": "Type-constrained Boolean variables fail to implicitly convert from most types, such as PSObject / PSCustomObject instances",
    "updated_at": "2022-03-27T01:48:34Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10426",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    },
    "assignees": [
      {
        "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
        "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
        "followers_url": "https://api.github.com/users/iSazonov/followers",
        "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
        "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/iSazonov",
        "id": 22290914,
        "login": "iSazonov",
        "node_id": "MDQ6VXNlcjIyMjkwOTE0",
        "organizations_url": "https://api.github.com/users/iSazonov/orgs",
        "received_events_url": "https://api.github.com/users/iSazonov/received_events",
        "repos_url": "https://api.github.com/users/iSazonov/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/iSazonov"
      }
    ],
    "author_association": "MEMBER",
    "body": "<!-- Anything that looks like this is a comment and can't be seen after the Pull Request is created. -->\r\n\r\n# PR Summary\r\n\r\nRename default parametersetname from `DelimiterPath` back to ` Delimiter`\r\n\r\n## PR Context\r\n\r\nLooks like #8277 accidentally renamed the default parameter set to `DelimiterPath` even though it doesn't apply to ConvertTo-Csv nor ConvertFrom-Csv.  Also rename the parameter sets related to `-UseCulture` for `ConvertFrom-Csv` back to `UseCulture` since the `Path` suffix doesn't apply to this cmdlet and the extra parametersetname isn't used.\r\n\r\nFix https://github.com/PowerShell/PowerShell/issues/10423\r\n\r\n## PR Checklist\r\n\r\n- [x] [PR has a meaningful title](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n    - Use the present tense and imperative mood when describing your changes\r\n- [x] [Summarized changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] [Make sure all `.h`, `.cpp`, `.cs`, `.ps1` and `.psm1` files have the correct copyright header](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n- [x] This PR is ready to merge and is not [Work in Progress](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---work-in-progress).\r\n    - If the PR is work in progress, please add the prefix `WIP:` or `[ WIP ]` to the beginning of the title (the `WIP` bot will keep its status check at `Pending` while the prefix is present) and remove the prefix when the PR is ready.\r\n- **[Breaking changes](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#making-breaking-changes)**\r\n    - [x] None\r\n    - **OR**\r\n    - [ ] [Experimental feature(s) needed](https://github.com/MicrosoftDocs/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Experimental_Features.md)\r\n        - [ ] Experimental feature name(s): <!-- Experimental feature name(s) here -->\r\n- **User-facing changes**\r\n    - [x] Not Applicable\r\n    - **OR**\r\n    - [ ] [Documentation needed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#pull-request---submission)\r\n        - [ ] Issue filed: <!-- Number/link of that issue here -->\r\n- **Testing - New and feature**\r\n    - [x] N/A or can only be tested interactively\r\n    - **OR**\r\n    - [ ] [Make sure you've added a new test if existing tests do not effectively test the code changed](https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md#before-submitting)\r\n- **Tooling**\r\n    - [x] I have considered the user experience from a tooling perspective and don't believe tooling will be impacted.\r\n    - **OR**\r\n    - [ ] I have considered the user experience from a tooling perspective and enumerated concerns in the summary. This may include:\r\n        - Impact on [PowerShell Editor Services](https://github.com/PowerShell/PowerShellEditorServices) which is used in the [PowerShell extension](https://github.com/PowerShell/vscode-powershell) for VSCode (which runs in a different PS Host).\r\n        - Impact on Completions (both in the console and in editors) - one of PowerShell's most powerful features.\r\n        - Impact on [PSScriptAnalyzer](https://github.com/PowerShell/PSScriptAnalyzer) (which provides linting & formatting in the editor extensions).\r\n        - Impact on [EditorSyntax](https://github.com/PowerShell/EditorSyntax) (which provides syntax highlighting with in VSCode, GitHub, and many other editors).\r\n",
    "closed_at": "2019-08-23T04:08:41Z",
    "comments": 3,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10425/comments",
    "created_at": "2019-08-22T20:02:33Z",
    "draft": false,
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10425/events",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10425",
    "id": 484185340,
    "labels": [
      {
        "color": "fbca04",
        "default": false,
        "description": "Indicates that a PR should be marked as a Code Cleanup change in the Change Log",
        "id": 1126733813,
        "name": "CL-CodeCleanup",
        "node_id": "MDU6TGFiZWwxMTI2NzMzODEz",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/CL-CodeCleanup"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10425/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": "2019-09-22T18:49:57Z",
      "closed_issues": 39,
      "created_at": "2019-08-19T21:02:56Z",
      "creator": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
        "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
        "followers_url": "https://api.github.com/users/TravisEz13/followers",
        "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
        "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/TravisEz13",
        "id": 10873629,
        "login": "TravisEz13",
        "node_id": "MDQ6VXNlcjEwODczNjI5",
        "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
        "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
        "repos_url": "https://api.github.com/users/TravisEz13/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/TravisEz13"
      },
      "description": "",
      "due_on": null,
      "html_url": "https://github.com/PowerShell/PowerShell/milestone/69",
      "id": 4587190,
      "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/milestones/69/labels",
      "node_id": "MDk6TWlsZXN0b25lNDU4NzE5MA==",
      "number": 69,
      "open_issues": 0,
      "state": "closed",
      "title": "7.0.0-preview.4",
      "updated_at": "2019-09-22T18:49:57Z",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/milestones/69"
    },
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzEwMTE4MjUx",
    "number": 10425,
    "performed_via_github_app": null,
    "pull_request": {
      "diff_url": "https://github.com/PowerShell/PowerShell/pull/10425.diff",
      "html_url": "https://github.com/PowerShell/PowerShell/pull/10425",
      "merged_at": "2019-08-23T04:08:41Z",
      "patch_url": "https://github.com/PowerShell/PowerShell/pull/10425.patch",
      "url": "https://api.github.com/repos/PowerShell/PowerShell/pulls/10425"
    },
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10425/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10425/timeline",
    "title": "Rename default ParameterSetName back to `Delimiter` for `ConvertTo-Csv` & `ConvertFrom-Csv`",
    "updated_at": "2020-06-06T02:30:58Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10425",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Poweshell Version: 6.1.4\r\n\r\n`ErrorVariable` is not set when an error happens as seen in the screenshot below. However, if you use `+` append sign in front of the variable, it works.\r\n\r\n# Steps to reproduce\r\n\r\nBelow you will see that I try to run the command without the `+` to set the `ErrorVariable`, which won't work. Later, it works with `+` with a different parameter. In the first case, outputting the `$errorVariable` does not display anything. \r\n\r\n![image](https://user-images.githubusercontent.com/369188/63544666-ec711e00-c4e2-11e9-9fda-d3c42ec064b8.png)\r\n\r\n# Expected behavior\r\n\r\n`ErrorVariable` should be working without the need of `+` append operator in front.\r\n\r\n# Actual behavior\r\n\r\n`ErrorVariable` is not set when an error happens.\r\n\r\n# Environment data\r\n\r\n<!-- provide the output of $PSVersionTable -->\r\n![image](https://user-images.githubusercontent.com/369188/63544920-728d6480-c4e3-11e9-8304-743643080c42.png)\r\n\r\n",
    "closed_at": "2019-08-24T06:00:28Z",
    "comments": 9,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10424/comments",
    "created_at": "2019-08-22T19:49:48Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10424/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10424",
    "id": 484179719,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "ideally support can be provided via other mechanisms, but sometimes folks do open an issue to get a",
        "id": 311043053,
        "name": "Issue-Question",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNTM=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Question"
      },
      {
        "color": "ffffff",
        "default": false,
        "description": "The issue is caused by external component(s).",
        "id": 427077877,
        "name": "Resolution-External",
        "node_id": "MDU6TGFiZWw0MjcwNzc4Nzc=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Resolution-External"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10424/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0ODQxNzk3MTk=",
    "number": 10424,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10424/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10424/timeline",
    "title": "ErrorVariable is not set when using Get-InstalledModule cmdlet",
    "updated_at": "2019-08-24T06:00:28Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10424",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/369188?v=4",
      "events_url": "https://api.github.com/users/tarikguney/events{/privacy}",
      "followers_url": "https://api.github.com/users/tarikguney/followers",
      "following_url": "https://api.github.com/users/tarikguney/following{/other_user}",
      "gists_url": "https://api.github.com/users/tarikguney/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/tarikguney",
      "id": 369188,
      "login": "tarikguney",
      "node_id": "MDQ6VXNlcjM2OTE4OA==",
      "organizations_url": "https://api.github.com/users/tarikguney/orgs",
      "received_events_url": "https://api.github.com/users/tarikguney/received_events",
      "repos_url": "https://api.github.com/users/tarikguney/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/tarikguney/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tarikguney/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/tarikguney"
    }
  },
  {
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "COLLABORATOR",
    "body": "# Support Question\r\nPS7 adds `-QuoteFields` and `-UseQuotes` parameters to `ConvertTo-CSV` but also adds a new parameter set: **DelimiterPath**.\r\n\r\n### DelimiterPath (Default)\r\n```\r\nConvertTo-Csv [-InputObject] <PSObject> [-IncludeTypeInformation] [-NoTypeInformation]\r\n [-QuoteFields <String[]>] [-UseQuotes <QuoteKind>]  [<CommonParameters>]\r\n```\r\n\r\n### Delimiter\r\n```\r\nConvertTo-Csv [-InputObject] <PSObject> [[-Delimiter] <Char>] [-IncludeTypeInformation]\r\n [-NoTypeInformation] [-QuoteFields <String[]>] [-UseQuotes <QuoteKind>]  [<CommonParameters>]\r\n```\r\n\r\n### UseCulture\r\n```\r\nConvertTo-Csv [-InputObject] <PSObject> [-UseCulture] [-IncludeTypeInformation] [-NoTypeInformation]\r\n [-QuoteFields <String[]>] [-UseQuotes <QuoteKind>]  [<CommonParameters>]\r\n```\r\n\r\nWhat is the purpose of this parameter set? It looks like an error. The DelimiterPath parameter set does not contain any parameters that deal with paths or delimiters.\r\n\r\n## Official support\r\n\r\n[PowerShell Support Lifecycle](https://aka.ms/pslifecycle)\r\n\r\n## Community Resources\r\n\r\n[Slack][powershell-slack] and [Discord][powershell-discord] Community Chat - Interactive chat with other PowerShell enthusiasts. Both Slack and Discord are bridged via a bot and can seamlessly talk to each other.\r\n[PowerShell.org Forum](https://powershell.org/forums/) - Search or post new general PowerShell usage questions\r\n\r\n[powershell-slack]: https://join.slack.com/t/powershell/shared_invite/enQtMzA3MDcxNTM5MTkxLTBmMWIyNzhkYzVjNGRiOTgxZmFlN2E0ZmVmOWU5NDczNTY2NDFhZjFlZTM1MTZiMWIzZDcwMGYzNjQ3YTRkNWM\r\n[powershell-discord]: https://discordapp.com/invite/AtzXnJM\r\n",
    "closed_at": "2019-08-23T04:08:41Z",
    "comments": 1,
    "comments_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10423/comments",
    "created_at": "2019-08-22T18:45:55Z",
    "events_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10423/events",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10423",
    "id": 484152983,
    "labels": [
      {
        "color": "fc2929",
        "default": false,
        "description": "ideally support can be provided via other mechanisms, but sometimes folks do open an issue to get a",
        "id": 311043053,
        "name": "Issue-Question",
        "node_id": "MDU6TGFiZWwzMTEwNDMwNTM=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Issue-Question"
      },
      {
        "color": "ffffff",
        "default": false,
        "description": "The issue is fixed.",
        "id": 423534444,
        "name": "Resolution-Fixed",
        "node_id": "MDU6TGFiZWw0MjM1MzQ0NDQ=",
        "url": "https://api.github.com/repos/PowerShell/PowerShell/labels/Resolution-Fixed"
      }
    ],
    "labels_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10423/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0ODQxNTI5ODM=",
    "number": 10423,
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10423/reactions"
    },
    "repository_url": "https://api.github.com/repos/PowerShell/PowerShell",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10423/timeline",
    "title": "PS7 - What is the purpose of the DelimiterPath parameter set in ConvertTo-Csv",
    "updated_at": "2019-09-19T17:51:36Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10423",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/19415881?v=4",
      "events_url": "https://api.github.com/users/sdwheeler/events{/privacy}",
      "followers_url": "https://api.github.com/users/sdwheeler/followers",
      "following_url": "https://api.github.com/users/sdwheeler/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdwheeler/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/sdwheeler",
      "id": 19415881,
      "login": "sdwheeler",
      "node_id": "MDQ6VXNlcjE5NDE1ODgx",
      "organizations_url": "https://api.github.com/users/sdwheeler/orgs",
      "received_events_url": "https://api.github.com/users/sdwheeler/received_events",
      "repos_url": "https://api.github.com/users/sdwheeler/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/sdwheeler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdwheeler/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/sdwheeler"
    }
  }
]
