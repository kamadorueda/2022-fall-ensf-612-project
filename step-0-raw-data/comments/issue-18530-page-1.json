[
  {
    "author_association": "CONTRIBUTOR",
    "body": "It looks like this bug was introduced in 7.3.0-preview.7.  More specifically, I believe it was introduced by #16355.  Check this out:\r\n\r\n```\r\nPS7.3> cmd /c powershell -noprofile\r\nWindows PowerShell\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nPS5.1> Get-PSDrive cert\r\nGet-PSDrive : Cannot find drive. A drive with the name 'cert' does not exist.\r\nAt line:1 char:1\r\n+ Get-PSDrive cert\r\n+ ~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : ObjectNotFound: (cert:String) [Get-PSDrive], DriveNotFoundException\r\n    + FullyQualifiedErrorId : GetLocationNoMatchingDrive,Microsoft.PowerShell.Commands.GetPSDriveCommand\r\n\r\nPS5.1> Import-Module Microsoft.PowerShell.Security\r\nImport-Module : The following error occurred while loading the extended type data file: Error in TypeData \"System.Security.AccessControl.ObjectSecurity\":\r\nThe member AuditToString is already present.\r\nError in TypeData \"System.Security.AccessControl.ObjectSecurity\": The member AccessToString is already present.\r\nError in TypeData \"System.Security.AccessControl.ObjectSecurity\": The member Sddl is already present.\r\nError in TypeData \"System.Security.AccessControl.ObjectSecurity\": The member Access is already present.\r\nError in TypeData \"System.Security.AccessControl.ObjectSecurity\": The member Group is already present.\r\nError in TypeData \"System.Security.AccessControl.ObjectSecurity\": The member Owner is already present.\r\nError in TypeData \"System.Security.AccessControl.ObjectSecurity\": The member Path is already present.\r\nAt line:1 char:1\r\n+ Import-Module Microsoft.PowerShell.Security\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : InvalidOperation: (:) [Import-Module], RuntimeException\r\n    + FullyQualifiedErrorId : FormatXmlUpdateException,Microsoft.PowerShell.Commands.ImportModuleCommand\r\n\r\nPS5.1> Import-Module Microsoft.PowerShell.Security -RequiredVersion 3.0.0.0\r\nPS5.1> Get-PSDrive cert\r\n\r\nName           Used (GB)     Free (GB) Provider      Root                                                                                   CurrentLocation\r\n----           ---------     --------- --------      ----                                                                                   ---------------\r\nCert                                   Certificate   \\\r\n\r\n```\r\n\r\nHere's what I think is happening: PowerShell 7 modifies the value of `PSModulePath` for the special case of [launching Windows PowerShell from PowerShell 7](https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_psmodulepath?view=powershell-7.3#starting-windows-powershell-from-powershell-7).  In this scenario, however, PowerShell 7 is launching `cmd`, not `PowerShell.exe`, so the special handling of `PSModulePath` doesn't happen, and Windows PowerShell launches with PowerShell 7 modules in its `PSModulePath`.  (What initially tipped me off was the surprise of seeing history-based prediction in Windows PowerShell.)\r\n\r\nSince the PowerShell 7 version of `Microsoft.PowerShell.Security` is the latest version available to it in this scenario, that's what Windows PowerShell tries to load.  Until 7.3.0-preview.7, Windows PowerShell was able to load this PowerShell 7 module.  Now, when it tries to import the PowerShell 7 version, it throws errors for the types that were moved into the module in #16355.\r\n\r\nIn the meantime, as a workaround, if you're able to modify the scripts that started failing on you, have them explicitly import version 3.0.0.0 of `Microsoft.PowerShell.Security` before attempting to access `cert:\\`",
    "created_at": "2022-11-12T10:14:27Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/18530#issuecomment-1312446352",
    "id": 1312446352,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/18530",
    "node_id": "IC_kwDOAvT7bc5OOleQ",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1312446352/reactions"
    },
    "updated_at": "2022-11-12T10:14:27Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1312446352",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/38249738?v=4",
      "events_url": "https://api.github.com/users/dwtaber/events{/privacy}",
      "followers_url": "https://api.github.com/users/dwtaber/followers",
      "following_url": "https://api.github.com/users/dwtaber/following{/other_user}",
      "gists_url": "https://api.github.com/users/dwtaber/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/dwtaber",
      "id": 38249738,
      "login": "dwtaber",
      "node_id": "MDQ6VXNlcjM4MjQ5NzM4",
      "organizations_url": "https://api.github.com/users/dwtaber/orgs",
      "received_events_url": "https://api.github.com/users/dwtaber/received_events",
      "repos_url": "https://api.github.com/users/dwtaber/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/dwtaber/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dwtaber/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/dwtaber"
    }
  }
]
