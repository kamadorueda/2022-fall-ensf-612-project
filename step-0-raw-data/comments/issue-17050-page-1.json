[
  {
    "author_association": "COLLABORATOR",
    "body": "Native executables are treated as just any other command in PowerShell. When PowerShell processes the line it will convert each value into positional arguments and any token that starts with `-` is treated as a parameter name. We can see this behaviour through a simple function that replicates your native executable but also shows the metadata on the arguments that the tokenizer applies:\r\n\r\n```powershell\r\nFunction Test-Function {\r\n    [System.Management.Automation.PSSerializer]::Serialize($args)\r\n    for ($i = 0; $i -lt $args.Length; $i++) {\r\n        \"[$i] $($args[$i])\"\r\n    }\r\n}\r\n\r\nTest-Function -some=some.key -skey=a.main\r\n\r\n<Objs Version=\"1.1.0.1\" xmlns=\"http://schemas.microsoft.com/powershell/2004/04\">\r\n  <Obj RefId=\"0\">\r\n    <TN RefId=\"0\">\r\n      <T>System.Object[]</T>\r\n      <T>System.Array</T>\r\n      <T>System.Object</T>\r\n    </TN>\r\n    <LST>\r\n      <Obj RefId=\"1\">\r\n        <S>-some=some</S>\r\n        <MS>\r\n          <S N=\"&lt;CommandParameterName&gt;\">some=some</S>\r\n        </MS>\r\n      </Obj>\r\n      <S>.key</S>\r\n      <Obj RefId=\"2\">\r\n        <S>-skey=a</S>\r\n        <MS>\r\n          <S N=\"&lt;CommandParameterName&gt;\">skey=a</S>\r\n        </MS>\r\n      </Obj>\r\n      <S>.main</S>\r\n    </LST>\r\n  </Obj>\r\n</Objs>\r\n[0] -some=some\r\n[1] .key\r\n[2] -skey=a\r\n[3] .main\r\n```\r\n\r\nYou can see that the arguments starting with `-` have the special note properties `<CommandParameterName>` and stop just before `.` because `.` cannot be used in a parameter name (with the tokenizer). PowerShell doesn't do anything different for native executables, it needs to still tokenize the raw input from that string into an array and this is how it works.\r\n\r\nTo avoid this issue is to quote the entire value so it's treated as a single value or use an array.\r\n\r\n```powershell\r\n# Quoting will have the parser read it all until the quote is ended\r\nmy.exe '-some=some.key' '-skey=a.main'\r\n\r\n# Note this won't work for the Test-Function above but is fine for native exes\r\nmy.exe @('-some=some.key', '-skey=a.main')\r\n```",
    "created_at": "2022-03-23T20:44:06Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17050#issuecomment-1076801718",
    "id": 1076801718,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17050",
    "node_id": "IC_kwDOAvT7bc5ALrC2",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1076801718/reactions"
    },
    "updated_at": "2022-03-23T20:44:06Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1076801718",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/8462645?v=4",
      "events_url": "https://api.github.com/users/jborean93/events{/privacy}",
      "followers_url": "https://api.github.com/users/jborean93/followers",
      "following_url": "https://api.github.com/users/jborean93/following{/other_user}",
      "gists_url": "https://api.github.com/users/jborean93/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jborean93",
      "id": 8462645,
      "login": "jborean93",
      "node_id": "MDQ6VXNlcjg0NjI2NDU=",
      "organizations_url": "https://api.github.com/users/jborean93/orgs",
      "received_events_url": "https://api.github.com/users/jborean93/received_events",
      "repos_url": "https://api.github.com/users/jborean93/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jborean93/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jborean93/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jborean93"
    }
  }
]
