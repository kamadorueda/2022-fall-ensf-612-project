[
  {
    "author_association": "COLLABORATOR",
    "body": "The referenced code takes a subset of the PowerShell syntax and turns it into .NET delegates but it is essentially a different language (e.g. no commands) . PowerShell concurrency is fundamentally based on runspaces. I wrote an RFC for a task(ish) based model of concurrency a while back [Native Support for Concurrent Programming in PowerShell](https://github.com/PowerShell/PowerShell-RFC/blob/master/1-Draft/RFC0023-Native-Support-for-Concurrent-Programming-in-PowerShell.md) but it hasn't gone anywhere. As far as `await` goes, I suspect doing the lift-and-split that C# does would be tricky in PowerShell (but I haven't looked at it a whole lot.) Now I do like Golang's model of concurrency with tasks and channels - maybe we should do that :-) \r\n\r\nAnyway, can you provide more specific scenarios/examples of what you'd like to do? Even if we can't do a fully general implementation, I sure there's something useful we can do.",
    "created_at": "2018-04-24T17:00:36Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6716#issuecomment-384006228",
    "id": 384006228,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6716",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDAwNjIyOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/384006228/reactions"
    },
    "updated_at": "2018-04-24T17:00:36Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/384006228",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6876108?v=4",
      "events_url": "https://api.github.com/users/BrucePay/events{/privacy}",
      "followers_url": "https://api.github.com/users/BrucePay/followers",
      "following_url": "https://api.github.com/users/BrucePay/following{/other_user}",
      "gists_url": "https://api.github.com/users/BrucePay/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/BrucePay",
      "id": 6876108,
      "login": "BrucePay",
      "node_id": "MDQ6VXNlcjY4NzYxMDg=",
      "organizations_url": "https://api.github.com/users/BrucePay/orgs",
      "received_events_url": "https://api.github.com/users/BrucePay/received_events",
      "repos_url": "https://api.github.com/users/BrucePay/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/BrucePay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BrucePay/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/BrucePay"
    }
  },
  {
    "author_association": "NONE",
    "body": "Sure thing! So we are in the middle of a rewrite of https://github.com/PowerShell/Polaris to a pure PowerShell implementation and are currently using HttpListener which works fine cross-platform for now but as HttpListener doesn't seem to be getting any development love lately we're looking at the new hotness Kestrel.\r\n\r\nWe are currently working with HttpListener's event based asynchronous support and using @oising's marvelous function New-ScriptBlockCallback to provide an AsyncCallback. I was hoping to find the same thing in Kestrel but it appears that they only support the task based asynchronous pattern which I can't see an easy way to convert to an event based pattern.\r\n\r\nThe sample code that I would love to write and just have work is this sample:  (simplified from this [sample in C#](https://github.com/aspnet/Docs/blob/master/aspnetcore/fundamentals/servers/kestrel/sample2/Startup.cs))\r\n\r\n```ps\r\nImport-Module .\\lib\\Microsoft.AspNetCore.dll\r\nImport-Module .\\lib\\Microsoft.AspNetCore.Diagnostics.dll\r\nImport-Module .\\lib\\Microsoft.AspNetCore.Hosting.dll\r\nImport-Module .\\lib\\Microsoft.AspNetCore.Server.Kestrel.dll\r\n\r\nclass StartUp {\r\n    [void] Configure([IApplicationBuilder]$App){\r\n        [DeveloperExceptionPageExtensions]::UseDeveloperExceptionPage($App)\r\n        [RunExtensions]::Run($App, async $context => {\r\n                param($context)\r\n                return ([Microsoft.AspNetCore.Http.HttpResponseWritingExtensions]::WriteAsync($Context.Response, \"Hello World\", [Threading.CancellationToken]::None))\r\n      })\r\n    }\r\n}\r\n\r\n\r\n#$Env:ASPNETCORE_ENVIRONMENT = \"Development\"\r\n\r\n$WebHostBuilder = $Null\r\n[IWebHostBuilder]$WebHostBuilder = [Microsoft.AspNetCore.WebHost]::CreateDefaultBuilder()\r\n$WebHostBuilder = [WebHostBuilderExtensions]::UseStartup($WebHostBuilder, [StartUp])\r\n$WebHostBuilder = [WebHostBuilderKestrelExtensions]::UseKestrel($WebHostBuilder)\r\n$WebHost = $WebHostBuilder.Build()\r\n\r\n$Result = $WebHost.StartAsync()\r\n```\r\n\r\nThis is my specific use-case at the moment but I think there are quite a few other .Net projects that rely heavily on the task based asynchronous pattern that are currently fairly complex to work with natively in PowerShell.\r\n\r\nThanks for your thoughts!",
    "created_at": "2018-04-24T22:35:06Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6716#issuecomment-384101391",
    "id": 384101391,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6716",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDEwMTM5MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/384101391/reactions"
    },
    "updated_at": "2018-04-24T22:36:29Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/384101391",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6989492?v=4",
      "events_url": "https://api.github.com/users/Tiberriver256/events{/privacy}",
      "followers_url": "https://api.github.com/users/Tiberriver256/followers",
      "following_url": "https://api.github.com/users/Tiberriver256/following{/other_user}",
      "gists_url": "https://api.github.com/users/Tiberriver256/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/Tiberriver256",
      "id": 6989492,
      "login": "Tiberriver256",
      "node_id": "MDQ6VXNlcjY5ODk0OTI=",
      "organizations_url": "https://api.github.com/users/Tiberriver256/orgs",
      "received_events_url": "https://api.github.com/users/Tiberriver256/received_events",
      "repos_url": "https://api.github.com/users/Tiberriver256/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/Tiberriver256/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Tiberriver256/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/Tiberriver256"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@Tiberriver256 Thanks!",
    "created_at": "2018-04-24T23:30:44Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6716#issuecomment-384112385",
    "id": 384112385,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6716",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDExMjM4NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/384112385/reactions"
    },
    "updated_at": "2018-04-24T23:30:44Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/384112385",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6876108?v=4",
      "events_url": "https://api.github.com/users/BrucePay/events{/privacy}",
      "followers_url": "https://api.github.com/users/BrucePay/followers",
      "following_url": "https://api.github.com/users/BrucePay/following{/other_user}",
      "gists_url": "https://api.github.com/users/BrucePay/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/BrucePay",
      "id": 6876108,
      "login": "BrucePay",
      "node_id": "MDQ6VXNlcjY4NzYxMDg=",
      "organizations_url": "https://api.github.com/users/BrucePay/orgs",
      "received_events_url": "https://api.github.com/users/BrucePay/received_events",
      "repos_url": "https://api.github.com/users/BrucePay/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/BrucePay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BrucePay/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/BrucePay"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "So, back when I had more ideas than the focus to complete most of them, I wrote a threads/tasks prototype extension to my old PSEventing library that could handle tasks, apm (iasyncresult) and callbacks. It got annoying as I tried to deal with runspaces, and while I had solutions, it just seemed to unwieldy and inelegant so I just got bored with it. Anyway, you may have some luck if you grok  `System.Threading.Tasks.Task.FromAsync` (APM to Task methods) and the non-public static class `System.Threading.Tasks.TaskToApm` which goes in the other direction: Task to APM.",
    "created_at": "2018-04-27T16:48:33Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6716#issuecomment-385028428",
    "id": 385028428,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6716",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTAyODQyOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/385028428/reactions"
    },
    "updated_at": "2018-04-27T16:48:33Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/385028428",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1844001?v=4",
      "events_url": "https://api.github.com/users/oising/events{/privacy}",
      "followers_url": "https://api.github.com/users/oising/followers",
      "following_url": "https://api.github.com/users/oising/following{/other_user}",
      "gists_url": "https://api.github.com/users/oising/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/oising",
      "id": 1844001,
      "login": "oising",
      "node_id": "MDQ6VXNlcjE4NDQwMDE=",
      "organizations_url": "https://api.github.com/users/oising/orgs",
      "received_events_url": "https://api.github.com/users/oising/received_events",
      "repos_url": "https://api.github.com/users/oising/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/oising/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/oising/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/oising"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Ok, so that works. \r\n\r\n```\r\nfind-module poke | install-module -scope currentuser\r\nipmo poke\r\n$tasksToApm = peek -Name System.Threading.Tasks.TaskToApm\r\n$task = [System.Threading.Tasks.Task]::CompletedTask\r\n$cb = New-ScriptBlockCallback -Callback { write-host \"completed!\" }\r\n$ar = $tasksToApm.Begin($task, $cb, $null)\r\ncompleted!\r\n```\r\n\r\nObviously I'm not suggesting a dependency on my Poke module, but it's just to facilitate the proof of concept here :)",
    "created_at": "2018-04-27T17:12:24Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6716#issuecomment-385035099",
    "id": 385035099,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6716",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTAzNTA5OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 1,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/385035099/reactions"
    },
    "updated_at": "2018-04-27T17:13:57Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/385035099",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1844001?v=4",
      "events_url": "https://api.github.com/users/oising/events{/privacy}",
      "followers_url": "https://api.github.com/users/oising/followers",
      "following_url": "https://api.github.com/users/oising/following{/other_user}",
      "gists_url": "https://api.github.com/users/oising/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/oising",
      "id": 1844001,
      "login": "oising",
      "node_id": "MDQ6VXNlcjE4NDQwMDE=",
      "organizations_url": "https://api.github.com/users/oising/orgs",
      "received_events_url": "https://api.github.com/users/oising/received_events",
      "repos_url": "https://api.github.com/users/oising/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/oising/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/oising/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/oising"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@BrucePay \r\n\r\n> The referenced code takes a subset of the PowerShell syntax and turns it into .NET delegates but it is essentially a different language (e.g. no commands) .\r\n\r\nI believe you're thinking of [PSLambda](https://github.com/SeeminglyScience/PSLambda) :)\r\n\r\nThe referenced code was an earlier attempt with a similar idea, but it just creates an lambda expression that invokes the script block against a `RunspacePool`.",
    "created_at": "2018-04-27T20:20:06Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6716#issuecomment-385083392",
    "id": 385083392,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6716",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTA4MzM5Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/385083392/reactions"
    },
    "updated_at": "2018-04-27T20:20:06Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/385083392",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "NONE",
    "body": "I found this tweet today from David Fowl from AspNet Core Team : \r\n \r\nhttps://twitter.com/davidfowl/status/1004237863913906176\r\n> Next, If you ever need to invoke a method on a type via reflection and that method could be async, we have a helper that we use everywhere in the http://ASP.NET  Core code base that is highly optimized and flexible. The ObjectMethodExecutor \r\n\r\nhttps://github.com/aspnet/Extensions/blob/ff87989d893b000aac1bfef0157c92be1f04f714/shared/Microsoft.Extensions.ObjectMethodExecutor.Sources/ObjectMethodExecutor.cs\r\n\r\nDo you think this code could be implemented as keyword \"await\" in PowerShell ?\r\n\r\n\r\n\r\n",
    "created_at": "2019-04-06T13:03:48Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6716#issuecomment-480502495",
    "id": 480502495,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6716",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MDUwMjQ5NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/480502495/reactions"
    },
    "updated_at": "2019-04-06T13:03:48Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/480502495",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6187529?v=4",
      "events_url": "https://api.github.com/users/fMichaleczek/events{/privacy}",
      "followers_url": "https://api.github.com/users/fMichaleczek/followers",
      "following_url": "https://api.github.com/users/fMichaleczek/following{/other_user}",
      "gists_url": "https://api.github.com/users/fMichaleczek/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/fMichaleczek",
      "id": 6187529,
      "login": "fMichaleczek",
      "node_id": "MDQ6VXNlcjYxODc1Mjk=",
      "organizations_url": "https://api.github.com/users/fMichaleczek/orgs",
      "received_events_url": "https://api.github.com/users/fMichaleczek/received_events",
      "repos_url": "https://api.github.com/users/fMichaleczek/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/fMichaleczek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fMichaleczek/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/fMichaleczek"
    }
  },
  {
    "author_association": "NONE",
    "body": "Would it be possible to implement `await` as a cmdlet instead of a keyword?  The problem I see with JS's `await` is that it ruins chaining and would have similar impact to PowerShell pipelines.  I think the semantics around `Job`s circumvent this issue--perhaps we can use similar semantics for Tasks.\r\n\r\n```powershell\r\n1..10 | % {Invoke-WebRequest \"https://mysite?i=$_\" -Async} | Wait-Task | % {Invoke-Something $_}\r\n```",
    "created_at": "2019-07-06T14:43:57Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6716#issuecomment-508931484",
    "id": 508931484,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6716",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwODkzMTQ4NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 5,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 5,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/508931484/reactions"
    },
    "updated_at": "2019-07-06T14:45:39Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/508931484",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3680671?v=4",
      "events_url": "https://api.github.com/users/chriskuech/events{/privacy}",
      "followers_url": "https://api.github.com/users/chriskuech/followers",
      "following_url": "https://api.github.com/users/chriskuech/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriskuech/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/chriskuech",
      "id": 3680671,
      "login": "chriskuech",
      "node_id": "MDQ6VXNlcjM2ODA2NzE=",
      "organizations_url": "https://api.github.com/users/chriskuech/orgs",
      "received_events_url": "https://api.github.com/users/chriskuech/received_events",
      "repos_url": "https://api.github.com/users/chriskuech/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/chriskuech/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriskuech/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/chriskuech"
    }
  },
  {
    "author_association": "NONE",
    "body": "Also, when working with tasks and parallel stuff, a lot of functionality is implemented as extension methods, so easy, straight forward access to extension methods would be great in this context.",
    "created_at": "2019-07-26T09:19:57Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6716#issuecomment-515376374",
    "id": 515376374,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6716",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTM3NjM3NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/515376374/reactions"
    },
    "updated_at": "2019-07-26T09:19:57Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/515376374",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7513795?v=4",
      "events_url": "https://api.github.com/users/Bartolomeus-649/events{/privacy}",
      "followers_url": "https://api.github.com/users/Bartolomeus-649/followers",
      "following_url": "https://api.github.com/users/Bartolomeus-649/following{/other_user}",
      "gists_url": "https://api.github.com/users/Bartolomeus-649/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/Bartolomeus-649",
      "id": 7513795,
      "login": "Bartolomeus-649",
      "node_id": "MDQ6VXNlcjc1MTM3OTU=",
      "organizations_url": "https://api.github.com/users/Bartolomeus-649/orgs",
      "received_events_url": "https://api.github.com/users/Bartolomeus-649/received_events",
      "repos_url": "https://api.github.com/users/Bartolomeus-649/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/Bartolomeus-649/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Bartolomeus-649/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/Bartolomeus-649"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Couldn't a Task continuation be represented by a specialization of a ThreadJob?",
    "created_at": "2019-09-05T19:47:36Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6716#issuecomment-528550775",
    "id": 528550775,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6716",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyODU1MDc3NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/528550775/reactions"
    },
    "updated_at": "2019-09-05T19:47:36Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/528550775",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1844001?v=4",
      "events_url": "https://api.github.com/users/oising/events{/privacy}",
      "followers_url": "https://api.github.com/users/oising/followers",
      "following_url": "https://api.github.com/users/oising/following{/other_user}",
      "gists_url": "https://api.github.com/users/oising/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/oising",
      "id": 1844001,
      "login": "oising",
      "node_id": "MDQ6VXNlcjE4NDQwMDE=",
      "organizations_url": "https://api.github.com/users/oising/orgs",
      "received_events_url": "https://api.github.com/users/oising/received_events",
      "repos_url": "https://api.github.com/users/oising/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/oising/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/oising/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/oising"
    }
  }
]
