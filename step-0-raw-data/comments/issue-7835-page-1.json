[
  {
    "author_association": "COLLABORATOR",
    "body": "As an extension of the available `[PSTypeName()]` this would be hugely useful. Love it.",
    "created_at": "2018-09-21T17:45:14Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7835#issuecomment-423618513",
    "id": 423618513,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7835",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzYxODUxMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/423618513/reactions"
    },
    "updated_at": "2018-09-21T17:45:14Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/423618513",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Perhaps you'd want to apply other validate attributes to properties.\r\n```powershell\r\n[Parameter()]\r\n[Property(\r\n    [ValidateRange(0, 10)]\r\n    $Count,  \r\n    [Mandatory = $true, ValidateNotNull()]\r\n    $Name\r\n)]\r\n[PSObject]$InputObject",
    "created_at": "2018-09-23T07:29:55Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7835#issuecomment-423797561",
    "id": 423797561,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7835",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzc5NzU2MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 1,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/423797561/reactions"
    },
    "updated_at": "2018-09-24T05:04:12Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/423797561",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Now *that* is a fun idea! Love it! That might have to come enclosed in a script block to avoid needing to create a dozen special cases for the parser, though!",
    "created_at": "2018-09-23T11:53:00Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7835#issuecomment-423810997",
    "id": 423810997,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7835",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzgxMDk5Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/423810997/reactions"
    },
    "updated_at": "2018-09-23T11:53:00Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/423810997",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "It will be hard to implement efficiently. Member lookup on PSObject is currently very expensive, including quite a lot of allocations. Could probably be solved if we add new operations of PSObject, that doesn't retreive matching properties, but just confirms their existence.\r\n\r\nFor CLR members, we could cache results based on type, but for PSObjects it's more difficult.\r\n\r\nI like the idea, though. People concerned about performance have other options.\r\n\r\n",
    "created_at": "2018-09-23T21:50:35Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7835#issuecomment-423850609",
    "id": 423850609,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7835",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzg1MDYwOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/423850609/reactions"
    },
    "updated_at": "2018-09-23T21:50:35Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/423850609",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3505151?v=4",
      "events_url": "https://api.github.com/users/powercode/events{/privacy}",
      "followers_url": "https://api.github.com/users/powercode/followers",
      "following_url": "https://api.github.com/users/powercode/following{/other_user}",
      "gists_url": "https://api.github.com/users/powercode/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/powercode",
      "id": 3505151,
      "login": "powercode",
      "node_id": "MDQ6VXNlcjM1MDUxNTE=",
      "organizations_url": "https://api.github.com/users/powercode/orgs",
      "received_events_url": "https://api.github.com/users/powercode/received_events",
      "repos_url": "https://api.github.com/users/powercode/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/powercode/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/powercode/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/powercode"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> It will be hard to implement efficiently.\r\n\r\nWe could consider this as proactive vs reactive. You already implemented efficient proactive approch to create a set of similar objects. If users can not use this approach they need reactive approach which is similar to the proposed here. PowerShell engine should be smart enough to turn off the second when using the first.",
    "created_at": "2018-09-24T05:16:02Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7835#issuecomment-423878634",
    "id": 423878634,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7835",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzg3ODYzNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/423878634/reactions"
    },
    "updated_at": "2018-09-24T05:16:02Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/423878634",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "I'd suggest using class syntax, much like you'd specify a hypothetical interface that inputs *could* implement.\r\n\r\nI use this basic idea in my prototype formatting engine, you can see examples [here](https://github.com/lzybkr/PSMore/tree/master/src/DefaultFormats).\r\n\r\nApplying the idea here, it might look like:\r\n\r\n```powershell\r\nclass SourceInfoProxy\r\n{\r\n    [string]$SourceFile\r\n    [int]$SourceLineNumber\r\n}\r\n\r\nfunction foo\r\n{\r\n    param(\r\n        [Parameter()]\r\n        [ValidateDuckType([SourceInfoProxy])]\r\n        [PSObject]$InputObject\r\n    )\r\n}\r\n\r\n# or maybe the following - which could convert after validation,\r\n# so maybe it's an ArgumentTransformation attribute instead.\r\nfunction foo\r\n{\r\n    param(\r\n        [Parameter()]\r\n        [ValidateDuckType()]\r\n        [SourceInfoProxy]$InputObject\r\n    )\r\n}\r\n```\r\n\r\nYou could go one ",
    "created_at": "2018-09-24T05:30:45Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7835#issuecomment-423879897",
    "id": 423879897,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7835",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzg3OTg5Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 4,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 4,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/423879897/reactions"
    },
    "updated_at": "2018-09-24T05:30:45Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/423879897",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2148248?v=4",
      "events_url": "https://api.github.com/users/lzybkr/events{/privacy}",
      "followers_url": "https://api.github.com/users/lzybkr/followers",
      "following_url": "https://api.github.com/users/lzybkr/following{/other_user}",
      "gists_url": "https://api.github.com/users/lzybkr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lzybkr",
      "id": 2148248,
      "login": "lzybkr",
      "node_id": "MDQ6VXNlcjIxNDgyNDg=",
      "organizations_url": "https://api.github.com/users/lzybkr/orgs",
      "received_events_url": "https://api.github.com/users/lzybkr/received_events",
      "repos_url": "https://api.github.com/users/lzybkr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lzybkr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lzybkr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lzybkr"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "I like that idea, @lzybkr ... but now I have an even better idea than an attribute ... \r\n\r\nIn the second example, as you say, it's an ArgumentTransformation attribute. It's basically a parameter-binding version of injecting a Select-Object and a cast. \r\n\r\nIn the past I've written reshaping filters like this:\r\n\r\n```PowerShell\r\nfilter ConvertTo-SourceInfoProxy {\r\n[CmdletBinding()]\r\nparam(\r\n    [Parameter(ValueFromPipelineByPropertyName)]\r\n    [Alias(\"Line\",\"LineNumber\")]\r\n    [int]$SourceLineNumber,\r\n\r\n    [Parameter(ValueFromPipelineByPropertyName)]\r\n    [Alias(\"Path\",\"PSPath\", \"FullName\")]\r\n    [string]$SourceFile\r\n)\r\n[SourceInfoProxy]$PSBoundParameters\r\n}\r\n```\r\n\r\nWhat if we could get _all_ of that functionality (including aliases) into the parameter binding itself?\r\n\r\nThe [Alias] property _can_ be applied to properties in classes (although it doesn't currently seem to do anything). I could, therefore trivially _generate_ the filter above, if we had written the class this way:\r\n\r\n```PowerShell\r\nclass SourceInfoProxy {\r\n    [Alias(\"Line\",\"LineNumber\")]\r\n    [string]$SourceLineNumber\r\n    [Alias(\"Path\",\"PSPath\", \"FullName\")]\r\n    [int]$SourceFile\r\n}\r\n```\r\n\r\nSo what we would need is just the ability to either specify a `[Coerce()]` ArgumentTransformation attribute that just coerces anything that can be coerced.  Or maybe instead, we could just generate cast operators (in powerShell, we implement this as a constructor, right?) on classes (for PSObject), so that the cast would be implicitly available?\r\n\r\nWhich brings me to ....\r\n\r\n## What if we had GO style interfaces, instead?\r\n\r\nIn Go, there's no need to say that you `implement` an interface, instead, if a type defines all the methods of an interface, it implicitly implements that interface.\r\n\r\nCan we do that in PowerShell?\r\n\r\nWhat if I could define SourceInfoProxy as an Interface and then just use it as a parameter or variable type and PowerShell automatically validates the properties (and methods?) and even generates property aliases if necessary -- **all while leaving the original object intact?**\r\n\r\nThis way we wouldn't be throwing away data by coercing the object ...",
    "created_at": "2018-09-24T16:48:59Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7835#issuecomment-424045014",
    "id": 424045014,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7835",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDA0NTAxNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/424045014/reactions"
    },
    "updated_at": "2018-09-25T17:10:39Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/424045014",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/192942?v=4",
      "events_url": "https://api.github.com/users/Jaykul/events{/privacy}",
      "followers_url": "https://api.github.com/users/Jaykul/followers",
      "following_url": "https://api.github.com/users/Jaykul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Jaykul/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/Jaykul",
      "id": 192942,
      "login": "Jaykul",
      "node_id": "MDQ6VXNlcjE5Mjk0Mg==",
      "organizations_url": "https://api.github.com/users/Jaykul/orgs",
      "received_events_url": "https://api.github.com/users/Jaykul/received_events",
      "repos_url": "https://api.github.com/users/Jaykul/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/Jaykul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Jaykul/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/Jaykul"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "So we'd have a `[ValidateInterface([type])]` sort of attribute? I'm down.",
    "created_at": "2018-09-24T17:16:01Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7835#issuecomment-424053704",
    "id": 424053704,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7835",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDA1MzcwNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/424053704/reactions"
    },
    "updated_at": "2018-09-24T17:16:08Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/424053704",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Well, if we had GO style interfaces, it would just be a parameter of type `[ISourceInfoProxy]` -- no need for an attribute.  Otherwise, I think ... `[Coerce([SourceInfoProxy])][SourceInfoProxy]`",
    "created_at": "2018-09-24T17:54:04Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7835#issuecomment-424065930",
    "id": 424065930,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7835",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDA2NTkzMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/424065930/reactions"
    },
    "updated_at": "2018-09-24T17:54:04Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/424065930",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/192942?v=4",
      "events_url": "https://api.github.com/users/Jaykul/events{/privacy}",
      "followers_url": "https://api.github.com/users/Jaykul/followers",
      "following_url": "https://api.github.com/users/Jaykul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Jaykul/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/Jaykul",
      "id": 192942,
      "login": "Jaykul",
      "node_id": "MDQ6VXNlcjE5Mjk0Mg==",
      "organizations_url": "https://api.github.com/users/Jaykul/orgs",
      "received_events_url": "https://api.github.com/users/Jaykul/received_events",
      "repos_url": "https://api.github.com/users/Jaykul/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/Jaykul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Jaykul/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/Jaykul"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Mmm. That would mean that casting to an interface would have to behave very differently in PS to how it does in C#.\r\n\r\nNot really sure that's a good idea...",
    "created_at": "2018-09-24T18:05:11Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7835#issuecomment-424069577",
    "id": 424069577,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7835",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDA2OTU3Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/424069577/reactions"
    },
    "updated_at": "2018-09-24T18:05:11Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/424069577",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "You're funny @vexx32 -- casting in PowerShell **already** behaves very differently than how it does in C# and casting to interfaces _especially_ so. PowerShell ignores explicitly defined cast operators in favor of constructors and type coercion already -- and that's not even counting what happens when you cast hashtables...",
    "created_at": "2018-09-24T18:36:54Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7835#issuecomment-424079897",
    "id": 424079897,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7835",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDA3OTg5Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 3,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/424079897/reactions"
    },
    "updated_at": "2018-09-24T18:41:06Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/424079897",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/192942?v=4",
      "events_url": "https://api.github.com/users/Jaykul/events{/privacy}",
      "followers_url": "https://api.github.com/users/Jaykul/followers",
      "following_url": "https://api.github.com/users/Jaykul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Jaykul/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/Jaykul",
      "id": 192942,
      "login": "Jaykul",
      "node_id": "MDQ6VXNlcjE5Mjk0Mg==",
      "organizations_url": "https://api.github.com/users/Jaykul/orgs",
      "received_events_url": "https://api.github.com/users/Jaykul/received_events",
      "repos_url": "https://api.github.com/users/Jaykul/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/Jaykul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Jaykul/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/Jaykul"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@Jaykul Type conversion is very different from C#, but not much of that applies when the target type is an interface, does it? \r\nIf I remember correctly, it is only `IsAssignableFrom` and registered converters that applies. All the other Create/Parse/Ctor stuff doesn't apply to interfaces.",
    "created_at": "2018-09-24T19:59:45Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7835#issuecomment-424104932",
    "id": 424104932,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7835",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDEwNDkzMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/424104932/reactions"
    },
    "updated_at": "2018-09-24T19:59:45Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/424104932",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3505151?v=4",
      "events_url": "https://api.github.com/users/powercode/events{/privacy}",
      "followers_url": "https://api.github.com/users/powercode/followers",
      "following_url": "https://api.github.com/users/powercode/following{/other_user}",
      "gists_url": "https://api.github.com/users/powercode/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/powercode",
      "id": 3505151,
      "login": "powercode",
      "node_id": "MDQ6VXNlcjM1MDUxNTE=",
      "organizations_url": "https://api.github.com/users/powercode/orgs",
      "received_events_url": "https://api.github.com/users/powercode/received_events",
      "repos_url": "https://api.github.com/users/powercode/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/powercode/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/powercode/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/powercode"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "To be more specific, PowerShell usually uses the runtime type (`obj.GetType()`) of an object, which is almost never an interface (`obj.GetType()` can return an interface for .Net remoting, but otherwise it doesn't.)\r\n\r\nSo a \"conversion\" to an interface is very different than in C#. PowerShell just confirms the object implements the interface, but subsequent uses of the object can access members non-interface members without additional conversions.",
    "created_at": "2018-09-24T20:07:01Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7835#issuecomment-424107093",
    "id": 424107093,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7835",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDEwNzA5Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/424107093/reactions"
    },
    "updated_at": "2018-09-24T20:07:01Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/424107093",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2148248?v=4",
      "events_url": "https://api.github.com/users/lzybkr/events{/privacy}",
      "followers_url": "https://api.github.com/users/lzybkr/followers",
      "following_url": "https://api.github.com/users/lzybkr/following{/other_user}",
      "gists_url": "https://api.github.com/users/lzybkr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lzybkr",
      "id": 2148248,
      "login": "lzybkr",
      "node_id": "MDQ6VXNlcjIxNDgyNDg=",
      "organizations_url": "https://api.github.com/users/lzybkr/orgs",
      "received_events_url": "https://api.github.com/users/lzybkr/received_events",
      "repos_url": "https://api.github.com/users/lzybkr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lzybkr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lzybkr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lzybkr"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Right -- and my point is ... what if we just changed our definition of \"implements the interface\" to mean \"it looks like a duck, and it quacks like a duck\" ",
    "created_at": "2018-09-25T17:12:01Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7835#issuecomment-424426291",
    "id": 424426291,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7835",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDQyNjI5MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/424426291/reactions"
    },
    "updated_at": "2018-09-25T17:12:01Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/424426291",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/192942?v=4",
      "events_url": "https://api.github.com/users/Jaykul/events{/privacy}",
      "followers_url": "https://api.github.com/users/Jaykul/followers",
      "following_url": "https://api.github.com/users/Jaykul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Jaykul/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/Jaykul",
      "id": 192942,
      "login": "Jaykul",
      "node_id": "MDQ6VXNlcjE5Mjk0Mg==",
      "organizations_url": "https://api.github.com/users/Jaykul/orgs",
      "received_events_url": "https://api.github.com/users/Jaykul/received_events",
      "repos_url": "https://api.github.com/users/Jaykul/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/Jaykul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Jaykul/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/Jaykul"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "How does c# determine things like this? The Deconstruct method seems to be a salient example - implementing it allows you to treat any object or struct like a deconstuctible tuple-of-sorts which doesn't have to implement any particular interface.",
    "created_at": "2018-09-25T18:46:44Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7835#issuecomment-424457649",
    "id": 424457649,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7835",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDQ1NzY0OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/424457649/reactions"
    },
    "updated_at": "2018-09-25T18:46:44Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/424457649",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@vexx32 Since you've started the PR process, I wanted to share a few thoughts on this:\r\n\r\n1. I think this may make for a good RFC discussion. There are many possibilities proposed here, so it would be useful to open the discussion further via an RFC, present all options, and see how the community feels before running forward with the design. Unless of course there is consensus on this issue, but with the collection of proposals here there doesn't seem to be consensus at this time.\r\n\r\n1. As for syntax, since this seems to be intended for use when working with an object that is not strongly typed, I'd honestly prefer this:\r\n\r\n    `[PSObject(PropertyName1,PropertyName2)]`\r\n    or this:\r\n    `[PSObject([string]PropertyName1, [int]PropertyName2)]`\r\n\r\n    That syntax feels easier to digest by keeping it simple, it's more inline with the design of the PSTypeName attribute, and saves having to add another attribute when you want a PSObject with specific properties/types on it.\r\n\r\n1. I don't think this should check anything more than type (i.e. no validaterange, etc.). If users want more validators, they can have multiple parameters with `ValueFromPipelineByPropertyName`, and validate whatever they want. Otherwise this gets quite confusing.",
    "created_at": "2019-05-17T14:40:33Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7835#issuecomment-493478503",
    "id": 493478503,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7835",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MzQ3ODUwMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/493478503/reactions"
    },
    "updated_at": "2019-05-17T14:41:11Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/493478503",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "1. Yes, possibly. I'm more than willing to open an RFC in tandem, but I figured we may as well have some code backing it up to begin with.\r\n\r\n2. I like the idea of this, but I don't see how that could be supported syntax wise without making breaking changes to the AST & visitors for the attributes in general.\r\n\r\n3. Definitely agreed. If users want that, I believe it can be done with classes anyway.",
    "created_at": "2019-05-17T14:48:20Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7835#issuecomment-493481280",
    "id": 493481280,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7835",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MzQ4MTI4MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/493481280/reactions"
    },
    "updated_at": "2019-05-17T14:48:20Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/493481280",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  }
]
