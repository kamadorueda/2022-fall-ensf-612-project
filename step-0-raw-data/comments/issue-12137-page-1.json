[
  {
    "author_association": "COLLABORATOR",
    "body": "If you ever figure this one out... do let me know! I've been considering adding something like this to one of my own cmdlets. /cc @SeeminglyScience I know we've discussed some of this, so I'm hoping you might be able to point out what's wrong here / if there's a bug here we need to fix ðŸ’– ",
    "created_at": "2020-03-16T21:00:14Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12137#issuecomment-599756175",
    "id": 599756175,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12137",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5OTc1NjE3NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/599756175/reactions"
    },
    "updated_at": "2020-03-16T21:00:14Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/599756175",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "NONE",
    "body": "And, FWIW, I've tried probably a dozen other ways to run `Out-String` from w/in a `PSCmdLet`. None worked (probably because I don't know what I'm doing). \r\n\r\nI've also tried to find other ways to format the input...",
    "created_at": "2020-03-16T21:16:18Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12137#issuecomment-599762032",
    "id": 599762032,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12137",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5OTc2MjAzMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/599762032/reactions"
    },
    "updated_at": "2020-03-16T21:16:18Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/599762032",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/585482?v=4",
      "events_url": "https://api.github.com/users/tig/events{/privacy}",
      "followers_url": "https://api.github.com/users/tig/followers",
      "following_url": "https://api.github.com/users/tig/following{/other_user}",
      "gists_url": "https://api.github.com/users/tig/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/tig",
      "id": 585482,
      "login": "tig",
      "node_id": "MDQ6VXNlcjU4NTQ4Mg==",
      "organizations_url": "https://api.github.com/users/tig/orgs",
      "received_events_url": "https://api.github.com/users/tig/received_events",
      "repos_url": "https://api.github.com/users/tig/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/tig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tig/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/tig"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@tig Try this:\r\n```csharp\r\n    [Cmdlet(VerbsData.Out, \"WinPrint\")]\r\n    [OutputType(typeof(string))]\r\n    public class OutWinPrintCommand : System.Management.Automation.Cmdlet\r\n    {\r\n        [Parameter(ValueFromPipelineByPropertyName = true, ValueFromPipeline = true)]\r\n        public PSObject InputObject { get; set; }\r\n\r\n        protected override void ProcessRecord()\r\n        {\r\n            var commandInfo = new CmdletInfo(\"Out-String\", typeof(Microsoft.PowerShell.Commands.OutStringCommand));\r\n            using var ps = System.Management.Automation.PowerShell.Create(RunspaceMode.CurrentRunspace);\r\n            ps.AddCommand(commandInfo);\r\n            ps.AddParameter(\"InputObject\", this.InputObject);\r\n            var result =  ps.Invoke<string>();\r\n            this.WriteObject(result, true);\r\n        }\r\n    }\r\n```\r\n\r\nresults in following:\r\n```powershell\r\nPS C:\\> Get-Help Out-WinPrint | Out-WinPrint\r\n\r\nNAME\r\n    Out-WinPrint\r\n\r\nSYNTAX\r\n    Out-WinPrint [-InputObject <psobject>] [<CommonParameters>]\r\n\r\n\r\nALIASES\r\n    None\r\n```",
    "created_at": "2020-03-16T23:11:42Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12137#issuecomment-599798575",
    "id": 599798575,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12137",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5OTc5ODU3NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/599798575/reactions"
    },
    "updated_at": "2020-03-16T23:11:42Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/599798575",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11860095?v=4",
      "events_url": "https://api.github.com/users/anmenaga/events{/privacy}",
      "followers_url": "https://api.github.com/users/anmenaga/followers",
      "following_url": "https://api.github.com/users/anmenaga/following{/other_user}",
      "gists_url": "https://api.github.com/users/anmenaga/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/anmenaga",
      "id": 11860095,
      "login": "anmenaga",
      "node_id": "MDQ6VXNlcjExODYwMDk1",
      "organizations_url": "https://api.github.com/users/anmenaga/orgs",
      "received_events_url": "https://api.github.com/users/anmenaga/received_events",
      "repos_url": "https://api.github.com/users/anmenaga/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/anmenaga/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anmenaga/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/anmenaga"
    }
  },
  {
    "author_association": "NONE",
    "body": "Woot! That works.\r\n\r\n![image](https://user-images.githubusercontent.com/585482/76811681-11e3b300-67b8-11ea-96b6-4476bbf71964.png)\r\n\r\nHowever, it doesn't explain why `InvokeScript` is not working. Thanks a ton Andrew.",
    "created_at": "2020-03-17T00:58:48Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12137#issuecomment-599824635",
    "id": 599824635,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12137",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5OTgyNDYzNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/599824635/reactions"
    },
    "updated_at": "2020-03-17T00:58:48Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/599824635",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/585482?v=4",
      "events_url": "https://api.github.com/users/tig/events{/privacy}",
      "followers_url": "https://api.github.com/users/tig/followers",
      "following_url": "https://api.github.com/users/tig/following{/other_user}",
      "gists_url": "https://api.github.com/users/tig/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/tig",
      "id": 585482,
      "login": "tig",
      "node_id": "MDQ6VXNlcjU4NTQ4Mg==",
      "organizations_url": "https://api.github.com/users/tig/orgs",
      "received_events_url": "https://api.github.com/users/tig/received_events",
      "repos_url": "https://api.github.com/users/tig/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/tig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tig/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/tig"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "The *script* `Out-String` doesn't do anything with input.  You'd need to do `$input | Out-String`.\r\n\r\nThe example in the OP is the equivalent of `$input | & { Out-String }`. The example that works is equivalent to `Out-String -InputObject $input`.  The latter will work just fine depending on what you're trying to do. If you wanted to do this in `ProcessRecord` and capture table formatting iteratively you would want to use the `SteppablePipeline` API.",
    "created_at": "2020-03-17T01:17:28Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12137#issuecomment-599829017",
    "id": 599829017,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12137",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5OTgyOTAxNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 1,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/599829017/reactions"
    },
    "updated_at": "2020-03-17T01:19:55Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/599829017",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "NONE",
    "body": "> The _script_ `Out-String` doesn't do anything with input. You'd need to do `$input | Out-String`.\r\n\r\nI don't understand this. The implementation of `out-string`, from what I can see, absolutely uses `InputObject` when `-InputObject` is not specified. \r\n\r\n> The example that works is equivalent to `Out-String -InputObject $input`. The latter will work just fine depending on what you're trying to do. If you wanted to do this in `ProcessRecord` and capture table formatting iteratively you would want to use the `SteppablePipeline` API.\r\n\r\nI get now why @anmenaga's suggestion works. However, I'm seeing behavior after further testing that has me concerned about creating a new runspace here.\r\n\r\nThus, I want to figure out how to make `InvokeScript` work.\r\n\r\nI tried this, but it is not working either. I may still be missing something on how this is all supposed to work:\r\n\r\n    var result = this.SessionState.InvokeCommand.InvokeScript(@\"Out-String -InputObject $input\", true, PipelineResultTypes.None, null, _psObjects);\r\n\r\nI think this matches the pattern used in the create `new CmdLetInfo` example, doesn't i?\r\n\r\n",
    "created_at": "2020-03-17T18:15:13Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12137#issuecomment-600222784",
    "id": 600222784,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12137",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMDIyMjc4NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/600222784/reactions"
    },
    "updated_at": "2020-03-17T18:15:13Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/600222784",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/585482?v=4",
      "events_url": "https://api.github.com/users/tig/events{/privacy}",
      "followers_url": "https://api.github.com/users/tig/followers",
      "following_url": "https://api.github.com/users/tig/following{/other_user}",
      "gists_url": "https://api.github.com/users/tig/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/tig",
      "id": 585482,
      "login": "tig",
      "node_id": "MDQ6VXNlcjU4NTQ4Mg==",
      "organizations_url": "https://api.github.com/users/tig/orgs",
      "received_events_url": "https://api.github.com/users/tig/received_events",
      "repos_url": "https://api.github.com/users/tig/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/tig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tig/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/tig"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> > The _script_ `Out-String` doesn't do anything with input. You'd need to do `$input | Out-String`.\r\n> \r\n> I don't understand this. The implementation of `out-string`, from what I can see, absolutely uses `InputObject` when `-InputObject` is not specified.\r\n\r\nYes, the command `Out-String` does handle input.  `InvokeScript` doesn't construct a single command processor with the command you specify, it invokes a script with the contents you provide. That's why it's functionally equivalent to `$input | & { Out-String }` (which does *not* actually handle input).\r\n> \r\n> > The example that works is equivalent to `Out-String -InputObject $input`. The latter will work just fine depending on what you're trying to do. If you wanted to do this in `ProcessRecord` and capture table formatting iteratively you would want to use the `SteppablePipeline` API.\r\n> \r\n> I get now why @anmenaga's suggestion works. However, I'm seeing behavior after further testing that has me concerned about creating a new runspace here.\r\n\r\nUse `PowerShell.Create(RunspaceMode.CurrentRunspace)` instead.  Make sure to test piping multiple objects.\r\n\r\n> Thus, I want to figure out how to make `InvokeScript` work.\r\n> \r\n> I tried this, but it is not working either. I may still be missing something on how this is all supposed to work:\r\n> \r\n> ```\r\n> var result = this.SessionState.InvokeCommand.InvokeScript(@\"Out-String -InputObject $input\", true, PipelineResultTypes.None, null, _psObjects);\r\n> ```\r\n> I think this matches the pattern used in the create `new CmdLetInfo` example, doesn't i?\r\n\r\n`null` needs to be the input you're trying to pass, right now you're specifying the parameter `args` which would put it in `$args`. Or leave it in `args` and use the variable `$args` instead.  Though you probably need to pipe, I don't think `Out-String`'s `InputObject` handles enumerating arrays. Also again make sure to test passing multiple objects.\r\n\r\nAlso `PipelineResultTypes.None` should probably be `Output`.  It doesn't actually make a difference right now since it doesn't look like that's hooked up properly, but if it's ever fixed your code will break.\r\n",
    "created_at": "2020-03-17T18:47:58Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12137#issuecomment-600238266",
    "id": 600238266,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12137",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMDIzODI2Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/600238266/reactions"
    },
    "updated_at": "2020-03-17T18:47:58Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/600238266",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "NONE",
    "body": "Ah... This works equivalently to the `CmdletInfo` example:\r\n\r\n    var result = this.SessionState.InvokeCommand.InvokeScript(@\"$input | Out-String\", true, PipelineResultTypes.None, _psObjects, null);\r\n        string text = result[0].ToString();\r\n\r\nSince my `ProcessRecord` expands arrays, this works as hoped when $input has multiple items:\r\n\r\n        protected override void ProcessRecord() {\r\n            if (InputObject == null || InputObject == AutomationNull.Value) {\r\n                return;\r\n            }\r\n\r\n            IDictionary dictionary = InputObject.BaseObject as IDictionary;\r\n            if (dictionary != null) {\r\n                // Dictionaries should be enumerated through because the pipeline does not enumerate through them.\r\n                foreach (DictionaryEntry entry in dictionary) {\r\n                    ProcessObject(PSObject.AsPSObject(entry));\r\n                }\r\n            }\r\n            else {\r\n                ProcessObject(InputObject);\r\n            }\r\n\r\n        }\r\n\r\nSo, false-alarm. `InvokeScript` works as advertised (although the documentation is horrible). I'm closing this issue and thanking y'all profusely for your patience.\r\n",
    "created_at": "2020-03-17T19:23:39Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12137#issuecomment-600254055",
    "id": 600254055,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12137",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMDI1NDA1NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 1,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/600254055/reactions"
    },
    "updated_at": "2020-03-17T20:26:35Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/600254055",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/585482?v=4",
      "events_url": "https://api.github.com/users/tig/events{/privacy}",
      "followers_url": "https://api.github.com/users/tig/followers",
      "following_url": "https://api.github.com/users/tig/following{/other_user}",
      "gists_url": "https://api.github.com/users/tig/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/tig",
      "id": 585482,
      "login": "tig",
      "node_id": "MDQ6VXNlcjU4NTQ4Mg==",
      "organizations_url": "https://api.github.com/users/tig/orgs",
      "received_events_url": "https://api.github.com/users/tig/received_events",
      "repos_url": "https://api.github.com/users/tig/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/tig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tig/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/tig"
    }
  }
]
