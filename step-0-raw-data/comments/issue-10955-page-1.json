[
  {
    "author_association": "MEMBER",
    "body": "PowerShell Core already uses AppInsights.  If you look in $PSHOME, you'll see the assembly there.  Since pwsh loads it already, you wouldn't be able to load a different version anyways.  But you can use the one that comes with pwsh.",
    "created_at": "2019-10-31T22:23:02Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10955#issuecomment-548592795",
    "id": 548592795,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10955",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0ODU5Mjc5NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/548592795/reactions"
    },
    "updated_at": "2019-10-31T22:23:02Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/548592795",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "NONE",
    "body": "@SteveL-MSFT thank you very much for your prompt response!\r\nI had no idea it was there, this should get me working with that.\r\n\r\nSo am I wrong in saying netstandard compiled dlls can't be used with add-type?",
    "created_at": "2019-11-01T08:52:22Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10955#issuecomment-548713442",
    "id": 548713442,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10955",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0ODcxMzQ0Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/548713442/reactions"
    },
    "updated_at": "2019-11-01T08:52:22Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/548713442",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/20558784?v=4",
      "events_url": "https://api.github.com/users/abelal83/events{/privacy}",
      "followers_url": "https://api.github.com/users/abelal83/followers",
      "following_url": "https://api.github.com/users/abelal83/following{/other_user}",
      "gists_url": "https://api.github.com/users/abelal83/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/abelal83",
      "id": 20558784,
      "login": "abelal83",
      "node_id": "MDQ6VXNlcjIwNTU4Nzg0",
      "organizations_url": "https://api.github.com/users/abelal83/orgs",
      "received_events_url": "https://api.github.com/users/abelal83/received_events",
      "repos_url": "https://api.github.com/users/abelal83/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/abelal83/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abelal83/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/abelal83"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "netstandard compiled dlls are just like any other assembly from PowerShell perspective and can be used, but there are some limitations like having an existing assembly loaded you can't currently have two versions of the same assembly loaded at the same time (first one wins).",
    "created_at": "2019-11-08T21:10:02Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10955#issuecomment-551990703",
    "id": 551990703,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10955",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTk5MDcwMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/551990703/reactions"
    },
    "updated_at": "2019-11-08T21:10:02Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/551990703",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "NONE",
    "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
    "created_at": "2020-02-01T12:00:13Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10955#issuecomment-581023519",
    "id": 581023519,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10955",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MTAyMzUxOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/581023519/reactions"
    },
    "updated_at": "2020-02-01T12:00:13Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/581023519",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/in/26612?v=4",
      "events_url": "https://api.github.com/users/msftbot%5Bbot%5D/events{/privacy}",
      "followers_url": "https://api.github.com/users/msftbot%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/msftbot%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/msftbot%5Bbot%5D/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/apps/msftbot",
      "id": 48340428,
      "login": "msftbot[bot]",
      "node_id": "MDM6Qm90NDgzNDA0Mjg=",
      "organizations_url": "https://api.github.com/users/msftbot%5Bbot%5D/orgs",
      "received_events_url": "https://api.github.com/users/msftbot%5Bbot%5D/received_events",
      "repos_url": "https://api.github.com/users/msftbot%5Bbot%5D/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/msftbot%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/msftbot%5Bbot%5D/subscriptions",
      "type": "Bot",
      "url": "https://api.github.com/users/msftbot%5Bbot%5D"
    }
  },
  {
    "author_association": "NONE",
    "body": "@SteveL-MSFT So this is actually an issue I've run into before, where two modules want to use the same library but different versions. In this AppInsight scenario, how do we work around this? Are we forced to downgrade our c# psmodule to using the same version as pwsh?",
    "created_at": "2020-03-17T22:45:12Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10955#issuecomment-600336876",
    "id": 600336876,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10955",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMDMzNjg3Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/600336876/reactions"
    },
    "updated_at": "2020-03-17T22:45:12Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/600336876",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2798441?v=4",
      "events_url": "https://api.github.com/users/johnwc/events{/privacy}",
      "followers_url": "https://api.github.com/users/johnwc/followers",
      "following_url": "https://api.github.com/users/johnwc/following{/other_user}",
      "gists_url": "https://api.github.com/users/johnwc/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/johnwc",
      "id": 2798441,
      "login": "johnwc",
      "node_id": "MDQ6VXNlcjI3OTg0NDE=",
      "organizations_url": "https://api.github.com/users/johnwc/orgs",
      "received_events_url": "https://api.github.com/users/johnwc/received_events",
      "repos_url": "https://api.github.com/users/johnwc/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/johnwc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/johnwc/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/johnwc"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "PowerShell loads everything into the same Assembly Load Context / AppDomain, so to get both modules working at once they must have the same dependency versions.\r\n\r\nIf you're consuming modules with the same dependency in different versions, your choices are:\r\n\r\n- Downgrade module versions to align dependency versions\r\n- Load the modules into different PSSessions, so that at least one of them is loaded remotely. You will get deserialised PSObjects back from commands, but it should work.\r\n\r\nI'm afraid that as a module consumer, there's simply no way to load two modules with conflicting assemblies and have both give back full, live .NET objects. That's a limitation in .NET.\r\n\r\nIf you are the module author you have some choices:\r\n\r\n- Align to a common dependency version (for example, the Newtonsoft.Json version PowerShell uses)\r\n- Implement a fresh Assembly Load Context within your own module to isolate your dependencies.\r\n\r\nWe've experimented with this second solution in the case of the PowerShellEditorServices module, where PSES loads its dependencies into a new ALC in PS 6.2/7, but it can cause subtle issues. We may eventually be able to deliver a general solution for modules in PowerShell itself, but it's a large and complex work item and we have no timeframe for even a design proposal.\r\n\r\nThe other problem is that this only works in PS 6.2+. In Windows PowerShell, which uses .NET Framework, it may be possible for module authors to isolate their dependencies in another AppDomain, but that's a serialisation boundary, meaning the solution becomes more complex again.",
    "created_at": "2020-03-25T20:02:17Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10955#issuecomment-604056370",
    "id": 604056370,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10955",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNDA1NjM3MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/604056370/reactions"
    },
    "updated_at": "2020-03-25T20:02:17Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/604056370",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7009879?v=4",
      "events_url": "https://api.github.com/users/rjmholt/events{/privacy}",
      "followers_url": "https://api.github.com/users/rjmholt/followers",
      "following_url": "https://api.github.com/users/rjmholt/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjmholt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rjmholt",
      "id": 7009879,
      "login": "rjmholt",
      "node_id": "MDQ6VXNlcjcwMDk4Nzk=",
      "organizations_url": "https://api.github.com/users/rjmholt/orgs",
      "received_events_url": "https://api.github.com/users/rjmholt/received_events",
      "repos_url": "https://api.github.com/users/rjmholt/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rjmholt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjmholt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rjmholt"
    }
  },
  {
    "author_association": "NONE",
    "body": "@rjmholt Our main issue, is that we are needing to reference the AppInsight library, and are not able to reference the latest release. As pwsh itself references is as well and refences an older version.",
    "created_at": "2020-04-26T02:17:52Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10955#issuecomment-619468872",
    "id": 619468872,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10955",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTQ2ODg3Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/619468872/reactions"
    },
    "updated_at": "2020-04-26T02:17:52Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/619468872",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2798441?v=4",
      "events_url": "https://api.github.com/users/johnwc/events{/privacy}",
      "followers_url": "https://api.github.com/users/johnwc/followers",
      "following_url": "https://api.github.com/users/johnwc/following{/other_user}",
      "gists_url": "https://api.github.com/users/johnwc/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/johnwc",
      "id": 2798441,
      "login": "johnwc",
      "node_id": "MDQ6VXNlcjI3OTg0NDE=",
      "organizations_url": "https://api.github.com/users/johnwc/orgs",
      "received_events_url": "https://api.github.com/users/johnwc/received_events",
      "repos_url": "https://api.github.com/users/johnwc/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/johnwc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/johnwc/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/johnwc"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> As pwsh itself references is as well and refences an older version.\r\n\r\nYeah, this issue also occurs for Newtonsoft.Json. You must use the lowest version of AppInsights that any of your supported PowerShells targets, or otherwise use a mechanism like Assembly Load Contexts to isolate your dependency from PowerShell. Whether the dependency is shared with another module or PowerShell itself currently doesn't matter; the symptoms and solution remain the same.",
    "created_at": "2020-04-27T16:47:47Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10955#issuecomment-620103858",
    "id": 620103858,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10955",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDEwMzg1OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/620103858/reactions"
    },
    "updated_at": "2020-04-27T16:47:47Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/620103858",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7009879?v=4",
      "events_url": "https://api.github.com/users/rjmholt/events{/privacy}",
      "followers_url": "https://api.github.com/users/rjmholt/followers",
      "following_url": "https://api.github.com/users/rjmholt/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjmholt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rjmholt",
      "id": 7009879,
      "login": "rjmholt",
      "node_id": "MDQ6VXNlcjcwMDk4Nzk=",
      "organizations_url": "https://api.github.com/users/rjmholt/orgs",
      "received_events_url": "https://api.github.com/users/rjmholt/received_events",
      "repos_url": "https://api.github.com/users/rjmholt/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rjmholt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjmholt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rjmholt"
    }
  },
  {
    "author_association": "NONE",
    "body": "Do you have an example of using this approach?",
    "created_at": "2020-04-27T18:04:07Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10955#issuecomment-620143190",
    "id": 620143190,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10955",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDE0MzE5MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/620143190/reactions"
    },
    "updated_at": "2020-04-27T18:04:07Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/620143190",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2798441?v=4",
      "events_url": "https://api.github.com/users/johnwc/events{/privacy}",
      "followers_url": "https://api.github.com/users/johnwc/followers",
      "following_url": "https://api.github.com/users/johnwc/following{/other_user}",
      "gists_url": "https://api.github.com/users/johnwc/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/johnwc",
      "id": 2798441,
      "login": "johnwc",
      "node_id": "MDQ6VXNlcjI3OTg0NDE=",
      "organizations_url": "https://api.github.com/users/johnwc/orgs",
      "received_events_url": "https://api.github.com/users/johnwc/received_events",
      "repos_url": "https://api.github.com/users/johnwc/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/johnwc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/johnwc/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/johnwc"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> Do you have an example of using this approach?\r\n\r\nIf you mean the version approach, [it's what PSScriptAnalyzer does for Newtonsoft.Json](https://github.com/PowerShell/PSScriptAnalyzer/blob/26f34b56466cf30862d2ffadf0a5f3c9347b3936/Rules/Rules.csproj#L14). This is, by far, the easiest way to address the issue.\r\n\r\nUsing an assembly load isolation mechanism is really something I would recommend only if you have no other choice (like if indirect dependencies force you to resolve a version conflict).\r\n\r\nThe only example I know of is in PowerShell Editor Services, [where we used an Assembly Load Context to load our dependencies in .NET Core](https://github.com/PowerShell/PowerShellEditorServices/blob/fc1a95a689aa1fdd2fc9b94f84004e5b2c3ec6a5/src/PowerShellEditorServices.Hosting/EditorServicesLoader.cs#L80-L152) so that other modules with conflicting dependencies will still work. However, because of the constraints of AppDomains (namely that they're a remoting boundary), our solution in .NET Core is much better than the .NET Framework one (which is to use Assembly.LoadFile()).\r\n\r\nThere's some coverage of the topic in this thread: https://github.com/PowerShell/PowerShell/issues/11571#issuecomment-574384979\r\n\r\nIn such a case, you'll need to:\r\n\r\n- Add a new assembly to your codebase that is targeted to both .NET Framework and .NET Core (i.e. it will need two TargetRuntimes)\r\n- This assembly will need to provide a common API for your isolated dependencies for the rest of your library/module, but must do so without exporting any of the types of those dependencies; it needs to totally wrap those dependencies and only use your own or PowerShell-common types (i.e. types you've defined in your library, or types that are available in a clean PowerShell session -- ones that come from assemblies in $PSHome).\r\n- In the .NET Framework part, you'll need to create a new AppDomain, load the required dependencies into it, implement a remote proxy or some other way of marshalling information between your dependency AppDomain and the main AppDomain into which the module is loaded. You could also try Assembly.LoadFile, but there may be caveats with that. I haven't tried the AppDomain approach myself because the serialisation boundary made it a bad choice in our case.\r\n- .NET Core is much easier; you implement an AssemblyLoadContext, write it so that it loads your dependencies from a particular location (like a separate directory), and add a resolve event to redirect those types back to your facade assembly\r\n- Then the facade assembly just takes inputs and routes them through to the actual dependencies over the isolating abstraction layer\r\n\r\nThe bottom line is that a workaround is *possible*, but it's a lot of work and you should really evaluate how much you need to not align to a common version.",
    "created_at": "2020-04-28T14:50:14Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10955#issuecomment-620655443",
    "id": 620655443,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10955",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDY1NTQ0Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/620655443/reactions"
    },
    "updated_at": "2020-04-28T14:50:14Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/620655443",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7009879?v=4",
      "events_url": "https://api.github.com/users/rjmholt/events{/privacy}",
      "followers_url": "https://api.github.com/users/rjmholt/followers",
      "following_url": "https://api.github.com/users/rjmholt/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjmholt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rjmholt",
      "id": 7009879,
      "login": "rjmholt",
      "node_id": "MDQ6VXNlcjcwMDk4Nzk=",
      "organizations_url": "https://api.github.com/users/rjmholt/orgs",
      "received_events_url": "https://api.github.com/users/rjmholt/received_events",
      "repos_url": "https://api.github.com/users/rjmholt/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rjmholt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjmholt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rjmholt"
    }
  }
]
