[
  {
    "author_association": "CONTRIBUTOR",
    "body": "Your question will probably get more attention if you explain _why_  `Get-Acl` should have that parameter.\r\n\r\nRun `Get-Acl` from an _elevated_ session to avoid problems stemming from lack of permissions.\r\n\r\n\r\n",
    "created_at": "2017-05-13T16:55:27Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3777#issuecomment-301260436",
    "id": 301260436,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3777",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMTI2MDQzNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 1,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/301260436/reactions"
    },
    "updated_at": "2020-01-30T21:52:44Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/301260436",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "Here is my thing. My regular account doesn't have credentials to get into\neven the root folder holding our home network drives.\n\nIf I had -credential I could prompt or pass my file system admin or domain\nadmin credential object to it and get in their content\n\nOn May 13, 2017 12:55 PM, \"Michael Klement\" <notifications@github.com>\nwrote:\n\nYour question will probably get more attention if you explain *why* Get-Acl\nshould have that parameter.\n\nRun Get-Acl from an *elevated* session to avoid problems stemming from lack\nof permissions.\n\n—\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\n<https://github.com/PowerShell/PowerShell/issues/3777#issuecomment-301260436>,\nor mute the thread\n<https://github.com/notifications/unsubscribe-auth/ADi_zDjkM74GWLH6tzdbQdtyNEPm1mW9ks5r5eCJgaJpZM4NZsWw>\n.\n",
    "created_at": "2017-05-13T22:43:23Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3777#issuecomment-301279192",
    "id": 301279192,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3777",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMTI3OTE5Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/301279192/reactions"
    },
    "updated_at": "2017-05-13T22:43:23Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/301279192",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3719116?v=4",
      "events_url": "https://api.github.com/users/PsychoData/events{/privacy}",
      "followers_url": "https://api.github.com/users/PsychoData/followers",
      "following_url": "https://api.github.com/users/PsychoData/following{/other_user}",
      "gists_url": "https://api.github.com/users/PsychoData/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/PsychoData",
      "id": 3719116,
      "login": "PsychoData",
      "node_id": "MDQ6VXNlcjM3MTkxMTY=",
      "organizations_url": "https://api.github.com/users/PsychoData/orgs",
      "received_events_url": "https://api.github.com/users/PsychoData/received_events",
      "repos_url": "https://api.github.com/users/PsychoData/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/PsychoData/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PsychoData/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/PsychoData"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "To _generalize_ your requirement: you want an on-demand method for invoking a given command _with elevation_, similar to what `sudo` does in the Unix world.\r\n\r\nThat would indeed be helpful, and is already being discussed in #3232.\r\n\r\nUnless this anticipated _generic_ mechanism still wouldn't meet your needs, I suggest you close this issue.\r\n",
    "created_at": "2017-05-13T23:03:49Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3777#issuecomment-301279991",
    "id": 301279991,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3777",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMTI3OTk5MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 1,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/301279991/reactions"
    },
    "updated_at": "2020-01-30T21:53:00Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/301279991",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "I don't see why you wouldn't want to have -Credential on it so you can call\nit as another user?\n\nLike how you can say 'Get-Aduser username -Credential $DAcred'\n\nI also have fields hidden from my regular, daily driver user that are\nvisible from my admin account. Like employee number and Administrator\npassword are visible to my server admin account and above, but not that\nlower account.\n\nSame type of thing, just filesystem right now instead of AD.\n\n\n\nOn May 13, 2017 7:04 PM, \"Michael Klement\" <notifications@github.com> wrote:\n\n> To *generalize* your requirement: you want an on-demand method for\n> invoking a given command *with elevation*, similar to what sudo does in\n> the Unix world.\n>\n> That would indeed be helpful, and is already being discussed in #3232\n> <https://github.com/PowerShell/PowerShell/issues/3232>.\n>\n> Unless this anticipated *generic* mechanism still wouldn't meet your\n> needs, I suggest you close this issue.\n>\n> —\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/PowerShell/PowerShell/issues/3777#issuecomment-301279991>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ADi_zFRbxE6PzCGL0UpWJ6qdVToIcCHSks5r5jbegaJpZM4NZsWw>\n> .\n>\n",
    "created_at": "2017-05-13T23:27:06Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3777#issuecomment-301280838",
    "id": 301280838,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3777",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMTI4MDgzOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/301280838/reactions"
    },
    "updated_at": "2017-05-13T23:27:06Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/301280838",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3719116?v=4",
      "events_url": "https://api.github.com/users/PsychoData/events{/privacy}",
      "followers_url": "https://api.github.com/users/PsychoData/followers",
      "following_url": "https://api.github.com/users/PsychoData/following{/other_user}",
      "gists_url": "https://api.github.com/users/PsychoData/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/PsychoData",
      "id": 3719116,
      "login": "PsychoData",
      "node_id": "MDQ6VXNlcjM3MTkxMTY=",
      "organizations_url": "https://api.github.com/users/PsychoData/orgs",
      "received_events_url": "https://api.github.com/users/PsychoData/received_events",
      "repos_url": "https://api.github.com/users/PsychoData/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/PsychoData/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PsychoData/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/PsychoData"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "I just realized that far more cmdlets than I was aware of in fact do have a `-Credential` parameter:\r\n\r\n```powershell\r\n$VerbosePreference = 'Continue'\r\nGet-Command -type cmdlet | ? { $c = $_; try { $_.Parameters.ContainsKey('Credential') } catch { write-verbose \"Failed with: $c\" } }\r\n```\r\n\r\nStill:\r\n\r\n* It's not readily obvious to me which cmdlets were given this parameter vs. which were not.\r\n\r\n*  It seems to me that solving this problem at the level of _individual cmdlets_ is the wrong approach.\r\n\r\nThat said, I'll leave it to someone more knowledgeable to take it from here.\r\n ",
    "created_at": "2017-05-14T01:36:29Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3777#issuecomment-301285083",
    "id": 301285083,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3777",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMTI4NTA4Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/301285083/reactions"
    },
    "updated_at": "2020-01-30T21:53:15Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/301285083",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "Can't use the Invoke-Command to elevate ?\r\nExample,  Invoke-Command -ComputerName . -ScriptBlock {get-acl} -Credential (Get-Credential)",
    "created_at": "2017-06-14T14:28:49Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3777#issuecomment-308449004",
    "id": 308449004,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3777",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwODQ0OTAwNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/308449004/reactions"
    },
    "updated_at": "2017-06-14T14:28:49Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/308449004",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/19469285?v=4",
      "events_url": "https://api.github.com/users/rahulduggal18/events{/privacy}",
      "followers_url": "https://api.github.com/users/rahulduggal18/followers",
      "following_url": "https://api.github.com/users/rahulduggal18/following{/other_user}",
      "gists_url": "https://api.github.com/users/rahulduggal18/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rahulduggal18",
      "id": 19469285,
      "login": "rahulduggal18",
      "node_id": "MDQ6VXNlcjE5NDY5Mjg1",
      "organizations_url": "https://api.github.com/users/rahulduggal18/orgs",
      "received_events_url": "https://api.github.com/users/rahulduggal18/received_events",
      "repos_url": "https://api.github.com/users/rahulduggal18/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rahulduggal18/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rahulduggal18/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rahulduggal18"
    }
  },
  {
    "author_association": "NONE",
    "body": "I'll agree and bump this a little. Unlike #2761 and #2975 (similar -Credential requests), there doesn't seem to be any restriction that prevents a -Credential parameter from being implemented. I only took a quick look through the .NET docs on ACL classes, so I very well could be wrong on that.\r\n\r\nWhile Invoke-Command would work, it would force a weird usage in my opinion. Everything I've used so far supports -Credential, then all of a sudden for working with ACL's I'd have to shove the ~10 lines of logic into a scriptblock and either choose to invoke it against localhost or the remote computer that holds the file shares (since Invoke-Command requires a -ComputerName when -Credential is used). That's not a fantastic option since it additionally requires remoting to be available when Get-ACL only requires Share\\NTFS permissions regardless of local vs remote file locations.",
    "created_at": "2018-04-23T17:41:54Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3777#issuecomment-383660977",
    "id": 383660977,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3777",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MzY2MDk3Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/383660977/reactions"
    },
    "updated_at": "2018-04-23T17:41:54Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/383660977",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/8963875?v=4",
      "events_url": "https://api.github.com/users/SotoDucani/events{/privacy}",
      "followers_url": "https://api.github.com/users/SotoDucani/followers",
      "following_url": "https://api.github.com/users/SotoDucani/following{/other_user}",
      "gists_url": "https://api.github.com/users/SotoDucani/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SotoDucani",
      "id": 8963875,
      "login": "SotoDucani",
      "node_id": "MDQ6VXNlcjg5NjM4NzU=",
      "organizations_url": "https://api.github.com/users/SotoDucani/orgs",
      "received_events_url": "https://api.github.com/users/SotoDucani/received_events",
      "repos_url": "https://api.github.com/users/SotoDucani/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SotoDucani/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SotoDucani/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SotoDucani"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "I agree with others on this thread! To add my own input: A `Credential` parameter that accepts type `[System.Management.Automation.PSCredential]` would be extremely useful for the `Get-ACL` (and associated) cmdlets.",
    "created_at": "2020-01-30T21:33:06Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3777#issuecomment-580470095",
    "id": 580470095,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3777",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDQ3MDA5NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/580470095/reactions"
    },
    "updated_at": "2020-01-30T21:37:55Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/580470095",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22397984?v=4",
      "events_url": "https://api.github.com/users/charltonstanley/events{/privacy}",
      "followers_url": "https://api.github.com/users/charltonstanley/followers",
      "following_url": "https://api.github.com/users/charltonstanley/following{/other_user}",
      "gists_url": "https://api.github.com/users/charltonstanley/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/charltonstanley",
      "id": 22397984,
      "login": "charltonstanley",
      "node_id": "MDQ6VXNlcjIyMzk3OTg0",
      "organizations_url": "https://api.github.com/users/charltonstanley/orgs",
      "received_events_url": "https://api.github.com/users/charltonstanley/received_events",
      "repos_url": "https://api.github.com/users/charltonstanley/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/charltonstanley/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charltonstanley/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/charltonstanley"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "I realize that I've conflated two things earlier:\r\n\r\n* running in the context of a given user account\r\n* running _with elevation_ (as admin, of necessity in a separate process, after confirming the UAC dialog)\r\n\r\nIf no actual elevation is required - just a different user's context - then I can see the value of adding this parameter to `Get-Acl`\r\n",
    "created_at": "2020-01-30T21:44:07Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3777#issuecomment-580474544",
    "id": 580474544,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3777",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDQ3NDU0NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/580474544/reactions"
    },
    "updated_at": "2020-01-30T21:44:50Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/580474544",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> If no actual elevation is required - just a different user's context - then I can see the value of adding this parameter to `Get-Acl`\r\n\r\nThat is exactly it. I don't need a `Credential` parameter to elevate. However I do need it to leverage an account that has the required permissions necessary to read the ACL of the target path.",
    "created_at": "2020-01-30T21:52:03Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3777#issuecomment-580477979",
    "id": 580477979,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3777",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDQ3Nzk3OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 3,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/580477979/reactions"
    },
    "updated_at": "2020-01-30T21:52:03Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/580477979",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22397984?v=4",
      "events_url": "https://api.github.com/users/charltonstanley/events{/privacy}",
      "followers_url": "https://api.github.com/users/charltonstanley/followers",
      "following_url": "https://api.github.com/users/charltonstanley/following{/other_user}",
      "gists_url": "https://api.github.com/users/charltonstanley/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/charltonstanley",
      "id": 22397984,
      "login": "charltonstanley",
      "node_id": "MDQ6VXNlcjIyMzk3OTg0",
      "organizations_url": "https://api.github.com/users/charltonstanley/orgs",
      "received_events_url": "https://api.github.com/users/charltonstanley/received_events",
      "repos_url": "https://api.github.com/users/charltonstanley/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/charltonstanley/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charltonstanley/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/charltonstanley"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Users will expect that elevation works. It is bad UX.",
    "created_at": "2020-01-31T04:58:21Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3777#issuecomment-580582208",
    "id": 580582208,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3777",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDU4MjIwOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/580582208/reactions"
    },
    "updated_at": "2020-01-31T04:58:21Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/580582208",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "I just ran into this with 'set-acl' and my script that runs otherwise unpriviliged/lower privileged needs to elevate to provision control over an OU that I create with some automation. how would I solve this? ",
    "created_at": "2020-12-17T16:06:30Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3777#issuecomment-747535865",
    "id": 747535865,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3777",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NzUzNTg2NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/747535865/reactions"
    },
    "updated_at": "2020-12-17T16:06:30Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/747535865",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/5390419?v=4",
      "events_url": "https://api.github.com/users/dogfish182/events{/privacy}",
      "followers_url": "https://api.github.com/users/dogfish182/followers",
      "following_url": "https://api.github.com/users/dogfish182/following{/other_user}",
      "gists_url": "https://api.github.com/users/dogfish182/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/dogfish182",
      "id": 5390419,
      "login": "dogfish182",
      "node_id": "MDQ6VXNlcjUzOTA0MTk=",
      "organizations_url": "https://api.github.com/users/dogfish182/orgs",
      "received_events_url": "https://api.github.com/users/dogfish182/received_events",
      "repos_url": "https://api.github.com/users/dogfish182/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/dogfish182/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dogfish182/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/dogfish182"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "The Get-Acl cmdlet uses reflection to invoke a method to get acl\r\n```c#\r\nPSMethodInfo methodInfo = _inputObject.Methods[\"GetSecurityDescriptor\"];\r\n```\r\n\r\nSo you should previously create the input object with elevated permissions.",
    "created_at": "2020-12-17T16:23:40Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3777#issuecomment-747547360",
    "id": 747547360,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3777",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NzU0NzM2MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/747547360/reactions"
    },
    "updated_at": "2020-12-17T16:23:40Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/747547360",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "makes things hugely difficult. i'm running a script that's delivered by aws systems manager agent. this runs as \r\n'nt authority\\system'\r\nso my script passes around a credentials object. Except when it gets here. Now i'm in a rabbithole of trying to run the function using \r\n\r\n1. start-job (so I can pass cred) - works when i use my own login on a test machine, fails with access denied when the system user calls this\r\n2. Attempting 'invoke-command' seems to actually run the command as the user I want, however doing \r\n`if ([adsi]::Exists(\"LDAP://\" + $OUPath))`\r\nfails with \r\n```\r\nException calling \"Exists\" with \"1\" argument(s): \"An operations error occurred.\r\n\"\r\n    + CategoryInfo          : NotSpecified: (:) [], MethodInvocationException\r\n    + FullyQualifiedErrorId : DirectoryServicesCOMException\r\n    + PSComputerName        : localhost\r\n```\r\nthe above is hopelessly confusing, but it seems that the $OUPath is for some reason resolving out to nothing, despite the cred object being good and having the needed permissions on Active directory. I'm really lost why it wouldn't work. \r\n\r\nso when you say 'you should previously create the input object with elevated permissions'. I agree with you. but HOW given my constraints? \r\n@iSazonov \r\n\r\nEDIT: I wonder if invoking command and serializing the function somehow breaks it and I'm not calling it correctly? \r\n\r\nrunning this \r\n\r\n`[adsi]::Exists(\"LDAP://OU=test,OU=myaccount,OU=my-region-1,OU=AWS,DC=mydomain,DC=net\")`\r\n\r\nin the context of my credential user (by running powershell with as another user) will successfully work, but my invocation like this \r\n\r\n```\r\nfunction FullControl ($groupName, $OUPath)\r\n{\r\n    $guidNull                = new-object Guid 00000000-0000-0000-0000-000000000000\r\n    $ldapstring = \"LDAP://$OUPath\"\r\n    write-host \"attempting to check if LDAP://$OUPath\" \"exists\"\r\n    if ([adsi]::Exists($ldapstring))\r\n       {\r\n             # Link to the OU Object\r\n             write-host \"here are the things\"\r\n             $groupName\r\n             $OUPath\r\n             $adObject    = [ADSI]($ldapstring)\r\n             $group = get-adgroup($groupName)\r\n             $groupSID    = new-object System.Security.Principal.SecurityIdentifier $group.SID\r\n             ############################################\r\n             ## Grant Full Control                     ##\r\n             ## This object and all descendent objects ##\r\n             ############################################\r\n             $ace = new-object System.DirectoryServices.ActiveDirectoryAccessRule \r\n             $groupSID,\"GenericAll\",\"Allow\",$guidNull,\"ALL\"\r\n             $adObject.ObjectSecurity.AddAccessRule($ace)\r\n             $adObject.CommitChanges()\r\n        }\r\n    else\r\n        {\r\n            Write-Host \"$ldapPath doesn't exist, not delegating anything\" -ForegroundColor Yellow\r\n        }\r\n\r\n}\r\n```\r\n\r\nI'm invoking this like this \r\n\r\n`Invoke-Command -Computer localhost -Credential $credential -Argumentlist $localGroup.name,$ou.distinguishedName -ScriptBlock $Function:FullControl`\r\n\r\nbut it always fails with \r\n\r\n```\r\nException calling \"Exists\" with \"1\" argument(s): \"An operations error occurred.\r\n\"\r\n    + CategoryInfo          : NotSpecified: (:) [], MethodInvocationException\r\n    + FullyQualifiedErrorId : DirectoryServicesCOMException\r\n    + PSComputerName        : localhost\r\n```\r\n\r\nedit: i realise above i'm not using the acl commands as i'm mid troubleshooting trying to work around this issue. It seems that when running 'invoke-command' so I can pass a credential, whatever I invoke has totally broken active directory integration and I can't figure out why. Even running a powershell session as the same use as passed via creds works just fine. Even doing an invoke-command and trying to \"ls AD:\" will fail as a drive with the name AD doesnt exist, attempts to import the module within the function complain that 'the server might be down'. It's crazy. a cred parameter on get-acl/set-acl would be great...",
    "created_at": "2020-12-18T18:46:07Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3777#issuecomment-748254220",
    "id": 748254220,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3777",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0ODI1NDIyMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/748254220/reactions"
    },
    "updated_at": "2020-12-18T19:51:14Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/748254220",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/5390419?v=4",
      "events_url": "https://api.github.com/users/dogfish182/events{/privacy}",
      "followers_url": "https://api.github.com/users/dogfish182/followers",
      "following_url": "https://api.github.com/users/dogfish182/following{/other_user}",
      "gists_url": "https://api.github.com/users/dogfish182/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/dogfish182",
      "id": 5390419,
      "login": "dogfish182",
      "node_id": "MDQ6VXNlcjUzOTA0MTk=",
      "organizations_url": "https://api.github.com/users/dogfish182/orgs",
      "received_events_url": "https://api.github.com/users/dogfish182/received_events",
      "repos_url": "https://api.github.com/users/dogfish182/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/dogfish182/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dogfish182/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/dogfish182"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "You could use `[adsi]::new(string path, string username, string password)` to make elevated binding.",
    "created_at": "2020-12-19T06:10:49Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3777#issuecomment-748426364",
    "id": 748426364,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3777",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0ODQyNjM2NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/748426364/reactions"
    },
    "updated_at": "2020-12-19T06:10:49Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/748426364",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "I solved my issue which was quite specific. \r\nI found that to invoke a command while running as system on a windows system, you need to enable credssp and enable the server component of Credssp aswell as the client portion so the system can pass credentials to itself. Then you can invoke command with a service Account that has AD access. \r\n\r\n```\r\n# enable the box to accept credentials \r\nEnable-WSManCredSSP -role server\r\n# enable the box to trust itself \r\nEnable-WSManCredSSP -Role \"Client\" -DelegateComputer \"$env:computername.$env:userdnsdomain\"\r\n```\r\nyou can also force the command so it's possible in a script. \r\nCredssp has some security implications and warnings about security, so for my scope since i'm running a system via SSM and I trust myself, I enable credssp at the start, do my work and disable again at the end. Hope this helps someone one day, it cost me 2 days of confusion.\r\n",
    "created_at": "2020-12-19T12:08:34Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3777#issuecomment-748465858",
    "id": 748465858,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3777",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0ODQ2NTg1OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/748465858/reactions"
    },
    "updated_at": "2020-12-19T12:08:34Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/748465858",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/5390419?v=4",
      "events_url": "https://api.github.com/users/dogfish182/events{/privacy}",
      "followers_url": "https://api.github.com/users/dogfish182/followers",
      "following_url": "https://api.github.com/users/dogfish182/following{/other_user}",
      "gists_url": "https://api.github.com/users/dogfish182/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/dogfish182",
      "id": 5390419,
      "login": "dogfish182",
      "node_id": "MDQ6VXNlcjUzOTA0MTk=",
      "organizations_url": "https://api.github.com/users/dogfish182/orgs",
      "received_events_url": "https://api.github.com/users/dogfish182/received_events",
      "repos_url": "https://api.github.com/users/dogfish182/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/dogfish182/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dogfish182/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/dogfish182"
    }
  },
  {
    "author_association": "NONE",
    "body": "Bump up this.\r\n\r\nI ran also in this issue and also missing -server Argument when working with two different AD Domains and try to query the current ACLs for Objects ( for example Groups or OUs).",
    "created_at": "2022-04-04T11:26:45Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3777#issuecomment-1087437864",
    "id": 1087437864,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3777",
    "node_id": "IC_kwDOAvT7bc5A0Pwo",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1087437864/reactions"
    },
    "updated_at": "2022-04-04T11:26:45Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1087437864",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32883466?v=4",
      "events_url": "https://api.github.com/users/MaBauMeBad/events{/privacy}",
      "followers_url": "https://api.github.com/users/MaBauMeBad/followers",
      "following_url": "https://api.github.com/users/MaBauMeBad/following{/other_user}",
      "gists_url": "https://api.github.com/users/MaBauMeBad/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/MaBauMeBad",
      "id": 32883466,
      "login": "MaBauMeBad",
      "node_id": "MDQ6VXNlcjMyODgzNDY2",
      "organizations_url": "https://api.github.com/users/MaBauMeBad/orgs",
      "received_events_url": "https://api.github.com/users/MaBauMeBad/received_events",
      "repos_url": "https://api.github.com/users/MaBauMeBad/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/MaBauMeBad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MaBauMeBad/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/MaBauMeBad"
    }
  },
  {
    "author_association": "NONE",
    "body": "Hi @dogfish182 I am having the same issue trying to run SSM docuement on a windows system that suppose to give permission to an account on the computer OU\r\nIt is failing to run due to SYSTEM , I tried your solution and it is not working , might be I am missing something ? \r\n\r\nImport-Module AWSPowerShell\r\nEnable-WSManCredSSP -role server -force\r\nEnable-WSManCredSSP -Role \"Client\" -DelegateComputer \"$env:computername.$env:userdnsdomain\" -force\r\n\r\n$Domains = 'test.local'\r\n$user = GET-SECSecretValue -SecretId arn:somearn -Select SecretString | ConvertFrom-Json | Select -ExpandProperty adminDomainUsername\r\n$pass = GET-SECSecretValue -SecretId arn:somearn -Select SecretString | ConvertFrom-Json | Select -ExpandProperty adminDomainPassword | ConvertTo-SecureString -asPlainText -Force\r\n$DomainUser = \"$Domains\\$user\"\r\n$Cred = New-Object System.Management.Automation.PSCredential($DomainUser,$pass)\r\n\r\n\r\n\r\n$Script= {\r\nImport-Module ActiveDirectory\r\n$AccountName = 'demo'\r\n$Domain = Get-ADDomain -Identity test.local -ErrorAction Stop \r\n$BaseDn = $Domain.DistinguishedName\r\n$ComputersContainer = $Domain.ComputersContainer\r\n$SchemaNamingContext = Get-ADRootDSE | Select-Object -ExpandProperty 'schemaNamingContext'\r\n[System.GUID]$ServicePrincipalNameGuid = (Get-ADObject -SearchBase $SchemaNamingContext -Filter { lDAPDisplayName -eq 'Computer' } -Properties 'schemaIDGUID').schemaIDGUID\r\n$AccountProperties = Get-ADUser -Identity $AccountName \r\n$AccountSid = New-Object -TypeName 'System.Security.Principal.SecurityIdentifier' $AccountProperties.SID.Value\r\n$ObjectAcl = Get-ACL -Path \"AD:\\$ComputersContainer\"\r\n$AddAccessRule = New-Object -TypeName 'System.DirectoryServices.ActiveDirectoryAccessRule' $AccountSid, 'CreateChild', 'Allow', $ServicePrincipalNameGUID, 'All'\r\n$ObjectAcl.AddAccessRule($AddAccessRule)\r\nSet-ACL -AclObject $ObjectAcl -Path \"AD:\\$ComputersContainer\"\r\n}\r\n\r\nInvoke-Command -Computer localhost -ScriptBlock $Script -Credential $Cred\r\nWrite-Output \"Content of variable Script\"\r\nWrite-Host $Script\r\n\r\n",
    "created_at": "2022-08-15T08:02:27Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3777#issuecomment-1214728993",
    "id": 1214728993,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3777",
    "node_id": "IC_kwDOAvT7bc5IZ0sh",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1214728993/reactions"
    },
    "updated_at": "2022-08-15T08:02:27Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1214728993",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/98021151?v=4",
      "events_url": "https://api.github.com/users/allasto/events{/privacy}",
      "followers_url": "https://api.github.com/users/allasto/followers",
      "following_url": "https://api.github.com/users/allasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/allasto/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/allasto",
      "id": 98021151,
      "login": "allasto",
      "node_id": "U_kgDOBdevHw",
      "organizations_url": "https://api.github.com/users/allasto/orgs",
      "received_events_url": "https://api.github.com/users/allasto/received_events",
      "repos_url": "https://api.github.com/users/allasto/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/allasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/allasto/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/allasto"
    }
  },
  {
    "author_association": "NONE",
    "body": "Alto, I was trying to do the same thing.  Slightly different script.\r\n\r\nImport-Module ActiveDirectory\r\n        New-ADOrganizationalUnit -Name $newOU -Path \"OU=example,DC=example,DC=com\" -Description $ServiceUserName -PassThru -Credential $credential\r\n        New-ADUser -Name $ServiceUserName -Accountpassword (ConvertTo-SecureString \"SomePassword\" -AsPlainText -force) -Enabled $true -Credential $credential\r\n        $OrganizationalUnit = \"OU=\" + $newOU + \",OU=example,DC=example,DC=com\"\r\n        Set-Location AD:\r\n        $Group = Get-ADuser -Identity $ServiceUserName \r\n        $GroupSID = [System.Security.Principal.SecurityIdentifier] $Group.SID\r\n        $ACL = Get-Acl -Path $OrganizationalUnit \r\n        $Identity = [System.Security.Principal.IdentityReference] $GroupSID\r\n        $Computers = [GUID]\"bf967a86-0de6-11d0-a285-00aa003049e2\"\r\n        $ResetPassword = [GUID]\"00299570-246d-11d0-a768-00aa006e0529\"\r\n        $ValidatedDNSHostName = [GUID]\"72e39547-7b18-11d1-adef-00c04fd8d5cd\"\r\n        $ValidatedSPN = [GUID]\"f3a64788-5306-11d1-a9c5-0000f80367c1\"\r\n        $AccountRestrictions = [GUID]\"4c164200-20c0-11d0-a768-00aa006e0529\"\r\n        $RuleCreateAndDeleteComputer = New-Object System.DirectoryServices.ActiveDirectoryAccessRule($Identity, \"CreateChild, DeleteChild\", \"Allow\", $Computers, \"All\") \r\n        $RuleResetPassword = New-Object System.DirectoryServices.ActiveDirectoryAccessRule ($Identity, \"ExtendedRight\", \"Allow\", $ResetPassword, \"Descendents\", $Computers) \r\n        $RuleValidatedDNSHostName = New-Object System.DirectoryServices.ActiveDirectoryAccessRule ($GroupSID, \"Self\", \"Allow\", $ValidatedDNSHostName, \"Descendents\", $Computers) \r\n        $RuleValidatedSPN = New-Object System.DirectoryServices.ActiveDirectoryAccessRule ($GroupSID, \"Self\", \"Allow\", $ValidatedSPN, \"Descendents\", $Computers) \r\n        $RuleAccountRestrictions = New-Object System.DirectoryServices.ActiveDirectoryAccessRule ($Identity, \"ReadProperty, WriteProperty\", \"Allow\", $AccountRestrictions, \"Descendents\", $Computers) \r\n        $ACL.AddAccessRule($RuleCreateAndDeleteComputer)\r\n        $ACL.AddAccessRule($RuleResetPassword)\r\n        $ACL.AddAccessRule($RuleValidatedDNSHostName)\r\n        $ACL.AddAccessRule($RuleValidatedSPN)\r\n        $ACL.AddAccessRule($RuleAccountRestrictions)\r\n        Set-Acl -Path $OrganizationalUnit -AclObject $ACL\r\n        \r\nDid you ever get yours to work?\r\n",
    "created_at": "2022-10-05T16:05:45Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3777#issuecomment-1268634424",
    "id": 1268634424,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3777",
    "node_id": "IC_kwDOAvT7bc5LndM4",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1268634424/reactions"
    },
    "updated_at": "2022-10-05T16:06:14Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1268634424",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/101076189?v=4",
      "events_url": "https://api.github.com/users/lazurwolf1/events{/privacy}",
      "followers_url": "https://api.github.com/users/lazurwolf1/followers",
      "following_url": "https://api.github.com/users/lazurwolf1/following{/other_user}",
      "gists_url": "https://api.github.com/users/lazurwolf1/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lazurwolf1",
      "id": 101076189,
      "login": "lazurwolf1",
      "node_id": "U_kgDOBgZM3Q",
      "organizations_url": "https://api.github.com/users/lazurwolf1/orgs",
      "received_events_url": "https://api.github.com/users/lazurwolf1/received_events",
      "repos_url": "https://api.github.com/users/lazurwolf1/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lazurwolf1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lazurwolf1/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lazurwolf1"
    }
  },
  {
    "author_association": "NONE",
    "body": "Yes.\r\nadd the following before the script to enable credssp:\r\n      Enable-WSManCredSSP -role server -force\r\n      Enable-WSManCredSSP -Role \"Client\" -DelegateComputer \"$env:computername.domain.com\" -force\r\n\r\n      New-Item -Path HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\CredentialsDelegation -Name AllowFreshCredentialsWhenNTLMOnly -Force\r\n      New-ItemProperty -Path HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\CredentialsDelegation\\AllowFreshCredentialsWhenNTLMOnly -Name 1 -Value \"wsman/$env:computername.domain.com\" -PropertyType String\r\n\r\n\r\nand add this at the end to the invoke command:  -Authentication Credssp\r\n\r\nLike:\r\nInvoke-Command -Computer localhost -ScriptBlock $Script -Credential $Cred -Authentication Credssp\r\n",
    "created_at": "2022-10-06T06:03:35Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3777#issuecomment-1269375743",
    "id": 1269375743,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3777",
    "node_id": "IC_kwDOAvT7bc5LqSL_",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1269375743/reactions"
    },
    "updated_at": "2022-10-06T06:03:35Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1269375743",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/98021151?v=4",
      "events_url": "https://api.github.com/users/allasto/events{/privacy}",
      "followers_url": "https://api.github.com/users/allasto/followers",
      "following_url": "https://api.github.com/users/allasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/allasto/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/allasto",
      "id": 98021151,
      "login": "allasto",
      "node_id": "U_kgDOBdevHw",
      "organizations_url": "https://api.github.com/users/allasto/orgs",
      "received_events_url": "https://api.github.com/users/allasto/received_events",
      "repos_url": "https://api.github.com/users/allasto/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/allasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/allasto/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/allasto"
    }
  }
]
