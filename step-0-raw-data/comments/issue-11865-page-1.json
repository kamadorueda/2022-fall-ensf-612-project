[
  {
    "author_association": "COLLABORATOR",
    "body": "Generally speaking we try to avoid overriding native Unix utilities with PowerShell aliases; it's been a sore point for Unix folks in the past.\r\n\r\nI'm also not clear on how you're proposing this would work, but I have little familiarity with how the existing tools you mention work anyway. Would you be able to explain exactly what kind of output you'd expect from such a cmdlet in PowerShell? How it would display diffs, etc., especially if the diffs are very large.\r\n\r\nActually writing such a comparer in PS shouldn't pose a great difficulty, I wouldn't think; .NET provides pretty easy to work with APIs for interacting with files on a byte by byte basis which we can use for this.\r\n\r\nJust looking for some clarity on what exactly you're looking for. ðŸ™‚ ",
    "created_at": "2020-02-16T23:46:10Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11865#issuecomment-586769661",
    "id": 586769661,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11865",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4Njc2OTY2MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/586769661/reactions"
    },
    "updated_at": "2020-02-16T23:46:10Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/586769661",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "NONE",
    "body": "1. I agree that aliasing this to `cmp` is not mandatory, as user can define an alias for `fc` or `cmp`.\r\n\r\n2. binary compare utility doesn't need to display diffs. the main point for it is to say: 'files are identical' or 'files are not identical'.  the `cmp` utility exits after first mismatch and reports a byte number/line where it occurred. I was thinking just about this.\r\n\r\n   `fc.exe /b` though displays a diff like: `00000C74: ED 10` (address of byte, what's in file1 at this address, what's in file2), but I personally like `cmp`'s behavior better. I think, `cmp`'s behavior is a good starting point, if anyone will actually need a diff, it's possible to implement something like a `-Diff` flag later. but if not -- even without diffs this command will be good.",
    "created_at": "2020-02-17T00:00:20Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11865#issuecomment-586770956",
    "id": 586770956,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11865",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4Njc3MDk1Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/586770956/reactions"
    },
    "updated_at": "2020-02-17T00:02:25Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/586770956",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6885179?v=4",
      "events_url": "https://api.github.com/users/chillum/events{/privacy}",
      "followers_url": "https://api.github.com/users/chillum/followers",
      "following_url": "https://api.github.com/users/chillum/following{/other_user}",
      "gists_url": "https://api.github.com/users/chillum/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/chillum",
      "id": 6885179,
      "login": "chillum",
      "node_id": "MDQ6VXNlcjY4ODUxNzk=",
      "organizations_url": "https://api.github.com/users/chillum/orgs",
      "received_events_url": "https://api.github.com/users/chillum/received_events",
      "repos_url": "https://api.github.com/users/chillum/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/chillum/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chillum/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/chillum"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "In most cases adding new cmdlet makes sense only if it addresses an advanced scenario and exposes some magic features. We can find many utilities (console and GUI) which do a comparison of files very well. So it is not clear why we need the new cmdlet. ",
    "created_at": "2020-02-17T03:49:47Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11865#issuecomment-586805962",
    "id": 586805962,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11865",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjgwNTk2Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/586805962/reactions"
    },
    "updated_at": "2020-02-17T03:49:47Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/586805962",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "@iSazonov let me repeat my point. we need it because:\r\n1. this functionality is useful in cross-platform PS scripts\r\n2. to improve user experience on Windows (it has `fc.exe`, but it's shadowed by ps' alias and not really easy to use because of this)\r\n\r\nI would also appreciate a list of many console utilities that are good for this use case and cross-platform, I googled and uhm, I know nothing but `cmp` (which is kinda cross-platform, but relies on CygWin).",
    "created_at": "2020-02-17T10:06:20Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11865#issuecomment-586913538",
    "id": 586913538,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11865",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjkxMzUzOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/586913538/reactions"
    },
    "updated_at": "2020-02-17T10:06:20Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/586913538",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/58301203?v=4",
      "events_url": "https://api.github.com/users/vasily-codefresh/events{/privacy}",
      "followers_url": "https://api.github.com/users/vasily-codefresh/followers",
      "following_url": "https://api.github.com/users/vasily-codefresh/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasily-codefresh/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vasily-codefresh",
      "id": 58301203,
      "login": "vasily-codefresh",
      "node_id": "MDQ6VXNlcjU4MzAxMjAz",
      "organizations_url": "https://api.github.com/users/vasily-codefresh/orgs",
      "received_events_url": "https://api.github.com/users/vasily-codefresh/received_events",
      "repos_url": "https://api.github.com/users/vasily-codefresh/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vasily-codefresh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasily-codefresh/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vasily-codefresh"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@vasily-codefresh PowerShell is \"automation management\". What is scenarios you want to automate in cross-platform environment?  It makes no sense to reimplement every binary utility. \r\n`Compare-File` means to return an object. What is the object? Or do you want only check file equality? In the case it should be Test-* cmdlet.",
    "created_at": "2020-02-17T10:54:52Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11865#issuecomment-586935074",
    "id": 586935074,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11865",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjkzNTA3NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/586935074/reactions"
    },
    "updated_at": "2020-02-17T10:54:52Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/586935074",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "good point, maybe something like `Test-FileContentsMatch` will be better.\r\n\r\nmost useful scenario I can think of is verifying backups. let's say I backup a huge file to DVD or network location and after copying but before deleting local copy I'd like to verify it copied perfect.",
    "created_at": "2020-02-17T11:02:29Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11865#issuecomment-586939007",
    "id": 586939007,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11865",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjkzOTAwNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/586939007/reactions"
    },
    "updated_at": "2020-02-17T11:02:29Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/586939007",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/58301203?v=4",
      "events_url": "https://api.github.com/users/vasily-codefresh/events{/privacy}",
      "followers_url": "https://api.github.com/users/vasily-codefresh/followers",
      "following_url": "https://api.github.com/users/vasily-codefresh/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasily-codefresh/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vasily-codefresh",
      "id": 58301203,
      "login": "vasily-codefresh",
      "node_id": "MDQ6VXNlcjU4MzAxMjAz",
      "organizations_url": "https://api.github.com/users/vasily-codefresh/orgs",
      "received_events_url": "https://api.github.com/users/vasily-codefresh/received_events",
      "repos_url": "https://api.github.com/users/vasily-codefresh/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vasily-codefresh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasily-codefresh/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vasily-codefresh"
    }
  },
  {
    "author_association": "NONE",
    "body": "@chillum Not sure on it's RAM usage, but would the existing `Get-FileHash` be suitable?\r\n\r\n[Get-FileHash](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/get-filehash?view=powershell-7)",
    "created_at": "2020-02-18T15:59:03Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11865#issuecomment-587533725",
    "id": 587533725,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11865",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NzUzMzcyNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/587533725/reactions"
    },
    "updated_at": "2020-02-18T15:59:03Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/587533725",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/5991977?v=4",
      "events_url": "https://api.github.com/users/mrboring/events{/privacy}",
      "followers_url": "https://api.github.com/users/mrboring/followers",
      "following_url": "https://api.github.com/users/mrboring/following{/other_user}",
      "gists_url": "https://api.github.com/users/mrboring/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mrboring",
      "id": 5991977,
      "login": "mrboring",
      "node_id": "MDQ6VXNlcjU5OTE5Nzc=",
      "organizations_url": "https://api.github.com/users/mrboring/orgs",
      "received_events_url": "https://api.github.com/users/mrboring/received_events",
      "repos_url": "https://api.github.com/users/mrboring/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mrboring/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mrboring/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mrboring"
    }
  },
  {
    "author_association": "NONE",
    "body": "@mrboring thanks for the suggestion, but this is actually slower than bit-for-bit comparison.\r\nit doesn't seem to be putting all file contents to RAM, but it puts a load on CPU and takes longer time.\r\n\r\nbesides, direct file comparison can be considered more reliable. I understand that having a SHA256 collision is highly unlikely, but why rely on 'highly unlikely' when you can just compare files bit-by-bit. even DOS 3.3 had byte-for-byte comparison (before even MD5 existed), so it's a useful functionality and should not be really hard to implement.",
    "created_at": "2020-02-18T17:04:06Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11865#issuecomment-587567273",
    "id": 587567273,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11865",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NzU2NzI3Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/587567273/reactions"
    },
    "updated_at": "2020-02-18T17:04:06Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/587567273",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/58301203?v=4",
      "events_url": "https://api.github.com/users/vasily-codefresh/events{/privacy}",
      "followers_url": "https://api.github.com/users/vasily-codefresh/followers",
      "following_url": "https://api.github.com/users/vasily-codefresh/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasily-codefresh/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vasily-codefresh",
      "id": 58301203,
      "login": "vasily-codefresh",
      "node_id": "MDQ6VXNlcjU4MzAxMjAz",
      "organizations_url": "https://api.github.com/users/vasily-codefresh/orgs",
      "received_events_url": "https://api.github.com/users/vasily-codefresh/received_events",
      "repos_url": "https://api.github.com/users/vasily-codefresh/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vasily-codefresh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasily-codefresh/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vasily-codefresh"
    }
  }
]
