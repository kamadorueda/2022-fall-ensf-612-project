[
  {
    "author_association": "MEMBER",
    "body": "Dot sourcing is working exactly as designed.\r\n\r\nIn your example, when you dot source `Test-MyInvocationParam` - no **new** scope is created, so the assignment `$bug = $true` happens in `Test-Bug`'s scope.\r\n\r\nI think this is a better example to see what dot sourcing does:\r\n\r\n```powershell\r\nfunction Test-MyInvocationParam {\r\n    $bug = $True\r\n}\r\n\r\nfunction Test-Bug {\r\n    $bug = $False\r\n    Test-MyInvocationParam\r\n    Write-Host \"Bug is present = $bug\"\r\n    . Test-MyInvocationParam\r\n    Write-Host \"Bug is present = $bug\"\r\n}\r\n\r\nTest-Bug\r\n```\r\n\r\nIt should (and does) print:\r\n```\r\nBug is present = False\r\nBug is present = True\r\n```",
    "created_at": "2017-09-14T20:17:08Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4840#issuecomment-329596754",
    "id": 329596754,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4840",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTU5Njc1NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/329596754/reactions"
    },
    "updated_at": "2017-09-14T20:17:08Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/329596754",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2148248?v=4",
      "events_url": "https://api.github.com/users/lzybkr/events{/privacy}",
      "followers_url": "https://api.github.com/users/lzybkr/followers",
      "following_url": "https://api.github.com/users/lzybkr/following{/other_user}",
      "gists_url": "https://api.github.com/users/lzybkr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lzybkr",
      "id": 2148248,
      "login": "lzybkr",
      "node_id": "MDQ6VXNlcjIxNDgyNDg=",
      "organizations_url": "https://api.github.com/users/lzybkr/orgs",
      "received_events_url": "https://api.github.com/users/lzybkr/received_events",
      "repos_url": "https://api.github.com/users/lzybkr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lzybkr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lzybkr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lzybkr"
    }
  },
  {
    "author_association": "NONE",
    "body": "Oy, my apologies, muddied the water by adding that illogical example and making assumptions about the cause - sorry!\r\n\r\nWhat I expect: `param($Invocation = $MyInvocation)` will receive MyInvocation from the calling function (`Test-Bug`), not the function being called (`Test-MyInvocationParam`)\r\n\r\nThis behaves as expected in Windows PowerShell (Also works in 5.0, 4.0, 3.0, does not work in 2.0):\r\n\r\n```\r\n$PSVersionTable\r\n\r\nName                           Value                                               \r\n----                           -----                                               \r\nPSVersion                      5.1.14393.1532                                      \r\nPSEdition                      Desktop                                             \r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}                             \r\nBuildVersion                   10.0.14393.1532                                     \r\nCLRVersion                     4.0.30319.42000                                     \r\nWSManStackVersion              3.0                                                 \r\nPSRemotingProtocolVersion      2.3                                                 \r\nSerializationVersion           1.1.0.1   \r\n```\r\n\r\nCheers!\r\n\r\n",
    "created_at": "2017-09-15T00:30:02Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4840#issuecomment-329644384",
    "id": 329644384,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4840",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTY0NDM4NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/329644384/reactions"
    },
    "updated_at": "2017-09-15T00:30:02Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/329644384",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6377597?v=4",
      "events_url": "https://api.github.com/users/RamblingCookieMonster/events{/privacy}",
      "followers_url": "https://api.github.com/users/RamblingCookieMonster/followers",
      "following_url": "https://api.github.com/users/RamblingCookieMonster/following{/other_user}",
      "gists_url": "https://api.github.com/users/RamblingCookieMonster/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/RamblingCookieMonster",
      "id": 6377597,
      "login": "RamblingCookieMonster",
      "node_id": "MDQ6VXNlcjYzNzc1OTc=",
      "organizations_url": "https://api.github.com/users/RamblingCookieMonster/orgs",
      "received_events_url": "https://api.github.com/users/RamblingCookieMonster/received_events",
      "repos_url": "https://api.github.com/users/RamblingCookieMonster/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/RamblingCookieMonster/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RamblingCookieMonster/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/RamblingCookieMonster"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "See this [PR](https://github.com/PowerShell/PowerShell/pull/4709) - if you still see the issue with that fix, reopen this issue.",
    "created_at": "2017-09-15T00:36:18Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4840#issuecomment-329645144",
    "id": 329645144,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4840",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTY0NTE0NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/329645144/reactions"
    },
    "updated_at": "2017-09-15T00:36:18Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/329645144",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2148248?v=4",
      "events_url": "https://api.github.com/users/lzybkr/events{/privacy}",
      "followers_url": "https://api.github.com/users/lzybkr/followers",
      "following_url": "https://api.github.com/users/lzybkr/following{/other_user}",
      "gists_url": "https://api.github.com/users/lzybkr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lzybkr",
      "id": 2148248,
      "login": "lzybkr",
      "node_id": "MDQ6VXNlcjIxNDgyNDg=",
      "organizations_url": "https://api.github.com/users/lzybkr/orgs",
      "received_events_url": "https://api.github.com/users/lzybkr/received_events",
      "repos_url": "https://api.github.com/users/lzybkr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lzybkr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lzybkr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lzybkr"
    }
  },
  {
    "author_association": "NONE",
    "body": "Looks like that's rolled up in beta 7, which I've been running - yeah, still no luck - the underlying code is over my head, but initial thoughts:\r\n\r\n* Maybe due to the order of operations and this being in the param block?\r\n* Maybe due to dot sourcing a function in memory vs. a script?\r\n\r\nEither way - I can work around it for now, just need to explicitly pass the parameters I need.  Not sure how to re-open an issue, I think that requires a certain level of access\r\n\r\nCheers!",
    "created_at": "2017-09-18T00:48:50Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4840#issuecomment-330106350",
    "id": 330106350,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4840",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDEwNjM1MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/330106350/reactions"
    },
    "updated_at": "2017-09-18T00:48:50Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/330106350",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6377597?v=4",
      "events_url": "https://api.github.com/users/RamblingCookieMonster/events{/privacy}",
      "followers_url": "https://api.github.com/users/RamblingCookieMonster/followers",
      "following_url": "https://api.github.com/users/RamblingCookieMonster/following{/other_user}",
      "gists_url": "https://api.github.com/users/RamblingCookieMonster/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/RamblingCookieMonster",
      "id": 6377597,
      "login": "RamblingCookieMonster",
      "node_id": "MDQ6VXNlcjYzNzc1OTc=",
      "organizations_url": "https://api.github.com/users/RamblingCookieMonster/orgs",
      "received_events_url": "https://api.github.com/users/RamblingCookieMonster/received_events",
      "repos_url": "https://api.github.com/users/RamblingCookieMonster/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/RamblingCookieMonster/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RamblingCookieMonster/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/RamblingCookieMonster"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "This is actually a bug that got fixed by PR #4709. There are 9 special automatic variables that are always available for every script run: `$_`, `$args`, `$this`, `$input`, `$PSCmdlet`, `$PSBoundParameters`, `$MyInvocation`, `$PSScriptRoot` and `$PSCommandPath`. When any of those variables are set, accessing the variables from within the script will get you those values. \r\n\r\n`$args`, `$input`, `$PSBoundParameters` are set to default values when it's not applicable; `$MyInvocation` is set to the script that's about to run; `$PSScriptRoot` and `$PSCommandPath` are set with the paths if the script is defined in a file, or an empty string if not; `$_`, `$this` may not be set depending on whether it's applicable; `$PSCmdlet` is set only for script cmdlets.\r\n\r\nThe long-standing bug here is that when dot-sourcing script cmdlets (functions with `[CmdletBinding()]` or `[Parameter()]` attributes declared), those special variables are not properly set up before parameter binding -- they were set up after parameter binding. So using them for default parameter values will not get you the correct values, but using them in the script body will work as expected. For example, you can see the behavior by running the following in powershell prior to beta.7:\r\n```\r\nfunction ScriptCmdlet {\r\n    [CmdletBinding()]\r\n    param($Invocation = $MyInvocation)\r\n\r\n    \"`$Invocation: $($Invocation.MyCommand.Name)\"\r\n    \"`$MyInvocation: $($MyInvocation.MyCommand.Name)\"\r\n}\r\nPS:49> . ScriptCmdlet\r\n$Invocation:\r\n$MyInvocation: ScriptCmdlet\r\n```\r\nHowever, for simple functions (functions or scirpts that **don't** have `[CmdletBinding()]` or `[Parameter()]` attributes declared), those special variables have always been properly set up before parameter binding. See this example in any powershell versions:\r\n```\r\nfunction SimpleFunction {\r\n    param($Invocation = $MyInvocation)\r\n\r\n    \"`$Invocation: $($Invocation.MyCommand.Name)\"\r\n    \"`$MyInvocation: $($MyInvocation.MyCommand.Name)\"\r\n}\r\nPS:51> . SimpleFunction\r\n$Invocation: SimpleFunction\r\n$MyInvocation: SimpleFunction\r\n```\r\nAs you may already know, this inconsistent behavior has been there for years until the issue #4688 was reported. And then it was fixed by PR #4709.\r\n",
    "created_at": "2017-09-19T17:01:42Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4840#issuecomment-330605374",
    "id": 330605374,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4840",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDYwNTM3NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/330605374/reactions"
    },
    "updated_at": "2017-09-19T17:01:42Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/330605374",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "NONE",
    "body": "Gotcha!  So I think I see the issue.  Might just be a design decision, or an old bug, but `$MyInvocation` used in a param block as a default value previously pointed to the command initiating the call - now it points to the command being called:\r\n\r\n```powershell\r\nfunction Test-MyInvocationParam {\r\n    [cmdletbinding()]\r\n    param($Invocation = $MyInvocation)\r\n    $Invocation\r\n}\r\n\r\nfunction Test-Bug {\r\n    [cmdletbinding()]\r\n    param($a=1)\r\n    . Test-MyInvocationParam\r\n}\r\n\r\n(Test-Bug).MyCommand.Name\r\n```\r\n\r\nOutput from different PowerShell versions:\r\n\r\n* PowerShell Core (with that PR, not sure about before): `Test-MyInvocationParam`\r\n* PowerShell 5.1: `Test-Bug`\r\n* PowerShell 5.0: `Test-Bug`\r\n* PowerShell 4.0: `Test-Bug`\r\n* PowerShell 3.0: `Test-Bug`\r\n* PowerShell 2.0: `Test-MyInvocationParam`\r\n\r\nAnyhow!  I'll just explicitly include the parameter rather than relying on it as a default value\r\n\r\nCheers!",
    "created_at": "2017-09-19T17:43:22Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4840#issuecomment-330616949",
    "id": 330616949,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4840",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDYxNjk0OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/330616949/reactions"
    },
    "updated_at": "2017-09-19T17:43:22Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/330616949",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6377597?v=4",
      "events_url": "https://api.github.com/users/RamblingCookieMonster/events{/privacy}",
      "followers_url": "https://api.github.com/users/RamblingCookieMonster/followers",
      "following_url": "https://api.github.com/users/RamblingCookieMonster/following{/other_user}",
      "gists_url": "https://api.github.com/users/RamblingCookieMonster/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/RamblingCookieMonster",
      "id": 6377597,
      "login": "RamblingCookieMonster",
      "node_id": "MDQ6VXNlcjYzNzc1OTc=",
      "organizations_url": "https://api.github.com/users/RamblingCookieMonster/orgs",
      "received_events_url": "https://api.github.com/users/RamblingCookieMonster/received_events",
      "repos_url": "https://api.github.com/users/RamblingCookieMonster/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/RamblingCookieMonster/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RamblingCookieMonster/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/RamblingCookieMonster"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "> but $MyInvocation used in a param block as a default value previously pointed to the command initiating the call - now it points to the command being called\r\n\r\nYes, since `$MyInvocation` was not properly set before parameter binding when dot-sourcing a script cmdlet, the lookup will get the `$MyInvocation` from the scope of `Test-Bug`, and that's why you get the invocation instance for `Test-Bug`.\r\n\r\nIf you make `Test-MyInvocationParam` a simple function by removing `[cmdletbinding()]`, you will see the inconsistent behavior I mentioned before -- it prints out `Test-MyInvocationParam` on all versions of powershell. \r\n```\r\nfunction Test-MyInvocationParam {\r\n    param($Invocation = $MyInvocation)\r\n    $Invocation\r\n}\r\n\r\nfunction Test-Bug {\r\n    [cmdletbinding()]\r\n    param($a=1)\r\n    . Test-MyInvocationParam\r\n}\r\n\r\nPS:4> (Test-Bug).MyCommand.Name\r\nTest-MyInvocationParam\r\n```",
    "created_at": "2017-09-19T18:45:39Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4840#issuecomment-330634133",
    "id": 330634133,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4840",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDYzNDEzMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/330634133/reactions"
    },
    "updated_at": "2017-09-19T18:45:39Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/330634133",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  }
]
