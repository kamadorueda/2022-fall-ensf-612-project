[
  {
    "author_association": "NONE",
    "body": "Out-String with Width parameter\r\n```\r\nGet-Process | Format-Table * | Out-String -Width 1000 | Set-Content gps.txt\r\n```",
    "created_at": "2021-05-14T14:04:28Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15404#issuecomment-841265087",
    "id": 841265087,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15404",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0MTI2NTA4Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/841265087/reactions"
    },
    "updated_at": "2021-05-14T14:04:28Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/841265087",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/78153320?v=4",
      "events_url": "https://api.github.com/users/237dmitry/events{/privacy}",
      "followers_url": "https://api.github.com/users/237dmitry/followers",
      "following_url": "https://api.github.com/users/237dmitry/following{/other_user}",
      "gists_url": "https://api.github.com/users/237dmitry/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/237dmitry",
      "id": 78153320,
      "login": "237dmitry",
      "node_id": "MDQ6VXNlcjc4MTUzMzIw",
      "organizations_url": "https://api.github.com/users/237dmitry/orgs",
      "received_events_url": "https://api.github.com/users/237dmitry/received_events",
      "repos_url": "https://api.github.com/users/237dmitry/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/237dmitry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/237dmitry/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/237dmitry"
    }
  },
  {
    "author_association": "NONE",
    "body": "That still doesn't answer my question -- *why* would (should) the console width affect files my script generates?  There are lots of cases where this happens and it seems fundamentally wrong -- shouldn't the console width *only* be used for output actually going to the console, not output redirected to files?\r\n\r\nIn my case the issue is more complicated than adding an out-string -width -- I'm using information stream file redirection to allow a script to both have console output the user can see (which I'm fine being clipped) as well as writing *all unclipped data* to a log file...  But my log file ends up with line breaks every time a line is wider than the console width, which of course, makes the log file impossible to grep/parse.\r\n\r\nThis seems like a trivially simple example that should always work:\r\n\r\nps >ps.txt\r\n\r\nBut it doesn't?  Thanks!",
    "created_at": "2021-05-14T14:11:05Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15404#issuecomment-841269007",
    "id": 841269007,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15404",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0MTI2OTAwNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/841269007/reactions"
    },
    "updated_at": "2021-05-14T18:11:54Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/841269007",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/341166?v=4",
      "events_url": "https://api.github.com/users/rtestardi/events{/privacy}",
      "followers_url": "https://api.github.com/users/rtestardi/followers",
      "following_url": "https://api.github.com/users/rtestardi/following{/other_user}",
      "gists_url": "https://api.github.com/users/rtestardi/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rtestardi",
      "id": 341166,
      "login": "rtestardi",
      "node_id": "MDQ6VXNlcjM0MTE2Ng==",
      "organizations_url": "https://api.github.com/users/rtestardi/orgs",
      "received_events_url": "https://api.github.com/users/rtestardi/received_events",
      "repos_url": "https://api.github.com/users/rtestardi/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rtestardi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rtestardi/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rtestardi"
    }
  },
  {
    "author_association": "NONE",
    "body": "PS any idea how I would fix this in a 50 character console?  I don't see where to put the out-string or other command.\r\n\r\n```\r\nPS C:\\temp> write-information (\"*\"*200) 6>info.log\r\nPS C:\\temp> (gc .\\info.log | %{ $_.length } | measure-object -max).maximum\r\n49\r\nPS C:\\temp>\r\n```",
    "created_at": "2021-05-14T14:17:54Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15404#issuecomment-841273028",
    "id": 841273028,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15404",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0MTI3MzAyOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/841273028/reactions"
    },
    "updated_at": "2021-05-14T14:50:11Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/841273028",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/341166?v=4",
      "events_url": "https://api.github.com/users/rtestardi/events{/privacy}",
      "followers_url": "https://api.github.com/users/rtestardi/followers",
      "following_url": "https://api.github.com/users/rtestardi/following{/other_user}",
      "gists_url": "https://api.github.com/users/rtestardi/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rtestardi",
      "id": 341166,
      "login": "rtestardi",
      "node_id": "MDQ6VXNlcjM0MTE2Ng==",
      "organizations_url": "https://api.github.com/users/rtestardi/orgs",
      "received_events_url": "https://api.github.com/users/rtestardi/received_events",
      "repos_url": "https://api.github.com/users/rtestardi/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rtestardi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rtestardi/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rtestardi"
    }
  },
  {
    "author_association": "NONE",
    "body": "PPS interesting -- write-output behaves differently (correctly, imo :-) than write-error, write-warning, and write-information (which all clip strings to the console width):\r\n\r\n```\r\nPS C:\\temp> write-output (\"*\"*200) >output.log\r\nPS C:\\temp> (gc .\\output.log | %{ $_.length } | measure-object -max).maximum\r\n200\r\n\r\nPS C:\\temp> write-error (\"*\"*200) 2>error.log\r\nPS C:\\temp> (gc .\\error.log | %{ $_.length } | measure-object -max).maximum\r\n49\r\n\r\nPS C:\\temp> write-warning (\"*\"*200) 3>warning.log\r\nPS C:\\temp> (gc .\\warning.log | %{ $_.length } | measure-object -max).maximum\r\n49\r\n\r\nPS C:\\temp>\r\n```",
    "created_at": "2021-05-14T14:29:11Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15404#issuecomment-841279913",
    "id": 841279913,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15404",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0MTI3OTkxMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/841279913/reactions"
    },
    "updated_at": "2021-05-14T17:35:15Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/841279913",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/341166?v=4",
      "events_url": "https://api.github.com/users/rtestardi/events{/privacy}",
      "followers_url": "https://api.github.com/users/rtestardi/followers",
      "following_url": "https://api.github.com/users/rtestardi/following{/other_user}",
      "gists_url": "https://api.github.com/users/rtestardi/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rtestardi",
      "id": 341166,
      "login": "rtestardi",
      "node_id": "MDQ6VXNlcjM0MTE2Ng==",
      "organizations_url": "https://api.github.com/users/rtestardi/orgs",
      "received_events_url": "https://api.github.com/users/rtestardi/received_events",
      "repos_url": "https://api.github.com/users/rtestardi/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rtestardi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rtestardi/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rtestardi"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "You're redirecting output that normally comes to the console. That output is going to be formatted for the current console width for display. If you want to serialise data instead, you need to indicate what format you want to use. You could convert it to JSON, CSV, or CLIXML as you please, but the default redirection behaviour doesn't have a set serialization format, it just redirects whatever the console output would be.",
    "created_at": "2021-05-14T14:33:39Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15404#issuecomment-841282462",
    "id": 841282462,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15404",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0MTI4MjQ2Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/841282462/reactions"
    },
    "updated_at": "2021-05-14T14:33:39Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/841282462",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "NONE",
    "body": "Understood -- I'm questioning if that's a valid model when compared to Linux/bash, which says that once output is redirected to a file, it no longer has console artifacts...  I think folks use powershell *both* to talk to the console *and* to talk to files and other objects -- but they seem inseparable from the console now.\r\n\r\n**Any idea why the information stream behaves differently than the output stream in the example above?  It almost seems like \"write-output\" was fixed, and \"write-error\", \"write-warning\", and \"write-information\" got missed?**\r\n\r\nI'd expect them *all* to be \"formatted for the current console\" from what you indicate?  (Or *none* of them, if I had my way! :-)\r\n",
    "created_at": "2021-05-14T14:43:01Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15404#issuecomment-841287845",
    "id": 841287845,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15404",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0MTI4Nzg0NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/841287845/reactions"
    },
    "updated_at": "2021-05-14T17:35:42Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/841287845",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/341166?v=4",
      "events_url": "https://api.github.com/users/rtestardi/events{/privacy}",
      "followers_url": "https://api.github.com/users/rtestardi/followers",
      "following_url": "https://api.github.com/users/rtestardi/following{/other_user}",
      "gists_url": "https://api.github.com/users/rtestardi/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rtestardi",
      "id": 341166,
      "login": "rtestardi",
      "node_id": "MDQ6VXNlcjM0MTE2Ng==",
      "organizations_url": "https://api.github.com/users/rtestardi/orgs",
      "received_events_url": "https://api.github.com/users/rtestardi/received_events",
      "repos_url": "https://api.github.com/users/rtestardi/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rtestardi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rtestardi/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rtestardi"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Write-Output doesn't demand a specific format, it's designed to handle any kind of object. Submitting a string to it and then writing it to a file is the exact same operation (albeit effectively doing a little bit of work twice) as just saving that string directly to the file. In other words, these two statements are equivalent:\r\n\r\n```powershell\r\n\"*\"*200 > file.txt\r\nWrite-Output (\"*\"*200) > file.txt\r\n```\r\n\r\nNo formatting really happens here because you only have a simple string, there's no complex object to format.\r\n\r\nHowever, non-output streams are strongly typed -- they enforce a specific object type which all other output sent to them must be converted to. For `Write-Warning`, this is `WarningRecord`, much as for `Write-Error` it's `ErrorRecord`, and similar for all the others. \r\n\r\nWhen saving this to a file, they're not simple strings or values, and get run through the formatter to determine the appropriate string representation. So, much like other examples that have been mentioned, the exact representation can depend on the console size at the time.\r\n\r\nWhether that's the \"correct\" model or not is a bit of a debate topic, I suppose, but it's how it has been designed up to this point. This has been the case since sometime around PSv3 when most of the alternate streams were introduced (Information stream was a bit later, being introduced in PS 5.1).",
    "created_at": "2021-05-14T17:47:03Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15404#issuecomment-841403122",
    "id": 841403122,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15404",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0MTQwMzEyMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/841403122/reactions"
    },
    "updated_at": "2021-05-14T17:47:03Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/841403122",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "NONE",
    "body": "Thanks for the explanation -- might there be a way to get something like this not to clip?  I'm using stream 6 as a detailed log file -- that might have more information (i.e., many more lines) than are sent to the console, though typically a pure superset of that -- that seems to be in line with the intended usage of stream 6 [here](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_output_streams?view=powershell-7.1).\r\n\r\n```\r\nPS C:\\temp> write-information (\"*\"*200) 6>info.log\r\nPS C:\\temp> (gc .\\info.log | %{ $_.length } | measure-object -max).maximum\r\n49\r\nPS C:\\temp>\r\n```\r\n\r\nBut I can't seem to figure it out...\r\n\r\nIIUC, write-information generates -- and stream 6 only accepts -- [InformationRecord] objects.  The \"6>info.log\" above has to convert these objects to strings, and **always** uses the console width to do so.  Is that accurate?\r\n\r\nI can definitely hack the console width with the following, but if I don't have to, I'd rather not:\r\n\r\n`$Host.UI.RawUI.BufferSize = New-Object Management.Automation.Host.Size (1000, $Host.UI.RawUI.BufferSize.height)\r\n`\r\n\r\nThanks again.\r\n\r\n",
    "created_at": "2021-05-14T18:07:22Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15404#issuecomment-841413492",
    "id": 841413492,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15404",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0MTQxMzQ5Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/841413492/reactions"
    },
    "updated_at": "2021-05-14T18:07:22Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/841413492",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/341166?v=4",
      "events_url": "https://api.github.com/users/rtestardi/events{/privacy}",
      "followers_url": "https://api.github.com/users/rtestardi/followers",
      "following_url": "https://api.github.com/users/rtestardi/following{/other_user}",
      "gists_url": "https://api.github.com/users/rtestardi/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rtestardi",
      "id": 341166,
      "login": "rtestardi",
      "node_id": "MDQ6VXNlcjM0MTE2Ng==",
      "organizations_url": "https://api.github.com/users/rtestardi/orgs",
      "received_events_url": "https://api.github.com/users/rtestardi/received_events",
      "repos_url": "https://api.github.com/users/rtestardi/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rtestardi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rtestardi/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rtestardi"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "If you intend the result to go purely to a file and never the console, I probably wouldn't really bother involving stream 6; you can redirect or otherwise write strings to files without it.\r\n\r\nIf for whatever reason you need to use the information stream to output text data, it'd probably be a better idea to just take the `MessageData` property off of the object when saving to a file, or if you need the other data that InformationRecords contain, you could convert it to CSV perhaps.\r\n\r\n```powershell\r\n(Write-Information (\"*\"*200) 6>&1).MessageData | Set-Content -Path info.log\r\n\r\n# or perhaps\r\nWrite-Information (\"*\"*200) 6>&1 | Export-Csv -Path info.log\r\n```",
    "created_at": "2021-05-14T19:30:44Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15404#issuecomment-841457751",
    "id": 841457751,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15404",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0MTQ1Nzc1MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/841457751/reactions"
    },
    "updated_at": "2021-05-14T19:30:44Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/841457751",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "NONE",
    "body": "Thanks.  My particular issue is I have a bunch of concurrent background jobs and I want to synchronize their output thru the stream to a single log file...\r\n\r\nSo my main script starts with just re-invoking itself recursively (BTW, I'd love to have a bash-like \"exec 6>runust.log\" to skip the reinvocation and just redirect the stream in the main script live, but the reinvocation is easy enough!):\r\n\r\n```\r\nif (! $redirected) {\r\n    & $PSCommandPath -include $include -exclude $exclude -failure $failure -list:$list -redirected $hash 6>runust.log\r\n    exit 0\r\n}\r\n```\r\n\r\nAnd then all my jobs launched by the sub-script can use write-output (to just go to the console), write-information (to just go to the log file), or both (to go to both :-).\r\n\r\n(The main script is careful to do timely receive-jobs for all jobs as they run.)\r\n\r\nMaybe there's a much better way to do this, but other than the line breaks in the log file (at the console width), it is really simple and works really well...\r\n\r\nAnyway, thanks again for all the explanations and thoughts/recommendations -- it really is amazing how responsive (all) you folks are for powershell issues (or enhancements :-).\r\n",
    "created_at": "2021-05-14T19:41:55Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15404#issuecomment-841462866",
    "id": 841462866,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15404",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0MTQ2Mjg2Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/841462866/reactions"
    },
    "updated_at": "2021-05-14T19:50:24Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/841462866",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/341166?v=4",
      "events_url": "https://api.github.com/users/rtestardi/events{/privacy}",
      "followers_url": "https://api.github.com/users/rtestardi/followers",
      "following_url": "https://api.github.com/users/rtestardi/following{/other_user}",
      "gists_url": "https://api.github.com/users/rtestardi/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rtestardi",
      "id": 341166,
      "login": "rtestardi",
      "node_id": "MDQ6VXNlcjM0MTE2Ng==",
      "organizations_url": "https://api.github.com/users/rtestardi/orgs",
      "received_events_url": "https://api.github.com/users/rtestardi/received_events",
      "repos_url": "https://api.github.com/users/rtestardi/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rtestardi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rtestardi/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rtestardi"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "Since `>` is a wrapper for out-file, you can achieve something close to what you want directly with `out-file`. It's not quite the same but it may be something you can do. Also, you can use `$PSDefaultParameterValues['out-file:width'] = 200` to increase the default output width. Then this would work as you expect\r\n```powershell\r\n.{ \"#\" * 200; write-error (\"*\"*200);write-verbose -verbose (\"@\"*200) } > /tmp/output 2>/tmp/errout 4>/tmp/verbout\r\n```\r\neach redirected file should use the width as designated",
    "created_at": "2021-05-26T18:47:02Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15404#issuecomment-849031803",
    "id": 849031803,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15404",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0OTAzMTgwMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/849031803/reactions"
    },
    "updated_at": "2021-05-26T18:47:02Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/849031803",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/10214008?v=4",
      "events_url": "https://api.github.com/users/JamesWTruher/events{/privacy}",
      "followers_url": "https://api.github.com/users/JamesWTruher/followers",
      "following_url": "https://api.github.com/users/JamesWTruher/following{/other_user}",
      "gists_url": "https://api.github.com/users/JamesWTruher/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/JamesWTruher",
      "id": 10214008,
      "login": "JamesWTruher",
      "node_id": "MDQ6VXNlcjEwMjE0MDA4",
      "organizations_url": "https://api.github.com/users/JamesWTruher/orgs",
      "received_events_url": "https://api.github.com/users/JamesWTruher/received_events",
      "repos_url": "https://api.github.com/users/JamesWTruher/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/JamesWTruher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JamesWTruher/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/JamesWTruher"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> $PSDefaultParameterValues['out-file:width'] = 200\r\n\r\nThat's a nice way to handle this.  This is something that I have struggled with RE logging over the years.  I created my own set of `Write-Log` functions (alias Log) that would use `Out-String -Width` to control the \"width of output\" in the log file.  I wonder if the $PSDefaultParameterValues idea could be made a bit more discoverable?  Maybe via a help topic on `logging output to file`?",
    "created_at": "2021-05-27T14:18:57Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15404#issuecomment-849674486",
    "id": 849674486,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15404",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0OTY3NDQ4Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/849674486/reactions"
    },
    "updated_at": "2021-05-27T14:18:57Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/849674486",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/5177512?v=4",
      "events_url": "https://api.github.com/users/rkeithhill/events{/privacy}",
      "followers_url": "https://api.github.com/users/rkeithhill/followers",
      "following_url": "https://api.github.com/users/rkeithhill/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkeithhill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rkeithhill",
      "id": 5177512,
      "login": "rkeithhill",
      "node_id": "MDQ6VXNlcjUxNzc1MTI=",
      "organizations_url": "https://api.github.com/users/rkeithhill/orgs",
      "received_events_url": "https://api.github.com/users/rkeithhill/received_events",
      "repos_url": "https://api.github.com/users/rkeithhill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rkeithhill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkeithhill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rkeithhill"
    }
  },
  {
    "author_association": "NONE",
    "body": "Wow, that is totally nice thank you -- this makes everything good for me, without resizing my window!!!\r\n\r\n`$PSDefaultParameterValues['out-file:width'] = 1000`\r\n\r\nThank you again!\r\n\r\nPS is there a list of default parameter values documented anywhere?  How did you find this?",
    "created_at": "2021-05-27T15:18:13Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15404#issuecomment-849721335",
    "id": 849721335,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15404",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0OTcyMTMzNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/849721335/reactions"
    },
    "updated_at": "2021-05-27T15:19:33Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/849721335",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/341166?v=4",
      "events_url": "https://api.github.com/users/rtestardi/events{/privacy}",
      "followers_url": "https://api.github.com/users/rtestardi/followers",
      "following_url": "https://api.github.com/users/rtestardi/following{/other_user}",
      "gists_url": "https://api.github.com/users/rtestardi/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rtestardi",
      "id": 341166,
      "login": "rtestardi",
      "node_id": "MDQ6VXNlcjM0MTE2Ng==",
      "organizations_url": "https://api.github.com/users/rtestardi/orgs",
      "received_events_url": "https://api.github.com/users/rtestardi/received_events",
      "repos_url": "https://api.github.com/users/rtestardi/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rtestardi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rtestardi/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rtestardi"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> Wow, that is totally nice thank you -- this makes everything good for me, without resizing my window!!!\r\n> \r\n> `$PSDefaultParameterValues['out-file:width'] = 1000`\r\n> \r\n> Thank you again!\r\n> \r\n> PS is there a list of default parameter values documented anywhere? How did you find this?\r\n\r\nBasically it can be used to set _any_ cmdlet/function's default parameter values for the session. The syntax is `$PSDefaultParameterValues['Cmdlet-Name:ParameterName'] = $value` -- and note that you can use wildcards for cmdlet or parameter names, so for example you could enable -Force by default for all *Item commands (get-item, get-childitem, etc) with: `$PSDefaultParameterValues['*-*Item:Force'] = $true`\r\n\r\nThat it works for `>` is basically an implementation detail because `>` is calling the `Out-File` cmdlet implicitly.",
    "created_at": "2021-05-27T16:27:49Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15404#issuecomment-849771799",
    "id": 849771799,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15404",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0OTc3MTc5OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/849771799/reactions"
    },
    "updated_at": "2021-05-27T16:30:43Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/849771799",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Opened #15474 to track the future enhancement. 🙂 ",
    "created_at": "2021-05-27T22:57:36Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15404#issuecomment-849995042",
    "id": 849995042,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15404",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0OTk5NTA0Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/849995042/reactions"
    },
    "updated_at": "2021-05-27T22:57:36Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/849995042",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "As is called out in https://github.com/PowerShell/PowerShell/issues/15404#issuecomment-849674486, we should make this workaround more discoverable by updating the powershell help docs.\r\n@rkeithhill has volunteered to open issues regarding this in the PowerShell-Doc repo, thanks @rkeithhill!",
    "created_at": "2021-05-27T23:52:10Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15404#issuecomment-850014653",
    "id": 850014653,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15404",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1MDAxNDY1Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/850014653/reactions"
    },
    "updated_at": "2021-05-27T23:52:10Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/850014653",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "NONE",
    "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
    "created_at": "2021-05-29T00:00:06Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15404#issuecomment-850729382",
    "id": 850729382,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15404",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1MDcyOTM4Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/850729382/reactions"
    },
    "updated_at": "2021-05-29T00:00:06Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/850729382",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/in/26612?v=4",
      "events_url": "https://api.github.com/users/msftbot%5Bbot%5D/events{/privacy}",
      "followers_url": "https://api.github.com/users/msftbot%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/msftbot%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/msftbot%5Bbot%5D/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/apps/msftbot",
      "id": 48340428,
      "login": "msftbot[bot]",
      "node_id": "MDM6Qm90NDgzNDA0Mjg=",
      "organizations_url": "https://api.github.com/users/msftbot%5Bbot%5D/orgs",
      "received_events_url": "https://api.github.com/users/msftbot%5Bbot%5D/received_events",
      "repos_url": "https://api.github.com/users/msftbot%5Bbot%5D/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/msftbot%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/msftbot%5Bbot%5D/subscriptions",
      "type": "Bot",
      "url": "https://api.github.com/users/msftbot%5Bbot%5D"
    }
  }
]
