[
  {
    "author_association": "NONE",
    "body": "on windows it returns a \"C:\\\\\" which is correct imo\r\n\r\nedit: I have to correct myself. the drive prefix should not be added when it's not given in the path.",
    "created_at": "2020-12-11T09:33:10Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14393#issuecomment-743084651",
    "id": 743084651,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14393",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MzA4NDY1MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/743084651/reactions"
    },
    "updated_at": "2020-12-11T22:56:20Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/743084651",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1927076?v=4",
      "events_url": "https://api.github.com/users/SeidChr/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeidChr/followers",
      "following_url": "https://api.github.com/users/SeidChr/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeidChr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeidChr",
      "id": 1927076,
      "login": "SeidChr",
      "node_id": "MDQ6VXNlcjE5MjcwNzY=",
      "organizations_url": "https://api.github.com/users/SeidChr/orgs",
      "received_events_url": "https://api.github.com/users/SeidChr/received_events",
      "repos_url": "https://api.github.com/users/SeidChr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeidChr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeidChr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeidChr"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Agreed that returning `/` is the right thing to do on Unix-like platforms.\r\n\r\nHowever, note that the Windows behavior is debatable, in that `Split-Path` seems to perform resolution _to a full path_ in this case (based on the current drive), which it otherwise doesn't do (by definition). That is, on Windows path `/` (`\\`)  is _drive_-relative, and converting it to an absolute path based on the state of the session (current location) is not `Split-Path`'s mandate. In other words: it would make more sense to me if `\\` were returned on Windows.\r\n\r\n\r\n\r\n\r\n\r\n",
    "created_at": "2020-12-11T12:58:55Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14393#issuecomment-743178611",
    "id": 743178611,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14393",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MzE3ODYxMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/743178611/reactions"
    },
    "updated_at": "2020-12-11T12:58:55Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/743178611",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "True.\r\n\r\nIf you pass only a slash on windows, it should not resolve it to include a drive. ü§ùüèº\r\nWhen you pass the drive however, it should.",
    "created_at": "2020-12-11T21:41:38Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14393#issuecomment-743441459",
    "id": 743441459,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14393",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MzQ0MTQ1OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/743441459/reactions"
    },
    "updated_at": "2020-12-11T21:41:38Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/743441459",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1927076?v=4",
      "events_url": "https://api.github.com/users/SeidChr/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeidChr/followers",
      "following_url": "https://api.github.com/users/SeidChr/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeidChr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeidChr",
      "id": 1927076,
      "login": "SeidChr",
      "node_id": "MDQ6VXNlcjE5MjcwNzY=",
      "organizations_url": "https://api.github.com/users/SeidChr/orgs",
      "received_events_url": "https://api.github.com/users/SeidChr/received_events",
      "repos_url": "https://api.github.com/users/SeidChr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeidChr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeidChr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeidChr"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "It's definitely an edge case, but I would expect `Split-Path C:\\` to return just `\\` also: The purpose of the `-Leaf` switch is to return only the path's leaf component, which in the case of a directory path is the  _directory name_, and the name of the root directory is just `\\`, not including a drive spec.",
    "created_at": "2020-12-11T21:49:07Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14393#issuecomment-743444626",
    "id": 743444626,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14393",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MzQ0NDYyNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/743444626/reactions"
    },
    "updated_at": "2020-12-11T21:49:29Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/743444626",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "well I think that's subjective. \r\nfor me it's just as logical to see the slash as a separator only. \r\nbut I'm not the one to decide what exactly it should be.\r\n\r\nthe behavior should be logical and equal on any os. that's all I'm asking üòÖ",
    "created_at": "2020-12-11T22:53:06Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14393#issuecomment-743468228",
    "id": 743468228,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14393",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MzQ2ODIyOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/743468228/reactions"
    },
    "updated_at": "2020-12-11T22:53:06Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/743468228",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1927076?v=4",
      "events_url": "https://api.github.com/users/SeidChr/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeidChr/followers",
      "following_url": "https://api.github.com/users/SeidChr/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeidChr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeidChr",
      "id": 1927076,
      "login": "SeidChr",
      "node_id": "MDQ6VXNlcjE5MjcwNzY=",
      "organizations_url": "https://api.github.com/users/SeidChr/orgs",
      "received_events_url": "https://api.github.com/users/SeidChr/received_events",
      "repos_url": "https://api.github.com/users/SeidChr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeidChr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeidChr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeidChr"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Agreed re having predictable behavior across platforms governed by an as-simple-as-possible rationale.\r\n\r\nEven if you see the `\\` as a separator, that doesn't make a _drive specification_ the leaf component.\r\n\r\nConceptually, the leaf component is unequivocally the _root directory_ in this case - sans drive, on Windows.\r\n\r\nThe challenge - which is as old as the hills and affects Unix-like platforms and Windows equally - is that the root directory has no name other than the path separator, which has given us decades of programmatically constructed paths such as `C:\\\\foo`, resulting from code such as `$path + '\\' + $file`, where `$path` happens to be the root dir. This is presumably why both Unix and Windows accept such duplicated path separators.\r\n\r\n",
    "created_at": "2020-12-11T23:08:28Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14393#issuecomment-743472552",
    "id": 743472552,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14393",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MzQ3MjU1Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/743472552/reactions"
    },
    "updated_at": "2020-12-11T23:08:28Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/743472552",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Conversely, if we assume that the first `\\` / `/` in a path is a path separator _only_, you can make the argument that the root directory name is the _empty string_ that _precedes that first separator_, in which case `Split-Path -Leaf C:\\` and `Split-Path -Leaf /` should return `''`.\r\n\r\nWhile this works well when _building_ paths (e.g., `'' + '/' + 'foo'` to construct `/foo`), it is inherently _ambiguous_ in other contexts, as `Split-Path -Parent /foo` and `Split-Path -Parent foo` would then yield the same result, for instance - the empty string.\r\n\r\nOn balance, conceiving of the root directory name as `\\` / `/` is the better choice.",
    "created_at": "2020-12-12T02:55:36Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14393#issuecomment-743690101",
    "id": 743690101,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14393",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MzY5MDEwMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/743690101/reactions"
    },
    "updated_at": "2020-12-12T02:56:42Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/743690101",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "I guess every logic is manageable when hidden behind a well designed api. Which is why I use join-path and split-path extensively with the hopes, that it will just handle this for me on all platforms.\r\n\r\nfrom my personal standpoint, paths that start with a separator are just an indication for them to be absolute and thus relative to the root directory, which has no name. so I would agree to your first point.\r\neven the second part actually sounds fine to me.\r\npassing only a single path segment to split-path and retrieving no parent and the segment as leaf seems just logical.\r\nit basically means that an empty path '' just points to root. just as '/', '\\\\', 'C:' or 'X:\\\\'\r\n\r\nresolving such a path would then result in a 'C:\\\\' (based on the working directories drive) or '/'\r\n\r\nhowever, im not sure how I would handle a split-path on an 'C:\\\\'. But I assume just returning 'C:' or 'C:\\\\' as parent and '' as leaf would just work fine",
    "created_at": "2020-12-12T10:02:04Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14393#issuecomment-743733004",
    "id": 743733004,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14393",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MzczMzAwNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/743733004/reactions"
    },
    "updated_at": "2020-12-12T10:08:40Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/743733004",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1927076?v=4",
      "events_url": "https://api.github.com/users/SeidChr/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeidChr/followers",
      "following_url": "https://api.github.com/users/SeidChr/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeidChr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeidChr",
      "id": 1927076,
      "login": "SeidChr",
      "node_id": "MDQ6VXNlcjE5MjcwNzY=",
      "organizations_url": "https://api.github.com/users/SeidChr/orgs",
      "received_events_url": "https://api.github.com/users/SeidChr/received_events",
      "repos_url": "https://api.github.com/users/SeidChr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeidChr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeidChr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeidChr"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Just a terminology quibble:\r\n\r\n> paths that start with a separator are just an indication for them to be _absolute_\r\n\r\n* On Window, they are _rooted_ (`[IO.Path]::IsPathRooted()` returns `$true`), but _not absolute_ (`[IO.Path]::IsPathFullyQualified()` returns `$false`)\r\n\r\n* On Unix, they are both rooted and absolute.\r\n\r\nUsing `Join-Path` and `Split-Path` is good practice: `Join-Path` avoids the `C:\\\\foo` problem (though `Split-Path` doesn't correct it).\r\n\r\nHowever, another reason not to treat `''` as the root directory is that `Join-Path '' foo` simply fails.\r\n\r\nAlso, as stated, if you made `Split-Path /foo -Parent` return `''` (even though on Unix it currently does, but that's a variation of the bug at hand), you couldn't distinguish it from `Split-Path foo -Parent` - at least not without introducing a serious breaking change (such as to return `.` in the latter case).\r\n\r\nSimilarly, for consistency, you'd have to then allow `Get-ChildItem ''` to list the _root_ directory, whereas it currently lists the _current_ one.\r\n\r\nIn short: It is generally problematic to refer to a _specific_ something (the root dir.) with nothing (the empty string), and using `\\`/ `/` as the name of the root dir. is the best compromise.\r\n\r\nAs for how `Split-Path C:\\ -<switch>` _should_ be handled:\r\n\r\n* `Split-Path C:\\ -Leaf`  on Windows and `Split-Path / -Leaf` on Unix should return the _name of the root dir_, and therefore `\\` an `/`, respectively\r\n\r\n    * On Windows, it currently returns `C:\\`, which strikes me as incorrect - but fixing it would be a breaking change.\r\n\r\n    * On Unix - which is the bug at hand - it returns `''` (which by the (to me ill-advised) logic of considering `''` the root dir.'s name would actually be correct). \r\n\r\n* `Split-Path C:\\ -Parent`  on Windows and `Split-Path / -Parent` on Unix  are tricky:\r\n\r\n   * The root directory by definition has no parent, and `[IO.Path]::GetDirectoryName()` indicates this by returning `$null` - as opposed to the `''` returned for something like `[IO.Path]::GetDirectoryName('foo')`\r\n\r\n   * This is too subtle a distinction for PowerShell, where `[string]` values usually do not contain`$null`:\r\n       * On Windows , `Split-Path C:\\ -Parent` currently returns `''` - changing that would be a breaking change.\r\n       * On Unix, `Split-Path / -Parent` is currently _broken_, as you reported in #14392, which is a duplicate of #10092; for consistency, absent a breaking change, it should also return `''`.\r\n\r\n      * The upshot is that if you call `Split-Path -Parent $path`  on an unknown path `$path` and get `''` back, you'll need further investigation (`[IO.Path]::IsPathRooted()`) to infer whether `$path` refers to a root dir. (with or without a drive spec.) or is a mere file or directory name such as `foo`.\r\n        * Note that `Split-Path -IsAbsolute` isn't suitable for this distinction, because `Split-Path \\ -IsAbsolute` is `$false` on Windows.\r\n        * As an aside: It is `Test-Path` that should have this switch - it never made sense on `Split-Path`. Better yet, `Test-Path` should support an enumeration-based `-PathForm` / `-Form` parameter that allows testing for specific path forms (absolute, relative, rooted, UNC) - see #14402\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "created_at": "2020-12-12T16:04:04Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14393#issuecomment-743777065",
    "id": 743777065,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14393",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0Mzc3NzA2NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/743777065/reactions"
    },
    "updated_at": "2020-12-12T16:40:51Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/743777065",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "Don't get me wrong. I agree to you on how this should be handled.\r\nI was just giving a different point of view. Doesn't mean it was the proposed way to fix it.",
    "created_at": "2020-12-12T20:53:53Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14393#issuecomment-743858033",
    "id": 743858033,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14393",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0Mzg1ODAzMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/743858033/reactions"
    },
    "updated_at": "2020-12-12T20:53:53Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/743858033",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1927076?v=4",
      "events_url": "https://api.github.com/users/SeidChr/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeidChr/followers",
      "following_url": "https://api.github.com/users/SeidChr/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeidChr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeidChr",
      "id": 1927076,
      "login": "SeidChr",
      "node_id": "MDQ6VXNlcjE5MjcwNzY=",
      "organizations_url": "https://api.github.com/users/SeidChr/orgs",
      "received_events_url": "https://api.github.com/users/SeidChr/received_events",
      "repos_url": "https://api.github.com/users/SeidChr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeidChr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeidChr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeidChr"
    }
  }
]
