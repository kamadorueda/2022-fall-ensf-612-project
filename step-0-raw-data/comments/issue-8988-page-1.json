[
  {
    "author_association": "COLLABORATOR",
    "body": "Do you mean that we should interpret the path as Literal? It is not a breaking change and I like it.\r\n\r\n@rjmholt It could be good issue for hackathon if you still continue.",
    "created_at": "2019-02-26T17:48:33Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/8988#issuecomment-467541188",
    "id": 467541188,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8988",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzU0MTE4OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/467541188/reactions"
    },
    "updated_at": "2019-02-26T17:49:19Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/467541188",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@iSazonov: Yes, as in the case of #4726 I think the path should always have been interpreted as a _literal_ path.\r\n\r\nDo note, however, that it _is_ technically a breaking change, because someone could rely on code such as the following:\r\n\r\n```powershell\r\n# Note: Only works if exactly ONE *.txt file exists in the current dir.\r\nswitch -file *.txt { 'hi' { 'there' } }\r\n```\r\n\r\nThat said, I think it's a [Bucket 3: Unlikely Grey Area](https://github.com/PowerShell/PowerShell/blob/master/docs/dev-process/breaking-change-contract.md#bucket-3-unlikely-grey-area) change.",
    "created_at": "2019-02-26T17:59:45Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/8988#issuecomment-467545505",
    "id": 467545505,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8988",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzU0NTUwNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/467545505/reactions"
    },
    "updated_at": "2019-02-26T18:16:36Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/467545505",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@SteveL-MSFT Could PowerShell Committee approve the breaking change?",
    "created_at": "2019-02-26T18:03:28Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/8988#issuecomment-467546947",
    "id": 467546947,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8988",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzU0Njk0Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/467546947/reactions"
    },
    "updated_at": "2019-02-26T18:03:28Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/467546947",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Wouldn't it be better to just clarify this in the documentation? It's easily solved:\r\n\r\n```powershell\r\n$file = [WildcardPattern]::Escape('foo[0].txt')\r\nswitch -file $file { 'abc' { 'something something' } }\r\n```",
    "created_at": "2019-02-28T16:24:03Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/8988#issuecomment-468337392",
    "id": 468337392,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8988",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODMzNzM5Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/468337392/reactions"
    },
    "updated_at": "2019-02-28T16:24:03Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/468337392",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7413755?v=4",
      "events_url": "https://api.github.com/users/IISResetMe/events{/privacy}",
      "followers_url": "https://api.github.com/users/IISResetMe/followers",
      "following_url": "https://api.github.com/users/IISResetMe/following{/other_user}",
      "gists_url": "https://api.github.com/users/IISResetMe/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/IISResetMe",
      "id": 7413755,
      "login": "IISResetMe",
      "node_id": "MDQ6VXNlcjc0MTM3NTU=",
      "organizations_url": "https://api.github.com/users/IISResetMe/orgs",
      "received_events_url": "https://api.github.com/users/IISResetMe/received_events",
      "repos_url": "https://api.github.com/users/IISResetMe/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/IISResetMe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/IISResetMe/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/IISResetMe"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I mean, given the fact that having a wildcard that resolves to multiple files _fails with no reason_ I think that it would make more sense to be a literal path.\r\n\r\nThe alternative would be to _fix_ the wildcard interpretation by a) allowing it to actually work with wildcards that resolve to multiple files, **and** b) add a -LiteralFile switch instead to allow ease of use with literal paths. \r\n\r\nBoth should probably accept an array of values, too.",
    "created_at": "2019-02-28T16:30:05Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/8988#issuecomment-468339915",
    "id": 468339915,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8988",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODMzOTkxNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/468339915/reactions"
    },
    "updated_at": "2019-02-28T16:30:50Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/468339915",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I'd consider the Issue as UX issue. Any complications worsen UX. So allowing wildcards implicitly convert switch to cycle that is likely to worsen UX.",
    "created_at": "2019-02-28T16:47:22Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/8988#issuecomment-468346619",
    "id": 468346619,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8988",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODM0NjYxOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/468346619/reactions"
    },
    "updated_at": "2019-02-28T16:47:22Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/468346619",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "If we stick with the current single-input-file-only behavior:\r\n\r\n* The always-as-wildcard interpretation is so useless and unexpected (as it is in the invocation scenarios in #4726) that the _only_ reason to stick with it would be the fear of breaking existing code.\r\n\r\n* Since I think it's pretty unlikely someone relied on the old behavior (why would you use a wildcard that you know must resolve to a _single_ file and not just target that single file directly? if you don't know, use `Get-Item` / `Convert-Path` / `Resolve-Path`), the behavior should be fixed.\r\n\r\n---\r\n\r\nAllowing _multiple_ input files is intriguing, but I think it would requires additional functionality to be useful:\r\n\r\n* Access to information about the file currently being processed.\r\n\r\n* Possibly also allow actions to be taken before and after a given file has been processed, along the lines of [GNU `awk`'s `BEGINFILE` / `ENDFILE` patterns](https://www.gnu.org/software/gawk/manual/html_node/BEGINFILE_002fENDFILE.html).\r\n\r\nWhile `switch -File` currently languishes in obscurity, perhaps adding such functionality could make it a more widely used tool;  it certainly provides great performance benefits.\r\n\r\nEven then it's possible to stay away from _wildcards_, however, so as to avoid the whole `-Path` / `-LiteralPath` (`-File`, `-LiteralFile`) mess; with _array_ support, you could then write:\r\n\r\n```powershell\r\nswitch -File (Get-Item *.txt) { ...\r\n```\r\n\r\n",
    "created_at": "2019-02-28T16:48:34Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/8988#issuecomment-468347100",
    "id": 468347100,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8988",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODM0NzEwMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/468347100/reactions"
    },
    "updated_at": "2019-02-28T16:48:55Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/468347100",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Looks like duplication of Select-String.",
    "created_at": "2019-02-28T17:22:05Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/8988#issuecomment-468359846",
    "id": 468359846,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8988",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODM1OTg0Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/468359846/reactions"
    },
    "updated_at": "2019-02-28T17:22:05Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/468359846",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "To be clear:\r\n\r\nI'd personally be fine with just fixing the current behavior without adding functionality, given that the `switch` statement is already a complex beast and that wrapping a `Get-ChildItem` loop around `switch -file` is not much of a hardship (and any per-input-file logic would go into that loop).\r\n\r\nAs for your specific argument:\r\n\r\n> Looks like duplication of Select-String.\r\n\r\nIt would be a duplication in (loosely) the same sense that `-match` is a duplication of `Select-String`: an expression-mode alternative that performs much better (and provides more flexibility).\r\n",
    "created_at": "2019-02-28T17:27:52Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/8988#issuecomment-468361965",
    "id": 468361965,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8988",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODM2MTk2NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/468361965/reactions"
    },
    "updated_at": "2019-02-28T17:29:10Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/468361965",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@mklement0 \r\n\r\n>  why would you use a wildcard that you know must resolve to a _single_ file and not just target that single file directly?\r\n\r\nInteractively it's great.  I don't think a day goes by that I don't use a wildcard with `cd` at least once (so many guid folders).  Granted I can probably count the number of times I've used `switch` interactively on one hand.\r\n\r\nI'm not particularly arguing for or against the suggested changes (partially because I didn't know until now `switch` even had that parameter).  It just seemed like the general idea behind them is that it's pointless to have wildcards if the target must be a single file, if that's the case I strongly disagree.",
    "created_at": "2019-03-01T15:25:02Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/8988#issuecomment-468701757",
    "id": 468701757,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8988",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODcwMTc1Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/468701757/reactions"
    },
    "updated_at": "2019-03-01T15:25:02Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/468701757",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> Interactively it's great.\r\n\r\nYes, but if you're looking for _one_ file interactively, and you don't want to type the whole name / you're not sure of its exact name, you you'd use _tab completion_ for that; the _statement_ doesn't need to support it - and it even works when you type `switch -file *.txt<tab>` (but see next point).\r\n\r\n> Granted I can probably count the number of times I've used `switch` interactively on one hand.\r\n\r\nPersonally, I can count it on zero hands 😁.\r\nWe are talking about _scripting_ here.\r\n\r\n> I didn't know until now `switch` even had that parameter\r\n\r\nYes, it's little-known, at least in part because you don't _expect_ it, given that the analogous construct in other languages doesn't have such a feature - it is quite handy, though; and fast, by PowerShell standards.\r\n\r\n> is that it's pointless to have wildcards if the target must be a single file\r\n\r\nTo summarize:\r\n\r\n* In scripting, it is pointless - it creates more problems than it solves, notably with _accidental_ wildcard-like literals paths such as `foo[0].txt`.\r\n   * A related problem from #4726: `$null > ./foo[0].txt` -> `Cannot perform operation because the wildcard path ./foo[0].txt did not resolve to a file.`\r\n\r\n* Interactively - if needed at all -  you can use tab completion.\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "created_at": "2019-03-01T15:53:37Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/8988#issuecomment-468711673",
    "id": 468711673,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8988",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODcxMTY3Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/468711673/reactions"
    },
    "updated_at": "2019-03-01T15:56:51Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/468711673",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "You're quite right @mklement0 (I forgot we're talking about _a single file here_), this behavior is useless at best. +1 for treating it as a literal path",
    "created_at": "2019-03-01T16:18:31Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/8988#issuecomment-468720416",
    "id": 468720416,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8988",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODcyMDQxNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/468720416/reactions"
    },
    "updated_at": "2019-03-01T16:18:31Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/468720416",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7413755?v=4",
      "events_url": "https://api.github.com/users/IISResetMe/events{/privacy}",
      "followers_url": "https://api.github.com/users/IISResetMe/followers",
      "following_url": "https://api.github.com/users/IISResetMe/following{/other_user}",
      "gists_url": "https://api.github.com/users/IISResetMe/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/IISResetMe",
      "id": 7413755,
      "login": "IISResetMe",
      "node_id": "MDQ6VXNlcjc0MTM3NTU=",
      "organizations_url": "https://api.github.com/users/IISResetMe/orgs",
      "received_events_url": "https://api.github.com/users/IISResetMe/received_events",
      "repos_url": "https://api.github.com/users/IISResetMe/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/IISResetMe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/IISResetMe/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/IISResetMe"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> Yes, but if you're looking for _one_ file interactively, and you don't want to type the whole name / you're not sure of its exact name, you you'd use _tab completion_ for that\r\n\r\nIf you mean that's how everyone would use it currently, I would disagree.  I personally do not tend to do that because the pattern is typically easier to edit than the expanded value if there's an issue.  I can't say which is more common, but either way it's not universal.\r\n\r\n> We are talking about _scripting_ here.\r\n\r\nRight I understand that, but that's my point.  It makes perfect sense from a _scripting_ perspective, but _only_ from that perspective.",
    "created_at": "2019-03-01T16:23:08Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/8988#issuecomment-468722076",
    "id": 468722076,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8988",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODcyMjA3Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/468722076/reactions"
    },
    "updated_at": "2019-03-01T16:23:08Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/468722076",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@SeeminglyScience Look at it from this angle: wildcard patterns are inherently _ambiguous_ (hence their usefulness) - and it doesn't make sense to expect the user to supply an ambiguous reference when we're explicitly looking for _exactly one file_. ",
    "created_at": "2019-03-01T16:26:38Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/8988#issuecomment-468723386",
    "id": 468723386,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8988",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODcyMzM4Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/468723386/reactions"
    },
    "updated_at": "2019-03-01T16:26:48Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/468723386",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7413755?v=4",
      "events_url": "https://api.github.com/users/IISResetMe/events{/privacy}",
      "followers_url": "https://api.github.com/users/IISResetMe/followers",
      "following_url": "https://api.github.com/users/IISResetMe/following{/other_user}",
      "gists_url": "https://api.github.com/users/IISResetMe/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/IISResetMe",
      "id": 7413755,
      "login": "IISResetMe",
      "node_id": "MDQ6VXNlcjc0MTM3NTU=",
      "organizations_url": "https://api.github.com/users/IISResetMe/orgs",
      "received_events_url": "https://api.github.com/users/IISResetMe/received_events",
      "repos_url": "https://api.github.com/users/IISResetMe/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/IISResetMe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/IISResetMe/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/IISResetMe"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@IISResetMe In a script I agree 100%. I definitely would not recommend using it there.  Interactively however, it makes the same amount of sense that all of the other shell related quality of life features do.\r\n\r\nFor example, lets say you are navigating through `HKLM:/Software/Microsoft/Windows/CurrentVersion/Uninstall`.  If you are trying to `cd` to a specific key, it's most likely a guid.  Yeah you could use wildcards and then tab complete, but that's going to be almost a whole line of the prompt by itself.  And yeah, that's not *that* big of a deal, but neither is typing `Set-Location` instead of `cd`.\r\n\r\nMaybe none of that applies to this scenario because it's an obscure parameter on a keyword unlikely to be used interactively all that often.  I'll concede that absolutely, but the idea that wildcards are only useful when targeting multiple items is not taking interactive use into account.",
    "created_at": "2019-03-01T16:53:41Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/8988#issuecomment-468732800",
    "id": 468732800,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8988",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODczMjgwMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/468732800/reactions"
    },
    "updated_at": "2019-03-01T16:54:41Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/468732800",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "You're talking about two different things now - _relative path resolution_ is absolutely useful regardless of whether you're describing one item or multiple ones, and yes there are definitely cases where the default tab completion behavior (globbing _and_ absolute path resolution) are annoying for interactive use.\r\n\r\nBut again, super narrow use case here (and [_only files_](https://github.com/PowerShell/PowerShell/blob/233b54ed65d398604c0bfadccdc59cb81eb7e5de/src/System.Management.Automation/engine/runtime/Operations/MiscOps.cs#L2367), no other providers)",
    "created_at": "2019-03-01T17:13:02Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/8988#issuecomment-468739213",
    "id": 468739213,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8988",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODczOTIxMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/468739213/reactions"
    },
    "updated_at": "2019-03-01T17:13:02Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/468739213",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7413755?v=4",
      "events_url": "https://api.github.com/users/IISResetMe/events{/privacy}",
      "followers_url": "https://api.github.com/users/IISResetMe/followers",
      "following_url": "https://api.github.com/users/IISResetMe/following{/other_user}",
      "gists_url": "https://api.github.com/users/IISResetMe/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/IISResetMe",
      "id": 7413755,
      "login": "IISResetMe",
      "node_id": "MDQ6VXNlcjc0MTM3NTU=",
      "organizations_url": "https://api.github.com/users/IISResetMe/orgs",
      "received_events_url": "https://api.github.com/users/IISResetMe/received_events",
      "repos_url": "https://api.github.com/users/IISResetMe/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/IISResetMe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/IISResetMe/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/IISResetMe"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Yeah we're on the same page.  What I disagree with is damaging the interactive experience, even though none of us happen to use it interactively.\r\n\r\nTbh I think it would make more sense to add support for multiple files rather than to remove wild card support.",
    "created_at": "2019-03-01T18:04:02Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/8988#issuecomment-468755468",
    "id": 468755468,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8988",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODc1NTQ2OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/468755468/reactions"
    },
    "updated_at": "2019-03-01T18:04:02Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/468755468",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I'm definitely down for that, but I think that a switch to allow proper literal path input would be needed as well.\r\n\r\nSwitch is very useful in a lot of cases, so expanding that utility is a good call overall, I think. 😄 ",
    "created_at": "2019-03-01T18:08:37Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/8988#issuecomment-468756827",
    "id": 468756827,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8988",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODc1NjgyNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/468756827/reactions"
    },
    "updated_at": "2019-03-01T18:08:37Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/468756827",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Agreed, @vexx32 -  `switch -File` in particular is a powerful feature that deserves wider exposure.\r\n\r\nIf we go the route of supporting wildcards / an array of files,  in addition to a dedicated `-LiteralFile` parameter, for multi-file processing to be truly useful, we'd need at least new functionality to provide context information about the file currently being processed and possibly also special labels to handle before/after per-file events, as [discussed above](https://github.com/PowerShell/PowerShell/issues/8988#issuecomment-468347100).\r\n\r\nI'm personally fine with that added complexity, but not everyone may be.\r\n",
    "created_at": "2019-03-01T18:20:05Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/8988#issuecomment-468760501",
    "id": 468760501,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8988",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODc2MDUwMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/468760501/reactions"
    },
    "updated_at": "2019-03-01T18:20:05Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/468760501",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> but not everyone may be.\r\n\r\nThe feature \"switch -file\" is seems very rarely used. Is it worth the effort?",
    "created_at": "2019-03-01T18:33:22Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/8988#issuecomment-468764739",
    "id": 468764739,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8988",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODc2NDczOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/468764739/reactions"
    },
    "updated_at": "2019-03-01T18:33:22Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/468764739",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "If we don't go that route, @SeeminglyScience:\r\n\r\nBefore we look at whether any interactive experience would actually be damaged:\r\n\r\nCompromising the robustness of a language feature for the sake of interactive convenience is ill-advised.\r\n\r\n---\r\n\r\nLet's look at the interactive experience, _which wouldn't change_:\r\n\r\nWith `foo.txt` present in the current dir:\r\n\r\n```powershell\r\nswitch -file *.txt<tab>\r\n```\r\nexpands to:\r\n\r\n```powershell\r\nswitch -file ./foo.txt\r\n```\r\n\r\nwhich seems reasonable to me - no problem with expansion to a full path and bloating of the command line.\r\n\r\nThe same goes for your example with `HKLM:/Software/Microsoft/Windows/CurrentVersion/Uninstall`:\r\n\r\nYou can't _submit_ with a wildcard in place - because _multiple_ paths match, so you'll get an error message.\r\n\r\nYou can _tab-complete_, however, to _home in_ on the one path you're interested in and the submit the expanded result.\r\n\r\n\r\n```powershell\r\n# Cycle through child keys, then submit.\r\ncd HKLM:/Software/Microsoft/Windows/CurrentVersion/Uninstall/*<tab> \r\n```\r\n\r\nSo, what convenience would be lost?",
    "created_at": "2019-03-01T18:34:46Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/8988#issuecomment-468765149",
    "id": 468765149,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8988",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODc2NTE0OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/468765149/reactions"
    },
    "updated_at": "2019-03-01T18:35:06Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/468765149",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@iSazonov: \r\n\r\nThe more interesting question is: \r\n\r\n_Should_ it be used more frequently, because it is useful and people are missing out by not using it?\r\n\r\nIf we agree that it is useful, we can:\r\n\r\n* try to make it better-known \r\n* improve it.\r\n\r\n",
    "created_at": "2019-03-01T18:38:28Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/8988#issuecomment-468766296",
    "id": 468766296,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8988",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODc2NjI5Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/468766296/reactions"
    },
    "updated_at": "2019-03-01T18:38:28Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/468766296",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@mklement0 \r\n\r\n> Compromising the robustness of a language feature for the sake of interactive convenience is ill-advised.\r\n\r\nI can see where you are coming from with this, and I respect the perspective.  We do not agree here though, I believe the interactive experience is just as important as the scripting experience.  There are already *many* instances of compromised robustness for the interactive experience.\r\n\r\n> You can't _submit_ with a wildcard in place - because _multiple_ paths match, so you'll get an error \r\nmessage.\r\n\r\nYou can't submit with _just_ a wild card.  Lets say you have a folder like this.\r\n\r\n```\r\nInstallers\r\n    |- {1620545f-25c8-4db7-a4ba-88ffbfb8ad66}\r\n        |- MyFile.txt\r\n    |- {1ed1767f-0e9f-4040-b128-d23ec967552d}\r\n    |- {37e65536-9c18-4f1b-b78b-41fe22f6d20d}\r\n    |- {4bb70271-a65e-48a9-9570-50b2fa3b1db7}\r\n```\r\n\r\nYou could `cd` to the last folder with `cd *-50b*` and you could access the txt file with `switch -File ./*/MyFile.txt`.\r\n\r\nYeah they can still be tab completed, but the former would become `cd '{4bb70271-a65e-48a9-9570-50b2fa3b1db7}'` and the latter `switch -File './{1620545f-25c8-4db7-a4ba-88ffbfb8ad66}/MyFile.txt'`.",
    "created_at": "2019-03-01T19:12:23Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/8988#issuecomment-468777720",
    "id": 468777720,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8988",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODc3NzcyMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/468777720/reactions"
    },
    "updated_at": "2019-03-01T19:12:23Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/468777720",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Thanks, @SeeminglyScience.\r\n\r\n> There are already _many_ instances of compromised robustness for the interactive experience.\r\n\r\nI know it's a tangent, but if you'll indulge my curiosity: are you thinking of elastic syntax (e.g., prefix-unique parameter names such as `-Expand` for `-ExpandProperty`), or are you thinking of other cases (too)?\r\n\r\nAs for your example:\r\n\r\n> Yeah they can still be tab completed, but the former would become `cd '{4bb70271-a65e-48a9-9570-50b2fa3b1db7}'` and the latter `switch -File './{1620545f-25c8-4db7-a4ba-88ffbfb8ad66}/MyFile.txt'`.\r\n\r\nI know it's a matter of personal opinion, but that seems like a small price to pay to me, especially if  a robust scripting experience is to be gained - especially in this case, given that `switch` is not really suited to interactive use.",
    "created_at": "2019-03-01T19:34:51Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/8988#issuecomment-468785069",
    "id": 468785069,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8988",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODc4NTA2OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/468785069/reactions"
    },
    "updated_at": "2019-03-01T19:37:04Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/468785069",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> I know it's a tangent, but if you'll indulge my curiosity: are you thinking of elastic syntax (e.g., prefix-unique parameter names such as -Expand for -ExpandProperty), or are you thinking of other cases (too)?\r\n\r\nThat's a good example, there's definitely other cases though. Here's some off the top of my head:\r\n\r\n1. Syntax is designed around accomidating interactive use\r\n   - Member expressions cannot have the `.` on a new line\r\n   - Curly brackets cannot be on a new line during command parsing\r\n1. Module autoloading. Can lead to loading clobbered (and possibly broken) commands. If depended on in a script it can also lead to issues with portability (different `PSModulePath`s/different installed modules) or simply make it more difficult to tell what modules a script depends on.  Yeah you can fully qualify and/or set `PSModuleAutoLoading` in a `try`/`finally` but both neither are great for readability.\r\n1. Aliases. I don't mean the typical \"people use aliases in scripts\".  I mean the fact that aliases exist and take priority over all over commands in look up really limits what \"private\" function names you can use.  For example, the `scoop` project uses a function named `shim` heavily, and I *had* an alias for `shim` which completely broke the project.\r\n1. The level of dynamicity. I'm not saying PowerShell would have been static if it didn't have an interactive component, but I don't think it would be as dynamic. There are lots of issues where state (variables, commands, imported modules, etc) is leaked into a script in unexpected and difficult to troubleshoot ways.\r\n\r\nI think in the answer in general is that a sizable portion of core design decisions were made with interactivity in mind.  Often with *some sort* of downside for scripting.  I think PowerShell is excellent in both interactive use and scripting, but scripting would have *definitely* been more robust without worrying about interactive use.",
    "created_at": "2019-03-04T13:51:03Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/8988#issuecomment-469259430",
    "id": 469259430,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8988",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTI1OTQzMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/469259430/reactions"
    },
    "updated_at": "2019-03-04T13:51:03Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/469259430",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@PowerShell/powershell-committee reviewed this.  We agree that switch iterating over multiple files would be a great new feature.  Proposal is that `-File` would support multiple files (wildcard or collection) and a new `-LiteralFile` would be added to support a literal path.",
    "created_at": "2019-03-06T23:33:02Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/8988#issuecomment-470320181",
    "id": 470320181,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8988",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MDMyMDE4MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 4,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 4,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/470320181/reactions"
    },
    "updated_at": "2019-03-06T23:33:02Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/470320181",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Great to hear, @SteveL-MSFT; let me state again that while making `-File` support multiple files is great in principle, its utility is severely diminished if you don't also _somehow_ provide information as to which particular file's lines are being processed, analogous to `Select-String` providing that information in the `Path` ETS property that matching lines are decorated with.",
    "created_at": "2019-04-15T15:31:24Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/8988#issuecomment-483301374",
    "id": 483301374,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8988",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MzMwMTM3NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/483301374/reactions"
    },
    "updated_at": "2019-04-15T15:31:24Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/483301374",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the examples, @SeeminglyScience.\r\n\r\nWhile there is an inherent tension between designing for interactive convenience and readability / long-term maintainability, PowerShell by and large does a great job of accommodating both - but there's plenty of room for improvement.\r\n\r\n> Syntax is designed around accommodating interactive use. Member expressions cannot have the . on a new line. Curly brackets cannot be on a new line during command parsing\r\n\r\nTrue, but the curly braces restriction doesn't apply in expression mode, and in expression mode you can at least _end_ the line with `.` in order to continue on the next line.\r\n\r\n> Module autoloading.\r\n\r\nThis problem strikes me as solvable: with side-by-side module loading using fully qualified module names and scoped module imports.\r\n\r\n> Aliases\r\n\r\nA current problem for sure, but we could take a page out of Bash's book, where alias expansion is _turned off_ in scripts by default; see https://github.com/PowerShell/PowerShell/issues/2000#issuecomment-326649565\r\n\r\nMy linked comment also proposes an _opt-in_  for disallowing _elastic syntax_ in scripts (such as using `-Expand` for `-ExpandProperty`).\r\n\r\nOn the flip side, #4730 proposes making elastic syntax even more elastic by allowing you to prefix-abbreviate _operator_ names (e.g., `'foo' -m 'o'` for `'foo' -match 'o'`).\r\n\r\n> There are lots of issues where state (variables, commands, imported modules, etc) is leaked into a script in unexpected and difficult to troubleshoot ways.\r\n\r\nIndeed, PowerShell currently has a problem with global state affecting code, taking the global effect of `Set-Location` and the dynamic scoping of `Set-StrictMode` as examples.\r\n\r\nEven the dynamic scoping of variables (descendent scopes seeing a caller's variables by default) is worth reconsidering.\r\n\r\nAgain, these problems are solvable. \r\n\r\nAs an aside: Bash doesn't have the working-dir. problem, for instance, because its scripts execute in a _child process_; for the same reason, there's no ability to modify the _global_ scope.\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "created_at": "2019-04-15T15:53:09Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/8988#issuecomment-483310567",
    "id": 483310567,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8988",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MzMxMDU2Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/483310567/reactions"
    },
    "updated_at": "2019-04-15T16:00:53Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/483310567",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> True, but the curly braces restriction doesn't apply in expression mode, and in expression mode you can at least end the line with `.` in order to continue on the next line.\r\n\r\nYeah it's limited in scope for sure, just something that bothers me personally a lot.\r\n\r\n*Note*: I'm not advocating for it to be changed, I understand why it is the way it is and I don't see a better solution.  It's still the first example I can think of though 🙂\r\n\r\n> This problem strikes me as solvable: with side-by-side module loading using fully qualified module names and scoped module imports.\r\n\r\nI would be more inclined to call fully qualifying commands is a workaround than a fix.  It severely hurts readability and forces you to splat just about every command if you also want to keep a reasonable line length.\r\n\r\nI'm not clear on what you mean by scoped module imports.\r\n\r\n> A current problem for sure, but we could take a page out of Bash's book, where alias expansion is turned off in scripts by default; see #2000 (comment)\r\n\r\nI would absolutely love to see an opt-in AST-level (similar to `using`) setting for that.  I think making it default would cause enough issues to hurt adoption significantly.\r\n\r\n> On the flip side, #4730 proposes making elastic syntax even more elastic by allowing you to prefix-abbreviate operator names (e.g., 'foo' -m 'o' for 'foo' -match 'o').\r\n\r\nI've always wanted that for interactive use 😁 I mess that up going back and forth between `? prop -m value` and `? {$_.prop.otherprop -m 'value'}` at least once a day.  Unfortunately I also agree that it probably *shouldn't* happen to allow for new operators.  Though I dream of a hacky way I could enable it in my profile 🙂 \r\n\r\n> Even the dynamic scoping of variables (descendent scopes seeing a caller's variables by default) is worth reconsidering.\r\n\r\nAgain I'd love to see an AST-level modifier for this. Default seems a bit too far on the drastic side, I think that ship has sailed.\r\n\r\nAlso just to clarify, I didn't necessarily give those examples as things that need to be fixed.  They all have work arounds (though some of them should certainly have better work arounds) They're just examples of the scripting experience taking a hit for the good of the interactive experience. Whether or not they *should* be fixed is certainly debatable, but they are still *decisions* that were made at least partially to cater to interactivity.",
    "created_at": "2019-04-15T17:35:00Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/8988#issuecomment-483347060",
    "id": 483347060,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8988",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MzM0NzA2MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/483347060/reactions"
    },
    "updated_at": "2019-04-15T17:40:26Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/483347060",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "As for opt-in vs. changing defaults:\r\n\r\nUnderstood that opt-ins are the best we can do if backward compatibility is a must.\r\nBut at some point we're back to #6745 and the hope that there may be a version that can shed historical baggage and doesn't require explicit opt-in to what should be the default.\r\n\r\n> I would be more inclined to call fully qualifying commands is a workaround than a fix.\r\n\r\nIf you want robust dependency management, you need to be explicit about version number [ranges].  \r\nFully agreed that the current method for specifying FQMN (fully-qualified module names) is unwieldy, but can we can take a page out of npm's book, with identifiers such as `PSReadline@1.2` - and generally establishing semver (semantic versioning) in the PowerShell world sounds like a worthwhile goal as well.\r\n\r\n> I'm not clear on what you mean by scoped module imports.\r\n\r\nCurrently, module imports take effect _scope-domain-wide_ by default (by _scope domain_ I mean the scope stacks for non-module code vs. each module's).\r\n\r\nJust like we're discussing variables and strict mode as perhaps better being lexically scoped, so could modules.\r\n\r\nYou _can_ already restrict `Import-Module` to the current scope with `-Scope Local`, but (a) it's an explicit opt-in and (b)  _its descendants_ again see the imports too, and - perhaps most importantly - `using module` is implicitly and invariably scope-domain-wide.\r\n\r\n> They're just examples of the scripting experience taking a hit for the good of the interactive experience.\r\n\r\nAmong all the things discussed, the _only_ one that strikes me as _inherently_ necessary - due to PowerShell having to be both a shell and a full-fledged scripting language - is the one related to argument mode vs. expression mode (curly braces, periods); as an aside: @KirkMunro's PR for allowing `|` to be placed on the next line - #8938  - will bring _some_ relief there.\r\n\r\nAll others _need not be_ compromises, and should be fixed:\r\n\r\n* as _opt-ins_, if backward compatibility is paramount\r\n\r\n* by changing the _default behavior_, in a version allowed to break compatibility\r\n\r\n\r\n\r\n",
    "created_at": "2019-04-15T19:33:22Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/8988#issuecomment-483387399",
    "id": 483387399,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8988",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MzM4NzM5OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/483387399/reactions"
    },
    "updated_at": "2019-04-15T19:33:22Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/483387399",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> Understood that opt-ins are the best we can do if backward compatibility is a must.\r\nBut at some point we're back to #6745 and the hope that there may be a version that can shed historical baggage and doesn't require explicit opt-in to what should be the default.\r\n\r\nI'm not suggesting it be opt-in purely for compatibility. I don't agree that we should make scripts act all that differently by default.  I'd love to see some opt-in options for making a script or module a lot more strict, but having code that runs (more or less) the same in a script as it does interactively is incredibly valuable.  That keeps the learning curve *very* approachable and makes experimentation and prototypes a breeze. I'd love to see the opt-in settings for an easier way to get a more stable experience in large scale deployments/unknown environments, I do worry about the effect such a default would have outside of that scenario.\r\n\r\n> If you want robust dependency management, you need to be explicit about version number [ranges].\r\nFully agreed that the current method for specifying FQMN (fully-qualified module names) is unwieldy, but can we can take a page out of npm's book, with identifiers such as PSReadline@1.2 - and generally establishing semver (semantic versioning) in the PowerShell world sounds like a worthwhile goal as well.\r\n\r\nYeah for sure, but my point is that it shouldn't need to be declared on *every instance of every command invocation*.\r\n\r\nWe need a way to say I want command discovery to prioritize:\r\n\r\n* Module `x`\r\n* With version `y`\r\n* For this scope/module\r\n\r\nSo when you call `Get-Item` It doesn't import a version from `C:\\BadVendor\\MyHackyCommandOverrides.psd1` with no `Path` parameter.  Right now you can do `Microsoft.PowerShell.Management\\Get-Item` but a script full of that is very difficult to read.\r\n\r\n> Currently, module imports take effect scope-domain-wide by default (by scope domain I mean the scope stacks for non-module code vs. each module's).\r\n\r\nI know you probably already know this, but for anyone else following: PowerShell refers to that as a `SessionState`.  There's one for each module and one that is global (referred to by the engine as the top level session state)\r\n\r\nI'm not really sure the benefit of changing it to default to scope, but I don't have very strong opinions on it.\r\n\r\n> Among all the things discussed, the only one that strikes me as *inherently* necessary  - due to PowerShell having to be both a shell and a full-fledged scripting language\r\n\r\nI didn't mean to imply there was no other choice, or even that interactivity was the sole reason behind those decisions.  I do believe though, that they were made at least *in part* if not *mostly* because of how they would impact interactivity.  I don't really know if I would refer to these decisions as things to be solved, but an opt-in way to overcome the drawbacks of them would be awesome.",
    "created_at": "2019-04-16T12:32:42Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/8988#issuecomment-483639772",
    "id": 483639772,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8988",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MzYzOTc3Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/483639772/reactions"
    },
    "updated_at": "2019-04-16T12:32:42Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/483639772",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": ">  but having code that runs (more or less) the same in a script as it does interactively is incredibly valuable. \r\n\r\nFully agreed, but there's a simpler solution: have distinct filename extensions: \r\n\r\n* one for \"loose\" code, just like on the command line.\r\n* one for strict code, where the extension alone turns on - and enforces - all behaviors needed for robust development\r\n\r\n>  I know you probably already know this, but for anyone else following: PowerShell refers to that as a SessionState\r\n\r\nI do know, thanks to your excellent blog post exploring the subject: https://seeminglyscience.github.io/powershell/2017/09/30/invocation-operators-states-and-scopes\r\n\r\nHowever, I think this term invites everlasting confusion, and given that it isn't yet widely known - fortunately, in this case - I was hoping to get a more descriptive name established, and my suggestion is _scope domain_: the _default scope domain_ for non-module code, and one _module scope domain_ for each loaded module - writing up a proposal in the docs repo has been on my to-do list for some time.\r\n\r\n> I'm not really sure the benefit of changing it to default to scope, but I don't have very strong opinions on it.\r\n\r\nIt's the same benefit as with all other instances of lexical scoping: what you do in the privacy of your own scope (if you will) doesn't affect others: my importing a module shouldn't magically make commands appear in your scope - unless that is the _explicit_ intent.\r\n\r\n> I do believe though, that they were made at least in part if not mostly because of how they would impact interactivity\r\n\r\nThe question is ultimately moot: It sounds like we agree that there are problems with the existing behavior and that we should think about ways to make things better (without compromising the interactive experience).\r\n",
    "created_at": "2019-04-16T12:58:08Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/8988#issuecomment-483648284",
    "id": 483648284,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8988",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MzY0ODI4NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/483648284/reactions"
    },
    "updated_at": "2019-04-16T12:59:18Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/483648284",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> Fully agreed, but there's a simpler solution: have distinct filename extensions:\r\n\r\n> one for \"loose\" code, just like on the command line.\r\n> one for strict code, where the extension alone turns on - and enforces - all behaviors needed for robust development\r\n\r\nLove it ❤️ \r\n\r\n> I do know, thanks to your excellent blog post exploring the subject: \r\n\r\n😁 \r\n\r\n> However, I think this term invites everlasting confusion, and given that it isn't yet widely known - fortunately, in this case - I was hoping to get a more descriptive name established, and my suggestion is scope domain: the default scope domain for non-module code, and one module scope domain for each loaded module - writing up a proposal in the docs repo has been on my to-do list for some time.\r\n\r\nThe word `domain` makes me think of something as `Runspace` level.  It took me a few reads to get what you meant.  To each their own on this one, I generally stick to referring to things as the engine does, but I can definitely see your point.",
    "created_at": "2019-04-16T13:26:37Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/8988#issuecomment-483658560",
    "id": 483658560,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8988",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MzY1ODU2MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/483658560/reactions"
    },
    "updated_at": "2019-04-16T13:26:37Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/483658560",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Glad to hear it, @SeeminglyScience. \r\n\r\nRegarding the terminology question: I've finally created a docs issue, and I invite you to weigh in there (I've already quoted your concern re _scope domain_ there): https://github.com/MicrosoftDocs/PowerShell-Docs/issues/4288",
    "created_at": "2019-05-09T19:48:57Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/8988#issuecomment-491041106",
    "id": 491041106,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8988",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MTA0MTEwNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/491041106/reactions"
    },
    "updated_at": "2019-05-09T19:48:57Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/491041106",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Interesting, why do we consider only files? We could generalize to support any provider with -Path/-LiteralPath.",
    "created_at": "2019-05-10T08:42:42Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/8988#issuecomment-491210310",
    "id": 491210310,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8988",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MTIxMDMxMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/491210310/reactions"
    },
    "updated_at": "2019-05-10T08:42:42Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/491210310",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "We can use the same restriction that `${C:\\test.txt}` has - the provider must support Get-Content functionality.\r\n\r\nSounds good to me. However, then we have the semantic issue where this _really_ ought to be named `switch -Path file.txt` / `switch -LiteralPath file[].txt`\r\n\r\nCan we alias these in some fashion? ",
    "created_at": "2019-05-10T10:36:35Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/8988#issuecomment-491243675",
    "id": 491243675,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8988",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MTI0MzY3NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/491243675/reactions"
    },
    "updated_at": "2019-05-10T10:36:35Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/491243675",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  }
]
