[
  {
    "author_association": "CONTRIBUTOR",
    "body": "It appears to happen with any string that fits the pattern \r\n\r\n```regex \r\n.+:[^ `]*[*?\\[\\]].*\r\n```\r\n\r\nI can repro this on \r\n\r\n```none\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.0-beta\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.0-beta.7\r\nOS                             Linux 4.4.0-93-generic #116-Ubuntu SMP Fri Au...\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\nOther examples:\r\n\r\n```powershell\r\n/bin/echo 'a:]'\r\n/bin/echo \"a:]\"\r\n/bin/echo \"a:[\"\r\n/bin/echo \"a:*\"\r\n/bin/echo \"a:?\"\r\n\r\n$string = 'a:]'\r\n/bin/echo $string\r\n/bin/echo \"$string\"\r\n/bin/echo $($string)\r\n/bin/echo ($string)\r\n/bin/echo @($string)\r\n\r\n/bin/echo 'a:llllllll]llll'\r\n/bin/echo 'a:lllllllllllllllll]'\r\n```\r\n\r\nThese all produce the same results.\r\n\r\n```none\r\n$Error[0] | Fl *  -force\r\n\r\nPSMessageDetails      :\r\nException             : System.Management.Automation.DriveNotFoundException: Cannot find drive. A drive with the name 'a' does not exist.\r\n                           at System.Management.Automation.SessionStateInternal.GetDrive(String name, Boolean automount)\r\n                           at System.Management.Automation.SessionStateInternal.AutomountBuiltInDrive(String name)\r\n                           at System.Management.Automation.SessionStateInternal.GetDrive(String name, Boolean automount)\r\n                           at System.Management.Automation.SessionStateInternal.GetDrive(String name)\r\n                           at System.Management.Automation.DriveManagementIntrinsics.Get(String driveName)\r\n                           at System.Management.Automation.LocationGlobber.GetDriveRootRelativePathFromPSPath(String path, CmdletProviderContext context, Boolean\r\n                        escapeCurrentLocation, PSDriveInfo& workingDriveForPath, CmdletProvider& providerInstance)\r\n                           at System.Management.Automation.LocationGlobber.GetProviderPath(String path, CmdletProviderContext context, Boolean isTrusted, ProviderInfo&\r\n                        provider, PSDriveInfo& drive)\r\n                           at System.Management.Automation.LocationGlobber.GetProviderPath(String path, CmdletProviderContext context, ProviderInfo& provider, PSDriveInfo&\r\n                        drive)\r\n                           at System.Management.Automation.LocationGlobber.GetGlobbedProviderPathsFromMonadPath(String path, Boolean allowNonexistingPaths,\r\n                        CmdletProviderContext context, ProviderInfo& provider, CmdletProvider& providerInstance)\r\n                           at System.Management.Automation.SessionStateInternal.GetChildItems(String path, Boolean recurse, UInt32 depth, CmdletProviderContext context)\r\n                           at System.Management.Automation.SessionStateInternal.GetChildItems(String[] paths, Boolean recurse, UInt32 depth, Boolean force, Boolean\r\n                        literalPath)\r\n                           at System.Management.Automation.ChildItemCmdletProviderIntrinsics.Get(String path, Boolean recurse)\r\n                           at System.Management.Automation.NativeCommandParameterBinder.appendOneNativeArgument(ExecutionContext context, Object obj, Char separator, Boolean\r\n                        sawVerbatimArgumentMarker)\r\n                           at System.Management.Automation.NativeCommandParameterBinder.BindParameters(Collection`1 parameters)\r\n                           at System.Management.Automation.NativeCommandParameterBinderController.BindParameters(Collection`1 parameters)\r\n                           at System.Management.Automation.NativeCommandProcessor.Prepare(IDictionary psDefaultParameterValues)\r\n                           at System.Management.Automation.CommandProcessorBase.DoPrepare(IDictionary psDefaultParameterValues)\r\n                           at System.Management.Automation.Internal.PipelineProcessor.Start(Boolean incomingStream)\r\n                           at System.Management.Automation.Internal.PipelineProcessor.SynchronousExecuteEnumerate(Object input)\r\n                        --- End of stack trace from previous location where exception was thrown ---\r\n                           at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n                           at System.Management.Automation.Internal.PipelineProcessor.SynchronousExecuteEnumerate(Object input)\r\n                           at System.Management.Automation.PipelineOps.InvokePipeline(Object input, Boolean ignoreInput, CommandParameterInternal[][] pipeElements,\r\n                        CommandBaseAst[] pipeElementAsts, CommandRedirection[][] commandRedirections, FunctionContext funcContext)\r\n                           at System.Management.Automation.Interpreter.ActionCallInstruction`6.Run(InterpretedFrame frame)\r\n                           at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.Run(InterpretedFrame frame)\r\nTargetObject          : a\r\nCategoryInfo          : ObjectNotFound: (a:String) [], DriveNotFoundException\r\nFullyQualifiedErrorId : DriveNotFound\r\nErrorDetails          :\r\nInvocationInfo        : System.Management.Automation.InvocationInfo\r\nScriptStackTrace      : at <ScriptBlock>, <No file>: line 1\r\nPipelineIterationInfo : {}\r\n```\r\n\r\nThese all work fine though:\r\n\r\n```powershell\r\n/bin/echo \":]\"\r\n/bin/echo 'a]'\r\n/bin/echo 'a:'\r\n/bin/echo 'a:a'\r\n/bin/echo 'aa]'\r\n/bin/echo 'aa]a'\r\n/bin/echo 'a:aa'\r\nStart-Process -FilePath /bin/echo -ArgumentList 'a:]'\r\n```\r\n\r\nand \r\n\r\n```powershell\r\n/bin/echo 'a:`]'\r\n\r\n```\r\n\r\nPrints\r\n\r\n```none\r\na:`]\r\n```",
    "created_at": "2017-09-20T09:22:55Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4870#issuecomment-330796325",
    "id": 330796325,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4870",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDc5NjMyNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/330796325/reactions"
    },
    "updated_at": "2017-09-20T09:40:28Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/330796325",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6509955?v=4",
      "events_url": "https://api.github.com/users/markekraus/events{/privacy}",
      "followers_url": "https://api.github.com/users/markekraus/followers",
      "following_url": "https://api.github.com/users/markekraus/following{/other_user}",
      "gists_url": "https://api.github.com/users/markekraus/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/markekraus",
      "id": 6509955,
      "login": "markekraus",
      "node_id": "MDQ6VXNlcjY1MDk5NTU=",
      "organizations_url": "https://api.github.com/users/markekraus/orgs",
      "received_events_url": "https://api.github.com/users/markekraus/received_events",
      "repos_url": "https://api.github.com/users/markekraus/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/markekraus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markekraus/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/markekraus"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "This is caused by #3931 which should be fixed in the next beta.",
    "created_at": "2017-09-20T17:53:52Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4870#issuecomment-330930201",
    "id": 330930201,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4870",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDkzMDIwMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/330930201/reactions"
    },
    "updated_at": "2017-09-20T17:53:52Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/330930201",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6876108?v=4",
      "events_url": "https://api.github.com/users/BrucePay/events{/privacy}",
      "followers_url": "https://api.github.com/users/BrucePay/followers",
      "following_url": "https://api.github.com/users/BrucePay/following{/other_user}",
      "gists_url": "https://api.github.com/users/BrucePay/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/BrucePay",
      "id": 6876108,
      "login": "BrucePay",
      "node_id": "MDQ6VXNlcjY4NzYxMDg=",
      "organizations_url": "https://api.github.com/users/BrucePay/orgs",
      "received_events_url": "https://api.github.com/users/BrucePay/received_events",
      "repos_url": "https://api.github.com/users/BrucePay/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/BrucePay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BrucePay/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/BrucePay"
    }
  }
]
