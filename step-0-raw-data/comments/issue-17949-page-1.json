[
  {
    "author_association": "NONE",
    "body": "This quirk is expected and correct (but annoying). \r\n\r\nTLDR Use `cd (mkdir test) `  or `mkdir test | % tostring | cd` instead. \r\n\r\nFirst part of the explanation is that many PowerShell commands including `Set-Location` (alias `CD`)  have parameters like this \r\n```\r\n    [Parameter(ParameterSetName='Path', Position=0, ValueFromPipeline=$true, ValueFromPipelineByPropertyName=$true)]\r\n    [string]$Path,\r\n\r\n    [Parameter(ParameterSetName='LiteralPath', Mandatory=$true, ValueFromPipelineByPropertyName=$true)]\r\n    [Alias('PSPath','LP')]\r\n    [string]$LiteralPath\r\n```\r\n\r\nThis sets the actions for piped objects as follows\r\n- If they have a property named `Path`,  use that as the `-Path` parameter. \r\n- If not, but if they have a property named `LiteralPath` , `PSPath` or `LP` use that as the `-LiteralPath` parameter (there cannot be a `literalpath` if `path` already exists)\r\n- If they have no such property, convert the object to a string and use that as the `-Path` parameter\r\n\r\n(`LiteralPath` doesn't process wildcards which affects `[ xx ] ` with the file system provider,  other providers might consider `*` and/or `?` to be legal in a path)  \r\n\r\nThe second part is that if you create a new directory or get one with `Get-Item` / `Get-ChildItem` (or one of their aliases) the `System.IO.DirectoryInfo` object returned doesn't have a  property named `path`  the name used is ` FullName` , but PowerShell adds a `PSPath` property to files and directories, \r\n\r\nPutting the two parts together means `Get-Item PowerShell | cd `  Is equivalent to \r\n```\r\n $p = Get-Item PowerShell\r\n Set-Location -LiteralPath $p.PSPath\r\n```\r\n\r\nWhich is seldom what we want (but `cd` / `Set-Location` _Does_ allow the current location to be something which does not have a PSDrive, -  for example ` cd Microsoft.PowerShell.Core\\Registry::HKEY_CLASSES_ROOT`. ) \r\n\r\nIf we convert to a string before piping into cd, the string becomes the `-Path` parameter, and \r\n```\r\n $p = Get-Item PowerShell\r\n Set-Location $p\r\n```\r\nwill assume `$P` is the `-path` parameter, and convert it to a string. Doing that returns the `fullname` property, and works as expected, i.e. `cd $p`  is equivalent to doing `Set-Location -path $p.ToString()`     \r\nWe can skip storing the variable, so  `cd (mkdir test) `  creates the directory and passes it as the `-path` parameter which is then converted to a string holding the full name. \r\n\r\n `$p | command` and `command $p`  _should, ideally,_ do the same thing and they don't here,  `cd $p` does what is expected and `$p | cd` works differently. This annoyance could be fixed by either or both:\r\n\r\n1. Making `Fullname` an alias for `-Path` in  commands where it is a problem. This could be done with proxy function (but most people won't go down that route). \r\n2. Adding an alias property `.Path` to file and directory objects (it is possible to define and load a types.PS1xml file to do this, but again most people won't)\r\n\r\nI don't know if the effort : reward ratio means it has never been worth doing it, or whether either of those would have side-effects we don't want.  I can't invent a case where there are side effects, but that doesn't mean there aren't any. \r\n\r\n\r\n",
    "created_at": "2022-08-23T11:45:47Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17949#issuecomment-1223952640",
    "id": 1223952640,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17949",
    "node_id": "IC_kwDOAvT7bc5I9AkA",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 1,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1223952640/reactions"
    },
    "updated_at": "2022-08-23T11:45:47Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1223952640",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@jhoneill That's quite an investigation and write-up! I propose two extra solutions which may be simpler:\r\n1. At the end of `Set-Location`, if the path can be simplified, set location to the simplified one\r\n2. Since this is mostly a visual bug, simplify location if possible only in the prompt\r\n\r\nI vote for option 2, as it is less likely to be a breaking change if some edge case relies on the current location being in this weird long form.\r\n\r\n@ThomasLey You can test if `function Prompt { (Resolve-Path Get-Location) -replace $HOME, '~' }` solves your issue, if not then try replacing `Resolve-Path` with some other function. ",
    "created_at": "2022-08-23T20:01:31Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17949#issuecomment-1224769221",
    "id": 1224769221,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17949",
    "node_id": "IC_kwDOAvT7bc5JAH7F",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1224769221/reactions"
    },
    "updated_at": "2022-08-23T20:01:31Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1224769221",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/26599495?v=4",
      "events_url": "https://api.github.com/users/dkaszews/events{/privacy}",
      "followers_url": "https://api.github.com/users/dkaszews/followers",
      "following_url": "https://api.github.com/users/dkaszews/following{/other_user}",
      "gists_url": "https://api.github.com/users/dkaszews/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/dkaszews",
      "id": 26599495,
      "login": "dkaszews",
      "node_id": "MDQ6VXNlcjI2NTk5NDk1",
      "organizations_url": "https://api.github.com/users/dkaszews/orgs",
      "received_events_url": "https://api.github.com/users/dkaszews/received_events",
      "repos_url": "https://api.github.com/users/dkaszews/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/dkaszews/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dkaszews/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/dkaszews"
    }
  },
  {
    "author_association": "NONE",
    "body": "@dkaszews :-)  \r\n\r\nYou can't say with 100% certainty what the path should be simplified to \r\nShould  `get-item $env:temp | cd`   resolve to TEMP: or C:\\users\\me\\AppData\\Local\\Temp\r\nAnd it is possible (if unlikely) that someone wants to do \r\n```\r\n> get-item hklm: | cd\r\n```\r\nAnd later be able to do \r\n```\r\n> cd '..\\HKEY_Classes_root'\r\n```\r\nThis  isn't possible with `cd HKLM:`  - but with that `cd \\` works and with  `get-item hklm: | cd` it fails. \r\nIf a script has `cd Microsoft.PowerShell.Core\\Registry::HKEY_LOCAL_MACHINE\\` I wouldn't want Set-location to assume that HKLM: was what was wanted.  \r\n But I'm reasonably  happy that assuming `get-itemPowerShell | cd` meant change to the full name not to the PSPath instead of assuming we want the PSPath..\r\n\r\nI'm not sure masking having a different directory is a good idea it would warn you why (e.g.) `start $pwd`  doesn't like the directory and so on.\r\n\r\n\r\n",
    "created_at": "2022-08-23T23:23:57Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17949#issuecomment-1224987195",
    "id": 1224987195,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17949",
    "node_id": "IC_kwDOAvT7bc5JA9I7",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1224987195/reactions"
    },
    "updated_at": "2022-08-23T23:23:57Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1224987195",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "It is fundamentally follow PowerShell provider conceptions.\r\nRight fix should rather be in Formatting System or prompt function.\r\n\r\nDup #10522",
    "created_at": "2022-08-24T04:31:33Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17949#issuecomment-1225177523",
    "id": 1225177523,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17949",
    "node_id": "IC_kwDOAvT7bc5JBrmz",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1225177523/reactions"
    },
    "updated_at": "2022-08-24T04:31:33Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1225177523",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "I  think we should close this one as duplicate and take discussion to 10522 \r\n",
    "created_at": "2022-08-24T08:55:01Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17949#issuecomment-1225424371",
    "id": 1225424371,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17949",
    "node_id": "IC_kwDOAvT7bc5JCn3z",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1225424371/reactions"
    },
    "updated_at": "2022-08-24T08:55:01Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1225424371",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Good analysis, @jhoneill, but just as an aside, regarding one of the _workarounds_: That `Get-Item . | Set-Location` and `Set-Location -LiteralPath (Get-Item .)` bind the `-LiteralPath` parameter _differently_ - solely based on the incidental aspect of whether the value came from the pipeline or was passed as an argument - is problematic in its own right:\r\n * See #6057",
    "created_at": "2022-08-24T13:11:39Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17949#issuecomment-1225707240",
    "id": 1225707240,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17949",
    "node_id": "IC_kwDOAvT7bc5JDs7o",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1225707240/reactions"
    },
    "updated_at": "2022-08-24T13:11:39Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1225707240",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "@mklement0  yes, interesting point . \r\nValueFromPipelineByPropertyName  doesn't act as  Value From Argument By Property name. If there were such a parameter option I have multiple places where it would have simplified function bodies, (if an object is piped use its ID property, but if something passed as an argument, check if it has an ID property, and if so use that in place of the whole object) \r\nBut I'd want them kept separate.  \r\nI think, also, one piped object can go to many parameters with ByPropertyName, but an argument must bind to exactly 1 parameter. \r\n\r\n\r\n\r\n\r\n",
    "created_at": "2022-08-24T15:22:23Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17949#issuecomment-1225873469",
    "id": 1225873469,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17949",
    "node_id": "IC_kwDOAvT7bc5JEVg9",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1225873469/reactions"
    },
    "updated_at": "2022-08-24T15:22:23Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1225873469",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  }
]
