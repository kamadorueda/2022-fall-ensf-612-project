[
  {
    "author_association": "CONTRIBUTOR",
    "body": "@mike-the-automator Does  `-ErrorAction SilentlyContinue` solve your specific case(s)? If not then it might be the better solution to rather tweak the error behaviour instead of adding a new parameter.",
    "created_at": "2017-12-28T16:49:42Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/5749#issuecomment-354318694",
    "id": 354318694,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5749",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDMxODY5NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/354318694/reactions"
    },
    "updated_at": "2017-12-28T16:49:55Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/354318694",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/9250262?v=4",
      "events_url": "https://api.github.com/users/bergmeister/events{/privacy}",
      "followers_url": "https://api.github.com/users/bergmeister/followers",
      "following_url": "https://api.github.com/users/bergmeister/following{/other_user}",
      "gists_url": "https://api.github.com/users/bergmeister/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/bergmeister",
      "id": 9250262,
      "login": "bergmeister",
      "node_id": "MDQ6VXNlcjkyNTAyNjI=",
      "organizations_url": "https://api.github.com/users/bergmeister/orgs",
      "received_events_url": "https://api.github.com/users/bergmeister/received_events",
      "repos_url": "https://api.github.com/users/bergmeister/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/bergmeister/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bergmeister/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/bergmeister"
    }
  },
  {
    "author_association": "NONE",
    "body": "Thanks for your response.  I tested `-ErrorAction SilentlyContinue` and that did not seem to solve my problem.  \r\n\r\nTranscript:\r\n```\r\nPowerShell v6.0.0-rc.2\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\n\r\nhttps://aka.ms/pscore6-docs\r\nType 'help' to get help.\r\n\r\nPS C:\\Program Files\\PowerShell6RC2\\6.0.0-rc.2> 1/0\r\nAttempted to divide by zero.\r\nAt line:1 char:1\r\n+ 1/0\r\n+ ~~~\r\n+ CategoryInfo          : NotSpecified: (:) [], RuntimeException\r\n+ FullyQualifiedErrorId : RuntimeException\r\n\r\nPS C:\\Program Files\\PowerShell6RC2\\6.0.0-rc.2> $j = ConvertTo-Json $Error[0] -ErrorAction SilentlyContinue\r\nConvertTo-Json : The type 'System.Collections.ListDictionaryInternal' is not supported for serialization or deserialization of a dictionary. Keys must be strings.\r\nAt line:1 char:6\r\n+ $j = ConvertTo-Json $Error[0] -ErrorAction SilentlyContinue\r\n+      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : InvalidOperation: (System.Collecti...tionaryInternal:ListDictionaryInternal) [ConvertTo-Json], InvalidOperationException\r\n+ FullyQualifiedErrorId : NonStringKeyInDictionary,Microsoft.PowerShell.Commands.ConvertToJsonCommand\r\n\r\nPS C:\\Program Files\\PowerShell6RC2\\6.0.0-rc.2> $j -eq $null\r\nTrue\r\n\r\n````\r\n In the scenario I envision, when the new parameter is supplied there would be no error thrown and the value of the variable `$j` would be a JSON representation of the exception objects, ignoring any fields that would have triggered the InvalidOperation exception.\r\n",
    "created_at": "2017-12-29T02:10:52Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/5749#issuecomment-354387572",
    "id": 354387572,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5749",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDM4NzU3Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/354387572/reactions"
    },
    "updated_at": "2017-12-29T02:10:52Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/354387572",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/4080082?v=4",
      "events_url": "https://api.github.com/users/mike-the-automator/events{/privacy}",
      "followers_url": "https://api.github.com/users/mike-the-automator/followers",
      "following_url": "https://api.github.com/users/mike-the-automator/following{/other_user}",
      "gists_url": "https://api.github.com/users/mike-the-automator/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mike-the-automator",
      "id": 4080082,
      "login": "mike-the-automator",
      "node_id": "MDQ6VXNlcjQwODAwODI=",
      "organizations_url": "https://api.github.com/users/mike-the-automator/orgs",
      "received_events_url": "https://api.github.com/users/mike-the-automator/received_events",
      "repos_url": "https://api.github.com/users/mike-the-automator/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mike-the-automator/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mike-the-automator/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mike-the-automator"
    }
  },
  {
    "author_association": "NONE",
    "body": "@bergmeister I have mulled over the suggestion to just change the behavior for `-ErrorAction SilentlyContinue` and my impression is that would be a counter intuitive way to achieve my goal.  It would be a breaking change for users because a scenario that used to generate an Exception would no longer do so.  \r\n\r\nAlso, silently discarding data without being explicitly told to do so feels _wrong_.  It almost feel more like an occasion to use `-Force` as more of a \"No, really this **is** what I want to do\" kind of parameter.\r\n\r\nAnother means to get the result I want would be to just create a cmdlet to strip non-JSON compliant fields of an object that would result in this error and put it in front of ConvertTo-Json in the pipeline, e.g.\r\n\r\n```\r\n\r\n$j = $Error[0] | Remove-JsonIncompatibleProperties | ConvertTo-Json\r\n\r\n```\r\n\r\nI could always create a convenience wrapper-function to eliminate the need for a long pipeline (I suck at naming things).  Given that perspective I can understand if the consensus is that the complexity/utility ratio doesn't pan out for this feature request, but I'd like to know what others think.\r\n",
    "created_at": "2017-12-30T22:18:07Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/5749#issuecomment-354571505",
    "id": 354571505,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5749",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDU3MTUwNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/354571505/reactions"
    },
    "updated_at": "2017-12-30T22:18:07Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/354571505",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/4080082?v=4",
      "events_url": "https://api.github.com/users/mike-the-automator/events{/privacy}",
      "followers_url": "https://api.github.com/users/mike-the-automator/followers",
      "following_url": "https://api.github.com/users/mike-the-automator/following{/other_user}",
      "gists_url": "https://api.github.com/users/mike-the-automator/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mike-the-automator",
      "id": 4080082,
      "login": "mike-the-automator",
      "node_id": "MDQ6VXNlcjQwODAwODI=",
      "organizations_url": "https://api.github.com/users/mike-the-automator/orgs",
      "received_events_url": "https://api.github.com/users/mike-the-automator/received_events",
      "repos_url": "https://api.github.com/users/mike-the-automator/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mike-the-automator/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mike-the-automator/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mike-the-automator"
    }
  },
  {
    "author_association": "NONE",
    "body": "I think it is a separate issue that ErrorAction is ignored and that it still raises an exception, but I think the correct functionality of ErrorAction with SilentlyContinue should be to return no data, not to strip out some data. \r\n\r\nI think either Force or SkipIncompatibleProperties would be a better solution as you are explicitly telling it to get rid of data. ",
    "created_at": "2018-01-03T19:40:28Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/5749#issuecomment-355106497",
    "id": 355106497,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5749",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTEwNjQ5Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/355106497/reactions"
    },
    "updated_at": "2018-01-03T19:40:28Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/355106497",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/8600422?v=4",
      "events_url": "https://api.github.com/users/FireInWinter/events{/privacy}",
      "followers_url": "https://api.github.com/users/FireInWinter/followers",
      "following_url": "https://api.github.com/users/FireInWinter/following{/other_user}",
      "gists_url": "https://api.github.com/users/FireInWinter/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/FireInWinter",
      "id": 8600422,
      "login": "FireInWinter",
      "node_id": "MDQ6VXNlcjg2MDA0MjI=",
      "organizations_url": "https://api.github.com/users/FireInWinter/orgs",
      "received_events_url": "https://api.github.com/users/FireInWinter/received_events",
      "repos_url": "https://api.github.com/users/FireInWinter/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/FireInWinter/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FireInWinter/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/FireInWinter"
    }
  },
  {
    "author_association": "NONE",
    "body": "@FireInWinter  Created a separate issue as requested.  I think we are in agreement that the behavior requested in this issue should be implemented as a new parameter for the reasons already stated.  \r\n\r\nI'm interested in contributing and would be happy to work on a PR for either issue, but I'd rather not invest time in this feature request if it has a low probability of being merged.  I'm not asking for a guarantee that my PR will be accepted, but it would be nice to know if I'm barking up the wrong tree here.",
    "created_at": "2018-01-04T02:07:55Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/5749#issuecomment-355180654",
    "id": 355180654,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5749",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTE4MDY1NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/355180654/reactions"
    },
    "updated_at": "2018-01-04T02:07:55Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/355180654",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/4080082?v=4",
      "events_url": "https://api.github.com/users/mike-the-automator/events{/privacy}",
      "followers_url": "https://api.github.com/users/mike-the-automator/followers",
      "following_url": "https://api.github.com/users/mike-the-automator/following{/other_user}",
      "gists_url": "https://api.github.com/users/mike-the-automator/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mike-the-automator",
      "id": 4080082,
      "login": "mike-the-automator",
      "node_id": "MDQ6VXNlcjQwODAwODI=",
      "organizations_url": "https://api.github.com/users/mike-the-automator/orgs",
      "received_events_url": "https://api.github.com/users/mike-the-automator/received_events",
      "repos_url": "https://api.github.com/users/mike-the-automator/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mike-the-automator/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mike-the-automator/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mike-the-automator"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Can a maintainer please comment on the design/issue. @iSazonov @lzybkr  ?\r\n  ",
    "created_at": "2018-01-04T06:04:16Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/5749#issuecomment-355206041",
    "id": 355206041,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5749",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTIwNjA0MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/355206041/reactions"
    },
    "updated_at": "2018-01-04T06:06:20Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/355206041",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/9250262?v=4",
      "events_url": "https://api.github.com/users/bergmeister/events{/privacy}",
      "followers_url": "https://api.github.com/users/bergmeister/followers",
      "following_url": "https://api.github.com/users/bergmeister/following{/other_user}",
      "gists_url": "https://api.github.com/users/bergmeister/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/bergmeister",
      "id": 9250262,
      "login": "bergmeister",
      "node_id": "MDQ6VXNlcjkyNTAyNjI=",
      "organizations_url": "https://api.github.com/users/bergmeister/orgs",
      "received_events_url": "https://api.github.com/users/bergmeister/received_events",
      "repos_url": "https://api.github.com/users/bergmeister/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/bergmeister/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bergmeister/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/bergmeister"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "My preference would be to have a `-SkipUnsupportedTypes` switch.  `-Force` is too overloaded to me.  cc @joeyaiello @HemantMahawar for suggestions on the name of the switch.",
    "created_at": "2018-01-04T06:30:10Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/5749#issuecomment-355208725",
    "id": 355208725,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5749",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTIwODcyNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/355208725/reactions"
    },
    "updated_at": "2018-01-04T06:30:10Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/355208725",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Generally, the use case you're describing is better handled using serialization based on CLIXML rather than JSON.\r\n\r\nWhat makes this more cumbersome is the fact that you must export to a (temporary) _file_ first, using `Export-CliXml`, and also read from a file, using `Import-CliXml`; however, a new pair of `ConvertTo-CliXml` / `ConvertFrom-CliXml` cmdlets that directly output / read the XML as a strings are being worked on - see #3898\r\n\r\n\r\n\r\n",
    "created_at": "2018-01-05T01:51:50Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/5749#issuecomment-355451759",
    "id": 355451759,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5749",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTQ1MTc1OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/355451759/reactions"
    },
    "updated_at": "2018-01-05T01:51:50Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/355451759",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@mklement0 agree that if the use case is to serialize and deserialize later without care of the serialization format, CliXml is a better solution.  However, I can see cases where you want specifically json (more human readable than xml...)",
    "created_at": "2018-01-05T02:47:38Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/5749#issuecomment-355459239",
    "id": 355459239,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5749",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTQ1OTIzOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/355459239/reactions"
    },
    "updated_at": "2018-01-05T02:47:38Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/355459239",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@SteveL-MSFT:\r\n\r\nI merely restricted my comment to pointing out the CLIXML alternative, because I don't know what the right answer to the specific problem at hand is, but here are a few thoughts:\r\n\r\nA simpler way to reproduce the problem, using a hashtable with a non-string key:\r\n\r\n```powershell\r\n@{ 1 = 'one' }  | ConvertTo-Json\r\n```\r\n\r\nThe error message suggests that an explicit decision was made not to support non-string keys and to _fail_ in that event.\r\n\r\nThe alternatives - to be activated via new switch(es) - are:\r\n\r\n* simply apply `.ToString()` to non-string keys and serialize nonetheless\r\n\r\n* as suggested, _skip_ unserializable properties.\r\n\r\nGiven that JSON is not suitable for general-purpose serialization, however, I wonder if this is really necessary.\r\nGenerally, you will know what properties should be serialized ahead of time, and can filter out unsupported properties then, in the simplest case with `Select-Object -Property ...`\r\n\r\n",
    "created_at": "2018-01-05T07:58:26Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/5749#issuecomment-355494201",
    "id": 355494201,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5749",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTQ5NDIwMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/355494201/reactions"
    },
    "updated_at": "2018-01-05T07:58:26Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/355494201",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> I wonder if this is really necessary.\r\n\r\nI wonder too. \r\nJSON is well standardized. I would have looked at what this standard says.",
    "created_at": "2018-01-05T09:20:01Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/5749#issuecomment-355508285",
    "id": 355508285,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5749",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTUwODI4NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/355508285/reactions"
    },
    "updated_at": "2018-01-05T09:20:01Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/355508285",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> I wonder if this is really necessary.\r\n\r\nLet's not let convenience become irrelevant in this project.\r\n\r\nI have use cases for this myself that I have had to work around. I have object `A` that has nested property `B` that cannot be serialized, but I need to upload this to a generalized logging endpoint. that expects a JSON object. I don't care about  property `B` even in the context of PowerShell or .NET. I have to create Object `C` that has everything but property `B` and then I can serialize it. Or I have to use a half dozen  other work arounds in this scenario including creatining my own JSON serialize or a proxy class.\r\n  ",
    "created_at": "2018-01-05T10:14:43Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/5749#issuecomment-355519477",
    "id": 355519477,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5749",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTUxOTQ3Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 6,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 6,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/355519477/reactions"
    },
    "updated_at": "2018-01-05T10:16:06Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/355519477",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6509955?v=4",
      "events_url": "https://api.github.com/users/markekraus/events{/privacy}",
      "followers_url": "https://api.github.com/users/markekraus/followers",
      "following_url": "https://api.github.com/users/markekraus/following{/other_user}",
      "gists_url": "https://api.github.com/users/markekraus/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/markekraus",
      "id": 6509955,
      "login": "markekraus",
      "node_id": "MDQ6VXNlcjY1MDk5NTU=",
      "organizations_url": "https://api.github.com/users/markekraus/orgs",
      "received_events_url": "https://api.github.com/users/markekraus/received_events",
      "repos_url": "https://api.github.com/users/markekraus/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/markekraus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markekraus/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/markekraus"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "This reminds me that in my [HttpListener module](https://www.powershellgallery.com/packages/HttpListener/1.0.2), I had to work around JSON serialization limitations by manually stripping types that were not supported.",
    "created_at": "2018-01-05T20:44:48Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/5749#issuecomment-355660735",
    "id": 355660735,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5749",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTY2MDczNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/355660735/reactions"
    },
    "updated_at": "2018-01-05T20:44:48Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/355660735",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "NONE",
    "body": "I would suggest a function which converts all none-string values to string values before piping it to convertto-json.\r\nYou can put a select statement in between for your final json output.\r\n\r\n@{ 1 = 'one' }.getenumerator() | select key,value | ConvertTo-Json\r\nWorks....",
    "created_at": "2018-11-23T11:06:12Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/5749#issuecomment-441213077",
    "id": 441213077,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5749",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTIxMzA3Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/441213077/reactions"
    },
    "updated_at": "2018-11-23T11:29:47Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/441213077",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/31315993?v=4",
      "events_url": "https://api.github.com/users/B-Art/events{/privacy}",
      "followers_url": "https://api.github.com/users/B-Art/followers",
      "following_url": "https://api.github.com/users/B-Art/following{/other_user}",
      "gists_url": "https://api.github.com/users/B-Art/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/B-Art",
      "id": 31315993,
      "login": "B-Art",
      "node_id": "MDQ6VXNlcjMxMzE1OTkz",
      "organizations_url": "https://api.github.com/users/B-Art/orgs",
      "received_events_url": "https://api.github.com/users/B-Art/received_events",
      "repos_url": "https://api.github.com/users/B-Art/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/B-Art/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/B-Art/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/B-Art"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@B-Art:\r\n\r\nThis issue is about _ignoring_ values that can't be converted to JSON.\r\n\r\nBy contrast, you're looking to for an opt-in method for _including_ such values by converting dictionary keys to strings, so I suggest you create a _new_ issue with your proposal.\r\n\r\nAs an aside, re your example: It isn't the `select` call that makes the command succeed, it is using `.GetEnumerator()`, because the latter sends a `[System.Collections.DictionaryEntry]` instance (rather than the whole hashtable) through the pipeline, which is itself not a dictionary, so the to-JSON conversion succeeds - however, that is _not_ the same as what `@{ '1' = 'one' } | ConvertTo-Json` would give you, i.e., the hashtable with stringified keys.",
    "created_at": "2018-11-26T20:04:34Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/5749#issuecomment-441778710",
    "id": 441778710,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5749",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTc3ODcxMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/441778710/reactions"
    },
    "updated_at": "2018-11-26T20:04:34Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/441778710",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "Greeting from 5 years later where I need this functionality in a PowerShell Azure Function.\r\n\r\nSpecifically I'm trying to convert the output of \"Get-Error\" to JSON to push it to a logging endpoint. Fails with `ConvertTo-Json: The type 'System.Collections.ListDictionaryInternal' is not supported for serialization or deserialization of a dictionary. Keys must be strings.`.",
    "created_at": "2022-06-02T10:38:49Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/5749#issuecomment-1144711540",
    "id": 1144711540,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5749",
    "node_id": "IC_kwDOAvT7bc5EOul0",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1144711540/reactions"
    },
    "updated_at": "2022-06-02T10:38:49Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1144711540",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3469970?v=4",
      "events_url": "https://api.github.com/users/heinrich-ulbricht/events{/privacy}",
      "followers_url": "https://api.github.com/users/heinrich-ulbricht/followers",
      "following_url": "https://api.github.com/users/heinrich-ulbricht/following{/other_user}",
      "gists_url": "https://api.github.com/users/heinrich-ulbricht/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/heinrich-ulbricht",
      "id": 3469970,
      "login": "heinrich-ulbricht",
      "node_id": "MDQ6VXNlcjM0Njk5NzA=",
      "organizations_url": "https://api.github.com/users/heinrich-ulbricht/orgs",
      "received_events_url": "https://api.github.com/users/heinrich-ulbricht/received_events",
      "repos_url": "https://api.github.com/users/heinrich-ulbricht/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/heinrich-ulbricht/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/heinrich-ulbricht/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/heinrich-ulbricht"
    }
  }
]
