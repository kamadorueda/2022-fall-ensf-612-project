[
  {
    "author_association": "CONTRIBUTOR",
    "body": "That would make for a nice enhancement.\r\n\r\nNote that the current behavior isn't to pick _one_ type, but to use them _all_ and show the _union_ of their properties.\r\nYou didn't see that, because [`System.IO.File`](https://docs.microsoft.com/en-US/dotnet/api/System.IO.File) is a static class _without properties_ (also, just to avoid confusion: the parameter name in your example should be `-UserId`, not `-Id`).\r\n\r\nTo demonstrate:\r\n\r\n```powershell\r\nPS> & {\r\n    function foo { \r\n      [OutputType([regex], ParameterSetName='A')]\r\n      [OutputType([hashtable], ParameterSetName='B')]\r\n      [CmdletBinding(DefaultParameterSetName='A')] \r\n      param(\r\n       [Parameter(ParameterSetName='A')] $A, \r\n       [Parameter(ParameterSetName='B')] $B\r\n      )\r\n      \"...\" \r\n    } \r\n    $cmd = 'foo -A a | Select-Object '; (TabExpansion2 $cmd -cursorColumn $cmd.Length).CompletionMatches.CompletionText\r\n}\r\n# Sorted list of the *union* of [regex] and [hashtable] properties.\r\nCount\r\nIsFixedSize\r\nIsReadOnly\r\nIsSynchronized\r\nKeys\r\nMatchTimeout\r\nOptions\r\nRightToLeft\r\nSyncRoot\r\nValues\r\n```",
    "created_at": "2021-02-26T14:47:49Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14909#issuecomment-786691757",
    "id": 786691757,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14909",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NjY5MTc1Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/786691757/reactions"
    },
    "updated_at": "2021-02-26T14:47:49Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/786691757",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "> That would make for a nice enhancement.\r\n> \r\n> Note that the current behavior isn't to pick _one_ type, but to use them _all_ and show the _union_ of their properties.\r\n> You didn't see that, because [`System.IO.File`](https://docs.microsoft.com/en-US/dotnet/api/System.IO.File) is a static class _without properties_ \r\n\r\nThe example on docs used a string and an Int and I thought \"That's no good, no properties on an int\" so I went for two random types and picked file instead of file info.  And  just a moment ago I was talking about the phrase \"hoist by his own petard\" :-)  \r\n\r\nMy real world example is a function which might return something with a ton of properties or something with 3 and 3 will get lost in the others.  So the substantive \"Return [only] the right properties\" stands, but  thanks for fixing my confusion  - I had a dim memory of it being the union but I couldn't get that, Doh!\r\n\r\n> (also, just to avoid confusion: the parameter name in your example should be `-UserId`, not `-Id`).\r\nI've fixed that :-) \r\n",
    "created_at": "2021-02-26T15:13:00Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14909#issuecomment-786706811",
    "id": 786706811,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14909",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NjcwNjgxMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/786706811/reactions"
    },
    "updated_at": "2021-02-26T15:13:00Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/786706811",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "This was a big disappointment for me when I found out it just always assumed all output types.  It'd be nice if type inference used the pseudo parameter binder to narrow down the results, though it's probably not a small work item. Also may noticeably slow down tab completion in some scenarios without some work on static analysis performance.",
    "created_at": "2021-02-26T17:00:07Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14909#issuecomment-786769406",
    "id": 786769406,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14909",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4Njc2OTQwNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 4,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 4,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/786769406/reactions"
    },
    "updated_at": "2021-02-26T17:01:11Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/786769406",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  }
]
