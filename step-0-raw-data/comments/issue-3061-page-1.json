[
  {
    "author_association": "COLLABORATOR",
    "body": "It is rather the PSScriptAnalizer area.",
    "created_at": "2017-01-27T19:16:32Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3061#issuecomment-275749503",
    "id": 275749503,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTc0OTUwMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/275749503/reactions"
    },
    "updated_at": "2017-01-27T19:16:32Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/275749503",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "I would be open to discussing this as a breaking change - assuming we can get the data to justify that the impact is minimal.",
    "created_at": "2017-01-27T20:50:57Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3061#issuecomment-275771237",
    "id": 275771237,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTc3MTIzNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/275771237/reactions"
    },
    "updated_at": "2017-01-27T20:50:57Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/275771237",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2148248?v=4",
      "events_url": "https://api.github.com/users/lzybkr/events{/privacy}",
      "followers_url": "https://api.github.com/users/lzybkr/followers",
      "following_url": "https://api.github.com/users/lzybkr/following{/other_user}",
      "gists_url": "https://api.github.com/users/lzybkr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lzybkr",
      "id": 2148248,
      "login": "lzybkr",
      "node_id": "MDQ6VXNlcjIxNDgyNDg=",
      "organizations_url": "https://api.github.com/users/lzybkr/orgs",
      "received_events_url": "https://api.github.com/users/lzybkr/received_events",
      "repos_url": "https://api.github.com/users/lzybkr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lzybkr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lzybkr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lzybkr"
    }
  },
  {
    "author_association": "NONE",
    "body": "@lzybkr how would this be a breaking change? An update to `Set-StrictMode` would likely just mean supporting the next version number. Right now only `1` and `2` are defined; in theory we'd set `6` (or whatever version of PowerShell it ends up being), or `3` if version is not supposed to correspond to PS version.\r\n\r\nOr are you suggesting making this behavior default, without strict mode?",
    "created_at": "2017-01-27T20:54:43Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3061#issuecomment-275772041",
    "id": 275772041,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTc3MjA0MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/275772041/reactions"
    },
    "updated_at": "2017-01-27T20:54:43Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/275772041",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1260690?v=4",
      "events_url": "https://api.github.com/users/briantist/events{/privacy}",
      "followers_url": "https://api.github.com/users/briantist/followers",
      "following_url": "https://api.github.com/users/briantist/following{/other_user}",
      "gists_url": "https://api.github.com/users/briantist/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/briantist",
      "id": 1260690,
      "login": "briantist",
      "node_id": "MDQ6VXNlcjEyNjA2OTA=",
      "organizations_url": "https://api.github.com/users/briantist/orgs",
      "received_events_url": "https://api.github.com/users/briantist/received_events",
      "repos_url": "https://api.github.com/users/briantist/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/briantist/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/briantist/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/briantist"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "Right - parser error - not tied to `Set-StrictMode`.",
    "created_at": "2017-01-27T20:55:48Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3061#issuecomment-275772290",
    "id": 275772290,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTc3MjI5MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/275772290/reactions"
    },
    "updated_at": "2017-01-27T20:55:48Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/275772290",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2148248?v=4",
      "events_url": "https://api.github.com/users/lzybkr/events{/privacy}",
      "followers_url": "https://api.github.com/users/lzybkr/followers",
      "following_url": "https://api.github.com/users/lzybkr/following{/other_user}",
      "gists_url": "https://api.github.com/users/lzybkr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lzybkr",
      "id": 2148248,
      "login": "lzybkr",
      "node_id": "MDQ6VXNlcjIxNDgyNDg=",
      "organizations_url": "https://api.github.com/users/lzybkr/orgs",
      "received_events_url": "https://api.github.com/users/lzybkr/received_events",
      "repos_url": "https://api.github.com/users/lzybkr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lzybkr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lzybkr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lzybkr"
    }
  },
  {
    "author_association": "NONE",
    "body": "@lzybkr ah ok got it. \r\n\r\nIt looks like at least some of them are already not writable. I tried to set `$Host` and it gave me this:\r\n\r\n> Cannot overwrite variable Host because it is read-only or constant.\r\n\r\nPresumably, variables that do change during the course of the script like `$Input` and `$args` can't be set that way unless the internal code handles undoing that or removing and recreating the variable?\r\n\r\nAnd of course `$OFS` has to remain writable.",
    "created_at": "2017-01-27T21:16:00Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3061#issuecomment-275776552",
    "id": 275776552,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTc3NjU1Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/275776552/reactions"
    },
    "updated_at": "2017-01-27T21:16:00Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/275776552",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1260690?v=4",
      "events_url": "https://api.github.com/users/briantist/events{/privacy}",
      "followers_url": "https://api.github.com/users/briantist/followers",
      "following_url": "https://api.github.com/users/briantist/following{/other_user}",
      "gists_url": "https://api.github.com/users/briantist/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/briantist",
      "id": 1260690,
      "login": "briantist",
      "node_id": "MDQ6VXNlcjEyNjA2OTA=",
      "organizations_url": "https://api.github.com/users/briantist/orgs",
      "received_events_url": "https://api.github.com/users/briantist/received_events",
      "repos_url": "https://api.github.com/users/briantist/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/briantist/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/briantist/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/briantist"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "The same issue just came up in #3695, with respect to `$_` / `$PSItem` being writable.\r\n\r\nHere's a list of all automatic variables that _shouldn't_ be writable, but currently are:\r\n\r\n```\r\nName                          Predefined\r\n----                          ----------\r\n_                                  False\r\nAllNodes                           False\r\nArgs                                True\r\nEvent                              False\r\nEventArgs                          False\r\nEventSubscriber                    False\r\nForEach                             True\r\nInput                               True\r\nMatches                             True\r\nMyInvocation                        True\r\nNestedPromptLevel                   True\r\nProfile                             True\r\nPSBoundParameters                   True\r\nPsCmdlet                           False\r\nPSCommandPath                       True\r\nPSDebugContext                     False\r\nPSItem                             False\r\nPSScriptRoot                        True\r\nPSSenderInfo                       False\r\nPwd                                 True\r\nSender                             False\r\nStackTrace                          True\r\nThis                               False\r\n```\r\n\r\n\"Predefined\" refers to whether they exist in the global scope.\r\n\r\nSome of them are only defined in certain contexts, but, arguably, to prevent confusion, preventing their custom use categorically is the right approach.\r\n\r\nThe following code was used to detect them (note that it has to rely on parsing the _help topic_ to identify all automatic variables - I'm not aware of a better way; the obsolete `ReportErrorShow*` variables were manually removed after the fact\r\n):\r\n\r\n```powershell\r\n$autoVarNames = ((get-help about_automatic_variables) -split [environment]::newline -match '^\\s*\\$\\w+\\s*$').Trim().Trim('$') | Sort-Object -Unique\r\n\r\nforeach ($varName in $autoVarNames) {\r\n  $var = Get-Variable $varName -ErrorAction 'SilentlyContinue'\r\n  $exists = $?\r\n  if ($exists -and $var.Options -match 'readonly|constant') {\r\n    Write-Verbose \"$varName`: read-only or constant\"\r\n  } elseif ($varName -in 'NULL', 'OFS', 'LastExitCode') { # exceptions\r\n    Write-Verbose \"$varName`: writable by design\"\r\n  } else {\r\n    Set-Variable -Name $varName -Value $null -ErrorAction SilentlyContinue\r\n    if ($?) {\r\n      [pscustomobject] @{ Name = $varName; Predefined = $exists }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nNote that the code has a fixed list of exceptions so as not to report automatic variables that should indeed be writable, such as `$OFS`, and `$LastExitCode`,  or assignable as a quiet no-op, such as `$NULL` - do tell us if other exceptions are missing.\r\n\r\n",
    "created_at": "2017-05-09T04:35:02Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3061#issuecomment-300058958",
    "id": 300058958,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDA1ODk1OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/300058958/reactions"
    },
    "updated_at": "2019-11-12T13:15:22Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/300058958",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "Excellent work @mklement0 !",
    "created_at": "2017-05-09T14:34:16Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3061#issuecomment-300184321",
    "id": 300184321,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDE4NDMyMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/300184321/reactions"
    },
    "updated_at": "2017-05-09T14:34:16Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/300184321",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1260690?v=4",
      "events_url": "https://api.github.com/users/briantist/events{/privacy}",
      "followers_url": "https://api.github.com/users/briantist/followers",
      "following_url": "https://api.github.com/users/briantist/following{/other_user}",
      "gists_url": "https://api.github.com/users/briantist/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/briantist",
      "id": 1260690,
      "login": "briantist",
      "node_id": "MDQ6VXNlcjEyNjA2OTA=",
      "organizations_url": "https://api.github.com/users/briantist/orgs",
      "received_events_url": "https://api.github.com/users/briantist/received_events",
      "repos_url": "https://api.github.com/users/briantist/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/briantist/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/briantist/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/briantist"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Related comment https://github.com/PowerShell/PowerShell/issues/2000#issuecomment-241473824",
    "created_at": "2017-05-09T16:38:14Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3061#issuecomment-300224826",
    "id": 300224826,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDIyNDgyNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/300224826/reactions"
    },
    "updated_at": "2017-05-09T16:38:14Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/300224826",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "We try to use [this file](https://github.com/PowerShell/PowerShell/blob/master/src/System.Management.Automation/engine/SpecialVariables.cs) to make it easier to know what variables PowerShell cares about, automatic or otherwise.\r\n\r\nI'll also point out the need to be careful here, e.g. disallowing anyone to set `$LastExitCode` would break posh-git which saves and restores the value in the prompt function so that it can call `git` and not clobber the real `$LastExitCode` from your last command.",
    "created_at": "2017-05-09T17:24:00Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3061#issuecomment-300239754",
    "id": 300239754,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDIzOTc1NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 4,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 4,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/300239754/reactions"
    },
    "updated_at": "2017-05-09T17:24:00Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/300239754",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2148248?v=4",
      "events_url": "https://api.github.com/users/lzybkr/events{/privacy}",
      "followers_url": "https://api.github.com/users/lzybkr/followers",
      "following_url": "https://api.github.com/users/lzybkr/following{/other_user}",
      "gists_url": "https://api.github.com/users/lzybkr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lzybkr",
      "id": 2148248,
      "login": "lzybkr",
      "node_id": "MDQ6VXNlcjIxNDgyNDg=",
      "organizations_url": "https://api.github.com/users/lzybkr/orgs",
      "received_events_url": "https://api.github.com/users/lzybkr/received_events",
      "repos_url": "https://api.github.com/users/lzybkr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lzybkr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lzybkr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lzybkr"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@lzybkr: \r\n\r\nThanks for the link, that's handy.  I've noticed that not all variables listed in the automatic-variables help topic are defined in that file, however, such as `AllNodes`, `Event`, `EventSubscriber`\r\n\r\nAnd thanks for the correction re `$LastExitCode` - I've removed it from the list above and adapted the code that generates it (it has a hard-coded list of exceptions).\r\n\r\nThe list definitely needs careful reviewing - do let me know if there are others that should be excluded.\r\n\r\nI think it's also important going forward to think about the proper read-only status at the time of introducing an automatic variable.\r\n\r\nLonger-term, it would be helpful if automatic and preference variables could be discovered through _reflection_, in user code.  \r\nAt least for preference variables this has been suggested before on [uservoice.com](https://windowsserver.uservoice.com/forums/301869-powershell/suggestions/17407222-powershell-and-collections-in-particular-collect)\r\n\r\n\r\n\r\n",
    "created_at": "2017-05-09T17:53:56Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3061#issuecomment-300248988",
    "id": 300248988,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDI0ODk4OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/300248988/reactions"
    },
    "updated_at": "2017-05-09T17:53:56Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/300248988",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "Definitely seconding (and voted on) the suggestion for discoverability.",
    "created_at": "2017-05-09T17:55:52Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3061#issuecomment-300249541",
    "id": 300249541,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDI0OTU0MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/300249541/reactions"
    },
    "updated_at": "2017-05-09T17:55:52Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/300249541",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1260690?v=4",
      "events_url": "https://api.github.com/users/briantist/events{/privacy}",
      "followers_url": "https://api.github.com/users/briantist/followers",
      "following_url": "https://api.github.com/users/briantist/following{/other_user}",
      "gists_url": "https://api.github.com/users/briantist/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/briantist",
      "id": 1260690,
      "login": "briantist",
      "node_id": "MDQ6VXNlcjEyNjA2OTA=",
      "organizations_url": "https://api.github.com/users/briantist/orgs",
      "received_events_url": "https://api.github.com/users/briantist/received_events",
      "repos_url": "https://api.github.com/users/briantist/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/briantist/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/briantist/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/briantist"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@PowerShell/powershell-committee recommends we have psscriptanalyzer rules for all the automatic variables with enforcement in parser for $_/$psitem and $input",
    "created_at": "2017-08-02T23:32:13Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3061#issuecomment-319826831",
    "id": 319826831,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTgyNjgzMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/319826831/reactions"
    },
    "updated_at": "2017-08-02T23:32:13Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/319826831",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "I'm glad to hear that writing to `$_`/ `$psitem` and `$input` will be prevented, @SteveL-MSFT.\r\n\r\nGiven that we know that this will be a _breaking_ change, it seems to me that this is an opportunity to get it _fundamentally_ right, by making _all_ automatic variables that are _conceptually_ read-only _actually_ read-only - without having to rely on a code-analysis tool  (PSScriptAnalyzer) that may or may not be used by users.\r\n\r\nSimilarly, PSScriptAnalyzer can't protect you from trying things like `$PWD = '/'` from the command line.\r\n\r\nThis ties in with making automatic variables discoverable as such.",
    "created_at": "2017-08-03T03:40:56Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3061#issuecomment-319859521",
    "id": 319859521,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTg1OTUyMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/319859521/reactions"
    },
    "updated_at": "2017-08-03T03:40:56Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/319859521",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "We discussed possibly making all automatic variables functionally read only, however, agreed that in many cases like $PWD someone could be using it already without problem as they didn't Set-Location so $PWD isn't overwritten.  So other than $_, $PSItem, and $Input, we decided to error on the side of limiting the breaking change to the most common cases.",
    "created_at": "2017-08-03T05:04:51Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3061#issuecomment-319868666",
    "id": 319868666,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTg2ODY2Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/319868666/reactions"
    },
    "updated_at": "2017-08-03T05:04:51Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/319868666",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "See [this documentation issue](https://github.com/PowerShell/PowerShell-Docs/issues/1510) for the necessary attendant change to the documentation.",
    "created_at": "2017-08-04T02:20:41Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3061#issuecomment-320138829",
    "id": 320138829,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDEzODgyOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320138829/reactions"
    },
    "updated_at": "2017-08-04T02:20:41Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320138829",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Now that I think about it: We've lost sight of @briantist's original idea: that a _new_ `Set-StrictMode` version level could solve the problem _comprehensively_ at the _engine_ level, without breaking backward compatibility.",
    "created_at": "2017-08-04T02:40:56Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3061#issuecomment-320141366",
    "id": 320141366,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDE0MTM2Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320141366/reactions"
    },
    "updated_at": "2017-08-04T02:41:17Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320141366",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "If we can avoid this, we'd better avoid it.",
    "created_at": "2017-08-04T04:26:31Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3061#issuecomment-320153219",
    "id": 320153219,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDE1MzIxOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320153219/reactions"
    },
    "updated_at": "2017-08-04T04:26:31Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320153219",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "It is very good that writing to `$input` will be prevented. Such a code did not work anyway and users only discovered this on troubleshooting. This fixes the problem and does not break anything.\r\n\r\nBut I afraid preventing writing to `$_` breaks things and make coding harder. See these two examples:\r\n- https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-315672717\r\n- https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-320151872\r\n\r\n",
    "created_at": "2017-08-04T04:28:59Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3061#issuecomment-320153446",
    "id": 320153446,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDE1MzQ0Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320153446/reactions"
    },
    "updated_at": "2017-08-04T04:28:59Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320153446",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/927533?v=4",
      "events_url": "https://api.github.com/users/nightroman/events{/privacy}",
      "followers_url": "https://api.github.com/users/nightroman/followers",
      "following_url": "https://api.github.com/users/nightroman/following{/other_user}",
      "gists_url": "https://api.github.com/users/nightroman/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/nightroman",
      "id": 927533,
      "login": "nightroman",
      "node_id": "MDQ6VXNlcjkyNzUzMw==",
      "organizations_url": "https://api.github.com/users/nightroman/orgs",
      "received_events_url": "https://api.github.com/users/nightroman/received_events",
      "repos_url": "https://api.github.com/users/nightroman/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/nightroman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nightroman/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/nightroman"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I believe that we want just exclude such practise and recommend use custom variables - it makes scritps more clear and reliable.",
    "created_at": "2017-08-04T04:32:14Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3061#issuecomment-320153812",
    "id": 320153812,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDE1MzgxMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320153812/reactions"
    },
    "updated_at": "2017-08-04T04:32:14Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320153812",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "I am not sure about more clear for `$_`. Using `$_` as a custom variable in proper contexts may be more clear and more *reusable* than something else. It is well known as \"the current target object\" variable, either in pipelines/loops or in custom expressions defined as script blocks.",
    "created_at": "2017-08-04T04:40:30Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3061#issuecomment-320154632",
    "id": 320154632,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDE1NDYzMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320154632/reactions"
    },
    "updated_at": "2017-08-04T04:48:11Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320154632",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/927533?v=4",
      "events_url": "https://api.github.com/users/nightroman/events{/privacy}",
      "followers_url": "https://api.github.com/users/nightroman/followers",
      "following_url": "https://api.github.com/users/nightroman/following{/other_user}",
      "gists_url": "https://api.github.com/users/nightroman/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/nightroman",
      "id": 927533,
      "login": "nightroman",
      "node_id": "MDQ6VXNlcjkyNzUzMw==",
      "organizations_url": "https://api.github.com/users/nightroman/orgs",
      "received_events_url": "https://api.github.com/users/nightroman/received_events",
      "repos_url": "https://api.github.com/users/nightroman/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/nightroman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nightroman/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/nightroman"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@iSazonov:\r\n\r\n> If we can avoid this, we'd better avoid it.\r\n\r\nIt seems to me that a `Set-StrictMode -Version 6` would generally be - not just in this case - a great opportunity not to burden users with historical warts that are only retained to avoid breaking old code.\r\n\r\n",
    "created_at": "2017-08-04T04:53:40Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3061#issuecomment-320155938",
    "id": 320155938,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDE1NTkzOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320155938/reactions"
    },
    "updated_at": "2017-08-04T04:53:40Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320155938",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@nightroman: \r\n\r\nIn the case of cmdlets,  an automatically defined `$_` is a _necessity_, because  the pipeline object being processed has _no other name_.\r\nThe same applies analogously to `$_` in `switch` statements (with array-valued input) and the `catch` handlers of `try` / `catch` statements.\r\n\r\nIn [your example](https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-320151872), there is no need for an implicit variable: you can simply pass argument(s) to the script-block invocation, and either define parameters inside the script block or use `$Args` to reference them:\r\n\r\n```powershell\r\n$foo = ...  # value to pass to the script block below\r\nif (& { ... ) $foo) {  # inside the script block, use $Args or define parameters with param(...) \r\n        ...\r\n}\r\n```    \r\n\r\nSimilarly, in a `foreach` loop, you _must_ specify an _explicit_ iteration variable that names each item being enumerated; choosing a variable name that the engine _implicitly_ defines in other contexts is problematic.\r\n\r\nThat said, in the case of a _loop_ with _item-by-item_ processing, there is a stronger case for the `$_` paradigm, but as I've suggested, the right way to resolve this is to make `$_` _implicit_ as well, by [allowing a `foreach` syntax variation without an explicit iteration variable](https://github.com/PowerShell/PowerShell/issues/3830).",
    "created_at": "2017-08-04T05:16:31Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3061#issuecomment-320158532",
    "id": 320158532,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDE1ODUzMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320158532/reactions"
    },
    "updated_at": "2017-08-04T05:16:31Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320158532",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "@mklement0 Thank you. This is not what I worry about. Here are my concerns:\r\n\r\n- Read only `$_` will break existing code for sure.\r\n- Replacement expressions with arguments and parameters will work but they will not be universal, e.g. I will not be able to use them as is in my code and in built-in cmdlets that require expressions with `$_`.\r\n- On moving code between `ForEach-Object` pipelines and `foreach` loops I will have to rename variables.\r\n",
    "created_at": "2017-08-04T06:31:55Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3061#issuecomment-320168077",
    "id": 320168077,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDE2ODA3Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320168077/reactions"
    },
    "updated_at": "2017-08-04T06:31:55Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320168077",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/927533?v=4",
      "events_url": "https://api.github.com/users/nightroman/events{/privacy}",
      "followers_url": "https://api.github.com/users/nightroman/followers",
      "following_url": "https://api.github.com/users/nightroman/following{/other_user}",
      "gists_url": "https://api.github.com/users/nightroman/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/nightroman",
      "id": 927533,
      "login": "nightroman",
      "node_id": "MDQ6VXNlcjkyNzUzMw==",
      "organizations_url": "https://api.github.com/users/nightroman/orgs",
      "received_events_url": "https://api.github.com/users/nightroman/received_events",
      "repos_url": "https://api.github.com/users/nightroman/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/nightroman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nightroman/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/nightroman"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@mklement0 The main drawback of `Set-StrictMode` is that it is realtime. Before we dicussed that we could be parse-time with `using`. That's why I think we should avoid the cmdlet.",
    "created_at": "2017-08-04T06:39:42Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3061#issuecomment-320169757",
    "id": 320169757,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDE2OTc1Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320169757/reactions"
    },
    "updated_at": "2017-08-04T06:39:42Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320169757",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@iSazonov: Good point about `Set-StrictMode` - I assume you're referring to [@lzybkr's RFC for a _lexical_ strict mode with something like `using strict`](https://github.com/PowerShell/PowerShell-RFC/blob/master/1-Draft/RFC0003-Lexical-Strict-Mode.md).\r\n\r\nIf we had something like that, I think it would be a good general way to get rid of historical warts on an opt-in basis while not breaking old code.",
    "created_at": "2017-08-04T15:20:36Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3061#issuecomment-320276594",
    "id": 320276594,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDI3NjU5NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320276594/reactions"
    },
    "updated_at": "2017-08-04T15:20:36Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320276594",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "@mklement0 I haven't followed this in a while, but as I think about it more I do actually think that `$_` should remain writable.\r\n\r\nOne reason for this is that it's common to modify the object in `$_`, using `Add-Member` for instance. Because the object is probably a reference, it could be that this would still work, if the only thing being prevented is overwriting the variable itself (with a value type or a new reference).\r\n\r\nBut the other use I have in mind is, I think, legitimate.\r\n\r\nIf you want to have a function that takes a scriptblock parameter and then executes it against a series of items within your function, you have only a few choices:\r\n\r\n1. Don't support `$_`. This sucks for the caller. In PowerShell, you're used to writing such scriptblocks where `$_` represents the current item. Not being able to do also means you can't easily store and re-use such a scriptblock. So this ends up with \"custom\" code being non-idiomatic.\r\n1. Set the variable in your function before executing the scriptblock (that is do something like `$_ = $CurrentItem ; & $UserSuppliedScriptBlock`). This wouldn't work anymore.\r\n1. \"Fake it\" with `ForEach-Object`. I've done this before, mostly for prototyping, but it feels wrong. Basically, in your own function, you do something like this: `$CurrentItem | % -Process $UserSuppliedScriptBlock`. This does work... until `$CurrentItem` is an array and needs to be treated as such. There are other situations I don't remember offhand where this is problematic. I'd prefer that we didn't have to resort to this to support the same workflow that lots of other things in PowerShell do.",
    "created_at": "2017-10-22T00:45:18Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3061#issuecomment-338442441",
    "id": 338442441,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzODQ0MjQ0MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/338442441/reactions"
    },
    "updated_at": "2017-10-22T00:49:36Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/338442441",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1260690?v=4",
      "events_url": "https://api.github.com/users/briantist/events{/privacy}",
      "followers_url": "https://api.github.com/users/briantist/followers",
      "following_url": "https://api.github.com/users/briantist/following{/other_user}",
      "gists_url": "https://api.github.com/users/briantist/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/briantist",
      "id": 1260690,
      "login": "briantist",
      "node_id": "MDQ6VXNlcjEyNjA2OTA=",
      "organizations_url": "https://api.github.com/users/briantist/orgs",
      "received_events_url": "https://api.github.com/users/briantist/received_events",
      "repos_url": "https://api.github.com/users/briantist/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/briantist/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/briantist/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/briantist"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@briantist: You should read the thread at #3695 - it's been decided to leave `$_` writable, mostly so as not to break existing code.\r\n\r\nThat said, the solution to passing a collection to `ForEach-Object` as-is is to use `-InputObject` rather than the pipeline:\r\n\r\n```powershell\r\n> ForEach-Object { $_.GetType().Name } -InputObject 1, 2\r\nObject[]\r\n```\r\n\r\n",
    "created_at": "2017-10-22T02:31:11Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3061#issuecomment-338446248",
    "id": 338446248,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzODQ0NjI0OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/338446248/reactions"
    },
    "updated_at": "2017-10-22T02:31:11Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/338446248",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@lzybkr I am currently implemting the rule in PSSA to warn against assignment of automatic variables, could we consider making the [SpecialVariables](https://github.com/PowerShell/PowerShell/blob/master/src/System.Management.Automation/engine/SpecialVariables.cs) class public to avoid having a copy of those magic strings in PSSA or is there a better way to determine whether a variable is automatic?",
    "created_at": "2018-01-30T22:39:41Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3061#issuecomment-361759116",
    "id": 361759116,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTc1OTExNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/361759116/reactions"
    },
    "updated_at": "2018-01-30T22:40:00Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/361759116",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/9250262?v=4",
      "events_url": "https://api.github.com/users/bergmeister/events{/privacy}",
      "followers_url": "https://api.github.com/users/bergmeister/followers",
      "following_url": "https://api.github.com/users/bergmeister/following{/other_user}",
      "gists_url": "https://api.github.com/users/bergmeister/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/bergmeister",
      "id": 9250262,
      "login": "bergmeister",
      "node_id": "MDQ6VXNlcjkyNTAyNjI=",
      "organizations_url": "https://api.github.com/users/bergmeister/orgs",
      "received_events_url": "https://api.github.com/users/bergmeister/received_events",
      "repos_url": "https://api.github.com/users/bergmeister/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/bergmeister/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bergmeister/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/bergmeister"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "It's a good idea, but it would take some work to make it useful.\r\n\r\nFor your use case - it's insufficient because some of those variables are, by design, assignable.\r\n\r\nIn other cases, there is insufficient metadata to say why the variable is special. Many variables are read but not normally assigned by PowerShell, some are assigned by PowerShell in very specific (and uncommon) circumstances, etc.\r\n\r\nSome historical background - that file didn't exist until V3. Before that, there was no good way to find all references to variables that the PowerShell engine cared about in some way. It's also probably missing some that I missed or were added when I wasn't looking.",
    "created_at": "2018-01-30T22:50:24Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3061#issuecomment-361761630",
    "id": 361761630,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTc2MTYzMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/361761630/reactions"
    },
    "updated_at": "2018-01-30T22:50:24Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/361761630",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2148248?v=4",
      "events_url": "https://api.github.com/users/lzybkr/events{/privacy}",
      "followers_url": "https://api.github.com/users/lzybkr/followers",
      "following_url": "https://api.github.com/users/lzybkr/following{/other_user}",
      "gists_url": "https://api.github.com/users/lzybkr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lzybkr",
      "id": 2148248,
      "login": "lzybkr",
      "node_id": "MDQ6VXNlcjIxNDgyNDg=",
      "organizations_url": "https://api.github.com/users/lzybkr/orgs",
      "received_events_url": "https://api.github.com/users/lzybkr/received_events",
      "repos_url": "https://api.github.com/users/lzybkr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lzybkr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lzybkr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lzybkr"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@lzybkr I was also thinking about splitting the warnings into 2 categories:\r\n- definitely avoid/cannot assign for variables such as e.g. `$false` where PowerShell itself would throw an error -> severity error\r\n- re-consider assignment for variables such as `$PSItem` -> severity warning\r\n\r\nThanks for the info. Version should be more than enough since v2 is already deprecated and PSSA requires at least v3 as far as I know. For starters, I could start at least with the official list [here](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_automatic_variables?view=powershell-5.1), which should be the most useful anyway. Some of them like `$IsWindows` cannot be put into it yet since PSSA is not aware of PowerShell Core yet as far as I know.",
    "created_at": "2018-01-30T23:02:04Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3061#issuecomment-361764413",
    "id": 361764413,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTc2NDQxMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/361764413/reactions"
    },
    "updated_at": "2018-01-30T23:02:04Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/361764413",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/9250262?v=4",
      "events_url": "https://api.github.com/users/bergmeister/events{/privacy}",
      "followers_url": "https://api.github.com/users/bergmeister/followers",
      "following_url": "https://api.github.com/users/bergmeister/following{/other_user}",
      "gists_url": "https://api.github.com/users/bergmeister/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/bergmeister",
      "id": 9250262,
      "login": "bergmeister",
      "node_id": "MDQ6VXNlcjkyNTAyNjI=",
      "organizations_url": "https://api.github.com/users/bergmeister/orgs",
      "received_events_url": "https://api.github.com/users/bergmeister/received_events",
      "repos_url": "https://api.github.com/users/bergmeister/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/bergmeister/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bergmeister/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/bergmeister"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "That list is good, but review it closely. After my quick scan, I think warning on `$sender` would be very noisy and I think the doc is outdated regarding the `$REPORTERRORSHOW*` variables - those are not defined anymore, I don't recall when they were removed though.",
    "created_at": "2018-01-30T23:34:33Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3061#issuecomment-361771479",
    "id": 361771479,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTc3MTQ3OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/361771479/reactions"
    },
    "updated_at": "2018-01-30T23:34:33Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/361771479",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2148248?v=4",
      "events_url": "https://api.github.com/users/lzybkr/events{/privacy}",
      "followers_url": "https://api.github.com/users/lzybkr/followers",
      "following_url": "https://api.github.com/users/lzybkr/following{/other_user}",
      "gists_url": "https://api.github.com/users/lzybkr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lzybkr",
      "id": 2148248,
      "login": "lzybkr",
      "node_id": "MDQ6VXNlcjIxNDgyNDg=",
      "organizations_url": "https://api.github.com/users/lzybkr/orgs",
      "received_events_url": "https://api.github.com/users/lzybkr/received_events",
      "repos_url": "https://api.github.com/users/lzybkr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lzybkr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lzybkr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lzybkr"
    }
  },
  {
    "author_association": "NONE",
    "body": "Having just run into this, the real problem is that automatic variables should should have different naming or syntax. At least the ones starting in PS are a good start, but $input is an accident waiting to happen.",
    "created_at": "2021-03-01T02:24:33Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3061#issuecomment-787590680",
    "id": 787590680,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NzU5MDY4MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 3,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/787590680/reactions"
    },
    "updated_at": "2021-03-01T02:24:33Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/787590680",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/4393005?v=4",
      "events_url": "https://api.github.com/users/sicklittlemonkey/events{/privacy}",
      "followers_url": "https://api.github.com/users/sicklittlemonkey/followers",
      "following_url": "https://api.github.com/users/sicklittlemonkey/following{/other_user}",
      "gists_url": "https://api.github.com/users/sicklittlemonkey/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/sicklittlemonkey",
      "id": 4393005,
      "login": "sicklittlemonkey",
      "node_id": "MDQ6VXNlcjQzOTMwMDU=",
      "organizations_url": "https://api.github.com/users/sicklittlemonkey/orgs",
      "received_events_url": "https://api.github.com/users/sicklittlemonkey/received_events",
      "repos_url": "https://api.github.com/users/sicklittlemonkey/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/sicklittlemonkey/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sicklittlemonkey/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/sicklittlemonkey"
    }
  }
]
