[
  {
    "author_association": "COLLABORATOR",
    "body": "Interesting idea but I would have expected this functionality to be part of `Set-PSBreakpoint`.  Perhaps a new parameter set with a `-StreamWrite` parameter that takes an enum that identifies each stream.  Not sure how useful the Output stream would be to break on as it would probably hit that breakpoint a lot.  :-)",
    "created_at": "2018-11-08T01:46:48Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-436843541",
    "id": 436843541,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNjg0MzU0MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/436843541/reactions"
    },
    "updated_at": "2018-11-08T01:47:11Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/436843541",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/5177512?v=4",
      "events_url": "https://api.github.com/users/rkeithhill/events{/privacy}",
      "followers_url": "https://api.github.com/users/rkeithhill/followers",
      "following_url": "https://api.github.com/users/rkeithhill/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkeithhill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rkeithhill",
      "id": 5177512,
      "login": "rkeithhill",
      "node_id": "MDQ6VXNlcjUxNzc1MTI=",
      "organizations_url": "https://api.github.com/users/rkeithhill/orgs",
      "received_events_url": "https://api.github.com/users/rkeithhill/received_events",
      "repos_url": "https://api.github.com/users/rkeithhill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rkeithhill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkeithhill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rkeithhill"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@rkeithhill That approach would be more complicated to implement. We already have a framework for message processing with ActionPreference variables and the common -ErrorAction and -WarningAction parameters. This is just additional message processing that extends that framework. It fits quite naturally into what is already there, and is intended to supercede ActionPreference.Inquire, which is antiquated and of questionable value (but can remain around as a museum artifact to remind us of how we could debug in PowerShell 1.0).\r\n\r\nPlus for the most common use case, entering the debugger on error, possibly for a specific command that is deep in a call stack, you can either use -ErrorAction Break at the top level or set -ErrorAction on the specific command where you want to break using $PSDefaultParameterValues. No new breakpoint types were required, and based on personal experience evangelizing the debugger to the community and gathering feedback from the community, I think this approach will get much more use than a new Set-PSBreakpoint parameter set would. It's much more visual and easier to digest for scripters.",
    "created_at": "2018-11-08T01:56:26Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-436845299",
    "id": 436845299,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNjg0NTI5OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/436845299/reactions"
    },
    "updated_at": "2018-11-08T02:16:37Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/436845299",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "All good points but consider that if `Set-PSBreakpoint` is used you pretty much get conditional & tracing breakpoints for free via the `-Action` parameter.  :-)",
    "created_at": "2018-11-08T02:26:38Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-436850816",
    "id": 436850816,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNjg1MDgxNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/436850816/reactions"
    },
    "updated_at": "2018-11-08T02:26:38Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/436850816",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/5177512?v=4",
      "events_url": "https://api.github.com/users/rkeithhill/events{/privacy}",
      "followers_url": "https://api.github.com/users/rkeithhill/followers",
      "following_url": "https://api.github.com/users/rkeithhill/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkeithhill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rkeithhill",
      "id": 5177512,
      "login": "rkeithhill",
      "node_id": "MDQ6VXNlcjUxNzc1MTI=",
      "organizations_url": "https://api.github.com/users/rkeithhill/orgs",
      "received_events_url": "https://api.github.com/users/rkeithhill/received_events",
      "repos_url": "https://api.github.com/users/rkeithhill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rkeithhill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkeithhill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rkeithhill"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Tracing isn't really an advantage in the case of stream messages though, is it? Messages provide that naturally (they are messages sent through a stream, after all). Also, with so many scripters who don't use the debugger, the simple UX that this provides feels like a win to me. But you're right, you don't get conditional breakpointing with this approach.\r\n\r\nI was looking at this again this morning, and could add a new type of breakpoint so that either `Set-PSBreakpoint` or the new `ActionPreference.Break` value could be used to trigger breakpoints, with the former creating an explicit breakpoint which could be conditional, and the latter creating a non-conditional, implicit breakpoint that only exists during the invocation, if that approach is preferred.",
    "created_at": "2018-11-08T12:48:54Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-436982913",
    "id": 436982913,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNjk4MjkxMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/436982913/reactions"
    },
    "updated_at": "2018-11-08T12:48:54Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/436982913",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@PaulHigin Even though this is only marked WIP for now (mostly because I want to make sure I have adequate test coverage once this is all hashed out), I'd really like your thoughts on what I've done here so far.",
    "created_at": "2018-11-08T12:50:47Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-436983346",
    "id": 436983346,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNjk4MzM0Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/436983346/reactions"
    },
    "updated_at": "2018-11-08T12:50:47Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/436983346",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Regarding ActionPreference versus new breakpoint type, I think I prefer the current ActionPreference.  This is different than breakpoints, more like Wait-Debugger, and I feel adding a new breakpoint type that really isn't a breakpoint could be confusing. OTOH it would be nice to also include a \"break on exception (terminating error)\", and I am not sure how that would be set ... breakpoint type or new built-in variable. It is worth thinking about and discussing.",
    "created_at": "2018-11-09T00:00:08Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-437200931",
    "id": 437200931,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNzIwMDkzMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/437200931/reactions"
    },
    "updated_at": "2018-11-09T00:00:08Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/437200931",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/14019529?v=4",
      "events_url": "https://api.github.com/users/PaulHigin/events{/privacy}",
      "followers_url": "https://api.github.com/users/PaulHigin/followers",
      "following_url": "https://api.github.com/users/PaulHigin/following{/other_user}",
      "gists_url": "https://api.github.com/users/PaulHigin/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/PaulHigin",
      "id": 14019529,
      "login": "PaulHigin",
      "node_id": "MDQ6VXNlcjE0MDE5NTI5",
      "organizations_url": "https://api.github.com/users/PaulHigin/orgs",
      "received_events_url": "https://api.github.com/users/PaulHigin/received_events",
      "repos_url": "https://api.github.com/users/PaulHigin/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/PaulHigin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PaulHigin/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/PaulHigin"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "At first look users can understand that `ActionPreference.Break`  breaks/exits the script. What about `ActionPreference.BreakToDebugger`, `ActionPreference.JumpToDebugger`, or `ActionPreference.Debug`?\r\n\r\nIf I remember right there is a problem with propagating the preference variables ($DebugPreference, $ErrorActionPreference, $InformationPreference, $ProgressPreference, $VerbosePreference,  $WarningPreference) to local and module scopes. This may somehow affect this enhancement.",
    "created_at": "2018-11-09T03:54:11Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-437241811",
    "id": 437241811,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNzI0MTgxMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/437241811/reactions"
    },
    "updated_at": "2018-11-09T03:54:11Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/437241811",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@iSazonov Regarding the suggestion for `ActionPreference.Debug`, I was originally debating between that and Break, but decided Debug wasn't appropriate because it could easily be confused with `-Debug` or `$DebugPreference`, which are entirely different.\r\n\r\nI also thought about the possible confusion between `Break` and the `break` statement, but felt that wasn't an issue because we also have `ActionPreference.Continue`, which could be confused with the `continue` statement, but they are entirely different from one another. Users need to understand that these `ActionPreference` values are about actions taken by the engine during the execution of a script, controlling how messages are handled, and not the same thing as keywords used for flow control within a loop in a script.\r\n\r\nCan you share more details about the problem with propagating preference variables that you mentioned so that I'm aware of the details?\r\n\r\n",
    "created_at": "2018-11-09T14:08:53Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-437369933",
    "id": 437369933,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNzM2OTkzMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/437369933/reactions"
    },
    "updated_at": "2018-11-09T14:10:08Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/437369933",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@KirkMunro My understanding of it is that pref variables (`$ErrorActionPreference` etc) are not correctly passed between modules.\r\n\r\nFor example:\r\n\r\n  * You write module A which has a function that calls `Remove-Item` (which is part of one of the default modules).\r\n  * You load both modules and set `$ErrorActionPreference = 'Continue'`\r\n  * You then try to call the function from module A with preference variable set\r\n\r\n**Result:** module A sees the value you set, but `Remove-Item` will *not* see the variable.\r\n\r\nHowever, it is my understanding that it manages to work correctly when (in the above example) calling a command from module A with `-ErrorAction` *parameter*.\r\n\r\nPlease correct me if my understanding is lacking @iSazonov 😄 ",
    "created_at": "2018-11-09T14:18:47Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-437372643",
    "id": 437372643,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNzM3MjY0Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/437372643/reactions"
    },
    "updated_at": "2018-11-09T14:20:20Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/437372643",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@vexx32 Thanks! You are right.\r\n@KirkMunro Thanks for clarify. It'll be useful for PowerShell Committee considerations. \r\nThe issue about preference variables is #4568 .",
    "created_at": "2018-11-09T14:36:09Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-437377677",
    "id": 437377677,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNzM3NzY3Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/437377677/reactions"
    },
    "updated_at": "2018-11-09T14:36:09Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/437377677",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@PowerShell/powershell-committee summary:\r\n\r\n@KirkMunro could you elaborate more on your reasoning for not adding this functionality to `ActionPreference.Inquire`? (Overall, we agree that this is useful behavior, and some kind of method on `ActionPreference` is the right approach.)\r\n\r\nGiven a concern about the proliferation of trivial type accelerators, instead of adding a new accelerator, we should just fix our tab completion to complete the same way that parameters like `-ErrorAction` complete. (Unless there's another reason for that change that we're missing?)\r\n\r\nAs for the `Wait-Debugger` change, everyone is in favor. 😊",
    "created_at": "2018-11-15T00:01:06Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-438864465",
    "id": 438864465,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODg2NDQ2NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/438864465/reactions"
    },
    "updated_at": "2018-11-15T00:01:06Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/438864465",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1255187?v=4",
      "events_url": "https://api.github.com/users/joeyaiello/events{/privacy}",
      "followers_url": "https://api.github.com/users/joeyaiello/followers",
      "following_url": "https://api.github.com/users/joeyaiello/following{/other_user}",
      "gists_url": "https://api.github.com/users/joeyaiello/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/joeyaiello",
      "id": 1255187,
      "login": "joeyaiello",
      "node_id": "MDQ6VXNlcjEyNTUxODc=",
      "organizations_url": "https://api.github.com/users/joeyaiello/orgs",
      "received_events_url": "https://api.github.com/users/joeyaiello/received_events",
      "repos_url": "https://api.github.com/users/joeyaiello/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/joeyaiello/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joeyaiello/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/joeyaiello"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Great questions @joeyaiello. Answers below.\r\n\r\n1. `ActionPreference.Break` is explicit. It allows scripts to tell PowerShell they want to enter the debugger under certain conditions, just like they can by setting up breakpoints. `ActionPreference.Inquire` is a prompt for the end user, to which they would have to provide a reply, and then debug, when they could simply choose to continue execution when they enter the debugger if they don't want to debug at that point. If they're unsure, they need to be in the debugger anyway to look around, view where they are in the script, etc., so it made much more sense to me to simply bring users into the debugger by providing them with an explicit choice they make at execution time rather than asking them during the running of a script. Also, since PowerShell had a debugger added to it in v2, I can't think of one person who uses or promotes the use of `ActionPreference.Inquire`. If someone else gave me break functionality behind the question generated by `ActionPreference.Inquire`, I would be inclined to add `ActionPreference.Break` anyway. Last, there is PR #8195, which removes the only built-in use of `ActionPreference.Inquire` that I know of in PowerShell, so that option feels pretty legacy at this point. All of that said, if the PowerShell team would like `ActionPreference.Inquire` to have a Break option in place of the option to Enter a nested prompt, I wouldn't be opposed to adding it to at least make it an option for folks who might want such functionality.\r\n\r\n1. So you're suggesting have tab completion work for variable assignment like it does for parameter values, such that a user could type in `$ErrorActionPreference = '<tab>`, and be presented with the values they can use? Yeah, ok, that could work. I still think it's useful to learn/understand the type behind the `*Preference` variables though, and as far as script readability/scanning goes, `$ErrorActionPreference = [ActionPreference]::Break` is a better way to write scripts IMHO than `$ErrorActionPreference = 'Break'`. That said, if you folks don't want the accelerator, I can take it out. I really think it is much easier to identify in scripts though, and helps users learn what is really happening much more than assigning those values to a string.\r\n\r\n1. I know, right? I was really happy to work that one out.",
    "created_at": "2018-11-15T02:39:43Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-438895740",
    "id": 438895740,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODg5NTc0MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/438895740/reactions"
    },
    "updated_at": "2018-11-15T13:05:47Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/438895740",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "One more thought regarding the \"proliferation of trivial type accelerators\": what if PowerShell automatically worked as if you had invoked the equivalent of the snippet below at the top of every script/script module? \r\n\r\n```PowerShell\r\nusing namespace System.Management.Automation\r\nusing namespace System.Management.Automation.Language\r\nusing namespace System.Management.Automation.Runspaces\r\n```\r\n\r\nI think that, plus type acceleration for aliases/shorthand type names and outliers that are in namespaces from which you only care about a few types, would make working with the .NET side of PowerShell much easier. Is there a downside to automatically using some core namespaces that are among the most frequently used in PowerShell?",
    "created_at": "2018-11-15T13:08:30Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-439034248",
    "id": 439034248,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTAzNDI0OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/439034248/reactions"
    },
    "updated_at": "2018-11-15T13:09:01Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/439034248",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "That should probably be discussed in a new issue, @KirkMunro... but I don't think that would be overly terrible to have work. As you say, many of those types would be extremely helpful to have readily available. 😄 ",
    "created_at": "2018-11-15T13:20:29Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-439037516",
    "id": 439037516,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTAzNzUxNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/439037516/reactions"
    },
    "updated_at": "2018-11-15T13:20:29Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/439037516",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@KirkMunro `using namespace` is a good option to make scripts a bit more readable, but can affect runtime performance during discovery of types so we wouldn't want to include the SMA namespaces by default.  One of the things we discussed that could help in the future is allowing `using system.management.automation.actionpreference as actionpreference` to get custom type accelerators within your script.",
    "created_at": "2018-11-16T02:33:12Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-439261496",
    "id": 439261496,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTI2MTQ5Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/439261496/reactions"
    },
    "updated_at": "2018-11-16T02:33:12Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/439261496",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "NONE",
    "body": "This PR has been automatically marked as stale because it has not had activity in the last 30 days. It will be closed if no further activity occurs within 10 days.\nThank you for your contributions.\nCommunity members are welcome to grab these works.\n",
    "created_at": "2018-12-16T09:17:17Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-447628170",
    "id": 447628170,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NzYyODE3MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/447628170/reactions"
    },
    "updated_at": "2018-12-16T09:17:17Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/447628170",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/in/1724?v=4",
      "events_url": "https://api.github.com/users/stale%5Bbot%5D/events{/privacy}",
      "followers_url": "https://api.github.com/users/stale%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/stale%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/stale%5Bbot%5D/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/apps/stale",
      "id": 26384082,
      "login": "stale[bot]",
      "node_id": "MDM6Qm90MjYzODQwODI=",
      "organizations_url": "https://api.github.com/users/stale%5Bbot%5D/orgs",
      "received_events_url": "https://api.github.com/users/stale%5Bbot%5D/received_events",
      "repos_url": "https://api.github.com/users/stale%5Bbot%5D/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/stale%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stale%5Bbot%5D/subscriptions",
      "type": "Bot",
      "url": "https://api.github.com/users/stale%5Bbot%5D"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "This is not abandoned. It's just a busy time of year for everyone involved.\r\n\r\n@joeyaiello: I'm waiting on feedback/comments from you in response to my reply to your questions.",
    "created_at": "2018-12-17T15:39:01Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-447888831",
    "id": 447888831,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Nzg4ODgzMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/447888831/reactions"
    },
    "updated_at": "2018-12-17T15:39:01Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/447888831",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Hey @KirkMunro, sorry, I was just the messenger for the @PowerShell/powershell-committee. Unfortunately, we've been light on meetings as folks have been out for the holidays. Might have to pick this one back up after the new year (in particular, I think @JamesWTruher and @BrucePay cared deeply about the behavior). ",
    "created_at": "2018-12-18T19:04:43Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-448333235",
    "id": 448333235,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODMzMzIzNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/448333235/reactions"
    },
    "updated_at": "2018-12-18T19:04:43Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/448333235",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1255187?v=4",
      "events_url": "https://api.github.com/users/joeyaiello/events{/privacy}",
      "followers_url": "https://api.github.com/users/joeyaiello/followers",
      "following_url": "https://api.github.com/users/joeyaiello/following{/other_user}",
      "gists_url": "https://api.github.com/users/joeyaiello/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/joeyaiello",
      "id": 1255187,
      "login": "joeyaiello",
      "node_id": "MDQ6VXNlcjEyNTUxODc=",
      "organizations_url": "https://api.github.com/users/joeyaiello/orgs",
      "received_events_url": "https://api.github.com/users/joeyaiello/received_events",
      "repos_url": "https://api.github.com/users/joeyaiello/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/joeyaiello/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joeyaiello/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/joeyaiello"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Ok, thanks @joeyaiello. I wasn't trying to be impatient, just saw GitHub marked the PR as stale and wanted to make sure it was still moving forward.",
    "created_at": "2018-12-19T18:09:59Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-448691563",
    "id": 448691563,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODY5MTU2Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/448691563/reactions"
    },
    "updated_at": "2018-12-19T18:09:59Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/448691563",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@PowerShell/powershell-committee reviewed this again and is fine with introducing `Break` and leaving `Inquire`",
    "created_at": "2019-01-16T23:24:11Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-454982713",
    "id": 454982713,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDk4MjcxMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/454982713/reactions"
    },
    "updated_at": "2019-01-16T23:24:11Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/454982713",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "NONE",
    "body": "This PR has been automatically marked as stale because it has not had activity in the last 30 days. It will be closed if no further activity occurs within 10 days.\nThank you for your contributions.\nCommunity members are welcome to grab these works.\n",
    "created_at": "2019-02-16T04:12:36Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-464284868",
    "id": 464284868,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDI4NDg2OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/464284868/reactions"
    },
    "updated_at": "2019-02-16T04:12:36Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/464284868",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/in/1724?v=4",
      "events_url": "https://api.github.com/users/stale%5Bbot%5D/events{/privacy}",
      "followers_url": "https://api.github.com/users/stale%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/stale%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/stale%5Bbot%5D/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/apps/stale",
      "id": 26384082,
      "login": "stale[bot]",
      "node_id": "MDM6Qm90MjYzODQwODI=",
      "organizations_url": "https://api.github.com/users/stale%5Bbot%5D/orgs",
      "received_events_url": "https://api.github.com/users/stale%5Bbot%5D/received_events",
      "repos_url": "https://api.github.com/users/stale%5Bbot%5D/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/stale%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stale%5Bbot%5D/subscriptions",
      "type": "Bot",
      "url": "https://api.github.com/users/stale%5Bbot%5D"
    }
  },
  {
    "author_association": "NONE",
    "body": "This PR has been automatically closed because it is stale. If you wish to continue working on the PR, please first update the PR, then reopen it.\nThanks again for your contribution.\nCommunity members are welcome to grab these works.\n",
    "created_at": "2019-02-26T04:48:40Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-467294024",
    "id": 467294024,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzI5NDAyNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/467294024/reactions"
    },
    "updated_at": "2019-02-26T04:48:40Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/467294024",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/in/1724?v=4",
      "events_url": "https://api.github.com/users/stale%5Bbot%5D/events{/privacy}",
      "followers_url": "https://api.github.com/users/stale%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/stale%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/stale%5Bbot%5D/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/apps/stale",
      "id": 26384082,
      "login": "stale[bot]",
      "node_id": "MDM6Qm90MjYzODQwODI=",
      "organizations_url": "https://api.github.com/users/stale%5Bbot%5D/orgs",
      "received_events_url": "https://api.github.com/users/stale%5Bbot%5D/received_events",
      "repos_url": "https://api.github.com/users/stale%5Bbot%5D/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/stale%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stale%5Bbot%5D/subscriptions",
      "type": "Bot",
      "url": "https://api.github.com/users/stale%5Bbot%5D"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Do we want to lost the PR?",
    "created_at": "2019-02-26T16:50:38Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-467518368",
    "id": 467518368,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzUxODM2OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/467518368/reactions"
    },
    "updated_at": "2019-02-26T16:50:38Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/467518368",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@KirkMunro Is this PR still WIP? If it's ready, I would like @JamesWTruher to review this.",
    "created_at": "2019-03-20T21:07:46Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-475028771",
    "id": 475028771,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NTAyODc3MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/475028771/reactions"
    },
    "updated_at": "2019-03-20T21:07:46Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/475028771",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@daxian-dbw Sorry for delay, I'm coming out of being sick (had pneumonia), and tidying up some old PRs to drive them to closure. This is the current one I'm reviewing to ensure it is ready for final review/merge.",
    "created_at": "2019-04-08T14:44:17Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-480862103",
    "id": 480862103,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MDg2MjEwMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/480862103/reactions"
    },
    "updated_at": "2019-04-08T14:45:24Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/480862103",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@KirkMunro I'm sorry to hear that and hope you are feeling much better now. No rush, please take your time. Thanks! ",
    "created_at": "2019-04-08T17:25:14Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-480925639",
    "id": 480925639,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MDkyNTYzOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/480925639/reactions"
    },
    "updated_at": "2019-04-08T17:25:14Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/480925639",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@daxian-dbw This is good to go. All of my tests (which are manual) pass with the code as is just fine.\r\n\r\nWhile testing, I uncovered a few bugs that are not the result of this PR (they exist in PowerShell Core 6.2) that I'll mention here:\r\n\r\n1. When you detach the debugger from a job, you are returned to a prompt that renders with an extra \">\". This is presumably because the prompt function runs before the detach has fully completed, and at that time the system thinks it's still in a nested prompt (reported in #9337).\r\n1. When you detach the debugger from a job, you return to your original session; however, the running job does not enter an AtBreakpoint state when it encounters the Wait-Debugger command (or now -ErrorAction Break). Instead, it just continues to run. I believe this is a bug, and the job should still stop at any breakpoints it encounters and wait for the debugger. @PaulHigin: Thoughts on this one? (reported in #9336).\r\n\r\nAlso, I considered putting together some automated testing via a hook into the debugger, but felt I might be reinventing some of what you have internally already in the classes that @PaulHigin talked about above, so I just stuck with manual testing to make sure that everything worked as expected.",
    "created_at": "2019-04-10T18:12:58Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-481802768",
    "id": 481802768,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MTgwMjc2OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/481802768/reactions"
    },
    "updated_at": "2019-04-10T19:43:42Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/481802768",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "Thanks @KirkMunro!\r\n@PaulHigin Can you please comment on the two issues @KirkMunro mentioned above? Also, could you please review this PR again as it has been quite a while and there are new changes pushed? Thanks!\r\n@JamesWTruher Can you please also review this PR to make sure the UX behavior is what you expect?",
    "created_at": "2019-04-10T18:30:44Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-481809344",
    "id": 481809344,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MTgwOTM0NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/481809344/reactions"
    },
    "updated_at": "2019-04-10T18:30:44Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/481809344",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@KirkMunro By the way, can you please include a few sample scripts in the PR description (with annotations maybe) as examples to show the UX behavior? That would be very helpful too. Thanks!",
    "created_at": "2019-04-10T19:02:33Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-481821390",
    "id": 481821390,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MTgyMTM5MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/481821390/reactions"
    },
    "updated_at": "2019-04-10T19:02:33Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/481821390",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I agree about the >> prompt, but am not too concerned since hitting 'Enter' redraws the prompt correctly.\r\nI agree the Debug-Job, 'detach' command should allow another debugger attach wait, and that it is a bug. \r\n\r\nThanks.",
    "created_at": "2019-04-10T19:28:49Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-481829972",
    "id": 481829972,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MTgyOTk3Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/481829972/reactions"
    },
    "updated_at": "2019-04-10T19:28:49Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/481829972",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/14019529?v=4",
      "events_url": "https://api.github.com/users/PaulHigin/events{/privacy}",
      "followers_url": "https://api.github.com/users/PaulHigin/followers",
      "following_url": "https://api.github.com/users/PaulHigin/following{/other_user}",
      "gists_url": "https://api.github.com/users/PaulHigin/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/PaulHigin",
      "id": 14019529,
      "login": "PaulHigin",
      "node_id": "MDQ6VXNlcjE0MDE5NTI5",
      "organizations_url": "https://api.github.com/users/PaulHigin/orgs",
      "received_events_url": "https://api.github.com/users/PaulHigin/received_events",
      "repos_url": "https://api.github.com/users/PaulHigin/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/PaulHigin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PaulHigin/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/PaulHigin"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "For sample scripts used when debugging jobs, have a look at scripts 2, 3, and 7, [here](https://github.com/KirkMunro/debugging-powershell-session). They need a little modification (pay attention to the paths they expect or modify them to use their own paths). I added `Get-ChildItem .\\doesnotexist -ErrorAction break` to script 2 in my cloned repo be able to test and make sure that worked as expected.",
    "created_at": "2019-04-10T21:35:36Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-481874237",
    "id": 481874237,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MTg3NDIzNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/481874237/reactions"
    },
    "updated_at": "2019-04-10T21:36:16Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/481874237",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@daxian-dbw @PaulHigin @JamesWTruher Related to this PR, I have an important question. It was really bugging me during testing this that `-ErrorAction Break` wouldn't cause PowerShell to enter the debugger immediately when an exception was raised. It's one of those things that felt like I would have to explain around as a shortcoming when talking about this feature.\r\n\r\nTo avoid having to dance around a functionality gap if I'm demoing this to someone, this afternoon/evening, I decided I wanted to see if I could resolve that as well, such that `-ErrorAction Break` would also enter the debugger if any of the following occurred:\r\n\r\n1. Invocation of the `throw` statement.\r\n1. Invocation of $PSCmdlet.ThrowTerminatingError\r\n1. An exception from the parser (e.g. gps -foo bar).\r\n1. A runtime exception (e.g. 1/0).\r\n\r\nI've managed to get this working by making a very small addition to `MshCommandRuntime.ThrowTerminatingError` as well as to `ExceptionHandlingOps.CheckActionPreference`. The code added simply checks the error action preference, and if it is set to break, it enters the debugger, setting `PSDebugContext.TriggerObject` to the exception that was raised.\r\n\r\nI really feel this should be part of this PR. Since we're early in the 7.0 cycle, it feels like a good time to make this addition. Do any of y'all object to me committing these additional changes and increasing the scope of this PR to what I really wanted it to be in the first place?",
    "created_at": "2019-04-15T00:50:19Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-483074435",
    "id": 483074435,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MzA3NDQzNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/483074435/reactions"
    },
    "updated_at": "2019-04-15T01:43:37Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/483074435",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "You know what, rather than wait for a response I just committed those changes. Using them locally, it is just the right thing to do and makes this PR so much better.",
    "created_at": "2019-04-15T17:47:06Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-483351440",
    "id": 483351440,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MzM1MTQ0MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 1,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/483351440/reactions"
    },
    "updated_at": "2019-04-15T17:47:06Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/483351440",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "Just today I reviewed a fix where a script expected `-ErrorAction` to do something with terminating errors. Today it consistently does not. `-ErrorAction Break` would change that for a specific preference and this seems like it will lead to even more confusion.",
    "created_at": "2019-04-15T22:30:58Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-483442690",
    "id": 483442690,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MzQ0MjY5MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/483442690/reactions"
    },
    "updated_at": "2019-04-15T22:30:58Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/483442690",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2148248?v=4",
      "events_url": "https://api.github.com/users/lzybkr/events{/privacy}",
      "followers_url": "https://api.github.com/users/lzybkr/followers",
      "following_url": "https://api.github.com/users/lzybkr/following{/other_user}",
      "gists_url": "https://api.github.com/users/lzybkr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lzybkr",
      "id": 2148248,
      "login": "lzybkr",
      "node_id": "MDQ6VXNlcjIxNDgyNDg=",
      "organizations_url": "https://api.github.com/users/lzybkr/orgs",
      "received_events_url": "https://api.github.com/users/lzybkr/received_events",
      "repos_url": "https://api.github.com/users/lzybkr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lzybkr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lzybkr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lzybkr"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@lzybkr: To restate what I think you just said, you are concerned that having `-ErrorAction Break` enter a breakpoint for both terminating and non-terminating errors may lead to confusion because of cases where `-ErrorAction` does not behave the same between terminating and non-terminating errors with other values such as `SilentlyContinue`. Is this what you meant? Can you identify the specific script or scenario that you're referring to?",
    "created_at": "2019-04-16T01:21:34Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-483475012",
    "id": 483475012,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MzQ3NTAxMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/483475012/reactions"
    },
    "updated_at": "2019-04-16T01:21:34Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/483475012",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "You understand correctly.\r\n\r\nThe script I'm referring to is internal, but used `-ErrorAction SilentlyContinue -ErrorVariable blah` when it should have used `try/catch`.",
    "created_at": "2019-04-16T01:28:27Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-483476207",
    "id": 483476207,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MzQ3NjIwNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/483476207/reactions"
    },
    "updated_at": "2019-04-16T01:28:27Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/483476207",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2148248?v=4",
      "events_url": "https://api.github.com/users/lzybkr/events{/privacy}",
      "followers_url": "https://api.github.com/users/lzybkr/followers",
      "following_url": "https://api.github.com/users/lzybkr/following{/other_user}",
      "gists_url": "https://api.github.com/users/lzybkr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lzybkr",
      "id": 2148248,
      "login": "lzybkr",
      "node_id": "MDQ6VXNlcjIxNDgyNDg=",
      "organizations_url": "https://api.github.com/users/lzybkr/orgs",
      "received_events_url": "https://api.github.com/users/lzybkr/received_events",
      "repos_url": "https://api.github.com/users/lzybkr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lzybkr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lzybkr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lzybkr"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "I'm OK with the difference between `SilentlyContinue` and `Break`. Since PowerShell v1, both terminating and non-terminating errors have been stored in the `$Error` variable. From that perspective, `-ErrorAction Break` entering the debugger for both terminating and non-terminating errors seems like the expected behavior.\r\n\r\nSimilarly, when you use `-ErrorAction Inquire`, whether you encounter a terminating error or a non-terminating error, you get prompted for the action you would like to take. This makes both `Inquire` and `Break` consistent with one another.\r\n\r\nOther `ActionPreference` values of `Continue`, `SilentlyContinue`, and `Ignore` apply to the handling of non-terminating errors, `Stop` makes a non-terminating error become terminating, and `try/catch` applies to the handling of terminating errors (exceptions).\r\n\r\nI think all of this can be easily explained in documentation.",
    "created_at": "2019-04-16T02:16:24Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-483484808",
    "id": 483484808,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MzQ4NDgwOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/483484808/reactions"
    },
    "updated_at": "2019-04-16T02:34:04Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/483484808",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "I'd always assumed break on error would be implemented via `Set-PSBreakPoint` which would handle any exception thrown - from methods, cmdlets, or ordinary functions.\r\n\r\n`-ErrorAction Break` won't support methods or non-cmdlet binding functions, so you'd have to set `$ErrorActionPreference`?\r\n\r\nI don't see approval from the committee on this, and honestly it feels like there should be an RFC or a tracking issue - I think many people don't look at PRs for feature level discussions.",
    "created_at": "2019-04-16T04:19:04Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-483505195",
    "id": 483505195,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MzUwNTE5NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/483505195/reactions"
    },
    "updated_at": "2019-04-16T04:19:04Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/483505195",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2148248?v=4",
      "events_url": "https://api.github.com/users/lzybkr/events{/privacy}",
      "followers_url": "https://api.github.com/users/lzybkr/followers",
      "following_url": "https://api.github.com/users/lzybkr/following{/other_user}",
      "gists_url": "https://api.github.com/users/lzybkr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lzybkr",
      "id": 2148248,
      "login": "lzybkr",
      "node_id": "MDQ6VXNlcjIxNDgyNDg=",
      "organizations_url": "https://api.github.com/users/lzybkr/orgs",
      "received_events_url": "https://api.github.com/users/lzybkr/received_events",
      "repos_url": "https://api.github.com/users/lzybkr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lzybkr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lzybkr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lzybkr"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@lzybkr: [Committee approval](https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-454982713), and [some related thoughts shared earlier in this PR](https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-437200931).",
    "created_at": "2019-04-16T11:55:15Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-483628622",
    "id": 483628622,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MzYyODYyMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/483628622/reactions"
    },
    "updated_at": "2019-04-16T11:58:24Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/483628622",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Also @lzybkr, one more thought behind where I was coming from with this approach. The vast majority of the PowerShell community does not use the debugger. I believe `-ErrorAction Break` and `$ErrorActionPreference = [actionpreference]::Break` offer a lower barrier to entry and are easier concepts to grasp for users who traditionally would avoid anything to do with a debugger.\r\n\r\nA workflow such as:\r\n\r\n1. Run script or function.\r\n1. Encounter an error.\r\n1. Run script or function again with `-ea Break`, or set `$ErrorActionPreference = 'Break'` and then re-run your script or function.\r\n\r\nis conceptually easier than:\r\n\r\n1. Run script or function.\r\n1. Encounter an error.\r\n1. Use `Set-PSBreakpoint` to configure a breakpoint so that when you run your script again you stop on the error.\r\n1. Run script or function again.",
    "created_at": "2019-04-16T12:57:40Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-483648113",
    "id": 483648113,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MzY0ODExMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/483648113/reactions"
    },
    "updated_at": "2019-04-16T12:57:40Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/483648113",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "I'm not convinced that people don't use the debugger (VSCode? ISE?) or that ErrorActionPreference.Break is conceptually simpler, but that doesn't matter for my concerns.\r\n\r\nDocumentation won't easily solve the issue around ErrorActionPreference for non-terminating errors. There is a ton of experience out there today and this will just muddy the waters. People will get the wrong idea and expect `-ErrorAction <anything>` to apply to terminating errors.\r\n\r\nPossibly just as bad - I don't see how this would work in scripts that set `$ErrorActionPreference`, or how it would work across modules. And when it doesn't work, people will learn to distrust the debugger.\r\n\r\nI feel like the @PowerShell/powershell-committee spent too little time thinking about this - I'd expect to see some more rationale behind their thinking and why `Set-PSBreakpoint` was rejected.",
    "created_at": "2019-04-16T14:29:33Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-483685905",
    "id": 483685905,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MzY4NTkwNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/483685905/reactions"
    },
    "updated_at": "2019-04-16T14:29:33Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/483685905",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2148248?v=4",
      "events_url": "https://api.github.com/users/lzybkr/events{/privacy}",
      "followers_url": "https://api.github.com/users/lzybkr/followers",
      "following_url": "https://api.github.com/users/lzybkr/following{/other_user}",
      "gists_url": "https://api.github.com/users/lzybkr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lzybkr",
      "id": 2148248,
      "login": "lzybkr",
      "node_id": "MDQ6VXNlcjIxNDgyNDg=",
      "organizations_url": "https://api.github.com/users/lzybkr/orgs",
      "received_events_url": "https://api.github.com/users/lzybkr/received_events",
      "repos_url": "https://api.github.com/users/lzybkr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lzybkr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lzybkr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lzybkr"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> I'm not convinced that people don't use the debugger (VSCode? ISE?)\r\n\r\nJust to give some context, that comes after presenting sessions on PowerShell debugging over several years to people who are intermediate to advanced in PowerShell, and learning through questions and discussion with the attendees how few of them actually use the debugger. People use the editors, and either don't debug, or inject statements to see how far they get in a script, etc. -- debugging is a scary concept for non-developers to consider.\r\n\r\n> People will get the wrong idea and expect -ErrorAction <anything> to apply to terminating errors.\r\n\r\nHas `ErrorAction.Inquire` caused people to get the wrong idea? Because it applies to terminating errors, and has been around since v1.\r\n\r\n> I don't see how this would work in scripts that set $ErrorActionPreference, or how it would work across modules\r\n\r\nYou're right, there is a challenge with the current approach for this PR when used with one module that invokes an advanced function in another because of #4568. I just added a note to that issue because it really needs some attention/thought, rather than dragging on for years.\r\n\r\n> I feel like the @PowerShell/powershell-committee spent too little time thinking about this - I'd expect to see some more rationale behind their thinking and why Set-PSBreakpoint was rejected.\r\n\r\nFair enough. As noted above, I took this approach because `Set-PSBreakpoint` didn't seem like the right approach to me at the time (thinking of the breakpoint as more virtual -- who knows when/where an error will occur, terminating or not). I've tried thinking about how `Set-PSBreakpoint` could make sense with command breakpoints conditional on the command raising an error, but that still feels really weird because it doesn't break on the command, but instead on the error that occurs. Plus the current approach supports breaking on more than just errors -- it works for warnings, verbose messages, debug messages, progress messages, etc. (minus when it doesn't because of #4568).",
    "created_at": "2019-04-16T15:49:15Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-483719796",
    "id": 483719796,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MzcxOTc5Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/483719796/reactions"
    },
    "updated_at": "2019-04-16T15:49:15Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/483719796",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "FWIW I am leaning toward Kirk in that this is an overall good use of action preference.  It is opt-in and deliberate so I feel there is no real chance that live script will unaccountably break into the debugger and appear hung.  But instead will help developers track down difficult error paths.  I think it is a good start and something we can experiment with and refine as needed.",
    "created_at": "2019-04-16T16:43:02Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-483739951",
    "id": 483739951,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MzczOTk1MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/483739951/reactions"
    },
    "updated_at": "2019-04-16T16:43:02Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/483739951",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/14019529?v=4",
      "events_url": "https://api.github.com/users/PaulHigin/events{/privacy}",
      "followers_url": "https://api.github.com/users/PaulHigin/followers",
      "following_url": "https://api.github.com/users/PaulHigin/following{/other_user}",
      "gists_url": "https://api.github.com/users/PaulHigin/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/PaulHigin",
      "id": 14019529,
      "login": "PaulHigin",
      "node_id": "MDQ6VXNlcjE0MDE5NTI5",
      "organizations_url": "https://api.github.com/users/PaulHigin/orgs",
      "received_events_url": "https://api.github.com/users/PaulHigin/received_events",
      "repos_url": "https://api.github.com/users/PaulHigin/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/PaulHigin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PaulHigin/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/PaulHigin"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "> Has ErrorAction.Inquire caused people to get the wrong idea? Because it applies to terminating errors, and has been around since v1.\r\n\r\nWe don't have telemetry, but I'm guessing `Inquire` is used infrequently because it is not automation friendly. And it's kinda weird and not too useful IMO.\r\n\r\n> You're right, there is a challenge with the current approach for this PR when used with one module that invokes an advanced function in another because of #4568. I just added a note to that issue because it really needs some attention/thought, rather than dragging on for years.\r\n\r\nIt's not just across modules. Scripts/functions set `$errorActionPreference` locally.",
    "created_at": "2019-04-16T17:24:18Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-483767669",
    "id": 483767669,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4Mzc2NzY2OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/483767669/reactions"
    },
    "updated_at": "2019-04-16T17:24:18Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/483767669",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2148248?v=4",
      "events_url": "https://api.github.com/users/lzybkr/events{/privacy}",
      "followers_url": "https://api.github.com/users/lzybkr/followers",
      "following_url": "https://api.github.com/users/lzybkr/following{/other_user}",
      "gists_url": "https://api.github.com/users/lzybkr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lzybkr",
      "id": 2148248,
      "login": "lzybkr",
      "node_id": "MDQ6VXNlcjIxNDgyNDg=",
      "organizations_url": "https://api.github.com/users/lzybkr/orgs",
      "received_events_url": "https://api.github.com/users/lzybkr/received_events",
      "repos_url": "https://api.github.com/users/lzybkr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lzybkr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lzybkr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lzybkr"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@PowerShell/powershell-committee reviewed this again.  We believe that `Break` is similar to `Inquire` and thus acceptable for handling terminating and non-terminating errors.  If there was a formal proposal for how this would be in `Set-PSBreakPoint`, we would review it, but we also don't believe there is an issue with `Break` action co-existing with `Set-PSBreakPoint`.  We discussed relationship with [`-OnError {}`](https://github.com/PowerShell/PowerShell/issues/6010) and the two makes sense to co-exist as `Break` is mostly for interactive use while `-OnError` would be for automation.",
    "created_at": "2019-04-22T19:57:10Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-485531627",
    "id": 485531627,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NTUzMTYyNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/485531627/reactions"
    },
    "updated_at": "2019-04-22T19:57:10Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/485531627",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Thanks @SteveL-MSFT.\r\n\r\nAlso FYI for anyone testing this manually, I recently ran into one minor issue that I'm still trying to work out. When I use a terminating error in a function inside of try/catch(throw) block and invoke that function with `-ErrorAction Break`, the debugger shows the current line as the throw statement inside of the catch instead of as the line where the error actually occurs. I think I know how to resolve that one properly, but I'm still working on it.",
    "created_at": "2019-04-23T12:38:21Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-485784947",
    "id": 485784947,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NTc4NDk0Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/485784947/reactions"
    },
    "updated_at": "2019-04-23T12:38:21Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/485784947",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "The bug I ran into (breaking on error thrown from within a try/catch statement) is fixed, and I resolved a similar bug with traps that is also fixed. I feel this is solid now, but since it needs to be manually tested I'm really happy to have other eyes on it to make sure their experience is the same.\r\n\r\nHere are some of the more recent test functions I've been running (plus additional permutations and combinations of them):\r\n\r\n```PowerShell\r\n# Testing without try/catches or trap\r\nfunction test-1 {\r\n    [cmdletbinding()]\r\n    param()\r\n    gps -id 12345678\r\n    1/0\r\n    'Hello' # This will run\r\n}\r\n\r\n# Testing with nested try/catches and rethrow\r\nfunction test-2 {\r\n    [cmdletbinding()]\r\n    param()\r\n    try {\r\n        try {\r\n            gps -id 12345678\r\n            1/0\r\n            'Hello' # This should never run\r\n        } catch {\r\n            throw\r\n        }\r\n    } catch {\r\n        throw $_\r\n    }\r\n}\r\n\r\n# Testing with trap\r\nfunction test-3 {\r\n    [cmdletbinding()]\r\n    param()\r\n    trap {\r\n        throw $_\r\n    }\r\n    gps -id 12345678\r\n    1/0\r\n    'Hello' # This should never run\r\n}\r\n\r\n# Testing with trap and try/catch\r\nfunction test-4 {\r\n    [cmdletbinding()]\r\n    param()\r\n    trap {\r\n        throw $_\r\n    }\r\n    try {\r\n        gps -id 12345678\r\n        1/0\r\n        'Hello' # This should never run\r\n    } catch {\r\n        throw\r\n    }\r\n}\r\n\r\n# Testing with trap and break\r\nfunction test-5 {\r\n    [cmdletbinding()]\r\n    param()\r\n    trap {\r\n        break\r\n    }\r\n    gps -id 12345678\r\n    1/0\r\n    'Hello' # This should never run\r\n}\r\n```\r\n\r\nIf you run any of those with `-ea break`, with the latest update they work exactly as I expect them to.",
    "created_at": "2019-04-26T18:09:51Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-487150324",
    "id": 487150324,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NzE1MDMyNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/487150324/reactions"
    },
    "updated_at": "2019-04-26T18:18:45Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/487150324",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "FYI, working on fixes for the Pester tests that fail.",
    "created_at": "2019-04-26T20:47:18Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-487196326",
    "id": 487196326,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NzE5NjMyNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/487196326/reactions"
    },
    "updated_at": "2019-04-26T20:47:18Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/487196326",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "To fix the broken Pester tests and maintain performance in the `ExceptionHandlingOps.CheckActionPreference` static method, I needed to refactor some of the logic used to check if an `ActionPreference` variable value is `Ignore`, and as a result of that refactoring I fixed one of the issues identified in #4348.\r\n\r\nPrior to this change, if you had any `ActionPreference` variable (e.g. ErrorActionPreference, DebugPreference, etc.) that was not of type `ActionPreference`, you could use a string value of `'Ignore'` and avoid the check that tries unsuccessfully to prevent that. With this change, because I broke some logic up into new methods, the check now picks up on `ActionPreference` variable values of `'Ignore'` (e.g. string values) as well.\r\n\r\n**NOTE:** The fix I just described in the previous paragraph could be seen as a breaking change for any users who are setting `$ErrorActionPreference` (or any of the other preference variables) with a string value of `'Ignore'` (see that linked bug for details). IMHO, the right solution here is to just resolve #4348 by removing the `Ignore` checks entirely and leave that to a linter, logging a bug for the PSSA team to add a rule for that. If you don't want that as a solution, I'll have to undo a small part of what I just did (but the code will be messier as a result).",
    "created_at": "2019-04-27T01:30:26Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-487243807",
    "id": 487243807,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NzI0MzgwNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/487243807/reactions"
    },
    "updated_at": "2019-04-27T01:31:00Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/487243807",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "And...case in point: the new Pester test failures fail because the `./test/powershell/Modules/Microsoft.PowerShell.Management/Test-Connection.Tests.ps1` file assigns a value of `'Ignore'` to the `$InformationPreference` variable. 😆\r\n\r\nThat's more argument for what was proposed in #4348, I guess, which I could fix on a separate PR, or I could just fix it here (my preference) since it impacts this PR now.",
    "created_at": "2019-04-27T01:46:21Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-487244860",
    "id": 487244860,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NzI0NDg2MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/487244860/reactions"
    },
    "updated_at": "2019-04-27T01:47:05Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/487244860",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "FYI, the only work pending on this PR is a committee decision on #4348. That decision is required because this PR currently breaks a Pester test because of that issue (see #4348 for details on what should change). Once the committee agrees (I'm optimistic) with the changes proposed in #4348, I would like to include them as part of this PR (since it's just yanking code out that shouldn't be there). Those changes will fix the Pester test issue, and then this PR can be merged once and for all (assuming the other manual tests by PS Team members pass).",
    "created_at": "2019-05-07T14:32:22Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-490105406",
    "id": 490105406,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MDEwNTQwNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/490105406/reactions"
    },
    "updated_at": "2019-05-07T14:32:22Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/490105406",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Here's an additional test I thought to check earlier today that works:\r\n\r\n```PowerShell\r\nfunction Test-DBHidden {\r\n    [System.Diagnostics.DebuggerHidden()]\r\n    [CmdletBinding()]\r\n    param()\r\n    1/0 # We shouldn't be able to break here with -ErrorAction Break\r\n}\r\nTest-DBHidden -ErrorAction Break\r\n```",
    "created_at": "2019-05-09T01:27:01Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-490708504",
    "id": 490708504,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MDcwODUwNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/490708504/reactions"
    },
    "updated_at": "2019-05-09T01:27:01Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/490708504",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "Reassign this PR to @TravisEz13 as I will be OOF for a few days.",
    "created_at": "2019-05-15T02:43:41Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-492482163",
    "id": 492482163,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MjQ4MjE2Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/492482163/reactions"
    },
    "updated_at": "2019-05-15T02:43:59Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/492482163",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@KirkMunro, your last commit had 3 failures in `PowerShell-CI-windows`\r\nTests for (error, warning, etc) action preference.ErrorAction = Suspend does not work on functions\r\n```powershell\r\nExpected an exception, with FullyQualifiedErrorId 'ParameterBindingFailed,MyHelperFunction' to be thrown, but the FullyQualifiedErrorId was 'CannotConvertArgumentNoMessage,MyHelperFunction'. from D:\\a\\1\\s\\test\\powershell\\Language\\Scripting\\ActionPreference.Tests.ps1:86 char:45\r\n    +             { MyHelperFunction -ErrorAction Suspend } | Should -Throw ...\r\n    +                                             ~~~~~~~\r\nat <ScriptBlock>, D:\\a\\1\\s\\test\\powershell\\Language\\Scripting\\ActionPreference.Tests.ps1: line 86\r\n86:             { MyHelperFunction -ErrorAction Suspend } | Should -Throw -ErrorId \"ParameterBindingFailed,MyHelperFunction\"\r\n```\r\nTests for (error, warning, etc) action preference.ErrorAction = Suspend does not work on cmdlets\r\n```powershell\r\nExpected an exception, with FullyQualifiedErrorId 'ParameterBindingFailed,Microsoft.PowerShell.Commands.GetProcessCommand' to be thrown, but the FullyQualifiedErrorId was 'CannotConvertArgumentNoMessage,Microsoft.PowerShell.Commands.GetProcessCommand'. from D:\\a\\1\\s\\test\\powershell\\Language\\Scripting\\ActionPreference.Tests.ps1:90 char:40\r\n    +             { Get-Process -ErrorAction Suspend } | Should -Throw -Err ...\r\n    +                                        ~~~~~~~\r\nat <ScriptBlock>, D:\\a\\1\\s\\test\\powershell\\Language\\Scripting\\ActionPreference.Tests.ps1: line 90\r\n90:             { Get-Process -ErrorAction Suspend } | Should -Throw -ErrorId \"ParameterBindingFailed,Microsoft.PowerShell.Commands.GetProcessCommand\"\r\n```\r\nTests for (error, warning, etc) action preference.WarningAction = Suspend does not work\r\n```powershell\r\nExpected an exception, with FullyQualifiedErrorId 'ParameterBindingFailed,Microsoft.PowerShell.Commands.GetProcessCommand' to be thrown, but the FullyQualifiedErrorId was 'CannotConvertArgumentNoMessage,Microsoft.PowerShell.Commands.GetProcessCommand'. from D:\\a\\1\\s\\test\\powershell\\Language\\Scripting\\ActionPreference.Tests.ps1:94 char:42\r\n    +             { Get-Process -WarningAction Suspend } | Should -Throw -E ...\r\n    +                                          ~~~~~~~\r\nat <ScriptBlock>, D:\\a\\1\\s\\test\\powershell\\Language\\Scripting\\ActionPreference.Tests.ps1: line 94\r\n94:             { Get-Process -WarningAction Suspend } | Should -Throw -ErrorId \"ParameterBindingFailed,Microsoft.PowerShell.Commands.GetProcessCommand\"\r\n```\r\n",
    "created_at": "2019-05-16T12:56:17Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-493055965",
    "id": 493055965,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MzA1NTk2NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/493055965/reactions"
    },
    "updated_at": "2019-05-17T00:07:57Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/493055965",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/47263765?v=4",
      "events_url": "https://api.github.com/users/PoshChan/events{/privacy}",
      "followers_url": "https://api.github.com/users/PoshChan/followers",
      "following_url": "https://api.github.com/users/PoshChan/following{/other_user}",
      "gists_url": "https://api.github.com/users/PoshChan/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/PoshChan",
      "id": 47263765,
      "login": "PoshChan",
      "node_id": "MDQ6VXNlcjQ3MjYzNzY1",
      "organizations_url": "https://api.github.com/users/PoshChan/orgs",
      "received_events_url": "https://api.github.com/users/PoshChan/received_events",
      "repos_url": "https://api.github.com/users/PoshChan/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/PoshChan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PoshChan/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/PoshChan"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@KirkMunro, your last commit had 3 failures in `PowerShell-CI-macos`\r\nTests for (error, warning, etc) action preference.ErrorAction = Suspend does not work on functions\r\n```powershell\r\nExpected an exception, with FullyQualifiedErrorId 'ParameterBindingFailed,MyHelperFunction' to be thrown, but the FullyQualifiedErrorId was 'CannotConvertArgumentNoMessage,MyHelperFunction'. from /Users/vsts/agent/2.150.3/work/1/s/test/powershell/Language/Scripting/ActionPreference.Tests.ps1:86 char:45\r\n    +             { MyHelperFunction -ErrorAction Suspend } | Should -Throw ...\r\n    +                                             ~~~~~~~\r\nat <ScriptBlock>, /Users/vsts/agent/2.150.3/work/1/s/test/powershell/Language/Scripting/ActionPreference.Tests.ps1: line 86\r\n86:             { MyHelperFunction -ErrorAction Suspend } | Should -Throw -ErrorId \"ParameterBindingFailed,MyHelperFunction\"\r\n```\r\nTests for (error, warning, etc) action preference.ErrorAction = Suspend does not work on cmdlets\r\n```powershell\r\nExpected an exception, with FullyQualifiedErrorId 'ParameterBindingFailed,Microsoft.PowerShell.Commands.GetProcessCommand' to be thrown, but the FullyQualifiedErrorId was 'CannotConvertArgumentNoMessage,Microsoft.PowerShell.Commands.GetProcessCommand'. from /Users/vsts/agent/2.150.3/work/1/s/test/powershell/Language/Scripting/ActionPreference.Tests.ps1:90 char:40\r\n    +             { Get-Process -ErrorAction Suspend } | Should -Throw -Err ...\r\n    +                                        ~~~~~~~\r\nat <ScriptBlock>, /Users/vsts/agent/2.150.3/work/1/s/test/powershell/Language/Scripting/ActionPreference.Tests.ps1: line 90\r\n90:             { Get-Process -ErrorAction Suspend } | Should -Throw -ErrorId \"ParameterBindingFailed,Microsoft.PowerShell.Commands.GetProcessCommand\"\r\n```\r\nTests for (error, warning, etc) action preference.WarningAction = Suspend does not work\r\n```powershell\r\nExpected an exception, with FullyQualifiedErrorId 'ParameterBindingFailed,Microsoft.PowerShell.Commands.GetProcessCommand' to be thrown, but the FullyQualifiedErrorId was 'CannotConvertArgumentNoMessage,Microsoft.PowerShell.Commands.GetProcessCommand'. from /Users/vsts/agent/2.150.3/work/1/s/test/powershell/Language/Scripting/ActionPreference.Tests.ps1:94 char:42\r\n    +             { Get-Process -WarningAction Suspend } | Should -Throw -E ...\r\n    +                                          ~~~~~~~\r\nat <ScriptBlock>, /Users/vsts/agent/2.150.3/work/1/s/test/powershell/Language/Scripting/ActionPreference.Tests.ps1: line 94\r\n94:             { Get-Process -WarningAction Suspend } | Should -Throw -ErrorId \"ParameterBindingFailed,Microsoft.PowerShell.Commands.GetProcessCommand\"\r\n```\r\n",
    "created_at": "2019-05-16T12:56:30Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-493056035",
    "id": 493056035,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MzA1NjAzNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/493056035/reactions"
    },
    "updated_at": "2019-05-17T00:08:03Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/493056035",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/47263765?v=4",
      "events_url": "https://api.github.com/users/PoshChan/events{/privacy}",
      "followers_url": "https://api.github.com/users/PoshChan/followers",
      "following_url": "https://api.github.com/users/PoshChan/following{/other_user}",
      "gists_url": "https://api.github.com/users/PoshChan/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/PoshChan",
      "id": 47263765,
      "login": "PoshChan",
      "node_id": "MDQ6VXNlcjQ3MjYzNzY1",
      "organizations_url": "https://api.github.com/users/PoshChan/orgs",
      "received_events_url": "https://api.github.com/users/PoshChan/received_events",
      "repos_url": "https://api.github.com/users/PoshChan/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/PoshChan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PoshChan/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/PoshChan"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@KirkMunro, your last commit had 3 failures in `PowerShell-CI-linux`\r\nTests for (error, warning, etc) action preference.ErrorAction = Suspend does not work on functions\r\n```powershell\r\nExpected an exception, with FullyQualifiedErrorId 'ParameterBindingFailed,MyHelperFunction' to be thrown, but the FullyQualifiedErrorId was 'CannotConvertArgumentNoMessage,MyHelperFunction'. from /home/vsts/work/1/s/test/powershell/Language/Scripting/ActionPreference.Tests.ps1:86 char:45\r\n    +             { MyHelperFunction -ErrorAction Suspend } | Should -Throw ...\r\n    +                                             ~~~~~~~\r\nat <ScriptBlock>, /home/vsts/work/1/s/test/powershell/Language/Scripting/ActionPreference.Tests.ps1: line 86\r\n86:             { MyHelperFunction -ErrorAction Suspend } | Should -Throw -ErrorId \"ParameterBindingFailed,MyHelperFunction\"\r\n```\r\nTests for (error, warning, etc) action preference.ErrorAction = Suspend does not work on cmdlets\r\n```powershell\r\nExpected an exception, with FullyQualifiedErrorId 'ParameterBindingFailed,Microsoft.PowerShell.Commands.GetProcessCommand' to be thrown, but the FullyQualifiedErrorId was 'CannotConvertArgumentNoMessage,Microsoft.PowerShell.Commands.GetProcessCommand'. from /home/vsts/work/1/s/test/powershell/Language/Scripting/ActionPreference.Tests.ps1:90 char:40\r\n    +             { Get-Process -ErrorAction Suspend } | Should -Throw -Err ...\r\n    +                                        ~~~~~~~\r\nat <ScriptBlock>, /home/vsts/work/1/s/test/powershell/Language/Scripting/ActionPreference.Tests.ps1: line 90\r\n90:             { Get-Process -ErrorAction Suspend } | Should -Throw -ErrorId \"ParameterBindingFailed,Microsoft.PowerShell.Commands.GetProcessCommand\"\r\n```\r\nTests for (error, warning, etc) action preference.WarningAction = Suspend does not work\r\n```powershell\r\nExpected an exception, with FullyQualifiedErrorId 'ParameterBindingFailed,Microsoft.PowerShell.Commands.GetProcessCommand' to be thrown, but the FullyQualifiedErrorId was 'CannotConvertArgumentNoMessage,Microsoft.PowerShell.Commands.GetProcessCommand'. from /home/vsts/work/1/s/test/powershell/Language/Scripting/ActionPreference.Tests.ps1:94 char:42\r\n    +             { Get-Process -WarningAction Suspend } | Should -Throw -E ...\r\n    +                                          ~~~~~~~\r\nat <ScriptBlock>, /home/vsts/work/1/s/test/powershell/Language/Scripting/ActionPreference.Tests.ps1: line 94\r\n94:             { Get-Process -WarningAction Suspend } | Should -Throw -ErrorId \"ParameterBindingFailed,Microsoft.PowerShell.Commands.GetProcessCommand\"\r\n```\r\n",
    "created_at": "2019-05-16T12:56:55Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-493056178",
    "id": 493056178,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MzA1NjE3OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/493056178/reactions"
    },
    "updated_at": "2019-05-17T00:08:09Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/493056178",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/47263765?v=4",
      "events_url": "https://api.github.com/users/PoshChan/events{/privacy}",
      "followers_url": "https://api.github.com/users/PoshChan/followers",
      "following_url": "https://api.github.com/users/PoshChan/following{/other_user}",
      "gists_url": "https://api.github.com/users/PoshChan/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/PoshChan",
      "id": 47263765,
      "login": "PoshChan",
      "node_id": "MDQ6VXNlcjQ3MjYzNzY1",
      "organizations_url": "https://api.github.com/users/PoshChan/orgs",
      "received_events_url": "https://api.github.com/users/PoshChan/received_events",
      "repos_url": "https://api.github.com/users/PoshChan/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/PoshChan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PoshChan/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/PoshChan"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@daxian-dbw How is the manual testing going on this PR? Are there additional reviews outstanding? I'd love to see the review process finalized and this merged so that I could work on related changes/fixes in other separate PRs. I keep periodically merging the latest from master into this PR (just did this again) so that it remains ready for merge.",
    "created_at": "2019-05-24T21:03:10Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-495787314",
    "id": 495787314,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NTc4NzMxNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/495787314/reactions"
    },
    "updated_at": "2019-05-24T21:03:10Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/495787314",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "I think we are waiting on this testing:  https://github.com/PowerShell/PowerShell/pull/8205#pullrequestreview-173223481\r\n\r\nI don't think we have anyone signed up to do this testing.",
    "created_at": "2019-05-28T17:43:26Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-496618042",
    "id": 496618042,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NjYxODA0Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/496618042/reactions"
    },
    "updated_at": "2019-05-28T17:43:26Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/496618042",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
      "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
      "followers_url": "https://api.github.com/users/TravisEz13/followers",
      "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
      "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/TravisEz13",
      "id": 10873629,
      "login": "TravisEz13",
      "node_id": "MDQ6VXNlcjEwODczNjI5",
      "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
      "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
      "repos_url": "https://api.github.com/users/TravisEz13/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/TravisEz13"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Thanks @TravisEz13. I know @daxian-dbw requested @JamesWTruher do a review of this PR [a while back](#issuecomment-481809344), and was curious if he made any progress on that.",
    "created_at": "2019-05-28T18:57:13Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-496644820",
    "id": 496644820,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NjY0NDgyMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/496644820/reactions"
    },
    "updated_at": "2019-05-28T18:57:25Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/496644820",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Status update: I'm trying to get another PR done related to some debugger work that Tyler did, and I'll be switching back to this PR as soon as I get that other work out of the way. I thought that would happen today until I ran into a bug in breakpoint management that got in my way.",
    "created_at": "2019-07-16T01:05:03Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-511623962",
    "id": 511623962,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMTYyMzk2Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/511623962/reactions"
    },
    "updated_at": "2019-07-16T01:05:03Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/511623962",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Update: I'm in the process of breaking this PR up into more manageable chunks, so that this is focused on the specific issue it was built to address. This will be WIP until I can pull it apart properly and get different parts of it filed in other PRs.",
    "created_at": "2019-07-29T15:34:19Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-516042766",
    "id": 516042766,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjA0Mjc2Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/516042766/reactions"
    },
    "updated_at": "2019-07-29T15:34:19Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/516042766",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Thanks @PaulHigin. It can obviously be made experimental if necessary. Some clarification on what should/should not be experimental would be helpful.\r\n\r\nAlso FYI, the only outstanding item I have on this at the moment is the Pester test failure. I added some new Pester tests today that check the extent when PowerShell enters the debugger in response to an `ActionPreference.Break` for an error or other stream message. Locally, the tests all run without issue. In our ADO CI build, all of the new tests except for the one where I use `-ErrorAction Break` to enter the debugger on a non-terminating error fails because the statement extent I expect is different. I'm thinking there may be something going on when these tests are run in a background, non-interactive process, so that's what I'm going to check next.",
    "created_at": "2019-08-06T00:09:45Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-518446071",
    "id": 518446071,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODQ0NjA3MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/518446071/reactions"
    },
    "updated_at": "2019-08-06T00:09:45Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/518446071",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "I'm still facing the same errors in all ADO CI builds that I cannot reproduce locally. Can someone please share details on how the Pester tests are run? I believe you use `Start-PSPester` in the `build.psm1` module, but that information isn't enough, because that works fine for me. What relevant details about the environment can you share? I need to be able to run the tests locally the same way that they are run through ADO CI so that I can reproduce the issue with one test that's showing up and fix it.",
    "created_at": "2019-08-06T00:35:24Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-518450677",
    "id": 518450677,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODQ1MDY3Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/518450677/reactions"
    },
    "updated_at": "2019-08-06T00:35:24Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/518450677",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> I'm still facing the same errors in all ADO CI builds that I cannot reproduce locally.\r\n\r\nPerhaps previous tests do not clean environment.",
    "created_at": "2019-08-06T03:19:07Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-518481360",
    "id": 518481360,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODQ4MTM2MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/518481360/reactions"
    },
    "updated_at": "2019-08-06T03:19:07Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/518481360",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@iSazonov Maybe, but I don't think that's it. I'm still investigating though. What seems to be happening is a non-terminating error is being picked up and thrown as a terminating error. I can't be sure of that without reproducing it/debugging it though. I wonder if the version of Pester that is being used plays a factor here.",
    "created_at": "2019-08-06T17:07:01Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-518759061",
    "id": 518759061,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODc1OTA2MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/518759061/reactions"
    },
    "updated_at": "2019-08-06T17:07:01Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/518759061",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "The Pester test issue is resolved. Turns out that using `$Host.Runspace` in a call to `$ps = [powershell]::Create($Host.Runspace)` as a way to prove a script cannot be invoked async in a runspace that is busy causes some state to change in that runspace, which later invalidates one of my new tests.\r\n\r\nFYI @daxian-dbw: The test I had to change to get this working was one you reviewed for me a while back when we exposed `PowerShell.InvokeAsync`, where you requested I simplify that test and use `$Host.Runspace` instead of a newly created runspace. That appears to be a bad idea for the test harness because it changes state on something in the Runspace such that the flow when you step through the debugger using `-ErrorAction Break` is different, so I've changed it back to using a newly created runspace instead.\r\n\r\nI now think using `$Host.Runspace` with runspace-based tests in our test harness is a bad idea, and should be avoided.",
    "created_at": "2019-08-06T20:34:24Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-518833103",
    "id": 518833103,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODgzMzEwMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/518833103/reactions"
    },
    "updated_at": "2019-08-06T20:34:24Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/518833103",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Unless required to do so, I don't plan to address the Codacy issues. They identify things I would care about in a production PowerShell script, but fixing them in Pester tests would just add bloat.",
    "created_at": "2019-08-06T21:30:36Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-518851654",
    "id": 518851654,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODg1MTY1NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/518851654/reactions"
    },
    "updated_at": "2019-08-06T21:30:36Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/518851654",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "Hmm, that's not expected. Invoking on a busy Runspace shouldn't affect the Runspace in any way ... \r\n\r\n> the flow when you step through the debugger using -ErrorAction Break is different\r\n\r\nI'm curious about how the flow would be different. Can you please provide simpler repro of the issue?",
    "created_at": "2019-08-06T22:12:57Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-518863560",
    "id": 518863560,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODg2MzU2MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/518863560/reactions"
    },
    "updated_at": "2019-08-06T22:12:57Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/518863560",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@daxian-dbw I had intended to do that later, because I didn't like just changing that test to make this PR pass, but I didn't want an unrelated issue to get in the way of this being reviewed/merged either. At any rate, I dug through it this morning, and it turns out the unexpected issue that was coming up is that an error cannot be written to an internal buffer because the buffer is closed. That is unexpected behavior, and a bug.\r\n\r\nHere's a simplified script that reproduces the issue on PowerShell 6.2.1+:\r\n\r\n```powershell\r\n# Note: This uses the call operator because the commands must all be run in\r\n# one shot to reproduce the issue.\r\n& {\r\n    $ps = [powershell]::Create($host.Runspace)\r\n    try {\r\n        $ps.AddScript('Get-Date').Invoke() > $null\r\n    } finally {\r\n        $ps.Dispose()\r\n    }\r\n\r\n    [ScriptBlock]::Create({Write-Error 'An error'}).Invoke() > $null\r\n}\r\n```\r\n\r\nThat script produces the following output:\r\n\r\n```none\r\nException calling \"Invoke\" with \"0\" argument(s): \"The pipeline was not run because a pipeline is already running. Pipelines cannot be run concurrently.\"\r\nAt C:\\Users\\kirka\\source\\repos\\Test-RunspaceIssue.ps1:3 char:5\r\n+     $ps.AddScript('Get-Date').Invoke() > $null\r\n+     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : NotSpecified: (:) [], MethodInvocationException\r\n+ FullyQualifiedErrorId : PSInvalidOperationException\r\n\r\nException calling \"Invoke\" with \"0\" argument(s): \"Objects cannot be added to a closed buffer. Make sure the buffer is open for Add and Insert operations to succeed.\"\r\nAt C:\\Users\\kirka\\source\\repos\\Test-RunspaceIssue.ps1:8 char:1\r\n+ [ScriptBlock]::Create({Write-Error 'An error'}).Invoke() > $null\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : NotSpecified: (:) [], MethodInvocationException\r\n+ FullyQualifiedErrorId : CmdletInvocationException\r\n```\r\n\r\nThe first exception is expected. The second is not.\r\n\r\nNote that it doesn't matter what you try to invoke. You can even remove `Get-Date` and just pass in an empty string, and you'll still see the same behavior. Somewhere at least one of the data stream buffers is being closed when it shouldn't be.\r\n\r\nAlso note that this repros on Windows PowerShell 5.1 using a slightly modified script (PowerShell didn't have a Create overload that accepted a runspace in 5.1), so it's not a regression. Just an old issue that hadn't come up before.",
    "created_at": "2019-08-07T14:50:10Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-519131598",
    "id": 519131598,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxOTEzMTU5OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/519131598/reactions"
    },
    "updated_at": "2019-08-07T18:19:21Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/519131598",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@KirkMunro \r\nI am unable to repro this on 6.20, 6.22, or Windows PowerShell 5.1, so it appears to be only in your current changes.  Buffers are only closed when a pipeline object is disposed so I am guessing your changes are writing to a stale pipeline.  But you should be able to debug this and determine the cause.  This should definitely be fixed before check in.",
    "created_at": "2019-08-07T16:09:25Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-519164736",
    "id": 519164736,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxOTE2NDczNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/519164736/reactions"
    },
    "updated_at": "2019-08-07T16:09:25Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/519164736",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/14019529?v=4",
      "events_url": "https://api.github.com/users/PaulHigin/events{/privacy}",
      "followers_url": "https://api.github.com/users/PaulHigin/followers",
      "following_url": "https://api.github.com/users/PaulHigin/following{/other_user}",
      "gists_url": "https://api.github.com/users/PaulHigin/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/PaulHigin",
      "id": 14019529,
      "login": "PaulHigin",
      "node_id": "MDQ6VXNlcjE0MDE5NTI5",
      "organizations_url": "https://api.github.com/users/PaulHigin/orgs",
      "received_events_url": "https://api.github.com/users/PaulHigin/received_events",
      "repos_url": "https://api.github.com/users/PaulHigin/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/PaulHigin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PaulHigin/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/PaulHigin"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@PaulHigin That repro works on PowerShell Core 6.2.1 and Windows PowerShell 5.1 (slightly modified since `[powershell]::Create()` does not accept a runspace in that version) on my local system. I specifically created that repro external to the current changes I have been working on to validate that it is not related to this PR. Since it repros in both cases using released versions of PowerShell, this issue cannot be related to my current changes. I agree it should be fixed, but I disagree that it is my responsibility to do so as part of this PR.\r\n\r\nEvidence for Windows PowerShell 5.1:\r\n\r\n![image](https://user-images.githubusercontent.com/3515485/62639568-2dc7d200-b916-11e9-8cd4-055b46732794.png)\r\n\r\nEvidence for PowerShell 6.2.1:\r\n\r\n![image](https://user-images.githubusercontent.com/3515485/62639631-4d5efa80-b916-11e9-8c29-b1324437280e.png)\r\n",
    "created_at": "2019-08-07T16:21:49Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-519169481",
    "id": 519169481,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxOTE2OTQ4MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/519169481/reactions"
    },
    "updated_at": "2019-08-07T16:21:49Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/519169481",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@KirkMunro \r\nThat's weird as I still don't repro it, and I tried on two separate machines.\r\n\r\n```powershell\r\n$ps = [powershell]::Create()\r\n$ps.Runspace = $host.Runspace\r\ntry { $ps.AddScript('Get-Date').Invoke() > $null } finally { $ps.Dispose() }\r\n[scriptblock]::Create({Write-Error 'An error'}).Invoke() > $null\r\n```\r\nIt might be a timing thing.",
    "created_at": "2019-08-07T17:01:09Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-519183944",
    "id": 519183944,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxOTE4Mzk0NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/519183944/reactions"
    },
    "updated_at": "2019-08-07T17:01:09Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/519183944",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/14019529?v=4",
      "events_url": "https://api.github.com/users/PaulHigin/events{/privacy}",
      "followers_url": "https://api.github.com/users/PaulHigin/followers",
      "following_url": "https://api.github.com/users/PaulHigin/following{/other_user}",
      "gists_url": "https://api.github.com/users/PaulHigin/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/PaulHigin",
      "id": 14019529,
      "login": "PaulHigin",
      "node_id": "MDQ6VXNlcjE0MDE5NTI5",
      "organizations_url": "https://api.github.com/users/PaulHigin/orgs",
      "received_events_url": "https://api.github.com/users/PaulHigin/received_events",
      "repos_url": "https://api.github.com/users/PaulHigin/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/PaulHigin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PaulHigin/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/PaulHigin"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@PaulHigin  It is tricky :-)\r\nIf insert the test code without CR after last $null and then press Enter manually - no second error.\r\nBut if the test code already has CR after last $null and all commands is executed at once - we will see second error.",
    "created_at": "2019-08-07T17:26:17Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-519193233",
    "id": 519193233,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxOTE5MzIzMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/519193233/reactions"
    },
    "updated_at": "2019-08-07T17:26:17Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/519193233",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Thanks @iSazonov. I'll update the repro to use the call operator so that the commands can't be separated.",
    "created_at": "2019-08-07T18:16:54Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-519212093",
    "id": 519212093,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxOTIxMjA5Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/519212093/reactions"
    },
    "updated_at": "2019-08-07T18:16:54Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/519212093",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@PowerShell/powershell-committee reviewed this.  By default, our expectation is that new features are put behind an Experimental Flag which includes this one.",
    "created_at": "2019-08-07T22:31:07Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-519292350",
    "id": 519292350,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxOTI5MjM1MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/519292350/reactions"
    },
    "updated_at": "2019-08-07T22:31:07Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/519292350",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@SteveL-MSFT I took your recommendation to make the functionality in this PR experimental very seriously, and did a bunch of research to see how I could do that. Based on the results of my research, I have come to the conclusion that it is unreasonable to suggest that PRs that make changes inside of the engine, with no new cmdlets and no new parameters, should use an experimental flag. If you or one of the PS Team developers reviews this code, I'm confident that you'll agree with me.\r\n\r\nThis PR:\r\n- adds a value to an existing enumeration\r\n- updates plumbing within the engine to support that enumerated value\r\n- fixes `Wait-Debugger` so that it properly stops on itself\r\n- fixes the debugger so that the value of `$?` is preserved through a debugging session\r\n- adds appropriate tests to make sure this all works properly\r\n\r\n_I don't see how I can wrap the changes in this PR in an experimental flag without taking existing functionality that is in the PowerShell runtime and moving it into an experimental state._\r\n\r\nI can't hide the enumerated value behind an experimental flag, because that's not supported, and even if I could hide the enumeration, there are other plumbing changes that would remain in place in many locations, making it much less experimental.\r\n\r\nIn my opinion, experimental can only realistically be used for net new functionality, such as when you add a new cmdlet, add a parameter to a cmdlet, etc. It cannot be used for updates to existing code that are internal to the engine, the parser, the compiler, the debugger, etc.\r\n\r\nWithout any new public interfaces that support the experimental feature to work with in this PR, I just don't see how that can be reasonably made experimental without a ton of extra work that would include:\r\n- breaking out logic into multiple code paths all over the place\r\n- creating a maintenance nightmare because any bugs that are fixed in code that is broken out into multiple paths would have to be debugged, fixed, and tested in all paths\r\n- increasing risk from fragmented code and additional error prone work that would be required to later remove code paths that are old when experimental features come out of their experimental state\r\n\r\nGiven this, my current recommendation is to review the PR that is feature complete as it is, and merge it in as soon as possible so that it is in the next preview build. Then call it out to the community and specifically request they kick the tires on it.\r\n",
    "created_at": "2019-08-09T01:33:44Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-519744453",
    "id": 519744453,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxOTc0NDQ1Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/519744453/reactions"
    },
    "updated_at": "2019-08-09T16:05:11Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/519744453",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "FYI, I logged the separate issue I ran into as #10335.",
    "created_at": "2019-08-09T16:16:02Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-519978226",
    "id": 519978226,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxOTk3ODIyNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/519978226/reactions"
    },
    "updated_at": "2019-08-09T16:16:02Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/519978226",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "The CodeFactor and Codacy issues that are reported are out of scope for this PR.",
    "created_at": "2019-08-09T16:35:34Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-519984072",
    "id": 519984072,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxOTk4NDA3Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/519984072/reactions"
    },
    "updated_at": "2019-08-09T16:35:34Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/519984072",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Any chance this PR can get reviewed and merged in time for the upcoming preview?\r\n\r\n[As indicated above](https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-519744453), it can't be placed behind an experimental flag, but:\r\n- the feature has been demonstrated to users and received positive feedback;\r\n- it comes with automated tests to verify that the debugger hits the exact locations it should in the scenarios that are tested;\r\n- anything that was unrelated to the original issue has been moved into separate PRs, to keep this focused on `ActionPreference.Break`, the minor fix to `Wait-Debugger` behavior (that is part of these changes, and can't be separated), and the minor fix for issue #9474.",
    "created_at": "2019-08-14T20:51:41Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-521413831",
    "id": 521413831,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMTQxMzgzMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/521413831/reactions"
    },
    "updated_at": "2019-08-14T20:51:41Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/521413831",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "+ @daxian-dbw ",
    "created_at": "2019-08-14T22:12:39Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-521439343",
    "id": 521439343,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMTQzOTM0Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/521439343/reactions"
    },
    "updated_at": "2019-08-14T22:12:39Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/521439343",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/14019529?v=4",
      "events_url": "https://api.github.com/users/PaulHigin/events{/privacy}",
      "followers_url": "https://api.github.com/users/PaulHigin/followers",
      "following_url": "https://api.github.com/users/PaulHigin/following{/other_user}",
      "gists_url": "https://api.github.com/users/PaulHigin/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/PaulHigin",
      "id": 14019529,
      "login": "PaulHigin",
      "node_id": "MDQ6VXNlcjE0MDE5NTI5",
      "organizations_url": "https://api.github.com/users/PaulHigin/orgs",
      "received_events_url": "https://api.github.com/users/PaulHigin/received_events",
      "repos_url": "https://api.github.com/users/PaulHigin/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/PaulHigin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PaulHigin/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/PaulHigin"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@daxian-dbw Not directly related to this PR being merged, I have a question about experimental features. Is the experimental part of a feature strictly defined by interface changes? For example, with this PR, it adds a new `ActionPreference` enumerated value. As you point out, we can't hide the new enumerated value today, but we could show a message indicating it is experimental if it is used in any `-*Action` common parameter, or if it is assigned to any `*Preference` variable that accepts an `ActionPreference`, being sure to check for string assignments as well as enumerated value assignments. The question I keep coming back to with such an approach is: what's the value in having that be experimental, because all that does it put some limitations on the surface, while the plumbing underneath would have been changed regardless. If 90% of a PR is simply applied in a merge and integrated into the runtime, and 10% of the PR (the user-facing interface) is marked as experimental:\r\n\r\n1. Is there value in that?\r\n2. Isn't that misleading for end users, because if the runtime changes regardless of whether they have an experimental feature enabled or not, then I don't know that's very apparent.\r\n\r\nContrast that with a new cmdlet that experimental or a new parameter/parameter set on a cmdlet that is experimental, where it is much easier to isolate the experimental code such that it doesn't do anything at all when the experimental feature is disabled.\r\n\r\nThis may be a better side-bar discussion, but it's something I find very confusing and it's the key point that makes me question the value of experimental features, when the bulk of the change is applied regardless...",
    "created_at": "2019-08-21T13:51:14Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-523466286",
    "id": 523466286,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMzQ2NjI4Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/523466286/reactions"
    },
    "updated_at": "2019-08-21T13:51:14Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/523466286",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "> Is the experimental part of a feature strictly defined by interface changes?\r\n\r\nNo, it's not. It's about the functionality/behavior before and after introducing a new feature.\r\nTechnically, putting a feature behind an experimental feature should mean that when the feature is disabled, PowerShell behaves exactly as before the feature was introduced.\r\nTake this PR as an example, yes the runtime code has been changed to support the `Break` action, but when `Break` is not used, PowerShell should behavior exactly as before this PR -- namely, the runtime code changes shouldn't caused any behavior change to the existing behaviors (no breaking changes).\r\n\r\n> 1. Is there value in that?\r\n> 2. Isn't that misleading for end users, because if the runtime changes regardless of whether they have an experimental feature enabled or not, then I don't know that's very apparent.\r\n\r\nFor changes like this PR -- mostly updating engine code that are hard to co-exist with the old engine code, I personally think it shouldn't be targeted as an experimental feature. (_if the engine code changes caused any change in existing behavior, it will be noticed too even with the feature enabled_).\r\nChanges like this should be heavily reviewed at design/implementation phase (dogfooded by reviewers), and if decide to accept, then accept directly as an official feature.\r\nI'm not saying other experimental features with less engine code changes would have a lower bar for acceptance. We always have a high bar for feature changes, but the changes like this PR should have an even higher bar.\r\n",
    "created_at": "2019-08-21T18:26:53Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-523591253",
    "id": 523591253,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMzU5MTI1Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/523591253/reactions"
    },
    "updated_at": "2019-08-21T18:26:53Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/523591253",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for that reply, @daxian-dbw, that was helpful.\r\n\r\n> Now we just need the committee's decision on the new accelerator.\r\n\r\nDoes [@SteveL-MSFT's reply here](https://github.com/PowerShell/PowerShell/pull/8205#discussion_r315471089) satisfy that need? Or does this still require being put in front of the committee again?",
    "created_at": "2019-08-21T19:08:56Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-523607479",
    "id": 523607479,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMzYwNzQ3OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/523607479/reactions"
    },
    "updated_at": "2019-08-21T19:08:56Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/523607479",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "> Does @SteveL-MSFT's reply here satisfy that need? Or does this still require being put in front of the committee again?\r\n\r\nSteve's opinion is very important for driving the committee's conclusion, but we still need the committee's approval on this. We're having a meeting this afternoon, so it should be done today :)",
    "created_at": "2019-08-21T19:19:30Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-523611220",
    "id": 523611220,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMzYxMTIyMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/523611220/reactions"
    },
    "updated_at": "2019-08-21T19:19:30Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/523611220",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@KirkMunro to help make the @PowerShell/powershell-committee meetings more efficient, we're trying to add individual opinions on items for review rather than having the discussion entirely within the meeting.  So don't be surprised if you start seeing more of this.",
    "created_at": "2019-08-21T21:52:34Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-523663988",
    "id": 523663988,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMzY2Mzk4OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/523663988/reactions"
    },
    "updated_at": "2019-08-21T21:52:34Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/523663988",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@PowerShell/powershell-committee reviewed this and do not support adding the type accelerator as `[actionp<tab>` is a similar experience to the accelerator to resolve the tab-complete concern.  In general, expectation is that type accelerators should exist for types that are highly used which isn't the case for this pref variable.",
    "created_at": "2019-08-21T22:21:49Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-523672122",
    "id": 523672122,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMzY3MjEyMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/523672122/reactions"
    },
    "updated_at": "2019-08-21T22:21:49Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/523672122",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Just to add a little more context: we don't want to open the doors for more low-use type accelerators in the future. And in my opinion, \"[actionpreference]\" is just as difficult to get right sans tab as \"SilentlyContinue\". I'm sure there's more out there that I'm not aware of, but I'm also not at all a fan of an all-lowercase, two-word accelerator like that. Accelerators like \"[string]\" and \"[int]\" fit a lot better with what folks are used to seeing from a non-PS type perspective. ",
    "created_at": "2019-08-21T22:27:23Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-523673656",
    "id": 523673656,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMzY3MzY1Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/523673656/reactions"
    },
    "updated_at": "2019-08-21T22:27:40Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/523673656",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1255187?v=4",
      "events_url": "https://api.github.com/users/joeyaiello/events{/privacy}",
      "followers_url": "https://api.github.com/users/joeyaiello/followers",
      "following_url": "https://api.github.com/users/joeyaiello/following{/other_user}",
      "gists_url": "https://api.github.com/users/joeyaiello/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/joeyaiello",
      "id": 1255187,
      "login": "joeyaiello",
      "node_id": "MDQ6VXNlcjEyNTUxODc=",
      "organizations_url": "https://api.github.com/users/joeyaiello/orgs",
      "received_events_url": "https://api.github.com/users/joeyaiello/received_events",
      "repos_url": "https://api.github.com/users/joeyaiello/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/joeyaiello/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joeyaiello/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/joeyaiello"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> Just to add a little more context: we don't want to open the doors for more low-use type accelerators in the future. And in my opinion, \"[actionpreference]\" is just as difficult to get right sans tab as \"SilentlyContinue\". I'm sure there's more out there that I'm not aware of, but...\r\n\r\n@joeyaiello I removed the accelerator, but I disagree with the committee decision on this and will point a few things out highlighting why I disagree:\r\n\r\n1. For string enumerated values you only get tab complete when you use them within the `-*Action` parameters. You don't get tab complete when you assign a string value to one of the `$*Preference` variables, which is commonly done in scripts, and that's where typos can occur. Those typos only get caught in the global scope where those variables are strongly typed, but you never use those variables in the global scope. Those are the scenarios where I think having an accelerator adds value for the community: when you use the preference variables in scripts or functions or modules.\r\n1. I disagree that action preference variables are low use -- I've seen it used a lot, and I believe that an accelerator would get quite a bit of use in scripts if it was available.\r\n1. When it comes to strings in scripts, they all look the same. Enumerated values look different. While it is very convenient to be able to pass a string into a parameter that takes an enumerated value, IMHO it is a little _too_ convenient to be able to assign a string to a variable that is supposed to represent an enumerated value, because one string looks like another, and ideally if I'm reviewing code I really want use of `$*Preference` variables to pop out. For me, assigning those variables to the full enumerated value makes that easier, but seeing the full name seems unnecessary/overkill, hence the desire for a type accelerator here.\r\n\r\n>  I'm also not at all a fan of an all-lowercase, two-word accelerator like that.\r\n\r\nI only made it all lowercase to follow the format of other accelerators. My preference would have been for an `[ActionPreference]` accelerator, but none of the other existing accelerators that have multiple \"words\" use uppercase in their names.\r\n\r\nAll of this aside, the accelerator is out and this PR is ready for merge.",
    "created_at": "2019-08-22T02:01:46Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-523715728",
    "id": 523715728,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMzcxNTcyOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/523715728/reactions"
    },
    "updated_at": "2019-08-22T16:27:50Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/523715728",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@KirkMunro Please update the PR description.",
    "created_at": "2019-08-23T04:37:37Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-524169330",
    "id": 524169330,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNDE2OTMzMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/524169330/reactions"
    },
    "updated_at": "2019-08-23T04:37:37Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/524169330",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@iSazonov Done.",
    "created_at": "2019-08-23T12:53:37Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-524304060",
    "id": 524304060,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNDMwNDA2MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/524304060/reactions"
    },
    "updated_at": "2019-08-23T12:53:37Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/524304060",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "NONE",
    "body": ":tada:`v7.0.0-preview.4` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.0.0-preview.4)\n",
    "created_at": "2019-09-19T17:52:20Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/8205#issuecomment-533239562",
    "id": 533239562,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8205",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMzIzOTU2Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 3,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/533239562/reactions"
    },
    "updated_at": "2019-09-19T17:52:20Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/533239562",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/in/26612?v=4",
      "events_url": "https://api.github.com/users/msftbot%5Bbot%5D/events{/privacy}",
      "followers_url": "https://api.github.com/users/msftbot%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/msftbot%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/msftbot%5Bbot%5D/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/apps/msftbot",
      "id": 48340428,
      "login": "msftbot[bot]",
      "node_id": "MDM6Qm90NDgzNDA0Mjg=",
      "organizations_url": "https://api.github.com/users/msftbot%5Bbot%5D/orgs",
      "received_events_url": "https://api.github.com/users/msftbot%5Bbot%5D/received_events",
      "repos_url": "https://api.github.com/users/msftbot%5Bbot%5D/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/msftbot%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/msftbot%5Bbot%5D/subscriptions",
      "type": "Bot",
      "url": "https://api.github.com/users/msftbot%5Bbot%5D"
    }
  }
]
