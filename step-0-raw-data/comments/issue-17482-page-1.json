[
  {
    "author_association": "NONE",
    "body": "Some of the issues related to other people trying to solve this issue\r\nhttps://stackoverflow.com/questions/11973775/powershell-get-output-from-receive-job\r\nhttps://stackoverflow.com/questions/71983970/is-there-a-generic-way-to-capture-all-verbose-output-to-a-file-but-only-show-std\r\nhttps://github.com/PowerShell/PowerShell/issues/5848\r\n\r\n<blockquote><img src=\"https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded\" width=\"48\" align=\"right\"><div>Stack Overflow</div><div><strong><a href=\"https://stackoverflow.com/questions/11973775/powershell-get-output-from-receive-job\">Powershell: get output from Receive-Job</a></strong></div><div>I have a collection of jobs that are running. When they complete I use receive-job and it writes the output to the screen. I'd like to take that output and log it to a file. I don't want to tee the </div></blockquote>",
    "created_at": "2022-06-04T16:08:32Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17482#issuecomment-1146642096",
    "id": 1146642096,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17482",
    "node_id": "IC_kwDOAvT7bc5EWF6w",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1146642096/reactions"
    },
    "updated_at": "2022-06-04T16:11:13Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1146642096",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/13693159?v=4",
      "events_url": "https://api.github.com/users/o-o00o-o/events{/privacy}",
      "followers_url": "https://api.github.com/users/o-o00o-o/followers",
      "following_url": "https://api.github.com/users/o-o00o-o/following{/other_user}",
      "gists_url": "https://api.github.com/users/o-o00o-o/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/o-o00o-o",
      "id": 13693159,
      "login": "o-o00o-o",
      "node_id": "MDQ6VXNlcjEzNjkzMTU5",
      "organizations_url": "https://api.github.com/users/o-o00o-o/orgs",
      "received_events_url": "https://api.github.com/users/o-o00o-o/received_events",
      "repos_url": "https://api.github.com/users/o-o00o-o/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/o-o00o-o/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/o-o00o-o/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/o-o00o-o"
    }
  },
  {
    "author_association": "NONE",
    "body": "Receive-Job -InstanceId $private:job2.InstanceID *>&1,then tee-object\r\nIf you use ps-remote, welcome to use my packaged powershell framework.\r\n\r\nIt uses multi-process, multi-threading, runs commands remotely on win-linux node pc, gets results from standard output, and writes to sqlite database. Support time period, IP address of the node pc, query (table, list).\r\n\r\n----\r\n\r\n\r\n[kasini3000](https://gitee.com/chuanjiao10/kasini3000) site mirror:(https://github.com/kasini3000/kasini3000)   \r\nwin,linux devops automation batch script framework.(It is similar to Puppet，Ansible，pipeline) \r\nOpen source, free, cross-platform \r\nEnglish manual: https://gitee.com/chuanjiao10/kasini3000/blob/master/docs/kasini3000_manual.xlsx\r\n\r\n[kasini3000_agent_linux](https://gitee.com/chuanjiao10/kasini3000_agent_linux) Shell script,one click install powershell on linux,modify sshd_config for PsRemote.\r\n\r\n\r\n\r\n\n\n<blockquote><img src=\"https://opengraph.githubassets.com/6ee948b83e31c7b7cf904f65d1f4bca9e8f49949b25cd4bcf4175c3902f21069/kasini3000/kasini3000\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/kasini3000/kasini3000\">GitHub - kasini3000/kasini3000: automation operation and maintenance tool for script.Similar to Puppet, SaltStack, Ansible, pipeline. Specifically developed for the shortcomings of ansible.</a></strong></div><div>automation operation and maintenance tool for script.Similar to Puppet, SaltStack, Ansible, pipeline. Specifically developed for the shortcomings of ansible. - GitHub - kasini3000/kasini3000: autom...</div></blockquote>\n<blockquote><img src=\"https://gitee.com/static/images/logo_themecolor.png\" width=\"48\" align=\"right\"><div>Gitee</div><div><strong><a href=\"http://gitee.com/chuanjiao10/kasini3000/blob/master/docs/kasini3000_manual.xlsx\">docs/kasini3000_manual.xlsx · chuanjiao10/kasini3000 - Gitee</a></strong></div><div>类似于Puppet，Ansible，pipeline。号称比ansible好10倍，具有批量远程推送脚本，执行脚本，远程传递代码块，定时执行的，devops运维工具。</div></blockquote>",
    "created_at": "2022-06-05T03:41:46Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17482#issuecomment-1146735259",
    "id": 1146735259,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17482",
    "node_id": "IC_kwDOAvT7bc5EWcqb",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1146735259/reactions"
    },
    "updated_at": "2022-06-05T03:41:50Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1146735259",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/65390418?v=4",
      "events_url": "https://api.github.com/users/kasini3000/events{/privacy}",
      "followers_url": "https://api.github.com/users/kasini3000/followers",
      "following_url": "https://api.github.com/users/kasini3000/following{/other_user}",
      "gists_url": "https://api.github.com/users/kasini3000/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/kasini3000",
      "id": 65390418,
      "login": "kasini3000",
      "node_id": "MDQ6VXNlcjY1MzkwNDE4",
      "organizations_url": "https://api.github.com/users/kasini3000/orgs",
      "received_events_url": "https://api.github.com/users/kasini3000/received_events",
      "repos_url": "https://api.github.com/users/kasini3000/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/kasini3000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kasini3000/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/kasini3000"
    }
  },
  {
    "author_association": "NONE",
    "body": "@kasini3000 I'm sorry but I don't understand how your suggestion helps to fulfil this request\r\n\r\nReceive-Job doesn't send seem to stdout from the job through the pipeline, it seems to flush the current stdout in the job through a different method when it is called. I think #5848 and #9585 talks about this\r\n\r\nIf I use *>&1 then I don't believe there is any way to then remove the verbose as it is all sent to the success stream, so cannot fulfil the requirement\r\n\r\nPlease provide a working example if you think it can",
    "created_at": "2022-06-05T20:52:11Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17482#issuecomment-1146881494",
    "id": 1146881494,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17482",
    "node_id": "IC_kwDOAvT7bc5EXAXW",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1146881494/reactions"
    },
    "updated_at": "2022-06-05T20:52:11Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1146881494",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/13693159?v=4",
      "events_url": "https://api.github.com/users/o-o00o-o/events{/privacy}",
      "followers_url": "https://api.github.com/users/o-o00o-o/followers",
      "following_url": "https://api.github.com/users/o-o00o-o/following{/other_user}",
      "gists_url": "https://api.github.com/users/o-o00o-o/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/o-o00o-o",
      "id": 13693159,
      "login": "o-o00o-o",
      "node_id": "MDQ6VXNlcjEzNjkzMTU5",
      "organizations_url": "https://api.github.com/users/o-o00o-o/orgs",
      "received_events_url": "https://api.github.com/users/o-o00o-o/received_events",
      "repos_url": "https://api.github.com/users/o-o00o-o/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/o-o00o-o/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/o-o00o-o/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/o-o00o-o"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> If I use *>&1 then I don't believe there is any way to then remove the verbose as it is all sent to the success stream, so cannot fulfil the requirement\r\n\r\nIt's sent to the output stream as a `VerboseRecord` so you could have a function llike this:\r\n\r\n```powershell\r\nfunction Tee-OutputOnly {\r\n    [CmdletBinding(PositionalBinding = $false)]\r\n    param(\r\n        [Parameter(ValueFromPipeline)]\r\n        [psobject] $InputObject,\r\n\r\n        [Parameter(Position = 0)]\r\n        [string] $FilePath,\r\n\r\n        [Parameter()]\r\n        [switch] $Append\r\n    )\r\n    begin {\r\n        $filePipe = { Out-File @PSBoundParameters }.GetSteppablePipeline($MyInvocation.CommandOrigin)\r\n        $filePipe.Begin($PSCmdlet)\r\n    }\r\n    process {\r\n        if ($InputObject -is [System.Management.Automation.VerboseRecord]) {\r\n            $filePipe.Process(\"VERBOSE: $PSItem\")\r\n            Write-Verbose $InputObject.Message\r\n            return\r\n        }\r\n\r\n        if ($InputObject -is [System.Management.Automation.WarningRecord]) {\r\n            $filePipe.Process(\"WARNING: $PSItem\")\r\n            Write-Verbose $InputObject.Message\r\n            return\r\n        }\r\n\r\n        $filePipe.Process($PSItem)\r\n        if ($InputObject -is [System.Management.Automation.ErrorRecord]) {\r\n            $PSCmdlet.WriteError($InputObject)\r\n            return\r\n        }\r\n\r\n        if ($InputObject -is [System.Management.Automation.InformationRecord]) {\r\n            $PSCmdlet.WriteInformation($InputObject)\r\n            return\r\n        }\r\n\r\n        return $InputObject\r\n    }\r\n    end {\r\n        $filePipe.End()\r\n    }\r\n}\r\n```\r\n\r\nAnd log like this:\r\n\r\n```powershell\r\n& {\r\n    $VerbosePreference = 'Continue'\r\n    $InformationPreference = 'Continue'\r\n    Code\r\n    To\r\n    Log\r\n    Here\r\n} *>&1 | Tee-OutputOnly -FilePath ./some.log -Append\r\n```\r\n\r\nNot weighing in on whether a change is warranted here, just providing a workaround.",
    "created_at": "2022-06-06T16:45:03Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17482#issuecomment-1147656983",
    "id": 1147656983,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17482",
    "node_id": "IC_kwDOAvT7bc5EZ9sX",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1147656983/reactions"
    },
    "updated_at": "2022-06-06T16:45:37Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1147656983",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "NONE",
    "body": "@SeeminglyScience Thanks for the illustrated suggestion. I wasn't aware of the internal pipe behaviour here. I will experiment with that.\r\n\r\nI suppose that this necessitates some kind of wrapper function/script to save having to decorate every line of each function with this pipe to Tee-OutputOnly or is there a more elegant way of solving that? I guessed that the Transcript method would have the advantage of not needing this wrapper",
    "created_at": "2022-06-06T17:02:34Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17482#issuecomment-1147672560",
    "id": 1147672560,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17482",
    "node_id": "IC_kwDOAvT7bc5EaBfw",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1147672560/reactions"
    },
    "updated_at": "2022-06-06T17:03:03Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1147672560",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/13693159?v=4",
      "events_url": "https://api.github.com/users/o-o00o-o/events{/privacy}",
      "followers_url": "https://api.github.com/users/o-o00o-o/followers",
      "following_url": "https://api.github.com/users/o-o00o-o/following{/other_user}",
      "gists_url": "https://api.github.com/users/o-o00o-o/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/o-o00o-o",
      "id": 13693159,
      "login": "o-o00o-o",
      "node_id": "MDQ6VXNlcjEzNjkzMTU5",
      "organizations_url": "https://api.github.com/users/o-o00o-o/orgs",
      "received_events_url": "https://api.github.com/users/o-o00o-o/received_events",
      "repos_url": "https://api.github.com/users/o-o00o-o/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/o-o00o-o/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/o-o00o-o/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/o-o00o-o"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> I suppose that this necessitates some kind of wrapper function/script to save having to decorate every line of each function with this pipe to Tee-OutputOnly or is there a more elegant way of solving that? I guessed that the Transcript method would have the advantage of not needing this wrapper\r\n\r\nI probably should have commented there, but that's very explicitly only a problem with verbose and warning. The manner in which they're written to the screen isn't controlled by formatting like everything else, but instead based on an internal property on the `PSObject` wrapping it. Everything else will be written as it's typically formatted, just those two records need a little bit of help.",
    "created_at": "2022-06-06T17:16:11Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17482#issuecomment-1147686373",
    "id": 1147686373,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17482",
    "node_id": "IC_kwDOAvT7bc5EaE3l",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1147686373/reactions"
    },
    "updated_at": "2022-06-06T17:16:11Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1147686373",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "NONE",
    "body": "After briefly testing it, I don't believe that it works with Receive-Job. It seems that Receive-Job doesn't pass output through the pipeline, for some reason it bypasses it and flushes outputs directly to stdout not via the pipeline. Showing with just Tee-Object\r\n\r\n``` powershell\r\n$myjob = Start-Job {Write-Host 'blah'; Write-Verbose 'blah verby'; Write-Warning 'im warning you'}\r\n$logpath = 'blah.txt'\r\nReceive-Job $myjob | Tee-Object -filePath $logPath\r\n```\r\n\r\n$logPath file doesn't exist\r\n\r\nbut if I run\r\n\r\n``` powershell\r\n'blah' | Tee-Object -filePath $logPath\r\n```\r\n\r\nThen $logPath contains ```blah``` as expected\r\n\r\nI think the same thing is discussed [here](https://stackoverflow.com/a/11991815/7815011) - and this is where I got the idea of extending Start-Transcript as that was the preferred solution there after a number of different approaches",
    "created_at": "2022-06-06T21:37:15Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17482#issuecomment-1147957596",
    "id": 1147957596,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17482",
    "node_id": "IC_kwDOAvT7bc5EbHFc",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1147957596/reactions"
    },
    "updated_at": "2022-06-06T21:37:49Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1147957596",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/13693159?v=4",
      "events_url": "https://api.github.com/users/o-o00o-o/events{/privacy}",
      "followers_url": "https://api.github.com/users/o-o00o-o/followers",
      "following_url": "https://api.github.com/users/o-o00o-o/following{/other_user}",
      "gists_url": "https://api.github.com/users/o-o00o-o/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/o-o00o-o",
      "id": 13693159,
      "login": "o-o00o-o",
      "node_id": "MDQ6VXNlcjEzNjkzMTU5",
      "organizations_url": "https://api.github.com/users/o-o00o-o/orgs",
      "received_events_url": "https://api.github.com/users/o-o00o-o/received_events",
      "repos_url": "https://api.github.com/users/o-o00o-o/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/o-o00o-o/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/o-o00o-o/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/o-o00o-o"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@o-o00o-o you still need the merging redirection, so `Receive-Job $myJob *>&1 | Tee-Object etc`",
    "created_at": "2022-06-06T21:56:54Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17482#issuecomment-1147973526",
    "id": 1147973526,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17482",
    "node_id": "IC_kwDOAvT7bc5EbK-W",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1147973526/reactions"
    },
    "updated_at": "2022-06-06T21:56:54Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1147973526",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "NONE",
    "body": "Thanks but sorry I still can't get it to work. \r\n\r\nI only get the Write-Host into the file using the Tee-OutputOnly and still everything written to the screen. I corrected a typo but otherwise it is the function you posted\r\n\r\nWhat am I missing? Full example\r\n\r\n``` powershell\r\nfunction Tee-OutputOnly {\r\n     [CmdletBinding(PositionalBinding = $false)]\r\n     param(\r\n         [Parameter(ValueFromPipeline)]\r\n         [psobject] $InputObject,\r\n\r\n         [Parameter(Position = 0)]\r\n         [string] $FilePath,\r\n\r\n         [Parameter()]\r\n         [switch] $Append\r\n     )\r\n     begin {\r\n         $filePipe = { Out-File @PSBoundParameters }.GetSteppablePipeline($MyInvocation.CommandOrigin)\r\n         $filePipe.Begin($PSCmdlet)\r\n     }\r\n     process {\r\n         if ($InputObject -is [System.Management.Automation.VerboseRecord]) {\r\n             $filePipe.Process(\"VERBOSE: $PSItem\")\r\n             Write-Verbose $InputObject.Message\r\n             return\r\n         }\r\n\r\n         if ($InputObject -is [System.Management.Automation.WarningRecord]) {\r\n             $filePipe.Process(\"WARNING: $PSItem\")\r\n             Write-Warning $InputObject.Message\r\n             return\r\n         }\r\n\r\n         $filePipe.Process($PSItem)\r\n         if ($InputObject -is [System.Management.Automation.ErrorRecord]) {\r\n             $PSCmdlet.WriteError($InputObject)\r\n             return\r\n         }\r\n\r\n         if ($InputObject -is [System.Management.Automation.InformationRecord]) {\r\n             $PSCmdlet.WriteInformation($InputObject)\r\n             return\r\n         }\r\n\r\n         return $InputObject\r\n     }\r\n     end {\r\n         $filePipe.End()\r\n     }\r\n }\r\n \r\n$myjob = Start-Job {\r\n    Write-Host 'blah'\r\n    Write-Verbose 'blah verby' -verbose\r\n    Write-Warning 'im warning you'\r\n}\r\n$logpath = 'blah.txt'\r\n```\r\n\r\nthen run\r\n``` powershell\r\nReceive-Job $myjob *>&1 | Tee-OutputOnly -FilePath $logpath\r\n```\r\nscreen has\r\n\r\n```\r\nblah\r\nVERBOSE: blah verby\r\nWARNING: im warning you\r\n```\r\n\r\nbut file has just \r\n\r\n```\r\nblah\r\n```\r\n\r\nI may be missing something in the script but I would want everything written to the file but everything but verbose sent to the screen",
    "created_at": "2022-06-06T22:39:19Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17482#issuecomment-1148004094",
    "id": 1148004094,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17482",
    "node_id": "IC_kwDOAvT7bc5EbSb-",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1148004094/reactions"
    },
    "updated_at": "2022-06-06T22:39:19Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1148004094",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/13693159?v=4",
      "events_url": "https://api.github.com/users/o-o00o-o/events{/privacy}",
      "followers_url": "https://api.github.com/users/o-o00o-o/followers",
      "following_url": "https://api.github.com/users/o-o00o-o/following{/other_user}",
      "gists_url": "https://api.github.com/users/o-o00o-o/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/o-o00o-o",
      "id": 13693159,
      "login": "o-o00o-o",
      "node_id": "MDQ6VXNlcjEzNjkzMTU5",
      "organizations_url": "https://api.github.com/users/o-o00o-o/orgs",
      "received_events_url": "https://api.github.com/users/o-o00o-o/received_events",
      "repos_url": "https://api.github.com/users/o-o00o-o/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/o-o00o-o/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/o-o00o-o/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/o-o00o-o"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Ah yeah that one definitely acts differently. @PaulHigin might have some ideas (specifically is it possible to redirect all streams from `Receive-Job`?)",
    "created_at": "2022-06-07T15:53:57Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17482#issuecomment-1148857136",
    "id": 1148857136,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17482",
    "node_id": "IC_kwDOAvT7bc5Eeisw",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1148857136/reactions"
    },
    "updated_at": "2022-06-07T15:54:34Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1148857136",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I feel an RFC is needed here to fully define what the desired behavior is.  This sounds like an expanded transcription feature.  One concern is inadvertently capturing sensitive data and storing it in easily accessible logs.  So I am including @WG-Security.",
    "created_at": "2022-06-20T17:19:23Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17482#issuecomment-1160685526",
    "id": 1160685526,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17482",
    "node_id": "IC_kwDOAvT7bc5FLqfW",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1160685526/reactions"
    },
    "updated_at": "2022-06-20T17:19:23Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1160685526",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/14019529?v=4",
      "events_url": "https://api.github.com/users/PaulHigin/events{/privacy}",
      "followers_url": "https://api.github.com/users/PaulHigin/followers",
      "following_url": "https://api.github.com/users/PaulHigin/following{/other_user}",
      "gists_url": "https://api.github.com/users/PaulHigin/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/PaulHigin",
      "id": 14019529,
      "login": "PaulHigin",
      "node_id": "MDQ6VXNlcjE0MDE5NTI5",
      "organizations_url": "https://api.github.com/users/PaulHigin/orgs",
      "received_events_url": "https://api.github.com/users/PaulHigin/received_events",
      "repos_url": "https://api.github.com/users/PaulHigin/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/PaulHigin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PaulHigin/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/PaulHigin"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@WG-Security\r\nWorking security group feels this is not a security issue since it only involves existing PowerShell data streams, and the issue appears to be a problem with the Receive-Job cmdlet.",
    "created_at": "2022-07-18T21:11:37Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17482#issuecomment-1188315153",
    "id": 1188315153,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17482",
    "node_id": "IC_kwDOAvT7bc5G1EAR",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1188315153/reactions"
    },
    "updated_at": "2022-07-18T21:11:37Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1188315153",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/14019529?v=4",
      "events_url": "https://api.github.com/users/PaulHigin/events{/privacy}",
      "followers_url": "https://api.github.com/users/PaulHigin/followers",
      "following_url": "https://api.github.com/users/PaulHigin/following{/other_user}",
      "gists_url": "https://api.github.com/users/PaulHigin/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/PaulHigin",
      "id": 14019529,
      "login": "PaulHigin",
      "node_id": "MDQ6VXNlcjE0MDE5NTI5",
      "organizations_url": "https://api.github.com/users/PaulHigin/orgs",
      "received_events_url": "https://api.github.com/users/PaulHigin/received_events",
      "repos_url": "https://api.github.com/users/PaulHigin/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/PaulHigin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PaulHigin/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/PaulHigin"
    }
  }
]
